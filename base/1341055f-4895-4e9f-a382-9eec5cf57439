{
    "title": "Elements Pt. 03",
    "pages": [
        "Chapter Fifteen\n\nAngie hadn't expected her filing of a complaint with OSHA to be expedited, but she now realized that she should have. Her contact within the agency, Scott Mosier, had listened to her verbal description of events, and then set her in front of a computer so that she could document everything while he went to locate a caseworker to handle her case personally.\n\nCreating the documented complaint allowed Angie the opportunity to elaborate in more detail, both about the seriousness of the toxic environmental incidents, but also about her background and experience, which made her better qualified to lead the investigation. She listed the limited background information that she had on Celia Davis, omitting the fluff associated with her reported accomplishments, since none of those were relevant to the case.\n\nShe had finished the online complaint and reviewed it five times before Scott Mosier returned. \"I have someone for you to speak with regarding your complaint,\" he said. \"Want to follow me?\"\n\nAngie smiled and followed Scott out of his office. They walked down the hallway and turned right. Angie could see a glass-walled conference room with two men already seated at the table. Scott opened the door for her but didn't follow her into the room. He closed the door behind her.\n\nThe older of the two men at the table smiled at Angie and said, \"Good afternoon, Ms. Stone. Please have a seat.\"\n\nAngie took a seat across the table from the two men. The younger man spoke, \"Hi. My name is Joseph Reid, and my associate is James Brandt. We have been reviewing the complaint that you have filed under the Toxic Substance Control Act, and would like to discuss it with you in greater detail. Are you okay with that?\"\n\n\"Of course. I will do anything I can do to assist with resolving my complaint.\"\n\nJames Brandt spoke, \"Until this morning, you held a public trust position in a special access program. That makes the details within your complaint potentially sensitive compartmentalized information. You understand that, correct?\"\n\nAngie hesitated before answering, \"Yes.\"\n\nJoseph Reid said, \"And you understand that by filing this complaint, you are risking prosecution under the Secrets Act of 2022? The federal whistleblower program does not shield you from that.\"\n\nUnderstanding appeared in Angie's eyes. \"You gentlemen are not with OSHA, are you?\"\n\nBobby and Joey both placed their credentials on the table and turned them so that Angie could read them.\n\n\"Department of Homeland Security,\" Angie read.\n\nBobby held up a printed version of Angie's complaint and said, \"This description of events varies drastically from the ones provided to us by the President and his Chief of Staff. Is there anything here that you might want to modify?\"\n\n\"I stand by my position that political favoritism or other factors unrelated to experience and qualifications were used to replace the task force that I headed with the team of nurses and other personnel with no background in environmental investigations. That point cannot be argued, by the President or anyone else.\"\n\nBobby chuckled and said, \"Well, apparently the point not only could be argued, but it was. Successfully. Did it ever occur to you that you don't know what you don't know?\"\n\n\"Did it ever occur to you,\" Angie countered, \"that I may know more than you think I know?\"\n\n\"If so, it isn't obvious from the content of your complaint,\" Joey said. \"For example, on what basis do you believe that Commander Davis is unqualified to lead the investigation?\"\n\n\"She has no experience,\" Angie said.\n\n\"Experience with environmental incidents,\" Joey asked, \"or experience with leading investigations?\"\n\n\"I question both, but definitely with environmental incidents.\"\n\nBobby asked, \"So, maybe you could list for us the ideal qualifications for the person who should lead this investigation in their order of importance. I assume that you would place experience with environmental incidents at the top?\"\n\n\"Of course. Lacking knowledge of the subject being investigated is a failure waiting to happen.\"\n\nBobby asked, \"You would place practical experience ahead of theoretical knowledge, I take it?\"\n\nAngie smiled and said, \"Every day of the week, and twice on Sunday.\"\n\nBobby nodded and studied the papers in front of him for a few seconds before asking, \"Ms. Stone, what kind of car do you drive?\"\n\nConfused, Angie answered, \"A Honda Civic. Why?\"\n\n\"Have seen the movie, 'Smokie and the Bandit'?\" Bobby asked.\n\n\"Years ago,\" Angie admitted. \"Again, why?\"\n\nBobby continued, \"The car that Bandit drove in that movie was a 1977 Pontiac Firebird Trans Am. Do you remember it? Can you picture it in your mind?\"\n\n\"I suppose...\"\n\n\"You've never driven a 1977 Pontiac Firebird Trans Am, have you, Ms. Stone?\"\n\n\"No, I haven't. What is your point?\"\n\n\"My point is that you have no practical experience with a 1977 Pontiac Firebird Trans Am. Am I correct?\"\n\n\"So what?\"\n\nBobby grinned at Joey, who picked up where his Uncle had left off, \"So, Ms. Stone, if I handed you the keys to a 1977 Pontiac Firebird Trans Am, parked in the lot outside, and you put them in the ignition, then turned it and nothing happened, would you go walking around the car looking for flat tires?\"\n\n\"Of course not...\"\n\n\"Why not?\" asked Joey.\n\nAngie was shaking her head at these idiotic questions, \"Because I know that the tires have nothing to do with whether or not the ignition on the car works properly.\"\n\n\"How could you possibly know that?\" Joey asked. \"You have admitted to us that you have no practical experience on a 1977 Pontiac Firebird Trans Am, so how could you know how it works?\"\n\n\"Because it is a car, and I know how cars work,\" Angie snapped.\n\nJoey smiled and said, \"So, because you know the theory of how cars operate, you can make decisions about something that you have no practical experience with, correct?\"\n\nAngie realized the corner that she had painted herself into and said, \"Yes, but that's not the same...\"\n\n\"Oh, but it is, Ms. Stone\", Joey said. \"This is an investigation, so the top qualification obvious to everyone but you is for the leader of the investigation to have the most solid understanding of investigative theory. By your own standards, the fact that Commander Davis has far more practical and theoretical experience with a multitude of critical investigations should convince you that she is more qualified to lead this investigation than you are. Answer me this, before you were appointed to lead the task force, what was your role at the EPA?\"\n\n\"I was Director of the Office of Continuous Improvement,\" Angie stated proudly.\n\nBobby asked, \"You have a bachelor's degree in Business Finance, correct?\"\n\n\"Yes.\"\n\nJoey asked, \"Before being assigned to head the task force, what investigative experience did you have?\"\n\n\"I led several investigations into procurement discrepancies, personnel issues, and whistleblower complaints,\" Angie told them.\n\n\"Have you ever investigated any environmental incidents before?\" Bobby asked.\n\n\"No, not directly,\" Angie admitted. \"But neither has this Commander Davis.\"\n\n\"Are you a scientist?\" asked Joey.\n\n\"You know that I am not.\"\n\n\"Do you feel that you are qualified to interpret and analyze scientific data then make decisions based upon the findings?\" asked Bobby.\n\n\"No, but others on the task force could do that,\" Angie explained.\n\n\"If others on the task force were to make the decisions,\" asked Bobby, \"why would they need you?\"\n\nAngie said, \"A good leader surrounds themselves with people having skills to accomplish the objectives and then works to give them the resources required to do their jobs. I did that\"\n\n\"Did you?\" asked Joey. \"Did you find your team the resources they required to get geological surveys performed at all of the incident sites?\"\n\n\"Every identified site was scheduled for a geological survey,\" Angie argued.\n\n\"Scheduled for when?\" asked Joey. \"Our understanding is that the US Geological Survey would not be able to get to all of the identified sites for more than seven months.\"\n\nAngie said, \"My team deemed that acceptable, based upon the particular incidents being contained and controlled.\"\n\n\"Had your team identified the cause for the contamination at any of the sites?\" asked Bobby. \"How would you know if the geological surveys that were delayed didn't hold the evidence you required to solve the riddle at all the sites? It sounds to me like you were more focused on your stated area of expertise, 'continuous improvement' and efficiency than you were on leading a successful investigation.\"\n\n\"It's easy to second guess and play the Monday morning quarterback, but no one could have done better,\" Angie snarled.\n\n\"Someone already has,\" countered Joey, \"which is why your complaint holds no merit.\"\n\n\"Fine,\" Angie said. \"Dismiss my complaint and I'll take my evidence to the press...\"\n\n\"Finally,\" Bobby said.\n\nAngie stared at him and said, \"Finally what?\"\n\n\"You finally gave us what we needed,\" Joey told her as he stood and began walking around the table.\n\nBobby explained, \"Threatening to divulge compartmentalized sensitive information to the press gives us grounds to hold in federal custody until you are deemed to no longer be a threat or the information you hold is determined by the President no longer of a sensitive nature. Please stand and place your hands behind your back.\"\n\n\"Wait! I was just frustrated,\" Angie said. \"I wouldn't really discuss the environmental incidents or the investigation with the press.\"\n\nJoey pulled Angie to her feet, pulled her hands behind her back, and placed handcuffs around both her wrists. Then he said, \"Sorry, Ms. Stone, but you have demonstrated by your actions to the President, and to us that you cannot be trusted. My sister has an important job to do and she doesn't need to be distracted with concerns over what you will or won't do.\"\n\n\"What in the hell would your sister have to do with any of this?\" Angie snarled. \"I hadn't met you before today, so how could I know your sister?\"\n\nBobby stood in front of Angie and said, \"You met his sister this morning. Lieutenant Commander Celia Patricia Reid-Davis is also my niece, not to mention the person that the President personally selected over you. You picked the wrong lady to demonstrate disrespect to and the wrong time to do it.\"\n\nTo Joey, he said, \"I'm heading over to the Army Corp of Engineers headquarters now. I'll pick you up at the United States Marshal's headquarters when I'm done. We should be wheels up at Andrews by three o'clock.\"\n\nTurning back to Angie, Bobby asked, \"Ms. Stone, you will be transported by U.S. Marshals to the Federal Detention Center in Philadelphia under an administrative hold by the Department of Homeland Security. You will not be able to have contact with anyone before or during your detention. If there is anyone that you would like to be notified, please provide the relevant information to Joey before he turns you over to the Marshals. Goodbye, and good luck.\"\n\n~~~\n\nHuma Sandhu sat alone at the back of the workshop, using her computer to research \"toxic environmental incident\".\n\nThe phrase had come up in almost every conversation that she had been able to surreptitiously overhear today, and she thought finding articles on it would be relevant to her assignment.\n\nUnfortunately, every search for the phrase found only \"acute\" environmental incidents, such as a methamphetamine lab explosion, suicides by asphyxiation in an automobile, or industrial chemical releases. She suspected that there were reports of more secretive incidents, or people wouldn't be practically whispering about them at the symposium, but she did not have access to the various government or university websites where the information could be examined by her.\n\nHuma suspected that the intelligence organizations within her country might have the ability to penetrate some of the secure websites, so she sent an e-mail to General Narula, inquiring if such searches could be initiated if she provided phrases and keywords. She suggested that if possible, they could start with the phrase that she had been already been searching on.\n\n\"Good afternoon,\" a man said. \"It is nice to see someone from my home country taking an interest in the environment.\"\n\nHuma glanced away from her computer screen and saw a middle-aged man who she recognized as a Khalsa Amritdhari Sikh. He had only one of the five 'Ks' visible, that being the steel bracelet called a Kara. The Kirpan, a small dagger, obviously would not be allowed past the metal detectors at the entrances to the convention center. The wooden comb, known as the Kanga, was likely holding his uncut hair, or Kesh, in place under his turban, and his wife would be the only woman to verify that he was wearing the tied cotton underwear, called Kachera.\n\n\"Good afternoon,\" Huma said with a smile. \"I wasn't aware that anyone else from India was attending the symposium.\"\n\n\"Alas, I am here representing my new home country, Canada. My name is Manmohan Singh. I am the assistant deputy director of research at Environment Canada. May I join you?\"\n\nHuma lowered the display on her laptop and said, \"Yes, please. My name is Huma Sandhu, and I am here representing India's Ministry of Environment, Forest and Climate Change. It is my first time in attendance.\"\n\n\"Then I would like to welcome you,\" Singh said. \"How are you enjoying things so far?\"\n\nHuma looked around the room at the other workshop participants and said, \"To be honest with you, I am disappointed. I had expected there to be more lively interaction with my peers, more opportunities for me to learn from people who have been working on environmental policies and issues for years...\"\n\n\"And I take it you have not experienced that yet?\"\n\n\"No, in fact quite to the contrary, everyone seems almost suspicious of the other attendees, like there are secrets that no one wants to be revealed.\"\n\n\"Yes, I can see where someone attending for their first time might get that impression. The truth is, Huma, that there are secrets here this year that many of us are not at liberty to share. You have a secret yourself, don't you?\"\n\n\"I don't know what you mean...\"\n\nSingh glanced around to ensure that they were not being listened to and said, \"Lake Dhebar?\"\n\nHuma's surprised expression answered the question for her. She recovered quickly and asked, \"What about Lake Dhebar?\"\n\n\"The source of the cadmium has yet to be identified,\" Singh stated. \"Most other countries with similar incidents are facing the same challenge. Even when the source has been identified, the cause remains a mystery.\"\n\n\"So there have been other instances of cadmium poisonings around the world?\" Huma asked.\n\nSingh brought a finger to his lips indicating that Huma should remain silent. \"Secrets,\" he said.\n\nThen he continued, \"In every instance, the politicians have insisted on throwing a cloak of secrecy over what has happened in their country, and mostly for good reasons. A panicked public benefits no one, and that is likely what would occur if an event like Lake Dhebar became known and you couldn't explain either the cause or the steps taken to remediate the situation. India has had one terrible incident, but there are many countries, including my own that have experienced multiple ones.\"\n\n\"But if we were able to share the data, we might be able to help one another,\" Huma stated.\n\n\"I agree, but would your leaders allow you to divulge the details on the Lake Dhebar incident with your peers so that we could all analyze it together, along with data from other incidents to identify commonalities and differences that might benefit all of us?\"\n\nHuma sat up straighter and said, \"I am willing to ask. Would your government allow you to share?\"\n\nSingh nodded and said, \"I believe they would. However, there are a lot of governments who won't play the 'I'll show you mine if you show me yours' game, including the United States, Russia, and China. We might end up with only a few players, which would limit the data significantly. It's worth a try.\"\n\n\"Perhaps we could lead by example,\" Huma said.\n\nSingh thought that was a very Pollyannaish attitude, but considering Huma's age, it was not a surprise.\n\n\"I will mention our idea to a few colleagues,\" Singh told her. \"Perhaps we can meet during lunch tomorrow to gauge the potential.\"\n\n\"I will send a message to my leaders tonight,\" Huma assured him. \"Hopefully, I will have an affirmative response by lunchtime tomorrow.\"\n\n~~~\n\nCile led Ginger through the entry of her hotel room and saw Toby sitting at the dining table with Didi.\n\n\"How was practice?\" Toby asked with a lecherous smile directed at his wife.\n\n\"You'll have to ask Ginger or Lacey,\" Cile said with her own flirtatious smile in return. \"I had fun though. Maybe you and I should get involved with one of the beach volleyball clubs in Newport Beach? The pick-up matches are too sporadic. The practice made me consider getting into a more consistent program of some type.\"\n\nBefore Toby could reply, Ginger said, \"The practice was phenomenal! Cile's advice and coaching of the girls have created a brand new team. Lacey is excited about how her strategy for the tournament is going to change for the better because of what Cile taught the girls.\"\n\nShe turned to Cile and said, \"I'm glad that you're going to be on the bench tomorrow instead of me. Lacey is going to drive you crazy with questions, so be prepared. I'm going to change now and head over to the hotel to meet Carson. Thanks so much for everything, Cile.\"\n\n\"It was my pleasure,\" Cile said. \"There's only a couple of hours before everyone is supposed to meet again downstairs. Are you sure that you don't want to just hang out here until then?\"\n\n\"Thanks, but even though I didn't get as much sand on me as you and the girls did, I still would like to take a shower to rinse off. Plus, Carson hinted at having a drink in the hotel bar before we come back where he can tell me about the first day of the symposium. Let me just grab my stuff and I'll get out of your hair.\"\n\nGinger hurried into the bedroom and returned with the small bag that held all of her clothes and other belongings.\n\nShe asked, \"How are the wedding plans coming along?\"\n\n\"Everything is ready,\" Didi said. \"The hotel was able to recommend a local minister, who Toby contacted and reached an agreement with. As long as the license arrives tomorrow morning as expected, and the weather cooperates, Jules and I will be married outside on the beach at 7 PM tomorrow. We're hoping that you and Carson will be able to attend, and then join us for dinner afterward. Please ask Lacey to join us as well.\"\n\n\"Can she bring a guest?\" Ginger asked. She knew that Lacey and Huma were becoming a couple, even if it was only for this week.\n\n\"Of course,\" Didi said, \"but no gifts please.\"\n\nGinger headed for the door as she said, \"I'll be sure to let her know. I think you can plan on her being there. See you guys later.\"\n\n\"Didi,\" Cile asked, \"can you check with Jules to see if he expects to be back here to the hotel early enough that you and him could join Toby and me for drinks before our meeting? There is something that I want to discuss among just the four of us.\"\n\nDidi rose and said, \"Dinner is at seven in the meeting room, correct? Would you like us to meet you in the bar around six?\"\n\nCile said, \"Six is fine, but let's meet for drinks her in our room if that's okay with you. We can sit out on the balcony and chat.\"\n\n\"That sounds like something I would like,\" Didi said. \"We'll see you at six.\"\n\nToby helped Didi gather up the shopping bags that she had brought with her and then held the door open for her to exit the room. Cile was removing the band holding her hair in the ponytail when he turned back around.\n\n\"Mrs. Davis, you look good enough to eat.\"",
        "\"I could use a little snack myself, Mr. Davis. However, I think that we should partake in the shower. If we're going to entertaining Didi and Jules here in a couple of hours, the room shouldn't look and smell like a bordello.\"\n\n\"We could always close the door to the bedroom while they are here,\" Jules offered.\n\n\"You have an answer for everything, Cutie.\" Cile raised both arms over her head, a clear indication to Toby that she wanted him to pull off her top. \"But, let's still start in the shower.\"\n\n~~~\n\n\"I've had Margaritas before,\" Jules said, \"but this tastes different.\"\n\nCile nodded as she set the pitcher of Margaritas on the table and took a seat across from Didi. She asked Jules, \"Do you like it?\"\n\n\"Very much! I will need to be careful not to overindulge. What is in them?\"\n\nCile explained, \"The basic ingredients for a classic Margarita are tequila, lime juice, and triple sec, and of course the quality of each ingredient influences the taste. Toby's cousin, Tyler, introduced us to the best tequila for Margaritas or any drink, so we always use that. There are pre-made Margarita mixes that combine the lime juice and triple sec so that all you have to do is add tequila, but using fresh lime juice and adding the triple sec separately also makes a difference. These are actually what are called 'Cadillac' Margaritas because adding a bit of Grand Marnier, the orange cognac liqueur makes them taste richer.\"\n\n\"I think I'm going to be asking you for a copy of the recipe,\" Didi said as she saw how much Jules was enjoying his drink. \"They are quite tasty.\"\n\n\"I'll be happy to share it with you,\" Cile said, \"but before we get too deep into the pitcher, there is something that Toby and I wanted to discuss with the two of you.\"\n\nJules placed his arm around Didi's should and said, \"Go right ahead.\"\n\nToby started, \"We trust that you both know how special Cile and I think you are. You have become important people in our lives in a very short time.\"\n\n\"We feel the same way,\" Didi said. \"We are honored to consider you our friends.\"\n\nCile smiled at Didi and said, \"We are the ones who are honored. But on the subject of friendship, we wanted to offer you a suggestion for after this week is over and we all are scheduled to depart Myrtle Beach.\"\n\nJules nodded and said, \"I think that Didi and I have been so focused on getting married and taking the necessary steps to remain in America that we hadn't given much thought to our reservation here ending. I suppose I could extend it, or we could move on...\"\n\n\"If you are committed to remaining in the United States,\" Cile said, \"which we believe you are, then we would like to invite you to return to Southern California with us.\"\n\nJules and Didi glanced at each other before Didi said, \"Are you inviting us to move in with you and Toby?\"\n\nToby chuckled and said, \"Close, but no. Our extended family owns the condominium that Cile and I live in, as well as the vacant one next door. We are inviting you to use that condo as you navigate the immigration process and make further decisions on what you want to do.\"\n\nCile added, \"It would provide you with a stable residence close to us. The benefits of that are numerous, but we believe that having me and Toby close by to help you adjust to your new life would be near to the top of the list. The biggest benefit for me would be having Jules' expertise available for the investigation. It will still be open by the time we have to return home.\"\n\nDidi and Jules shared a long look before Jules said, \"We will want to discuss it further, but on the surface, your suggestion makes practical sense to us. I would insist on paying rent for the time that we are there...\"\n\n\"No,\" Cile said. \"There would be a lease with your names on it, but the family would not accept payment. You will need to set up and pay for the utilities, but that is only because having the lease and the utilities in your name are what would establish your residency with most government agencies. You don't want to go through the immigration process appearing to be transients living in one hotel or another.\"\n\n\"Can you tell us more about the area?\" Didi asked. \"I'm sure the area is nice if it is where you both live, but...\"\n\nCile knew that Didi's concern was related to whether or not she and Jules would be accepted as a married couple without discrimination or any other cultural challenges.\n\n\"Believe me, you will feel very comfortable and extremely welcomed there or we wouldn't be making the suggestion,\" Cile assured her as she found the photo of JR and Rockie on her cell phone again the turned it for Didi to see. \"In fact, this couple met when she was living in what is now our condo, and he was living in the one we are offering to you.\"\n\n\"Friends help friends,\" Toby said. \"This will just make it easier for us all to help each other whenever necessary. It doesn't have to be permanent, just long enough for you both to get your feet underneath you as you make the changes in your life that you want to make.\"\n\n\"Toby and I will support you both, whatever you decide,\" Cile assured them. \"But, as Toby said, this arrangement would just make the logistics of that support much easier for everyone.\"\n\nJules looked at Didi again and said, \"Visiting Southern California was on our agenda for this trip.\"\n\nDidi smiled and then turned to Cile, \"Please send me details on your return flights. I will try to get Jules and I booked on the same ones.\"\n\n<br >\n\nChapter Sixteen\n\n\"How was your trip?\" Cile asked once her Uncle had joined the meeting.\n\nThe six team members in the meeting room had ordered dinner from the hotel's room service menu and were currently awaiting the delivery. Once again, Cile had positioned her laptop, and people had taken seats to allow for everyone to be both seen and heard by all the other participants\"\n\n\"Short but productive,\" Bobby informed her. \"The Army Corps of Engineers will be able to have geological surveys completed at all the remaining sites within two weeks. Jules' and Didi's visa classifications have been changed to 'O', so they are free to live and work in the country under the sponsorship of Brandt Consulting. If they stop by Customs and Immigration at the Myrtle Beach airport before leaving town, their passports and visas will be updated for them.\"\n\n\"Great,\" Cile said. \"While we wait for our food to arrive, I want to pass out copies of the geological surveys that have already been completed. The experts in the room can review them and we'll discuss the findings over dinner if that is agreeable to everyone.\"\n\n\"That works for me,\" said Jules. \"I've been anxious all day to review what the surveys say.\"\n\n\"Me too,\" said Carson as he took the first stack of papers and passed the rest over to Ginger. She took a set and passed the rest along to Didi, who positioned them so she and Jules could read them together.\n\nThe three geologists began reading the summaries of the surveys. Jules was the first to comment on them.\n\n\"The substrata is different, and the toxic elements vary, but each summary concludes that the contamination was a result of the element leaching into water, which eventually made its way to a location that exposed humans to it. We need samples of the water.\"\n\n\"What would that tell you?\" asked Bobby.\n\nCarson answered, \"Water will erode the surface and substrata of the Earth, as demonstrated by things such as the Grand Canyon, but water by itself will not cause leaching of elements embedded within ores.\"\n\nHe turned to Jules and said, \"Are you thinking that bioleaching is involved?\"\n\nGinger said, \"It would almost have to be. Based upon the remote locations and the lack of any mining activity to introduce the chemicals required for something like acid mining, some biological factor must be in play here for the leaching to have commenced. There are a couple of locations where hot springs have been the point of contamination, which might support the presence of thermophiles.\"\n\nToby said, \"Maybe someone should explain what bioleaching is so that Cile and her Uncle understand.\"\n\nCile smacked Toby's arm and said, \"I have a friggin doctorate in microbiology. I know what bioleaching is. I can explain it to Uncle Bobby if he needs it.\"\n\n\"He needs it,\" Bobby said with a chuckle.\n\nCile explained, \"What they are saying, is that there is likely something organic in the water that is reacting with the ores containing the toxic element, which is what is causing them to leach out into the water and exposing them into the environment.\"\n\n\"What type of organic material are we talking about?\" Bobby asked.\n\nJules said, \"It would be hard to say until we test the water in each case. Based on the variety of toxic element incidents witnessed thus far, we could be dealing with multiple organic causes.\"\n\n\"All of the surveys found the source of the contaminated water to be underground,\" Ginger said. \"Which of course is how it came into contact with the ores, but it also makes testing it a bit more challenging. We'll need temperature, pH level, current or flow data, and of course microscopic examination to identify any organic presence.\"\n\nTheir dinner orders arrived, so they paused the conversation until everyone was served and the room was once again private.\n\nJules began, \"If we draw from the use of bioleaching in mining operations, the biologic organisms are used only as catalysts. The process requires the introduction of another element or compound that the organism can accelerate the effects of, but they do not create the effect alone. For example, sulfuric acid is used to leach copper out of ore, and archaea have been used to speed up the process.\"\n\nFor the benefit of the confused faces around the table and on the computer screen, Cile explained, \"Single-cell organisms, called prokaryotes, live in nearly all environments on Earth. They are considered to be one of the first life forms to evolve on the planet, and include both bacteria and archaea. Some archaea and bacteria, and in particular archaea, were originally thought to be extremophiles, living only in inhospitable conditions such as extremes of temperature, high or low pH, high salinity, and radiation but they have since been found in all types of habitats. Many archaea grow as plankton in the oceans. Symbiotic prokaryotes live in or on the bodies of other organisms, including humans where they are vital components in our digestive system.\"\n\n\"May I ask a question?\" Didi said.\n\n\"Of course,\" Cile replied.\n\n\"What has changed?\"\n\nCile glanced around at the others, and when they seemed as puzzled as she was, she asked, \"What do you mean?\"\n\n\"You said that these prokaryotes have been around since the beginning of life, so what has changed. Why are they now suddenly contributing to the leaching of toxic elements in the environment?\"\n\n\"That's an excellent question,\" Bobby said, \"and one that is sure to be on the President's tongue as soon as he learns of the theory that biologic organisms might be contributing to these incidents. Any suggestions on how we answer that?\"\n\n\"I think we're jumping ahead a little fast here,\" Cile said. \"We suspect bioleaching based upon the geological surveys and the remote locations of the sites, but until we have more data, we shouldn't draw any conclusions. We need to keep open minds and consider other possibilities as they are presented to us.\"\n\n\"You are absolutely right,\" Jules said. \"However, bioleaching should be investigated while we consider other possibilities. At this time, it remains the most probable cause. Can we request that the waters be tested as soon as possible? That will tell us more than anything else whether bioleaching is the culprit or if we need to look for something else.\"\n\nCile wanted to keep everyone on the team actively considering all potential causes for the incidents, but she herself agreed that bioleaching made the most sense with the data that they had received so far. She said, \"Here's what we can do; a member from my team will be in the respective EPA region office for each of the incidents tomorrow. I will instruct all of them to notify the director of each region's Laboratory Services and Applied Science Division to make the obtaining of water samples from the incident sites their top priority. Please give me a list of exactly what you want to be tested.\"\n\nCarson said, \"Let Ginger, Jules, and I discuss it first. This isn't going to be as simple as dropping a wooden bucket into a well and pulling the water up. Almost all of the factors that we would want to be tested could be influenced by how the water is accessed for the tests. For example, exposure to oxygen from drilling a borehole could affect the water's temperature, acidity, and any organic organisms present. The location within the substrata where the toxic element exists could also be important. We may need to give precise coordinates where the tests will provide us with the best data.\"\n\n\"Would it be better if one or more of you oversaw the tests?\" Bobby asked.\n\n\"Having a geologist present would greatly improve the chances of us getting valid data,\" Carson said.\n\n\"Okay,\" Bobby said, \"Let me suggest this, I can fly to Myrtle Beach tomorrow. I'll then fly Carson and Ginger out to the sites in Montana first. I can pull whatever strings you need to get the equipment and personnel required for the tests that you believe need to be run. You two will oversee the testing to ensure that it meets your expectations. We will then move on to the next site.\"\n\nCarson said, \"I'll have to check with my director...\"\n\n\"No you don't,\" Bobby reminded him. \"You are currently assigned to Brandt Consulting, so what I say goes.\"\n\n\"You're right. Sorry, I forgot the arrangement.\"\n\nGinger said, \"However, I still have the commitment to my friend to help her coach during the tournament. That's a personal commitment that isn't influenced by my working with Brandt Consulting on this.\"\n\n\"I can cover for you,\" Cile said. \"I enjoyed doing it today, so a few more days won't kill me.\"\n\n\"I'm sure that Lacey would have no problem with that,\" Ginger said. \"Thanks.\"\n\nJules said, \"It looks like mine and Didi's honeymoon is going to be as much of a working honeymoon as Toby's and Cile's. I still have the discussion panel that I am participating in tomorrow morning, and then I want to spend more time gathering intelligence about other similar events around the world...\"\n\n\"As long as you're back here by 5 PM,\" Didi said. \"No later than that.\"\n\nToby laughed, \"That's my job as best man. I'll make certain that he is present and prepared to share his vows with you.\"\n\nJules said, \"There's something else you can do, Toby. I'm going to send you some information on the chemical processes that make the various bioleaching processes work. I would like your opinion on commonalities and differences. Like everyone else, I'm puzzled by the diversity of elements that have been involved, so I'm hoping that we can find something shared among all of them.\"\n\n\"There are only four days left,\" Cile said, \"for us to all meet together in this room, and it isn't likely that we will have even the first water test results by then. Toby and I had a discussion earlier today with Jules and Didi about them coming back to Southern California with us when we leave. Ginger already lives there, so that leaves Carson as the only member of this think-tank needing to make a decision.\"\n\nShe turned to Carson and asked, \"Do you want to participate remotely, like Uncle Bobby, or do you want us to find accommodations for you in Southern California while this investigation is ongoing?\"\n\nGinger interrupted, \"Can he let you know tomorrow? Traveling to the sites to oversee the tests will affect how we participate for a while, at least.\"\n\n\"Of course,\" Cile assured them. \"We have the rest of the week before we need to finalize things. However, since at least five of our seven will be in Orange County, we should try to find a location convenient for us to hold our meetings. Uncle Bobby, please check with the General Services Administration for a secure federal facility that we could use for meetings, preferably someplace where we could have access to a lab.\"\n\n\"Would the Chet Holifield Federal Building be an acceptable location?\" Bobby asked. \"Its primary tenant currently is the Department of Homeland Security, so I am reasonably confident that I can pull the strings required to get you set up there with everything we'll need.\"\n\nCile glanced at Ginger and said, \"It's ideal for me, Toby, Jules, and Didi. Is Laguna Niguel okay with you?\"\n\nGinger nodded and said, \"I could live with it. Traffic might be heavy at times between there and Cypress, but if I can find someone to ride with me, I would be able to use the carpool lanes the whole way.\" She nudged Carson's leg under the table as she said this.\n\n\"I'll make the arrangement and communicate them to you by the end of the week,\" Bobby said.\n\nCile said, \"Okay then, here's where we're at...\"\n\nCile summarized all the topics that they had discussed, and who would be performing which tasks. She then turned to Didi and asked, \"Would you have time to assist me with establishing reporting protocols for medical professionals that would allow us to quickly identify any new incidents?\"\n\n\"If you guide me through what it entails,\" Didi said, \"I would be happy to assist you.\"\n\nCile smiled and said, \"I can do that, but it can wait. Focus on your wedding for now. On that note, I think it's time for Toby and me to get back to our honeymoon. We'll see everyone at breakfast.\"\n\n~~~\n\n\"A penny for your thoughts?\" Lacey said.\n\nHuma raised her head from between Lacey's breasts, and said, \"They're probably not worth that much.\"\n\nFew words had been spoken since Lacey and Huma had walked through the door into Huma's hotel room. Their lips had been too preoccupied for speaking. Lacey ran her fingers through Huma's long, dark hair and listened to her breathing as it continued to normalize after their lovemaking.\n\nLacey said, \"You know that you can share anything with me, Lover.\"\n\nPlanting kisses on each of Lacey's breasts, Huma said, \"Some sharing is more enjoyable than others. Sharing our bodies and our passion, for example.\"\n\n\"Yes,\" Lacey moaned, \"that certainly has been enjoyable, but I would hope that there could be more between us.\"\n\nHuma sighed, but she didn't verbalize her thought, \"For me, there already is more.\" Instead, she said, \"I might have a dilemma with my assignment for work. I am supposed to uncover the secrets of others without divulging our secrets in the process. I am struggling to see how I will be able to accomplish that objective.\"\n\nShe explained the idea that a peer at the symposium had mentioned about getting others to agree to share information in an effort for them all to gain greater knowledge, without going into detail about the topic of the information. Huma then told Lacey about the e-mail that she had sent to her superiors requesting permission to join the group of peers and openly share her secrets with them in order to learn their secrets.\n\n\"You fear that there could be negative ramifications for you asking?\" Lacey asked.\n\n\"Somewhat,\" Huma acknowledged, \"but I am more concerned with what I will do if they refuse to allow me to participate. I'm not certain that I would accept their edict. The knowledge is too important for me to ignore the opportunity to gain more of it.\"\n\nLacey continued to run her fingers through Huma's luxurious hair, reveling in the silky stimulation that it generated wherever it touched her naked body.\n\nShe said, \"I can understand the concern that your superiors might have with you participating. While these may be your peers, they are still strangers, and their trustworthiness is a huge unknown. What would you do if you openly shared your knowledge with them, and they didn't reciprocate in kind?\"",
        "\"I have considered that,\" Huma assured her. \"We would agree upon a neutral party to be the person that each of us delivers our knowledge to. He or she would validate the reliability of the information provided by each of us before sharing everything with all of us. My challenge is how to identify someone at the symposium who would have both the knowledge to evaluate the information as reliable, and the integrity to remain impartial and neutral.\"\n\n\"You mentioned that the man that shared this idea with you today worked for Environment Canada,\" Lacey said.\n\n\"That is correct.\"\n\n\"You represent your government,\" Lacey continued, \"and any of the other peers who agree to participate would likely be representing their governments as well, right? So you would need someone not affiliated with or responsible to their own government.\"\n\n\"I cannot see the person being trusted by many of my peers if they were tied to any government or government agency,\" Huma said.\n\n\"Would someone from academia be more acceptable,\" Lacey asked. \"Someone like my friends Ginger Olsen and Tobias Davis? They certainly have the skills required to evaluate the reliability of data on most subjects.\"\n\nHuma rose off Lacey and rolled off the bed, \"I want to send a quick addendum to the message I sent earlier to my superiors. I believe that proposing someone from academia as the impartial third-party might sway their decision.\"\n\nLacey sat up more fully on the bed, leaning against the headboard as she asked, \"Would you like me to pour us some more wine while you do that?\"\n\nHuma opened the drawer to the desk and extracted a small rectangular box. She handed it to Lacey and said, \"I'll bring the wine back when I return to bed. You can put the batteries in the new toy I bought you and get it ready for us to share.\"\n\nLacey smiled and opened the small box revealing the vibrator inside. She thought, \"Oh yes, this I can definitely share.\"\n\n~~~\n\n\"Oh, yes,\" Ginger thought. If she had her way, she and Carson would get a lot less sleep tonight than they did last night.\n\nThe intimacy of sleeping cuddled up next to Carson had been just what they needed last night, but she had been wearing a t-shirt and panties, and he had been wearing his underwear and a t-shirt. Now that she knew how amazing his naked body felt against hers, there would be nothing between them tonight.\n\nSensing that Carson was still hesitant to move things along too fast out of fear of scaring Ginger away, she had taken the initiative. She excused herself to use the bathroom in the lobby of the resort before their walk back to the Sheraton. Returning to Carson waiting for her in the lobby, she pushed something into the front left pocket of his pants before pulling his left arm around her and positioning his hand on her left hip. He would be able to feel the absence of her panties under the light, clingy fabric of her sundress.\n\nConversation between them had been slight when they had walked back to their hotel from the dinner meeting. They hadn't even stopped at Ginger's room on the way up, and as soon as the door to Carson's room had closed, she had been in his arms and kissing him with more passion than she could remember bestowing on a man before.\n\nGinger lay beneath Carson's panting body, and knew that she had been lovingly ravished by a man who cherished her, and she felt the same way about him. Both had done everything possible to rock the world of the other, and Ginger knew that Carson had definitely succeeded with her. She wouldn't quit until she was just as certain of her effect on him.\n\nWhen Carson's softening erection slid out of Ginger's ass, he rolled off of her. She leaned over and kissed him gently on the lips, and said, \"Don't go anywhere.\"\n\nShe rolled off the bed and went into the bathroom. Returning with a warm, wet washcloth, Ginger proceeded to clean Carson thoroughly. She was confident that she could get him aroused again in a little while, so she thought it best to prepare for her pending oral assault now.\n\nTossing the washcloth onto the floor of the bathroom, Ginger crawled back onto the bed and snuggled up next to Carson and lightly fondled the curly hairs on his chest.\n\n\"Can we talk about something?\" Ginger asked.\n\nCarson smiled and asked, \"Pillow talk or something more serious?\"\n\n\"What category do suggestions and ideas fall under?\"\n\n\"I suppose it would depend upon the topic of the suggestions and ideas,\" Carson said.\n\nGinger kissed his lips again and said, \"The topic is us.\"\n\n\"Does it involve any discussions of a sexual nature, because you have drained me so well that I don't know if I can even talk about sex right now.\"\n\nGinger giggled and said, \"I'll give you a few moments to recover before we broach that subject again, but we will broach it again.\"\n\nCarson laughed and said, \"Okay, what about us do you want to talk about?\"\n\n\"I want you and me to explore being a couple. What we just did, twice, was the last piece of the puzzle as far as I am concerned. I believe we are compatible in all ways now, and since we're going to be working so closely together over the next few weeks, and maybe months, we will have an opportunity to see how being exclusive with each other would work for us. I want to light the same fire in your heart that you have lit in mine.\"\n\nCarson considered Ginger's comment. He did have feelings for Ginger; stronger than anyone since his wife, and believed that those feelings would only grow over time. The problem was, what would happen once this investigation was complete and he had to return to Atlanta while Ginger returned to Southern California?\n\nGinger seemed to sense what Carson's silence indicated. She said, \"I know that you have your career, and I have mine. While I like teaching at UCLA, I will tell you now that if the time ever comes for us to make choices in order for us to stay together, I would be willing to choose you. We can make this work, Carson. I know it, and I believe that after a few weeks together, you will know it as well. I can't imagine anything sadder than reflecting back on us sometime in the future and wondering what might have been.\"\n\n\"I've been single and living alone for a long time,\" Carson said. \"Sharing hotel rooms as we travel around to all the different incident sites won't compare to us actually living together.\"\n\n\"We will both adapt and adjust,\" Ginger told him. \"I am not concerned about whether or not you forget to put the toilet seat down or fold towels in half rather than thirds, and I don't think you're concerned about how much of the bathroom counter I take up with my stuff or if I leave my bras hanging over the shower curtain rod. I am concerned about our hearts having the chance to grow together. We've had a great start, and I want us to keep it going.\"\n\n\"Well, since I'm going to be stuck with you for at least the next few weeks, I guess I can give it a try.\"\n\nGinger gasped, but when she saw the glint in his eyes and the smile on his face, she said, \"I don't know if I like your playful, romantic side.\"\n\nCarson pulled her on top of his body and continued, \"I would love for there to be an 'us'. I'll do my best to convince you of that.\"\n\nShe reached between their bodies to check the status between his legs. Wrapping her hand around him, she said \"It'll be hard to prove it.\"\n\n\"Why will it be hard? Don't you trust me?\"\n\nGinger squeezed him in her hand and moved down his body. Just before filling her mouth, she said, \"It will be HARD to prove it.\"\n\n~~~\n\n\"Should I consider it a failure of my feminine wiles that my groom was able to complete his journal article so soon into our honeymoon? I haven't provided him with enough distractions through the performance of my wifely duties?\"\n\nToby laughed, which caused Cile's head to bounce on his bare chest, \"Quite to the contrary,\" he said. \"Anticipation of my Bride's feminine wiles were the impetus for me to finish as soon as I could. Remember, I already had a good start on the article before we left home, Plus, Didi shared something with me today that allowed me to knock out what little I had left in less than an hour.\"\n\nCile raised her head to look at Toby, and said, \"Another woman motivated you to finish your article?\"\n\n\"She didn't motivate me, she enabled me. Didi showed me a website that provides both speech-to-text conversion, but also performs grammar and spell check on the text. I was able to dictate the rest of the article rather than type it myself.\"\n\nCile sat up and stared in amazement at Toby. \"Don't tell me that you used some cloud-based application to capture your spoken word, convert it to text, and then analyze it. Do you know how dangerous that could be?\"\n\nToby stared back at his wife and said, \"Please, give a little credit for having a small degree of intelligence. While there is a cloud-based version on the website, there is also a downloadable version that can be purchased and installed on a personal computer. Rockie had previously walked me through changing the firewall settings on my laptop to prevent unwanted communication back to specific web servers. My speech-to-text conversion, as well as the grammar and spell checks all remained safely on my system.\"\n\n\"How can I help but question your intelligence when you imply in front of friends and family that I would need an explanation on what bioleaching is?\"\n\nHe pointed to the side table and said, \"Please hand me my cell phone.\"\n\n\"Why, who are you going to call?\"\n\n\"I'm not going to call anyone,\" Toby said. \"I'm going to do a search to see if there are any local establishments open at this hour where I might be able to buy my Bride a sense of humor.\"\n\nGiggling, Cile said, \"You nut. I have a great sense of humor. I just don't expect it to be challenged when we are in a professional environment, like a meeting.\"\n\n\"I guess that we viewed the situation differently. I felt more like we were brainstorming among friends than conducting a formal meeting. So if I exhibited any disrespect for your leadership, I apologize.\"\n\n\"No, you're right. I set the tone of the meeting to be just as you described it, friendly and informal. I should expect some teasing and friendly banter being thrown around from time to time.\"\n\n\"I will endeavor to restrain myself.\"\n\n\"Oh, please don't do that. I get such a thrill out of seeing you become more socially open and expressive. I am so very proud of you.\"\n\nToby pulled her back down so that her head was once again resting on his chest. He said, \"All it took was the security of knowing that I am loved by a good woman.\"\n\nCile caressed his face and said, \"I don't know about the 'good' aspect, but this woman certainly loves you. She loves you more than words can describe.\"\n\n\"More than words can describe, huh?\"\n\n\"More than any words that I know can describe,\" Cile assured him.\n\n\"Then I guess it's a good thing that I'm getting so expert at reading your body language.\"\n\nA smile broke across Cile's face as she gently licked his nipple and found his growing erection with her hand. \"Yes, that's very good. Let's see if I can come up with a bedtime story for you to read.\"\n\nCile's cell phone announced a new text message. She positioned herself so that she could reach her phone with one hand to check the message while keeping her other hand around Toby. She read the message from Katie.\n\nKATIE:Sorry I couldn't make your meeting. My dad updated me though. \n\nCILE:It's not a problem. I knew that he would share everything with you.\n\nKATIE:Take your temperature. My Basal body temperature chart indicates that the next two days are my prime ovulation period. Since our cycles have always been close...\n\nCILE: Gotcha. Thanks, and good luck.\n\nKATIE:Good luck to you guys too. Love you.\n\nCILE:Love you too.\n\nCile put her phone back and was pleased to see that the brief distraction hadn't adversely affected the results where Toby's arousal was concerned.\n\n\"Sorry, Cutie. That was Katie with an important reminder for me.\"\n\n\"A reminder about what?\" Toby asked.\n\n\"She wanted to remind me that the timing is about right for me to be ovulating.\"\n\n\"Is that a problem?\" Toby asked as he positioned Cile so that he could return a portion of the pleasure that she was giving him.\n\n\"Not as far as I'm concerned, but we haven't discussed how soon we should start working on a family. Katie and Tyler have started, and I think it would wonderful if our first kids were born close together. Katie agrees.\"\n\n\"You and Katie don't have some sort of contest going to see who becomes pregnant first, do you?\"\n\n\"God, no. We are just supportive and encouraging to one another. If we happen to both be pregnant and deliver our babies around the same time, great. If not, it won't be the end of the world for either of us.\"\n\n\"I told you when we discussed having a family; when we start, and how many kids we have are your decisions to make. It's your body and your career that will be affected the most. I'll support whatever you choose, and I'll be the best husband and father I can be, whatever you decide for us. I'm not avoiding the decisions, I am respecting your right to make them.\"\n\nCile was panting from her arousal as she said, \"I think you should shut up and give me our first baby.\"\n\n~~~\n\nDidi leaned against Jules' shoulder so that she could see the images on his laptop better. They were sitting on the balcony of their hotel room looking through the photos that Cile had e-mailed him.\n\n\"The furniture looks to be good quality,\" she said.\n\n\"Yes it does,\" Jules agreed. \"There is definitely enough space in the condominium for the two of us. Here, let me show you something else.\"\n\nJules opened a website on his browser and entered the address that Cile had provided. A satellite map appeared with the condo complex positioned in the center.\n\n\"This will give us some idea of the surrounding area,\" Jules explained.\n\n\"I can't tell what each structure is,\" Didi said, \"but several along the larger streets appear to be retail stores of one type or another. Cile was correct about being able to walk or bike to many of the places.\"\n\n\"Watch this.\"\n\nJules zoomed out to provide a larger view of the area. The hills nearby had obvious hiking trails, several of which could be followed almost all the way to the Pacific Ocean, which appeared to be only a few miles away.\n\n\"It looks like a diverse area,\" Didi said. \"There is a lot of residences and commerce, but still an abundance of green spaces. There's also that harbor area along the ocean. Are you sure that you wouldn't want to bring your boat over from Richard's Bay?\"\n\n\"I'll hold off selling it for now. I'm glad that Toby and Cile made the offer to basically sponsor our immigration to America, and the idea of being close to people that we know and trust while getting established in a strange area is very reassuring.\"\n\nDidi nodded and said, \"I don't know that I would be feeling as confident in how fast we are moving on things if it weren't for us knowing that Cile and Toby are supportive of our plans. It would a lot scarier for me.\"\n\n\"Your courage and decisiveness have surprised me. I had always hoped that you would realize the future that you and I could have here, and planned this trip to allow you to recognize all that you could be, with or without me in your life. I had fully intended for you to decide by the time this trip was over, but you've done so in less than ten days.\"\n\n\"There was nothing courageous about it,\" Didi said. \"I am still a bit miffed that you would even harbor the thought that I would, or could choose a life that didn't have you in it. But, I realized that we had always maintained a reserved, professional relationship until you told me about this trip and the purpose behind it. I always knew that you loved and cherished me, Jules. I'm just disappointed that you never had the same confidence in my feelings towards you. I promise that I will never allow you to doubt my absolute devotion to you and our future together. Can I ask you something?\"\n\n\"Anything.\"\n\n\"Why have you never asked me if I was on any form of birth control?\"\n\nJules contemplated his answer before saying, \"I suppose because I have dreamed of having a family with you for so long, that taking steps to prevent having children never occurred to me. Are you concerned about becoming pregnant?\"\n\n\"Not any longer. There were times when I had considered taking precautions if we ever had sex, but that was due to my reluctance to bring a child into a society where he or she would face challenges similar to my own. It was never about not wanting to bear a child by you. Unless you feel differently, I see no reason to take precautions going forward.\"\n\n\"You realize that if we have a child while here in the United States that it will automatically become a citizen of this country. That might work to our benefit when we apply to be citizens ourselves. The condominium is more than adequate should our family grow by one or two while we are living there, and if we need more space, we can buy a bigger place of our own.\"\n\nDidi kissed Jules and said, \"So we will take no steps to prevent me from becoming pregnant and let things take their natural course.\"\n\n\"From a biological perspective, I can support that strategy. However, after tomorrow, we need to start taking additional steps to ensure that you and any future children are financially secure should anything happen to me. You have been the only beneficiary on both my will and my life insurance for years, so all that may be required is to change your last name on the documents.\"\n\nThey had never discussed the provisions that Jules had put in place several years ago to protect Didi should anything ever happen to him. She had become aware of them when he had asked her to scan his last will and testament before filing the original in his safe. He could have scanned the pages himself, or had his lawyer's office do it, so she knew that his intention was for her to learn of the contents.\n\n\"You seem pretty confident that I am going to choose to take your last name,\" Didi teased.\n\n\"'Klienhans' is a spelling bee elimination name. I am confident that any sane woman with that last name would choose to change it to 'Cabot' just as soon as she could.\"\n\n\"Touch\u00e9.\"\n\nJules continued, \"By the end of this week, we will have accounts set up at a bank that Sean Wallace has recommended, which will establish us with a U.S. based institution. The existing 'transfer on death' provisions naming you will not be required if you apply for the accounts with me so that we are completely equal on them and you have the right of survivorship. I can then initiate all of the transfers online. We will get new credit cards for both of us through this bank and be able to access the funds from any ATM in the world.\"\n\nDidi reached forward and closed Jules' laptop. Standing, she took his hand and coaxed him to rise beside her. \"We have a busy day tomorrow, and you only have one more night to have sex with a single woman. Let's make the most of it.\"\n\nJules picked her up into his arms and carried her towards the bedroom, saying, \"I plan on making the most of it. Then tomorrow, we will fulfill my fantasy of making love to a married woman.\"\n\n<br >\n\nChapter Seventeen\n\nAt the sound of the knock, Toby opened the door to the meeting room so Carson and Ginger could enter.\n\n\"Where are Cile and Didi?\" Ginger asked as she glanced around the room to see only Toby and Jules.\n\n\"They're up in our room,\" Jules explained. \"Didi wanted Cile's opinion on the dress that she bought for this evening and I'm certain that they are also going over last-minute plans.\"\n\nToby was working on preparing Cile's laptop to launch the video connection with her Uncle. He said, \"They should be here any minute now. Cile won't miss the start of her own meeting.\"",
        "His words were prophetic as Cile used her key card to open the door and led Didi into the room.\n\n\"Good morning everyone,\" Didi said, as she went around the table to take a seat next to Jules.\n\n\"Are we ready to start?\" Cile asked Toby.\n\nHe kissed her and said, \"We should be, but feel free to backstop me to be certain.\"\n\nCile and Toby took their seats and she verified the settings for the video conference as Ginger and Carson took their seats.\n\nWhen her Uncle Bobby appeared on the screen, he said, \"I can only stay for about fifteen minutes before I'll need to leave for the airport. Carson and Ginger, my flight plan has me arriving into Myrtle Beach just before 2 PM. We'll leave tomorrow at 7 AM if that works for both of you.\"\n\n\"Since you're going to be in town, Mr. Brandt, would be please join us tonight for our wedding?\" Didi asked.\n\n\"Only if you call me Bobby. I would be honored to attend. Thank you.\"\n\nCile said, \"Well, since Uncle Bobby has to cut out early, Toby and I have to get over to the sports complex and Ginger Jules and Carson have to get to the symposium, let's get started...\"\n\nGinger interrupted, \"I would like to share something that I learned this morning. It might be important in some way.\"\n\n\"Go right ahead,\" Cile said.\n\n\"Lacey asked me to meet her for coffee this morning. She and Huma Sandhu have been getting close this week, and Lacey wanted to ask for my help on something that Huma is trying to put together.\"\n\n\"And what's that?\" Cile asked.\n\n\"Lacey didn't have all the details, but what she was able to tell me was that part of Huma's assignment while attending the symposium is to ferret out any information she can on environmental incidents that other countries are keeping secret and what they are doing to resolve them. Lacey told me that Huma was approached by another participant of the symposium who acknowledged that there were several countries with representatives at the symposium attempting to do the same as she was.\"\n\n\"Did she mention who this other participant was or what country they represented?\" Bobby asked.\n\nLacey shook her head, \"No, but they both felt that there would likely be several representatives willing to share their country's secret if other countries would share theirs with them. They believe that the opportunity to possibly gain additional knowledge from the experience of others would outweigh the fear of revealing their country's secrets.\"\n\nBobby sighed, \"The age-old challenge. Countries need scientists but have always struggled to keep their loyalty to their governments rather than their science.\"\n\nLacey continued, \"Huma expressed her doubts about her own country allowing her to participate in sharing any information due to the inherent mistrust among governments. The idea of having all the participants providing their details to an independent, disinterested third-party, who could verify the reliability of the information and share everything with everyone at the same time was discussed, and Lacey suggested that people from academia, such as Professor Davis and myself might be acceptable to all the participants.\"\n\n\"Ah, we're not exactly disinterested third-parties,\" Toby said.\n\n\"I know,\" Ginger said. \"I told Lacey that you and I had accepted consulting contracts that would create a conflict of interest if we were to function as she had described. She said that she would have Huma try to identify if there were any other members of academia attending the symposium who might meet their requirements. Just because Toby and I can't do it, doesn't mean that someone else won't be willing to.\"\n\n\"Carson, has anyone approached you about participating in this environmental quilting bee?\" Cile asked.\n\n\"No, but I'm not the only representative here from the EPA who might be approached.\"\n\n\"But you're the only one here who was on the task force and with any direct knowledge of the incidents we have experienced,\" Cile said.\n\n\"I wouldn't count on that. The EPA is a very social organization. Rumors and misinformation are often used for political gain within the organization, at the same time that truthful information is frequently leveraged for power. We would be fools to believe that some of the details on our incidents aren't known to people outside of the task force or this team. There are more than two dozen people who work for the EPA in attendance at the symposium. Anyone of them could be asked to participate in sharing information, and if that person believed that they would gain knowledge that would further their career within the organization, well...\"\n\n\"How much of a concern is this?\" Jules asked. \"There are only three full days of the symposium left. How likely is it that the representatives of the various countries could get approval to share their country's information and then find a neutral party to gather, analyze, and distribute it? No, I think the seeds might get planted here, but there will no fruit harvested this week. The best that they could hope for is the establishment of a confederation of countries that have agreed to work together to share environmental incident data. Personally, I don't see a downside to that.\"\n\nCile said, \"I have been having conversations with some of my contacts within the World Health Organization, and we have been lamenting about the lack of an international database for toxic poisonings. The CDC has the National Toxic Substance Incidents Program database, but only seven of the fifty states contribute to it.\"\n\n\"May I propose something?\" Didi asked.\n\n\"Certainly,\" Cile said.\n\nDidi did so, \"Jules, you are going to have virtually all of the symposium attendees as your audience this morning. If you were to suggest the creation of such a database and request support from all the countries in attendance at the symposium, it might accomplish two things. First, it might nip in the bud attempts by only a few countries to share their information only among themselves. Secondly, it would plant a seed of cooperation that the attendees could take back home with them. The fact that the proposal comes from you, someone with no direct affiliation with any government would provide added credibility to it.\"\n\nJules was nodding as he said, \"I can go one better and offer to launch the database at the end of the symposium through Cabot Geological, with the commitment to turn it over to the World Health Organization once they were prepared to administer it. Any country that refused to openly contribute to the database would not be allowed access to the data within it. If these toxic environmental incidents are as mysterious and widespread as they appear to be, interest in them might be just what we need to build the database for the benefit of everyone.\"\n\n\"It could work,\" Cile said. \"There would need to be assurances that the data could only be accessed by authorized individuals within each contributing country so that the media was excluded, and possibly a coding system that countries could utilize to share their data without identifying who they are. Maybe all countries would be assigned a unique number, and only the administrator of the database would have the code.\"\n\n\"That's exactly what I will propose,\" Jules said. \"Maybe you can share our thoughts with your contacts at the World Health Organization to see if they are interested in taking the database over at some point.\"\n\n\"I like the concept,\" Bobby said. \"Jules, you can go ahead with your proposal, but I'll need to run this by Amber Chase and have her discuss with the President whether the U.S. contributes. Hopefully, I'll have an answer for us by the time my plane lands this afternoon.\"\n\n\"Didi,\" Jules said, \"You're familiar with the mining accident database that we created. If you get bored today, maybe you can use that as a template to start getting the new database created. The data fields will be almost identical, with just a few heading changes to start with.\"\n\nDidi squeezed Jukes' hand and said, \"Once the marriage license is delivered, I think I might be able to concentrate on something else for a few hours.\"\n\nHe told her, \"I'm taking the car so that I can give everyone else a ride to the convention center. Text me if the courier hasn't delivered it by noon and I'll drive to the Probate Court myself to pick it up.\"\n\n\"Unless anyone has something further to cover, I suggest that we head over to the convention center,\" Cile said.\n\nJules stood and said, \"The valet should have my car parked out front. I'll drop you and Toby off at the sports complex first. It shares the parking lot with the convention center, but there's almost a half-mile between the two buildings.\"\n\nToby said, \"Thanks. The less that my wife is seen in public wearing her volleyball uniform, the better.\"\n\nCile stood and hugged her husband and whispered in his ear, \"Are you ashamed of the way that I am dressed?\"\n\n\"I'm complaining about having to share the view of how you are dressed. I am entitled to have impure thoughts of you, no one else should,\" he whispered back.\n\nShe tapped his cell phone in his pocket and said, \"Make note of each and every impure thought that you have and we'll discuss them in detail tonight. In great detail.\"\n\n~~~\n\n\"Zebra mussels attach to any stable substrate present in the water column, including artificial surfaces such as pipes, boats, docks, etc., along with crayfish, unionid clams, macrophytes, and even each other to form dense colonies. The long-term stability of the substrates affects the density and age distributions found on those substrates. Extensive siltation, certain reef structures, microalgae, and fluctuating water levels expose mussels to desiccation, which make a substrate less suitable for long-term colonization. We have been mapping the colonization of zebra mussels for more than a decade. Where the area around Bois Blanc Island is concerned, the rocky substrate between it and Round Island is where we have identified the heaviest concentration.\"\n\nKelsea Livingston with the Michigan Department of Natural Resources showed the participants a color-coded map that distinguished concentration levels of zebra mussels in gradually darkening shades of green. The strait between Round Island and Bois Blanc Island wasn't the darkest shade of green on the map, but it was pretty close. It was also the darkest shaded area anywhere near the islands.\n\n\"That explains why you are dispatching your divers to that area first,\" Carol Hardy said. \"However, we will need samples from these other locations as well.\" She used a laser pointer to indicate some other high concentrations areas near the Bois Blanc Township Marina on the south side of the island, and near McRae Bay on the north side.\n\n \"Those locations are on the list,\" Kelsea assured her. \"We have assigned enough dive teams to this project that we expected to have zebra mussel samples for up to ten nautical miles from the shore of the island by the end of the day tomorrow, as long as the weather cooperates.\"\n\nNancy Koslowski asked, \"Your divers and boat crews were instructed to take precautions to protect themselves from potential exposure to high levels of arsenic trioxide, right?\"\n\n\"Yes. In addition, the boats will not return to shore to deliver the samples collected. The Coast Guard cutter Mackinaw will remain anchored in the marina. As we were instructed by Ms. Hardy, our crews will deliver the samples to the hazardous material team on the cutter and then be decontaminated. The Coast Guard will have responsibility for the testing of the samples.\"\n\n\"There is a slight change in that plan,\" Carol Hardy told everyone. \"The divers will still capture twenty mussel samples from each location, attempting to vary their selections throughout the colonies to obtain mussels of different ages. The Coast Guard will test half of the cataloged samples for each location for traces of arsenic. When any level of arsenic is detected, the remaining, untested mussels will be sent to a yet to be determined location where additional tests will be performed. I should have the location of the lab within a few hours.\"\n\n\"What additional tests,\" FBI Special Agent Derrick English asked. \"I thought the reason for testing the zebra mussels was to determine if they were filtering the arsenic from the lake water, and then use the concentration data to help locate the source of the contaminant. Who authorized this additional testing and what is its purpose.\"\n\nCarol Hardy smiled and said, \"You are free to direct your questions to Lieutenant Commander Celia Davis with the U.S. Public Health Service or Amber Chase, the President's Chief of Staff. That is where my orders originated.\"\n\nDerrick English quickly backpedaled, and said, \"That's okay. I was simply going to offer the services of the FBI lab. That's all.\"\n\n\"Thank you,\" Carol said. She turned to Kelsea Livingston and asked, \"Now, from the time that the zebra mussels are removed from the lake, how fast do they need to be tested? I believe that desiccation could be fatal to them.\"\n\nKelsea nodded and said, \"Adult zebra mussels can survive three to five days of aerial exposure, but they will all be held in containers with water from the location where they were captured. It was believed that the water that the mussels colonized in could be of value, so we're capturing it along with them. Desiccation could only be a potential issue with the mussels set aside for additional testing, but we're confident that we can keep them alive for several weeks in the containers chosen for the task. The Coast Guard will be testing the mussels for arsenic within an hour of receiving them. This will allow us to quickly map the concentration levels of any arsenic detected and reallocate the divers faster.\"\n\nThe door to the Old Orchard Lodge opened and everyone turned to watch an Army officer walk through the door. He saw the assembled group seated around a cluster of tables and approached.\n\n\"Good morning,\" he said. \"I'm looking for a Carol Hardy and I was told that I might find her here.\"\n\nCarol stood and said, \"I'm Carol Hardy. What can I do for you, Major?\"\n\n\"Ma'am, I am Major Barkley with the Army Corps of Engineers Detroit office. I was ordered to report to you and to have my team on the standby to perform geological surveys at your direction. My team can be on this island within three hours of your command.\"\n\nNancy Koslowski laughed and said, \"Jesus, Carol, who did you have to sleep with to suddenly have all of these resources at our disposal?\"\n\nOver the past few weeks, Nancy Koslowski and Carol Hardy had bonded over the investigation on Bois Blanc Island and become close friends and confidants. This was evident as Carol flipped a single finger in the face of Nancy.\n\n\"We're glad to have you join us, Major,\" Carol told him. \"Please have a seat wherever you would like. How familiar are you with our situation here on the island?\"\n\nMajor Barkley took an empty seat and said, \"General Bloom at our headquarters in D.C. just told me that there had been a toxic environmental incident from an unidentified source and that my team was to provide assistance locating that source.\"\n\nCarol addressed the rest of the room, and said, \"If everyone else will bear with me, let me fill the Major in on the details.\"\n\nShe had assistance from Nancy and a few others over the next half hour as they brought Major Barkley up to speed on the arsenic poisoning and subsequent investigations. He listened intently and then looked around the room at everyone.\n\n\"That doesn't make sense,\" he said. \"How could the fish be contaminated without the water showing any traces of arsenic? You must have had faulty tests or missed something.\"\n\nCarol explained the theory that had been presented, whereby the zebra mussels were filtering the arsenic out of the water, only to be subsequently eaten by yellow perch.\"\n\nThe Major laughed and said, \"Man, that is some out of the box thinking, but it makes perfect sense when the food chain is considered. Who came up with it? I'd like to shake his or her hand.\" He glanced around the room looking for a response. No one did.\n\nCarol finally spoke, \"The theory was presented yesterday by Lieutenant Commander Davis with the U.S. Public Health Service Commissioned Corps. She has been placed in charge of the investigation into this and several other toxic environmental incidents around our country. She is also the one who suggested bringing the Army Corps of Engineers to assist with geological surveys rather than relying solely on the U.S. Geological Survey teams.\"\n\n\"You mentioned several other toxic environmental incidents,\" Major Barkley said. \"I haven't heard anything about them. Have they all involved arsenic?\"\n\n\"I don't have details on the other incidents,\" Carol said. \"My focus is on incidents around the Great Lakes, and fortunately, this has been the only one so far. But, to answer your question, no, the other incidents around the country have involved other toxins, such as mercury and radon.\"\n\nThe Major nodded and asked, \"So, at this point, you are attempting to identify the location where the arsenic is entering the water by measuring the concentration of arsenic with the zebra mussels?\"\n\n\"That's correct,\" Carol said. \"In theory, the source of the arsenic must be in close proximity to wherever the highest concentration of arsenic is found in the mussels.\"\n\n\"I don't argue with that strategy,\" the Major said, \"but we might be able to narrow the search down some. Arsenic, in the amount that we're talking about here, is almost certainly associated with iron or sulfur deposits in the area. With your permission, I will have multispectral equipped aircraft with radar sensors headed here this afternoon to begin mapping the mineral deposits on land and beneath the lake bed.\"\n\n\"You can do that from aircraft?\" Carol asked.\n\n\"Ma'am, we can do it from satellites miles above the Earth, but using them would require a whole lot more paperwork than getting a few airplanes up here. Plus, aircraft are closer to the ground than satellites, so the reliability of the data benefits from that. Combining multispectral equipped aircraft with radar sensors, such as Phased Array type L-band Synthetic Aperture Radar, allow structural geological elements to be more detectable, including fissures, faults, and aquifers using radar. Short-wave infrared bands help identify clay areas. Using the properties of the two systems allows an index to be created to better understand the types of minerals that are present in a region.\"\n\nCarol was nodding when she asked Kelsea, \"What do you think? Would targeting your divers to areas where the Major says that there are minerals that could be the source of the arsenic help you?\"\n\n\"It would depend on how long it takes to get the information,\" Kelsea said. \"The teams on the lake right now obviously won't benefit...\"\n\nThe Major interrupted, \"The other advantage of using aircraft over satellites is that we can have a geoanalyst reading the radar images real-time and communicating the results back to us within minutes.\"\n\nKelsea asked, \"You're saying that by this afternoon, my divers would have your radar indications of the mineral deposits most likely to be the source of the arsenic?\"\n\nThe Major nodded and said, \"Remember, the location might be on dry land somewhere. Divers won't do us much good if that is the case. We could possibly use them to help locate the spot where the groundwater is entering the lake, especially if it is subterranean.\"\n\n\"Either way, Carol said, \"it sounds like the radar mapping from aircraft would speed up the search. Major, you have my permission to proceed.\"\n\n~~~\n\nToby finished his scouting report for Lacey as Cile listened silently, \"Duke's Libero is hands down their best player. Try to keep the attack at the net or the front row and that will negate the influence that she will have on the match. Kill attempts that make the back row will be far less successful.\"",
        "\"Thanks,\" Lacey said. She then turned to Cile and asked, \"Do you have any advice before we head over to the courts?\"\n\nThey were sitting on the edge of a planter outside the sports complex so that they would have some privacy for Toby's scouting report. UCLA's first match of the tournament, against Duke University was scheduled to start in less than an hour.\n\nCile said, \"Based upon what Toby reported and what I saw yesterday, I suggest that you keep a close eye on your players. They shouldn't have much trouble against this opponent, but if they start trying to use some of the tips I showed them yesterday, they're likely to tire much quicker. They're not used to the activity that my style of play requires, so until they build up their stamina, they risk exhaustion. Plan on using all fifteen of your allotted substitutions each set, no matter the score.\"\n\n\"Thanks for the tip. I've encouraged the team to embrace your style of play, so I'll take it upon myself to keep an eye on them. Why didn't you get relegated to the Libero position at Baylor? I would think that your height would have almost forced your coach to play you there.\"\n\nCile explained, \"Baylor's coach while I was there was Leigh Warren. She was old-school and didn't embrace the concept of a Libero until later in her coaching career. Even if she had, I was too valuable to the team at the net for her to keep me isolated in the back row.\"\n\nLacey laughed as she rose from the planter and said, \"I remember how valuable you were for them at the net. Why didn't you try out for the Olympic team? You would have been a shoo-in.\"\n\nCile stood and took Toby's hand. The trio started for the entrance to the sports complex while Cile tried to explain, \"My family tries to maintain a very low profile due to the work that my father, brother, and other close relatives do for the government. You know how intrusive the media can get with Olympic athletes and their 'background', especially if they are expected to medal in their event. Didn't they do an interview with your parents, neighbors, and anyone else they could find who knew you?\"\n\n\"They did that for everyone on the team,\" Lacey admitted. \"We pretty much had to agree in writing to cooperate with all interview requests in order to be on the team.\"\n\nToby stopped, turned Cile to face him, and kissed her, \"I'm going to go watch Kansas State's match against Florida State. The winner will be your next opponent.\"\n\nCile smiled and said, \"Have fun. I'll head back to the hotel after our match to check in with Didi and get some work done. Make sure that you bring Jules back with you when you come.\"\n\n\"Count on it. Love you.\"\n\n\"Love you too,\" Cile said as she and Lacey continued heading into the building\n\n\"The transformation that you have made in Toby certainly is amazing,\" Lacey told her. \"He's been like a different person since he met you.\"\n\n\"Thanks,\" Cile said, \"but the transformation that he has caused in me would probably surprise you more.\"\n\n\"How so?\"\n\n\"Before I met Toby, all of my relationships were strictly recreational. It's not that I purposely avoided anything serious with someone, it's more like no one ever stimulated me enough to want more. I was extremely focused on my career, and still am, but when I met Toby, it was like a switch inside me had been thrown. He became the center of my world almost from the moment that I first spoke to him. He looked at me like no one else ever had, and my body and soul belonged to him from then on.\"\n\n\"Well, it's obvious that he absolutely cherishes you,\" Lacey said.\n\n\"What about you?\" Cile asked. \"I understand that you and Huma have been getting closer. Is there a future there?\"\n\nLacey sighed, \"I'm afraid to hope for more than a brief affair, but it's hard. You've seen how beautiful Huma is on the outside. I've had just the briefest glimpse of the radiance within her, and it makes me crave the opportunity to see so much more. She's beautiful, a little hesitant, innocent and confident, all at the same time. I don't know how long it will last, but I'm going to ride this wave all the way to the beach.\"\n\n\"I can see how her living halfway around the world could create challenges for a long-term relationship,\" Cile said, \"but as I told Didi the other day, love really does conquer all. Just be true to your feelings, Lacey, and hope that Huma does the same.\"\n\nLacey nodded and asked, \"Have you ever been in a relationship with another woman? They can be much more challenging than ones with men.\"\n\n\"Not in the way that I think you mean,\" Cile said. \"There were several offers for me to experiment with other girls while in college, and even a few since college, but I never had any interest. I don't judge others, but I know that I have always been destined to be a one-man woman, and I now know that Toby is that one man. I have never felt any greater joy than walking into a room and knowing that Toby is waiting to hear my footsteps.\"\n\n\"I take it you're not the curious type?\" Lacey teased.\n\n\"Oh, I'm very curious now that I have Toby,\" Cile giggled. \"I wasn't as promiscuous in college as some of my teammates, but I wasn't as pure as the driven snow either. Curiosity never entered into my decisions back then. If I felt like doing something with a guy I did, if I didn't, I didn't.\"\n\nThey approached the court where the match would be played and saw most of their team already there, doing stretching exercises under the supervision of the team trainer. Duke's team was huddled around their bench listening to whatever their coach was telling them in preparation for the match.\n\n\"Unless you need me for something,\" Cile said, \"I think I'm going to join the girls and do some stretches myself. I've been sitting on my butt too much since we got here.\"\n\nLacey laughed and said, \"Hey, yours and Toby's favorite sexual positions are none of my business.\"\n\nCile laughed and stuck her tongue out at Lacey before walking out onto the court to join the team.\n\n\"You bring in a ringer from another team?\"\n\nLacey turned to see the coach for the Duke team approaching with a smile on her face.\n\n\"Hi, Gretchen,\" Lacey said. \"Congratulations on your win against Clemson.\"\n\n\"Thanks,\" Gretchen Butler said. She then teased, \"So, I know that your mascot is a Bruin, but does that entitle you to go out and recruit any 'Bears' in the country to play on your team?\"\n\nLacey laughed at the reference to Cile wearing her uniform from her playing days at Baylor, who's mascot is a bear. \"God, I wish she still had any of her NCAA eligibility left. That's Celia Reid, now Davis. She was an All-American at Baylor and has agreed to be an assistant coach for our team so that Ginger Olsen could take care of some other obligations. I think she's wearing her old uniform just to tease her husband. They're in town on their honeymoon.\"\n\n\"Then she should wear it in front of her husband. She is distracting my entire team. God, she is gorgeous!\"\n\n\"Nice try, Gretchen, but she has eyes only for her man. I checked.\"\n\n\"Pity,\" said Gretchen, \"all the gorgeous ones are straight.\"\n\n\"Not all of them,\" said Lacey as she thought about Huma, \"but far too many, I agree.\"\n\n~~~\n\nJules Cabot remained seated on the stage where he and the other four members of the panel had been answering questions once all the presentations were done. Noticing a lull in the questions as the session was coming to a close, he raised the microphone to his mouth once more.\n\n\"Cold, impartial, nature.\"\n\n\"Is all it seeks merely balance, or has the Earth we inhabit decided to fight back against the humans who have been damaging it for centuries? That begs the question, is the Earth a sentient being?\"\n\nJules watched the audience for their reaction to his opening statement before continuing, \"Named after the Greek Earth goddess, the Gaia hypothesis has both scientific and philosophical components. Gaia is theorized to be a living entity that is greater than the sum of all the living and non-living aspects of the Earth. In proposing this theory, James Lovelock and Lynn Margulis sought to explain the many complex natural mechanisms that the Earth has for regulating things such as climate and biological diversity. In this theory, the whole Earth is a sentient being that regulates processes in the natural environment by balancing various aspects of it against others. Gaia makes modifications to itself as necessary to keep itself running smoothly for as many of its aspects as possible, be those specific organisms such as humans or entire ecosystems such as the oceans. Gaia does not have an anthropocentric perspective, and we humans are only one small part of the overall entity that Gaia is theorized to represent.\"\n\n\"Because it is only a theory, and a rather controversial one at that, its meaning in a modern scientific or social context must be judged on the basis that it provides a framework for describing and understanding the Earth; it does not, however, provide absolute answers to questions we have about our planet.\"\n\n\"Nevertheless, it is important for natural and social scientists to consider this theory when they conduct research and collect data that is intended to help us understand the Earth because it provides one possible explanation for how things work. Additionally, it provides a very important perspective that is often missing in human intellectual endeavors: that we are not the center of form and function for the world in which we live. Rather, it reminds us that Earth will maintain some sort of balance as humans continue to modify it and this balance, while being satisfactory for most aspects of Gaia, may not be satisfactory for us.\"\n\n\"I would like to point out that while this theory seems far out to some, and certain aspects are difficult for me to believe, those of you who are Earth scientists, ecologists or other natural scientists recognize that complex and delicate balances that keep the oceans and atmosphere and lakes and forests and other things functioning properly are so intricate and orderly that if it isn't a living being that controls it all, it certainly sometimes acts like one. Thus, whether Gaia is a sentient being or simply a device for explaining the very complex functioning of nature in a way humans can relate to, the theory of Gaia has a well-deserved place in modern scientific paradigms.\"\n\n\"To that end, I am announcing that Cabot Geological is immediately launching the Gaia Project. This project will act as a scientific database and research clearinghouse for environmental and geological incidents that have had, or have the potential, to adversely impact human life. The project will be non-political, not for profit, and affiliated with no one country. The data collected by the Gaia Project will be coded to ensure the anonymity of the contributing source, and all the data will be verified as reliable before making it available for research. Data managed will be accessible only to contributing entities, whether they be individual scientists, academic institutions, or government agencies. Cabot Geological fully intends to transfer the Gaia Project to the World Health Organization as soon as they are prepared to administer it.\"\n\n\"Ladies and gentlemen, I have heard the whispers this week, as many of you have. Some have been doing the whispering, while some are merely listening to the whispers of others. Let's bring the topic of the whispering into data that we can all benefit from. My contact information is in your programs, so please use it to announce your interest in joining the Gaia Project as early in its infancy as possible. With trust and our combined knowledge, we can overcome any environmental Gordian Knot. Please join me.\"\n\n\"Thank you.\"\n\n<br >\n\nChapter Eighteen\n\n\"They say you don't marry the person you can live with, you marry the person you can't live without. That sums up Jules and Didi perfectly. To the happy couple!\"\n\nToby raised his champagne flute in toast and was joined by the rest of the small group celebrating the wedding of the Cabots. They were the only private party occupying the restaurant patio this evening, which didn't pose a problem for the resort due to the smaller crowds during the middle of the week. Bobby was the only one not drinking champagne since he was scheduled to fly in the morning.\n\nThe ceremony on the beach had been quick and efficient, even with the dozens of uninvited guests who lingered around the periphery of the event wanting to be part of the romantic moment of complete strangers.\n\nAs others ate their dinners, Cile moved around to everyone and transferred the pictures that they had taken of the ceremony from their cell phones to hers. She intended to place them all onto a memory card for Didi and Jules, but only after selecting her favorite shots to have printed and framed for the newlyweds.\n\n\"That was a beautiful ceremony,\" Huma said to Lacey. \"It was all about the loving couple rather than their families or their church. I think that is how all weddings should be.\"\n\nLacey nodded and prepared to reply, but Ginger beat her to it, \"It was perfect for Jules and Didi, but other couples may desire more of a celebration for the new chapter in their lives that they are undertaking with their marriage. In many instances, a marriage transforms two families into one. The wedding ceremony becomes more than just the couple joining together; it becomes about entire families joining together.\"\n\n\"The wedding reception is the ideal time for the families,\" argued Huma.\n\nGinger countered, \"But that minimizes so many traditional family involvements in the actual wedding ceremony, such as the father walking the bride down the aisle, or the youngest female member of the bride's family being the flower girl, just to name a couple of examples.\"\n\nCarson put his arm around Ginger's shoulder and whispered in her ear, \"It appears that you have given weddings a bit of thought at some point.\"\n\nShe turned and kissed him as she whispered back, \"More like my mom has given my wedding a lot of thought, but don't worry, you won't be meeting her for several weeks yet.\"\n\nCile had retaken her seat between Didi and Toby. She turned to Didi and said loud enough that Jules could also hear, \"It goes without saying that you are both banned from tomorrow morning's meeting, but, Jules, tell us how your presentation went today.\"\n\n\"Are you interested in the presentation during the discussion panel or my announcement afterward?\"\n\n\"Both,\" Bobby said. Cile nodded in agreement with her uncle.\n\n\"I have a video of the discussion panel,\" Huma said. \"I purchased the entire symposium recordings and a link for each is e-mailed to me as they are posted. If someone has the IP address for the projector on the ceiling, I can connect to it and everyone can watch the entire discussion panel.\"\n\nDidi said, \"I would love to have a copy of the video, but since the session was over two hours long, and this is my wedding night, I hope no one minds if we skip watching it right now.\"\n\nOnce the laughter died down, Jules said, \"I'll give the Cliff's notes version for now. The other panelists focused their presentations on air or water quality issues, and were essentially just regurgitating points that have been discussed for decades. I spoke to methods being employed currently, as well as some being investigated that promote a sounder ecological stewardship by mining operations...\"\n\n\"Every question asked during the session was directed to Jules,\" said Carson. \"The interest in the room was definitely focused upon mining and the impact the various methods could have on the environment.\"\n\nGinger added, \"Knowing what we know about the toxic environmental incidents that we are aware of, it was evident from the questions being asked that people were looking for answers to explain their own incidents.\"\n\nEven before she saw Huma's eyes grow wide and heard her ask the question, Ginger knew that she had slipped up.\n\n\"What toxic environmental incidents are you referring to?\" Huma asked.\n\nDidi stepped in to answer, \"That's right, Huma, you didn't have an opportunity to meet Sean and Amanda Wallace. The night that you were attacked on the beach, we were all having dinner with the Wallaces on this same patio. Knowing that Carson works for the Environmental Protection Agency here in America, Sean and Amanda shared with us that there had been a mysterious radon leak at their winery in Australia. Being geologists, Jules and Ginger joined the discussion.\"\n\n\"And,\" Carson added, \"As Jules mentioned during his announcement after the session, there has been a lot of whispering going on during the symposium. Several of my colleagues at the EPA who are attending have heard of other incidents around the world, but everyone is being very secretive on the details. That's why I applaud Jules for launching the Gaia Project. Hopefully, it will be successful in facilitating the level of data exchange that the world needs.\"\n\nHuma suspected that several people in the room knew more than they were willing to share with her, so she said, \"I agree. I will be advising my government to participate in the Gaia Project.\"\n\nJules asked, \"You understand that participation in the project would require your country to provide verifiable environmental data on an incident that either already has, or has the potential of having adverse effects on human life. Are you aware of an incident that meets that criteria?\"\n\nHuma realized her blunder as she said, \"I'm certain that my government could come up with something.\"\n\n\"The database fields are all prepared,\" Didi said, \"and the search algorithms are ready for the filters that everyone agrees upon. As soon as the credentialing and security details are defined, it will be ready to go live.\"\n\n\"I was thinking about your plans for the database after you mentioned it this morning,\" Bobby said. \"You'll need to be able to positively authenticate every user, not only when they initially join, but every time they access the database. I happen to have the world's foremost IT security expert available to me and I would be happy to ask her to handle the setup.\"\n\n\"Would that be Rockie?\" Didi asked with a smile.\n\nBobby had a confused expression when he asked, \"You know my daughter-in-law, Rockie?\"\n\nDidi laughed and said, \"Cile has told us about her.\" She tapped her bare arm to bring attention to it, and said, \"Her and I have a lot in common. I would love to have her assist with the database.\"\n\n\"Yes, well that can wait for a day or two,\" Jules said. He took the valet ticket out of his pocket and passed it to Carson as he stood. \"Why don't you take my rental to drive yourself and the ladies back to your hotel? I don't believe my Bride and I will need it tomorrow, and I'm certain that we won't need it tonight.\"\n\nDidi giggled as she stood beside Jules and slipped her arm around his, \"If you will all excuse us...\"\n\n\"Thank you all for sharing this day with us,\" Jules said as he led Didi toward the restaurant entrance. \"We look forward to sharing our golden anniversary with all you wonderful people. Keep your eyes out for the invitations.\"\n\nEveryone laughed except Carson. He turned to Ginger and whispered, \"Which anniversary is the golden?\"\n\nGinger whispered back, \"The fiftieth.\"\n\nThen Carson laughed.\n\nHuma turned to Bobby Brandt and said, \"I understand that you own a consulting company and have contracted with Ginger and Carson to perform some work for you.\"\n\nBobby studied the beautiful woman and said, \"Yes, Brandt Consulting frequently utilizes outside consultants with specific skills when a client needs expertise that our in-house teams can't address.\"\n\n\"Do you ever require marine geology skills?\"\n\n\"Of course,\" Bobby said. \"Land reclamation projects along coastlines is an ever-expanding field, and of course the regulatory requirements associated with off-shore drilling mandates frequent marine geological studies to ensure against oil spills. Why, are you interested in doing some part-time consulting work?\"",
        "Huma glanced at Lacey before responding, \"I would be interested in exploring opportunities.\"\n\nBobby took a card out of his wallet and handed it to Huma. \"Send me your resume when you have a chance.\"\n\n\"You'll have it this evening,\" Huma said. \"Thank you.\"\n\n~~~\n\nMajor Barkley would never complain about having two attractive women looking over each of his shoulders, Carol Hardee on his left and Kelsea Livingston on his right. They stood behind him, seated at one of the tables in the Old Orchard Lodge as he reviewed the imagery from the afternoon's multispectral radar studies.\n\nThe image currently on his screen was of Round Island. A small, uninhabited three-hundred-seventy-eight acre rock positioned between Bois Blanc Island and Mackinac Island. The only structure on the island was the unmanned lighthouse protecting Straits of Mackinac at the far northwest tip of the island.\n\n\"You said that the red-colored areas indicate iron ore?\" Kelsea asked.\n\n\"These are layered images,\" the major explained. \"The color coding will vary by the penetration depth of the signals. On the surface scans, red would indicate clay. See?\"\n\nHe flipped back to a previous image to point out the surface scan results, \"The iron ore is three scan layers down. There is the surface layer, which shows the clay present under the topsoil in most locations, then there is the aquifer layer, which we were surprised to find on such a small island in the middle of the Great Lakes, followed by the iron ore, which appears to extend beyond the island and under the lake bed several hundred yards.\"\n\n\"I can see that this is the largest iron deposit close to Bois Blanc Island,\" Carol said, \"but do we know if that is where the arsenic is coming from?\"\n\n\"The scans will not detect arsenic,\" the Major reminded them. \"We have to assume and deduce a few things. As I mentioned earlier, arsenic is typically found in the same ores that hold iron, so we now know where the closest, most abundant iron is located. If we study the aquifer layer scans, we see this gray, inverted teardrop-shaped area that extends from the center of the island to the southeastern shoreline. That places the aquifer's opening to the lake directly across from Bois Blanc Island, into the straight that separates the two islands. I would recommend that your divers start collecting the mussels from that area first thing tomorrow.\"\n\nKelsea just nodded, but Carol asked, \"Can we drill down into the aquifer layer on Round Island and collect samples of the water, and how long would that take?\"\n\nThe Major answered, \"The aquifer layer is below mostly clay, with a few veins of granite or similar bedrock, but we could avoid those as long as the location of the drilling wasn't too specific. We should be able to access the water in the aquifer within a few hours with the right equipment.\"\n\n\"Do you have the right equipment?\" Carol asked with a flirtatious smile.\n\nMajor Barkley grinned up at her and said, \"You betcha. We'll likely need to set up the drill site on the shoreline since Round Island is all designated wilderness area. There doesn't appear to be any clearing on the island except for along the shoreline and creating one for the drilling would require tons of paperwork with little chance of approval.\"\n\n\"Would you be able to access the aquifer from the shoreline?\" Carol asked.\n\nMajor Barkley studied the images again and pointed to a spot, \"Here. It would require angle drilling, but it would all be through clay.\"\n\nCarol asked, \"When could you get started?\"\n\n\"It would take at least a day to get the equipment in place and set up,\" the Major said. \"Figure Thursday morning...\"\n\nCarol turned to Kelsea and said, \"Let's try to get the mussel samples from the area that the Major suspects tested as early tomorrow as possible. I would like to have confirmation that we're in the right area before the drilling gets too far along.\"\n\n\"That was my plan,\" Kelsea assured her. \"I'll go and get the assignments communicated tonight so everyone is ready in the morning. Good night.\"\n\nAs he closed his laptop and stood, Carol asked, \"Can I buy you a drink, Major?\"\n\nHaving spent the day around Carol Hardee, Major Barkley had learned that she had at least two speaking styles: longshoreman and enticing siren. Her request foretold enticement.\n\n~~~\n\nHuma led Lacey into her hotel room and instantly dropped the towel which had been around her waist for their trip up from the hotel's pool.\n\nLacey had said that she wanted to swim a few laps to help her unwind from the day, but Huma knew that her real interest was in watching the reaction of other people to the hot pink bikini that Lacey had purchased for her.\n\nLacey had not been disappointed as the color of the bikini drew the attention of every man and woman around the pool, and Huma's beautiful features and sensuous movements as she walked around the pool area searching for an empty chair held the attention of most.\n\nLacey lowered the straps on her wet one-piece bathing suit and shimmied out of it. After hanging it on a hook in the bathroom, she returned to stand naked in front of Huma, and asked, \"May I have the honor?\"\n\nHuma answered with a tilt of her head and a seductive expression on her face, \"You are who I was waiting for.\" She then pulled Lacey's face to hers for a long, passionate kiss.\n\nFinally breaking the kiss, Lacey slowly brought her hand up from the bottom of Huma's back, feeling her long silky hair on the back of her hand as it rose higher. Reaching the lower knot for the bikini top, Lacey gave a slight tug on the strings to release it. She continued her upward trek on Huma's back until she was able to also untie the upper knot of the bikini at the back of Huma's neck. Lacey stepped back from Huma's body just enough to allow the freed bikini top to fall to the floor between their feet. Lacey went to her knees in front of Huma and lightly kissed her stomach. Using both of her hands at the same time, Lacey deftly untied the knots on either side of the bikini bottom simultaneously.\n\nLacey was looking up at Huma, their eyes locked on each other, so she felt, rather than saw the bikini bottom fall to the floor to join its matching top.\n\nHuma extended a hand to help Lacey rise as she said, \"Come. Let's get the chlorine rinsed off of you.\"\n\nThey spent forty minutes in the shower, pleasuring each other with mouths, fingers, and the hand-held shower head. Then, Lacey had indulged in the joyful task of drying and brushing Huma's long hair as she sat on the bed between Lacey's legs, chatting about innocuous topics.\n\nLacey reveled in the feeling of Huma's hair as it fell over her bare breasts and arms while being brushed. Huma treasured the intimacy of having this beautiful, strong, and athletic woman demonstrating loving care and affection towards her.\n\nHuma glanced at the clock and said, \"It's almost 7 AM in India.\"\n\nLacey followed Huma's gaze and saw that the clock display read 9:20 PM. She asked, \"What time does your supervisor start work?\"\n\n\"I have learned that he typically reads and responds to e-mails over breakfast,\" Huma told her. \"His office hours vary depending on what meetings he has to attend and where they are located.\"\n\n\"Are you anxious about what his reply to your request will be?\"\n\nHuma shook her head and said, \"No, I'm not anxious. I suppose apprehensive or nervous are better descriptions. My supervisor is not known for his tolerance, and if he perceives my request as me deviating from his orders, things could go very bad for me. I was instructed to gather information, not to divulge it, which is what I was essentially asking permission to do.\"\n\n\"You think he would fire you for asking a question?\" Lacey asked.\n\nHuma turned on the bed to face Lacey, and said, \"He doesn't fire people who displease him, he imprisons them. If I get the sense from his reply that my return to India would not be in my best interests, then I will seek asylum in America. That's why I inquired about consulting opportunities with Mr. Brandt. I would need to demonstrate that I had employment here to support myself until I could transfer my accounts.\"\n\nLacey suddenly found herself trying to disguise the elation that she felt over the possibility that Huma might need to remain in America rather than returning to India. She didn't want Huma to view her as anything other than supportive.\n\n\"Whatever his response,\" she said as she pulled Huma to her and lay down on the bed, \"we'll deal with it together. You're not alone.\"\n\n\"Thank you, Lacey. You don't know how much I crave your strength right now with my future so uncertain.\"\n\n\"Our future,\" Lacey said as she kissed Huma's forehead and held her tighter.\n\nHuma rose enough to look Lacey in the eyes and said, \"I hope so. I've never hoped for anything as much as I have when I think about you and me being together for more than this week. I don't want this story to end.\"\n\n\"Then we'll make sure that it doesn't,\" Lacey assured her. \"No matter the reply that you get, we'll find a way for us to move forward together, even if I have to move to India. I'll find something there to earn a living.\"\n\nHuma leaned down and kissed Lacey on the lips, \"You wouldn't have to work. My parents died in a car accident two years ago and as their only child, I inherited their estate. We would have enough to live on for the rest of our lives with neither of us working a day.\"\n\nLacey lifted her head to kiss Huma back and said, \"Well, it's nice to have options. I just want you to trust that whatever happens, or wherever we are, I will take care of you.\"\n\n\"And I you,\" Huma said. \"And, there is one way that I am going to take care of you right now.\n\nHuma slid down until her lips were directly above Lacey's right breast, then circled the nipple with her tongue. She then scooted lower and said, \"Let me know if you hear a tone from my laptop indicating the arrival of a new e-mail message. Your thighs and the buzzing of your toy will be obscuring my ability to hear for a while.\"\n\n~~~\n\nGeneral Ankit Narula saw the smiling face of  appear on his computer monitor seconds before the expressionless face of the Prime Minister appeared beside him.\n\n\"Good morning, Madame Prime Minister,\" Narula said. \"Good morning, Minister Sridhar. To what do we owe the pleasure of this early morning chat?\"\n\n\"Are any other members of the cabinet joining us?\" asked India's Minister of Environment, Forest and Climate Change.\n\n\"No,\" the Prime Minister answered. \"There is no need to waste the time of the entire cabinet on whatever you have to tell us. So, get with it.\"\n\nWithout preamble, Minister Sridhar said, \"We have located the source of the cadmium and dammed it off from the lake. As we suspected, it was a previously undetected underground spring that had eventually eroded itself a path to the lake.\"\n\n\"That is excellent news,\" General Narula said.\n\n\"Yes, it is.\" agreed the Prime Minister, \"But we still have several questions remaining to be answered, do we not? Questions such as how long it will take for the water in the lake to return to a safe condition, and how the cadmium got into the underground stream to begin with.\"\n\n\"Yes, Madame Prime Minister, both good questions. I'll start with your question about the lake water since that is easily answered. My ministry has already procured three industrial water filtration systems that are being installed around the lake as we speak. Now that the inflow of cadmium has ceased, we will intake lake water at different locations around the shoreline, filter out the cadmium and discharge the clean water back into the lake. Obviously, the process of filtering out enough of the cadmium to render the lake water safe will take some time since we will initially be putting the filtered water back in with the contaminated water, but the levels will continue to drop as we process the water each time. I have been given an estimate of three weeks to one month for the filtration process to have achieved its objective.\"\n\n\"Your second question will take further investigation. The geological survey of the area detected pockets of zinc ore surrounding the underground stream. The zinc deposits are numerous and vary in size, but none are larger than a small automobile. Since cadmium is most often obtained as a byproduct of zinc mining, our assumption at this time is that these zinc ore deposits are where the cadmium came from. What we cannot answer is what caused the cadmium to separate from the zinc.\"\n\n\"Could the water from the underground spring have eroded the cadmium out of the zinc ore?\" asked General Narula?\n\nMinister Sridhar shook his head, \"The production of cadmium typically relies upon the cadmium being isolated from the zinc metal by vacuum distillation if the zinc is smelted, or cadmium sulfate is precipitated from the electrolysis solution. Freshwater from an underground spring could erode the zinc ore, but it could not have resulted in the cadmium being released. We will be running additional tests on the water dammed up in the spring to determine if any chemicals in it could have contributed to the release of the cadmium, such as sulfur. Those tests should be completed by the end of this week.\"\n\n\"I look forward to learning what you find,\" the Prime Minister said. \"General Narula, have we learned anything from our inquiries about similar incidents in other countries? I'm certain that Minister Sridhar would welcome information gleaned elsewhere if it makes his ministry's task easier.\"\n\n\"We have learned nothing specific,\" Narula said. \"Our intelligence has learned that other countries around the world are dealing with environmental anomalies of their own, but we have not identified any of these involving cadmium. My agent in America attending the international environmental symposium confirms that incidents have occurred elsewhere, but again, she can provide no specifics. In her latest message, she reports that an international database is being created to facilitate the anonymous sharing of environmental incidents and recommends that our country participate.\"\n\n\"Absolutely not!\" the Prime Minister shouted.\n\nSridhar spoke softly, \"Prime Minister, I think it might be worthwhile to consider weighing the benefits of participating in a global database against the potential risks. It sounds like we would gain access to information that we would otherwise have to develop entirely on our own. We don't know what caused the incident at Lake Dhebar, or if other potential incidents are awaiting us, but as General Narula has mentioned, we are not the only country facing them.\"\n\nThe Prime Minister was calmer than expected when she said, \"Other countries do not face the same internal and external political challenges that we face. If either China or Pakistan learned of us experiencing an incident such as the one at Lake Dhebar, do you not think that they would try to find some way to exploit it? And what about the Akali Dal Mann or another separatist group from Jammu and Kashmir striving for their own homeland within our borders? You don't think that they would use an incident such as Lake Dhebar against the government? No, we will let other countries contribute their information and then rely upon our intelligence operations to obtain the information and share it with us. I will direct Minister Shah to start working on that immediately.\"\n\n\"I will communicate your decision to my agent in America,\" General Narula said.\n\n\"Can you trust your agent to follow your directions?\"\n\n\"Sadly, Madame Prime Minister, I am not entirely certain that I can. She is a young, principled scientist on her first assignment for me, so I have no history with her that I can gauge her reaction to my directions.\"\n\n\"Then don't tell her that we won't be participating yet,\" the Prime Minister said. \"Delay a decision, saying that you are discussing the matter with other members of the cabinet. That will easily buy us a couple of days, and she will be returning here before she learns the truth. Once she is back in India, we will evaluate her trustworthiness more closely.\"\n\nNarula nodded and said, \"As you wish.\"\n\n~~~\n\n\"I think we should alter our plans.\"\n\n\"And which plans would those be?\" Toby asked as he ran his fingers through Cile's hair while her head lay on his chest.\n\n\"Our plans to hold a reception for our friends in Southern California when we get home,\" she explained. \"Didi and Jules might get their feelings hurt if they see you and me celebrating our marriage with friends, and they are unable to do the same.\"\n\n\"You know Didi better than I do,\" Toby said, \"but Jules doesn't strike me as the sort of person who would begrudge someone else being able to celebrate something that he couldn't. In fact, I think they would welcome the opportunity to celebrate our marriage with us and embrace meeting some of our friends in the process. Remember, they're going to be new to the area, so introducing them to our friends will open up far more social opportunities to them than they would have with us alone.\"\n\n\"Maybe I'll just tone things down,\" Cile said. \"We can make it more of a casual event, maybe something like a barbeque at the community center for the condo. I'll make certain that everyone knows that any gifts brought to the event will be refused.\"\n\nToby nodded and said, \"It would be even better if we included Didi and Jules as co-hosts. The invitations could expand upon the purpose of the event being not only to celebrate our wedding but also to meet our new friends.\"\n\nCile said, \"I like that idea. I'll discuss it with Didi the next time I see her.\n\n\"I forgot to ask Lacey how my Bride did as an assistant coach today.\"\n\n\"Fortunately, the girls on the team didn't need too much guidance...\"\n\n\"Why is that fortunate?\"\n\n\"Because Lacey spent most of the match pointing out people in the stands or on the opponent's bench who she said were perving over me. She was more focused on watching people that she said were watching me than she was in most of the match. I think that the fact that I was wearing my Baylor uniform on the UCLA bench is what drew any attention to me being there.\"\n\nToby chuckled and said, \"There is no way that you will convince anyone who saw you in your volleyball uniform, especially those shorts, that their interest was due to anything other than your beautiful body in it.\" He lowered a hand down to cup one of her ass cheeks and left it there.\n\n\"Well, my surprise for you is over, so I won't be wearing it for the rest of the tournament. On another subject, what do you think about the hypothesis that the toxic events are due to bioleaching?\"\n\nToby continued to stroke Cile's hair as he answered, \"I'm leaning heavily towards it. Are you familiar with Redox reactions?\"\n\nCile smiled and said, \"Reduction-Oxidation, or redox. Biological energy is frequently stored and released by means of redox reactions. For example, photosynthesis involves the reduction of carbon dioxide into sugars and the oxidation of water into molecular oxygen. The reverse reaction, respiration, oxidizes sugars to produce carbon dioxide and water.\"\n\n\"It looks like I'm going to have to start trying to deplete your gray matter,\" Toby teased. \"The chemical reactions involved in redox are known to exist in biologic organisms, including bacteria and archaea. Redox is what allows acidophilic archaea to be used for the extraction of metals from ores, including gold, cobalt, and copper.\"\n\n\"Which is why everyone wants to know the pH level of the water at each of the incident sites,\" Cile said.\n\n\"Correct,\" Toby said, \"but I suspect that we will find out that the water source pH feeding each location is somewhere between six and eight.\"\n\n\"With seven being neutral,\" Cile said. \"What makes you suspect that range and why only at the source of the water?\"\n\n\"Because something has changed. If we were dealing with existing acidophilic archaea or other organic organisms, we would have encountered these toxic incidents long before now. I believe that we are going to eventually identify a previously unknown organism that has changed the environment rather than the environment changing it. Neutral water enters the area and undergoes a redox that results in the bioleaching.\""
    ],
    "authorname": "BobbyBrandt",
    "tags": [
        "adventure",
        "mystery",
        "romance"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/elements-pt-03"
}