{
    "title": "Three Strikes Ch. 20",
    "pages": [
        "\"What is my biggest pet peeve?\" I quizzed Shane, while watching him trim meat at the kitchen counter.\n\n\"People that don't avoid potholes when driving.\"\n\nI didn't miss the adorable smirk as he answered the question correctly and without hesitation.\n\nThanks to Google, I had a list of popular Newlywed game questions on my phone and had been grilling him for days. It'd been almost five months since we started over. Almost five months since Shane dropped the bomb that we weren't having sex until we got to know each other.\n\nA lot had happened in those months.\n\nWe finally professed our love. It wasn't hormone induced like the first time\u2014well, maybe a little. It was two weeks after the championship game. I'd come back from my third 'coffee date' with Jack and was feeling a bit like a pile of fresh horse manure. Jack showed no mercy, and most of our afternoon I felt like being an ant under a magnifying glass.\n\nConversation was casual and then, BAM, he'd ask what seemed like a really simple question, except it was only an illusion. Like, 'how'd it make you feel when Shane was disrespectful?'\n\nThat's what I'd consider an easy question. But then he'd ask, 'how do you think Shane felt when you did one of the many shitty and selfish things you did in return? (my words, not his).\n\n'Well Jack, he probably felt giant, pathetic loser, thanks for bringing it up!'\n\nAnyway, I had just come back from a particularly shitty conversation, where it was ever so kindly brought to my attention how superficial I was. How I projected my insecurity to those around me. It sounds so simple, but by the time I got home I was red hot and angry\u2014at myself.\n\nShane had come over for dinner. By the end of the evening I'd really wanted to end the no sex thing. I thought I needed the physical contact. When he stood his ground and said no, well, let's just say I hadn't taken his rejection lightly. Oh no. I'd not taken it lightly at all. He'd tried to bow out gracefully, to leave before things got worse.\n\nNone of that worked.\n\nWe ended up in the street, me giving the neighborhood a first-rate show. I screamed, yelled, and waved my arms wildly like the true psycho I could be.\n\n\"You're probably seeing someone else! That's why you don't want to touch me!\" I'd accused.\n\n\"Yes, I'm only with you for the theatrics. Who needs sex when I can have all this,\" he'd quipped, gesturing toward me and breaking the silence he'd held during most of my outlandish behavior.\n\nSlap.\n\nHe hadn't seen it coming. Neither had I. I don't know who it shocked more; me or him. The stinging in my palm broke whatever rage I'd been in and I instantly realized the error of my way. I stood there shocked, then rushed forward.\n\n\"I did not mean to do that!\" I apologized profusely. I'd hit him. He'd had every right to leave me; to storm out and never return.\n\n\"Are you done,\" he'd asked, after I finally stopped apologizing.\n\n\"Don't leave me,\" I'd begged.\n\nHe rolled his eyes. \"You're love of the arts is strong, but not nearly as strong as my love for you.\"\n\nI kissed the shit out of him. I would've kept kissing the shit out of him if he hadn't ruined the moment by smacking my ass ridiculously hard. I pulled back in surprise and rubbed my tender bum. \"What was that for?\" I asked.\n\n\"Tit for tat,\" he rubbed the spot on his cheek where I'd hit him minutes before, to drive his point home.\n\nIt wasn't the Nicolas Sparks moment we had the first time we'd confessed our love, but it was real and it was raw. I hadn't realized how much I needed to hear those words. It was the intimacy I needed and made waiting for sex a little easier. A little.\n\nShane's house had been mostly completed and he had asked me to help shop for furniture and home decor. I guess all the complaining I did, telling him that his style was lifeless; full of black and grey, had been enough to make him cave. I was far from an interior designer, but happily accepted his offer anyway. I thought it would be fun to go shopping with his money and buy a bunch of crap. His hesitation while picking out some of the pieces was apparent, but for the most part, he let me take the lead. He might have moaned and groaned, but in the end, I think he really liked it. It was still obviously Shane's home, and there was still a lot of grey and black, but now there was color and personality, too. We had a lot of fun making his house a home and, although we hadn't talked about it, I think we both had visions of our home.\n\nShane had also flown east with me and met my parents. We only stayed for the weekend, which was the perfect amount of time. I love my parents but they can be a bit intense. I figured it was best to take baby bites. They were ecstatic to have us visit. I hadn't dated anyone long enough to meet the parents. To be honest, I didn't see them as much as I should've, with or without a boyfriend. Regardless, Mom had gone all Joanna Gaines on steroids upon our arrival. Not that I was complaining, we were treated like royalty, but it's still weird to watch my parents be a bit psycho. Shane seemed amused when he first saw the shrine that was my former baseball life. He quite enjoyed reliving that time of my life and my parents had no qualms about answering all of his obscene amount of questions. Luckily, he still loved me when we flew home.\n\nSpeaking of family, I'd even been included into Shane's village. They'd typically have dinner twice a month. After being badgered by this mother, Shane invited me along. The first dinner was incredibly awkward. Shane's dad barely spoke the entire time. As I came around more, he had warmed up, until finally, after half a dozen encounters, he apologized. We're not best friends but it wasn't nearly as tense, either. I did feel like I had a better understanding into Shane's history. His dad is incredibly loveable and you can't help but want to impress him yet, he's a bit cold and judgmental. It makes the sting that much more severe. Shane still loved his dad, but it was clear a healthy distance had formed between them.\n\nWe also hadn't won a single game of Newlywed against DAKS. Of the twelve or so games we'd played, we had come up short every time. Now that we were sitting at eighteen weeks post pool party, I can admit that my earlier guesstimate of one to two weeks was a bit zealous. Which is why I was reading a list of questions from google in an attempt to finally win. Five months is a completely insane amount of time to refrain from all sexual activity. Yes, all sexual activity. Shane hadn't been joking. I was lucky to get a steamy goodnight kiss when we parted ways at nine-pm. Shane was insistent about that so we didn't 'tempt each other'.\n\nIt probably had something to do with the fact I'd try like hell to seduce the crap out of him every chance I got. In fact, it's the thing we'd fought the most about. I never had taken rejection well.\n\nI wasn't sure what was worse, going almost five months without touching Shane below the belt or consistently losing a 'who knows who best' game to his friends. Like, obviously we had a rocky start because we really didn't know shit about each other. I'd never admit it, but every time we lost, I felt like it only served to prove Shane's point.\n\n\"What would I say is your pet peeve?\"\n\n\"These questions,\" he looks up from the meat and winks. He's such a damn tease.\n\n\"I'm serious! You might enjoy not getting your dick wet but I don't.\"\n\nI stuck my lip out and pouted, upset he wasn't taking it as serious as me. I knew he was dying to fuck me but I think he also enjoyed watching me suffer, and his poker face was a lot better than mine.\n\n\"People that stand in the middle of the escalator, not allowing others to pass.\"\n\n\"Yesss,\" I danced in my chair. \"That's what I would've said!\"\n\nI followed Shane around the kitchen and quizzed him, then out to the yard as he started laying meat on the grill. When we first met, he wasn't all that great a cook but, since we weren't having sex, he'd been watching a lot of Gordon Ramsay shows and he seemed to have found his inspiration.\n\nI made him quiz me in return until the doorbell rang. Even then, we stayed outside. There was no need greet the bastards at the door, they were going to make themselves at home anyway.\n\n\"Do we get a handicap since Aaron and Kurt have been friends since the dawn of time?\"\n\n\"This isn't golf, there's no handicap,\" Shane shook his head at me.\n\n\"Well, there should be,\" I huffed.\n\nI was nervous. I really didn't want to lose a fourth time, granted we were playing against friends of thirty-five years, but still.\n\n\"How many scars do I have?\" Aaron asked Kurt as they joined us outside.\n\n\"Three,\" Kurt looked like a smug bastard. I didn't know why they all wanted me to lose so bad. I wasn't sure if they were trying to punish me, or Shane.\n\n\"Ah, so the same number of sexual partners you've had?\"\n\n\"Times like, a million maybe,\" Aaron glared at me.\n\n\"Three million women?\" I pulled out my phone and did a quick calculation, \"that's like, four-hundred and forty woman a day if you started having sex when you were in your mid-teens.\"\n\nShane looked up from the grill and shook his head, laughing at our banter. He loved that I got on with his friends. We set the table and dug in. Dinner with DAKS was always amusing. They shared stories and seemed to have a healthy balance of ribbing and caring towards one another. We had dinner once a week or so. Once a month we had dinner all together; DONNAS and DAKS. That was always a good time, too. We'd built a quite interesting village of our own. I couldn't even begin to describe the dynamic between us, but it made things interesting.\n\n\"Well, are you guys ready to lose another round?\" Aaron asked as everyone cleared the table. \"I don't think another month of celibacy would be such a bad thing. I mean, Shane's food has really improved.\"\n\nI flipped him off on my way to the living room. Not so bad for them, but I might die. We sat down and started playing.\n\n****\n\nMy heart was racing as we got down to the last two questions. We were one down, if we got this right then we'd be tied, which meant we had a real chance to win.\n\n\"Finish this sentence, 'I wish my boyfriend would pay as much attention to me as he does\u2014'\" Drew asked Shane, who instantly went to work on his whiteboard.\n\nI looked blankly at my whiteboard. Here's the really crappy things about the game; it isn't just about the correct answer, it's about anticipating your partners answer. What would Shane say I spent the most time on? What if Shane is thinking about what I would write as the answer? Do I answer for me or for Shane?\n\nIt's a real fucking rabbit hole.\n\nI looked up to see Shane frowning slightly at my delayed response.\n\nNo pressure.\n\nLast week Shane stopped by the house, unannounced. I was in the middle of self-care and my face donned a black mud mask. I'd tried to get Shane to join me but he refused. He wanted to go out to dinner right then, which I refused, for obvious reasons.\n\nSo, it's possible Shane might write something about self-care or facials. So, I scribbled it down. Then I second guessed myself.\n\n\"Oh c'mon, we all know the answer to this one!\" Drew shouted as I quickly erased my answer.\n\nHis comment wasn't helping the severe case of stress sweat I was experiencing under the intense pressure of getting the same answer as Shane. I looked at Shane, trying to gauge some sort of response, but got nothing more than a 'you seriously don't know this?' look.\n\n\"Ten\u2014,\" Kurt, Drew, and Aaron started counting down, \"nine, eight, seven\u2014\"\n\nMy heart was racing as I scribble the next thing that came to mind before aggressively slamming my board face down on the table.\n\n\"Okay! Done,\" I said breathlessly.\n\n\"Alright, let's see if we move on to the lightening round!\" Drew mimicked every cheesy game show host that'd ever lived.\n\n\"I wish my boyfriend would pay as much attention to me as he does his\u2014\" Shane lifted up his whiteboard so we could all see, \"hair.\"\n\nIt felt everything drained from my body. I'd been so tense with anticipation and hearing his words almost made me sick to my stomach. I felt shaky as every pair of eyes in the room watched as I lifted my board.\n\n\"Hair,\" I tried to sound confident but I was feeling a bit shaky.\n\nWe were tied. That was the closest we'd ever made it. Shane reached across the coffee table with a giant grin and gave me high five.\n\n\"You doubted yourself, that was the easiest question to-date,\" he gave me a pointed, yet playful, look.\n\n\"Well, there's a lot of potential answers to that questions,\" I said, making everyone laugh because it was painfully true.\n\n\"LIGHTENING ROUND!\" Drew interrupted. \"This is a one question wins all. If Gordy and Shane get it right, then they win. If they get it wrong\u2014dun dun duuuuun!\"\n\nDrews announcement was met with no resistance from Kurt and Aaron as they relax back into the couch and waited for us to proceed. I imagined they were done playing the same game every week. They'd been wanting to move on to some raunchy card game.\n\n\"Okay, what collegiate athlete did Shane jerk off to the most between the years two-thousand-three and two-thousand-eight?\"\n\nMy eyes widened. I had no clue. We had literally never talked about this, ever. I glanced at each of the men as they laughed at one another while Shane rolled his eyes at the question. He didn't even have to think before he started jotting the answer down.\n\nUn-shamelessly, I tried to peak. I wasn't above playing dirty. The guys cried foul and forced me to keep my eyes to myself.\n\n\"I didn't see anything! Jeez,\" I put my hands up as I sat back.\n\nI had to think. I knew Shane was part of the same division as I was. Pac12. He went to college in California. I think he graduated in twenty-zero-five, that was the year before I started at OSU. I was familiar-ish with some of the players from different teams. Daniel Sloan was a QB from Stanford. He looked hot as hell in his football gear. I'd jerked it a few times. Cal State had Ken Baker, stellar shortstop.\n\nIn reality, there was too many options. I hadn't even thought beyond Pac12. Even if his 'jerk fantasy' was in Pac12, that was twelve schools, each with baseball, basketball, football, wrestling, swimming, track and field, soccer, rowing, and golf. Did that include cheerleading? Or other male sports that weren't as widely accepted? The statistical probability that I'd get it right was not in my favor.\n\nIt was an impossible question. There was no winning. All I could go for was an answer that might get a laugh or two, then we'd try again next week. I laughed while scribbling down my ridiculous answer.\n\nI glared at the opposing team. They thought they were so fucking smug.\n\n\"Okay, Donovan,\" Drew encouraged me to start.\n\nI smiled brightly, putting on a show.\n\n\"Well Drew,\" I replied, over enthusiastically. \"Since you decided to give us a statistically impossible answer, I decided to go with\u2014\"\n\nI flipped my board around.\n\nDonny Allerton\n\nThe room erupted in woops and shouts.\n\nShane smiled and turned his board around.\n\nDonny Allerton\n\n\"Shut up,\" I said, not knowing how else to respond.\n\nHe nodded while his friends bumped into one another in celebration. I felt someone shove my shoulder but I only saw Shane. It was tunnel vision and nothing else mattered.\n\n\"We won,\" I stated and he nodded again. His lip curled playfully. Bastard had to be cute as hell.\n\nThe only thing that could get my dick harder, faster, than knowing we were finally going to have sex, was knowing that Shane had lusted after me a decade ago. Long before we'd ever met. Judging by the bulge in Shane's pants, it didn't look like he needed much help rising to the occasion. I decided not to waste another moment. Five months was plenty. I stood and striped my shirt off.\n\n\"Oh fuck,\" Aaron warned, realizing what was happening. \"Man sex! Get your crap and go!\"\n\nI barely registered the guys as they started to scramble out of the living room as I began unbuttoning my pants before shoving them down. I didn't care if there was an audience. They'd cocked blocked me for months.\n\nI was down to my underwear as jackets were being grabbed from the backs of chairs and keys were desperately searched for. I think the fact they were frantically trying to leave made it harder for them to find all their shit.\n\nI walked to Shane and took off his shirt, then started on his pants.\n\n\"Drew\u2014DREW!\" Kurt screamed, grabbing Drew by his collar and dragging him out the front door. \"Pervert!\"\n\nWhen Shane was deliciously naked and hard, I grabbed the small bottle of lubed I'd packed, you know, just in case. He was leaning back on the couch, touching himself while watching me, as I stood between his legs and opened the bottle.\n\n\"Boy scout,\" he teased.\n\nI pointed the bottled at him and squeezed. A stream of clear liquid circled his abdomen and groin, like chocolate syrup on an ice-cream sundae.\n\nNot expecting to be doused in lubed, he raised his hands in a protective manner.\n\n\"What are you doing? I'm a fucking slip n' slide,\" he shouted, laughter finding its way to the surface as he ran his fingers through the excess lube that covered his naked flesh.\n\n\"Preparation is key,\" I smiled, teasingly.\n\nHe was about to argue until I reached down and started stroking him shaft. He was toast. I leaned forward until one hand was bracing the back of the couch while the other continued to move effortlessly over his cock. I kissed his neck as he moaned. The more I kissed him, the louder he got. It could've been the kisses or it could've been the rubbing, regardless, it was driving me crazy. I straddled him until he was wedged perfectly in my ass. I rocked back and forth, teasing myself with his hot flesh.\n\nI couldn't wait anymore. I reached down and grabbed his massive erection and settled myself over it. I wasn't fully prepared, but I'd managed. I worked my down, slowly adjusting along the way. Shane let me lead the way, doing nothing more than desperately gripping my hips. He moved one hand to my own desperate cock, causing me to shudder with pleasure. I felt myself relax and slip a little more effortlessly until I was fully seated on his powerful rod. He pulled me forward until our lips met. There were no words to describe being that close to him.\n\nIt wasn't long until I was bouncing wildly, flexing every muscle and driving Shane crazy. There was nothing sensual about it. Every movement had a purpose. We were both chasing the end of a dry spell. I was on the edge of orgasm forever as I moved faster and drove myself on him harder and harder. I was so close. I felt uncoordinated as moved wildly while pawing Shane with my hands. I couldn't get enough.\n\nHe shifted slightly and pushed my pelvis. It changed the angle and the next thing I knew my body was being ripped apart as Shane thrusted up mercilessly. I was no longer able to function as the orgasm took over my body.\n\n****\n\nI woke up at some point. I was still straddling Shane, my head resting on his shoulder and his arms wrapped around my waist.\n\n\"Did you get it out of your system?\" Shane asked, realizing I was conscious again. I nodded. \"Can we do it my way now?\"\n\nI nodded, again.\n\nHe carried me upstairs. We showered, not because of cum. No, Shane wasn't impressed about the half bottle of lube I'd poured on him.\n\nThe rest of the night we spend making love.\n\nShane looked like he'd won the lottery when he woke up the next morning and I was still in bed. He flipped me on my back and covered me with his body as he kissed my face and ran his fingers through my hair.\n\n\"This is\u2014,\" his brown eyes were feral as they roamed over me, \"perfect.\"\n\nI groaned.\n\nI could feel it. We'd showered then gone straight to bed and sexed. Those weren't favorable conditions for my hair. But fuck if the look on Shane's face didn't make me completely forget that I probably looked like Gary Busey.",
        "****\n\nThe great thing about being the designated driver: no hangover.\n\nDAKS tried to convince us to join forces and join their team for men's league. We decline, of course. We wouldn't have as much fun if we weren't kicking their asses. Which we did, taking home the Championship title for the second year. We drank to celebrate while DAKS drowned their sorrows. Same book, different page.\n\nShane was a little wild. It was the first time I'd seen him shitfaced. He never really got drunk, but for some reason he went overboard that night. He was Mr. Social. Twirling various ladies around the non-existent dance floor while singing every song that played.\n\nI got video. Lots and lots of video.\n\nIt was hard to believe we'd been together for an entire trip around the sun. It had been a good year. We'd found a solid balance. We spent a lot of time together but still had our own space. Shane never let up on the whole staying the night only when I didn't work the next morning. I didn't love it, but it wasn't terrible, either.\n\nI was on the couch, snuggled up in a pile of blankets, watching the videos from the night before when Shane finally made his way in. He looked terrible. The night had been a terrible mistress. I opened the blanket and let him settle into couch. I loved when Shane was the little spoon. I ran my fingers through his thick hair.\n\n\"How are you feeling?\" I asked. \"Because you look amazing.\"\n\nHe grunted at the obvious sarcasm.\n\n\"Well, don't get too comfortable. We got to get up and moving if we're going to get all your shit packed and moved this week. You're the one that spent all night insisting that we move in together right away, so you're doing all the heavy lifting,\" a faux scolded.\n\nHe'd done nothing of the matter. He'd not made a single hint that he was ready to move in together, that's why I thought it would be funny to prank him. I wanted to see him sweat, just like he'd made me sweat over a year ago.\n\n\"I'm just glad you offered to move here, to my place. I know it's not as big as yours but I have better taste,\" I continued when he didn't say anything. \"Everyone agreed to help. They'll be here around eleven to start moving.\"\n\nAgain, not true.\n\nI smiled when I felt his tense body against mine.\n\n\"You're not second guessing, are you?\" I faked a disappointed tone as I tried to hold back my amusement. Any moment and he'd start freaking.\n\nHe whipped the blanket off the couch and sat up straight. His auburn hair a little crazy from a long night followed by fitful sleep caused by several trips to the toilet. He stood up and walked to my bedroom.\n\nI followed.\n\nI was leaning against the door frame as he got dress.\n\nI frowned. Maybe I'd gone too far. He wasn't yelling and screaming like I expected. He was totally silent, and it was freaking me out.\n\nThe calm before the storm.\n\nAfter pulling his socks on he walked to the in-suite bathroom, where he found two ibuprofen and chased them with a handful of water before wiping his face and darting past me and down the stairs. It was when he started putting his shoes on that I really started to panic. None of this was good. The prank was backfiring in my face. Just as I was about to tell him it was a joke, he turned and looked at me.\n\n\"Get dressed, D. I'm going to grab a banana and bottle of water. Do you want anything while I'm in the kitchen?\" He swatted my ass. \"C'mon, we need to get going, I have a lot of stuff and it won't pack itself.\" He stopped as he was about to enter the kitchen and looked at me. His demeanor was serious, \"Are you sure you want me to move in here? I have the big closet, it's not too late to decide my house is better. It's gated, double the closet space, chef kitchen. No? Okay,\" he walked back to me and pulled me against his chest. \"Suit yourself roomie. (He kissed my forehead), I'll meet you in the truck.\"\n\nWith one last swat to my bum he left me standing alone, stunned and unable to process what was happening. Meanwhile, he grabbed a few snacks and waters before rushing past me to the door and reminding me to hurry.\n\nBecause we were going to pack his stuff.\n\nBecause he was going to move into my house.\n\nWhich would become our house.\n\n****\n\n\"No,\" I stated firmly.\n\n\"Yes.\"\n\n\"Where'd you even get that?\" I asked as I looked at the most ridiculous sports poster I'd ever seen.\n\n\"A customized gift from the guys, for my twenty fifth birthday. Isn't it great?\"\n\n\"No, it's really not. To be frank, it's actually terrifying.\"\n\nHanging on the wall of our newly conjoined bedroom was a giant poster sized picture of nine-teen year old Donny Allerton. It was a candid taken during a practice or something, my shirt was off and I was concentrating on the upcoming pitch. I had quite a bit more muscle tone in the picture and my arms and abs looked amazing. I still had a nice body but even I had to admire what I had going on ten years earlier.\n\n\"Can we at least take a comparable picture of you, to hang next to it?\" I asked.\n\nShane cringed.\n\n\"I'm serious. I actually have the perfect shot in my head. Imagine it: you, shirtless in nothing but baseball pants, standing by the dugout. You have a baseball bat across your shoulders and you're using it to stretch from side to side. The shot would be a profile of your booty with your upper body twisting tightly in a stretch. All your muscles would be on display and it would be so fucking hot.\"\n\nThe thought of having Shane's body posed in a picture had me ready to throw him down. I stalked towards him, pushing him towards the bed until he was forced to shit down. The entire time his eyes sparkled in anticipation.\n\n\"Is this going to happen a lot if I agree?\"\n\nI nodded as I straddled his lap.\n\n\"Yeah, okay,\" he responded. His voice was deep and breathless as I reached between us, sliding my hands down the front of his pants.\n\n****\n\nI descended the stairs into a living room and kitchen that lacked any sort of birthday inspired decor. He knew better, and forgetting wasn't a valid excuse. I had a countdown calendar in the kitchen and I'd set numerous reminders in his phone started four weeks before. He had ample time to plan.\n\n\"What the heck, don't you know it's my birthday?\"\n\nShane looked up from the couch, where he'd been aimlessly thumbing through his phone, a slight panicked expression on his face.\n\n\"That's today?!\"\n\nBefore I had a chance to rip him to shreds for forgetting my thirtieth birthday, he got up from the couch and sauntered toward me. He was teasing me. He shooks his head and rolled his eyes at how gullible I'd been.\n\n\"This is how you treat the birthday boy?\" I pushed his chest away as soon as he was close enough to make contact.\n\n\"If last year was any indication, then yes,\" he pulled me forward and kissed my lips. \"Do you remember when we got together?\"\n\nI nodded. Obviously, I remembered that.\n\n\"You told me you needed me to keep you humbled. During your birthday you get a little out of control, and a lot demanding. As you're doting boyfriend, I'm simply following your directions.\"\n\n\"Yet, somehow you forgot the specific instructions that today is my birthday and you're supposed to buy me everything I want, and be my slave. Why am I standing here with no gifts? And why are you fully clothed?\" I demanded with a pout.\n\nHe was right, though. I took advantage of my birthday month, which made March a pretty unbearable month for everyone who wasn't me. Shane was a champ, though. I knew just how lucky I was to have him. Never had I expected he'd be so patient and accepting of all my quirks.\n\n\"I can probably rectify part of that,\" he smirked, \"but not until later. I kind of have something planned today. I didn't get you a gift, per say\u2014it's more of a, experience.\"\n\n\"Ohhh, tell me! Are we going somewhere?\" he shook his head. \"Mexico? (no) New York? (no) Hawaii? (no) Southern California? (no) Well (I raised my hands in defeat), I have no clue then,\" I pouted.\n\n\"Spa day,\" he smiled brightly. He was obviously proud of his gift, it was cute.\n\n\"That sounds fun.\"\n\nAnd it did. I wasn't someone who frequented the spa often, but I did enjoy selfcare. I didn't do actual spa stuff all that often. I did get manicures (emphasis on man) and pedicures occasionally when I went in for my bi-weekly haircut and/or body waxing. It was really thoughtful of Shane to think of something I'd enjoy, so much so, that I tried not to show the disappointment I felt knowing he planned something that didn't include the both of us. I'd rather spend my birthday with him than alone at the spa.\n\nShane looked at me with a slight frown, so I brightened my smile.\n\n\"You don't seem all that excited.\"\n\nUgh. I didn't like sad Shane. Sad Shane was like rain on your wedding day or spilling iced tea on your crotch. It was no good. I patted his cheeks with my hands to get his attention.\n\n\"No, no no no. I love it. It's so thoughtful and perfect.\"\n\nHe wasn't convinced. He wrapped his arms around my waist and pulled me into him.\n\n\"I can read you like book, D. You like it, but you don't love it. I've been thinking about this for months and I really thought you'd be more excited. I mean, you've been begging for this since we started dating.\"\n\n\"I've been begging to do it with you,\" I corrected.\n\nHe looked slightly annoyed at the suggestion, even rolling his eyes to emphasize the ridiculousness.\n\n\"Yeah, I know. That's why I thought you'd be a little more excited about it. I didn't book anything, so it's not a big deal if we do something else.\"\n\nI pushed him back and looked at him in confusion.\n\n\"Wait. What?\"\n\n\"I didn't book anything. I figured we'd go do that thing where they clip your nails and rub your feet. You've always just done it on a whim so I didn't think I needed to make an appointment. Honestly, I've been looking forward to it, I could use a trim,\" he held up his finger and wiggled them for me to see.\n\n\"You were planning on going to go with me?\" I yelled in complete shock. Never in a million years\u2014\n\n\"Well, duh. Did you think I wasn't going to spend your birthday with you?\"\n\n\"That's exactly what I thought you Yeti! This\u2014is the best birthday ever! So, you were thinking...mani/pedi?\"\n\nMy mind was reeling from the revelation. Shane's vision of selfcare was brushing his teeth and slapping on some Old Spice deodorant. Every time I walk around the house with a face mask on, he can't help but make fun of me.\n\n\"Sure. Whatever you want. Well, almost. I refuse to wax. I'd settle for manscaping, but nothing that requires removal via torture technique.\"\n\nI walked past him and tapped my fingers together in front of my face as I thought about it. I paused, then pivoted, until I was facing him again.\n\n\"I want to do it.\"\n\n\"Good. Still not the excitement I was expecting, but I'll take what I can get,\" he smirked. \"Let's go.\"\n\nI was excited. Beyond excited. My brain was almost to the point of shutting down because I was struggling to process the information. If we only did this one time, I wanted to get the max benefit.\n\n\"No. I want to do the spa day here.\"\n\n\"What? Here?\" His brows furrowed as he pointed to our surroundings. \"It's your birthday. You should be getting pampered by a professional.\"\n\n\"You're right, it is my birthday. But pampering you will be the best gift ever. I'm thinking\u2014we need to go pick up a few things first. If you drive, I'll google a list of things we need.\"\n\nI rushed around, grabbing a light jacket, shoes, wallet, phone, before finally tossing Shane his keys. For his part, he didn't put up a fight. He'd already resigned to do whatever I wanted. He drove my car as I searched my phone for supplies, reading them aloud to a nodding Shane. He didn't care, but bless his soul for pretending. We drove to a nearby beauty shop. It was like Sally Hansen. Anyone could go in, and they sold everything. Shane carried the basket as I filled it full of scrubs, oils, lotions, files, and anything else I thought we'd need for a full body work up.\n\nWhen we finished, we decided to grab an early lunch before settling in for the long haul. By the time we got home I was brimming in excitement. I opened the door as Shane carried in all the bags before setting them on the kitchen table. Then, he laid everything out while I set things up. I was wearing an outrageously big smile, and every time I looked at Shane, he was smiling in return. My happiness was his happiness, and visa-versa.\n\nWe started with a manicure. Nothing fancy. He wore his nails short to begin with, so I filed them, then buffed them out. I didn't need to do anything to him, but then again, I didn't need brownies, yet I still ate them, because I could.\n\n\"Can I at least return the favor? Pamper you in return?\" he asked.\n\n\"You really don't need to. This is satisfying enough.\"\n\nThen I thought about how cute he'd be if he was trying to do my nails and I realized it wasn't such a bad idea.\n\n\"Actually\u2014\"\n\nShane got to work on my hands and was every bit the adorable image I'd imagined. He wasn't about to switch professions or anything, but the way he concentrated so intensely as he filed my nails had my heart turning to liquid in an instant.\n\nWhen he finished and my nails looked about as good as you'd expect from someone of his low-level experience, we moved on to pedicures. Since the first day I laid eyes on him, I'd been slightly obsessed with his thick thighs and ass. It had been a focal of every dirty thought I'd had about him. Once I was positioned on the floor, with his foot in my hands, I realized the lower half of his appendage was just as stunning as their upper counterpart.\n\nFirstly, he had amazing feet. I never paid attention because he usually wore socks, only taking them off before bed. Surprisingly, after a year and half together, I'd never given him a foot rub, if I had, it must've been an afterthought to which I didn't pay much attention because his feet were amazing. His toes were freakishly perfect, not one oddly long or deformed toe in the bunch.\n\nSecondly, his calves were strong; covered in freckles and reddish body hair. I found myself enjoying the feel of my fingers gliding up and down his skin. His muscles under my skin was yet another reminder of the incredible strength I'd come to love about him.\n\nI'd had a dozen or so pedicures in my life but Shane's way by far the best. Maybe because it was him, maybe because he was enjoying it more than any of the ladies I'd had service me before. He wasn't in a rush to move to the next step, he was content massaging me with his hands. I was almost asleep with his finally finished.\n\n\"What's next?\" he was kneeling between my legs with a towel in his hands, looking genuinely happy to find out what we were doing next.\n\n\"Facials.\"\n\n\"Great,\" he smiled. \"I have combination skin and a bad t-zone,\" he said as he pushed himself up with the help of my thighs. I got up from the chair and looked at him.\n\n\"How do you even know that?\"\n\n\"I don't,\" he tossed a bottle of face scrub we'd bought earlier that day. \"I read it about it on here,\" he laughed which got him a playful punch in the arm.\n\nOnce we got to the bathroom, we washed our faces, then I grabbed the supplies and explained what we were going to do.\n\n\"This is a mask,\" I explained. \"It's going to help rid us of imperfections.\"\n\nWe each squeezed a generous amount on our fingers and started applying.\n\n\"Is it supposed to be black?\" He looked at the thick gel like substance like it was poison.\n\n\"Yeah, I thought you'd like it. More\u2014manly\" I spoke in the deepest voice I could muster, enticing a laugh from my mate. Once we finished applying an even layer, I grabbed my camera. \"Could we take a mirror selfie?\"\n\nIt was hard to tell, with his face covered in black paste, but he didn't look thrilled with the idea.\n\n\"For your personal use? Or is this going viral?\"\n\n\"Both?\" I questioned.\n\n\"For your birthday, sure,\" he said, resigning to the fates of birthday boss.\n\nWe were both shirtless and wearing nothing but our boxers as we stood together and took a couple of ridiculous pictures, not that there was any other way to take bathroom facial pictures. I immediately emailed myself the best ones, should Shane change his mind and demand I delete them from my phone, I needed back up. By the time we were done, the mask was ready to be peeled off. I'd watched enough Facebook and YouTube videos to know that it was going to be a painful process, but in the midst of everything I'd forgotten to relay the information to Shane.\n\nI barely started pulling the mask from the top of his forehead when he released a deep groan of pain and quickly grabbed my wrists, pulling them away from his face like they were on fire.\n\n\"You're ripping my face off!\"\n\n\"Well, we have to get it off. You must have a lot of imperfections on your face,\" I laughed at the wide-eyed terror on his face.\n\n\"Like my whole face?!\" he yelled.\n\n\"Calm down you big pansy. The faster we get it off, the faster it's over.\"\n\nI reached my hands up to start again but he quickly pulled away, shaking his head in defiance. I gave him a stern look, then preceded to try again. This time, he let me. Flinching when my fingers touched the edge of the mask that had already been slightly peeled away. He let out a deep groan of displeasure as I pulled the mask away from his skin. I got a quarter of an inch when he pulled his head away, again.\n\n\"I can't,\" his breathing was labored as he exhaled the breath he'd been holding. \"It's too painful.\"\n\n\"We have to finish this,\" I laughed, unable to control how funny I thought his reaction was.\n\n\"Can you just\u2014I don't know, rip it off? Like a Band-Aid?\"\n\n\"No, it has to be slow or it doesn't work the same. We can't have this be for nothing.\"\n\nI don't know if that was true or not, but I was enjoying the show too much.\n\nIt took ten minutes to get the mask off. I'd only get a few millimeters before he'd make me stop because the discomfort was too much. He'd jump around the bathroom, cussing as the mask hung off his face like dead skin. During the process I felt an overwhelming desire to kiss his cry baby lips, which I did, only to receive a bigger pout from my big, strong beau. When we reached the half way mark, around his nose, his eyes started watering involuntarily. As for myself, I was laughing the entire time. Every time he made a noise or flinched, I'd laugh. It was just too comical. And the moment the last of the facial peel left his skin, he ran to the mirror to check his face for damage.\n\n\"By some unknown miracle, my face is intact. Praise baby Jesus,\" he said as he patted his cheeks. He then turned to me and smirked, \"Now it's your turn.\"\n\nTo Shane's disappointment, my removal was substantially less dramatic than his. I don't know if it was the luck of the draw, if I was use to some of the pain that came with this type commitment to beauty, or if something deep within me wanted to piss Shane off, but I didn't have the same experience as he did. We looked at our peels and cringed at the all the nasty crap that came out of our pores.\n\n\"I still don't think it was worth it,\" Shane said.\n\n\"But look at us,\" I said, as we both looked at ourselves in the bathroom mirror. \"We're fucking beautiful.\"\n\nShane pulled me into his embrace and kissed me lightly. \"Belles of the ball,\" he said with a chuckled. \"What's next?\"\n\n\"Manscaping, full body exfoliation, shower, moisturizing, and a massage,\" I winked.\n\n\"You're really serious about this spa day. Nothings being left to chance, huh?\"\n\n\"Nope. Now sit there (I pointed toward the toilet), and spread your legs.\"\n\nI grabbed the personal trimmer I kept around for this exact thing and kneeled between his legs.\n\n\"You're not going to decapitate my dick, are you?\" he looked a little nervous as I started trimming his groin. I wasn't even touching the good stuff. Actually, I was. I had his dick in one hand as I moved it to the side so the skin stayed taught.",
        "He watched me with great interest as I carefully trimmed it all. There was nothing sexual happening yet he chubbed up, but only a little. It didn't take long before I was finished. He couldn't return the favor since I'd just gotten waxed a few days prior, not that I would've let his inexperienced hands anywhere near my gentleman sausage with electric trimmers.\n\nWe showered and I scrubbed his entire body with a body exfoliate. I made sure to get his butt and legs really good. That was more for my benefit than his, although I knew it would make his skin extra smooth and then I'd have to touch him more. He returned the favor, rubbing so gently I wasn't sure he'd actually touched my skin. Once we were dried, it was time to moisturize.\n\nI had thoroughly enjoyed every aspect of pampering Shane. His voluntary participation made it the best birthday ever. Hands down. But rubbing Shane down with my hands was going to top it all.\n\nI laid a sheet on the bed and told him to lay on his back. I started with his feet and, using generous oil, slowly worked my way up his leg, stopping just shy of his slightly hard cock. By the time I finished his other leg, his cock was fully erect...and fully ignored. I worked his arms, fully enjoying the ability to touch every inch of him, uninterrupted. I straddled his waist, careful not to touch him inappropriately as I massaged his chest and abs. I may have made it a game to tease him by grazing a little too close, but never close enough, causing him to moan lightly in frustration.\n\nWhen I finished with his front side, I had him flip over. He narrowed his eyes, clearly unhappy about flipping sides without being manhandled even a little.\n\n\"It's my birthday, not yours,\" I teased.\n\nI started at his feet again, working my way up his leg, spending plenty of time working his deliciously thick ass before repeating with the other leg. I moved up until I was straddling his ass. I watched as my own aching erection laid itself atop his crack, totally innocently.\n\nI poured the oil directly on his back. Starting with his shoulders and making my way to his butt. I could feel him relax as my fingers worked his skin. The hard muscles in his shoulders felt heavenly under hands. As I leaned forward to dig deep, I accidently burrowed my cock, just a little, between his mounds. I sat up and ran my hands the full length of his back and across the soft flesh of his beautiful backside. The more I rubbed his back, the more confident I got every time I passed his ass, going a little deeper each time.\n\nHis body was responding positively. We'd done this same thing a few times in the past. Twice I've had my fingers in his forbidden area, but the moment I used my voice to ask permission or to see if everything was okay, it would kill the mood and the fun would get cut short. He'd kind of hinted, in a round the bush sort of way, to shut the fuck up and do it.\n\nSo, this time, I wasn't going to say a word. All he had to do was say the word and I'd be off of him in an instant, and he knew it.\n\nI pressed gently, going deeper, before resuming my work on his back. When I went back the next time, I used a bit more oil and slid my thumb across his bud. This elicited a soft moan as he pushed his hips against my hand.\n\nI slyly let my own erection settle deep in his flesh while I massaged his back, leaning all the way forward and applying ample weight to my deep tissue massage.\n\n\"I love rubbing your back,\" I said softly against his ear. I knew these words were safe since my hands were on his back and I wasn't referencing the fact my own hardness was rubbing up and down his sensitive parts.\n\nI slowly moved against him as my hands rubbed his back. Applying more oil, I rubbed him until I worked one finger in him. I could feel tense up so I asked if I could touch his dick as snaked my free hand around. He lifted his hips in the air, giving me dual access, to both is cock and his ass. I slowly stroked him until I had three fingers tenderly stretching him.\n\nIt was now or never. I let go of him and grabbed my own painfully neglected steel rod. I closed my eyes and concentrated one what I was doing when I felt the tip of my mushroom head pressing against his waiting bud. I wanted him to enjoy it. I knew this was a big step for him, for us. He was giving me such a big part of him and I didn't want there to be any regret.\n\nI stroked him as I slowly pressed myself forward. I didn't have to say anything, he'd had enough sex to know exactly what he needed to do. When I finally reached as far as I could go, I laid myself on top of him.\n\n\"You feel so good, so fucking amazing. You're blowing my mind right now.\"\n\nMaybe I shouldn't have said anything, but I couldn't help myself. I was deliriously happy. After what felt like an eternity of whispering terms of endearment in Shane's ear as I remained fully hard and fully seated in his ass, I started moving. It was slow for a while, but that got harder and harder to maintain. I pulled his hips back and soon I had a steady rhythm. He was so tight around me that I thought I'd go insane. I could feel his muscles constrict against me as he brought himself pleasure with his hand.\n\nIt wasn't long before I could feel it building. I grabbed his ass and spread his cheeks so I could watch him devour me. It was beautiful. A sight I never thought I'd see. I slid my hands down to his waist and pressed him into the mattress as I thrusted harder.\n\nHe was beautiful beneath me.\n\n\"Can I flip you? I want to see you,\" I asked, breathlessly.\n\nI was a little disappointed when he shook his head, no. As much as I desperately wanted to see his face, I understood. He needed to process this is own way. If he needed the privacy, then I'd give him that. I'd talked to Jack enough to know that this was therapy for Shane.\n\nI was close.\n\nI couldn't stop.\n\nWhen the orgasm finally came, it felt like it was never going to end. I couldn't help but squeeze whatever flesh my hands were touching as I came harder than ever before.\n\nIt took me a minute to recover. I was still slowly rocking against him; grinding our bodies together. That's when I realized he was still touching himself. I nudged him over and dove between his legs, engulfing his length in one motion. I pressed my hand against his hole and drank him down when he came a few minutes later.\n\nI crawled up his body and snuggled against him as he pulled the sheets over us. It had been a long day of pampering and, even though it was still technically early, I knew we were calling it a night.\n\n\"How are you feeling? Was it okay?\"\n\nHe didn't reply right away, but after a minute he squeezed me.\n\n\"On one hand, it was amazing, but I couldn't get out of my own head and I kept waiting for\u2014something bad, but it never happened. I think I'll enjoy it more the next time, now that I know what to expect.\"\n\n\"You want to do it again?\"\n\n\"Not this second, no,\" he laughed. \"But yeah, we can do it again. You've been so patient about this whole thing. Never pushing me like the others. I love you more than I love myself and I want everything with you, including this. I want this to be natural. I don't want to feel embarrassed, scared, or ashamed\u2014not with you. So, I want to do this again, and again, and again, until I feel nothing but love. I want to be able to look at you while we make love and not worry about anything.\"\n\nThe Yeti always knew exactly what to say.\n\n\"I love you. This is the best birthday ever. How can repay you?\" I asked.\n\n\"Stay with me until your next birthday. Also, waking up with you sucking my dick would be nice.\"\n\nAsshole.\n\n****\n\n\"This is turning into a really big deal,\" I complain as I pace around the lobby.\n\n\"I'd hardly call a few extra bodies a 'big deal'.\"\n\nShane's nervously tapping the envelope that held our future, against his leg.\n\n\"It was just supposed to be Aaron and Alle, now it's DAKS and DONNAS. That's going to seem like a big deal in the quiet little courthouse.\"\n\nJust then the doors open and I stand wide eyed as my parents walk in.\n\n\"Mom, dad? What are you doing here?\"\n\nBefore they have a chance to answer, our friends follow behind. I look at Shane, asking why my parents are here. He looks just as surprised as me. We turn back to our friends and notice the incoming foot traffic doesn't stop. Coming in behind DAKS is their entire village. All their parents, siblings, and grandparents. By the time the door finally closes, the lobby is completely full of people.\n\n\"What's going on here?\" Shane asks as his eyes take in a few dozen more people than anticipated.\n\n\"I accidently told my dad, who told my mom, who told\u2014everyone else,\" Aaron says, looking genuinely sorry about the intrusion.\n\n\"When Aaron told me everyone knew, I figured your parents should know also. Surprise?\" Nick anxiously throws his hands up.\n\nThere isn't much we can do at this point except go with the flow. Shane's family is notorious for inviting themselves into every aspect of each other's lives. It's a quality that I both love, and hate.\n\n\"Kelly, Allerton?\" A sweet voice rings from the door.\n\nShane looks at me, his face showing the adorable smirk I've come to love, and grabs my hand.\n\n\"Are you ready for this?!\" he shouts at the lobby full of wedding crashers, who whoop back as they joyfully file into the courtroom.\n\n\"Are you ready for this? Ready to get married in front of God and our nosey as fuck family?\" I asked.\n\n\"Are you? No more strike-outs. Just a life of home runs.\"\n\nYeah, that sounds good."
    ],
    "authorname": "Mrsgnomie",
    "tags": [],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/three-strikes-ch-20-1"
}