{
    "title": "Lonely in Berlin",
    "pages": [
        "Note: This story is a transgender erotic romance involving a dominant male and a shy, but very dirty, submissive t-girl. It's relatively long, it's a slow burner, and it's emotionally involved. It's told from the t-girl perspective. It is not a quick jerk-off story; however, if you're willing to embark on the journey, it gets filthy towards the end.\n\nIf you're looking for a tale where a t-girl dominates and fucks a guy, this is NOT the story for you. The t-girl here is very submissive. If you want a dominant t-girl story, check out 'Fucked by Hope' in my profile instead.\n\nSo with those warnings in place, let's begin :)\n\n* * * *\n\n\"Elfi,\" a male voice barked, directly to my left. I winced as the sound exploded against my eardrums, and angry flecks of saliva slapped against my cheek. \"Get back to fucking work. Now!\"\n\nIf that sounded harsh written in English, let me tell you it actually made my skull vibrate in the original German. German is a perfect language for shouting.\n\nThe words came from my boss, Klaus Richter, Head of Entertainment at the Christmas market in Berlin, where I worked. My muscles tensed, my hands started to tremble, and I immediately dropped the hat with the cute koala face on it back onto the stall. \n\nI turned ninety degrees to face, the fat, bearded Prussian leaning down towards my face. I arched my spine backward as his face got even closer to mine. My five-foot-three body felt even smaller than usual next to this flabby, six-foot giant.\n\n\"I don't pay you to shop, Elfi. I pay you to work,\" he rasped, his spittle again spraying over my face and down my glitter-covered cleavage.\n\n\"Sorry, Herr Richter,\" I said, meekly, desperately trying to stop myself flinching at his closeness, \"but it's meant to be my break.\"\n\n\"If you want to take a break, take it in the van. Have you ever seen an angel out shopping?\" Herr Richter said. He let his words hang triumphantly in the air for a second. \"No, you haven't, have you? Nor has anyone else. That's because angels don't fucking shop.\"\n\nHis comments referred to the fact I was dressed as an angel, a 'Christmas angel,' in fact. It was my job to walk around the vast market with two other girls, holding lanterns and providing eye candy to the onlooking visitors. Apparently, we were a major draw.\n\nI gulped, not knowing how to respond. Of course real angels don't shop... but nor do they tend to work at Berlin Christmas Markets. And even if they did, I'm willing to bet they wouldn't strut about in tight white jackets, unseasonably short, white skirts, push-up bras, and stiletto knee-boots. I'd also be willing to bet that their halo wouldn't be constructed out of wire and tinsel.\n\nMy heart thumped in my chest as my mouth opened and closed pathetically.\n\n\"Save your excuses,\" he snarled. \"It's Christmas Eve. We don't have time for breaks anyway. Go find Heidi and Mitzi and start marching.\"\n\n\"Yes, Herr Richter,\" I whispered. I hung my head so that my long, blonde hair shrouded my humiliated, red face. I shuffled past my unmoving boss, out from the protective shelter of the stall and into the snow that drifted down from the black Berlin sky. I wiped the globs of Herr Richter's saliva from my face and chest, and avoided the temptation to look back at the hat. Objectively, it wasn't anything special; in fact, it was rather cheaply made, but it had a koala on it, and that was enough for me. I loved koalas. Or at least, I loved what they represented to me.\n\nMy mini-obsession with the animal had started around five years ago and had recently become more intense. When I had fled my parents' house, just after I'd turned fifteen, my grandmother took me in. To cheer me up, she had bought me a soft toy koala. It wasn't much, but it gave me something to cuddle during the long nights of tears that had come from having my life torn apart.\n\nThe reason why I had left my parents' home was an open secret in my family. It was because I was trans, and that was something neither my mother nor my father could accept.\n\nTwenty years ago, I was born in Munich and given the male birth-name, Eckhardt. It was a hard-sounding name, and I always hated it. Unfortunately, it wasn't the only thing I hated. I hated my clothes, my short hair, and the fact that people kept calling me a boy. And yes, maybe I was a boy, at least in the outward physical respects, but I knew I was a girl on the inside. My soul had always been female.\n\nWhen I was a child, my parents had just laughed off my predilection for dressing up in girls' clothes and my assertion that my real name was 'Elfi.' However, as the years passed, they came to realize my belief about who I was wasn't just a phase. In fact, as puberty started, my terror as to what I was becoming developed a new intensity. I was a girl trapped inside a male body, and that body seemed to become more masculine by the day. I became unruly, my grades fell, and I ripped up my male clothes.\n\nMy despairing, and increasingly angry, parents sent me to psychiatrist after psychiatrist. They kept getting an answer they didn't want. They kept being told that my 'gender dysphoria' was so intense that the only option was for me to begin treatment to become a girl physically, and the earlier, the better. But that was not acceptable to my parents. They wanted someone who could change who I was mentally, so I would be the boy that they knew I was meant to be.\n\nI begged them to change their mind and to let me start hormones before my bone structure had set, or my face had grown stubble, but they resoundingly refused.\n\n\"I might not have a real son,\" my dad would rasp, \"but I'm not going to pretend like I've got a daughter.\"\n\nMy mother's anger developed into outright rejection. My father's anger developed into violence. After the second bloody nose in one week, supposedly dolled out to, \"man me up,\" I knew I had to leave. I fled to the one person I could trust: my maternal grandmother from Augsburg, Grandma Jutta. She was the grandma who always kept a secret box for me: one with dresses and makeup and other girlie stuff. She could see past my male exterior and focus on the girl within. Even when I was little, she'd sneakily call me 'Elfi' when nobody was watching.\n\nGrandma Jutta looked after me, and cared for me, and supported me through my transition. It had caused a family schism, but Grandma was tough, and she fought my corner. Few people were brave enough to argue with the undisputed matriarch of the family.\n\nDespite my mother and father's protests, Grandma did what the doctors recommended. She allowed me to transform into the girl I always knew I was. I took hormones and watched the results slowly unfold. My shoulders ceased to grow broader, and my facial and body hair growth stopped before it ever began. I developed breasts, I developed an ass, and my face shape softened and feminized. I soon became passable. In fact, I'd even allow myself to say I became pretty. Nobody but those who were told would ever suspect my past.\n\nI'd lived with Grandma Jutta for four years.\n\nThe first year was tough. I was young, stupid, and prone to tantrums- tantrums that I sometimes directed my grandma. I still feel guilty about them now. In the background, the family was sniping, and I was angry that the hormones were taking their time to work their magic. I looked in the mirror, and I still saw a boy.\n\nThe second year was better as my appearance became undeniably feminine. By the latter half of the year, nobody I met thought I was a boy. I looked like a girl, and I was treated like a girl, even if I was legally still male.\n\nThe third year was horrible again, as I geared up for the awful, humiliating, and costly \"Transsexuellengesetz\" process that would allow me to change my gender in Germany legally.\n\nThen in the fourth year, after the court had deliberated, I was finally granted my wish and legally became a girl.\n\nFor ten months, I was happy, really happy. Then, last Christmas, Grandma Jutta died suddenly, aged seventy-seven.\n\n* * * *\n\nI pushed my way through the market crowds. As I passed the trinket stalls, the bratwurst stands, and the gl\u00fchwein vendors, the cold winter breeze lapped at the hem of my skirt, and icy flakes of snow stung against my exposed skin. It was fortunate that my cold-tolerance had always been high, otherwise every night since late November would have been torture.\n\nI suspected Heidi and Mitzi would be enjoying a cigarette behind the old Volkswagen van that doubled as our changing room. If koalas were my indulgence, tobacco was theirs. My suspicions proved correct. My two blonde co-angels were exactly where I'd thought they'd be.\n\n\"Klaus says we need to get back to work,\" I said, my voice still trembling from the encounter.\n\n\"We're on our break,\" said Heidi nonchalantly, expelling a leisurely plume of smoke from her pink, glossed lips.\n\n\"I know,\" I said, with a sigh, \"but he says we don't have time for breaks tonight.\"\n\nMitzi laughed, taking a drag on her own cigarette. \"Klaus can go fuck himself,\" she said.\n\n\"I kinda want to say that too,\" I said, looking at them with pleading eyes, \"but it's our last night, and I don't want to piss Klaus off. I need him to put a good word in for me if I'm going to get any more work like this.\"\n\n\"You go work then,\" said Heidi, sneering, \"be a good girl for your darling Klaus.\" Then she exhaled, deliberately directing her plume of smoke towards my face.\n\nI stifled my reflex to cough.\n\nNeither Heidi nor Mitzi cared about future work. They were college students and came from good families. For them, the angel job was just a bit of extra cash to buy some new jewelry in their favorite boutiques along Kurf\u00fcrstendamm. For me, it was a necessity.\n\nWith the money left over in my grandma's will, I'd secured myself a small flat in Berlin. It wasn't enough to buy a place, but it did help with the rent.\n\nI'd chosen Berlin for two reasons. Firstly, I'd heard rents were cheap, a hang-over from the time when the city was divided and few people, barring broke artists and spies, actually wanted to live there. Secondly, it was meant to be a city of tolerance, far removed from the Bavarian conservatism that I'd been used to.\n\nOn both fronts, the popular beliefs had proven correct. Rents were still relatively cheap, and Berlin was, indeed, tolerant. It was safe to be openly gay or lesbian on the streets, and I saw same-sex couples holding hands and kissing multiple times a day. I was, however, still feeling out how accepting Berliners were of people who were trans. Most of my time had been spent in a constant search for work. I'd shifted from one temporary, inconvenient, low-paying job to the next. I'd made a few friends, enjoyed a few sexual encounters, but my search for romance had resulted in soul-destroying failure.\n\n\"Please, guys,\" I begged, \"I don't know how many times I've covered for you over the last month. Do me a favor. Please.\"\n\n\"You're not our boss. And we've covered for you too,\" said Mitzi smugly. \n\nShe was technically telling the truth. However, she avoided the fact that I'd covered for them five or six times each, whereas, between them, they had covered for me precisely once.\n\n\"Yeah, run along now, Elfi,\" Heidi said. \"Be an angel.\"\n\nI suppressed my rage, grabbed my lantern, and walked off into the crowd.\n\n* * * *\n\nAs I stomped through the crowds of people, I saw a young woman walk with a stroller. She was engrossed in conversation with what looked like her husband. The boy in the chair was probably around two years old. He was holding a brightly colored woolen doll - a decidedly female looking doll. As the family passed me, I smiled and waved at the child. He laughed and flapped his hand back at me excitedly. He continued waving for so long that I had to swivel my head as the stroller retreated behind me. Then I saw him drop his doll to the snow-covered ground. Almost instantly, his face started to change. Tears began to come. He reached after the toy in futility, but in the busy crowd, it seemed his protests went unseen and unheard.\n\nI rushed towards the fallen toy, grabbed it from the ground, and brushed off the snow. Then I raced after the stroller. Before I could reach it, a big hand firmly grabbed my arm, jolting me to a standstill. My body convulsed in shock, and I almost dropped my lantern and the toy.\n\n\"Elfi,\" a familiar harsh voice shouted in my ear. It was Herr Richter again, and he sounded madder than ever. \"What the fuck are you doing? And why are you on your own? I told you to get Heidi and Mitzi.\"\n\nI gulped. I'd been wandering around on my own for the last twenty minutes. Heidi and Mitzi were nowhere to be seen. But what could I do?\n\n\"They're finishing their cigarettes,\" I murmured. \"I'm sure they'll be here in a minute.\"\n\nI looked desperately at the rapidly disappearing stroller and the screaming infant who was straining towards me. Herr Richter, slapped the doll from my grasp with his free hand, sending it falling into a pile of slush. Then he grabbed my arm tighter and pulled me towards him. I almost lost my footing as I stumbled across the snow-covered ground.\n\n\"Fuck the doll,\" he screamed at me. \"It's no toy for a boy. And I told you to tell the other girls that there were no breaks tonight.\"\n\n\"I told them,\" I whispered. My eyes flicked from Herr Richter's red face, down to the doll on the floor.\n\n\"You're fucking useless,\" Herr Richter said. \"I bet you didn't even speak to them.\"\n\nMy throat went dry.\n\n\"I promise Herr Richter,\" I said, on the edge of audibility. \"I... I just don't have the authority that you have.\"\n\nHerr Richter leaned down so close I could feel his breath on my face all over again.\n\n\"If I tell you to do something, I expect you to do it, okay? That's how employment works.\"\n\nI yelped as his grip became tighter. How was I meant to respond? My mouth hung open.\n\n\"Sorry, Herr Richter... I tried,\" I stuttered.\n\nThen I heard another voice I recognized, or at least half-recognized.\n\n\"Fr\u00e4ulein, is this man bothering you?\" it said.\n\n* * * *\n\nAbout an hour earlier, I'd walked with Heidi and Mitzi into one of the temporary wooden beer halls that littered the market. This one was part of our regular marching path. The room had two doors, one each end of the building. Our route took us through one door, across in front of the long bar counter, then out the other.\n\nOur arrival prompted whoops of joy from the patrons. Glass clinked, and loud cries of \"Prost,\" the German equivalent of \"Cheers,\" filled the room. I didn't dare look at anyone directly, but out of the corner of my eye, I could see the stares from the customers, and the broad smiles on Heidi and Mitzi's faces. I tried to emulate them, but my shyness got the better of me. I fixed my eyes straight forward and tried to suppress the rapidly increasing pinkness of my cheeks.\n\nJust as we were about to leave the building, I heard someone shout in my direction in American-accented German.\n\n\"Hey, shorty!\"\n\nI knew the comment was for me. Heidi and Mitzi were tall, around five-nine or five-ten. I was the short one, even in heels. \n\nI turned to see who had called out to me, and my eyes met with those of a handsome man. An exceptionally handsome man, in fact. He was tall, rugged-looking, with tan skin and dark brown hair. A long black coat was draped casually over his shoulder. His legs were clad in a pair of dark-blue jeans, and a short-sleeve plaid shirt adorned his upper body. The shirt wasn't tight, but I could instantly recognize his strong, broad chest and powerful arms. I felt my mouth open involuntarily, as a rush of excitement surged through me.\n\nThen he smiled a wide smile. It was like a wicked beam of mischief. It hit my eyes, pierced through my defenses, and turned my brain into a jumbled mess of desire. My knees went weak, and my cock started to expand - at least as much as it could, I had it securely tucked back between my legs.\n\nI couldn't stop staring back.\n\nThen I walked smack into the door frame of the exit to the beer hall.\n\nI yelped in surprise and pain, fell to the floor, and dropped my lantern, which clattered across the floorboards. The candle inside snuffed out, and a little trail of molten wax dribbled onto the wood. Then the laughter hit me, both from the room and from the other girls. Almost instantly, the red heat of embarrassment rose up my chest, consumed my neck, and blazed out from my face.\n\nIn a slight daze, I scrambled on the floor, checking my face for blood and correcting my halo. Then I saw a big male hand being held out for me. Without thinking, I took it, and it drew me upwards. I clumsily stumbled and reached out with my free hand for stability. My hand touched the man's chest. Beneath his shirt, I could feel the muscle. My lips parted, I looked up, and I saw the guy again. He was grinning even wider.\n\nMy mouth expelled a dizzy, nervous pant.\n\n\"Are you okay?\" he asked, in American-accented German.\n\nI nodded, unable to think of the right words to respond with, my mind was too clouded with mortification.\n\nHe leaned forward, brushed my hair from my face, and kissed me on the forehead. My knees buckled all over again. The crowd laughed, but I managed to stay standing.\n\n\"Do you need your lantern relighting?\" he asked in German.\n\nI nodded. \"Ja, bitte,\" I said meekly in German, before switching to English. \"Yes, please.\"\n\nHe retrieved the silver-colored contraption from the floor, pulled a lighter from his pocket, lifted the little lid on top of the lantern, and re-lit the candle.\n\n\"There you go,\" he said, also switching to English.\n\n\"Thank you,\" I whispered. I released his hand, then bolted out of the beer hall. A chorus of cheers erupted behind me.\n\n* * * *\n\n\"Fr\u00e4ulein, is this man bothering you?\"\n\nYes, his accent was distinctly American. And no native German uses the term 'fr\u00e4ulein' to refer to a young, unmarried woman anymore, at least not in Berlin.\n\nThe expression on Herr Richter's face changed, but he didn't let go of my arm.\n\n\"He's my boss,\" I whispered, letting context say the rest.\n\nThe American placed his hand on Herr Richter's chest.\n\n\"I don't think that's how you're meant to touch your employees,\" the American said.\n\n\"This is none of your business,\" Herr Richter growled back. \"Get out before I get security to kick you out.\"\n\n\"Let her go before I knock you out,\" the American replied.\n\n\"The guards are going to fucking pummel you,\" Herr Richter sneered.\n\n\"You wanna bet how much I could pummel you in the time it takes them to get here?\" he responded.\n\nThe two men's eyes locked. I tensed, inhaled, and held my breath as they squared off against each other.\n\nThen Herr Richter released my arm.\n\n\"Now piss off and let your angel do her job,\" the American said.\n\nHerr Richter snorted and marched off.\n\nI looked up at the American. He was breathing heavily through his nose.\n\n\"Thank you,\" I whispered. I reached down with a trembling hand and grasped his palm. \"Thank you, very, very much.\"\n\nI looked into his eyes; they were magnetic and powerful. My toes curled in my boots.\n\nThen I released his hand and turned away. I knew there was no way he'd want me if he knew what kind of girl I was.\n\n* * * *\n\nAlthough it was me who walked away from him, and although I was sure that nothing would ever happen between us, I couldn't help but look out for the American for the rest of my shift. The image of him smiling at me was indelibly inked into my mind. Even once Heidi and Mitzi had rejoined me, I couldn't stop myself from carefully scanning every stall.\n\nBut no matter how far we marched, he wasn't anywhere to be seen. With every step I took, my heart sank a little deeper. The American had saved me, then I'd stupidly just run away. He had probably already left, and I'd blown my chance to talk to him. Why did I have to be such a fucking idiot?\n",
        "But then again, what else could I have done? Even if he was attracted to me, he didn't know I was trans. Revealing myself could be dangerous, and he was a lot bigger than me. What if he got mad and accused me of tricking him? And even if he didn't get mad, he'd probably reject me. And even if he didn't reject me, he'd only want to fuck me.\n\nMy past year had been littered with rejection and heartbreak. Sure, I'd had a few nights of passion. Every so often, I'd use a specialized dating app to find a hot guy who'd let me greedily suck on his cock, or fuck me until I spurted all over the sheets. Once a guy had even given me a delicious spanking. Unfortunately, I just couldn't find someone to date me.\n\nAt best, I was a dirty little secret. Some guys might want me as fuck-toy, but they would die in a ditch before they let their family or friends learn about me. They might fantasize about going to bed with a girl with a dick, but they wouldn't take one home to mama and papa. The pinnacle of my romantic achievement was to be a guy's fuck buddy for a month or so. That lasted until I hinted that I wanted something more serious. The look of horror on his face when I said it would be nice to meet his friends still sometimes makes me cry. \n\nThen there were the guys who wanted me for one night and one night only. It was helpful, at least, when they were upfront about what they wanted. At least then, I had my expectations. I could just enjoy the sex, and leave before I got any stupid ideas that they might want me as a girlfriend. Sadly, some guys didn't even give me that basic courtesy. They just feigned romantic interest to get sex. Their deception was not only unnecessary but also left my heart in tatters. \n\nMy last experience, where I woke up in a guy's bed after a night of fucking, only to be asked, \"why are you still here?\" left me on the verge of a complete breakdown. The worst thing was, he had seemed so lovely and charming the night before. I actually thought I'd finally met someone who was boyfriend material - but I was wrong. The experience had scarred me and left me numb to the prospect that anyone would ever actually love me.\n\nThat's why I'd invented my two rules: rules to keep me safe, physically, and emotionally.\n\nRule 1: I'd only reveal myself when I was sure it was safe to do so. \n\nRule 2: If I did have sex, I'd be the first to leave. I'd make a point of it. I'd go before anyone had the chance to kick me out. At least that way, I got to make the decision and could spare myself the emotional battering of yet another rejection. \n\nBesides, if I could lower my expectations about romance, at least I'd be able to live out some of my dirty, submissive sexual fantasies. That was better than nothing. At least I'd only be lonely, not lonely and sex-starved.\n\n* * * *\n\nIt was 9 pm, the end of my shift. I dumped my halo and lantern in the van and grabbed my handbag. I made a quick trip to the bathroom to adjust my panties as they had been rubbing a little as I walked. I always wore a particular brand, made especially for transgirls. They were slightly stiffer and had more spandex in them than regular panties. They hugged my body tightly and allowed me to keep my penis and testicles tucked back securely between my legs. They hid my bulge very well, which was incredibly important when wearing a skirt as short as the one that went with my angel costume.\n\nAfter doing a bit of fiddling, and retucking myself, I'd reassured myself that everything was in place comfortably. I marched back out into the market with my handbag slung over my shoulder. I would usually head straight to the nearby S-Bahn station to go back to my apartment, but on this occasion, I couldn't help but make a final loop of the stalls. Maybe, just maybe, the American was still here.\n\nI walked quickly, twisting my head from side to side. Even if nothing was going to happen, I wanted to thank him properly. I must have seemed so rude by just walking away after he'd scared off Klaus. Hopefully, he'd smile at me. Perhaps he'd even hug me so I could feel his body again. That might give me a pleasant memory to jerk myself off to when I was back in my apartment.\n\nI'd almost given up, but then I saw him. He was standing, sipping a steaming mug of gl\u00fchwein, on a wooden terrace adjoining a drinks stall. The terrace was covered in an awning, giving partial protection from the elements, but the sides were still open. Unfortunately, he wasn't alone. Two attractive women were fawning over him\u2014women who, no doubt, had sweet, wet pussies for him to fuck. An indignant hiss of air left my nose, sending two little plumes of vapor shooting out into the cold Berlin sky.\n\nI slowed my pace, hoping that he'd notice me as I walked past the open bar-area, but he didn't. He was still listening to the women next to him. So I swung around the stall and made another pass. Feeling stupid and self-conscious, I forced myself to walk seductively and sexily. I unzipped my jacket, pulled my vest top slightly lower, and stuck my chest out in front of me. I walked by the bar area again, but he still didn't notice me. I sighed again and rested against one of the thick, vertical, wooden beams that supported the awning. 'Please notice me,' I mentally begged into the nothingness.\n\nMy back was to him, but I could still see him in the reflection of the jewelry stand opposite. One of the girls was touching his arm. They were both giggling when he spoke. They definitely wanted him to fuck them. I bet he wanted to fuck them too. \n\nThen his eyes flicked up for a second, and he looked at the jewelry stand. He briefly scanned the stall and then saw me staring in the reflection. Instantly, I looked away, my cheeks becoming red all over again. I cursed myself, yet again, for being a socially awkward idiot.\n\nThen I heard footsteps clunk over the wooden boards behind me. I inhaled and held my breath. I didn't dare look, but I knew it was the guy. My skin tingled. The hairs on the back of my neck stood on end, and my muscles tensed.\n\n\"Hey, Angel,\" the guy's deep voice called out in English.\n\nI felt a hand on the small of my back, and a delicious, light, masculine scent snake up my nostrils. I gulped.\n\n\"Hey,\" I whispered back.\n\nUsing all my strength, I forced my muscles to shift round to face him.\n\n\"Jack,\" he said, holding out his hand.\n\n\"Elfi,\" I murmured, taking his hand.\n\nI gulped, then breathed quickly.\n\n\"I'm sorry,\" I blurted. \"I'm sorry for running away from you earlier. I had work to do... I couldn't be distracted... I'm sorry.\"\n\nJack laughed. \n\n\"It's okay, Elfi,\" he said with an amused voice. \"I just thought you were shy.\"\n\n\"And thank you for helping me up in the beer hall, and scaring off my boss,\" I said, as I drew up next to him, still holding his hand. \"He can be really mean.\"\n\n\"No problem,\" he said, smiling his broad smile. \"Care to join me for some gl\u00fchwein?\"\n\nI tensed again. Yes, of course I wanted to join him, but I couldn't.\n\n\"I can't,\" I said meekly. \"I've got...\" \n\nMy words cut out as I found myself unable to generate a lie. I paused as my mouth flapped.\n\n\"You've got family to get to?\" he asked, raising an eyebrow.\n\nI looked into his eyes.\n\n\"No,\" I said.\n\n\"You've got a party to go to?\" he suggested.\n\nI shook my head.\n\n\"You've got to pickle some sauerkraut to go with your Christmas pork knuckle.\"\n\nA little burst of laughter escaped my lips.\n\n\"No,\" I said.\n\n\"Well, come and join me,\" he said. \"I haven't any sauerkraut to pickle either.\"\n\n\"Won't your lady-friends mind?\" I said, glancing over at the two women who were now watching us with annoyed looks on their faces.\n\n\"I told them you were a friend I'd been waiting for,\" he replied.\n\n\"So, I'm your friend, am I?\" I said.\n\n\"You can be if you want,\" he said.\n\nI smiled again.\n\n\"I don't want to get in the way if you want to seduce them,\" I said, unconvincingly.\n\nJack laughed at me, then leaned down towards my ear. \"Elfi, my angel,\" he said, \"the only person I want to seduce is you.\"\n\nI gulped, and my cheeks went pink. His boldness excited me and made me nervous.\n\n\"Maybe you wouldn't want to seduce me if you got to know me,\" I said, then instantly hated myself. I was being stupid and awkward again. Anyway, why was I even here? Things weren't going to happen, even if I wanted them to.\n\n\"Maybe... maybe not,\" he said. \"But you're cute. I'll take the risk.\" \n\nBefore I could protest, Jack gave a little tug on my hand and led me over to one of the sofa seats at the back of the bar area. I tottered behind him in my boots, unable to prevent myself from looking over at the women he'd been talking to seconds before. They were now staring at me with hatred in their eyes.\n\nI sat on the sofa. Jack let go of my hand and walked over to the two women. He whispered something in their ears. They looked at him in disappointment, then looked at me in anger. They both kissed him on the cheek, then marched quickly out of the bar. I noted that he did not kiss them back.\n\nJack walked back over to me.\n\n\"What did you say?\" I asked.\n\n\"I told them that you and I had a lot to catch up on,\" he said.\n\n\"Did they believe it?\" I replied.\n\n\"Not sure,\" he said with a laugh. \"Don't care.\"\n\nThe nonchalance with which he said it instantly played with my anxieties. Those women were hot, they were fawning over him, and he dismissed them like it was nothing. Other guys would have been desperate to fuck them, but I guessed female attention was such a constant feature of his life, that it meant little too him. My eyes scanned over his face and body. He was very hot. Too hot for his own good, most likely. \n\n\"Are you some kind of player?\" I said, then winced. Why couldn't I just keep my analysis to myself? And did it even matter if slept with lots of girls? It wasn't like I was going to get anything more than an ego boost and some fantasy material tonight.\n\nJack laughed. \n\n\"Why do you say that?\" he asked in amusement.\n\n\"Well, the girls...\" I started, then stopped.\n\n\"The girls who were chatting with me... and I bailed on... just so I could talk with you...\" he said. \"I'd call that being selective, not being a player.\"\n\nMy face started to heat up. What the hell was I saying?\n\n\"Yeah... but look at you... I bet you sleep with so many girls,\" I said. Then I winced again. Why did my mouth keep saying these things?\n\n\"I've slept with a few people. As I'm sure you have too,\" he said. \"You're a pretty girl. I bet people hit on you all the time.\"\n\n\"Yeah, people hit on me,\" I said, \"but I don't sleep with them all.\"\n\n\"I don't sleep with everyone who hits on me either,\" he replied.\n\nI squirmed slightly in my seat and reached up to massage the back of my neck. My face was now burning red. I didn't have any logical way of expressing what I was trying to say, and I was just going to make a fool of myself if I continued. Nevertheless, he definitely was some kind of player. He was just too hot and too confident not to be. But he was very handsome, and he was funny, and he smelled good. He wouldn't be boyfriend material, but perhaps I could just let him fuck me, if that's what he wanted to do.\n\nI gulped as I let my mind wander for a second. Him fucking me... now that was an electrifying thought, I crossed my legs tightly and ran my fingers through my hair. But then I shut it down. I couldn't think like that. He didn't know I was trans.\n\n\"So, what brought you to Berlin?\" I asked, changing the subject and trying to force the heat in my cheeks to subside.\n\n\"I needed a change,\" he said, seemingly happy that I was moving on from making assumptions about his promiscuity. \"And I love Berlin. I love the atmosphere. I love the history. I love the freedom.\"\n\n\"Yeah,\" I said with a sigh. \"That's one of the things that drew me here too. Where are you from in the US?\"\n\n\"Rio Ranco, New Mexico,\" he said.\n\n\"It sounds hot,\" I replied.\n\n\"It is. Hot, dry, friendly, but sometimes a little insular,\" Jack said.\n\n\"So you wanted somewhere, more... metropolitan?\" I asked.\n\nJack nodded. \n\n\"Not to disparage Rio Ranco,\" he said, \"I had some great times there. I just wanted somewhere a little more... shall we say... open-minded.\"\n\nI swallowed. \"Oh, cool,\" I said. \"Open-minded is good, open-minded is really good.\"\n\nI forced myself to stop blabbering, but his words had affected me. Open-minded, open-minded, open-minded... what if he actually was okay with me being trans? The thought sent a ripple through the pent up reservoir of my emotions. A little wave of possibility lapped over my mental barriers, like a small amount of water sloshing over a dam. The overspill leaked through my body and sent a tingle through my skin.\n\nIf he was attracted to me, and okay with being trans, then maybe I'd get to feel his muscles. Maybe he'd kiss me. Maybe he'd pin me down. Maybe he'd put his stiff cock in my mouth, or, oh God... in my ass? I shifted in my seat. My mouth opened, then closed again. No, I couldn't tell him.\n\n\"So, are you here to stay?\" I asked.\n\n\"Yep, I'm here to stay,\" he said, \"at least for the time being. I work remotely, so really I can work anywhere... I chose Berlin.\"\n\n\"Are you enjoying it?\" I asked.\n\n\"Yeah, it's nice. The food is good. The drinks are good. The company is...\" He trailed off a looked at me. \"... kind of 'meh'\"\n\nHis eyes twinkled.\n\n\"Oi!\" I said, \"I thought you liked me.\"\n\nI slapped him on the arm. \n\n\"I do like you, Elfi,\" he said with a grin.\n\nI shuffled closer.\n\n* * * *\n\nThe conversation had flowed easily. We'd been talking for over an hour. We'd laughed, we'd flirted, and Jack kept looking at me like he wanted to devour me. Beneath his confident gaze, I was starting to feel all wriggly and horny. Every time he looked at me with his devilish smile and sparkling blue eyes, I felt my cock begin to engorge and push against the fabric that kept it neatly tucked between my legs. He even made a joking comment about spanking me when I made a cheeky remark. That made me go very, very red. Desire was rising inside me. The reservoir of excitement behind my mental dam was filling at a rapid rate, and I kept having to remind myself that I couldn't let it out.\n\nAs the pressure rose, I kept leaning forward, smoothing my skirt, tossing my hair, and tightly crossing and uncrossing my legs. But I had to keep my mental barriers up. I still hadn't mentioned anything about being trans. How could I know that his attitude wouldn't change the second I told him? How could I be sure he wouldn't get angry with me, or worse? How could I be sure he wouldn't accuse me of tricking him or making him feel like he was gay?\n\nBut... he was so disarming, and he really seemed to be into me, and I was getting tipsy. Every so often, I'd found myself forgetting that I wasn't going to allow myself to take this further. For a second or two, I'd lose my focus, and I'd accidentally release a little sluice gate in the dam that I'd been forcing shut. Thrilling little currents of water escaped past my barriers, and goosebumps rose on my skin. I kept finding myself looking at his lips. Then touching his arm. Then touching his leg... I could tell he liked that. But I was getting carried away. No, this couldn't happen...\n\n\"You look cold,\" said Jack, as my hand retreated sheepishly from his thigh.\n\n\"I am cold,\" I replied, and I was. My cold tolerance was high, but now I'd stopped walking around, I was getting chilly.\n\n\"Why don't you come and sit on my lap?\" Jack said with a grin. \"I can put my coat around both of us like a blanket.\"\n\nI took a deep breath. That sounded good, but it was a step too far. I was being silly, and it was time for me to leave.\n\n\"Sorry, Jack,\" I said, \"It's been really, really lovely talking to you, but I need to get home now.\"\n\nDisappointment flashed across his face, but he hid it quickly. \n\n\"Ah, that's a shame,\" he said, \"I was really enjoying talking to you. You don't have to sit on my lap if you don't want to.\"\n\n\"I do want to,\" I said, \"but it's getting late. And I've only just met you. Maybe I could give you my number?\"\n\n\"Yeah, I'd like that,\" he said.\n\nI got to my feet. Maybe I could message him to say I was trans, and then I wouldn't need to be next to him as he rejected me. Or maybe I would never message him, that way I'd never have to face the rejection at all, I could just enjoy the fantasy of what might have been. God, I'd enjoy that fantasy... feeling his big hands all over me. I would probably masturbate myself into a coma over that one.\n\nAs Jack took out his phone to take my number, I saw a family walk by. It was the family from before: the young woman with the stroller, her husband, and the small boy. The boy was holding a wet-looking doll. The doll he had lost earlier.\n\n\"Hey, Gunter!\" Jack called out.\n\nThe boy looked over and started waving at Jack. Then the parents started waving. I looked at Jack, who was smiling. I looked at the family, who were smiling too. I looked at the doll.\n\n\"Do you know them?\" I asked.\n\n\"I ran into them earlier,\" he said, \"remember, the kid had dropped his doll. I saw you were about to give it back to him, but your boss got in the way.\"\n\n\"Yeah, I remember,\" I said. \"So you gave the boy his doll back?\"\n\n\"Yeah,\" Jack said with a nod. \"I saw the family come back around just after you left.\"\n\n\"And you didn't think it was wrong for a boy to play with a toy like that?\" I said.\n\n\"If he's happy with it, why should I care?\" replied Jack, with a laugh. \"It's not the 1950s anymore.\"\n\nOkay, that had sounded promising. That had sounded really promising. I took a deep breath. I half-smiled and sat back down next to Jack.\n\n\"I thought you said you needed to go?\" he said.\n\nI gulped and remained static. Jack continued waving at the little kid until the family had gone.\n\n\"There's something I want to tell you,\" I said.\n\n\"Oh yeah?\" Jack replied.\n\n\"Just promise me that you won't get mad,\" I said.\n\n\"Okay,\" he said, looking puzzled. \"I promise not to get mad.\"\n\n\"And I've wanted to tell you for when we first started talking, but I didn't know how you'd react,\" I said.\n\n\"Okay ...\" Jack said again.\n\n\"Well,\" I took a deep breath. \"I'm trans... if you know what that means.\"\n\nHe paused for a second and scanned my expression. He was probably trying to see whether I was joking or not.\n\n\"Really?\" he said. He looked me up and down, but his expression was of surprise, not anger.\n\n\"Yes, really,\" I said, meekly. Then I steeled myself. \"So, do you have a problem with that?\"\n\nJack paused in silence for a few seconds. \"That is kind of a surprise,\" he said. \"But no, I don't have a problem with it.\"\n\n\"I just needed to be sure... since we were flirting so much,\" I said, my voice quietening to a whisper.\n\n\"It's okay, Elfi,\" he said. \"It's all fine with me.\"\n\nRelief surged through me, and a smile spread across my face. \n\n\"Is there anything else I should know about you?\" he asked.\n\nI tensed again. I guess just saying I was trans didn't fully explain my situation. But fuck it. I'd gone this far.\n\n\"Well... I've still got a cock,\" I blurted. \"And, I really like koalas.\"\n\nJack cracked up in laughter. My face morphed into an inferno of redness.\n\n\"Wow,\" he said. \"Koalas, huh?\"\n\n\"I'm telling you this because I think I can trust you,\" I said, then took a deep breath. \"And I like you. And I think you're really hot. But it's important that you know who I am.\"\n\n\"It's okay, Elfi,\" he said, then laughed. \"Well... that is a surprise... but... I guess it makes you even more intriguing than I thought.\"\n\n\"So,\" I said with a gulp, \"do you still want me to sit on your lap now that you know? It's okay if you say 'no,' I'm happy just to chat.\"\n\nHe smiled a very genuine looking smile.\n\n\"Elfi, I'd still like you to sit on my lap,\" he said.\n\n\"Are you sure?\" I replied nervously. \"I don't want to pressure you.\" ",
        "\"It would be the best Christmas present I could hope for,\" he said.\n\nI laughed and smiled.\n\nHe took off his coat and fanned it out like a blanket. Then he draped it across himself and lifted one side to allow me access. I ran my hand through my hair and sat down on his lap. He then wrapped the coat around both of us. I whimpered slightly as I felt his body. His chest felt strong and firm on my back. The sensation sent tingles of excitement through me.\n\n\"You're shaking,\" he said.\n\n\"I'm cold,\" I replied. I wasn't prepared to admit that it was nerves, even though it was probably painfully obvious to him.\n\n\"Well, I'm happy to help out,\" he said. Under the blanket, his big hands gripped me gently around my waist, and he pulled me closer. \"After all, what could be better than wrapping my arms around such as sweet, beautiful, sexy girl on Christmas Eve?\"\n\nI swallowed. The word 'sexy' echoed through my brain. After my revelation about being trans, he might just have let me sit on his lap out of politeness... but there was no requirement for him to call me sexy. None at all. You don't call someone sexy unless you want to have sex with them... certainly not in this context.\n\nAs his breath tickled the hairs on the back of my neck, I felt the heavy concrete wall of my mental dam begin to crack. The pent up reservoir of arousal that had built up during all our flirting suddenly started to push through the gaps, and wash into my bloodstream. I gulped, as a feeling of giddy excitement began to course through my body. He was handsome, he was sweet... and he didn't have a problem with me being trans. Every nerve ending in my body began to sing with desire. The possibility of sex was suddenly very present, very real, and very exciting. I took a deep breath and wriggled on the spot.\n\n\"So, you think I'm sexy?\" I said.\n\n\"Yes,\" he replied. I could feel his head nodding.\n\n\"Just a sexy as before...\" I said, \"before I told you...\"\n\n\"Yes, Elfi,\" he said, and ran his hands gently up and down my sides. \"Just as sexy.\"\n\nMore cracks appeared in my mental dam. A fresh surge of arousal flooded through me. My cock began to engorge and throb in its tucked-up little stranglehold. I didn't know what to say next, so I decided to do something that didn't need words. It was something very bold, at least by my standards.\n\n\"Can I shift position?\" I asked.\n\n\"Of course,\" he said. \n\nI shifted my body and shuffled around until we were face to face, with me straddling him. \n\n\"Well, hello there, Elfi,\" he said, with a wicked grin on his face.\n\n\"Hey,\" I whispered.\n\nI swallowed, bit my lip, and looked into his eyes. As he stared back, his hands ran up my waist and held me.\n\n\"Mmm,\" he said and smiled. \"So sexy.\" \n\nHis eyes twinkled.\n\nIt was the only cue I needed. I parted my mouth slightly and leaned forward. He leaned forward too, and our lips gently touched. It was a soft, sweet, and delicious caress. My breath fluttered, and goosebumps rose on my skin as the sensation tingled through me.\n\n\"Oh, that felt good,\" Jack whispered. His lips tickled against mine as he spoke.\n\n\"If you want me, kiss me properly,\" I whispered back.\n\nOne of Jack's big hands slid up my back and through my hair. His hand gently cupped the back of my head, and he drew me in closer. Our lips pressed tenderly together, and his tongue slipped into my mouth. The cracks in my mental dam turned into deep fissures, then the whole edifice crumbled. Arousal flooded through me like a tsunami. I pressed myself against him, kissing him deeper and deeper. He moved his hand on my waist down to my thigh, and he grasped my flesh. I pressed my tits against his chest and whimpered in delight.\n\nI as we kissed, I felt him bunch his fist into my hair and pull it sharply down and backward. I gasped as my head tilted back. Then I felt his breath on my throat.\n\n\"So... fucking... sexy,\" he rasped.\n\nThen he kissed my neck. I wailed, twisted, and wriggled. My head rolled around in pleasure. I thrust my crotch towards his body, wishing I could press my cock up against him, but it was still stuck back between my legs, all swollen and struggling. I could feel him though: his erection pressed against me, hot and angry.\n\nWhile my body still squirmed, he pulled back and looked at me.\n\n\"I don't want to be lonely this Christmas,\" he said. \"Would you like to come back to my apartment and keep me company?\"\n\nGulped and nodded. \"Yeah, that sounds good.\"\n\nJack smiled. \"Wonderful. A beautiful Christmas Angel for Christmas Eve.\"\n\n\"A naughty Christmas Angel for Christmas Eve,\" I giggled.\n\n\"I'll try and keep you in line,\" he said and gave me a quick smack on my ass. I almost came there and then.\n\n* * * *\n\nI stood alone in a little bathroom cubicle at the market, leaning against the sink. I was breathing heavily, trying to calm myself down. My efforts were not successful. I could still taste Jack in my mouth and feel the sensation of his lips on my neck. I lifted a hand, ran it through my blonde hair, then rubbed my neck with my palm. I moaned and wriggled. Then I danced in excitement with my feet.\n\nThen I steeled myself. I hadn't gone to the bathroom to pee. I needed to steady myself, and I needed to clean myself up before I went back to Jack's apartment. My panties were embarrassingly slick with pre-cum, and I wanted to mop up the mess.\n\nI shimmied my skirt down my legs and bent over to inspect the problem. Sure enough, at the bottom of my underwear, there was a slimy wet patch. I grunted in frustration and reached behind me to grab some tissue paper. I pushed it into my panties, careful not to dislodge my throbbing cock from where it was tucked. If it escaped and got hard, I'd never get it back down again.\n\nI gently maneuvered a few little dabs at the slimy stain. I felt the paper dampen and saturate, and then I threw it into the toilet bowl. I repeated with another bit of paper, then another. \n\nI scrutinized myself carefully. The stain didn't look as slimy as it did before, but it was still there. I grunted in annoyance, but it would have to do. I'd been in the cubicle for a while, and Jack might have thought I'd done a runner.\n\nI'd mentally agreed on a game plan with myself. Tonight was just going to be about sex, nothing else. I wasn't going to allow myself to have any stupid ideas about Jack becoming my boyfriend. I was just going to let him fuck me, then leave in the morning. It would be simple, no-fuss, sex. Also, if it was just going to be for one night, I could be as embarrassingly slutty as I wanted.\n\nI pulled up my skirt, checked my make-up, washed my hands, and tottered back towards the terrace. Jack was leaning against the bar and facing in my direction. I walked over to him, took his hand, and dragged him through the Christmas market with all the strength my little body could muster.\n\n* * * *\n\nHis apartment was close by in the Charlottenburg district. We walked through the streets of Berlin hand in hand. I grasped him tightly as if to remind myself that this really was happening. As we walked under the Christmas lights, my heart thumped in my chest, and my skin tingled with anticipation. I was going to have a hot guy's dick inside me, and I couldn't wait. Finally, we reached Jack's apartment building, and he unlocked the door to the complex.\n\n\"What floor is your apartment on?\" I asked.\n\n\"Third floor,\" he said.\n\nI looked at the 'out of order' sign on the lift, then tugged his hand and quickly pulled him up the stairs. I was probably coming across as a bit desperate, but I was simply too horny to care.\n\nJack's apartment was neat, modern, and clean. As we entered the living room, he offered me a drink, but I declined. I wasn't there to chat, I was there for sex, and I was far too horny to delay proceedings even by a minute. I pulled off my jacket, dragged him over to the couch, and sat him down next to me. Immediately, I shifted my body around, brought my face close to his, and slipped my tongue into his mouth. As we sat next to each other, making out, I began to feel and caress the muscles of his strong arms. I mewled in excitement, and my arousal dialed ever higher. God, he felt good.\n\nI quickly became too aroused just to kiss, so I tried to drag him on top of me, but he resisted, remaining upright, and pulled back. I gasped as our lips parted, and wondered what was wrong. Fortunately, his expression reassured me that things were still, in fact, very right. He held me around the waist and looked at me with a predatory, masculine passion.\n\n\"You are so fucking gorgeous,\" he said, as his chest rose and fell. \"I want to taste every last inch of you.\"\n\nI curled my lips into my mouth and nodded. I wanted him to start tasting me that instant. His eyes traveled over me: my thighs, my crotch, my tits, and my face. His throat released little grunts of appreciation, and his erection stood stiff and ready, elevating the fabric of his jeans. \n\n\"Just take me,\" I said.\n\nHe leaned forward again and rested his forehead on mine. He removed one of his hands from my waist, and ran it through my hair, making me gasp and shudder.\n\n\"Oh, I'm going to take you, Elfi,\" he said. \"But I'm going to take my time. I'm going to savor you. We have all night, and you're way too delicious to waste on a quick fuck.\"\n\nI panted. I wasn't sure I could handle much of a wait. \n\nHe cupped my face and kissed me again. My toes curled in my boots. I tried to kiss him hard and fast, but he kept it maddeningly, slow and deliberate. It was teasing, it was torture, and it was incredible. \n\nAs we made out, I moaned as his big hands explored my body: gently caressing my bare thighs, running his hands over my breasts through my vest top, and squeezing my bare arms. As he touched me, my body yearned for more. I thrust myself toward him with uncontainable lust. He was treating me like a piece of chocolate slowly melting in his mouth, but I was desperate to munch down immediately.\n\n\"Put your dick inside me,\" I whispered.\n\n\"Oh, I will,\" he said. \"But good things come to those who wait.\"\n\nHe began to trace his fingers around the edges of my clothing, leaving little trails of fire across my skin. First, along my thin, exposed strip of midriff, then around my thighs, just under the hem of my little skirt. The sensation forced yet more gasps from my lips.\n\nHe lifted me slightly and shifted my body around until I was straddling him as he sat, with my knees and shins resting either side of him. I couldn't help myself but grind against him. Jack's cock stood erect. I could feel it poking up through his jeans and pressing between my legs, right where mine was tucked back and throbbing in my panties. It felt almost like torture as my dick struggled for release, pathetically straining against the material. Pulses of pre-cum were dripping liberally from my tip. The bottom of my panties felt wet and slick all over again. There was going to be a stain, but fuck it, I needed him now...\n\n\"Undress me,\" I said.\n\n\"I think I will,\" he purred.\n\nHe ran his hands up my thighs, over my skirt and grasped the bottom of my vest. He slowly dragged it up my body. I raised my arms, allowing him to pull it all the way off. He threw it on the couch next to me, leaving me in my bra. A big grin passed over his face. He ran his hands up and down my sides, and teased his thumbs over my bra-covered nipples, making me moan.\n\n\"Let's take this off too,\" he said.\n\nHe reached behind me and unclasped my bra. I felt the straps fall loose behind me, but they remained draped over my shoulders, keeping the cups in place over my breasts. I raised my hands again to help him strip me. He gripped the side straps, just next to the cups, and dragged them up. As the cups passed up and over my nipples, his grin widened as my bare tits came into view.\n\n\"Mmm, very nice,\" he said. \"Very, very nice.\"\n\nI whimpered in excitement under his gaze. He pulled the bra higher, but rather than take it off me; he stopped, just as it was passing my eyes. He used his hands to wrap it around my head, blindfolding me. I gasped and wriggled in anticipation.\n\nThen he kissed my neck. The sensation utterly debilitated me. My muscles went limp, my mouth hung open, and I moaned an uncontrollable moan... but he wasn't done with me. He kissed and nibbled all around my neck and down my chest towards my nipples, turning me into a gasping, squirming wreck. My nipples were so sensitive. I wasn't sure I could handle it. With each kiss closer, my squeals grew louder. Then I screamed in rapture as he kissed my nipple. He pressed his face into my breast, kissing, licking, and nibbling, as my body writhed in ecstasy. The sensation was maddeningly intense.\n\n\"Take my skirt off... take my panties off... please,\" I begged from behind my make-shift blindfold.\n\n\"That can be arranged,\" he said. \n\nHe pulled the bra away from my eyes, and threw it on the couch, next to my vest. He hooked his fingers into the waistband of my skirt and pulled it down my legs. I shuffled and shifted to allow him to get it past my knees and over my boots. He then returned to hook his fingers into the waistband of my panties. I looked down as they descended down my legs. Once they passed the critical point, my dick unfurled from its tucked position. It hung out, pale, pink, and semi-erect in front of me, with a little thread of pre-cum oozing from the end. My panties themselves were embarrassingly slick and stained with my dribbles, worse than I had imagined.\n\n\"Looks like someone's horny,\" Jack said.\n\n\"I'm sorry,\" I whispered in mortification.\n\n\"Oh, don't be sorry,\" he said. \"This is hot.\"\n\nHe pulled the panties over my boots, brought them up to his mouth and inhaled. His eyes rolled back.\n\n\"You smell so fucking good,\" he said, then he licked the pre-cum puddle. \"Delicious, absolutely delicious.\"\n\nMy dripping cock jumped fully hard.\n\n\"Taste me,\" I said, pushing my needy cock towards his face.\n\n\"Oh, I will,\" he said. \"But I want you to lie down on the couch.\"\n\nI jumped to my feet, then dived back onto the couch, so I was lying on my back. The couch had no armrests. Jack got down and knelt on the floor at the end near my boots. I looked down my body at him and saw his eyes lit with fire.\n\n\"Let's get these boots off you too,\" he said. He pulled them off my body, leaving me completely naked.\n\n\"Now I'm going to devour you,\" he said.\n\nI spread myself out to allow him access to my desperate genitals. One of my legs pressed against the backrest, the other hung off the ledge of the seat cushion, with my foot on the floor. \n\nHe began with my leg that was pressed against the backrest. Starting from my ankle, he began to kiss, nibble, and lick up my skin. Each time his lips, teeth, or tongue touched me, I gasped in excitement. My muscles began to twitch, and my hips began to thrust up into nothingness. He went along my calf, then up my inner thigh. As he got close to my cock, my fists bunched, and I seethed through clenched teeth. I was so fucking horny it was unbearable. \n\n\"Please,\" I whispered. \"Please touch my cock. Or suck it. Or fuck me!\"\n\n\"I will,\" he said. \"Just give me a minute to enjoy you.\"\n\n\"I can't stand any more teasing,\" I begged.\n\n\"I'm not teasing you,\" he said. \"I'm savoring you.\" \n\nI looked down at him with pleading eyes. He winked at me and kissed closer and closer to my crotch. I could feel his breath on my balls. I thrust my hips upwards towards his face and held them there elevated in an unambiguous display of my need.\n\nThen he gripped the base of my cock with his fingers.\n\n\"Oh my God!\" I squealed, arching my head backward. I desperately hoped he was going to put his mouth on my cock, but he didn't. He licked up the crease between my crotch and my thigh. I screamed loudly and uncontrollably. In the realization that his neighbors might hear, I grabbed my vest with a feverish hand and shoved part of it into my mouth to gag myself.\n\nIt was a wise decision. Suddenly, Jack licked up the crease on the other side. I bit down on the vest and screamed what would have been the loudest scream of my life. My cock was dripping, and my body twisted and spasmed. I couldn't take it.\n\nI dragged the vest from my mouth and started to beg. \"Please Jack, honestly, I'm too horny, I can't take it anymore.\"\n\n\"Okay, Elfi,\" he said.\n\nHe shifted so that his mouth hovered just over my needy, desperate cock.\n\n\"Please,\" I begged. \"Please, please, please!\"\n\nHe extended his tongue and lowered his head. Then in one sloppy motion, he licked from the base of my cock to the tip.\n\n\"Fuck!\" I cried out in pleasure.\n\n\"Mmm,\" he growled. \"You taste so good.\"\n\nHe opened his mouth, enveloped the head of my cock with his lips, and swirled his tongue over the tip. I grabbed my vest again and shoved it into my mouth. I yelped and squealed in delight.\n\nThen he glided his lips down my cock, taking me deep inside him. He held me for a second, then slid back up. My cock dripped with his saliva. He moved my cock to a better angle, before descending again, this time all the way down, right to the base. He released his grip with his hand and kept only his lips around me, gently gyrated his head. I threw my head back in ecstasy. My mouth roared through my gag, as intense waves of pleasure surged through me. I wasn't going to last very long, I felt on the verge of cumming already. I was going to ejaculate mortifyingly quickly. \n\nJack slid back up, leaving saliva oozing over my cock and balls. He re-gripped the base and began to glide rhythmically up and down with his mouth.\n\nIn a muffled squeal, I cried, \"Fucking hell!\" through my gag. With my trembling free hand, I reached down to find his fingers. I found them and latched on. I held him with an iron grip as waves of bliss passed along my shaft. I knew I was going to spurt and I couldn't stop it. The sensation was too good. With every slither of his lips, I was rapidly pushed closer to orgasm. I wrenched the vest out of my mouth.\n\n\"Jack...\" I gasped. \"Slow down... I'm... going... to...\"\n\nIt happened before I could get my words out. My loins spasmed in an explosion of pleasure. I cried an incoherent wail. Semen surged thick and fast up my shaft and ejected into Jack's mouth. Contraction after contraction gripped my cock, sending spurt after spurt of cum spraying from me. He continued to lunge up and down all the way through my orgasm. With each of Jack's movements, I thrust up to meet him, as if trying to inject my juices into his very soul. He milked me until my body hung limp and drained. \n\nI panted for breath. \n\n\"Mmm,\" he said, making an audible happy swallow. He pulled his lips off me and looked up at me, grinning. \"That was the best Christmas meal I've ever had.\"\n\nI whimpered, riding on a high of bodily gratification, but deeply embarrassed. My cock was still semi-erect and continued to twitch with little micro-pulses, ejecting a few, small, final globs of cum.\n\n\"Sorry... I can't believe I came so fast,\" I said, my face burning red. \"This never usually happens to me.\"\n\n\"Oh, don't be silly,\" said Jack. \"That was incredible... I think it's kind of hot that you got so horny that you couldn't control yourself.\"\n\n\"Yeah... I guess,\" I replied, and gave a nervous laugh. \"You make me very, very horny.\"\n\n\"Good,\" he said and squeezed my hand. \"I don't care how fast you cum. You cum like a fucking angel.\"\n\nIt was stupid, but his words sent a little warm glow flowing through me. I started to laugh. He was adorable, and he was really accepting. Maybe he could be more than just a fuck. Maybe he could be boyfriend material...\n\nI instantly shut down the thought. I was being ridiculous. I turned my thoughts away from the warm-fuzzy feelings, and on to raw sexual ones.\n\n\"Kiss me,\" I said.\n\nHe lifted himself and crawled up my body. He swallowed down what must have been the last globs of cum in his mouth, and then he kissed me. We kissed deeply, and our bodies started to grind against each other. I could feel his erection through his jeans and the need in his body. He'd made me cum, but I hadn't made him cum yet.",
        "\"Let me pleasure you,\" I whispered.\n\n\"Come to the bedroom,\" he said.\n\n\"Lead the way,\" I replied.\n\nJack got to his feet and held out his hand. I took it, and he pulled me up. He led me through his apartment to his bedroom.\n\nOnce we arrived, I sat down on the bed, and Jack stood next to it. My eyes focused on his bulge. Even beneath his clothes, I could tell his cock was bigger than my own girly dick. I reached out with my hand and began to massage it through his jeans. I looked up at him. My toes curled, and I bit my lip. My own dick started to pulse back up to hardness. Having a guy's cock in my mouth always made me insanely horny.\n\n\"Can I unwrap my present, Sir?\" I whispered, playing out a little sub-Dom fantasy in my head by calling him 'Sir.'\n\nHe laughed, leaned forward, and ran his fingers through my hair.\n\n\"Of course, Angel,\" he said.\n\nI pressed my face against his jeans and nuzzled against the protrusion.\n\n\"Oh my God, I'm going to enjoy this,\" I whispered. I rubbed my face up and down his jeans and inhaled deeply through my nostrils. The thick, delicious, masculine scent intoxicated me. I could smell his dick, his balls, his pre-cum, and it was all for me. I whimpered in delight as I kissed lovingly over the fabric. His rock-hard dick throbbed beneath my lips.\n\n\"Who's teasing who now,\" Jack said.\n\n\"Mmm,\" I said, and looked up at him with a cheeky smile. \"I'm not teasing you. I'm savoring you.\"\n\nJack laughed and shook his head. \n\n\"I'll spank you for that later,\" he said.\n\nI giggled. \n\n\"Don't make promises you can't keep,\" I whispered.\n\nI fixed my eyes back on his crotch, unclipped his belt, and pulled down his zipper. As I did so, his dark grey boxers came into view. I purred in appreciation. I peeled down his jeans, then hooked my fingers into the waistband of his boxers. With my face next to his bulge, I pulled them down slowly. As the waistband passed over the head of his cock, it bounced up.\n\n\"Fuck,\" I whispered as I looked at it. It was darker than my cock and longer and thicker. I reached out and wrapped my hand around it, feeling its size and presence. The sensation sent giddy waves of excitement through me. This was a proper man's cock, and I was going to enjoy it.\n\n\"I'm going to be a total slut for you,\" I said, my eyes flicking up to his.\n\nI gripped it tighter and began to jerk it up and down. I twisted my hand as I stroked, extracting groans from Jack's lips. I took my other hand and gently cupped and caressed his ball sack. His balls were so much bigger and fuller than mine. I felt so silly, horny, and girly next to him. \n\nJack reached down, ran his fingers through my hair, and gently massaged my scalp. I sighed in pleasure, then released my hand that was working his shaft. I extended my tongue, pressed my face forward, and took one long, slutty lick from the base to the tip. Jack let out another groan of pleasure, and my cock jumped fully erect once more. Spurred on by his reactions, I licked him again, but this time, when I reached the tip, I softly enveloped the head of his cock with my lips. Jack moaned, and a little electric thrill passed through me. I loved hearing the sounds of his enjoyment.\n\n\"Yes,\" he whispered as he continued to massage my scalp gently. \"Good girl.\"\n\nWith the head of his dick inside my mouth, I ran my tongue lovingly around his tip. Then I gripped the base of his cock, angled him towards me, and let my lips glide down his shaft. Jack's fingers tensed in my hair. I moaned in pleasure, then drew myself back up. I swirled my tongue over his head again, then descended once more, as deep as I could go. This time, Jack really groaned. It felt so good, but I wanted to be even sluttier for him.\n\nI pulled myself up, looked up at him, and whispered, \"If you like, you can fuck my face as I suck you.\"\n\nJack grinned. \"Oh, Elfi, you are a badder girl than I thought.\"\n\nI bit my lip and nodded.\n\n\"And...\" I said, my face now flushing pink. \"You can cum wherever you want. In my mouth. On my tits. On my face.\"\n\nI became redder with each word, but my dark, slutty desires pushed the sentence from my lips. To escape from my embarrassment, I slipped his cock back into my mouth and began to suck. At first, my lips glided up and down his cock under my own motion; then, I felt Jack's hand bunch in my hair. An ungodly surge of excitement passed through me as he began to take control. Gently, he began to guide my head up and down his shaft. I could feel the power in his hands, and it set my body alight. My cock started to throb and drip all over again as he used my mouth to pleasure himself. \n\nHe used me slowly at first, pushing my head down deeply, holding it there for a second, then pulling me back up. After a few iterations, he pulled me all the way off him.\n\n\"Are you enjoying that?\" he whispered.\n\n\"Yes, Sir,\" I murmured back. \"Can I have some more please, Sir?\"\n\n\"Do you want me to go faster or slower?\" he asked.\n\n\"Go as fast or slow as you like,\" I said.\n\nHe laughed.\n\n\"Okay, Elfi,\" he said.\n\nI felt him push me back towards his cock, and I opened my mouth once more. He started at the same pace as before, guiding my head with deep, measured, and deliberate strokes. His hips began to thrust in motion with my head.\n\nGradually, he began to pick up the pace, thrusting harder and faster. I wailed in ecstasy around his cock, and drool dribbled from my mouth. My eyes flicked up to his, and I saw him stare down at me. His gaze electrified my body. He was horny, he was enjoying himself, and he was using me. He grunted with each thrust, fucking my face with urgency and intent. As slurping sounds filled the room, my mind turned to a delirious, submissive mush. As our eyes locked together, he began to talk dirty to me.\n\n\"God, your mouth feels so fucking good,\" he rasped, as he forced my head along his dick. \"You're so fucking pretty. I can't stand it. I'm going to fill your mouth with cum, and then I'm going to fuck your cute little ass until your spurt all over the fucking sheets.\"\n\nI wailed, and my fists bunched. Drool spilled from my mouth. Jack's breathing became ragged, and I could tell he was close.\n\n\"I'm going to cum,\" he growled. \"Are you ready?\"\n\nI nodded the best little micro-nods I could as he fucked in and out of me. I saw tension build in his neck, his face flushed red, and his eyes flashed with a look of incredible intensity. Suddenly, his dick twitched hard, and he unloaded a big surge of semen into my mouth. \n\nPowerful contractions gripped his dick, and ropes of cum shot inside me. I gulped down all his load as he continued to thrust in and out of me, milking himself into my mouth.\n\n\"Fuck,\" he rasped, panting in satisfaction. \"Fucking hell, Elfi.\"\n\nI kept my lips on him until his contractions had stopped. Slowly he withdrew his dick from me. Although I was dazed with pleasure, I still had enough awareness to extend my tongue and show him some of the mess he'd made in my mouth. Then I swallowed it down, with a satisfied gulp of pleasure, just like a good little slut should. I flashed him a happy little grin.\n\nHe bit his lip and looked down at me. His hand un-bunched from my hair, and he gently massaged my scalp with his fingers again.\n\n\"I'd never have thought such a sweet girl could be so dirty,\" he said.\n\n\"I should have told you I was a fallen angel,\" I said with a giggle. \"With a very dirty halo.\"\n\nHe leaned down and kissed me gently on the forehead, making me grin a very silly, happy grin.\n\n\"A dirty halo, maybe,\" he said. \"But you're still so fucking cute.\"\n\nJack reached down, pulled off his shoes and socks, and stepped out of the crumpled mass of boxers and jeans that rested around his ankles. His cock still throbbed semi-hard and shimmered with my saliva.\n\nHe sat down next to me on the bed. Cupped my face, and kissed me sweetly and tenderly. As our tongues entwined, Jack reached over and wrapped his fingers around my dick, making me gasp. Then he leaned back slightly and smiled.\n\n\"Oh God, you're so hard,\" he whispered, giving me a few gentle but incredible strokes. \"You must really enjoy having your face fucked.\"\n\n\"I'm a very bad angel,\" I said. \"I think I was thrown out of heaven for being too naughty. Maybe you should punish me?\"\n\nJack grinned at me and released my dick. I bit my lip and shuffled to the center of the bed. I positioned myself on my knees, with my face down on the sheets, and my ass up in the air.\n\n\"You did say I needed a spanking,\" I whispered with an embarrassed little giggle. I hoped he hadn't been joking when he'd playfully threatened me earlier.\n\n\"Oh, you are a bad angel, aren't you, Elfi?\" Jack said, crawling on to the bed. \"Maybe you do need some punishment.\"\n\nI wiggled my ass.\n\n\"Sir, I've been very, very bad,\" I said.\n\nHe laughed. \"Okay, Angel, I'll spank you. If it starts getting too much, just say 'yellow,' if you want me to stop, say 'red,' understood?\"\n\n\"Yes, Sir,\" I whispered.\n\nJack ran his hands over my bare ass, squeezing and caressing my flesh. Then he spanked me lightly on my left cheek. I gasped and wriggled as the sensation zipped through my body.\n\n\"You like that?\" he asked.\n\n\"Yes, Sir,\" I whispered again. \"You can be rougher if you like.\"\n\n\"You're such a bad little angel,\" he said. \"Okay, let's go a little harder.\"\n\nI inhaled deeply and tensed my body.\n\nThen he spanked me again. \n\nI gasped as his hand planted down firmly onto my right ass cheek. That one had a sting to it. My toes curled up.\n\n\"Yes,\" I whimpered.\n\nThen he brought down his hand again, a little harder still. His hand sent a hot pang through me. My hips wiggled from side to side.\n\n\"Fuck,\" I gasped.\n\nThen Jack spanked me again. I squealed in pain and panted heavily into the sheets. I could feel my dick twitch and drip pre-cum.\n\n\"Still enjoying this?\" Jack said.\n\n\"Oh fuck, yes,\" I whimpered back.\n\nThen Jack unleashed a rain of spanks onto my ass, grunting with satisfaction as he went. My back arched, and my toes curled. I bit down onto the sheets and squealed. My body shifted with every spank. As the pain grew, my feet started to kick up and down onto the sheets. It hurt, but my arousal was through the roof.\n\nSpank after spank ripped through me until my ass was burning with heat and pain. It was incredible. I was utterly consumed by dirty, submissive, rapture, and my dick was dribbling everywhere.\n\nThen the spanking stopped. Jack shifted position and reached between my legs. I jumped as he ran his fingers along my dick and felt my pre-cum. He played with my slimy juice gently with his fingers.\n\n\"Oh my God, I can't believe how hard you are,\" Jack exclaimed.\n\nHe gave my dick a few light strokes, which forced gasps from my lips, then released.\n\n\"That really turned me on,\" I whispered back. \"Please play with me some more... or fuck me.\"\n\n\"Hmm, well, I think it's time for you to be fucked Elfi,\" he said. \"Don't you?\"\n\n\"Yes!\" I whispered. I massaged my hot, stinging ass with one hand, then shuffled up onto my knees.\n\n\"Thank you for the spanking, Sir,\" I said, my face blushing. My eyes looked over his body. His lower half was naked, showing his rock hard dick, but his shirt was still on.\n\n\"Let's get this shirt off you,\" I said.\n\nHe nodded. With incredible eagerness, I flicked off his shirt buttons. With each one, a new little sliver of his skin came into view. When the final button was undone, he reached and pulled his shirt off himself.\n\n\"Oh my God,\" I gasped. My pupils dilated, he was so fucking hot: muscular chest, beautiful six-pack. I was such a lucky girl. I reached forward with my hands to touch him. \n\n\"Mmm,\" I murmured in delight. \"You are the best Christmas present I could have hoped for.\"\n\n\"Trust me,\" he said. \"The feeling is mutual.\"\n\nHe kissed me again and began to caress my body. He was gentle at first, but he became rougher as his desire grew. Excited groans started to escape my lips as his big strong hands manhandled my tender flesh.\n\n\"Let's lie down,\" he said.\n\nI nodded and shuffled backward on the bed. I arranged myself lying face-up with my head against the pillows. Jack crawled up on top of me and kissed me again. Our tongues entwined, and my hands grabbed at his arms and chest. I felt so little next to him, like being trapped by a very sexy tiger.\n\nThen he pulled back, reached over to a drawer beside his bed, and pulled out a little bottle of lube. Jesus Christ, it was happening! \n\nI spread my legs, drew my knees up to my ass, and raised my buttocks to give himself easy access. Jack smiled and squirted a dollop of lube onto his hand. He slathered it all over his dick. Then he squirted out another generous dollop and massaged it around my pucker, before gently pushing his slick finger into my anus. I gasped, as he softly rotated his digit, lubing me up from the inside. Then he withdrew himself and grabbed a tissue to wipe his hand.\n\n\"Mmm,\" he said as he crawled back on top of me. \"You are so fucking hot.\"\n\nHe reached between his legs to angle his dick, then slowly pressed it towards me. I inhaled as it felt it touch against my asshole, but he did not push it inside. Instead, he began to rub his dick up and down my crack, teasing the hell out of me. I wrapped my legs around him to draw him closer.\n\n\"Do you want my cock?\" he said.\n\n\"Yes,\" I squealed. \"Please fuck me!\"\n\nHe laughed a sexy little laugh.\n\n\"Okay, Elfi,\" he said.\n\nHe angled his cock against pucker, and then he slowly pressed forward. My back arched, but my eyes remained locked on to his. My legs wrapped tighter around his back.\n\n\"Fuck!\" I gasped as the spongy head popped inside me. I relaxed my muscles and dilated myself to let him in. He pushed forward, and I whimpered as he slowly penetrated me deeper and deeper. The feeling of being filled with his hot, thick cock was incredible.\n\n\"Yes,\" I murmured. \"Yes, yes, yes.\"\n\nHe pushed in half-way, then pulled back. He gave me a wicked smile, then he pushed in slowly a second time, but this time, he didn't stop half-way. He carried on deeper and deeper. As I felt him go all the way in, I squealed in delight.\n\n\"Does that feel good?\" he asked.\n\n\"It feels so, so good,\" I replied.\n\nHe pulled out once more. Then he began to thrust in and out of me rhythmically.\n\n\"Oh my God!\" I gasped.\n\nWith each stroke of his cock, a surge of gratification passed through me. My own dick throbbed with intense desire. Pre-cum continued to ooze from my tip.\n\n\"Elfi,\" Jack rasped. \"You feel so fucking good.\"\n\nHis dick pistoned in and out of me, over and over. My arousal was dialing higher and higher. I reached between my legs and grabbed my dick and began to jerk myself in time with his thrusts.\n\n\"Let me do it,\" Jack said. \n\nI nodded and released my grip. Then I felt Jack's hand wrap around his shaft. I gasped in delight. His hand was so much bigger than mine, and he began to stroke. The sensation of being fucked and jerked transformed my waves of pleasure into gigantic surges. I couldn't stop myself from moaning with each movement. \n\nMy legs tensed, and my body started to buck backward to meet Jack's thrusts. Grunts of satisfaction escaped his lips. He began to pick up the pace, thrusting in and out of me quickly and powerfully. My moans started to merge into one long wail. As we looked into each other's eyes, I gripped the bedsheets with my hands. My muscles began to shake involuntarily. I felt an orgasm building inside me, and I knew Jack was getting close too.\n\n\"You are so hot,\" he rasped with each stroke. \"So hot... So fucking hot.\"\n\nHis breathing became urgent and aggressive. His were thrusts fast and frenzied, quickly pistoning in and out of my helpless body. \n\n\"Jack,\" I wailed. \"Jack, I'm going to cum.\"\n\nIt felt like an earthquake was building inside me. I was going to cum all over again, and this one was going to a big one. The pressure was growing like two massive tectonic plates trying to slide past the other. They were about to slip at any moment, releasing cataclysmic energy. I was just a few thrusts away. My hands gripped the sheets even tighter.\n\n\"I'm going to cum too,\" he rasped back.\n\nWith his words, I didn't need any more thrusts. That was it. The thought of being filled with his cum was too much for my mind to cope with. As he looked into my eyes, the plates slipped. I exploded with pleasure, and shock waves of ecstasy tore through my body and soul. My balls tightened, my ass clenched down on his cock, and my dick twitched. Semen rushed up my shaft and powerfully ejected from the tip. \n\nJack kept thrusting, fucking me to his own orgasm. His neck began tense, his face flushed with rapture, and his eyes pierced into me. Then his cock twitched violently, injecting a surge of hot semen inside me. The feeling of Jack's hand on my dick, his cock in my ass, and his cum in my body elevated me to a state of incandescent bliss. I spasmed, twitched, and wailed, unable to control myself. Cum was spurting into me; cum was spurting out of me; every part of me felt like it was bursting with incredible, angelic light. I could barely register the individual sensations. I was utterly overwhelmed with euphoria.\n\nGradually, my mind began to regain its focus. Jack slowed his thrusting, and we both panted for breath.\n\n\"Oh my God,\" Jack whispered. \"That was incredible.\"\n\nI nodded, incapable of speech. My hands still gripped the sheets, unable to let go. My body was a quivering wreck. Slowly, Jack pulled out of me and shifted his body on the bed so that he was lying beside me. I tilted my head over to his, but couldn't make my mouth form words. He ran his fingers through my hair, making me whimper, and then kissed me on the forehead. I managed a little smile as aftershocks continued to pulse through me. \n\n\"Oh, God!\" I finally managed to whisper.\n\nI heaved my body up and on to my side and stared into Jack's eyes. He wrapped his arms around me and drew me into a close embrace. \n\n\"That was amazing,\" I whispered. \"I still feel like I'm cumming.\"\n\n\"You are amazing, Elfi,\" he whispered back and hugged me tighter.\n\nOur hearts beat together, and I snuggled into him as far as I could snuggle.\n\n\"I feel like I could stay like this forever,\" Jack murmured.\n\nI was able to muster no objections. A feeling of utter warmth had spread through me. Mollified by joy, my defenses lay exhausted, placid, and silent. Thoughts of Jack and I together washed through my brain without a murmur of resistance.\n\n...There we were walking through the park, hand in hand.\n\n...There we were on a train, snuggling up to each other in a carriage.\n\n...There we were watching a movie together.\n\nAs I fantasized, Jack held me for what felt like a blissful age. Then I fell asleep in his arms.\n\n* * * *\n\nI awoke. My eyes looked around the room. Jack was lying asleep next to me. His arms weren't around me anymore, but it appeared as if he had tucked me into the sheets. Dawn was breaking. Morning light seeped through the white blinds, bathing the bedroom in an ethereal glow. Had I just fallen asleep in his arms and been there all night? \n\nI was struck by an urge to wrap my arms around him and snuggle close. Or, better, wake him up with a sweet little kiss and have him wrap his arms me again. I always preferred to be the little spoon after all.\n\nI sighed.\n\nThen a thought struck me: what the hell was I doing? None of this was part of the strategy that I'd agreed with myself last night. The plan was just to have sex with him, then leave. But I didn't want to leave. Maybe I could just stay? Maybe there was some romance here... \n\nThen another thought hit me: I'd been here before. Not physically here in this room, but in this situation.\n\nA horrible feeling began to develop in my belly, which spread rapidly through my body. Why would he be any different from all the other guys who had messed me around? He wouldn't actually want to date me. He wouldn't actually want to introduce me to his friends or his family. ",
        "Then my mind replayed those girls fawning over him the night before. As I looked at him, I saw all the options a handsome man like him had. I saw all the attention that he'd get from girls with sweet, wet pussies. I wondered how many girls had he slept with? How many was he going to sleep with? Realistically, how could I compete against all those options?\n\nSurely, I'd just served my purpose as his fuck toy for the night, and now it was my time to leave. If he turned to me and said, 'why are you still here?' just like the last guy, I think I'd have a breakdown. I couldn't bear to deal with that hurt and humiliation again. \n\nI sat up in the bed and pulled my knees up to my chest. Oh fuck. Why had I allowed myself to have warm fuzzy feelings for him last night? That was so fucking stupid. Despite the nausea that was now pulsing through me in waves, my eyes couldn't help but look at him longingly. I could feel my heart pulling through my chest towards him. \n\nWe'd got on so well last night. He'd been funny, and kind, and gallant, and sweet. He seemed so lovely... but that was something I'd thought about other guys before, usually just before they stamped on my heart.\n\nTears started to well up in my eyes. I felt like I was going to be vomit. I had to leave before my mind developed any further delusions that I might have found someone who cared about me.\n\nQuietly, I shuffled out of the bed and softly padded across the carpet. I was still completely naked. The door to the bedroom was slightly ajar. With tension in my muscles, I prized it open enough for me to get through. Thankfully, it didn't creak, and I stepped out into the hall. \n\nThe hall was slightly colder, and the floor was wooden. I crossed my arms and crept towards the living room on tiptoes. There I saw my clothes strewn across the couch and floor. Quickly, but quietly, I dressed myself. I put on everything apart from my boots, as they might make a clicking sound as I walked down the hall.\n\nThen I crept back through the apartment and took one final peek through into the bedroom. Jack was still asleep.\n\n\"Bye, Jack,\" I whispered. As I spoke, emotion welled up inside me. Tears developed in my eyes and silently trickled down my cheeks. My heart pulled towards him again, but the fear of rejection was just too much.\n\nI turned and quickly padded back down the hall, all the way to the door. There were a couple of bolts. The first one shifted easily. The second was stiff. I gritted my teeth and pulled harder. Then it opened with a snap. Shit! That was loud.\n\nThen I pulled the handle. It clunked down with another audible sound, but it didn't open. My wet, sobbing eyes widened with horror; then, I saw a keyhole. Maybe that needed to be unlocked too. My eyes darted around the hall. There was a shelf just to my right with a set of keys. I took a deep breath, wiped the tears from my eyes, and slowly grasped them with my hand.\n\nThen a sound made me freeze. The bedroom door was opening. Then footsteps started to come towards me.\n\n\"Elfi, are you okay?\" Jack's voice said.\n\nI didn't have words, but I couldn't help but sniffle.\n\n\"Elfi, are you leaving?\" he said. His voice seemed sad. \"Elfi, are you crying?\"\n\nMy heart pounded in my chest, and my body started to shake. I took a deep breath and turned to face him. More tears streaked down my cheeks.\n\n\"Elfi, what's wrong?\" he said.\n\nI raised my hands to cover my face and sank down until I was sitting on the floor. I pulled my knees up to my chest and curled up into a ball. The tears came hard and fast. I bawled like an idiot.\n\nI felt Jack crouch down next to me. \n\n\"Elfi,\" he said, with real concern in his voice. \"Tell me what's the matter.\"\n\n\"I just want to go,\" I sobbed.\n\n\"Of course you can go if you want to,\" Jack said. \"But why?\"\n\nI remained curled up in a ball. I screwed my eyes shut.\n\n\"Why?\" I whimpered pathetically. \"Why? Because that's what I'm meant to do, isn't it? Just go...\"\n\n\"No, Elfi,\" Jack said. \"Why would I want you to go?\"\n\n\"Because that's what guys always want me to do,\" I said. \"They fuck me... then tell me to go.\"\n\n\"But I don't want you to go,\" Jack said. \n\nHe reached over and gently touched my hair. \n\n\"I want you to stay, Elfi,\" he said. \"Of course, only if you want to stay too.\"\n\nI gulped and opened my eyes and looked at him. His face was etched with concern.\n\n\"But do you just want to have sex with me... or do you want something more?\" I said. \"It's okay if you just want to have sex with me, I just need to know.\"\n\n\"Well... obviously we've only just met,\" Jack said. \"But I'd been hoping for something a bit more than just sex. You seemed like such a sweet girl, and we'd got on so well. I thought maybe I'd met someone who I finally clicked with.\"\n\n\"Don't say that unless you mean it, Jack,\" I said.\n\n\"I do mean it, Elfi,\" he said.\n\nI closed my eyes and took a few deep breaths. Could this be real? Could he actually want me as more than just a fuck toy? My mind struggled to believe it, but I wanted it so badly. I opened my eyes and stared back at Jack. His expression seemed to be one of complete sincerity.\n\nI took a huge gulp.\n\n\"Okay,\" I whispered, on the edge of audibility.\n\n\"Okay, what?\" said Jack.\n\n\"Okay... I'd like to stay,\" I said. \"If I haven't made myself look too crazy.\"\n\nI studied his face. He showed no expression other than concern.\n\n\"I must look like such a psycho right now... but I've been hurt so many times,\" I said. \"So many guys have fucked me and then told me to leave, even ones who seemed nice at first. So when you came along, I didn't want to let myself believe that it would be any different.\"\n\n\"Oh, Elfi,\" Jack said. He leaned forward and wrapped his arms around me. I wrapped mine back around him and started to sob all over again.\n\n\"Sorry, Jack,\" I blubbed. \"I don't even know why I'm crying now. I'm not usually like this.\"\n\nJack ran his big hand up through my hair and gently massaged my scalp.\n\n\"I understand,\" he said. \"Sounds like you've had a lot of bad luck in the past.\"\n\n\"You're telling me!\" I said back, with a little laugh.\n\n\"Come with me,\" said Jack. \"I've got something that might cheer you up. It's Christmas Day. Angels aren't meant to be sad on Christmas Day.\"\n\nFrom my tear-streaked face, I gave out a little burst of laughter. \n\n\"Okay,\" I said.\n\nJack stood up and helped me up to my feet, and then he led me into his kitchen. I hadn't seen that room before, but it was clean and modern, just like the rest of his apartment. On the kitchen table, there was a little gift-wrapped present. Jack picked it up and gave it to me. \n\n\"Merry Christmas, Elfi,\" Jack said. \"Here's a little gift for you.\" \n\nI gave him a puzzled look. \n\n\"Jack,\" I said, wiping tears from my eyes. \"How the hell have you got me a present?\"\n\nHe smiled and laughed.\n\n\"You fell asleep pretty quickly last night,\" he said. \"I wrapped it after you'd nodded off.\"\n\n\"Yeah, but how could you even get me something?\" I said, completely baffled. \"When did you even have the time?\"\n\n\"Why don't you just open it,\" he said.\n\nHe leaned against the kitchen table and looked at me with a pleased but mischievous expression. I sniffled, bit my lip, and allowed myself a little smile.\n\nI felt the package in my hands. Beneath the wrapping, it felt like there was a cardboard box, but what could be inside it? I weighed it in my hands; it wasn't that heavy. I shook it; it didn't rattle. I cocked my head to the side and laughed in puzzlement.\n\n\"What the hell is this?\" I said.\n\n\"You look so cute when you're confused,\" Jack said. \"Just unwrap it.\"\n\n\"Okay,\" I said. I carefully took off the paper. It just appeared to be an old cardboard box. I raised an eyebrow.\n\n\"Look at what's inside,\" said Jack, still smiling at me.\n\nI opened the box and extracted the contents. \n\nI gasped. \n\n\"Jack!\" I cried. \"Wow, Jack, I can't believe it!\"\n\nIt was the koala hat I'd been looking at the day before. Warmth flooded through my body.\n\n\"I saw you looking at it before your boss shouted at you the first time last night. You hadn't seen me at that stage, but I'd seen you,\" Jack said. \"You seemed to really like that hat. When you went to the bathroom, just before we left the Christmas Market, I decided to buy it for you.\"\n\nMy mouth hung open in amazement.\n\n\"Jack, I don't know what to say!\" I squealed. \"That's so sweet... I'm just... amazed that you did that for me.\"\n\nI put the little hat on and beamed with joy. I danced around excitedly, shaking my head from side to side. \n\n\"Oh my God, Jack. This is my favorite Christmas present ever!\" I said, as my heart glowed inside me. \n\nI launched myself at Jack and wrapped my arms around him. He put his arms around me and pulled me close.\n\n\"Do you believe me that I want you to stay now?\" he said with a laugh.\n\n\"Yes,\" I panted. My eyes welled up again, but this time with tears of joy.\n\nThen we kissed.\n\n* * * *\n\nSo that's it, folks! What did you think? Did you enjoy Jack and Elfi's story?\n\nI really appreciate all comments and feedback - whether good or bad. Positive comments keep me motivated to produce more stories. Constructive criticism helps me become a better writer.\n\nIf you're interested, I also have other romance-oriented stories with dominant men and submissive t-girls. Go to my profile and check out 'Forbidden Lizzy' or 'Meeting Jenna.' If you liked this story, you'd probably like them too.\n\nAlex :)"
    ],
    "authorname": "Alex_Lockheed",
    "tags": [
        "alpha male",
        "christmas",
        "dominant male",
        "love",
        "romance",
        "spanking",
        "submissive t-girl",
        "t-girl",
        "trans",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/lonely-in-berlin"
}