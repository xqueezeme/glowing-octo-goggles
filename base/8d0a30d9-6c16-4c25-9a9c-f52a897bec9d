{
    "title": "Lust at First Sight Bk. 02 Pt. 01",
    "pages": [
        "Authors note.\n\nI know you're all excites to get into reading the newest installment for Nick and his sisters, so I'll keep this short.\n\nThankyou to everyone for the emails and messages showing your support and letting me know how much you like my work. It really means a lot to me.\n\nHarem Sisters isn't finished (I know...I have to keep reiterating this) it's just at point where I can let it sit for awhile.\n\nMore Lust at first sight is to come, and even a couple of brand new stories I have been working on.\n\nPeace out. Stay awesome.\n\nChapter 1\n\n\"You're doing a great job, Nick.\"\n\nJohn's cart pulled up beside me, and the lean, balding man stepped out with a soft groan that was typical among middle-aged men. I tied off the last bag I had emptied from the trash cans and deposited it into the long tray of my own cart. The carts that the University had on site were nothing more than modified golf carts with the rear seats removed and a large tray installed for hauling rubbish and carrying tools. Mine was currently loaded up with half a dozen black trash bags from my rounds.\n\n\"Thanks, John,\" I said, wiping my hands clean on my grey coveralls. \"It feels good to be useful again.\"\n\n\"You're more than useful,\" John chuckled. \"You do the work of three men most days. The others are grumbling about looking bad in comparison.\"\n\n\"I hope I haven't caused any problems,\" I sighed.\n\n\"No. Not at all,\" John shook his head. \"They can grumble all they want. I've gone easy on them for far too long.\"\n\nThis wasn't the first time I had encountered men like those. On my first day, John had introduced me to my fellow groundskeepers earlier this week. Mark, Justin, and Corey. The trio were all hanging out by the maintenance office smoking when John and I dropped by. They seemed rather dismissive of their supervisor and even more of me. Well, Mark was anyway. Mark's curly red afro and pale skin made him look like a clown, which wasn't helped when he laughed obnoxiously at his own jokes. He definitely led the conversations among the three of them. Justin was almost as bad, feeding off his friend in-between staring at any and all of the pretty students who walked by. His beady eyes constantly showed how high he was at any given time. That hadn't changed for even an hour all week.\n\nCorey was the odd one out of the three. He was taller than his friends--even tall than me--with a shaved head and an impressive goatee. He was easily an axe-handle wide at the chest, with knuckles that looked like they were made for busting stone. He looked intimidating with a nose that had been poorly set after breaking and the tattoos running down both arms and poking out from under his shirt collar. At first glance, I would have picked him for the so-called alpha, but he was far more reserved. He was also the only one of the three that showed any respect to John, and I had noticed him working twice as hard as Mark and Justin--although that really wasn't hard.\n\n\"Corey does a good job,\" I said, pulling my phone out to check my messages.\n\n\"He does,\" John nodded. \"But he has a temper problem and spends far too much time on personal phone calls.\"\n\n\"I'm sure he has his reason,\" I shrugged, opening a message from Erica.\n\nThe message showed no text, only a kissy-face emoji and some black love hearts I nearly missed. An image of Erica loaded, and I had to do a quick check over my shoulders to make sure no one was standing behind me. Erica was naked in the image, sprawled out on my bed with her legs spread and her free hand resting on her smooth pubis. Her eyes bore into mine as she looked directly into the camera, and I could almost hear her voice telling me to fuck her like I owned her.\n\nErica had spent three of the last five sleeping in my bed. Each night we had unforgettable sex that blew away everything I had ever done in the past and put ridiculous expectations on potential future encounters. Well...encounters that weren't any of my sisters. Emily had slept in my bed for the other two nights--I never knew who was going to join me--and while we still hadn't taken the final plunge, we shared some truly memorable moments together.\n\nRemembering the nights spent with my goofy sister as we explored one another while being visually stimulated by the very erotic photo of Erica had the desired effect on my body.\n\n\"I better get these to the dumpsters,\" I said to John, pointing a thumb over my shoulder at the pile of black trash bags.\n\n\"Of course,\" John laughed softly. \"I do tend to prattle on a bit.\"\n\n\"Always happy for a chat. I just want to clear this out before the smell starts to drift,\" I chuckled.\n\n\"Understandable,\" John nodded. \"I'm off early to go pick up my daughters, and we're heading out to my father's farm for the weekend.\"\n\n\"That's great news, man,\" I smiled. John had separated from his ex-wife and was having a hard time getting past her to spend time with his two daughters. Both girls were over eighteen, but their mother still held a firm grip on their lives.\n\n\"It really is,\" John grinned like a fool.\n\n\"Well, I am happy for you, man. You enjoy the weekend, and I'll see you on Monday.\"\n\nI held my phone to my chest as John drove away in his cart, waiting for him to be out of sight before I glanced around and took another look at what my gorgeous sister had sent me. I drank in the still image of her body splayed out on my bed. I let my eyes roam over every visible inch of her naked flesh and envision the scent, touch, and taste of her skin. My dick was ready for a fuck party, and I could imagine the throbbing pulses as complaints. Urging me to go home early and plough my sister.\n\nI shook my head and locked my phone. I still had a few hours of work left, and the others weren't going to get it all done. In truth, whatever we didn't get done today could easily be caught up on over the weekend. John had said that he regularly came in on Sundays or early Mondays to catch up on things he missed or forgot the week before. The University campus was relatively new and didn't take much work to maintain it.\n\nBut I still wanted to get my tasks done for the day.\n\nA buzzer chimed over the PA system, telling me that a class session was just ending. Students would be heading to new classes, off to grab lunch or home for the day--depending on their schedule--which meant I would have to contest with pedestrians on the paths until they cleared out. I pulled my packet of smokes from the glove compartment on my cart and sparked one up, giving a security guard a wave as he walked by. Mel was right. They really didn't give a shit as long as you stayed out of sight of campus administrators.\n\nI was just about finished my smoke and ready to move out when I spied a flash of long, white hair in a crowd of students. The bulk of the students moved on, leaving the white-haired beauty in plain view.\n\nMel was maybe twenty metres away, but she was unmistakable with her platinum-coloured hair that hung down to her perfectly shaped ass. She was far smaller than her sisters in all aspects, but she still had her own curves. It was almost like she had been created on a smaller scale than her sisters. Her hips were small, but the curve to her waist was noticeable. Her breasts were tiny in comparison but perfect on her frame. And her ass...like all of my sisters, Mel's ass was a thing of dreams.\n\nI spotted a guy talking with Mel and immediately felt a pang of jealousy shoot through my body. Who was this guy? Was he bothering Mel? I stamped those thoughts and emotions down as fast as they'd reared their ugly heads and took a deep breath. It was natural to feel something akin to jealousy, but it wouldn't do anyone any good for me to start creating fancies in my head that would eventually drive me to do something utterly stupid that I couldn't take back.\n\nIt was also a genuine possibility that Mel had positioned herself in that spot to talk to a guy just to mess with me.\n\nMel's head turned my way for a split second, and I was starting to think that I was right about my sibling messing with me. She gave the mystery man a quick, friendly hug, then slowly crossed the distance between us. Mel took slow steps as her eyes locked onto mine. Her loose, frilly skirt swished with each step, threatening to reveal more of her fishnet-coated legs. Her black leather top left most of her tight stomach exposed while pressing and lifting her small breasts in a way that made them rival any of her sister's marvellous mounds. The fishnet that covered her legs also ran over her stomach, chest, and down her arms, making me think she was wearing a body suit. That alone gave me a flurry of new images that really didn't help my current situation at all.\n\n\"Hello, dear brother,\" Mel smiled as she approached me. \"Enjoying your day?\"\n\nMel and I had been caught up in some strange sexual limbo over the last week. It was no secret how badly Mel and I wanted each other--especially between us--but no matter where we were or what we were doing, every time things got hot and heavy between us, something would happen that would stop us and leave me with a raging erection that I ended up taking out on Erica later that night. There were a few times that I felt like I could have pushed for it from Mel, but I still felt a little uncomfortable getting too pushy with my sisters. The last thing I wanted was to sleep with them through coercion.\n\nThere had to be a reason why Mel hadn't come to spend a night with me yet. Maybe she wasn't completely ready.\n\n\"It's been a relatively good day,\" I said. \"It's getting better.\"\n\n\"It is,\" Mel winked.\n\nWe were still in public, and many students were walking the grounds, so I dared not do anything more than enjoy the sight of Mel's body. I wondered if she wore that outfit for the unnamed guy or me.\n\n\"Who was your friend?\" I asked, acting as disinterested as I could.\n\n\"That's Jason. He's just a friend,\" Mel shrugged. \"I actually had a crush on him until this hunk of a guy showed up out of nowhere.\"\n\n\"Oh really?\" I grinned.\n\n\"Yeah,\" Mel said, taking a step closer despite being in public. Mel reached out and caressed my erection through my coveralls with just her fingertips. \"I think about him every night.\"\n\nMy cock pulsed and practically jumped at Mel's touch. I felt an animalistic urge flood my body. The urge to mate with this creature of sin and pleasure before me. Like a wild animal, I needed to take her and mark her as my own. But once again, Mel and I were in a position where we were unable to indulge our wanton desires.\n\nI took a deep breath and inched away from Mel just slightly. Her hand fell away from my cock, but she didn't look upset. Instead, she just shot me a knowing smile and wink.\n\n\"I better get going,\" Mel said as if there was no sexual tension at all in the air. \"I'll see you at home tonight.\"\n\nMy eyes followed Mel as she sauntered away, her skirt swishing from side to side from the sway of her hips. Knowing Mel, she added that extra little kick to her step just for me. My phone chimed a few seconds later, breaking my concentration on Mel's behind. I pulled my phone out and saw a message from Mel. I looked up to see she had stopped and looked my way with a slight smile on her lips.\n\n'Check your pocket.' The message read.\n\nI checked both pockets on my coveralls before pulling a balled-up pair of panties free. The black silk mainly was see-through and felt extremely damp to the touch and warm. My phone chimed again, and I checked the new message from Mel.\n\n'I'm literally dripping right now.'\n\nMy head snapped up, and I locked eyes with Mel, she was too far away to speak to without yelling, and Mel was already being greeted by a couple of her friends I had seen around the campus earlier this week. My platinum hair sister blew me a discreet kiss--followed by a seductive wink--then turned to her friends before the trio walked off together. I was left there with a very difficult to conceal erection as I fought against images of taking Mel and having my way with her. Burying my cock so deep inside of her that I might as well be drilling for oil. I shook my head and banished the marvellous images and thoughts. The quicker I could get home, the quicker I could take out my frustration on Erica.\n\nSomething that I had been doing quite a bit lately.\n\nI finished my rounds and dumped the compiled garbage bags in one of the massive dumpsters on campus. The dumpsters were near overflowing, but we expected a removal tomorrow morning. I headed back to the maintenance office to take my lunch break. Corey sat by himself on the steps, a lit cigarette between his fingers. Mark and Justin were nowhere to be seen.\n\n\"Hey, man,\" I greeted Corey.\n\nCorey looked up from his phone and gave me a curt--but friendly--nod. \"Your girlfriend is waiting inside for you.\"\n\nI froze midway up the short staircase at his words. Corey hadn't really said more than two words to me or anyone since I had started so that in itself was surprising enough. But what did he mean by girlfriend? My first thought was that Jen had stopped by and decided that we were a couple, but that didn't make sense. The last time Jen was at the house, she barely paid any attention to me other than a friendly smile. What we had done was just a one-night stand. The only other option was one of my sisters had come by, and Corey had just suspected it was my girlfriend. I just saw Mel with her friends, so it must be Emily. But she knew better than to draw attention to us while she was at school.\n\n\"Thanks,\" I replied as casually as I could.\n\n\"No worries. The other two have gone home for the day,\" Corey said, stomping out his cigarette before adding the butt to his pocket. \"I'm heading out for my rounds. See you later.\"\n\nThe tall, shave-headed man rose to his feet and casually strolled away without a second thought. Had he really just given me a hint that I could fool around with whoever was waiting for me? It wouldn't have taken much to get Mark and Justin to go home early--since they did about as much work from home--and Corey would know that John had taken off early for the day. I took the gesture as a friendly one, something I would have done for one of my friends back home. The only issue I faced now is that no matter who was waiting for me--and what we did when I entered the building--Corey would believe we were dating.\n\nI took a deep breath and opened the door to the maintenance office, hoping that it was anyone but one of my sisters and if it had to be a sister, please not one of the twins. But another part of me also hoped it was one of them because I had some severe sexual frustration to work off.\n\n\"Hello, lover.\"\n\nSitting in the waiting area of the maintenance office--perched on the desk with her long legs crossed--was my second eldest half-sister. Erica wore a wide grin, flashing me her pearly whites as she eye-fucked me like the degenerate she was. She wore a pair of black denim shorts that were marginally larger than the soaked panties Mel had gifted me. And a band T-shirt from one of my all-time favourite bands. Her top had been cut and modified--as was most of her band merchandise--to show a generous amount of cleavage and hint at the milky flesh of her skin beneath.\n\nMy dick bounced and bobbed on its own as a fresh wave of blood rushed in.\n\n\"I see you're happy to see me already,\" Erica smirked, eyeing my crotch. \"Or have you been spending time with my sisters?\"\n\n\"Both,\" I grinned. \"But what are you doing here? Corey thinks you're my girlfriend.\"\n\n\"Of course, he does. What girl dresses up like this to visit her brother that she isn't fucking,\" Erica shrugged and ran a hand up her smooth leg. \"It would have been unbelievable.\"\n\n\"But what if he learns that we are related?\" I replied.\n\n\"It's one visit, Nick. But if you think it's too risky, then I'll just see you at home,\" Erica said, sounding a little annoyed.\n\nErica hopped to her feet and grabbed her handbag before heading to the door. I immediately felt bad for my behaviour. I should have known this would happen sooner or later. No woman wanted to be confined to the house and have sex in the same place again and again, especially in the early stages of a relationship. We had been sleeping together for a little over a week now, and I hadn't even thought to take her out somewhere. We needed to be careful, but that didn't mean we had to be shut-ins and too afraid to do anything fun and risqu\u00e9.\n\n\"Not so fast,\" I said, grabbing Erica's arm as she walked by. \"We're not done.\"\n\nErica looked ready to argue, but she melted into me once I pulled her body against mine and mashed our lips together. Her bag thudded to the ground, all but abandoned, as she circled her arms around my neck. My erection pressed almost painfully against her stomach, rewarding me with tiny moans as Erica pressed harder against me, grinding herself on my body.\n\n\"I thought this was too risky,\" Erica said breathlessly when we finally came up for air.\n\n\"You're worth any risk,\" I replied, kissing her forehead softly. \"And every consequence.\"\n\nErica attacked me once more, her tongue sliding into my mouth as her hands deftly un-zipped my coveralls, pulling them down to my waist. It was warm outside, so I had changed out of my jeans when I dressed in the locker room, leaving my underwear and T-shirt on. My T-shirt came next, followed by Erica's as they were both flung across the room. We were both in such a hurry to get at one another that it hadn't even crossed my mind to find somewhere with a little more privacy before we were both half-naked.\n\nI broke our intense make-out session and let my eyes drink in Erica's body. Her black and white lace bra lifted and pushed her magnificent breasts together in a way that ensured there were no rivals in the entire world. It took me a moment to get my words together. \"Follow me.\"\n\nI took Erica's hand and scooped up our discarded clothes before leading my lover into the break room. With a small fridge, microwave, and a table and chairs, the room wasn't much to look at. But it had a very comfortable couch along one wall. I turned to face my half-sibling as we reached the couch, and she surprised me with a devilishly delightful grin before shoving me back onto the soft cushions. Erica dropped to her knees and yanked my coveralls all the way down to my ankles. My boots were still on, but that didn't seem to bother my seductress of a sister as she yanked down my boxers and let them bundle at my ankles with my coveralls. My cock sprang free with a satisfying 'thwack' against my bare stomach. I watched as Erica eyed my erection like a starving lioness about to devour a wounded antelope. She even licked her lips.\n\n\"We don't have a great deal of time,\" I said regretfully.\n\n\"Don't worry. I know what I signed up for,\" Erica winked.\n\nErica stood and unclasped her bra, groping her magnificent melons herself as she bit her bottom lip. Her hips swayed from side to side as if she were on the verge of dancing for me, but instead, she spun in a slow circle as she unbuttoned her shorts and pointed her perfect ass my way. The sound of her zip was followed quickly by Erica bending at the waist as she slid her shorts down her long, smooth legs. Only once I trailed her movements and slid back up her body did I notice she wasn't wearing any panties. Her hairless, juicy mound peaked out at me between her firm cheeks, begging to be licked, sucked, and fucked until the goddess before me could take no more. But we really didn't have the security nor privacy to fully indulge one another. Before I could say anything, Erica spun to face me, mounting me quickly. I grasped her hips just as one of her hands took my cock between her delicate fingers, angling me just right before impaling herself on my rod.",
        "\"Fucking hell,\" Erica hissed.\n\nHer curses and moans echoed mine as I felt her tunnel envelope my shaft completely. I pulled hard against her hips, wanting to bury myself deeper and deeper inside of her body. I need more and more of this wondrous woman. Every time we made love was just as intense as that first time.\n\nThere was no time for words, no time for sweet whisperings to one another. The risk of being caught made the moment highly erotic, and I doubted I would last very long with the pace my lover had set. Erica worked her hips and rode me like she tried to get an entire week of cardio in, in just one session. Sweat glistened on her chest--rolling over her bountiful breasts that danced enticingly before me--and all the way down her tight stomach. The small break room was filled with the creaking of the couch, the slapping of naked flesh, and moans of pleasure as Erica and I worked in tandem to reach a climax. I hurtled towards mine far quicker than usual, and before I knew it, I was clutching one of Erica's breasts as my fingers dug into her hip. I let out a primal growl of pleasure as I pulled her hard against me, slamming my hips upwards and burying my cock deep inside her as I started pumping my load. I felt Erica's pussy convulse and tighten around my shaft almost immediately as my orgasm triggered her own climax. She bit into my shoulder as she let out a wail of pleasure. Her nails raked at my arms, nearly drawing blood.\n\nWe sat there together on the couch as my cock pulsated and spat my seed deep inside of Erica's convulsing tunnel. Her legs trembled, and her breathing came in heavy pants. Like she had run a marathon at a sprint.\n\n\"Fuck I love you,\" Erica managed to gasp out after a minute or two passed.\n\nI opened my mouth to reply, but she silenced me with a deep kiss. I was still hard as rebar and could easily go for another round, but I was conscious of where we were and that Corey could return at any minute. Plus, I still had work to do.\n\nWe finished up with Erica insisting on cleaning my cock, with her mouth--of course--and I was never one to refuse. She did a fantastic job, after all. My second climax was still way off, so I decided the clean was enough and basked in the feel of her tongue, lips, and mouth along my shaft, balls, and the areas all around my groin. Erica was thorough with her cleaning. Once we were dressed, we shared some more groping and kissing before straightening ourselves enough and heading back outside\n\n\"Thanks for lunch,\" I said with a wink. \"Perhaps we can do dessert too.\"\n\n\"As much as I'd love that,\" Erica said, planting a wet kiss on my lips. \"You have a date with someone else tonight.\"\n\n\"I don't get to decide, do I?\" I asked, grinning.\n\n\"Not even in the slightest, my love,\" Erica smiled and patted me on the cheek. \"You'll just have to deal with the multiple women in your life deciding amongst themselves.\"\n\n\"How-ever will I manage,\" I chuckled, wrapping Erica in a hug. \"I'll see you at home then. I love you.\"\n\n\"I love you too,\" Erica said.\n\nWe shared one last peck on the lips before regretfully parting ways. Even that was a bit risky outside where anyone could see us, but we couldn't live in fear our whole lives. I still watched Erica's ass as she sauntered across the freshly cropped grass of the campus towards the visitor parking lot. A bell rang suddenly, and it was then I realised that Erica and I had spent an entire session of class together. Time really did fly when you were having fun.\n\nI completely missed seeing Mel approach her sister--as my eyes were glued to Erica's gloriously bouncy behind--but enjoyed the friendly embrace they shared. The two looked to be talking in hushed whispers with grins spreading across their luscious lips, and it wasn't until they both looked my way--Erica with a playful wink and Mel waving with a waggle of her fingers--that I started to feel like this whole thing had been planned.\n\n\"Oh well,\" I shrugged, talking to myself. \"Doesn't matter. Had sex.\"\n\nChapter 2\n\nThe rest of my afternoon passed by without incident, although I was expecting Corey to make a comment while we packed up in the maintenance office at the end of the day. He didn't, though, and I wasn't sure that was any better. Now I was forever going to worry if he suspected what was going on between my sisters and me.\n\n\"Hey, Corey,\" I said, shouldering my backpack after changing. \"Do you mind not mentioning my visit to anyone? I only just got this job, and I'm not sure what John would do or say.\"\n\n\"What visit?\" he asked with a straight face.\n\n\"Thanks,\" I chuckled.\n\nCorey gave me a nod then gathered his things before heading outside. He was gone by the time I followed him, already striding towards the staff parking lot around the rear of the building. He wasn't really one for small talk, but I already liked him more than most people I had met since coming to Australia.\n\nI had my first rehearsal with Craig's band, The Sufferers, today. I had learned the songs that Craig had given me without too much trouble and had practiced a bunch with Emily in the garage. Emily had tried to convince Erica to jump in and give us a hand, but she refused, saying she would rather have her nipples pierced with toothpicks than playing any of their mediocre music. I thought it was a little harsh, but as usual, Erica was just being brutally honest.\n\nNot only was the name; The Sufferers, not a great pick, the music was dull and repetitive. Sure, it was fast and had an element of brutality that I liked in my music, but each song lacked originality, even among the other pieces. Every good songwriter had a particular style, a flair to their work, and it showed through the scales and chords they utilized while writing. I already noticed it with Emily whenever she and I were rehearsing. It was just natural. But Craig seemed to have a firm grip on the songwriting--along with his brother--and it showed in the music. It wasn't terrible, but neither was it anything to write home about. Regardless of how good or bad the music was, I was quite excited to rehearse with a band.\n\nA honk from a car horn caught my attention, and I stopped as Amanda pulled up in her beat-up, mustard-coloured Honda Civic. The eldest of my four siblings shot me a beautiful smile from the driver's seat.\n\n\"Ready to go?\" Amanda asked.\n\n\"Yep, all done,\" I nodded, rounding the car to climb in the passenger side.\n\n\"Are you excited?' Amanda asked as she pulled out of the parking lot.\n\n\"Yeah. It should be a lot of fun,\" I said. \"Are you hanging around for rehearsal?\"\n\n\"I was thinking about it. I hope you don't mind,\" Amanda replied.\n\n\"Not at all. Maybe you'll take over and show us all how it's done,\" I chuckled.\n\nAmanda smiled a soft, sad smile, and I immediately felt terrible for bringing it up. Emily had told me more than once that Amanda was an amazing musician, but she didn't play anymore because it always reminded her of our father. He had taught her to play, and it had been an exceptional bond between father and daughter. Being the oldest, Amanda had spent far more time around our father than any of our sisters. The twins were relatively young still when he died, and Erica had attached herself to her mother at a young age. Amanda was definitely Daddy's little girl, and it is evident that she hadn't fully healed from her loss.\n\n\"I'm sorry,\" I said, running a hand through my hair.\n\n\"It's okay,\" Amanda shook her head gently. \"This is all still new to you.\"\n\nAn awkward silence filled the car from then on, and this time it was me who turned the music up. The CD was of Craig's band--my new band--as it was the first time I sat in Amanda's car. It sounded different now than that ride home from the airport. I had broken down each song into its components to learn it, and now I was listening to the music on a whole different level. I was also far less distracted by the beauty sitting beside me.\n\nI let myself glance over to the goddess sitting in the driver's seat for a few seconds and allowed my eyes to drink her in and imprint her to memory. Amanda's raven hair was thick and wavy today, looking a touch wild but still a brushstroke away from perfection. She wore the same band t-shirt she had the day we met, only this time I was able to pick out the jumble of text on the front for what it said, 'The Sufferers'. It helped that the logo was stretched out across her perfect breasts. I let my eyes roam over her bare legs and imagine what her butt must look like in the tight workout shorts she wore that contrasted strongly against her pale skin. Everything about this woman was absolute perfection.\n\nI had fallen in love with her the moment we'd met.\n\nIt turns out the rehearsal studio was just in some guy's garage, a few suburbs away from the girls' house. I didn't have any expectations as to where the band would be practising, but I was kind of expecting a proper rehearsal space. There had been a few around London I knew of and had hung out with a mate's band as they rehearsed. They were usually small and cost a bit per hour, but they were soundproofed well and usually had enough basics for any bands to show up with their gear and play.\n\nThat was not the case with this place.\n\nI left my borrowed equipment in the car while I went in to check out the space. Daniel was here already, setting up his bass rig. The small 4x10 cab looked well-loved, but the amplifier he was resting on top was anything but old and cheap. The Hartke 800-watt amplifier would be more than enough for this tiny garage and easily powerful enough for any local pub shows we might play. The five-string Warwick bass--resting in its opened case--also showed the man's appreciation of his art. The brass machine heads gleamed, and the mahogany wood was highly polished and seemed to glow. I wasn't much of a bassist, but I knew enough about the instruments to know which brands and models were fan-favourites.\n\n\"Hey, Nick,\" Daniel grinned, extending a hand to me.\n\n\"Hey, man,\" I replied, taking his hand.\n\nDaniel seemed like a decent guy. He was shorter than me by a few inches, but what he lacked in height he more than made up for in sheer size. The man was almost as broad across the shoulders as two men, and his jet-black hair and beard gave a wild, outlaw look. He had thick, muscular arms and his large, meaty fists looked like they had broken a few noses. But I had heard nothing but nice things about him, even from Erica.\n\nHe had been respectful at the party--to both my sisters and me--and I didn't detect any animosity from him. This could have been a real issue considering I'd slept with Jen the first night we'd met. I had known that Daniel and Jen had hooked up--and that he was still interested in her--before meeting her, but I didn't know the guy and hadn't felt any guilt at having sex with her. Hell, I hardly knew her before I was balls deep inside of her while I eye-fucked Erica. Jen hadn't shown any signs of being interested in me after that, so I guessed it probably went unnoticed.\n\n\"This place is cosy,\" I said, glancing around the single-car garage.\n\n\"It's a piece of shit,\" Daniel laughed. \"And not my first pick for places to jam.\"\n\n\"Then why are we here?\" I asked.\n\n\"Because Craig's uncle is a 'sound tech,'\" Daniel said, putting exaggerated emphasis on the title. \"And he lets Craig practice here for free, and you'll learn rather quickly that it's easier to just let Craig get his way on things like this. Less hassle with him is better.\"\n\n\"You're not really selling this whole band idea,\" I laughed.\n\n\"Just making sure you know what you're in for before you sign on,\" Daniel said. \"Need a hand with your stuff?\"\n\n\"Yeah, that would be great,\" I nodded. \"Thanks, man.\"\n\nAmanda had already unloaded most of the gear I was using by the time Daniel and I had finished with our greetings, and we were both a little surprised to find she hadn't asked for any help when moving the heavy amplifier and cab from the back of her car.\n\n\"You on steroids or something?\" I asked, sizing her up jokingly.\n\n\"You don't buy gear like this if you're going to have a guy carry it for you,\" Amanda winked. \"I'm stronger than I look.\"\n\n\"Yeah, I wouldn't fuck with her,\" Daniel said, holding his hands up, palms outwards in surrender.\n\n\"Agreed,\" I chuckled. \"Don't worry, we got it from here. You did the hard part for us.\"\n\nI rolled the guitar amp into the garage while Daniel grabbed the guitar case and gear bag. Just then, another car pulled into the driveway behind Amanda's. The blue, tray-backed truck was blasting black metal through blown speakers, the tray piled high with equipment and hastily covered with an old, grey tarp that looked to have more holes than material. It definitely wasn't very secure.\n\nCraig jumped out and gave Amanda a quick hug before brushing by her. My sister looked a little put-off but recovered so quickly that I wasn't sure if I imagined the dejected look on her face.\n\n\"Hey, dude,\" Craig said excitedly. \"You keen to shred some metal.\"\n\n\"Yeah. I just need to get set up,\" I replied.\n\n\"Awesome. I'm gonna go check in with my uncle real quick,\" Craig said, already heading towards the house. \"If you got time, help Paul with my shit.\"\n\n\"That's code for 'I'm gonna stay inside until I know my shit is set up,'\" Daniel sighed. \"He does this shit all the time.\"\n\n\"We could just leave it all to his brother,\" I laughed.\n\n\"Damn, new guy,\" Daniel grinned. \"Pushing the boundaries already. I think we're gonna get along fine.\"\n\nAmanda began helping Paul with his drums, but Daniel switched with her when he noticed Paul was staring at Amanda when she was walking away. I was about ready to chat with him myself--I didn't care If Craig was her boyfriend--but Daniel must have noticed and stepped in.\n\n\"Hey, Manda,\" Daniel called out. \"I'll unload the gear if you can set up the rig for Nick. I'm not familiar with your gear.\"\n\n\"No problem,\" Amanda said, giving Daniel a friendly smile.\n\nA minute later, I spotted Daniel smacking Paul over the back of the head while Amanda wasn't looking. The younger man glared at Daniel but didn't do or say anything. What could he do? Daniel's arms were thicker than his legs, and the big-bearded man could have crushed his head in one hand.\n\nTrue to Daniel's prediction, all of Craig's equipment was set up before the Fabio look-alike reappeared with a man that I assumed was his uncle. He was of similar build to Craig--only less muscled--with long, mostly grey hair that thinned badly on top and a silly-looking soul patch. He wore one of his nephews' band t-shirts and a pair of too-tight jeans that looked to have never been washed before.\n\n\"Uncle Rob, this is our new guitarist, Nick,\" Craig said, introducing me to his uncle.\n\n\"Look at the arms on this one,\" Rob remarked, slapping me on the bicep. \"Looks like he spends more time looking at himself in the mirror than you do, Craig.\"\n\nPaul let out a peal of laughter that felt forced, but no one found it amusing. Rob didn't seem to notice as he laughed at his own joke, and he only stopped to let his eyes roam over Amanda as she took a seat on a stool just inside the garage door. Was this entire family full of degenerate assholes?\n\n\"He's also Amanda's brother,\" Daniel said.\n\nRob's eyes snapped away from Amanda and back to me quickly, but he covered any signs of embarrassment or fear quickly behind a cocky grin.\n\n\"Didn't know that taco-hut had any brothers,\" Rob smirked.\n\nI clenched my fist so tight a few of my knuckles popped loud enough for even Craig to hear it because he quickly and calmly stepped between his uncle and me, placing a hand on Rob's shoulder.\n\n\"We gotta practice, Uncle Rob. I'll come and chat to you about the album recording after we're done,\" Craig said, cool as a cucumber.\n\nRob looked between the assembled people as if realising he had company for the first time, then shrugged and headed back inside. There was a tense moment of silence as if everyone held their breath until the door to the house banged shut.\n\n\"Sorry about him,\" Craig said, turning to me. \"He doesn't really have a filter.\"\n\n\"It's fine,\" I said, relaxing my hand and taking a deep breath. \"Not a big deal.\"\n\nBut it was a big deal. Craig was already high on my shit-list because of the way he treated Amanda, and his brother's leering and sleazy looks pushed him right up there too, but their uncle just took the top spot with his apparent lack of giving a shit about anyone's feelings. If I ended up sticking with this band, I'd have to make sure none of the girls came to a rehearsal for as long as we were practicing here. I was even going to make Amanda promise me she wouldn't come.\n\n\"Let's play some metal,\" Craig said before pulling down the garage door.\n\nUnlike at home, this garage had no attempts at soundproofing whatsoever. A pile of boxes in one corner and shelves of old, rusted tools along one wall, next to a rotting wooden table covered by an undistinguishable mound of metal, cloth, and plastic. There was no evidence of care and thought here like there was back home. Emily treated the garage like her own little safe haven where the world could vanish, and there was only the music. Meanwhile, we were about to rehearse in a space that could have been rented out for the Texas Chainsaw Massacre movie.\n\nThe first song was a little messy all around as the band adjusted levels. There was no PA system or sound guy to adjust levels, so it was up to each individual to make sure they were loud enough not just for themselves but also for the others. Well, that would have been the case if Craig hadn't just turned his Marshall combo amp up to ten immediately. The speaker crackled softly under strain, and I had to focus harder to hear Daniel's bass over the obnoxiously crunchy tone he favoured.\n\n\"Fuck yeah,\" Craig said once the song finished. \"Sounding tight.\"\n\nWe did not sound tight at all. Paul was a decent drummer with evident experience under his belt, but he lacked consistency as he favoured speed over keeping each hit sounding hard and solid. The result made his playing sound out of time with the other jumble of sound bouncing around the horrible rehearsal space.\n\nCraig's guitar parts weren't challenging at all. We essentially played the same thing, with my parts occasionally changing for a short lead or the very occasional solo--which I had re-written. Even with the simple guitarist, Craig seemed to focus more on his vocals to the point where he should just put the guitar down altogether. I knew that wasn't going to happen, so I had to think of a way to fix these issues without sounding like I was coming in and bossing them around. Especially the brothers.\n\n\"Craig, you need to turn down, or you'll blow your amp,\" Daniel said before I could speak up. \"That's how you lost the last one.\"\n\n\"Sorry, man. I just get carried away,\" Craig grinned, then lowered the volume on his amp a touch. It wasn't much, but maybe it would be enough for now.\n\n\"And Paul, stop speeding up so much,\" Daniel complained to the drummer.\n\n\"Why don't you speed up?\" Paul shot back. \"Not my fault you're too slow.\"\n\n\"Your shitty rhythm is proof enough that you can't play that fast either,\" Daniel laughed.\n\nCraig let out a laugh at his brother too, but Paul just scowled at the both of them before directing it to me and grinning.\n\n\"I guess I can play slower for the new guy,\" he said.\n\n\"I think you need to play slower for yourself rather than anyone else,\" I chuckled, causing Craig and Daniel to laugh as Paul scowled again. \"Now, let's quit fucking around and play some metal.\"\n\nWe were rehearsing the songs in the order the others had planned to play them at the gig in three weeks, which meant the first three were rather dull and uneventful--in my opinion--while leaving the last two for their best. With each song we played, we were tighter and tighter as a band, so much that I was genuinely enjoying playing this thrashy, mediocre black metal. Then the final song started, and I couldn't wait to show off the changes I had made.",
        "Out of all of the songs I had learned, the final piece on the list left more room for creativity on my part. It was written with a clear second guitar in mind, and while Craig could play well, he was a definite one-trick pony when it came to writing metal. Instead of the fast, speed-matching tempo along with the chorus that Craig had written, I slowed my part down to half-speed. The melody rang clearer through this section when I played it at half-speed, and it sounded great alongside Daniel's bassline. The change drew an odd look from Craig, but we kept on playing.\n\nI found myself having to play a guessing game of who would speed up or slow down during the following few sections of the song. Paul would get excited and begin a new section way too fast, or Craig would just drop out of timing altogether and not even notice, relying on the rest of us to match him. But for the most part, we sounded like we knew what we were doing.\n\nMy solo came up finally, and I was fighting a grin as the previous riff was coming to an end, the signally changes wringing loudly in my ears. Then I glanced over to Amanda, sitting on the stool as she studied the band intently. Studied me intently. Our eyes met, and she quickly glanced away.\n\nMy hands reacted before my brain could register, and my solo kicked off. The first few notes sounded a bit flat, but I took control of myself and focused on one thing and one thing alone.\n\nShowing the fuck off for my gorgeous sister.\n\nThere was no greater motivator for any metalhead playing in a band than the ability to show off how cool he is and how well he can play for a pretty girl. It was a primary reason most guys played in a band, to begin with. Heads filled with stories from the '80s and the '90s about bands playing to sold-out shows. Girls throwing themselves at the band members and partying all night until you woke up with no memory of what you'd done and two naked women in your bed. That was until you got so shitfaced you tried to snort a line of ants.\n\nI knew there wouldn't be any groupie lining up for me at my first show, nor would there be free booze or drugs--not that I was interested in drugs--but I already had the love and affection of three gorgeous women that I would definitely perform for. And if that performance was appealing to the fourth of my household.\n\nWell...that was just a bonus.\n\n\"Why did you change the song?\" Craig asked as soon as the song ended. \"I gave you the music and tabs to learn.\"\n\n\"I just wanted to add my own flare to it,\" I shrugged, not wanting to outright tell Craig that I thought his writing sucked.\n\n\"Well...that's not how the song goes,\" Craig replied, placing his guitar down.\n\n\"I liked it,\" Daniel said, taking a swig from a bottle of water.\n\n\"Well, good thing you're just the bass player,\" Paul scoffed.\n\n\"How about we trial it during rehearsal and see how we feel about it next week,\" Daniel said, ignoring Paul's comment.\n\n\"Come on, Craig. Just give it a chance,\" Amanda said, taking Craig's hand but glancing towards me before lowering her eyes.\n\n\"Yeah, alright, we'll keep it in the song until next rehearsal and vote on it,\" Craig said as if it was his idea all along. \"Let's run through it again.\"\n\nWe rehearsed the set-list another four times before Craig started losing focus and started playing with his phone more, although Daniel was the one to call it quits as if he needed to be somewhere. Craig acted like he wanted to keep playing, but he disappeared inside almost as soon as his guitar was in its case.\n\n\"He does this all the time,\" Daniel said as I helped him load his gear into the grey station he drove. \"I think he likes the idea of being in a band more than actually doing anything with the band. He loses interest quickly and usually leaves his shit to be packed up last.\"\n\n\"Why do you play with him then?\" I asked, picking up the case for his spare instrument. Daniel brought a backup where he went.\n\n\"Not many bands around looking for a bassist,\" he shrugged.\n\n\"I find that hard to believe. A decent bassist back home would play for three or four bands,\" I said. \"And you're more than just decent.\"\n\n\"Thanks,\" Daniel chuckled. \"Unfortunately, it isn't like that here. You see, everyone's friend plays guitar, and with so many guitarists, a lot of them switch to bass just to get a spot in a band. Just ask your sister. Emily is one of the most talented bassists I know, and she struggles to find people to play with. Most guys just offer her a spot so they can try to get in her pants.\"\n\n\"I do remember her mentioning something about this,\" I said softly.\n\n\"I feel sorry for her. She is a good kid and deserves a real shot at what she loves. Unfortunately, most of the guys in the band scene are just assholes with instruments,\" Daniel said, then nodded over his shoulder to Paul, who was struggling to loosen a piece of his kit. \"Case in point.\"\n\nWe laughed softly but cut it off when Amanda came over. Paul was a dick, but he was also Craig's brother, and as unhappy as she seemed to be with the Fabio clone, he was her boyfriend.\n\n\"I'll give you a hand packing up, and then we gotta go,\" Amanda said.\n\n\"No problem. You all good, man?\" I asked Daniel.\n\n\"I got this,\" Daniel nodded. \"It was a pleasure jamming with you, man. You sounded great.\"\n\n\"Thanks,\" I said, giving Daniel a bro-like fist bump.\n\n\"You two seemed to be getting along,\" Amanda said when I wheeled the heavy cab over to her car.\n\n\"Yeah. But something doesn't sit right with me,\" I said.\n\n\"What's that?\" Amanda asked with a concerned look.\n\n\"How the hell did you end up with Craig with Daniel around,\" I laughed. \"He is such a nice guy and actually looks whoever he is speaking to.\"\n\n\"Don't you start too,\" Amanda sighed. \"I get enough shit from the others at home. I don't need it from you too.\"\n\n\"I was only playing,\" I grinned. \"Consider me officially on your side when it comes to this topic, and I'll even tell the others to back off.\"\n\n\"I guess you'd have a better chance of making them listen to you than I would these days,\" Amanda smirked, lifting the guitar case to slide into the back of her car.\n\n\"I can be very persuasive,\" I said, resting my hand on the small of her back softly as she straightened. Amanda's body stiffened, but then I felt her lean into my touch.\n\n\"What are you doing,\" Amanda asked, her voice so soft I almost didn't hear her.\n\n\"Nothing at all,\" I said, sliding my thumb back and forth just a touch. Her butt was right there. All I needed to do was lower my hand a few inches, and I would finally get to feel the glory that was Amanda's ass. But I held my ground. I had a feeling Amanda had the same idea when her hips gyrated just a touch.\n\nThe door to the house slammed shut, and I quickly stepped away from Amanda to grab the rest of my gear. I glanced towards the house to see Craig walking back to the garage. With the attention he was paying his phone, it wasn't likely he saw anything suspicious. He was so oblivious most of the time, I could be making out with Amanda right in front of him, and he would still be caught up in his own reflection.\n\n\"I gotta head out,\" Craig said to his brother. \"Pack up my shit for me. Rob is gonna give you a lift home.\"\n\n\"Wait for me, and I'll come,\" Paul said, hurriedly stuffing a drum into its bag.\n\n\"Not this time,\" Craig said, then strode over to Amanda. \"I gotta run, babe. See you tomorrow.\"\n\nThe two shared a long kiss before parting, and Craig turned back to his phone almost immediately before heading towards his car. The kiss made me feel a little uncomfortable, but it was the lack of empathy Craig showed towards Amanda after it ended that made my blood boil. Who the fuck did this guy think he was? Why couldn't he see and appreciate just how amazing this woman was.\n\n\"It's okay,\" Amanda said, placing a hand on my arm. \"He isn't always like this.\"\n\n\"You deserve so much better,\" I said through gritted teeth.\n\n\"What about being on my side,\" Amanda asked with a soft smile, clearly attempting to calm me down.\n\n\"Starting now,\" I sighed. \"I'm...starting now.\"\n\nChapter 3\n\nDinner was ready when Amanda and I got home. No one had cooked, but a dozen or more takeaway containers were spread out on the dining table. The girls had sorted dinner in the best way they knew how.\n\n\"This smells great,\" I said, taking in everything on display. There was an assortment of beef, chicken, and what I thought was lamb, along with rice, noodles, and steamed vegetables.\n\n\"This is the best Chinese takeaway in all of Melbourne,\" Mel said, expertly plucking a piece of chicken from the container with a pair of chopsticks.\n\n\"Such high praise from you means it must be good,\" I chuckled.\n\n\"Damn right,\" Mel said, stepping up beside me and lowering her voice. \"I only want the absolute best.\"\n\nMel grasped me firmly on the ass with one of her slender hands and shot me a sly smile before turning back to the food before us like nothing had happened. I glanced around at my other siblings, but no one apart from Erica seemed to notice. Erica was eye-fucking the shit out of me as she scooped some rice onto her plate. Amanda and Emily were chatting with one another.\n\n\"How did the rehearsal go?\" Emily asked once everyone was seated.\n\n\"Not too bad,\" I said simultaneously as Amanda said. \"Nick was fantastic.\"\n\n\"I'm sure Nick was great with his hands,\" Mel said suggestively, nudging me with an elbow.\n\n\"He played really well, and I could tell the whole band was impressed by him,\" Amanda said, choosing to ignore Mel's behaviour. That was a bad decision since it seemed to make Mel far more determined.\n\n\"Hardly,\" I laughed. \"Craig was annoyed I changed part of one song, and Paul just feeds off whatever his brother thinks.\"\n\n\"Craig just likes to be the boss in the band,\" Amanda explained. \"Daniel can handle him and will stick up for you. You two seemed to get along well.\"\n\n\"Daniel is a good guy,\" Emily smiled. \"He is a really talented musician too.\"\n\n\"Seems you two can't compliment each other enough,\" I smiled.\n\n\"What do you mean?\" Emily asked with a frown.\n\n\"Well, after practice, Daniel was telling me what he thinks of your music skills,\" I started explaining. \"He rated you very highly and said it was a shame that you haven't been able to get into a band and really shine. I believe he said you were the best bassist he knows.\"\n\n\"Wow,\" Emily said, sounding stunned. \"I haven't even played much around him or anyone else, though.\"\n\n\"Enough people have been around when you have been playing for word to get out about you,\" Erica said offhandedly. \"Most of my friends know you as the musically gifted sister.\"\n\n\"But you're just as talented as I am,\" Emily said to her older sister.\n\n\"I'm a drummer. I'm just good at banging things,\" Erica said, winking at me coyly.\n\n\"You know drums are more than just hitting things. There is so much more to that instrument,\" Emily said, missing the joke.\n\n\"Em,\" Mel said, leaning across the table. \"She was referring to being good in bed.\"\n\nEmily looked from her twin to Erica, then back again before letting out a soft laugh, followed by a goofy grin. \"I get it now.\"\n\n\"Don't ever change, my dear sister,\" Erica laughed.\n\nWe finished dinner with some casual conversation about what everyone had planned for the weekend. Erica was heading into the city for the weekend to see a friend who was visiting from South Australia. They had booked a hotel room in the city, so they didn't have to travel the two hours back in, and planned to hit up a few of the goth clubs and maybe a gig or two. Erica had extended an offer for me to come and meet her friend, but I wasn't sure how safe it would be. If I was in a hotel with Erica--and there was alcohol involved--I was going to want to fuck her brains out. We could play the boyfriend and girlfriend card again, but if Erica's friend ever came to visit again, it might be hard to explain.\n\nThere was also the possibility of Erica's friend hitting on me if she knew I was her brother. That could turn bad really quick.\n\nAmanda was also heading away for the weekend. Craig's family owned a house on the coast about six hours away, and the two were headed there for a weekend away. I was almost tempted to ask if I could go along to that one just so I could keep an eye on the king douche.\n\nThat would leave Emily and Mel in the house with me all weekend, and Mel had made it abundantly clear that she had no plans to leave the house. Something about video games and not wearing pants. I hadn't spent much time in my life playing video games--since we could never really afford them--but I was totally on board with the no pants part of her plan.\n\nI shared a smile with Emily after the meal was done. We'd get to spend plenty of time together this weekend. And I was really looking forward to it. We hadn't yet had sex, but each night that she came to me, we explored one another deeply, and there was no question that the both of us were satisfied at the end of a night together. I really wanted to make love to my beautiful, goofy sister. But even if I wasn't her brother, this would be her first time with anyone, so I understood how big of a step this was for her.\n\n\"Is there any point in me saying you don't need to help with this?\" Amanda asked with a raised eyebrow when I started helping her clear the table.\n\n\"Not really,\" I grinned. \"But feel free to try.\"\n\n\"I think I'll avoid that exercise in futility,\" Amanda smiled, then surprised me with a quick peck on the cheek. \"Thank you for being you.\"\n\nNo problem,\" I smiled back at the raven-haired beauty. \"I'll take the rubbish out.\"\n\nI gathered up the takeaway containers we had emptied and dumped them in the garbage. I tied off the bag and hoisted it over my shoulder before heading through the sliding door into the backyard. The garbage bins sat around the side of the house, just off a small path by a gate that led to the front yard. I dumped the rubbish and pulled a cigarette out, lighting it up and leaning against the red-brick wall. The spot on my cheek where Amanda's lips had touched still tingled and I could feel a faint ghost of her lips still. Every time we hugged, kissed, or even remotely brushed against one another, it left me feeling dizzy and distracted for a good while after. I wasn't sure if it was the intense feelings I had for her or the fact that I couldn't have her that was making it worse. I could only imagine how it would feel to hold her in my arms and share a bed with her.\n\nI took my time smoking my cigarette, giving myself a moment to clear my head. I had hoped that spending the day rehearsing with the band would help with my feelings towards Amanda--with her boyfriend being around and all--but it hadn't. If anything, being around Craig and Amanda had only cemented how wrong he was for her--or anyone for that matter. I knew I could make her happy, and it killed me that I couldn't.\n\nWhat made it worse was I knew she wouldn't reject me if I made a move. I knew it with absolute certainty, but I couldn't do that to her. The last thing I wanted was for Amanda to question any relationship we had because of the way we got together.\n\n\"Hiding from me?\"\n\nI looked up to see Amanda standing by the corner of the house. She was leaning against the wall, her arms folded under her breasts. Her top must have gotten wet while doing the dishes, and while it didn't turn see-through, it still clung enticingly to her body.\n\nAnd I could tell from the firm outlines through her shirt that Amanda wasn't wearing a bra.\n\n\"Just taking a break,\" I replied, holding the cigarette out for Amanda. She took it and leaned against the wall beside me.\n\n\"You really were fantastic today,\" Amanda said after a moment of silence.\n\n\"Thanks. Practising with Emily has really helped,\" I replied, taking the cigarette back from Amanda. \"I hadn't played all that much before coming here.\"\n\n\"Well, you're a natural,\" Amanda smiled. \"And don't worry about Craig. He has this hero complex where he has to be the best at everything. He'll feel threatened for a while, but he'll get over it.\"\n\nI caught myself from saying what I really thought about Craig and his issues, but I stopped myself just in time. I had promised to be on Amanda's side when it came to Craig, especially at home with our sisters. It wouldn't be a good look for me to fold on that promise on the first day.\n\n\"I'm sure it'll all work out,\" I smiled. \"I'm quite lovable after all.\"\n\n\"I've noticed,\" Amanda said quietly. \"Anyway, I have a trip this weekend that I need to pack for, so I'll leave you to it.\"\n\nThe reddening of her cheeks and the speed at which Amanda retreated made me feel like Amanda felt as bothered as I was by our time together. I smiled to myself at that minor victory.\n\nI may not have her, but I definitely owned a private parking space inside her head.\n\nI stubbed out my cigarette and tossed it in the garbage before heading up to my flat. I thought about heading back inside to help with the cleaning, but I guessed if Amanda was outside chatting to me, it was probably all done. I could head inside and see who was still awake, but I had a suspicion that there was someone waiting for me in my flat.\n\nAll week I had gone to bed to find either Erica or Emily waiting for me. I never got to choose, and I never saw both of them at once. Meaning they obviously organised who was spending what night with me. I imagined a spreadsheet layout on Mel's bedroom wall as she handed out assignments to her sisters for the month.\n\nI wasn't sure why I imagined Mel in that mix since we hadn't even spent a night together yet, but it seemed fitting for the petite, platinum-haired demon.\n\nI opened the door to my flat to find all the lights were off, but the glow of two dozen candles filled the small space, giving it a warm, cosy feeling. I closed the door behind me and kicked my shoes off. The main living room of my flat was empty, but the bedroom door was closed. I crossed the room slowly, knowing that my lover in the bedroom was waiting for me. I pushed the door opening slowly, knowing who I'd seen before my eyes lay upon them.\n\n\"Hello, beautiful. I thought I wasn't going to see you for dessert?\" I said, letting my eyes roam over Erica's naked body. Erica laid out on my bed, the dozen or so candles in the room bathing her skin in a warm glow. Shadows danced across her flesh, concealing and revealing her perfection with quick, jagged motions.\n\n\"Hello, handsome,\" Erica smiled, her eyes locking onto mine. \"What can I say? You left me satisfied but wanting more.\"\n\n\"Well,\" I smiled, pulling my shirt over my head. \"We can't leave you wanting more.\"\n\nThis time it was Erica's turn to ogle my body. I was far from a super-ripped bodybuilder, but a life of hard work and being on the edge of poverty had done wonders for keeping myself in shape. Add that to my enjoyment of lifting heavy shit, and I was pretty happy with the looks I received from women whenever I took my shirt off. Especially if those women were my half-sisters.\n\n\"I may have to come here more often,\" Erica said, still not looking me in the eyes.\n\n\"You're more than welcome,\" I replied, keeping up the play talk as I unbuckled my belt slowly. \"You are a most valued visitor.\"\n\nErica bit her bottom lip as my belt loosened and her eyes locked onto my crotch. I knew the best way to distract my sexy sibling in almost any scenario. I just had to pull out my dick. It was how I imagined I must look whenever Erica flashed her magnificent melons to me. Like an animal in the headlights.\n\nThe button popped on my jeans, and the zipper slowly slid down. Meanwhile, Erica's shifted her position on the bed. Earlier, she was lying on her side, her legs bent at the knees, a hand on her hip, and one supporting herself as she propped her head up, waiting expectantly. Now she was lying on her stomach, lifting onto her hands and knees slowly as she inched closer to the edge of the bed. Her eyes never left my crotch.",
        "My zipper reached the end of its descent, and my erection begged to be set free. I was already hard enough to hammer screws by the time the bedroom door had finished opening, and having Erica so close only made my cock throb and leak pre-cum.\n\nErica's face brushed close against the crotch of my pants, and I felt her hands over mine, at the waistband of my jeans. With her help, my jeans and underwear slide over my hips and down my legs, my cock bouncing free and almost smacking Erica in the face. I inhaled in anticipation, eyes closing out of habit as I waited for the warmth and softness of Erica's mouth around the tip of my penis. Erica was so fond of my cock that she would often just work me with her lips, tongue, and throat until I filled her mouth.\n\nWarm breath enveloped my erection from the base of my shaft to the tip of my penis. I could almost feel Erica's slightly parted lips as she moved along my rod teasingly. Erica wasn't usually one for teasing, but I had to say I was thoroughly enjoying the sensations. My cock was practically oozing in anticipation now.\n\nErica's hands on my chest forced my eyes open. My gorgeous--incredibly naked sister--was kneeling on the bed in front of me, the palms of her hands pressed against my bare chest. My cock pointed down slightly, between her legs, as if it were telling me what it wanted for dinner.\n\n\"Hey,\" Erica smiled as my eyes opened.\n\n\"Hey,\" I smiled back, my hands finding the perfect resting place on her hips.\n\n\"I love you,\" Erica said, leaning in closer. Her eyes smouldered with enough passion to burn any ordinary man. Or make him lose his load.\n\n\"I love you too,\" I replied truthfully.\n\nOur lips met with a gentle, soft kiss that transformed into one of passion as soon as our tongues joined the fold. Our bodies pressed tighter together, my cock slipping between her legs as Erica's large breasts mashed against my chest. I pulled at her body, wanting more of her warm, hot flesh against my body than was entirely possible.\n\n\"You are so amazing,\" I said breathlessly once our lips parted.\n\nErica moaned a wordless reply as I attacked her neck, kissing and nibbling the soft, sensitive flesh as my hands grasped her firm, juicy ass. I couldn't get enough of this woman's body. Every inch of her body and flesh was made for sin, and every atom of her body pulled at me to be with her. My cock pulsed between her legs, the wetness from her own arousal spurning me on, almost causing my very own climax without any penetration.\n\n\"I need you inside me,\" Erica said finally, pulling away and crawling up the bed on her back. Her legs opened for me, welcoming me into their warmth.\n\nI practically jumped onto the bed after her.\n\nErica's legs closed around me, her soft thighs pressing against my hips as she took me into her. Our lips met once more, and I felt one of her delicate hands grasp at my shaft, guiding me to where I needed to be. Her hips were angled perfectly, and my rod was as lubricated from my own pre-cum as Erica's pussy was from her own juices. I slid into her with an agonizingly slow thrust. We moaned in unison--our eyes never leaving each-others--as I hilted myself deep inside of Erica's welcomingly warm tunnel.\n\n\"I'm never going to get tired of this,\" Erica said breathlessly, almost as if she'd run a marathon already. Her chest was heaving with excitement, and her pupils were dilated.\n\nI let myself press against her body as I started to slowly move my hips. I wanted to feel every inch of her skin against mine. I wanted to feel her heartbeat through her chest and experience every motion she made while I was inside her. I wrapped my arms behind her, pulling her tight against me. Erica responded in kind and encircled me with her arms. Then our lips met once more.\n\nUsually, sex between Erica and myself was fast paced and rough. She loved being treated like a cheap whore, and I had to be honest; I loved treating her that way. It didn't mean that we didn't love each other. On the contrary, I believe it solidified our love and made those moments of cuddling and kissing in the early hours of the morning that much more special. At least between the two of us anyway.\n\nBut there were times for rough, primal sex and times to make love, and right now, we were making love. Our movements were deliberate and slow, matching one another's rhythm perfectly. There was no rush, no hurry to reach the finish line. There was only the moment and the feeling of being connected in so many ways that I wished this act would never end. But before long--longer than I would think anyway--my slow-building climax would suddenly break free, and I would flood Erica's pussy with a heavy flow of cum. But I didn't stop there. I couldn't. Erica would be going away for a weekend, and I needed as much of her as I could.\n\nI kept pumping into her, even as my body instantly wanted to relax. My cock was still hard, so it only took a minute or two before my body started reacting the way I wanted it to. Erica had obviously felt me fill her up but said nothing when I continued pumping inside her.\n\nI sat back after a few more minutes and took hold of Erica's thighs, just behind the knees, as I slowly pumped in and out, in and out. I looked down her body to see a mixture of sweat glistening over her skin and noticed the same on my chest and stomach. The temperature in the room always increased rapidly whenever we were together.\n\n\"You are so perfect,\" I said, admiring her naked body.\n\n\"As are you,\" Erica said, her eyes smouldering with desire as she ran a hand up my stomach to clutch my chest. \"Holy fuck, that is hot.\"\n\nI looked down to where we were still joined. My hips were still doing their thing--almost as if they had a mind of their own--but I watched along with Erica as my cock vanished inside of her like a magician performing a magic trick. I knew I was on the higher end of the scale when it came to cock sizes, but my sister took me like she was made for it.\n\n\"It's coming out,\" Erica gasped as a shiver ran through her body.\n\nI wasn't sure what she meant to begin with, but before long, I noticed a creamy substance oozing out from her pussy, squeezing past my shaft. It was the massive load I had deposited into her a few minutes earlier. Cum clung to the sides of my shaft, sliding in and out as I worked Erica's pussy like a butter churn. Globs of cum stuck to the insides of Erica's thighs, joining the party of her own juices that coated both our nether regions. We were truly making one hell of a mess.\n\n\"Let me on top,\" Erica said, her eyes wild with lust.\n\nI obeyed immediately, letting my cock slip free from her with a groan. It was one of the hardest things I had ever done in my life. I slid onto the bed on my back, just as Erica rolled to her knees and threw a leg over me like she was mounting a horse. Her breasts bounced into my vision, and I found myself entirely distracted by how perfect they were. That was until I felt my sibling and lover impale herself slowly on my shaft once again.\n\n\"It sucks not having you inside me,\" Erica moaned, then bit her bottom lip as she gyrated her hips.\n\n\"I feel the same,\" I gasped, grabbing a hip with one hand while groping one of her heavy breasts with the other.\n\nErica moaned as my hands massaged and roamed her body. I knew every inch of this goddess's body by now, but each time was like I was exploring new and exciting territory. Everything about her excited me, from the cute dimples at the small of her back to her amazing juicy ass and long, toned legs. There wasn't a part of her that didn't excite and arouse me.\n\nWith my first climax done and dusted, Erica knew it would take some effort to reach my second. It was always the case, and most of the time, we just left it at the one. We did need sleep after all, and some of our more intense nights together had left the both of us a little wiped out.\n\nI distinctly remember a day earlier this week when Erica had difficulty walking the morning after. We had decided it was a good idea to down a bottle of whiskey together and fuck the night away. It was fun, but both of us were a little worse for wear the following day.\n\nThis time though, Erica seemed determined to get more out of me.\n\nErica's pussy pulsated and clenched at me in ways I hadn't felt before, as if she was trying to milk every drop of seed from my balls. Her hips bucked and gyrated, keeping up a steady pace that would have given a belly dancer envy with how well controlled her hip movements were. I could do nothing but hang on and enjoy the ride.\n\n\"Are you ready, baby?\" Erica asked with a coy smile.\n\n\"Ready for what?\" I asked.\n\nErica replied by lifting herself nearly completely off my erection--keeping just the tip between her luscious pussy lips--and spinning herself around before dropping her hips, encasing my cock inside of her velvety tunnel once more. The manoeuvre was quick and efficient, leaving me stunned and more than impressed.\n\nMy lover wasted no time as she began working her hips up and down. Erica's hands grasped my ankles as she leaned forward, giving me a fantastic view of her ass and my cock sliding in and out of her.\n\n\"Enjoying the view?\" Erica asked, a little short of breath.\n\nI replied by slapping one of her cheeks hard, which caused her to gasp and giggle. I gave her other cheek a slap before settling for groping her juicy butt as Erica bounced on my cock enthusiastically.\n\n\"I definitely wasn't ready for this,\" I managed to groan out.\n\n\"Oh, that wasn't what you needed to be ready for,\" Erica said, shooting a devious smile over her shoulder.\n\nWithout breaking eye contact with me, Erica moved her hands up my thighs and started massaging my balls. She had stopped bouncing on my cock now, and I was fully rooted inside of her. The massage on my balls did feel good, but it wasn't enough to finish me off. That was until Erica performed some sort of forbidden sorcery. Her fingers found a spot at the base of my scrotum, and along with her pussy squeezing and pulsing along my shaft, it sent me right over the fucking edge. It was like a sudden punch to the stomach, taking my breath away and shocking all of my senses. Before I knew what was happening, I was pouring a tidal wave of seed into her pussy.\n\nA few minutes must have passed while I was in an almost vegetative state. My eyes were able to focus, and my brain rebooted. I looked down at my lover to see a satisfied look on her face as she licked my sperm off her fingers.\n\n\"What the fuck was that?\" I asked, clearly exhausted.\n\n\"Just something a friend of mine told me to try,\" Erica smiled.\n\n\"Remind me to thank your friend,\" I laughed. \"That was intense.\"\n\n\"I'll let her know tomorrow,\" Erica winked.\n\nI suddenly wished I was going on the trip with Erica and her friend. Maybe we could have sorted something out.\n\n\"Well. We've made a huge mess,\" I said, finally taking in the aftermath of my second climax. My first load had been leaking out of Erica's pussy while we were fucking, but the second seemed to fill her to the brim and pour out of her almost instantly. Thick globs of white pooled around the base of my cock, covering both our pelvis' with a cum cocktail that I was sure would stain the very fabric of the room with how potent it was.\n\n\"Maybe burn these sheets?\" Erica asked, sliding off my cock with a disappointed groan and draping herself along my body.\n\n\"Maybe the whole house,\" I laughed, wrapping my arms around her and giving her a kiss.\n\n\"Come on. I'll help you get cleaned up,\" Erica said, kissing me back before climbing from the bed and offering me a hand.\n\n\"I guess I'm the sex cripple this time,\" I laughed, taking her hand.\n\nMy legs did feel a little weak when I first stood up, but I was alright by the time I made it to the bathroom, well enough to give Erica's juicy butt a firm grope that divulged into us making out against the wall while the water heated up. We could hardly keep our hands from each other as we showered, which was okay by me. I soaped up her naked body, paying extra special attention to her breasts, ass, and between her legs. Even drawing a short and quick orgasm from her with my hands alone.\n\nErica repaid the favour when it was my turn to get clean. Soaping up my chest, stomach, and ass before making extra sure my cock was clean. She worked shower gel into my rod with both hands, soaping up my balls before performing the same trick. It wasn't as intense this time--since I was ready for it--but it had me painting her stomach with a load so large it looked like I had abstained from anything sexual for over a month.\n\nOnce we were all clean--after messing ourselves up again--and dried, we decided it might be best to sleep in Erica's bed for the night. My sheets were a mess, and the smell of the night's activities was far worse than it had been in the past. We both dressed--me in a pair of shorts and Erica her robe--before stripping my sheets off the bed and opening a few windows before heading down to the main house, hand in hand.\n\nThe bottom floor of the house was dark, but I could hear talking from upstairs. Erica deposited the dirty sheets in the laundry while I grabbed a bottle of water from the fridge. The washing machine started up, and Erica met me by the base of the stairs.\n\n\"You know how to use the washing machine?\" I asked jokingly.\n\n\"Shut up,\" Erica smiled, rolling her eyes. \"I'm totally house-wife material. I just have all this too.\"\n\nErica ran her hands down her body, pulling the robe up at the hem to display her long, smooth legs. Which I totally indulged in. Even though I just saw her naked, I never grew tired of checking her out.\n\n\"You sure the others won't mind?\" I asked, glancing upstairs.\n\n\"Only Amanda. And she is just jealous she isn't fucking you,\" Erica shrugged. \"But that's her fault, not yours. You'd join her in bed now if she asked you.\"\n\n\"You saying I'm easy?\" I asked, acting offended.\n\n\"No, my dear brother,\" Erica smiled, placing a hand on my cheek. \"But you have seen Manda's ass, haven't you? Hell, even I'd fuck her if she wasn't so straight.\"\n\nI didn't know why, but I hadn't really thought about my sisters in bed with one another. They were all into me--and obviously okay with a modicum of incest--but it never really crossed my mind to think about how they felt about each other. There were no signs of anything happening behind the scenes before I came home, but did that mean the feelings and thoughts were never there, to begin with? Or did I start some fucked up chain reaction with sisters wanting each other?\n\nIt was an interesting chain of thought. I'd have to bring it up with Mel next time we have some privacy. It involved sex and her siblings, so I was sure she, the little nymphomaniac, would enjoy the topic.\n\n\"You all have nice butts,\" I said, trying to stay neutral on the topic of which sister had the best rack/ass/legs. I may not be experienced in dating multiple women at once. But I wasn't an idiot.\n\n\"Good answer,\" Erica smiled. \"But we all know Amanda has the best ass. There is no shame in being second to that trophy, and I feel no shame in being second to any of my sisters because they are all amazing.\"\n\n\"You're good,\" I laughed. \"I may have to get you to write some talking points down for me.\"\n\n\"Anything for you, my love.\"\n\nErica stepped into my arms, and we shared a soft, sensual kiss. My hands rested on her lower back, and I felt--more than heard--Erica moan into my mouth as my fingers pressed against the small dimples on her back. I had found out early on that these dimples were like little on buttons for her libido. Pushing them both at the same time was a sure-fire way to get Erica grinding against your leg like a cat in heat.\n\n\"We'll have to be quiet,\" I whispered into her ear, knowing what she wanted.\n\n\"Then you'll have to gag me with something big,\" Erica whispered back, running her tongue up my neck.\n\nMy cock bounced to life and throbbed with the need of the moment. It was late--or early in the morning--but I didn't have work tomorrow, and Erica would be gone for a couple of days.\n\n\"Let's go see what I can do about that.\"\n\nChapter 4\n\nI awoke the next day closer to midday than I would have liked. Erica had kept me up most of the night and early morning with her insatiable desires. Not that I was complaining, but by the fifth climax on my part, I was ready to drop into a coma for a week.\n\nI had Erica's massive, four-poster, black-silk sheeted bed to myself when I finally woke up. My mind was a little foggy, but I was starting to remember the morning. Erica had woken far earlier than usual since she had to get a train to the city to meet her friend. We shared a few minutes of kissing in bed before she had to get dressed and meet Amanda downstairs for a ride to the train station. It was the first time I had stayed in Erica's room, and I was only just noticing the very Erica-like d\u00e9cor that gave the room life.\n\nThe walls were painted a deep red, and the bed was dark mahogany, giving the room a rich feel. A matching dresser with a mirror ran along one wall with neatly arranged candles, make-up, and a few small dragon figures. One of them had smoke coiling up from its nostrils from a small incense cone Erica had lit before leaving. The musky smell filled the room and made me think of her body, her touch, and her moans.\n\nA knock at the door brought me entirely out of my slumber, and the door swinging open a second later made me jump in bed. I sat upright, pulling the thin, silky sheet around my waist.\n\n\"Morning, sleepyhead,\" Mel smiled, strutting into the room as if it were her own. \"Time to get dressed.\"\n\nI didn't know where Mel got the idea that I needed to get dressed while she was walking around the house in what she currently wore. The top she had donned this morning barely covered her perky breasts, her nipples plainly visible through the thin fabric and her skimpy underwear was so sheer that it would probably dissolve in water. Her long, platinum hair hung loosely today, flowing down her shoulders and reaching her tight little ass.\n\nKnowing Mel, she would have picked this outfit out very carefully.\n\n\"Aren't you going to get dressed?\" I asked.\n\n\"You want me to put more clothes on?\" Mel asked, sliding onto the mattress beside me. She crossed her legs and let them dangle off the edge of the bed, half turning her body to face me.\n\n\"I didn't say that. I'd prefer you in less,\" I smiled.\n\n\"Good answer,\" Mel grinned. \"Maybe some breakfast in bed is in order for the day.\"\n\nMel crawled into the bed, kneeling before me as she unceremoniously ripped her tiny top over her head, tossing it across the room. Her small, perky breasts bounced delightfully as she groped at them with her small, delicate hands.\n\n\"You like?\" She asked, wiggling her hips.\n\n\"Very much,\" I said, already breathing heavy. Was it finally going to happen? There was very little chance of being interrupted this time. I could practically feel her body writhing against mine.\n\n\"Very much,\" I said, pulling the sheet back and letting my erection bounce free.\n\nMel eyed my cock hungrily--biting her bottom lip--but a look of uncertainty crossed her beautiful face. It was gone as fast as it appeared, but it was there. Something was wrong.\n\n\"We don't have to if you don't want,\" I said, not making a move on her but also not making a move to cover myself.\n\n\"I want to. I really fucking do,\" Mel sighed. \"But Emily had lunch ready, so we should probably go. Otherwise, I'm going to keep you to myself all day.\"\n\nCockblocked again, but this time it was for a good reason. Mel was right, it was my first weekend with just the twins, and I wanted to spend time with both of them. Emily had gone to the trouble of making lunch, and I didn't want to disappoint her.\n\nAnd Mel was right. If I laid hands on her now, I wouldn't be able to stop.",
        "\"Alright,\" I nodded. \"Let's get dressed and head down for lunch.\"\n\nI slid across the bed towards Mel and wrapped an arm around her slender waist. The touch of her skin--especially with so much of it exposed--was enough to make my head spin, but I kept it relatively PG with a soft kiss to her lips. Mel's cheeks reddened heavily from our kiss, and for the first time since I had met the platinum-haired beauty, she looked shy and embarrassed.\n\n\"That was nice,\" I smiled.\n\n\"Yeah,\" Mel smiled back. \"We should do it again sometime.\"\n\nMel gave me another quick peck on the lips before slipping off the bed and pulling her top on. She was still practically naked before me--and my cock was in party mode--so I waited a moment for her to leave the bedroom before I climbed to my feet. I needed a few minutes to cool my shit, but I had a feeling my weekend was going to be like this a lot.\n\nI spent a few minutes searching Erica's room for my clothes before I remembered I hadn't worn anything but a pair of shorts into the house the night before. My erection was settling to a dull throb and wasn't so noticeable through my shorts now, but it wouldn't take long for him to jolt awake like a near-death patient hit with an adrenaline shot to the heart. I guess the girls would just have to deal with me being shirtless and potentially straining my shorts for now.\n\nMel was long gone when I surfaced from Erica's room, so I decided to just head down to the Kitchen. Part of me was still in disbelief that I was able to share a bed with multiple women and not get in trouble for it, and as a result, my first instinct was to try and sneak outside and act like I was coming in from the backyard. I stopped myself, and instead, I just strode into the kitchen like it was any other day.\n\nIt was probably just safer to assume that the women in this house knew where I was and what--or who--I was doing at any given time.\n\nEmily was standing at the short end of the kitchen island with her back to me, and I took a moment to admire her taut ass. Emily didn't work out as often as her sisters, but she still had a body most men would sell their left nut to experience. Her choice of workout shorts really emphasised her juicy but firm behind as she leaned over the kitchen counter. The pale flesh of her soft thighs taunted me with memories of her warmth and scent as she straddled my face a few nights before. She had pulled so hard at my hair that night I was surprised I didn't have a bald patch.\n\nWith her back to me, I saw a moment to give Emily a pleasant early morning surprise. I snuck up behind my messy-haired sister on bare feet, careful not to draw any attention to myself. I noticed when I drew a little closer that she was on her phone and had earbuds in. I grinned to myself and stood behind Emily for a moment, drinking in the feeling of her body being so close.\n\nEmily turned before I could wrap my arms around her, though, in turn, ruining my surprise for her. But a look of shock crossed her face, and she jumped a little at me being so close. I act quickly, placing one hand on her hip to draw her to me and cupping her face with the other. I pulled her into a passionate kiss that melded our bodies together.\n\nEmily's initial surprised yelp turned into a long, low moan as she wrapped her arms around my neck and returned the kiss.\n\n\"Well, that was unexpected,\" Emily grinned, breathing heavily.\n\n\"Just a normal good morning to one of my favourite girls,\" I smiled.\n\n\"Nothing about this is normal,\" Emily laughed softly. \"But I'll take as much as you're giving.\"\n\nOur lips met again, and for the second time this morning, I was at threat of derailing my entire day. I actually didn't have any plans--and could easily fuck the day away--but I was looking forward to doing something with either or both of the twins.\n\n\"Can't you two keep your hands off each other for two minutes?\"\n\nEmily and I jumped apart like someone had sprayed us with a hose. We were both new enough to this that our initial reaction to someone catching us kissing was flight. Even if it was in our own house, and that person was a sister that encouraged our relationship.\n\n\"You scared the shit out of me,\" Emily said, playfully glaring at her twin.\n\n\"As much as I enjoy watching, I'm hungry,\" Mel smiled innocently.\n\n\"Alright,\" I nodded. \"Let's eat.\"\n\nThankfully, Mel had donned a little more clothing since she had woken me up. The white sweatpants covered more of her than I would have liked, but they rode low on her hips, which seemed to kick from side to side with each step she took. And her black tank-top hugged her small breasts and midsection tightly, technically covering everything while still leaving little to the imagination.\n\n\"What are your plans for today?\" I asked the twins.\n\n\"I was thinking we could go do some busking,\" Emily grinned. \"There's a spot I like to sit and play my acoustic guitar when the weather is nice.\"\n\n\"Sounds fun,\" I smiled.\n\nA day spent with Emily sounded like a nice change from the rinse and repeat of work, home, sex. I wasn't going to complain about living with these gorgeous women, but something normal would be good. But I also needed to make sure I wasn't bailing on Mel.\n\n\"What about you?\" I asked the white-haired beauty.\n\n\"All day stream,\" she said. \"A few friends of mine roped me into it.\"\n\n\"Stream? Like webcam?\" I asked.\n\n\"Not like that,\" Emily giggled.\n\n\"That's Erica's domain,\" Mel laughed.\n\nSuddenly the laptop set up at the end of Erica's bed made a lot more sense. Along with the lighting stands. I just thought she borrowed them from Mel since she was the photographer. This would explain what Erica did for money--and why the girls were all amused by my question on the first day. With how spectacular Erica always looked--her hair, makeup, and grooming were always top-tier--I could totally see her posing for sexy photos or entertaining men online. Strangely, I wasn't bothered by her choice of money-making. If I was being honest with myself, I was actually a little turned on.\n\n\"That doesn't bother you, does it?\" Mel asked, her head cocked to one side like a curious animal.\n\n\"No, actually,\" I smirked. \"Not at all. Which is strange.\"\n\n\"Why strange?\" Emily asked.\n\n\"Well...before moving here and meeting you four, I had dated a few women. I wasn't what you would call a jealous partner, but this sort of thing definitely would have bothered me,\" I explained.\n\n\"Maybe you just weren't confident in your choice of partner as you are now?\" Mel said thoughtfully. \"Maybe you feel so comfortable and trusting of Erica that there is no need to feel jealous because you know she will always love you?\"\n\n\"That could be it,\" I said, thinking about my feelings towards the gorgeous temptress.\n\n\"What about, Emily?\" Mel asked, gaining a look from her sister.\n\n\"What about her?\" I asked.\n\n\"Think about her showing her body to strange men online,\" Mel said, causing Emily's eyes to widen.\n\nI did what Mel said and imagined Emily in her older sister's position. The thought of Emily posing for those kinds of photos was actually incredibly hot and caused my erection to jump to attention. I then imagined Mel in the same position and Amanda to finish it off. The only one of the women I felt any jealousy towards was Amanda.\n\n\"Nothing. Well, not nothing. It's pretty hot thinking of you two like that,\" I laughed.\n\n\"You thought about me too?\" Mel smirked. \"That wasn't the experiment.\"\n\n\"You didn't feel jealous?\" Emily asked, almost timidly.\n\n\"No, not at all,\" I replied. \"I imagined it was completely and entirely your decision, and you wanted to do it. I couldn't be upset if you were doing something you wanted to do. I know you love me.\"\n\nA tear rolled down Emily's cheek as she smiled broadly. She brushed her messy hair away from her face and leaned across the table, planting a kiss on my lips. \"Thank you. But I don't think I'll ever be doing what Erica does.\"\n\n\"If you do. Maybe you could pose with our resident stud for me,\" Mel smiled.\n\n\"That's one way to keep our secret incestual relationship,\" I chuckled. \"By taking and keeping photographic proof.\"\n\n\"Fiiiine,\" Mel sighed. \"Ruin my fun, why don't you.\"\n\n\"This lunch topic took a strange turn,\" I laughed.\n\n\"Get used to strange with this family,\" Emily smiled.\n\n\"If you're not strange. You're boring,\" Mel added. \"With that last nugget of wisdom, I'll leave you, kids, to it. I'll be in my room, not wearing pants in case either or both of you wish to join me.\"\n\nEmily and I watched her twin leave the room and head upstairs. I glanced over to Emily out of the corner of my eye and wondered if she was actually checking out her twin. Erica's remark about Amanda the night before drifted up in my thoughts, making me wonder about a few things.\n\n\"Was it just me, or was she acting extra weird today?\" I chuckled.\n\n\"Definitely more weird,\" Emily giggled.\n\nI helped Emily clean up after lunch before we parted ways with a quick kiss to get ready for the day. I made the trip up to my flat and was satisfied the aroma of sex wasn't as potent as the night before. Opening the windows had really helped, although I still needed to get my clean sheets from the laundry. That could be a job for later, and if I forgot, I was sure there was a bed elsewhere in the house I could crash in for the night.\n\nMaybe even with one of the twins.\n\nIt was still summer--and far hotter than back home--so I pulled on a pair of cargo shorts and a sleeveless band T-shirt I'd gotten at a local show back home. The band didn't exist anymore--breaking up shortly after releasing their only album--but I still listened to their music quite regularly and had kept in contact with the lead guitarist. Not for the first time since moving to Australia, I found myself thinking about the people I left behind. I had a few good friends and a potential girlfriend, but everyone was always so busy working on careers and personal projects that it felt like I hadn't seen any of them for years. How had my absence affected their lives?\n\nIt was easy to fall into the line of thought that no one would miss you if you were gone. I had jogged down that lane plenty of times since my mother passed away. But not since coming here. Not since meeting my sisters had I felt like I didn't matter to someone. Each of them had gravitated towards me so quickly and made me feel welcome and loved. Albeit, in very different ways, I knew with utmost certainty that I would be missed if I vanished now. Missed by four remarkable women.\n\nI smiled to myself, amused and still bewildered at the change in my life. I had lost my only parent and wasn't sure of my spot in the world. But now, I lived in a huge home with four beautiful women who all seemed to share varying degrees of love and affection for me while not being bothered about sharing me with one another. It was like a really poorly written pornography movie where the hero of the story just gets away with putting his dick in every girl he sees.\n\nPart of me wondered if I could get away with that too. But I really didn't need to find out. I was only fucking one of the women in this house so far, and already I was feeling a little overwhelmed.\n\n\"Ready to go?\" Emily called out, pushing my front door open.\n\n\"Yeah, I'm ready,\" I replied, letting my dwelled thoughts go for now. \"Let's do this.\"\n\nI grabbed my phone, wallet, and keys before following Emily back into the house and garage. In the back corner of the garage was a stack of guitar cases under a dark grey blanket. Emily moved them around until she found what she was looking for and passed one to me before taking another for herself.\n\n\"These will do great,\" Emily smiled. \"I'm really looking forward to this. I wonder how much we can make.\"\n\n\"You're beautiful and talented,\" I smiled. \"I'm sure you will make a fortune today.\"\n\n\"Thank you,\" Emily smiled, then placed a hand on my bare bicep. \"But with these on display, I think you'll be the one bringing in some money.\"\n\nI gave my bicep a quick flex just to see Emily's reaction. Her cheeks darkened a touch, but she didn't look nervous or shy. Instead, she looked hungry. The predatory look in her eyes vanished almost as quickly as it had appeared, and Emily grinned her signature goofy smile before kissing me on the lips.\n\n\"Come on,\" Emily nodded towards the door.\n\nWe loaded our gear into Erica's blue sedan before Emily took the driver's seat. I still hadn't gotten around to getting my Australian driver's license--and riding Emily's bike had been the limit of me pushing my luck--so for now, I let the girls drive me around.\n\n\"It was nice of Erica to let us use the car,\" I said.\n\n\"Amanda was going out anyway, so it made sense,\" Emily replied. \"Plus, none of us enjoy driving to the city; it's just easier to jump on a train.\"\n\n\"I grew up around London, so I can totally relate to that,\" I laughed.\n\n\"You didn't drive back home?\" Emily asked, keeping her eyes on the road.\n\n\"I had a bike, and my mum had a car, which we used almost every day. But the city was a nightmare to drive in and worse to try and find a parking spot,\" I explained. \"It was far easier to just get a bus or a taxi in. We never really went into the city all that much anyway. Everything was ten times more expensive and way too many strangers.\"\n\n\"Sounds like one city is the same as any other,\" Emily nodded. \"It's much the same here. But I put up with all that for the concerts.\"\n\n\"Yeah, I can relate to that,\" I chuckled. \"That was the only reason I ever wanted to head into the city.\"\n\n\"I wish international bands visited here as often as they do over there,\" Emily sighed.\n\n\"One day, I was walking down the street, and I spotted a poster for Lamb of God playing,\" I chuckled. \"The venue was opening in about forty minutes, so I just bought a ticket and waited.\"\n\n\"I officially hate you,\" Emily pouted. \"But I'll forgive you if you give me a kiss.\"\n\n\"Deal,\" I smiled, leaning over to give her a kiss on the cheek. \"Is that better?\"\n\n\"We'll have to wait and see,\" Emily smiled. \"Alright, we're here.\"\n\nI hadn't paid any attention to where we were going or how long the drive was--something I was finding increasingly common around my sisters. Emily pulled the car into a small parking spot beside a large blue dumpster. The spot was clearly marked 'No Parking' in big, yellow letters. But Emily just pulled in and shut the engine off.\n\n\"If the car gets towed, I'm blaming you,\" I said.\n\n\"Don't worry about it,\" Emily grinned. \"The pub that owns this spot belongs to an old family friend. He lets us park here as long as we let him know it's us.\"\n\n\"That's handy,\" I nodded.\n\n\"He also lets me play here if he doesn't have anything booked,\" Emily added.\n\n\"Double bonus.\"\n\nI grabbed both guitar cases and followed Emily up to an old, iron-barred door. Emily gave a quick, crisp knock, and after a minute, I heard locks disengaging, then the inner door flung open.\n\n\"Emily, my dear!\"\n\nThe outer, barred door was next to open, with much more care than the inner door. A tall, slender man with a thick head of greying hair stepped out, wrapping Emily in a fatherly hug. He was dressed in faded jeans and an old Iron Maiden t-shirt covered with a black apron. The man didn't look any older than forty, although his steel-coloured hair and beard made him look far older.\n\n\"Hey, Darren,\" Emily smiled, hugging him back. \"Hope you don't mind us coming to play.\"\n\n\"Not at all, my dear,\" Darren smiled.\n\n\"Thanks, man. We really appreciate it,\" I smiled, offering my hand to the older man. Darren immediately reminded me of my grandfather, which put me at ease. \"I'm Nick.\"\n\n\"Not a problem at all. Any friend of Emily's is a--\" Darren smiled, shook my hand, then his eyes went wide after a few seconds. \"You...you're....\"\n\n\"This is our brother,\" Emily said, beaming with pride. \"He came home.\"\n\n\"I don't believe it,\" Darren said. \"I...I truly don't know what to say.\"\n\n\"Darren and our dad were best friends,\" Emily said, placing a hand on Darren's arm. \"And Darren is like an uncle to us all.\"\n\n\"It's like I'm seeing John again,\" Darren remarked. \"How did you find each other?\"\n\n\"My mother,\" I answered, stopping to take a moment to compose myself. Thoughts of my recently deceased mother were still painful. \"She gave me my father's personal information. It was actually far easier than I would have imagined.\"\n\n\"Amanda was still looking for him,\" Emily explained. \"She knew that Dad would want us to be a family one day. So, when Nick reached out about our father, she was notified about it.\"\n\n\"That girl has her father's spirit alright. While you got his face,\" Darren chuckled. \"Just be glad you were spared the blonde hair. We don't need another Fabio clone.\"\n\nIt was odd thinking of someone referring to my father like that. I had always likened Craig to the prolific male model. The photo of my father that I kept in my wallet showed him with long blonde hair and a cleanly shaven face. He would be considered handsome by many women.\n\nMuch like Craig.\n\nWas it unconscious of Amanda to date a man who resembled her father? Even if it was just a superficial resemblance. Everything I had heard about my old man had told me how wonderful and amazing he was. How much he had loved his children. Craig was not that kind of man.\n\n\"You okay?\" Emily asked softly, placing a hand on my arm. Darren had turned his back and was speaking to one of his employees.\n\n\"Yeah. Just thinking,\" I nodded.\n\n\"Hopefully about me,\" she smiled, glancing around to make sure no one was close enough to overhear.\n\n\"Even if I'm not thinking about you,\" I said, placing a hand on her hip. \"You're never far from my thoughts. Especially when you smile at me like that.\"\n\nEmily's cheeks reddened, and she smiled broadly before biting her bottom lip. \"I can't wait for tonight.\"\n\nDarren turned back to us, and we quickly turned our attention away from one another. Emily's last words hung in my mind as I followed her to the small stage area set up for bands and musicians. What was happening tonight? Did we plan something, and I had forgotten already? I was actually thinking about spending some time with Mel tonight. I didn't want her to feel left out. I didn't get a chance to ask Emily what she'd meant since Darren hung around while we set up. I didn't want to chance anyone overhearing anything about our home life. Especially someone who knew the girls so well.\n\nWe hadn't really come up with any plans for what we wanted to play before leaving the house today, so we just started off with some Nirvana. I even tested my voice over a few of them and was happy to see a grinning Emily after I started singing. Singing for old-school rock and heavy metal was how I began my journey into music. Everyone wants to be the lead singer of a band and have the girls throwing their panties at them. I was no exception. It seemed like every second metalhead I met was a budding vocalist who was looking for a band. With the market flooded, I decided to take up an instrument too.\n\nNow, being a guitarist wasn't much easier. It was probably more flooded than singers and vocalists, but the fact that most bands would take two guitarists--some even did an Iron Maiden with three--it was statistically easier to find a band. It was also a way to create my own music and generate the kind of band I really wanted to be a part of.\n\n\"You're an excellent singer,\" Emily said when we stopped for a break. \"Why haven't I heard you sing before?\"\n\n\"My mum would often ask me to sing along to her favourite songs from the '80s,\" I replied, feeling a little sombre. \"Ever since I was really little, I would oblige and just go nuts. I didn't care if I was terrible or not; I just wanted to make my mum smile.\"\n\n\"And singing makes you miss her more,\" Emily nodded.\n\n\"Yeah. But it also made me think about her,\" I smiled. \"And how happy it made her.\"",
        "Emily pulled me into a hug, burying her face into my chest. I looked around to make sure we were alone, which we weren't, and decided a hug would be fine. I hugged my sister back and let out a soft groan as Emily squeezed the life out of me.\n\n\"I am so sorry for you, Nick,\" Emily said, her voice muffled. \"I can't even begin to imagine how hard it has been for you.\"\n\n\"It's okay,\" I said, stroking her wavy hair softly. \"It's not like life has been a picnic for you and the others either.\"\n\nEmily lifted her face out of my chest and looked up at me with her dazzling green eyes. \"We had each other our whole lives.\"\n\n\"And now I have you all,\" I smiled. \"And you have me.\"\n\nI had never wanted to kiss someone as badly as I wanted to kiss Emily right now. The way her lips parted invitingly, the look from her eyes, and the feel of her body were near enough to make me throw caution to the wind.\n\nBut I didn't.\n\n\"We should probably head home,\" I said, once again thinking on what Emily had meant about tonight.\n\nEmily nodded, then leaned into me just enough to brush her lips against my ear. The touch sent shivers through my body and was highly risqu\u00e9, but I couldn't have told her to stop even if I wanted her to.\n\nEmily's breath touched my ears, and the following words almost didn't register.\n\n\"I want you tonight.\"\n\nChapter 5\n\nEmily's words bounced around inside my skull for the entire car trip home. Darren had thanked and paid us for the short session we had played, and then we were on the road. I hadn't really said anything to Emily since she had confessed to what she meant by 'tonight.' I didn't need to say anything; by the reddening of her cheeks every time I looked at her, she knew exactly what was going through my mind.\n\nOr close enough.\n\nI had resigned myself to waiting for Emily, and I had no issues with the wait. We still had fun, and it wasn't like I was sleeping with blue balls each night, but finally hearing those words from her was making me as impatient as a sixteen-year-old who just found out he'd get to see his first pair of boobs that night.\n\nI was so distracted that I almost didn't notice the new car sitting in the driveway. A car that signalled the house had a visitor.\n\n\"That's Jen's car,\" Emily said, pulling up beside it.\n\n\"Wonder what she's after,\" I said out loud. I had slept with Jen on my second night here after the girls threw a party for me. Jen was smoking hot with a body that would make a eunuch hard. The sex had been great--although that could have been the visual stimuli of watching a naked Erica get herself off--but she came across as narcissistic and vain. Definitely not someone I would see regularly.\n\n\"I know,\" Emily said. \"Do you mind giving me some space with Jen for a bit?\"\n\n\"Yeah, sure thing,\" I nodded. \"Is something wrong?\"\n\n\"Nothing you can help with,\" Emily smiled. \"But thank you for being amazing.\"\n\nEmily glanced around quickly before leaning across the centre console and giving me a quick, heated kiss.\n\n\"You're more than welcome with kisses like those,\" I chuckled. \"I'll put the guitars away. You go see what Jen needs.\"\n\n\"You're the best,\" Emily smiled. \"I love you.\"\n\n\"I love you too,\" I smiled back.\n\nI watched Emily walk the path to the front door--my eyes glued to the sway of her hips--and gave my wavy-haired sister a wink when she looked back. Emily beamed a smile that outshone the sun on the brightest day before darting inside. I stood there for a few seconds as I imagined tonight with her.\n\n\"Why did Jen have to show up at this moment,\" I sighed, grabbing the guitar cases from the back seat. \"It's like there is a god, and his goal is to cock block me with the twins at every chance.\"\n\nI stored the guitars away where they belonged and poked my head into the living room. Emily sat on the couch facing Jen, who had her back to me. Emily was holding Jen's hands in her own. The two were speaking too softly for me to overhear anything. Not that I was trying to eavesdrop.\n\nEmily looked up almost immediately, shooting me a small smile, but didn't say anything. I was curious about the issue with Jen and why she had seemed like such a different person at our last encounter. Or maybe she had just been different the night I met her? I didn't have much experience to draw from when it came to the gorgeous, raven-haired woman.\n\nI made myself scarce before Jen turned around. This gave me an excellent opportunity to check in on Mel since I'd most likely be distracted with Emily all night. Mel did mention something about no pants earlier, which was totally fine by me. Mel and I had some bad luck when it came to sex, constantly being interrupted at the worst possible times, but this time I'd have to keep a firm hold on myself.\n\nI wanted to give everything I could to Emily tonight, and it wouldn't be fair to wear myself out on her sister beforehand. With the amount of sexual tension in the air between Mel and me, I knew that once that dam broke, there was no fixing it.\n\nI had enjoyed fucking Erica and exploring Emily's body over the last week and a bit, but with Mel, it was different. We had fooled around time and time again, only to be interrupted. Not once had either of us reached any climax with the other. At least with Emily, I went to sleep satisfied each night. Fooling around with Mel only led to blue balls.\n\nI stopped in front of Mel's closed door, wondering if this was such a good idea. Would we finally crack this time? There wasn't really much to distract or get in between us this time. I had no idea how long Jen was visiting for, but I didn't expect her to leave anytime soon, and Erica and Amanda were out. This could finally be the moment I get the sexy little minx alone long enough to enjoy.\n\n\"I can't,\" I said to myself, taking a deep breath to steel myself. \"I need to think about Emily for now.\"\n\nI nodded to myself with a level of conviction I didn't know I had. I was going to refuse Mel if she tried anything. Politely, of course. Today and tonight were for Emily, and tomorrow I would spend some time with Mel.\n\nI knocked on Mel's door and waited a moment before trying the handle. The door swung inward before my fingers touched the handle.\n\n\"Hey, handsome,\" Mel smiled.\n\n\"Hey,\" I replied sheepishly.\n\nMel was true to her word about no pants. She wore a black singlet with a long-sleeve fishnet top and modest black panties that hugged her cute butt. Long, black, and white striped socks were pulled up to her mid-thigh, and her hair was pulled back in a casual ponytail. Everything about her outfit screamed comfortable and relaxed, but it also roared at me to take this woman and claim her as mine. Her pale flesh spoke promises of being soft to touch and smooth as silk. Her full lips begged to be kissed, and her slightly protruding hips may as well have had signs reading, 'hold here and hang on.'\n\n\"Coming to hide from Jen?\" Mel asked, cocking her head to one side.\n\n\"Something like that,\" I chuckled, regaining my brainpower finally. \"They didn't look like they wanted any intrusions.\"\n\n\"I'm sure Jen wouldn't mind,\" Mel shrugged. \"Just wave your dick around in front of her, and she'll forget any issues.\"\n\n\"Would that work for you?\" I asked with a raised eyebrow.\n\n\"Whip it out and let's find out,\" Mel smirked, her eyes blazing with the challenge.\n\nHere is the issue I had with Mel. These games were fun to play, but I had no idea where it would go from here. There was a good chance that I could pull out my dick right here and now, and next thing I know, Mel is on her knees and giving me the best blow job of my life only for us to be interrupted by Emily or Mel to say she has to go do something. Leaving me with an erection that didn't want to go down, and without Erica here, I had far fewer options.\n\nMy seductress of a lover had been on the receiving end of my sexual frustration more than a few times when I was left with my dick in my hand after an encounter with Mel.\n\n\"Maybe next time,\" I laughed.\n\n\"Shame,\" Mel said, taking a step closer to me, brushing her hand along my shorts and over my cock, causing it to bounce. \"I could do with a fill me up.\"\n\n\"Don't you mean, pick me up?\" I asked, focusing on keeping my composure.\n\n\"You heard right,\" Mel winked.\n\nMy willpower was melting as quickly as a snowman in a furnace, and it wouldn't be long before I was a puddle for Mel to do with as she pleased. The proximity of her displaying so much flesh was intoxicating, even though I had seen her naked more than once. Could this be the time something happened between us? I had let Mel lead the interactions between us like I had with Emily, but the twins were very different people.\n\nWhat if Mel was just waiting for me to make the first move?\n\nI quickly recalled our past interactions and noticed a trend among them. Mel would come on hot and heavy, then hit the brakes. Something would come up, and we'd stop. I figured she was just playing around until she felt ready. But what if I had been wrong, and she was just pushing me to make the first move?\n\n\"I did,\" I said, stepping closer to Mel.\n\nI grabbed the platinum-haired minx by the hips and pulled her against me. A soft gasp escaped her lips just as mine crashed into hers. I felt Mel's tongue force its way into my mouth as she ground her body against mine like a cat in heat. It was happening; it was finally going to happen.\n\nMy hands slid down to her lower back to rest on her taut ass. She had the smallest butt of the girls, but it was just as impressive. So firm, round, and perfect. My erection strained against my shorts as it dug into Mel's stomach as we both ground against each other.\n\n\"I need you right now,\" I said in a breathless whisper.\n\nMel looked into my eyes, her own filled with desire and lust, for nearly a full minute before biting her bottom lip and sighing. She dropped her eyes from mine and pressed her cheek against my chest.\n\n\"I wasn't expecting you to call my bluff,\" Mel laughed nervously. \"I hope you're not mad at me.\"\n\nI had been right. Mel wasn't ready, and she hadn't been waiting for me to make the first move. We had fooled around a bit, but like her sister, I guess she just wasn't feeling up to the finality of sleeping with her brother.\n\n\"I'm not mad,\" I smiled, kissing her on the forehead. \"I couldn't be mad at you.\"\n\n\"Thank you for understanding,\" Mel nodded. \"I better get back to my stream.\"\n\nMel nodded back to her computer. I wasn't exactly sure what I was looking at, but a chat window scrolled by on one monitor while a game was paused on another. I had heard about gamers streaming before but hadn't really seen it before.\n\n\"Don't worry,\" Mel smiled. \"My cameras don't face my door.\"\n\n\"You wear that on camera?\" I asked, looking down at her very scantily clad body.\n\n\"Better tips,\" Mel winked.\n\n\"Imagine the tips if they caught what could have gone down here,\" I chuckled.\n\n\"That would have resulted in a ban for me,\" Mel giggled. \"Talk to Erica if you wanna try that stuff. Now scoot, I got games to play.\"\n\n\"Wait, talk to Erica about what?\" I asked, but Mel silenced me by kissing me before ushering me through the door. \"I love you...big brother.\"\n\nThe emphasis Mel put on 'big' made my cock twitch, but the door was closed before my brain could recover enough to form a response. That woman was so complex it would have been easier to solve Rubik's cube with one hand while blindfolded than to figure out what goes on in that pretty little head of hers.\n\nJen and Emily were still in the living room, and I didn't want to disturb them, so I set about getting some tasks done. My sheets had been transferred to the dryer from the night before, so I grabbed them out and headed up to my flat to make my bed. I showered after the bed was made and dressed in a pair of sweatpants and an old t-shirt before heading back down to the house to make a sandwich since I hadn't had anything since lunch with the twins.\n\nThe house was still quiet, the hushed conversation between Jen and Emily the only sound I could hear. I was starting to worry that I'd be going to bed alone tonight--which hadn't happened for over a week--since Jen had occupied Emily all afternoon.\n\nI finished up my sandwich and decided to kill time by playing guitar. I crept by the living room quickly as to not give the girls the impression I was skulking around and eavesdropping and darted into the garage. I scooped the Jackson out of its case and checked it was tuned. I had only checked and played it yesterday, but it was a good habit to have. I had been to one too many local gigs where someone in the band had forgotten to tune their instrument.\n\nNo one wanted to be that guy.\n\nEverything was set and ready to go--as I suspected. I switched on the amplifier and started off with some 80's rock that had been playing in my head earlier today. I went into some songs Emily and I had played with the acoustic guitars earlier, only this time I have the volume and the distortion to really bring it to life. I sang along to the songs I knew and let the music wash over me.\n\nI lost track of time as I played; movement from the corner of my eye drew my attention. The note I held rung throughout the garage as my eyes lay upon Emily. Her brown, wavy mane was as tussled as ever, and her sparkling emerald eyes shone with a light that was dimmed only by her dazzling smile. Jen had obviously left, and Emily had found the time to change for bed. The long, black t-shirt hung halfway down her thigh, leaving a pale swath of skin about three inches wide on display where her socks ended.\n\nThese women and their thigh-high socks were going to be the end of me.\n\n\"Hey,\" I greeted Emily.\n\nEmily smiled at me, then shuffled across the room quickly. I placed the guitar down on the stand beside me, just in time for Emily to take my hand in hers, gently pulling me to my feet. No words were uttered as I followed Emily through the house, up the backyard, and into my flat. It felt like the entire world had stopped breathing for just the two of us.\n\nOnce inside, she tugged me along to the bedroom before she finally let go of my hand. The beautiful brunette turned to face me, lifting the hem of her t-shirt over her head and throwing it across the room in one smooth motion. She was completely naked under the shirt, save for her thigh-high socks.\n\n\"I'm ready for you, Nick,\" Emily said finally. \"I'm ready to love you completely.\"\n\nIt was now my turn to be silent as I stepped up to my lover. I wrapped my arms around her waist, pulling her into me as our lips met. Emily moaned as soon as my hands touched her skin, a moan that picked up in intensity the longer I held her, and the longer I kissed her. Her body seemed to vibrate in my arms as I pulled her into my very soul. I hadn't felt this kind of arousal since the first time I had slept with Erica. Then it had been an unbridled rush of passion and lust, but I still felt the same tingling sensation throughout my entire body.\n\nI wondered for a split second if it would feel like this with each of them.\n\nI pulled my thoughts back to Emily and this moment. This was her moment, our moment together and I needed to focus on us right now. We may have fooled around plenty over the past week, but that didn't mean I needed to rush into the end zone for the final goal. I wanted Emily to remember this night.\n\nI guided Emily onto the bed and knelt before her. Emily's legs parted for me almost instinctively, and I lay a kiss upon her thigh while I positioned myself. Emily's chest was already heaving with the thrill and anticipation, as was my own. She leaned back, propping herself up on her arms as she looked down to me, her eyes sparkling with unyielding love and devotion to me. I had no idea what I'd done in life to deserve the love of this remarkable woman.\n\nBut I was going to do everything within my power to make myself worthy of her.\n\nI let my lips linger on the smooth skin of her thighs as I slowly made my way to the warmth. Emily's scent was already flooding my mind, bringing on a heady intoxication that I only found possible with her and Erica. Everything about these women aroused me.\n\nI could hold back no more as I trailed my tongue between her pelvis and thigh, causing her to shiver. I planted a wet kiss on Emily's dripping sex, making sure to lock my lips around hers and sink my tongue deep inside of her. Emily moaned and bucked her hips immediately. She never could control herself very well, and I soon found myself the meat in an Emily thigh sandwich. Not that I minded at all.\n\nI worked every trick I had learned throughout my life onto Emily's ever-increasingly moist sex. Her thighs squeezed around my head as her body writhed, and her moans egged me on. I wrapped my arms around her hips and pulled her harder against my face as I tried to devour her whole.\n\nSuddenly, Emily's death grip around my head relaxed, and I felt her legs drape over my back. Her hips rocked gently as I lapped at her sex, sending quivers through her body that echoed her soft moans of pleasure. I had seen Emily in this state more than enough times to recognise a strong climax from the adorable brunette.\n\nAnd this is exactly how I wanted her.\n\nI extracted myself from Emily's legs and rose to my feet. My shirt came off first, followed by my shorts. I stripped them down my legs, but not the whole way off. My cock bounded free and immediately began dripping pre-cum down my length, even dripping onto Emily's thigh.\n\n\"I want you naked,\" Emily said, her tone heavy with lust. \"I like seeing you naked.\"\n\nI grinned at Emily and stripped my shorts the rest of the way down, kicking them off into the corner of the room. I stood before Emily as she bared herself entirely to me. My cock bounced before me, willing itself to get closer and closer to its much sought-after target. The pre-cum around the tip of my cock mimicked the juices that coated Emily's bald vagina and thighs, promising warmth and slickness that no one had ever felt before.\n\n\"Are you ready?\" I asked, taking my cock in one hand as I massaged pre-cum along my length.\n\n\"Yes,\" Emily nodded. \"I want to be yours.\"\n\nI knelt on the bed as Emily scooted further onto the mattress, keeping her legs spread wide for me. I lowered myself over her naked body for the first time and allowed myself a moment to enjoy the feel of her breasts against my chest, her thighs pressing into my hips, and her hands trailing up and down my arms. We had fooled around in the nude plenty of times already, but we had unconsciously kept ourselves out of such a precarious position. It's almost like our subconscious minds knew that once we were in this position, there would be no stopping us.\n\nWith a surge of willpower, I broke the skin-to-skin contact with Emily and sat upright on my knees before her. My rock-hard shaft rested against Emily's slick opening as my penis pointed to the sky, the tip still dripping with pre-cum.\n\nThe nod Emily gave me was all I needed.\n\nI gripped the shaft of my penis with one hand, taking Emily's thigh in the other while I angled myself to rub the tip of my penis along Emily's vagina folds. She was impossibly slick, with enough warmth radiating from her core to promise a welcoming and unforgettable union. Ever so slowly, I pressed the tip of my penis towards its goal. The lips of Emily's pussy embraced the glans of my penis like an old lover, bringing a gasp from the both of us. A tingling sensation rushed through my body, threatening to make me lose control already.\n\n\"More,\" Emily gasped.\n\nI realised then that I had closed my eyes. They popped open again to see my messy-haired sibling sitting upright, one arm behind her to support her weight. Emily's free hand slid up my chest until her fingers wrapped around the back of my neck. I leaned in, planting a kiss on her luscious lips. The kiss ended abruptly as I pushed another inch into Emily's warm embrace. I felt her thighs tighten around my hips as her whole body vibrated.",
        "I leaned back slightly to have a look at where we were connected. I always enjoyed watching my cock vanish into a woman's pussy while I fucked her, and it was even more arousing now since it was Emily's first time. The fact that it was her first time meant I had to take it extra slow with her. I knew I had an impressively sized cock--multiple women had mentioned it, and I had, of course, watched porn before--which could be very painful if I didn't use it right.\n\n\"More please,\" Emily moaned, her eyes locked onto my rod as it slowly began to impale her.\n\nI inched myself in a little deeper, fitting about half of my length inside of Emily now. Her tunnel constricted tightly around my shaft, but she was so wet and welcoming that I could almost feel her sucking me deeper and deeper inside of her. I decided this was probably about as much as she would take the first time and started sliding back out.\n\n\"No!\" Emily groaned in displeasure. Still holding me by the back of the neck, Emily pulled at me, forcing my cock back inside of her deeper than before. The sudden enveloping of my cock had surprised me, sending a shiver through my body as my climax rushed in.\n\nI gritted my teeth and every muscle in my body as I staved off my orgasm. It had never come so fast before, but the highly erotic nature of being with Emily right now was a strong aphrodisiac.\n\nEmily didn't have the same restraint I did, though.\n\nI felt her tunnel gush and pulse, soaking my cock and pelvis immediately as my cock received the most amazing massage I had ever felt. Emily's eyes rolled back into her head as she opened her mouth in a silent scream, her body tremble and her legs clenched tightly around me. I felt her entire body vibrate and shake for nearly a full minute before she finally came down from her high.\n\nThe wail that left Emily's throat was nothing short of magical. Emily buried her face into my shoulder, biting down hard enough to bruise the skin as she tried her utmost best to regain control of her body.\n\nI clung to her naked, sweating body as she rode out what could possibly be her first orgasm from penetration, trying to hold my own back in the process. I wasn't sure about the situation of birth control with the brunette twin, and I knew from experience with Erica that there was a good chance I was going to fill her to the brim when I came.\n\nEmily's hips bucked against me as she began to regain composure, and that was all it took. My hips moved of their own accord, and before I knew it, I was pumping my shaft in and out of Emily's quivering pussy. She was still soaking my pelvis with fresh waves of juices with each thrust I made, creating a wet, squelching sound that was echoed by the smack of slick flesh.\n\nI came without a second thought to the consequences, and nothing could have stopped me from filling my gorgeous sister right here and now. My climax rushed in, and I opened the door wide, welcoming it as I spewed forth an ungodly amount of seed into Emily's previously virgin pussy.\n\nI collapsed onto the bed beside Emily when my muscles decided to give out. I was breathing as heavily as her, but she had seemed to recover from her own climax, at least enough to roll over and rest her chin against my heaving chest.\n\n\"I think you came inside me,\" Emily laughed, dipping a hand between her legs, only to return it to her lips with a grateful smile as she licked her digits clean.\n\n\"I'm sorry, I should have checked it was okay too,\" I said breathlessly.\n\n\"I've been on birth control for a few years,\" Emily shrugged. \"We all have been, just to avoid any accidents.\"\n\n\"Let's see how it holds up to that,\" I laughed.\n\n\"Is that normal for guys?\" Emily asked, pointing to the mess coating my still hard cock and what covered my sheets.\n\n\"Not at all,\" I said as my breathing finally returned to normal. \"Not even for me. It only started happening with you girls.\"\n\n\"Well...I'm glad,\" Emily smiled, kissing me on the cheek.\n\n\"Why's that?\" I asked.\n\n\"Because I like your cum, silly,\" Emily winked. \"And it means we are meant to be doing this. There wouldn't be any other reason why we are so attracted to each other and why you do so much of...that.\"\n\n\"You created more than half this mess,\" I laughed, pointing to the wet patch on my sheets. \"I just washed these last night.\"\n\nEmily's cheeks reddened, and she buried her face into my chest. \"That's so embarrassing. Please don't tell the others.\"\n\n\"Your secret is safe with me,\" I chuckled.\n\n\"Speaking of secrets,\" Emily said, biting her bottom lip as If considering whether or not she should say something or not.\n\n\"What is it?\" I asked, concerned.\n\n\"It's nothing bad. Well, not in that sense of bad,\" Emily laughed. \"But you know how you and Mel haven't had a chance to sleep together yet?\"\n\n\"Yeeaaahhh,\" I said, drawing the reply out.\n\n\"Weeeeellll, that might have been her idea,\" Emily barely suppressed a grin.\n\nIt all made perfect sense now. Each time we had been together and were close to anything sexual, something happened, and there were even a few times where Erica had bailed on me.\n\nAnd it was usually when I was too cautious about making the first move.\n\n\"She's been fucking with me?\" I asked.\n\n\"In a way,\" Emily shrugged. \"She made a promise that she wouldn't sleep with you until I did. I didn't ask her to, but she still made the promise. I know she was doing it to stop me from feeling left out.\"\n\n\"Why would you feel left out?\" I asked, wrapping an arm around Emily and pulling her against me.\n\n\"You know how Erica is,\" Emily said. \"I'm not as forward as she is, or even Mel and Amanda. It wouldn't have bothered me, but there was a genuine possibility of you sleeping with all three of them before I worked up the courage to.\"\n\n\"Amanda has a boyfriend,\" I said.\n\n\"Doesn't mean she doesn't want you,\" Emily shrugged. \"We all know she does. Manda is just being difficult and stubborn as always.\"\n\nWhat Emily said had made sense. Erica was openly flirting with me from the moment I arrived, and Amanda had kissed me first. Both women had made the first move on me, and even Mel had let her curiosity influence her enough to make the first move. If Amanda hadn't shown restraint, I might have ended up in bed with her instead of Jen, and there was no way I could have resisted Mel.\n\n\"She still fucked with me more than was cool,\" I said, then laughed at the thought that popped into my head. \"I think she needs some payback.\"\n\n\"What are you gonna do?\" Emily grinned.\n\n\"Well, Em,\" I said, kissing her on the forehead. \"Can you keep this a secret?\"\n\n\"Yeah,\" Emily giggled.\n\n\"Alright, tomorrow morning, I'll go down to her room and start messing with her,\" I said, explaining my plan. To mess with Mel while she still thought Emily and I hadn't slept together. This meant she wouldn't let herself go all the way, and I could mercilessly tease her.\n\nThe plan must have excited Emily because she had started stroking my cock partway through my explanation, then moved down the bed to take me in her mouth. She moaned her responses from time to time, unable to talk with a dick in her mouth.\n\n\"I'll let her know tomorrow night sometime. Let her sit with it all day tomorrow,\" I laughed, running my fingers through Emily's messy hair.\n\n\"I want to tell her,\" Emily grinned as she let my cock slip from between her lips.\n\n\"Sure,\" I chuckled.\n\n\"But you should go down there now,\" Emily shot me a devious smile. \"It's not that late, and I can pretend to come looking for you in ten minutes.\"\n\n\"I think I have created a monster,\" I laughed.\n\n\"Just a little,\" Emily said as she slow-crawled up my body, kissing along my chest, up my neck, and across my jawline until her lips brushed my ear. Her breath was hot against my skin.\n\n\"You can go and tease my sister. Then come back and fuck me some more.\""
    ],
    "authorname": "Darth_Aussie",
    "tags": [
        "harem",
        "first time",
        "teasing",
        "little sister",
        "big brother",
        "brother x sister",
        "creampie"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/lust-at-first-sight-bk-02-pt-01"
}