{
    "title": "New York: Tentacle Breeding Ground",
    "pages": [
        "NOTE FROM THE AUTHOR:\n\nI'm still outlining part 2 of the main story and doing sketches and whatnot for potential illustrations, but here is the first of a few short side stories to hold people over until then. Most of these will just be focused on different happenings around the world that coincide with events happening in the main story, with varying levels of narrative content. This one in particular is more of a stroke story, but I'd like to keep a balance between narrative and sex going forward (for the most part).\n\nIf you want updates on my projects, follow me here on LIT.\n\n***\n\nRyan didn't know how he had gotten so lucky. All the other guys in the office had been pining after their manager Lydia for years, but not once had she ever responded to their advances... until now. He had mustered up the courage to ask her to a business brunch -- just business of course -- in order to discuss the quarterly earnings report, but hadn't expected her to actually accept. Perhaps it would develop into something more?\n\nDespite the questionable ethics of being in a romantic relationship with one's own boss, he certainly wouldn't mind dating the attractive twenty-eight year-old brunette, whose sharp, dark pant suit perfectly accentuated her svelte, hourglass figure, glossy red lips, and shapely breasts that looked too large to fit in a single hand. He was eager to attempt it though. Her deep, brown eyes gazed at him over the menu in her hand and he noticed that her plump lips were moving.\n\n\"Ryan...? Are you going to order?\" She asked him, with a slightly confused tone in her voice but one that still projected confidence. She was the very face of professionalism, having worked her tight ass off to rise up the ranks in the company and was already on the verge of stepping into upper management in the coming months.\n\n\"S-sorry!\" Ryan stammered, realizing he had been lost in a daydream. He looked up at the attractive blonde waitress who was standing at the table next to them. She held a small notebook in her slender, gently tanned hand and blinked expectantly at him with a warm, but artificial, smile.\n\nNo doubt she was a student working through college. She couldn't have been more than nineteen or twenty, and she had a slight hint of exhaustion on her face that the expertly applied makeup couldn't quite cover. The waitress wasn't really Ryan's type, as her boobs were probably B-cup at best, and unlike Lydia's long, flowing ponytail, her strawberry-blonde hair was cut short at her shoulders with a pink highlight streaking through her bangs. Ryan had to admit that she was certainly cute nonetheless.\n\nThough she had told them her name when they first sat down, he had already forgotten it. A quick glance at her nametag refreshed his memory.\n\n\"I'll uh... I'll get the vegetarian omelet, please, Elena\" Ryan said, clearing his throat and handing the menu up to the waitress, who took it with another smile. In Ryan's opinion, demonstrating a healthy diet was key to winning a woman's heart.\n\n\"Ooh, good choice!\" Elena replied, snapping her notebook closed. \"Would you like a refill on your waters before I go?\"\n\nRyan and Lydia uttered their thanks and affirmations to the bubbly girl as she topped-off their glasses before weaving her way back through the maze of tables, refilling the cup of the heavy-set man sitting behind them as she returned to the kitchen.\n\n\"I'm surprised you went with the vegetarian option,\" Lydia said with a raised brow while nursing her icy drink. \"The lunches you bring in to work are usually full of meat, I notice.\"\n\nI'd like to fill you with my meat... Ryan thought, frantically drinking some of his own water to cool his head and reduce the swelling in his pants.\n\n\"Oh, you know,\" Ryan replied with a casual sigh. \"Just looking to have a light, healthy brunch. Keeps my mind sharp during the day. I'm surprised a big-shot manager like you notices the lunches of a peon like me.\" He chuckled and leaned back in his chair, surveying the patio through the glass window next to them. It was a decently warm morning for an early New York autumn, but he always felt slightly more at ease sitting indoors. No pesky onlookers trying to steal peeks at Lydia.\n\n\"I make it my business to keep a finger on the pulse of my employees,\" she shrugged, taking another sip of her water and wiping away the lipstick stain on the glass with her napkin. \"Speaking of business, what was this urgent analysis of the quarterlies you wished to speak to me about? You've really proved yourself over the past few months, so I am interested to hear your thoughts.\"\n\nRyan smiled and leaned forward, pulling some files out of his briefcase on the floor next to him and began to discuss with Lydia his ideas on where growth could be promoted... though the growing erection in his pants certainly didn't need any help. As Lydia bent towards him to scan the documents, her blouse collar fell open slightly and revealed her inviting cleavage. He gulped and forced his eyes away from her bosom and back to the graphs on the paper using a force of will that he didn't realize he possessed.\n\nThey spoke for some time, with Lydia interjecting her own ideas and nods of approval every so often. Soon, the cute waitress returned with their meals and they began to nibble on their food between remarks. Nearly half an hour had passed before they finished their plates and their waitress came over to take them away.\n\n\"Any coffee or dessert today?\" Elena asked them expectantly, expertly piling their dishes onto a tray of other people's dirty plates that she balanced on her hand. Ryan and Lydia exchanged glances, waiting for the other to speak. Ryan steeled himself to ask Lydia would like to share a pastry with him and opened his mouth to speak.\n\nBefore the words could come out, a sudden loud thud on the glass window next to him made Ryan practically leap out of his seat. Elena's grip on her tray slipped due to the surprise and the dishes all came crashing to the floor around them, causing everyone in the cafe to swivel in their chairs and look in their direction.\n\nThe three of them at the table were unaware of the attention, as their own eyes were glued on the woman banging on the glass. Her hair was disheveled as if she had been running a marathon and there was panic written all over her face.\n\n\"Get out of there!\" She shrieked. \"Run! Everyone run! They're comi-\" Suddenly, the woman screamed and flew off into the sky and out of view as if yanked away by some giant fishing pole. Ryan jumped to his feet, knocking his chair over as people inside the restaurant began to shout and clamor out of their seats as well.\n\n\"What the hell!?\" Ryan shouted, backing into Elena but catching her before she fell into the pile of broken glass around her feet.\n\n\"Everyone, back away from the windows!\" Lydia yelled, taking charge of the situation. \"It looks like there is some sort of terrorist attack going on!\" All of the diners began to hurriedly push their way towards the back of the building, some even running into the kitchen. Ryan moved away with Lydia and Elena, who was trying to usher other patrons to safety despite being in tears herself.\n\nRyan looked back over his shoulder out the large windows and saw numerous alarming scenes all along the busy city street. In a skyscraper across the street, he saw a woman suddenly pressed against the glass with some sort of fleshy looking rope tied around her waist. To Ryan's surprise, she was topless and her pale breasts were squished firmly against the window as she struggled against an unseen assailant.\n\nMore bodies began to press up to the glass, most of them in some state of undress if not completely naked, before the windows couldn't take the pressure anymore and shattered. The captive humans were pulled up into the sky as shards of glass fell to the streets below. Luckily there were no pedestrians nearby to be put in danger.\n\nIn fact, there didn't seem to be many pedestrians at all out on the streets at all. What few he could see were running as fast as they could down the sidewalk or attempting to get into their cars. One such man, seemingly a delivery driver of some sort, was fumbling with his keys when he suddenly fell to the ground and screamed as something suddenly pulled him away by the legs into a nearby alley. A cold sweat began to roll down Ryan's forehead as the people around him began to murmur and cry in panic.\n\n\"We need to get out of here,\" Lydia whispered, bending down to take off her heels to allow her to run better. \"Is there a back exit?\" She turned to Elena who squealed in surprise as Lydia grabbed her arm.\n\n\"Y-yes!\" The waitress replied, seeming to snap out of her daze a bit. \"Through the kitchen! Come on!\"\n\nThe dozen or so people left in the cafe all followed her lead through the double doors into the kitchen, which was already empty as the cooks and other diners must have already evacuated.\n\n\"What the fuck is going on!?\" The large man from the adjacent table shouted as they filed out into the back alley, looking up and down the passage as screaming civilians sprinted past followed by the sounds of sirens all around the city.\n\n\"I don't know but I'm not planning to stick around to find out!\" Ryan yelled, grabbing Lydia by the arm and beginning to run down the alley away from the main street. \"Hurry!\" Lydia brushed his hand off of her.\n\n\"I can run quite fine by myself, thank you very much,\" she huffed. Ryan shrugged and continued to sprint down the alley with the rest of the diners not far behind. As they rounded the corner, the sudden explosive sounds of gunshots could be heard echoing down the street. A pair of police officers at the end of the block were fighting back against an attacker that was out of view. One of them, a well-built black man wielding a handgun was back to back with his female partner who was holding up a baton and riot shield - her gun presumably out of ammo.\n\nAs the male officer continued to fire into the air, the policewoman noticed the group of diners and beckoned at them with her club.\n\n\"Do not approach!\" She commanded. \"Buildings and streets aren't safe! Seek shelter underground! Go!\"\n\n\"Officer, what's-\" Lydia began to inquire, when suddenly the distracted female officer grunted as something struck her from the side. A large pink tentacle the width of a leg shot over her and wrapped around the other officer's newly exposed back. His gun flew from his hand as his entire body was quickly covered in several dozen more writhing tendrils that fell from the sky, leaving him under a squirming, pulsating mass.\n\n\"Jones!\" His partner screamed as she got to her feet and began to pull at the tentacles engulfing the man's crumpled form. More small tentacles rained down from the sky but she blocked them with her shield and jumped back, fumbling at her side for her taser. Ryan knew they should all be fleeing, but none of them could take their eyes away from the spectacle transpiring in front of them.\n\nThe policewoman fired the taser at the mound of tentacles and an electronic clicking sound emitted from it as the tips of the weapon made contact with the monsters. Other than that, nothing seemed to have happened and the unaffected tentacles suddenly reared up and aimed towards her. She backed against the wall, desperately hiding behind her riot shield, as she shakily activated her radio.\n\n\"We need backup on the corner of... of... oh my god...!\" She stumbled backwards and the diners gaped as the writhing pile of tentacles suddenly began to rise up, forming a humanoid shape with stumpy legs and arms made entirely out of the slippery tendrils. The policeman's body was suddenly pushed out of the mass until only his limbs remained trapped inside, giving the appearance that he was wearing the creature like some sort of bio-suit.\n\nEven more shocking that that was how the officer had been stripped completely naked, his eyes were wide with fear and confusion. Unable to speak through the thick tentacle filling his mouth, he simply attempted to jerk and scream at his partner in an apparent attempt to get her to flee. Suddenly, a ribbed appendage rammed up into his ass, causing his eyes to roll back into his head and his flaccid black cock to quickly rise to attention.\n\n\"J-Jones...!\" The policewoman feebly croaked as she watched her partner be molested by the monster. \"I-I'll get you out! Just hold on!\" She brandished her baton but her legs were shaking and she seemed unable to advance.\n\nThey all watched as the man's cries slowly melted away into moans of pleasure, his untouched penis flopped up and down from the powerful thrusting in his backside. Soon, however, feelers grew out of the fleshy mass surrounding him and began to slap and squeeze his hanging balls. He shook and squirmed from the stimulation and could do little more than watch as a large tentacle slowly approached his engorged manhood.\n\nThe tip of the tendril opened up like a horrific mouth and began to drool some sort of thick, orange fluid. It was slightly transparent, so when it suddenly latched onto his hard throbbing cock, everyone could clearly see how tiny cilia inside the appendage were relentlessly scouring every inch of the sensitive flesh.\n\nRealizing that rescuing the other officer would likely be impossible at this point, the policewoman turned and began to run down the alleyway towards the group of nonplussed diners.\n\n\"Did you not hear me the first time!?\" The officer shouted at them. \"Move away! Go! Go!\"\n\n\"L-look out!\" Someone from the crowd cried out, gesturing behind the policewoman. It was too late, however, and the officer was hit from behind by an arm-shaped pillar of tentacles that had extended out from officer Jones' monstrous form.\n\nShe grunted and turned to beat the powerful appendage with her baton, but another tendril swung out and grabbed her arm, quickly being followed by other tentacles that secured her other limbs. She yelled in defiance as her body was lifted up in the air above the diners, many of which had snapped out of it and had already fled to the end of the alley.\n\nRyan and Lydia joined up with the rest of the escaping diners, leaving the captured police officers to their fates. What could they realistically hope to do if even guns and tasers were of no use? Ryan glanced behind them as they rounded the corner and saw the policewoman struggling valiantly but to no avail.\n\nThree tentacles rose up and latched onto her uniform between her legs and on the mound of each of her breasts. She shrieked as the tendrils suddenly began to emit some sort of acidic ooze that quickly ate through her clothing. Clearly fearing for her life, she twisted and turned in the monster's strong grip, but despite her frantic motions, she remained trapped within.\n\nShe seemed relieved once she realized the fluid was not harming her skin, but relief quickly returned to fear as she realized the state she was in. The acid had eaten clean through her navy blue uniform and her underwear, leaving her breasts and pussy exposed through the holes in the fabric. The uniform had done a great job of hiding her tits, but now the large, supple globes were literally bursting out through it and swaying slightly as the tentacles began to move her body back down the alleyway towards her partner.\n\nOfficer Jones had already reached orgasm a couple of times, it seemed, as white semen was filling up the tentacle milking his thick cock and now dripping down his abused balls. The policewoman gasped and swore as another tendril covering in squirming cilia suddenly brushed up against her exposed ass and cunt, coating her pants and skin with a slippery slime.\n\nThe tentacle in officer Jones' mouth suddenly pulled out, leaving him gasping and choking on a viscous orange liquid. The policewoman yelped as a small feeler found her tight starfish and pressed up into it before inflating to several times its original girth. She yelled and her body shook in response to the surprise intrusion, causing her boobs to bounce and attract the attention of other tentacles.\n\nSoon, her voluptuous tits were completely wrapped in cilia-covered tendrils that squeezed and kneaded the flesh, paying extra attention to her nipples, which were now hard and pointed from the stimulation.\n\nThe last thing Ryan saw as Lydia yanked him around the corner was the policewoman's hanging body being pulled towards her partner. With a mighty yank, her legs were splayed wide apart and her dripping crotch was pressed firmly against her partner's face. Her sudden gasp and look of pleasure made it clear that officer Jones was all too eager to welcome this surprise breakfast offering.\n\nScenes like this were all over the streets as Ryan and Lydia - who had ditched her heels - ran down them looking for a place to hide. Countless men and women were being grabbed by similar humanoid tentacle monsters, while other people were being reeled up into the sky and trapped inside of gigantic, transparent floating sacks that appeared to be unearthly living creatures.\n\nAlmost everyone was being stripped naked by the tentacles or already were totally nude. One woman with well-groomed blonde hair and perfectly manicured nails was secured to a telephone pole by some sort of crystalline substance. Her legs were forced open, leaving her shaved pussy just as exposed as her clearly fake breasts.\n\nA homeless man who had been running by with a bottle of alcohol in his hand suddenly ran at her, hungrily sucking at her large tits and pulling down his grungy, tattered pants in an attempt to thrust his unwashed cock deep inside of her helpless womanhood. She screamed for help and cussed at the man who paid her no heed, continuing to fondle her with his calloused hands.\n\nThe man never got the chance to fuck the woman. A passing tentacle creature suddenly ensnared him and began to pull his dirty clothes off as well, causing him to holler in a drunken, confused manner.\n\nThe woman was not left unattended despite the man being removed. Three thick tentacles suddenly pushed up into her gaping pussy and noticeably bulged inside of her. Her mouth opened as she choked on a silent scream, allowing another tentacle to enter her throat and begin to fill her mouth with more of that strange fluid.\n\nMore tendrils wrapped around the base of her breasts and squeezed them so hard that Ryan was sure they were going to burst the implants, but the surgeon must have been quite competent, as the taut boobs held fast. Small feelers began to flick and tease her pink nipples before larger tentacles suddenly latched onto the sensitive buds, beginning to suck at them as if milking a cow.\n\nRyan forced himself to look away as he felt Lydia drawing further from him. He ran to catch up with her and the rest of the diners, running past more lewd scenes playing out around them. Nude people were trapped inside of buildings, asses and tits pressed against glass windows as tentacles swarmed inside. Some people were trapped in their cars, which were now filled with writhing tendrils that stripped them of their clothes and pulled them screaming out into the streets where they were all unceremoniously fucked in a pile of bound, naked flesh.\n\n\"Quick! Over here! To the subways!\" The large man from the diner yelled, pointing towards a nearby subway entrance that dozens more people were flocking to. Ryan and Lydia looked at each other with panicked expressions and, with no other option presenting itself to them, they decided to join up with the others making their way underground.\n\n\"If we can get on a subway, we might be able to get away from these... these... things!\" Lydia yelled, ducking out of the way of a tentacle that suddenly smashed through a nearby car window. The man behind her wasn't as lucky, and he fell to the ground grappling with the creature as it attempted to tear off his shirt.\n",
        "Ryan hesitated, bending over to try and help the struggling man, but Lydia spun him around by the shoulder and yanked him away - causing a tentacle he hadn't noticed to miss grabbing his leg by mere inches.\n\n\"Pay attention, Ryan!\" Lydia snapped. \"We need to secure our own safety before we can help others!\" He had never seen her so fired up before - other than when the new guy Jim got promoted over her. \"The subway is right there! Get your head out of your ass and let's move!\" Despite wearing no shoes, Lydia still managed to outpace Ryan as they scrambled towards the stairs that led underground. His suspicions that she kept her figure through rigorous exercise were starting to have more merit.\n\nAs they began to descend into the subway amidst the rest of the fleeing crowd, Ryan noticed a young brunette woman up the block, likely no older than twenty, suddenly get grabbed by a torrent of tentacles that burst from a nearby manhole. She screamed and flailed as the unearthly tendrils pulled her tight tank top up over her head while simultaneously slipping her skirt down her legs, revealing a lacey pink bra and matching silk thong.\n\nShe was hoisted up into the air and promptly dragged shrieking into the open manhole as tentacles tore her bra from her chest, leaving it in tatters on the street next to the rest of her discarded clothes. The last thing Ryan saw before she was pulled completely underground was a flash of her unshaven pussy coming into view as tendrils ripped her panties from her crotch and began to tightly wrap around her pert little tits. The girl made eye contact with Ryan for a brief moment, her eyes filled with a mixture of tears and lust, before she was gone.\n\n\"M-maybe underground isn't the best place to-\" Ryan began to say, but the throng of panicking people flowed like a river down the stairs behind him, forcing him and Lydia deeper into the subway station. The chaotic crowd jostled them around as people pushed and shoved anyone nearby in order to progress to the platform as fast as possible, hoping to be able to jump on the next train.\n\n\"We made it...\" Lydia gasped, as she and Ryan managed to make their way near the front of the line. They pressed up against a support pillar and watched wide-eyed as more and more people began to fill up what little space was left in the subterranean station.\n\nRyan was surprised to see that their waitress was still nearby, standing next to the large man from earlier, who was attempting to call someone on his phone with a clear look of frustration on his face.\n\n\"I can't get in touch with anybody - even when I do manage to get service down here!\" He complained. \"Hey, watch it, buddy!\" He let out a growl as another man was shoved into him, which nearly made him drop his phone.\n\n\"Oh God, oh God...\" moaned Elena, hugging herself and slightly rocking where she stood. Her sniffles were barely audible over the shouting that dominated the enclosed, echoing chamber:\n\n\"It's gotta be aliens, right?\"\n\n\"My son! Has anyone seen my son!?\"\n\n\"They were fucking people! Holy shit did you see that!?\"\n\n\"Where the hell is the train!?\"\n\n\"We're all going to die...\"\n\n\"How can the police be so incompetent? There's your tax dollars at work, people!\"\n\n\"It took her! It took my wife!\"\n\nAnd other such shrieks and grumblings were all mixed together into one messy cacophony of human panic.\n\n\"Which station is this?\" Ryan asked Lydia. \"I was too distracted to even check the signs!\"\n\n\"I don't know either,\" Lydia admitted. \"But any train out of here is good enough for me! Wait... do you feel that? I think the next one is coming now - get ready to fight for it!\"\n\nSure enough, the telltale rumbling and screeching of metal wheels could be heard approaching from down the tunnel. Everyone near the front of the platform began to scramble to get as close as possible. Several people were almost knocked down onto the tracks, but managed to grab onto something or someone just before taking the fatal plunge. Moments later, the shiny carriages came into view and started to come to a jerky, unnatural stop.\n\n\"Oh shit...\" Lydia croaked. Screams and shouts began to rise up from the other people in the crowd who could also see into the train's grimy windows. Ryan's mouth dropped open and he was frozen in place from the sight.\n\nThe entire interior of the subway car was coated in pinkish slime and writhing, fleshy tentacles. Countless passengers, all nude, were plastered to every surface within, with tendrils of all sizes messily filling any orifice they could find, along with hungrily sucking and stroking every exposed cock and tit.\n\nOne man's groin was pressed up to the window with legs spread wide, his hairy balls smacking against the glass as a tentacle, slick with a syrup-like fluid, aggressively frisked his engorged member. In no time at all, he was cumming more semen than Ryan had thought possible - even on nights alone when imaging Lydia in bed with him. The white spunk splattered against the window and obscured the view slightly as it dripped down the glass.\n\nEvery other window was like this as well: covered in either tentacles, cum, or naked body parts pressed lewdly against the glass. One large black woman's fat ass was squashed firmly against a window, with a brush-like tentacle clearly working her into a frenzy as it vigorously rubbed between her swollen, wet pussy lips and jiggling cheeks for everyone in the station to see.\n\nSuddenly, the doors to the train from hell began to open with grinding, straining sound as some of the strange ichor and tendrils covering the exits began to pull away. Loud moans and cries of pleasure could be heard from within, coupled with obscene, wet noises and fleshy slapping sounds. The crowd of people on the platform began to panic and attempt to run the opposite way, back up the stairs - but more people were still filing into the underground area and were blocking any escape attempts.\n\nAs the train doors continued to slowly open, a thick stream of strange orange fluid mixed with human ejaculate started to ooze out onto the platform. Once the doors had slid open wide enough to let a human through, dozens of warty tentacles shot out of the carriages, grabbing any of the terrified onlookers who happened to be too close and dragging them into the nightmarish, meatwall interior of the trains.\n\nThe entire station erupted into pandemonium as the immediate danger became more realized. With the path back to the surface choked by the crowds, the people down on the platform began to desperately search for any way out and away from the train car full of lewd tentacles.\n\nOne man decided to take his chances and leapt down onto the tracks behind the train, clearly hoping to make his way down the tunnel. He disappeared from view, but moments later a scream was heard echoing down the dark walls just before even more tentacles began to flood into the station from within the tunnel, covering every surface they touched with a thick slime.\n\nMore and more people were grabbed by the encroaching tendrils, either being yanked into the train, pulled down into the dark tunnels, or simple being stuck to the subway walls where they stood by a sudden deluge of quickly-hardening ichor that gushed from the tentacles slithering on the ceiling. The tentacles made short work of clothing, and soon the sticky ground was covered in loose garments, some of which were now little more than shreds.\n\nRyan, frozen in fear, simply gawked at the sea of naked bodies being ravaged by tentacles all around him. A nearby woman was struggling against several tendrils that held her down. Her cotton white panties were stripped away from her shaved mound and thrown into Ryan's gaping face, blocking his view as a meaty tentacle shoved its way deep into the newly exposed hole.\n\nHe felt a firm grip on his arm and turned with a start, expecting to find a tentacle latching onto him, ready to strip him naked and milk his balls empty in front of all these moaning strangers, but it was Lydia's hand that met his eyes.\n\n\"Stop staring and move!\" She yelled, pulling him away from the chaotic scene and back towards the wall. A small office was situated along the back of the platform, with a large bulletproof window looking out over the station. The door was open and the interior was a mess as if the occupant had fled in a hurry. With nowhere else to go, Lydia yanked Ryan through the doorway and slammed it closed, locking it with the button on the knob and propping a chair against the handle for further resistance. The walls of the office greatly muted the horrific sounds echoing from all around and an eerie silence overtook them as they watched out through the window.\n\n\"Great, we're safe for now, b-but we have nowhere to go!\" Ryan stammered, looking for a place to exit or otherwise hide within the small confined space.\n\n\"We bought a few minutes...\" Lydia replied, her legs finally giving out as she slid to the floor next to him. \"Maybe... maybe someone will send help. I swore an oath to myself to never give up, no matter how hard things get...\" She groaned as she gingerly touched her feet. Her stockings were dirty and torn from running barefoot. Despite the critical situation they found themselves in, he still caught himself fantasizing of removing her socks and gently sucking her delicate toes. He slid down next to her with a heavy sigh and they huddled under the desk out of sight.\n\n\"Lydia... if... if we don't get out of this... I just need to confess that-\"\n\n\"You want to fuck me, right?\" Lydia replied matter-of-factly.\n\n\"I- er- I was going to say th-that you're my role model... what? Umm...\" He blushed and gulped.\n\n\"You don't have to hide it. It's obvious that all the men in our department look at me that way. I get it. I'm a woman of power - a trophy.\"\n\n\"And also pretty hot,\" Ryan blurted out without thinking. He nearly choked on his tongue as he attempted to slam his mouth closed as fast as possible.\n\nShe raised a thin brow and smirked at him.\n\n\"I see... Well, unfortunately for you, I don't like to mix business with pleasure,\" She sighed. \"Nor am I some piece of ass to conquer. However, due to the circumstances, I may let myself-\"\n\nShe was suddenly cut-off by a loud slam against the window above them. They both flinched and banged their heads on the desk above them, cussing in pain. Lydia peeked out from under the desk and let out a gasp, prompting Ryan to look as well despite his instincts telling him to stay hidden.\n\nElena had been shoved against the glass and already stripped of her black top, leaving her cute face and plump bosom to be lewdly pressed into the window, only covered by a simple black bra. Her eyes widened as she noticed Ryan and Lydia hiding within. Her mouth opened as if to cry out for help but suddenly a slick tentacle shoved its way into her mouth, causing her to gag and moan in distress. Tendrils swarmed underneath what remained of her work uniform, covering her tanned skin with sickening mucus.\n\nShe struggled to no avail as small feelers began to rip her tight black pants off, followed by her black panties. Thick tentacles lifted her legs up over her shoulders, giving Ryan and Lydia an unhindered view of her taut ass and pink pussy lips, adorned with a small tuft of blonde pubes.\n\nA clear tan line was visible around her crotch, and an additional one around her bra line came into view after another tentacle ripped the squirming girl's bra from her modest chest. Her pale, pert breasts were squished against the glass of the window, rubbing her small nipples against the hard surface. Ryan hated himself for it, but he could feel his penis stiffen at the sight. There was something about tan lines that did it for him... like the proof that he was gazing upon untouched, secretive flesh.\n\n\"W-we should help her!\" Ryan stuttered, starting to stand up.\n\n\"Are you crazy!?\" Lydia gasped. \"Ryan, it's too late! If you don't get down, you'll be next!\"\n\n\"I can't just-\"\n\nThis time, it was Ryan's turn to be cut-off by a series of loud, fleshy impacts from outside. The two of them swerved their heads back towards the source, which proved to be Elena again... or rather, things going on around her helpless, naked body. Tentacles had started to pry her pussy lips apart to allow several more tendrils to slide up into her quivering hole. They could barely make out a buzzing sound, as if the appendages thrusting into her dripping womanhood were rapidly vibrating. They watched as her ass clenched and her back arched in pleasure from the unwanted invader, causing her tits to repeatedly pull away and press back into the glass as they squished obscenely against it.\n\nThe source of the sound that had startled Ryan was not from her, however. The large man Elena had been standing near - and had been serving water to only half an hour before - was now suspended behind her, just as naked as she. Tentacles swarmed all over his fat body, covering his eyes and filling his mouth and ears as his body jerked and swung in the air. His anus was being teased mercilessly by small vibrating feelers, while his thick ass cheeks were being audibly flogged repeatedly by flat tendrils - apparently discovering that pain aroused the man more.\n\nHis cock certainly seemed to confirm this, as the impressive 7\" shaft was already dripping an endless stream of precum. The man's legs were raised above his shoulders, completely exposing his genitals as the tentacles slowly pulled his body towards the unaware waitress who was still occupied by sucking on the appendage in her now drooling mouth.\n\nElena's entire body was suddenly pressed firmly against the window. With her legs raised and spread as they were, even the mound of her moist cunt was pushed flat to the glass, allowing a small trail of her juices to be seen trickling down. She squirmed weakly but her defiant spirit seemed to have already faded away. The look on her face almost seemed to suggest that she was starting to enjoy it.\n\nSuddenly, the tentacles holding the man swung him forward, ramming his firm erection deep into her now gushing pussy, positioning him so that his thick cock could piston upwards into her gaping hole. The window shuddered and Elena's eyes widened in surprise. Her hips started to buck, but a deluge of syrupy ichor cascaded down the glass and hardened almost immediately, sealing her petite body in place. She was now completely immobile, save for her eyes, which wildly looked around the interior of the office at Ryan and Lydia's terrified faces. Soon, the look of fear in Elena's face melted away into one of bliss.\n\nRhythmic thumping sounds coming through the glass and the jiggling of Elena's soft flesh made it clear that the man was fucking her -- or being made to fuck her by the tentacles. It wasn't clear. The sounds of her lewd moaning, though muffled by the tendril in her throat, could still be heard from the other side of the sturdy glass. After only a minute, her body suddenly started to spasm and twitch as a torrent of white cum began to ooze from her swollen slit while a clear fluid squirted from within and dripped down the window.\n\nClearly, her and the man had both reached powerful orgasms at the same time. They were only the first of many. Ryan watched as the man's balls, also now pressed to the slippery glass and covered in juices, jostled up and down as he relentlessly fucked the young woman. They both howled and groaned as their brains became consumed with pleasure. Ryan was unable to reel his eyes away from the outrageously erotic scene in front of his very eyes, especially once slimy tentacles slithered up around Elena's already squashed tits and began to sensuously squeeze and play with them. They bent her back slightly to allow tendrils tipped with suckers to latch onto her stiff nipples and begin to tease the sensitive nubs with dozens of writhing, vibrating cilia. She shivered, and so did Ryan.\n\nDamn what a bad time to be horny! He internally admonished himself. I never should have invited Lydia to brunch! If only his head had been clear at the start of all this, maybe things could have been different. But now he was trapped in a small glass prison, surrounded by tentacle monsters. More and more people started to become entangled within the flesh wall that now almost completely encased the office, with naked asses lining the window as their owners were fucked senseless.\n\nThere was only a small patch of glass through which they could still see the station. It was now creepily dark, as all the lights had been covered by writhing organic masses. Some tumorous-looking growths along the walls were glowing with a faint bioluminescence that revealed the silhouettes of dozens of people encased in the pulsating walls of the subway platform.\n\nMany of the captives had their limbs completely consumed in the writhing mass, with only their naked torsos on display. Tentacles hung down from the dripping ceiling and clung to people's faces like grotesque air masks, pumping who knows what into their mouths. More knobby tendrils rhythmically worked to thrust in and out of countless exposed assholes and pussies, all gushing with more of that viscous orange slime.\n\nRows of jiggling, pillowy breasts lined the walls, all being slowly squeezed and milked by tentacles with large, starfish-shaped suckers on the ends and transparent sacs along their lengths that were quickly being filled by milk. Other rows of twitching, erect cocks were receiving a similar treatment - all engulfed by transparent tentacle sleeves that expertly masturbated each shaft and quickly filling with cum that was sucked away into the surrounding walls.\n\nThe lewd sounds of groaning and whimpering were so loud that Ryan and Lydia could hear the noises from within the office. Lydia began to shake slightly.\n\n\"I changed my mind...\" She murmured. \"I-I don't want this... I don't want this at all...!\"\n\n\"You changed your mind...?\" Ryan whispered, staring at her.\n\n\"I thought... I thought maybe that if I lost my virginity with you first - with a friend - it might make the... the inevitable more bearable... but now I'm just... I'm just scared.\" She looked at Ryan with red eyes, her usually immaculately styled ponytail was now loose and unkempt, and her expensive, pressed suit was now a wrinkled mess. Ryan's urge to have sex with Lydia suddenly melted away into a primal instinct of protection. \"Can you... hold me...?\" She sniffled.\n\n\"Of... of course...\" He looked at her with tired eyes. The fact that she was a virgin didn't even seem to faze him at this point. Perhaps her aggressive push for a career had kept her away from love. How was he to judge? After all, he was a virgin too.\n\nRyan also felt tears welling up in his eyes as he pushed up next to her, putting his trembling arm around her shaking shoulders and holding her close. She wrapped her own arms around his waist and they remained like that silently for several minutes. It wasn't particularly intimate or romantic. It was just two scared, confused, and overwhelmed people trying to find comfort in one another. From where they were huddled beneath the desk, they could hear banging on the window above and the small sound of cracks beginning to form.\n\nThey hugged each other tight up until the moment that the tentacles burst through the window and filled the office, quickly finding their two cowering bodies. Lydia was pulled away from Ryan with a shriek and they were both held aloft in a spread eagle position.\n\n\"Lydia! No!\" Ryan cried out.\n\n\"Ryan, I-!\" Lydia's words were silenced as a slippery tentacle filled her mouth, pumping that orange liquid into her throat, which gurgled out of her lips and dripped all over the floor. Her eyes suddenly seemed to glaze over and her cheeks appeared flushed in the glow of the single light bulb in the office, which was quickly being covered by the ichor.",
        "Ryan watched in a combination of fascination and horror as several fleshy tendrils began to explore Lydia's curvy, bound body, slithering down her blouse between her breasts and up her pant leg. She moaned and squirmed at the touch and shuddered slightly as one of the tentacles tore her suit jacket off.\n\nHer white blouse was drenched in sweat and the orange juices that had spilled from her mouth, leaving it nearly transparent and allowing for her lacey black bra to be clearly visible beneath the thin fabric, which fought valiantly to contain her large breasts. The buttons on her blouse were already slightly straining to contain her bosom, so the tentacles required little effort to yank the garment apart, causing the buttons to pop off and scatter on the floor.\n\nHer chest heaved as she panted and Ryan stared at the large globes only a few feet from his eyes. He barely even noticed that the tentacles had started to undress him as well, feeling a slimy tendril run down the back of his underwear, between his crack, and up over his hardening cock. The tentacle that was still between Lydia's deliciously inviting cleavage wrapped around the center of her bra and pulled it loose, allowing her ample tits to burst out into view and revealing her tender, light brown nipples to Ryan's curious gaze.\n\nHe felt his shirt and pants tear away from his skin as he wordlessly watched two tentacles descend from the ceiling, aiming for Lydia's stiffening nubs. The tips of the appendages stopped just in front of her nipples and slowly squelched open to form the now familiar starfish-shaped suckers. They lingered there for a moment, drawing both Ryan and Lydia's eyes to them, before they suddenly latched onto her taut peaks. She threw her head back and screamed in ecstasy - or so Ryan thought - as they began to knead her breasts in rhythmic, pumping motions.\n\nAs her head fell forward again, he noticed that her eyes were drawn down to his crotch. He hadn't even realized that the tentacles had removed the last of his clothing and that his genitals were now proudly on display in front of his boss. He was about to say something in protest when he felt a tiny prick in his neck. Looking over his shoulder, he noticed a tentacle with a small needle on the end exiting his skin. Lydia appeared to have also just undergone a similar injection.\n\nImmediately, he felt his pulse pounding through his cock and balls as his shaft swelled up to its maximum size and his testicles began to ache as if from days of constant blue balling. He let out a howl of surprise just before a tentacle of his very own thrust down his throat. He could feel a warm, sweet fluid filling his mouth and stomach and his vision started to become blurry. The world around him began to fade and all his senses became focused on his penis - every small touch felt like an explosion of fireworks under his sensitive skin.\n\nHe felt himself get placed on the floor and his limbs become entangled within the tentacles covering it. He couldn't move an inch, but he didn't have the will to do so anyway. His attention was solely on the throbbing in his burning cock and Lydia's spread legs, which were now dangling above him, though still clothed in the bottom half of her suit.\n\nThe tentacles swiftly took care of that impediment. He watched as feelers rose up from around him and into Lydia's pant legs. He could see them squirming under the fabric before they suddenly expanded and caused the garment to burst apart, covering his face and chest in their scraps. Her toned legs shivered as the tendrils covering her calves and thigh writhed and slid all over her skin, removing her already nearly destroyed stocking and making their way up to her crimson panties that were already completely soaked with her juices.\n\nA tendril playfully pressed up against Lydia's soft mound and rubbed against her through the thin cloth. She groaned from the stimulation and Ryan could feel his precum oozing down his hard shaft and pooling around his balls. After a minute of devilish teasing, the tentacle finally grasped her dripping panties and pulled them off, giving Ryan a clear view of her surprisingly well-trimmed pussy. He had assumed that as a virgin she would be unshaven, but appearances must have meant a lot to her - even where other people couldn't see.\n\nHer slit was already gushing, and drops of pussy juice rained down onto Ryan's quivering abdomen and cock, causing him to gasp and nearly cum from that sensation alone. He felt like he was on the verge of losing his mind if he didn't reach orgasm soon. He panted and moaned as he tried to shake his hips, hoping for his throbbing cock to make contact with something - anything - with which to offer slightly more stimulation.\n\nSeveral cilia-covered tentacles seemed happy to oblige. They quickly wrapped tightly around his desperate manhood and began to swirl around it, brushing just under his sensitive glans. He mutely cried out in pleasure and began to suckle on the tentacle in his mouth as he felt something prodding at his anus. A sudden, warm wetness coated his puckered hole before a tendril easily pushed inside. It curled up and began to vibrate against his prostate - eliciting a yelp as an entirely new world of stimulation opened up to him.\n\nHe was so overtaken by the powerful waves of pleasure coursing through his ass that he didn't notice that Lydia was being lowered down towards him until he felt the wet tips of her womanly lips brushing against his over-sensitive cock head. He craned his neck to get a better view as feelers began to spread her pussy lips apart. The tendrils stroking his cock didn't let up, but did work to position his rod so that it perfectly lined up with the entrance to her swollen cunt.\n\nHe blinked, realizing what was about to happen, and looked up at Lydia who was gazing down at him with lustful eyes - orange fluid still dribbling down from her mouth. He thought she smiled at him for a moment. All at once, the tentacles dropped her just enough to allow for Ryan's entire length to become completely engulfed by Lydia's tight pussy. The two of them shook and moaned loudly as they mutually popped their cherries.\n\nRyan could feel the heat of her perfectly tight ass against his balls, and he knew that they both were savoring the sensation of the tendrils massaging her moist inner walls and his pulsating shaft at the same time. Suddenly, the feelers around his cock began to vibrate, causing him and Lydia to writhe and snort helplessly as pleasure crashed through their sweating bodies. The tentacles holding Lydia aloft began to rhythmically raise and lower her pelvis along his shaft, forcing her to fuck him. Neither of them seemed to mind, however, as she hummed happily and he gurgled in approval.\n\nSoon, the familiar sensation of building pressure began to rise in his genitals as Ryan's first climax of the day drew near. Judging by the way that Lydia's pussy was hungrily clenching around his cock while dripping even more juices, he assumed that she was close too.\n\nLet's cum together... He thought. Even if this is our life now... even if we are trapped here forever... at least we have each other... And then he came harder than he ever remembered having done before. His balls tightened and his cock twitched madly as he felt a seemingly endless rush of cum shoot from deep within him, filling Lydia's spasming cunt and mixing in with the vibrating tentacles that were still rapidly twisting around his girth.\n\nHis warm semen mixed with Lydia's juices as she squirted for nearly twenty seconds, resulting in his throbbing cock and balls becoming completely coated in the bodily fluids. To Ryan's mild surprise, his penis showed no signs of softening, and the tentacles continued to play with their two bodies as they pleased - forcing a dozen more orgasms out of the both of them before a tendril made its way over Ryan's face.\n\nAs he felt that strange ichor begin to cover his limbs and then tentacles engulf his head, he made sure that the last thing he saw was Lydia's beautiful, drooling face, contorted in rapture. As his world was plunged into darkness, all he could focus on was the pleasure rushing from his abused cock and ass, all the while smiling happily to himself with the knowledge that at least the pussy devouring his cock was that of his crush.\n\nOr at least, it was for now. There were many other women down in the hive with them, and all of them had pussies that needed filling - a role that he would be more than happy to play as the alien nectar within his system eroded his mind and pushed his thoughts towards considering how to better serve his new alien masters... and the answer was not flashy presentations about quarterly reports.\n\nAs pockets of resistance began to crumble around the city, a hushed, unearthly quietness descended. Slimy ichor and pulsating tentacles lined the streets, as a few helpless people remained trapped in the fleshy masses - bound and spread for easy, endless breeding. Gentle moans and groans could still be heard from within dark buildings, and the occasional scream of a newly captured human being stripped naked and dragged away were among the only sounds that disturbed the peaceful concrete jungle. The tentacles would make sure that from now on, this would truly be the city that never sleeps."
    ],
    "authorname": "worldender",
    "tags": [
        "alien",
        "tentacle",
        "sci-fi",
        "human cattle",
        "breeding",
        "milking",
        "mind control"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/new-york-tentacle-breeding-ground"
}