{
    "title": "Cometh Hither",
    "pages": [
        "Author's Note: This story is a continuation (and retelling of sorts, so it's not important to have read it) of events found in my previous story titled Come Hither. \n\n*\n\nAt the age of 20, my most powerful sexual experience to date had happened the previous year and was very formative for me sexually but was also the source of some confusion and shame, like what happened that day was wrong. Like, \"you're a pervert\" wrong. I easily recognized the aspects society would deem improper and what I was having trouble reconciling with everything I saw around me. Those aspects were obvious. I had masturbated in front of a woman, the mother of a friend, at her request. Although I had loved every second of it as it was happening, as did she, when I thought about it later I started wondering if I was simply as depraved as I imagined everyone would think, were they somehow to know. And the last thing I wanted was for anyone to know. I was mortified at times thinking it would somehow get out.\n\nThat's because none of it really meshed with what I thought \"normal\" sexual relationships were supposed to be. My friends talked about sex all the time, but no one ever talked about jerking off for anyone, much less a friend's mom. Looking back, I wish I had just thought \"fuck what people think and anyway, the only two people who knew about it had a great time that morning,\" but that's not how I was thinking at the time. After returning to college after the events of that summer day, I still couldn't quite decide whether what we did was right or wrong. Don't get me wrong, that vivid memory was a regular masturbatory fantasy for me. It's just when I'd think about it objectively that I'd start questioning and I had no good answers for myself.\n\nThat semester I would meet someone who helped me find some answers.\n\nI was taking a Shakespeare class with a teacher named Molly. She was smart, funny, and energetic. She was always on her feet in class, moving around the room, at the board, long hair swaying across the back of the dresses she seemed to favor for teaching, dresses that tended to accentuate her lean and athletic body. Did I mention I was 20 with a newly minted thing for older women? She drove me kind of crazy. She was maybe ten years older than me, so yeah, she was a couple years past 30 probably. Old, right? We got along great in class because I generally read what was assigned, had ideas, and spoke in class (I had finally cracked the secret to doing okay in school). She apparently liked what I had to say enough because one day that fall she asked me to stay after class.\n\nCue Van Halen's Hot for Teacher drum intro.\n\nGrabbing the wheel of the bus and steering my Hot for Teacher fantasy scenarios directly off the nearest cliff, she asked me if I wanted to join the college's chapter of an English Honor Society, Sigma Tau Delta, and handed me a pamphlet. I told her I'd think about it, but deep down I knew I'd never commit to it. I never really thought of myself as an Honor Society kind of guy. I thanked her and left, the bus in a flaming heap of twisted metal. What was I thinking anyway, that shit only happens in Penthouse Letters. There was plenty of cheap, crappy beer waiting that night to put out the flaming wreckage containing both my ego and libido, over-inflated as they were at the time.\n\nThe next week I saw her in the hall near her office and we said hello, and she brought it up again.\n\n\"Have you given Sigma Tau Delta any more thought?\" she asked.\n\n\"Um, yeah.\" I stammered, still far from eloquent. Seriously, what would a society want with me anyway? My command of the English language was stunningly mediocre, I thought.\n\n\"So?\" Hand on hip. My eyes on her hand on the curve of her hip. Stop it.\n\n\"I don't know...\"\n\n\"I was just heading back to my office. Do you have a couple minutes? I'll give you some better literature than that pamphlet.\"\n\nI nodded and followed her back to her office trying to not stare at her ass under that swishing, thin dress. What was it about those dresses? It's not like she showed a lot of skin like so many of the college girls around me. They just looked so good on her. She looked so good. Got it baaad sooo baaad, I'm hot for teacher. Maybe a couple more glances while she's not looking. She looked back at me and I quickly looked at the cinderblock wall and studied it intently. Sit down, Waldo. She unlocked the door and beckoned for me to enter with a brief smile. I did and she closed the door behind us. It was small and full of books but it looked cozy and smelled nice. Incense? Dried flowers? Hard to say.\n\n\"Sit down, sit down,\" she said, gesturing at a couch along the wall without looking. \"It's somewhere around here.\" Computers weren't as prevalent as they'd be in a few years, so she couldn't just point me to a website and be done with it. Which I was fine with, of course. I got to spend some one-on-one time with her. She must have seen me looking at the couch. It was odd. It was the size of a normal couch, but instead of a back, there were large pillows leaned against the wall. One end was slightly raised. To be honest it looked like something you'd see in a doctor's office.\n\n\"'Psychiatrist's couch', so I'm told. Came with the office,\" she said. \"Excellent for naps.\"\n\nI sat. It was comfortable enough. As she rifled through piles of books and papers, I started looking at some of the books on a small table next to the couch. There were books everywhere in this office, seemingly on every available surface. The bookcases that lined the walls were all filled. I thought it was pretty cool to be surrounded by all those words. I had a small collection of books, but not many. It was college of course, everything I owned had to fit in a car. One small black paperback in a stack of other worn paperbacks caught my eye due to the name on the spine: Anais Nin. I didn't really know why, but something in the back of my brain perked up. I took the book out of the stack and turned it over to read the back.\n\nThe word erotica leapt out like a snake. Whoa. I don't think I said it out loud, but I looked up and she was looking at me, a small smile plucking at the corners of her mouth.\n\n\"Familiar with Anais Nin?\" she asked. Ah, so that's how it's pronounced.\n\n\"Uh, no. Not really. I thought I recognized the name.\" I felt like I had been caught red-handed and it probably showed on my face.\n\n\"It is some very... provocative writing. Some people would call it obscene. I don't think of it in terms like that. Ah, here it is!\" She had found the booklet she was looking for.\n\nI put the provocative book back on the table as she handed me the booklet.\n\n\"Read this when you get the chance and let me know what you think. I'd love to have you.\"\n\nDid she actually say \"we'd love to have you\"? My brain wanted to hear it the other way. I stood up to leave as I had another class starting soon.\n\n\"Thanks, I'll definitely check it out,\" I lied. I'd look at it but I had no intention of going any farther with it. She narrowed her eyes at me.\n\n\"No, you won't,\" she said with a sigh.\n\n\"No, I will, I promise.\" You shithead. She was being nice to me. Maybe I could at least give it some actual thought.\n\n\"OK fine,\" she said. Then she paused and looked at me, head tilted a bit to the side like she was sizing me up. \"Take Delta of Venus too, I mean if you're interested. I remember one of your papers on some of the bawdier aspects of Shakespeare, I think you'd find this entertaining. It's certainly not as dry as that booklet. Just promise me you'll read the booklet first. Think of the book as a reward.\"\n\nI raised my eyebrows as my fingers brushed the spine of the book.\n\n\"Let me know what you think,\" she said. Her smile broadened into a grin, almost mischievous, like it was a dare. With that her phone rang and I jumped. She moved to pick up the receiver and gave me a little wave with her fingers. Long, slender fingers. Nails cut short and painted a dark shade of red, I had noticed earlier. Stop it!\n\nI snatched the book from the table as she picked up and said hello. I nodded and waved back and she gave me one last smile. Our eyes locked for just a moment and it felt like more than a regular goodbye glance and then she turned her attention to her phone conversation. I felt oddly jealous, like the person on the other end had rudely interrupted and was now receiving her attention. Attention I apparently wanted. I closed the door quietly until it latched and went to my class.\n\nI got home that night and after some ramen and a beer or two, I bowed out before the beginning of 120 Minutes. That being our favorite show, my exit prompted some mock consternation from my housemates. Was I sick? Was I going to do homework instead of watching the latest Big Audio Dynamite or Siouxsie and the Banshees videos? What the fuck?\n\nYeah, yeah. Whatever. \n\nThat book was burning a hole in my backpack and I didn't need to see Peek-A-Boo for the twentieth time that week.\n\nI went to my room, turned on the reading light above my bed and slid the new contents of my backpack out onto the blanket. The Honor Society booklet, Delta of Venus on top.\n\nJust promise me you'll read the booklet.\n\nI sighed and lifted the booklet, the paperback sliding off to the bed with a muffled thud.\n\nThink of the book as a reward.\n\nI read the booklet. Well, skimmed quite a bit, but I was surprised to find it sounded interesting to me. My college courses had been bringing out an interest in writing and literature I didn't really know I had. I had a love of reading since I was a kid, certainly, but I wasn't as aware that I liked analyzing literature and writing. In high school, writing had always seemed like a chore. Maybe because I didn't have anything interesting to say and I was just writing what someone else wanted me to write. I closed the booklet and thought about it for a little while. I made up my mind to talk to Molly more about it, find out what I needed to do, and figure out if I could fit it into my busy schedule of beer consumption.\n\nReward.\n\nOh yeah, duh! I reached over and picked up Molly's paperback, turning it over in my hands. It had the unmistakable look of a well-read paperback. Slightly yellowed pages, white lines in the spine. At the time, I usually didn't read prefaces and forwards, but I had never had a woman lend me a book of erotica before so this seemed special. I was intrigued to learn, especially after just thinking a little about why I liked writing more these days, that Nin was contracted to write these stories at a dollar a page. Nin was directed by a mysterious old patron, to \"concentrate on sex. Leave out the poetry.\" I read that and wondered if this was going to be book full of Penthouse letters. Don't get me wrong, if there was a Penthouse in the house, I'd go right to the stories. But I didn't see Molly handing me a book of stories starting with \"I never believed this could happen to me, but...\" I was intrigued. Anais Nin, Henry Miller, the 1930s, porn? Sorry, erotica. I didn't know what to expect.\n\nI started reading.\n\nI didn't finish the book that night (some of the stories are fairly meandering if I'm being honest) but I did manage to have two orgasms. The first time came early in the book and was to be expected. I had never read anything like it. It was as far from Penthouse Letters as reality is from Penthouse Letters. Talent, time, and effort had obviously gone into the stories even at a dollar per page. The stories seemed so real and raw and the flowery prose gave them life that Penthouse often lacked. Nin had by no means left out the poetry despite her claims to the contrary, at least in my opinion. As I'd come to realize, good erotica (or at least what I liked) built tension and provided release after time. Fifteen minutes in, that tension sure needed release. After I cleaned up, I settled in and read on. Eventually I came to a story within a story that within seconds had wound that sexual tension right back up.\n\nIn this story, a woman reads a man's sexual memoirs of how he was introduced to the thrills of exhibitionism. Naked and alone in his room on a hot summer day, the young man notices an older woman watching him from a patio across the street from his window. He relishes her eyes upon his body and later repeats his naked show and ends up masturbating as she watches.\n\nRight then I knew I wasn't alone. Here on paper (in literature!) I knew I wasn't alone. It showed me that this kind of thing had been happening for ages. It was a validation I hadn't had before, and had been unable to provide myself. The words of that very brief story seared into my brain and my hand was again on myself. I read it over and over, basking greedily in the sensations brought to life by the words until I came again. I had been battling myself about whether to be ashamed of what I did with Cynthia, my best friend's mom, and this short snippet helped me on the way to putting those feelings to rest, I hoped. The sexual exploration we shared was just that: normal sexual exploration. Maybe not missionary position only and only when a man and a woman love each other blah, blah, blah, but not abnormal. Other exhibitionist stories in the book told of men and women flashing themselves to people, but that wasn't something I was interested in. It was the consensual nature of my experience, the eagerness and willingness of both the exhibitionist and voyeur that was so arousing to me. Just like this story, both participants were willing. I stopped reading for the night and gave my tired, abused dick a break. I'm surprised the thing didn't manage to take a lighter to that book while I was sleeping.\n\nA couple days later I had Shakespeare class again with Molly. Nothing was out of the ordinary at all, it was a fun class as usual. I felt like she looked at me maybe a couple more times than usual, but that was probably my imagination. Maybe I was looking at her more than I usually did. I did find myself looking at her even when she wasn't the one talking. Not a big surprise, I thought she was striking. A couple times while gazing at her she'd meet my eyes. She wouldn't immediately look away, but she'd turn back to whoever was speaking after a moment. Dude, stop staring. I couldn't help it though, I felt like I had a lot in my head that I had to get out but I didn't know if I should even talk to her about it. Uncharted territory once again, here be dragons? No, as I had said to more than a few people when asked about her classes, she's cool.\n\nShe's cool. That thought stuck in my head as class ended. I took my time putting the big fat hardbound Shakespeare compendium and my notebook back into my backpack and let the others shuffle out around me.\n\nShe smiled and said she was just about to ask me to stay after class.\n\nDear Penthouse Letters, I never believed this could happen to\u2014\n\nNope.\n\n\"Did you get a chance to look at the Sigma booklet?\" she asked.\n\nI told her I did and that I was interested.\n\n\"That is terrific! I think you'd really get a lot out of it. I think you're a good writer with potential to...,\" she spread her hands expansively and gave an exaggerated shrug as if to say, \"I don't know, but do whatever you want!\"\n\nThat made me feel very good and very shitty at the same time. If she only knew my process was to procrastinate as much as possible and then, typically very late the night before it was due, let the words just spill out onto the page. Maybe she could tell.\n\nI pulled the booklet out of my pack to hand back to her. She put her hand over mine to stop me. She was touching me?\n\n\"You can keep it,\" she said and moved her hand away. She didn't jerk it away, just moved it away like it was no big deal. It wasn't a big deal, but I was 20 and there was the thing with older women.\n\nThen she looked at me with what could only be considered a devilish grin.\n\n\"So how about the other one?\"\n\n\"Um, well...\"\n\n\"There's nothing to be embarrassed about, you know. Though it is all right if you don't want to talk to your old teacher about it,\" she laughed.\n\nNow it was my turn to laugh. \"Yeah, right. Old. Professor Schmidt, that dude is old.\"\n\nShe shushed me but giggled a bit. \"He also has unbelievably good hearing for a zombie and I'm only an assistant professor, have to play nice.\"\n\n\"Well, you're one of my favorites, \"I said, not lying one bit. \"I wouldn't want you to get in trouble or whatever.\"\n\nShe smiled. \"That's nice of you to say. You're one of my favorite students.\"\n\nThat was nice to hear. She was tapping her desk absentmindedly.\n\n\"So, you don't have to tell me about your experiences with Delta of Venus, but I would like to hear if you liked it or if you just thought it was smutty.\n\nI had thought about it quite a bit obviously, so I told her so.\n\n\"Honestly, it really helped me work something out,\" I said before realizing what I was saying.\n\nHer eyebrows raised as I suddenly wished I could stuff those words back in my mouth. The she laughed harder than I had ever seen her laugh.\n\n\"I--,\" she gasped. \"I bet it did!\"\n\nFor fuck's sake, did I just say that?\n\n\"No, I mean... well I meant to say--\"\n\n\"I'm sorry,\" she said. \"I didn't mean to laugh but that was pretty fucking funny,\" she said, in a low, conspiratorial tone.\n\nThat was another first, I had never heard her curse before. I found it sexy and it was distracting me from formulating a better explanation.\n\n\"There was something I was having well, trouble with. It was hard\u2014\" I stopped again. Are you shitting me with this?\n\nHer smile was getting wider like she was going to explode into laughter again so I quickly continued, \"\u2014to figure this thing out on my own.\" OK, not bad. She was still smiling, but it had turned into a kind, understanding smile. Her eyes had care in them, not concern.\n\n\"Well color me intrigued,\" she said.\n\nI took a deep breath but didn't say anything. Then I looked at my feet. Chicken.\n\n\"I'll tell you what. Shorten next week's paper on Henry V by a few pages and write a story about what was troubling you and how the book helped. You don't have to of course, but I'd like to read it and I can give you any thoughts I may have. It's why I'm here.\"\n\n\"OK,\" I replied.\n\n\"And it would remain between you and me. I wouldn't pass it around to other teachers or anything of that sort.\"\n\n\"I know.\" That hadn't even crossed my mind, I trusted her. \"OK. Well thanks, I'll see you later.\"\n\n\"Be seeing you,\" she said with a smile. An in-joke we had at the time. \"That reminds me, try not to leave it to the last minute. I enjoy your papers but sometimes I do wonder how stoned you were when you were writing.\"\n\nSomehow in a 3AM writing haze I had managed to work themes from The Prisoner into Shakespeare analysis. At 3AM it sounded awesome. The next day it smelled like a steaming load of bullshit.\n\nI left smiling. She really was cool. The Prisoner reference was badass. I also realized she hadn't even asked if I was returning her book.\n\nAs the week progressed and I got deep into Henry V, I realized Shakespeare was starting to lose me with the Henrys and Richards and whoevers and yeah I was really not looking forward to analyzing the role of the chorus and its relation to the audience in Henry V in no less than 10 pages double-spaced. I started thinking about what I would write regarding Delta of Venus and what it meant to me. I started thinking about how it would be to tell another person about my experience with Cynthia. Could I tell another person? Since heading to college, I hadn't even seen her despite her son attending the same college. I had been home of course, but there hadn't been much opportunity to see her. I saw enough of her son at school that we didn't really hang out at home. I didn't really want to tell any of my friends because it just seemed like something I didn't want to get out. I imagined taunts of \"dudes, keep him away from your moms!\" Maybe I'm not giving them credit, my friends weren't assholes, but I just had no interest in having any frank discussions about sexuality with them. I had an easier time being open with women anyway. Obviously.",
        "I broke with tradition and managed to get the Henry V part of the paper over early. By Friday that week I had pretty much completed it. I was anxious to get to work on the part that really interested me. I wouldn't see Molly again to the following Tuesday, but riding my bike to the Student Center on Saturday I did see her playing tennis. That explained why she looked so fit. I admit I slowed down a bit for some good old-fashioned ogling. I remembered there was a water fountain at the corner of the tennis courts so I pedaled nonchalantly over to get a drink.\n\nMy knowledge of tennis was meager at best, but I could see there was some kind of break in the action. She was yelling something across the court to the guy she was playing with and laughing. Again, a pang of jealousy. Stop it, just stop. I realized I was looking at her when she started waving to me. That woke me up and I waved back and smiled. She turned back to her partner who looked like he was setting up to serve and she gave me one more quick little wave and put her hand back on the racket. Something about that simple gesture was so intimate to me. She took her attention away from an imminent serve to give me that last little unnecessary wave. Was it simply attention from women I was so drawn to? I recalled the delicious feeling of Cynthia's willing, hungry eyes on me and as I hopped back on my bike, I realized my story was already forming in my head.\n\nAt first I thought about somehow trying to write it like Shakespeare, but quickly realized I was complete shit at trying to write like Shakespeare. About the cleverest thing I could come up with was \"cometh hither eyes of Heather Thomas\" (Heather Thomas being the bikini-clad subject of the pinup poster on the ceiling I got caught jerking off to, her skimpy bikini, her look like \"dive right in, fella, it's hot and wet\"). Not all that clever. I did like cometh hither though so I kept that for the title page separating my yawn-inducing Henry V analysis and my hopefully not lame attempt at self-analysis through erotica. I intended it to be kind of a jokey beckoning into the world of the story beyond. Cometh, har har. Get it?\n\nI imagined the red pen, \"mediocre pun, needs work.\"\n\nAs the words started flowing, however, I found that building the story was thrilling in almost the same way the original events were. I knew full well I was telling a story about my life, in full sexual detail a la Anais Nin, to a woman I was attracted to. Not just, \"this happened, this is how I felt.\" No, I was making it as explicit as I could, using words I'd never put to page before. Cock. Erection. Masturbate. Come. Or cum, I hadn't decided yet. This was exhibitionism through words and it was proving to be just as arousing. Literary exhibitionism of literal exhibitionism with an older woman for an older woman? Like the old Double-Mint commercials. A double-great feeling, double the pleasure, double the fun.\n\nOr so I hoped.\n\nSo I wrote. I re-wrote. I had an early word processor back then with a tiny CRT screen. I wrote and deleted. When it was complete, I had written the story of Cometh Hither, the story of me getting caught masturbating to a pinup poster by a friend's mom who that same day orchestrated events to get me into a revealing swimsuit with a painfully obvious erection and which ended with me naked in her bed, masturbating until I came for her while she sat right next to me. I discussed my conflicted feelings about it, how I had started to think it seemed abnormal and weird, and how a story contained in Delta of Venus helped me feel I was fine. Well, relatively. In my story, I wrote Anais Nin in as a character, sort of a Shakespearean chorus who just shrugged and said things along the lines of \"good job, kid,\" as if she found it all rather pedestrian. I almost deleted those parts. Pretentious stoner nonsense? I figured I'd leave it in though in the hopes it would at least amuse Molly.\n\nWhen it was finished, the story was almost as long as the Henry V section. I had only intended to write a few pages, but I find myself enjoying the process immensely. Writing about every detail of that day for and audience of one felt so intimate. A lot of the times when I wrote papers for school, I didn't really think about whoever was going to read it. It was an assignment, maybe I had good ideas, maybe it was a 3AM pile of shit. I knew when it sucked and when I was not going to get a decent grade, but I didn't really consider the audience. With this story, however, I paid every word far more attention. They started flowing out as the story progressed, but I took care to get them right. It felt the same as wanting to put on a show that Cynthia wanted to see while I was naked on her bed. I felt just as naked putting the words to paper for Molly. I wanted her to see me, know me. Intimately, through my words. I wasn't sure what the reaction was going to be, but I wasn't dreading it. After I was satisfied I was as finished as I could be, I printed the paper on my dot matrix printer and hid it in my underwear drawer. I did not need this thing getting released into the wild for the shits and giggles of my housemates and their girlfriends. This was between me and Molly and I was going to make sure it stayed that way.\n\nTuesday came. Shakespeare. Molly. My paper was in my backpack under my chair. I was sitting there trying to listen but all I could think was that there was no way I could hand this thing in. No fucking way. I was going to remove the last half starting with the stupid Cometh Hither title page. As class ended, papers were turned in. Once again I waited until the room cleared out and I went to talk to Molly who had a smile like she was expecting this.\n\n\"So, how did the paper go?\" she asked. \"Chicken\", I thought to myself.\n\n\"Great. I think. I\u2014uh. Hang on.\" I looked in my bag, found the cover page for Cometh Hither, and held onto that section as I brought it out to hand to her, tearing the entire last half from the paper. A shred hung from the staple. She looked at me and then at the paper. I must have looked more than a little weird. I handed it over.\n\n\"It seems a bit... light,\" she said as she turned the pages to the end. She turned it over. \"And there doesn't appear to be anything... extra.\"\n\nI sighed. \"I know. I just ripped those pages out.\"\n\nNow her look contained concern.\n\n\"But why?\"\n\nI paused. Her eyes implored. I said quietly, almost a whisper, \"I\u2014I don't want you to think I'm a perv.\"\n\nWith that she took my hand in hers and shook it. \"I would never think that.\" She looked in my eyes with what I might have read as anger any other time, but it wasn't anger. Firm resolve I would think later, that's what it was. \"Never. Everything here is between us and us alone. To be honest, I asked myself if giving the book to you was a good idea. But my point was sex isn't something to be ashamed of and it sounded like you had something to say. I like what you write, I think you're good at it, and it seemed like a good way for you to express what you needed to. Work things out, like you said.\" She smiled at that, as did I.\n\nI reached into my pack and pulled the pages out. She grabbed her stapler and I handed to the pages to her. She stapled Cometh Hither to Henry V and I exited stage left, pursued by a bear.\n\nWell, not really. She took my paper and placed it in her planner, not with the pile of other students' papers on her desk. She zipped the planner closed and gave me a nod, like \"that's that, nice and safe\" and I knew that it was. We said goodbye and for some reason I thanked her.\n\n\"You are very welcome.\"\n\nOur next class was Thursday. Generally, the papers wouldn't be graded until the following week, so I wasn't sure what to expect as I entered the room that night. I was a little later than usual, not accidentally. I hemmed and hawed until I was sure to not be the first and not be the last in the room. I wanted to be in the middle. Still, when I walked in Molly looked up and locked eyes with me. I reflexively darted my eyes away but then immediately looked back. She was still looking at me. I gave her a quick and low one-handed wave and she smiled and gave me a nod and then looked back out over the class.\n\nIn that two hours, I basically heard nothing except my heart pounding and all the words in my brain tumbling around trying and failing form any coherent ideas. My housemates and I enjoyed watching the movie Koyaanisqatsi while high. \"Life out of balance\" indeed. That's what it felt like. I felt like everything around me was a stoned, topsy-turvy, time-lapse blur.\n\nThen class ended. Once again, I dawdled. I fumbled with my backpack. I felt light-headed.\n\nMolly came over.\n\n\"Rough night last night, you look like you're going to pass out,\" she said.\n\n\"I'm okay, I'm okay.\"\n\nShe looked like she was choosing her words. \"I think I know why.\"\n\nShit.\n\nI had no words to choose from.\n\n\"What you wrote. Was\u2014is... wow. I have never had anyone write anything like that for me.\" She stopped like she was trying to figure out what to say. \"I thought I had figured out what I was going to say to you, but now that you're in front of me...\"\n\n\"I didn't think it was THAT good,\" I said. I felt flushed.\n\n\"Some of the grammar is iffy,\" she said. \"And dialogue is written oddly sometimes... and you use a lot of ellipses. But the honesty, your story... It was very erotic and I really, really enjoyed it.\"\n\nShe paused and looked at me.\n\nShe leaned forward and whispered, \"Boy, did I cometh.\" She fanned her face with her hand. \"Whew,\" more of an exhale than a word. Her sly smile grew wide, showing her teeth.\n\nThe clouds parted, an angelic chorus blasted its song from the skies.\n\nDear Penthouse Letters...\n\nShe was smiling at me and I didn't know what to do but smile back as my head quickly filled with images of her reading my story, lying in a big warm bed, my faded dot matrix words in one hand, the other moving down, down... inside her panties, touching herself until--\n\n\"Are you free right now?\" she asked.\n\nThat brought the Boner Express back down to Earth in the nick of time. \"Uh, yeah?\"\n\n\"Come with me to my office?\"\n\n\"Okay,\" I said. What else would I say? Nah, no thanks.\n\nWe packed up and left the classroom. Her office was in the same building on the floor above. It was early evening but there were still people in the halls.\n\n\"I didn't read the Henry part of your paper yet, but if you put half as much thought into it as your story, that'll be an A.\"\n\nI look over at her and smiled. \"Thanks.\" I thought I should say more. \"You, well, you're inspiring.\"\n\n\"Oh, I really hope so.\"\n\nWe arrived at the door to her office and she turned to me.\n\n\"After I close the door, take a seat on the couch and not a word.\" She spoke low and quietly. No one would hear. \"Not one.\"\n\nI nodded. Not a word.\n\nWe entered the dim office, lit only by the slowly twilight sky outside her window. I sat on the couch as she asked.\n\nShe crossed the room, set her papers and bag on her desk. She unzipped her planner and pulled out what I assumed was my paper and then sat in a brown leather chair by a bookcase opposite the leather couch I was sitting on. She was looking directly at me as she opened my paper to its latter half. She looked down and read for what seemed like an eternity but probably was thirty seconds. She raised her eyes back to me.\n\n\"The story you wrote about is one of my favorites,\" she said.\n\nI started to say something and she cocked her head and pursed her lips.\n\nRight. Not a word.\n\n\"Maybe not for the same reasons. You identify with the young man. It's written from his perspective of course, but the woman's motivations are just as intriguing, I think.\" She reached into a bag at her feet that I hadn't really noticed and produced a familiar black paperback along with my paper. Seeing her holding both of those in her hands gave me a curious pleasure. My inexperienced words next to those of a pro...\n\n\"I bought a new copy today. You keep my original,\" she said.\n\nI gave a thumbs-up in thanks and she grinned. She opened the book and flipped through the pages until she found what she was looking for. She started reading out loud.\n\n\"She was sitting on her balcony watching me, completely unashamed, and something drove me to pretend that I was not noticing her at all,\" she read, slowly. She seemed to savor the words. She touched the tip of her tongue to her top teeth as her eyes skipped ahead, \"being watched by her gave me the most extraordinary pleasure... on the third day I had an erection.\"\n\nHaving her read this to me in the dim room was starting to have a similar effect on me. She reached over to small lamp on a table beside her chair and turned the light on. A couple clicks and it was down to the dimmest setting.\n\nShe returned to the book. \"From where I lay I could see her very luxuriant form.\" I gazed back at her and let my eyes soak her in, traveling down her body, down her bare legs. She kicked each shoe off and I looked up. She was looking at me. She shifted into what seemed like a more comfortable position on the chair, lower, settling in.\n\n\"Luxuriant,\" she repeated. \"I love that word here.\" I did to, that one word evoked such a striking image. I also loved the way she said it, sounding as luxuriant as she looked right now. She was looking at me pointedly with the tiniest of smiles, her mouth turned up at one corner. Using a finger to hold her place in the book, she picked my paper up from her lap and paged through it. One last sideways glance, and back to the page.\n\nMy page! And right to the good stuff, apparently.\n\n\"She was looking at my Speedo again, my erection straining at the material, then back to my face. I slowly eased myself onto my back, quite conscious of how it must look to her. She smiled. I could feel her breathing through mattress, see the rise and fall of her chest.\"\n\nMolly smiled at me and skipped ahead. Her voice saying \"my erection\" kept repeating in my head.\n\n\"And so the curtain raised on my performance. I slid my right hand under the waistband of the Speedo and caressed myself for her... I felt brazen and deliciously wild.\"\n\nMy words. Me.\n\nShe paused and looked directly at me.\n\n\"Brazen... Wild... And so the curtain raised on my performance,\" she repeated, enunciating every word.\n\nShe whispered, \"Deliciously wild...\" and placed the paper in her lap. She cocked her head slightly and raised her eyebrows.\n\nI could have smacked my forehead. For the second time in my life, I was being asked to masturbate for a woman. This woman had read my story and how I felt about the events of that morning. She read my attempt at being titillating, words I had used to describe myself, my body, my arousal, in no uncertain terms. How I felt doing something so private for someone else, with someone older, not a peer. The story was quite clear about how I felt, filled with imagery of skin and lust and erections and orgasmic explosions. My erections, my orgasms. My come. Cum. I still didn't know which sounded better. Either way it felt smutty and taboo and she obviously had no problem with any of it. At all. Suddenly being so conflicted about it seemed far, far away. I smiled and slid my legs up onto the couch. Now this weird couch seemed perfect. I kicked off my sneakers and socks and then, looking at her, unbuttoned my jeans.\n\nShe returned to the book and repeated Nin's words: \"being watched by her gave me the most extraordinary pleasure.\"\n\nExtraordinary is right. Watching her, I unzipped my jeans, my erection tenting my underwear, pushing its way out as the sides opened. Molly watched, bemused, as I slid them down and off. They fell to the floor.\n\n\"Did it excite her to watch me?\" she read. Her eyes were on me. My penis was of course hard as rock, visibly straining at my underwear. Molly's eyes lingered for a moment and then went back to the book.\n\nAgain Nin's words fell from her lips. \"I feared that if she knew I was aware of her she might leave.\" She looked back at me. I made a show of looking away, looking at the ceiling.\n\nI whistled quietly to myself nonchalantly. Doo dee doo.\n\nShe giggled. \"Psst,\" she got my attention, \"his shirt is off too.\" I quickly stripped off my t-shirt. I was close to being fully naked in front of her and I was loving it. I was trying my best to play the part of the exhibitionist in the story and I think I was doing okay, especially with her stage direction. I also had one more experience under my belt than the guy in the story.\n\nAnd then the words weren't Nin's. They were my words, words I knew so well because the scene had played over and over in my head since the day it happened:\n\n\"I was hungry for her gaze on my naked body now, I had to show her everything... I longed for her eyes on my bare skin, my erection,\" she breathed.\n\nWaves of warmth rushed over me hearing her speak those words to me. I hooked the waistband of my underwear with the fingers of both hands. I looked at Molly and she was watching with a smile, my story again in her lap. I slowly pushed the waistband down, lingering momentarily, then letting it slip past the tip of my penis. I slid the material slowly down over the head, then the shaft, slowly exposing all of myself to her. It felt amazing to be doing this for her. I pushed the underwear down my legs and off and then slowly laid back on the couch. Now I was completely naked in front of her. But I didn't touch myself. As in the story, I pretended I didn't know I had an audience, acting as though I was totally unaware of her presence. Study of a young man in repose, naked with a raging hardon. I was so hard it was defying gravity, flexing involuntarily, raising itself tautly so it hovered just over my lower abdomen. I made a show of peeking at her through one eye and she laughed.\n\nShe theatrically cleared her throat and read from the book:\n\n\"Looking straight at her now...\"\n\nI opened my eyes and turned my head to look directly at her. I knew what came next.\n\n\"I played with my sex.\"\n\nThen my words:\n\n\"She was staring openly at me now, at my hard cock. She was breathing heavily, I thought I could even feel her breath on my skin.\"\n\nMolly too was staring openly. Her lips were parted, gone was the smile. I could see the maddening curves of her breasts rising, falling through her dress. I wanted to kiss them, just like that, my lips pressed to her dress, feeling her nipples through the fabric, I wanted to run my hands up her thighs, raising her dress to--\n\nI grabbed myself and began masturbating, not just for show, I wanted to come. It was almost too much. I didn't want this to be over fast, but I could not help myself. I was so turned on. I knew by heart what came next in both stories. Nin's narrator and I played with ourselves with the women watching our every movement, and just like them I was very aroused and would come easily. It seemed like the guy in the story came in seconds. I surely could also. Molly's eyes were on my grasping, stroking hand. Was she playing the part or was she also enjoying it?\n\nRepeating the words of Nin's storyteller that Molly had spoken herself just minutes ago, and breaking her rule, I asked out loud, \"did it excite her to watch me?\"\n\nThey were the first words I had spoken since we entered. Nin's voice through me, to Molly.\n\nInstead of finishing with the words on the page (\"it must have\") she simply said:\n\n\"Yes.\"\n\nHer words, her voice. I wonder if my speaking had broken the spell and I stopped my movements on myself.",
        "She closed the book. \"Those two never met,\" she said. \"I was never satisfied with that. Neither was the young man's girlfriend when she finally realized he only liked to be watched, and why.\"\n\nI agreed. \"She was furious, ripped up all the nude sketches she made of him,\" I said. If I wasn't lying there naked with my erection in my hand, it would have seemed like a normal conversation about a book with my favorite teacher.\n\n\"Exactly, even though she adored his naked body, drawing his erections. Once she found out the reason for those erections he got why modeling for her, she realized she'd be forever left unsatisfied. So, if you were to have our exhibitionist and his original voyeur meet, what might happen?\" she asked. \"I have some ideas, but I'd like to hear yours.\"\n\nI knew my next words could be coming to life. Make it good.\n\n\"Maybe it turns out she's an English teacher and he's having some troubles in school and his parents ask if she'd tutor him,\" I said.\n\n\"Nice touch,\" she said. \"So a young man is permitted to visit her apartment alone without raising eyebrows?\"\n\n\"Yeah,\" I nodded.\n\n\"He goes to her apartment one day. What's next?\" she asked.\n\n\"Well. The, um, guy who paid for the stories would want the sex to happen right away,\" I said.\n\nShe nodded. \"Nin's patron, yes, surely.\"\n\n\"But maybe she would string it out, like neither knew how the other would react or if they were even both, uh... in on it. Like maybe he thought she wasn't actually watching him... jer--masturbate,\" I said.\n\nShe shook her head. \"No, he said he was looking directly at her and she would come out every day at the same time. Both knew what was going on. That the other knew.\" She smiled and gestured at my hand, still on my erection. \"There was no doubt that he was masturbating\u2014jerking off\", she added with an exaggerated whisper. \"And doing it for her, he knew she was watching, not just accidentally seeing him through the window.\n\nI thought for a moment. \"Okay, so maybe they both pretend for a little while and that's part of the game. Like she has him read some--,\" I continued with my own exaggerated whisper, \"erotic literature.\" \n\nMolly laughed again. I really loved hearing her laugh.\n\n\"Perfect,\" she said. \"Just like your story. She orchestrates things to get him aroused because she wants to see him in that state again. She hopes that he'll become excited, hard while reading with her. But since they're now in the same room, so close, she wants to teach him more. Show him their passive sexual encounters are perfectly fine, but so are more... active pursuits. So maybe she gets him into position on a couch to touch himself for her, and he willingly does so, but after a short while she decides she doesn't want to just watch him have his orgasm.\"\n\nI had stopped stroking, but my fingers were still curled around myself. I moved my hand away and fully revealed myself to her.\n\nMolly spoke.\n\n\"As he read to her, the woman rose from her from her chair and began removing her clothes,\" she said, rising.\n\nLooking directly at me the whole time she was speaking, she deftly untied her dress and let it drop to the floor.\n\n\"She wanted to return the favor, show herself to him as he had to her.\"\n\nShe was gorgeous. She unclasped her bra and dropped it on the floor with her dress.\n\n\"She hoped her nakedness would thrill him just as much as his thrilled her,\" she said.\n\nLit from behind by the dim light on the table, she was mostly in silhouette but there was still enough light from the sky outside to illuminate her body.\n\n\"She wanted him to be just as excited being naked together as he was when there was a street between them,\" she said.\n\nBefore I could even linger on her naked breasts, she hooked her fingers in the waistband of her panties, bent down, and slid them down her legs until found their way onto the heap of clothes on the floor, kicked with a cute little flourish of a foot. She straightened back up and placed her hands on her hips. It was a glorious sight. My eyes roved every inch of her body. My cock surged involuntarily.\n\nShe reached back and picked up my paper. \"In your story it sounded like you did want more but... the woman, probably very wisely, didn't want things to go that far. It sounds to me like your storyteller\u2014you, did not wish to remain passive. You loved her eyes on you as much as Nin's character did, but you wanted to touch her and to be touched, right?\"\n\nMy erection basically said \"all signs point to yes.\" I nodded. She tossed my paper on her leather chair as she crossed to her desk and rummaged quickly in a drawer. I swung my legs to the floor and sat up so I could watch. My hand wasn't wrapped around it anymore but my erection had not subsided a bit. I wanted to touch every inch of her.\n\nBefore I had time to even wonder what she went to her desk for, she was in front of me. I moved to stand and she put her hand on my shoulder.\n\n\"No, stay,\" she said.\n\nHer other hand opened to reveal a condom in its wrapper.\n\n\"I thought I'd keep some here in case an advisee confides in me that they're having sex,\" she said as she tore the package open. \"I didn't really expect I'd be using them myself.\"\n\n\"And let's be clear, I'm not saying there's anything wrong with kinks or fetishes, but you see how it turned out for Nin's character when it became an obsession. Sometimes people just need a good old-fashioned fuck,\" she said with finality. \"And I for one am in need of a fuck. You?\"\n\nI nodded like a fool and she bent down in front of me.\n\n\"Hold that away from your stomach for a second,\" she said, eyeing my cock. I grasped it and did as asked.\n\nShe leaned in closer, knelt, and placed her lips on the head and gave it a quick kiss.\n\nOh man.\n\nShe looked back up at me with a smile and then reached down, fit the condom over the head and slowly rolled it down the shaft. Feeling her fingers on me was ecstasy. Even after it was rolled down and I had removed my hand, she kept her hand on me. Her fingers curled around the shaft and her thumb found itself touching the head. She ran her thumb along its ridge, and then removed her hand as she stood.\n\n\"So, young author, what happens next with our two kinky people?\"\n\nI looked up at her. \"Maybe, she... sits on his lap?\"\n\n\"I think that sounds like a perfect start.\" She moved forward, straddling my legs.\n\n\"The woman directed him to move down a bit,\" she said.\n\nI took a second for me to realize she was speaking as Nin's narrator, but I immediately complied. My back pressed into the pillows behind me.\n\n\"Then she slowly lowered herself onto him...\"\n\nShe did just that, reaching down to guide me into her. She was wet and I slid smoothly into her. She sighed and I groaned with pleasure.\n\n\"They made sure not to make too much noise in case of nosy ears,\" she said, looking in my eyes.\n\nI watched the muscles in her legs tense as she began moving slowly up and down on me. Her arms were around my neck and suddenly we were kissing. Hard. The slow buildup was in the rearview. It was like our story had released Nin's characters from the confines of their pages and they were finally allowed to meet and fuck in this small, dark office. Not only was it the most intense sex I had ever had at age 20, it could be the most intense sex I have ever had, period.\n\nShe pushed me back onto the couch and she was on top of me. My hands went to her breasts, her ass. I watched as my cock disappeared inside her. I kissed her. She kissed me. My hand again caressing her breasts. I leaned forward to kiss them when without warning she reached between us, grabbed the base of my cock, and held the condom down as she quickly slid off me. I barely realized I was no longer inside her when she pulled me upward and flipped me around as she fell back on the couch. She opened her legs for me and grabbed my cock again, pulling me towards her. I moved closer and she stared into my eyes.\n\n\"Fuck me,\" she said.\n\nFighting my primary urge to simply enter her again, I moved her guiding hand from my erection. She looked at me quizzically and seemed ready to speak, but stopped when I moved my face to her breasts. My lips found her nipples. I traced my lips over the curves of her breasts, moved farther down, kissing her stomach along the way. Light, soft kisses. Her cute belly button. Dialing back a little from the urgency of the past few minutes. Soft hair.\n\nThen my lips found her sex.\n\nAnais Nin made it sound so classy, her sex. My lips, my tongue, her sex, her hands on my head. Not insistent, loving. Tender.\n\n\"That feels--,\" she breathed. \"His tongue felt wonderful,\" she corrected herself.\n\nShe moved beneath me, I moved with her. Exploring. Kissing. Probing. Licking. Trying to fake being an expert at it. It seemed like it was working okay. Then her hands gently pulled me up towards her.\n\n\"Come here, now,\" she said.\n\nPressing my toes against the floor, I pushed myself slowly up her body, my erection sliding its way up the inside of her leg. As my face reached hers, my cock was once again right where we needed it to be, poised...\n\n\"Making sure she was positioned just right...\"\n\nShe moved a bit under me. I could feel her warmth on the tip of my cock.\n\n\"She grabbed his ass and pulled him into her wet, wet...\"\n\n\"Pussy,\" I finished. Fuck it.\n\nEnough with classy.\n\nShe almost snarled as she grabbed my ass, positioned my hard cock with her other hand taking just a moment, just so, right there... and pulled me in.\n\nPrimary ignition sequence complete! I looked down at her. Holding myself up with one arm, I reached out to touch her face with my other hand, tenderly. She smiled-- and then grabbed me by the shoulder hard and pulled me down to her. Mouths open, tongues searching. Thrusting. Her hand on my ass showing me how fast. Faster than I thought. Main engine burn is a go! The couch protested with a creak and then apparently resigned itself to do its part quietly. For the most part.\n\nMolly's hand went to the side of my face.\n\n\"Touch me,\" she whispered.\n\nI was sexually active, but far from an expert. I touched her face. She took my hand in hers and led me downward. I slowed my body's movements as I watched her begin touching herself, my fingers beside hers. Her fingers and mine also found themselves brushing against the shaft of my penis. Fucking-A! Her fingers intertwined with mine and guided me where she desired, putting her fingers on top as mine took over. She applied the right pressure, directed the right motions, and then her hands were on my ass again, pulling me down. She sighed. I resumed the rhythmic motion of my body and she resumed hers, pressing herself to me and my fingers. We lost synchronization a couple times at the start, but it didn't take long to work out.\n\nOne hand still on my ass, she brought her other up to my shoulder and pulled my face to hers, this time more gently.\n\n\"You're going to make me come,\" she whispered. She kissed me and I kissed her back. And then we were simply face to face, mouths opening, breathing each other in.\n\n\"She was going to\u2014\", she abruptly cut herself off.\n\n\"Fuck the story,\" she said. \"Oh god,\" she said. \"I'm going to come...\"\n\n\"Fuck. The story,\" I agreed, my voice cracking in exertion and pleasure.\n\n\"Fuck me, oh fuck me,\" she exhaled.\n\n\"I'm coming!\" Her body quivered. I kept going, body, fingers... whatever it took to send her over that edge. She flexed her legs and pushed herself up into me and stopped in that position. I slowed my fingers but pressed a little harder. My cock was completely inside her and I was ready to pull back but she grabbed my ass to keep me in place. Her fingers dug into my shoulder and her legs quivered.\n\n\"Ohhhh shit!\" She put her hand over her mouth. \"Oh fuck, oh shit,\" her cries muffled by her hand. In that instant I thought of Charlie Brown's teacher's voice. Stop thinking about Charlie Brown's teacher!\n\nLooking at Molly, she was again the only thing in my mind. I could not believe where I was right now. This beautiful woman.\n\nShe took her hand away from her mouth and raggedly let out a simple \"fuck!\" She closed her eyes. \"Phew!\" And then she started giggling and writhing again. More like wriggling. \"Stop, stop,\" she gasped. I forgot about my fingers, they apparently had a mind of their own. \"Tickles, tickles,\" she laughed.\n\n\"Sorry,\" I said moved my hand away. She immediately put a finger to my lips.\n\n\"There is nothing to be sorry about,\" she said. \"Except that you did not come yet.\"\n\nThat was true.\n\n\"Not yet,\" I said.\n\nShe took another deep breath and exhaled. \"Whew, well... let's see what we can do about that. What would you write, no... what would you like?\" She paused, looked at the ceiling, and bit her lip like she was trying to think of something.\n\n\"You're still hard. Very hard,\" she said.\n\nHow could I not be?  I was 20, failure to maintain erections was not on the radar of the Boner Express.\n\n\"Would you like me back on top? From behind? Blowjob?\"\n\nHaving her on top of me was nice. From behind? It wasn't a big one for me right now, I liked seeing her face. Now a blowjob, or the way she had said it, \"buh-low-job?\" That was so damn cute.\n\nI started, \"she had only seen him afar, she had never gotten a good, close look at his di-\"\n\nRaised eyebrows cut me off.\n\n\"Um, his member? Cock? Manhood? Sex?\" I asked.\n\n\"Member, manhood... mmm, nah.\" She wrinkled her nose. \"Cock works for me,\" she said. \"I like cock.\"\n\n\"A lot!\" she added with a snort and gently pushed me off her. She extricated herself from my arms and left me sitting on the couch. I remember wondering about its surface. Things were getting a little messy. Is it leather? Vinyl? Pleather? What the fuck is pleather anyway? Molly was rummaging again in her desk. Another condom in its wrapper. Closing the drawer she looked around her desk and then picked up a tissue box. She crossed the room and stopped suddenly at her pile of clothes. Seeing me watching her she said, \"close your eyes.\"\n\nI did so. I felt her sit down beside me. One of her hands rested on my thigh and then I felt her fingers on my erection. She slid the condom from me and my penis slapped wetly against my stomach. There was a light thunk from her wastebasket a couple moments afterward, presumably the condom in some tissues.\n\nTwo points.\n\nI was about to say that out loud when I felt something soft on my penis. Tissue? No, a handkerchief. She was delicately wiping some of the condom's slickness from me with it. I was glad, I didn't want to taste like a condom to her, I just wanted to taste like me. I could feel her thumb and index finger holding the head as she softly wrapped the handkerchief around me. That was a nice feeling. When the soft material had draped over me entirely, she put her fingers around me, squeezing me at the base. I bet my lap looked like it had a little ghost on it. With her other hand, she took my right hand, guided me to myself, and wrapped my fingers around my Halloween ghost erection. Try not to think about Charlie Brown again, all right?\n\nI felt her lean in close, near my face.\n\n\"You can open your eyes now,\" she whispered in my ear.\n\nI opened them and turned to look at her. She was smiling. She directed her eyes at my lap and my eyes followed.\n\nMy hand was holding her panties around my hard cock.\n\n\"I've never given my underwear to anyone,\" she said. \"Those stories in the book where the women give their garments to men, they always excite me. They get me thinking about someone masturbating with my underwear,\" she said. \"Not someone who stole them from the laundry or something. Someone I care about, someone I want to turn on, someone who would touch themselves with them while thinking about me,\" she added.\n\n\"Would you touch yourself with them? Just for a little bit?\" she asked.\n\nI nodded.\n\nShe slipped back into our little continuation of Nin's story.\n\n\"Afterward as he dozed, as a special treat she took off her underwear and secretly placed them in his bag of books. She felt there was a risk of discovery by his parents, but she could invent some excuse. She wouldn't feign ignorance and blame him for stealing. And the risk would be worth the reward for them both, she hoped.\"\n\nI began slowly stroking myself with her panties as she watched. The story was coming easily to her and an orgasm was coming easily to me if I didn't watch it. I held myself in a way that exposed the head of my penis straining against the thin, smooth material for a moment. I moved my hand up slowly, listening to her speak.\n\n\"She hoped one day when they couldn't be together, he'd open his windows at the usual time, take his clothes off, and produce her underwear, wrap them around himself and stroke his gorgeous penis until he came. She hoped he'd feel close to her, smell her, that he'd be aroused by her, not just her gaze. She imagined how his penis would look with her underwear sliding over it as he stroked and massaged himself.\"\n\nI was enthralled.\n\n\"She also imagined him changing hands so his arm wasn't blocking the damn view.\"\n\nI had been lingering on her use of the word \"gorgeous\" but I immediately snapped out of it. She made a show of pretending to try to peer around my right arm. I took hold with my left hand and let my right arm fall to the side, my hand finding a happy resting place on her smooth thigh. That was nice.\n\nI started stroking with my left hand, but held myself loosely so my erection was more visible within the folds of the thin material. This was better anyway, my left hand wasn't quite as experienced as my right, it'd take me longer to come.\n\nShe continued. \"She saw everything from her patio. The way his hard penis moved within her most intimate of garments, the material sliding along its length, his fingers moving in ways she could tell gave him such pleasure. She imagined him thinking about her as he felt this pleasure. The silkiness of the underwear. She imagined him maybe thinking that feeling was her mouth on him...\"\n\nShe was right. The feeling of the soft material of her underwear enveloping me, the thought that she had only recently been wearing them... her voice, low and sensual, so close to me... I was losing myself in rapture. I closed my eyes.\n\n\"She imagined him thinking of her, head thrown back, thrusting himself into his hand, her undergarments, quietly calling her name as he came...\"\n\nI was ready, oh was I ready. But then her hand was on my wrist, slowing and then stopping me. I opened my eyes as I felt her hand cover mine. Her fingers peeled mine away and she gave me a look and a short shake of the head that said, \"not yet.\" I took my hand away and hers replaced it. She held me for a moment, looking me in the eyes.\n\n\"She knew if she were sitting next to him\u2014\"\n\nShe grinned and then looked down at her hand around me. With added pressure, she slid her thumb down my shaft, pulling her underwear tight around the head. She made a show of narrowing her eyes at my penis in her hand.\n\n\"If she were next to him, she knew she would see even more evidence of his arousal. 'Naughty boy,' she'd say. \"Just look at what a mess you're making of my underwear.'\"\n\nThere was no doubt about that.\n\n\"But before he could protest, she would tell him that she was only joking. She would tell him that she enjoyed seeing his wetness on her panties, his scent mixing with hers on the garments she had so recently worn.\"\n\nMolly slowly stroked me as I watched raptly. I had hoped and fantasized this might happen, but actually having it happen was still an almost otherworldly feeling. Part of me felt like I was watching it happen to the two people in our story, which wasn't surprising since crafting their story was so intertwined with the physicality of the moment. I drifted between our fictional lovers and the feeling of her hand on me, between the worlds of the imaginary and real, the warmth of her next to me, the erotic imagination, the smell of her skin, my skin, our words. The intoxicating scents and sensations of naked arousal and lust coupled with imagery crafted specifically to manipulate events in the real world. Words come to life.",
        "I felt alive.\n\n\"Having only seen him from through windows, across the street, now having him so close and so naked next to her, she was consumed with the idea of consuming him\u2014\"\n\n She stopped.\n\n\"Wait, that's just terrible,\" she said. \"Let me try again.\"\n\nI snapped out of the story.\n\n\"She burned with an... insatiable... hunger?\" she tried again.\n\n\"Christ, it sounds like she wants a hot dog. Fuck what she wants, I want to suck your cock,\" she said.\n\nAnd that's exactly what she did. She slid her panties off my erection and tossed them to the floor. Grabbing me again, she looked at me, tongue pressed to the corner of her parted lips. Almost in slow motion, her tongue slowly licked her bottom lip as she descended. As her tongue reached the middle of her lip, it also met the head of my cock. And then I was inside. I felt her tongue probe its way along the curves of the head and I was awash in pleasure. Her lips tightened around me, as did her fingers. She moved slowly, her mouth and hand in wonderful, maddening tandem.\n\nHer mouth, her hand. On me. Consuming me? She thought it sounded like crap, but that's what it felt like. She was utterly consuming me. I wanted nothing but to be consumed. Her hand (the words slick, warm, silky came to mind) squeezed, manipulated me. Her lips. Her eyes. Her fingers around me. Her mouth. Hot, wetness, a hum from her, mmmm, vibrating through my core. Tongue along the underside, finding the head again. Her hair, brushing against my stomach, the sides of my thighs. Electric sensations building on each other, now cresting, teetering like a rollercoaster at the top of its steepest drop...\n\nI brushed her hair back with my fingers. \"I'm going to come soon,\" I panted.\n\nShe suddenly took her mouth away from me and in a flash leaned over to the side. She picked the unopened condom off the floor with her free hand, stuck a corner of the wrapper in her teeth and tore it open. Something about that seemed almost feral. Hot. So hot. She let go of my erection which now was so hard it seemed to have a pulsing life of its own. I was afraid it was just going to start spurting on its own and I knew that's not what she wanted. Deftly she slid the new condom on me, giving it a quick little pat with two fingers as if to say \"good to go\" and pushed me back on the couch. She climbed on top of me, reached between us, and guided me back into her.\n\n\"Watching you with my panties really got me hot,\" she said, as if I needed an explanation.\n\nFor the second time in, fuck it, I had no concept of time. We fucked. This time slow but insistent. I watched her body undulate rhythmically. Up, down. In, out. I began moving my hips to match her movements but she pressed me down with a hand as if to say \"lie still.\" I did. She was watching me watch her body with a smile.\n\n\"Fingers. Pussy. Now, please,\" she commanded politely.\n\nI moved by hand down between us, palm down on her abdomen and then downward, tickled by her pubic hair. And then I did as she asked. A whisper.\n\n\"Fuck.\"\n\nShe really did like that. Her movements quickened and she began to press harder on me. I could not lie still, I moved my hips in time with her movements and this time she let me. I increased the speed and pressure of my fingers on her. I wasn't going to last much longer.\n\nShit, I wasn't going to last another second.\n\nI pulled her to me with my free hand.\n\n\"I'm coming,\" I breathed into her ear. \"I'm... fucking, fuhh---\"\n\nI exploded inside her. My last words hung in the air as formless sounds. Was that coming from me? It didn't matter. Nothing mattered. My body racked with the release. Spasm after spasm, I felt like I couldn't stop coming. When I did stop, the room got quiet except for our breathing which was heavy, ragged. I opened my eyes. She was looking at me with a huge smile on her face.\n\n\"Mmm... good?\" She turned her head slightly to the side and gave me a coy look. \"Looked like it was good.\" I realized she was still slowly moving on me.\n\nI put my hands on her hips and stopped her. I wasn't entirely confident with the condom in its current state. I had images of a water balloon bursting in super slow motion in my head.\n\n\"Oh yes. It was amazing.\" That was no lie.\n\nShe kissed me. \"I am so glad.\" She pulled her face back from mine. \"But why are we stopping?\"\n\n\"Um, the rubber. I think it's, uh, full,\" I said lamely.\n\n\"I see,\" she said. She thought for a moment. \"Maybe it's best...\" She moved off me. This time I reached for the tissues and carefully removed the condom. I wadded it up in probably more tissues than it needed and tossed it at the wastebasket, which was thankfully not too far away. Thunk.\n\n\"Two points!\" Molly exclaimed.\n\nWe both laughed like it was the funniest thing we had ever heard. She sighed and let out a deep breath through puckered lips. \"Phhhhhhhew.\" It looked like she was getting up. This time I spoke:\n\n\"He was not experienced, but even he knew she not yet satisfied. He reached over and put a hand on her thigh to direct her to remain seated. Using both hands, he pulled her towards him, laying her back on the couch.\"\n\nThe almost imperceptible swish of sweaty skin on leather, a low creak from the couch.\n\n\"He felt her legs go slack in his hands and he slowly guided her legs apart.\"\n\nA soft sigh, leg muscles relaxed in my hands.\n\n \"Moving his body backwards down the couch, he let his hands slide slowly down the outside of her legs, then up around her thighs.\"\n\nA short intake of breath.\n\nHis fingers arrived at her pussy\u2014uh, sex, the same time as his mouth\u2014\"\n\n\"Pussy is fine,\" she murmured.\n\nYes, indeed it was. It was exquisite. I wish I had thought to say that at the time.\n\nAnd then speaking was no longer possible.\n\nMolly bucked up hard to meet my mouth and fingers. I tensed and pushed back against her, just enough to not be pushed backwards.\n\n\"Fuck!\" she groaned.\n\nI let a finger, two, of one hand slip inside her as the fingers of my other hand found the spot she had directed me to earlier. My tongue joined them. My nose felt like it was in on it too. It was quite a party. I tried to tell a wordless story the best I could with my tongue and lips. She grabbed the back of my head. I took it as a good review.\n\n\"FUCK!\" she bellowed, in a whisper. I'm not sure that's possible, but that's how I'd describe it. It sounded like, \"faaaaaaaAAAHK!\" I felt her body shake. Her heels dug into my back. I didn't care. Everything was centered on one thing right now.\n\nI looked up past her belly button, then breasts, seeking her face. I could see her slender throat, muscles tensing. Her head was thrown back. She tilted her head forward. I could already see by her stomach that she was breathing heavily, but now I could see her mouth was closed, she was breathing heavily through her nose alone. She put her free hand over her mouth. Sounds escaped through her fingers. How I wished we were somewhere more private. I wanted to hear her shout out. I wanted to shout. It just--\n\n\"So... fucking...,\" she said through her fingers. \"I'm\u2014\"\n\nWith that her body tensed. I kept going. She shuddered and I could feel the muscles in her legs go taut. Another shudder and her legs relaxed, slowly.\n\nShe let the breath out with the word: \"Coming...\"\n\nI hoped it felt as good as mine. Her leg muscles shook. After a few moments when the aftershocks had seemingly subsided, I slowly came to a stop, expecting things to soon get ticklish. A murmured \"mmm\" from her. Her hand on my head pulled me gently upward. There wasn't much room on the couch for cuddling, but we tried. It didn't matter that we were jammed into each other. On another day it might feel uncomfortable, but at that moment it simply felt right.\n\n\"Right,\" she said. It could have been a minute, it could have been fifteen. It could be that we dozed off.\n\n\"That was... something else,\" she continued. \"How are you?\"\n\n\"Totally fucking awesome,\" I said.\n\n\"No, I mean... feel, um, weird about... anything? The panties?\" she trailed off.\n\nWhile I wanted to brush it off with a joke, I knew why she was asking. She was legitimately concerned. She cared. That prompted a warm, jittery feeling in my stomach. Watch out buddy, you want to fall in love with teach?\n\nYeah, well, what's so wrong with that? Well for starters, I didn't even know if she had a boyfriend, a hus--\n\nI realized she was still waiting for an answer. \"No, not at all.\"\n\nShe laughed. \"Score one for the old psychiatrist's couch! Well, maybe we should clean up, get dressed. And maybe get something to eat? I'm famished.\"\n\nThat sounded terrific to me.\n\nAs we were cleaning up and dressing, I noted she was putting on her underwear. After what I had done with them, I figured she'd go without. She noticed me looking at her panties and she let the waistband go, snapping against her abdomen. She waggled her eyebrows lasciviously. Looking like she was going to pledge allegiance to, something, she put her right hand over her breast, nipple poking between her index and middle fingers. She gave the nipple a tweak, then slid her hand down, fingers falling into her cleavage and then along the underside of her breast. My eyes followed those fingers down her stomach, down, down... under the waistband?\n\nHold the phone. \n\nI watched her fingers through the material, tracing a path ever downward, until she reached that spot I now knew so well. I realized I wasn't breathing. She looked at me through lidded eyes and traced a few small, slow circles around that spot. Then, that devilish smile. She tensed her index and middle finger outward, stretching the material, very much like I had done earlier with a different appendage. With the fingers of her other hand, she lightly traced the outline of the fingers showing through the material, over wet spots we both knew were from me. She closed her eyes, brought her hand out of her panties, put the tips of those fingers to her lips and blew me a kiss. Then her eyes opened wide and she laughed a short, almost surprised, \"ha!\" She gave me the double guns with a wink.\n\nPew pew, gotcha cowboy!\n\nThis woman. I was speechless. Words had been flying around this room all night and all I could do was sit there slack-jawed.\n\n\"Someday maybe you'll write this story.\" It was half question, half statement. \"If you do, promise I get a copy?\" She thought a moment. \"Change our names, though. Probably for the best. I already catch Schmidt leering, the last thing I need is him finding our dirty stories!\"\n\nI nodded. I would surely be committing this story to paper, I doubted anyone else would ever get to read it, but I made a note to change names. Wait, \"stories?\" Would I have more to write about? I sure hope so.\n\nShe stopped midway through putting her bra back on. Stock still, standing there in her panties, the ones that had so recently been wrapped around me. I stared. I started feeling like I'd be ready to go again in no time. That little show with her fingers... I wanted to dive right into that unclasped bra, feel her warm, soft breasts against my--\n\n\"It just hit me! Delta of Venus... Sigma Tau Delta? It's a sign!\" she said firmly.\n\nSad trombone, boner averted. Yay, Honor Society pillow talk!\n\nI sighed. \"Okay, okay, I'm in.\"\n\n\"Great!\" That was that.\n\nWhile I didn't relish more work... hang on. What the hell was I even complaining about? I didn't even know if this would be more work. I didn't see myself submitting any erotica for review or publication, but surely it wouldn't be the only thing I'm writing over the next few years (even though it was the most fun I'd ever had writing by far). This terrific woman, beaming at me right now, half-dressed, only wanted to help me. And fuck me. Yes, both of those things. What was so bad about either of those? Not a damn thing, pal.\n\nFuck me, indeed.\n\nAs she was finishing up with her bra and dress and I was slowly remembering how socks worked, she asked:\n\n\"So, the woman in your story. Cynthia? If that's her real name. Have you even seen her since? Don't make me jealous,\" she warned with a smile.\n\n\"No, not once.\" I said, noticing my t-shirt was on inside-out.\n\n\"Would you feel more comfortable seeing her now?\" She added, <br >\"Your shirt is inside-out.\"\n\nFlipping my shirt around, I realized I didn't need to think about it. \"Yeah, it'd be fine. I'm fine. Really.\"\n\nIn a way that I hoped implied I was only jokingly trying to make her jealous, I added, \"and hey, her son goes here too, I'm sure there'll be puh-lenty of opportunities.\"\n\nShe didn't laugh this time. Well shit. Here she is being the cool and you have to be an ass.\n\nShe narrowed her eyes at me and cocked her head. \"So, she might be here sometime?\" Molly came over and sat beside me on the couch.\n\n\"I think I'd like to meet her,\" she said. \"We certainly have something interesting in common.\" She smiled and rested her hand on my knee, giving it a playful squeeze.\n\n\"I believe she would like your story as much as I do,\" she said, dark eyes glittering in the muted light of the room.\n\n\"Yes,\" I agreed. \"I think she would.\" "
    ],
    "authorname": "MorganDale",
    "tags": [
        "college",
        "older woman",
        "cfnm",
        "male masturbation",
        "cunnilingus",
        "blowjob",
        "panties",
        "teacher",
        "student",
        "younger man"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/cometh-hither"
}