{
    "title": "Mr. Right? Ch. 11",
    "pages": [
        "Here's the last chapter in Matt and Staci's story. I hope you've enjoyed it all. Thanks for reading and let me know what you think!\n\n*#*#*#*#*#*\n\nMatt sat behind his desk, in his home office, wondering why he was working so hard when he could be sneaking off with his wife and getting in some nookie. But, then again, the deadline on his project was looming and he wanted to be able to spend some real quality time with his woman. The thought of spending the upcoming weekend unhindered made Matt bunker down and focus, despite the fact that his manhood was starting to press against his pants. \n\nHe missed the days when he worked for his dad and was able to take off when he wanted. But, he did love his current job and wouldn't leave it for the world. Besides, he needed to provide for his family and being disowned by his father after he married his Ana made him feel the need to work to provide for their future more acutely. Sure he had money put away, he had been saving since the day he met his Ana, but he wanted to make sure that they would want for nothing in the future. His concentration was once again broken by the knock on his door. \n\n\"Come in,\" he called out. \n\nHe smiled as his Ana's beautiful face came into view. It had been years, but he would never tire of watching her walk into a room, especially when she was accompanied by his two favorite people in the world, well, next to her. \n\n\"Daddy!\" \n\n\"Dada! Dada!\" \n\nHe grinned at his babies. He held open his arms and his kids ran into them. He hugged them to his chest and placed a kiss on each of their cheeks. His little Annabelle Marie was four now and turning into a little lady. She loved going to pre-school and coming home to share what she learned. Her curly brown hair fell down her back and when she looked up at him, he saw his Ana, from her almond shaped, light brown eyes that lit up when she was happy or excited, to her bright smile. She even had her mother's pout. Her complexion reminded him of a little cinnamon sugar cookie. \n\n\"Hey, Bells, how's my baby?\" \n\nHe grinned. There was that pout that he had grown to love. \"Daddy, I'm not a baby. I'm a big girl. I go to school,\" Anabelle stated, her arms now crossed against her chest.\n\n\"I'm sorry, honey. I meant, how's my princess?\" \n\n\"I'm good, Daddy. I'm going to go play with Jessica.\"\n\nMatt nodded and looked up at his beautiful wife. \"Play date today?\"\n\n\"Yep. We're going to the park for a bit and then I think we're supposed to get ice cream.\" \n\n\"Ice cream!\" Matthias chimed in. \n\nMatt looked back down to the giggling two year-old that was currently trying to climb into his lap. He lifted him up and sat him on his knee. Big blue eyes, the color of water in the Mediterranean, looked up at him and Matt felt his heart clench. God, he loved his kids. \n\nWhen he looked at his little Matthias Alexander, he saw Rosenbloom all over his face, which was one of the reasons why they had chosen to name him after Matt's brothers, Matthias and Maximus. Maximus went by his first middle name, Alexander, because he despised his actual first name, and Matt couldn't blame him.\n\n\"Ice cream? You're eating ice cream without me, Matty?\" Matt asked, feigning hurt. \n\nMatthias tilted his head to the side, as if he was deep in thought. Then he smiled. \"You come too, Dada?\" \n\nMatt ruffled the sandy brown curls that sat atop his son's head. \"No, Matty. Dada has to finish his work. But, we'll play trains when you get back okay?\" \n\n\"'Kay Dada. We play.\" \n\nStaci walked over and picked Matthias up off Matt's lap. She settled him onto her hip and leaned down to steal a kiss from her husband. He had been working hard the past couple of days and she looked forward to the weekend. Her parents were going to pick up the kids so they could get a little alone time to themselves. She noticed the look in Matt's eyes and knew he was just bursting at the seams to say something lewd to her. Too bad the kids were in the room, because she wanted to say something right back. \n\nMatt sighed. \"So who's going to be there today?\" \n\n\"Just me, Maia and Lexi today. Ted and Jesse have got a date with a couch and a football game.\" \n\nMatt grimaced. \"I forgot about that. If I was a little further along, I'd be right there with them. Damn.\" \n\nStaci smiled. \"Well, get your work done. This weekend, the kids are going to visit their grandparents and I don't want your attention wandering.\" \n\n\"Oh, I wouldn't worry about that, angel. My attention...as well as other things will be all yours. We'll see what kind of trouble we can stir up this weekend.\" Matt winked at his wife. \n\n\"Say bye to Daddy. We'll see him later.\" \n\n\"Bye, Daddy!\" \n\n\"Bye, Princess.\" \n\n\"Bye, Dada.\"\n\n\"Goodbye, Matthias.\" \n\nHe gave his babies one more kiss on the foreheads and watched as his wife left with them to go to their play date. Maia and Lexi both had two kids each. Maia and Jesse's first born, Zavien, had just turned 5, and their little girl, Jessica, was only a few weeks older than Matthias. Lexi and Ted were lucky enough to have twins, William and Walker, who were three. They weren't identical, but they both looked almost exactly like their father. Kathy had one little girl with Quincy, named Bethany, who was 4 years old. Kathy and Quincy had since broken up, but Q was a dedicated father and it was most likely his turn to have their daughter. \n\nMatt sighed, wishing that he was hanging out with his friends watching the game, or better yet, fucking his wife on the island in the kitchen of their house. The weekend couldn't come fast enough. Maybe he could talk his Ana into wanting to be pregnant again and they could spend the entire weekend trying to make more babies. \n\nMatt realized that he was daydreaming instead of working and turned back to his computer. He had immersed himself in his work once again, when the phone rang. \n\n\"Hello, Rosenbloom residence.\" \n\n\"Matthew, is that you?\" \n\n\"Hey, mom, what's up?\" \n\nAs much as he wanted to work, Matt always made time for his mother, especially since he knew she was breaking his father's 'no contact' rule to speak to him. Kay Rosenbloom had laughed in her husband's face when he demanded that she stop talking to Matthew. She even swallowed her own dislike for interracial marriages and came to their nuptials, stating that she was going to be a part of her son's big day, whether her husband approved or not. She fell in love with Staci over time and adored her grandchildren, even coming to the hospital to see them after they were born. Staci always made sure to send pictures of the kids to his mom and invited her to dinner often. Matt knew that she was still trying to convince his father to come around, but he doubted the day would ever come. \n\n\"You kids and your slang. I'll never get it.\" \n\nMatt laughed. \"Alright, alright. How are you, mother dearest?\" \n\n\"Just fine. How are my beautiful grandbabies?\" \n\n\"Staci and I are doing great, thanks for asking. The kids are good. They're off playing in at the park right now. Annabelle is such a little lady and she absolutely loves school. They're thinking about letting her start kindergarten early.\" \n\n\"Wonderful! And Matthias?\" his mom exclaimed.\n\n\"He's been nothing but a joy. I can handle the terrible twos with my hands tied behind my back.\" \n\nMatt heard his mother's musical laugh over the phone. \"That's because you let Staci deal with the tantrums.\" \n\n\"He likes her better than me when he's upset.\" \n\n\"Matthew!\" \n\n\"I'm kidding. I help my Ana with anything she needs, including Matty and Bells. Besides Matthias is my little man. He's a Rosenbloom through and through.\" \n\n\"I hope that doesn't mean he's inherited the Rosenbloom stubbornness.\"\n\n\"He's got that in spades...along with a few of our other undesirable qualities.\" \n\n\"Oh, Matt, you don't have any undesirable qualities.\" \n\n\"Yeah? Tell that to my wife.\" \n\nKay laughed. \"She knows better than most. Are we still on for dinner? I haven't seen you all in months.\" \n\n\"Of course, Mom. We're still on. Ana and I ordered out this time though. We're both a little overwhelmed at the moment.\" \n\n\"I don't mean to be a burden.\" \n\n\"You can never be a burden, mom. We love you.\" \n\n\"Alright, well, we'll see you at seven.\" \n\n\"Bye, mom.\" \n\n\"Goodbye, love.\" \n\nMatt hung up the phone and then paused. \"We?\" \n\n*********\n\nStaci groaned as she sat down on the downy couch. It had been along day. She worked in the morning, took the kids to the park in the afternoon and she was preparing for dinner with her mother-in-law that night. Matthias was being a pouty two year-old, but Matt had rescued her from him when they got home and took him and Annabelle to play trains in Matthias' room. Staci loved that Matt was an active, hands-on Dad, because that meant that she could get some time to herself and right then, that was what she needed. She lounged and even managed to take a quick nap, before she was woken up by a quiet knock. She pulled herself up into a sitting position and eyed the door.\n\nMatt strolled into the room with Matthias hanging over his shoulder like a miniature sack of potatoes. \"Matty has something to say,\" Matt stated, grinning. \n\nMatt turned around so Staci could see the face of the giggling bundle of toddler perched on his shoulder. \"Yes, Matty?\" \n\nMatthias pinned his mom with his big blue eyes and grinned. \"Mommy, I want baby.\" \n\n\"You want a baby doll?\" Staci questioned, slightly confused.\n\n\"No, Mommy. Baby in you belly.\" \n\nStaci's mouth hung open. \"Did Daddy put you up to this?\" \n\nMatthias giggled in response. Matt turned around and set Matthias down on the floor next to him. \"So what do you think? Me and the boy have talked it over and we think it's about time there was another baby in your belly.\" \n\nStaci laughed. \"Oh, well, I'm glad you consulted an expert on the matter, Matt.\" \n\n\"He's the expert on when, I'm the expert on the making of the baby. Why don't we let grandma entertain her favorite grandkids while she's here and get started.\"\n\nStaci shook her head, laughing. \"Well, Mr. Expert, I've got something for you.\" \n\nStaci reached over and picked up a card off the coffee table. She had purchased it for Matt earlier that day, but she was hoping to give it to him later that night, or even the weekend. \n\nMatt looked down at the card as Staci handed it to him. \"What's this, Ana?\" \n\n\"Look inside.\" \n\nMatt quirked an eyebrow at the cryptic answer, but knew, at that moment, what the card contained. His smile became an ear-to-ear grin when he read his Ana's beautiful handwritten note, congratulating him on becoming a father times three. \"Well, shit, I'm a stud. That was awfully quick though.\" \n\nStaci laughed. \"Not regretting asking for a third child, are you? Because you're getting one in about 6 or 7 months.\" \n\n\"Regret? Hell no, I'm ecstatic. I want more kids. I was just looking forward to making the baby this weekend, but the hard work is already done. Now the pressure's off and I can have my wicked way with you. What do you say we practice making numbers four and five when grandma comes?\" \n\n\"Five kids?\" \n\n\"Six.\"\n\n\"Not happening.\" \n\n\"We'll see.\" \n\n\"Trying to keep me barefoot and pregnant, Matthew?\" \n\n\"Nah. Trying to keep you on your back with your legs in the air is more like it.\" \n\n\"Matt, not in front of the kid.\" \n\nMatt looked down at Matthias, who was currently trying to climb up his pants leg. Picking him up, he flipped him upside down, watching him giggle before setting him back on the floor. \"Matty, go play with your sister.\"\n\nMatt watched the toddler run out of the room and wondered if he was actually going to go and do what he asked. It wasn't likely. He turned back to his Ana. The woman he loved more than life itself, the woman who blessed him with his two amazing children and was going to give him at least one more. He grabbed her in his arms and planted his lips on her upturned mouth. It felt as if he would never get enough of his Ana. \n\nStaci sighed as she felt Matt's lips crushed against hers. She ran her tongue along that plump bottom lip and sucked it into her mouth, nibbling on it gently. She felt Matt's warm hands moving down her body, rubbing over her ass and squeezing. He devoured her and sparked her hunger for him. All thoughts fled from her mind until she heard a thump followed by the ranting of a four-year old who was apparently fed up with her brother. She pulled away from Matt and groaned. \n\n\"More kids means less time for nookie, Matt.\"\n\nMatt grinned. \"Not at all. We've got all our lives, angel. I'm going to make love to you until I can't get it up anymore. Even then, it won't be for lack of trying.\" \n\nStaci chuckled as she walked off to find her babies. She was met in the hallway by the tear-streaked face of Matthias. She picked him up and continued on toward the kitchen. It was time to get dinner onto plates and ready for the guests. \n\n*******\n\nMatt answered the doorbell when it was rang, with his little Annabelle in tow. She was always with him when he went to let his mother in, especially since she realized that grandma usually brought gifts when she came. The door swung open and the smile that was on his face froze in place, but his thoughts were rushing a mile a minute. \n\n\"Matthew, are you going to invite us in, or are you going to stand there and stare all night?\" Kay Rosenbloom asked, a cautious smile on her face. \n\n\"Mom...\" Matt couldn't figure out what he wanted to say. His brothers, Matthias and Alexander, were already in the house, but he knew that Matthias would be even less thrilled than he was at the moment. \n\n\"Granny, who is that?\" Annabelle asked as she stared up at the man that stood next to her grandmother. \n\n\"This is my husband, Maxamillion, dear. He's your grandfather,\" Kay answered the small girl. \n\nAnnabelle looked thoughtful for a moment. \"I didn't know I had a Grandpa Rosenbloom.\" \n\nMaxamillion Rosenbloom grimaced, as the reality of the situation hit him when she spoke those words. His four-year-old granddaughter had no idea he even existed. He could feel the sting of tears at the corner of his eyes. It was a reminder that he had chosen this path, and he would have to deal with the consequences. He had been a fool, an absolute fool who was hurting himself more than anyone else. \n\nMaxamillion looked at his son, who shared his sandy brown hair, but Max's was quickly growing white at the temples, and where Matthew's eyes fluctuated between blue and grey, Max's own orbs were a hard granite color. He was slim, nowhere near as muscular as his sons, but he was imposing. He was a man that commanded attention whenever he walked into a room and demanded respect from anyone that interacted with him. \n\nMatt looked at his daughter. \"Grandpa hasn't been around much, sweetie. Why don't you go let mommy know that we have an extra guest for dinner so she can set a place for grandpa.\"\n\n\"Okay, Daddy,\" Annabelle stated before turning back to her grandfather. \"My name is Annabelle Marie Rosenbloom. It's a pleasure to meet you.\" \n\nMax looked down at the tiny hand that was thrust in his direction. His granddaughter had manners if nothing else. He extended his own and shook her hand, marveling in how small the hand in his was. \"It's a pleasure to meet you, Annabelle.\"\n\nAnnabelle made sure she gave him her firmest shake before smiling and turning to go do what her father had asked. \n\nMatt stepped back and ushered his parents into the house. He showed them to the closet so they could hang their jackets and stared at his father. It had been years since he had last laid eyes on the man. \n\nThat day he had gone into his father's office knowing full well what the outcome would be. As long as he could remember, his father had coached him in love and relationships and he only had one firm rule. Don't date girls outside of your race. \n\nMatt had disregarded that rule almost immediately and his first girlfriend was a pretty Asian girl named Mary. His father had wholly disapproved, and at 13, he was forced to listen to his father, and he broke up with her. But now, he was a grown man. And Matt was not only dating a girl of another race, he was in love with her and had every intention of marrying her. \n\nMatt had stood firm in his father's office as the man became almost unrecognizable in his reaction to the news that he was planning on marrying his Ana. Maxamillion railed at him and made all sorts of accusations about Ana. It didn't matter that Matt was the one doing the pursuing and that Ana tried to resist him at first, she was a conniving gold-digger in his father's eyes. His father said that Ana had somehow brainwashed him into thinking that she was the one so she could get her hands on his money. No matter what Matt said in Ana's defense, his father was unyielding in his opinion. \n\nBut, when his father started calling her outside of her name, Matt drew the line. There was only so much he was willing to take from his father, and disrespecting Ana in that manner was not on that list. Before he had even thought it through, Matt walked over and slugged his own father across the jaw. Matt watched as his head snapped to the side before he turned and walked out of the office. Each step towards the exit seemed to seal his fate. He walked purposefully, knowing that there was no way that he would ever be welcomed in his parent's home again, that he would be disowned, and that his position in the company was forfeit. But, he accepted it, he knew it would most likely come to that, and he also knew that his Ana was forever. She was the real deal and he wasn't giving up on his happiness, on his future, for anyone. \n\nMatt was brought back to the present by an insistent tugging on his pants. He looked down and saw those bright blue eyes staring back up at him. \"Matthias, how can I help you?\" \n\n\"Up, Dada. Up.\" Matthias lifted his arms and waited while Matt bent down and scooped him up. \n\nMatt smiled at his son. He hugged him close and waited patiently for his parents to finish up. Maxamillion turned and watched as Matt doted on the small boy he held in his arms. \"My grandson, I presume,\" Max spoke, breaking the silence that hung in the hallway. \n\n\"Yeah...\" Matt paused, fighting the anger that was boiling in his veins. It was hard to let go of the anger that he had harbored for so long. The man had basically abandoned him and his family, but now he was here, trying to work his way back in without so much as an apology. Matt wanted to confront the bastard, but the look on his mother's face stopped him short. She had worked so hard for so long to bring his father to this point, Matt figured he owed it to her to try and get through supper without lashing out at him. \n\nAfter a deep calming breath, Matt spoke. \"This is Matthias Alexander Rosenbloom, my son. He takes after his dad in a lot of ways and I am proud to call him mine.\" \n\nMax nodded and looked to his wife, who had come to stand beside him. \"You were right, honey. He does have a lot of the Rosenbloom features.\" \n\nKay smiled serenely at her husband. \"He takes after his father, Annabelle takes after her mother, but they are both beautiful children,\" she replied.\n\nMatt ushered his parents into the living room, where his brother Matthias was perched on the couch, draped across his lover, Vernon, watching his 3-year-old adopted daughter, Tessa, play with her cousin. Alexander was pretending to have tea with Annabelle and Tessa while his wife, Tiffany, sat next to him, smiling as she rubbed her rounded belly and held out her cup to get a refill of the imagined tea. \n\nMatthias straightened up when he saw his father enter the room. He too had been on the receiving end of one of his father's tantrums when he marched into his office and told him he was gay. Max had ranted and raved, and at the end of it all, he ordered Matthias from his sight and refused to speak of him to anyone. Matthias thought it had gone just about as good as it could have. ",
        "Matthias relaxed slightly as he felt the firm pressure of Vernon's hand inside his own. He had a family that loved him and the support of his love, and that was all that mattered. \n\nAlexander froze as his father came in. He was once his father's pride and joy, the one chosen to head the company, but that ended the day he acted on his feelings for his secretary, Tiffany. One look at her soft brown skin and he was smitten. He had wrestled with being the man that his father demanded and being a man with desires. In the end, his desire won out, helped along by Matthias's meddling, and he could not have been any happier. He had married a woman that he could love and devote himself to. \n\nHis father had simply stopped talking to him when he found out about their love affair. Alex found himself demoted from his position and Tiffany was fired in short order. It wasn't enough to keep them apart though. Alex stayed with the company because his mother had asked him to, but he didn't need to work and he made sure that Tiffany was provided for. About a month later, they had moved in together. It had been about three years since Alex had last spoken to his father, but in his estimation, it wasn't a big loss. \n\nMaxamillion regarded his sons, their families, and the stark realization that he had cut himself out of so many lives and so much happiness struck him hard. He cleared his throat as his voice failed him. The voice that had made many a man quiver, reduced them to whimpering broken beings, that voice was absent. He could barely manage the words, but he knew they had to be spoken. \n\n\"I'm sorry for the way I've acted. I have been a monumental fool these past years. I cut you all out of my life and I was miserable. I had no sons; I had no heirs. Your mother made it clear that she was going to support you all no matter what and it really chapped my ass. Pride kept me immobile, but now I come before you as a humble man. Your mother forgave me for my treatment of her and you all over the years and I come to you now to ask the same of you. Please forgive me. I only want to become a part of your lives again.\" \n\nMatthias stared at his father. He gripped Vernon's hand tighter, struggling with what he wanted to say and what he knew his mother would say to him if he did. His eyes darted to his eldest brother. Alex looked like his head was about to explode. Before he could say a word, a clear voice rang out. \n\n\"Forgiveness is not something that the Rosenblooms I know give easily, especially not my husband. They are about as stubborn as ten mules and know how to hold a grudge. Why don't we start with having a civil dinner and go from there?\" Staci said, smiling as her husband drew her close and pressed a kiss to her forehead. \n\nMatt looked around the room at his family. His brothers conferred with their spouses and with a look shared between them, it was decided. \"I think we can manage dinner. Anything after that is not guaranteed...but we'll try,\" Matt stated. \n\nMax nodded, thankful for being allowed to be with his family, if only for one night. \"Thank you.\" \n\nAs his Ana ushered everyone to the table, covered in food that they had ordered, Matt smiled. He could feel a warmth spreading through his body and with it his smile widened. His family was whole again, at least for the moment, and the future was definitely looking up."
    ],
    "authorname": "angelicsounds",
    "tags": [],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/mr-right-ch-11"
}