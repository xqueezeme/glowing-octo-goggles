{
    "title": "Myka's Tail Ch. 03",
    "pages": [
        "Author's Note: First and foremost, I want to give a big THANK YOU to Tccrusher who took time out of his busy schedule to edit my story. His help and effort has made this chapter much more polished, and has made the story sing. I am very, very grateful to him and the volunteer editor program here on Literotica. Second, this chapter is big. Almost double the size of the previous two, at 58k words and 16 Lit pages. I really couldn't find a place to logically (to my mind) break it in half, so I give it to you complete. As always, thanks for reading, be sure to vote and/or comment, and most of all enjoy.\n\n***********\n\nIt was the middle of the night, and the only light in our room came from the soft glow of the night-light that Kelli had picked up a few days ago. As stupid as it sounds, and as embarrassing as it was for me to admit, in the span of just over two weeks I had become afraid of the dark, just like a little kid. Two and a half weeks. That's how long it had been since Kelli and I had our Valentine's weekend getaway, and in that time I had started having my nightmare every three to four days. I was drinking my tea just like Millicent asked me to do, and I was trying to pay attention for clues and hints while in the dream world, but the terror I was feeling every time sleep claimed me was getting worse.\n\nSometimes I would face off against the two Neko in the clearing, and other times I would be blindsided by one while fighting the other. In every one of the dreams, however, my anger at my situation worsened, to the point that I could feel my personality slipping away a tiny piece at a time. The terror I felt coming from Kelli also intensified with every iteration of this nightmare, and the dream only ended in one of two ways. Either I was enslaved as I felt Kelli's life force fade away, or I fought so much that I was only stopped when the Neko or the woman in the green cloak were forced to kill me before I could be collared.\n\nNo matter which scenario occurred, I always woke up in a cold sweat, screaming more often than not. After waking up this way for so long, even the thought of closing my eyes made me shudder. The one recurring detail that I was picking out of these times, was that it was rare for me to interact with the woman in green. She would assist if I fought too well, and sometimes she placed the collar around my neck if I was holding off the Neko. Yet even with this limited interaction, I made a supreme effort to remember every detail about her that I could.\n\nWhoever she was, she was a mediocre fighter at best and had only slightly better than human abilities. I had noticed it before, and I could tell that she wore no clothing under the green cloak for some reason. Her actions in the dream suggested to me that she was more comfortable in the background directing the details of my nightmare than in actually participating. I was starting to think that maybe she might be the Puppet Master that Millicent warned me of, but that didn't feel right. She was angry, and I felt that the grudge she carried like a personal cross was directed solely at me. Why this person should have such a burning hatred of me, I had no clue, but I learned that she hated me for sure when she finally spoke to me in the dream.\n\nIt happened during one of the few times in my dream that my anger became so intense that I completely lost control of myself. I remembered rising from the ground after nearly breaking the two Neko I had been fighting in half, and leaving their bloodied bodies behind me as I stalked forward to do the same to the woman in green. I leaped and started to punch, kick and grapple with her, letting my frenzy force her back time and again, always keeping the upper hand. It did not take long before it was clear she was fighting a losing battle, so she spoke a strange sounding command and black chains shot out of nowhere and latched onto my arms and legs. I was instantly immobilized and lifted off the ground high enough that the only thing I could do was stare with fury into her cold, angry eyes, which were barely visible beneath her hood.\n\n\"You just don't get it do you,\" she spat after using some unknown power to manipulate the dream we were in. \"I am in control here, not you!\"\n\nWhatever power she had over me prevented me from speaking, but the anger I was feeling still threatened to tear me apart. Suddenly, a cold dark terror bubbled up in the back of my throat as she pulled out a curved silver knife. In an instant she began to slash and stab my helpless body and I could do nothing but hang there and scream silently in pain.\n\n\"You deserve every last minute of this you whore,\" she seethed, venting her own angry hatred with each cut and stab. Finally, she buried the blade in my heart and I felt my life begin to slip away. \"Next time just accept your enslavement like the little slut that you are!\"\n\nShe spat in my face as she wrenched the silver knife from my chest and walked off into the woods, leaving me behind to sink into the oblivion of death. I awoke in the moment that I felt my soul being pulled from my body, and my screaming was so bad that our neighbor called the police. It took nearly three days before sheer exhaustion dragged me down into sleep, and back into my nightmare. For some unknown reason, my life was going completely to shit, and it was getting there fast.\n\nIt had been just over a week after Valentine's when the woman in green spoke to me in my nightmare, and I had lost the will to even struggle in the dream. The silver lining was that the nightmare returned to its original intensity, but I was drained emotionally and physically. I was having difficulties in class again, I was barely eating, and I could only sleep after days of staying awake forced my body into unconsciousness.\n\nKelli did not know how to help, and was becoming ever more concerned as the effect of the recurrent nightmare became worse. She was spending hours going over Ali's magic book, along with several others, and I could see the toll the neglect on her classes was taking on her. So there we were, three weeks after Valentine's, my terror preventing me from sleeping, and Kelli with her arms around me in a desperate attempt to comfort me at three in the morning.\n\nThere was a knock on our door, and I gave Kelli a confused look as she got out of bed and put on her blue satin robe to go and answer it. Who the hell would be coming by at three in the damn morning? It had at least piqued my curiosity, though, so I got up and pulled on a short half robe that barely covered my ass, but had a nice slit for my tail, and walked out to see who was here.\n\n\"Hey Kelli, how are things going,\" Ali greeted my girlfriend as she walked in the door, followed by two other women.\n\n\"All in all, really damn shitty if you must know,\" Kelli replied, the frustration in her voice as sharp as her wit. \"It's only been getting worse, and the fucking tea isn't working.\"\n\nI sat in one of the corner chairs in our living room and took a good long look at the other women who had arrived while Kelli and Ali were talking. Both had medium length sandy blond hair, and average looks, nothing that would immediately set them apart from a crowd. They appeared to be in their early thirties, and with the distinct similarity in their features I thought that they were probably sisters. My sense of their strong love bond seemed to confirm my speculation. They were dressed quite plainly in jeans and non-descript blouses, and you almost wouldn't notice them if they passed you on the street. What did make them stand out, however, was that both sets of their eyes were milky white with blindness. It was a surprise to be sure, yet even blind they did not seem to be having any trouble getting around without help.\n\nThey were both moving around the living room, gesturing and talking quietly to each other about energies, points of entry, and auras. Every now and again they would stop somewhere and one of them would put a hand on the wall, floor, or a window which was followed by a slight muttering in some strange language I did not understand. And while they were arguing about the mystical properties of our apartment, Kelli and Ali were at our table arguing about something else.\n\n\"I know they're hard to come by and even harder to create, Ali, but a warding focus may be the only solution right now,\" Kelli whispered with barely contained ferocity, not realizing I could hear every word she spoke. \"You don't know how bad this has become. Myka can't even eat and sleep anymore, and don't even get me started on what happened a few days ago! I thought I'd lost her!\"\n\nGod, I was an emotional wreck, and life sucked more than you could possibly know at that moment, but the pure love I felt pulsing through my bond with Kelli, and her almost rabid concern for my wellbeing, reminded me why I loved her. I knew that with her help we would somehow make it through this. I went over to her at that point, and I collapsed into her lap while I leaned into her chest and cried. I just cried. I let my myriad fears and anxieties flow out through my tears and Kelli held me to her breast, tighter than a magnet holds iron. She was my rock and the only place I felt safe.\n\n\"Listen Kelli,\" Ali said in a soothing voice. \"We won't have the ability to raise enough power, even with the entire Circle, to craft a warding focus before the full moon next week. We just don't have the strength.\"\n\n\"Then what are we going to do,\" Kelli snapped back.\n\nSighing a little in frustration Ali answered, \"Mary and Gina there,\" she said indicating the two women who were still wandering our living room, \"are the best ward crafters in the circle. From what you have described, this woman in Myka's dream seems to have only a small amount of skill, and limited control. In fact, with a few weeks of training, Myka could probably force this woman out of her head on her own, but she would still be there until Myka has developed sufficient mental control.\"\n\n\"So Mary and Gina will craft a basic warding,\" Kelli asked. \"How long will that last?\"\n\n\"I can't be exact, but they are really good. I'd say two weeks, maybe three. And in that time I will help Myka practice some basic mental techniques for protection so she can defend herself. I know how important this is. To both of you.\"\n\nI let go of Kelli at that point and grabbed Ali in a fierce hug and whispered, \"Thank you. Thank you so much, for anything you can do.\"\n\nI felt new bonds forming in that moment, between Kelli, me, and Ali. The bonds weren't like the romantic love Kelli and I shared, but were young bonds of friendship and sisterhood. I opened up the feel of these new bonds to both Ali and Kelli, so that they could feel the depth of my gratitude. I knew the moment that realization came to them because both of their eyes widened, and we ended up in a very tight three way hug. Feelings of resolve, and the desire to do anything that could be done to help were almost overpowering. I could also feel much of the fear that had settled in my soul over the last several days give way to an overabundance of friendship.\n\n\"Ok girls,\" Ali said as she turned to the two blind witches. \"What do you think? Can we do this here?\"\n\nOne of the women turned and leveled an almost contemptuous gaze at her before answering Ali's question, \"Yes. I believe that we can channel sufficient energy here to craft a suitable ward, but it is a near thing.\"\n\nThe other then turned and spoke, \"Yes, a near thing. Definitely. It would help if we were allowed to move some of the furniture around in the room so that the geometry is better, and we will need a large clear space in the middle, yes.\"\n\nMy curiosity got the better of me and I turned to Ali and asked, \"Which one is Mary and which is Gina?\"\n\n\"The younger one is Gina,\" Ali responded, and then laughed when I gave her a very dirty look because there was no way to tell which was older just by looking at them.\n\n\"You're kind of a shit,\" I huffed, and Ali continued to giggle at my expense so I took things into my own hands. \"Hey Gina?\"\n\nOne of the two turned to me and cocked her head to the side and then answered, \"Yes. Do you need something Miss Myka?\"\n\nAli laughed even louder at this before responding, \"I don't think she does Gina. She was just trying to tell you two apart, and I was ribbing her.\"\n\nGina gave an indifferent shrug and went back to her work as I playfully smacked Ali in retaliation, but I was glad to know who was who and I was grateful for the feelings of warmth and concern that I felt in the room. Everyone but me began moving things around the room at Mary's direction, clearing space and shifting our furniture to optimize the all-important geometry that apparently they alone could perceive, and I moved to one of our bar stools to watch the ladies at work. It took perhaps ten minutes to get everything arranged to Mary's satisfaction and after that was finished both Mary and Gina began to inscribe a strange arcane circle on the floor with some kind of chalk.\n\nThey were very painstaking about the process and were adding what appeared to be writings, probably runes or some other arcane symbols, and lines that connected certain points of the circle with the symbols within. It was rather fascinating to watch, and it was another thing to occupy my mind which kept my thoughts from my nightmares. I looked over at Kelli and noticed, however, that with the addition of each line and each symbol, she was beginning to frown more and more until she finally started muttering under her breath.\n\n\"What's the matter babe,\" I asked as I walked over and put my arm around her waist, wondering why she had such a concerned look on her face.\n\n\"The circle, it's wrong,\" Kelli replied, and the two blind witches looked up from their work.\n\n\"I can assure you Miss Kelli that the circle we are drawing is impeccable,\" Mary replied, her voice betraying a hint of irritation.\n\n\"Sorry,\" Kelli argued, conviction filling her voice. \"This circle will work, but it is the weakest construct possible to support the type of ward you are crafting.\" \n\nTo say that everyone in the room was stunned to hear this come out of Kelli's mouth was the understatement of the year. Ali stepped in at that point as both Gina and Mary stood, anger and irritation flashing in their sightless eyes, preparing to defend their methods and their skill. Ali looked at the circle and then at Kelli, her face creased in thought, as she gave a subtle gesture to calm the other witches down.\n\n\"What do you mean that this is the weakest form for this ward,\" she asked Kelli intently. \"I have personally seen them craft hundreds of wards like this and, I can assure you this is quite possibly their best work.\"\n\n\"I'm not saying its bad work,\" Kelli countered. \"It just needs... I mean, if it's structured differently, the power that could be drawn from the available aetheric energies to empower the construct would be orders of magnitude greater than this one. The best way to describe the improved ward in non-magical terms would be the difference between simple home computer network security versus the type of multi-layer security that governments use.\"\n\nThe dumbfounded look on the three witch's faces was priceless and Kelli seemed to shrink into herself from the scrutiny, clearly embarrassed.\n\n\"First, how do you even know about the theory of crafting high level spells like this when you have no access to magic,\" Ali asked in amazement. \"And how do you even recognize what is being drawn into the circle on the floor enough to see energy channeling points, among other things, as clearly you think you can?\"\n\nKelli sheepishly walked over to the dining table and picked up the copied version of Ali's grimoire that she had. It was already dog eared and worn from many readings, and she raised it up for the witches to see.\n\n\"I've read through this about eight times now, plus I'm somewhat adept at finding real information over the web and in some out of the way book shops. Magic is not as hidden and secret as you would think, if you know where to look. After all of that research I started to notice some things. Magic, and the crafting of spells, is kind of like applying mathematical constructs to basic concepts in physics. At least that's how I it seems.\"\n\nI nodded in agreement with Kelli and then said, \"Yeah, Kelli is really good at math and seeing how problems and equations interact, and the next steps needed to apply different solutions. She completed her fourth semester calculus final in about twenty minutes, and had to redo a random test in the professor's office to prove she didn't cheat. She's scary good.\"\n\n\"So you are intuitively seeing what this circle does, like it's a math equation,\" Ali asked, and Kelli gave a shrug.\n\n\"Yeah. I don't know why but...\" and Kelli held up Ali's book. \"This reads and feels just like advanced mathematics to me. Granted, this is really just theoretical knowledge, but changing the equation will open up a vastly better solution in this case. At least I think so.\"\n\n\"Ok, we're going to pause for a little bit so you can show us what you see,\" Ali said, and indicated that Kelli should let Mary and Gina know what to do.\n\nKelli got a look of intense concentration on her face, a look I know well, and started to page through her copy of the magic text. Finding what she wanted, Kelli started giving her instructions.\n\n\"Ok, we need three concentric circles, not just one big one, though what you've already drawn can be the outer most level in this case. Draw the others such that the runes will just fit between them.\"\n\nMary and Gina shook their heads in obvious annoyance, but Ali gave them a withering look and they both sighed and got to work changing the warding circle to Kelli's specifications. Once they had the circles drawn, Kelli directed them to the new locations for each rune, and where the lines and points of the inscribed pentagram needed to be. As the new design started to take shape both witches could see what was coming together, which sparked an almost childlike curiosity rather than irritation. They almost seemed eager for the next instruction.\n\n\"Ok, I need four smaller circles at the cardinal points,\" Kelli directed, and both Mary and Gina jumped to comply. \"Place these four runes in this order, each one in the center of the small circles, starting here, and ending here.\"\n\nMary and Gina were now whispering excitedly to each other as they continued the modifications that Kelli requested, while Ali and I watched, baffled as to what would happen next. Kelli was concentrating on the new design that had taken shape on the floor, as the two witches finished what had been asked of them and then turned to her in expectation.\n\n\"Is there anything else you see is needed,\" Mary asked.\n\n\"Ok, you have some herbs and other items that boost your magic channeling, right,\" Kelli asked and got two nods in return. \"Place those where you will need them, as I am not sure where they fit in. I can see the pattern in the design, but some parts of the magic I just don't have the sense yet as to where they fit.\"\n\nMary then began placing several objects around the room, which Ali told me were talismans that helped them guide their magic into the spell that was created, and Gina lit a pair of small brass braziers and began burning some sort of incense. Soon the room was filled with a bitter, spicy scent, and the two witches indicated that it was time to begin. Kelli, however still looked concerned about something.\n\n\"Can this type of magic use blood to enhance it, ward magic I mean,\" Kelli asked of the two.\n\n\"Well, yes. In many cases some blood from the person being protected can increase the binding of the protection provided from the ward, but the increase in power is so small that it's almost never used,\" Gina replied.\n\n\"This needs blood though,\" and Kelli was adamant about the point. \"Myka, you need to get undressed and lay in the circle with your wrists in these two smaller circles and your feet in these two.\"",
        "Kelli had indicated where I needed to be, and I trusted her with my life so I let the half robe I was wearing fall off of my shoulders and pool at my feet, then entered the circle, laying down on the floor in the middle of the entire design. I placed my hands and feet where she asked, and then Kelli turned to Ali and motioned her over.\n\n\"You have a silver knife, right,\" Kelli asked, and Ali nodded that she did. \"Ok, use it in the center of both wrists and on the inside ankles to draw enough blood to drip down into the construct.\"\n\n\"It's funny that you are calling it a construct,\" Ali chuckled and did as she was asked, giving me four small cuts, and I gritted my teeth at the sting as four small trickles of my blood began to slowly drip into the smaller circles.\n\n\"Ok. That is the design that makes the most sense,\" Kelli stated and took a deep breath. \"Hey Ali, you know the chant that goes along with this, don't you?\"\n\n\"Yes, but why?\"\n\n\"Well, don't most spells have their power increased when witches cast in unison? I don't understand a lot of the theory that I read yet, but I do know that multiples of three witches casting at once can make magic damned powerful. In fact, if what I do understand is correct, activating this construct with 12 witches casting simultaneously, you could drop the equivalent of a mental magical nuke on someone protected by it and they might feel a slight headache for a few minutes. At least I think that's what would happen. It's what makes sense.\"\n\nAli shook her head incredulously but said, \"You and I are going to have a long chat soon. Ok. Mary, Gina, let's get started with the casting.\"\n\nThe three witches knelt outside of the circle, equidistant from each other and then they began to speak in a slow, rolling chant that resonated in my head like the deep bass pipes of a church organ. I could not understand the language they were using, but it had an almost musical quality to it as the deeply powerful words continued to flow from their lips. Immediately I began to feel a power building in their words and in their voices. They were barely speaking above a whisper but it was almost as if they were shouting. Then I felt tingles and rushes of electric sparks shoot through my body, originating from the cuts that Ali had made moments ago, and as the chanting increased in intensity so too did the rush of power I could feel flowing through my body.\n\nThe circle, and the runes inscribed in it, began to glow a bright yellow orange, lighting up the room and casting odd looking shadows against the walls, and still the chant pulsed with power, on and on. Seconds became minutes, became hours, became lifetimes. The witch's chanting reached a crescendo with a final burst of power so strong that it caused my body to spasm and arc up above the floor. My hands and feet, however, remained rooted to the circles that contained them by some unseen hand, and even with my increased strength I could not break free. And then, just as it started, the power receded until I was left on the floor with three panting witches around me and no sign that there had ever been anything drawn on the ground. It was done.\n\n\"Did it work,\" I gasped, as I sat up slowly and practically had to crawl over to my robe to dress. I felt as drained as if I had run back to back marathon races.\n\n\"Give us a minute to catch our breath,\" Mary answered, and I noticed that she looked almost as exhausted as I felt.\n\n\"By the goddess, I have never felt that much power go into a ward without a ley line or a convergence,\" Ali moaned. \"We really need to talk about this Kelli, because you should not have been able to design a crafted structure that powerful.\"\n\n\"Whether she should be capable or not isn't the point. That it worked is,\" Gina remarked as she was finally able to get to her feet. \"Goddess, I don't even remember the pattern for that design. Do you think you could recreate it for us Kelli?\"\n\nKelli came out of the kitchen carrying a tray with cheese and crackers, and a couple of pitchers of water and juice, which she set on the table and motioned the witches over to eat.\n\n\"My guess is that you all could use a quick snack, and something to drink. And yes, I already copied down the design for you while you were chanting,\" and she passed over a sheet of notebook paper to Gina.\n\n\"Thanks a lot, for this and the food,\" Gina said, indicating the paper before she grabbed something to eat and a large glass of juice.\n\nWe all sat around the table and talked, the witches devouring the snacks that Kelli had provided along with the juice and water. I had gone to the refrigerator and grabbed myself a bottle of green tea, which was one of my current habits along with pots of coffee, hoping the caffeine would help keep me awake. I had become less than fond of sleeping, and I had been resorting to more and more desperate measures to stay awake. After a few minutes, though, Ali and her companions stated that it was time to go, as they all had other commitments that morning.\n\n\"Hold still and relax. I'm going to check to see that the ward is in place,\" Mary told me as she got up from the table and placed her palm on my forehead.\n\nShe closed her eyes and started muttering under her breath, and I was wondering what she was trying to do, but the result was clear. A few seconds after she had begun her test of the ward, she was thrown back away from me forcefully and landed on the floor about five feet away.\n\n\"I'd say the ward is set and is functioning,\" Gina laughed, and even Ali thought that was amusing.\n\n\"Damn that is strong,\" Mary replied with a feral grin. \"I would guess that this ward will remain in place for some time. Perhaps even as long as six or seven weeks, and when your intruder tries to touch your mind again they are in for a very nasty shock.\" \n\n\"That should be enough time to get some answers,\" Ali commented. \"And hopefully have you two bonded as well. That may also provide some protection, but I just don't know for sure. Anyway, we have to go but we will be in touch.\"\n\nGina then turned to me and said, \"I nearly forgot. Can I take a small sample of hair to make a charm that will allow Millicent to bypass the ward and contact you in your dream? She was very insistent that no matter what we did to protect you that she wanted to talk to you soon.\"\n\nMy eyes betrayed my fear, knowing that if I did this it might open another path for my green cloaked enemy to invade my mind again. I really did want to talk to Millicent if I could, though. Just the thought of her warm smile and the bright twinkle in her sharp eyes caused the bond I shared with her to pulse with a burst of love.\n\n\"Can you promise me that Millicent will be the only one able to contact me this way,\" I asked, fear still tainting my voice.\n\nGina stood up straight then, and made a couple of slight hand gestures as she said, \"I give you my oath, as a Sister bound to the Circle, and as a servant of the great goddess, that any charm I create with your essence will be usable only by Millicent, and only in friendship. This I swear by my blood.\"\n\nA small burst of power pulsed between us, and my eyes widened in surprise. I knew without a doubt that in that moment, Gina had been entirely truthful with me and that whatever powers she had called on to make her oath would not let her break it. I nodded my head to her, and she reached forward and pulled a few hairs from my head and placed them in a small wax paper packet she had.\n\nGina took my shoulders and kissed my cheek and whispered to me as I blushed in embarrassment, \"Thank you for allowing us to aid in your protection Miss Myka. It was a great honor.\"\n\nKelli took charge then, and showed everyone out the door, while I had gone back to the couch and curled up against one arm, staring into space and wondering when I would get so tired that I would be forced into unconsciousness, fully expecting to go through the dream again. Even after having seen the magic work when Ali and the others had cast the ward, I was still too terrified to allow myself to sleep.\n\n\"Hey sweetie,\" Kelli whispered, as she sat down next to me and pulled me into another hug which immediately made me start to cry. \"Shh, shh. You're going to be ok, I promise. I may not be able to cast magic, but somehow I know exactly what they did here tonight. Weird, I know, but you are protected.\"\n\nI nodded to her, my face still buried in her chest, the tears still flowing like summer rain. I just didn't want to let go right then. So, like a few times before the dreams started, and who knows how many times after, Kelli just held me. She stroked my hair and ran her hands over my back, and waited for me to calm down, no matter how long she was needed for. It took a while, and neither of us were going to be in class today, which had happened a lot in the last two weeks. Finally I pulled back from her embrace and gave a stutter filled thank you, and wiped my eyes for the tenth time that night.\n\n\"Oh sweetie, you don't have to thank me for things like this. I love you, so much so that you are almost literally the air I breathe. I was desperately worried which was why I called Ali and demanded some sort of protection.\"\n\n\"How did you know I needed protection?\"\n\n\"The really bad dream, the one that has robbed you of your ability to sleep and has made you so fearful, was a sent dream, not a premonition of the future. In fact, I think all of your dreams about this future occurrence have been sent dreams. I recognized the signs from Ali's grimoire, a little from the reading Cassandra gave us, and I actually found some hints online, on what I think is an actual witch's chat forum.\"\n\n\"What do you mean by sent dream,\" I asked, and yawned deeply as days of fatigue were rapidly catching up to me.\n\n\"It means that someone, probably the woman in green that you described, found, or was given, a way to invade your dreams and force you to see what she wanted. That's why Ali mentioned that you, and really we, need to have some mental training to block those kinds of intrusions.\"\n\n\"But what you guys did tonight will keep whoever it was out for right now, yeah?\"\n\n\"Yeah,\" and Kelli nodded with a serious look on her face. \"Mary said that when she tested it that it was, by far, the most powerful ward she has ever encountered. She also said that it would take two or three circles of twelve witches working in concert to even dent its protection, and Gina promised that only Millicent would be able to contact you in your dream.\"\n\nI sighed with barely felt relief at that point, glad that for the near future I probably would not suffer the nightmare again. My fear, however, that somehow it would still happen, that tonight's magic would not be enough to protect me, still remained. Kelli seemed to sense the thoughts going through my head and she pulled me into another hug and rubbed my back with both hands, which did a lot to calm to my troubled heart and mind.\n\n\"Ok, I know you are probably still so afraid that you don't want to go to sleep,\" and I confirmed Kelli's statement with a fervent nod, but another yawn betrayed my overriding fatigue. \"Ali left a powder here that I am going to mix with some juice. She told me that Millicent made it and that it will help you sleep, and causes a slumber deep enough that it will be difficult for you to dream, or be forced to dream. With this stuff, Ali said even Millicent could not get through to you for a while. You need some sleep sweetie. Will you let me give it to you?\"\n\nI really did not want to take the powder that Kelli was offering, even if it had come from Millicent. I was still scared, and desperately so, but the pain I saw in Kelli's eyes because of my suffering was too much for even my fear to overcome. I agreed to take the mixture for her. Kelli nodded, got up from the couch and poured a small glass of juice for me and mixed in the contents of an odd looking packet. The juice instantly took on a bright verdant hue and started to fizz, and Kelli passed over the glass which I downed in one long gulp.\n\nIt didn't taste horrible, just a little odd, and it left a tingly numbing sensation on my tongue and throat. I opened my mouth to ask Kelli if she knew how long it would take to work, and I could not get any words out. As I tried to stand, I nearly fell over due to a warm and comfortable lethargy that had come over my muscles and I stumbled into Kelli's waiting arms. I remembered her helping me to our bed, taking off my robe, and then laying me down on our mattress which was suddenly the most comfortable thing in the whole world. I couldn't keep my eyes open, and the last I remembered of that night was Kelli talking softly to me as she lay next to me in bed, and her singing me to sleep as I fell away into the blank nothingness of sweet oblivion.\n\nThe next moment I was aware of I was back in the dream world, and I was pissed. Everyone was sure that I wouldn't get pulled into this again, and yet here I was. I could feel my fear and anger swell like an overinflated balloon, except things were different. I was back in our clearing, at our cabin, where Kelli and I had fun growing up, and where we had spent Valentine's a couple of weeks ago. And in front of our little space crackled a merry fire. Millicent, my surrogate Nana, sat tending the flames and something that she was cooking, and the anger and fear that had been threatening to overtake my mind moments ago vanished like water on a hot summer sidewalk. I blushed as I remembered that Millicent was going to have a way to contact me here. \n\nI was slightly surprised that I was again naked here, but that thought still did not bother me at all in this place. The bond between Millicent and I pulsed with warmth and love, and my heart was almost literally singing as I walked to her fire with a bounce in my step that I had not felt the past few days. My curiosity also had me wondering what Millicent had to say that required her to visit me so soon. I walked up and took a seat at the fire with her, the smell of sausage and warm bread filling my nose, and leaned into her gentle embrace as she hugged me like one of her own grandchildren.\n\n\"Hello Nana,\" I greeted her, nearly drooling at the smells of what she was cooking, even if it was dream food. \"I can't tell you how good it is to see you here. I thought that it was going to be a while before the mixture you gave me wore off enough for you to bring me here.\"\n\n\"It is wonderful to see you too little one,\" she answered, and rubbed my head like any other nana would do for their grandchild. \"You should know that it has been two days since you drank the sleeping powder that I mixed, and you will most likely be waking soon.\"\n\n\"Two days,\" I exclaimed. \"Was I supposed to sleep so long?\"\n\n\"I mixed the powder to have some extra potency. Your mind and body needed the sleep and your heart the time to mend. I was able to give you that.\"\n\nI leaned into her once more and thanked her for her help, and I realized that here in this dream with her I no longer felt the crippling fear or anger from the other dreams. I felt stable once more, which I had not felt for a while.\n\n\"There is no need to thank me child,\" Millicent chuckled, and turned the sausages in her cooking pan so they would not burn. \"I am as concerned for your welfare as I am with the other sisters in the Circle. Perhaps a touch more with you, because I do so like it when you call me Nana.\"\n\nWe both grinned at that and shared another warm embrace while sitting there together, and the bond I had with Millicent pulsed again with her love for me.\n\n\"Now, others have told me what you described to them about your dream, especially the bad one, but I would like to hear it from you, if you feel you can talk about it,\" and she motioned to me, indicating that I could begin when I felt ready.\n\nIt was hard, but I opened up my heart to Nana Millicent. I let out all of the anger, frustration, and especially fear that I had been experiencing in my dreams since the last time we spoke. I cried, and vented about unfairness, and how it was not right that someone who hated me so completely had that much power over me. Millicent was exactly like a loving grandmother, and she listened to all of my travails without any judgment or criticism.\n\nShe had many questions about the woman in the green cloak, and her apparent animosity towards me, and she agreed with my assessment that this unknown woman didn't have much actual skill. Most likely she had secured the aid of a third party who provided the ability to control the dream world that she seemed capable of pulling me into. Even though the last couple of weeks had been difficult to talk about, as I shared the burden with Millicent I could feel a crushing weight lift from my shoulders.\n\n\"And that's pretty much it,\" I said as I finished recounting the events that had led up to our meeting. \"By the way, do you have any idea about how Kelli knew what she did about magic? She kind of surprised us all.\"\n\n\"Oh, that,\" Millicent said, and the look of concern in her eyes betrayed the light tone that was in her voice. \"The sisters showed me the ward they had planned to craft before they left to aid you, and then showed me what was actually crafted, apparently with the help of Kelli's spur of the moment instructions.\"\n\nShe sighed, and a pensive look settled on her face, which had me concerned that we had done something wrong. The intervening silence was making my tail twitch in nervous agitation, and my ears laid flat against my head as she looked at me with eyes so haunted I almost thought she expected one of us to drop dead right at that moment. But, Millicent being who she was, sensed my turmoil almost immediately and she put on a warm smile that was a stark contrast from the mask of dread it had worn seconds ago.\n\n\"Here child, have something to eat,\" she said, and passed over some of the sausages and bread that had been cooking over her fire. I couldn't help but eat like I had been starving for weeks. \"I must say that Kelli is an intriguing young woman, and I sincerely look forward to meeting you both in the flesh. The ward that she aided in crafting was a work of art, the kind no one has seen for a long, long time.\"\n\n\"How was she able to do that,\" I asked, with juices from the sausages running down my chin. Dear god Millicent was a great cook.\n\n\"That I cannot tell you child, but suffice it to say that this is the first time that I have felt true surprise in a very long time,\" she said, and the tone of worry in her voice caused a sour taste to rise up in the back of my throat. Suddenly I was not so hungry anymore.\n\n\"You shouldn't allow yourself to worry over such things, little one,\" Millicent admonished me, as she pulled me into another comforting embrace. \"My concerns are my burden to carry, and I would not trouble your soul with knowledge that would do you absolutely no good. The signs I see concern my fate, and my fate alone, and all must partake of the bitter so that we can appreciate the sweet. Now, sit with me a while longer child tell me about Kelli and why you love her so much.\"\n\nI crawled up into Millicent's lap and laid my head on her chest so that I could hear her heartbeat and smell the warm mustiness that was her ever comforting scent, and then I told her about Kelli. She listened with rapt attention as I described our families' first meeting; how Kelli and I bonded, almost like sisters, from the instant that we laid eyes on each other. She laughed as I regaled her with stories of the mischief we got into growing up, and told me that we should have known better after I described some of our early bumbling attempts with boys.\n\nI wasn't sure what it was, and it may have been a combination of the dream world and Millicent's comforting presence, but before I knew what was happening I had launched into full and very detailed description of what happened on New Year's Eve. I felt so warm and safe in her arms, while she gently stroked my hair as she listened to my ramblings, and I don't think I could have held back a single detail if someone would have paid me a million dollars to do so. The love, the hurt, the sex, the discovery, and the shock of my transformation flowed out of my mouth like a rushing river. It was cathartic, and at the end of the story, I laid there in Millicent's gentle arms and let her rock me back and forth like a little child.",
        "\"Oh my little one, treasure these moments,\" she counseled me with her warm and gentle voice. \"They will be the light that will buoy you up during hard times, and will remind you of what is of most worth in this world.\"\n\nAnd with that Millicent pushed me up from her lap and turned me around to face her so that she could grasp my head in her wrinkled hands as she pulled me down to plant a kiss on my forehead.\n\n\"It is time for you to go child,\" she said as she released me so that she could go back to tending her fire. \"But before you do I will impart to you a small wisdom. You will have opportunity to make a journey very soon, and it is important that you do so. Answers will come there and you will have a choice to make. Go in peace now and do not forget to bring your totems when you travel.\"\n\nI tried to ask for more detail because I was now terribly confused, but before I could utter a sound a rushing motion overtook my body as I fell through the ground into a deep blackness. The feeling lasted only moments, and when I opened my eyes to see where I had been taken I was back in my bed with daylight streaming through my window. I was awake, I had not been plagued by my nightmare, and all seemed right with the world again.\n\n\"Well, well. Good morning to you, or good afternoon rather,\" said a soft yet confident voice, and I turned to see Cassandra sitting primly in a chair by our bed looking up at me from the book she had been reading. \"I am glad to see you back among the living dear Myka, and I am sorry that recent days have been so much trouble for you.\"\n\nMy body felt stiff and sluggish, which was understandable if I had been asleep for two days. I sat up and stretched my aching muscles without thinking, but the relief I felt as blood flow and movement revitalized my still slumbering body was cut short with embarrassment as full realization of my nudity hit me. I was sitting in my bed with my arms stretched above me as far as they could go, which had the effect of thrusting my very pert and firm breasts practically in Cassandra's face. The cool air in the room had caused my pink nipples to stiffen and poke out like erasers, and I belatedly dropped my arms so that I could grab my sheet to cover myself while trying to control the furious blush of magenta that had risen in my cheeks.\n\n\"Oh you silly girl,\" she said to me with an impish smile, causing the heat of my humiliation to deepen. \"You know I do so enjoy looking at your most feminine charms, but a lady should always keep her most treasured assets hidden until the last possible moment. It makes all sorts of things much better for everyone involved.\"\n\nHer comment made me giggle as I replied, \"Well, apparently it's been two days or more and I think my little milk maids wanted to get some sun of their own.\"\n\nWe both laughed at my cheekiness and Cassandra stood and gave me a gentle kiss on the top of my head.\n\n\"I will go and let the others know that you are up,\" Cassandra said to me as she turned to leave the room.\n\n\"Others,\" I asked, with a hint of confusion in my voice. \"Who else is here, besides Kelli, I mean?\"\n\n\"Not to worry dear Myka. It is just Kelli and Ali in the living room. They have been arguing about various magical constructs for the last several hours. I moved in here with you, as they were causing me great consternation with their bickering, as good natured as it is.\"\n\n\"Yeah, that sounds like Kelli,\" I replied with and instant smile of understanding. \"Once she gets an idea in her head it must be right. Fortunately for her it almost always is. Would you let them know I will be right out after I wash my face, please?\"\n\n\"I will do so dear Myka, and take all the time you need,\" she replied as she left the bedroom, always the epitome of poise and grace.\n\nI could tell by the sour taste in my mouth that I probably had morning breath straight from hell, and I was also dying for a shower. I pulled on my little silk half robe and made my way to the bathroom. With a monumental effort I forced myself to be content to just wash my face some, and to brush my teeth. A shower would be wonderful, but I really wanted to see Kelli right now and really thank her for all that she had done for me over the last several days.\n\nAli and Cassandra would need to leave for that to happen, though, in order to avoid loads of embarrassment. I also got a good look at myself as I was freshening up, and the dark circles and tightness around my eyes that had been prominent for some time, were all but gone. Millicent had been right, in that once I was protected from the woman in green and could sleep, both my mind and heart had begun healing.\n\nI left the bathroom and headed towards the front of our place, and I could make out Kelli and Ali's voices as they continued to have what sounded like a very heated discussion. I silently padded my way down the hall and leaned against the corner of the wall where I could just see into our living room and I had to suppress a slight gasp. Kelli was sitting on the edge of the couch with her long red locks pulled up into a messy up-do, and I could feel myself start to get wet at the sight of her in a pair of cut-off shorts with a cropped tank top that left her delicious looking belly bare to the world, and a pair of reading glasses pushed up on her forehead. Dear god my girlfriend was absolutely the sexiest person in the world, hands down.\n\n\"I'm telling you Ali that if you practice using your transport spell, using this configuration of circles and runes, there is not any place on this planet you could not go in one step.\"\n\n\"And I keep trying to explain to you Kelli, that it just isn't possible to draw enough power to make that kind of leap all at once,\" Ali responded with the utmost frustration in her voice.\n\nCassandra slid up beside me and whispered, \"Those two are going to be the best of friends, if they don't end up killing each other first,\" and I couldn't help but giggle silently at her remark.\n\n\"Ali, it's just like the ward that we crafted the other night,\" Kelli argued, and I could hear that she was now using her patient yet stubborn as a mule voice. Ali didn't stand a chance.\n\n\"You tell me that you draw on your innate power to move yourself from one location to another that you have already been to, correct,\" and Ali nodded in affirmative to the question. \"And from what you have told me, the limit on distance is decided by the amount of power a witch can summon at the moment she wishes to travel, which limits the distance you can step to somewhere between a hundred to a hundred fifty miles or so.\"\n\n\"That's exactly what I am trying to get across to you,\" she replied, exasperation still lacing her words. \"The power to transport comes directly from the witch who wishes to travel and that limits the distance. No one has been able to extend that mark, even using power gained from a convergence or a ley line nexus.\"\n\n\"That may be so, but using the circle and rune construct here,\" and Kelli pointed to a couple of sheets that had some arcane drawings on them before she continued. \"Using these will allow a witch to expend a minimal amount of their own strength to create a power cascade that draws from the aetheric energy just like the ward. And it draws it in levels that are orders of magnitude greater than your personal power. Trust me, I know this is right, just like the ward was right. Try it tonight and you will see.\"\n\n\"Fine,\" Ali huffed as she snatched the diagrams from the coffee table in irritation. \"I will try this, but when it doesn't work you owe me a steak dinner. With desert!\"\n\nAt that point I couldn't help but laugh out loud and I replied to Ali's wager, \"And when it does work, and it will because I know Kelli, you owe the two of us a day at the spa. You can come too to soothe your ego if you want.\"\n\nKelli jumped up the moment that I made my presence known and ran over to me, squealing with joy. Cassandra moved out of the way with her usual grace, and I was nearly knocked over by Kelli's flying hug. I basked in the warm glow of her love for me as she crushed me to her like she would never let me go, and I put my arms around her neck and kissed her with all the tenderness and emotion that had been lost in the sea of fear that had been my last two weeks.\n\nI groaned into her mouth as our tongues parted each other's lips to reunite in their ever seductive dance, and the press of her body to mine felt like a furnace of a thousand suns. After some moments Kelli and I came up for air, and we both turned towards our guests with sheepish grins on our faces.\n\n\"Sorry for the peep show,\" I giggled, another blush rising heatedly through my cheeks. \"She is just too hot, and I couldn't help myself.\"\n\n\"Damn straight,\" Kelli replied, as she pulled me in for another soul scorching kiss.\n\nCassandra gave a small sigh and then said, \"Well, as interesting as it is watching the ever seductive dance of young love, there are things that I must attend to.\"\n\nShe then walked over to both Kelli and I, and kissed each of us with a tenderness that expressed a very deep love and caring, and with just a flick of her tongue which hinted at an epic naughtiness. We both knew that Cassandra was interested in some form of relationship with us, and the kiss we had just received sent us both into a fit of giggles and blushing, mostly because \n\nAli was there, and that it had her shaking her head in mock horror.\n\n\"Alas we must part my dearest ones,\" Cassandra said to all of us. \"But I will be available to you if I am needed. All you must do is ask. Aliara, I will see you at the rites in the morning.\"\n\nAnd with that Cassandra turned and left, with all the regal grace of a princess, and we were left with nothing but Ali's derisive snort.\n\n\"Seriously! My mom,\" Ali mocked. \"You two are incorrigible.\"\n\n\"Hey, give us a break,\" I replied with humorous indignation. \"She likes us. And, well, your mom is kinda hot.\"\n\n\"Dear goddess, I so did not need to hear that,\" she lamented as Kelli and I laughed again at Ali's misfortune. \"Anyway, I have to be heading out too. I got a lot to get done before tonight. You're both coming, right?\"\n\n\"Coming to what,\" I asked and noticed that Kelli was already nodding that we were.\n\n\"Paul McAlister, you know Paul, right,\" Ali grinned and I felt another heated blush suffuse my face. \"He got a jazz ensemble together not long after New Year and they are having their first gig tonight. I thought that if you were finally awake and felt like it you might like to come and support him.\"\n\n\"Of course we will be there,\" Kelli affirmed, and I voiced my assent as well as it would be great to see Paul again.\n\n\"Then I will catch you both at the Tavern tonight,\" Ali replied as she left, giving us a jaunty wave goodbye.\n\n\"I am so glad they didn't decide to stick around that long,\" I moaned as I leaned back into Kelli's arms. \"I so need a shower. I probably smell like ass.\"\n\n\"You don't quite smell like ass yet sweetie,\" Kelli replied, and I turned and hit her with my very best pout. She was undeterred, however.\n\n\"It's a near thing, though.\"\n\n\"Well, I was going to ask you if you wanted to shower with me but now...\" and I left the thought hanging in the air like a petulant child.\n\nIn response, Kelli just raised an eyebrow at me while grabbing the bottom of her loose off the shoulder t-shirt. Then she stretched, oh god did she stretch, and as her arms rose above her head the shirt she was still gripping followed them and I was left staring in lustful hunger at her perfectly shaped breasts. Her shirt fell to the floor as she let her arms arc behind her head, and she thrust her chest out in a blatant display of sensuality that was clearly meant to wind me up. It worked, like it always does, and I sauntered forward with my tail whipping back and forth in lusty agitation and latched my eager lips around one of Kelli's pink nipples. \n\n\"Are you sure I can't shower with you,\" she groaned in pleasure as I pulled her body tightly into my face while I continued to suckle her gently.\n\nAfter another second or two I moved my lips up the swell of her breast and to her neck, giving Kelli feather like licks with my tongue as I went. I only paused when I reached her ear, and I leaned in closer to her perfect body as I gently rolled the nipple I had been devouring between my thumb and fingers.\n\n\"You can always shower with me,\" I whispered to her, letting the quiet words fall gently from my lips, leaving an excess of desire hanging in the air.\n\nAnd with that I turned from Kelli's arms and sauntered down the hall towards the bathroom. I pulled the tie on my robe and gave a little shrug which left a small puddle of midnight blue silk in my wake, and I let my hips sway back and forth in a silent call to my lover. My tail was also lashing from side to side as well, and the flick in my ears as I turned the corner into the bathroom was a signal to Kelli that she needed to hurry up and join me before I exploded.\n\nRibbons of steam started to rise a few seconds after I had started the flow of hot water, and I felt Kelli slide in behind me as I was adjusting the shower to a comfortable temperature. The naked heat of her breasts pressed into my back as I straightened up from the faucet, and her strong arms wrapped around my chest to pull me closer while she planted butterfly kisses along my neck. I reached up behind my head and ran my fingers through her long fiery tresses, and mewled in pleasure at her hot breath as she nibbled ever so gently on my ear.\n\nAs much as this pleased me, my desire to get clean was enough to make me unwind her grasping hands from my breasts, even after she had started pulling on my heart shaped nipple rings. I maintained a grip on her hand, though, as I slowly stepped into the shower. I infused my movements with as much sensuality as I could muster, and I let out a lust filled moan as I let the spray of warm water cascade down my body in slick rivulets. I turned to make sure Kelli had followed me into the tub and I reveled in the delicious feeling of our water slicked bodies coming together and sliding against one another.\n\nFor long minutes we just let the heat of the shower flow over ourselves as we kissed beneath the spray. Our tongues danced and twirled in a languid waltz as our hands traced leisurely paths over every possible inch of skin we could reach without separating. God, it felt good to hold Kelli like this again. The near mind fuck I had experienced the last couple of weeks had sapped any sort of sexual energy from our relationship, and now I was going to make up for lost time. With interest damnit.\n\nKelli turned me around as she reached down to grab the shampoo and body wash, and the smell of strawberries filled the space as she began to work the heavenly scented lather into my hair. Her fingers massaged my scalp with practiced ease, and I began purring in contentment when she moved on to my ears. After a short while Kelli put more of the soapy liquid into her hands and proceeded to run them over every inch of me she could get to. Her slippery hands moved over my neck and shoulders, gently caressing every curve as they traveled. She paused for a moment to add some of the wash to the front of her own body and then pulled me close once more.\n\nA gasp of pure pleasure was pulled from me as Kelli kneaded my now soapy breasts, teasingly pulling on my piercings. She moved her own slick chest against my back, using her own body to scrub mine. I felt a rush of blood and heat flood between my legs, and my labia began to tingle with anticipation. While Kelli continued to wash my body, I wrapped my tail around her leg and reached back and steadied myself by lightly gripping her thigh. I then moved my other hand between our bodies with a practiced knowledge that comes from knowing nearly every inch of a person, and found her clit with my grasping fingers.\n\nKelli cried out in pleasure as I used my fingers to gently tug and roll her very sensitive nub, and the rhythm of her washing only faltered for a moment. She began to roll her hips in time with my hand while moving one arm down so that she could do the same to me. I nearly yowled in an overload of pleasure as Kelli found my tiny hood, letting her fingers pinch and swirl, using well timed patience to tease my own clit into revealing itself.\n\nFor the next several minutes we barely moved, other than the slow and deliberate manipulation of each other's most sensitive sex organ. In the back of my mind I noticed that the labored effort of our ragged breathing had become synchronous, as our chests rose and fell in perfect time. Our mouths were clamped shut in utmost concentration, and the only sounds to be heard over the shower were our lustful grunts between the whistle of air moving in and out of our nostrils. I could tell this was going to be a big one for both of us, as both Kelli and I started to tremble in exertion at the same moment, and a gentle spark ignited an insistent molten heat deep in my core.\n\nOn and on we continued, our mouths opening to let forth silent screams of exploding passion, as our fingers worked to push our mutual climax beyond the orgasmic threshold. Kelli toppled over the edge into bliss first, and the sensory overload caused her to pull and pinch on my swollen clit just that much harder, and that moment of slight pain and discomfort pushed me into my own raging orgasm. A primal cry exploded from my chest as we both collapsed to the floor of the shower in a mass of shaking limbs, our strength no longer enough to keep us standing. Kelli and I could do nothing but lay there together, breathing like we had sprinted a mile, while the warm rain of the still running shower rinsed away the strawberry scented lather.\n\n\"You don't know how much I needed that sweetie,\" Kelli crooned in my ear. \"But we really need to get up and finish so we can make it to the Tavern on time.\"\n\n\"I needed it too, babe. I was practically starving for your touch the last couple of weeks, but couldn't do anything about it. God it was frustrating.\"\n\n\"I know. Dear god I know, but we have that sorted for now. Tonight, however, I'm looking forward to meeting Paul you sexy little minx.\"\n\n\"Ooh, I think his head might explode when we see him together,\" I giggled in reply. \"But it's important to me that I share everything with you so he will just have to suffer through it.\"\n\nThat comment made Kelli laugh for a bit, and then she gave me a playful slap on the side of my ass and told me to get up so we could finish and get ready. Truth be told, I would have much rather just stayed there with her, our naked forms sprawled together. Hot water and time are precious commodities, though, that run out before you are aware of it, so I did as she asked stood, pulling her up after me.\n\nWe certainly didn't rush to finish, but our caresses were focused on actual bathing now. We finished showering each other, letting each movement and touch express our love, and then we had to scramble to get ready for an evening out. I decided to play it simple with skinny jeans, a pair of black ankle boots with a five inch heel, and a spaghetti strap t-shirt. It was Kelli, however, that chose to go in for the kill this time with a tight black mini and demi-sleeved midriff shirt. She rounded it all off with strappy three inchers and her red hair pulled into a side pony tail. She looked so damn hot that I wanted to just say fuck it and, well, fuck the night away. Kelli wasn't having any of that, though, and as soon as we were both ready she grabbed my hand and pulled me out the door.\n\nIt was a nice evening so we decided to take the train into the city, and walk from the main station. The bonus was that we didn't have to fight the night crowd for parking, and it was so very pleasant walking through the streets, hand in hand with my girl. We talked about little things, laughed and joked, and I made sure that everyone who saw us together knew she was my girl and I was hers. Soon enough we had made our way into Speakeasy Strip, a section of the down town neighborhood that had completely and totally gentrified, much to the locals' chagrin. ",
        "The Strip was where you went for a night of bar hopping if you were looking to \"cut loose\", but only wanted the polished veneer of artificial debauchery that this Disneyfied common space specialized in. That being said, it did boast some of the best live music clubs anywhere, and The Tavern was at the top of that list. I had been there once before, when I had first started college, and the jazz fest that happened that weekend still shines as one of my brightest memories. It was three days of soul searing music, pianos and horns, and rooms filled with the smell of stale whisky and sweat. It had been pure heaven, and I was hoping that Paul's performance tonight would be similar.\n\nI remembered on New Year's when Paul expressed to me his interest in music, and how I had encouraged him to follow that passion after teaching him the ins and outs of lovemaking, pun definitely intended. It surprised me, though, that he would jump into it that quickly. I decided that I would have to make sure and pry the story from him after his show, and I am sure Kelli was hoping that between the two of us we could pry a few other things out of him as well. She and I had talked long and hard about it in the few days immediately following New Year. We realized that for our relationship to work we were going to have to share everything, including any extra bed mates that my Neko half might push me to.\n\nBy the time my musings had brought my one track mind back to thinking about sex we had arrived at The Tavern and made our way inside. It was just like I remembered, with dim, almost nonexistent light in the common areas, with the bar and stage both sporting a bright halo of warm light. Both Kelli and I immediately went up to the counter and got the attention of the bartender, who immediately asked for our IDs. We didn't even bother getting them out and just asked for two under age bands that nearly all the drinking places in the area used. It was great for business because most of us who were under age really loved the live music in the Strip, and we could still buy food and sodas so it was a win for everyone.\n\nOnce we had our no alcohol bracelets in place and our first drink orders put in, Kelli grabbed me by the arm and began leading me over to one side of the common area, where I noticed Ali and some other people had gathered. I waved at her as she turned and noticed Kelli and I, and everyone with her quickly made room and stood to greet us when we came over.\n\n\"Hey guys,\" Ali greeted us with a smile. \"Come join the crew.\"\n\n\"Thanks for having us,\" Kelli replied as she gave Ali a quick hug.\n\n\"Pffttt... I'd be a Class A Bitch if I didn't hang with my friends. And you look absolutely fabulous tonight Kelli!\"\n\nKelli blushed from neck to ears at Ali's compliment, but still managed to thank her without appearing to be overly bashful. Once Kelli had stepped aside I pulled Ali into a bone crushing hug that made her grunt in surprise.\n\n\"Thank you so much for everything that you did,\" I whispered in her ear, with a slight quaver in my voice. \"It means the world to me that you're my friend and would step up like that for me.\"\n\nAli took my face in her hands and looked at me while we touched forehead to forehead.\n\n\"I haven't known either you or Kelli for very long,\" she whispered back to me. \"But you are both my sisters, as sure as anyone in the Circle is my sister. I hope you know that I would walk through fire and all the levels of hell for either of you, because I know that you would do the very same for me without a moment's hesitation.\"\n\nThen she kissed me on my cheek and tried to wipe a few tears from her eyes without me seeing before turning to the others in the group so she could introduce us.\n\n\"Ok gang, this is Myka, our own resident Neko, and her girlfriend Kelli. Myka, Kelli, this is gang,\" Ali said in introduction, getting several laughs in the process.\n\n\"Really though, this is Jessica, Paul's sister, our friend Jasmine and her boyfriend Matt,\" and as Ali indicated each person in the group we all made the rounds of handshakes and hugs.\n\nI was not sure what it was, but something about the group was bothering me. I really couldn't put actual words to my feelings about it, but something just felt disjointed about the way everyone was interacting with each other. I took a minute or two to look at the lines that bound these new people to each other and I didn't notice anything wrong there either. Clearly Jessica and Ali were very good friends, but there was almost no connection between Matt and anyone but Jasmine. If they were in a relatively new relationship, however, then this would most likely be more than normal.\n\nI just couldn't shake the feeling that something about the group was going to go terribly wrong. As I was trying to solidify my understanding of what my instincts were telling me about these new people I suddenly shivered as an icy chill shot down my spine faster than a bolt of lightning. I was being watched, and suddenly my feelings about Ali's friends made sense. It wasn't the group that was wrong it was someone or something else in the bar with us.\n\nI stepped back while everyone else was talking and I scanned the room using all of my more predatory senses so that I would miss nothing. I looked in every corner, and every dark space, but even with my heightened powers of observation I still could not locate the source of my feeling. And with another jolting shiver the sense of being watched disappeared as fast as it had appeared, taking with it everything that I had sensed about our new friends. I knew that Kelli and I would need to be even more careful until we had figured out who was behind the problems we had been having.\n\n\"So, Myka,\" Jessica called to me as I turned back and rejoined the group. \"How do you know Paul?\"\n\nI giggled shyly at her question, and even Kelli blushed a bit as she wondered how I was going to answer. Ali, on the other hand, was just shaking her head in mock disgust, and Matt and Jasmine just looked confused.\n\n\"Well Jessica,\" I began with a wink at Kelli to let her know I wouldn't overdo it. \"I ran into Paul during the New Year's party at your house. We danced some, talked about things, and spent some time discussing his love of music.\"\n\n\"Wait a minute,\" Jessica gasped as her eyes widened in realization. \"You were the girl he was with at the party? Oh my god!\"\n\nI couldn't help but giggle, and Jessica's surprise made me blush a little, knowing that Paul had at least mentioned me to his family.\n\n\"Yes, Jessica, I was that girl. And the only other thing I will tell you is that he was a perfect gentleman who just needed a little push in the right direction.\"\n\n\"But, why? Aren't you with Kelli,\" she asked, I could tell that she was still a bit confused.\n\n\"I am with Kelli, and I love her very much. The details of New Year's, however, get a little bit complicated,\" and I took Kelli's hand in mine as I responded. \"Kelli and I have a unique point of view, and even we don't understand it all yet.\"\n\n\"So you cheated on your girlfriend with Paul at the party,\" and I turned to respond to Jasmine's irritated comment, but Kelli beat me to the punch.\n\n\"Actually, Myka and I had just kissed for the first time at the party,\" Kelli quipped back, and I sensed that she was defending me like a bear protecting her cubs. \"So, no, she hadn't cheated on me, and we talked about it for several days afterward and I am certainly ok with it.\"\n\nAnd then Kelli lowered her eyes in a coquettish display and said, \"And I wanted to meet Paul tonight to see what all the fuss was about.\"\n\n\"You need to behave,\" I said as I smacked her on the arm, and both of us burst into a fit of giggles while Ali just shook her head at our antics.\n\n\"Look, I'm sorry,\" I said after a few moments. \"I really am not trying to make light of this, but there are things about our relationship that are complicated, as I said before. One day we may have it all figured out, but right now we just take it day by day, like everyone else.\"\n\nAs I said this, Kelli wrapped her arm around my waist and snuggled into my shoulder, but Jasmine turned around and took a seat far away from us, the look of disgust written plain on her face. Jessica, however, just looked at the two of us thoughtfully for a minute.\n\n\"Look, as long as you don't hurt my brother, I really don't care how you choose to live your lives. You hurt him, though, and you will answer to me, understood?\"\n\n\"I promise you I won't hurt him,\" I replied, gently taking Jessica's hand. \"Now, what do they have to eat here? I feel like I haven't eaten in, like, two days!\"\n\n\"You haven't,\" Ali mumbled under her breath, trying her best not to laugh at my comment.\n\n\"So, yeah,\" I broke back in. \"Food first, and right the hell now, then when is this show supposed to start?\"\n\nAnd with that the ice was broken, with Jessica and Matt at least, and we all sat around a table they had staked out near the wall. I was not sure what Jasmine's problem was, but everyone else seemed to be ok with Kelli and me. I figured I would just give her some space. In the mean time I was able to order a gigantic roast beef sandwich, very, very rare, with sweet potato fries and some mini-peppers. Half of the conversation over the next forty five minutes as we waited for the show to start was how in the name of Almighty God I could eat that much food in so short a time. It really felt good to laugh again, and to be among new and old friends.\n\nThere was a lot of bullshitting as we sat there, with the mish mash of questions that any group goes through when so little is known about each other. Jokes were made in an effort to lighten the mood, silly and embarrassing stories were swapped, much to the chagrin of the various victims at the table, and even Jasmine seemed to loosen up after she had had a drink or two. \n\nJessica had completed a communications degree with a business minor, and would be interning at her dad's company for a while. She would probably end up in charge when he decided to retire. Ali had graduated in history and linguistics, though I'm pretty sure that Kelli and I were the only ones here who knew about her other education, and Jasmine, everyone else called her Jaz, was in her last semester of college for a degree in biology. That was when everyone turned their eyes on Kelli and me, and it was our turn under the microscope.\n\nKelli was a math and physics major, of course, and as far as all of us at the table could tell, was our resident genius. Kelli finally mentioned my reluctance to declare a major and mocked me for my foolishness in front of everyone. I mean really, and everyone agreed, who the hell hasn't chosen their major by the time they finish their second year? The fact was that I was going to be required to pick a major in order to register for the next semester, and this conversation would be moot in a few months. I did, however, continue to accept the good natured teasing rather than let my petulant side out. Soon enough the lights dimmed and the announcer came over the speaker system to introduce tonight's entertainment.\n\n\"Hello everyone, and welcome to The Tavern.\"\n\nThe low bass of the announcer's voice washing over the night crowd caused a rippling hush to descend on the bar, and the stage lights were lowered to a barely visible stream.\n\n\"Why don't you put your hands together for this evening's show, first timers here on our stage. Give it up for the Paul McAllister Combo.\"\n\n\"Alright, here we go,\" said Jessica, as gleeful as a yarn wrapped kitten. \"And you all better clap like crazy or I will beat each and every one of you senseless.\"\n\nHer comment made us laugh, and we all clapped for Paul and his group as if they had just introduced John Coltrane or Thelonious Monk. Within moments, however, the applause died down as the crowd held their breath in anticipation of the first notes of the night's performance.\n\nIt started with a slow beat of a bass drum with a matching rhythm from a snare drum being played with wire brushes. A couple of measures later the deep resonant thrum of a well plucked bass fiddle joined the drums along with the low mournful sound of a tenor saxophone. The lights started to come up on the stage then, and the soft mellow sounds of the first set had us swaying in our seats. The lights were still low enough that I could not make out any of the features of the players, but I could tell that the bassist was a giant of a man, standing well over six feet tall, and with shoulders as wide as the Grand Canyon. Even so, he played the upright bass with a dexterity that few could probably match.\n\nI had been so caught up in scoping out the band members that I had failed to notice the bright spotlight that had just illuminated the baby grand piano, but the addition of the melodic tinkling of the keys to the music pulled my gaze to the now revealed pianist. Paul's deft movements over the black and whites meshed perfectly with the other players as the tempo picked up a touch, and the beauty of their music had everyone in the room tapping their feet or snapping their fingers. He looked pretty much as he had on New Year's, with a crisp white shirt covered with a deep maroon vest, but he had opted for a loosened straight black tie instead of the bowtie I remembered.\n\nSoon enough they moved on to the next song in the set, and then the next. Paul pushed the group through several peppy up tempo numbers, and a smattering of the slow crooning ballads that were the hallmark of classic jazz music, stopping only to call out the occasional count off for tempo when it was needed. They were good. Really damned good for a group that had only been together for a couple of months, and I could tell that Paul was a true master at his craft. They weren't there yet, but with some years of seasoning and practice this group would probably be remembered as one of the greats of modern jazz.\n\nAfter what seemed like way too short a time, the band ended the first set and a forty five minute break was announced and when I looked at the time I was shocked to realize that they had been playing for well over an hour. I had been so lost in the music that I hadn't paid attention, and their music was really that good, and I was glad that there would be more to come.\n\nPaul had come down off the stage by then and was shaking hands and receiving congratulations from the crowd, but he made his way over to our group. He had come over to say hello to his sister and to introduce her to his band, and I giggled to myself as I saw Kelli eying him in a very subtle, but very predatory manner.\n\n\"Hey Jess,\" Paul said, as he pulled his sister to himself and hugged her. \"Thanks for coming out tonight.\"\n\n\"You know I wouldn't miss this for the world Peanut,\" she replied, and it was clear that he was embarrassed by her use of an obvious family nickname.\n\n\"Come on Jess, you know I don't like to be called that,\" he groused as he rubbed the back of his blushing neck.\n\n\"I know, and that's why I still use it,\" Jessica giggled. \"Because you look so cute when you blush.\"\n\n\"Hey Jaz, Matt,\" Paul greeted the couple in an effort to keep his sister from embarrassing him further. \"How are things?\"\n\n\"We're great,\" Matt piped up, almost immediately, and Jasmine followed right on his heels.\n\n\"Yeah, never better. Though school is still a pain. I can't wait to be done.\"\n\nPaul waved and said hello to Ali before beginning to introduce his band to his sister and her friends. I couldn't help but focus my attention on Matt and Jasmine, though, because there comments just seemed off a bit to me. The bond between them obviously was solid, but it was thinner than other love bonds between couples that I had observed. Perhaps they were a really new couple, and had not really formed solid attachments yet, but either way I resolved to keep an eye on it over the next few weeks. If I needed to step in and help or to push them a bit, I would be ready. Then Paul turned and noticed Kelli and I, and his jaw dropped so low you could probably have driven a car into his mouth. He recovered quickly, though, and rushed over to me.\n\n\"Oh my god! Myka! How are you,\" Paul exclaimed as he pulled me up in a chest creaking hug and spun me around before setting me back on my feet.\n\n\"Hi Paul,\" I replied softly, as I placed my hand on the side of his face and gave him an ever so gentle kiss, my ears and tail flicking with pleasure. \"It's good to see you again.\"\n\n\"Yeah, it's really good to see you too,\" he said excitedly, still blushing from the kiss I had given.\n\n\"Damn Paul! You never told us you knew a cat-girl,\" rumbled the giant bass player as he moved up to greet us, nearly eclipsing what little light there was in our corner of the room. \"And a damn sexy cat-girl at that. You really need to introduce us man.\"\n\nBoth of his other bandmates were nodding their heads while Paul was shaking his, a resigned grin plastered to his face.\n\n\"You have a two track mind Mark. It only recognizes music and women,\" Paul chuckled and we all joined in with his laughter.\n\n\"Damn straight,\" he replied. \"Nothin else matters. So hurry up and introduce me to this lovely lady already.\"\n\nPaul sighed as he shook his head, and then indicated his band as he said, \"This here is Mark, our genius bass player and resident horn dog. Carl over there is our drummer, and Jackson, or Jax for short, is our tenor horn player. Guys, this is Myka.\"\n\nThe other two waved, and clearly liked what they saw, but Mark was really interested in moving into my space. He was nice looking, and confident as hell, but I was not really interested.\n\n\"Hi there Myka,\" Mark said as he leaned down to get closer to my short frame. \"It is a rare pleasure to meet such a beautiful woman.\"\n\n\"Well, hi to you too Mark,\" I replied with good natured laughter as I grabbed Kelli's hand. \"It's a pleasure to meet you. This is my girlfriend, Kelli.\"\n\nI almost had to laugh out loud as I could practically hear the grinding of gears trying to turn in his head as Kelli said hello. Clearly this was something Mark had not expected.\n\n\"So, uhh, when you say girlfriend...\"\n\n\"Well, when I say girlfriend it means we live together, go on dates with each other, have met each other's parents, and we have sex,\" I had leaned in so that I could whisper the last part just loud enough for everyone to hear.\n\nMy comment made Ali laugh out loud, while Kelli and Jessica both blushed red with embarrassment. Paul on the other hand just shook his head while failing to suppress an ear to ear grin.\n\n\"Sorry bro,\" Paul chuckled, patting Mark on the back. \"Better luck next time.\"\n\n\"Mark, I really was not trying to be so mean,\" I replied, still giggling like mad. \"I just let my mouth run away with my brain sometimes.\"\n\nEveryone, including Mark, was laughing again at this, but Jasmine had gone to sit back down with another disgusted look on her face, clearly not finding any of my antics funny. I felt sad that I had somehow offended her before I even got to know her, but I had learned long ago that you just could not please everyone.\n\nThe group spent the next few minutes just hanging together, and the comfort level that everyone had with each other made for fast friendships. The time came, however, for the band to go back stage and get prepped for the second set, so they all made their excuses and went to prepare.\n\n\"You guys are all staying for the second set, right,\" Paul asked, as he turned to follow his bandmates. \"Cause it's going to be fantastic.\"\n\nJessica guaranteed him that we all would stay, though no one was in any mood to leave. People were refreshing their drinks and taking the time to mingle during the break between sets, and I turned and grabbed Kelli as the sound system started playing recorded music during the break.\n\n\"Come dance with me,\" I insisted, as I dragged her out to the floor.",
        "\"I'll always dance with you,\" Kelli whispered in reply as we moved into the other's arms and began slowly swaying to the mellow sounds of another crooning saxophone.\n\nIt didn't take long before a lot of other couples were out on the floor with us, but Kelli and I let ourselves get lost in our togetherness. I always loved being able to just tune out everyone else but Kelli when we danced, and it is times like these that make up some of my fondest memories. One song led into another, and then another, and while I was happy to stay here with her, I looked over Kelli's shoulder back to our group and I was surprised beyond belief by what I saw. Ali, Jaz, and Matt were sitting at the table, talking quietly amongst themselves, but it was Jessica that really captured my attention.\n\nShe was staring at us with an intensity that I could almost feel from across the room, and the only word I could use to describe the look that I saw on her face was longing. I wasn't sure why I had noticed this now, but I knew that, as sure as I was standing here with Kelli, that I needed to go to Jessica.\n\n\"Hey babe,\" I whispered to Kelli as the current song we were dancing to was coming to a close. \"Can you do me a favor and ask Ali to dance with you for the next couple?\"\n\n\"I'm not sure she feels that way about us sweetie,\" Kelli replied in some confusion. \"What's wrong?\"\n\n\"I'm not sure, but Jessica needs me right now.\"\n\nKelli looked me in the eyes for a moment, and then looked over at Jessica, before she nodded and dragged me back to the table. Once there she went over, and to much protestation, dragged a mightily blushing Ali out onto the dance floor. I went to Jessica and did practically the same thing.\n\n\"Come on Jessica,\" I said as I pulled her up from her seat. \"Come dance with me.\"\n\n\"What?!? What are you doing,\" she asked in a panic as I continued to drag her out so we could dance.\n\n\"I want to dance with you silly, so we're going out to dance,\" I insisted, and with the extra strength I had from my Neko side Jessica really stood no chance of pulling away. \"Come on, it will be fun.\"\n\nJessica continued to hesitate as we finally got to a clear area to dance, but once there I spun around and pulled her into my arms and began moving to the music. She had finally resigned herself to my insistence that we dance together, but her movements and her posture were stiff and uncomfortable. I wondered for a moment if I had taken things a little too far, but my instincts pushed me relentlessly onward. I took a moment to glance over at Kelli and Ali while I thought about what I should do next, and my mind was made up for me.\n\n\"Hey,\" I said, and indicated the other pair with a nod of my head. \"Take a look at them. It might seem strange, but my girlfriend is dancing with one of her girl friends. The world isn't ending.\"\n\n\"I know, but...\" Jessica replied in a near whisper, and I finally felt her shoulders sag a bit in acceptance.\n\n\"But nothing. You're my friend, and you looked like you needed a dance.\"\n\nAnd with that, she completely relaxed into my arms and laid her head on my shoulder while we moved in a slow swaying rhythm to the music. I kept silent for a few minutes so that Jessica would feel completely at ease, and then I turned my head and whispered in her ear.\n\n\"I saw you sitting over there and the look you were giving Kelli and I was pretty intense. What's wrong?\"\n\nJessica mumbled something that I couldn't quite make out, and the tremble in her body was telling me that she was trying not to cry. What surprised me was the near overwhelming desire to bring her comfort that washed over me in a gentle wave, and I pulled her tighter against me.\n\n\"Listen Jessica, no one will hear you out here on the dance floor,\" I whispered. \"Just turn your head and quietly tell me so that I can hear what you said.\"\n\nJessica then took a deep shuddering breath before whispering back, \"I saw you both dancing there together and I realized that I want that.\"\n\nShe pulled back away from me for just a moment, and I realized from the look of horror on her face that she had not expected to say what she had. Just in case, I decided to hold her a bit tighter so she could not bolt.\n\n\"I'm so sorry,\" Jessica gasped, the mortification in her voice as clear as day. \"I shouldn't have said that.\"\n\n\"Actually, you should have,\" I replied. \"But why would you...\"\n\nAnd the sudden realization of why she wanted what Kelli and I had interrupted my thoughts completely. I silently thanked whatever power it was that had given me such insight and then I used our dance to steer Jessica over to a part of the floor with far fewer dancers.\n\n\"Ok. I'm going to talk for just a bit, and I want you to just answer with a nod or shake of your head, got it,\" and Jessica nodded to me in understanding.\n\n\"You didn't want what Kelli and I had because you specifically found one of us attractive. You wanted it because you find women in general attractive, right?\"\n\nJessica hesitated for a moment, but then sighed and nodded her head in answer to my question.\n\n\"Have you always known you liked women,\" and she shook her head right before she buried her face in my shoulder and started to shake with barely repressed sobs. \"You just realized it when you saw Kelli and me a while ago. Damn.\"\n\nSo I held Jessica tight and let her cry and vent all of the frustrated emotions that she must have been feeling while we finished up the dance. After the song was over I took her by the hand and led her gently towards the lady's room so that we could get her cleaned up. As we passed by our table I gave out a warning glare and a shake of my head to the other girls to let them know I had things in hand, as Jessica and I entered the bathroom. I took a seat on the counter and allowed her to clean up her face and feel presentable again before I took her hand.\n\n\"Listen, I have some understanding of how confused you are right now. When I kissed Kelli on New Year's and suddenly realized that I might be in love with my best friend, it was like downshifting one extra gear. Total surprise.\"\n\n\"Yeah, that is pretty much what it felt like out there,\" Jessica laughed, but I could still hear the tears in her voice. \"I just don't know where this came from.\"\n\n\"Let me ask something. Have you dated boys, or men?\"\n\n\"Well, yes. I've had a couple of steady boyfriends in high school, and I did date some during college,\" she affirmed.\n\n\"Ok. No delicate way to say this, but I can assume you have had sex with some of them,\" and Jessica again indicated that she had. \"Now think. Really think about this. How was the intimate side of those relationships? I'm guessing you actually liked some of the men you dated, but did you have sex because you thought that you should? That it was the logical next step?\"\n\nThe look on Jessica's face at that point told me all that I needed to know, but I knew that she needed to come to this conclusion herself. I watched as she placed her hands on the counter and hung her head in thought, her face scrunched up in concentration as her brain tried to catch up to her heart. I stayed silent, but placed my hand over hers in support.\n\n\"Looking back on things, I guess it was pretty clear. I loved some of the guys I was with as companions, I loved being with them. A couple of my boyfriends I was with because I felt I needed a boyfriend. They could have been anyone.\"\n\nJessica paused for a moment and wiped her eyes again, and I just nodded to her to let her know I was still listening.\n\n\"And you're right. Sex was something that I did because I expected it. Sometimes it felt good, but no better than if I spent a night alone with my fingers. I don't even know that I have ever really been so absolutely attracted to someone that I was consumed by irresistible lust for them, and god do I want to experience that. When I saw you two dancing there I just... I realized that I wanted to be there on that floor, dancing with someone I was in love with, body and soul, and now I just don't know what to do.\"\n\n\"That's easy silly,\" I replied and I pulled Jessica into a warm and comforting hug. \"You go out, you find people you are attracted to, you go on dates, and the rest will work itself out. It's a pretty simple solution in theory. Damned hard in reality.\" \n\nJessica laughed at my answer and I felt good that my gifts had helped lead her to a somewhat better place, mentally and emotionally.\n\n\"God, Myka, I wouldn't even know where to start,\" she complained in a slightly joking manner, though it was clear she still wanted to cry. \"I mean, I've never even been on a date with a woman. And do I start telling people that I'm gay now, or do I keep things secret? And what the fuck am I supposed to tell my parents?\"\n\n\"Right now, choose carefully who you tell. You have to come to grips with it first, at least a little bit. Don't stack the possible misunderstanding, hate, and whatever else you will probably get from others in with your own feelings of confusion and doubt. It will only make you feel worse, and will hurt a lot more in the long run.\"\n\nJessica nodded her head and had to wipe a few more tears from her eyes, but I had more to say so I just gripped her hands and barreled on.\n\n\"It took Kelli and I a couple of weeks before we could comfortably engage in some of the little PDAs we often take for granted. Holding hands, heads on shoulders, the occasional peck on the lips or the cheek. It was Valentine's before we told our parents, and Kelli practically forced me to do that. Granted, we resolved things pretty quickly, but there were other factors at work that I may tell you about sometime, but time is your friend right now.\"\n\n\"How do I know who to tell, and when to tell,\" she asked with an innocent sincerity. \"And where do I go to find out how to date a woman? God, it's like high school sex-ed all over again.\"\n\nJessica's comment about high school sent us both into a fit of giggles for a moment, and my instincts told me that she was going to be alright. I just had one other thing to do.\n\n\"For starters, I would tell Paul. And tell him sooner rather than later. Your brother is a complete gentleman and from what I saw when you talked with him a bit ago, he loves you to death. He will not only understand, but he will support you even if it means walking over hot coals and melted razor blades in bare feet.\"\n\n\"Yeah, he would. And you're right, I will probably tell him sooner than later.\"\n\n\"As for your parents, that will have to happen eventually. They are family and if you keep family in the dark too long then feelings will get hurt,\" and Jessica quietly acknowledged that I was right about this too. \"But get right with yourself first before you drag them into it, then you can tell them from a position of strength.\"\n\n\"Yes ma'am,\" she affirmed and giggled at my irritated stare. I was not by any means a ma'am damnit.\n\n\"Now dating a woman; that is going to take practice, and it just so happens we have the perfect opportunity.\"\n\n\"You are not setting me up on a blind date Myka, not right now damnit,\" and my eyes widened with shock for a moment before I laughed away her suggestion.\n\n\"No,\" I giggled. \"I'm not setting you up on a blind date. I'm setting you up with me. What are you doing tomorrow?\"\n\nThe blank look on Jessica's face that slowly melted into a look of confusion before it morphed into a mask of angry determination nearly made me howl with laughter. I realized she didn't think I was serious.\n\n\"I'm can't go out with you. You're already with Kelli for god's sake,\" she nearly yelled.\n\n\"Why not,\" I responded with an overly confident nonchalance. \"I am not interested in you romantically, and going on a date with me would be great practice with absolutely no downsides. We will have a wonderful time, you will see what it is like to be out with a woman, and Kelli will be free to go out with Paul, because she is dying to get to know him.\"\n\n\"Wait, what do you...\" she began, and I could see the confusion settle in on her once again.\n\n\"Look Jessica, I am going to tell you some things and you need to keep an open mind to hear them. Can you do that?\"\n\nShe nodded to me that she could, and I placed my hand on the side of her face so that her attention was completely on me.\n\n\"I can't go into all of the details, because that would just be dirty porno creepy, and because some of it involved Paul, and that would be his story to tell, not mine.\"\n\nI paused to let that sink in, and then I took a deep breath and continued on with my story.\n\n\"Like I said out there a while ago, I did not realize that I was or could be in love with Kelli until midnight on New Year's. I was taken completely by surprise. But she had some friends she needed to say hi to, and I wanted to dance some so we split up for a couple hours.\"\n\n\"I found Paul there in the basement of your house, and he had been treated quite badly by a couple of, well I'll just say it, a couple of heartless bitches, and the same intuition that let me know I needed to talk to you tonight told me to talk to him. You still with me?\"\n\nShe had moved to sit beside me on the counter and we held hands because both of us felt the need for mutual support.\n\n\"So, Paul and I talked, we danced, and he was a perfect gentleman. I restored his faith that there were women out there that could appreciate a nice guy, and he restored my faith that there were still good guys out there that could appreciate everything a girl had to offer, not just her tits and ass.\"\n\n\"I made it clear to him that I was not seeking a long term relationship, but that I did find him attractive, and we completely enjoyed the short time we had together. My feelings told me that I had helped pull Paul back from an emotional brink that would have crushed him, and left him a much lesser man, and I was thrilled that I could do that for him.\"\n\n\"So you two...\" and Jessica's questioning face made me laugh yet again.\n\n\"Yes, we...\" I replied in jest before continuing. \"But that is not what was important. A few days later, as Kelli and I talked about our relationship we came to some conclusions. These were due to some things that I can't and won't explain right now, but that are related to what I am.\"\n\nI indicated my ears and my tail for her so that my message would be clear, and then I rolled on with my impromptu bathroom confession.\n\n\"For whatever reason, there will be other people in my life that I will feel compelled to bring to my bed, other than Kelli. She knows this, and we both understand that they may share my body with her, but they will never have all of my heart. That is hers and hers alone. I think Paul is one of those I needed to be shared with.\"\n\n\"Hearing you say that is confusing as hell,\" Jessica replied, while shaking her head. \"But strange as it is, when you say it, it makes a weird kind of sense.\"\n\n\"It does make sense, and I can assure you that even though it makes perfect sense, I am still bat-shit crazy.\"\n\nThe laughter was coming more frequently between us, and I could see the beginnings of a bond forming between Jessica and me. Like Ali, this was a bond of friendship rather than romance, and my heart soared with joy for my new friend.\n\n\"So Kelli and I came to a rather unconventional decision. When it was possible, I would share any extra bedmates I brought into our relationship. And that brings us to tomorrow.\"\n\n\"I think I see where this is going,\" she said, and jumped down to wash her face one more time. \"So tomorrow I go out with you, for practice only right?\"\n\n\"Yes, for practice only. Though I think we will hold hands and do other things that people who are attracted to each other do on a first date. And if you are good, you might get a good night kiss.\"\n\n\"And Paul will be going out with Kelli?\"\n\nI nodded to her before replying with a grin, \"I hope so, but if he does, my guess is he won't make it home until sometime the next morning.\"\n\nThe shocked look on her face gave way to another fit of giggling and we both took a few more minutes so that Jessica could look presentable.\n\n\"And in that case, he most certainly will have had a goodnight kiss, or five,\" and both of us lost control and laughed out loud. \"Now we better get out there before they send in the rescue squad to find us. Plus we can't miss your brother's second set. He seemed to think it was going to be spectacular.\"\n\nJessica was finally presentable, and was also in a much better state of mind as we made our way back to our group. I slid in next to Kelli, and put my arm around her, kissing her soundly just because I could, before I leaned over and leaned my head against hers.\n\n\"Jessica and I are going out on a date tomorrow,\" I whispered to her, and I was surprised that all I got from Kelli was a raised eyebrow. \"You're ok with this? Before I tell you why?\"\n\n\"First off sweetie, I saw how she looked at us just before you had us switch up dance partners, and even I could tell that something was up. I also felt your concern as you took her to the bathroom to freshen up. I figured that she might be somewhat confused, and unlike us, did not have the benefit of some well-placed magic to help things along.\"\n\n\"Is this going to be a sexual thing,\" Kelli asked after a moment's pause. \"Or is my instinct that she just needs a push to get her heart and mind looking for the same thing what is going on?\"\n\n\"Yeah, the latter is about the long and short of it. I'm not attracted to her like that, and I am not getting a feeling that she needs that kind of relationship with me, or us really. So it's just a date, to practice dating. The good news is you get to take Paul out tomorrow, if he wants to go,\" and I giggled a bit at the almost sinister grin that appeared on Kelli's face.\n\n\"You're right. That is something that I am looking forward to,\" she replied, and then her face took on a somewhat more serious look. \"Are you sure you are ok with me doing that?\"\n\nI didn't answer Kelli right away, and I let my mind recall all of the talking she and I had done right after New Year's. We had talked about what my being the Aspect of Love would mean for us, and how we would deal with it. We both came to the conclusion that a complete sharing of everyone I would eventually get involved with was the only way to make things work. It was the most logical and elegant solution that we could come up with, but there is definitely a difference between theory and practice.\n\nNow that we were rapidly approaching the practice part, I had to think on things for a minute before I could answer her. No matter how I looked at it, however, Kelli going on a date with Paul, and most likely taking him to bed, was more than ok with me. Just like going out with Jessica for her to practice felt right, so did both of us taking this next step with Paul.\n\n\"Yes,\" I answered, with a conviction that I now felt both intellectually and emotionally. \"I can't explain it, but it feels right. And you should have a marvelous time both in and out of bed. Though I hope that you both will save some for me for after I get back.\"\n\nI almost lost control at the shocked look on Kelli's face, and we both laughed together, realizing a new level of comfort and understanding in our growing relationship. We probably would have continued on with our little discussion if the lights in the Tavern hadn't chosen to dim at that moment. It appeared as if Paul and his group's second set was about to start so Kelli and I settled down and got ready for act two.\n\nThe bar didn't bother to announce the group this time, but let them just break into the first number of the second set, and as before, the mellow sounds had everyone there swaying to the music in no time. Yet again, I was impressed with how good these guys were even though they had only been playing together for a short time.\n\nI had a warm feeling inside as I listened to the flow and movement of their music, and I was glad that the budding instincts and powers involved in my transformation had led me to Paul, and had pushed me to give him advice about being his own person. The beauty that was on display tonight was all their work, but I was content knowing that I had a small hand in moving them to this path.",
        "Immediately after the first song ended the announcer came back on, and most of us looked around wondering what was going on.\n\n\"Ladies and gentlemen, The Tavern and the Paul McAllister Combo would like to introduce to you, for the first time on stage and at lead vocals; please give a warm Tavern welcome to Miss Kassidy Williams.\"\n\nSuddenly, as we were all giving an enthusiastic applause, a stunningly bright spotlight was shone on the newcomer that had taken the stage, and the entire bar fell as silent as an empty church. To say that the woman standing at the microphone was beautiful would be like saying that the Sistine Chapel ceiling had decent use of color. She was by far the most gorgeous woman that I have ever laid eyes on, and I was not really sure if the blazing illumination that surrounded her came from the spotlight or from just her presence. And then, as the music started up again, she began to sing.\n\nWhat came out of this woman's mouth was not music, rather it was the heavenly sound of an Earth bound angel trying to get a message back to God. The absolute beauty of her voice washed out over the entranced crowd like warm honey, and the power that was present in her vocal ability had nearly short circuited my brain. I looked around at my friends and those who were at the table nearest us, and nearly everyone's mouth hung open in both surprise and bafflement. The combination of both her ethereal beauty and her angelic voice promised that this night would be one that all of us would remember forever.\n\nFor a while I just let myself be enthralled by her incredible voice, but once I was able to think straight again I began to notice all of the little things about her that added up to such an impressive whole. Her hair was a deep auburn, and it fell past her shoulders in silky waves that shimmered in the stage lights. Her deep caramel skin appeared so smooth and flawless, and with her strong facial features, it suggested a mixed race heritage in which she won the lottery from both sides of the gene pool. She was about five and a half feet in height, and her body was deliciously curvy, and wrapped in a red dress that looked like it had been painted on. She was a vision of feminine perfection straight out of the golden age of jazz music.\n\nI leaned over and tapped Jessica on the shoulder, desperate to get her attention, because she appeared to be just as entranced as the rest of us. After a few moments, however, she was able to pay attention to me.\n\n\"Did Paul tell you anything about her,\" I asked in a hushed whisper, not wanting to disturb the heavenly sounds coming from the stage.\n\n\"No, he told me nothing,\" she hissed back, trying to keep her own voice down. \"Though he has some explaining to do after the show, I think.\"\n\nI nodded to her and only briefly felt sorry for Paul, springing this kind of surprise on everyone. But you just don't hide such a magnificent person from your friends, and especially your sister. He was definitely going to get an earful.\n\nThe show continued on for another hour or so, with an instrumental number mixed into the set every now and again so that Paul's mystery singer, Kassidy, could get a breather in. And it was a glorious hour indeed, filled with energy, emotion and the most exquisite music that anyone at the bar had ever experienced. Eventually, though, the show ended to a blistering round of applause punctuated by many hollers and whistles. It had been that fantastic.\n\nPaul and the group made their way over to our corner afterwards, through a crowd that wanted to pat them all on the back and to shake hands with the woman in red. I couldn't blame them at all, as she was like a celestial being that had chosen to walk amongst us lowly mortals for an evening and bless us by her very presence. They finally made it to our table and we congratulated them all on a fine performance before Paul introduced us to their new band mate.\n\n\"Ok, I know it came as a surprise, but I'd like you all to meet Miss Kassidy Williams,\" Paul announced to us in introduction as he gently pushed her forward.\n\n\"Please, just call me Kass. All my friends do.\"\n\nI saw the flash in Jessica's eye at that moment, and it made me giggle at Paul's coming misfortune.\n\n\"So, dear brother,\" she called out to him, with her hands placed so aggressively on her hips that even a rabid tiger would have moved on. \"Can you tell me why I have not heard one peep about Miss Kassidy, here? You just ask us to come and see your first show and spring such a fabulous singer on us? Is there something we should know?\"\n\nEach question that Jessica asked caused Paul to pull back a little as if he had been struck, and it was obvious that his comfort level had completely bottomed out. Even seeing his discomfort, Jessica was undeterred, and stood with her arms akimbo as she tapped out a staccato rhythm with her foot.\n\n\"Look sis,\" Paul said, with a healthy dose of contrition in his voice. \"I met Kass at a music festival that they hold at the senior center every so often. I had volunteered to play for a couple of hours and she had just finished a performance there as I came on. She listened to me play for a couple of songs and then asked if I knew a few things she could sing to and we lost about 3 hours to the music.\"\n\n\"Yeah, and it had been so long since I had had the chance to belt out a good jazz number that I was thrilled for the opportunity,\" Kassidy added.\n\n\"Well, you've all heard her sing, and all I can say was that I was totally blown away. So I asked her to come by when the guys and I were practicing and it sort of snowballed from there.\"\n\n\"So there is nothing going on between the two of you then,\" Jessica pressed, and both her brother and Kassidy let her know that their relationship was strictly musical.\n\nPaul proceeded to introduce everyone individually at that point, and while he was making the rounds with the group I noticed something strange going on between him and Kassidy. They weren't complete friends yet, and the bond that I could see between them was weak, though I could tell that it would soon be as robust as the bonds Paul shared with the other band members. What caught my eye were the flickerings of a romantic bond that were sparking between the two of them. They may not have had anything going on between them at that moment, but I could see that it was just a matter of time before attraction got the better of them. I almost gasped in surprise when the flickering between Paul and Kassidy changed slightly, and now there was a four way circuit of occasional sparks moving from them to Kelli and me. I had not anticipated this, but since it was way too early to jump to any conclusions I decided that I would just watch and see what would happen.\n\nAfter getting over my brief surprise, we all sat and talked for a while longer before Paul and his group needed to pack up their gear, and the rest of us needed to head out. As the others made their way back to the stage, however, I gave Paul's sleeve a tug and got him turned around again. Once I had his complete attention I motioned Kelli forward so that she could talk to him.\n\n\"So, Paul,\" Kelli said, keeping her voice low so that only we were involved in the conversation. \"Myka has a previous commitment tomorrow night and I was wondering if you might want to join me tomorrow for dinner?\"\n\nThe poleaxed look and the overextended \"Ummm...,\" that came from Paul's mouth made me giggle at the silliness of it all. I took pity on him, however, and quickly began to explain as well.\n\n\"Look, Paul. Kelli knows about our wonderful New Year's evening, and we both have talked a lot over the past weeks and have decided that in our relationship that we will share with each other completely.\"\n\n\"Though we won't pressure you to do something that you don't want to do,\" Kelli added. \"Myka has said nothing but magnificent things about you, and I would like to get the chance to know the person that she got to know.\"\n\n\"You're both seriously ok with this? This really doesn't bother you or seem weird to you at all,\" Paul asked us.\n\n\"Paul,\" I replied with as much sincerity as I could muster. \"To be perfectly honest, there are so many things about our relationship that are so god damned weird that the two of us wanting to share doesn't even cause a blip on the weird-shit-o-meter.\"\n\n\"Just watch the original Men In Black,\" I explained to a confused looking Paul when he failed to get my reference. \"It will clear things up. In the meantime, Paul, would you like to go out with Kelli tomorrow for a wonderfully fun evening, the end of which will undoubtedly have you getting lucky. And depending on how late I get back, you will probably get lucky twice.\"\n\n\"Possibly three times,\" Kelli added just before we both broke down laughing. \n\nTo soften the blow, however, we both took turns plying Paul with ever so gentle kisses and then stepped back to wait for his answer. I saw the moment that his poor overtaxed mind caught up with the rest of the world, and I nearly did back flips when a shy but cheeky grin stretched across his face.\n\n\"Well, I would never be able to face Mark again if I said no and he found out,\" and it was Paul's turn to laugh when Kelli was caught off guard by his joke. \n\nIn mere moments, however, Paul had reassumed the mantle of the perfect gentleman as he pulled Kelli's hand to his mouth and kissed her hand like she was nobility.\n\n\"I would be more than honored to escort you out on the town tomorrow Miss Kelli. What time should I pick you up, or are you going to pick me up since you asked me out?\"\n\nI moved away so that they could finalize their plans without me interfering. Plus, I had to head off Jessica from interrupting as well. She took my cue as I steered her away from Kelli and Paul and we stepped to the side so that we could set the details of our own plans.\n\n\"Are they...\" Jessica started to ask, pointing over at her brother.\n\n\"Yes. They are figuring out when and who will be picking the other up, which means that we are completely free to make our own plans. You should start by practicing asking me out.\"\n\nJessica gave me a shy grin and tried to look away in embarrassment. I knew she was having a hard time getting the ball rolling so I took pity on her and gave it a nudge myself.\n\n\"Just open your mouth and ask me if I want to go out with you,\" I whispered to her while holding her hand for moral support. \"I'm not going to say no.\"\n\nI thought for a second or two that she was not going to ask, and it looked like she was going to back out, but then Jessica took a deep breath with closed eyes and steeled her resolve on the exhale.\n\n\"Myka,\" she said, with a slight hesitation in her voice. \"Would you like to go on a date with me tomorrow night?\"\n\nIt had taken nearly all of the courage that she possessed in that moment, but Jessica had scaled that first wall, and my heart sang for her, knowing that it would be much easier for her from now on.\n\n\"Of course. I would love to go out with you,\" I replied and my enthusiasm spilled over to her, and plastered a goofy grin all over her face. \"Give me your phone.\"\n\nJessica immediately handed over her mobile, and I wasted no time putting in my number for her, and then I used it to call mine.\n\n\"There, now we can get ahold of each other. Just text me tomorrow morning and let me know when you are going to pick me up and what I need to wear. Ok?\"\n\n\"Ok. You got it,\" Jessica replied, and gave me a hug before turning back to the others as they were leaving. She did, however, turn back around and wave goodbye to Paul, Kelli, and me before they all took off, and I knew that she would get the hang of dating women instead of men without a problem.\n\nKelli and Paul had also finished their planning, and he apologized for having to just leave us there, but if he didn't help the band pack up they would probably be a little pissed. We understood, and Kelli and I both kissed him once more before we left the bar hand in hand.\n\n\"So do you think he is going to be ok with it,\" I asked Kelli as we made our way to the train station.\n\n\"I think so. I mean, he's a red blooded male that has just been told that tomorrow night he probably gets to be a participant in a threesome with two absolutely gorgeous girls, who are already in a same sex relationship with each other. He is probably as stiff as a titanium dildo right now, and my guess is that is not going to change much until tomorrow night.\"\n\nHer comments made us both burst out in laughter and I snuggled into her warm body so that she could wrap her arm around my shoulders as we walked to the station. I realized that I felt human again after my ordeal, and I was so grateful for having Kelli in my life. For the rest of the ride home we didn't talk, mainly because there was no need to. We both just held onto each other and basked in the nearly palpable feeling of love that we had between us, and let its gentle power caress our souls, tying us even tighter together.\n\nAfter getting home we just closed ourselves in our bedroom and laid down in the dark, our naked bodies pressed against one another, as we talked about random things. We pulled each other into an embrace, and let our silky smooth legs entwine together, and eventually allowed our hungry lips to taste of the fruits that the other held. As much as I wanted her touch, tonight was about more than the closeness of sex between Kelli and me. We held each other and kissed, and kissed, and kissed for a length of time that defies quantification. As we slipped from consciousness the gentle exhalations of our breathing mingled in the miniscule space that we had left between us.\n\nFor whatever reason, I woke up early the next morning, though, I'm sure that sleeping for two days in a row had something to do with it. I was glad that I couldn't sleep anymore, however, because I had a ton of shit to catch up on. I used my considerable cat like prowess to slip out of our bed without waking Kelli, and I left her gorgeous nude form alone so that she could continue sleeping. I did manage to give her an ever so light kiss on the forehead that only made her mumble and slip deeper into the covers, as I got ready to face the day.\n\nI managed a quick shower and threw on some shorts and a tight belly t-shirt before getting our laundry started, and then I had to catch up with the three weeks of class that I had missed. The school work was hard, but I wanted to make it out of the semester in a few weeks without having to take an incomplete in any class. From what she had told me, Kelli had managed to almost keep up with her class load, though, helping me through the last few weeks did put her a bit behind as well.\n\nSomewhere after the second load of laundry, a pair of three page article summaries, and 4 cups of coffee with some toast and jam, Kelli finally woke up and made her way bleary eyed to the shower.\n\n\"Hey sweetie,\" Kelli greeted me, giving me a morning kiss while still in her shower robe complete with damp hair. \"God yes. You made coffee.\"\n\n\"Of course,\" I chuckled, and I narrowed my eyes as I watched her fabulous ass while she grabbed her own breakfast.\n\n\"You should stop staring at my ass and get back to work,\" she giggled, and I knew I was so busted.\n\n\"But it's so nice to look at first thing in the morning,\" I complained, but the grin on my face pretty much killed the joke. \"Anyway. So where are you going to drag Paul off to before you bring him back here for sacrifice?\"\n\n\"I'm not sure yet,\" Kelli replied after sharing a laugh at poor Paul's expense. \"I was thinking of a light dinner and then taking him to that new club that opened just off campus so we can dance.\"\n\n\"Ooh! Yeah! Definitely do that,\" I agreed without hesitation. \"He's a great dancer. You'll have lots of fun.\"\n\n\"Good to know. That is what we are doing then. When is Jessica coming to pick you up?\"\n\n\"I'm not sure yet. She hasn't called or texted, so I don't even know what the dress code is going to be.\"\n\n\"Well, whatever it is, you should have fun. I have to ask, though. Is Jessica going to be joining us some nights?\"\n\n\"Unless something changes that I don't know about, no,\" I said as I gently caressed Kelli's cheek. \"She just needs a little push to see that she will be just as good or better dating women as she was dating men. She's nervous as hell, and has fought her actual attractions for years, and needs a little help.\"\n\n\"Well then, you should straighten her right out,\" and we both laughed at Kelli's unintended joke.\n\n\"Oh dear god. You should really watch what you say,\" I replied when I finally got my laughter under control. \"Anyway, I really need to get these assignments finished and wrap up the laundry. So, as much as I love you and want to trap you in our bed until evening, I really have to get back to work.\"\n\nKelli giggled and kissed me soundly before walking away, encouraging me to keep at it. And I did, for the rest of the morning, until I paused for a late lunch. Sometime after I had finished up with our laundry Jessica had texted me to let me know to be ready by four, and that I should dress casual, and that took the rest of the mystery out of my day.\n\nI grabbed a quick sandwich and made a phone call to Sensei Rick, finally, as I had not really been in a position to start lessons with him over the last three weeks. Kelli had explained what was going on to our parents, and now that things were somewhat fixed, my dad had emailed me a reminder that I had promised to call his friend to set up fighting lessons. I would meet with him in two days, on Monday, and we would go over what I knew and what I didn't know, and would work out a training schedule.\n\nWith the call done, and the appointment set, I spent a little time answering some missed emails, and cleaned up the house a bit before it was time to start getting ready. I chose to wear a white strapless sundress with yellow flowers, going for a cheery vibe so that Jessica would feel as comfortable as possible. I wore light yellow bikini brief panties that felt sexy but sweet at the same time, however, I did decide to skip wearing a bra because of the dress. I had painted all of my nails in a light yellow gloss with thin white stripes down each side, and the overall look screamed fun. Rounding out the outfit was a pair of white ribbon tied sandals with four inch heels that came to just above the ankle, and I grabbed a small yellow hand bag as an afterthought.\n\nI had returned to finishing up some schoolwork as I waited for Jessica to arrive, and I looked up from my work to see Kelli as she moved through the living room to get a bag that she had left. Just looking at her about drove me mad, and I almost tackled her right there. She had come out of our room wearing nothing but a very tiny black thong matched with a pair of sheer black thigh highs with garter-less lace tops. Her hair was pulled into a right sided ponytail up do, and my sensitive nose twitched as the gentle touch of my favorite perfume tickled the pleasure centers of my brain.\n\n\"You, Miss Kelli, are so fucking ruthless,\" I breathed, and she had the nerve to turn around and face me.\n\nThe tight pink flesh of her nipples had pulled together, making the little nubs jut out from the creamy perfection of her naked breasts, and her rapid turn made her B-cup mounds jiggle with a seductiveness that caused my pussy to moisten.\n\n\"You like,\" Kelli asked as she gave me a shy, almost coquettish pose, and I nodded my head in vigorous affirmation.\n\n\"Now I wish we weren't going out separately,\" I whined, and she made her way towards me with smoky eyes and swaying hips that would have tested the resolve of the most devout of priests. She was so fucking hot!\n\n\"Well, sweetie, just think of this as a preview for tonight after you get home,\" she giggled and gave me a gentle lick on the tip of my nose before swaying down the hall to finish getting ready for her night."
    ],
    "authorname": "Magical_Kitten",
    "tags": [
        "cat girl",
        "magic",
        "lesbian romance",
        "19-year-old",
        "witch",
        "threesome",
        "mff",
        "lesbian sex",
        "neko"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/mykas-tail-ch-03"
}