{
    "title": "NewU Pt. 04b",
    "pages": [
        "Hey there Ladies and Gentlemen. \n\nWell, it is safe to say that this chapter took a lot longer than I had expected. So once again I can only apologize for the delay and repeat my commitment to getting chapters out at a much more respectable frequency once the current global conditions allow. \n\nI would also like to send out my heartfelt thanks and admiration to my new editors. The speed, diligence and quality of your revisions to this chapter have been incredible. So, Melanie, Chris and Pete: you are all incredible human beings and you have my undying gratitude. On the same note, however, between the three of them, it is safe to say that they would have picked up every grammatical error, every spelling mistake and every typo, so if you find any then it is entirely the fault of the author... The author is a dumbass. \n\nOn a final note, and one that I have been advised to add, I will say that all people in this story are above the age of 18. Moreover, any similarities between the people and events of this story to anyone either alive or dead is purely coincidence and - frankly - hilarious. \n\nHope you enjoy. \n\n* * * * * * * * * \n\nThe playful and humorous banter between Jimmy and me after the professor's departure had quickly changed to excited planning; the work we had done in our course up until now had given us both a good idea of what we were each going to work on for our final project - the marked assessment which took up the entire third year and accounted for 70% of the final mark. I had decided to work on a new games engine - the software bedrock upon which modern games were built - a decent engine would allow a much higher quality of game to be programmed onto it, better games meant more revenue. Jimmy's idea was a little different though no less interesting in its scope; he wanted to explore the uses of modern gaming in other sectors - he was particularly interested in military training applications for combat or strategy simulations. \n\nThe rest of his visit had been spent in excited discussion, a few of the more logistical issues being resolved as we talked; we decided - for example - that we would move off-campus and get a place together, it would save on rent and allow us to help each other out with our work whenever the need arose; he had also made a not-too-subtle statement about knowing I wouldn't complain if he brought girls home with him - Philippa in particular. But soon enough, it was time for him to leave. \n\n\"I won't be here later,\" he said, looking almost dejected at that prospect, \"Philippa told me that you will be having your tests, she said it would be pointless coming to see you until tomorrow.\" \n\n\"Yeah, it's ok, dude.\" I smiled, not surprised in the least at the news \"but kudos on actually speaking to her.\" \n\n\"Any chance of you not doing any weird shit while I'm away?\" he asked with a grin, ignoring my jibe, \"You now, dying, spontaneously healing, growing another fucking arm, that kind of thing?\" \n\n\"I make no promises.\" I smirked. \n\nWith a laugh, a \"later\" and a shake of the head, he left the room. Now in silence, I cast my mind out to see what was happening around me. Becky was still busy with organizing my tests; Doc Matthews' predictions had come true and Becky had already had to pass two uncooperative technicians on to the consultant for a thorough tongue lashing. Apparently Matthews was getting more and more pissed off with the lack of urgency shown by the other departments and was being less than subtle about vocalizing it. Further away, I could feel Jimmy making his way to the exit of the hospital, his mind swirling with an internal monologue full of excitement and relief, he was at least as happy with his place on the course as I was, probably more. Having a roommate he actually liked would be icing on the cake. \n\nFunny; I always thought he was quite friendly with his current dormmates. \n\nFurther away again was Philippa, discussing my notes with someone I couldn't quite read, I could tell they were paying attention, but the information was being absorbed into... well... into nothingness as fast as Philippa could dictate it. There was no internal monologue either, I would have to file that one away for later. Despite my healing progress, even I had to admit I was nowhere near physically capable of investigating for myself. But somehow, I was confident that the 'Red Alert' abilities I had activated would keep me safe if this mystery turned out to be something more threatening. \n\nOn the opposite side of the hospital, I felt another presence snap into focus. The young man there had never heard of me, at least not until his direct superior had literally dropped my file into his lap with a huff and stormed out of the fracture clinic - clearly he had been on the receiving end of a stern reprimand from Matthews. The man read my file before standing up, picking up his equipment and leaving the clinic for my room. I followed his thoughts as he drew closer, flicking quickly between mentally checking he had brought everything he needed, then to my case in particular and the possible reasons for my condition. Finally, to humming a song that had been stuck in his head since hearing it on the radio on the way into work this morning. 'We didn't start the fire' was a pretty good selection in my opinion, but he had a less than working grasp of the lyrics \n\nHarry Truman, Dorris Day, Red China, Johnnie Ray. \n\nSomething, Something, Something, Something \n\nJoe DiMaggio. \n\nAnd so on. \n\nHis thoughts grew even more amusing as he stepped off the elevator and onto my ward; hot blonde on the phone - that would be Becky - the hotter brunette working at a trolley in the hallway ahead of him with the insanely nice ass - That one had to be Phillipa - Then there was the redhaired MILF at 3 o'clock - I guess Amy would certainly qualify as a MILF, but I wouldn't quite call her a redhead and I was pretty sure she had already gone home - and Holy Fucking Jesus the absolute stunner walking out of room 416. He actually slowed down to take this mystery woman in, I could only guess - from the various reports I had heard - that Charlotte was on the ward. \n\nHe stopped and smiled politely at Becky, introducing himself before being shone that dazzling smile and directed to my room. Right on cue, the door opened. \n\n\"Mister Roberts,\" the young dark-haired man said with a friendly smile, \"I'm Dave and I'm here to take those casts off your legs.\" \n\n\"Hey Dave.\" I smiled back, as the man started talking almost instantly. \n\n\"Nice nurses you have on this ward,\" he waggled his eyebrows playfully, \"but they tell me your legs aren't as broken as they should be, that right?\" \n\n\"Err... That's what I'm told.\" \n\n\"Well, let's get these casts off so the fine people in X-Ray can take a look, shall we?\" he smiled again, crossing the room and hefting his bag onto the table next to the bed. Rummaging around for a few seconds, he started removing various instruments and laying them out on a tray with methodical precision, the song never leaving his head. \n\nRosenberg, H-Bomb, Sugar Ray, Someone else \n\nBrando, the King and I, and the Catcher in the Rye. \n\nEisenhower, vaccine, ENGLAND'S GOT A NEW QUEEN, \n\nSomething, something, something, something, something, something, GOODBYE! \n\nWE DIDN'T START THE FIRE! \n\nFinally, he turned to me, his mouth and nose already covered in a facemask, his hands concealed inside blue surgical gloves and an ominous looking circular saw in one of them. I frowned at the implement. \"I know, I know,\" he said from behind the mask. \"Looks mean but trust me, it's all good.\" Pressing something with his foot, the blade whirred into life, spinning with terrifying speed. \"Don't ask me how they make these things, but as soon as it touches something it isn't supposed to, it stops.\" He jammed the spinning blade into his own hand, the blade stopping immediately before he lifted his hand up to show me that it hadn't even snagged his glove. \"See? Nothing to worry about.\" He sounded like he was smiling, but behind the mask, I couldn't tell.  \n\nSwallowing the lump that had started to form in the pit of my stomach, I shrugged and gestured at my legs, tossing the thin sheet back \"Well, have at it then,\" I said with more bravado than I actually felt. \n\n\"All righty then.\" He smiled again - I think - pulled up one up a stools, positioned himself over the bed next my legs and got to work. \n\nBuddy Holly, Ben Hur, Space monkey, Mafia \n\nHula Hoops, Castro, something is a no go. \n\nU2 something-ee, something, something, Kennedy \n\nChubby checker, Psycho, Belgians want a Bong-o. \n\nBetween the angle of my head, and his body hunched over my legs, I wasn't able to see what was going on below the waist but a steady tingle of vibrations slowly ran down the outside of my right leg, then repeated themselves along the inside of it before he switch sides and repeated the procedure on the left. In a testament to the man's skill, I didn't once feel an ounce of pain nor did I hear the whirring of the saw stop for a single second. Fifteen minutes after he had started, he sat upright and pulled the facemask down under his chin. \"And now for the big reveal.\" He smiled up at me before his face turned more serious. \"You need to try and keep your leg as still as possible, ok?\" \n\nI nodded and tensed my leg. \n\nWith a small implement that looked like a flattened crowbar, he pried open the seams he had cut into either side of my right cast, working the two halves apart with well-practiced precision until only the cotton wool between the skin and the cast held them together. With a few gentle but firm pulls the top half of my casts were finally lifted away. I found myself looking at my legs, they looked exactly the same as the last time I had seen them, but Dave's thoughts told me something was wrong. \n\nWe didn't start the fire, \n\nIt was always burning since the... \n\nErr... \n\nHe looked down at his notes with a frown. \n\nSever Comminuted Displace Fracture, in cast for 9 weeks... hmmm... \n\nI didn't have the slightest clue what any of that meant. \n\nHis eyes flicked between my half-exposed leg and the notes in his hand, as if the two didn't match up. He picked up the charts from their place on the end of my bed, comparing details between them and the ones he had been given earlier: name, date of birth, address, all the details matched. \n\nHe looked up at me with a frown. \"Err... I'll be right back.\" As easy as his thoughts had been to read since he came onto my mental 'radar', they were now a muddled and confused mess of indecipherable medical theory. It reminded me of the thoughts I often heard from the nurses station that were filled with incomprehensible medical jargon. Dave strode out of the room; both sets of notes in his hands. \n\nAnother fifteen minutes later, he returned with Becky, Philippa and Doctor Matthews in tow. None of them said a word as the four of them stared in shock at my exposed leg. \n\n\"Someone want to tell me what's going on?\" I asked after failing miserably to follow any of their thoughts. \n\nDave seemed to snap out of it first. \"Alright... um... look, the most of your leg is a muscle, right?\" He started slowly tapping the back of his thigh. \"That muscle gets a workout all the time. Walking, running, climbing stairs, even just standing upright keeps the muscle working... you follow?\" I nodded cautiously, one eyebrow raised. \"So, when it is put into a cast and left immobile for any period of time, the muscle starts to waste away. So... erm... after 9 weeks, your leg muscle should be, like, gone! Like a broom handle wrapped in loose skin. Yours...\" he paused, his eyes flashing down at my leg again, \"Well, yours isn't. In fact, if I didn't know any better, I would say this cast was put on yesterday.\" \n\nI had assumed that the consultant would have been the one to share this information but Doctor Matthews was leaning over the bottom of the bed and examining my extremity closely. He ran a finger up the scar that could still be seen on the outside of my upper thigh, it tickled, my leg jerked sending him and the two nurses reeling back in shock, Matthews almost tripping over something as he went. It would seem that my nerves were working just fine. \n\nDave looked at the three on them incredulously, \"Are you sure this is the right paperwork?\" he asked, waving his notes at the pale faced doctor, \"like really sure, there is absolutely no chance of some kind of fuck up with...\" He looked back to me, suddenly concerned with his use of the expletive, \"Some kind of mistake? Cos I'm telling you, that,\" he pointed at my leg, \"is not a leg that has been in traction or more than two months!\" \n\nThe Doctor shook his head, \"We know,\" he said weakly, still unable to pry his eyes from my leg and still unable or perhaps unwilling to believe what he was seeing. \"that's why we called for more tests.\" \n\n\"Hmm,\" Dave nodded, taking another look at my leg and then one more at my face before turning back to the others. \"Well, good luck with that.\" He packed up his equipment and left. I decided I liked Dave. \n\nThere was silence in the room for a few minutes after the door clicked shut behind him, it was Matthews who spoke first. \"Becky, how are we getting on with those tests?\" \n\nMy gorgeous new lover looked flustered but managed to answer, \"I... um... I have his X-Ray booked for about an hour, but... err... I was thinking of taking him down now.\" \n\n\"Good,\" the Doctor nodded, his shocked eyes never leaving my leg, \"Very good, tell them I want the results by 1.30.\" \n\n\"Yes, Doctor.\" With a few more worried and tentative looks, the three of them left the room. Neither Becky, nor the others were anywhere near as concerned over my welfare as they had been earlier. All of them, however, we infinitely more confused about what was happening to me. Part of me was a little disappointed that Becky hadn't given me one of her usual trademark smiles as she but I shrugged it off, smiling as I leant back into my pillow and lifting my newly freed leg, stretching it, wriggling my toes and not feeling more than a slight twinge of pain. This power was awesome. \n\nIt was almost 7pm by the time I was finally wheeled into my room after the tests. The orderly and one of his colleagues lifting me carefully onto the bed and I was left alone. A nurse I didn't know came in an hour or so later to reattach the tubes to the power outlets on the wall and that was it... for the rest of the god dammed night. \n\nNo Becky, no Philippa, no Matthews, no Jimmy, just me staring at the mother fucking ceiling! \n\nAround 9 o'clock, I felt Becky take a nervous glance at my door from the corridor, choose not to come and see me and then headed home. Philippa did the same about half an hour later, minus the look at my door and the Doctor was busy pouring over my notes and the results of my tests a few floors above me. At least someone in the hospital gave a shit. In hindsight, I know it was immature and unrealistic to expect special attention from the nurses, especially after a twelve-hour shift, but I'm not going to lie, Becky's choice stung. She was more than my nurse, she was my lover as well. I was pissed. \n\nUtterly dejected and feeling furious, I retreated to my bunker and went to bed. \n\nThe next morning did not go well. Becky, wearing her trademark smile, breezed into my room before her shift started. \"Hey, you,\" she beamed, \"How are you feeling?\" \n\nHer smile faded at my icy stare. \"I don't know,\" I said plainly after a short pause. \"How could I know? You all sent me for 6 hours of tests with an orderly who has forgotten how to talk, you wheel me back into my room and then all of you just fucked off and left me here! No, 'How are you feeling?' no 'How did it go?' no 'You're test result are in, we're working on them' nothing! I'm not expecting miracles; I know it will take time to work out what's going on with me, but was a simple 'goodbye' really too much to ask? Fuck, I have been in here for 12 hours, it has been 18 hours since I spoke to anyone that didn't involve the phrase 'try to keep still.\" All of you are so concerned about me but not a single fucking one of you even deemed it necessary to even stick your head around the door. Oh... and that lovely TV on the wall...\" I nodded at the plasma screen in the corner of the room, \"may have helped, but no bugger has bothered to turn it on and I don't know where the remote is. So yeah, other than that, I'm fucking peachy!\" \n\nMy words cut deep; I could see that from the look on her face even without the ability to read her thoughts. With a hurt look, a furrowed chin and a solemn nod, her eyes met mine. \"You're right,\" she said coldly, \"Yeah, I should have come in to see you, I should have said goodbye before I left but I didn't. What was I supposed to say to you? 'All is well?' 'Test results come in and your hunky-fucking-dory?' No! None of us has the first clue what is going on, and none of us know how to help you. I became a nurse to help people - I sure as shit didn't do it for the money - and I don't know how to help you! What's worse, is that I like you! The guy I like, the guy I'm sort of involved with is one of my patients and I don't have the slightest fucking idea how to help him, or even how to tell him that I don't know! So yeah, I ran, I went home and hid from the problem and I shouldn't have. there, feel better now?\" \n\nYup, Pete, you are a god dammed genius! Way to fucking go! \n\n\"Shit.\" I muttered out loud after a pause, as Becky looked at me angrily. \"I'm sorry, I just...\" I sighed and started to rub the bridge of my nose. \"I don't know, I'm sorry.\" A small twitch started throbbing behind my eye, growing steadily into a slight tingle as I spoke. \n\nBecky's eyes softened immediately, and her thoughts calmed from hurt to something more understanding. \"You're frustrated, I understand that.\" \n\n\"Yeah,\" I snorted, \"Still shouldn't have taken it out on you, should I?\" I smiled bitterly, still angry at myself. \"Talk about biting the hand that feeds you.\" \n\n\"No, I get it.\" She smiled reassuringly. \"It's one thing being hurt and not knowing what your condition is, it's another thing all together to be in a room with no idea what is even going on and left there to stew. I should have thought of that last night. I should have come in to see you, I just...\" \n\nI just couldn't face seeing you hurt, and I couldn't bear to be the one that hurt you... not again... and no news is NOT better than bad news. Her thoughts finished for her. \n\n\"It's no excuse,\" I said, not willing to let myself off the hook that easily. The tingle was getting stronger \"It isn't your fault and I shouldn't have snapped at you, you have been amazing, all of you have, and I'm acting like an entitled, selfish asshole. I'm sorry.\" \n\nBecky walked over to the side of the bed, leant down and placed a delicate kiss on my cheek, The intimacy and affection that small act far outstripping anything I had experienced up until that point of my life. \"All is forgiven,\" She smiled warmly \"And next time, I'll bite the bullet and come to see you. Can you forgive me as well?\" \n\nI nuzzled the side of my head into hers, reveling in feel of her warm skin. \"There's nothing to forgive.\" \n\nWith another warm smile, she stood herself back up and looked at the watch attached to her scrubs. \"My shift is about to start,\" she placed a hand against my cheek, her thumb stroking me softly, \"I'll come back to see you later, Ok?\" I nodded gently and watched as she walked away and left the room. \n\nThere was silence for a few minutes. ",
        "\"Well, that went well.\" Jeeves' voice echoed in my head. \"At least we know the mind influencing powers work.\" \n\nHmmm, I nodded absently, still looking at the closed door. Wait... What? \n\n* * * * * * ** ** \n\nApparently, Jimmy had been told to stay away for that morning's visiting hours as well, the doctors expecting more test, though as my registered next of kin, he was invited to come to the hospital at noon for my consultation with Matthews. I had intermittently checked on the doctor throughout the night. The poor man had been working on my case until exhaustion had pulled him away in the early hours. Although I couldn't understand any of the medical reasoning that was filling his thoughts - and there was a lot of it - the feelings of self-doubt and confusion had never really left him. He entered my room at twelve on the dot, with Jimmy and Becky in tow, a tablet computer tucked under his arm. After a few minutes of greetings and handshakes, everyone was settled, and the meeting began. \n\n\"Ok, first of all,\" Matthews started as silence descended on the room, \"Mister Roberts, I feel I owe you an apology.\" \n\n\"Err... you do?\" The concern, bordering on panic, that had filled the doctor's mind since the previous dat were now gone. Instead he was feeling something that I could only describe as optimistic relief. He was wearing the closest thing to a smile that I had ever seen on him. \n\n\"It's a simple enough set of assumptions,\" the Doctor continued as if I hadn't said a word, \"A patient gets hurt, he goes to hospital. The Doctors and medical staff tell him exactly what is wrong with him and how they are going to treat him. In cases like yours,\" he went on, \"things are done a little differently; in addition to the life changing injuries and damage to the brain, simply being in hospital and learning that they've only had a serious injury, but they have been in a coma for weeks is often enough to send a patient into a deep depression. In those cases, yours included, it is national policy to drip feed you information. We give you one piece of bad news, let you come to terms with it and understand what the treatment entails, then we move onto the next injury and so on. We have found that it helps patients deal with the shock much better. \n\n\"In your case, and for obvious reasons , that didn't happen.\" The Doctor shifted uncomfortably in his seat, \"Nurse Becky has told me the frustration you have been feeling at being left in the dark. This is something I take full responsibility for but unfortunately, the rapid and inexplicable changes in your condition has given us no time to sit down and actually go through your progress and treatment plans properly. It wasn't an oversight on our part as much as it was a response to a rapidly changing set of circumstances. But regardless, I apologize if that has led to any unnecessary duress.\" \n\nI stared at the doctor for a few moments; despite the formal and well-practiced tone, he was being genuine. \"Don't mention it, Doc.\" I said with a smile and a slight nod, \"You're doing your job to the best of your ability. You'll be getting no more complaints from me.\" My eyes flashed to Becky, that statement meant for her as much as for her boss. \n\n\"I appreciate that, Mister Roberts.\" He said, looking surprisingly relieved. \"Now...\" he took a deep breath, as if steeling himself for this unpleasant task, \"... I think it's time we all had a talk about what is happening with you. I think beating around the bush is a bad idea here so I'm just going to give it to you straight. You were in a bad way when you came onto the ward. How you managed to survive the injury at all is one thing but surviving all of the surgeries as well is... err... well let's just say it was unexpected. Let me be clear here, Mister Roberts: the level of the injuries you sustained were astonishing! By the time you were well enough to be brought out of the coma those injuries had been downgraded from life-threatening, but they were certainly still life changing. We are taking major neural trauma, significant spinal injuries, damage to several major organs and skeletal damage to the lower half of your body that, if we are being frank here, you never would have recovered from.\"  \n\n\"Wait,\" Jimmy interrupted from his place in the chair next to my bed, \"You said he had a good chance of walking again.\" \n\n\"He did.\" The doctor nodded before continuing plainly, \"but he would have suffered from crippling chronic pain and he certainly wouldn't have been able to walk without the aid of a cane or walking stick. Sitting would have been painful, standing would have been excruciating and doing either for any period of time would have been extremely difficult without massive dosages of medication, medication which would have made anything more than sleeping almost incomprehensible. Working from anything other than a horizontal position would have been impossible, driving would have been out of the question - the brain injuries alone would have seen to that - and anything more than half an hour or so of mobility would have been. Well you get the idea.\" \n\nJimmy and I shared a concerned look. \n\nWhat followed was twenty minutes of the most terrifying descriptions of my injuries that I could imagine and all of it underscored by mental images from the Doctor and Becky. The list of complications that would have been considered likely, if not, probable, was enough to make the hairs on my neck stand on end. Sex would've been out; even if I had been able to move and sustain any weight on my pelvis - which I would have found excruciatingly painful - there was no guarantee that my equipment would still work. It was at that point that Becky's feelings switched from abject despair and irreconcilable guilt to something more like curiosity. Even she, despite being utterly convinced that she had done additional damage during our tryst, could see that those details were not accurate. \n\nBut the list went on. Blood pressure problems, partial paralysis, loss of sensation, loss of Liver and Kidney function, sepsis, memory problems, mood swings, aggressive or even violent behaviors, vertigo, constant headaches, list after list of consequences of the injuries I had suffered during the car crash. Yet through it all, Matthews seemed almost buoyant. He was confused; there was clearly still a lot that didn't make sense to him, but the concern had vanished. \n\n\"I'm hoping there is a 'but' here, Doc.\" I said after a pause, with visions of a smug looking Jeeves floating around my mind. \n\n\"But... your case has ... err... thrown up some surprises.\" \n\nThe Doctor turned in his chair, pulling his tablet from beneath his arm and looking expectantly up at the TV in the corner. An X-Ray film faded onto the screen \"For the sake of explaining this to you, I want to concentrate on your legs. The results from your brain scans were much more dramatic than this but MRI scans are nowhere near as easy to read so the X-Rays will have to do.\" \n\nIt took me a few seconds to work out what I was looking at. \n\n\"This is your leg on the night of your accident.\" He said without looking away from the black and faded white image. Even from this distance, I could see the damage. The normally solid white bone was crisscrossed in an elaborate spider's web of cracks and breaks, a few splinters flaking off and shining brightly against the darker tissues of my leg. To me it looked like someone had taken a hammer to a fluorescent tube, shattering it beyond repair. \"This type of injury is called a Comminuted Displace Fracture. What that means is that the bone has broken into more than two pieces. As you can see, there are multiple breaks and cracks, and those pieces have either moved, splintered, or are otherwise not lined up in a way that would allow them to heal properly. This is about as bad as that type of injury gets. \n\n\"What's worse is that this,\" he circled a dark line running down the length of my leg, \"Is the femoral artery; puncture that and you will bleed out in a few minutes and these bone fragments,\" he pointed to a few of the white dots suspended in the blackness of my leg tissue, \"...Were dangerously close to damaging it. The surgery removed most of them, but there was always as significant risk of more splinters coming lose and nicking or even severing the artery.\" He turned back to look at me, \"That would have killed you,\" he finished ominously. \n\n\"That was the reason we were all so worried about you being sat up yesterday.\" Becky added, her eyes raising to meet mine. \"That kind of movement could have been enough to dislodge one of those splinters and caused damage that we wouldn't have known about until it was too late.\" \n\n\"This is the slide from after the surgery, about a week after the accident.\" The Doctor continued after another pause, tapping his screen a few times and looking up to see the slide on the TV switch to a new image. The bone looked more or less the same. The cracks didn't look quite as prominent and most of the white specks around the bone has disappeared, but the most startling difference was the mass of screws, pins and bars dissecting the bone at various places along my leg, a long and thick metal looking bar screwed to the outside of the bone at three separate points and faded plastic strips molded to the shattered bone to hold the looser pieces in place. \n\nMatthews stopped, looking down at the last slide in his hand, his other hand rubbing over his mouth and chin almost in disbelief that he was in this position, yet feeling like he was about to reveal the grand prize in some fictional competition. \"This was your leg yesterday.\" He finally said, bringing up a new image. \n\nThe differences were subtle, but the more I looked, the more I could see them. The spider's web of cracks and breaks was almost completely gone. Although the screws and pins were still there, they looked almost redundant now. Even the few white specks that had been left over from the surgery had vanished and even I could see that the bone fragments had adjusted position to fuse together in a way that should have been impossible. \"I'll be honest,\" The Doctor said as he stared at the picture, \"If you came into emergency room with this kind of injury, I would wrap in in a cast, give you aspirin and send you home.\" Even Becky had climbed out of her seat and was looking at the screen with an expression of fascination and confusion. It was clear that neither of them had seen anything like this before. The Doc finally spoke up again. \"In short, your leg has healed to a point that I wouldn't expect to see for about 18 months, if ever.\" \n\nI looked over at Jimmy, his eyes were fixed on the viewer with a confused frown. \"How is this possible?\" He finally said, his eyes flashing cautiously back to me, as if simply looking at me would undo the healing that I had somehow undergone. \n\nMatthews, his eyes still on his table, simply bit his lip and shook his head. Silence settled over the room once again as everyone grappled with the image infront of them. Even I had to admit that this was a shock. Having powers was one thing but seeing the results of them in the flesh was something else entirely. \n\nMatthews finally turned in his seat, returning his full attention to me. Becky took one last look at my final Xray before switching the TV off and returning to her own. \"There's a book,\" Matthews said after a pause and with an almost conspiratorial smile, \"they tell you about it in med school in a 'you should probably be aware of this' kind of way rather than a 'you need to study this'. This book is a list of case studies, cases that still defy medical science. Even a century after the patient died, we still have no way of adequately explaining their condition. That's why med school doesn't teach it to Doctors; there is always the risk that a physician will encounter something he can't explain and instead of testing thoroughly, they dismiss it as a case that belongs in this book. \n\n\"And we are talking real, honest-to-god medical miracles. Like the little girl born in the 70s without a skull; the skull - or the front part of it - is the only fully formed bone in the human body at birth, it protects the brain from being crushed during labor and not only did this girl survive but there was no physical or mental consequences to her condition, she was fine! A few surgeries as she grew up to install a prosthetic skull but other than that, nothing. She's still alive as far as I know. As much as it surprises me to say this, but there are cases in that book of extremely advanced healing and regeneration properties in patients going back over a century. If you were able to see your MRI and the healing done to your brain, you would agree that this is still an understatement in your case. As amazing as this sounds, there is a precedent for what is happening to you... we just can't explain it.\" \n\n\"Sorry, I'm not following.\" Jimmy spoke up before I could, \"I don't understand what any of this means.\" His mind was grappling between an accepted reality of me being like this for years, and a new one that suggested I was almost fully healed. \n\n\"To be frank with you, neither do we.\" The doctor answered with a simple shrug, \"The National Health service is an incredible institution and despite the financial incentives in other parts of the world, I wouldn't work anywhere else. But resources are limited. We don't have the time, the money or the bed space to investigate this as much as I would like. The simple fact is that medically speaking, at that rate you are healing, we will have no legitimate reason to keep you here for more than another week or two and unless your condition deteriorates, which seems unlikely, there isn't a whole lot more that we can do for you aside from letting you finish healing.\" His face finally cracked into a beaming smile, his eyes almost lighting up as both Becky and Jimmy felt their chests swell with joy and their jaws hit the floor. \n\n\"A week or two?\" I asked, the first time I had spoken in a while. \n\n\"You are much further down the road to recovery than we would have predicted, and we can't really explain why,\" Matthews answered. \"Your legs, back and internal injuries aren't quite fully healed yet and although the brain injuries seem to be healing at an unbelievable rate, I would still like to keep you for observation in that respect.\" \n\n\"You're Welcome\" Jeeves' voice shouted in my mind. \n\n\"There is still the issue of physical therapy,\" Matthews went on. \"And of course, they will be the ones who ultimately determine if you are well enough to leave hospital once we have given the medical go-ahead. If they are happy with your progress, you can go home.\" \n\nI blinked a few times. My powers were incredible, beyond a doubt now, but having the ability to hear people's thoughts in no way allowed me the ability to understand them. So despite the running monologue in both Doctor Matthews and Becky's heads, this news still came as something of a shock to me. I had come to terms with the fact that I would be in hospital for a while, even without being fully aware of how long that may actually be or how bad my condition was. Jimmy looked over at me again, a look of giddy excitement on his face. His mind was only now fully accepting that I would be ok. That all the plans we had made the previous day might actually come to fruition and were not just wishful thinking. He was beyond happy. I smiled internally to myself, he was a good friend and I silently vowed to myself to improve his life in any way I could, now that I had the power to do so. \n\n\"I don't know what to say, Doc.\" I finally said to break the silence in the room. \"I mean, I obviously knew I wasn't feeling as bad as everyone thought I should be, but this...\" Matthews nodded understandingly as I spoke. \"Look, I'm sorry if I've made any of this difficult for you, any of you,\" my eyes flashed to Becky again, hers finally rising to meet mine, a small glint of happiness behind them. \"I haven't been the most co-operative patient, but you and the nurses here have been incredible, I can't thank you enough.\" \n\n\"That's good of you to say.\" Matthews said with a slight smile, \"But there are still some details we need to go over. Then I can leave you to it.\" \n\nThe next hour or so was spent being bombarded with more information than I could have ever hoped to remember without my powers. The schedule for physical therapy alone was exhausting and would be starting in the next day or two. Once they had given me the ok, I would be free to start sitting up and, eventually, even allowed to move around the hospital. After the first round of treatments, they would decide if I was ok to go home. Removing my drip tubes and getting me back onto solid food was another hurdle to cross, I was told to expect some vomiting after the first few attempts but apparently that was normal. My meds, already on the lowest setting allowed for my condition, would gradually be reduced. Despite my healing prowess, morphine addiction was still a real possibility. Jeeves was more than happy to inform me in his smug voice that I hadn't metabolized any of the meds since my awakening and would be fine. In fact, Jeeves seemed to take an inordinate amount of pleasure in correcting the statements made by the consultant. \n\n\"You will probably feel sick after your first few meals.\" No, you won't. \"Your stomach would have shrunk a little from lack of food for so long.\" Nope, its fine. \"The physical therapy will be difficult at the start, your muscles may be in a lot better condition than we would've thought but you still haven't used them in months.\" Might I suggest some Morris dancing, Sir? I think should suitably convince them. \n\n\"Alright, alright, calm down, Jeeves.\" \n\n\"I make no promises, Sir.\" \n\nEventually the consultation drew to a close. Matthews shook hands with Jimmy and me before taking his leave. Jimmy stayed for a few more minutes before politely being informed that he would also have to leave until the next visiting hours. With a smile and a fist bump he left the room, bumped into Philippa in the corridor and they then spent the next 15 minutes shamelessly flirting with each other. Becky stayed. \n\n\"You ok?\" I asked after a pregnant pause, her mind swimming in a mixture of relief and euphoria. \n\nShe licked her lips. \"I don't know.\" She said finally. \"I... I wasn't expecting that.\" \n\n\"What were you expecting?\" \n\n\"To have almost killed you.\" she said with a nervous laugh \"Or at least to have done some more damage, but not that.\" \n\n\"I'm fine,\" I said softly as Becky moved from her seat and into Jimmy's vacant one, my hand reached for hers as she settled down. With the guilt and concern finally fading away, the 'within reason' clause of my internal edits seemed to have been satisfied. Her arousal level exploded as our hands touch. \n\n\"Which brings up a whole new set of questions, and I don't mean about how you are fine.\" Her eyes glinted slightly as they rose to meet mine. I could almost see my powers influencing my blonde lover. \"I like you, Pete.\" her lips curled into a seductive smile, \"I thought we would have more time to work through those feelings but I can't describe it, and I have no idea what it is about you, but every time I see you I just...\" she took a deep breath and licked her lips. \n\nShe leant down and rested her forehead against mine, her fingers tracing tiny circles onto the skin of my hand. I could feel it; the rapidly building tide of desire in the pit of her stomach, the fluttering eyelashes, the slow, shallow breaths. Her mind started to race again. The images I remembered so clearly from our coupling the previous day were nothing compared to these. With a deep breath, I felt the decision snap into place, she wanted me, and she wanted me to know it. A slight tilt of her head brought her lips tantalizingly close to my ear. \"Every time I see you, I just want to strip out of my clothes, get onto my knees, open my legs and my mouth and wait for you to use me.\" ",
        "I swallowed hard, there was something indescribably erotic in hearing these words coming from such a beautiful woman. Images of a naked Becky on her knees, looking doe-eyed up at me flashing through my mind. Her tongue darting out to wet her lips before letting them fall open, the wetness between her thighs glistening in the light, her chest flushed and her nipples as hard as diamond. \n\nI didn't even bother to try to hide the granite-like rod under the bed sheets. \n\n\"I look at you,\" she went on as her hot breath caressed my ear and the image in my mind changed \"And I see myself bent over a table, my hands tied behind my back, your hands spanking my ass or pulling my hair, and you just taking me.\" Her breath hitched in her throat as the hunger overtook her. She'd had these desires for as long as she could remember, never feeling enough comfort or trust in a partner to be able to express them. A few words thundered around her consciousness, words she had heard so many times but had never lived. \n\nSubmissive, Dominated, Owned. \n\nThe image changed again, \"Being tied spread eagle to the bed, you just using me for your pleasure, taking all of me. Giving me your seed wherever you want to.\" She purred into my ear; I could feel her breath hitch again as a tremble went through her body. She swallowed hard. \"I want to watch you with other women, I want to watch you fuck my friends, tied down so I can't touch myself while you bring them all to screaming orgasms, giving them your delicious cum before letting me free.\" Her eyes squeezed shut, her breathing became ragged. The next words out of her mouth would define her. \"I want to be yours; I want you to own me.\" \n\nSomething happened to me in that moment. It was like Becky's idea of her ideal man flooded into my mind, not only did I know exactly what she wanted but I had the overwhelming urge to give it her. I turned my head and pressed my lips forcefully into hers, a little squeak of surprise escaping her mouth before it was sealed by mine. \n\nI rolled my body towards her, managing to drop my hand down between her and the bed, pushing it past the waistband of her scrub pants, under her dripping panties and sliding two fingers into her wanton cunt. My actions were slow, deliberate and powerful. She gasped into my mouth, her body almost vibrating with arousal. \n\nWith measured and commanding strokes, I worked two fingers in and out of her, my palm applying pressure to her clit as she moaned urgently into my mouth. The sensation became too intense for her to coordinate the duel of our tongues. She rested her forehead against mine, her hooded eyes either gazing in awe into mine or falling shut completely. I was marveling at the feel of her. Her silky wet walls responded to my every movement, the sensitive ridges of her G-spot rising from them to meet my invading digits, her warm breath against my face. My erection was long forgotten now. With the knowledge given to me by Becky, I finally understood: her position 'beneath' me was not the surrender of her own pleasure in place of mine, but rather surrender of her control over it. My power over her did not - and would not - lay in the denial of that pleasure, but in the providing of it. \n\nMy erection could wait. The orgasm I was intent on giving her could not. \n\nI knew what to say without even thinking about it, as if the words came from her and not me. \"When I leave this hospital, I am going to buy your collar. You are mine!\" Her orgasm hit her like a freight train; years of limited sexual satisfaction, unfulfilled fantasies and hidden desires detonating in the furnace of her loins and squirting past my invading digits. Her scream was almost silent, like the last gasp of a strangled breath. Her eyes were wide open, wild with burning pleasure as her spasming sex contracted around my fingers, trying to milk the cum from the imagined cock. \n\nHer quivering voice was barely a whisper. \"Yes, sir.\" \n\n\"Mmmm,\" I purred. Slowly removing my fingers from her and releasing the pressure from her clit. I stroked her clenching and dripping sex, petting it comfortingly as she came down from her high, \"Such a good girl.\" She came again. \n\nWith heavy breathing, flushed cheeks and beads of perspiration at her hairline, she stood herself up as I extricated my hands from her clothing, looking at me with awe filled and lidded eyes. Her tongue darting out to wet her lips. Her mind was almost silent, either overwhelmed with sensation or completely at peace with itself. It was a noticeable contrast to any other time I had seen her. The glow from her very core radiated outwards, we both basked in it, silently staring at one another. \n\nPhilippa, having apparently finished flirting with Jimmy, chose that moment to enter the room. Part of me should have felt a little frustrated at the confirmation that this was as far as Becky and I were going, but I only had eyes for my blonde goddess. Becky didn't move a muscle and the pretty brunette hadn't even uttered a word when her eyes latched onto us, her lips curling into a suggestive and amused look. \"You two having fun?\" she grinned wryly. \n\nBecky's eyes flicked up and to her colleague without the slightest hint of the shock or embarrassment I would have expected. Instead, her face contorted into a satisfied smile as she started walking away from the bed and towards the door. The permanently astute Phillipa missed none of this and her smile widened more. \"Did little Becky find her new Daddy?\" she purred seductively. \n\nBecky smiled shyly and nodded. \n\nPhillipa smile spread into a full and mesmerizing beam as she looked from her friend and over to me, her eyes not failing to notice the tent under the sheets. \"Has she told you about her fantasy of watching her Daddy fuck her friends yet?\" she asked me suggestively. \n\nI nodded, somehow completely unsurprised that Phillipa knew about this aspect of Becky's life. \n\n\"Well, make sure you keep me in mind.\" She winked at her friend, Becky's knees almost buckled beneath her, Phillipa caught her with a giggle, steadied her with a hand on the arch of her back and led her out of the room. Philippa thrwe a knowing smile over her shoulder as she left. \"I'll be back to remove your tubes later... Daddy\" she sung out as the door closed behind them. \n\n\"Looking forward to it my... woah woah woah! Jimmy! don't forget about Jimmy! That girl is off limits!\" I screamed at myself \n\n\"We could make him not mind.\" Jeeves' reply echoed in my mind with a shrug that I couldn't see. My mind cleared suddenly from the fog that had been Becky's arousal. \n\n\"Not a chance.\" I barked back. \"I think we have already done enough to Becky without getting Jimmy involved.\" \n\n\"Hey, don't blame that on me, that was all her!\" \n\n\"What?\" \n\n\"Your powers may have made you more appealing to her, but the rest had nothing to do with your abilities.\" \n\nI let that though percolate for a few seconds. \"Holy shit!\" This was going to get interesting. \n\n* * * * * * * * \n\nThank you for reading NewU pt. 4b. \n\nAs always, comments and messages are always welcome and are always read. I have been blown away by the feedback and ratings I have received for this series so far and have thoroughly enjoyed talking to people - either through messages or in the chatrooms - about my work. For those of you wanting to say hi, I can usually be found in the Geeks and Bookworms room and am always happy to say hi. \n\nThe next chapter will be the last of the hospital-based storyline as our hero starts to explore his powers and their uses in the wider world. If there is anything you would like to see going forward, feel free to send me a message and - if it can work - I will be happy to write something around it. This story is, after all, entirely for the reader. \n\nAnd my readers are awesome. \n\nThanks \n\nTheNovalist"
    ],
    "authorname": "TheNovalist",
    "tags": [
        "dom",
        "fingering",
        "hospital",
        "mind reader",
        "nurse",
        "psychic",
        "scifi",
        "sub",
        "superpowers"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/newu-pt-04b"
}