{
    "title": "Dulce et Decorum Est",
    "pages": [
        "I post a tribute every July 4th, to honor the people who've served. I've done conventional military stories in the past. So, this time I thought I'd do one from the standpoint of somebody who reported the war rather than fought it. Last year's was a coming-of-age tale. This one focuses on the importance of family. The atrocity that's central to the storyline occurred as I recount it, as did the payback. I hope you enjoy my little offering and please remember the people who sacrificed to give you the freedom that you're celebrating today... DT.\n\nDULCE ET DECORUM EST\n\nI was standing in a snowy field with a hundred or so other prisoners. It was bitterly cold, and we were deeply dispirited. The Krauts had put us in a line abreast, six rows deep, with our hands raised in abject surrender, I was in the middle of the fourth row.\n\nWe were looking around, trying to figure out what would happen next, when two half-tracks pulled up. A short time later, another came grinding up and parked between them. A Kraut in the third vehicle stood and took aim with a pistol. Two shots rang out and, to our absolute horror -- a couple of guys in the front row grunted and crumpled into the snow.\n\nThat set off the gunners in the other halftracks. They hosed us down with their MG 42s. At 1,200 rounds a minute, we never stood a chance. There were anguished screams as guys fell like so many stalks to the reaper. Ultimately, the shooting stopped and there was nothing but the eerie silence of death.\n\nThen the Panzergrenadiers dismounted from their Kfz.251s. They were big kids, in their late teens, laughing and joking as they went around shooting, or brutally clubbing any poor soul who still had the breath of life in them. All-in-all... those were fun times for the Hitler Youth.\n\nA 7.92 round had grazed the side of my helmet knocking it off and leaving me face-down unconscious - bleeding like a stuck pig. Fortunately, I was under a pile of bodies. So, the clean-up crew missed me.\n\nEventually I came-to, terrified. It was unnervingly quiet. I heard someone shout, \"Let's go!!\" And a few of the fellows who'd been playing dead jumped up and ran. The MG42s opened up again. A couple of guys fell, and a flock of SS pursued the rest toward a tavern at the crossroads. There, they proceeded to set fire to the building and shoot anybody who fled the flames.\n\nIt was the dead of winter, and it was getting close to dark. I was blanketed by as-yet warm bodies. So it seemed prudent to just keep lying there face down, lamenting the cruel fate that had brought me to the crossroads of Malmedy on that dark December day. I surreptitiously felt in my pocket for my worn picture of Jane and Peter. It was comforting to know that I would join them soon.\n\n*****\n\nI grew up in a German speaking part of Wisconsin. Back then we Huns tended to band together in little farming communities where German was still a common language, even if your family had been over for two generations.\n\nHence, most of us were bi-lingual. Still, The Great War had changed our neighbor's attitudes about Germans and so we all began to pronounce our names with a decidedly English cast. That's why I was Bill, not Wilhelm.\n\nOur community was self-sufficient, and of course orderliness is one thing that Germans do better than anybody else. As a result, even though I grew up during the depression my childhood wasn't as hard as it was for people in the more citified areas. We made our share of sacrifices. But there was always food on the table and a good school to go to.\n\nThat was where I discovered my flair for writing. It wasn't anything I studied. An idea would just pop into my head, and the words would line themselves up like the boxcars on a passing train. I won a writing contest during high school and that brought me to the attention of Max Schlemiel.\n\nYes, I said Schlemiel... He'd inherited his unfortunate last name from some hapless ancestor. But Max was one very sharp cookie. He owned and published the local newspaper.\n\nOne steamy July day I was sitting on our front stoop drinking lemonade. It was hot and I was thinking about what to do with the rest of my life. That's when Max appeared. I didn't see him arrive. He must have come down the alley behind our big colonial house. In those days we used the alleys more than we did the streets.\n\nHe said without preamble, \"Bill, I've got a job for you.\"\n\nIt was funny he should mention it. Since I didn't have a clue about what I was going to do with my life. Hey! I was a kid!! No eighteen-year-old has the course plotted. But I knew for sure that there had to be a \"next\" out there somewhere.\n\nI said grumpily, \"I don't want to be a paperboy.\" What the heck... that's all I could imagine Max'd ever want me to do. He laughed and said, \"No, I need a reporter. I read the prize essay that you wrote, and I think you have potential as a cub.\"\n\nNow that was intriguing. College was out of the question, we didn't have that kind of dough, and I didn't want to join the WPA, or be a fieldhand. My old man worked for the local Grange Association as an organizer. But I had no interest in keeping the local farmers happy.\n\nSo, I said warily, \"How much do I make and when do I start?\" Max said, \"You can start anytime you want. I pay a dollar for a standard article and two bucks if you get a byline.\" That was a lot of money in '37. I said, \"What's being a cub entail?\" He said, \"I give you a credential that says you're from the Times and you have to hunt up your own stories.\"\n\nHe saw the hesitant look on my face. How in the heck was I supposed to do THAT. So, he added, \"Sometimes I get a tip I want a reporter to check out. If you can show me that you can dig up a few stories in the beginning, then I might send you out on those.\"\n\nI appeared at the Times office bright and early the next morning, hair neatly combed. It was a rundown wooden shack on the main drag over by the movie theater. The only people working there were a couple of old guys and a woman. That was the entire staff of our eminent news organization.\n\nThe two men were the entire press corps and Mrs. Eldridge was Max's secretary. She was a widow lady, about eighty-five and she looked like a walnut with a whip cream topping. But she was still spry, and she ran the place like Black Jack Pershing ran the AEF.\n\nShe muttered suspiciously, \"What're YOU here for?\" I might have been offended. But that was the way she treated everybody. I said, \"Max wants to talk to me about being a cub.\" She said skeptically, \"He's down at the Hot Spot. You can talk to him there. But I doubt he's serious. What are you? About twelve?\"\n\nI said self-importantly, \"Eighteen almost nineteen.\" Then I turned and headed for the door.\n\nIt was a steamy morning, very muggy, meaning a typical day in Wisconsin in July. That was before air-conditioning. Thus, it was stiflingly humid as I walked into the aptly named Hot Spot.\n\nThe Hot Spot was where everybody in town gathered. Hence, it was a tossup whether Max had gone there to get a morning cup of Joe, or snoop into the affairs of everybody else.\n\nHe was sitting with Barbara Pederson, the owner of the place and Doc Morton. They seemed to be having a neighborly chat while Barbara's three-year-old Dot entertained the customers by solemnly carrying menus back and forth to the tables like a waitress. Dot was a very determined little sprite.\n\nThey all turned to look at me as I approached their booth. Max said, \"Sit down Bill, we were just talking about you.\" That was ominous. I said defensively, \"What'd I do? I didn't do anything!\"\n\nThey all started laughing. Max said, \"Relax, I was telling them that I'd put you on the payroll. So, any snooping you were doing was sanctioned by me.\"\n\nI said, \"What you're saying is that it's okay if I follow my nose around town?\"\n\nThe Doc snicked and said, \"I think he has all the instincts of a fine reporter.\" Barbara said, \"And you can start here. Nothing happens in this town that doesn't eventually pass through the Hot Spot.\" I had to agree. Barbara must have been keeping more secrets than the Sphinx.\n\nThat was when my girlfriend Maggie breezed in. Every kid in town hung out at the Hot Spot and she was looking for me. The old Silvertone radio in the pass-through was playing Glenn Miller's, \"Don't Sit Under The Apple Tree,\" as Mags made her way past the counter in my direction.\n\nFirst, she stopped and said hello to Betty Moran. Betts had been Maggie's best friend since grade school. She and her boyfriend Jed Sharpe were the perfect couple. Betty was the most beautiful girl in town and Jed was rumored to be the smartest. All I knew for sure was that I wasn't.\n\nThe three of them gabbed for a minute. Then Maggie came flouncing back to me, chomping on three sticks of Juicy Fruit, horniness gleaming in her eyes. I might add, it was nine o'clock in the morning.\n\nMags had been around the block a few times. So, she taught me stuff. Her wealth of experience didn't bother me since I wasn't planning on marrying her, even though she was making noises in that direction.\n\nMags was no raving beauty, like Betty was. But she had a pleasant face, framed by dark brown hair in a classic page boy and big brown doe eyes. She was also the owner of a monumental pair of tits. I lived to put those marvels on like a pair of ear-muffs and go Brrrrrrrrrrr! Talk about serious suffocation!!\n\nShe said, \"Hey Ace,\" that was what everybody called me, \"How about us going for a little swim?\" That was a not-so-subtle hint that she wanted to fuck.\n\nI said, trying to shut her up, \"I'm talking to Max about a job.\" Maggie's eyes lit up. The first thing I'd need before marrying her would be employment. Max said amused, \"Yes, Bill is going to be our new cub reporter.\"\n\nI said, trying to get out of there as fast as I could, \"Well I guess I'll start poking around to see-what-I-can-see. When do you want an article?\"\n\nMax said, \"The sooner the better. We have an edition going out this Friday.\" It was Monday. I could come up with something in three, or four days. I just had to get an idea.\n\nMaggie grabbed my arm and said, \"Let's go, it's getting hot in here.\" Somebody was hot for sure. She led me out to her rundown '31 Ford convertible, with the rumble seat.\n\nThe car had appeared out of nowhere just after her eighteenth birthday. I knew Mags had a mysterious source of income. The rumor was that she had a sugar daddy someplace. I didn't care since it gave her spare cash that we both spent.\n\nWe drove out to the Dells Millpond, which had the advantage of a lot of tree cover and proceeded to skinny dip for fifteen minutes before we made it back to the shoreline. The thing about Maggie was that she knew her way around a blanket. So she just walked over in her birthday suit and plopped herself down flat on her back, legs spread and huge jugs puddling out on her chest.\n\nShe raised her head and gave me what passed for a seductive look. Mags was lying slightly elevated on the bank above where I was coming out of the pond and from my perspective her face looked like the sun rising between two vast mountains, with a chasm at their base.\n\nBeing naked myself, I hustled across the short space and, with no ceremony whatsoever, I entered that gap. It was like voyaging into the Grand Canyon -- extraordinarily vast and a bit intimidating. Needless to say I arrived at the top without delay. She was very hot and wet.\n\nI grabbed a handful of Maggie's imposing ass and pulled her to me so hard that her clit was in constant contact with my pubic bone. She shrieked with lust and began an up-and-down motion that brought her to a gushing orgasm in about two minutes flat.\n\nI hadn't really gotten started. And since it was a little loose in there anyhow, I thought that it might take a while. I said, \"Turn around,\" in order to arrange things for the best angle of attack. Maggie assumed the position like the seasoned pro that she was.\n\nShe was kneeling on the blanket presenting her butt for ease of access, face down with her arms extended over her head, legs wide. She also kept looking over her shoulder at me with a smoking hot \"fuck me\" stare.\n\nI was considering hitting her little rosebud. I'd never done that before, and I thought it might be a bit tighter than her prodigious box. Still, that would be sharing more intimacy with Maggie than I wanted. So I slid into the conventional place instead.\n\nActually it was more like falling into it. I was instantly pressed against her pillowy cheeks. They were soft. So, when I hit bottom, my arrival set off ripples all the way up to her surprisingly narrow waist and she shrieked again.\n\nMags was more-or-less in constant orgasm at that point, moaning, grunting, and pounding on the ground as each contraction hit her. I had to admit that she was an insanely good fuck, enthusiastic and very giving.\n\nFor my part, I was a man possessed. I wanted to get myself off, but the problem was that with Maggie's copious lubrication and the -- shall we say - \"roomy\" nature of what I was pounding into, I couldn't get enough traction to make anything happen.\n\nI finally worked myself around so that I was touching something. Unfortunately, that was her g-spot. And that drove her totally insane. She was slamming her ass back at me so hard that it literally flattened out as we collided and she was shrieking, \"AHHH -- JESUS- FUCK ME!!!\" loud enough that I was afraid we were going to attract attention -- all the way back in town.\n\nStill, it got the job done and I was surprised at how hard I came. As I did, Maggie started yelling, \"OH GAWD, GIVE IT TO ME BABY!!! ALL OF IT!!!\" And she started moving her hips around in wide circles like she was processing another monster orgasm.\n\nAfterward, I slid out of her with the same sound you would make pulling your boot out of the mud. She lay with her face on her arms. Her big round buns were still raised in presentation position. But she was mainly just trying to catch her breath. She finally turned to a sitting position on the blanket. There was no need to worry about getting it messy. It was as messy as it could ever get.\n\nShe said, \"Wow lover!!! What brought THAT on?\" I didn't like her choice of endearment. But I assumed she was being descriptive. I said, \"I don't know. I think it makes me feel like less of a kid, and more of a man to finally have something to do with myself.\"\n\nThen I added, because in my opinion Maggie was truly the world's greatest fuck, \"We're going to have to do this again, a lot. How about I take you to the Hot Spot tonight?\"\n\nMaggie got a furtive look and said, \"I've got an appointment this evening. It's just a little something I have to do. It's not a date.\" I didn't have the impression she was meeting with her priest.\n\nShe added heartily, \"But we can get together afterward. I'll make it worth your while.\"\n\nI thought \"Hmmm that's a bit off-putting.\" But like I said, I wasn't interested in marrying her. So I said, \"Where do you want to meet up?\" She said, \"The Hot Spot's okay, I'll see you there at nine. That should give us plenty of time to repeat this morning's experience.\"\n\n*****\n\nNaturally, I was sitting down the block in my dad's 35 Chevy when Maggie's \"appointment\" picked her up. It was curiosity, not jealousy. There was far too much going on in the background and I wanted to find out what it was.\n\nIt didn't take a genius to figure-out that my girlfriend was up to something. So, I followed my nose. That was when I realized that I truly had reporter's instincts.\n\nMaggie lived on a tree shaded street on the east side of town just off the main drag. It was a classic movie-set kind of neighborhood with the old-fashioned, two story stone houses that all the wealthy burghers favored.\n\nHer daddy was a local bigwig in politics. So, it didn't seem odd when Grover Cleveland Ebenschlager strode up the sidewalk and into their house. He'd been the town's mayor for as long as I could remember.\n\nIt WAS odd however when he emerged not thirty seconds later with Maggie hanging on his arm like a decoration. It certainly looked like a date. She was nineteen. He was fifty-seven. They drove off in the direction of the Moose lodge on the outskirts of town. The Moose weren't meeting tonight.\n\nEbenschlager's car was parked in the alley behind the place. The building was dark. But it was still early evening, and the sun stays up for a long time in Wisconsin in the summer. This was too good to be true.\n\nMy old man had an Argus C-3 that was his pride and joy. He kept it in the glove box, so it was handy for any special moment that he wanted to photograph. This was a special moment as far as I was concerned.\n\nI parked down the street, waited a few minutes and then crept stealthily up to the side of the building. Like every other commercial place in town, the Moose Hall was made out of cheap white clapboards with big windows to let in some ventilation on a hot summer night. Familiar noises were coming from one of the little offices at the back of the building. I'd heard the same sounds about eight hours earlier.\n\nI crept around to the main office and there was Maggie, facing the window. Her hands were braced against the desk. Her weighty pendulous tits were hanging down, revolving in lazy circles. Ebenschlager was behind her assiduously pounding away. Mags was grunting on every in-stroke like a steam engine chugging up a hill.\n\nMy girlfriend was clearly in a world of her own. Her eyes would occasionally open but there was nothing but white showing. Ebenschlager was concentrating on her big round ass like it was the most interesting thing he'd ever seen and occasionally he'd give it a slap. Both were sweating profusely in the hot humid evening.\n\nThere was still plenty of light, so I took a few tasteful photographs. That is - they were tasteful if your intention is to document the kind of scoop that never falls into the lap of a cub reporter on the first day on the job.\n\nThey were still at it as I made my way back to the car. As I got in, Maggie's high pitched finishing cry nearly shattered the windshield.\n\nMags was a different person when she slipped into the booth opposite me a few hours later. Her hair was up in one of those double pony tails that make girls look like a Springer Spaniel and her cheeks were pink. She just radiated well-fucked as she said, \"Sorry I'm late lover. I was a little delayed.\"\n\nNo shit!! I said casually, \"Not a problem, I was just wondering how you knew Grover?\" Maggie got a look of uneasiness on her face and said, \"Do you mean the mayor?\"\n\nI said, \"That very person.\"\n\nMaggie looked like she was calculating how much I knew as she said, \"What makes you think I know the Mayor?\"\n\nI said, \"I thought I saw you in his car a little earlier, as he was driving out toward the Moose Hall.\"\n\nShe got a relieved look and said, \"Oh yes -- that - he was just giving me a lift out to my job. I do a few chores for him out there. He hired me to straighten things up. That's where I get the money, lover.\"\n\nSo that was how it was. At least she was being honest. She was definitely straightening something up for Ebenschlager.\n\nI said with real curiosity, \"How do you know him?\"\n\nShe laughed and said, \"He watched me grow up. He and my Daddy run this town.\" Her old man was the county treasurer. I didn't ask her when she started fucking him. That was clearly a new feature for her. Which, no doubt, corresponded with the appearance of the car.\"\n\nIt was neither here-nor-there to me that Maggie was spreading her bounty around town. Like I said, I didn't plan to marry her. But I was also not into sloppy seconds. She had that familiar horney look as she said seductively, \"Don't we have someplace to go?\"\n\nI said, \"That's what I wanted to tell you. Max wants me in early tomorrow morning so I've gotta cancel tonight.\"\n\nMaggie looked extremely disappointed. That made no sense. She'd clearly gotten a big helping of cookies not more than an hour earlier. I know, I'd heard the shrieking.",
        "I wanted to talk to Max before I did anything further with Maggie. The contents of the roll of film in my pocket would probably change the dynamic of our relationship. So, I said as lasciviously as I could stomach, \"I'll rock your world tomorrow after I talk to Max.\" I probably would. But not in the way she was thinking.\n\nA couple of days passed, and I'd endured three grueling sessions with Maggie before Max called me. He said he wanted to see me. I was in a cheerful mood as I sauntered into his office and draped myself in a chair. He stood up, closed the door, and sat back down.\n\nI said offhandedly, \"How did you like my first article? There were even pictures. I'll bet you haven't had news like that in a while?\"\n\nMax shuffled a few of the papers on his desk and said, \"Good-news, bad-news... which do you want first?\"\n\nI said, still cheerful, let's get the bad news out of the way.\"\n\nMax said, \"I'm not running it.\"\n\nI said, \"WHAT!!??\"\n\nMax said, \"This town has too many cards balanced on each other for your story to upset the apple cart.\"\n\nI said accusingly, \"You showed it to Ebenschlager.\" I didn't bother to point out how brutally he was mixing his metaphors.\n\nHe said, \"Of course I did. I have to live here too. But there's also some good news.\"\n\nI said disgusted, \"What's that, Oh-Wise-One?\"\n\nMax laughed and said, \"What you gave me just made me the guy who's holding all the aces. Ebenschlager and his cronies know that, and they are willing to dance to my tune...\"\n\nThen he paused and added significantly, \"Just as long as I do them one little favor. And you might like that since it will get you out of this town.\n\nAnd that's how I ended up at the Columbia University School of Journalism, all expenses paid by the Mayor and his shadowy friends. Blackmail is such an unfortunate term. I would prefer to think of it as the leaders of the town underwriting the ambitions of a deserving young man.\n\nStill, whatever the actual reason for their largesse, Max had me on the train to New York City within the week. I think my parents were actually relieved to see me go. Maggie was beside herself with grief. I didn't want to fill her in on how she had boosted me onto the fast track. She gave me a rousing send off, over-and-over-and-over to the point where I didn't think I would EVER need sex again.\n\nAll-in-all Maggie was a good-hearted slut. All she ever wanted in life was a brood of kids. She would make some burgher a great wife once she had them. But married life in a small Wisconsin town was my version of the nineth level of Dante's hell.\n\n********\n\nMy knowledge was expanded a lot in the time that I spent in that big brick building on Broadway Avenue. Those studies pushed my worldview up a couple of centuries, right to the leading edge of American journalism. Now, my domain was Runyon and Winchell, Lippman and Grantland Rice.\n\nOf course, shining above them all was the newspaperman turned novelist Ernest Hemingway. I wanted to be just like Ernie and my profs thought I showed promise. So, I had my choice of jobs when I got out of Columbia.\n\nI opted for a \"foreign correspondent\" role at the Post. That was how Hemingway paid his way while he was writing The Sun Also Rises in Paris.\n\nThe New York Post was the liberal rag of the era featuring articles from the likes of Elanor Roosevelt and Drew Pearson. But everybody's interest was focused on what was going on in Europe. As far as I was concerned, that was the place for an aspiring young man to earn his spurs.\n\nI arrived at the Southampton docks on the Aquitania just in time for the London Blitz. I was lucky that way. Most people wouldn't like spending their nights sleeping in a subway tunnel. But I was there to get the scoop and so I began doing personal interviews with my fellow denizens of the Underground and then wiring those pieces back to the AP and Wechsler, who was my editor at the Post.\n\nThe people in my home town would have cared less about the subject of my stories. But those folks were still living in the nineteenth century. The Manhattan crowd loved what I was writing, and I was beginning to get a solid reputation as a reporter. I was twenty-three years old, living in a little flat in Russell Square and totally full of myself when my life took another turn.\n\nWe'd go down into the tube stations every day around dark. That's when the He 111s would show up. The \"whump!!\" of the QF 3.7s was like an alarm clock, telling us it was time.\n\nIt was a rainy late November night, and I was hunting for a likely target to interview. I concentrated on old folks and mothers with children. Their stories resonated the most with the liberal readership of the Post, who loved to revel in other people's misery.\n\nIt happened in a flash. I was making my way through the huddled mass of humanity sleeping or killing time on the concrete floor of the tube. A face looked up at me just as a parachute mine detonated nearby. The overwhelming noise of the blast and the shaking of the subway walls was a perfect counterpoint to the inescapable feeling that my world had inexorably changed.\n\nShe was of medium height for a woman, perhaps five four with a neat little figure in a dark grey button up cardigan and a grey pleated skirt. She was sitting on a tartan blanket with her long, bare legs dangling over the edge of the platform talking quietly to a little boy.\n\nThe Brits produce some of the most adorable children on the planet and this little guy was a model of blond haired, blue eyed choir-boy excellence. He had a helmet of thick blond hair and the face of innocence as he sat there listening raptly to his mother telling him a story.\n\nI sat down next to her and said in my friendliest tones, \"Hi there, my name is Ace.\" She stopped talking to the boy and swiveled her head to look at me. Her eyes said that she didn't appreciate the interruption. She said, \"Do you mind? My son and I would like a little privacy.\"\n\nI laughed and said, \"I'm not making advances Madam. I'm a reporter with the New York Post and I'm telling the story of the Blitz from the perspective of the regular people living through it. Would you care if I asked you a few questions?\"\n\nThe kid said in his sweet little boy voice, \"Oh, could we talk to the man mummy? We'd be in the newspapers.\"\n\nI smiled at the tyke and said with a bit of irony to his mom, \"It'll just take a couple of minutes and you don't have anything better to do - do you?\" At that moment, another parachute mine went off and everybody cowered.\n\nShe smiled back at me. I could see where the boy got his angelic looks, she really had a beautiful face. She said hesitantly, \"All right then -- but I don't see how anybody would find Peter or me interesting.\" Well... the readership might not be interested. But I was.\n\nI didn't need to ask whether she lived locally. The people sheltering in the tubes all lived near that particular station. You didn't want to be running across town to a favorite stop with 250-kilogram bombs raining down on you.\n\nSo, I sat there holding my little notebook while I asked my new friend the usual starter question, where was her husband serving? I just assumed he was serving somewhere. That was an unfortunate question since her husband wasn't serving anywhere. He was buried near Arras, killed during the failed BEF expedition prior to Dunkirk in May of 1940. That was a half year earlier.\n\nBoth of them looked sad. I said, \"Oh my God!! I'm so sorry!!\"\n\nShe made a face that said it all and muttered, \"I need to carry on. I must be strong.\" That was the precise point where my mere interest turned into something far greater. In many ways the woman, reflected the zeitgeist of the British people. She hadn't started the war. But she was going to persevere without complaint, until the people who HAD started it were punished.\n\nI said. \"I'll leave you alone if you want me to. But I think that your story is something that all of the young mothers who have lost their husbands would want to hear. Your thoughts, feelings and your experiences would be important to any woman in a similar circumstance.\"\n\nShe looked at me skeptically. So, I added, \"My aim is to put whatever you tell me into a larger context for the readers back home and I won't publish anything without your approval. But I think that every woman in your shoes would want to know that they aren't alone in this.\"\n\nShe looked at me with wonder and said, \"That's EXACTLY the way I feel. I'm the only widow on our street whose children aren't grown up and I'm so very lonely. The future is frightening.\" Then she added embarrassed, \"I'm not whinging, mind you.\"\n\nShe'd used the classic London slang term for a constant complainer. I asked, \"Have you always lived in the City?\"\n\nShe said, \"I was raised in Shepherd's Bush. But Nigel and I lived in Stepney before the war. He joined the 60th City of London anti-aircraft regiment. We just assumed that would be safer than the trenches. His unit was caught by the Blitzkrieg, and he was killed a month after he left.\" THAT, I thought to myself, is the price we ALL may have to pay some day.\n\nThe woman had been looking sadder-and-sadder as she talked. Then, she burst into tears. Her little boy leaned his head on her shoulder, and they cried together. I was an American. As far as I was concerned this \"European\" war was their problem. But the scene next to me simply broke my heart.\n\nI was also a journalist. I was supposed to remain above it all. Still, the sight of the two of them weeping was so heartrending that I hesitantly put my arms around both of them, the way you would do to a total stranger. I wasn't trying to be familiar. I only wanted to provide some human comfort.\n\nAt my touch, she turned and buried her head in my shoulder crying hard. It was an awkward situation. I lamely patted her on the back saying consolingly, \"There-there.\" Okay, that was pretty inane. But I'm a reporter, not a pastor. I never claimed to be deep.\n\nPeople near us were starting to notice and I was beginning to feel really uncomfortable when she finally got herself under control. She stopped sniffling and I produced a clean handkerchief, which I handed to her. She dried her eyes and those of her little boy and tried to hand it back to me. I said, \"Keep it.\"\n\nShe said apologetically, \"I'm sorry. Sometimes it just gets to be too much.\"\n\nI said, \"It's all right. I'm glad I was here to give both of you a little solace.\"\n\nShe gave me a wan smile and said, \"Jane.\" I looked puzzled and she said by way of clarification, \"My name is Jane, and this is Peter.\" Peter solemnly extended his hand, like a gentleman, and said in his delightfully pipy voice, \"Pleased to meet you sir.\" He was a very polite and well brought up little boy.\n\nThat was when I became self-consciously aware that I still had my arm around his mother's shoulders. I hastily removed it, mortified. She gave me a sunny smile and said, \"It's all right. It felt good.\"\n\nI was going to say something equally meaningful but at that point the all-clear sounded and the entire mass of humanity stood up and began to shuffle toward the exits. I could have sat with this woman all night. Now, the damned Luftwaffe wouldn't cooperate when I needed it to.\n\nWe obviously couldn't just sit there with our feet dangling off the platform. They might start up the Underground if the tunnels were clear. So, we shuffled with them. We got into the street and the entire area was a wasteland. The Huns were dropping parachute mines around Docklands and that night's southeast wind was blowing them up toward Stepney.\n\nParachute mines pack a ton of RDX. Thus, whole blocks were simply gone. One of those blocks contained Jane's little flat. So, there was nothing but a hole in the ground where Jane and Peter's former residence had once been.\n\nThink about it and you might get some idea of how devastating that was for Jane. She'd recently lost her husband and now she had lost everything she owned. So, it was perfectly understandable when she sank to her knees covered her face and just began to wail.\n\nPeter, who was quite the stalwart little boy, gathered his mother's head to his chest and said trying to sound brave, \"It's okay Mummy -- we'll go camp on the green. It'll be a lark.\"\n\nThat simply wasn't going to happen. I'd rented a flat in the Russel Square area for the duration. It was eleven o'clock and the public transport was starting up again. I reached down and gently raised Jane to her feet, ruffled Peter's head and said in a tone of voice that brooked no disagreement, \"You two are staying with me.\"\n\n*****\n\nAnd that is how I met and married Jane Ashworth. I know what you might be thinking. So let me remind you that the two of us and her nine-year-old son were all sleeping in a single room with a pull-down Murphy bed. It was warm and cozy. But it was not conducive to romance.\n\nThe normal argument ensued. I resolved the question by telling Jane in no uncertain terms that she and Peter would sleep in the bed because I didn't want to be tripping over them during any nighttime excursions to the toilet down the hall. I found some spare blankets and a pillow, and it was actually quite comfortable on my thick rag throw-rug.\n\nThe next morning was a perfect November day. I awoke to the smell of coffee. I had been wedged in the space between my desk and the bed all night. I was still in that spot, but the bed was pulled back up and Jane was bustling around brewing coffee on my hot-plate. Peter was sitting cross legged on the floor reading my copy of Ivanhoe.\n\nI propped myself up on one elbow and said, \"That's a pretty hefty book for a boy your age, Peter.\" Jane said matter-of-fact, as she was pouring me a cup of coffee, \"It's his favorite novel. He reads it over-and- over.\"\n\nPeter said with little boy sincerity, \"Yes Sir, I want to be like Robin Hood someday.\" I said, playing along with him, \"Don't you want to be Ivanhoe, the chivalrous knight?\" He said, \"No Sir, I want to help the poor people, not fight battles.\"\n\nI thought to myself, \"Ah, the kid's smart AND an idealist.\" Peter was beginning to get under my skin in a very serious way.\n\nThat could also be said about his mother. Jane had been crushed by the events of last night. But this morning she looked as fresh and lovely as an English rose. She really was a gorgeous woman.\n\nJane's looks were like a Bronte heroine, with a perfectly proportioned oval face, high cheek bones and a cute, pointed chin. She had hazel, almost golden, cat eyes, and a wide mouth that hinted at both humor and passion. Her shining cloak of wavy brown hair hung loosely to her shoulders, so thick that it swooshed back and forth as she moved her head.\n\nI was definitely NOT into carnal assessments. But it was also evident that Jane was keeping an excellent figure hidden underneath her drab clothes. Her hips in her simple skirt were very tight and curvaceous and the bounty underneath her sweater looked promising. But her long legs were her most outstanding feature.\n\nEnglish girls walk a lot and that produces round shapely calves. Combined with her overall leggy appearance Jane was an exquisite woman. But it was her sunny and steadfast approach to life that was her true attraction. Jane was dedicated to making things better for everybody she loved no matter the situation.\n\nThe two of them were dressed in last night's outfits because the rest of their stuff had been vaporized by a ton of RDX. I had a big wad of American cash burning a hole in my pocket and they hadn't instituted clothes rationing yet. So, after my morning coffee I proposed a trip to Marks and Spencer's.\n\nJane said, \"You can go ahead. Peter and I will stay here and try to straighten things up.\" What can I say. I was a single twenty-three-year-old man. So, NATURALLY, my habitat looked like a den.\n\nI said, \"No, I'm taking you two out to get a few things. You can't live forever in the same set of clothes and without a toothbrush.\" Jane went red with embarrassment. Then she got a stubborn look in her eye and said. \"Peter and I can manage without charity.\"\n\nI laughed and said, \"It isn't charity. Call it lend-lease if you like. You need to have a few things if you're going to stay here, and I have more Yankee dollars than I could ever spend.\"\n\nShe said sternly, \"And what makes you think that we are going to stay here?\"\n\nI said, \"Where else are you going to live? Is your family in the area?\"\n\nShe had a forlorn look as she said, \"No, they evacuated to Canada when it all started. My father was in the trenches in the Great War, and he said he never wanted to experience it again.\"\n\nI said, \"So bunk here, at least until you get your feet under you. I'm not around much and I could use the company.\"\n\nI ruffled the boy's hair and said, \"Peter can teach me all about chivalry. I need the lessons.\"\n\nJane was still standing there looking stubborn. But she really had no option. If she were single, she might've still declined. But she was thinking of her son. So, she said, \"I'll let you help us. But I insist on paying you back.\"\n\nThat wasn't going to happen. She was getting a widow's pension of six Pounds a month to meet expenses. But of course I lied and said, \"If that's what it takes to get you to do the right thing then we can work something out.\" As early as that morning I had made up my mind I was going to marry her.\n\nLove done properly is the intersection between attraction and self-interest. And don't bullshit me. You all know what I'm talking about. People fall in love because they find something in the other person that attracts them. But the decision to make it permanent serves their own purposes.\n\nIt might be an altruistic motive like common values, or a sense of empathy. It might be something selfish like status-seeking, or maybe you just like the way they fuck. But one way or another, normal people can tell when they've stumbled on the right person, and you've gotta grab her when you find her.\n\nJane did that for me, and I was beginning to get the sense that I was doing something like the same thing for her. That was encouraging, because even that early, I couldn't envision any path going forward that didn't have Jane and Peter in it.\n\nThe trip to Oxford Street through bomb damaged streets was enlightening. The Blitz lasted from September of 1940 to May of 1941. We know how things turned out now. But nobody at the time had the slightest idea how it would end.\n\nIt was late November, and the City of London was experiencing the worst of it. So, you would expect the atmosphere to be filled with despair. What I saw instead was the kind of communal spirit you'd find in my little Wisconsin home town - not in one of the largest cities in the world. Everybody pitched in to keep the appearance of normalcy, no matter how much physical damage had been wreaked.\n\nLondoners were grimly determined to face whatever the Huns could dish out and they were going to do it together. My thought was that, if Herr Hitler was looking to crush the British spirit, he was going about it in exactly the wrong way. The jaunty attitude of, \"Carry on old chap,\" was so infectious that I wrote about it in my weekly dispatches to the AP.\n\nIt was clear that Jane was humiliated by having a total stranger give her money, even if it were just to get her back on her feet. So, it was fortunate that I'd brought Peter along to reason with her.\n\nPeter was one of those kids who might be a child chronologically. But he was already an unselfish idealist with the vocabulary of a forty-year-old. And he was quintessentially pragmatic. It was like William James had been reincarnated in a nine-year-old boy.\n\nPeter said in his sweet little voice, \"Mummy... Sir is simply trying to be of assistance to us.\" I'd tried to get Peter to call me Ace. But it was obvious that familiarity with an adult figure bothered him. Courtesy and civility were important qualities for the boy. Peter was plainly destined to be one of His Majesty's top diplomats.",
        "So, he and I spent the morning ransacking Marks and Spenser with his mother trailing behind looking humiliated. Most little boys would have spent their time trying to talk me into buying toys and other things for themselves. It was only a month to Christmas. Instead, Peter marched from department to department looking for just the right clothing and other essentials for his mother.\n\nHe clearly took his role as man of the house and protector of his mother very seriously indeed. It said a lot about the boy's bedrock sense of responsibility.\n\nI finally said sternly, \"You need things too Peter.\" He said in an \"awe-shucks\" tone, or as close as a well-brought-up little English boy can get, \"What I'm wearing is acceptable. I might need a few pants, but my shirt and trousers will hold up.\"\n\nIt took me a second to translate that into American. Pants are underwear to the Brits. I gave his mother a couple of bob and told her to take him to the bakery and that I would meet them after I bought some briefs for the boy.\n\nOf course I also loaded up on shirts, sweaters, and a little English longbow with suction cup arrows. If Peter was going to be Robin Hood he needed to start practicing.\n\nWhen I showed up with the loot Peter tried to NOT look overjoyed. But the bow was too much. It was only a simple cheap wooden thing with a string. But it was like I'd handed him six feet of well-hewn English yew, along with a sheaf of bodkin arrows.\n\nPeter's innate dignity finally cracked, and the little boy emerged. It was like the sun breaking through the clouds on a rainy day. He impulsively hugged me and started to say, \"Thank you....\" Then he trailed off. The stark over-familiarity of what he'd done overwhelmed him and he sat there blushing furiously.\n\nI gave him an affectionate chuckle, hugged him back and said, \"That's the nicest thing anybody's done for me. Every guy needs a little boy to hug. It makes it all worthwhile.\"\n\nThe potential significance of what I'd just said wasn't lost on Jane. She sputtered and said, \"You will NEVER replace Nigel.\"\n\nI laughed lightly and said, \"I wouldn't think of it. Peter knows the difference between me and his dad. But I would be honored to serve as his protector and guardian. If you haven't noticed I've grown quite fond of both of you in the lengthy time that we've been together.\"\n\nI said that with considerable irony since it had been just eighteen hours. Nevertheless, I meant every word of it. I was already beginning to wonder what life would be like without the two of them.\n\nPeter was a joy to be around. He was a classically beautiful little English boy with an outrageous intelligence and an inquisitive spirit. Coupled with an old soul's commitment to politeness and civility it was like talking to a miniature adult.\n\nOf course his mother's innate strength and courage and her exceptional beauty might also have had something to do with my interest in them. Any man would be proud to be Jane's partner. She was the complete package of fantastic looks, gracious comportment, and style.\n\nJane was radiating steadfast camaraderie standing next to me while the Underground rattled along, even though she was loudly complaining that I was, \"Doing too much for them.\"\n\nWhat the heck. There was a war going on and the Nazis were bombing the shit out of everybody. You never knew from day-to-day whether you would be around to greet the sunrise. So, I decided, \"In for a penny, in for a pound.\" I looked into Jane's beautiful golden eyes and told her exactly what I thought. It was a decision I never regretted.\n\nCrammed in a noisy and crowded car on the Piccadilly line I said, \"Did it ever occur to you that I'm doing this because I feel a deep attachment to both of you. I don't know why that's the case. I've been footloose and fancy free my entire life. But your happiness and well-being matter to me. Peter is the finest little boy I've ever known, and you are the best friend and companion a man could ever ask for.\"\n\nI could see what she was thinking. So, I quickly added, \"It's not romance, and I have no designs on your body. It's something else. I don't know what to call it. But I already can't imagine my life without you two in it. You fill it with happiness and contentment.\"\n\nI was watching my words disappear down a rabbit hole in her mind. She stood there for quite a while just staring at me intently like a cat, studying my face. I had the totally irrelevant thought that Jane Ashworth actually looked like a cat with her huge eyes and immaculately proportioned face.\n\nFinally, she said, \"Ever since Nigel died, I have reconciled myself to being alone. Peter might give the appearance of a strong and well-adjusted child. But he is just a noble little boy putting on a brave front because he doesn't want people to see the grief he is experiencing.\"\n\nShe added, \"Nigel instilled the importance of self-discipline into his son and what you are seeing is Peter honoring his father. Peter also knows how much I miss my husband and he is trying to protect my feelings by not openly grieving. He was born self-sacrificing. That is the sort of person he is.\"\n\nThat last comment was extremely insightful. Most women couldn't see past their own loss, to appreciate their child's deepest feelings. Jane finished with a tear in her eye, \"My dear little boy is hurting. But he is carrying on like a brave little soldier.\"\n\nThen she added with affection in her voice, \"However, I have seen a change in him in the short time that you have been in our lives. He seems almost hopeful now, like he can see the way forward. You've done that to him by being so relentlessly optimistic.\"\n\nJane added earnestly, \"Maybe it's because you're a Yank. But there's no doubt in your mind that there is a future for all of us. We just have to get through the present bother. So for that reason alone I can assure you that Peter and I have the same feelings about you.\"\n\nThat was as much as I was going to get. I looked a little disappointed, so she hastily added, \"I'm not in love with you.\" I looked even more disappointed. She laughed and said, \"Give me some time. We've only known each other for a day.\"\n\nThen she stopped and gazed at me with her uncanny cat eyes and said, \"But you are handsome and strong, and you make me feel safe. So, I can see myself staying with you and sharing the burden of life together.\" Then she added with a puckish smile, \"Give it two more days and I might even decide you're Prince Charming.\"\n\nThat was how Jane, and I became a couple... and Peter made three. We spent a happy holiday season in my little flat. There was no Christmas tree. But I found a potted fern lying in the middle of a bombed-out street and Jane decorated it with popcorn on a string. On Christmas morning, there were two good waterproof winter coats lying under that \"tree\" for both Jane and Peter and we even went to St Brides for the service.\n\nThe flat was way too cozy for three people. It was tight for one. So, in the new year I went hunting for something more appropriate to my new family. That led me to a nice little semidetached off Kensington High Street.\n\nIt took everything I'd saved. But who cares about money in a time of war. I was getting a basic Associated Press stipend and hazard pay from the Post. So money was not a problem. And I could afford a place as nice as the one we'd found because Herr Hitler had done a good job of depressing the real estate market in 1941's cash-strapped London.\n\nThe Huns were bombing the London docks, not the West End. And when they DID show up it was probably by accident because the bombing was strictly hit and miss. Moreover, after Christmas, the RAF looked to have bled the Luftwaffe enough that those raids were becoming much less intense. The important difference was that Peter now had a bedroom. So, Jane and I had one too.\n\nLife in the city was more-or-less proceeding along the same lines as it had pre-war, and people were seeking the reassurance of human contact. The pubs were open, the nightclubs were in full swing and attitudes about sex had come a long way since Victoria's day. So, there were a lot of casual hook ups during that time.\n\nJane and I were the exception, and it was because our reason for being together was more domestic than romantic. Alone is not a natural condition. Humans are pack animals. It was our ability to cooperate that ensured our survival. Which is why the need for other people is part of our DNA. And as a result, humans naturally form family groups.\n\nThat was what was happening to Jane, Peter, and me. The problem was that Jane, and I hadn't fallen in love and had the child together. Instead, we met in an Underground bomb shelter well after that fact. So, all of our bridges had to be built on the fly.\n\nOver time, the day-to-day intimacies and accommodations that underlie a couple's life together were slowly beginning to jell. But the last thing we needed was the added volatility of a sexual relationship. We had to discover who we were as a couple in order to trust each other enough to safely commit to that.\n\nHence, even though it had been almost six months since I'd stumbled on them, Jane and I were sharing the same bed out of necessity, not romance. In fact, although we had slept together for almost two hundred nights, I had never as much as seen Jane in a state of undress. We would lay next to each other, and I could sense her yearning. Even so, Jane was still grieving the loss of her husband.\n\nThe Blitz petered out by the middle of May, and I had to work to hunt up stories. I filed the usual human-interest stuff, just to meet my deadlines. But the Brits were being chased around North Africa by a guy named Rommel. So, that venue was where all of the action was.\n\nI could have gotten posted to Egypt. But I simply didn't want to leave Jane and Peter. Then the situation changed dramatically. The German battleship Bismarck broke out into the North Atlantic and for six days in late May it was the story everybody wanted to hear.\n\nI had been hanging around outside the Admiralty trolling for story lines when I ran into Rupert Perrin-Smythe. He was on the Admiralty staff. Success in reporting lies in your ability to develop sources and I'd been carefully cultivating Perrin-Smythe over the past four months. All the pints that I'd bought at the Clarence paid off in one slip of the tongue.\n\nThere had been a buzz going around Trafalgar all day and I wanted to find out what was causing it. So, I snared him at Admiralty Arch and said, \"What's happening buddy? Why so much hush-hush?\"\n\nIt was raining hard. But Perrin-Smythe stopped for a minute distracted and said, \"Got to rush Mate. The Bismarck is loose in the Atlantic. It sank the Hood last night and Winnie's beside himself.\"\n\nThat piece of information was all it took to promote me from ink-stained wretch toiling in anonymity, all the way up to Ace Scheffler WAR CORRESPONDENT. I broke the story on the AP wire later that day and stayed on top of it right up to the point where HMS Rodney and the King George V caught that steel monster and beat it to death 400 miles west of Cherbourg.\n\nMy byline was attached to a historic moment for all the readers in the States. Hence, like the other lucky news hounds who'd broken big stories, including Churchill who got his early fame reporting about the Boer War, I was promoted to a new class of reporter and the Post immediately shifted my assignment from human interest to covering all the major events of the war.\n\nMeanwhile, I was sure that Jane and I would have tied the knot if it weren't for Peter. And let me stop you right there!! Peter clearly wanted me as his step-father. That wasn't the problem. But his mere presence lowered the romantic ambiance to a point where we couldn't initiate anything.\n\nOf course his presence was also a joyful experience. Prior to getting to know Peter, I thought that kids were a pain in the ass. But Peter was such a polite and loving little boy that I cherished him as much as his mother, which at that point was saying a lot.\n\nEvery guy needs a small person who wants to be just like him. And Peter clearly worshipped the ground that I walked on, right down to developing a bit of an American accent. Things like that just made my heart do flip-flops.\n\nThe news from the battlefront died down after the Bismarck episode and I was able to be around the house a lot more. Jane was an excellent homemaker, and she kept our little place neat and tidy while, I popped back and forth on the Circle Line between Kensington and Whitehall, looking for stories.\n\nOur relationship had blossomed to a point where we were like an old married couple now, except for two things. We had not gotten the official certificate, and we had still not had sex.\n\nI realize that sounds incredible. You would have to know Jane to understand why it was the case and why I put up with it. Physically, Jane was sex on a stick, an exquisite little body, and all of the sensual energy of a film noir femme fatale. But she was constrained by her upbringing and her principles.\n\nPromises meant the world to Jane. Her entire value system was built around staying the course, being steadfast and loyal. The problem was that she had made a commitment to a dead man.\n\nNow, some of you might say, \"There has to be more to it than that. The woman couldn't still be trying to be faithful to a man who was no longer with us. But Jane had made a vow and she was dedicated to honoring it... since her promises didn't come with exceptions or an expiration date.\n\nRealistically, Jane's obligations ended when the Army buried her husband. But in her mind a pledge was a pledge and although it was clear that she loved me at least as much, or perhaps even more than her dead husband, she was still wrestling with the \"Forsaking all others,\" aspect. That was the case even though \"Until Death do us part\" had already been fulfilled. That was the sort of person Jane was.\n\nThe other problem was that Jane and Nigel had been childhood sweethearts and so, she was never close to any other man as she grew into womanhood. Therefore, even though Jane had plenty of experience with sex. She had never had the opportunity to share her sexual feelings with anybody other than her dearly departed husband.\n\nSo in some respects, Jane was still a virgin when it came to intimacy with another man. And she struggled with self-consciousness whenever we started to get close. I sensed her conflict, and I was more than willing to wait. She was a perfect partner and helpmate in every other aspect of our life together.\n\nI accepted that he woman was still wrestling with intimacy issues. It spoke volumes about her values and personal integrity. Likewise, from the little cozy touches and longing looks I could tell that she was starting to come around. I just had to be patient.\n\nWe'd enrolled Peter in the local council school where he was its best pupil. In fact he was so exceptional that the people who ran his school told us that we should think about getting him into a public school where his obvious intellectual capabilities could be developed to their true potential.\n\nI was as proud of Peter as any father could be, even if he weren't strictly mine. Then, one Monday morning Jane and I were talking about what to do about him when the telephone rang. It was Wechsler on an international call from New York. The call had arrived early on a Monday morning. Which meant that he was calling from New York at 3AM Sunday night.\n\nWechsler was more manic than usual, and Jim Wechsler was a man who was always in a state of extreme agitation, Germany had invaded Russia and he needed somebody who spoke German in Berlin forthwith. He told me that the arrangements for my getting there were being put together as we spoke, and I was to get my ass down to Fleet Street to pick them up pronto.\n\nI was about to argue when he abruptly hung up. Of course, there was no turning down the assignment. I cursed those old Wisconsin farmers whose clannishness had made me fluent in Deutsch. By the afternoon I had ridden the District line down to Chancery Lane and returned with all the necessary travel paraphernalia. It was going to be a long and complicated process.\n\nI obviously couldn't just hop a flight to Berlin. That would have gotten me shot down, since the only British aircraft flying to that particular location were loaded with bombs. Instead, I was to take an American freighter from London to Bilbao, Spain.\n\nSpain was neutral because Franco had had the sense to stay out of the big one. From there, I was to hop a train across Vichy France to Geneva, and I could take the express to Berlin from Switzerland. The journey would take me a week and Wechsler was chomping at the bit.\n\nI was leaving on the tide the next evening. I think Jane must have had flashbacks to Nigel going off to war because that was the night that the wall finally came tumbling down. She had been acting oddly all afternoon. I thought it was because she was worried about how she would live now. Boy was I wrong!!!\n\nI had told her that the Post wired my pay directly to our bank and she was on all of our accounts, so she and Peter's welfare wasn't going to be a problem. I hadn't told her that I'd also left her all of my worldly possessions. Telling her that I'd made a Will would have introduced too many bad memories.\n\nJane and I slept in the front bedroom upstairs and Peter in the back, overlooking our little garden. We also had a room downstairs in the front that I used as an office. It was late at night, and I was working on the last of my travel arrangements.\n\nI was just putting my Royal Quiet Deluxe portable in its carrying case when Jane suddenly appeared. She was wearing her ratty old robe. She quietly closed the door and made a shushing gesture as she walked over to me, her golden eyes radiated fire. I stood to meet her, puzzled. She grabbed the back of my head and pulled my face down to hers for a scorching open-mouthed kiss.\n\nI held her hard little body to mine and we kissed like we had never kissed before. Jane's lips were alive working frantically, not just pressed against mine. It was an incredibly simulating sensation. I broke the kiss and looked into her deep intelligent eyes. She was looking back with an intense stare that told me that she'd made her decision.\n\nI dove back in for another incredible kiss. Her mouth, tongue and lips were constantly moving, pulling, and probing even nipping. I remember thinking that if the rest of her performance was as animated as her kisses, I was in for a very wild ride indeed.\n\nAs we kissed, I began to caress her from her tiny nipped in waist down to her rock-hard flank. Every part of her was moving in little erotic flexes and quivers. It was like she was vibrating with carnal energy. My stroking of Jane's little round buns set off a series of full-throated moans.\n\nI knew why she had ambushed me in the office rather than upstairs next to Peter's bedroom. This was going to be noisy. Jane's entire body was like a live-wire now, fizzing with sexual electricity. Her reactions to being touched were both spontaneous and extreme.\n\nIt was clear that she really FELT it and I hadn't actually explored a single erogenous zone. I finally understood why Jane had been struggling. Her wild reaction to stimulation told me that there was a very sensual woman underneath all of that English reserve.\n\nShe parted the robe, and she was naked underneath. I broke the kiss and looked at her au-natural for the first time. Standing there in the dim glow from the blackout light, Jane had perfect feminine proportions. She had very firm and round boobs. With pronounced upturned nipples a flat stomach, over full and fruitful hips. In short, she was an absolutely exquisite little doll of a woman.\n\nI squeezed a nipple. It was red hot as I took it between my fingertips. I tweaked it and that set her off like a skyrocket. She let out a loud guttural groan. Her eyes rolled up in her head. And in a strangled tone of voice she said, \"Make love to me!!! You have to do it NOW!!!",
        "Those were the last coherent words I heard from Jane for the next forty-five minutes. She collapsed flat on our little daybed, frantically humping the air as I struggled out of my clothes. She was obviously not interested in the subtleties of romance. She was so hot that her hands disappeared between her legs. she was going to get right down to the main event -- with, or without me.\n\nI actually had another one of those weird hesitations when I asked myself, \"How could somebody so reserved be so abandoned?\" Thankfully, my little voice said, \"Stop dithering you pussy and fuck her!!!\"\n\nI moved between her legs. She grabbed the back of her knees and pulled them into an exaggerated \"V\", elevating her hips in perfect position to be penetrated. All the while she was silently fixing me with the hottest stare. It embodied both arousal and challenge in a single look.\n\nI plunged into a mass of velvet lava. She let out a shriek of pure pleasure, slammed her legs around my waist and ground her heels into my ass -- in effect pulling me deeper inside of her.\n\nThen the age-old motion began. This was fucking without tricks. It was pure primal mating. Jane was making extreme effort noises, Ugh-ugh-ugh-oh-oh!!! When she wasn't doing that, she was moaning and crying out with unbridled lust.\n\nShe was soaking wet, and her sex pheromones triggered something at the base of my lizard brain. It felt like my adrenal glands dumped at once. In fact, I was in such an adrenaline-fueled frenzy -- that I was pounding her without even thinking about whether I was hurting her.\n\nAll that did was inspire Jane further. She had her arms in a death grip around my neck and her legs were clamped to my waist while she made deep feral growls and screeches like a mating cat. We just beat on each other snarling and yowling for at least twenty minutes.\n\nI had never lasted that long -- at least at the outrageous speed we were humping. It was like a high-frequency machine going kachunk-kachunk-kachunk at a super-fast rate and Jane took everything that I was dishing out and begged for more. The odd part was that I didn't even think about cumming. The sensations -- the sounds and the smells were just so profound.\n\nFinally, Jane began to spasm like she was having an epileptic seizure. Her mouth contracted in a rictus of pure sensation as her passage went nuts around me. She uttered a high-pitched shriek that probably only dogs could hear, and abruptly slammed he legs down hard on the bed. Her heels beat a tattoo on the mattress as she processed through the orgasm.\n\nJane's contractions felt like she was milking me with her hands, not her pussy. And while all that was going on down there -- the rest went completely limp. And I still couldn't cum. So I dragged her dead body roughly over to the edge of the bed and laid her face down and reentered her churning passage.\n\nShe moaned weakly. I began to pound her incredible ass in all of its jutting springy glory. She was making weak attempts to raise it to give me more leverage, which flamed her desire again. Then, it was like somebody lit the proverbial match in the fireworks factory.\n\nWhile I was walloping on her, she began to grunt with effort and push back as hard as she could. Her moans were continuous and so loud that I was afraid she would wake Peter up. She had a grip on the sheet like she was trying to tear it in half.\n\nJane was whipping her thick mane of hair back and forth in a frenzy and urging me on with wails of, \"Come - Come in me PLEASE!!!\" Then the sheet actually ripped as an orgasm of epic proportions rocketed through her and she emitted an unearthly scream of -- \"OH MY GOD!!! CUMAGAIN!!!\"\n\nMy orgasm hit at that point. And it felt like it started from somewhere over the rainbow. I came so ridiculously that I saw the proverbial stars.\n\nThe next several seconds were more like a near-death experience than a post orgasmic recovery. I slid limply down her well-muscled but very sweaty back and landed on the floor. I feebly turned and propped myself against the bed. I was panting so hard that I was sure that I was going to pass out.\n\nIt appeared that Jane had actually lost consciousness - since she was lying there as if she were dead. I finally got some sanity back and stood up to attend to her. She was face-first in a big puddle of drool, breathing hard, her arms extended in front of her -- hands still clutching the ripped sheet.\n\nI was just leaning down to her when she popped one eye open and said with wry humor, \"I imagine that shocked you. It certainly astonished me. I've never been that wanton in my life. You have to understand that when I love, I commit everything. This is the gift I give to you.\"\n\nThen she added casually, \"So, I guess that puts us on the path to marriage if you want me.\n\nWant her!?? Seriously?!! I said equally dryly, \"Well then... get me to the church on time... TOMORROW.\"\n\nWe were married early the next morning. It was in the aptly named Our Lady of Victories church around the corner on the High Street. We weren't Catholic but Father Brown had been in the trenches in the Great War. So, he understood our predicament and he waived all of the Church's requirements. It was just Jane, me, the Father, his ward Bunty, and Mrs. McCarthy the parish secretary, as witnesses.\n\nJane and I shared a \"Best Man\" who also happened to be the most capable nine-year-old in captivity. Peter was in his \"church\" suit, his shining helmet of blond hair neatly combed and his beautiful little face a study in romantic chivalry as he presented me with the ring. I had purchased it a mere three weeks after I'd FIRST met Jane, because I knew that this moment would eventually arise.\n\nPeter gazed worshipfully at me as he did it. He just radiated inherent joy. I didn't think my love for him could be any greater. Peter must have been a very lonely little boy, without a father.\n\nJane was gorgeous in an understated but expensive Jersey blue dress. It clung in all the right places on her hard little body. We had bought it in anticipation that she would eventually need something formal to wear. This particular event was what we had in mind.\n\nFor all the time that I was slipping the ring on Jane's finger, she was staring intently at me with her golden eyes. They were communicating her intense dedication and devotion to me. I tried to reflect back to her how much those gifts meant to me.\n\nThen it was over. In less than a year I had gone from \"lone-wolf newshound\" to \"married man with a family\" and I couldn't have been happier, or more content.\n\nWe had a celebratory lunch at the Goat Tavern and then we went back to the house to get my things. I had splurged on a taxi to take us down to the Pool of London, where my ship was loading. It would take Jane and Peter back home once I'd boarded.\n\nI was going to be in Berlin for an indeterminate time. So, our situation was no different than the last time Jane had seen a man off to war. She knew that I would move heaven and earth to get back to her. But she still looked terrified.\n\nPeter was struggling to live up to the courageous standard that he always held himself to. But when it was his turn, he started to weep. I embraced my brave little man and said, \"I'm coming back. So, keep your mother safe in my absence.\"\n\nPeter dried his eyes and gave me a guardsman's stalwart look. He said, \"Certainly,\" and then he hesitated and said shyly, \"Is it alright if I call you Father?\"\n\nThat brought a tear to my eye. I grabbed him in a hug and said, \"There will never be a man prouder to be called father by you - son.\"\n\nWe both hugged for a few seconds and then the intelligent and gracious soul that inhabited that little boy's body took back control. Peter straightened and said, \"You can count on me Father.\" Ivanhoe himself couldn't have looked more noble.\n\nI picked up my gear and trudged up the gangplank. I turned at the top to wave back one last time. They were standing together looking as steadfast as ever. They waved back and then the two of them turned back to the taxi. The last I saw of them was the cab disappearing behind a warehouse with Peter's face pressed against the back window.\n\n*****\n\nThe Berlin that I arrived in was like Imperial Rome with swastikas. The buildings were monumental. The atmosphere reeked of self-importance and spectacle and the Nazis had turned the entire city into a personality cult.\n\nPictures of party luminaries, particularly Hitler, were everywhere, and red, white, and black flags decorated everything. The legendary thoroughfares like the Unter den Linden and Friedrichstrasse hummed with traffic and excited crowds were going about their business like there wasn't a war going on. Even the Tiergarten was open.\n\nI arrived at the Anhalter Bahnhof on a Wednesday morning after a long and unexpectedly comfortable overnight ride from Munich. The Associated Press had booked me into the Hotel Kaiserhof on the Wilhelmplatz because it was just a hop-skip-and-a- jump over to the Reich Chancellery.\n\nHoward K Smith, who was one of Murrow's boys, and the United Press's Dick Hottelet were there too - more-or-less. Hottelet had actually been in the nearby Moabit jail for most of the time prior to my arrival. He had started reporting the things the Nazis were doing to the Jews and in response Himmler locked him up on an espionage charge.\n\nFDR eventually got Hottelet out and Dick then departed for more civilized climes. But the stories he told about the time he spent at the pleasure of Herr Himmler and the Gestapo served as a clear warning to me to NOT get caught wandering out of bounds. The Nazis had their ways of dealing with free thinkers.\n\nI was a new arrival carrying Associated Press credentials, which got me an audience with the Minister of Propaganda, Josef Goebbels himself. I walked into a huge ornate office that featured floor to ceiling windows. There was a desk with what appeared to be a kid in a miniature Nazi uniform sitting behind it. Thank God I didn't laugh because it was the Reichsmarshall himself.\n\nGoebbels was a shrimp at five-foot-four. So, he stayed behind the desk to play down his lack of physical impressiveness. He also seemed to be sitting on a phone book, or something, to make him appear less comical.\n\nOur meeting was an hour long. During that time, the demented little goblin haranguing me about the Nazi's \"final solution\" for Jews, communists, and anybody else who wasn't properly \"Aryan.\" I didn't remind the wee fellow that he, Hitler, Himmler, and that fat pig Goering weren't exactly the Nazi ideal because I had heard from Hottelet about the \"camps\" that people who spoke the truth got sent off to.\n\nIt was high summer in the Third Reich, both in terms of the weather and also the way things were breaking for the Germans. They had truly surprised the Russians and, by their own account, were eating up the miles to Moscow. And the Reich's Chancellery was on a mission to convince the people in the U.S. that they should stay out of the war.\n\nHitler had been in the front lines in World War One and he knew what had happened when the Yanks showed up. So, I got daily briefings about how powerful the Wehrmacht was and its many easy victories. I didn't bother sending that crap to Wechsler, since I knew it was all part of the Big Lie.\n\nHitler coined the term in his book Mein Kampf. But it was Goebbels who sold it. The Big Lie works because of its absurdity. You claim something that's so nuts that no sane person would even THINK about making it up. Consequently, it must be true. Then, you reinforce the lie by having the Gestapo haul off anybody who says otherwise.\n\nIt was a masterpiece of brainwashing on the most hideous scale. And it's the reason why regular Germans were able to live next door to death camps and not think twice about what was going on inside them.\n\nBut still, I couldn't file the things I actually saw. The Gestapo read everything I sent down the AP wire and of course they'd feel obligated to \"correct\" any mistakes. They were also making the point that they were monitoring my personal mail and listening in on all of my phone calls. So, I could either write Nazi propaganda, or find another story.\n\nI'd kept the fact that I spoke German to myself. It gave me the advantage of being able to listen in on conversations, because it never occurred to the Germans that an American was adept in their language. But I wanted to do some actual reporting. So, I used my fluency to get back to my old human-interest days and I began interviewing regular citizens.\n\nI had the idea that ALL Germans were Nazi fanatics. Instead, I learned from my interviews in the cafes on the Friedrichstrasse that Berliners were no different than the folks in my little Wisconsin town. They just wanted to live their lives. And since Nazi rule held no negative consequences, they didn't care who was running things.\n\nBerlin was still lit up like a county fair at night. Sure, the RAF would appear once in a while to drop a few bombs. But those were minor annoyances compared to the destruction that the Luftwaffe was wreaking on London. None of them could foresee the smoking shell their city would turn into in four years.\n\nI'd made a few acquaintances over the six weeks I was in Berlin and one of them saved my life. Kurt Ediger was a translator for us American newsies, which actually meant that he was a low-level Gestapo functionary assigned to spy on us.\n\nHe'd been a Berlin cop prior to the Nazi takeover and his transition to the Gestapo was an administrative maneuver, not ideological. In fact he hated his bosses.\n\nI was just waking up one bright day in the middle of August when there was an urgent pounding on my hotel room door. I staggered over to open it and there was Ediger. He pushed me back, stepped inside and quickly closed the door.\n\nHe said in German, \"You have to get out of here!! They're coming to arrest you.\"\n\nI was still foggy. I said, \"Whut??!!\"\n\nHe said, \"It's those interviews. They know you speak German.\"\n\nIt took me a second to realize that he had just said that in German. We'd always communicated in English before, since that was supposedly all I spoke. Then it hit me right between the eyes. One of my interviewees had grassed me to the Gestapo!!\n\nI thought anguished, \"What in the world was I doing??!! They're going to think I'm a spy!!\"\n\nI dressed hurriedly and hustled downstairs to find a cab. I didn't bother to take anything with me because I knew that I had to get out of Dodge fast. I was hatching a plan as the taxi made its way through morning traffic to the Berlin Hauptbahnhof.\n\nThe Gestapo would find me gone. So, they would be watching every train headed to Switzerland. That was the way Americans normally exited the country. Hence, I had to come up with a different way out, which reminded me about Denmark.\n\nThat country was one of the Nazi \"protectorates\" meaning the King was still nominally in charge and the Gestapo didn't have the authority that it had in the Vaterland. The ride to Copenhagen was a lot shorter than taking the night train all the way across Germany to the Swiss border. So, it was a no-brainer.\n\nAs soon as I got to the Bahnhof I strolled casually up to the counter and bought a ticket on the morning train to Hamburg. It was leaving right away which was an advantage. But it was mostly full. So, the best I could do was second-class. That meant that I would likely have to stand.\n\nNevertheless, standing up all the way to Hamburg certainly beat being interrogated by the Gestapo. So, by running along the platform I just managed to hop on the last car as the train was starting to roll. The ride to Hamburg was a half day. As I'd suspected, the car was packed. I stood for a while. Then a seat opened, and I beat a fat burgher to it. Sherman said it best, \"War is hell!!\"\n\nThe trip to Copenhagen originated at Hamburg and I managed to snag a first-class ticket. It was the middle of the night, and I was snoozing as the train reached the Danish border. It came to a jolting stop and there was some loud Teutonic shouting and a lot of blinding steam. Then it started up again.\n\nI didn't need to be a genius to figure out that the Gestapo was on board. They were working their way through the cars as we pulled into the outskirts of Padborg on the Danish side of the border. As soon as the train slowed to walking speeds, I opened the door of the carriage, jumped out, and rolled down an embankment.\n\nI could hear my companions in the first-class cabin yelling for the Gestapo. But I had already slipped off into the railyard and it was still dark. It was a huge place and as I worked my way across the yard I looked back and could see flashlights crisscrossing the area where I had last been.\n\nI hid out in a switch house next to a road until I could see well enough to find a bus stop near the station. I had plenty of Reichsmarks and they spent just fine in Denmark. So, it was a short hop over to the main bus station in Padborg and thence on the early morning coach to Copenhagen. It had been a remarkably easy escape, probably because they expected me to run in the normal direction.\n\nThe Gestapo didn't monitor the phones in Denmark, and I was able to get ahold of Wechsler on the AP line, collect. I explained my problem to him, and he told me to wait while me made some calls. I called him back a couple of hours later and he gave me the name of an American freighter in Copenhagen harbor.\n\nThe trip back to London took a couple of days. But Jane and Peter were waiting as we docked. I was delighted to see them. Wechsler must have told them that I was coming because there was no other way they could have known.\n\nAny form of communication except telegrams was tough in those days and with the war on it was almost impossible to call long-distance. The AP had a dedicated transatlantic circuit, being a news organization and all. But short of breeding carrier pigeons there always was a two-week delay getting news to any regular person. That lag time turned out to be significant factor later on. But I digress.\n\nNeither Jane, nor Peter, were into unseemly displays of public affection. They were English after all. So, they didn't rush up the gangplank to greet me. But I could see that Peter was literally prancing with eagerness and Jane's face was a mask of tears.\n\nI hugged her hard little body to me, and we kissed deeply. Then I dropped to one knee and hugged Peter. I said, \"I had to leave a little suddenly. So, I didn't bring you anything. But I DO have some interesting stories to tell.\"\n\nThose stories were the unfiltered scoop about the main topic of conversation of the day, which was, \"What's going on in Nazi Germany?\" I mean -- I'd BEEN THERE and seen it firsthand. So, my reports were front-page news both in the U.K. and in the U.S.\n\nPeople in the States were afraid that the U.S. might get sucked into the morass in Europe and my observations about the conditions inside the Third Reich generated massive circulation.\n\nMore pertinently, I'd become part of the story itself due to my sudden, and rather unorthodox departure from the Reich. Everybody wanted to know the details of my daring escapade. So, I got a contract from the AP to do a series of articles about it.\n\nThat put me and my family on easy street. It wasn't Hemingway, or Fitzgerald money. But it was a substantial sum. The first thing I did was set aside a large chunk of that for Peter.\n\nHis tests kept coming back \"genius\" and we wanted him to get the best education possible. We weren't going to send him to Eaton or Harrow, even though I could afford it. But we lived a short distance from Imperial College and there were plenty of starving graduate students who we could hire to tutor him.\n\nPeter was very special to me. He might have been another man's kid. But he clearly loved me, and he was so eerily similar to me that the old adage about nurture over nature seemed to fit.",
        "I lived in my head when I was a kid. Peter did too. I liked it up there, even if it DID make me seem a bit absent minded and aloof. Later on people would use the term \"alienated\" to describe the condition. I honestly don't know what it was. All I knew was that I didn't care what other people thought and I was certainly not interested in any aspect of their humdrum lives.\n\nCall it arrogant if you like. But honestly, I wasn't judging anybody. I simply didn't share the interests and values of the people around me, and my imagination let me soar past the limitations of my situation. I was comfortable in my own world, and I had no intention -- or perhaps I was incapable -- of changing. It was an addiction. Consequently, I understood my odd little son's foibles better than anybody else.\n\nPrior to meeting Jane and Peter I was tied to nobody, and nothing. I could go anywhere and observe without getting involved in the situation. If that describes the perfect temperament for a reporter, then so be it. Still, it made me come-off like a loner.\n\nOf course Jane and Peter's arrival completely altered those circumstances, and, in my mind, it was for the better. Now I had a life companion, an equal who I could share that worldview with.\n\nJane was stunningly attractive, an exquisite little doll of a woman with a sex drive that would satisfy any man. But those physical qualities were such a minor part of the person I loved that they are hardly worth mentioning. It was Jane herself.\n\nWithout knowing anything about my wife's interior landscape I sensed that there was a lot more going on inside her head than she was allowing anybody to see. I mean... Peter had to get that IQ from somebody and by all accounts Nigel was just an ordinary bloke.\n\nLike me, Jane had a love of ideas and a wide-ranging imagination. But unlike me she had non-negotiable principles. I never thought about right-or-wrong. I just did my job. But Jane really believed in the importance of abstract things like civility, courage and commitment and she had transferred all of those ideals to Peter.\n\nOf course Peter's native intelligence was fertile soil for those concepts to flourish and blossom. Peter was a certified genius, all the tests said so. But it was his innate seriousness, his dreamer's mindset and his romantic soul that set him apart from the other little boys.\n\nAt age ten, he should have been out on the sidewalk getting into trouble, not hanging around in the house reading Scott, Kipling, Stevenson, Burroughs and even H.G. Welles. But the worlds that those authors had created were the places where Peter wanted to be.\n\nThat's not to imply that my son was some kind of namby-pamby weakling. He was taller than most boys, and physically gifted. So, there wasn't any sport that he didn't excel at. It was humiliating to be beaten by a ten-year-old in tennis. He was a streak of greased lightning as a winger in Rugby and he could deliver a leg breaking spinner in cricket that adults couldn't hit.\n\nIt was just that Peter had no interest in competition, except when the school made him do it. He was happiest when he was exercising his brain. I was just like Peter when I was that age, too busy with my writing to do any sports. Hence, there was no doubt in my mind that he was my boy.\n\nI think it was our shared nature, call it intelligence if you like, that was the glue that bound us so tightly to each other. But whatever the reason, I was raising a young man who wanted more than anything else to grow up to be just like me.\n\nA little boy's love is a huge boost to any man's ego, and it made my life very happy. Consequently, I'll always believe that the best thing that ever happened to me was to run into Jane and Peter that night in the Underground bomb shelter.\n\nAnd that was the way it was right up until December 7th, 1941.\n\n*****\n\nThings accelerated a lot once the U.S. got into the war. At first it was just the demand for stories about the arrival of the first American units in the U.K. I also made a number of new acquaintances in the press corps as American correspondents flooded the place.\n\nSome were draftees, college kids like Andy Rooney, from Colgate and Walt Cronkite, right out of the University of Texas. Others were seasoned professionals who were there because that's where the action was, like Martha Gellhorn and Ernie Pyle. Both of them were veteran war correspondents. In fact it was Gellhorn's flaming affair with Hemingway during the Spanish Civil war that broke up his marriage.\n\nI wasn't in Gellhorn, or Pyle's league. But I was exempted from the draft because I'd been reporting on the war for almost two years, and I was still a minor celebrity due to my unceremonious exit from the Reich. Still, my draft exemption didn't stop me from becoming part of the military.\n\nI didn't mind that at all because it gave me GREATER access. And since we were embedded, we got our own uniforms. They looked like an American officer's, except there was a patch that said, \"War Correspondent.\" So, I frequently found myself on the receiving end of salutes although I wasn't officially an officer.\n\nFebruary to May, I covered the arrival of Army Air Force units. The strategic bombing campaign was still a month away, but I was filing stories almost daily about the preparations. I'd take the train up to High Wycombe in the morning, do interviews and return on the evening train to write them up and file them.\n\nThen, once the Mighty Eighth got to work all of us correspondents would take a different bomb group and interview the crews when they got back. That brought on a lot of survivor's guilt because one or two crews a mission never returned.\n\nI don't know who came up with the idea, but we all decided to experience a bombing raid. Jane told me that I was an idiot. She'd already lost one husband that way. Peter thought it was the most exciting adventure he'd ever heard of.\n\nReporters weren't allowed to carry weapons. But we all had to do a short intensive stretch at gunnery school in case they needed us in the air. I took a couple of.50 caliber shell casings back for Peter. He was thrilled.\n\nAs I was climbing into my assigned B-17 that morning, I thought to myself, \"What the fuck am I doing here??!! I'm scared shitless.\" But I'd gotten to know all those guys and they were doing this every day. So, I felt like I owed it to them to try it at least once.\n\nThey situated me in the middle of the aircraft with the waist gunners. The flight engineer was temporarily back there too. He manned the top turret on our flying fortress. So, he was up front with the pilots while we were over enemy territory.\n\nThe ball turret gunner was with us too, until he had to squeeze into his infernal contraption. Ball gunners always waited until we were well into the air before they mounted up because an engine failure on takeoff would have produced a long red streak.\n\nThe mission was considered to be a \"milk run\" in military terms. Just over the sub pens at Lorient and Saint-Nazaire. The German fighters were concentrated over the Reich. Thus, the only hazard was flak.\n\nThey'd given me an armored flak vest. But the plane had to hold a straight and level course once it started its bombing run, which made us sitting ducks. So when the navigator announced we'd hit the IP, I took off the vest and stood on it.\n\nElwood Barnes, who everybody called \"Hound\" was the right waist gunner. He stared at me in amazement and said, \"What the hell you doin' Scheffler?\" I said, \"I'm protecting myself from the flak.\" Everybody on the intercom began to laugh at me.\n\nThe pilot said kindly, \"Flak comes from everywhere Ace, not just underneath us.\" He was right. Towering black clouds, with fiery red centers began to burst at every altitude and spent shrapnel bounced off the bomber's metal hide like hail on a tin roof. I hastily scrambled back into my vest. It was an experience I'll never forget - and would never want to do again.\n\nIt should be clear that life as a bomber crewman took extraordinary courage. Every man on my aircraft got up the next morning, while I was sleeping next to my beautiful wife, and trudged out into the breaking dawn to try their luck again. And THAT in my opinion, was the definition of a hero.\n\nThey had to do twenty-five missions before they got shipped home. Short-Snorter, the plane I was on, made twenty-one before a 109 got them over Wilhelmshaven and they joined the almost fifty percent of the crews that never made it back.\n\nSpeaking of heroes. The American servicemen were just kids and like any group of kids, some of them were stupider than others. So the usual drunken incidents would happen once-in-a-while, particularly with the women. The Brits described it as, \"Overpaid, oversexed and over here.\" It was all in good fun, unless it happened to you.\n\nJane was always modest and polite. But she would stand out in any group of women. We rarely went out to eat, there was too much rationing. But Peter had aced the tests that they used to determine entry to Cambridge, and we wanted to celebrate.\n\nBy age 13, Peter wasn't my little pal anymore. He was almost as tall as I was and slender but solid. He was gentle, polite, and considerate, unlike most teenagers, and his choir-boy features had matured into a manly beauty. Even so, Peter was no pretty-boy. He radiated strength and self-confidence.\n\nI was settling up the dinner bill while Jane and Peter went out into the High street to wait. Once I'd finished paying, I walked out in the fading evening light to discover that neither of them were anywhere to be found. Puzzled, I looked around. Then, I heard loud laughter and taunts from the alley.\n\nCurious, I walked around the corner and saw a scene that was so gallant that my heart lurched. Three drunk-on-their-ass Yank privates had cornered Jane and Peter. Jane must have walked around the building to get away from them and they'd followed demanding that she, \"Give us a little kiss, love.\"\n\nThe English fight best when their backs are to the wall and in the present situation, Peter was the English archers at Agincourt, or the thin red line of Sutherland Highlanders saving Raglan's ass at Balaclava. My son had to know that he was a boy facing three grown men. But honor and duty demanded that he stand, and fight, and he clearly wasn't going to take one further step back.\n\nPeter was shielding his mother, holding a length of discarded wood in front of him like a cricket bat. His handsome face had the same cool expression that Wellington must have had, as volley fire from the Iron Duke's unwavering redcoat squares destroyed the French cavalry at Waterloo. The three morons were laughing at Peter's steadfast demeanor. But they also weren't challenging him.\n\nI came up behind and shouted at the top of my lungs, \"TEN-HUT!!!\" They might have been drunk but they'd respond to that command, even if they were dead. All three stiffened to attention. I said in the same tone, \"About face!!!\" They turned looking sheepish.\n\nIn the waning light, they saw an American officer. The Army had given me wings to commemorate my one bombing raid and my crush cap was the same as an American pilot's. It wasn't an affectation. I wore it to honor the guys on that plane. It was my right to do so. I'd faced death with them.\n\nI said with utter contempt, \"What are you knuckleheads doing to these two British CIVILIANS!!\" The three stooges were shaking in their boots. American officers hammered good behavior into every soldier's head. We might be there to help save the Brits' ass. But we were guests in their country. So, those idiots knew that I was going to shit on them from a very great height.\n\nThe one in the middle slurred, \"Nuuthin Sir, just havin' a little fun.\" I said, \"Well go have your fun somewhere else and apologize to the lady before you leave.\" They all turned to Jane and said shamefaced, \"Sorry Mam we didn't mean nothin'.\" Then they slunk down the street with their tails between their legs.\n\nAll the time that was happening, Peter had his arm protectively around his mother's shoulders. Jane, of course, looked as calm and in-control as ever. It wasn't hard to see where Peter got his courage. My son looked at me and said, \"I was just trying to hinder them Father. I knew you would eventually intervene.\"\n\nIf you're lucky you will love a kid like I loved Peter. I thought to myself, \"What kind of thirteen-year-old uses words like hinder and intervene?\" Most teens would either be bragging, or blubbering, not discussing their defensive strategy like Winston Churchill.\n\n*****\n\nThe war took a decided turn for the better the following June. I covered the landings from the heavy cruiser Augusta which was Bradly's headquarters ship and during the breakthrough at St. Lo and the Falaise pocket, I commuted back and forth between London and the fast-moving allied front.\n\nPatton was a publicity junkie. That was the reason why I was with the French 2nd Armored Division when they branched off to liberate Paris.\n\nIt was a totally wildcat operation. The Third Army was supposed to be chasing the Germans back behind the Rhine, not taking side trips. But De Gaulle was worried that the allies would put Paris under martial law when they chased the Germans out, and he wanted to beat them to the punch by getting control of the city himself.\n\nIt gave me a chance to meet my personal hero, Hemingway. Four of us newshounds were in a jeep moving through the town of Rambouillet 35 miles southwest of Paris when we were stopped by a group of French partisans, who tried to requisition our jeep. Bob Capra, who was driving, insisted on talking to their commanding officer and to our utter astonishment they produced Hemingway.\n\nI recognized him immediately. I mean... I'd seen enough of his book jackets. Papa was standing with his shirt open big belly hanging out sweating in the June sun. He had a bottle of red in his hand which he was swigging from like it was a canteen.\n\nHe claimed he had \"taken over the defense of Rambouillet\" and his \"troops\" who appeared to be about a hundred scruffy looking French, would be liberating the Ritz hotel on the morrow. I just HAD to see that. So, the next morning we followed a column of French M4s up the road to Paris.\n\nWe camped in the Meudon forest that night and Ernie got drunk on a bottle of cheap scotch that Sam Marshall had with him. The next morning we crossed the Pont de Sevres dodging snipers as we entered Paris and Hemingway was drunk again by mid-morning.\n\nThat was to be expected, given the amount of champagne he'd guzzled along the way in. In fact, it was a wonder that any of us had made it as far as we had because the French were handing us bottles of bubbly as soon as we cleared the Bois de Boulogne.\n\nWe liberated Harry's New York Bar first. That was because that place was the Lost Generation's hang out before the war. Now, it was managed by a black guy named Tyler P. Boggs.\n\nBoggs was part of the OSS's legendary Black Rattler network, which was a collection of African-American ex-pats. Even Josephine Baker worked for them for a while. They were invisible to the Nazis because they were servants and entertainers. But they heard and saw everything. In fact, the Rattlers were the OSS's most effective source of intel concerning the City of Paris.\n\nMeanwhile the city of Paris was going nuts around us. The girls were all in colorful outfits, with big flashy earrings and they were hugging and kissing anybody in a jeep. \u00a0Everyone was throwing flowers. But the killing was still going on. You could hear the sporadic wham-bam of tank rounds and the rattle of machine-guns over all of the happy tumult. \u00a0\n\nHemingway was wearing a pistol and a belt that he'd taken off a dead German during the dust-up that we'd had over in the Sixteenth Arrondissement. Now he was playing soldier in violation of the all the rules about correspondents staying out of the war. But of course Papa was famous and the rest of us, including the ragtag bunch of French resistance fighters who he'd recruited -- were not.\n\nLate in the afternoon, our party of dusty jeeps pulled up at the back door of the Ritz on the Rue Cambon. The manager met us, head bobbing like it was on a string. He kept assuring us that the Ritz had done its bit for La Resistance by keeping the finest wine safe from the Boche. \u00a0He kept saying over-and-over, \"We saved the Chateau Cheval Blanc! We saved the Chateau Cheval Blanc!\" \u00a0\n\nHemingway said with exasperation in his voice, \"Well then go get it!\"\n\nSo, we spent the rest of the day sweating, telling stories about imaginary military triumphs, and slugging down truly rare Bordeaux like it was Coca-Cola. I had a million anecdotes like that. I recorded all of them and sent them down the wire to my readers in the States.\n\nI lived a schizophrenic life during that period. I had my peaceful and happy family when I was in London, which was really a short ride away on one of the C-47s that shuttled constantly between Le Bourget and Croydon. It was like the war didn't exist in our comfortable little bubble in Kensington.\n\nBut when I was covering the action in France, I witnessed an endless string of violent encounters. Even though I was with Patton, who was rarely in harm's way, I was aware of the death and destruction around me.\n\nThat was the way it was until the day that my life was snuffed out in an instant.\n\n*****\n\nI was staying in the Hotel Scribe, which was the former Paris headquarters of the Nazi Ministry of Propaganda until we ink-stained wretches of the press liberated it. Now, there were so many correspondents sitting around the hotel bar that it looked like the newsroom of the Times.\n\nIt was a couple of weeks before Christmas and I was just finishing breakfast. I was preparing to file a story about the British efforts to liberate Holland when a desk page told me that I had an urgent call from the States. Puzzled, I walked over to the telephone bank.\n\nAs I'd suspected, it was Wechsler. Normally he's as manic as a squirrel in nut hunting season. But his voice was measured and grave. My hair stood on end. I immediately knew that this was bad news.\n\nHe said gently, \"Sit down before I tell you this.\"\n\nI sat and said, with real fear in my voice, \"What is it!!! What happened!!??\"\n\nI can't recall anything after that. The long-and-short was that there had been a V2 strike in London and our house had been ground zero. Wechsler had gotten the early news because one of his reporters had covered it and Jim felt like he should break it to me personally.\n\nThe Nazis had recently started using the Vergeltungswaffe, or V2. The V2 was wildly inaccurate. So, it had no conceivable military purpose. But It was the supreme weapon of terror. It just appeared out of blue heaven like the finger of God packing a ton of Amatol. And if you were standing in the bullseye you died.\n\nNobody knew much about them except that they were the ultimate in cowardice. At least the allies braved flak and fighters to bomb German cities whereas the V2s were launched from the safety of the Vaterland with no risk whatsoever to the Nazi pulling the trigger.\n\nI suppose people who've unexpectedly lost a cherished loved one will understand the state that I was in. It wasn't sorrow. Sorrow's a trivial emotion. It was the most acute sense of utter despair and misery. My only thought was, \"Why should I go on?\" So, I retreated into my subconscious and barred the door.\n\nWechsler was the person who alerted the staff. He'd spent a minute or so saying, \"Hello!! Hello!!\" and when he got no response he hung up and called the front desk. They found me catatonic in the phone booth gripping the receiver like I was trying to crush it. I wasn't passed out or crying. I was just sitting there like a statue.\n\nThe shrinks call it a fugue state. I have some recollection of the intense pain as the demons of regret swooped and screamed through the empty halls of my mind. But I was basically dead until the following morning. I awoke in a ward at the American Hospital of Paris. There was a second of confusion and then it all came back to me, and I yelled, \"Oh no!!\"",
        "That yell brought the staff running. I was starting to get dressed as the nurse arrived. She said sternly, \"You have GOT to get back in that bed Mr. Scheffler!\"\n\nI said, \"I can't, I have to go to London and find my wife.\" Then, I began to pull on my shoes. Then there were a couple of confusing seconds, involving a couple of burly orderlies and a doctor with a hypodermic needle and I woke up the following day in a slightly more rational state.\n\nI accepted that both Jane and Peter were gone, taking all of my reason to live with them. But I wasn't going to kill myself over it. I was going to let the Germans do it for me. I planned to put myself in situations that would make Ernie Pyle look like a pussy.\n\nWechsler knew what I was thinking. But he couldn't exactly accuse me of wanting to off-myself. So, he embedded me with Battery B of the 285th Field Artillery Observation Battalion. They were the forward observers for the American 155 Long-Toms. It was frustrating since it wasn't at the spearhead of the attack where I'd wanted to be.\n\nWechsler must have thought that he'd gotten me far enough out of the action that I couldn't accomplish what I had in mind. How WRONG he was!! A week later I was interviewing the battery commander for an article for Stars and Stripes when he got urgent orders to move the entire battery from Schevenhutte to St. Vith.\n\nI asked him why the whole VII Corps was shifting south, and he didn't know. Later that day we learned that earlier that morning the Krauts had launched a huge offensive, later nicknamed \"The Battle of the Bulge,\" into the Ardennes.\n\nWe left Schevenhutte at 0800 the next day in jeeps and deuce-and-a-halfs. We turned southwest and then south down secondary roads through Eynatten and Eupen. We then passed through the Baraque Michel moors to a crossroads north of Malm\u00e9dy.\n\nIt was a typical day in Belgium, gloomy and overcast, with a freezing wind. Everybody who ever served in that dour country thinks that it's the place where God will stick the hose if he ever wants to give the earth an enema. As we got into Malm\u00e9dy proper, we were stopped by a Colonel who told us that one of his patrols had seen a German armored column southeast of there.\n\nHe warned the two officers leading us that they shouldn't proceed any farther. But those two pigheaded morons wouldn't listen. I was two jeeps back, and I heard them arguing that they had their orders and besides, there was no way the Germans could be that far west. So we went a few miles further down the road to Baugnez, which is where five roads meet. Of course, we Americans called it, \"Five Points.\"\n\nThe only building at the crossroads was a Caf\u00e9, on the southwest side with two farms beyond, and another farm on the north side of the road, just south of the Five Points junction. That would become very important to me later on.\n\nOur column stretched about a half a mile north-to-south from where I was situated at the front, all the way back to the crossroads. It was shortly after noon and the visibility was lousy because it was so overcast. The temperature hovered barely above freezing and there was some fog along with the light snow. It was miserable.\n\nThat's when a tank round from the non-existent Germans blew up the first jeep. I later learned that we'd stumbled onto the lead elements of\u00a0Kampfgruppe\u00a0Peiper. The Kampfgruppe's commander was a Waffen-SS Colonel named Joachim Peiper. His force was the lead element of the First Panzer Division, Leibstandarte SS Adolph Hitler. It was spearheading the push toward the Meuse River.\n\nPieper was renowned as a brilliant panzer leader, but he must have been feeling frustrated that day. The first American units he'd encountered had put up a much tougher fight than they'd expected. So, he was twelve hours behind his critical attack schedule.\n\nOur convoy only had carbines and jeeps to fight Tiger and Panther tanks. So, we did the logical thing. We hauled ass into the ditches. The German tank commander stopped his shooting and waved his arm in our direction indicating that we were to surrender and march back up the road to Five Points. By 14:00 the Krauts had 113 of us assembled in the snowy field next to the Caf\u00e9.\n\nI could see that Pieper was furious at yet another delay. He yelled at the guy in the tank for a couple of minutes and that fellow then jumped into one of their halftracks and rode it over to where we were all forlornly standing. Somebody stood up in the front of the thing and that was when the shooting started.\n\nIt was all over by four thirty. The Germans went their merry way, leaving nothing but stillness and a field strewn with mutilated bodies.\n\nI might have had a serious head wound. But I swear that I wasn't hallucinating when I heard Jane's voice whisper to me, \"You have to survive, my love. Peter and I will only be truly dead when everybody else's memory of us fades.\" THAT hit me like Saul on the road to Damascus. I couldn't let the remembrance of my dearest ones fade into nothingness.\n\nLikewise, the sheer inhumanity of what had just occurred filled me with rage. The rest of the world had to know what species of barbarian they were dealing with. So, lying there with my face ground into the frozen turf I made a solemn vow. I was a reporter. I would publicize this atrocity and the world would never forget Jane and Peter.\n\nIt was almost full dark, and there were no sounds. I carefully extricated myself from the pile of bodies and stood up. The world shifted, and I immediately fell flat on my face. My left leg was only vaguely under my control, and I couldn't feel my left arm.\n\nI knew that I had to get into cover. It was freezing and the Germans might come back. I struggled to my feet, awkwardly balanced, and took a step with my right leg. That moved me perhaps a foot and a half. I dragged my uncooperative left leg back beneath me, balanced and took another step.\n\nThere was a barn less than a quarter of a mile away, which was approximately thirteen hundred feet. Each awkward step took me a foot and a half closer. Which meant that I'd only need eight-hundred and eighty steps to reach my goal.\n\nI had my cheap glow-in-the-dark military watch on. So, I used it to chart my progress. I could manage a step every ten seconds. Which meant that I would cover the requisite distance in a little over a hundred and forty minutes -- or two and a half hours. It seemed like an impossible task, but Jane and Peter were depending on me, and I couldn't let them down.\n\nI was beginning to hallucinate as I stepped-balanced-and dragged myself past obscene piles of bodies. I knew that I was going to freeze to death if I didn't keep moving. It was well below zero, as the temperature dropped in the dark.\n\nI swear I could feel Jane's presence on one side and Peter's on the other helping me along. It gave me the strength to finally lurch through the door of the old barn and bury myself in a big rack of hay. I instantly fell asleep, or perhaps the term is \"passed out.\"\n\nI came back to the living with the sound of an engine outside the barn. The sun was shining through the gaps in the boards. It was morning. My left side was almost useless. But I found I could turn myself over. So, I rolled across the floor and peeked out. Hallelujah!! I saw an American jeep with two soldiers.\n\nI started making loud, oddly inarticulate croaking noises. Was that me trying to yell??! The jeep stopped and a minute later I felt strong hands lifting me. A voice said, \"We've got you buddy. You're going to be all right.\" In my head I could hear Jane say, \"We made it my love.\"\n\nThe jeep was from the unit guarding Malmedy. The Colonel, who had warned the two fools in the lead jeep about the Germans, had heard the shooting and he'd sent out recon to try to determine what happened. They'd already found that dreadful field and now they were checking around to see if anybody had survived.\n\nI went the typical casualty route, battalion aid-station, to regional hospital and then evacuated to the general military hospital in Paris. I was out of my mind most of the time.\n\nEmergency surgery remedied the depressed skull fracture, which was the reason my left side wouldn't cooperate. There was no bleeding in my brain. So, they installed a steel plate and sent me back to the wards. I would have to stay away from metal detectors and strong magnets from then on.\n\n*****\n\nI awoke in heaven. It must have been heaven because Jane was holding my hand and Peter was looking down at me with concern. The moment I opened my eyes Jane began to cry. It was almost like she was real. She called over her shoulder, \"Nurse!! He's awake!!\"\n\nThat was odd. Why would you need a nurse in paradise? A kindly woman in starched white, bustled up exuding competence. She took my pulse and flashed a little light in my eyes. That hurt!! I thought things were supposed to stop hurting in heaven. Yikes!! Maybe I was someplace else?\n\nI said panicked, \"Where am I?\" The Nurse gave me a bleak smile and said, \"You're in the critical care ward of the 194th Evac in the Lyc\u00e9e Claude Bernard Mr. Scheffler. Your wife and child are here because your editor has a lot of influence with our command staff.\"\n\nI looked at Jane, or maybe it was her ghost and said, \"Are you real?\" She certainly LOOKED real.\n\nJane burst into tears. Still squeezing my hand she said, \"Of course I am you silly goose. What would make you think otherwise?\"\n\nI said, \"But Wechsler told me our entire block was blown to smithereens.\"\n\nJane laughed and said, \"That would have been us if we'd been there. But Peter and I were in Cambridge arranging for his rooms at Kings. They gave him early admission, don't you recall?\" She added lightly, like I was my usual forgetful self, \"You never remember those things.\"\n\nJane had missed the fact that I thought they were dead. I thought it best not to bring that up, given that I had tried to kill myself over the news. Instead, I just looked at her dumbfounded.\n\nJane continued. \"We came back to find a hole where our lovely home had been.\" She laughed ironically and said, \"I guess I should get used to having that happen.\" Then she added seriously, \"I sent you a v-mail letter telling you about it.\" I'd probably get it next month.\n\nJane's face turned sad, \"I found out that you had been wounded right after I sent you the letter. So, I called Mr. Wechsler and begged him to get me over here to visit you. He fixed it up with the Army. He said he owed it to you, whatever that signifies.\"\n\nI knew what it signified, a tragedy of errors and miscommunication. You can't expect there to be any bodies after a ton of explosives delivered from fifty miles up hits your house. So, the authorities, \"just assumed.\"\n\nWechsler had heard about it right away. He knew what losing my family would do to me and he'd chosen to break the news personally. I realized on balance, that Jim Wechsler was just trying to be a good friend. So I decided not to kill him after all.\n\nOf course, when Jane and Peter showed up the next day there was no need for the authorities to report anything and Wechsler was never informed. He'd only found out that he'd jumped the gun when Jane called him to ask for his help. Hence, he was absolutely right. He owed me.\n\nSo, while I was being transported down from St. Vith Wechsler had used his leverage to get Jane and Peter on a C-47 to Le Bourget. There was something dripping into my arm, my head was torturing me, and it was the happiest moment of my life.\n\nJane was beside herself over the ghastliness of my wound. I have to admit that I must have looked like a Sikh with my head wrapped in plaster and bandages. But I knew that I'd get better. The important thing was that we were alive together and I appeared to have all of my faculties.\n\nPeter was hanging back in his shy, self-effacing way. I motioned to him. He came over to the bed and I took his hand with the one that Jane wasn't holding and said, \"You did your duty. I'm proud of you, my son.\"\n\nPeter's demeanor went from Ivanhoe to frightened little boy in seconds. He threw himself face first on my chest and began to sob. He said, \"I thought I'd lost you, father.\" His mother joined him from the other side of the bed, and we all wept.\n\n*****\n\nThe bullet that hit my tin pot had come at an angle. In fact it might have been a ricochet. But it grazed past the side of my skull forcefully enough to crack it and depress the boundary between my frontal and parietal lobes. There was no bleeding on the brain, just concussive shock. As a result, once the pressure was relieved my abused brain started to heal.\n\nSeveral weeks passed and the people overseeing me were confident that there was no lasting damage. I'd already filed a story about what happened at Malmedy. That was on December 28th, a mere ten days after I'd been rescued. Jane typed it from my bedside because I was still incapacitated. But the word had to get out.\n\nThe article appeared in Stars and Stripes the following Friday. The news of the massacre, spread like wildfire among American units. The new attitude was, \"If they want to fight that way then so can we.\" My reporter colleagues told me that very few SS prisoners were taken alive after that.\n\nMy survival got me back to minor celebrity status. It was a puzzlement how the simple act of being captured and shot qualified me as a hero. But of course, I was one of the few remaining eyewitnesses. So, my story was in demand.\n\nI got a literary agent, which led to a substantial advance for a book. It wasn't best seller cash. But Jane and I suddenly had more money than either of us could imagine. That was fortunate because I'd been more-or-less kicked out of the Army.\n\nWell actually... I was never IN the Army. But there was no way Wechsler would let me go near the fighting now, and the military didn't want to embed me with a plate in my head. So, I just stayed home and wrote commentary for the AP wire.\n\nWe were in Paris because I had to be near the American hospital for rehab. We'd rented a place on the Rue Guynemer across from the Luxembourg Gardens. It was incredibly opulent by normal standards. Of course our usual standards involved a one room flat and a small semi-detached house.\n\nParis in March isn't as romantic as it is in May. But the grass is green and there is the beginning of the leaves and flowers. We were sitting in the Luxembourg near the Statue of Liberty. I hear you asking, \"Statue of Liberty??!!\" Yes indeed - there's an exact replica in the Jardin du Luxembourg, except it's only thirty feet high. It was the model that the guy who built the one in New York used.\n\nPeter was leaving for the Easter term at Cambridge, which is a monumental step for a fifteen-year-old boy. But my son was already a very cool customer. He was excited. On the other hand, his parents were watching a milestone pass and they were sentimental - at best. You know how it is when one era of your life ends. You only see the little boy, not the young man.\n\nPeter was taller than me now and starting to fill out. His sweet choir-boy voice had deepened to a soft-spoken man's tone. But he still had the special manly beauty that he'd always possessed. I think that was the reason why the little girl, who had been playing with two others approached him.\n\nI say little girl because she was tiny and perhaps eight, or nine. But this blond angel had the self-assurance of Charles De Gaulle. She came up to Peter and said, \"Voulez-vous marcher avec moi?\"\n\nPeter looked at her puzzled and said in pidgin French, \"Ne parle Fran\u00e7ais.\" She switched immediately to English, \"Would you like to tour around the garden with me?\" She really was a gorgeous little thing with bright blue eyes and a halo of blond hair. But the extraordinary part about her was her self-assurance.\n\nHer mother came bustling up with the other two girls. She was a beauty, huge brown eyes, and a perfect face. In many ways she was Jane's doppelganger, at least when it came to looks and presence. Except my wife radiated steadfast camaraderie, while this one had the je ne sais quoi \"something\" that only sophisticated and knowing French women have.\n\nThe woman said in perfect English, \"I'm sorry about Josette. She's really a twenty-five-year-old woman trapped in a little girl's body. She has no concept that she's only eight.\" Since that pretty-much described my son I laughed and said, \"My boy's the same way. They must be fellow travelers.\"\n\nThe woman added, \"Josette's relentless when she makes a decision and she's very brave. Nothing stops her, and apparently, she fancies your son.\" Peter blushed the loveliest shade of scarlet.\n\nI said, \"Well maybe they'll meet again someday. But he leaves for Cambridge tomorrow.\"\n\nThe woman said interested, \"He looks too young to be at university.\"\n\nI said, \"He is - by two whole years. Nonetheless the people up there think he's ready to begin advanced study and of course we want him to have all the advantages.\" I didn't add that that simple decision had saved both Peter and Jane's life.\n\nThe woman turned and collected her wayward daughter. As they were walking away, she said, \"I wish you well Peter,\" and Josette called back confidently, \"I WILL see you again.\"\n\n*****\n\nThere was a stone balcony off our second-floor bedroom. Jane, and I liked to sit there in the early evening. We'd look out over the Luxembourg, talk, and sometimes just sit there holding hands, reveling in each other's presence.\n\nEven so, there was a sizeable pachyderm sitting between us every night. It was the important piece of information that I was holding back from my wife... and I hated it. Jane just assumed that my wounding was due to me being stupid, not suicidal. Of course, that wasn't true, and you just don't keep something that brutally self-revelatory from your wife.\n\nI should have manned-up and told her about my short trip into insanity. But I didn't have the guts. I mean seriously!! How could I admit that I'd been THAT weak and hope to keep her respect.\n\nI've always had a hard time sharing my feelings. Peter and I are very much alike in that respect. His excuse is that he's British. Mine, no-doubt, has something to do with watching too many Hollywood westerns. At any rate, I couldn't bring myself to say, \"Hey guess what... I thought you were dead, so I tried to off-myself.\" It would simply be too embarrassing.\n\nThe weather had turned uncharacteristically spring-like, and we were sipping a really superb Bordeaux. I don't remember what we were talking about. But whatever it was, I finally just blurted it out. Okay - I admit it. My relationship skills need serious work.\n\nI said with deep pain in my voice, \"There's something I really have to tell you.\"\n\nJane stared at me shocked. She'd read my anguish and she must have thought that I was about to tell her that I preferred men, or I'd like to see her hog-tied in leather.\n\nI said, \"You've probably been wondering why I was so close to the front when I was wounded.\"\n\nShe looked relieved and then puzzled. She said, \"Well it DID cross my mind. But I thought you were doing something silly like when you went on that bombing raid.\"\n\nThen she stopped and said lovingly, \"I know it's been bothering you. So, I want to assure you that I forgive you for whatever it was.\"\n\nI said, \"What if I told you I was trying to kill myself.\" She looked aghast and whispered, \"What?!\"\n\nI said, with all of the grief that I'd experienced when it first happened, \"I thought that you and Peter were dead, and I couldn't bear it!!!\" Then I dropped my head in my hands. What would she think of me!! I couldn't even look at her.\n\nJane said, \"Why would you think something that awful.\" Then it hit her. She said with horror, \"You thought that we were in the house!!!\"\n\nI said guiltily, \"Yes -- that's what Jim Wechsler told me. I went a little bit nuts after that. And it just seemed like the right thing to do to join you.\"",
        "I stopped, looked into her shocked eyes, and added miserably, \"I couldn't live another day without you and Peter.\"\n\nJane said appalled, \"Oh my God!!! That must have been awful!!\"\n\nYou know you've got the right partner when everything that needs to be said is communicated in a gesture and a glance. Jane rose, walked a few steps to me. She stood looking down, processing the situation. Then she gave me a loving look, took me by the hand and led me back into our bedroom.\n\nThe bed was illuminated by the moonlight from the open French doors of the balcony. Without saying a word, Jane slipped the light dress that she had been wearing over her fragile shoulders and dropped it to the floor. She unsnapped her bra as she stepped out of her heels and peeled down her modest panties. Then she lay on the bed. She lightly patted the place next to her and said gently, \"Lie here.\"\n\nWe had not had sex since we'd both returned to the living. Well, actually Jane had never been dead. But I had been wrapped up like an Egyptian mummy for a month. I still had a shiny bald dome where a little carpet of hair had begun to sprout over the garish scar on the right side of my head. But I was back to normal in every other respect, including one very important function.\n\nI looked at Jane's perfect little body, as she lay there in the bright moonlight. Her neat brown nipples were standing like two stalwart watchtowers on her broad full breasts. The taut lowland plain of her stomach led past her narrow waist to her sleekly muscled hips. Her long gleaming legs were sculptured marvels extending seemingly forever into the distance.\n\nMy wife is a very sensual woman. But there was no lust in her eyes, only tenderness. She wrapped me in her love. I lay next to her propped on one arm and took her tidy little body in my arms. She melted into me like she was trying to merge us.\n\nI stroked the side of her face as we both looked deeply into each other's eyes. She said quietly, \"We're together now -- that's all that matters.\" Then she kissed me gently.\n\nYou would need to have experienced sex with Jane to understand the difference in that kiss. When Jane is in the mood her lips are alive. Those busy kisses reflect the passion that runs just beneath the surface of all that British reserve. But this was a true kiss of love. It was meant to reassure me, to tell me that she understood. It said that we would always have each other. That was all I needed to know.\n\nI stroked down her warm flank. Jane is spectacularly sexy. But she has a feature that most women don't have. Her alabaster skin is like warm satin, or the finest silk, sleek and smooth to the touch. Her type of skin is a staple in romantic novels because it has such a rare and sensual quality about it and its sensitivity to touch is also the key to my wife's outrageous sexuality.\n\nI was looking into Janes eyes as I stroked her taut round hips. Her golden cat eyes were looking back at me. Then they suddenly clouded over, and she quivered. For Jane, the reconnecting and empathizing part was over. Now, it was time to satisfy the powerful spirit that drove her highly civilized soul. It HAD been a very long time.\n\nShe groaned. There were a lot of different tones in that sound. All of them conveyed need. I felt down to where her legs joined, and it was wet and steamy there.\n\nThere are couples who need intricate foreplay. Jane and I were never like that. I think it was due to the deep sense of empathy that we had with each other. Whatever the reason, our simple lovemaking was more satisfying than running through all 245 positions of the Kamasutra.\n\nJane gave me an urgent tug on the shoulders, which was her signal for me to roll between her daintily spread legs. She elevated her slim thighs as I moved into position, and we were joined for the first time since early December.\n\nThere are no words to describe the exquisite feeling of sliding into that hot, slick tunnel. Jane made a satisfied purring noise, and we began the age-old motion. I'd wanted it to be a long and languorous lovemaking session. But this was going to be short and intense. there was just too much psychic steam to blow off.\n\nJane had already started to claw my back when her hips went into frantic up and down motion as she gurgled and whimpered her way to a small orgasm. My wife does that almost every time we make love. It's a consequence of her uninhibited passion.\n\nThen she totally stopped, opened her eyes, and just paused. This was less a matter of sex now, than it was resolution. Our connection was the key thing.\n\nI've always thought that there was a direct relationship between intelligence and sexual prowess in women. Jane was exhibit A. She has no inhibitions when she gives herself. But the key distinction is the word, \"give\" and she had other ideas right this minute.\n\nWe lay there staring into each other's eyes, intimately joined. Jane's intense sexuality was her precious gift to me. But the giving was Jane's choice. not something she did because she was compelled. Jane only allowed a man into the closely guarded realm of her true feelings if she felt that he was worthy.\n\nNow she was telling me that our joining reaffirmed her absolute commitment to me. We had both experienced the shock of loss. I'd lost Jane through a miscommunication, and she'd nearly lost me for a much more prosaic but no less painful reason. Now, that watershed moment was behind us, and we had forged an adamantine bond.\n\nLove is a frivolous and light-hearted thing. You might ride its feelings into a marriage that'll last a lifetime. But that life can be as unsatisfying as it is shallow. Even so, a few genuinely lucky people achieve a status that is far richer than simple romance. That quality is, \"devotion.\"\n\nDevotion has nothing to do with transient feelings. Devotion anchors your existence in the bedrock of solidarity. The other person willingly shoulders life's profound burdens with you, while the two of you face the consequences of simply being human together.\n\nThat unification of two souls is countersigned by the most intimate physical act of all, sex. Sex is \"la petit mort;\" the little death. Most people think that implies orgasm. But the real connotation is much more metaphysical. It describes the elemental state of being that people lapse into during the act.\n\nIn essence, sex lets both partners connect at the fundamental level, stripped of all of civilizations pretensions. Sometimes it's mindless animal mating. Other times it's a fundamental statement of two people's commitment to each other. That was sex for Jane and me and it was priceless.\n\nWe were no longer man and woman. We were two similar spirits frolicking in a sea of sensation, basking in our oneness. We experienced all of the primal urges that lurk in our animal self, pleasure, greed passion, power. But our dedication to each other blended those things into a symphony of synchronized passion, a choreographed dance.\n\nI would groan as I pushed into her. She would cry out and moan. I would thrust. She would gasp with sensation. The whole opus couldn't have lasted more than ten minutes. But in that time, we renewed our deep connection by giving each other extreme pleasure.\n\nThe grand finale was remarkable. I could feel Jane beginning to wind up to a monster orgasm. Her knees were almost at her shoulders, her mouth was emitting little shrieks, wide open in a rictus of effort, her beautiful breasts were bobbling wildly, and her head was thrashing back and forth as we pounded down the home stretch.\n\nThen she began to writhe in the grip of something extraordinary. It was good that she had reached that point. Because we were about to cross the finish line in a dead-heat. There were a few lost seconds while the two of us dealt with the extraordinary internal pressures we had generated. Then it was over, and I lay knocked out on top of her panting and heavily sweating body.\n\nI rolled to one side in order to not suffocate her. The point had been made. She took my hand and said fervently, \"Until death we do part. Don't fear it my love.\" I said just as earnestly, \"Not one second sooner.\"\n\nI knew that our life would be comfortable, and Peter would be our bright and shining star. But it was the simple assurance that I wasn't alone that really mattered. We would face our future together as the days of our lives spun out. And in the end... that's all you ever need.\n\nEPILOG\n\nThe war ended and the accounting began. The Wehrmacht was falling all over themselves to surrender to the Americans, because they knew what would happen if they ended up in the hands of the Red Army.\n\nHerr Peiper was captured by Patton's boys down in Bavaria, and they stuck him in a POW camp. Since he was Waffen-SS, he got an early appointment with Army interrogators. When they asked him about his politics, he informed them that, \"All Jews are bad. We cleansed our society and moved these people into camps, and then you let them loose!\"\n\nHis honesty in that respect immediately labelled him as one of the \"unreconstructed\" ones. Meantime, there was a separate war crime investigation going on over Malmedy. Kampfgruppe\u00a0Peiper was identified as the perpetrator and the Americans went looking for the culprits.\n\nUnfortunately. that was like searching for a needle in a big stack of needles, since there were three million Nazi POWs to sort through. Nevertheless, thanks to Pieper's relentlessly expressed views about Jews, Poles, and the foolishness of Americans who refused to incorporate the SS into their army, he came to the attention of the right folks.\n\nThey handed him over to military justice, which in Pieper's case wasn't an oxymoron. Herr Pieper's defense was that he wasn't at Malmedy when the massacre actually occurred. But unfortunately for him, he'd left a few eye witnesses.\n\nThat was the reason why Jane and I visited the pretty little town of Dachau in May of '46. Dachau sits on the Amper river in upper Bavaria. It's a quaint cuckoo-clock kind of place featuring a small Baroque palace and a big Nazi death camp.\n\nUnlike Nuremburg, the trials that were held in Dachau were designed to settle the score for war crimes committed in the U.S. zone of control, or against its citizens. That included the soldiers of the 285th Field Artillery Observation Battalion.\n\nThe court itself was held in one of the buildings at the former concentration camp, which in my opinion was a bit ghoulish. They paraded six of us survivors through the trial as witnesses. We sat in a chair next to a female stenographer and told a military court made up of seven American officers what we'd seen.\n\nI searched the faces of the defendants as the lawyers questioned us. Pieper was in the front row with the rest of the senior Waffen-SS. He looked bored. I told them that Pieper was the guy I'd seen chewing out the fellow in the tank. So, he'd probably ordered it. But he'd moved on down the road before the shooting started.\n\nHappily, it didn't matter whether Pieper was present or not. He was the man in charge and forty-three of those unspeakable motherfuckers were sentenced to the rope - including Pieper. That was the least that the poor bastards who'd been gunned down in cold blood deserved, and the most that those of us who survived could hope for. Afterward I went back to the hotel and got drunk.\n\nOf course the \"right thing to do\" will always lose out when politics and justice collide. The Americans needed West Germany as a bulwark against the resurgent communists in Eastern Europe. And so, the convictions of German war criminals got a \"second look.\" The outcome was that Pieper's hanging was commuted to life in '48 and then down to time served in '56. As they say, \"The lady is a blind bitch.\n\nIn the meantime, I had made enough money documenting my war experiences that I stopped hustling stories and just wrote commentary for big papers like the Times and Post.\n\nIt was 1956, which was one of the most intense stages of the Cold War, and there were a lot more important things happening than the release of a low-level Nazi functionary. Similarly, Pieper was really a very minor actor in the Nazi Gotterdammerung thing. So, there wasn't enough of a ripple in the news space to grab my attention. In fact, I didn't hear about Pieper until eight years later.\n\nIn 1964,\u00a0the Jewish Nazi hunter Simon Wiesenthal\u00a0accused Pieper's fine collection of SS goons of crimes against Italian Jews. It made the papers because Wiesenthal said it. I had just assumed that Pieper had dangled a long time ago. Hence, the news that he was still among the living gave me a new obsession.\n\nThe thing of it is - the SS had its own version of the VFW. Except it wasn't a bunch of guys sitting around a run-down hall drinking beer and reminiscing about the old days at Fort Benning. The SS version was an unapologetic pack of racists and anti-Semites who still kept old pictures of Hitler in their cupboards.\n\nEven worse, enough of those xenophobic bastards were suitably well placed in West German industry to be able to move Pieper up the ladder at Porsche. Hence, for years Herr Pieper had been living the life of a successful German car exec.\n\nThat fact outraged me to the point where I wrote expos\u00e9s that would have turned the Prophet Jeramiah green with envy. Obviously, I couldn't make it look like I was personally targeting Pieper. A reporter sacrifices his credibility if he loses his objectivity. So I did a series of articles on Himmler instead. Everybody hated that guy. Plus, he was already dead.\n\nPieper had been Himmler's senior adjutant. So, naturally his name came up over-and-over again in my pieces. The 1960s was open season on ex-Nazi's, Eichmann, Mengele, Barbi, Wolff and Grothmann. Finally, things got unpleasant enough for Pieper that he upped-stakes in Germany and moved to France.\n\nI think that he was hoping for anonymity, which was about as naive as we'd all been when we were standing in that field in Malmedy. But then again, a good journalist doesn't beat their victim over the head with a story. The last thing you want to do is turn your prey into a martyr.\n\nInstead, you shepherd your reader to the right conclusion using little pokes and prods. That's what I did to Pieper. My aim was to hound him until the day he died. So, I sniped at him for almost ten years.\n\nMy masterpiece was a touching little feature that I wrote for all the international rags. It was a \"Whatever happened to?\" story about a famous Nazi war criminal who was living peacefully in the quiet little French village of Traves, Haute Saone -- by the way - here's his address if you're interested...\n\nI don't know whether my article caused what happened next. One can only hope. But shortly thereafter the former SS Obersturmbannfuhrer's house was firebombed, and his badly burned corpse was discovered in the ruins. That was on Bastille day 1976. Hopefully the eighty-six American soldiers he had murdered at those fatal crossroads rested better that night.\n\nAuthor's Note: I didn't set out to write a companion piece to \"The Baltimore Bitch.\" But that's the way this one turned out. My stories don't fit well into categories on this site. So, I put it where my eight regular readers expect to find me. And before you contact me, I know that I've gotta get Peter and Josette together. So as they say in the radio days, \"Stay tuned.\""
    ],
    "authorname": "dtiverson",
    "tags": [
        "beautiful wife",
        "miscommunication",
        "reporter",
        "\\",
        "payback",
        "girlfriend betrayal"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/dulce-et-decorum-est"
}