{
    "title": "Just a Little Magic Ch. 14",
    "pages": [
        "JUST A LITTLE MAGIC Chapter 14\n\n1. BREANNA Atlanta, Georgia January 9, 2001 January 14, 2028\n\n2. ELODIE Brugges, Belgium February 8 February 13\n\n3. VICKY Singapore March 9 March 13\n\n4. SOPHIE Montreal, Quebec April 7 April 12\n\n5. IRENE Limassol, Cyprus May 7 May 11\n\n6. SANDRA Taipei (Taiwan) June 5 June 10\n\n7. ASHLEY Chicago, Illinois July 5 July 9\n\n8. MIRELLA Sao Paulo, Brazil August 4 August 8\n\n9. KAVIA Vadodara, Gujarat September 2 September 6\n\n10. ESTHER Johannesburg, S.A. October 2 October 6\n\n11. TAMARA Tampa, Florida November 1 November 5\n\n12. RI Osaka, Japan November 30 December 1\n\n13. JANINE Toronto, Ontario December 30 December 31\n\n******\n\nI stood in Breanna's living room for a good few minutes, trying to make sense of what I was looking at. A full moon.\n\nI was a fool. A dupe.\n\nLillian and Janine had lied to me. They'd taught me about magic, and sex. Lots of sex. They'd blinded me with magic and sex, and fed me an unbelievable story - a tale so ludicrous, only an idiot could have believed it.\n\nThat idiot would be me.\n\nI left Breanna soaking in her bathtub, and staggered outside, where I promptly threw up. My head hurt - it was like a migraine on steroids.\n\nGet away. That was all I could think of. Drive - Lillian could find me, if she wanted to search. But why would she be looking? She couldn't read my mind from a distance. As far as she and Janine knew, I would be happily having sex with Breanna - and impregnating her. They'd be unlikely to worry about where I was until later in the day tomorrow, or the day after, at the earliest.\n\nEven if they did realize that I was gone, they'd have to physically catch up with me - not so easy to do if I kept moving. I needed help. I needed proof. But my first priority had to be to put some distance between us.\n\nI drove. Concentrating on simple tasks helped to clear my head a little, though I could still feel it throbbing. I couldn't stop myself entirely from thinking about how Janine had sabotaged my only two serious relationships before Sophie - Michelle and Danielle.\n\nTo Lillian and Janine, I was no more than a tool - and a pretty dim-witted one at that. They must have shared a good many laughs, comparing notes about how stupid I was.\n\nFour hours later, I stopped for gas, and then checked in at a motel. I didn't need to sleep; I was far too tightly wound for that. But I did want access to their internet. I used my phone to look up the dates of the full moons.\n\nI knew what they would be. I just wanted the evidence right in front of me, to clear my head - to help me snap out of this mind-fog.\n\nExcept that I couldn't. I immediately felt a powerful wave of nausea sweep over me. I tried to tough it out - to grit my teeth and just persevere. It didn't work. I spewed again, hurling what was left of my last meal into the bathtub.\n\nWhen I recovered, I staggered back to my car, and started driving again. That seemed to help a bit. I still needed help, though.\n\nI called Sammy.\n\n- \"Are you out of your freakin' mind!\" he snarled. \"Do you know what time it is?\"\n\n- \"4:38.\" I said. \"Sammy - I'm in trouble. Big trouble. You were right, all along.\"\n\n- \"What? Wait - WHAT?\"\n\n- \"I'm on the run from Janine and Lillian. I need your help.\"\n\nThere was silence, for a moment.\n\n- \"Where are you?\"\n\n- \"Coming up on Lexington, Kentucky. Sammy - I need you, man.\"\n\nMy best friend stepped up, when I needed him most.\n\n- \"Tell me what you want.\"\n\n- \"Meet me in Windsor. (Windsor is a small Canadian city just across from Detroit, Michigan, about 3 1/2 hours from Toronto). Get a motel room - I'll call you for directions when I get close. Make sure it has internet. Load up on coffee - and some donuts, or something. And a change of clothes for me. In fact, pack me a bag.\"\n\n- \"Motel in Windsor. Coffee and donuts. Pack a bag for you. Got it. If you think of anything else, call me back. I'll see you there.\"\n\n- \"Thanks, Sam.\"\n\n- \"Just be careful. Drive safe.\"\n\nI only had one friend like Sam. In an emergency, he would be there for me.\n\nIt took me another 6 1/2 hours to get across the border. I'd made great time at first; it's amazing how much ground you can cover in the early hours of the morning. Now the traffic was heavier, but I still made good time.\n\nSammy was waiting for me at the Starlight motel (honestly - is there a Starlight motel in every city in North America?) I would have hugged him, but my shirt and pants were still covered in flecks of vomit.\n\n- \"Dude - you reek.\"\n\n- \"I know - that's why I wanted the change of clothes. I need a shower, too. You need to look up -\"\n\nI couldn't even get the words out before the bile rose in my throat. I was dry heaving, though, with nothing left in my stomach to vomit.\n\n- \"Pete! Holy shit!\" Sammy was shocked to see me bent over, my body wracked with spasms.\n\nHe got me into the motel room, and sat me down on the bed.\n\n- \"Sammy ... full moons - uurgh! - dates - eeurgh!\"\n\n- \"What the fuck, Pete?\"\n\n- \"Dates -\" I was bent over, sweat and snot running down my face.\n\n- \"The dates of full moons?\" said Sammy.\n\nI weakly waved a hand at him, and began crawling to the bathroom. He insisted on helping me to my feet - though he wisely sat me down on the toilet seat. He turned the shower on.\n\n\"I've got you, Pete. Just clean yourself up.\"\n\nHe was even willing to help me strip off my disgusting clothes. I waved him away.\n\nThe water helped. Not having to think helped even more. I held my head under the scalding hot water, and tried to think of other things.\n\nI finally came out of the bathroom, wrapped in a couple of towels which had once been white (but were now closer to grey). Sammy was sitting on the bed.\n\n- \"You okay?\" he asked.\n\n- \"No.\" I said. \"What did you find?\"\n\nSammy held up his phone. To my surprise, seeing those dates didn't make me hurl - because I'd seen them all before.\n\nI called up a file on my phone, gave it a new title, and showed it to Sam.\n\nSam's Dates - full moons of 2028 my list - the dates Lillian and Janine had given me\n\nJanuary 11 January 14\n\nFebruary 10 February 13\n\nMarch 10 March 13\n\nApril 9 April 12\n\nMay 8 May 11\n\nJune 7 June 10\n\nJuly 6 July 9\n\nAugust 5 August 8\n\nSeptember 3 September 6\n\nOctober 3 October 6\n\nNovember 2 November 5\n\nDecember 1 December 4\n\nDecember 31 January 3 (2029)\n\nThere it was.\n\nIt didn't make me throw up. Lillian and Janine had told me that my father was going to rape the 13 women on the dates to the right. They'd convinced me that I had to go in three days earlier, to pre-empt his evil plan.\n\nBut I would have been impregnating the women on the night of a full moon - which Lillian had claimed was my father's scheme.\n\nDupe. Idiot. I'd been played. If Breanna hadn't started talking about how animals and people behaved differently during a full moon, would I have looked out the window? Would I have even realized what I was seeing?\n\nLillian (or Janine) had somehow bewitched me, so that I couldn't look up the cycle of full moons. I couldn't even think about them. I certainly couldn't tell anyone - as I'd learned when I'd tried to share the secrets with Sophie.\n\n- \"Dude - what is this?\" Sammy was confused.\n\n- \"I can't tell you.\"\n\n- \"What the hell?\"\n\n- \"Every time I think about it, I get nauseous, and my brain stops working. I tried to tell Sophie, last year. I got a fever, and puked my guts out for three days. I can't tell you, Sam.\"\n\n- \"You get sick when you try to tell me - but why?\"\n\n- \"I can't say. But maybe you can guess.\"\n\n- \"You want me to guess? Fuck, Pete - I'm shitty at twenty questions.\"\n\nI handed Sammy my phone.\n\n- \"Contacts 2.\" I said. That was enough to fold me in half, sending me to my knees as the pain seized me.\n\nSam found the correct file.\n\n1. BREANNA Atlanta, Georgia January 9, 2001 January 14, 2028\n\n2. ELODIE Brugges, Belgium February 8 February 13\n\n3. VICKY Singapore March 9 March 13\n\n4. SOPHIE Montreal, Quebec April 7 April 12\n\n5. IRENE Limassol, Cyprus May 7 May 11\n\n6. SANDRA Taipei (Taiwan) June 5 June 10\n\n7. ASHLEY Chicago, Illinois July 5 July 9\n\n8. MIRELLA Sao Paulo, Brazil August 4 August 8\n\n9. KAVIA Vadodara, Gujarat September 2 September 6\n\n10. ESTHER Johannesburg, S.A. October 2 October 6\n\n11. TAMARA Tampa, Florida November 1 November 5\n\n12. RI Osaka, Japan November 30 December 1\n\n13. JANINE Toronto, Ontario December 30 December 31\n\nSammy stared at the list for several minutes.\n\n- \"Pete - Sophie is on this list. And so is Janine.\" He looked again. \"And that Brazilian model - Mirella. You already knew who she was?\"\n\nHis thoughts didn't hurt me. I was able to get up off the tattered carpet.\n\n- \"Keep guessing.\"\n\n- \"13 women, and where they're from. These are cities where you've been touring for the past couple of years. So that's the connection? Aw, shit - have you been banging all of these women?\"\n\n- \"Not all of them.\"\n\n- \"But not for lack of trying, is that it? Geez, Pete - I thought you weren't going to cheat on Sophie.\"\n\n- \"I didn't ...\" I stopped myself. It sounds pretty pathetic to say 'I didn't want to'.\n\nSammy was pretty disappointed in me. I didn't have to read his mind to see that.\n\n\"What's the 3rd column?\" he said.\n\n- \"What do you think they are?\" I managed to say, without nausea, or spasm.\n\nSammy studied the list a little longer. \"Wait - December 30th - isn't that Janine's birthday? And April 7th - that's Sophie's birthday.\"\n\nI wasn't puking. I could nod my head.\n\n- \"What's special about those dates? Is that the connection between all of these women?\"\n\nI helped a bit, but Sammy had to figure out for himself. It took him a while. But the internet can be a wonderful thing.\n\n\"Holy shit ... they were all born the night of a full moon.\"\n\nIt took a bit longer for him to make the second connection.\n\n\"You mean ... they were all born on the night of a full moon - all in the same year?\"\n\n- \"Yes.\" I breathed.\n\n- \"I don't get it.\" he said. \"Pete - what's going on with you?\"\n\n- \"Abracadabra.\"\n\n- \"Magic?\"\n\n- \"Magic, Sam. And who taught me how to use magic?\"\n\n- \"Janine. Lillian.\"\n\nI nodded, ever so slowly. \"You think I'm puking because I want to?\"\n\nSammy blinked. \"You're saying ... that they used magic on you?\"\n\n- \"Bingo.\"\n\n- \"But ... what does that have to do with these crazy lists? I don't get it.\"\n\n- \"Do you remember, Sam, when I started to learn magic? How badly you wanted to learn, too?\" I said. \"Do you also remember why you couldn't? Can you remember what I told you?\"\n\nSammy wasn't the sharpest tool in the drawer. Neither was I - in fact, I'd pretty much proved that I was dumb as a bag of rocks. But he remembered.\n\n- \"Bloodlines.\" he said. \"You said ...\" Then he made the connection. \"These women ...?\"\n\n- \"Yes.\" I was able to say that without vomiting, without a migraine.\n\n\"We have to move, Sammy. I need to find someone to help us. Someone who knows magic. We need help against Lillian and Janine.\"\n\n***\n\nWe left my rental at the motel. It had been rented under Lillian's name, anyway. Sammy drove us, in his car. That didn't stop him from guessing. Some of his speculations were ... let's just say they were wide of the mark. But he did figure out that the 13 women on the list came from magical bloodlines.\n\nHe wasn't very good at 20 questions - it was more like 267 questions.\n\n- \"Why 13?\" he wanted to know.\n\n- \"What comes in thirteens?\"\n\n- \"Donuts. Bagels. Ahh ... 13 cards in every suit? Does this have something to do with a deck of cards?\"\n\nSammy did have some good advice, though.\n\n\"We need help. Magic help.\"\n\n- \"I know.\"\n\n- \"Well, what about asking these women? Are you friendly with them? Because if they come from these magic bloodline families, maybe they have a relative who knows magic.\"\n\nThat wasn't a bad idea.\n\nI had 4 messages from Breanna. I decided not to start with her.\n\nWhat I ended up doing was putting together a single message, and sending to all 12 women.\n\nThis might sound strange, but I'm asking because it's something of an emergency. I need magical help - urgently. Is there someone in your family who knows magic? Real magic, I mean. Please let me know as soon as possible.\n\nThe first answer came from Breanna.\n\n- Where the hell did you go? Where are you?\n\nThere were several more in fairly quick succession.\n\n(Ri) Are you still in Japan?\n\n(Sophie) Are you okay?\n\n(Ashley) Are you headed this way? I can look up other magicians in Chicago, if you want.\n\n(Kavia) Rather an odd question, don't you think? I don't know anyone who does what you do.\n\nThe responses were a little underwhelming. They kept coming in, though. Elodie wanted to know what was going on. Tamara was concerned, too. Breanna kept firing off messages, asking questions that I couldn't answer.\n\n(Irene) Is there any way I can help?\n\n(Mirella) I have an Aunt who tells fortunes. And if you're in trouble ... you know you can come here. Or tell me where to meet you.\n\nSome fifteen minutes later, one message caught my eye.\n\n(Sophie) You're in danger, aren't you? Call me. I can help.\n\nI texted her back. Thank you, love. Not sure you can help me with this.\n\n(Sophie) Aunt Anna may be able to, if you can get to Toronto. On my way there now. Her number is 416-320-2659. She said to call. Call her. I love you.\n\nAunt Anna was a psychic. I couldn't see how that was going to be of any help to me - but it might be better than nothing. At the very least, I didn't want to reject Sophie's offer out of hand. I made the call.\n\n- \"Peter?\"\n\n- \"Hi, Aunt Anna.\"\n\n- \"What kind of trouble are you in?\" she said.\n\n- \"Umm ... it's hard to explain.\"\n\n- \"This is no time to be shy, Peter. You've got magical problems. What kind?\"\n\n- \"I don't know if I can explain, Aunt Anna. I've ... I've tried to tell someone before. I ... got sick. I vomited, and came down with a fever ...\"\n\n- \"And a migraine?\" said Aunt Anna. \"Worst headache of your life?\"\n\n- \"What? How ... how did you know that?\"\n\n- \"I know a few things about magic. Are you able to tell me who might have cast a spell on you?\"\n\nI couldn't. I mean ... I was stunned - Aunt Anna knew about real magic? But I couldn't even begin to form the words.\n\n- \"It was Janine!\" yelled Sammy. \"And Lillian!\"\n\n- \"Who's that?\" asked Anna.\n\n- \"My best friend - Sammy. He's driving.\"\n\n- \"Good. And who is Lillian?\"\n\n- \"Janine's mother.\" I said.\n\nAunt Anna didn't say anything for a few moments. Then she gave us instructions.\n\n- \"Here's my address. Get here as soon as you can. Park your car in front of the house, and then ring the doorbell.\"\n\n- \"Are you sure, Anna?\" I said. \"I don't want to drag you into my troubles.\"\n\n- \"Thank you for that, Peter. But please believe me - coming straight here is the best thing you can do right now. For you - and for Sophie.\"\n\n- \"Okay. We'll be there in a couple of hours.\" I hung up.\n\nSammy was slowly shaking his head.\n\n- \"Holy fuck, holy fuck ... what the fuck is going on ...?\"\n\n- \"We're going to Aunt Anna's house.\"\n\n- \"So Lillian was the one who taught you magic, right?\"\n\n- \"Yes.\"\n\n- \"And Janine can do real magic, too?\"\n\n- \"Yes. You already knew that.\"\n\n- \"We are so screwed. They messed with your head, didn't they?\"\n\n- \"What?\"\n\n- \"Think about it, Pete.\" said Sammy. \"While they were teaching you, they ... they programmed you. Brainwashing. They made you do things, right?\"\n\nI was getting nauseous, just thinking about it.\n\n- \"Sam ...\"\n\n- \"They put some kind of spell on you. From the very beginning - that's why you did all that weird shit, like breaking off with Danielle for no reason -\"\n\nI could see the truth in what Sammy was saying. I just couldn't think about it. I turned my head in time, but couldn't quite get the window down fast enough. I spewed semi-digested coffee and donuts all over the passenger door of Sammy's car.\n\nThe inside of the passenger door.\n\n***\n\nAunt Anna was like an older version of Sophie: dark hair, dimples, and cleavage. She didn't react at all to my dishevelled appearance, or to the stink of the vomit splashed down the side of my shirt and pants.\n\n- \"Come in.\" she said. \"Hello, Sammy - I'm Sophie's Aunt Anna.\"\n\nShe invited us into her kitchen, where a pot of soup was simmering on the stove. Aunt Anna was a very practical woman: she sent me to the bathroom to change my clothes. Then she fed us.\n\n- \"This is great.\" said Sammy. \"Thank you very much.\"\n\n- \"You're very welcome.\" She let us eat in peace - although she didn't even attempt to hide the fact that she was studying me carefully.\n\n\"I'm sorry if I'm making you feel uncomfortable, Peter - I'm just trying to figure out what's been done to you.\"\n\n- \"They cast spells on him, didn't they?\" said Sam.\n\n- \"How about if you two just shut up for a bit, and let me work.\"\n\nSammy turned to me, with a big wide-eyed grin. 'She knows magic.' He mouthed the words.\n\nAnna studied me carefully for several minutes. Then I jumped - it was like someone had touched me with a fingertip.\n\n- \"Sit still. I'm not going to hurt you.\" said Anna.\n\n- \"Sorry.\"\n\nIt got weirder. I felt more fingertips, and then something akin to a scratching fingernail. I grit my teeth and tried not to move.\n\nAnna sat back, and let out a deep sigh.\n\n- \"They put spells on him, right?\" said Sammy.\n\n- \"They most certainly did. Multiple spells. I recognize Janine's work here - and someone else's, of a much greater order of magnitude.\"\n\nMy eyebrows rose at that. \"You can recognize -?\"\n\n- \"Oh, yes. Every mage, every witch has a very distinct signature. It's better than a fingerprint; once you've seen a magician's work, you can always recognize it when you see it again.\"\n\nMy mouth fell open.\n\n- \"You ... you're ...\"\n\n- Yes.\" said Aunt Anna. \"I'm a witch. A fairly good one. But this kind of thing is well over my head, so I've called in some help.\"\n\n- \"Help?\" said Sammy.\n\n- \"Have you read the Harry Potter books?\" asked Anna.\n\n- \"I saw the movies.\"\n\nAnna shook her head. \"Nobody reads anymore. Then everyone wonders why democracy doesn't work. Oh, well ... do you remember the Ministry of Magic?\"\n\nSammy goggled at her. \"You mean it really exists?\"\n\n- \"No. There's no such thing.\" said Anna. \"But we magic-users learned long ago that all of us suffer when one of us goes rogue. So we police ourselves - we keep tabs on the dangerous ones, and rein them in.\"\n\n- \"Does ... does Sophie know -?\" I asked.\n\n- \"That I'm a witch? No. But I suppose that little secret ends tonight.\"\n\nSammy's eyes were about to pop out of his head. I was stunned, too: Sophie's Aunt was a witch? There were Magic Police?\n\n- \"So ...\" said Sammy. \"You can tell that Pete's got spells on him?\"\n\n- \"Oh, yes. Geasa.\"\n\n- \"Geasa?\"\n\n- \"The plural of geas.\" said Anna. \"An old type of Irish spell.\"\n\n- \"A compulsion.\" I said. \"To make you do something.\"\n\n- \"Yes. But a geas can also be a prohibition.\"\n\n- \"To prevent me from telling anyone what was going on?\"\n\n- \"I think so. But is there any way that you could find to let me know what's happened?\"\n\nSammy stepped into the breach. He showed Aunt Anna the lists we'd compared: the names of the 13 women, their birthdays, and the dates of the full moons this year. Anna was no fool. She quickly began to put 2 and 13 together.\n\n- \"Were you in Atlanta, yesterday?\" she asked me.\n\n- \"Yes.\"\n\n- \"What happened?\"\n\n- \"I was supposed to ...\" I felt the bile rising. I didn't want to throw up all over Aunt Anna's kitchen.\n\n\"I ... saw the full moon.\" I said - without vomiting. \"I ... left. I started driving - and I called Sammy.\"",
        "My buddy reached out and put a hand on my shoulder.\n\n- \"He's a bit of a goof, Aunt Anna. But he's not a bad guy.\"\n\nAnna was spared the need to respond, as her doorbell began ringing. Two short rings, followed by a long and a short. Short long short. Short short. Short. Long short. Long short short.\n\nAnna rose from the kitchen table.\n\n- \"Stay here.\" she said.\n\nSammy just looked at me, his eyes wide.\n\n- \"A bit of a goof?\" I said.\n\n- \"You have been pretty stupid.\" said Sam, unapologetically.\n\nThat was fair.\n\nAunt Anna came back to the kitchen, with another woman. I recognized her.\n\n- \"Eileen?\"\n\nShortly after I'd met her, Aunt Anna had come to see one of our shows in Toronto, with her friend Eileen. The two ladies had stayed around after the show (as I dodged a groupie), and had invited me out for a late meal. If I remembered the occasion correctly, Eileen had done most of the talking, being a self-confessed 'magic nerd'.\n\nAnna introduced her to Sammy. Eileen sat down across from me.\n\n- \"May I?\" she asked. Instead of waiting for my permission, she began to study me, just as Anna had done. I could almost feel the touch of spectral fingers, brushing back my hair, and touching my forehead.\n\n- \"What's she doing?\" asked Sammy.\n\n- \"Sshh.\" said Anna. \"In fact, Sammy - it's probably best if you don't talk at all for a while.\" The words weren't unkind; Sam took them in the spirit they were intended.\n\n- \"Holy shit.\" said Eileen.\n\n- \"I know.\" said Anna.\n\n- \"Rodney's on his way, but I should probably contact him ...\"\n\n- \"Yes.\"\n\nAnna suggested that Sammy lie down on her couch; she sent me to her guest room. She promised to wake me as soon as anything important happened. We were both exhausted. I don't even remember falling asleep.\n\n***\n\nI didn't hear the doorbell ring again. I woke to the pressure of moist lips on my face, and of full breasts against my chest.\n\n- \"I'm here, Pete - I'm here.\" she said.\n\nI wrapped my arms around her, and held her close.\n\n- \"Sophie, I'm ... I've been ...\"\n\n- \"It's alright. I'm here. Everything is going to be alright. I'm here.\"\n\n- \"You don't understand ... what I've done -\"\n\n- \"It's alright, Pete. I'm here.\"\n\n***\n\nI awoke to the sound of the doorbell ringing again - another infuriating combination of short and long rings - honestly, do you have to ring 15 times?\n\nSophie was lying next to me, her arm across my chest. She was wide awake, too.\n\n- \"Hey ...\" she whispered.\n\n- \"I didn't ... I don't want you in danger.\" I said.\n\n- \"It's alright. All under control.\"\n\nI wished that I could have shared her confidence. My life was a cluster-fuck of legendary proportions, and I was dragging a dozen and more good people down with me.\n\n- \"Soph - I've done some things ...\"\n\nShe put her finger against my lips. \"There's time for that. Later.\"\n\nAs if to put the lie to her words, there was a knock on the door.\n\n- \"Peter? Sophie? May I come in?\" It was Aunt Anna's voice.\n\n- \"We're decent.\" said Sophie. Well ... one of us was.\n\nAnna opened the door. \"You two should come downstairs.\" she said.\n\nWe were introduced to Rodney, a distinguished looking, older black man, with silver hair.\n\n- \"How do you, Peter?\" he said.\n\nIt was beyond strange. I was wrapped up in some of supernatural horror story, and these people had time for polite conventions. I would have felt more at home if everyone had been running around screaming their heads off.\n\n\"Would you mind ...?\" asked Rodney. He wanted to 'examine' me, as Anna and Eileen had.\n\n- \"Go ahead.\" I said.\n\nRodney's touch was light, and skillful. It felt like a very gentle scalp massage.\n\n- \"Thank you.\" he said. With Anna and Eileen, he retreated to the kitchen for a short time.\n\nWhen they emerged, it was to give us specific instructions. Sophie, against her protests, was sent upstairs. Aunt Anna had to do some furious whispering before she could get her niece to agree.\n\nSammy and I were asked to sit on the living room couch.\n\n- \"What do you want us to do?\" I asked.\n\n- \"Nothing.\" said Anna. \"Sit still, and wait for instructions.\"\n\nEileen and Anna sat down as well. Rodney went off to the kitchen. Sammy and I sat there, like a couple of idiots. That was my role in this whole affair, at least - the idiot.\n\nI'm really lousy at gauging the passage of time. On the few occasions that I'd actually gone to one of my college classes, I'd been amazed at how damn long they'd been. I was often longing for the final bell a mere 15 minutes into the class.\n\nHalf an hour? An hour? We sat there, waiting.\n\nThe doorbell rang. A single ring.\n\nEileen stood up, and put on a pair of sunglasses - actually, they were more like tinted goggles. Anna did the same. Then both of them put plugs in their ears.\n\n- \"Sammy, would you mind answering the door?\" she asked.\n\nIt wasn't a request - it was more like an order. Sammy did it.\n\nWhen he opened the door, I saw Janine standing on the front step. She was ... absolutely beautiful. Her long black hair had never looked finer. She was, without a doubt, the most spectacular, the most attractive woman I'd ever seen.\n\nShe made a swift gesture with her hand, and Sammy went flying backwards, as if he were doing a reverse long jump. He flew halfway down the entry hall, towards the kitchen.\n\nThat was when I stood up. Janine immediately saw me.\n\n- \"There you are!\" she snapped.\n\nAt that precise moment, Eileen stepped forwards, and tasered her. Janine's eyes rolled back in her head. Her body convulsed, in a series of spasms. She fell to the ground, twitching.\n\nThen I heard Lillian's voice. She was directly behind Janine, in the doorway.\n\n- \"Wait! Wait! We can talk about this -\"\n\nThat was when a man and a woman came up behind her - and both of them tasered her. Lillian jerked, flailed about, and collapsed.\n\nThe woman tasered her again - just to be sure.\n\n***\n\nThe strange man and woman put Janine and Lillian's limp bodies on the couch. They tied their feet together, and bound their hands with plastic ties. They even tied the women's fingers together. For a finishing touch, Janine and Lillian were gagged, and then the gags were covered with duct tape.\n\nSammy was okay - a little freaked out, but unhurt. As for me ... I was in shock. I couldn't quite believe what I was seeing. Less than 48 hours earlier, I'd still been their ignorant tool. Now I looked at them - unconscious, bound and gagged - and it made no sense.\n\nThey'd been my mentors. Lillian and Janine had directed the course of my career - of my whole life. When I finally realized how thoroughly they'd kept me under their thumbs, I began to see them as ultra-powerful - and ultra-dangerous.\n\nBut Aunt Anna and her friends had taken them down in a matter of seconds.\n\nThen I remembered Lillian telling me about my real father, Robert Clifford. He was an Archmage - much too powerful for them to oppose. Maybe they hadn't been lying about that part.\n\nRodney began to make a phone call. Aunt Anna led Sammy and me upstairs. She showed us into the guest room.\n\n- \"You'll have to share.\" she said.\n\n- \"Thank you.\" I said. \"For what you've done.\"\n\n- \"I didn't do it for you.\" said Anna.\n\n- \"You suspected something early on, didn't you?\"\n\n- \"What makes you say that?\"\n\n- \"You came to one of our shows - with Eileen. She may be your friend, but she's also some kind of enforcer, isn't she?\"\n\nAnna sighed. \"I saw Sophie after you two had started ... dating. She was obviously ... infatuated. It seemed to be happening really quickly, and when she told me that you were a magician ...\"\n\n\"There was a spell on her. An enchantment - to make her love you. I removed it. Then I tried to decide whether to castrate you with a dull knife, or to strangle you with my bare hands. The only thing I had to do first was to make sure that it was you.\"\n\n- \"And Eileen came along to help?\"\n\n- \"Yeah. Right away, though, we realized that it wasn't you -\"\n\n- \"By my signature?\"\n\n- \"Yes. It wasn't Janine, either.\"\n\n- \"Lillian.\" I said.\n\n- \"Yes. We know that now. But at the time, we just wanted to be sure about you. So Eileen and I took you out for a meal, and tried a few probes.\"\n\n- \"You read my mind?\" I hadn't thought that was possible - not after Lillian had taught me to defend myself.\n\n- \"No.\" said Anna. \"It was more like 'reading your aura', if you understand what that means. You hadn't been using evil spells. In hindsight, we should have invited Janine to dinner with us. Plus we should have asked you a lot more questions.\"\n\n\"But I'd learned something else when I removed the spell on Sophie. She was still in love with you - which meant that she was in love with you before the spell was cast.\"\n\nThat was the single most wonderful thing I'd ever heard. My heart was swelling, if such a thing is even possible.\n\n- \"Can I see her?\" I asked.\n\n- \"No.\"\n\nAnna turned to Sammy, who had somehow managed to remain silent for several consecutive minutes.\n\n\"You aren't in trouble. But I hope that you can see how much we have to do in order to clean up this mess. Damage control - and figuring out who's guilty of what.\"\n\n\"Stay in this room. Please don't let Peter do anything stupid, like trying to leave, or casting spells.\"\n\n- \"Are you going to wipe my memory?\" said Sam. \"You know - like 'Men in Black'?\"\n\n- \"We'll talk again in the morning.\" said Aunt Anna.\n\nThe moment she left, Sammy punched me in the shoulder - hard.\n\n- \"Ow! What was that for?\"\n\n- \"For scaring the shit out of me! For being a dumbass - I told you that Janine was using you. But did you listen to me? Noo ...\"\n\n- \"Sam - they put spells on me. Lillian and Janine.\"\n\n- \"You're still a dumbass.\"\n\nHe was probably right. Exhausted as I was, I barely slept that night.\n\n\"If you puke in the bed, I'll kill you.\" he said - several times.\n\n***\n\nAnna had obviously been over-optimistic when she'd said we would talk in the morning. She let us out of the guest room, and had us use the bathroom and shower. Then she served us breakfast.\n\nEileen was there, too, plus another man and woman that hadn't been there last night. There was no sign of Rodney - or of Janine and Lillian.\n\n- \"What's going to happen to them?\" I asked Aunt Anna.\n\n- \"I don't know, none of your business, and why do you care?\"\n\nShe did let Sophie join us for breakfast - and that improved my outlook immeasurably. Sophie's eyes lit up when she saw me, and her entire face transformed into a veritable showcase of dimples.\n\nShe came up beside me, and wrapped her arms around me. I felt her soft, warm lips on my cheek.\n\n- \"How are you?\"\n\n- \"Better now.\" I said, as I kissed her back.\n\nShe sat down next to me.\n\n- \"Anna told me about ... the spell on me. She says that it wasn't you that put it there.\"\n\n- \"It wasn't. It was probably Lillian.\"\n\nSophie nodded. \"That's what Anna said. She also told me that it made no difference - that I was in love with you before the spell - and after.\"\n\n- \"You have no idea how happy that makes me.\"\n\n- \"Do you know, though, Pete - is there a spell on you?\"\n\n- \"Lots of them, I think. Lillian and Janine wanted to make sure that I would do exactly what they told me to do.\"\n\nSophie's face clouded over. \"Does that include ... falling in love with me?\"\n\n- \"What?\" It had never, ever occurred to me that she would think something like that.\n\n- \"Are you only in love with me ... because of a spell? Anna said that I was ... on their list.\"\n\n- \"No - Sophie, no. When we met, I had no idea that you were ... on the list. And I never told Janine or Lillian that I'd met you. No, Sweetheart - that was just us. You and me. Serendipity.\"\n\nShe smiled, but it was a weak attempt.\n\nSammy chose that moment to put his 2 cents in.\n\n- \"For what it's worth, Sophie, he never shut up about you.\" Considering how much Sammy talked about Trish, that was hardly fair.\n\n\"I don't know how this list worked - and I'm pretty sure that dumbass here did some things he should be regretting - but there's one thing you should know: when we were in Paris, Janine threw herself at Pete.\"\n\n\"She pretty much demanded that he f- have sex with her. And Pete said no. She was furious. I asked him how he'd done it - because he'd never be able to say no to her before. About anything. He was Janine's doormat, for years.\"\n\n\"But d'you know what he said to her? He said: 'I can't. I'm not going to cheat on Sophie.'\" \n\nSophie buried her head on my shoulder.\n\n- \"I so want to make love to you right now.\" she whispered.\n\nThat was what I wanted, too. But I had just enough common sense remaining - and maybe just a smidgen of honour - to turn her down.\n\n- \"You're going to hear some ... things, Sophie. Some things I've done. I don't know how much of that was the spells they put on me - and how much was just ... me. You need to hear all of it ... before you make any decisions.\"\n\n***\n\nAunt Anna didn't get around to me until the following day. She did let Sammy call Trish, and then his Mom, but she carefully monitored his call to make sure that he didn't say anything about magic or about me.\n\n- \"Peter. Are you ready?\"\n\n- \"Ready for what?\"\n\n- \"We're going to try to take the spells off you.\"\n\nI stood up immediately. For some reason, I suspected that it was going to be like a root canal sans anaesthetic - but it had to be done, and I was eager to have it over with. I was also curious to find out just what Lillian and Janine had done to me.\n\nAunt Anna led me to her basement - which was just a bit ominous. Eileen and Rodney were waiting there, with an old chair that looked like it had belonged to a kitchen set from the late 1940s.\n\n- \"Have a seat.\" said Eileen. \"And don't be alarmed - this is just a safety precaution.\" She and Rodney proceeded to use duct tape to fasten my ankles to the chair legs, and then to immobilize my hands behind the back of the chair.\n\n- \"We're going to try to dispel the magic on you, Peter.\" said Rodney, in a deep, gravelly voice. \"Do you we have your consent?\"\n\n- \"Do you need it?\"\n\n- \"It helps a great deal.\" said Aunt Anna. \"It also hurts a lot less.\"\n\n- \"I consent.\"\n\nI have no idea what I was expecting. I know that Anna, Eileen, and especially Rodney used magic on me. But I wasn't prepared for the ... feeling.\n\nAt first, it felt like they were hammering away at a concrete wall with a sledgehammer. Then ... it was more like a chisel. I could sense the blows, feel the vibrations on my skin ...\n\nCobwebs, and dust. I was like some old attic that hadn't been subjected to a spring cleaning in decades. But then I began to feel like they were pulling strands of wet spaghetti off of me.\n\n- \"Good grief,\" said Eileen, \"it's like peeling wet wallpaper.\"\n\n- \"Amateurs.\" sniffed Rodney.\n\nEileen suggested a break, which Rodney quickly agreed to. Anna went off to get coffee and tea.\n\n- \"Is it bad?\" I asked.\n\nEileen shook her head. \"It's not ... horrible.\" she said. \"They seem to have used a dozen spells, though, where one or two would have sufficed.\"\n\n- \"Eileen?\" said Rodney.\n\n- \"You're seeing the exact same things that I am.\" she said.\n\n- \"What is it?\" I asked.\n\n- \"You seem to be a nice boy.\" said Rodney. \"A bit of a fool, to tell the truth, but it may not be all your fault. Just be quiet, now, will you?\"\n\n- \"Sorry.\"\n\nAnna returned.\n\n\"Aunt Anna - is there any way I can help? I mean, is there any way I can make this easier for you?\"\n\n- \"Do you know how to dispel magic, Peter?'\n\n- \"Umm ... no.\"\n\n- \"Then just shut up, and let us work.\"\n\nThey returned to their labours.\n\n- \"Eew!\" said Eileen.\n\n- \"Butchers.\" said Rodney. \"This is unconscionable.\"\n\nI was bursting to ask. Eileen saw me looking at her.\n\n- \"They stunted your growth, kid.\" she said. \"You have potential, but they made sure that you would never learn any real magic. You're riding a bike with the training wheels still on it. They never really taught you to protect yourself - especially against them.\"\n\n- \"Really?\"\n\n- \"You sound surprised.\" said Anna.\n\n- \"I thought ... I thought that I was fairly powerful.\" I'd been envisioning myself as some sort of mid-level Spiderman: with some power comes a bit of responsibility.\n\nAunt Anna chuckled.\n\n- \"Hate to break it to you, Pete. In terms of raw power, you're a table lamp - with the dimmer switch set to 'low'.\"\n\n\"On the brighter side, mentalism is fairly rare.\"\n\n- \"Is it?\"\n\n- \"How many mentalists have you run into?\"\n\n- \"Well ... Janine, and Lillian.\"\n\n- \"They aren't. Not really. Janine has telekinesis, and she's also a coercer. Lillian is an enchantress. They couldn't really read minds - not the way you can.\"\n\n\"Are you done with the questions? We'd really like to finish this before midnight.\"\n\n- \"Sorry.\"\n\nThe removal of the spells continued, but what I was feeling began to change. At first, it was like a cast coming off. Then, it was like having soaking wet clothing peeled from me. It was weird, to begin with, but it grew progressively more uncomfortable.\n\nThen it began to be a little more painful, like peeling off a bandage and taking a few hairs with it. Then a lot of hair. And then it felt like they were tearing fresh scars away, taking bits of flesh with them.\n\nI grit my teeth.\n\n- \"Hang in there, kid.\" said Rodney. \"We're almost done.\"\n\nI managed to not cry out, even when the pain was like a dentist's drill. But then came one that felt like having my pubic hair torn out by the roots.\n\n- \"YAAH!\"\n\n- \"Easy - easy. That was the last one.\" said Eileen. \"That's it. We got them all.\"\n\nThe pain didn't fade right away. On top of that, I felt ... naked, somehow.\n\n- \"It's over.\" said Anna. \"You can relax.\"\n\n- \"What ... what were they? The spells. What did they do to me?\"\n\nEileen glanced at Rodney, who nodded.\n\n- \"He has a right to know.\"\n\nEileen explained. \"Pete, there were spells to make you believe whatever they told you. Those were the first enchantments - and the last ones to come off. They've been there for years - that's why it hurt so much when we dispelled them.\"\n\nI remembered Lillian hypnotizing me - claiming that it would make it easier for her to find me, and to keep an eye on me. She could watch over me, and protect me, she'd said. Rodney was right; I was an idiot.\n\n\"Then there were spells to prohibit you from telling anyone about things they wanted kept secret. Layers and layers of those ... they were really obsessed about keeping you from talking, or asking questions.\"\n\n\"There were specific prohibitions to prevent you from looking up the lunar cycles, and the location of your real father. Then a crazy mixture of spells to make you want to be a hero, and to impress Janine in particular. A major enchantment to make you seek the thrill of sexual conquest, and a spell to make you horny.\"\n\n- \"As if any teenage boy needs a spell for that.\" said Aunt Anna.\n\n- \"The outer layers - the first spells we removed, were really just more of the same. They seem to have believed that they needed to reinforce the earlier spells. More encouragement of promiscuity, more prohibitions against questioning them, or asking questions at all.\"\n\n- \"They did a real number on you.\" said Rodney.\n\n- \"That doesn't mean that you're off the hook, yet.\" said Aunt Anna.\n\n- \"Unfortunately, Pete,\" said Eileen, \"the hardest parts are still to come.\"\n\n***\n\nAnna suggested that I phone my mother, to let her know that I was okay. Then she led me back to the guest room.\n\n- \"Get some rest.\" she said.\n\nYou can only get so much rest. I had nothing to do but sit and think, and wallow in my regrets - of which I had an almost infinite supply.",
        "They brought me food, and let me take bathroom breaks, plus another to shower.\n\nI spent two more days as a prisoner in Aunt Anna's guest room. No one came to see me.\n\n***\n\nOn the third day, Anna came to get me.\n\n- \"Ready?\"\n\nShe led me downstairs, to the kitchen. Sophie and Sammy were there.\n\nNeither of them spoke - they'd been told not to. Eileen, Rodney and Anna sat down beside them. Anna pointed at a barstool on the opposite side of her kitchen island.\n\n- \"Sit.\" she said.\n\nThe five of them on one side, me alone on the other. It looked a bit like some kind of trial - which is exactly what it turned out to be.\n\n- \"Tell us what happened, Peter.\" said Eileen. \"Everything. From the very beginning.\"\n\n*****\n\n<hr >\n\n Morse code for \"Friend\".\n\n See Chapter 9.\n\n \n"
    ],
    "authorname": "AspernEssling",
    "tags": [
        "magician",
        "magic",
        "nerd",
        "brainwashing",
        "finally"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/just-a-little-magic-ch-14"
}