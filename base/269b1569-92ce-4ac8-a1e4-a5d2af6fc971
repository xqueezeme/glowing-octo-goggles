{
    "title": "Imperius Ch. 09",
    "pages": [
        "Lilah was aware of being carried, and aware of dark and light--soft fabric against her back, and cool liquid against her lips. Aware of his voice, deep and sonorous, all around her.\n\nThen his voice was gone. Lilah slept fretfully. Shadowy giants menaced the air above her, and she would startle out of her slumber only to re-submerge into restless darkness. When, finally, her eyes opened fully, the giants were still there, filling the room with their hard voices and looming close above her.\n\nShe jerked, startled, and then forced her muscles to loosen as she registered her surroundings.\n\nThere were four people in the room with her, and naturally, her eyes sought him out first, even though he was the furthest from her.\n\nMagnus stood with an electronic tablet in his hands, Saphir at his side. Both men were very still, however, and watching her. When Lilah's eyes met Saphir's, he averted his gaze. Lilah looked back at Magnus, who continued to regard her without expression.\n\n\"Miss Claremont,\" spoke one of the others at her side. She tore her attention free from Magnus and turned it on the speaker. An older man, sitting beside her bed. Daegon stood a few steps behind him, a mammoth presence that she chose to ignore. The speaker's hair was salt and pepper, and his skin was lined with maturity.\n\n\"I am the physician overseeing your care. You can call me Gentius.\" His voice was brusque, but not unkind, and he watched her with the studied neutral expression she'd observed in nearly every educated Imperial officer. \"How are you feeling?\"\n\nShe sat up, and looked toward the sky-ship window. They were moving.\n\nMagnus studied her reactions with even more intent than usual. Lilah was aware of this, yet now she felt none of the stormy intensity that had been inextricable from his gaze.\n\n\"I need to use the lavatory,\" she said, turning to the physician.\n\nThe physician glanced at Magnus before he moved to help her up, and she let him guide her to the appropriate door. After escorting her through the threshold, Gentius propped the door nearly shut. She could hear Magnus instructing the others to leave the room.\n\nHer motions were mechanical and slow as she relieved herself, not particularly concerned about privacy. She had only a vague impression of the washroom, a grey, metallic, minimalist space, very different from the elegant white spa she'd been treated to when Saphir had groomed her.\n\nWhen she washed her hands, her eyes drew to an imperfection in the color on the metal wall. It was a pale blotch about a centimeter in size, like a glare of sunlight, peering out of a cloudy sky. It reminded her of something cold and distantly nostalgic.\n\nAfter a time, a voice infiltrated her thoughts.\n\n\"Lilah,\" he said, and she realized it wasn't the first time the voice had spoken. Magnus was standing in the doorway, looking at her.\n\nHe reached down and tested the water with his fingertips, only to swiftly draw his hand away to turn off the faucet. \"Lilah, you...\" he said again, taking her hands in his and turning them over. They were red from the heat, she realized. Magnus guided her to the bed, and she sat on the edge obediently. They were alone together in the room. She realized she was wearing a nightgown, white and gauzy and feather-light, that she hadn't seen before. Then she realized Magnus had left her, that he was rooting around in Gentius' medicine bag.\n\nShe watched him return to her with a bottle of some salve or another, and lower to his knees in front of her. He seemed to be searching her face for something--some feeling perhaps--the way a scout would study an enemy camp. But she didn't have any emotion to offer him. All she felt was tired.\n\nHe applied the ointment to her hands, slowly and gently, his hands firm and slightly calloused. She could have told him that was hardly necessary--that she wasn't really burned, but the idea of opening her mouth to say anything, to even summon any vocal inflection, seemed like a laborious prospect.\n\nHis touch was warm and his movements were firm. Her eyelids grew even heavier as he worked the ointment into her skin. After he had thoroughly treated her, he touched his palm to her cheek.\n\nShe dutifully raised her eyes to his, but when he sought something in her gaze, his own turned shadowed with disappointment.\n\nHe rose and stroked her hair. Lilah neither flinched nor sighed. He paused, contemplative and--for once--indecisive, then left quietly.\n\n~ &lt; &gt; ~\n\nMagnus shut the door behind him and turned to face Saphir, Daegon, and Gentius.\n\n\"Attend to her,\" he said, gesturing the latter two back into the room. \"She isn't to be left alone.\"\n\nHe caught Gentius by the arm before he passed through. \"I want regular updates on her condition.\"\n\n\"Understood,\" the physician replied brusquely, and Magnus let him by.\n\nOnce the door fell closed again, he turned to Saphir.\n\n\"The serum--could it make her feel less pain?\"\n\nSaphir tilted his head. \"No,\" he replied with certainty.\n\n\"Are you sure?\" said Magnus.\n\n\"It's never come up on any test I've run--including the ones on myself.\"\n\nMagnus nearly growled. \"Something's wrong with her. Something's broken.\"\n\nSaphir was still tilting his head, his expression full of the cold calculation he only showed to Magnus.\n\n\"My liege...\" he said, \"Everything is broken. This is mourning.\"\n\nMagnus rested his hand on the wall. \"I need to do something about it.\"\n\nSaphir crossed his arms over his chest, glancing back toward the door. \"What is your goal?\" he asked.\n\n\"I need to pull her back. She's been mine to have and take as much as I pleased and thus far her submission had been enough,\" Magnus said, and touched his hand to his forehead. \"But now...there's no point having her if there's nothing about her left to be had.\"\n\n\"Are you losing control of this?\" Saphir asked.\n\n\"I think we both know at this point that I've lost it,\" Magnus said, glancing at him.\n\n\"If you're open to suggestions...\" Saphir ventured. Magnus leaned back and signaled that he was listening. \"She needs to be given a sense of purpose again,\" Saphir continued, \"Something to anchor her mind and make her world feel larger than just pleasing you.\"\n\n\"That's something I can try to arrange,\" Magnus mused pensively.\n\n\"In the meantime...\" Saphir paused to lend greater precision to his next choice of words. \"I think it would be helpful to limit the amount of influence she feels from you. I know you want us to be close to guard her, but at this point, our presence does more harm than good. She needs someone new as her caretaker. Someone who isn't yours.\"\n\nThere was a pause, and he amended, \"Or at least, who she doesn't entirely perceive as yours.\"\n\nAfter several uncomfortable moments of silence, Magnus straightened with a frustrated sigh. \"I'll take it under advisement,\" he muttered briskly as he proceeded down the corridor.\n\n~ &lt; &gt; ~\n\nLilah became consumed by a restless energy. She had taken to pacing and tidying the room when Magnus was away from it--smoothing towels and sheets and attacking every bit of dust.\n\nHe would enter to see her with a damp cloth in her hand, scrubbing at any unpristine spot of she could find, but she would force herself to settle in his presence. He seemed suspicious about her acquiescence at times, and other times, he seemed simply discontent. She would have fretted about this before her attempted escape--afraid he would sell her to something even more cruel, more ruthless. Now, her heart was too wooden to feel any such fears.\n\nThey hadn't put her slave collar back on, and they didn't force her into any lavish dresses or elaborate cosmetics. She was given soft, simple garments to wear and they fortunately afforded her flexibility of movement--which she was gratified for a few mornings in when she found herself fixated on the upper railing above the enormous window one morning--but when she set about moving a chair to stand on an clean it, Daegon was beside her in a moment, hauling her carefully back down.\n\nWhen he had her feet back on the floor, he turned her to face him and gestured once with his index finger, \"NO,\" he said, firm and emphatic, and returned the chair to its place in front of the desk.\n\nSo, Lilah set about polishing a rail at the base of his bed instead, and when Magnus returned to the room shortly afterward and found her like this, he bent down and snaked his arm around her waist, drawing her back firmly against his chest.\n\n\"Lilah, give me an answer this time,\" he said, his voice husky but more urgent than it was sensual, in contrast to any other time he had drawn her into such a position. \"Why are you so desperately cleaning every speck of dust you can find?\"\n\n\"It's something to do. There's no point sitting around worthlessly. I might as well be doing cleaning,\" she said, turning toward him when he loosened his grip enough for her to do so. \"Unless you'd prefer that I serve you.\"\n\nShe turned toward him, fully ready to honor the offer.\n\nHe paused, still and watchful.\n\n\"Is something the matter?\" she asked.\n\nHe looked at her, his eyes moving from head to foot. Lust and concern seemed to war within his eyes. She felt only the most distant curiosity about what he was feeling.\n\n\"..No,\" he said, after deliberating. \"Go ahead.\"\n\nShe knelt down, and freed his member from his pants. It sprang loose, erect, but not as hard as it usually was when she held it.\n\nShe took his cock in her mouth, and the training he'd given her before her escape returned to her readily. She worked her lips up and down the length, dutifully and thoroughly. Up and down. Up and down.\n\nAfter a few minutes of this, she heard him say her name, and even in her haze she could tell that it was distinct from how he would normally say it in these moments. She lifted her eyes and saw that he was looking down at her with a markedly perturbed expression. It was only after she withdrew him from her mouth and glanced back in front of her that she realized he'd gone soft.\n\n\"Did I do something wrong?\"\n\n\"No, you didn't...you didn't do anything...This isn't what I need right now.\"\n\n\"Shall I continue cleaning, then?' she asked, unsure and empty. She felt like her mind was full of mist.\n\nHe looked at her, and for all the looks he had ever given her--lustful, stern, calculating, this one was the most simply unhappy. She would have worried over this before her escape, afraid of his selling her to someone even worse.\n\nHe muttered something as he left, and after several moments of stillness, she resumed tidying.\n\n~ &lt; &gt; ~\n\nWhen Magnus exited his sky-ship a few days later, Ariadne stood waiting for him, a fur lined cape drawn close around her flawless, icy face. Her panther was poised at her side. Dim grey clouds spread across the horizon behind her. The reliable dreariness of Illythian weather.\n\n\"Thank you for meeting with me.\" Magnus said, when he reached the end of the ramp.\n\nShe nodded, always impassive, and touched a hand to the head of her panther. \"We have only an hour or so before we shall have to make our appearance with the Legatus. Is this regarding your newest slave?\" she asked.\n\nMagnus didn't waste time pretending that it might have been anything else. Ariadne had always been the shrewdest of his rivals. The only one he sensed could read him better than he could read her--and despite the occasional disquiet this caused him, he enjoyed her company. He gestured to suggest that they move out of the hearing of their respective entourages, and she obliged. \"I need an attendant for her,\" he said. \"And they need to be someone experienced and reliable, and preferably acclimated to the Imperius. She's...\"\n\n\"In mourning?\" Ariadne offered.\n\nHe nodded. \"She's distant. When I try to speak with her, she's not entirely there. I'm concerned for her health.\"\n\nAriadne nodded, and glanced back at the people behind them. \"I have, among my company, a consular. Charis. She's an experienced stylist--unbonded, and she's worked on some of the most fashionable women in the Capitol.\"\n\n\"Unbonded?\" said Magnus, arching a brow. In the imperial Capitol, slaves were often referred to as \"bonded\"--a much prettier, if less succinct label. Thus, the position of an unbonded attendant was offered exclusively to those with remarkable talent. \"Why would you part with such a find?\" he asked.\n\n\"She was Valencian born,\" said Ariadne, \"--and she became an Imperial citizen at my mother's request.\"\n\n\"Ah,\" said Magnus, his demeanor knowing and subdued, glancing down. \"I take it that her presence is a sensitive matter.\"\n\n\"My father can't bear the sight of her, but then he can hardly bear the sight of me either,\" said Ariadne dryly, looking off into the distance as though assessing the weather. \"In any case, I think it will be a mutually beneficial arrangement--provided you cover her expenses and pay.\"\n\n\"And she'll be content losing a position as attendant to a member of the Imperator's blood family in favor of entering the service of a common-born upstart?\" Magnus asked.\n\n\"As I matter of fact, I have reason to believe that she's an admirer of yours.\"\n\nMagnus arched an eyebrow at her, his curiosity peaked, but she only arched one back, her face an elegant porcelain mask, and he let it pass.\n\n\"I'll add a second recommendation,\" she said, before he could move on. He lifted his chin, surprised. \"I don't think you can expect one unbonded servant to achieve your goal with respect to your new consort. She needs an ally, someone who she can trust to share her perspective.\"\n\n\"I had intended to acquire a bondslave from the captives, someone she already knows for that.\"\n\n\"The little thing she jumped into the arena to save?\" said Ariadne. \"Cato has her, and he's not likely to part with her at your request. You'll need another option in the meanwhile.\"\n\n\"And you're willing to provide it?\" said Magnus.\n\n\"I do have a masseuse that I can spare. She's rather...incorrigible, and she tends to become popular among other slaves. She accepted a slave mantle as a financial measure, but I rather think she's hoping for the abolitionists to gain power.\"\n\n\"A fool, then,\" said Magnus.\n\n\"Naive certainly, and imprudent, but skilled.\" Ariadne arched an elegantly shaped brow, and almost smiled. \"Sound familiar?\"\n\n\"Yes,\" Magnus admitted. \"I suppose it does.\"\n\n\"I'll have them sent to your ship after we investigate the crash.\"\n\n\"Speaking of which,\" said Magnus, \"What do you expect we'll find?\"\n\nAriadne tilted her head thoughtfully as they walked on. \"Nothing of much use, if the reports I've read are anything to go on. They described it as an utter catastrophe.\"\n\n~ &lt; &gt; ~\n\nNot much indeed, Magnus thought when he finally studied the charred remains of what had been Henry Claremont's life's work.\n\n\"Well, it's certain then,\" said Hesiod, looking sadly at the machinery laying on the table before him. Magnus wasn't sure whether the man was more affected to see the evidence of the artist's demise or that none of his creations had made it through the crash intact.\n\nThe guards had rooted through the debris, drawing out all of the intact machinery from the archives kept by the Imperial border patrol.\n\n\"These are clear matches for Claremont's materials, broken and charred as they are,\" Hesiod said, gazing at one fragment of machinery mournfully.\n\n\"The scientists are studying the traces of bone they were able to recover as well,\" the legatus added, as an afterthought. \"--But I doubt they'll be able to confirm much. They don't exactly keep thorough blood records in this savage country.\"\n\nHe looked around the verdant, cloudy landscape as though it had personally offended him, and tightened his fur-lined cloak.\n\nWhile Hesiod remained enraptured by the more sophisticated pieces of wreckage, Magnus gravitated toward a piece that stood out. A little owl made of silver, with crystalline eyes.\n\nMagnus picked it up, turning it in the light.\n\n\"Oh, that's an interesting piece,\" said Hesiod, moving to his side. \"It's made of the same materials as the others, but it looks relatively child-like in construction, Careful, but certainly not demonstrating any of the nuance or skill of...\" he trailed off when Magnus looked at him, seeming to absorb the implications of his own words.\n\n\"Well, perhaps you'd better keep that, Magnus,\" said Hesiod quietly, touching his back once before moving on.\n\n\"Are you certain we ought to just give him such valuable evidence, Legatus?\" asked Cato, with a sideways glance at Magnus.\n\n\"My task, as the foremost present expert on the work of Henry Claremont,\" replied Hesiod, returning his attention to the machinery, \"-is to salvage, procure, and evaluate all creations by his hand from the wreckage of his sky-ship. I've no need to study the handiwork of a novice.\"\n\n\"There's something even more troubling to concern ourselves with,\" said Ariadne, changing the subject. \"My agents are certain that there are still behemoths being developed in the capitol. If it's true that their developer is dead--someone has taken their mantle, but we heard nothing of it.\"\n\nShe shook her head, \"If such a transition were known to the capitol military guard, my spies should have discovered it.\"\n\n\"So, the Illythians themselves have been keeping this quiet,\" Magnus said, tearing his gaze away from the little clockwork animal. \"From their own people.\"\n\n\"None of our reports from the frontline suggest a reduction in quality,\" said Ajax, in his deep voice.\n\n\"Due to the contribution of someone who worked under Claremont, I imagine,\" Hesiod said distractedly.\n\n\"We must be able to find someone among the defectors or captives who knows his more current work and who can help us recreate it.\"\n\n\"Perhaps,\" said Hesiod, \"Perhaps.\"\n\n~ &lt; &gt; ~\n\nLilah was tidying again, smoothing and folding loose maps on the desk in Magnus' quarters.\n\nMagnus entered, officious and crisp in his uniform, and though she turned to look at him submissively, she couldn't read his eyes.\n\nHe approached her, and took her hand in his and placed within something as cold and unyielding as the lump that choked her throat upon looking at the offering--for it fit, familiar in her grasp--After all, she had shaped the metal herself, coated the steel with her own hands, placed the little crystals into the silver owls eyes, all at her father's guidance.\n\nThe tears came, slowly and softly at first, and then her chest heaved, and her breaths came short.\n\nAs Magnus came close behind her, she sensed--of all things--hesitation from him, and then he placed his hand on her shoulder, so gently that the tears burned behind her eyes.\n\nWhen she sobbed and buried her face in his chest, weeping freely, she didn't take notice of whether the action surprised or pleased him. All she knew was that his arms closed around her in a kind of comfort she'd never expected from him.\n\nThey remained like that for some time, his holding her, before he shifted his grip around her and he glanced at his sigil on the wall--a twining, black ouroboros on a field of golden green, and back at her again.\n\n\"There once was a dove that fell into a pit of snakes,\" he said. \"But the most cunning of all the serpents had been watching her and had become...\" he closed the distance between them, and lifted a lock of her hair between his fingertips \"-fond of the dove. He set out to protect her, and to have her.\"\n\nLilah shook her head, fixing her eyes on his collar. \"If he wanted to protect her, he should have told her that. He should have talked to her as...\"\n\n\"An equal?\" he asked, after she had trailed off.\n\nShe looked at him, and he smiled wryly.\n\n\"You are not nearly as delicate as you appear, little dove, I grant you that much. But you are soft. You do nothing--not even kill a man--without finding the gentlest way to do it. I don't say this because I see you as someone lesser, not really.\" He touched her cheek, his voice turning soft, \"I treasure you, Lilah.\" His eyes searched hers, seeking her reactions. \"--But you are not my equal, not at the game we play. You are a remarkable and improbable creature, but your every remarkable and improbable quality makes you more vulnerable, not less.\"",
        "She lowered her head back to his chest.\n\n\"Everything I have done, wrong or right, I have done with the intent to protect you. If you believe nothing else, at least believe that.\"\n\n~ &lt; &gt; ~\n\nSeveral days passed, and Magnus had only been near Lilah a handful of times. She had ceased her impulsive tidying, and instead spent most of her time sleeping, or following Daegon listlessly from the bedroom to the skyship bathhouse. For Magnus' part, he had turned his focus toward meetings with his lieutenants. That was enough to distract him in the daytime.\n\nBut when night came, he'd find himself in bed beside her as she slept. She was soft and pliable each time he wrapped his arms around her to draw her against him. But no matter how warm and lush her curves felt, he made himself resist every pang of lust. He simply held her, and she simply let him. It was a kind of pleasure and a kind of agony, confusingly entwined within him.\n\nOne morning he woke with a particularly impatient erection and his senses full of her--the rainshower scent of her hair against his nose, the plush cushion of her ass against his cock, the lush warmth of her breasts against his hands.\n\nHe inhaled the scent, the muscles in his fingers flexing, yearning to sink into her flesh.\n\nShe's yours. Take her. Your cock could be wet with her slick or down her throat already if you want it. What are you waiting for?\n\nWith a desperate, herculean effort, he tore himself away from the bed and snatched up the dress she had been wearing the day before, stealing it away into the washroom. A dozen ruthless strokes of his cock against the silk, imagining it was her--her mouth, her quim, and he relieved the physical tension, but it did little to alleviate his craving for the sound of her sweet moans against his ear, or her sky blue eyes watching him with reluctant fascination.\n\nWhen he stepped out of the washroom, Lilah was sitting up, blinking sleepily, and yawning in a way that made her look vulnerable, as if she hadn't realized her surroundings through the lingering mist of slumber.\n\nShe was looking at him, and he could see in her eyes that she had realized what he'd been doing. Her eyes were large, wide, full of slow-thinking surprise. She averted her gaze the moment it met his and that filled him with a sense of something approaching embarrassment.\n\nThe room suddenly seemed so large, and the distance between them so small, so little boundary between him and what he wanted, what he was hungry to devour.\n\nHe wanted to leap at her, tear at her, pull her down and pull her open, pluck her every string and stretch her every feeling until she was just a trembling musical instrument keening obediently under his fingertips--\n\nAt that moment, there was a familiar knock at the door. He threw the dress in a hamper of dirty clothing, and focused on dressing with swift, crackling efficiency.\n\n\"Enter!\" he ordered, crisp and businesslike, buttoning his trousers.\n\nSaphir entered, the much taller Daegon on his heels, and two women behind him. The handmaidens, Magnus thought, as he nodded to Saphir and pulled his shirt down over his head before striding out of the room. He had forgotten.\n\nHe never forgot anything.\n\nFuck.\n\n~ &lt; &gt; ~\n\nLilah could hear Magnus saying something brief to Saphir as he stepped through the doorway--his voice as close to mortification as she'd ever heard it sound.\n\nWhen Saphir entered, he said her name softly and persistently more than once, before she conceded to look at him.\n\n\"Lilah,\" he said, \"I've brought you someone--two someones, for you to meet.\"\n\nHe indicated two women standing behind him. They were clad in flowing sunset gold fabric, sleek and form-fitting around the bodice, and softly flared at the hips and shoulders. They swished like little oceans when they moved.\n\n\"These are Charis and Ianthe. They'll serve as your new attendants.\"\n\n\"Attendants,\" Lilah repeated, the word flat on her tongue.\n\n\"People to oversee your grooming and bathing, as I did,\" he said quietly, as though she might have forgotten.\n\nAs if she could forget. A kind voice. Water lily perfume. Nothing at all like what one would expect from a ruthless imperial assassin--from someone who took Hilde's life with a cold, vacant stare.\n\n\"They've been told to accommodate your requests, within reason,\" he said, even more softly, as though he knew where her thoughts had turned. \"The capacity to which they serve you is yours to decide.\"\n\nLilah forced herself to sit up. She'd promised to be cooperative, and there was no point in going back on her word now.\n\nHer eyes went to the women in question, moving over them. One of them had bronze skin and reddish hair, and wore slave jewelry, while the other had dark brown curls and a more dignified dress robe.\n\n\"And if I choose not to have them serve me at all?\"\n\n\"A life of leisure?\" the one with coppery hair asked, a blithe smile curling at her lips. When Lilah raised her eyebrows at her, the smile only deepened, and she shrugged. \"The day just gets better and better.\"\n\nThe other one--Charis, Lilah believed--who seemed to repress some instinctual irritation when the redhead spoke, said, \"Your master has procured us. If you reject the chance to make use of us, we will gain some other responsibility or we will be sent back to our former mistress.\"\n\n\"Your former mistress?\" Lilah asked.\n\n\"Praetor Ariadne,\" replied the attendant. She seemed to consider whether or not to say more, before adding, \"What I ought to make clear is that I am a free citizen of the Imperium.\" She said this with tremendous pride and dignity, her back straight. \"I am one of the best stylists you could hope to find in or outside of the empire. I've served both praetors and princesses.\" Her tone was solemn as she added, \"And in the spirit of frankness, I shall warn you, I do not take my duties lightly. I once scolded the wife of a senator for not sitting still during a fitting,\" she said. \"And I assure you, she sat still.\"\n\nShe smoothed her skirt matter of factly. \"I shall gladly take on any charge placed before me--and I shall of course adhere to your wishes as your master commands me to--and to be perfectly frank, you'd be fortunate to have me.\"\n\nThe first attendant--Ianthe, Lilah supposed--seemed to not want to be left out of this interview. \"My specialty is massage,\" she said cheerfully. \"And if you'd prefer being attended by someone with a sense of humor, you could always use me and not her.\"\n\nCharis didn't dignify this with a response, but simply smoothed the fabric of her robe once more, primly.\n\nLilah felt her eyebrow quirk, slightly, and then looked at Saphir. \"You said they've been instructed to accommodate my requests?\"\n\n\"Yes,\" Saphir said, a hint of caution to his tone. \"Within reason.\"\n\nLilah stood. \"Then I request that you don't expect much conversation from me. Let's only discuss what we have to,\" she said tiredly.\n\nSo Lilah let her new attendants \"care\" for her, and if she had to admit it, there was less primping and polishing than usual. They gave her a hot bath, and a massage, and brushed her hair. The outfit they put her in was less risque than the others she'd been ordered to endure--a simple white dress, in a soft fabric.\n\nCharis was calm and aloof throughout the experience, while Ianthe continuously attempted to draw Lilah out. She remarked upon Lilah's hair, and the tightness of the muscles in her back--a steady barrage of charm that left Lilah both overwhelmed and slightly lulled by the uncommon frankness of Ianthe's interest.\n\nIanthe would ask Lilah about her preferred fragrance, her preferred hairstyle, her preferred foods--and though Lilah's answers were reticent, Ianthe had a way of prying out what she asked for, while never losing her airy manner.\n\nWhen Lilah hinted that she had asked for the opposite, Ianthe protested that she absolutely did have to discuss these things.\n\n\"What could be more vital?\" she said, with a wink.\n\nPerhaps she had a point, Lilah thought to herself. Indeed, what could be vital at all?\n\n~ &lt; &gt; ~\n\nIt was another week before the day that Lilah noticed that the dressing of Daegon's wound could use a change, and she asked for a medical kit to do it herself. They looked at her in surprise, and told her that they would inquire.\n\nLilah was half surprised when Saphir permitted them to honor her request. He brought the medical kit himself, and remained as she set about her work, and it wasn't long before she had her head bent over a sitting Daegon, ministering to the wound on his upper chest.\n\nDaegon bore her ministrations with unsurprising stoicism, and Saphir reverted to silence in the corner--Lilah was surprised the beautiful, ruthless slave stayed at all--but he seemed motivated by some unspoken caution. In fact, in contrast with Daegon, she felt she could read his wariness fairly well. Perhaps he thought she might stab Daegon with her scalpel when given the chance, she considered distantly.\n\n\"So--,\" said Ianthe, picking up one of the medical implements that Lilah had left on the table and examining it idly, \"Are you at all curious about the Capitol? We can fill you in on any details you have questions about--Well, I can do so more than Charis.\" Ianthe glanced toward the other woman and then touched the blade of her hand against the side of her mouth--a mockery of subtlety, Lilah supposed--and said in a stage whisper, \"She's from Valence.\"\n\nLilah glanced at Charis, who stood with immaculate posture and her hands placed primly, one over the other. She seemed to be determined not to react to Ianthe's general sense of amusement at her expense--beyond a slight glare of displeasure at the redhead. Lilah sensed that she disliked the other woman's licentious flair for conversation as much as she resented the deliberate slight.\n\n\"Curious might not be the word exactly,\" Lilah replied, shrugging as she set aside a bottle of salve and picked up a needle, \"--but I'm not opposed to hearing about it.\"\n\n\"Well, how much do you know already?\" Ianthe asked.\n\n\"A small handful of political factors,\" said Lilah, \"I've also heard the parties tend to be lavish.\" She finished lacing the needle with a medical thread, and refocused on Daegon's wound. \"--And that they tend to become orgies.\"\n\n\"An exaggeration, I'm afraid,\" said Ianthe, a slight sparkle in her eyes. She rested her hip against the table and absently and picked up the bottle of salve, turning it between her fingers and looking pleased to do so. \"House Valerianus is notoriously austere.\" She sighed and tossed back her hair, \"More's the pity.\"\n\n\"Hmm,\" Lilah said distantly, barely feeling the other slave's eyes refocus on her critically.\n\n\"Aren't you at all curious as to why?\" Ianthe asked.\n\n\"It wouldn't be our place to discuss it even if she were,\" said Charis sharply. \"Our master's affairs are his own.\"\n\nIanthe ignored the other woman, still speaking to Lilah. \"What about you? Do you think we should be silent and careful and full of servility?\"\n\n\"I think I am mourning,\" said Lilah, her eyes still fixed on Daegon's wound, nearly restitched, \"-and tired.\"\n\nAs soon as the words were out of her mouth, there was the sound from the doorway, and the group turned in unison to see Magnus standing with his back against the wall, next to a small chest table with his arms crossed, watching them.\n\n~ &lt; &gt; ~\n\nMagnus' eyes were fixed on her with a familiar heat, but Lilah only felt the mildest curiosity that she hadn't noticed him enter the room--before her escape, it had felt as though she was trained on him and his presence, and would never fail to notice him. It was as though that part of her had been silenced for the time being.\n\nThe moment stretched, and then he said \"Leave, all of you.\"\n\nThe attendants, Saphir, and Daegon, all obeyed, quietly filing out of the room. When Lilah made a gesture toward Daegon's wound--stitched, but undressed, he raised a hand to stop her, and she relented. It wouldn't tear, in any case, unless he performed vigorous calisthenics.\n\nWhen she moved to obey his command, following the others, he only caught her smoothly by the arm and looked at her intently. He seemed slightly surprised she would take this as an order intended for her--and if she were honest with herself, she would have to admit that she'd suspected it wasn't--but there was something, deep in her chest, that was pleased to have the chance to follow his order while defying the spirit behind it.\n\nBut then, something in his eyes shifted, and he seemed--pleased by something he saw within hers.\n\n\"You are extraordinary,\" he said, his voice edged with something between admiration and amusement.\n\nHe appeared to be at ease, but it seemed to Lilah like the ease of a jungle cat, stopped mid-prowl by some primal curiosity. His expression was both fierce and entranced--a tight, intense focus that had always made her heart stutter and her breath stop short--but her heart didn't stutter, and her breath kept it's rhythm--for all that she could feel it begin with. It was as though all the parts of herself that had previously reacted to him had been replaced by dead wood, hollow and brittle.\n\nAnd yet even now, something passed between them. An understanding of a sort, perhaps. She felt the heat in him, radiant and restrained, like fire beneath steel. She might have mustered the energy to curse this empathy between them, especially now, when she could sense his desires as though they were invading her mind. He was a strategist through and through, she suspected. Perhaps he couldn't see her as something other than a fortress to be conquered.\n\nYet, the restraint she saw in his eyes was peculiar, different from any sort Lilah had noticed before. She considered distantly as she looked away and began placing the equipment back into the medical bag with efficient and businesslike movements, as though she were still a medical officer fresh out of an operation, and not a captive wearing a flimsy bit of silk under the eyes of a domineering enslaver.\n\n\"Do you know what it does to me--,\" he said, tightening his hold of her wrist and drawing her close, \"To see you like that? Do you know what it did to me, the first time I met you?\"\n\nHe took her hand, and it seemed so small inside of his as he lifted it, and kissed the knuckles softly. \"You were so gentle, Lilah,\" he said, drawing her so close that she was against him. She was frigid, at least for a moment, until she realized her body was warming to him against her will, softening like a cat in slumber--even as her mind protested that she hated him, that she couldn't possibly feel aroused, not now, when she had so much to mourn--so much to resent him for.\n\nHe chafed her earlobe with his teeth, deliberate and seductive, and then moved his hand in her hair to make her neck more available to his lips. As he trailed warm, brushing kisses against the skin of her throat, she felt his hand come near the heat of her sex, and she reddened--perhaps for the first time since her escape--to realize that she wasn't just warm for him, but already wet. She felt his lips shape into a subtle smile against her skin, and he kissed her again, trailing down.\n\nSlowly, she responded, arching her back and sighing. He growled, yanking her still closer, and his lips reached her breasts.\n\nIt was a cresting wave, threatening to break inside of her.\n\nThe pleasure would turn incandescent--and she felt it would destroy her, the torment of feeling pleasure at the hands of this man--this destroyer of her life, her home, her father.\n\nShe felt like she was choking.\n\n~ &lt; &gt; ~\n\nMagnus kissed his way down her stomach, appreciating the dainty tautness of her waist, warmed by the fresh responsiveness of her muscles. His cock jerked when he reached her hips, and felt her heat grow, her scent deepen.\n\nHer skirts fell apart easily for him, and there was nothing underneath, nothing between him and her well shaven quim.\n\nIt pained him not to burrow into the folds, to devour her immediately. Instead, he scrutinized every reaction, every breath he could hear from her above his head.\n\n\"Have you missed me Lilah?\" he asked. \"Have you missed me here?\"\n\n\"It's only been..,\" she said, but she gasped on her own breathless words when he burrowed his finger into her sex.\n\n\"Not an answer,\" he said, and traced the petals of her sex with his fingertips. They were so soft, and her inner walls flexed before his eyes.\n\nGods, he had intended to wait, he had intended to--\n\nHe nipped at her inner thigh, and his cock spasmed when she quivered in raw physical delight.\n\nHer sex was wet, and warm and spread open before him, and the scent--the tantalizing scent, soft and sweet and blooming in his senses.\n\nShe would be the death of him.\n\nOr perhaps he would be the death of her, he thought, at the sound of her delirious moan when he nibbled at her folds.\n\nA voice in his head was giving off steady warning sounds, the word tactics resounded from a distance. But the voice was wrong, wasn't it? These tactics oughtn't work against her, perhaps, but somehow they did. Somehow, she lay, warm and waiting under him, deeply in his thrall.\n\nHe kissed along the edges of her folds, all the pinkest places he could find, and held her still by her thighs when she arched desperately under him.\n\nAnd then his tongue was in her, caressing the silky wetness, and when she screamed in pleasure, he mourned that he had never done this before.\n\nHer taste was sweet and fresh and bright, succulent as honeydew, and he slaked his thirst for it with zealous, thorough strokes of his tongue. The muscles of her quim flexed under his ministrations, simultaneously strong and velvety soft. She attempted to close her legs, as if on instinct, and this time he didn't scold her--he simply held her where she was, her legs wide in front of him, her quim wet and inviting and full of the scent and taste of her arousal.\n\nShe mewled, her muscles continuously flexing in fluid, wavelike movements. Sighs gave way to moans, which turned hungrier and hungrier, and even from below, he could see her cheeks turn red. She wriggled, and he only moved his tongue more fervently, his fingers pressing into her flesh more dominantly.\n\nThis taste deepened as she came for him, her juices flooding his mouth, and he growled with hungry pleasure even as she cried for him, sweet, mewling, urgent sounds. He lapped gently as she descended over the edge of that crest, tumbling into a still sort of fugue state.\n\nHe rose up, ascending her body until his eyes were even with hers, seeking something elusive in her sky blue gaze.\n\nAnd then, of all things, she put her palm on the back of his head, and brought his mouth to hers.\n\nThe kiss alone was enough to turn the throbbing need in his cock to something desperate, but more than that, she was tasting herself, her own juices, the evidence of her orgasm, on his lips. It was the headiest sensation Magnus had ever had, an intoxicating rush.\n\nHe held her close to him, and she turned warm and pliable in his arms. He kissed her throat, and she trembled.\n\n\"Lilah,\" he whispered, and she trembled again. When she returned his embrace, and kissed him back, he growled, the sound low and full of longing, into that kiss. His cock jerked, and he felt he might come from this alone.\n\nBut he sheathed himself in her, and the motion was smooth, slick and welcoming. Heat and pleasure throttled through his cock all the way to his brain and he growled, arching his spine as much as she had arched at the sensation of his tongue. Groaning, he gripped the back of her neck with his hand, the muscles flexing and throbbing. The intensity of the pleasure turned his every instinct into something aggressive, almost furious, but he kept his control with an instant of pause, eyes closed and teeth gritted. When he met her eyes again, she seemed to see--deeply and clearly--what he held back. She appeared so delicate, so fragile, but when she took in his reigned ferocity there was no fear in her eyes. There was an understanding there, instead, glittering at him in the shadowed light.",
        "He held her tightly, her chest and stomach flush against his, sweat mingling. His thrusts turned ruthless. He fucked her like a toy, with her wanton cries of pleasure ringing in his ears. They were nearly screams, but for the breathlessness of her voice. He could just make out her eyes, sparkling slits of blue underneath heavy lids and black lashes.\n\nShe came, back arching, and he swallowed her cries of pleasure just as hungrily as he had treated himself to her sex, and his cock jerked within the tight, wet depths of that sex as he came as well, falling back to the bed as he found himself spent.\n\nMagnus drew Lilah to his chest, actually cuddling her in his arms, and she didn't have time to consider resisting before she found herself pressed to him close, his face buried in her hair.\n\n~ &lt; &gt; ~\n\nThey laid there for a time, flushed and dewy with exertion--And Magnus sensed Lilah fall from the height of sexual pleasure back into the aching dullness of grief. She turned quiet, stony, and he could see falling into a bleak sunken place inside of herself. He lifted himself up, his eyes scouring the inexpression of her face.\n\nThen he lifted himself off of her, and sat up, an alien, sickly feeling settling in his chest.\n\n\"I hadn't intended to...go that far,\" he said finally, after she had quieted. He ran a hand through her hair to comfort himself.\n\nThere was a sound from her, and he drew himself back, searching her face.\n\nShe was laughing at him. A soft, slightly panicked giggle through her tears that was sweeter and more transparently hesitant than he had ever seen her. She always always always tried to veil her feelings from him before that point--provoking him toward the cold ruthless determination to see what lay underneath, as deep and efficiently as he could probe.\n\nHe watched her, as though studying a magician's trick. His brow was faintly furrowed.\n\nShe touched her knuckles to her lips and stifled her own laughter, seeming nervous, suddenly, as though unnerved by his expression but not sure whether to be afraid of it.\n\n\"I'm sorry--I am sorry,\" she said. \"It's just...you sounded so shocked with yourself. At the very idea that you could ever do anything that you didn't intend to do.\"\n\nThere was something almost despairingly fond in her eyes, something that he had never seen there before, not for him. Magnus was hypnotized by the sight of it.\n\n\"I'm beginning to think I might just be some god's vengeance against you. All important, damnable you. Oh--,\" she said, and addressed the ceiling, as though willing her words into the ear of a sentient sky, or to invisible persons looming far above, amusing themselves by picking up and planting her in one horrible situation after another, laughing as she scrambled to endure.\n\n\"No, forget that, you're not the problem--the god is the problem. Any god who puts both you and me into the same world--,\" she shook her head, and sighed. \"I don't even believe in gods. I'm sorry. Somehow I'm tired, worn out from doing nothing for days, I suppose.\"\n\nThere had been some kind of...shift between them, and he didn't know what to do in the wake of it.\n\n\"For better or for worse, Magnus Valerianus,\" she said, \"You do attract me, and terrify me...but I believe you now--that you intend to protect me, to keep me alive. So here is what you ought to do.\"\n\nShe touched a hand to his stomach, her fingers playing along the muscles.\n\n\"Teach me. If you want me to survive among the snakes, then teach me how.\""
    ],
    "authorname": "Damoiselle",
    "tags": [
        "slave",
        "spoils of war",
        "submission",
        "male dominant",
        "master"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/imperius-ch-09"
}