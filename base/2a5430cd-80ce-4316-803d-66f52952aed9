{
    "title": "The Human Condition Ch. 10",
    "pages": [
        "I was finishing up the dishes when I looked through the window over the sink and saw Joe in the backyard. He was tugging on the new tire swing I'd attached to the old maple tree in the back yard as a surprise. He looked concerned, as he tentatively leaned his weight against it, and I chuckled to myself at his unease. I ducked my head and watched as he stepped gingerly into the center until he was standing on the rim, his hands firmly grasping the thick nylon rope that attached the old truck tire to the branch some 20 feet above his head. The tree limb groaned slightly, but I knew it was solid enough to hold both of us at the same time.\n\nThis was too good to pass up. I threw down the rag I'd just wiped the table with, then quietly tiptoed out the back door and stepped into the yard. Joe was too busy testing the rope's strength by hopping up and down to hear me approach.\n\n\"You scaredy-cat!\" I said, loudly enough to make him jump again. \"I'd have thought for sure that by now, you'd have stopped worrying about the thing breaking!\"\n\nHe twisted in the wind until he was facing me. He was grinning, but it was that 'naughty boy' smile he used when he was secretly a little embarrassed.\n\n\"Yeah, well, I just wanted to make sure,\" he said. \"There are some pretty big kids around here, and I don't want to risk any lawsuits.\"\n\nHe flexed his arms and lifted his legs out of the center hole, then widened them and pulled them around until he was straddling the top of the tire where he settled his weight. I grabbed his knees and pulled him, and the tire, to me until his face and mine were even.\n\n\"Sweetheart,\" I whispered and watched the heat of my words spot his cheeks, \"After what we did with this thing last night, I'd think you'd realize there isn't a kid alive big enough to get this thing to fall; no matter how hard they tried.\"\n\n\"Yeah,\" he laughed. \"You have a point. That was something else again. I didn't think it would work.\"\n\n\"I told you, you could trust me,\" I reminded him. \"Trying new things can be an exciting experience.\"\n\n\"Just keep reminding me of that,\" he said, as he leaned over and kissed me.\n\nI grinned. \"Haven't I always?\"\n\n\"Oh yeah,\" he whispered as he rested his forehead on mine. \"And I've always been so glad you did.\"\n\nAnd so was I, I thought to myself. Though there had been times when I hadn't been sure at all of the outcome...\n\n\n\n\n\nJuly 24th, 1989\n\nIt had been a really shitty day. Two of the younger associates at work had started it off by screaming at me because the research wasn't done on a case they had to present at a pre-trial meeting to the partners. Never mind the fact that they hadn't even given me the assignment until a mere twenty-four hours before.\n\nThen, one of the bigwigs came in and handed me a list of precedents he needed yesterday. And another one wanted to know why I hadn't found time to write up a motion he'd given me a couple of days ago, conveniently forgetting that he'd said there was no hurry, and to 'work at it at my own speed.'\n\nBetween this and all the other bullshit I had to deal with, I didn't get out of there until well after eight, which meant I'd been sitting on my ass staring at a computer for the better part of twelve hours. Pen had taken pity on me and had shared her lunch of fruit and yogurt, but otherwise I'd had nothing in my stomach all day except coffee. At least it was Friday, and I didn't have to be back in that hellhole for another two whole days.\n\nOkay - maybe not a hellhole - not really. All things considered, it was still a pretty good place to work and leagues above what most students had for employment. The problem really wasn't work; it was me. I just wasn't in the mood for office politics.\n\nOf course, there wasn't much I was in the mood for lately. It'd been a month since my disastrous phone call to Joe. We hadn't spoken since. I'd written twice and started a dozen more, and Joe had sent me a few postcards showing the sights he wasn't seeing in Rome and saying, in as few words as possible, that he was okay. But it wasn't nearly enough to make me feel better about the whole fiasco.\n\nI could manage to shove it to the back of my mind for only so long anymore. I'd be working or running an errand or just kicking back... And suddenly, I'd get this sinking sensation in my stomach that usually meant my brain was reminding me I'd forgotten to do something important. But in this case, it meant that somehow my internal clock was telling me that time was running out - that the longer Joe stayed away, the less chance there was that he'd ever come back. \n\nI tried to tell myself I was just being paranoid. Even if Joe did decide that we could never be friends again, I didn't think he'd do that by cutting me off without a word. But as the days turned into weeks, it was getting harder and harder to convince myself of that.\n\nIn my darkest hours, I imagined him in Rome, surrounded by a new circle of jet-setting friends and laughing, forgetting all about me, or maybe turning us into an amusing anecdote complete with shrugs and self-deprecating banter. He'd finish his tale, and the beautiful girl by his side would kiss his cheek and assure him that as funny as the story was, she was sure he was making it the whole thing up.  Especially in light of what had happened between them the night before in his bed.  \n\nThis was nothing more than self-indulgent pity on my part, and I knew it. In fact, I had gotten news from Rome that assured me that the reality of Joe's life there was quite different than my perverse daydreams were making it out to be.\n\nJosh had made good on his promise to call me after he got back from his gig as personal slave to a Vatican dignitary. And he'd wasted no time either in assuring me that he thought that his brother Joe was totally nuts - but not fatally so, and that he'd come around eventually. It was a sentiment I was most grateful for. But it was sometimes hard to remember that, late at night when I was alone in the dark.\n\nI have to admit, I was kind of surprised that this was Josh's attitude. Obviously, I knew he was aware I was gay, so it didn't shock me that Joe had told him what had gone on between us. Even though the twins had drifted apart over the years, I figured Joe would have to have shared something this big with his brother. Hell, that was undoubtedly the reason he'd gone to Rome in the first place.\n\nWhat did amaze me was Josh's acceptance of the whole situation. He didn't seem in the least bit surprised that Joe was grappling with the issue of his bisexuality. To me, that seemed to be a pretty big thing to be blas\u00e9 about.\n\n\"Look,\" he said, \"Joe has always been a little more interested in guys than he'd have most people believe. I've known that since we were kids.\"\n\n\t\"You trying to tell me something?\"  I was joking when I said it, but the silence on the other end of the phone went on little two long and I realized that maybe I'd inadvertently struck a chord.  \n\nThis was an interesting development.  I waited for a minute, hoping that Josh would add to his little revelation.  But if there was a story to be told, it didn't look like I was going to hear it from him today.  I decided to let him off the hook.\n\n\t\"On second thought,\" I drawled.  \"I think we can just leave that topic alone.\"  He chuckled self-consciously and I grinned to myself.  Oh yes, I thought, there was a story...    \n\n\"Yeah well,\" he finally continued. \"Let's just say you know stuff about your twin you might otherwise miss with another sibling. At least, I do. So it didn't exactly come as a shock to me when he finally admitted his feelings for you. Actually, I've sort of expected it.\"\n\nI was stunned. \"You're kidding!\" I said. Though I realized he wasn't. But what did bother me was why this had apparently been so clear to everybody except for the two of people who were most involved.\n\n\"You want the honest truth?\" Josh went on, oblivious to my internal thoughts. \"I was less surprised by that than I was when he announced his engagement to that girl Betsy. In fact, I think in the long run, this is something that was bound to happen. Especially since the day he met you.\"\n\nI sighed and shook my head. \"Too bad Joe isn't as thrilled about it as you are.\"\n\n\"Listen Mike,\" he said. \"I know my brother. He wouldn't be miserable if he realized that what he really wanted was you. And trust me,\" Josh continued, laughing. \"He's the most miserable son-of-a-bitch on the face of the earth right now.\"\n\n\"Sorry, but that doesn't exactly make me feel better.\" I responded dryly.\n\n\"Oh, hell! I don't mean that the way it sounded,\" he apologized. \"But look at it from his point of view: for most of his life, Joe's been one of those guys who always had it easy, and he got used to things going exactly the way he thought they should. You've been a real shock to his system. And, I think maybe that's not such a bad thing.\"\n\nJosh went on from there in his very logical Jesuit manner. By the end of the conversation, I was feeling pretty good. That lasted about as long as it took me to get ready for bed. Much as it was nice to hear his words of encouragement, it didn't mean squat if Joe didn't agree with his assessment.\n\nBut I am nothing if not stubborn. I'd promised myself to not give up until Joe actually told me himself it was hopeless. So I got up the next morning, and all the other mornings after that and I went to work and planned for the day when Joe and I finally would talk again face-to-face. But I'd be lying if I told you it was easy. And as the days grew into weeks, I was beginning to think that even my pigheaded optimism wasn't going to last longer than Joe's indecision.\n\n That morning, I'd taken my car into the shop for some repairs, so I'd ridden my bike to work. What had seemed like a great idea in the cool of early hours had now turned into a test of endurance. July in Ann Arbor is like July in my home state: hot, muggy, and miserable. The day had been a scorcher, and it showed no signs of letting up. By the time I got home, I was dripping with sweat and filthy with the grit and exhaust residue of a hundred cars and trucks from the seven-mile trek from downtown. All I wanted to do was take a long shower and veg in front of the TV with a beer and the bag of tacos I'd picked up on the way home.\n\nThe light on my answering machine was blinking when I walked through the living room, but I ignored it. I didn't even think about it again until I was getting ready for bed. With a yawn, I punched the listen button, ready to hear the spiel of some telemarketer. Instead, I froze as a very familiar voice spoke from the box.\n\n\"Mike, it's Joe. I guess you're still at work, or maybe you went out. I wanted to talk to you, but it's probably better that we wait and do it in person.\"\n\nIn person - had he really said that? I stopped the machine and rewound the message. That's what he said all right. I listened to the rest with my eyes shut in concentration, my heart pounding like a jackhammer in my chest.\n\n\"I'm coming home. The flight number is 734 on Northwestern. I'll be landing at Metro at 12:40 AM tonight - or I should say, tomorrow. Anyway, I could really use a ride, but if you can't make it... well, I'll understand.\"\n\nThere was a long silence then a sigh.\n\n\"Still, I'd really like to see you.\"\n\nThere was a click and the phone went dead. I looked at my clock. Shit! It was already 11:55 and I was car-less. It didn't matter; if I had to use a skateboard, I was going to get to that airport! I grabbed some clothes and threw them on. My fingers shook as I buttoned the fly on my jeans. I was down the steps and banging at Lucy's door in under 60 seconds. She was still up, but not very happy to see me at first.\n\n\"There had better be a damned good reason for this, young man,\" she said, raising an eyebrow in irritation.\n\n\"Can I borrow your car?\" I asked, breathlessly. \"It's kind of an emergency.\"\n\nI knew the Caddy was her baby. And I was half expecting her to say no, but the look on my face must have convinced her that this was no late night run for beer.\n\n\"Of course.\" She said, looking at me closely. \"Come in while I get you the keys.\"\n\nI stood in her kitchen, first on one foot, then the other. My mouth was dry and my heart was pounding. Lucy came back into the room with a set of keys in her hand.\n\n\"Are you okay, Michael? Would you like me to come with you?\" she asked with concern.\n\nI shook my head. \"I'm fine,\" I said. \"I have to go to the airport and pick somebody up.\"\n\nI didn't want to get into some long discussion, so I deliberately omitted saying Joe's name - but she knew. She smiled, then raised her tiny hand to my face and softly stroked my cheek.\n\n\"Things usually have a way of working out for the best,\" she said quietly. \"Even if it doesn't seem that way at the time, Michael. If you need to talk later, I'll be here - anytime, day or night.\"\n\nShe pulled me down and kissed me, quite firmly, on the forehead, then pointed towards the door.\n\n\"Now, get out of here and don't worry.\"\n\n\"I love you, Lucy.\" The words were out of my mouth before I could stop them.\n\n\"Of course you do,\" she said calmly, \"I'm irresistible! Now hurry, and take care you don't hurt my car.\"\n\nI practically ran to the garage and jumped into the big, comfy gas-guzzler. I glanced at the dimly lit dashboard clock - it was now 12:10. I silently cursed as I gunned the engine and tore off down the street. There was no way I could make the drive in a half an hour, but I was counting on baggage and customs to slow Joe down. Thank God, traffic was light for a Friday night, and I made good time.\n\nAt first, I was too absorbed in the driving to think of much else, but after I got on the freeway, I started to wonder how this was going to go. The nervousness I'd lost in the initial act of plotting the quickest route out of Ann Arbor returned with a vengeance.\n\nBy the time I pulled into the front of Northwestern's Terminal, I was a basket case. I wasn't even sure where I should meet him. There was no way I could park without having to walk about a mile, and I was too afraid to do that in case I missed him. At least my thoughts kept me from facing what I was really worried about. What was I going to say to Joe when I saw him? And more importantly, what was he going to say to me?\n\nI glanced at the dashboard. It was after 1 AM. The concourse was a madhouse, and my heart sank when I didn't see him. Because of the traffic, I couldn't stop and take a good look, but had to keep endlessly circling, craning my neck as I avoided an ocean of pedestrians, cabs, cars, and shuttles. On my fifth go-round, a spot in the loading area miraculously opened up. I grabbed it and carefully pulled the Caddy up to the curb. I took a quick look around, and decided to risk a ticket and go into the terminal. Suddenly, a shape detached itself from the shadows and stepped into the light.\n\nIt was Joe. He didn't appear to recognize the car, but then, he was probably expecting my old Duster. I watched him for a minute as he stood there looking into the gloom beyond the streetlights. He looked so... alone.\n\nI caught my breath as my emotions surged. It was only then that I realized a part of me had truly believed I'd never see him again. My hands were shaking. I gripped the steering wheel and steadied myself. Whatever the rest of this night would bring, I assured myself, it had to be better than the waiting I'd endured in the last few months. After tonight, I would be getting on with my life - one-way or the other.\n\nI shut off the engine and got out on legs I weren't sure would hold me. Joe looked up just as the door slammed.\n\nYou know how in all those corny romantic stories the two lovers stare at each other and everything else slows down and disappears? Well, that didn't happen. I was acutely aware of the lights, the sounds of traffic, a porter checking in a young girl's bags. No romantic music, no swelling orchestra - just two, long-lost friends staring at each other from forty feet away, each filled with anxiety.\n\nBut I was aware of Joe. He stood in a pool of light and the glow sharpened the edges of his outline. I could see he needed a shave, and there were hollows in his cheeks that hadn't been there a couple of months ago. The eyes that met mine were shadowed with a weariness that wasn't caused by jet lag.\n\nA man in a hurry bumped into him, but Joe didn't notice. He never moved, just continued to stare at me. I walked around the car and stepped onto the pavement next to him. I wanted to touch him - to hold him, to comfort him like a lost child. Instead, I picked up the bags that sat at his feet.\n\n\"Is this all your luggage?\" I asked.\n\nHe seemed distracted. \"Yes,\" he said.\n\n\"Okay. I'll put 'em in the trunk.\"\n\nI suited my actions to my words. Joe continued to stand motionless. His shoulders sagged.\n\n\"Why don't you get in the car?\" I said quietly.\n\nSilently, he did. I got into the driver's seat and buckled up, then cranked the engine. I looked over at Joe.\n\n\"Seatbelt?\"\n\nHe obeyed me, and then lay his head back on the seat and drew in a long breath and closed his eyes. I stared at him worriedly. I don't know what I expected, but it wasn't this.\n\n\"Take me home, Mike,\" he whispered. He spoke so softly, I barely heard him.\n\nI wanted to say something, but I didn't have a clue what that would be, so I kept my mouth shut. We drove to Ann Arbor in silence. It had started to rain and the only sound in the car was the steady womp-womp of the wipers. Joe's eyes were still closed, but I don't think he was sleeping.\n\nThere was a light on in Lucy's kitchen as we pulled up to the house. I put the car in park and turned it off. Joe never moved. I leaned over and put a hand on his shoulder.\n\n\"Hey - you awake?\" I whispered.\n\nHe turned to me slowly and we had another long stare. I could feel his heat radiate from my hand where I touched him. It traveled the long arc of my arm and entered my heart. I smiled at him. His hand stretched out and pulled me towards him. Slowly our arms tightened until we were holding each other in a fierce, tight embrace. His head was on my shoulder and he buried his nose in my t-shirt and took a deep, shuddering breath. \n\n\"I've missed your smell.\" He whispered. \"Sometimes I'd catch a whiff of something, someone who would remind me of you, and I'd follow...\" He trailed off and took another deep breath then he trembled.\n\n\"Oh, God, Mike... I'm so scared.\"\n\nMy heart pounded and my hands were around his back stroking him softly. The swelling in my cock was an intrusion I wanted to go away. This was not the time for sex; it was love we were talking about. Joe had made his decision. My heart soared with that realization at the same time my bowels turned to water because of the fear that gripped me. I rubbed the top of his head with my cheek.\n\n\"So am I, Joe.\" I replied as softly as he. \"So am I. But we'll figure this out. I love you.\"\n\nHe raised his head and smiled a little.\n\n\"That's why I came home. You love me, and I finally realized that's the only thing that matters in my life.\" He shook his head in wonderment. \"Who'da thunk it?\"\n\n\"Well, apparently, not the two of us,\" I added dryly, \"considering it only took us four years and the help of a bunch of people pointing it out for us to realize it.\"\n\nWe were silent for a few minutes just holding each other and breathing in each other's scent. It was amazing how right it felt to have Joe in my arms. For the first time in my life, I knew what it was like to be completely content. Hell, I was ready to take up residency in that car. I wondered idly if Lucy would mind if I told her she couldn't have it back. But all good things must come to an end. Both my legs were going to sleep from the awkward position I was in.\n\nJoe must have been getting a little uncomfortable too, because he finally broke the silence. \"We should probably go upstairs,\" he said, nodding his head towards the entrance.",
        "Reluctantly, I agreed and we slid apart and got out of the car. My arms felt empty. I popped the trunk and Joe and I retrieved his suitcase and backpack and trudged up the squeaky staircase. I got out my key and put it in the lock and shivered when Joe brushed against me as I opened the door. I stepped aside and he walked in. I turned to look at the big house. The light in the kitchen blinked off. Lucy had waited to make sure everything was okay.\n\nI went inside and closed the door. Joe had dropped his things as soon as he got in and was just standing there. I reached for the light switch.\n\n\"Don't.\" His voice was hoarse. \"I need to say some things to you, and I don't think... I don't think I'll be able to go through with it if I can see your face.\"\n\nMy hand froze on the switch and I waited for Joe to go on.\n\n\"When I left here, I was pretty sure I wasn't going to be coming back. Not ever.\" His voice sounded sore, as if the words were hurting him. \"I had it all planned out. I'd take a year off; apply to another medical school, start over. I'd decided it would be better if I never saw you again.\"\n\nI stood there appalled. The fact that I'd already figured that out didn't make it any easier to hear it coming out of his mouth. A choking fear squeezed my chest and made it difficult to breath.\n\nJoe seemed to sense my feelings. \"I'm sorry. Maybe I shouldn't be telling you this.\"\n\nI shook my head even though I knew he couldn't see me do it. \"No,\" I said, keeping my voice steady. \"I want to hear everything.\"\n\nJoe sighed heavily and went on. \"I told myself that in a couple of years, maybe we'd be able to get together, pretend nothing had happened. Maybe we could salvage at least some of our friendship. I was kidding myself, of course. But the only way I could face the possibility of not seeing you was to tell myself it was only temporary.\" He laughed but there was no humor in the sound. \"That fact alone should've told me I wouldn't be able to go through it.\"\n\nMy eyes had adjusted to the dark room and I could see him shake his head slowly and shrug his shoulders.\n\n\"Self-deception is an amazing defense mechanism,\" he continued. \"It can make you believe the most impossible things.\"\n\nThere was so much pain in his voice I regretted encouraging him. \n\n\"Joe, you don't have to...\" I started.\n\n\"Let me finish.\" He was too harsh and he knew it. \"Please.\" He'd softened his voice, but it was still an order.\n\nI stayed quiet and he continued after a few moments.\n\n\"When I got to Rome, I was determined to put all of this behind me. Josh had an apartment with two other priests. I stayed with them for a few days until I found a place of my own. Josh didn't want me to go, but I told him I needed some time alone to think. He didn't like it, but eventually he gave in, after making me promise that I'd check in every few days.\"\n\nHe paused and cleared his throat.\n\n\"Can I have a glass of water?\" He asked politely, almost formally.\n\nI was surprised he asked. He'd always helped himself before.\n\n\"Sure.\" I walked over to the kitchen and grabbed a glass and filled it from a bottle in the fridge. The light momentarily blinded me and I had to wait for my eyes to adjust before I walked back over to him. I handed him the glass. He was careful not to touch me, but his fingers shook and some of the water slopped over the rim onto the floor.\n\n\"Sit down,\" I said gently.\n\nI could barely see his face, but I still felt like his eyes were burning into me. He stayed where he was for a minute, then put the glass to his lips and drained it. He handed it back to me, again avoiding physical contact, then went over and slumped on his usual spot on the couch - legs bent, knees spread, with his large hands dangling between his legs. I went back to the kitchen area and filled his glass again and got one for myself. I walked over to the sofa and put his glass in front of him and turned to go sit in my recliner.\n\n\"Could you sit on the couch? Like... like you usually do?\"\n\nI stopped. I had thought he'd be more comfortable with some distance between us. Apparently, I was wrong. I turned and moved to my traditional end of the sofa and sat down carefully. The bizarre familiarity and strangeness of the scene struck me at once: how often we had sat like this, just bullshitting and telling each other our dreams. Yet somehow, this felt like we were talking for the very first time.\n\nJoe started to speak again in a low, soft voice. I leaned forward and hung on every word, as if my life depended on it.\n\n\"At first, I had this plan. I was going to do all these things - play tourist, meet new friends. For a few days I tried, but nothing really interested me. The ancient ruins left me cold; museums were a bore. Nights, I'd just sit in a bar and I'd listen to the people around me. I couldn't join in, and not just because of the language barrier. It seemed like I'd lost the ability to connect with people.\" He cleared his throat. \"It was a novel experience.\"\n\nI'll bet, I thought. Joe was used to having an entourage. Except for the times we'd spent alone, I didn't think I'd ever seen him without at least of couple of buds tagging along.\n\n\"I told myself I wanted companionship,\" he continued, \"but I kept avoiding it at the same time. Josh was almost out of his mind worrying about me, but even with him I couldn't really open up. I mean... I told him about us, but only to a point - only the facts. I just couldn't make myself tell him how I felt. Our connection had been slipping for a long time - ever since high school, really - but I didn't know how much we'd really grown apart until I saw him this summer.\"\n\nHe stopped talking and took another gulp of water. \"It wasn't like we were suddenly strangers. It'll never be like that; he'll always be my brother, my twin. But we no longer depend on each other the way we used to. Josh has the church; I had... well, I wasn't sure what I had, but I knew it wasn't him anymore. I couldn't tell him all that'd happened between Betsy and me. I... I couldn't tell him how I really felt - about you.\"\n\n\"He knew anyway,\" I interrupted gently.\n\nJoe nodded and turned away slightly. \"Yeah,\" he admitted. \"That's right. Josh was always good at reading me. Anyway, he guessed or did the old twin thing - I don't know. But he finally came to me and confronted me. It took him a while to wear me down, but he kept after me, bugging me. The day you called was the day I finally broke down and told him all of it. You calling like that...\" He made a gesture of helplessness, then sat back and ran his fingers through his hair. \"Well... it seemed to just be the final straw. That's the real reason I blew up with you. Josh was pissed at me about that, by the way. He thought I'd acted like a real shit-head. We fought about it more than once.\"\n\n\"I know.\"\n\n\"That's right, he told you. I knew he talked to you afterwards. He likes you - did you know that? He says you're tough and brave, even if you do have lousy taste in men.\"\n\nI couldn't stop myself; I reached over and stroked the arm he'd draped over the back of the couch. Joe slid it back until our hands touched. I could feel his hand twitch slightly from nervousness, but then his fingers curled and gripped me tightly.\n\n\"I'd been there for almost 5 months and I'd developed a whole routine. Every morning, I got up, I'd shower and shave; eat my breakfast and then go out for a walk. I would go in any direction I felt like. I'd walk for hours, only stopping for something to eat or a coffee. Most of the time, I'd get hopelessly lost and would have to take a taxi back to my apartment. At night, I'd go down to the cafe on the corner and I'd watch the neighborhood people. Eventually, I did get to know some of them, but I still felt like an outsider. The world was going on around me, but I didn't feel like I had a place in it anymore.\"\n\nHe squeezed my hand harder and took a deep breath before he continued. \"One day, I walked to this little neighborhood about three miles from where I was staying, near the Villa Celimontana. I'd been there before, but it somehow appealed to me, and I'd gone back several times. It was just a middle-class neighborhood, not very beautiful, not particularly old - at least by Italian standards - but there was this little park with a fountain, Parco di Porta Capena, and the neighborhood kids would kick soccer balls and the old men would play bocce and the mothers of the smaller children would sit on the grass and gossip while keeping an eye on their bambinos. But that day, there didn't seem to be anybody around.\"\n\n\"The church on the corner opened its doors and six pallbearers appeared with a coffin. A middle-aged woman, all in black, walked behind it. Two young men supported her. She was crying, and the boys and the crowd that followed were grim. I watched as they loaded the coffin into a hearse and kept my eyes on the scene until everybody had left. After all the activity, the street seemed unnaturally quiet.\n\n\"Suddenly, the front door of the house across from where I was sitting swung open and a bunch of people came running out of the house laughing. It was as if somebody had thrown a switch. Houses from all over the neighborhood opened up and people were laughing and shouting at each other.\n\n\"An older man appeared in the doorway of the first house and seemed to address the whole neighborhood. Everyone got quiet and watched him as he turned back to the house and motioned to someone. A beautiful young girl appeared beside him, dressed in a white wedding gown. Her cheeks were bright red from embarrassment, but she was smiling. The crowd went wild. They cheered and applauded. Over and over I heard the word, 'bellissima.' Then as suddenly as they started, they were silent again.\n\n\"A young man dressed in a dark suit had broken from the crowd and started to walk towards his bride. I saw the look on his face, in her eyes. He took her hand and together, with all the people who lived around that square they made their way to the church. The same church where so many had cried just a little while before. I watched until the crowd had disappeared and the doors had shut. The street was silent again.\n\n\"Again, I seemed absolutely alone in that park. It was so quiet I could actually hear the sound a squirrel made as it jumped in and out of bushes looking for stray candy and snacks left by the neighborhood kids. But, after a while, I realized that I wasn't really alone.\n\n\"There was a mime or a clown - I never did figure out what to call him - standing just behind the fountain. I'd seen him before; he used to work the street corner up from the caf\u00e9 on evenings, when the tourists would be taking a pre-dinner walk. He had this whole schtick he'd do, with balloons and pratfalls, not really the normal 'man in a box' stuff that mimes do, but he was silent like them. Anyway, I'd seen him a lot, so I recognized him now, though I'd never met him before outside of my seat at the caf\u00e9.\n\n\"I don't know why he was there that day either. Maybe he was hired for entertaining at the wedding party later - I never did find out. But when I saw him, I realized he must've been watching me for some time. We looked each other over. He smiled at me and motioned towards the church to show he knew what I'd been looking at. I smiled back politely and grabbed my book and pretended to read. A minute later I realized a pair of black ballet shoes were visible in front of me.\n\n\"I looked up and saw the clown. He had a big red balloon in one hand, and he lifted it above his head and let go. We both watched as it sailed up over the trees and disappeared. Then he grinned.\n\n\"'La vita \u00e8 bella,'\" he said. And then he turned and walked away.\"\n\nI'd never heard the phrase. \"What does it mean?\" I asked.\n\nJoe cleared his throat. \"It means, life is beautiful.\"\n\nHe stopped, and then I realized I could feel his thumb lightly stoke the top of my hand. \n\n\"I couldn't believe it,\" he said. \"I felt like I was in a fucking Fellini film! I started to laugh out loud and had to restrain myself from looking for movie cameras. I couldn't sit there anymore. I was still grinning, but I got up and started to walk back to the apartment, then began to run. I was in a hurry - I had to get back. I wasn't sure why, but the compulsion was irresistible.\"\n\nHe looked up at me. The light was so dim, I couldn't make out the details of his face, but I could see a faint reflection in his eyes. \"Suddenly, I stopped,\" he said. \"I knew. I knew that what I wanted - no, needed to do - was to tell you... to share with you what I'd just seen. And not just what I'd seen on that day, but on every day.\"\n\nHe stopped for a moment and sat there. Finally, he began again, his voice soft in the darkness.\n\n\"Mike,\" he said, \"I don't know where this will take us. I don't even know if what we feel for each other will last.\"\n\nHis hand squeezed mine, then released it. I felt his heat as he slid towards me. I strained my eyes in the darkness, searching his face as it closed in on mine. Long habit made me want to turn away, to jump up and move to a safer distance - the distance I'd always kept between us in self-preservation. I held my ground.\n\n\"But one thing I do know,\" he reached up and stroked my cheek. I could feel the trembling in his fingers. \"And that's that I love you. And even though I don't know exactly what that can bring us, I can't let my fear keep me from finding out.\"\n\nHe tilted my head up so our lips were only millimeters apart and stopped. I wanted to pull him towards me, but I knew it was important to Joe that he be allowed to be in control for that moment. The moment stretched and I forgot how to breathe.\n\nWith a shudder, Joe closed the distance between us. The kiss was awkward, our noses got in the way, our teeth clicked harshly, and our tongues felt fat and clumsy as they dueled. Yet I almost came from the sheer joy of it.\n\n\"Jesus, this is strange!\" Joe whispered in my ear. \"The women I've kissed never had heavier beards than me.\"\n\n\"Well, there was that one girl from Greece I remember you dating...\" I said, falling back into our normal pattern.\n\n\"Fuck you, asshole.\" Joe punched me lightly, then stopped as he realized that the previously innocent comment had just taken on a whole new meaning.\n\n\"Sure,\" I said with a chuckle. \"I'll go get the lube.\" I tried to leer at him in the dim light, but started laughing instead at the look of alarm on his face. \n\n\"Relax,\" I said, reassuringly. \"I was just kidding.\"\n\nJoe grinned a little, but his eyes still looked worried. I figured now was as good a time as any to get the inevitable sex talk out of the way. I gently pulled away from him and twisted to turn on the lamp on the coffee table. By the time I'd turned back, Joe was in his usual corner of the sofa, eyes cast downward, cheeks flushed in embarrassment.\n\n\"I'm sorry.\" He said simply. \"I thought that this would be easier, that somehow things would just fall into place.\"\n\n\"What?\" I said, incredulously. \"You thought after one kiss I'd be up on all fours wagging my ass in your face?\" I shook my head and frowned in mock disgust. \"You've been reading gay porn, haven't you?\"\n\nI waited until I saw him grin again. \"Joe, it's okay,\" I said. Now it was my turn to move to him. I pulled him into a loose embrace that he didn't return, but didn't resist either.\n\n\"Listen,\" I said soothingly. \"We can go as fast or as slow as you want. Gay sex is not as absolute as the boy/girl kind. Different partners make up different dynamics depending on their tastes, their needs. I think we'll just have to take our time and find out what works for both of us.\" And, I silently prayed, I hope to hell we find it.\n\nI leaned forward and took his mouth again. Now, there was no hesitancy in my kiss, no restraint. Our mouths opened and this time, the awkwardness was gone. Our tongues dueled expertly, as if they'd always known each other. I could have pressed on at that moment. I knew it from the way his body leaned into mine, the way our hearts had taken on each other's beats, but I broke the kiss instead. There were still things to be said and now that Joe was here with me, I felt like we had all the time in the world to explore our possibilities. I was not going to risk rushing through something I'd waited so long to experience.\n\nWhich makes me sound like I was making some sort of sacrifice. Not a chance. Sure, I wanted Joe, more than I've ever wanted another human being, ever - but I didn't just mean that physically. I wanted to let his voice sink into my bones and I wanted to re-memorize the planes of his face, the way his eyes asked me questions he wasn't able to put into words. Like I said, this wasn't about sex.\n\n\"So,\" I brushed his hair off his forehead. \"Are you hungry?\"\n\nHe laughed shakily. \"Starved.\"\n\nI pulled out the cold cuts I'd bought the night before for the weekend, and quickly threw together a sandwich. He stayed on the couch and watched me as if he'd never seen me before. I poured him a glass of milk to go with it and brought them both over to him. He thanked me - again too politely - then sat there and stared at the food as if he'd forgotten how to eat.\n\n\"Go on,\" I urged him, \"dig in! Just don't get used to the service. I'm not exactly handy in the kitchen.\"\n\n\"Like this is exactly news?\" he said with a grin. He picked up half of the sandwich and bit into it. As he chewed he gestured to the remaining part.\n\n\"Aren't you having any?\" He said as soon as he'd swallowed.\n\nI shook my head. \"I'm not hungry.\"\n\nHe shrugged and gulped down the rest of the snack in silence. I watched him greedily. I hadn't exactly been truthful when I said I wasn't hungry. I was - just not for food. \n\nHe picked up the glass of milk and drank half of it without taking a break. When he set it down he had a milk mustache. Letting myself give into temptation, I reached across and wiped up the moistness with my finger and stuck it in my mouth, sucking off the sweet liquid, warm from his skin. When I looked back at him, he was staring at my mouth, his eyes hot and filled with desire. He noticed me looking and licked his lips nervously.\n\nWe reached for each other at the same time. The kiss was deep and full, as we tasted each other's flavors. Another new style to add to our growing repertoire, I thought. Again, I had to force myself to break away before we got too caught up in the moment. Joe made a little moan in the back of his throat when I did, but he didn't protest anymore. He knew as well as I did that we needed to take care of other things before we sampled any more of each other.\n\nJoe looked at me steadily. \"I want to tell you something.\"\n\nHe sat up and shoved back on the couch until he was in the crook of the arm, as far from me as he could possibly get. He seemed to need the distance and I wondered what it was that he could possibly have to say that would make him think that.\n\n\"You can tell me anything,\" I said. \"I hope you know that.\"\n\nHe nodded, then bit nervously at his thumb. \"I wish I had a cigarette. You didn't know I started smoking in Rome, did you?\"\n\nIt amazed me. Joe had always been so adamant about all the 'body is a temple' crap. \"That's what you wanted to tell me?\" I asked incredulously. \"'Cause if it is, I'm not wild about the idea - but it's your life.\" I looked towards the kitchen. \"I think I have an ashtray over in the cupboard. Let me go...\"\n\nJoe reached over and put his hand on my arm. \"Relax - I quit. I threw out the rest of my pack in the airport in Rome.\"\n\n\"Oh.\" I was confused and I looked at him, waiting for an answer.\n\n\"I was just trying to put this off. I need to get it off my chest, but I'm not sure I want to - if you get my drift.\"\n\n\"Take your time,\" I covered his hand with mine. \"We can even wait and do this later if you're too tired now.\"\n\nJoe slid his hand out from under mine. \"No, I don't want to wait. I've been keeping this inside me for far too long as it is - way too long.\" He sat back again and closed his eyes and began. \"I've never been very good with telling the truth.\"",
        "I started to protest, but he held out a hand, shook his head and I stopped. After a few seconds of silence, Joe began again.\n\n\"Mike, you've been honest with me, and now it's my turn. Forgive me if I get confused or don't make much sense. I haven't had much experience with it; lying is so much easier, especially when you've had as much practice at it as I have.\"\n\nHe waited for me to take in his words. When I had no further comment, he went on.\n\n\"From the time I hit puberty, I knew I liked boys sexually. Oh, I liked women, too - plenty - but the attraction to men was always there. I never did anything about it. Well... not much, anyway. There were a few times when my buddy Todd Baylor and I sorta helped each other out when we were beating off, but that was at camp when we were about twelve, and I really don't think that counts.\"\n\nActually, it does, I thought, but I wasn't about to interrupt him with a discussion of adolescent gay psychology.\n\n\"Anyway, that was about it, 'cause when I realized how much I'd really enjoyed it, it scared the shit out of me! So, I decided that I'd make sure it never happened again. Instead, I just thought, 'big deal, I like girls too.' That's the easier route; I'll just choose that path. I mean, who wouldn't if they could, right? Who would choose being something that half the world hates? At least, that's what my 13 year-old mind thought.\"\n\nI winced a little but nodded.\n\nJoe smiled apologetically. \"Sorry if that's offensive. But you started the truth game, so consider it your fault that I've decided to play, too.\"\n\nI shrugged. \"It's the truth. I never had a choice myself, and I think most guys are the same way, but I can understand what you're saying. If I'd been in your shoes, I'd probably have felt the same way.\"\n\nHe nodded briefly, but he looked relieved at my reaction. \"You'd be amazed at how easy it really was to do this. It was like I trained myself to be 100% heterosexual. 'That guy's got a cute ass,' I'd think, and then correct myself. 'No, don't look at him! Look at that girl with the great boobs, instead!' After a while, it just became second nature. Hell, I thought I was over it - like it was a cold or a case of the measles.\"\n\nHe shook his head as if he was still amazed at his own self-deception. \"And it didn't exactly feel like I was denying myself anything. I still had all the girls I wanted. Why not? It was socially acceptable, and trust me - I loved every minute of it. That was another reason I was sure that I wasn't really gay. How could I have enjoyed sex with girls so much if I really wanted sex with guys?\" He grinned. \"Of course, the complexities of bisexuality escaped me in high school.\"\n\nJoe's smile faded and he looked at me, suddenly serious again. \"And they may have forever if something hadn't happened. I met you.\"\n\nMy face flushed momentarily.\n\n\"But I wasn't as smart as you,\" he continued. \"I had no idea how I felt for you in the beginning. All I knew was that you were this really cool guy that I liked a lot.\" He dropped his eyes and studied the hands he was absent-mindedly twisting in his lap.\n\n\"Here comes my first confession,\" he said. \"When you told me you were gay, my reaction had more to do with panic than anger.\" Joe laughed and shook his head. \"I was so freaked, I thought the reason you were telling me all the that was because you knew - that somehow you'd guessed my secret! That you knew how attracted I was to guys.\"\n\nI started to say something, but Joe shook his head.\n\n\"And there was more,\" he said quietly. \"For one brief moment when you finally said, 'I'm gay,' all I felt... was happy. And that really scared the hell out of me.\"\n\n\"I had no idea,\" I said softly.\n\nJoe looked up. \"Of course you didn't! I wasn't about to let you or anybody else know my big secret! Hell, I couldn't let myself believe it! Anyway, I managed to justify my reaction pretty damn quick. All those years of conditioning kicked in. By the time I'd gotten home to Chicago, I was just chalking it up to 'one of those things.'\n\n\"But, that's why Josh was able to talk me out of being so pissed, so easily. I had already convinced myself that you were no threat to my sexuality.\" He shook his head and smiled wanly. \"Funny - if I'd really thought about it, I wonder if I'd have realized how much I really wanted to be talked into apologizing, and what exactly that meant.\"\n\n\"You made me very happy when you called back that night,\" I said.\n\n\"Don't!\" Joe protested. \"Don't try and make this sound like it's something I should be proud of! I did that enough on my own. Do you know I actually had the balls to congratulate myself for being so liberal? You wrote in your letter that you thought you'd been an asshole, but I have to tell you - you don't exactly hold the corner on the market, Mike.\"\n\n\"I told myself I loved you like a brother.  Hell, it even made sense with Josh so cut off cause of being in the seminary and all.   It didn't even occur to me that no matter how close I was to him, I'd never felt the connection I'd felt with you - and he's my twin!  But I barely missed him after a while, 'cause I didn't need him the way I always had before. I had you.\"\n\nI had to admit what he was saying was starting to make a lot of sense, especially after my conversations with Josh. All the pieces I hadn't been able to fit into place before were working their way into the picture. It was a different picture than what I'd expected, but I had a feeling that when it was complete, I was going to like it a lot better.\n\nJoe, for his part, was caught up in his story. \"I can tell you the first time I started to realize that I might be feeling something for you, that didn't exactly fit in with my self-image of rampant heterosexuality. If you think about it, you can probably figure it out for yourself. Do you remember? It was the night you came home after spending that day on Cam's boat.\"\n\nI nodded. Again, this made sense, and I'd already figured out this was a turning point in my own little journeys down memory lane these last few months.\n\nJoe made a sour face. \"I never liked him, you know - not from the moment I saw you look at him when he walked into that bar. I told myself that it was just that I was worried about you. Of course, that was pure bullshit, but I bought it because it was what I needed to believe. Then came that night when you came home with Cam, and even my powers of self-deception weren't strong enough to keep me from facing the truth.\n\n\"I'd been real happy when I got to your place. You didn't know that, did you? How could you? It sure wasn't the mood I was in when you finally got home. See, Betsy had called an old mutual friend of ours... and then she'd gone to Illinois for the game, and I saw her there afterwards. She told me Bets was on her way back. Of course, I picked up the phone and tried to call you right away, because by that time, I shared everything with you. It seemed natural... addicting. But you weren't home. I tried a couple times, but hey - it was Saturday night, I understood.\"\n\n\"Big of you,\" I said dryly, then immediately regretted it when I saw the look on Joe's face.\n\n\"Yeah, that's me all right,\" he agreed bitterly.\n\n\"I didn't mean it that way,\" I said quietly. \"I'm sorry.\"\n\n\"No, you should mean it. It's true. You know, you once told me I was too easy on you, but from my point of view, it's always been you that's excused me. I mean, why the fuck are you even letting me in your house after I just deserted you like that, with the rape and...\" He choked as the words caught in his throat.\n\n\"Stop it!\" I moved over and grabbed him by the shoulders. \"We'll talk about that later. We'll talk about all of it, but right now, let's take one thing at a time, alright?\" I looked at him and watched as he struggled to get back his control. When I figured he'd succeeded I spoke again. \"Now, tell me the rest of your story.\"\n\nHe nodded then cleared his throat and started again. \"The first I thing I did when the team got back was to go over to your place. You still weren't there. I was a little disappointed, but I let myself in and thought you'd be back any minute. That was at 3p.m - by 4, I was asleep on the couch; by 7, I was awake again, and by 10, I was worried.\"\n\nJoe yawned and I almost stopped him; he looked so tired. Maybe now wasn't the best time to discuss anything. But he saw my look and shook his head no.\n\n\"I'm okay, Mike,\" he said. \"Believe it or not, it feels good to tell you this finally. It's such a relief.\"\n\n\"All right, but if you want to stop don't worry about it.\"\n\nHe shrugged. \"No, I'm fine. Where was I? Oh, I remember.\n\n\"You showed up at 11 that morning, and I knew the moment I saw you that something momentous had happened, and I knew it had to do with Cam by the way you looked at him. I'd never seen you look at anybody that way - not even me. I was instantly so jealous I could barely breathe. Of course, I couldn't let you know that, so I just translated all that emotion into anger. Not exactly a hard trade, since I was pissed, but only at myself for feeling that way. You know the rest of what happened after that, but you never knew why.\"\n\nI shook my head. \"Not right away, no. But these last months, I've been doing a lot of searching through the past, and I wondered...\"\n\nJoe shrugged again. \"You were always smart.\"\n\n\"Yeah,\" I said ruefully. \"When I wasn't being a total dumbass.\"\n\nHe actually smiled a little. \"I was the dumbass that night. Even then I knew what I was doing was unbelievably stupid. But the fact was, until that minute when you walked through the door, it'd never dawned on me that I'd ever have to share you with anyone. Oh, I knew you had boyfriends, but you were always so casual about it. You even told me a couple of times how you didn't ever see yourself really getting seriously involved with anybody. I depended on that being true. I should've known better.\"\n\n\"But you're the one who told me I needed more in my life!\" I shot back, indignant at his last statement.\n\n\"Yeah, well... I thought we'd already established what a liar I can be,\" Joe said with a sigh. \"Do you know I almost kissed you that night? I was so nuts about seeing you with Cam, I was ready to do try just about anything to make you see what a mistake I thought you were making - even to the point of telling you the truth about my feelings. But when put my arms around you, I suddenly realized that he'd been there first! I felt like he'd beaten me at a game I hadn't even known I was playing.\"\n\nMy eyes widened. Just as he said those words, I realized that was something else I'd known - somewhere deep in my brain, I'd known even then what he'd wanted to do. I'd just buried it like so much else I'd buried about my true relationship with Joe.\n\n\"And deep down inside, I knew,\" he continued. \"I knew that however much I might think I wanted you at that moment, I really wasn't prepared to give up everything I'd created about myself... not even for you.\" \n\n\"And that wasn't fair. At least Cam was sure of who he was. If you two didn't make it, it wouldn't be because he'd never given it a fair shot. I couldn't say that about myself.\"\n\nHe looked at me and smiled sadly. \"It was probably the one time in this whole mess when I was honestly thinking of you and not being a selfish prick.\"\n\nJesus Christ, I thought, suddenly angry. Couldn't you at least have given me the opportunity to try and change your mind? Then I stopped that train of thought before it could consume me. Of course he couldn't, and why would he have thought I'd even want it? It wasn't like I'd been any more honest with him about my own feelings. Hell, at the time he was describing, I hadn't even been honest with myself! Seems like we had a lot more in common then I'd ever believed.\n\nI struggled to my feet, still weary from the day's activities. Nothing was going to get resolved tonight, that was clear. I was worried that we were both so exhausted that we could inadvertently make it worse. Joe's little confession might be good for him, but it was starting to piss me off, and that wasn't the way I wanted our reunion to go. We had a lot of baggage to sort through, but it wasn't all going to happen in one night.\n\n\"Okay, enough,\" I said, raising my hands in surrender. \"All my hair shirts are at the cleaners, so we can't continue this conversation until I get them back.\" I leaned over and grabbed Joe's arm and dragged him up to his feet. \"I'm about to fall down dead from lack of sleep, and so are you. We can't solve anything if we can't think clearly.\"\n\nJoe started to protest, but a yawn caught him in mid-word and he stopped and smiled at me sheepishly. I remembered suddenly that I was in love with the guy. I pulled him to me and wrapped my arms around him tightly. After a moment he put his arms around my neck and buried his face in my shoulder.\n\nI felt my anger melt. Maybe we wouldn't exactly make a poster for the perfect gay couple, but what we did have was worth trying to build on. I hugged him tighter and felt my heart swell when he returned the favor. Yeah, I thought. I was in love with Joe and he seemed to feel the same about me. Life really is beautiful\n.\nWe stood like that until we started swaying. He looked up at me. \"If we stay like this much longer, we're probably going to fall down.\"\n\n\"I know,\" I agreed sadly. \"But I don't want to let you go.\"\n\nHis mouth found mine and we shared a soft, sweet kiss. Surprisingly, there was no passion behind it on either of our parts. It was as if we both realized that we had the time to explore that side of us later, and that now was the moment of promise, not fulfillment.\n\nHe kissed me again and then we reluctantly broke apart. I went into the bathroom to brush my teeth. When I came out Joe was still standing in the same spot I'd left him in.\n\n\"I thought you'd be ready for bed by now!\"\n\nJoe flushed and had a hard time meeting my eyes. \"Well, I wasn't sure how we were going to work this.\"\n\nI walked up to him and gentle tipped his face so he was looking directly at me. \"Well, I thought first we'd strip, and then I'd fuck you silly.\"\n\nHis eyes widened. \n\nI laughed. \"Jesus, Joe! You have got to get a sense of humor!\"\n\nHe looked at me and blushed even redder. \"Asshole,\" he muttered.\n\n\"Look,\" I put my arms on his shoulders and felt how tense he was. \"I think we should just relax and take our time here. You're totally beat, and so am I. Why don't we just get some sleep for now, and then we can start to figure out where we go from here in the morning.\"\n\nThe muscles under my fingers relaxed. Joe nodded and then smiled shyly at me. \"Thanks, Mike.\" He brushed his lips over mine. \"I don't want to act like some virgin at a prom, but I guess I'm a little bit nervous.\"\n\n\"S'okay. If you want the truth, so am I, a little bit.\" I pointed towards his duffel. \"Now, get your jammies on and come to bed.\"\n\nI deliberately turned my back to him and walked over to the clothes hook on the back of my closet and started to strip. I was being honest - I was a little nervous. I wasn't even sure if I shouldn't just offer to sleep on the couch. God knows, I was totally ready for sex with Joe, but it was clear he was scared shitless. I figured he'd go through with it if I really pushed it, but sacrificial virgins had never been a turn-on for me. I was willing to wait - at least for a little while - until he'd gotten in his bearings.\n\nI stripped to my boxers, but stopped there. I normally slept nude, but it didn't seem like such a hot idea tonight. I turned to see Joe standing there in his briefs too. From long habit, I started to avert my eyes. Then I stopped myself. What the hell was I doing? Maybe we weren't ready yet for the big event, but we sure as shit could check each other out.\n\nAfter all, it wasn't like I hadn't seen Joe's body before. I had, but only in stolen glimpses. And even those didn't happen often. All the times he'd lived down the hall from me or borrowed my shower when he'd show up at my door after a workout session or a run, you'd think we would've been a little freer with each other. But I was always worried he'd think I was trying to make the moves on him, and he'd had his own concerns, as I knew now. But now, here he was, standing right in front of me, and finally I got a look at the man I'd fantasized about for so long.\n\nHe'd lost some weight since the last time I'd seen him, and he'd always been thin. Now, there wasn't an extra ounce of fat on his body. His chest was hard and lean, and he had a triangle of golden hair spreading across to his nipples. From there, it trickled down to a narrow arrow that dissected his naval, then continued south until it spread out again at the waistband of his briefs. His legs were heavily sculpted, long and toned, and covered with a light covering of down that matched the soft hair on his chest. My eyes followed the length of his legs to his long narrow feet and toes and then they reversed and covered the same ground until they stopped at the top of his thighs. He had quite a bulge there, and it stretched and weighed down the soft cotton knit of his underwear. As I looked I could see a twitch and I thought I noticed a thickening of the shaft, whose outline was plainly visible under the thin fabric.\n\nI forced myself to stop from licking my lips and turned my eyes back to Joe's face. I suppose I was worried that I might be making him uncomfortable, but I shouldn't have worried. He was too busy looking at me to notice what sights I'd been taking in. His eyes flickered up and down my torso and when they stopped, my cock told me it knew it was being admired.\n\nNow it was my turn to blush. Because unlike Joe, my distress over the last few months had caused me to gain, not lose weight. Not much, only 10 pounds or so, but still, I was no lightweight to begin with, and the new weight had settled into small love handles and a little thickness over my chest. Thank God, I'd been blessed with a naturally decent body, and the rest of me still looked toned and pretty fit. I was promising myself that this time; I really meant it about starting to work out when Joe interrupted my thoughts.\n\n\"Which side of the bed should I take?\"\n\n\"Huh? Oh,\" I finally focused on his question. \"I usually sleep on the right because of the phone and the alarm and all. That okay with you?\" \n\nWell, at least he'd answered the question of whether we were going to sleep together that night.\n\n\"Sure,\" he replied, and walked over to the right side, pulled down the covers, and scooted in.\n\nI watched as he did this and it suddenly hit me. This was Joe in my bed. I mean, in my bed! Right there, sprawled out underneath my official Spiderman sheets! And I had just told him that I thought it was a good idea that we get some sleep. Was I out of my fucking mind?\n\nI turned off the overhead light, then slowly walked over and sat down on the bed. I could feel his eyes burning into my back. I reached over and turned off the desk lamp, and the room was suddenly illuminated with a pale blue light from the full moon outside. I didn't even have the dark anymore to try and convince myself that lump next to me wasn't a guy I'd been lusting after for four years.\n\nShit, I thought, this was torture! I wasn't even tired anymore. But, I reminded myself; I was going to keep my word. God knows how, but I was going to try. I swung my legs around and pushed them under the covers.\n\nWe lay next to each other - not touching, not saying anything, and barely breathing, if the truth be told. I didn't know about Joe, but to my way of thinking, this was turning into a goddamn long night. My head and my heart knew without a doubt that this was absolutely the right thing to do; I just wish my cock felt the same way. It was as hard as a baseball bat, and it was pointing directly at Joe's face, acting like a beacon to show me exactly where it should be right now.",
        "\"Mike?\" The sound of my name on Joe's lips made my heart lurch in my chest.\n\n\"Uh-huh.\"\n\n\"I think this is a good idea.\"\n\n\"What's that?\" I mumbled.\n\n\"Uh,\" he searched for the words. \"You know... us not rushing things.\"\n\n\"Sure.\"\n\n\"I mean... it's not like we don't have time now,\" he continued, though I wasn't sure if he was still talking to himself or to me. \"And we've waited this long...\"\n\n\"Absolutely right,\" I said, mentally willing my erection to deflate.\n\n\"It shows maturity, a real grasp of our knowing what's important.\"\n\n\"Yup.\"\n\n\"Oh for fuck's sake!\" Joe whipped the covers back and straddled me. \"To hell with maturity!\" He smashed his mouth down on mine.\n\nOkay, he had a point. Not that I was thinking that right then, mind you. I was too busy trying to suck his tongue down my throat to worry much about anything else. I snaked my arms around Joe's back and pulled him down until he rested on me - although, 'resting' wasn't exactly an accurate description of what either of us was doing.\n\nJoe squirmed on top of me like he couldn't get close enough. This was just fine with me and I helped him along by moving my hands down to his ass and grabbing it, shoving his groin into mine. He gasped and raised his head to look at me.\n\n\"Wait a minute,\" he panted. \"There's something I want to do.\"\n\nHe lifted his hips up. But before I could protest, I felt his hand slid down my belly and without missing a beat he shoved it right under that waistband of my boxers and squeezed tenderly.\n\n\"You like?\"\n\n\"Oh, God - yeah,\" I sighed, as he clasped my shaft and began to stroke.\n\n\"Good, cause there's more,\" he let go and with both hands tugged at my shorts.\n\nI, of course, was most helpful as I was just as anxious as he was to get rid of the only clothes that separated us. As soon as he was done stripping me, he peeled off his own jockeys and then he sat back on his heels.\n\n\"Turn on the light,\" he ordered in a husky voice.\n\nI reached behind me to my nightstand, and after almost knocking it over, found the switch and twisted. The light pooled in a yellow circle over half of the bed. I was only interested in one spot that it illuminated however.\n\nI'd heard other men describe someone as having a beautiful cock. I'd even been told that about myself a time or two, but I could never understand that term. Sexy, hot, powerful, erotic... those were the adjectives that had always come to my mind when I'd looked at another guy's dick, but never beautiful. Now, for the first time I knew what those other guys were talking about.\n\nJoe had a beautiful cock. Only a shade or two darker than the rest of him, his cock was straight, smooth, and cut, and capped by a perfectly bell-shaped knob. He was probably close to my size, and his balls were good-sized and covered with soft golden blonde down.\n\nJoe made no noise as I studied him. For a minute I was so absorbed in looking that I almost forgot that he was aware of my scrutiny. His cock had remained hard, though, and as I watched, a drop of precum bubbled up from the tip and dropped off to make a small pool on his belly. He sucked in his breath at the touch and I transferred my gaze to his face. His cheeks were flushed, but he looked me straight in the eye.\n\n\"Okay?\" He whispered.\n\n\"Oh, yeah,\" I answered softly. \"Perfect.\" \n\nJoe had been doing his own inventory and now he returned to it. I knew what he saw and I watched his face for a reaction. He finally noticed and flushed like a kid who'd been caught doing something he wasn't supposed to do, then he grinned.\n\n\"You're bigger than me.\"\n\nI shrugged. \"Maybe a little longer, but I think you're thicker.\"\n\nJoe was back to staring at my cock. \"We can get out the measuring tape later,\" he murmured. Then he dove down and took my whole tool in his mouth, and promptly gagged.\n\nI grabbed his shoulders and pushed him back. \"Easy there, stud,\" I laughed.\n\n\"Jesus Christ!\" He sputtered. \"How the fuck does anybody ever do that?\"\n\n\"Practice and determination,\" I hauled up until he was face to face again, then I kissed him. \"But hey, I appreciate the effort.\"\n\n\"It didn't seem so complicated when I was on the receiving end,\" Joe smiled wryly. \"I want this - God knows it's all I've been thinking about for weeks,\" he continued. \"But it's been a long time since I've felt this stupid about sex.\"\n\nI shook my head. \"You're doing fine.\" I kissed him lightly on the mouth and felt his lips quiver. \"The rest we'll just figure out as we go along.\" He was tensing up and I worried that maybe it would have been better to wait.\n\nHis next words made think I was right. \"But what if we can't?\" he moaned. \"Oh God, what if I'm too uptight? I don't know now if I'm gonna be able to do this!\"\n\nJoe started to draw away again, but I held him in place. Whatever should have been was in the past, and there was no going back now. If he needed a little seducing, then fine - I'd do that. But there was no way I was going to let him stop at this point. It would just make things that much more awkward later.\n\n\"Let me see if I can convince you,\" I murmured softly. \"Maybe I just need to refresh your memory.\"\n\nI gently ran my fingertips up and down his upper arms. Joe shivered and I kissed him gently then pulled back and studied his face.\n\n\"Okay?\"\n\nHe nodded.\n\nI pivoted our bodies and gently pushed him back until he sat down on the bed. \"Tell me if I go too fast,\" I told him.\n\nI knelt in front of him and studied his body. God, he was beautiful! It was all I could do to keep from grabbing him. But I'm a quick learner, and I wasn't about to push him into being any more uncomfortable than he already was. Instead, I contented myself with just lightly stroking his chest, tracing the line of muscle that lay just below his skin. Almost by accident I ran a fingertip over a nipple. Joe sucked in his breath at the touch.\n\nThat seemed promising so I slid my hand to his chest hair and pulled on it lightly and he arched his back and closed his eyes. Encouraged I moved my fingers to a small taut nipple and tugged on it. He yelped and I watched as his cock throbbed.\n\n\"Ah, you're one of those guys?\" I said playfully.\n\n\"Huh?\"  \n\n\"Your tits are hardwired to your cock,\" and to prove my point, I rubbed it again only to have the satisfaction of seeing the nub swell and redden.\n\n\"No! I mean, yes... God, I don't know - I've never...\" He gave up and arched his back and moaned quietly.\n\nI smiled down at his startled eyes. \"Good. It gives me something to work with.\"\n\nI followed up my words with a hand to his other nipple and gently tweaked it. Joe just groaned and thrashed some more. It was too good an opportunity to pass up, so I leaned in and gently tugged on the first nub with my teeth.\n\n\"Shit! Don't stop!\" He hissed.\n\nNot a problem. I licked and sucked and bit until I could tell my boy was just about out of his mind. But even though I could have been happy doing just that all night, I was on a mission, and I wasn't going to be sidetracked.\n\nI rose up to my knees and crawled into the center of the bed and held out my hand. Joe shook his head as if he was trying to get it back on straight. Then, slowly, he realized if he wanted any more, he was going to have to come to me.\n\nHe sat up and grinned. \"You can be a real hard-ass, can't you?\"\n\n\"Oh, you have no idea.\" Then I grabbed his arms and roughly pulled him to me.\n\nI found the small of his back and pressed our chests together. I sprawled over him pushing him back into the pillows and kissed him hard. He made a little moan in the back of his throat as I sucked the breath out of his lungs then blew it back. I repeated the breathing trick until both of us were starved for oxygen. We broke our kiss only because it was that or pass out.\n\n\"Convinced?\" I could only manage the one word.\n\n\"Need... a little... more... data.\" He gasped.\n\n\"Damn scientists! So analytical,\" I muttered as I searched for, and found, his earlobe and bit it gently.\n\n\"Oh God, that's incredible!\" His groin ground into my hip; I could feel his cock hard and pulsing against me.\n\n\"Hmmm, another hot point to file away.\" I raised my head and met his eyes.\n\nStill panting, we stared at each other. I could see all his questions, all his doubts, but I could see need, too. I lowered my head and sucked his soft lobe back into my mouth with gentle lips.\n\nJoe groaned and pulled me tighter to him. Slowly, I moved my hand from around his back to his hip. Then I pulled back and watched his face as I brought it further, dragging my fingers through his pubic hair, pulling ever-so-slightly until his hips squirmed. Joe's eyes widened as he felt me reach his shaft.\n\nI watched a muscle by his mouth twitch in an involuntary response to my touch and I encouraged it by wrapping my fingers around his rock-hard flesh and giving it a light squeeze. He shuddered and his eyes widened, but still we didn't break our gaze. Then I started to stroke... up and down, up and down... and I saw his eyes dull as lust finally grabbed him.\n\nI didn't want to make him cum with my hand. It wouldn't have been new; he'd already done that before with a guy, half a lifetime ago. I wanted to mark him, imprint him; start us out with a first for Joe. \n\nI took my hand off his cock and was gratified when his hips followed it, trying to get me to return to his center of pleasure. I pushed him further into the pool of light from the lamp. Bright light wasn't strictly necessary for our pleasure, but again, I wanted to push him, to make sure he knew that he was with me: Mike, a man.\n\nI sat back on my heels and let him take another good look at my cock. He said nothing, but when I held out my hand, he took it and pulled me down until I sprawled on top of him. I shifted my hips and for the first time our cocks touched.\n\nJoe arched his back and twisted his head, his eyes screwed tightly shut, then both of us froze as we fought the desperate need to shoot, which the electric contact had instantaneously created in us. I felt his heart pounding in his chest and I realized it matched mine, beat for beat. A long minute later I moved my head and found his lips already open, already inviting me in.\n\nThat kiss went on forever and still it was over too soon. But my full weight on Joe finally got the better of him and he struggled under me until he finally got his hands on my shoulders and pushed gently. I let go of his mouth with a gasp and looked at him.\n\n\"I'm sorry,\" he panted, \"I can't breathe.\"\n\n\"Sorry,\" I said, rising up on my elbows. \"Let's see if I can't find a way to solve the problem.\"\n\nI moved farther up off his chest and bent my head down and nuzzled his neck. Joe sighed and his arms wrapped around my neck. I licked and teased my way down to his collarbone and then looked up at him.\n\n\"Better?\"\n\n\"Oh God, yes!\" He groaned and then yelped as I took a nipple in my mouth and bit down gently.\n\nJoe slid his arms down my back and stroked me gently. I shivered under his touch, but I wasn't concerned about getting off myself. My whole being was concentrated on Joe's body and Joe's pleasure. I could feel his erection pressing into me, the heat of it searing me. His precum flowed out of him, leaving a sticky trail on my belly as I slid further down on his sweating chest, leaving his nipples to dig my tongue in his navel. It tickled him and he laughed and then groaned as my tongue finally found the tip of his cock.\n\nHis taste was salty and sweet and instantly addicting. I lapped it up like a thirsty dog. Joe said nothing, but his breath was coming in short gasps now, and I knew he wouldn't be able to last much longer. My hand slipped to his sack and rubbed gently as I took his entire length into my mouth, feeling that familiar bump as the glans hit the back of my throat. His hands came down to my head. He didn't hold me, though, but only gently stroked my hair.\n\n\"Mike,\" he whispered hoarsely, \"please... you've got to stop. I'm gonna cum.\"\n\nI lifted off him with a wet pop and looked up at him and grinned, then I took him back in my mouth. I ran my tongue over the underside of his shaft and tasted the hard sweetness of him and I felt my own balls rise as the reality hit me: This was Joe I was making love to!\n\nI moaned deep in my throat and he answered with a gasp. His hips were thrusting uncontrollably now, forcing his cock deep into my mouth. I loved it and pushed down, trying to take every bit of him inside me. I was lost now; there was nothing in my world except the feel of Joe... the smell of him... the slick, salty wetness of his skin.\n\n\"Mike...\" Joe cried out and froze as his first shot landed on my tongue.\n\nHis cream tasted like heaven, but I don't think I was really a good judge at that moment. All I knew was that after four long years, I was finally making love with the man I'd always wanted. He filled me up and yet I needed more. I don't know how many shots he gave me; you don't count when you're feeling the way I was. All I knew - all I could think about - was that I wanted to live in that moment forever.\n\nBut of course, that wasn't going to happen. After a few seconds, I could feel him softening in my mouth. I'm always extremely sensitive after I climax, so I'm hyper-aware of doing anything that might destroy the pleasure that had just gone before. I opened my mouth to reluctantly let Joe's cock free.\n\n\"No,\" he whispered fiercely.\n\nI raised my eyes and looked at him startled. He was propped on his elbow watching me. His face was flushed and his eyes glittered, but he shook his head when he saw the question in my eyes.\n\n\"Please... don't let go - not yet.\"\n\nSince this went right along with my fondest wishes, I had no trouble complying. Gently, I suckled his cock. In a way, this was almost more satisfying than the heated passion we'd just experienced. Cautiously, I licked at his tender skin, cleaning him while I searched his face for discomfort.\n\nThere wasn't any. Joe watched for a moment, then with a sigh, leaned back and closed his eyes. I wondered if he was actually drifting off to sleep. But a few moments later, I felt strong arms pulling me up until I was at face level with my new lover. He wrapped his arms around me and pulled me to him.\n\n\"That was... amazing,\" he said, drawing a long sigh of contentment. \"If I hadn't already loved you, that might've done the trick.\"\n\nAutomatically, he leaned down to where my head rested on his shoulder and searched out my mouth. I opened my lips under his and watched, trying to gauge his reaction, as he tasted his own cum.\n\nI broke the kiss and smiled. \"What do you think?\"\n\nHe considered the question for a moment and I could see he was running his tongue around the inside of his mouth. After a few seconds he grinned back at me.\n\n\"You know, I'm not completely innocent. I have tasted myself before.\"\n\nI pretended to be disappointed. \"Well, then, we're just going to have to think up another new experience for you tonight.\"\n\nHe raised an eyebrow. \"Hmmm, what did you have in mind?\"\n\n\"I thought,\" I said carefully, \"that maybe I'd let you make that decision.\"\n\n\"Okay.\" He sounded thoughtful, but not, thank God, as nervous as he'd been ten minutes ago. He looked my body up and down, as if studying it. \"I know what I'd like to do. I'm just not sure I'm really qualified to give the job the, uh... proper attention it deserves.\"\n\nI laughed lazily even as my heart pounded in anticipation. \"Don't worry about that. There're extra points for enthusiasm.\"\n\n\"Then maybe this might just turn out okay,\" he murmured before pressing his mouth to mine again.\n\nNow it was my turn to lie on my back. And this time, Joe didn't attempt to take everything in one big gulp. Instead, he seemed to think it would be best to drive me crazy with his slowness.\n\nIt worked.\n\nAt first, he tasted every inch of skin from my hairline to my toes. Except, for those oh so important inches that strained to get his attention at every opportunity. When he was done with that, he proceeded to really make me insane by demanding I turn over so he could finish off the job. The fact that in the meantime I was on the verge of exploding didn't seem to bother him a bit.\n\nIt wasn't until I was moaning like a five-dollar whore that he finally took pity on me and had me roll over again. And even then he didn't try to put his mouth on my favorite body part. It was a good thing I was past the point of speech, or he might have heard a few things that would have shocked even his jaded ears.\n\n\"Spread your legs,\" he finally commanded.\n\nThis seemed like a really good sign, so I decided to do him one better and not only spread my legs, but lifted them until my knees rested on my chest. I'm always nothing if not accommodating, and if Joe wanted a clear shot, I was sure as shit going to give it to him.\n\nHe raised his eyebrows and the bastard had the nerve to laugh. \"Jesus, Mike! I didn't know you were this easy.\"\n\nI just growled at him and I think he realized that his life was going to be in grave danger if he didn't make his move. The next thing I knew, I felt a hand on the base of my shaft and a hot, wet mouth enveloping the rest of it. I moaned and it was all I could do to hold still and not thrust hard enough to poke a hole through the back of his head.\n\n\"Mmmmm,\" he hummed sending quakes of lust through my body and then he popped his mouth off of me and grinned. \"Now, I think I'm getting the hang of this.\" Then he slurped at my corona with his tongue and watched as I writhed.\n\nI'd like to tell you that Joe was absolutely perfect in everything he did, but... well, this is real life we're talking about, and things just don't go that way the first time for anything - especially sex. He couldn't get more than the first few inches of my dick into his mouth without choking, and I know he scraped me with his teeth more than once. But none of that mattered. It was still the best goddamned blowjob I'd ever had, bar none. Because I found out that night that skill has nothing on need, and I needed Joe more than I had ever needed anything else in my life.\n\nAt one point, I managed to prop myself up on my elbows and we made eye contact. He was serious now, his whole being concentrating on giving me the pleasure that was as important to him as his own. I understood that. It was exactly the same feeling I'd had just a brief time before. As I felt a familiar warm wave begin to rush out from my groin, and my balls tightened and my cock swelled, I groaned out loud and struggled to keep watching, to see his face as the first blast hit the back of his tongue. His eyes widened momentarily, and then darkened with an emotion that sent a warmth to my heart that had nothing to do with my orgasm, even as stupendous as that was. And then I was lost, carried away in a moment of lust and love and the thought that this was only the beginning.\n\nJoe had collapsed. His head rested on my hip, his mouth still inches from my now soft, but sated cock. I wanted to pull him up to me, to feel his lips on mine, but my body was still in that state of bliss that wouldn't allow it to even think of moving, wrapped in a wave of pleasure that seemed to vibrate and envelop the entire room.\n\nWe lay there silent for a few moments. I couldn't tell you whether it was five minutes or an hour, but eventually, I felt him stir. I looked down to see his eyes were open and watching me. He smiled.\n\n\"Hi,\" I said in a thick voice I barely recognized. \"How ya doing?\"\n\nHe stretched lazily and then crawled up carefully until he was lying full out on top of me. He kissed me and now it was my turn to taste my seed on his tongue. It was an experience I wanted to experience again and again for the rest of my life.\n\n\"I think the question should be,\" he said when he finally broke the kiss, \"how are you doing?\"\n\n\"I love you,\" I said simply.\n\n\"Then I was... okay?\"\n",
        "I thought he must be joking, then I saw the real concern in his eyes.\n\n\"Jesus, Joe,\" I said, as I stroked his hair. \"If it'd been any better, you would've had to send for the paramedics to revive me.\"\n\nHe smiled and I saw the relief flicker over his face, though he tried to hide it by reaching down and grabbing the covers and pulling them over us. He settled back down in my arms and sighed.\n\nI nuzzled his neck and took a deep breath, taking in the pungent aroma of sweat and sex that emanated from Joe.  And underneath it all was the aroma of the man I'd been dreaming of.  Essence of Joe, if I could figure out a way to bottle it, I'd make a fortune.\n\n\"I thought when you made me cum, that it was the ultimate experience of my life,\" he murmured. \"But watching you as you came, seeing what I was doing to you...\" He paused, then looked into my eyes. \"That was something else again. I never knew it would be this good.\"\n\nI smiled. \"What? Gay sex?\"\n\nJoe shook his head slowly. \"No. Sex with the person you truly love.\"\n\nHe sighed again, then yawned and closed his eyes. I watched as his breathing slowed and his muscles relaxed. And instead of moving away, as so many lovers of mine had done in the past when sleep had claimed them and they didn't need to pretend any more that they cared, he moved closer and draped his arm around my back.\n\nThis had started out as such a shitty day. Hell, the whole year had been one long string of calamities. I'd fought back, though - harder than I'd known I could. And now, here lay Joe - my Joe. It was hard for me to take in; hard to even believe it was real. But he was real and he was here. I vowed to myself that I'd do whatever it took to keep it that way, forever.\n\nTo be continued...\n\nAuthor's note:  Thanks again to Marc for his extraordinary efforts to edit my very rough copy.  Also a big kiss to Keith Mystery who reminded me that even romantic sex has its funny side.  And a big thank you to all of you who continue to write me and let me know that you care about this story. \n\nJayne "
    ],
    "authorname": "jfinn",
    "tags": [
        "breath touch",
        "moan back",
        "head fine",
        "mine wait",
        "knew smiled",
        "jesus joe",
        "life beautiful",
        "joe slid",
        "bunch people",
        "stopped realized"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-human-condition-ch-10"
}