{
    "title": "April's Fool Pt. 04",
    "pages": [
        "Looking at the mother of my children I felt a sense of warmth and contentment, even even as I wanted to curl up and die from sadness and loss. It hadn't always been easy and there had been sorrow and heartache but there had been way more good times than bad. As I watched the casket being lowered down I thought about all the things that had brought us here. In the face of death I took time to reflect on my life and the changes that came from talking to that special woman on April Fools Day so many years ago. I thought about our fight through her drinking, her recovery, her adultery, and her cancer. These and so many things flashed through my mind. I was almost overwhelmed.\n\n---------------------------\n\nCancer.\n\nThe word is relatively simple. Two syllables. Easy definition. The disease caused by an uncontrolled division of abnormal cells in a part of the body.\n\nThe feelings that word can invoke, however, are anything but simple. \n\nI stood there holding my sobbing wife. Even when she was being a bitch April had a certain attitude about her that made it seem like she could conquer anything. This broken woman I was holding had none of that spark.\n\n\"What am I gonna do Bill?\" she sobbed.\n\n\"First you're going to remember that we're a team, so it is what are WE gonna do? Second you are gonna calm down and explain how you went from fertility testing to cancer victim in the span of one day.\" I replied.\n\nShe looked at me through her tear stained eyes and wrapped me in the tightest embrace. \n\n\"The doctors wanted to do an ultrasound as part of my fertility checkup. They found a bunch of growths in my uterus. I am scheduled for a MRI next friday to get more information but they told me with the amount of growths that I should prepare myself for the worst\" she sobbed.\n\nI held her and stroked her hair while whispering that it would all be okay. I felt another pair of arms wrap around me and I knew that Beth was in this with us. April started to calm down and the three of us went and sat at the kitchen table.\n\n\"Okay, here is what we do. First let's not push the panic button. We are going to get you in for more tests as soon as possible so we know exactly what we are dealing with. Second, remember that you are young and healthy. And third, we have money. As crude as it is to say we can afford the very best health care and treatments for you. We caught this early and we can beat this\" I said as I tightened my embrace. The three of us held there for a few moments before the sniffling subsided and we were all able to calm down. I felt doubts creeping up and I squashed them as hard as I could. We were going to win this fight!\n\nOver the next two weeks we went to over twelve doctor's appointments. As far as I understood April had some decent sized tumors in her uterus that would make childbirth impossible. While there were smaller ones on her ovaries, the fertility doctor seemed to think that her eggs would be fine. After a long determination, we decided to have April take a couple rounds of fertility drugs to get her to produce eggs we could freeze and hopefully work something someday down the road. \n\nA week before her hysterectomy April had swung by my work to pick me up for lunch. She was looking every inch the hottie that she was and I admit to taking pride in my beautiful wife. As she was walking up to me I felt someone standing at my back.\n\n\"Nice to see your wife again, cuck ... I mean Chuckles.\" I heard Brent say in a low voice.\n\n\"Excuse me?\" I asked. I had no idea what he was talking about.\n\n\"Benny found out your wife likes to sample other platters at your company mixers. I gotta get an invite to one of those things if she is on the menu.\" he said with a smirk.\n\nBefore I could twist to pop him one, April had sauntered over to me and snaked her arm thru mine.\n\n\"Ready to go, big boy?\" she asked, oblivious to the tension.\n\nBrent reached out his hand.\n\n\"Nice to see you again, April. I see you have climbed the corporate ladder these last couple years. It must be nice to have friends in high places.\" \n\n\"Yes, it is,\" she responded lightly. \"It is so tough to be upwardly mobile when you are cuffed to handrail with your pants down, metaphorically speaking. Thankfully I have never had that problem.\" she added with a light laugh.\n\nBrent turned about three shades of red. \n\n\"You're funny, that's where Bill here must get his sense of humor. Lately all the sales people have taken to calling him cuck ... I mean Chuckles.\" he responded.\n\nApril looked at me quizzically and her arm tightened around mine. I could tell she didn't get the joke but she must have seen that I was about ready to do something rash. She gave me a very warm kiss and smiled.\n\n\"Feed me big boy, your woman is hungry.\" she said.\n\nBrent reached into his pocket and pulled out a 20-dollar bill. He grabbed my other hand and slapped it into my palm.\n\n\"Buy your wife a couple scotches on me. I've heard how much that loosens her up.\" he smirked then turned quickly and walked away before I could say anything.\n\nAs I went to chase after him April grabbed me and held me back.\n\n\"Bill can we please just go? Please?\" she begged. She looked like she was ready to cry.\n\nI looked around and all my co workers were studiously avoiding looking at either of us. I gave April a soft kiss and wrapped my arm around her waist.\n\n\"Yeah baby let's get out of here.\" I responded.\n\n======\n\n\"You need to quit,\" she said as we were driving to lunch. \"Today is going to be a good day for you.\"\n\n\"I'm not quitting babe, if I quit then those asshats win. I'm not gonna let them make remarks about you though. Brent is getting a beat down. Where are we going to eat?\" I asked trying to change the subject.\n\n\"I made reservations at Le Chic. We are meeting Daddy and Barb. There are a few things we need to discuss,\" she replied.\n\nThat sounded ominous.\n\nShe turned and looked at me.\n\n\"Bill, how can I make this up to you? I had no idea that your workplace would find out about my stupidity,\" she said with tears in her eyes.\n\n\"April, what did you think would happen? The way we hooked up was due to you knowing Brent from work. It's not just my work, but all of your vendors know. This is just another thing we have to deal with,\" I said with some asperity.\n\nAs much as I was over her infidelity, it still would get me angry at times. Not enough to yell and scream and not nearly enough to leave her but enough for me to be cross for a bit. I didn't feel guilty at all for snapping at her during those times. Actions have consequences. I know she was drunk and wouldn't have done it had she been sober and I truly felt I HAD forgiven her, it was just tough to forget sometimes. I took a deep breath.\n\n\"April baby, I love you and I want to be with you forever. Continuing to talk about this is just going to open old wounds. I promise if it gets bad enough I will contact our therapist again okay? Now what am I walking into with this lunch?\" I asked, trying to change the subject. I knew something was up because she looked down at her hands really quick.\n\n\"Daddy is going to ask you to join the board of directors.\" she said quickly. \"Don't turn it down without hearing what he has to say, please! The board needs new blood, I was able to start turning some stuff around and now that I'll be out with this cancer stuff we need you to keep it going. Plus, you have 35 percent of the shares of the company and you can't just leave them sit there doing nothing.\"\n\n\"They weren't doing nothing, I let you vote them by proxy so you could run roughshod over the old farts.\" I replied with a small grin. \n\n\"And it worked! We are on the cusp of some decent changes that will bring us into the 21st century! We just need you to push them through. We'd also like to see you come up with some of your own ideas\" she said. It was fun watching her get excited about the changes being made at her workplace. Lately she had been equal parts distressed and despondent not only about her cancer but also about what it meant for us to have a child. For that reason alone, I would listen.\n\nWe parked and walked over to Le Chic, a new French restaurant in Midtown. It had a nice ambiance and I hoped it would make a go. Contrary to what everyone sees as a pock mark of a city, Detroit was making a comeback. There were pockets of middle to high class areas that were expanding. In a few more years I figured things would be back to more stable footing and I was excited to see the changes.\n\nSurprisingly I saw Barb, April's common law step mother, first. I could never say no to her and I think Steve and April knew it, they were bringing out the big guns. Steve came and sat down just as we were getting ready to order.\n\n\"I can tell by the look on her face that April has already spilled the beans, so tell me what you think.\" Steve started with no preamble. We had actually gotten along really well since I came back from Belize. I wouldn't consider him a friend quite yet but I could sit down and have a nice conversation with him.\n\n\"I think you guys are crazy, I'm an IT guy and you want me making multi-million dollar decisions based solely on the fact that I'm married to your daughter. I don't think that the other board members will go for it. Even if they did allow me to sit in, why would they take anything I say seriously? All of us would know that I'd be in way over my head. I couldn't command the respect needed\" I replied.\n\n\"Good points, now let me address them,\" Steve said. \"As for you being an IT guy that works into our plan well. We hired an external review of our business and inventory control, it turns out that processing was our number one problem. We paid almost a hundred thousand dollars for them to go through Livingstone Steel and let us know our strengths and weaknesses. That type of cash outlay got the attention of the board and everyone is now happy to make changes. The problem is that no one knows the new technology, this is where you come in. Your tech experience will give you credibility with the Board of Directors. About the nepotism point, get over it. You really think that all these high-ranking board members are there because they earned it? Not a chance. They got into their position and learned on the job. As for dealing with the non-technical issues before the Board I suggest you talk to them like you talked to me the first time I offered you a job. Powerful, blunt, and with more than a touch of asshole. I know you have it in you and it will serve you well. Plus, if you say yes, April will allow you to vote her shares by proxy so you will be able to do whatever you need to anyway.\" He took a drink of his coffee.\n\n\"Needless to say, you will have both April and I to bounce ideas and questions off of.\" he continued.\n\nI thought about it. I had some fears and doubts but nothing I couldn't handle. The more I thought about it the more fun I thought it would be. I was pretty much stuck at my current job and this was a chance to see if I could play with the big dogs. This was one of the main reasons I truly loved my wife. Before we got married I would have been finding all sorts of reasons to avoid even thinking about the decision. Now I was pretty sure I was at least willing to give it a go. There were a few ideas already percolating in my head. \n\n\"How much power will I have?\" I asked. \n\n\"As much as you need.\" was his response. \"With you voting April's shares by proxy you will have 70% control. Keep in mind if you start pissing off Board members they can make things tough so I would urge you to tread carefully, but ultimately you are the the boss. If you need to hire somebody, you hire them, same goes for firing people. It looks like you already have some ideas so let's hear them.\"\n\nWe spent the next hour discussing the review, when lunch was over I had a few really good ideas and was excited to get started. As we went to leave Barb gave me a hug and looked at me intently.\n\n\"Remember what April did when she got into this job. You have to be stronger. Don't forget what is important. You guys should sell the company before you get back to that state. Nothing is worth losing family.\" she told me.\n\nAs she turned to leave she almost stumbled over Steve. He was on one knee and had an open ring box in his hand.\n\n\"Barbara Lewis, will you do me the honor of becoming my wife?\" he said hesitantly.\n\nI have mentioned before that Barb was a big, solid woman. Not fat or ugly, she was just solid. That is why it was so odd to hear a girlish squeal come from her. Everyone took that as a yes.\n\nRiding back to the office my mind was going a hundred miles an hour with ideas. I was thinking so hard I didn't notice anything April was doing until she cleared her throat loudly. Looking over I about got in an accident. She had unbuttoned her blouse down low enough that I could see she was wearing a lacy white bra. There was a very generous amount of cleavage showing and she was running her hands over her tits. \n\n\"Pull into the next hotel. I need to fuck the big boss man. Hopefully if I do a good job I will get that promotion I am looking for.\" she said breathily.\n\nIt took me a moment to figure out what was going on but I got into it.\n\n\"I have to tell you that the interview process for the promotion is going to be a long and hard. You are going to have to show that you can give your all and take any load handed to you with no complaint.\" I told her with a smarmy grin.\n\n\"I think I am up for the job, my dick taking, I mean, dictation skills are above average and I am not afraid to get right in there and get my hands dirty if that is what it takes\" she said with a smile.\n\nI pulled into the next hotel and paid for a room. Within minutes we were naked and going at it. It was a nice, fun fuck. Ater we were both spent April cuddled into me and looked up with what seemed to be unshed tears.\n\n\"I want to tell you something and I want you to listen the whole way through.\" she took a long pause. \"Throughout this relationship you have been the better person,\" she started.\n\nI went to interrupt but she put her hand over my mouth.\n\n\"Let me finish, as I was saying, you have been the better person. I want you to know that starting now and especially after my surgery and chemo I plan to put all my effort into being someone worthy of you. We have frozen eggs and hopefully they will someday become our children, I will do everything I can to be the best wife and mother there ever was. I also want to beg you not to let the company overtake your life like it did mine. If the whole thing crashes and burns but we are still together I am calling it a win.\"\n\nI gave her a long kiss and hugged her tighter to me. \n\n\"Baby we are gonna be fine. You are gonna beat the cancer and we are going to find a surrogate for our children. Then you are going to be the world's best soccer mom slash executive while I struggle to figure things out. We will have a big house with a large yard for the kids to play in and eventually be those old people who are still fucking like rabbits when they are in their 80's\" I told her.\n\nShe smiled.\n\n\"That is a wonderful picture. Let's do that.\" \n\n-----\n\nThey fired me.\n\nI was told that if I was looking for other work then I couldn't be trusted around the sensitive information, like we were dealing in state secrets. I was going to be mad until I realized I would have a week with my wife and Beth to get things around for her surgery. Frankly we hadn't needed the money I brought in ever since we got married. But I had my degree and I mostly liked my job. Also, I didn't feel right being a kept man. We spent the week touring the state of Michigan. We went to Frederik Meijer Gardens in Grand Rapids for their butterfly display. We hit the Sleeping Bear Dunes on our way to Mackinac Island. Basically, we spent the week just being together, the three of us. It didn't happen on the trip but there was a definite undercurrent of sexual tension between us all. Instead of worrying and obsessing about it like I would normally do, I laid back and tried to enjoy it. It felt exactly like that time period when you are dating and you want things to go farther but you don't want to push. The women didn't make it any easier in their thin sundresses and the physical proximity to each other. We got back the day before April's surgery and got all of her stuff around. I came down the stairs of our apartment and saw the two of them in an embrace with tears rolling down their faces.\n\n\"What's up ladies?\" I asked, cautiously.\n\n\"Sit Bill,\" Beth commanded me. \"And you need to listen.\"\n\nApril walked over and sat on one of my knees. Beth came and sat on the other.\n\n\"Bill, regardless of what happens tomorrow Beth wants to be the surrogate for our children. We can thaw some of my eggs and fertilize them in vitro and have her carry them. If I survive we will work out custody arrangements. I know we both want Beth to be part of our lives and our children's lives. If the worst happens, I would hope that you would accept everything Beth has to offer as a wife, mother, and lover. If I survive we need to talk about the three of us and our future. Right now you two need to talk and I need to get some rest. Goodnight.\" She kissed my forehead and walked upstairs.\n\nBeth looked at me with a half grin.\n\n\"So, this is awkward eh?\" she said with a nervous giggle.\n\nI smiled.\n\n\"It doesn't need to be. Let's grab some pops and head out to the patio.\" I replied.\n\nWe cracked open our pops and sat in companionable silence for a little bit before talking. \n\n\"Bill, I love you and April. I will also admit to being IN love with the two of you. I know April has told you about our history. Frankly part of the reason that we stopped being lovers was because April was so self-centered. She was a good and generous person but everything was filtered through the lens of how it affected April. Since she's been with you she's chilled out a lot. You have the ability to support her without being a doormat. Did you know you were the first boyfriend who dumped her? And the way you handled her cheating. She knows you love her but she also has told me many times that she knows if she screws up again you are gone. I want in on that. Up until she went to that stupid mixer April and I talked about trying a polyamorous relationship with the three of us. Mostly it was in jest but I got to thinking that it would be wonderful. We haven't even breathed a word of it until this last week because you guys had to work on your relationship and then the cancer stuff came up. Regardless of what happens I WANT to be the surrogate for you guys. I will claw the eyes out of anyone who tries to take that away. So, there we go. What are you thinking?\"\n\nI rocked back a bit. Hearing Beth say she loved me hit me harder than I thought it would. I didn't realize it until just that moment but I really did love her. The love I had with April was like fire and ice, being with her was extreme and in your face and wonderful. With Beth that love was solid, rock steady, unyielding. I loved two women. Normally this would be a huge problem but it sounds like we had options. I wanted to concentrate on one thing at a time though.\n\n\"I love you too Beth, I don't know where we go from here but the thought of you not being in our lives is unacceptable to me. Right now, we need to focus on April and getting her through this surgery and chemo. After that the three of us will sit down and figure out what we need to do. Let's go snuggle up to our wife and make sure she is set.\" I replied.\n\nBeth stood up and gave me a big hug. I leaned down a bit and kissed the top of her head.\n\n\"Not even a kiss until the three of us are on the same page, okay? You have to help me out here.\" I murmured with a smile.\n\nWe went upstairs and joined April in our bed. The two of us snuggled into her sleeping form and we woke up in a tangle of limbs and hair. The smile on April's face upon waking up with the two of us was radiant.",
        "\"I love you both so much,\" she said as she kissed me hard and gave Beth a peck on the lips.\n\nThis should be interesting.\n\n===========================\n\nThe surgery went off without a hitch. Hysterectomies are the second most commonly performed surgery on women so I shouldn't have been so worried. However, this being the first time someone I loved was under the knife, I was a mess. When it was all said and done the growths on her uterus were malignant. Some had moved to her lymph nodes but they were small enough that the chemotherapy should take care of them. She took a week to recover from the surgery then went right into chemo treatments. Thank goodness Beth was there because it was at this time that I started at Livingstone.\n\nTo say that the board was unhappy about my arrival would be an understatement. I decided that dealing with these guys was going to be different than dealing with my coworkers at my old job. That is why I changed my approach drastically. Steve had told me to talk to them like I had talked to him before I left for Belize so I decided to take his advice. The day I went into the office I was sweating bullets and almost shaking. I had a confidence now that I didn't have years ago. It still didn't mean this was easy for me. I could do this.\n\nI think it helped that my initial introduction to the board was happening at the same time April was starting her chemo. I really was worried about my wife so I didn't have time to get myself into a doubt spiral about the board. Besides, I had already decided that April and Beth were the most important things in my life and if the company were to burn I would be okay. I took a deep breath and addressed the 12 members sitting along the sides of the conference table. All white males over 50 years old.\n\n\"Hello, let's cut to the chase. I am Bill Thompson, I am the new CEO. I got this position because I am Steve's son in law and April's husband. That being said my background in computer technology and business management are exceedingly relevant because an independent firm has confirmed something that I have thought for the last three years. Livingstone Steel is about to become a dinosaur. Too many things have been left alone because that is just the way they have always been done. We need to update and upgrade quickly while still hanging our hat on the quality and service that we are known for. I am going to ask that each of you join me in making this happen. I understand that some of you are unhappy with the way things have turned out. I don't care. We don't have to like each other but we do have to work together. Is there anyone here who doesn't think they can work with me? If so please let me know and we have worked out a very generous retirement package.\" I took a second to see what the response would be.\n\nOne of the older guys cleared his throat and stood up.\n\n\"I have been with Livingstone Steel for forty years. I started as a clerk and worked my way through college and onto this Board. Frankly I don't care for the fact that we had no choice on accepting Steve's daughter as our next CEO but at least she had some training and a relevant pedigree. As far as I can tell all you have is a technology degree from a second rate school and a lot of attitude. I don't care to have to train another person in how we operate. Our profits have been steady for the past 10 years. I will be taking your retirement package. Steve, I have always had respect for you but I really feel that your decision here is a mistake and I hope you realize it before this company goes down the drain.\"\n\nSo much for Jack Winters. In a way, it was perfect because he was our head of Process Management. The technology upgrades I was introducing would have been going through his department. I could hand pick his successor. I already had someone in mind. I looked at him with a genuine respect.\n\n\"Jack, I want to say thank you for your service to Livingstone. I completely understand and respect your decision and the way you handled it professionally. I will expect your resignation on my desk by the end of the day and will organize a retirement party for Friday.\" \n\nI think he thought I would stutter or try to convince him to stay and see things my way. No such luck. It was time to make mine and April's stamp on the company and bring it forward. To his credit Steve kept his mouth shut and let me go on with our business. I waited for anyone else to object and, seeing no takers, proceeded with my company vision.\n\nWithin six months we were ready to go live with a new inventory management system. The old way had an order coming in to our main office, being reviewed, then being passed on to our purchasing department, which would release the order to our warehouse who would then process the order, wait for shipment, the schedule delivery. Our new system generated multiple reports as soon as an order was placed allowing for simultaneous reviews. This had the net effect of shortening our order response time from up to three weeks down to four or five days. It was also more accurate as there was less opportunity for things to fall through the cracks. I was nervous as this was my baby and if it went to hell I would be losing serious face with the board.\n\nThankfully I had the support of my new VP of technology. Introducing my old boss, to the board members was actually entertaining. Having a VP that was female was tough enough to the old guard. Having one that was a lesbian almost put some of them in the hospital. Jamie was the consummate professional. She didn't talk about her love life but she also didn't hide it. Her conversation was as open as any straight person would be about their mate. She was a ball buster when it came to deadlines and adoption policies. Between her and poaching Ralph and Bruce I got the cream of the crop from my old job. Thankfully the installation went off without any major glitches. After a month of the new system link being up and ready, I was ready to call it a success.\n\n================\n\nMy personal life was faring even better. Kind of. April did a round of chemo and was pronounced cancer free. We waited for a couple months then went ahead and thawed some of her eggs and artificially inseminated some of them. The long and short of it was Beth was carrying our twins two months after April was declared clean. \n\nNow for the question you have probably been wondering. Yes, April, Beth, and I ended up in bed together. \n\nIt was after she came back from a checkup and found that two of the embryos were healthy. There was a third that didn't make it so we had some sadness but also some great happiness. There was no alcohol involved since none of us drank but there was a tension in the air. I thought for sure it would be April who initiated the contact but to my surprise it was Beth. We were sitting in the living room of our house talking when Beth suddenly stood up and took off her shirt. I sat there stunned as she slipped out of her jeans and stood there in her bra and panties. \n\n\"It's time guys, we either make this work or I move on but I can't stand this in between stage.\" she said as her eyes filled up with tears.\n\nI looked over at my wife who was watching me intently. Did I want this? I stood and walked over to Beth and gave her a deep kiss. I stroked her back and unfastened her bra. As it dropped to the floor I followed it and took one of those beautiful breasts in my mouth. I ran my tongue over her nipple a couple times then raised my head and looked at my wife.\n\n\"Are you going to let her other one be lonely?\" I asked with a smile.\n\nApril smiled and walked over to her friend and soon to be lover. She gave a kiss then started sucking on the other tit. Beth's knees shook as an orgasm overtook her. As one both April and I slid a hand down to her mound and started rubbing her through her panties. She shook again and moaned. \n\nApril gently took her hand and led her towards our bedroom. I grabbed her other hand and followed. I could give a blow by blow description of our night but it wouldn't do it justice. The three of us truly made love together and I am going to leave it at that.\n\nNow what I CAN tell you is that having two beautiful, intelligent women in your life is not the bed of roses it would seem to be. After two weeks of honeymoon type sex and love the reality started kicking in. Both of them started to snipe at each other and me. I was treated to crying jags from my wife and my lover. Beth was hurt when she found April bent over the bed with me going to town on her. Later that night Beth put on the full court press and damn near wiped me out before I could go to even give April a kiss. It took me about a month before I realized that they were using my dick as some indicator as to who was the dominant female. I gave them another month before I finally had enough. The kicker was when Beth came out of the bathroom dripping lube out of her ass. She has never been into anal and April had been insisting that we go backdoor exclusively for the past two days in front of her. When Beth started to talk about me taking her anally, I snapped.\n\nI pulled on a robe and marched my half naked ass to the living room.\n\n\"Get your asses out here right now!\" I shouted. I try to never raise my voice but I was pissed.\n\nThey came out in robes and were glaring at me and at each other.\n\n\"This has to stop. I love both of you and you both love each other but you guys aren't acting like it right now. I didn't sign on for this. If you guys can't get it figured out then the three of us are going to end up miserable. So, I don't know what you guys have to do but get it figured out. NOW!\" \n\nIn some ways I was very successful with my speech. They both decided to agree on something. Unfortunately, that something was that I was an asshole. Halfway through I realized that they were on the same page finally and I actually calmed down. If my being an asshole meant that the two women I loved would stop fighting, it was worth it.\n\nWhen they both wound down from pointing out my faults and my lack of understanding, the air had been cleared. I went and got my American Express Black card and tossed it to them. \n\n\"Take this and head over to Paris, or London, or any place romantic you want. I want the two of you to go and have a \"babymoon\". Eat expensive food, buy overpriced clothes and fuck each other senseless. Come back in love and let's get back on track, okay?\" I asked quietly.\n\nThey both looked at me like I had grown another head. They gave each other a look and then they both gave me a nice kiss. I think I heard them giggle as they went into the den to plan their vacation. I really don't understand women.\n\nThe vacation seemed to be exactly what was needed. They sent me naughty pictures of them in their hotel room and funny pictures of the statues of Venice and Rome. Both of my lovers had a twisted sense of humor so some of the pictures with the naked sculptures were pretty hilarious. They came back in love with each other and in love with me. Things were right for a good long time. \n\nOur twins were delivered healthy and wonderful, Eric James Thompson and Arthur Steven Thompson were going to be the best and brightest young men that the world was ever going to see, I was sure of it. I had given Beth an exact replica of April's ring and she had legally changed her last name to Thompson. I don't think Beth had ever been as beautiful to me as when she was holding our boys minutes after having given birth. April had a haunted look in her eye for second but holding our baby washed it all away. I couldn't possibly have loved anyone any more than I loved my wives and children at that point.\n\n=================================\n\nI wish I could say that every idea I had at work was a home run. Rather it turned into me hitting a lot of singles. I made a push to hire veterans which went really well. My push to hire ex-cons? Not so much. Although the guys that did work out are some of the most loyal and hardest workers you will find. Unfortunately, they were few and far between. I dismantled our shipping branch and subcontracted it out to Allied Logistics for a flat fee. There was quite a bit of pushback since it cost us over fifty jobs. I felt bad but the savings were substantial enough to warrant it. I offered those who had twenty-five or more years of service a very healthy retirement package and for the rest I sold them the trucks at our cost so they could become independent operators for cheap if they wanted. I still looked like the new heartless face of the company which killed me but there was not much I could do about it. Mostly I let the guys under me do their thing. When someone had to look like the bad guy, I was willing to step in. When someone was looking like a good guy, I kept to the background. It just seemed easier to have people focus their dislike on one person. There was one account I did take a personal interest in though.\n\nCorrugated Solutions. Owned by Jackson Stone whose son Xavier was poised to take over the company. Xavier was the one who slept with my wife. When their contract was up they came to negotiate again. It was a very interesting conversation.\n\n\"Jackson, I have to tell you I have no real interest in selling to you again.\" I told him after exchanging pleasantries. \"You have been given preferential pricing for the last 20 years and we make 30% less profit from your account than any others. Steel is a high commodity right now and we can make more money selling to others.\"\n\nJackson looked like someone had punched him in the gut. His son had the audacity to smirk at me. \n\n\"Corrugated has been a customer since before Steve was running the place. We've earned that treatment a hundred times over through our loyalty to you as a customer. How can you say you want to end it now?\" he asked, the hurt and worry visible on his face. \n\n\"Jackson, your son took advantage of my wife when she was drunk. If someone did that to you would you want to do business with them? I think it shows the integrity of a man when he does something like that and I don't want to deal with a low life scum personally or professionally.\"\n\nXavier must have thought it was time to take the lead in these negotiations as he decided to speak up with that smirk still plastered on his face.\n\n\"So, because your wife is an easy lay when she's drunk, you are going to put 165 people out of a job? What a pussy. Maybe that is why she goes looking for strange,\" the dickhead said.\n\nThe look on Jackson's face would have been comical if I wasn't working on trying to keep my temper in check.\n\n\"Jackson, your preferential pricing is done. Out of respect for your loyalty I will keep selling to you at our returning customer discount of 5 percent, provided that Xavier is not affiliated with the company in any way. I don't want him on the loading docks, I don't even want him working for the cleaning service that empties your trash cans. You have until you walk out the door to make a decision.\" I said.\n\nJackson looked at his son and sighed. He reached across the table and offered his hand. \n\n\"Done, I guess my boy needs to find out about consequences. I would have thought the two beatings would have gotten through to him to keep his mouth shut at least.\" he said, heavily.\n\nXavier looked stunned.\n\n\"Son, part of business is picking your fights. You went and picked the wrong guy to go up against. Learn from it and move on. I would suggest you start beefing up your resume, that new place you bought ain't gonna pay for itself.\"\n\nXavier got up and wordlessly walk away from the table. His father watched him with a look of sadness and regret.\n\n\"I heard you had two boys, congratulations. Hopefully you will teach them the lesson that actions have consequences better than I taught mine. I am going to go have some drinks at the bar, alone. Have a good night.\" He said heavily.\n\nI thought I would have felt a lot better about this one. Not that I would have changed anything. As I finished my work I wondered what happened to the scared guy that couldn't talk to a pretty girl unless he got mad. I guess he grew up. Was I a better person? All I could do was try to be.\n\n===================================\n\nI loved being a daddy. I could sit and watch my boys just lay in their crib for hours. It was a couple weeks before I changed my first diaper. By then the girls were old pros at it and had a good laugh at my fumbling attempts. April turned out to be a pro. She had taken hormone therapy to be able to breastfeed along with Beth. Maybe I am weird but walking into our nursery and seeing those two beautiful women with their shirts open and a baby attached to a breast was one of the most erotic things I have ever seen. Talk about happiness.\n\nBeth was cleared for sexy fun time six weeks after giving birth. I knew something was up when I came home and found them wearing matching lingerie and high heels. They led me to the living room and sat me down on our couch then they proceeded to rub up against me with those beautiful bodies. Beth still had some baby weight on her and her stretch marks hadn't faded but how could I complain? She was still beautiful and her body had gotten that way from having my children. Somehow, she was even sexier than before.\n\nMy two seductresses pulled away and and looked at me intently. I had learned the fine art of keeping my mouth shut when there was tension in the air. Finally, Beth broke the silence. \n\n\"Bill, I love being a mom. I know that Eric and Arthur are always going to be our children and I would like to have another. I have always wanted a big family and if we do it now they will be close enough in age to be friends. Can we make another baby?\" \n\nI rocked back a bit. I pretended to think about it. Then I smiled. \n\n\"If we are going to do this the natural way, then we are going to have to make sure April doesn't feel neglected. I see a lot of pussy licking in her future.\" I said with a grin.\n\nBoth girls jumped me and started tearing my clothes off. Looking back, it was entirely possible that Beth got pregnant on the couch that night. About nine months later Rachel May and Sarah Louise Thompson came into the world. It was a world about to crash.\n\n======================================\n\nBeth and April were the supermom team. For the next year life was wonderful. My work was fulfilling. I had two sex kittens who I was totally in love with raising the best children a man could ask for. Then it fell apart.\n\nCancer.\n\nApril had been getting checkups every six months like clockwork and every time she was declared cancer free. That is why it was so strange when we were playing around and I felt something like a pebble at the base of her breast. I stopped sucking on her nipple long enough to give it a feel and there was definitely a hard lump. Beth was giving me a great blowjob at the time and was surprised when I repositioned to feel it some more. There it was, a hard, little mass that was staying right in place at the base of her breast. I took April's hand and put it where I was feeling.\n\n\"Oh NO!\" was all she said before running into the bathroom to check herself in the mirror, quickly followed by Beth and me.\n\nCancer.\n\nIt moved quick. Apparently, it was very aggressive. It was easy to kill but it moved fast. It spread to her lymph nodes. Then it went to her liver. Eventually it spread throughout her body and there was nothing we could do. \n\nWe brought her home.\n\nTo sit and watch someone you love slowly wither away is one of the most frustrating and soul crushing experiences. When April would rally, all she wanted to do was talk to and hold the kids. We explained that Momma April was not feeling well and needed to lie down a lot. I am not sure how much they understood but I know that the boys especially were on their best behavior whenever she was around. The boys would draw pictures and every one of them was placed in April's room. She demanded that the room be well lit and open. She said she didn't want it looking like a morgue. After a few weeks, she was too weak to sleep in our bed and we had to move her to her hospital bed. That was when all three of us really understood that she was going to leave. We had round the clock nursing care and toward the end she was on such strong medication for pain, she had a tough time staying awake. On April 1st, Beth and I brought the kids into see her in the morning and we knew. She was alert enough to give hugs and kisses to the boys. She held each of the girls and whispered to them. Then she asked our nanny to take the kids so she could talk to us privately. Eric knew something was wrong and didn't want to leave. Arthur tried to stand in the doorway and watch us. When we finally promised them they could see her again when she felt better they reluctantly left. She looked at Beth and I with a wan smile.",
        "\"It's time, I love you both so much and am so happy that be were able to be friends and lovers. I tried really hard to be a better person. I think I did okay. Please don't let the kids forget me. Being a mom was the greatest thing that ever happened to me. The second greatest was being loved by you two. I don't know what is going to happen after I move on, but if I can, I plan to stick around and watch you all. So make sure you put on an extra special show every once in a while.\" \n\nShe tried to chuckle and it turned into a obviously painful cough. I found out later that she had stopped taking her pain medication so she could be lucid. I wanted to say something but my chest was tight and my eyes were full of tears. All I could get out was a giant sob.\n\n\"You two better live to a ripe old age. Those kids are gonna be great. Just remember the good times we had, I know I made mistakes but I loved you both so much.\" she started to wind down.\n\nBeth and I sat on either side of the bed and cried and told her how much we loved her. I don't remember any exact words but the feeling must have gone through because April smiled and for that moment she looked just as beautiful as the day I bought her that first glass of scotch. When she closed her eyes the smile stayed. A few minutes later she was gone.\n\n======================================================\n\nWhich brings us to today. The casket is lowered and the well wishers are gone. I know I should be more ... something ... but I just can't bring myself to feel anything except loss and sadness. I was looking out the window across the field that separated our house from the main ranch that Steve and Barb lived in. We had built a new house on the edge of the property when we decided to have the boys. I felt a pair of arms circle me and a pair of breasts push into my back. Beth nuzzled her head into my back and I could feel her sobbing. I turned around and just held her as we both shared our pain and misery and love for our wife. When we calmed down she took my hand and wordlessly led me into our bedroom. We made love and as we both hit our climaxes we knew that somehow April was watching and she was happy. We would be okay.\n\n====================================================\n\nEpilogue:\n\nThe problem with being old is that you're never the right temperature. With my arthritis, I had a tough time with the clasp of jeans or slacks so I always made sure I had clean sweats. I could handle pulling a sweater over my head, given enough time, so Nurse Ratched didn't have to help me with that task. Thankfully I could still wipe myself and shower so she didn't need to be helping me with that. All in all, I was doing pretty good for an 82 year old. Honestly my nurse was a great girl. I felt bad that she had to spend her time watching an old man like me. If I didn't love my daughter in law so much I would have just sent her away. When Gail starts to cry I get messed up and find myself agreeing to pretty much anything. At least I got her to agree to only part time. The tradeoff is this necklace that monitors heart rate and everything else. That was our agreement for me moving back into my old place. Lately I have taken to sitting out on the patio and watching the sun come up with my cup of coffee. I know I am old but I am sure I can hear giggling coming from inside the house. I like to think that April and Beth are enjoying themselves. I look at the picture we took of the three of us at Mackinac Island the week before April's surgery. As I have been doing for the past few months I think back over the years.\n\nAfter April died I became the majority owner in Livingstone Steel. Beth talked me out of selling it by pointing out that I could leave something for my children. As the boys grew up I let them know that they could have the reins when they were old enough but they could also do whatever they wanted. Eric and Arthur seemed to think of it as a family legacy and both took the responsibility seriously, starting in high school. They both balked at having to go through each facet of the company as an hourly but I was adamant. When Grandpa Steve backed me up on it they were a lot more willing. Eric met Gail in college and the two of them hit it off. They got married two weeks after he graduated college. I thought it was interesting because Gail's not really a looker. I know that sounds terrible, and I feel guilty for saying it but it's true. Eric actually modeled for a summer. That is how they met. Gail was on the college softball team and was practicing while Eric was being photographed for the college calendar. She hit him with a foul ball and the rest is history. I remember Rachel asking her what her secret was to keeping a happy family at their 15 year wedding anniversary. I walked out of the room when Gail told her that she met him at the door on her knees holding a beer and wearing nothing but high heels. Good for my boy.\n\nArthur was a different story. He had any number of smoking hot women on his arm at any given time but he never settled down. He was a semi pro tennis player and met all types of athletic women. He decided to focus on running the financial end of Livingstone while Eric handled the personnel side. I was shocked when I found out the reason he never settled down. It was his sister.\n\nSarah was our resident introvert. She had no interest in the company, wanting instead to focus on her passion of writing. Not being the kind to push my kids into something they didn't want to do, I encouraged her to pursue her dream. It turns out she could write the hell out of a romance story. You probably have read or at least seen some of her work. She writes under a pen name. Being quiet and reserved, she would get picked on and while all of the family would rally around her I couldn't help but notice that Arthur was the most vehement. Eric would stand up to a bully and either talk him down or lay him out. Arthur would wait until the guy was alone and hit him in the back. I know this for a fact because when one of Sarah's dates tried to force her into a back room during a party, Eric beat the shit out of him. Three weeks later someone took a baseball bat to the guys knees and wrists. The would be Casanova lost his free ride to college on a baseball scholarship. To this day I don't know if Arthur and Sarah are a couple. I have my thoughts but it really is their business. As long as they are happy and not hurting anyone, who am I to judge?\n\nRachel is our cheerleader. Literally. She took high school by storm. Cheerleader, class President, Valedictorian, President of the Honor's Society, basically if she could lead it she was doing it. It carried through college. She took two years off to do some modeling thanks to contacts from Eric but decided she wanted to be a physical therapist. She has a growing practice catering to athletes and returning veterans. She fell in love with a guy that lost his foot in Iraq and together they run marathons. \n\nWhich brings us to Ellie May. Five years after April died we got a notice saying that the unused eggs we had frozen were about to expire. After a long thought process, we decided to try one more time. We fertilized the last of the eggs and one produced a viable embryo. Nine months later our Ellie may was brought into the world. \n\nFrom the moment she appeared she had me wrapped around her finger. I knew it and was helpless to stop it. Much to the entertainment of the rest of my family. \n\nEllie was diagnosed as being slightly on the autism scale. She had a stubborn streak a mile wide and she would overreact to inconsequential things. But she was fiercely loyal to our family and we knew that she loved us as we loved her. Case in point. We had a barbeque for the employees and all the kids had gravitated to each other and were playing games. One of the grandsons of one of the board members was a bully and was playing rough culminating in pushing Sarah down to the ground. Before anyone could step in all we heard a banshee-like wail and Ellie was all over the guy. She climbed up this kids back and started clawing at his eyes. Years later it was funny telling the story of a fifteen year old man/child brought to the ground trying to get a seven year old off his back. At the time we figured we had a problem. With some counselling we were able to come to an understanding. As a reward for good behavior I bought her a dirt bike. It was all over from there. She rode every race she could. Beth took the older kids to soccer practice and music lessons. I took Ellie to the dirt tracks. She tore up the local circuit. From age 8 to 16 she was the queen of the track. \n\nWe always made it a point to let the kids know about April. When we told Ellie how we used April's egg she had a hard time processing. She eventually came around and wanted to get a tattoo. The problem was that she was only 14. Knowing that she would just go out and do it, I had a long talk with her. She agreed to be tattoo free until she was 18 then we would get one together. It actually turned into a family event with all of us getting a \"Momma April\" tattoo inked somewhere. This turned into another dream of hers and now my little darling, the apple of my eye, runs a tattoo parlor and bike shop. She also owns a controlling interest in a biker bar just out of town. The bar and shops have a \"no colors\" policy meaning that bikers can't wear their insignias. They are considered neutral ground for conflict resolution.\n\nSteve and Barb bought an RV and toured the U.S., leaving the day after Beth and I's wedding. Five years later they had been killed in a massive pileup outside of Tennessee. I know they would have wanted to spend more time with their grandkids. \n\nAs for Beth and I? We got married a year after April passed. She became the matriarch of our family and the best partner a man could ask for. Every day we missed our April but we were able to be happy and content. There was never a thought to bringing in someone else for either play or emotion. The triad only worked with the three of us. She died 10 years ago from a heart attack. Thanks to the blue pills we were that couple that was fucking into our 70's. God she was beautiful. I miss her every day. \n\nWe had moved into the main house when Steve and Barb passed. After talking to the kids I offered the house to Eric and Gail when Beth died. They kept an apartment for me but with the grandkids growing up and great grandkids on the way I decided to move back into the old house. Hence the necklace and the nurse. Plus it was time for me to fade away. The company was going strong with Eric and Arthur at the helm. Sarah was opening another office. Rachel had another best seller. Ellie just kicked her cheating boyfriend to the curb and was dating a nice young lady. Turns out it is the niece of an old girlfriend, Trina. It was a small world I guess. I found out from her that Trina was alive but had severe dementia. That made me sad because Trina was a great gal.\n\nI have found myself dozing off these days. Lately I have a wonderful dream where I walk into the house and there are Beth and April waiting for me to get ready so we can go see the world. I am sad when I wake up. \n\nI hear the giggling again. I look into the house and there they are, as beautiful as the day I met them.\n\n\"It's time, Bill,\" April says to me with a smile. \"Come on in and let's get ready to go see the world.\"\n\nHell, even knowing it's a dream I get up and walk towards them. Funny, I don't seem to have any aches.\n\n\"Come on babe,\" Beth says as I go through the door. \"We got a long trip but we are going together.\""
    ],
    "authorname": "Ahazura",
    "tags": [
        "cancer",
        "polyamory",
        "tear jerker"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/aprils-fool-pt-04-1"
}