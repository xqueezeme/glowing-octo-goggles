{
    "title": "Dead and Horny Ch. 09",
    "pages": [
        "Hi all! Annabelle here, and I'm back with some island magic!\n\nNew reader? You're gonna be confused. This is a spinoff of HFHM that takes place during Book Three, so there's kind of a lot going on.\n\nReturning reader? Welcome back! To recap, Dana and Lily have arrived in Hawaii, ready to track down the Dragon Seed, which is in the hands of the mysterious Tristan Edge.\n\nI hope you have fun with this next chapter and that it can bring you a little joy this month. Thanks for all the kind words and ratings, it's definitely helped keep me going this winter. Future release dates are in my bio, so go check it out and plan accordingly \u263a\ufe0f\n\nWithout further ado, welcome to\n\nThe Party\n\nCyrus closed his eyes and breathed in deeply through his nose, allowing the natural humidity of the island to flood through his sinuses. Memories of trips to Greece, South Africa, and even parts of the Philippines while hunting a rogue naga flitted behind his eyes, but he tuned them out. There was something about the scent of salt in the air that relaxed him, made him feel at ease. Maybe someday, if he lived long enough, he would retire off the coast and take up fishing. Or maybe even stand up paddleboarding. Whatever it was he decided on, it would be infinitely easier than tracking down and hunting cryptids.\n\nHe had stopped at the bottom of the boarding stairs, his hand on the rail. Behind him, he heard Amida clear his throat.\n\n\"I don't mean to rush you, Master Cyrus, but this box is getting heavy.\"\n\n\"My apologies.\" Cyrus moved to the side and watched Amida step off the stairs carrying a wooden crate. They had taken a private plane from Montana in the early hours, which also meant that they had brought some additional cargo that was due to arrive anyway. Inside the crate were replacement parts for a device meant to block sonar, which allowed the local mermaid colony to avoid detection by the navy.\n\nAmida handed the crate over to a member of the Order wearing an aloha shirt and strings of wooden beads around his neck.\n\n\"I have a change of clothes for you,\" said the local, then set the crate in the passenger seat of an unmarked van parked on the tarmac. He opened the rear door and pulled out some plastic tubs. \"You will fit in better in these, and it won't be so hot.\"\n\nTasia took her box and opened it, then let out a snort. \"I can't remember the last time I wore so little,\" she declared.\n\n\"Then maybe you need to take more vacations,\" Cyrus told her, then picked up the tub with his name on it.\n\nThey had already tracked down Tristan Edge through the use of their psychic, and were planning to infiltrate a party he was throwing tonight at an estate he had rented for a porn shoot. It bothered him a bit that they were going in blind, but this was hardly the most dangerous mission he had been on.\n\nThat, and despite their difficulties with the succubus, Amida and Tasia were the best of their generation. They wouldn't be doing it alone either, and he waited for the rest of his team to receive their gear. Local support would be ready for them if they needed it, but the Hawaiian team's specialty was largely rooted in keeping the locals from harassing the cryptids who lived in the area.\n\nHe had a strong feeling that he would need the fighters he had brought. Tasia had stripped her clothes off already next to Amida, who was now also naked. Both of them put on clothes that made them look like tourists, though Tasia still carried a regal air about her. She was in a one-piece suit with cloth shorts, and she strapped her collapsed sword to her leg. The blade shimmered and disappeared under the simple glamour, and Amida slid his ten-inch wand into the pocket of his trunks, which were only a few inches deep at most.\n\nThey may look like beach bums in the making now, but the magical gear was top notch.\n\n\"Master, are you going to change?\" asked someone behind him.\n\nCyrus smirked and stripped off his clothes. When his shirt came off, he heard everyone else go silent for a moment, most likely at the scars along his back. He pushed back the memory of a biting spider swarm and slid into a pair of cargo shorts with comfortable sandals beneath. He put on an aloha shirt of his own, then went through the pockets of his jacket to get everything he needed.\n\nIt was with a small amount of sadness that he watched them pack away his jacket. He couldn't remember the last time he had been without it, and it felt like it was somehow the last time he would ever see it.\n\n\"Hmmph.\" He snorted away the thought, then looked at the others. \"Are we ready?\"\n\nTasia undid her ponytail so that her hair tumbled free around her shoulders. She ran her fingers through it and then pulled a pair of sunglasses from the small beach bag she was carrying and slipped them over her face.\n\n\"Let's go carve ourselves a dragon,\" she stated, then moved toward a group of SUVs that had been parked behind the van. She got into the driver's seat and rolled down the window, and Amida got in the passenger seat. Cyrus joined a pair of young women in the back, and opened up his laptop.\n\n\"Class is officially back in session,\" he announced, certain that this hunt would go far better than the last. The succubus had caught everybody off guard, and had reminded him that he needed to be thinking ahead. He stuck his hand in his pocket and gripped the metal cross tucked within.\n\nAnd if that succubus showed up again, he would be ready for her.\n\n<center>\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f</center>\n\nThe beach was crowded with people that smelled to Dana like hundreds of sizzling burgers on a grill. Even the scent of sunscreen failed to overpower the odor of ballpark franks that wafted off of a pair of coeds who were busy sunning their backs with their bikini tops undone.\n\n\"There's so much exposed flesh out here,\" remarked Lily. \"I can't tell you how much arousal I can sense, it's like ambrosia.\"\n\n\"Aren't you hot in those boots?\" asked Dana. Lily was in a barely-there bikini, but still wore her thick leather boots. Other beach goers were reflected in the shiny black leather of her boots, and more than a few people stared at her. \"Why not take them off, get some sand between your toes?\"\n\n\"Maybe I like standing out.\" She cocked her hip toward an older man with curly white hairs on his chest and a large belly. He was staring at her while eating a massive ice cream cone. She pulled up on one of her straps, causing the back of her bikini to disappear between her buttcheeks, then bent forward a little.\n\nThe man dropped his cone onto the hot sand and swore to himself before picking it up and taking it to the trash.\n\n\"You're gonna give someone a heart attack,\" Dana told her.\n\n\"If a little cheek is enough to kill a man, then that's not my problem. Besides, he shouldn't have been eating that anyway. I could sense his arteries clogging shut.\" Lily stopped and gazed out along the distant beach, then pointed. \"We're headed there, by the way.\"\n\nThe succubus was pointing to a large cliff made of lava rock with several large homes built into the side of it. From where they stood, Dana could see the high-walled barrier that kept the homes segregated from the island.\n\n\"Tristan's production company is doing their shoot up there,\" Lily said. \"If we can get in, we can look around a bit, figure out what we're dealing with.\"\n\n\"How do we get in?\"\n\nShe shrugged. \"We'll play it by ear. Besides, we've got back-up if we need it.\"\n\nDana nodded and pulled the straps of Tick Tock tight. The mimic was posing as a large, folded beach chair, and the strap squeezed her shoulder reassuringly. They continued down the paved path that bordered the white sand beach, and Dana watched the families as they walked past.\n\nA small family was busy setting up a volleyball net, and she couldn't help but wonder. If Alex had lived, would they have eventually started a family? It was something they hadn't really discussed, but she knew that Alex had wanted children someday. How would that have worked? Would they have adopted, or maybe done artificial insemination? Which one of them would have been pregnant?\n\nThe sidewalk ended, and she followed Lily out onto the sand. The beach continued for a long way before turning into large, scary rocks. The distant shore was, in fact, not reachable by the beach, and she found herself staring across a large patch of water that was bordered by a rocky dam.\n\n\"Guess we're swimming,\" Lily said, then started walking into the water. \"I didn't look too hard at the map, so that's on me.\"\n\n\"Why not just walk?\" Dana asked.\n\n\"Gated community, apparently. So even if we walk, we'd still need to get in, and if we wait, we'll miss the shoot.\"\n\n\"I can't swim there like this,\" Dana said. It wasn't a fear of the water, but the fact that the surf looked rough and it would be difficult to make the swim while towing the mimic.\n\nLily vanished beneath the waves and resurfaced to float on her back. She now wore a wetsuit with swim fins and a snorkel. \"It's not that hard to fit in, surfer girl.\" She pointed over her shoulder to a group of surfers who were waiting for waves. \"Toss the mimic in and catch a wave.\"\n\nRealizing what Lily wanted, Dana took off her sandals and strolled into the water. Nobody seemed to be looking their way, so she submerged Tick Tock and felt the canvass straps of the chair stiffen abruptly beneath her fingertips. A surfboard emerged from the water with a laughing skull in the middle, and she laid down on it and paddled her way out.\n\nLily came back to tow them out past the breaking waves, where the water was smoother. Dana paddled relentlessly toward the opposite shore. It was easily a couple of miles, and on more than one occasion, a sudden wave threatened to dump her over.\n\nThough she was a decent swimmer, navigating the surf was proving more difficult. She would sometimes watch one of the now distant surfers catch a wave and ride it in, and wished she could accomplish a similar feat. Maybe Tick Tock had a way to help?\n\n\"Don't suppose you have a way to get us there faster, do you?\" she asked the surfboard.\n\nTick Tock didn't respond, and she sighed. Lily surfaced about ten feet away, holding a starfish.\n\n\"You're not supposed to be touching the wildlife,\" Dana informed her. \"And why do you even have that?\"\n\n\"I think they're pretty. They remind me of...\" Lily looked at the starfish, then scowled and dropped it in the water. \"Guess I'm towing your ass. Do me a favor and hold on.\"\n\nThe tip of Lily's tail slithered over the edge of the surfboard, and Dana grabbed it with both hands. The succubus submerged and kicked, pulling Dana across the bay at a much faster speed. Beneath the waves, Lily was using her wings to propel them forward, and after just over an hour, the jagged rocks of the shore rose up on them like the teeth of a shark.\n\nThey came to a stop, and Lily surfaced, a frown on her face.\n\n\"They looked a lot smaller from far away,\" she said, then looked along the rocks. \"Guess we're climbing wet rocks. What do you think?\"\n\n\"I'm thinking that I wish I wore something other than flip-flops and a sarong.\" She studied the rocks, then pointed up at a section of fence. The gnarled rocks had plenty of handholds, and there was a flat spot that was easily scaled. \"I think we could climb up there. You carry the surfboard.\"\n\n\"Tow me, blow me, carry my shit. A working girl's job is never done.\" Lily grabbed onto the surfboard and held it steady. \"Much easier to carry a beach chair.\"\n\n\"Yeah, hold on.\" Dana grabbed her sandals and rolled into the water. For a moment, the surf gobbled her up, and then she surfaced. She swam around Lily and grabbed onto one of the rocks, doing her best to steady herself. As the surf swelled, she hauled herself out of the water.\n\nHalfway up the cliffs, she looked down to see Lily carrying the beach chair about ten feet down. The rocks weren't hard to scale at all. When she made it to the top, she discovered that the railing was only to cover a gap in the rocks in someone's backyard. The yard itself was empty, but there was a pool with a green floating mattress bouncing along the interior edge. The home was three stories tall with large bay windows that overlooked the ocean.\n\nDana hopped over the railing and moved away so that Lily could follow. They moved together along the side of the fence until they reached the gate that let them out front. Dana opened it quietly, and then both of them were moving toward the street.\n\n\"Welcome to Pele's Point,\" Lily told her, then led her to the sidewalk. \"One of the most exclusive neighborhoods in all of Hawaii, built up on a massive lava flow from hundreds of years ago. Comes with breathtaking ocean views and twenty-four-hour neighborhood security.\"\n\n\"Why the security, though?\" She looked at the surrounding homes. It was clear that they were easily worth millions of dollars. \"I thought Hawaii was supposed to be laid back.\"\n\nLily shook her head. \"Laid back doesn't mean no problems. Theft is a pretty big problem on the islands, and you'd better believe the people who live here have some great shit to steal. I would also put money on the fact that these homes aren't occupied year-round. It's one of the reasons they're doing a porn shoot out here. Why not make extra cash on your million-dollar vacation home which you probably only visit every year or so?\"\n\nDana frowned. She imagined if she had the money to buy a home like these, she would want to live in it year-round. Then again, whatever job allowed her to live such a way probably wouldn't be one she could do from home.\n\n\"Any ideas where our guy is?\" she asked.\n\n\"Yes. The shoot is at a place called the Black Palace, which is at the top of the hill.\"\n\n\"Sounds ominous.\"\n\nThey were walking along a wide street with no lines painted on it. The few people Dana saw out and about looked to be groundskeepers, and she saw no fewer than ten people tending gardens or yards. The sidewalk they walked along had giant concrete baskets along it with large flowers she had never seen before, and a Hawaiian woman with a wide brimmed hat was busy snipping dead buds out.\n\n\"It's not meant to be. Guy who had it built has that last name is all.\"\n\n\"But what about the palace part?\"\n\nLily stopped in the road, her eyes set on a gap between the buildings up ahead. \"See for yourself.\"\n\nThrough the gap, Dana saw an enormous home with large pillars in the front, and what looked like a tower in the back. It reminded her slightly of Mike's home, but on a much larger scale, and the third story had a large patio that hung directly over the cliffs with a view of the ocean on all three sides. \"How the hell do you afford something like that out here?\" she asked incredulously.\n\n\"Apparently the guy is a billionaire. Billionaires do what they want. They're kind of like the modern world's equivalent of a wizard, in a way. So much money, they don't know what to do with it.\"\n\n\"Must be nice,\" Dana muttered.\n\n\"Oh, it is.\" Lily started walking again, and when she passed behind a palm tree, her appearance rippled. Her hair was now a dirty blonde, and her wetsuit had become a bathing suit once more. She was about twenty years older now, and stopped to hand Dana the beach chair.\n\n\"One of us needs to look the part,\" she explained, tilting her sunglasses down to make eye contact. The sunglasses were encrusted with gems, and a cursive letter C was on the corner of the frames. \"You can be my poor niece, just out for a quick visit before going back to school in the states.\"\n\n\"School has already started, though,\" Dana replied while taking Tick Tock back.\n\n\"Please. Rules are for poor people.\" Lily's tone now had an edge to it, and she fixed a permanent sneer on her face as she adjusted a designer beach bag that had appeared on her shoulder. \"Speaking of which, don't bother making eye contact with the help. It just encourages them.\"\n\n\"You're enjoying this, aren't you?\" Dana asked.\n\n\"Quite.\" Lily walked on stiletto sandals along the sidewalk. \"And when we get up the palace, you let me do all the talking.\"\n\n\"Happily.\"\n\nAs they continued up the hill, a trio of SUVs passed them by, but Dana was too busy staring at the Black Palace to give them any mind. If the Dragon's Pearl really was there, then it would mean she had salvaged this trip, and was one step closer to being alive.\n\nShe knew she should feel excited, or maybe even anxious. Instead, it felt like she was simply crossing one more item off her shopping list. Even worse, her mind kept slipping back to Oregon, and the sense of belonging she had felt there. She had never felt like she had belonged at Mike's house, but now she was starting to wonder if she had even given it a fair chance. Instead of talking with him or even asking for help, she had left a note behind explaining what she was doing\u2014and that had been it.\n\nIf she had brought someone else with them, maybe the beginning of the trip wouldn't have been such a disaster. Then again, who could she have brought? The naga was content to lurk around in her labyrinth, and nobody else there could have passed for human anyway. Mike probably could have come, but that would have exposed him to danger, as well as\u2014\n\n\"Well, fuck.\" Lily had come to a stop, her arms crossed over her chest. She was looking at a large metal gate up ahead with a security guard at it. \"I didn't expect that to be an issue.\"\n\n\"Private security for the house?\" Dana asked.\n\n\"Maybe. Though I suspect it's an extra you can hire, or...\" Lily squinted. \"Well, I'll be damned.\"\n\n\"Because you are,\" Dana muttered under her breath.\n\n\"The guard is wearing a Maximum Dragon shirt. Looks like our boy brought his own security team, though I suspect a few police academy dropouts won't be too difficult to handle.\"\n\nNo sooner had she spoken when a pair of men in black polos walked across the road behind the gate. They were both wearing shoulder harnesses and carrying walkie-talkies on a belt around their waist.\n\n\"Seriously, he's a porn star, not a prince. Seems a little over the top.\"\n\nLily shook her head. \"It doesn't, actually. Think of the success this guy has seen already because of his magic. It makes you paranoid, remember? Scotes was freaking out over a magic flask that gave him free booze, but the pearl itself? If this guy really is becoming a dragon, he is amassing power, and he will do what he can to protect it. Hold up.\" She turned her attention to a sports car that was coming up the road with its top down. Inside were a couple of women who stopped at the gate and showed the guard something before continuing up. \"I'm guessing the shoot hasn't started. Looks like the talent is still arriving.\"\n\nThey stood around for a few more minutes and watched a couple more cars arrive. After a few vehicles went inside, Lily took Dana by the arm and walked her up to the gate. When they drew near, Lily's features shifted a bit more until she was shorter than Dana. Her breasts and hips inflated, and her skin darkened until it was brown with golden undertones.\n\nThey were near the guard station now, and the man in the kiosk looked up from his computer. Recognition and surprise flitted across his face, and he frowned when he walked out.\n\n\"Can I help you?\" he asked.\n\n\"Oh, honey, I'm sure you can.\" Lily's voice was dusky, and she put a hand on her hip. \"Call me Mona De Ville, surely you've heard the name. Or, as the internet knows me, the gangbang queen.\"\n\n\"Uh...\" He checked a clipboard he was carrying, then coughed nervously. \"I'm afraid you're not on the list, Ms. De Ville.\"\n\n\"Of course, I'm not on the fucking list.\" Lily moved into the man's personal space. \"I'm supposed to be retired now. Well, guess what? I live nearby and heard through the grapevine that Tristan motherfucking Edge is shooting here, and I will be damned if I do not get a look at that monster cock of his for myself.\"",
        "\"This is a private\u2014\"\n\n\"I don't fucking care if it's private.\" Lily was sweating profusely now. \"I'm considered royalty in the porn world, anyone worth their salt knows this. I'm ready to come out of retirement, and I would love for it to be for a scene with the king cock himself.\"\n\n\"But I\u2014\"\n\n\"Hey, I'm already angry and frustrated because my car broke down at the bottom of the hill, and if I can't get inside to speak with Mr. Edge very soon, I am going to fucking lose it. I will walk away and tell everybody that Maximum Dragon is a shit company. What, does he have something against milfs? Honey, I'm the queen fucking milf.\"\n\nThe man looked horrified. \"I can't let anyone in who\u2014\"\n\n\"Get me a supervisor or something, right fucking now!\" Lily pulled a fan out of her purse and waved it at herself. \"You leave the industry for five fucking minutes, and suddenly, you're nobody.\"\n\n\"No, that's not...I mean...\" The guard pulled a walkie-talkie from his belt. \"South entrance to command.\"\n\n\"Command here.\" The voice on the other end sounded annoyed.\n\n\"We have someone who isn't on the list.\"\n\n\"Then get rid of them.\"\n\nThe guard smiled at Lily, then lowered his voice. \"It's Mona De Ville, sir. She wants to do a video with Mr. Edge. To restart her career.\"\n\nThere was a moment of silence, and then the radio squawked to life. \"Mona De Ville? The gangbang queen?\"\n\n\"Uh, yeah. I'm fairly certain it's her.\"\n\n\"Didn't she retire to have a baby or something?\"\n\n\"Oh, for fuck's sake.\" Lily snatched the radio from the guards hand. \"I've been out in the heat for over an hour and I'm getting pissed.\" While Lily's back was to the guard, her breasts swelled up and wet stains appeared on the front of her bathing suit. \"Having a fucking baby doesn't turn you into a nun.\"\n\nWhen she turned back to the guard, his eyes went to her breasts. There was clearly an inner debate over whether to tell her or not.\n\n\"Put my guard back on, please.\"\n\n\"Ooh, a man who knows how to give commands. Tell me, sailor, how tall are you?\" Lily leaned against the guard station as a trio of men wearing black polos appeared around the corner.\n\nThe newcomers looked ready for trouble, but deflated when they saw what was going on. They blocked off the opening with their arms crossed, but one of them was fighting a grin.\n\n\"No, seriously, what's your situation, you single or what? You sound hot.\" Lily looked up at the group of men who arrived. \"Please, you can stop trying to look tough. I once had five guys inside me at the same time, you think I care about your tough act?\" \n\nThe one fighting a grin laughed, and the one in the middle cocked his head as if struggling to picture such a feat.\n\n\"Oh, for fuck's sake, I had two in my mouth, one in my ass, and two in my vag. Or was it two in my ass and one in my vag?\" She was holding down the button on the walkie-talkie as she spoke, then turned to Dana. \"Girl, you haven't lived until you've felt three guys nut in you at the same time.\"\n\n\"Hey. Hey!\" The man on the walkie was free to speak now. \"Can someone please take command down there?\"\n\n\"Why don't you bring your sweet ass down here and\u2014fuck, I'm lactating.\" Lily pulled down the top of her swimsuit to reveal a slow leak from her breasts. The way she held her suit, it was dripping on the walkie-talkie. \"Can someone up there tell the man in charge that you've got a horny momma out front who wants to get done deep dick style.\"\n\nOne of the men blocking the entrance had pulled out his own walkie-talkie and had snapped a picture of Lily. When she noticed the phone, she blew a kiss and held the pose.\n\nThe walkie-crackled to life. \"Shit, it really does look like her,\" said someone in the background.\n\n\"See if she has identification.\" This was from the man in charge.\n\nLily rolled her eyes. \"Of course, I do, but the name isn't going to match. But yeah, sure, go ahead and look it up. Oh, that's right, I don't want people knowing it. What, was a picture not good enough?\" She tossed the walkie-talkie to the guard. \"Fuck it, let's go. Tell Mr. Edge that he missed out on the opportunity of\u2014\"\n\n\"Wait.\" This came from the man with the phone. \"Can I at least get your autograph?\"\n\n\"Yeah, fuck it, why not?\" Lily walked over to him, her tits still on full display. \"You got a pen?\"\n\nThe man took the clipboard from the guard and pulled the pen out of it. \"I'm a huge fan.\"\n\n\"Yeah, you are.\" Lily grabbed his bicep and gave it a squeeze. \"Say, it looks like my schedule is about to open back up. What would you say to an early dinner, and\u2014\"\n\n\"Send her in.\" The walkie had squawked to life. \"Mr. Edge wants to speak with her.\"\n\n\"Oh, too bad.\" Lily pushed the guy's sleeve up and signed his bicep. \"C'mon, let's go.\" She waved Dana forward, and the guard moved to block her.\n\n\"She can go in, you can't,\" he told Dana.\n\n\"Oh, come fucking on. She's my makeup girl. You think I wanna get fucked on camera looking like this?\" Lily wiped the sweat off her head then pulled her top back up. \"Ugh, I hate how cold that is,\" she muttered, then grabbed Dana by the hand.\n\n\"We've got our own\u2014\"\n\n\"Please. This one knows how to color my asshole just right. It's an art. She even brought my favorite chair! Do you think we hiked up here for no reason with it?\" Lily had yanked Dana past the guard and they were now walking through the gate. \"You all don't have a golf cart or something we can ride up in, do you? These heels are killing me. Then again, I plan to have my legs in the air for about an hour, so maybe\u2014\"\n\n\"Yeah, hold on.\" Mona's fan ran around the corner and got into an electric cart tucked away behind the wall. He pulled up and patted the seat next to him. \"Right this way, Ms. De Ville.\"\n\n\"You can call me Mona.\" She winked at him and got in. \"C'mon, makeup bitch, let's go.\"\n\n\"Yes, ma'am.\" Dana got in the back of the cart and stared blankly ahead. This was going to be easier than she thought.\n\n<center>\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f</center>\n\nCyrus approached the service entrance of the Black Palace with a pair of buckets in his hand. Each bucket contained a pair of shears and some work gloves, and the others were milling about as if keeping busy. Their fake credentials as grounds crew had gotten them onto the property, but it was going to take a bit more effort to get in without causing a scene.\n\nTristan Edge had his own private security team. While they had expected this on their way in, he had been surprised to see a team of men who were not only armed, but also well-coordinated. There was little public information on Maximum Dragon, and he was now seriously concerned by what he saw.\n\nAmida was holding a bag of fertilizer over his shoulder, and then looked up at Cyrus. \"Cameras are down for fifteen seconds.\"\n\nThe Order dropped their tools on the ground, and Amida tossed out a handful of spheres. Cyrus opened the service entrance and his team ran inside. As he clicked the door shut, he watched the illusion spell take hold. Phantom versions of his team continued to mill about outside as if nothing happened, which would keep anyone who was watching from worrying.\n\nHis team ran down the hall and slowed once past the final camera. The interior of the building wasn't wired for surveillance to the best of their knowledge, and even if it was, it was likely that whoever could afford to rent the place wouldn't want to be watched. The Black Palace was sometimes used for weddings or special events, but was largely used by traveling dignitaries who wanted somewhere comfortable to stay.\n\nThere were ten of them in all, and when they reached the supply room, they huddled about the door. A pair of mages sat in the center of the concrete floor and used a piece of chalk to draw some symbols on the ground. Once the runes were ready, the mages sat inside of them and entered a meditative state.\n\nOut in the hall, someone walked by, and Tasia stood by the door, ready to handle them if they came inside. The stranger moved past, and she looked over to Cyrus and nodded.\n\n\"Speak softly,\" Cyrus reminded the man and woman in the middle of the room. The meditating mages were scouting the home in astral forms, and it wasn't uncommon for them to shout.\n\n\"The first floor is full of camera crew. A few women, and a large spread of food. Catering company on hand,\" said the woman, an older woman named Gabrielle.\n\n\"Second floor is a security team. They are checking the windows often, as if watching for trouble.\" The other mage, a man named Samuel, frowned. \"Something isn't right. The people upstairs are professionals, most likely ex-military. I count over fifteen of them, but it's hard to tell.\"\n\nCyrus frowned. What use would Tristan have for a private army? He paced back and forth, his thoughts on the Dragon's Pearl. If the records were correct, then it hadn't been in Tristan's possession long enough for the metamorphosis to begin. However, they were also operating on limited knowledge of an artifact that hadn't been seen in centuries. Was the army to keep someone else from taking the pearl?\n\nHe thought back to the succubus. If the Order had been in possession of the pearl, they would have lost it to her. Had someone already made a move on Tristan?\n\n\"What about the third floor?\" he asked. \"Any movement?\"\n\nSamuel frowned and shook his head. \"I don't see anything, but...it's all so fuzzy right now.\" His nose was bleeding now and his face turned red. \"I...I see...\"\n\n\"Enough.\" Cyrus put his hand on Samuel's shoulder. \"If anti-scrying spells have been put in place, you will get noticed if you push any harder.\"\n\n\"Yes, master.\" Samuel wiped his nose with a tissue, then looked over at Gabrielle. \"Do you see anything?\"\n\nGabrielle's cheeks had flushed, and her breath was coming in shallow bursts. \"No, but I can feel him, somewhere above us. He feels so warm, as if he wants me to come to him.\"\n\n\"Does he know we're here?\"\n\nShe shook her head. \"No, it isn't that. It's a magic field, it moves around as he does.\" Her eyes popped open and she looked at him. \"He's up on the top floor right now. I can't see him, but I can feel the magic of the pearl.\"\n\n\"Interesting.\" He looked at everyone in the room, then over at Tasia. \"Looks like we need a clean way upstairs. We have civilians and combatants, and we need to make sure we don't mix the two up. Ideas?\"\n\n\"We could wait until the shoot is over,\" offered Amida. \"Everyone should leave after, and then we can make our move.\"\n\nCyrus sighed and looked around the room. They could end up being here for hours, but at least it was air conditioned. \"Okay, let's rotate out on scrying. Nothing complex, just keep an eye on things.\"\n\nSamuel and Gabrielle stepped out of the circles, and a third mage took their place and knelt down to meditate. They swapped out every half an hour as the afternoon went by, and Cyrus couldn't help but notice that Gabrielle almost looked excited every time it was her turn.\n\nSomething was wrong. He just hoped he could figure out what it was before it killed them.\n\n<center>\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f</center>\n\nLily sashayed through the front door like she owned the place. The front entrance contained fewer than ten people, half of which were men who were busy moving in equipment. The young women who were sitting around chatting froze, the whites of their eyes suddenly visible.\n\n\"Mona De Ville?\" A raven-haired beauty stood and tried to straighten out her hair. \"Holy shit, are you doing part of today's shoot with us?\"\n\n\"Please.\" Lily took the girl's chin in her hand. \"You'll be the one doing a shoot with me if I have my way.\"\n\nThe people chattered nervously amongst themselves as Lily pushed past them. Mona De Ville had been absent from the spotlight for over a year now, but she had been immensely popular on the porn scene prior to leaving. She had seen the porn star in the minds of several men and knew it would be a good fit to get enough clout to walk in, but now she needed to maintain it.\n\n\"Is this all of you?\" she asked, gesturing at the four women.\n\n\"Nah, we got three more on the way,\" said one of the camera men. \"Mr. Edge loves doing scenes with seven women all at once.\"\n\n\"Six is sexy, but seven is a harem,\" said a man with a set of macbooks on a table. \"It's kind of his mantra.\"\n\n\"Hmm. Maybe he'll find eight a heavenly number. Where do you suppose he is hiding out right now? I would love to see if he has any interest in a scene with me as I did drop by unannounced.\"\n\n\"We heard,\" said computer guy. \"The security team was up in arms over it.\"\n\n\"I'm sure. Do I just go up this way?\" Lily gestured at the large stairs at the end of the entrance. The interior of the Black Palace was all white with gold embellishments, with plenty of columns.\n\n\"Uh, yeah.\" One of the camera guys was staring at Dana, but in particular, the scars on her arms and legs.\n\n\"Are you new at this?\" Lily asked him. \"`Cause you're gonna see a lot of girls with scars in this industry.\"\n\n\"No, I\u2014\" he sputtered before looking away.\n\nLily took Dana by the hand and pulled her up the stairs. There were armed men watching the hallways, and these ones seemed even more serious than the ones outside. They eyed the duo with suspicion, but let them by. A man in a tactical vest pointed to a hallway with a set of stairs at the end.\n\n\"He's up there,\" he informed them.\n\n\"Thanks, honey,\" Lily replied. When they got to the stairwell, she looked over her shoulder at Dana. \"This is gonna be easier than we thought.\"\n\nDana sniffed the air and frowned.\n\n\"Something wrong?\" Lily asked.\n\n\"Not wrong, but...\" she shook her head. \"I'm getting a weird smell from this place. I smell all the people, I definitely smell the arousal, some gunpowder, and quite a bit of magic. I'm thinking it's the pearl, but I can't be sure.\"\n\n\"Don't you worry. We're almost home free, then we can get you home and see what else we need to do to\u2014\" She stopped at the top of the stairs when she saw a pair of men standing there with weapons casually slung across their chests. \"Afternoon, boys, we're just leaving them hanging out today, aren't we?\"\n\nThey didn't acknowledge her. They walked past into a large bedroom with a view of the ocean through enormous bay windows. There was a patio outside with a small pool, and a man with golden skin and dark hair was leaning against the far wall. He was sitting in a lone sunbeam, and his eyes were closed as he basked in the sun.\n\n\"Shit,\" Lily whispered. Tristan had changed considerably from his last photo op, though the hints of the man he had been were still there. His skin was stretched across the enormous muscles of his chest, and he had swirling tattoos on his body that looked tribal in nature. They seemed to move when looked at indirectly, but Lily's attention immediately went to the pearl pendant he wore.\n\nThe Dragon's Pearl. It was no longer white; it was now the color of obsidian. She had no idea what that meant, but when Tristan opened his eyes to look at her, she felt the pressure shift in the room. A slight grin appeared on his lips, and she recognized the steely gaze of a predator.\n\n\"Hello there, Mr. Edge.\" Lily cocked her hips and smiled. \"I'm sure you know who I am, and I was wondering if I could have a word with you about that massive cock of yours.\"\n\n\"Indeed.\" He walked to the edge of the pool and ascended the steps, revealing the cock in question. It was half erect, but already large, and Lily wondered what it would feel like to ride it while sucking his soul out through his eyes. \"But I'm afraid you have me at a disadvantage.\"\n\n\"Honey, I have all men at a disadvantage. It's a perk of being me.\" She looked over her shoulder at the men who were watching the stairs. As far as she could tell, they were the only other people in the room. Dana was moving along the edge of the room, pretending to look out the windows, but clearly scanning the area. She had come to a stop in front of a large bay window that overlooked the rocky cliffs below.\n\n\"Do you like the view?\" asked Tristan. He didn't bother toweling off, and now stood in the doorway of the room, leaving a puddle on the floor.\n\n\"It's very pretty,\" she replied, adjusting the strap on the chair. Dana frowned, then dropped Tick Tock on the ground. \"Sorry, apparently something didn't get latched correctly.\"\n\n\"It's quite alright.\" He turned his attention back to Lily. \"But you misunderstand me. You see, I have no idea who you are.\"\n\nLIly rolled her eyes. \"Oh, you are such a millennial. I am Mona De Ville, the gangbang queen, two-time winner of the best anal scene in\u2014\"\n\n\"No, you're not.\" Tristan slicked back his hair, pressing the water out of it. \"You may wear the face of Mona De Ville, but you reek of sulfur, hellspawn.\" His features shifted, and his eyes turned golden. \"And I very much wish to know why you've come.\"\n\nLily paused, then looked at Dana. Dana looked confused, but was busy trying to latch the chair back together. For whatever reason, Tick Tock was acting up.\n\n\"Well, guess I'm busted.\" Lily transformed while keeping her eyes on the guards. When they didn't even flinch, she swallowed the lump in her throat. If she could shapeshift in front of those men without a reaction, what kind of shit were they used to seeing?\n\nWhat had they just walked into?\n\n\"And you, you're a fascinating one.\" Tristan moved toward Dana. \"You have the electrifying scent of young flesh, but also the smell of rot. I am both intrigued and disgusted.\"\n\n\"Good for you.\" Dana had picked up the chair again.\n\n\"Have a seat,\" he told her. A wave of energy filled the room, and Lily tilted her head in surprise. Even she had felt the compulsion in his voice, the sudden desire to obey his whim.\n\n\"No thanks, I'm\u2014\" was all Dana managed before a muffled shot rang out. Gore blossomed along the glass as the bullet blew a hole straight through her temples, and her eyes glassed over. She slid along the window, smearing the splatter pattern as she tipped to the side.\n\n\"I've learned not to take my chances with the unknown,\" Tristan said, his eyes flicking to the stairs. Smoke drifted from the barrel of a pistol wielded by one of the guards. The man casually holstered his weapon and turned his attention down the stairs. Tristan closed his eyes and sniffed the air. \"Ah, there it is. Now all that remains is rot.\"\n\nLily glowered at Tristan. \"You killed her!\"\n\nHe snorted. \"Please. She's dead now, you no longer have to put on a show. Was she your master? You are much like me, a creature who should bend a knee to no man.\" He fingered the pearl around his neck. \"You aren't the first to come for this, you know. Hence the men with guns. They're not only my eyes and ears, but they're a hell of a clean-up crew.\"\n\nShe shook her head, rage building in her gut. The way Tristan carried himself was exactly like Aladdin had done, a power mad being who would stop at nothing. Her anger built, and flames curled around her fingertips.\n\nShe allowed the demon within to manifest, and a growl escaped her lips.\n\n\"I'm about to make a big, fucking mess out of you,\" she said, then launched herself at him.\n\nShe was fast, but he was faster. He snatched her out of the air and slammed her into the tile of the floor hard enough that it cracked beneath her. Her tail whipped around to catch him in the neck, but he snatched it with his free hand and contemplated it.\n\n\"I'm curious,\" he said, then used his thumb to snap the stinger off her tail with his thumb. Pain shot up Lily's tail and through her spine, and she tried to claw his face, but her nails slid across his thick skin. \"Ah, so you can feel pain after all. I'm afraid I don't know much about your kind, but I'm a fast learner.\"\n\n\"How?\" Lily asked, allowing her arms to fall at her side. \"How are you already more dragon than man? I thought the pearl took years to take effect.\"\n\nTristan smirked. \"When I first saw the necklace, I could hear its call. I had only worn it for a few days when I discovered that women were naturally flocking to me, and I indulged in some of the sweetest pussy I had ever experienced. But the dragon in me wanted more. Money and power were things that would take time to gather, but my newfound ability to command the weaker sex allowed me to start my own company.",
        "\"I read the old legends, you know. There was something that dragons were constantly requesting as tribute, and once I discovered that secret, I unlocked the true magic of the pearl.\" Tristan smirked, his hand now crushing Lily's windpipe. \"Eating my first virgin wasn't easy, but once I did, it hastened the process. I also learned that I only needed to eat their hearts, so the second one went much faster. Each one I killed added months to my development, and they became easier to acquire once I had the funding to do it. In a way, I get to have my cake and eat it, too.\"\n\n\"Sir, the shoot is supposed to start soon.\" This came from one of the guards.\n\nTristan nodded. \"While I'm down there, toss the blonde into the ocean. The sharks will eat what's left of her.\" He looked at Lily. \"I can sense them, you know? Just like I could sense you when you walked in. They're swirling around in the ocean, uncertain why they are drawn to this place. Maybe they can smell the blood I'm about to put in the water, but who can say?\"\n\nLIly tried to respond, but he had crushed her windpipe. The strength of his grip kept her from transforming, and those golden eyes of his had pinned her in place with some kind of magic.\n\nHe sniffed her face, then turned her head to the side. \"Speaking of lunch, my next meal never made it onto her plane. Guess I'll settle for a demon and see what happens.\" He opened his mouth wide, and his face distorted, shifting into the fearsome maw of a crocodile.\n\nFire scorched Lily's features, and pain racked her body once again. She was fireproof, but the scorching heat from the dragon's maw was enough to raise blisters on her flesh. When the flames subsided, she sneered at Tristan, who had relaxed his grip on her throat.\n\n\"Is that the best you can do?\" she asked him with a strained voice.\n\n\"I prefer cooking my meal before I eat it. If the heart of a virgin can bring me so much power, I wonder what the heart of a demon can do?\"\n\nShe smirked at him. \"Then I guess it's too bad that I've already given it to somebody else.\"\n\n\"We'll see about that,\" he replied.\n\nWhen his jaws snapped together on her face, she let out a scream of rage and burst into smoke, leaving the real world and Dana behind. Her consciousness swirled around in circles as if going down a drain, and her last thoughts were that she hoped Dana would be okay.\n\n<center>\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f</center>\n\nCyrus opened his eyes. He had been sitting in a meditative pose for some hours now, and when he unfolded his legs, he heard his knees click. Checking the time on his watch, he looked over at the double circles on the floor.\n\nAmida was in one of them now, the young mage's face frozen in a grimace.\n\n\"Report,\" Cyrus commanded. The others in the room had been sitting quietly, biding their time. Since nobody had woken him, he assumed that the status of their target hadn't changed.\n\n\"The shoot ended almost an hour ago,\" said Amida. \"It was...a little unsettling to watch.\"\n\n\"How so?\"\n\n\"He likes to choke them,\" replied the older mage from earlier. She was sitting in the other circle, her eyes closed as well. \"He is violent with the girls, more so than I remember from the briefings on the way here. None of them seem to mind, but some of the crew were uneasy about it.\"\n\nThey had all watched some of Tristan's latest videos. Part of it was basic research, but they had also watched in the hopes of discovering some type of weakness. The man's physical transformation was already happening, but Cyrus had assumed that part of that was money, a good trainer, and most likely some steroids.\n\nHowever, if Tristan had figured out how to hasten the magic along, things would go sideways quickly.\n\n\"What is he doing now? Any sign of the block from earlier?\"\n\nAmida shook his head. \"The block disappeared a little bit ago. If he was controlling it, it wasn't because of our presence. As for what he's doing now, he is fucking one of his co-stars.\"\n\n\"In the ass,\" the other mage added. Her cheeks were flushed once more, and Cyrus wondered if it was hard for her to watch.\n\n\"If the shoot is over, then why are they still having sex?\" he asked.\n\n\"It's an after-party. The whole thing is winding down.\" Amida opened his eyes. \"However, I think we can set up an ambush in his bedroom if we move now. His security team has moved to the lower levels to keep an eye on him, and it looks like they may be live streaming what he's doing now. They're all busy.\"\n\n\"Your call, master.\" Tasia was sitting against the edge of the door. \"If he has a security team, it may be best to catch him off guard.\"\n\n\"Agreed.\" Cyrus put his hand on Amida's shoulder. \"Think you can take us up to the room?\"\n\nWhen Amida nodded, everyone stood. Cyrus stayed behind until they were all out of the room, then followed them out. The service hallway went all along the perimeter of the building, but ultimately let them out of a nondescript door on the second floor. The mages were using magic to mask their presence, and it was easy to sneak by a couple of guards who were busy watching the show below. When they climbed the stairs to the master bedroom, Cyrus saw that Tasia was sniffing the air apprehensively.\n\n\"Problem?\" he asked.\n\n\"It smells like sulfur up here,\" she told him. \"Like the succubus.\"\n\n\"It could be this.\" Another knight knelt down by a large scorch mark on the tile floor. It outlined the torso of a person, and Cyrus crouched down to inspect it. The stink was particularly bad here, and he wiped his hand on the soot and gave it a sniff.\n\n\"It's this,\" he declared, then stood back up. \"Spread out. He may come up here with his men and I want this to be a clean extraction. Amida, have the mages seal the room once he's alone so that we don't have any surprise guests. Tasia, you're on point, exterminate the subject with extreme prejudice. If this was Tristan's doing, his transformation has begun. Also, fire wards, everyone.\"\n\nEveryone nodded, and the mages took turns casting their spells. Cyrus found that he and most of the others could easily stand behind the pillars on the deck, allowing him a wonderful view of the night sky as stars hovered over the ocean horizon, swallowed up briefly by the passage of cargo ships. Tristan had left the door to the patio open, which meant they would easily be able to hear him come up.\n\nThe Order took their positions and waited. What Cyrus hoped wouldn't be too long turned into an hour, and he briefly worried that Tristan might have decided to go out once he was done, maybe bounce from party to party. He had no idea what night life was like on the island, but the thought of hours spent outside in the dark wasn't too appealing.\n\nIt must have been closing in on midnight when he heard the faint footsteps of a small group ascending the steps of the Black Palace. The others tensed up, ready to move at his signal. He closed his eyes and unhinged his spirit, then stepped sideways as if unfolding himself. His astral arm and foot were still connected to his body, which meant nothing would be able to wander in, but now he was able to look into the room of Tristan Edge unhindered, for a few minutes anyway.\n\nTristan was looking at something on a laptop that had been given to him by one of his men, and his features were all twisted up. There were seven men with him right now, all of them armed.\n\n\"I say we move on the caldera tomorrow,\" Tristan told the man closest to him, then folded up the laptop. \"Now that we've located the spot, we have no reason to wait.\"\n\n\"I do want to remind you that the land is privately owned,\" replied laptop guy. \"Your last bid on the land was ignored, and it sounds like the new owner has no desire to sell.\"\n\n\"Yeah, well, he's just some asshole on the mainland.\" Tristan unbuttoned his shirt and tossed it onto a nearby chair. \"Even if he finds out, it isn't like he's going to teleport out here when we go in.\"\n\nThe men looked at each other nervously, then laptop guy spoke up. \"I say this with all respect\u2014what if he can?\"\n\nThere was a moment of tension, and then Tristan laughed, causing his men to relax.\n\n\"Well, now that would be something. I doubt it, though. Our research says that he's a nobody, just some webmaster who came into a bunch of cash. I doubt he even knows what he has out here, and if he did, he would have come long ago.\" Tristan slid out of his pants and stood naked in front of everyone. \"But even if he does, that's what I have you for, right?\"\n\nThey all nodded their assent, and Tristan dismissed them. As they disappeared down the stairs, he did a few stretches, then turned toward the patio.\n\n\"You have my attention,\" he called out. \"May as well get a good look at what I'm dealing with.\"\n\nCyrus snapped back into his body and signaled to the others to stay put. When he stepped into the light of the bedroom, he made sure his hands were up.\n\n\"It's just me,\" he said.\n\n\"It isn't.\" Tristan sniffed the air. \"There are ten of you, and you stink of magic and desperation. But mostly magic. C'mon now, let's get it all out in the open.\"\n\nOne by one, the members of the Order appeared, wands and swords drawn. Tristan appraised them all with a large grin on his face.\n\n\"I've been dying to know who you were. I sensed you downstairs shortly after you broke in. You can't concentrate magic like that and expect to go unnoticed.\" Tristan walked toward a desk by one of the windows where a pitcher of water was. He knelt down to a minifridge beneath it and pulled out a glass with some ice cubes in it, then poured himself some water.\n\n\"If you knew we were here, then why did you get naked?\" Amida asked.\n\n\"Didn't want blood on my shirt. Just because I have money doesn't mean I want to spend it needlessly.\" Tristan drained the glass and refilled it. \"I assume you're here for the pearl?\"\n\n\"We are.\" Cyrus slid his hands into his pockets and drew a wand with each.\n\n\"And you're probably going to kill me for it?\"\n\n\"Undoubtedly,\" Tasia replied, holding her sword steady.\n\n\"Well then, let's get to it.\" Tristan drained his glass once more and set it down, then stretched, revealing bands of solid muscle that ran the lengths of his body.\n\nCyrus and Amida activated their wards, sealing off the stairwell so that Tristan's guards couldn't help him. Tasia and the other knights ran forward, and the room filled with the glow of spells being readied.\n\nTristan's eyes turned golden and he smiled. \"Defend me,\" he commanded.\n\nTasia, who was the closest to him, spun around and sliced through the exposed belly of the knight immediately behind her. Another female knight turned to attack the nearest mage, who blasted his compatriot with lightning before she could spear him. This mage was in turn attacked by the older woman who had kept blushing in the circle, and Cyrus immediately recognized what had happened.\n\n\"They're enthralled!\" he shouted, then raised both his wands. A beam of green light swept across the room, blasting some of the others off their feet, but Tasia ducked beneath it and came charging straight at him. Amida froze the floor, causing Tasia to slip and fall to the ground. Then, he was knocked off his feet by a stray blast of lightning. The magic barriers that protected them were quickly smashed away, and Cyrus threw a glass bead at the floor that obscured the room in a thick fog.\n\n\"Ah, women. So eager to obey.\" Tristan's smoldering eyes glowed in the fog, and Cyrus pulled a different wand out of his pocket and sent a beam of light toward them. Someone cried out in agony, and Tristan's eyes disappeared.\n\n\"Amida!\" In the cacophony of the attack, Cyrus had lost track of everyone, so he crouched down and started walking backward. He bumped against the glass of the window and turned around to look outside. The ocean lay down below, and he swore he could see dark shapes swirling about.\n\nTristan's abilities were far above what they should have been. He was easily decades ahead, which meant that the lore had been wrong. Bad information was the number one cause of death for the Order, and Cyrus was about to become another statistic unless he thought of something fast.\n\nA shadow moved toward him from the fog, and Amida appeared. He put a finger to his lips and turned back toward the fog. Through it, Cyrus heard a few loud crunches and a few muffled cries for help as they were hunted. The fog was dispersing through the open door of the balcony, and he felt his stomach drop when he saw that Tasia was the only one left standing. She was behind Tristan, her own eyes glowing gold like his.\n\n\"An interesting gift you've given me,\" Tristan said as he moved toward Amida and Cyrus. \"This one is by far the strongest, it's taking most of my concentration just to keep her under my control. But don't worry, I'll break her down over time.\"\n\n\"Tasia!\" Amida called out to his partner. \"You can fight him, you can win!\"\n\n\"She really can't.\" Tristan's face deformed, and his grin now stretched from ear to ear. \"And there's nothing you can do to save her.\" He opened his mouth wide and took a deep breath as a ball of fire formed in the back of his throat.\n\nWhen the jet of flame came out of his mouth, Amida jumped in front of Cyrus and raised his arms in defense. A golden shield of magic swirled in front of him, pushing back the flames, but dragon fire burned hot and hard. Even Cyrus could feel the heat of the assault and knew that Amida's shield would only hold out for so long. He looked back over his shoulder and saw that the glass of the window was starting to melt.\n\n\"Master, go!\" Amida's hair was burning now, and Cyrus knew that there were only seconds left. He grabbed his apprentice by the collar of his shirt and threw himself back, the molten glass glowing hot against his own magic shield. Instead of breaking, the glass continued to stretch, and Amida let out a scream of agony moments before they fell through.\n\nThe fall was almost a hundred feet, and Cyrus stuck a hand in his pocket and slid his finger into a ring that he kept there. His descent slowed and he held tight to Amida, but ended up swinging around violently as the man fell past him. He caught a flash of charred flesh and skull before the spinning motion whipped him back around so that all he could see was open sky.\n\nThe power of the ring could only support the weight of one man, so when the two of them hit the water below, it was hard enough that the air was knocked out of him. He let go of Amida and fought the darkness that crept in on the edge of his vision. Dark shapes swirled about him in the water, and he fought to grab hold of Amida once more. He grabbed hold of Amida's hand and tried to pull him toward the surface, but Amida yanked the hand away.\n\nNo, that wasn't right. Something had grabbed Amida and was pulling him away. Amida's pale features receded into the inky black, and something tried to take a bite out of Cyrus, but got a flash of magic instead.\n\nHe had failed them. His thoughts were beginning to slow as he fought for the surface, desperate to feel the cool touch of air on his fingertips, but the lights up above were always just out of reach. He had walked into that place with nine of his best, and they had been annihilated by the first dragon-human hybrid to walk the earth in decades, maybe even centuries.\n\nSomething else knocked him sideways, then dragged him down. The shadows around him were attacking now, and once he lost consciousness, they would have him. He caught a flash of teeth followed by a dorsal fin and gritted his teeth.\n\nFucking sharks, he thought, trying to dig through his pockets. His thoughts were like whirlpools, slipping through the cracks of his mind as he tried to find the lava rock in his pocket that would let him breath underwater. It was standard issue for missions in Hawaii, and just as he pulled it free, a shark ran into him, causing him to drop it. They were steadily moving him deeper now, away from the surface.\n\nThis was it. A dull roar filled his ears as he contemplated the end, and wondered if he had earned himself a place in Heaven, Hell, or maybe somewhere in between. The sharks scattered, giving him just a little bit of time to process his own demise.\n\nA pale figure moved toward him beneath the water, and if he had had the energy, he would have pumped his fist. It was one of the mermaids! She slid her arms around him and pressed her lips to his and blew. The air that filled his lungs tasted awful, but he imagined it was due to an all fish diet. She swam him toward the surface, and when they broke the water, he saw well over a dozen fins circling him.\n\n\"You saved my life, thank you so much,\" he told her, but she said nothing. Instead, she swam on her back, both of her arms slid under his and clutching his belly. All he could see was the night sky once again, but he was grateful for it. \"I thought I was a goner.\"\n\nThe mermaid paused for a second and then used one of her hands to tilt his face back. \"Ah, shit,\" she muttered, but kept swimming. Eventually, they made it to a spot on the rocks where he was able to climb up. It was rough, and he nearly stabbed himself on a black urchin, but he was finally out of the water.\n\nHe heard a loud splash and looked up to see that his savior had pulled herself free of the water. What little light from above illuminated her pale face, and he saw that instead of fins, she had a pair of very human legs. One of them hung at an odd angle, and she was covered in scars.\n\nBetween the darkness and her wet hair, he didn't recognize her immediately, but when it came, he reached into his pockets, frantically trying to grab one of his wands. The fact that she was here was impossible, but impossible no longer mattered. If she was here, the demon wouldn't be too far behind.\n\nShe saw him fumbling about and grabbed something on the nearby rocks and threw it at him. He turned his head away and felt something enormous crash against him. When he turned back to look, he saw that he was pinned beneath a large, iron chair with over a dozen legs. Several of them had wrapped around his hands, pinning them to the rocks. Over the crash of the waves, he stared in wonder as she hobbled off to his side and fell down next to the corpse of Amida. The man was missing one of his arms, and the top of his face had been scorched away.\n\nSeeing what he was looking at, she turned Amida's head to face away from Cyrus.\n\n\"I suppose you're going to kill me.\" He had literally gone from the frying pan into the fire, and without his wands, he was currently helpless.\n\n\"If I had wanted you dead, I would have let the sharks have you. But I'll admit that I probably would have thought twice if I had known it was you.\" She sat down on the rocks and he saw that one of her legs was twisted inward, and there was a bulge by her hip. \"Your friend wasn't so lucky, but I think he was dead when he hit the water. I tried to save him first, but...\" she shrugged.\n\n\"What are you doing here?\" he asked.\n\n\"Same as you, I bet. I got tossed over the rail hours ago and think I dislocated something. Can't really walk on it, and it looks pretty gross.\" She poked at the lump on her hip. \"I don't suppose you've seen my succubus, have you? She's usually the one to put me back together.\"\n\nThis was the woman who had lost an arm and put it back on, then been eaten by an elder god. She had fallen over a hundred feet into the ocean, dislocated a leg, fought off sharks and now spoke with him as if it was no big deal.\n\n\"Who the hell are you?\" he asked. \"What the hell are you? Why didn't the sharks attack you?\"\n\nShe looked up at the stars. For a couple of minutes, she was silent, then nodded as if making a decision. When she looked back at him again, he couldn't help but notice that her eyes were flat and lifeless in the evening light.\n\n\"My name is Dana,\" she told him. \"And let's just say that what I am is complicated.\"",
        "<center>\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f\ud83c\udfdd\ufe0f</center>\n\nI hope you enjoyed this chapter. This tale has been difficult at times, but it has been very fun to write. Don't forget to leave me some stars, and I will see you next time!\n\n~Annabelle Hawthorne"
    ],
    "authorname": "writerannabelle",
    "tags": [
        "dragonboi",
        "monstergirl",
        "succubus",
        "zombie",
        "nonhuman"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/dead-and-horny-ch-09"
}