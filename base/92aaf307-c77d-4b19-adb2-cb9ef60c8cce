{
    "title": "Houston: The Girl Of His Dreams Pt. 02",
    "pages": [
        "Houston: The Girl Of His Dreams, Pt. 02\n\nThe following story is set shortly after \"\" and runs concurrent with \".\" For the full story of John and Houston, I suggest you read my series, \"Houston,\" and the follow-up series, \"Houston Goes To Washington.\"\n\nThere are a number of people I would like to thank for helping to make this story a reality. I would like to start by thanking Colinthedog for giving permission to reference events and characters from his story, \"Retreat.\" I would also like to thank ACSpectre1 and QuantumMechanic1957 for their assistance as well. Others have helped with beta reading and getting me through some of my \"Americanisms.\" To them I extend a hearty \"thank you.\"\n\nMany thanks to those who offered comments and constructive criticism on my previous stories. For those who want to say this or that would never happen, remember this is my universe, a place where nearly anything can, and often does, happen. At least on paper...\n\nPlease refer to my profile for more on my personal policy regarding comments, feedback, follows, etc. (Yes, I DO moderate comments) And please remember, this is a work of fiction, not a docu-drama...\n\n* * * * *\n\nThe end of \"Houston: The Girl Of His Dreams, Pt. 01\":\n\n\"That's right,\" Regis said. \"Everything our two countries have built up over the last 100 years or more would be gone, like THAT,\" he added, snapping his fingers. \"My agents were this close,\" he said, holding his thumb and forefinger very close together, \"to busting the whole damn thing wide open when my man was attacked. And that was despite your people's best efforts to stonewall them.\"\n\n\"You think my people may have been in on it?\" Brent asked.\n\n\"My agent -- Houston Smith -- believes someone tipped them off,\" Regis said. \"The only ones who knew they were going to Hackney were my agents and Callahan's team.\"\n\nBrent sat in his chair, thinking about the potential ramifications and considering all his possible moves. He stroked his chin as he played political chess in his head. He finally came to a decision and looked at Regis.\n\n\"What do you need from me?\" he asked.\n\n\"Well, for starters, something a bit more civilized than this crap you call coffee,\" Regis said with a sly smile. Brent smiled back. Yes, perhaps this American was redeemable after all, he thought to himself.\n\n* * * * *\n\nAnd now, \"Houston: The Girl Of His Dreams, Pt. 02\"\n\nThe next morning, John woke up, pulled back the covers and got out of bed. He looked and saw his clothes neatly folded on a chair in the bedroom. After rinsing his mouth out in the bathroom, he did his business and got dressed.\n\nJust then, Houstonia came into the room with a tray. She walked through the bedroom and out onto a balcony before calling to him.\n\n\"You need your strength, John,\" she said. \"Please join me on the balcony. It is such a nice morning.\" He went onto the balcony and he had to agree. The temperature was just right and there was a slight breeze blowing. He looked down at the plate and saw what looked like scrambled eggs. He sat down and began eating. Yes, they tasted like scrambled eggs with a bit of salt and pepper, just the way he liked them.\n\n\"Aren't you going to eat?\" he asked.\n\n\"It's not necessary,\" she said.\n\nHe finished the eggs and drank the dark, hot liquid from the cup in front of him. Coffee, with just a hint of cinnamon. It was rather delicious, so he gulped down half the cup in one swallow.\n\n\"How did you sleep?\" she asked.\n\n\"I slept well, thank you,\" he told her.\n\n\"Did you dream?\" she asked.\n\n\"Yes, I had a rather strange dream,\" he said. \"I was in a room. There was a woman sitting next to a bed. She looked a lot like you, in fact. Except for her hair. There was a man in the bed. I couldn't see his face, but there were a lot of tubes and wires attached to him. The woman was crying. I felt bad for her. I wanted to comfort her, but when I reached out, my hand went right through her. It's strange -- I felt like I knew that woman, like we have some kind of connection. I can't explain it.\"\n\n\"The girl of your dreams, perhaps, John Smith?\" she asked rhetorically.\n\n\"I don't know. None of it made any sense to me.\"\n\nHoustonia nodded her head and looked out over the strange landscape.\n\n\"You will not be able to stay here much longer, I am afraid,\" she said sadly.\n\n\"Why not?\"\n\n\"The corpuscles are gaining in strength and numbers. When they are ready, they will come for you.\"\n\n\"Can't you do something?\" John asked. \"You're the Queen Protector. Surely you can make them see reason.\" She smiled at that.\n\n\"You don't understand. The corpuscles do not reason, and they do not understand language. They are driven by instinct and programming. It is their job to eradicate and remove invaders to the System.\"\n\n\"Is that what I am? An invader? And what is this System?\"\n\n\"The System is all that you see. Urhart is just one part of it. North of us is Urmind. There are many other realms. Together, all of them make up the System, and when one realm suffers, the entire System suffers. And yes, technically, you are an invader and you have not yet been accepted by the System. Perhaps one day, if you survive, you will be. But that may take a very long time, and there is no guarantee you will ever be fully integrated. Look at yourself, then look around. Surely you can see the difference.\"\n\n\"Of course I can see the difference,\" John said. \"So, what do we do?\"\n\n\"As much as I would like you to stay, the truth is we need to find a way to get you back where you belong,\" she said. \"Of course, you are welcome to remain here as my guest. And you may remain in my bed while you are here.\" She looked out over the landscape before speaking again. \"There's a storm brewing. You probably shouldn't stay out here too long.\"\n\nJohn looked and saw a gathering of large red clouds in the distance. As he watched, he saw flashes of lightning jump between them and he felt the humidity suddenly increase.\n\n\"Good idea,\" he said as he stood up.\n\n* * * * *\n\nHouston sat in the chair next to John's bed, her head in her hands. She had spent much of the night crying for her husband, hoping to get news that someone had figured out how to counteract the drugs that had been pumped into his system.\n\nShe thought back over the days leading up to the visit to Clive Barker's flat. She couldn't understand why Roisin and some of her colleagues hated them so much. This wasn't their first trip to the UK, and so far, most of the people they had encountered there were quite warm and friendly.\n\nShe remembered one day as she and John were walking along the sidewalk. A group of rather rough-looking teenagers dressed in leather came up to them. She wondered if they were going to attempt a mugging, but one of them simply asked if John had the time.\n\n\"Pardon me, sir, but would you happen to have the time?\"\n\n\"Of course,\" John said, looking at his watch. He told them what time it was, and the teen who asked simply nodded his head and thanked them.\n\n\"Thank you very much, sir,\" he said. The group strolled off and they continued walking down the sidewalk, taking in the scene around them. They always enjoyed visiting new places and meeting new people. So, she wondered, why was Roisin and some of the others so rude to them? What had they ever done to deserve such treatment?\n\nShe recalled the day that John nearly ended up in a fight with one of Roisin's men. It was their second day here, and Ross had just wrapped up their morning briefing. Most of the others had gone off to do whatever it was they had been assigned to do, and she went to the sink to rinse out her cup.\n\nShe felt a man's hand on her ass, and was about to respond, when the hand was suddenly removed and she heard John's voice. She turned and saw that John had put the taller man's hand in a vice-lock and had him on his knees on the floor. John's face was red with anger as he spoke to the man.\n\n\"What's your name again, asshole?\" John asked.\n\n\"Sheffield,\" the man responded through his pain.\n\n\"Ah, that's right. Shithead,\" John said. \"Tell you what, Shithead. The woman you just assaulted happens to be an agent of the United States government. She also happens to be my partner AND my wife. If you ever assault her again, I swear to God I'll personally introduce you to levels of pain you can't even begin to imagine. Understand me, Shithead? I said, DO YOU FUCKING UNDERSTAND ME?\" Sheffield nodded his head as John continued to put pressure on his hand and wrist.\n\n\"Yes, I understand,\" he gasped. \"I'm sorry.\" John released the man's hand and watched as he tumbled back on the floor. He turned to Houston.\n\n\"Are you okay?\" he asked quietly. Houston nodded her head and John turned to Ross and Roisin, who stood there, watching the altercation. By then, a few others had gathered at the door and were watching intently.\n\n\"Try to keep your fucking animals under control, willya?\" he asked. Not waiting for an answer, he escorted Houston out of the kitchen, pausing long enough to punch a hole in the wall by the doorway. The others got out of the way as John and Houston walked through them. They turned and looked at the large hole in the wall left by John's fist. One of them helped Sheffield get back on his feet.\n\n\"If you ever pull a stunt like that again, Sheffield, I'll have you sacked. Understand me?\" Roisin snarled. \"That goes for all of you.\"\n\n\"Yes, mum,\" Sheffield said sheepishly. The others nodded their heads and went back to their business. Roisin may not have thought much of the two Americans, but she was not about to tolerate sexual harassment from anyone.\n\nHouston was brought back to the present by the sound of tapping on the door. Perhaps it was a nurse or a doctor coming in to check on her husband. She wiped the tears from her face before responding.\n\n\"It's open,\" she said. She heard the door open and looked to see who was coming in. She was shocked to see Roisin step inside, a smile on her face. She held a drink carrier in her hand with two cups.\n\n\"I stopped at the Starbucks over by Hyde Park,\" she said. \"I thought you might enjoy a caramel mocha this morning. I understand that's a favorite.\" Houston smiled and nodded her head.\n\n\"That sounds good,\" she said. \"Thank you.\" Roisin handed her a cup and took the other for herself. She pulled up a chair and sat next to Houston.\n\n\"How is he?\" she asked, looking at John.\n\n\"He seems to be resting for the moment,\" Houston said. \"He goes through periods where he tosses and turns and his vitals are all over the place. But right now, he's okay.\" She looked at Roisin and noticed that she actually seemed concerned about her husband's well-being. And the coffee surprised her. \"So, who are you and what have you done with Roisin Callahan?\" she asked with a smile. Roisin smiled at that.\n\n\"This is the real me, I assure you,\" she said. \"What did the doctor say?\"\n\n\"They say he was hit with a very potent psychotropic compound that's affecting his entire nervous system,\" Houston said.\n\n\"Are they working up a cure?\" Roisin asked. Houston shook her head.\n\n\"They don't even know where to start. I've sent information about it to our medical people. The doctor said if he stays out much longer there could be permanent brain damage. Told me I should prepare to take him off life support.\"\n\n\"Well, then, I guess we'd better find Barker and get the antidote, eh?\" Roisin asked. Houston looked at her.\n\n\"I want to be there when you do,\" she said.\n\n\"I just happen to know the person in charge of that team. I think we can arrange that.\" Houston looked back at John.\n\n\"I can't bear to be without him, Roisin,\" she said. \"He's everything to me. Tell me, have you ever loved someone like that?\"\n\n\"I did, once,\" Roisin said quietly.\n\n\"That's right. Lt. James Harmon, U.S. Naval Attache Officer. Regis told me and I checked it out. I hope you don't mind.\"\n\n\"Not at all,\" Roisin said. \"We were very happy together. He asked me to marry him and I agreed. Then about six months later, I caught him in bed with some sleazy tart and threw him out. I couldn't believe the nerve of the wanker. He just looked at me and carried on without a word.\"\n\n\"We're not all like him, you know,\" Houston said.\n\n\"I know,\" Roisin said. \"He just left a very sour taste in my mouth. In more ways than one.\" Houston smiled.\n\n\"Well, Lt. Harmon is now Lt. Commander Harmon, and he's been stationed in Antarctica for the last three years,\" Houston said. \"He got caught screwing an admiral's daughter. She was barely 19. The admiral was so pissed, he sent Harmon to Antarctica and that's where he's been ever since. Got passed over for promotion twice now. I don't think he'll be in the Navy much longer.\" Roisin chuckled at that.\n\n\"I guess I dodged a bullet with that one,\" Roisin said.\n\n\"Yeah,\" Houston said. \"You know, I almost blew it like that with John once. He gave me one hell of a wake up call, though. He had faith in me and stuck by me. I owe him everything, Roisin. Even my life. That's why I have to be there when you go after Barker.\"\n\n\"I understand,\" Roisin said.\n\n\"Roisin, I want to apologize for going off on you yesterday,\" Houston said. \"It was unprofessional and I'm sorry.\"\n\n\"No worries,\" Roisin said. \"We've been pretty hard on you and John and I can understand how you would feel. If it were my husband laying there, I might very well have done the same thing. And, I... apologize for being a bloody awful witch to you.\" Houston could tell it was hard for her to apologize. She nodded her head.\n\n\"Apology accepted. Why have you guys been so hard on us?\" Houston asked. Roisin shrugged her shoulders.\n\n\"A few reasons,\" she said. \"When they told us what it was all about, we figured it was just another wild goose chase. Most of us really didn't take it all that seriously. As far as we were concerned, it was all a bunch of crazy conspiracy theories. When we were told that two of our best people would be part of an exchange for some kind of joint briefing, we couldn't believe our ears.\"\n\n\"But you've changed your mind since then?\"\n\n\"Yes,\" Roisin said. \"I don't know who your boss talked to or what he said, but things have changed drastically. We had a very long meeting last night. They briefed us on the whole situation. And you could say we had a few rockets fired up our arses. Until then, we had no idea just how serious this was. So, starting today, the team is moving back to Vauxhall Cross. You will be given full unfettered access to whatever you need. And I've heard a rumor that the two of you may receive a letter of apology from the Home Secretary himself, delivered in person.\"\n\n\"Wow,\" Houston said.\n\n\"You were right about one thing, Houston,\" Roisin said. \"Barker was tipped off by someone on the inside. But it wasn't me.\"\n\n\"Do you have any idea who it was?\"\n\n\"Yes, we have a few suspects. We'll know for sure soon enough,\" Roisin said. \"Tell me, Houston, when was the last time you slept?\"\n\n\"I honestly don't remember,\" Houston told her.\n\n\"Well, if you expect to be on my team when we go back after Barker, you need to get some sleep. Understand?\" Houston nodded her head.\n\n\"Yeah,\" she said. \"I can rack out on the couch over there for a bit. I just feel like I need to be here with my husband.\"\n\n\"Very well,\" Roisin said. \"I was just wondering something.\"\n\n\"What?\" Houston asked.\n\n\"Isn't it a bit... odd for you and your husband to be assigned to each other as partners?\"\n\n\"It is,\" Houston said. \"But Regis -- my boss -- kinda marches to the beat of his own drum, if you know what I mean. And no one questions him. At least, no one with the desire to keep his balls intact questions him.\" Roisin chuckled at that.\n\n\"I don't doubt that at all. Here, let me give you my mobile number. You can ring me up if there's anything you might need. I'd better get over to the old house and make sure they have everything packed up.\" She extended a hand to Houston. \"Truce?\" Houston looked at her hand and smiled.\n\n\"Truce,\" she said, shaking Roisin's hand. \"And thanks for the coffee.\" After Roisin left, Houston finished her coffee, then laid down on the couch that ran alongside John's bed and fell asleep.\n\n* * * * *\n\n\"They know everything, I'm telling ya,\" the man said as he spoke into his mobile phone.\n\n\"They can't know everything. That's impossible,\" the man at the other end of the call said.\n\n\"They certainly know enough. They know about you and the Yank First Lady. They also know about the cash you've been bringing over from the States.\"\n\n\"How?\"\n\n\"I don't know, but they do.\" The man at the other end of the call sighed. \"So, what do you want us to do?\"\n\n\"I'm thinking. Have you spoken to Clive yet?\"\n\n\"No, not since all this blew up.\"\n\n\"Good. Does he still have the antidote?\"\n\n\"As far as I know.\"\n\n\"Get it from him. Then take care of him. Permanently. Make it look like a robbery gone wrong or something. We can't have any loose ends.\"\n\n\"What about the American agent he shot? You want me to finish him as well?\"\n\n\"No. There's still a chance we can get out of this. Make it look as though you took the initiative and recovered the antidote. That should throw everyone off for a while.\"\n\n\"You want me to help the American? After all this?\"\n\n\"What are you complaining about? You'll end up looking like the hero.\"\n\n\"I don't like it.\"\n\n\"That's the way it has to be. And it has to be done today.\"\n\n\"Why today? What's the rush?\"\n\n\"It's going down tonight.\" The man said nothing for a few moments as he took in what he just heard.\n\n\"Right. I'll take care of it today. Personally.\"\n\n\"See that you do.\" The call ended and the man put the phone in his pocket. He looked at the other man with him.\n\n\"Well, what did he say?\" the man asked.\n\n\"We have a job to do. Give Clive a ring. Now.\"\n\n\"Then what?\"\n\n\"You go meet him. Get the antidote. You know what to do after that. I'll go to the hospital. I'll pretend to be concerned about Smith. You meet me there with the antidote.\"\n\n\"What about the Yank? And his wife?\"\n\n\"I'll take care of him. Personally. I owe him one,\" he said, looking at his hand, which was still a bit sore from the twisting he received from John that day in the kitchen.\n\n\"What about his wife?\"\n\n\"We'll take care of her together. I've got what I need to get her good and ready. Once her husband is awake, we'll give her the shagging of her life. Then we take care of both of them.\"\n\n\"You saw what she did to Roisin that first day. You really think we'll be able to take her?\"\n\n\"Parlor trick. Trust me, she's as soft as she looks.\"\n\n\"I hope you're right. I'll ring up Clive now.\"\n\n* * * * *\n\nSomewhere in the middle of the MI6 building at Vauxhall Cross, five people sat in a darkened room as they listened to audio of an overseas phone call. The only illumination in the room came from the computer monitors in front of them.\n\nThe man in front of the computer clicked on an icon and confirmed the phone at the overseas end was located somewhere in the U.S. Midwest. The official map had no name for the location, but two of those in the room knew it was the location of a secure U.S. Government facility known to many as Fort Apache, the headquarters of the HomeFront Security Task Force.\n\nThey also knew it was the current location of Prime Minister Brown, who was there to participate in a top-secret briefing with the newly-inaugurated American President. The conversation they just heard and recorded was thanks to one of the men who sat in the back of the room.\n\n\"That feckin' prick,\" Roisin hissed. \"So much for being out sick.\" She turned to the one-eyed man sitting in the back of the room. \"You were right. Tell me, are all of our mobiles equipped with that surveillance chip?\"",
        "\"No,\" Regis said. \"But most burner phones are. Fortunately, that's something we've been able to keep from the public. For obvious reasons.\" Now she had another decision to make. She thought about it for a moment before pulling out her cell. She punched in the number and waited for the man at the other end to answer.\n\n\"Sheffield and Brown are on the move. Follow Brown and keep me appraised of his location,\" she said.\n\n\"On our way,\" the man at the other end said before ending the call. She turned to Ross and hoped she made the right decision. She was concerned about Barker, but she had bigger concerns, namely the life of a particular American agent, and two of the turncoats working with McWhorter. Ross understood her conflict and nodded his head. She made one more call.\n\n\"Hello,\" Houston said when she answered the phone. Roisin could tell she had been asleep.\n\n\"Houston, this is Roisin. Sheffield is on his way to your location now. He'll probably be there in about 15 or 20 minutes. We've got assets in the vicinity of the room you're in. Brown is picking up the antidote from Barker. Try to maintain until we can get there. And watch yourself. He's up to no good.\"\n\n\"Will do,\" Houston said. Ending the call, she thought about what Roisin had said. Perhaps, she thought, he would try to drug her. She looked through her overnight bag and found the small tin that held the anti-date rape drug pills she got when they were in Washington. Opening it, she took a small tablet and placed it under her tongue. Then she sat back down on the couch and waited. About 15 minutes later, she heard a knock at the door.\n\n\"Come in,\" she said. The door opened and Alan Sheffield walked in. She took stock of his height and noticed the slight smirk on his face.\n\n\"How's your husband, Mrs. Smith,\" he asked.\n\n\"He's resting for now, thanks for asking. What brings you here?\"\n\n\"Well, I just wanted to come by to let you know we have a lead on that antidote,\" he said. \"My partner, Derek Brown, has gone to Hackney to see if he can collect it and bring it here.\"\n\n\"That is good news,\" Houston said. \"Have you told Roisin?\"\n\n\"Not yet,\" he said. \"I wanted to wait until Derek got here.\"\n\n\"I see.\"\n\n\"So, you think that maybe we can sit for a little while, maybe get to know each other a bit before he gets here? I know we got off on the wrong foot and I wanted to make it up to you.\"\n\n\"Sure, have a seat,\" she said.\n\n* * * * *\n\nJohn sat on his chair, watching as the strange storm came closer. He remembered always being fascinated by storms and he enjoyed watching this one come close, the lightning flashing with increasing ferocity.\n\nHoustonia sat behind him and watched the storm as well, but she wasn't fascinated by it at all. Something about this storm didn't sit well with her at all. Suddenly, the bedroom door opened and one of the scantily-clad women came inside, bowing as she approached Houstonia.\n\n\"Yes, what is it?\" Houstonia asked.\n\n\"My Queen, the corpuscles are on their way. They're in the storm clouds.\"\n\n\"Very well,\" Houstonia said. \"Sound battle stations. Prepare my steed.\"\n\n\"Yes, my Queen,\" the woman said, scurrying out of the room. Houstonia walked to John and placed a hand on his shoulder.\n\n\"They're coming,\" she said. \"In the storm. You need to take shelter.\" He looked at her, shocked. Surely, she didn't expect him to hide.\n\n\"I can't hide while you fight to protect me,\" he said. \"There's got to be something I can do.\" She looked at the incoming storm then back at him.\n\n\"Very well,\" she said. \"There is an armored defensive position out there on the northeastern bastion. You can man the weapon there. It works just like the weapon I showed you earlier.\"\n\n\"Okay, I think I can do that,\" he said. \"What are you going to do?\"\n\n\"I must prepare for battle. I will meet them up there, where I can engage them directly,\" she added, pointing to the sky.\n\n\"Be safe, please,\" he said. She smiled and kissed him on the lips.\n\n\"Don't worry, John Smith. I'll be just fine.\" With that, she turned and started to don her fighting attire. John left the room and found his way to the northeastern bastion. He looked at the mounted weapon to familiarize himself. It was larger than the pistol he was given, but looked to operate in the same way.\n\nHe looked and saw blobs of red already being launched at the cloud, so he decided to pitch in. Taking the weapon off safe, he saw a green indicator bar that seemed to suggest the weapon was fully charged and ready for use. He grabbed the handles and aimed the weapon at the cloud. Surely I can't miss this, he thought as he pressed the trigger.\n\nAs he held the trigger, blobs of red -- something -- shot from the barrel and headed for the cloud. He saw yellow explosions and small puffs of smoke where the red blobs had hit their targets. Like shooting fish in a barrel, he thought as he continued to press the trigger. He heard a screech and looked up to see Houstonia on the back of her giant winged steed, heading into the sky above the growing cloud.\n\n\"You go get 'em, girl,\" he said quietly. Suddenly, he saw green blobs fly past his position. Some of them came straight for him, but were stopped by what he thought was some kind of an invisible shield. \"Oh no, you did NOT shoot that green shit at me,\" he said. Then he realized he had heard that line before. But from where? He quickly realized he didn't have time to mull it over and pressed the trigger, firing into the cloud with everything he had.\n\nSoon, the sky was filled with flying red and green blobs and he could see the froggish corpuscles and their pterodactyl-like beasts falling from the cloud in great numbers. As the cloud came closer to the fortress, it split into four parts and began to surround the fortress.\n\n* * * * *\n\nAlan looked at Houston as the two of them sat and made small talk. He had never really thought of her as anything other than a good-looking woman -- something to be used as arm candy by her husband. Of course, he was impressed with her to a certain extent, having seen what she did to Roisin that first day. To the best of his knowledge, no one had ever been able to best the Irish woman in a one-on-one contest.\n\nAfter a few minutes of small talk, he decided to up the ante and checked his jacket pocket to make sure he still had the tablets. He did, so he made his move.\n\n\"Houston, would you like a bit of tea? My treat.\"\n\n\"That would be nice, Alan, thank you,\" she said. Watching him walk away, she noticed the tell-tale bulge in the back of his jacket and knew he had a weapon tucked into his belt.\n\nShe felt her phone buzz and pulled it out. There was a message from Roisin: \"DB has antidote. On way to you now.\" She sent a quick acknowledgment and put her phone away before Alan got back. She had a pretty good idea what the two of them had in mind and she hoped the backup assets were in place.\n\nA couple minutes later, Alan returned with two styrofoam cups of tea and handed one over to her, checking out her body as he did so. Damn, he thought, that's one bird I'm going to really enjoy eating. He watched as she took a sip of tea and wondered if the stuff he put in it acted as fast as he had been told.\n\nIt didn't take very long for Houston to realize that the tea Alan gave her had been spiked with something. Perhaps it was Ecstasy, perhaps it was something else. Fortunately, the pill she took earlier was doing its job.\n\nShe watched Alan to see if he was going to make a move or if he was waiting for his partner in crime. She noticed that he seemed to be watching her like a hawk. Perhaps, she thought, he's waiting to see when the drug will start to affect her.\n\nHe watched to see when the pill would take affect. He began to get a bit nervous after a while. She had consumed almost all of the tea but was still showing no indication that the Ecstasy was having an impact. Maybe, he thought, he should have used more than the two tablets he put in her drink. After a few minutes, the door opened and Derek came in, holding a syringe in one hand.\n\n\"I got it,\" he said.\n\n\"Good, go ahead and give it to him,\" Alan said.\n\n\"Maybe we should wait for the doctor,\" Houston told them. Alan shook his head.\n\n\"No worries, luv,\" he told her. \"Derek knows what he's doing. Don'tcha, mate?\"\n\n\"I know what I'm doing, don't worry you're sweet little head,\" Derek said as he began to insert the needle into John's IV.\n\n\"Once Derek's done, then we're gonna take care of both of you,\" Alan said with a wicked grin.\n\n\"What do you mean?\" Houston asked. Alan just laughed and Derek laughed with him. The door opened again and the room began to fill up as Roisin, Ross and a few other members of the team came into the room.\n\n\"What are you doing?\" Roisin asked.\n\n\"What does it look like?\" Alan asked. \"Derek got the antidote and he's giving it to John. That was the idea, wasn't it?\"\n\n\"Get away from him, Derek. Both of you stay clear of the patient,\" Roisin ordered.\n\n\"Or what?\" Alan asked. By now, Derek had already injected the antidote into John's IV and moved to one side. Alan had positioned himself between Houston and Roisin, mistakenly thinking Houston could do nothing to him at this point. Houston took the initiative and kicked Alan in the back of his legs, causing him to go down to his knees.\n\nDerek too the opportunity to run out of the room, prompting the others to take after him. Roisin was still in the room, but her attention was now on Derek's attempted escape. Houston saw Alan reach back and grab the pistol in his belt. She knew if she did nothing, someone could get hurt or killed. She remembered something John once showed her and hoped she had enough strength.\n\nWithout thinking, she grabbed Alan by the chin and the back of his head and quickly snapped his head to one side. She heard a sickening crunch and saw his arms go limp. She let go and watched as he fell forward, his neck having been snapped. Shocked, Roisin looked at her former colleague, his neck broken. Then she looked at Houston.\n\n\"Look at his hand,\" Houston said. Roisin looked where Houston indicated and saw the small, illegal, semiautomatic pistol. Realizing that Houston had probably saved her life, she looked at Houston, smiled and nodded her head.\n\n* * * * *\n\nJohn furiously fired his weapon at the dark red cloud, watching the corpuscles and their flying beasts fall to the ground. He looked at the indicator and saw it was nearing the bottom of the scale. He hoped he had enough ammunition to get through the battle.\n\nThe sky was now filled with red and green blobs as he and the other defenders fired into the red clouds that now surrounded the fortress, blocking out almost all of the light from the sun. He saw streams of fire in the sky and knew they were from Houstonia's winged steed.\n\nSuddenly, there was a brilliant flash of light in the sky and a long roll of thunder. A light rain began to fall and the cloud began to dissipate. As it did, the few remaining corpuscles turned and fled. Soon, the sky was clear and there were no more green blobs in the air. Seeing no need to continue fighting, he let loose of his weapon just as the last bar began to blink.\n\nA few minutes later, Houstonia landed and rushed to the bastion where John was located. He looked at her as she approached him, and he began to remember. The name Houston came to his mind and he remembered that she was his wife. But who was Houstonia, he asked himself. And why did she look so much like his wife?\n\nWhen Houstonia reached him, she put her hands on his shoulders and looked him in the eyes. Then she smiled.\n\n\"The antidote has been delivered, John Smith,\" she said. \"You are going to live.\" He looked back at her and noticed that she was becoming transparent. He knew he was leaving, almost as if waking up from a dream. But there was something he had to know.\n\n\"Who are you?\" he asked. \"Really?\" She smiled before she spoke.\n\n\"You know who I am, John,\" she said. \"Deep down in your soul, you've always known. I'm the girl of your dreams. No matter where you go, I'm with you. Here,\" she said, pointing to his heart, \"in your heart. And here,\" she added, pointing to his head, \"in your mind. I am always with you. And I will never leave you. Never. Farewell, my love.\"\n\n\"Your heart,\" he thought. Then it hit him like a slap to the back of the head. \"Urhart.\" Houstonia kissed him, full on his lips. And as she did, he noticed a change. The face became real and the hair was no longer white. He was now staring into the beautiful face of his one true love, his warrior princess. The true guardian protector of his heart -- Houston. She smiled as she kissed him.\n\nHe looked around and took in the scene in his room. He saw the tall man laying on the floor. Medics were examining him and Roisin was talking to someone on her phone. He looked at the IV tubes going into his arms and shook his head to clear his mind.\n\n\"What happened?\" he asked Houston.\n\n\"Oh, just the usual,\" she said. \"Some asshole tried to drug me so he and his buddy could fuck me while you watch. So I killed him. I broke his neck the way you taught me.\" John looked at her in shock.\n\n\"Apparently, when Houston says 'no,' she really means it, eh,\" Roisin said with a slight smile. Houston smiled as she looked at Roisin. John looked at the two of them and noticed something was different between them.\n\n\"It was either that or let him pull his firearm and kill Roisin, or me. And I wasn't about to do that,\" Houston said. \"So I reacted, the way you taught me.\"\n\n\"I see. So, what's the deal between you two?\" John asked, looking from one to the other. \"Have you two buried the hatchet? Are you best buds or something now?\"\n\n\"I suppose you could say we've become mates,\" Roisin said. \"Especially now that she saved my life.\"\n\n\"Mates,\" John said. \"I see. So what's going on here?\"\n\n\"Your boss explained the whole situation to us last night,\" Roisin said. \"In very graphic detail.\"\n\n\"My boss?\" John asked. \"Alpha One is here? In London?\"\n\n\"Yes,\" Houston said. \"I followed Company protocol and informed him after you were shot. He grabbed the first flight to London.\"\n\n\"Where is he now?\" John asked. Just then, they heard Regis' voice booming in the hallway. A few seconds later, he entered the room. A couple of orderlies came in with him to collect Alan's body. By now, the investigators with Roisin had taken their photos and collected their evidence.\n\n\"Well, about Goddamn time you woke up, Smith,\" he said. \"Or were you planning to sleep the rest of your time here and make Houston do all the heavy lifting,\" he asked, pointing to Alan's dead body.\n\n\"Good to see you too, boss,\" John said. \"So, what's going on?\"\n\n\"What's going on is the case is being resolved,\" Regis said. He turned to Roisin. \"I hope your people can manage to collar Brown before he decides to climb Big Ben.\"\n\n\"As do I. They should be able to get him before he leaves the hospital,\" she said. Regis nodded his head.\n\n\"I hope the hell so,\" he said. He looked at Houston.\n\n\"Are you okay?\" he asked. She nodded her head.\n\n\"I am now, boss, thank you,\" she said.\n\n\"Well, John, just so you know, Roisin and her team have been fully briefed on the whole situation. It seems their initial briefing left out a few details. And I'd like to find out how it is you managed to get two moles on your crew without you knowing about it,\" he added, looking at Roisin.\n\n\"I would too, sir,\" she said. \"But that's an internal issue.\"\n\n\"Yes, it is,\" Regis said. \"But I would still like to know when you find out.\" She smiled and nodded her head. Just then, a doctor and a couple of nurses came into the room. The doctor went to John and began examining him. He shook his head as he tried to figure out what happened to his patient.\n\n\"Well, doc?\" Regis asked. \"Can he go now?\"\n\n\"I'd like to run some tests first, make sure there's no lasting brain damage, if it's all the same to you,\" the doctor said.\n\n\"Let the NIH people do their job,\" Roisin said. \"We can wait outside the room while they work.\" Regis nodded his head as Houston walked to John's side. She gave him a kiss as the medical pros went over their charts.\n\n\"I'll be right outside sweetie,\" she said. \"Don't worry, I'll be right back. I love you so much.\"\n\n\"I love you too,\" he said, returning her kiss. Three hours later, the doctor called everyone back into the room and gave them the news.\n\n\"I cannot explain it,\" he said. \"Whatever it was that was injected into Mr. Smith's IV seems to have worked. I can't find any trace of the original compound, and there appears to be no lasting damage.\"\n\n\"So John can leave now?\" Houston asked.\n\n\"I see no medical reason for him to remain. He can leave after we complete his discharge papers,\" the doctor said. \"I think it would be best if he refrained from any strenuous activity for the next day or two. And if you see any signs of a relapse, bring him back immediately.\"\n\n\"Sounds good, doctor. Thank you for everything,\" Houston said. Both Roisin and Regis were talking on their cell phones, so she pulled the privacy curtain and helped John get dressed. \"Are you feeling alright?\" she asked as he put his clothes on.\n\n\"Yeah,\" he said. \"I got a bit of a headache, and I feel like I just finished a marathon. Other than that, I'm alright.\"\n\n\"Good,\" she said. \"I was so worried about you. The doctor thought there could be brain damage. He said if you were out much longer it might be irreversible.\"\n\n\"Guess it's a good thing Derek came with the antidote when he did,\" John said. \"How are you holding up? You don't look like you've gotten much sleep. Have you been staying here the whole time?\"\n\n\"Of course,\" she said. \"I was scared for you and I wasn't about to let you out of my sight.\"\n\n\"Well, when we get outta here, I want to get something to eat. I'm starving,\" John said.\n\n\"Of course,\" Houston said. Seeing that John was dressed, she pulled the curtain back.\n\n\"Are you two ready to go now?\" Regis asked.\n\n\"We are, boss,\" John said. They left the hospital and got into Roisin's car. As they made their way to the Ham Yard Hotel where John and Houston were staying, they discussed the situation.\n\n\"Derek has been apprehended by Metro Police,\" Roisin said. \"They caught him just as he was leaving the building. He's been charged with the murder of Clive Barker and conspiracy to do great bodily harm to the two of you. I think they're looking at some other charges, but that's not my concern. By the way, Houston, there's a DCI Tom Black from Metro PD who may want to speak with you about Alan. I explained the situation to him, but I think he wants to make sure all his loose ends are sorted out.\"\n\n\"Thanks,\" Houston said. \"Did you tell him Alan slipped on a bar of soap?\" Roisin laughed.\n\n\"I hadn't thought of that,\" she said. \"Why? Is that what you're going to tell him?\"\n\n\"Maybe, I don't know yet,\" Houston shot back.\n\n\"What about the guy who was with Barker when I got shot?\" John asked. \"Any word on him?\"\n\n\"Wait, there was another man with Clive when you got shot?\" Roisin asked.\n\n\"Yes, didn't you see him?\"\n\n\"No, you and Houston were in front of me and I didn't see him,\" Roisin said. \"Shit.\"\n\n\"That's alright, we'll catch up to him sooner or later,\" John said. \"Chances are, he's long gone by now anyway.\"\n\n\"Didn't you get a look at him, John?\" Regis asked.\n\n\"No, I didn't. They were both wearing face coverings,\" John said.\n\n\"Figures,\" Regis said. \"By the way, got word that the briefing went well. The President and the Prime Minister met afterward. The head of the Task Force will give me a briefing later.\"\n\n\"Ah, we're here,\" Roisin said as she pulled in front of the hotel. \"I'll pick you up at 7:00 in the morning.\"\n\n\"Sounds good, Roisin,\" Houston said. \"Thanks.\" They carried their things to their room and put them away.\n\n\"I don't know about you, but I'm starving,\" John said. \"I really feel the need for some meat.\"",
        "\"I could use some meat myself, but not the kind they serve in the restaurant,\" Houston said playfully.\n\n\"Feeling a bit naughty, are we?\" John asked.\n\n\"Well, you were out of it for what, two days? A girl has needs, you know.\"\n\n\"Tell you what, let's go grab a bite to eat and come back up for some playtime,\" John said.\n\n\"You're on,\" she said, kissing her husband on the lips. They went to the restaurant where John ordered a 10 ounce dry-aged ribeye steak, new potatoes and spinach. Houston ordered some organic salmon fish cake and a watercress salad. It set their budget back a bit, but John figured he owed it to himself since he hadn't eaten any real food in two days.\n\nAfterward, they went back to their room where they wasted no time making frantic love to each other. They fell asleep in each other's arms and met Roisin in front of the hotel the next morning at 7:00.\n\nJohn was met with applause when he walked into the team room at MI6 headquarters. He shook hands with Ross and the other members of Roisin's crew, then settled in to catch himself up on everything that happened since he was shot.\n\nA couple hours later, Regis and the Home Secretary, Brent Cavanaugh, entered the room and got everyone's attention.\n\n\"We just received word that there's been an incident involving the President at Fort Apache,\" Brent said. \"As far as we know, the PM is okay, however, one of our people -- Ian McWhorter -- has been arrested along with several others.\" He turned to Regis, who picked up the briefing from there.\n\n\"I've spoken with the head of the HomeFront Security Task Force, and have been told that the Speaker of the House, the current First Lady and others have been arrested. The President suffered only minor defensive injuries, but I'm told he's doing okay. John, I'd like you to reach out to our liaison officer and get as much as you can from him,\" Regis said.\n\n\"Will do, boss,\" John said.\n\n\"As you can imagine, there's been a media blackout on this,\" Regis added. \"Aside from the main players at Fort Apache, you are the only others who know about this. I'm told the president will address the nation later, perhaps today or tomorrow.\"\n\nAfter he finished, everyone turned back to their work. John pulled out his secure phone and called Ryan Ogilvie, Alpha Sector's new liaison officer assigned to the Task Force. Ryan picked up after the second ring.\n\n\"John, good to hear from you,\" he said. \"How are you feeling? I heard you got shot.\"\n\n\"I'm doing well, Ryan, thanks for asking,\" John told him. \"What's your sitrep?\"\n\n\"Security was already tight as a drum here, but it's gotten even tighter, if you can believe it. There's armed Marines and Secret Service everywhere. The president is okay, though. He and the prime minister have been meeting for a good while now. Ian McWhorter has been arrested, and the State Department is working to revoke his diplomatic immunity. The First Lady and the Speaker has been arrested as well. Some others are going down too. It's gonna be a bloodbath in Washington for a while, I'm afraid.\"\n\n\"Talk about draining a swamp,\" John said sarcastically. Ryan chuckled at that.\n\n\"By the way, I heard from the medical researchers,\" Ryan said. \"They all agree the stuff you got hit with was a derivative of the stuff a Cecelia Greene used against her victims. I hope that makes sense to you.\"\n\n\"It does,\" John said. \"I'll be sure to pass it on. Thanks. Keep me in the loop if you would, please.\"\n\n\"Got it,\" Ryan said as they ended the call. He looked and saw Regis and Brent deep in conversation and decided to wait until they were finished. He didn't have long to wait as the two of them walked to his desk and motioned for Houston to join them.\n\n\"What's up, boss?\" Houston asked.\n\n\"There's going to be a change in assignments,\" Regis said. \"The president and Prime Minister Brown have agreed to extending the exchange agreement, at least for the next three years. The Home Secretary and I agree the two of you would be the best choice.\"\n\n\"You mean, you want us to stay here for the next three years?\" John asked.\n\n\"Unless there's someplace else you'd rather be,\" Regis said. John and Houston shook their heads.\n\n\"No, not at all,\" John said.\n\n\"Good,\" Regis said. \"I thought you'd see it my way. Once you've completed your after-action reports here, I want the two of you to return Stateside and get your household in order. In the meantime, I'll get your orders cut and start the process for your visas and housing allowances. Any questions?\"\n\n\"No, sir, none,\" Houston said. Regis nodded his head.\n\n\"It's settled, then,\" he said. \"Look on the bright side. You two will get to see Europe and you may learn something from your British counterparts.\"\n\n\"By the way, boss, I spoke with Ryan,\" John said. \"He pretty much told me what we already knew, and he said the medical researchers believe I was hit with a derivative of what Cecelia used on her victims at Penrith.\"\n\n\"Damn,\" Regis said. \"One more loose end to clean up.\" They continued working until about 6:00 pm, when Roisin told them everyone was heading to a nearby pub for a drink.\n\n\"Want to join us?\" she asked.\n\n\"Sure, why not,\" John said. \"Since we're going to be here for a few years, might as well start getting familiar with the local customs.\"\n\n\"What? You're going to stay here?\" she asked.\n\n\"Yeah, Regis said we'll be here for the next three years,\" John said.\n\n\"So you're going to need to find a place to live, then, aren't you?\"\n\n\"Well, I don't plan on renting a room at the hotel for three years,\" John said.\n\n\"Well, it just so happens there's a flat in my building that just became available. If you're interested, that is.\"\n\n\"Yeah, we're interested,\" Houston said.\n\n\"Good, I just happen to know the agent handling it,\" Roisin said. \"I'll see if she can show it to you in the next day or so.\"\n\n\"Sounds good,\" John said.\n\n\"Come on, then, let's go,\" Roisin said. They went to the pub in Roisin's car and let her order for them. Roisin and the others seemed excited at the prospect of John and Houston spending the next few years with them. One of her colleagues, Mike McGregor, came by and tapped John on the shoulder.\n\n\"Care for a game of darts, mate?\" he asked. John looked at the dart board and figured, what the hell.\n\n\"Sure, if you don't mind showing me how to play,\" he said.\n\n\"Watch him, John, he's a bloody shark,\" Roisin shouted at John. Mike laughed and patted John on the shoulder.\n\n\"Don't listen to her,\" he said. \"I'll be gentle, promise.\" John smiled and listened as Mike told him the rules of the game. Houston watched her husband and smiled. She liked seeing him enjoy himself.\n\n\"He seems happy,\" Roisin said.\n\n\"Yes, it's good to see him enjoy himself,\" Houston said.\n\n\"Are you excited about your new assignment?\" Roisin asked her.\n\n\"I am,\" Houston told her. \"I know John feels the same way. We both like new challenges.\"\n\n\"You think maybe you can show me that thing you did with your hands on your first day here?\" Roisin asked.\n\n\"Oh that?\" Houston asked. \"Sure. It's easy. I'll be happy to show you.\" They heard loud laughter coming from the area of the dart board and looked. John and Mike were thoroughly enjoying themselves. Probably swapping war stories, Houston thought to herself. Roisin smiled as she shook her head.\n\n\"Tell me, was John in the military?\" she asked Houston.\n\n\"Spent six years in the Marine Corps,\" Houston said. Houston nodded her head.\n\n\"That explains it,\" she said. \"Mike was in the Royal Marines for a while. No wonder they get along so well.\" Houston chuckled at that. A few minutes later, Regis and Brent walked up to them. Regis signaled for John and Mike to join them. They put the darts away and walked over to where the other team members were gathering.\n\n\"Listen John and Houston, I have to get going. My flight leaves Heathrow in a bit and I need to get back to the States. I expect one hell of an after action report from you two. I'll get everything started on your transfer and it should be well under way by the time you get back,\" he said. He turned to Brent and the two of them shook hands.\n\n\"Mr. Secretary, it's been a pleasure,\" he said. \"Be sure to keep an eye on these two, though,\" he added with a smile, nodding at John and Houston. Everyone laughed, including John and Houston.\n\n\"I certainly will,\" Brent said. \"Before you leave, though, I have one small bit of business.\" He pulled an envelope out of his jacket and handed it to Houston. \"In the interest of fostering improved Anglo-American relations, I would like to offer a formal apology to the two of you for the manner in which you were treated. It was unprofessional and uncalled for. And I assure you it will never happen again.\"\n\n\"Thank you, Mr. Secretary,\" John said, extending a hand. \"We accept your apology and we look forward to working with all of you. Besides, Mike owes me a rematch.\" They all laughed at that.\n\n\"You'll have plenty of opportunities for that,\" Brent said with a smile. \"But watch him, I hear he's a shark.\" Mike feigned outrage at that remark to everyone's delight. Regis waved and walked out the door to catch a cab. Just then, Roisin's phone buzzed and she looked at the screen.\n\n\"Lisa, the agent I told you about, says she is available to show the flat tomorrow at 9:00 am,\" she said. \"If you want, I'll pick you up at 8:30 and we can meet her together.\"\n\n\"Sounds like a plan,\" John said. After drinking another beer, John and Houston said their goodbyes and left with Roisin. A bit later, they were at the hotel and went into the elevator. Another person got into the elevator just as the doors were about to close.\n\nJohn saw what looked like the butt of a pistol in a shoulder harness under the woman's jacket. Watching through his peripheral vision, he thought the woman looked a bit nervous and saw her eyeing the two of them. He leaned into Houston.\n\n\"Call Roisin,\" he whispered as quietly as he could. \"Get her back here. Now.\" Houston nodded her head and pulled out her phone. She called Roisin's cell and hoped she would answer quickly.\n\n\"Hey girlfriend,\" Houston said loudly, trying to sound like a giggly college girl talking to her BFF. \"Would you mind coming back to the hotel for a bit?\"\n\n\"Girfriend? Is everything alright?\" Roisin asked.\n\n\"No, it's just that something came up and we really need to talk to you,\" Houston bubbled. Roisin got the clue and quickly turned around.\n\n\"On my way,\" she said.\n\n\"Oh that's wonderful,\" Houston said loudly. \"See you! Bye!\" She ended the call just as the elevator door opened. John leaned into Houston one more time.\n\n\"Record,\" he whispered. She nodded her head and started the video camera on her phone. He guided her out first and turned to the other woman as she reached for the pistol. He struck her in the throat just as she pulled the pistol, causing her to drop the weapon. He kicked it into the hallway where it bounced against the opposing wall.\n\nAngry, the woman turned to strike John with her fists, but he was too fast for her. In seconds, she was on the floor with his knee on her throat. She pounded on his leg as she gasped for air.\n\n\"I... can't... breathe,\" she croaked.\n\n\"Good,\" John growled. \"Who the fuck are you and why did you try to shoot us?\" He looked at her face and something about her seemed a bit familiar. It was her eyes. He had seen them before. It was the day he was shot. \"You were there. You and your accomplice shot me, didn't you?\"\n\n\"Only because your big arse was in the way,\" she hissed, her face turning red. John let up with his knee enough to let her breathe.\n\n\"What?\" John asked.\n\n\"You were never the target,\" she said before glancing at Houston. John understood what the woman was saying, but didn't know why Houston would be a target.\n\n\"Do you work for Ian McWhorter?\" he asked her. She laughed.\n\n\"That knob?\" she asked. \"Hah! He works for me.\"\n\n\"Not any more,\" John said. \"He's in custody.\" Her eyes grew wide.\n\n\"That's not true,\" she said. \"He's too smart for your lot.\"\n\n\"Apparently not,\" John said. Just then, another elevator door opened and Roisin came out. She looked at the scene before her as she pulled a pair of latex gloves from her pocket. She picked up the weapon and looked it over. Opening the breech, she saw the dart inside and pulled it out.\n\nShe looked at the woman on the floor and put the weapon down before grabbing a pair of handcuffs. The woman under John's knee shook her head and looked at John.\n\n\"Just wait,\" she growled. \"The new way is coming. And when it does, your life will never be the same.\"\n\n\"What do you mean, new way?\" John asked. She laughed, then bit down on something in her mouth. Seconds later, a white foam appeared on her lips and she died with a gasp. Roisin put two fingers to the woman's neck and shook her head.\n\n\"She's gone,\" Roisin said. She grabbed the woman's purse and opened it. Looking inside, she found two more darts and a small leather wallet. She opened it and pulled out what looked like a driver's license. \"Susan Harrison,\" she read. \"Does that name sound familiar to you?\"\n\n\"No, not at all,\" John said. \"But I'm certain she was with Barker the day I was shot.\" He turned to Houston. \"Did you get all that?\" Houston nodded her head.\n\n\"I got it,\" she said. By then, Roisin had pulled her phone out and was calling for an ambulance.\n\n\"Send it to Roisin, please,\" John said. Houston nodded her head and forwarded the video to Roisin. After calling for an ambulance, Roisin got back up and looked at John and Houston.\n\n\"You know Metro PD will probably get involved,\" she said. \"You two go to your room, I'll handle the police. Don't go anywhere. I'll pick you up in the morning. I'll look at that video tonight and see what I can find.\"\n\nJohn and Houston went to their room and ordered a meal to be delivered to them. They ate mostly in silence. John went through everything he heard Susan tell him in his mind. Why would they be targeting Houston? They went to bed and held each other. Sex was the last thing on their minds.\n\nThe next morning, they heard a knock on the door. John looked through the peephole and saw a sandy-haired older man in a suit and an overcoat. He had the look of a policeman about him, so John cracked open the door.\n\n\"Yes,\" he said. The man held up a set of credentials.\n\n\"Detective Chief Inspector Tom Black, Metro PD,\" he said. \"Are you John Smith?\"\n\n\"Yes, I am,\" John said.\n\n\"May I come inside, please,\" Tom asked politely. John nodded his head and opened the door to let the policeman inside.\n\n\"Who is it, dear?\" Houston called from the bathroom.\n\n\"Police,\" John said. \"You may want to come out if you're decent.\"\n\n\"Be right there,\" she said. John turned back to Tom.\n\n\"So, what can we do for London's finest?\" he asked. Tom gave a thin smile before speaking.\n\n\"Just looking for some answers,\" Tom said. \"Are you acquainted with a Susan Harrison?\"\n\n\"Afraid not, Inspector,\" John said. \"Should I be?\"\n\n\"She's the one who pulled a weapon on you at the elevator just down the hall,\" Tom said.\n\n\"Oh, her,\" John said. \"I didn't know her name at the time. She didn't introduce herself before she pulled her weapon. Why?\"\n\n\"I see. Can you explain why an unemployed biochemist would go after two American tourists?\" Tom asked. Just then, Houston came into the room.\n\n\"No, I have no idea,\" John said. \"Can you explain that, dear?\" he asked, looking at Houston. She shook her head.\n\n\"I can't explain it, either,\" she said. Tom looked from Houston to John and then back to Houston, trying to get a feel for the two Americans. Odd, he thought. They seem to be taking all this rather well. Too well, he thought.\n\n\"I understand you were shot and spent some time in hospital,\" Tom said, looking at John. John nodded his head.\n\n\"Yes, but I'm much better now, as you can see, thanks to your NIH doctors. Fortunately, the people who shot me didn't use real bullets, or I probably would've died.\"\n\n\"Right,\" Tom said, making notes in his little book. He looked back at them and thought for a bit before speaking again. \"It seems to me that people have a habit of dying around you two. I understand it was all in self-defense, but two people in two days? One with a broken neck, and the other from an apparent poisoning. I have a very difficult time processing all that.\"\n\n\"What's that old saying, Inspector? Shit happens?\" John asked. Tom snorted as he nodded his head.\n\n\"So I've heard,\" he said. \"How long are the two of you going to be in London?\"\n\n\"I don't know, Inspector,\" John said. \"We're wrapping up some business for the company we work for. Maybe two days. Three at most.\"\n\n\"Well, hopefully, I won't see two or three more dead bodies,\" Tom said as he put his book away.\n\n\"I hope not as well,\" John said. Tom looked at them for a few moments, then gave the \"I'll be watching you\" sign, pointing to his own eyes, then at John and Houston.\n\n\"I'll be keeping an eye on you two,\" he said. \"I may have some questions for you later.\"\n\n\"Of course, Inspector,\" John said. \"Whatever we can do to help.\" Tom smiled grimly as he nodded his head, then left the room. John looked at Houston before saying anything.\n\n\"That went well,\" he said. An hour later, they met Roisin outside the hotel.\n\n\"I hear you got a visitor this morning,\" Roisin said as she drove them to view the flat.\n\n\"Yes, DCI Black came by,\" John said. \"I don't think we have anything to be worried about, but I don't like the idea of the police looking over our shoulder either.\"\n\n\"Neither do I, John, but they're a valuable ally and could come in very handy when the time comes,\" Roisin said. \"I did some research on Harrison, by the way.\"\n\n\"What did you find?\" Houston asked.\n\n\"She's an unemployed biochemist,\" Roisin said. \"She worked for a company up north until about a year ago, then mysteriously quit. No one knew where she was off to. The address on her license turned out to be a completely empty flat. No furniture, nothing. Not even a fingerprint or a strand of hair.\"\n\n\"Obviously professionally cleaned,\" John said.\n\n\"I agree,\" Roisin said. \"The only family we could locate was a younger sister in her second year at Uni. She's studying government and political science. Her name is Victoria. Mike is interviewing her this morning. We're here,\" she added as she pulled into the parking lot of a large apartment building.\n\nThey met a smartly-dressed blonde woman in the lobby of the building. Roisin gave her a hug and introduced her to John and Houston.\n\n\"John, Houston, this is Lisa Simmons,\" she said. \"Lisa, John and Houston Smith.\" John and Houston shook Lisa's hand and followed her into the elevator.\n\n\"Are you two ex-pats? I deal with a lot of those in my line of work.\"\n\n\"No,\" John said. \"The company we work for has assigned us to work out of London for the next three years.\"\n\n\"Wonderful,\" Lisa said. \"Well, as you probably already know, things are a bit different here than in the States. I'll be more than happy to help acclimate you if you like.\"\n\n\"That would be nice, thanks,\" Houston said. They went into the flat and looked around. John and Houston liked the open design of the place. It seemed to be more spacious than they thought. It also had a nice view of the city and the Thames River.\n\nThey walked around the place and took note of the large bedroom and the spacious bathroom, which was obviously designed to accommodate two people at a time. John looked at Houston, and she nodded her head in approval.\n\n\"Does the furniture come with the place?\" John asked.\n\n\"It can, if you wish,\" she said. \"It will increase the rate, though.\"\n\n\"That's fine, as long as it's reasonable,\" he said. \"It would sure save us the trouble of shipping all our stuff here.\"\n\n\"Yes, it would,\" Houston said.\n\n\"So, what's the damage?\" John asked. He thought he was going to pass out when she told him the price, but Roisin spoke up.",
        "\"It's really quite reasonable for this area, John,\" she said. He did a bit of math in his head. If they rented their place out while they were gone, they could cover the mortgage and the taxes on it. Plus, the housing and cost-of-living allowances they would receive from Alpha Sector would more than cover the cost of this place.\n\n\"What do you think?\" he asked Houston.\n\n\"I really like this place,\" she said. He nodded his head, then turned to Lisa.\n\n\"We'll take it,\" he said.\n\n\"Excellent,\" Lisa said with a smile. They spent the next hour hashing out the details. John paid the security deposit with his Visa debit card and Lisa finalized the paperwork online. \"Don't forget to get me a copy of your work visa,\" she told him. \"We'll definitely need that.\" When they finished, she smiled and shook their hands. \"Welcome to London,\" she said with a cheery smile.\n\nFrom there, they went to the team room at MI6 headquarters. Mike was waiting for them when they arrived.\n\n\"I spoke to Victoria Harrison,\" he said. \"She claims she has no idea what her sister was up to. Said she hadn't spoken to her much at all since their parents died a year and a half ago.\"\n\n\"Any idea what Susan meant by a 'new way?'\" John asked. Mike shook his head.\n\n\"No idea whatsoever,\" he said. \"I've looked it up and didn't see anything. Maybe you can find something.\"\n\n\"I'll see what I can find,\" John said. Just then, Ross came into the room and turned on the large television mounted on the wall.\n\n\"Everyone, you need to see this,\" he announced. The team stopped what they were doing and watched the television.\n\n\"Sky News has just learned that a government official with the Home Secretary's office was arrested along with high-ranking members of the United States government. The arrests took place during a high-level summit between Prime Minister Brown and President Pierce. For more, we turn to Fox News,\" the anchor said. The scene shifted to an American reporter.\n\n\"Multiple arrests of highly-placed figures were carried out at a government base in the Midwest. Among those arrested were First Lady Barbara Pierce, House Speaker Judy Chastain and at least two staffers. One of those staffers was reportedly arrested for what officials said was the alleged murder of former President Lincoln Skaggs.\n\n\"A British diplomat was also taken into custody. According to reports, the diplomat was allegedly involved in a long-term sexual relationship with the First Lady. More to come as details of this are made available. President Pierce is set to address the nation soon. Stay tuned,\" the anchor said.\n\n\"Damn,\" John said. As they watched, the scene shifted yet again, this time to the Oval Office. President George Pierce sat behind his desk, looking resolute. John noticed that he appeared to be in some pain, but was managing to hide it well.\n\n\"My fellow Americans,\" he began. \"You've probably heard by now that prominent figures -- including the First Lady -- have been arrested. I won't keep you in suspense. Those reports are true. It has come to our attention that there has been an ongoing international plot to overthrow the duly-elected government of the United States by a group of individuals seeking to fundamentally transform humanity in a way that defies all logic or reason.\n\n\"If this plot had been successful, not only would this government have been overthrown, but the special relationship between this country and one of our closest allies would have been irrevocably damaged. I am happy to say that plot has been stopped in its tracks.\" He stopped reading the teleprompter, took off his glasses and pushed his papers aside.\n\n\"Please allow me to speak heart-to-heart with you for a moment. I'm just a simple, plain-spoken man who says what he means and means what he says. I grew up on my father's farm in Idaho, played football in high school and college. Served in the Army for a while, then went to Boise to serve as a state representative. From there, I went to the state Senate, then came here to Washington to serve in the House and later in the Senate.\n\n\"I was honored when Lincoln Skaggs asked me to be his running mate six years ago, and I swore I would work to bring decency and integrity to this administration. I'm here now because someone murdered the former president. You'll learn more about that in due course.\n\n\"You may also have heard that the First Lady -- Barbara Pierce -- has been involved in a long-term affair. That report, unfortunately, is also true. I can't begin to describe how I feel about that right now. I met Barbara in high school, married her out of college and raised two sons with her. Normally, I would have divorced her, but thanks to events out of my control, I was unable to. You'll learn about that in due course as well.\n\n\"We're not going to agree on everything, but as my former constituents in Idaho can tell you, I'm ready to calmly discuss any disagreement with anyone, anywhere and any time. But one thing I think we can all agree on is this -- we are a nation of laws. While I'm president, know this. No one, not even the First Lady or the Speaker of the House, is above the law.\n\n\"I fully intend to finish Lincoln Skaggs' second term as spelled out in the Constitution. I may decide to run for another term, but right now, I'd just as soon go back to the family farm and retire. I had hoped to spend those years with Barbara, but that's not going to happen. I'll let you know when I've made that decision.\n\n\"Until then, may God bless you, and may God bless these United States of America and her allies. Good night,\" he said as the screen faded to black, followed by a panel of talking heads intent on telling their audience what they had just heard and what it really meant. Ross turned the television off. The room was buzzing with talk. John put his head in his hands.\n\n\"Are you all right, mate?\" Mike asked him. He nodded his head.\n\n\"Yeah, I'll be okay, Mike, thanks for asking,\" John said. Mike patted his shoulder and walked off. Ross came over to them.\n\n\"Well, it looks like everything Regis told us turned out to be true,\" he said. \"We've got our work cut out for us.\"\n\n\"That's putting it mildly, Ross,\" John said. \"I think we're going to be hearing some pretty strange stories over the next few weeks and months.\"\n\n\"I think you're right,\" Ross said.\n\n* * * * *\n\nThat night, as John and Houston lay in bed, she rolled over and looked at her husband. He felt her turn and looked into her face. He felt so lucky to have her by his side.\n\n\"John, can we talk for a couple minutes?\"\n\n\"Yeah, sure. What's on your mind?\"\n\n\"I was just wondering... You know, I watched you when you were in the hospital. I know you were out of it, but it looked to me like you were having a hell of a dream. Do you remember anything from that?\" He nodded his head slowly.\n\n\"Yeah, I do,\" he said. \"Why?\"\n\n\"Would you mind telling me about it?\" she asked. \"Whatever was going on in your head, it just seemed to be so intense, the way you were thrashing around.\" He thought for a bit before answering. He remembered everything, in vivid detail. But he wasn't sure how she would react to what he had to say. He decided the best approach would be the truth. It might cause a fight, but at least he could look at himself and honestly say he never lied to her.\n\n\"Well,\" he said. \"I woke up inside what looked to me like an animated cartoon. It was a lot like that Heavy Metal movie. Except I was the only real person or thing there. I couldn't remember anything. I didn't even know who I was. Then I came under attack. I thought I was gonna die. Then you came along.\"\n\n\"Me?\" Houston asked.\n\n\"Well, a version of you,\" he said. \"You remember that costume you made after the Legstrom thing?\"\n\n\"Yeah?\" she asked tentatively.\n\n\"That's what you were wearing. You carried a flaming sword and you rode this giant winged creature that wore armor.\"\n\n\"And I saved you from whatever it was that was attacking you?\" she asked.\n\n\"Something like that,\" John said. \"And the things attacking me were called corpuscles. Then you came over to me and said, 'come with me if you want to live, John Smith.' So I followed you and we rode to your fortress.\"\n\n\"Oh come on,\" she said.\n\n\"No, it's true. You told me your name was Houstonia and you were the Queen Protector of the realm of Urhart. You fed me, helped me take a bath, then, uh, made love to me. Said you were there to see to all of my needs.\"\n\n\"Wait, wait,\" she said. \"Are you telling me that you had sex with a Heavy Metal cartoon version of me?\"\n\n\"Uh, yeah,\" he said. \"Are you mad?\"\n\n\"Mad?\" she asked. \"I guess I should be, but I'm not. Not really. At least it was me and not Roisin or some other woman. And I now know what it was that got you all excited while you were out.\"\n\n\"You mean...\" John began.\n\n\"Yeah, you got hard,\" she said. \"So, I decided to give you some relief.\"\n\n\"What?\" John asked. \"You actually had sex with me in my hospital bed?\"\n\n\"I, uh, gave you a blowjob. It was kinda wicked, but I felt like I had to do it,\" she said.\n\n\"You naughty girl,\" he said, tickling her.\n\n\"ME? Naughty? You were the one having sex with a cartoon version of your wife,\" she said.\n\n\"Right before I woke up, I remember asking who you really were,\" John said. \"You told me I already knew, deep in my heart. And you were right. You really are the girl of my dreams and the guardian of my heart, you know that?\"\n\n\"Only because I love you with all my heart, John Smith,\" she said as she climbed on top of him. \"I can't live without you. And right now, I need you to make love to me.\" He smiled as he put his hands on the soft flesh of her buttocks.\n\n\"As you wish, my queen,\" he said.\n\n\"Oh, wait,\" she said, sitting up. \"There's something I need to do.\"\n\n\"What's that?\" he asked as she grabbed her phone. He watched her move her fingers over the screen, then he heard the strains of a very familiar song.\n\nIt's your one way ticket to midnight<br >Call it Heavy Metal<br >Higher than high, feelin' just right<br >Call it Heavy Metal\n\n* * * * *\n\nEpilogue:\n\nJohn and Houston finished their after-action reports and returned to the States to prepare for their three-year assignment to London. Roisin said they should prepare for a \"right knees-up\" when they returned.\n\nThey spent two weeks getting everything ready. And it was a very busy two weeks. They put nearly all of their belongings into storage at Alpha Sector's headquarters and shipped the rest to London. Roisin promised to make sure everything would be delivered to their flat. Then they contracted with a property management company to rent the house out for at least three years.\n\nThe DOJ investigation of the incident had just begun and already, some fairly salacious details had managed to get leaked to the press. John knew this was only the beginning and a part of him was glad he and Houston would be out of the country when the full scope of what happened became public knowledge.\n\nDiplomats on both sides of the Atlantic were also arguing over Ian McWhorter's fate. Now that he had been stripped of his diplomatic immunity, he was facing serious charges in both the US and the UK.\n\nA week after returning, John and Houston got their visas and emailed copies to Lisa as promised. Finally, everything was either packed away or shipped to London, and the two of them were in Regis' office saying their farewells.\n\n\"Not gonna be the same without the two of you around here to be a pain in my ass, you know that,\" Regis asked sarcastically. John laughed at that.\n\n\"Well, I promise to be a pain in your ass from afar, how's that, boss?\" he asked. Regis laughed in response.\n\n\"I don't doubt that you will be, son,\" he said. \"Seriously, John, I want to see sitreps every couple weeks at a minimum. You hear me?\"\n\n\"Got it boss,\" John said.\n\n\"So, what's your take on all this?\" Regis asked. \"What's your gut telling you?\"\n\n\"My gut's telling me we've just scratched the tip of the iceberg,\" John said. \"There's so many unanswered questions. I can't explain it, but I get the feeling things are gonna get... interesting.\"\n\n\"My gut's telling me the same thing, John,\" Regis said. \"And I think Oscar and the folks over at the Task Force are feeling it as well. Keep your eyes and ears open over there, John. That sign at our entrance says Alpha Sector is the first line of defense. And that makes you two the tip of Alpha Sector's spear, so to speak. We're all counting on you.\"\n\n\"I understand, boss,\" John said.\n\n\"Well, enough of this,\" Regis said. \"Let's get you two off to your new home. Good luck, John,\" he added, shaking John's hand. Then he turned to Houston. \"And good luck to you as well,\" he said, giving her a fatherly hug. \"You look after him, you hear me?\" he asked, pointing at John. Houston smiled.\n\n\"Don't worry boss,\" she said. \"I've got his six.\" Regis smiled at that.\n\n* * * * *\n\nSeveral hours later, as the plane descended into Heathrow airport, John looked out the window at the city below. This would be their home base for the next three years -- at least. He looked forward to the challenge and the prospect of meeting and making new friends.\n\nBut he also knew something terrible was brewing on the horizon. He just didn't know what it was, exactly. But he did know the next few years would prove to be... interesting.\n\n* * * * *\n\nNote: Victoria Harrison's rise to power is written about in \".\" Stay tuned for more adventures in the lives of John and Houston Smith. And remember, this is fiction, which means it's not real..."
    ],
    "authorname": "saddletramp1956",
    "tags": [
        "houston",
        "dream",
        "mmas",
        "london",
        "husband"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/houston-the-girl-of-his-dreams-pt-02"
}