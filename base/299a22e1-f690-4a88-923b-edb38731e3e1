{
    "title": "The Flight Before Christmas Ch. 03",
    "pages": [
        "December 24, 2017\n\nI attached the tow-bar to the Cirrus's nose-gear and pulled the plane, on foot, through the dormant grass to a spot behind the house. It took a surprising amount of effort compared to moving one around on level concrete, but I felt happier when I figured it was likely the last time I'd ever touch it.\n\nI noted a Seward County Sheriff's SUV a quarter-mile down the road, and I half expected Farber to come racing in to charge me with tampering with \"his\" evidence.\n\nThen, I worked on buttoning-up the Camaro.\n\nAfter checking the torque on every single bolt, I installed the air and oil filters. I filled the crankcase with the appropriate amount of oil, then added a teaspoon through a smaller funnel into each cylinder via their spark plug holes.\n\nI would've filled the radiator and surge tank with the distilled water, but I was worried it'd freeze overnight considering the forecasted low temperature. I decided I could do that in the morning. The short bursts of energy I'd soon send through the engine to prime the oil wouldn't create much heat, so I wasn't worried about the lack of any coolant.\n\nI connected the cables to the much newer battery and nervously climbed inside.\n\n\"Well, here goes nothing,\" I said to myself.\n\nThe futuristic (for its time) dashboard lit up and chimed when I turned the key to its second position. I watched the display scroll through diagnostic information. The starter obediently engaged. I cranked the engine in a series of five second bursts and thirty second rests to allow the oil to thoroughly lubricate all the moving parts.\n\nI got goosebumps at the warbling sound of air whistling through the unoccupied spark plug holes. I was almost certain the engine would run on its own, but I'd have to wait because there was no way in hell I would break the promise I'd made with Brenda.\n\nI removed the key from the ignition and put it in my pocket, then placed and torqued the new spark plugs. I attached the cables to them. Lastly, I filled the reservoir with the windshield cleaner. The Camaro was as ready to fire up as I could make her.\n\nAs I washed my hands at the utility sink, I heard my phone chime. I dried my hands, pulled it out and unlocked it to read a message from Benny.\n\nMays has quite an interesting history, but otherwise a solid green light. Call me if you want details.\n\nI dictated my reply via Siri, Delete all the specifics. Just keep the pass.\n\nUnderstood, Boss. Consider it forgotten.\n\nI owe you four bottles. Go love on your family. Give them all my sincerest apologies for my intrusion. I hope you all have an absolutely fantastic Christmas, okay?\n\nGush much? You know I will, but it's now three bottles of wine and a handle of JD.\n\nMy reply was a fist-bump and three thumbs-up emojis.\n\nYeah, I did gush because I sincerely regretted that I'd placed myself in the middle of his holiday with his family. Benny and his wife adore each other to absolute pieces, and his two little men, aged nine and five, are the very apples of Benny's eye. Even though they've been married for more than ten years, they still give off a newlywed vibe.\n\nBenny isn't only my most trustworthy, talented, and discreet researcher, he's also my best friend.\n\nHe'd just confirmed that a gift I was planning to offer Brenda could actually be given.\n\nBrenda had taken Stacie into town to do some last minute shopping, and I took the same opportunity to do my own. A few days earlier, I'd overheard a conversation between Stacie and her mother where the younger had expressed a desire for a particular something from Santa.\n\nI heard Brenda tell her daughter, \"Don't get your hopes up, Baby, okay? You've been an incredibly good girl, but Santa might not be able to bring it this year.\"\n\nI wrote a note on a Post-It and stuck it on the refrigerator handle where it'd be noticed. It read, I'm fetching another part that's only available in Lincoln. Remember, I'm making dinner tonight, okay? with a few smiley faces.\n\nMy first stop was at the Amazon Locker to where Stacie's gift had been shipped. I thanked my lucky stars it'd arrived on-time. Yeah, it was a just a little pricey, but it didn't matter.\n\nNext, I stopped at a FedEx shop to print and laminate something. Then I went to a Wal-Mart to snag a few small gift boxes, a roll of wrapping paper, a spool of transparent tape, and some groceries.\n\nI wrapped the gifts in the back of the Enclave, then deposited the excess materials in a waste bin in the parking lot before I headed back. I stopped at a gas station on the drive back to partially fill a five-gallon plastic gas can with fresh fuel. The errands took me about three hours in total.\n\nThe ladies of the house had returned before I did, so it took a little stealthiness to hide my wrapped parcels under the couch.\n\nI prepared a Christmas Eve dinner which was a particular tradition of my family. I boiled then briefly grilled bratwursts and served them with caramelized onions, potato salad and coleslaw.\n\nI paired the fare with a Cabernet Sauvignon instead of beer, and poured milk for Stacie. Since she'd never had brats before, I didn't know how she'd like such a meal, so I also prepped an alternative for her. Brenda and I were surprised she wolfed one down, eschewing a more familiar hot dog.\n\nThe three of us played match ends again until Stacie showed her fatigue.\n\nShe asked me, \"Are you sure Santa's reindeer will fly tonight? It's snowing.\"\n\n\"I am absolutely confident in Rudolph's nose, Kiddo. His sleigh performs even better when it's snowing like this.\"\n\n\"Okay! Mommy? Bath and bed?\" Stacie asked energetically.\n\n\"Sure, Chigger. Lead the way,\" her mother answered.\n\nI stroked Brenda's cute little bottom softly as she'd taken the first step of the staircase. She looked over her shoulder with a surprised grin, but said nothing as she followed her daughter.\n\nPing.\n\nWhat on Earth? I thought to myself, hearing my phone chirp. This late on Christmas Eve?\n\nIt was a text from Benny.\n\nRacotlik established as a d/b/a under a company named FDM Insurance. Merry Christmas!\n\nMy blood ran a bit faster as I pulled the manila envelope from my bag and pulled out the paperwork.\n\nI didn't give a crap that it was 8:00pm on Christmas Eve. I dialed the number. It was a 24-hour claims center, right?\n\nI went through the prompts to reach a human. I first sought confirmation of what Agent Tucker had told me, but the lady on the phone steadfastly refused to give me the name of the policy holder, even though I pressed.\n\n\"You know what? I should be ashamed of myself for having even asked you for that.\" I paused. \"You're one of the few customer service folks that do a good job protecting people's information. That's unfortunately rare these days,\" I said, buttering the bread a little.\n\nI heard a sigh of released tension through the line. \"That's very kind of you, sir, and I appreciate your understanding.\"\n\nSocial engineering is something I personally find distasteful, but I employed my skills in this situation because... well, like I've said already, it was personal.\n\n\"Do you think you could... maybe... give me a clue as to the agent that wrote the policy?\" I asked.\n\nAfter a few seconds, she said, \"Yeah, I suppose I can do that. Give me a second... FDM Insurance, an independent agent located in Spokane, Washington,\" she replied before reciting the telephone number. \"In fact, FDM issued the prior policy as well. The same agency has insured it since 2011.\"\n\n\"Thank you, Ma'am. I sincerely hope you and those close to you have a great Christmas, even though you're working late on Christmas Eve,\" I said.\n\n\"Thank you! You and yours, too,\" she responded.\n\nI shook my head at how easy that score had been. I called the number, hoping for, at least, something more.\n\n\"Hello, you've reached FDM Insurance. My office is closed until January sec&mdash;\"\n\nI hung up.\n\n\"Bingo!\" I cheered to no one and jotted some notes my pad of paper.\n\n\"What's going on?\" Brenda asked as she walked down the stairs.\n\n\"Finally a connection,\" I answered as I withdrew my laptop from my bag and powered it up.\n\n\"Going to keep me in the dark?\" she asked after a few seconds.\n\n\"The insurance. The weird company the FBI guy mentioned? It's a DBA under an insurance agency in Spokane, Washington. It just so happens to be an independent broker of this company, right here,\" I said, handing her the letter I held.\n\n\"Hold on. The policy was written by an agency that owns the plane, but under a sub-company?\"\n\n\"Exactly,\" I said. \"There's something else.\"\n\nI hit redial and put my phone on speaker.\n\n\"Hello, you've reached FDM Insurance. My office is closed until January second, 2018. If you need emergency service, please contact the claims center at&mdash;\"\n\nI disconnected. She shrugged.\n\n\"I recognize that voice. That's the seller. It's the guy that called to tell me he'd left the plane's keys with the FBO in Bozeman.\"\n\n\"Wow. That explains how someone has a policy that's more valuable than the asset. The agent basically wrote it for himself,\" she said, making the immediate connection.\n\n\"But, wait! There's more!\" I spoke like a game show host. \"The lady I just spoke to said the plane's been insured with them since 2011. That means that, either the FBI guy is wrong, and he's the one who's done all this, or he's somehow involved.\"\n\n\"Well, Agent Tucker said the guy failed his medical. Maybe he simply sold the plane to his agent? You know, mighty nice coincidence when you're planning a scheme and a plane falls in your lap all the sudden,\" she said.\n\n\"That could very well be.\"\n\nMy laptop had finished booting. I logged in and searched the initials.\n\n\"Bingo again!\" I quietly screeched. \"Oh, holy crap! I remember this! This guy got totally and rightfully screwed by his ex-wife. She was our client! He'd sold their beach house out from underneath her and hid the proceeds when she filed for divorce. During the digging, I found out she was divorcing him because she discovered he was having an affair with her brother's wife!\"\n\n\"You've got to be joking! That kind of crap happens in real life? I figured that was only the stuff of soap operas. How much money are you talking about?\"\n\n\"The share his ex got back cost him about a million. Lots of other things happened between him and her brother, too. Two hundred-thousand was the commission from that particular investigation.\"\n\n\"But what about the buyer?\"\n\n\"You know, I'll bet the whole sale was a red herring. I'll bet he somehow acted as both the buyer and the seller. The buyer's voice was different, though. I'll also wager that this guy is financed up to his eyeballs on that plane.\"\n\n\"You going to call the FBI guy?\"\n\n\"Not right now. This can keep until after the holidays. I've disturbed enough people's family time.\"\n\nI held a look of victory on my face.\n\n\"You've also enriched another family's time,\" she smiled, wrapping her arms around me to give me an absolutely delicious kiss.\n\n\"You know, I can imagine that guy coming out of his skin right about now,\" she said.\n\n\"Why?\" I asked.\n\n\"Think about it. If you were him, what would you have been doing over the last few days?\"\n\nI sat on the couch. Christmas music was playing softly in the background.\n\n\"Hmm. Gotta turn on insidious mode,\" I said. I twisted a curled finger against my temple and clicked my tongue. My display earned me a chuckle as Brenda sat close to me.\n\n\"I guess on that first day, I'd be giddy. I'd be searching the web and news sites around the area like crazy for mention of a plane crash.\"\n\n\"Right,\" she said, tucking her hand under my crossed knee to draw it into contact with her thigh.\n\n\"I don't know if either the buyer or seller or whatever still had their cellphones, but if so, they saw that call from me that first night I was here. Besides that? Heck. The Lincoln and Omaha news websites both posted reports with aerial footage that evening, but didn't post any specific information that would have identified the craft. The video they included didn't show the tail number, but the next day, they added it in an update. I don't know how fast Google updates its indexes, but I'm sure anyone searching for the tail number would have been able to find it by yesterday, for sure.\"\n\n\"With either your calls or the news reports, they'd know that you walked away from it unscathed,\" Brenda added.\n\nI laughed pretty hard. \"Don't I wish,\" I said, rubbing the bridge of my bruised nose.\n\nI continued, \"He's probably learned by now that his dastardly scheme failed, and he's probably wondering how well he covered his tracks or if he's about to be found out. He's lost almost a half million dollars because he'd be an absolute moron to file a claim against that policy now. He'd have to know that would expose him, right?\"\n\n\"Of course. Given the magnitude of his plan, he's no idiot. He's probably frantically looking for a hidey-hole right now,\" Brenda agreed.\n\nShe picked up the Post-It on which I'd written the name of the shadow company.\n\n\"He's arrogant, too,\" she mused. \"I don't think that's pronounced wahn, I think it's pronounced one. Racotlik Won. He claimed victory before the game even started, but no, Racotlik or whoever, definitely lost.\"\n\n\"Huh,\" I said when I realized there might be yet another interpretation. \"Read it backwards.\"\n\n\"Uh... Now... kiltocar?\"\n\n\"Yeah. Now Kill Todd Carlson,\" I said before I started laughing.\n\n\"That's not funny!\" she shot back.\n\n\"I know it's morbid, but it's funny considering I'm still very much alive!\" I said, laughing so hard I had tears coming to my eyes.\n\n\"Shush! Keep it down!\" Brenda admonished, starting to titter herself, pointing up at the ceiling toward the upstairs where her daughter slept.\n\nAs our laughter settled, Brenda pierced me with her eyes. She drew her fingers softly across my cheek, turning my head to face her. Her first kiss was soft, gentle, and a little tentative, the sort that set my hair on fire.\n\nHer next was seeking. Asking.\n\nI answered with my tongue. I wished beyond measure that I didn't have stitches in it, but it didn't stop me and didn't seem to faze the woman that tenderly and very, very carefully suckled it.\n\n\"I'm not looking forward to you going back to Texas,\" she sighed.\n\n\"Come on. It's Christmas Eve. Let's not talk about that right now,\" I offered, shushing her with another soft kiss. I slid my hand up her thigh, over her hip, and petted her warm denim-clad bottom.\n\nShe breathed deeply, nestling her forehead in the crook of my neck as I caressed her rump.\n\n\"Are there any final preparations you make so it looks like Santa visited?\" I asked because I didn't know how her and Stacie celebrated the special day.\n\n\"Yeah. Would you help me bring down the stuff from the attic?\"\n\n\"Anything you ask,\" I answered.\n\nAn invitation to ascend the stairs was new to me. Brenda had hidden away a few gifts in the upstairs attic, not wrapped, which we brought quietly downstairs and placed near the fireplace adjacent to the tree.\n\nWe snuggled, watching the end of The Christmas Story as we munched on the goodies Stacie had sat out for Santa. In addition to two baby carrots, there were several cookies and a heap of \"Reindeer Food\" which consisted of cereal squares sweetened with peanut butter, chocolate, and powdered sugar. My family called that particular delight \"Puppy Chow.\"\n\nI took the bullet and ate the carrots before I noshed on a cookie and some of the reindeer food.\n\nI noticed Brenda watching me as I fluffed my pillows after she'd shut off the TV at almost 1:00am.\n\n\"Hey,\" she said in a whisper.\n\n\"Yeah?\"\n\n\"You don't need to sleep on the sofa tonight,\" she said. The twinkle in her eyes made me lose my breath a bit.\n\nI arched my eyebrows when she held out her hand and made beckoning motions with her fingers.\n\n\"Oh?\" I asked, taking her hand.\n\nShe smiled softly. \"I think we both could use a little extra closeness tonight. Bring your suitcase.\"\n\nI did, then we quietly climbed the stairs. She led me to the main bedroom. I chuckled lightly when I noticed the shotgun propped in the corner by a nightstand.\n\n\"Uh, Brenda?\" I asked, pointing at it.\n\nShe grinned and chuckled, too, then said, \"You've got nothing to worry about from me.\"\n\nShe stepped to her door and twisted the little toggle in the center of the knob.\n\n\"I haven't locked this door in more than three years,\" she whispered.\n\nI nodded my understanding as I sat on the foot of her bed. \n\nShe wordlessly began to unbutton her blouse. She shrugged it from her shoulders, displaying a simple black cotton soft-cup brassiere. It was lovely, and my penis began to throb when I saw it.\n\nIt was as if time began to slow as she reached behind her back to unclasp her bra. At first, I thought she was slowly teasing me, but then wondered if it was doubt. Her expression made me wonder if she was self-conscious, but I suppose my smile of anticipation eased her feelings. She slid the straps down her arms.\n\nOf course I noticed it. There was no way I couldn't have. It'd been hidden by the top corner of the cup of her bra. The mark where she'd been stabbed was jagged. It was pink and puckered. I tried to avoid any outward appearance that I'd seen it.\n\nHer hand immediately rose and covered it. \n\n\"It's hideous, isn't it,\" she said.\n\nI wanted to argue, but my answer was spoken unfiltered.\n\n\"Yes. It is. But not for the reason you're thinking. Yeah, it bothers me. Not because I find it difficult to look at, which I don't, but because it makes me hurt to think of what happened.\n\n\"I understand why you want to hide it, but it's part of who you are and a part of who you've become. It's also a part of your little girl down the hall. It's a part of your world I'm happy to have been invited into.\"\n\nI hoped my words sounded sincere, because they were.\n\n\"Don't be so sure of yourself,\" she said cautiously, unbuttoning her jeans and lowering the zipper.\n\nShe shimmied her pants over her hips and beyond her calves. With them still around her ankles, she stood before me, beautifully well-formed, exhibiting the physique of an athlete wearing nothing but a pair of matching black cotton panties.\n\n\"Good lord. I lied when I said you looked twenty-five. You look more like twenty-one.\"\n\n\"Stop joking and look!\" she hush-yelled in frustration, pointing at the scar on her leg.\n\nIt wasn't a stab wound like the one on her chest. It'd obviously been slashed. What I saw made me wince despite myself. I felt sympathetic pain in the same place on my own leg.\n\n\"I wasn't joking,\" I whispered. \"What I see doesn't change what I think about you. You are astonishingly beautiful. Heart, soul, mind, everything about you including your awesome legs, too. Let me tell you about... No. I'll just show you.\"\n\nI pulled my hoodie over my head, followed by the tee-shirt I'd worn underneath it. I turned my back to her.\n\nAfter a few moments of silence, she stepped closer to me and traced her fingers over a permanent reminder of a moment of sheer reckless stupidity.\n\n\"What happened?\" she whispered.\n\n\"On a dare, I jumped out of my second story bedroom window trying to canon-ball into the backyard pool. A half-inch further out, and I'd have been fine. I managed to hit a rock along the coped edge and it sliced me open. Took twenty-four staples to stitch me up.\"\n\n\"Oh,\" she said, softly stroking my twenty year old wound. \"A half inch further back and you'd&mdash;\"\n\n\"Yeah. Yours weren't your doing. That scar was my own stupid fault.\"\n\nI turned and looked at the most beautiful breasts I'd ever seen. Perfectly shaped, perfectly sized, with perfectly-dimpled nipples at their crests. She was so incredibly youthful. The only evidence of her age was slight, consisting of a very few grayed hairs at her temples. There was no way in hell I could ever care about such a thing, though, because I was much further along than she was in that regard. She'd earned the right to bear a little gray given the stress she'd endured.",
        "She reached for and donned a flannel nightshirt on her dresser.\n\nHer pace, not yours, I heard somewhere in my mind when my heart sank a little.\n\nI shed my jeans and put on my sleep shorts. I kept my back to her because I wasn't sure she wanted to see how aroused she'd made me.\n\nShe flipped the switch to turn off the light on her nightstand, reducing the illumination in the room to only what came through the window sheers from the Christmas lights outside. I settled next to her. \"Comfy\" would describe it only mildly. \"Incredibly cozy\" would be better, but still wouldn't be fitting. \n\nShe snuggled close with my arm around her. She placed her leg over mine, increasing our closeness and contact. She stroked my cheek with the back of her hand, then ran it lower, feathering her fingers down my chest.\n\n\"I like this. It's very nice,\" she whispered, running her fingers through the hair on my chest with a subtle tension that tugged at the follicles.\n\nI held her body close and stroked my hand over the soft, warm black cotton covering her bottom, palming the relaxed muscles and tracing my fingers slowly up and down her cleft. It was wonderfully calm and quiet in the room. I situated my fingertips under the elastic at her waist. Sensing no objection, I slipped my hand into her panties. Her skin was so soft, silky, and warm.\n\n\"Todd, I need to tell you something,\" she said.\n\n\"Anything,\" I whispered in the dimness.\n\n\"It's been a long time, okay? I haven't been with a man since... well...\"\n\n\"I'm afraid of frightening you. I don't want to... you know... cause any flashbacks.\"\n\n\"I know you don't, but I don't know what might go through my head. I trust you, but I'm scared, too,\" she said.\n\nI rolled to my side so I could wrap my other arm around her to hold her in a full, tender, hopefully comforting and nonthreatening embrace.\n\nI didn't realize how I just wanted to be close to her until she revealed her vulnerability so explicitly. I wanted exactly that. Just... closeness. I absolutely didn't want to take advantage of it.\n\nA part of me felt like she'd entrusted me to guard and... accept her. The simple fact that she allowed her daughter to accompany me during my errands spoke volumes.\n\nBrenda was allowing me to comfort her in her own bed, so I forced myself to let her lead the dance. I didn't want to imperil what had become, at the least, a very close bond based on mutual trust, similar minds, and even professional backgrounds. I hadn't told her what I was beginning to feel because I didn't want to apply undue pressure. That would have to wait until a better time.\n\nHer warmth was so reassuring because I thought I could never be emotionally close to another woman after my former fianc\u00e9e essentially crushed my heart like a packet of ketchup on a sidewalk. I hadn't believed my own senses. I hadn't thought I could trust my own instincts again until happenstance damn-near literally dropped me in Miss Mays's lap.\n\nThe satisfying breakthrough in a mystery mere hours earlier faded into the background as an incredibly selfless, strong, enduring and brave woman held me close to her. We held each other so closely and tightly I could feel her heart beating in her chest.\n\nShe relaxed herself away from me and, again, stroked my chest and played her fingers through its hair.\n\n\"Kiss me, please?\" she whispered.\n\nThe ambient light was just bright enough for me to see her. I stroked her lower lip softly with my thumb, tracing its edge very slowly. I nudged her chin upward to meet her mouth with my own. I gently suckled her lower lip between mine to give it the gentlest of nibbles.\n\nI felt her quiver in my arms. She returned mine with equal subtlety, nipping at my upper lip just as gently. I licked her lower lip as she held my upper between her teeth. She released me, meeting my tongue with hers. I tasted her, smelling her warm breath as she exhaled slowly. I felt my own breath shudder in the intensity of her presence.\n\nShe reached behind her, finding my hand at her back. When she began moving it, I relaxed my arm to ease her guidance. She placed my open palm on her breast. I didn't move, I just held my hand where she'd placed it, feeling the warm, pliant mound through her flannel shirt.\n\nI felt her add pressure with her fingers, giving me permission to do the same. I softly and gently caressed her breast, feeling with the pad of my thumb the subtle bump of her nipple under the soft cloth.\n\nHer breath caught.\n\n\"Was that okay?\" I asked, seeking reassurance of my touch.\n\n\"Yeah. That felt nice,\" she whispered, so I did it again.\n\nHer supple breast barely filled my hand and yielded under my palm as we kissed slowly.\n\n\"Your breasts are so beautiful. They&mdash; you're just so perfect.\"\n\n\"Touch me more, Todd, please?\" she mewled.\n\nTaking my hand again, she began to slide it down her tummy towards her parted thighs. When I realized she wanted me to touch her between her legs, I removed my hand from her grasp before she could place it there.\n\nShe groaned in frustration.\n\nI was following her lead, but that didn't mean I had to follow the increasing tempo of the music. I wanted her to anticipate and crave my touch as much as I wanted to feel her hands explore my body.\n\n\"Can I unbutton your shirt?\" I whispered, nibbling her earlobe.\n\nShe nodded in the darkness.\n\nIt took me a few balked attempts before I could figure out how to unbutton it with a single hand. Sensing my awkwardness, she attempted to help, but I eased her hand away.\n\n\"No. I want to unwrap this gift myself,\" I said, kissing her with substantially more intensity.\n\nAfter all eight buttons were released, I slipped my hand upward along the skin of her firm, fit tummy to where it'd been before to hold her warm, bare breast. I lightly ran my fingertips from her collarbones, around the slight mounds, purposefully avoiding contact with her nipples. I felt her skin erupt in gooseflesh.\n\nI licked my thumb and ran it very lightly over the tip of a distended nub then blew across it. She moaned when the cool sensation hardened her sensitive nipple further. I pinched and tugged it lightly between my thumb and forefinger, feeling her try to bring her pelvis into contact with my thigh.\n\n\"Why are you teasing me?\" she sighed.\n\n\"I'm teasing myself, Baby. I've been wanting to touch you for days,\" I confessed.\n\n\"Me, too,\" she groaned softly.\n\nI felt her seeking me. She rubbed the inside of my thigh, bringing her hand upward until it met my scrotum. I flinched.\n\nShe gasped. \"I didn't mean to hit you like that.\"\n\nI felt no pain, only a little surprise at the sudden contact.\n\n\"It's okay. It didn't hurt.\"\n\nI felt her carefully cup my sac through my clothes. She held my scrotum in her hand, gauging its mass or volume before she slid her hand up the knit cloth of my sleep shorts, feeling my intense hardness. She reached the waistband and put her hand underneath it, then that of my briefs.\n\n\"Oh, shit, Todd. Oh, shit,\" she said, running the tips of a few fingers from my meatus all the way to my root. Her fingertips were slicked with my pre-cum.\n\nI moaned softly, my shaft twitching with the intensity of the pleasure I felt on my frenulum.\n\n\"Baby, your touch feels so nice,\" I cooed as she squeezed me, feeling my girth.\n\n\"Can I touch you, too?\" I asked.\n\n\"Yes, please,\" she hissed.\n\nI lowered my hand to her crotch, feeling the incredible heat between her legs. The gusset of her cotton panties was moist. I felt her succulent vulva and her full mat of fur underneath the fabric as I caressed what it concealed.\n\nI slipped my fingers under the elastic at her leg and felt her incredibly wet flesh. She spasmed and groaned when I sought and found her clitoris with my fingertips. Her legs parted widely as I entered her with two fingers, her body trying to prevent itself from being an obstacle to my access between her thighs.\n\nShe was gloriously aroused. I painted her folds, perineum, and the subtle ring below it with her honey. The sheets and blankets covering us fluttered with our motions, and the roiled air met my nose.\n\nI could smell her scent. The aroma forced me to count to thirty in my mind to avoid an immediate orgasm. I brought my hand to my nose. I smelled her feminine odor in my palm then tasted her nectar on my fingers. I was desperate for her.\n\nI groaned, \"I want you.\"\n\n\"Finally,\" she whispered as she grasped at my shorts and briefs and slid them away.\n\nShe yanked her panties aggressively off herself and offered them to me. I sniffed heavily against the wad of black cotton, inhaling deeply the aroma of an incredibly strong, incredibly brave, incredibly beautiful, incredibly aroused woman.\n\nShe waited and watched in silence as I situated a condom on myself. I'd put a box in my suitcase when I'd packed for an aborted honeymoon, and thanked my lucky stars I'd neglected to remove them after I called off the wedding.\n\n\"I don't think I can last long,\" I confessed in hushed hisses.\n\n\"I won't either,\" she groaned quietly as she situated herself on top of me, taking me into her.\n\n\"Oh, wow,\" she sighed as her body met mine at my root. She pulled my hands to her breasts, encouraging me to enjoy them as she remained almost motionless, feeling my fullness inside her body.\n\nI stroked and twisted her gumdrop-firm nipples, earning coos from her mouth and rocks from her pelvis in response.\n\nI slid my hands slowly down her sides, feeling the subtle ridges of her ribs as her lungs inhaled and exhaled in increasing tempo. I held her slender waist and nudged her upward, encouraging her to ride me in longer strides.\n\nIt took maybe twenty strokes of her wonderfully tight vagina around my shaft to make me erupt. I choked on my wish to yell her name out loud. She clutched her hands over her mouth as she emitted deep, low groans as she neared then reached her own summit.\n\nHer panting body laid fully atop mine. I gripped at her shoulders with my arms under hers, increasing the pressure of her weight on me. Her body atop mine felt like a warm, all-enveloping security blanket.\n\nAfter several quiet moments, I heard and felt her take a deep slow breath and exhale it even more slowly. I thought for a moment she'd fallen asleep with me inside her. It wouldn't have bothered me one single bit if she had.\n\n\"I don't know what to say. 'Thank you' sounds so cheap,\" she whispered.\n\n\"I was just thinking the same thing.\"\n\nI softly traced my fingertips from her shoulders slowly down her back to her little butt.\n\nShe propped herself up on her elbows and looked at me with a serene smile, then gave me a slow kiss.\n\n\"You're too good to me,\" she said. \"I really needed that. I haven't felt so wanted, needed, or... accepted in ages.\"\n\nI easily hummed my appreciation of her praise.\n\n\"I feel the same way. I can't explain what this week has done to me. You make me feel... like... I don't know how to explain it. You've uncovered parts of me that have kinda still been hiding under the bed, if you know what I mean.\"\n\nShe gave me another tender kiss, then booped my nose with her own with a giggle.\n\nShe scooched off of me so I could discard the condom, then she snuggled the blankets around us, and gently tousled the hair on my chest again. We curled ourselves together in a warm, relaxed embrace.\n\n<hr>\n\nThe bedroom was rather bright when I opened my eyes. I was alone in the bed. I climbed out, took a quick shower, shaved, brushed my teeth, then dressed.\n\nWhen I drew back the sheers from one of the windows, I saw fresh and undisturbed snow which was spectacularly bright and beautiful.\n\nI wish it would snow in Houston more often, I thought to myself.\n\nI descended the stairs and found Brenda at the desk in the little cubby of the kitchen reading the newspaper on her PC.\n\n\"Good morning,\" I whispered.\n\nShe looked up at me and smiled warmly. \"Good morning to you, too. You slept late.\"\n\n\"I sure did. I guess that's become a bit of a bad habit. But in my defense, you kept me up late last night,\" I grinned, pouring myself a cup of black coffee.\n\nWe had, indeed, gotten to sleep late. I could still smell her. She'd imprinted me with her feminine scent and flavor when she parked her ginger-furred pussy atop my face while she suckled me to orgasm. Then, before we went to sleep, the contents of another foil packet had been put to incredible use. \n\nShe stood from the desk, beckoning me to her. She looked quite beautiful. She'd done her strawberry-tinged golden hair fancily, was wearing faded and form-fitting jeans with a snug red cable-knit sweater that highlighted her pert chest. She was just stunningly gorgeous.\n\nI sat the coffee mug down and pulled her close to me.\n\n\"Merry Christmas,\" I whispered as we hugged. I couldn't keep myself from running my hands fully over and patting her perfect backside.\n\n\"And a very, very merry one it is,\" she whispered back before she kissed me softly.\n\n\"Is Itty-Bitty awake?\" I asked, pointing upstairs.\n\n\"Believe me. If she were, you'd have known.\"\n\n\"I was never able to sleep late on Christmas morning as a kid. Heck, most of the time, I couldn't even fall asleep at all.\"\n\n\"Same. I guess she's just not at the age yet where the anticipation is so strong.\"\n\nBrenda went back to the desk and scrolled a few pages on her PC.\n\n\"You're not going to like this,\" she said, pointing to an article in the Seward County Independent, a weekly newspaper.\n\n\"It's Not Always Bigger in Texas\" I read the headline aloud. \n\n\"'Texas pilot Todd Carroltown undoubtedly wished his airplane's fuel tanks were bigger when they ran empty, forcing him to ditch his plane in the northwestern part of the county near 350 and Old Mill Road.'\" I stopped.\n\n\"What the hell? They're just making crap up,\" I laughed. \"Can't even get my name right?\"\n\n\"Keep going,\" Brenda said.\n\n\"'Sources within the sheriff's department said Carroltown is under investigation by the FBI into matters the source declined to specify.'\"\n\n\"Oh, come on!\" I laughed even louder. \"Farber?\" I asked.\n\n\"Probably. He's an attention-seeking ass-hat,\" Brenda agreed.\n\n\"Fine. He can have all the attention he wants,\" I said, determined to offer him some of my own.\n\nThe bagel I'd selected had just popped from the toaster when we saw Stacie wordlessly walk by, aiming for the fireplace and lighted tree. Seeing items that delighted her stalled her ability to form coherent words for a few moments.\n\nHer eyes widened when she saw the bicycle with its training wheels already attached and a new helmet hanging from the handle bars.\n\n\"Mommy! Santa came!\"\n\n\"He sure did, Chigger!\" Brenda laughed happily.\n\nStacie then discovered the empty plate from which her mother and I... rather, Santa... had enjoyed delicious and no-so-nutritious sweets the prior night. She picked it up to show it to us.\n\n\"Look, Mom! Mister Todd!\" she hollered, \"Santa was here and took the reindeer food, too!\" she exclaimed, running to me to give me a kiddie-hug around my legs.\n\n\"Yep! His sleigh runs on happy dreams and his reindeer on tasty treats!\" I grinned back, scruffing my fingers through her bed-slept hair.\n\nIt took all of fifteen minutes for her to investigate her new toys, clothes, and dress-up costumes that'd been in gift bags, then another twenty minutes to litter the entire floor with shreds of wrapping paper.\n\nBrenda and I cleaned up the mess of gift wrap, filling a kitchen garbage bag with the detritus.\n\n\"Huh,\" I feigned surprise. \"I think you missed a few, kiddo,\" I said.\n\n\"Trust me. That's everything,\" Brenda responded, visibly taking inventory of the gifts she'd bought her.\n\n\"Stacie, look under the couch. There might be some things there,\" I said.\n\nShe did, removing three more gifts from underneath.\n\n\"Are these mine, too?\" she asked.\n\n\"The big one is, but the two small ones are for your mom,\" I said.\n\n\"Todd, what did you do?\" Brenda whispered in my ear.\n\n\"Hopefully nothing I shouldn't have,\" I whispered in reply as Stacie began to shred the final wrap.\n\n\"A Digi-Tab! Santa brought me the Digi-Tab! Look, Mommy!\"\n\n\"That's great, Sweetie!\" Brenda said, visibly surprised herself.\n\n\"Todd, that's way too expensive,\" she whispered anxiously as Stacie was distracted trying to open the box containing a ruggedized \"kid-proofed\" digital Android-based tablet and precision pencil.\n\n\"I'm sorry if I've overstepped my bounds, but please believe me when I tell you that this week has meant far, far more to me than what I paid for that. I mean... just look at her. I couldn't help myself.\"\n\nBrenda nodded her understanding, clutching at my hand, watching the joy on her daughter's face.\n\n\"Don't forget to give those two to your mother,\" I reminded Stacie.\n\nAfter she did, we were forgotten as Stacie began to haul her loot up the stairs to her room.\n\n\"Open this one first,\" I said, tapping one little gift.\n\nBrenda, in a more disciplined, adult-like fashion, slowly separated the tape and unfolded the wrap. When she took the lid off the box, her eyes flew wide open.\n\n\"You did it?! You got it running?!\" she exclaimed when she saw the pristine freshly-cut set of keys to the Camaro with their classic GM square and oval heads. The decades-old set, though still quite functional, had been worn so much that the nickel finish was almost gone revealing the yellow brass underneath.\n\n\"I'm not sure yet. I know it cranks, but I didn't put any fuel in the tank and left the plugs out so it wouldn't run. I promised you the first go, remember?\"\n\n\"Can we try it now?\"\n\nI laughed because the joy on her face, coupled with her excited energy, was as unguardedly exuberant as Stacie's had been when she discovered her gifts.\n\n\"It's going to take me a few minutes to finish up the prep, but yeah.\"\n\nShe hurriedly rushed to grab her coat and almost sprinted for the garage. I collected the jugs of distilled water from the floor of the pantry on the way out.\n\nAfter opening the roll-up door, I popped the hood and looked to see if I could find any evidence of leaking oil. I found none, and thankfully saw none on the concrete or in the catch-pan underneath.\n\nI uncapped the radiator and poured water in.\n\n\"No antifreeze?\" she asked.\n\n\"Not just yet. Water is okay for now, and it won't make a mess if there's a leak. This awesome ride has been parked here, bone dry for years, so no way to know for sure.\"\n\n\"Smart idea,\" she said.\n\nI continued to pour until both the radiator and surge tank were full, and sat aside the remainder knowing I'd need to add more once the water pump was primed and all the air in the system was purged. I secured both caps, then poured some gas into the tank.\n\nI rubbed my hands briskly together. \"I'm nervous. I don't want you to be disappointed.\"\n\n\"I'm nervous, too!\" she said as she climbed into the driver's seat.\n\nShe placed the brand-new key into the ignition, took a deep breath, and twisted.\n\nThe engine coughed and sputtered, then stalled.\n\nShe primed the carb with a few presses of the accelerator peddle, waited about ten seconds and then tried again.\n\nCough, pop... Varoooar!\n\nI got goosebumps at the sound of the modified exhaust's deep, throaty growl.\n\n\"Yay!\" Brenda yelled with her head back.\n\nShe clutched her hands together at her chest as she wiggled her knees gleefully. Blueish smoke came from the exhaust as the engine burned off the priming oil I'd put directly in each cylinder.\n\n\"Should I kill it?\" she asked, seeing and smelling it herself.\n\n\"Not yet. Let it go. Let's see if it settles down.\"\n\nIt took just a few minutes for the engine to smooth out to a steady hum. She let it idle a few more before shutting it down.\n\n\"Come sit with me,\" she said, patting the passenger seat.\n\nI joined her, and we both shut our doors.\n\nShe sat silently for a few moments. I saw her wipe a tear out of her eye.",
        "\"I can't tell you how much this means to me.\"\n\nI smiled, taking her hand.\n\n\"Memories are flooding back all of the sudden,\" she said and wiped larger tears away.\n\n\"Happy tears, I hope?\"\n\n\"Oh, yeah,\" she laughed. \"It's been so many years. I can barely remember the last time I drove this car... well, that's not true. The last time I drove it, I was in a teeny tiny accident.\"\n\n\"Teeny tiny?\" I asked with a chuckle.\n\n\"Eensy-weensy. I had to work my ass off to pay my father back for the repairs. After that, he only let me drive one of the half-ton beat-up old farm trucks. I was nineteen. I'd just come home from Peterson on leave.\"\n\nShe sat silent for a number of moments.\n\n\"I loved him so much. I really miss him,\" she said with a sniffle.\n\nI didn't have any words to offer her, so I just held her hand as her mind processed.\n\n\"Todd, you've given me so much. I can't ever repay you.\"\n\n\"I'd never expect you to. This was really, really, my pleasure. I loved every minute of it, and the look on your face is worth it all.\"\n\n\"A Digi-Tab is almost a thousand dollars. Now this? This had to cost some money, too, right?\"\n\nI'd spent only six hundred dollars on the car and fourteen hours of my time.\n\n\"Meh,\" I said while waggling my flattened palm with a grin. \"Besides, you opened your home up to me. This is absolutely the least I could do,\" I answered.\n\nAfter we were back in the house, she went to the kitchen and brought me a wrapped package she took from the top of a cabinet.\n\n\"Your turn,\" she said, offering it to me.\n\nI was quite surprised. I was certainly not expecting a present from her.\n\nI carefully unwrapped it to find the photograph she'd taken of the three of us in front of her fireplace a day or two before. She'd placed it in a black-stained wood frame which held white paint-penned handwriting. \"Look Who Dropped In! (Christmas 2017)\".\n\nI laughed in absolute joy. \n\n\"Oh, this is so thoughtful. Thank you for this!\" I said, smiling intently. \"This is going on the credenza behind my desk so everyone will be able to see it. I wonder how many times I'll be telling this whole tale.\"\n\n\"Not all of it, right?\" she asked.\n\n\"No. Some parts are only for you to tell if you choose,\" I answered. I then offered her the second box.\n\n\"You've already set a pretty high bar, you know,\" she said in caution as she began to peel the paper.\n\nI stopped her. \"Wait. I want you to know that this really isn't a gift, per se. It's more like... an offer. A... ah, never mind. Open it.\"\n\n\"Now I'm really curious,\" she said and tore through the paper quickly.\n\nI watched her eyes again as she lifted the lid off the box. Instead of instant understanding like she showed when seeing the Camaro's new keys, her brows cinched and furrowed.\n\nShe removed a laminated identification badge. It wasn't legit, though, because I'd need an RFID programmer and card printer to make one, but I managed to create a reasonable facsimile of the real deal.\n\nNext to the casual photo I'd taken of her, it read:\n\nBrenda E. Mays<br>Level 4<br>Carlson Research, LLC\n\n\"Todd? What is this?\" she asked, letting it dangle from the neck lanyard.\n\n\"A real one is yours if you want it. I remember you telling me how much you liked your work in the AFOSI. While my company doesn't exactly fly employees all over the world like your prior job did, there's occasional travel when needed.\"\n\n\"You're being serious?\" she whispered, still sounding like she was in disbelief. \"What's Level Four?\" she pointed.\n\n\"A level four researcher. Most new-hires, even ones with experience, start at level one or two and work their way up by merit and case closure rate.\"\n\n\"What does that mean?\"\n\n\"Higher levels have access to more information and work the more complicated or higher-value cases. Lower levels work smaller stuff or do work for higher level researchers.\"\n\nThe background check I had Benny run was critical. It's a requirement in Texas, as well as many other states, that investigators be screened as a provision of licensing the firm. The information was not at all important to me. I only wanted to get the green light, which was why I instructed Benny to delete all the findings except for the clearance itself. \n\n\"What level are you?\" she asked.\n\nI had to chuckle at her question.\n\n\"I'm the owner, so I don't have a number. But you'd be my equal because level fours have access to everything. Right now, there are only three level fours. Benny, the guy that helped me find my way back here and made the insurance connection last night is a level four. Though technically they are, none of them consider themselves as subordinates. They're all more like unofficial partners. Your help figuring out this whole disaster I dropped on you proves you're capable of working at the top.\"\n\nShe looked at me as if she were in shock.\n\nI continued, \"If you want, you can work from here in your free time. I can set you up with secure access to our network. But if you're willing, I'd very much prefer it if you would consider relocating to the Houston area and work full time with me.\"\n\n\"You know I'm kind of pinned down here running this place, right? Plus, I've kinda become accustomed to keeping my daughter close to me, at least until she's in school.\"\n\n\"I expected you might say that. You can work from home there, too. And, if you're needed in the office, we have contracts with a number of fantastic daycare centers. Stacie will be in Kindergarten in less than two years, right?\"\n\n\"Yeah,\" she answered succinctly.\n\nI could tell she was giving it some serious consideration.\n\n\"But how would I manage this place?\" she asked.\n\n\"If you don't want to, you don't have to.\"\n\n\"Then... who would?\" she asked.\n\n\"With the number of contacts my company has, I'm sure we could find a stellar buyer. Or, you could keep it and lease the land, or we could even find someone to manage and operate the business while you maintain ownership.\"\n\n\"This is all so sudden. It's an incredibly enticing offer. Can I have some time to think about it?\"\n\n\"Sure. It'll take me a minute to refill my coffee,\" I said with a chuckle, standing up and walking to the kitchen to do just that.\n\nI said, \"Seriously, though. Take as much time as you want. I'm not putting an expiration date on it.\"\n\nI watched her as she looked around the space at things she'd been accustomed to for a good chunk of her life. She focused for an extended duration at the empty spot on the floor next to the TV where a particular glass-fronted gabinet had once stood.\n\n\"Brenda. Sweetie. Don't do anything you don't want to do. I'm just putting it out there, okay?\"\n\n\"I have to ask. What you're offering sounds like the opportunity of a lifetime. Why are you doing this?\"\n\n\"Simple. First, I think you'd be fantastic at it.\n\n\"Second, I'd like to have a hand in giving you a career very similar to the one you had to step away from in order to manage a business I'm not so convinced you enjoy.\n\n\"Third, the pay is good.\n\n\"Fourth, if you're as good as I think you are, the bonuses you'll earn are really really good. We can talk about that later.\n\n\"Last, but absolutely, positively not least... I...\"\n\nIt took me several more moments to summon the courage to speak the last.\n\n\"Brenda... I'm falling in love with you and I'm coming apart inside thinking I'm never going to see you again.\"\n\nShe pressed her lips together firmly. When I saw a few tears forming in the corners of her eyes, I prepared my soul to get crushed.\n\nPeople will quite often give hugs to ease the breaking of bad news, so the fact that she reached for me and grasped me into a tight embrace didn't soothe me.\n\n\"Um, I need to go check on Stacie,\" she said with a weak, shaky voice.\n\nShe was absent for a few minutes.\n\n\"Come outside with me?\" she asked when she returned, not breaking her stride.\n\nI wordlessly followed her. I didn't even stop to pick up my coat.\n\nShe pointed to the passenger side of the Camaro as she climbed into the driver's seat.\n\nAfter we'd closed the doors, she finally spoke.\n\n\"Todd, you understand I can't give you a concrete answer right now, don't you?\"\n\n\"I do, Brenda. I'm sorry if I've dumped a heap on you.\"\n\n\"It's not a heap. It's just... it's a surprise.\"\n\nShe sat quietly for a few moments, then said, \"Come on. Stacie is totally engrossed coloring on the tablet you bought her, so let's take this for a five-minute spin,\" she said, starting the car.\n\nThe county road abutting her driveway had been plowed and salted, so it was clear of ice and snow. She simply drove a mile, turned around, and drove us back.\n\nBefore she opened her door, she said, \"I think we have a problem.\"\n\n\"With the car?\" I asked.\n\n\"Yeah.\"\n\nShe kissed me so passionately I saw birdies circling my head.\n\nThen she said, \"I wonder if this beauty can manage a nine-hundred-mile drive to Houston,\" then kissed me again.\n\nAfter lunch, Brenda let Stacie nap on the couch so that we could be just a little noisier in Brenda's bed upstairs. Thankfully, the kid was a very deep sleeper, because noise was definitely made.\n\n<hr>\n\nJanuary 1, 2018\n\nDespite the discomfort from the minor injuries, the two weeks I spent in Nebraska were the most relaxed, yet exciting, rewarding and fulfilling weeks in recent memory. Brenda and Stacie followed me in the Camaro as I drove the rented Enclave to Lincoln Airport where I'd catch a flight from there to Houston with a brief layover in Denver.\n\nWe met up in the departures area. Since the lines for security were rather light, I decided to spend my remaining time with the two ladies for as long as I could.\n\nStacie was saddened when the realization of my departure became clearer as she discovered what an airport was used for. But, as it was her first time visiting one, she was rightfully awed watching the planes taking off and landing.\n\nOf course, a four-year-old doesn't really understand the significance of a kiss between a man and a woman. She only stood silently as her mother and I shared some appropriate-for-public-eye affection.\n\nKids that age absolutely do, though, understand hugs. Hers was sweetly powerful as I picked her up off the terrazzo, squeezing her 'til she grunted and kissing her on the forehead, rapidly encouraging her exquisite giggles before I stepped into the TSA queue about twenty minutes before my flight was scheduled to depart.\n\n\"Say goodbye, Chigger,\" Brenda said to her daughter as I passed them with the cordon belt between us.\n\n\"Bye, Mister Todd!\"\n\n\"See you soon, Kiddo!\" I replied. \"Don't forget to send me all the cool pictures you draw on that tablet,\" I suggested.\n\nBrenda gave me another sweet kiss before I was \"encouraged\" to continue the path when a family of travelers entered the queue behind me.\n\nI waved and blew them one last air-kiss right before I stepped into the screening machine.\n\nI was inside my own house at 7:30 that night. It was seventeen degrees on my departure, and 61 degrees at my arrival. And, of course, as luck would have it, the uncomfortable and awkward sutures in my tongue chose that moment to finally fall out.\n\nI texted Benny. I'm back in Katy. I'll be in the office first thing in the morning. There's something off-book I want your help with. Happy New Year!\n\nI received a thumbs-up emoji just a minute later.\n\n<hr>\n\nEPILOGUE\n\nThe sod farm is now managed by a commercial outfit, and the house is tended to by a professional service. I fully supported Brenda's decision to keep it in her family, and it's now a place to where we retreat when we need peace, quiet, and wide open spaces. There's something quite marvelous about having a picnic on a lush, green, perfectly manicured 240-acre lawn.\n\nFrancis David McNearny of Spokane, Washington, was arrested by agents in, of all places, Albuquerque, New Mexico. He'd been located when the cellphone he'd used to set in motion his scheme suddenly re-appeared on the network.\n\nHe was arrested at the residence of the person which was later determined to have been the one acting as the \"buyer\" of the Cirrus. The relationship between the two wasn't shared with the media. I could have spent another few months to figure that out, but frankly, I didn't care. He was charged with aiding and abetting a fugitive and conspiracy to commit murder.\n\nHe plead his charges down, and is serving no less than two years in the Federal Correctional facility in Safford, Arizona.\n\nMr. McNearny was charged with attempted murder, grand larceny, wire fraud, insurance fraud, as well as violating numerous federal aviation and commerce regulations.\n\nThe most serious charges were added once the NTSB and FBI had completed their forensics, discovering that swimming-pool strength sodium hypochlorite had been added to the oil which degraded the silk gaskets of several cylinder heads as well as the propeller hub, and that the oxygen in the on-board system had been evacuated and replaced with welder's argon. Proof of both purchases were found in credit card records.\n\nHe'll be in prison for the next twelve to thirty years.\n\nA tip, which included some very damning documentation, given to a particular author and investigative journalist, who also happened to have been a very appreciative recent client, led him to investigate the Seward County Sheriff.\n\nA revealing and embarrassing expos\u00e9 was published in both the Lincoln Journal Star and the Omaha World-Herald two weeks before the election which detailed Otis Merle Farber's penchant for accepting kickbacks and bribes. The man who'd sat in the chair for over twenty years was voted out of it by the county's residents, and the Attorney General of Nebraska has opened her own investigation.\n\nI flew back and forth to Nebraska a number of times, but the Mayses and I were permanently reunited when they relocated to Texas in April of 2018. She didn't drive the Berlinetta. She drove her truck with the Camaro buckled down on a flatbed trailer, completing the trip in just shy of fourteen hours.\n\nIt took us only about an hour to unload and unpack the few belongings they'd brought into a modern ranch-style single-level 3,700 square-foot five bedroom, four bath, four car garage situated in the Cinco Ranch area of Katy, Texas. It'd been my home since it was built in 2014.\n\n\"Chigger\" was enrolled in Kindergarten at Jenna Wilson Elementary as \"Stacie Ellen Carlson\" in August of 2019.\n\nI didn't want a step-daughter. I wanted her as my daughter in entirety, so I legally adopted her as my own two weeks after Brenda and I had said our vows. We were united in matrimony on the Friday after Thanksgiving 2018.\n\nWe stood as proud parents watching from the broad corridor as our daughter unloaded her school supplies from her backpack into her cubby and bid us an excited, though slightly nervous farewell. Her smiling teacher welcomed her into the spacious classroom.\n\nBrenda almost wept out loud, and I had to force myself to contain my own tears. My wife propped one hand on her gorgeously rounded six-month bump, holding my hand with her other as we walked out of the school.\n\nI drove us from there in the Camaro to Sugar Land. We walked through the doors of what's now named Carlson & Carlson Research, LLC, where we shared a spacious corner suite on the second floor of the 47,000 square-foot building into which we'd recently relocated our expanding firm. I made Brenda a full partner in the business, of course.\n\nOnce we poured ourselves cups of coffee, I fetched the wireless motion controller from its dock. The 85\" LCD on the wall of the office displayed backgrounders for several pending clients' requests.\n\nMy spouse stepped next to me and gave me a playful hip-bump before our Level Fours began to filter in for our Monday senior staff meeting.\n\n\"Alrighty, folks, what's next?\" I asked the small assemblage. There were seven of us in the room.\n\nWe evaluated and considered each one in the queue, assigning them to the researcher whose skills matched the specific needs. As the owners, Brenda and I could choose for ourselves whichever struck our fancy.\n\n\"Ooh! Me! Me! Me!\" Benny yelped humorously when the last one caught his eye. \"That one looks challenging.\"\n\n\"Huh-uh. Dibs,\" Brenda trumped him with a grin. \"That's ours.\"\n\nI opened the folder, and we began our new day.\n\n<hr>\n\nThis story crosses over with , so consider reading that one if you enjoyed this. It parallels some of and then follows this one in the chronology.\n\n knits A Walk and this story together, occurring before the Epilogue of this story and the end of A Walk.\n\nDon't forget to follow us if you want to be notified on your Lit dashboard when we publish new or make changes to existing stories (which we describe in our biography page.\n\nThanks for reading the story, and we'd love to read your comments."
    ],
    "authorname": "WillDevo",
    "tags": [
        "drama",
        "love story",
        "romance novella",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-flight-before-christmas-ch-03"
}