{
    "title": "Hitting the Bottom Ch. 08",
    "pages": [
        "Author's note: \n\nThank you to my co-creator and editor, the ruggedly handsome Brit! \n\nIn previous chapters: Dan, a cop, had attempted suicide after assaulting his ex-wife/sub, and ended up at the hospital, where he met Nurse Sandra. Their relationship grew over the weeks following his release until finally they became lovers. Sandra wanted Dan to dominate her, while Dan struggled as he feared it would put Sandra at risk. After talking to his shrink and establishing limits with Sandra, they finally played for the first time - and yes, it was awesome! :) \n\nIn this chapter: the road to recovery is full of twists and turns. \n\n~~~~~~~ \n\nSoft caresses over my chest coax me slowly to wakefulness, late on Saturday morning. Sandra is on her side, propped on an elbow, smiling at me. \n\n\"Good morning, sleepyhead.\" Her amused eyes squint as her smile curves up. I yawn and stretch with a deep grunt before settling back and grinning sheepishly up at her. \"Good morning, beautiful. Or is it afternoon already?\" \n\nSandra shakes her head apologetically at me. \"I'd have loved to let you sleep in, but we have a lunch to go to, remember?\" \n\n\"Ah. Right.\" The family lunch. I roll over to sit at the side of the bed, my back to Sandra, trying to hide my unease. \"How long do we have?\" \n\nI hear her shuffling closer, and in the next moment her warmth surrounds me as she kneels on the bed behind my back, and hugs me close. \"They're all going to like you, baby. I promise.\" She starts pressing small kisses along my shoulders, her hands sneaking under my arms to stroke enticingly down my belly. \"Maybe I could show you how much I appreciate you coming with me today...\" \n\nSome of the stiffness drains from my neck, flowing southwards to pool at my balls, making my morning wood twitch. I let my head rest back between Sandra's warm breasts, and allow her hands to roam freely. She strokes up and down my torso, moaning appreciatively in my ear as her hands find my full, rigid dick and wrap around it, lightly squeezing and starting a slow, maddening pumping motion. I relax back further, and after several long moments her thumb starts moving, too, stroking sweetly over the glans, smearing the first drop of pre-cum that had seeped from my slit all around the sensitive head. \n\nMy cock twitches and jumps inside her firm grasp and she giggles breathily behind me. Ohh... so she thinks she's got me under her thumb, does she...? The said thumb makes its sweet gliding motion again, and I gasp. Another giggle tickles my ear, and I growl in mock warning. She's enjoying her power over me a bit too much, I think. \n\nI grab my pillow and throw it on the floor between my legs, and then turn to issue a quiet order over my shoulder: \"get on your knees, babygirl.\" \n\nI hear the quick catch in her throat at my words, followed by a soft moan as she scrambles around me to settle down on her knees, looking up at me wide-eyed and expectant, her lips parted, her breath quickened. My cock twitches even harder. That's more like it. \n\n\"Good girl.\" \n\nShe breathes in deep, soaking up my approval. I smile. I love how her hair is still all messy from sleep, making her look vulnerable, unguarded, and I reach out to tuck it behind her ears. \"You're so pretty like that, baby. Now hands down on your knees and ass down on your heels, please; and keep your eyes on me.\" \n\nShe settles in position, breathes in and blows out slowly to calm herself down, and I smile and gently stroke her face. \"Beautiful.\" I say, and let my fingers trace her slightly-open lips, her breath tickling my fingertips. \"Now, I want you to get real messy when you suck me. Can you do that, babygirl? Use lots of spit; make it all wet and slippery?\" \n\nSandra smiles and licks her lips provocatively. \"Oh yes sir, I sure can!\" \n\nShe works up some saliva in her mouth and leans forward slowly. At my nod she closes that last inch separating her lips and my cock, and spreads her spit up and down my shaft using her lips and tongue, first one side, then the other, then the underside. My swollen dick rolls over her face, sliding wetly against the soft skin of her cheek. It feels so good I hiss. She smiles wickedly up at me, and wraps the head with soft, wet lips, then lets it glide smoothly along her tongue, sinking deeper and deeper inside. Her pretty blue eyes never leave mine, and I can swear there's still laughter in their corners as she starts moving slowly, sweetly, up and down, swirling her tongue around the head with every out stroke. \n\nThe picture before me - this beautiful, curvy blonde, on her knees, worshiping my cock with her mouth, looking up at me in horny submission, with just a hint of sass twinkling in the depths of her baby-blue eyes - it's absolutely perfect. I inhale sharply and let it wash over me, soaking it up. God, this feels right. \n\nSandra grins at my obvious satisfaction and she reaches one hand up to firmly hold the base of my dick, starting to bob up and down more quickly. I groan with pleasure, but at the same time my fingers tunnel in her hair to fist at her nape and stop her movements. A moment later I tug her back, and my dick pops out of her mouth, which stays open in an adorable, surprised pout. \n\n\"Uh-uh. I said hands down, babygirl.\" \n\nSandra's startled look changes into a contrite little frown, and she hurriedly lowers her hands back to her knees, bites her lower lips as she peers up at me through her lashes. \"Oh! I forgot... forgive me?\" \n\nMan, she's got that perfect pout down pat. It makes me want to fuck her senseless, right then and there. With effort I keep my tone calm and controlled, if a little gravely. \n\n\"Put them behind your back, babygirl; it would be easier to remember not to use them. Yeah, just like that...\" I release my grip on her hair, instead letting my fingertips scrape along her sensitive scalp. Sandra shudders and gasps, goosebumps flaring down her neck and towards the tops of her breasts. I smile. \"Now I want you to go deeper, baby. Gag yourself a little on my dick. I wanna see you work harder for it.\" \n\nShe nods, her eyes hazy, as if focused internally, and leans forward to take my dick back into her mouth. With her hands behind her she has to work her core muscles to keep from tumbling over, and her whole body moves back and forth as she blows me. Soon the head of my cock bumps into the back of her mouth with every stroke, making small squelching sounds. And with every almost-gag her mouth floods with drool and her tongue and throat flutter and squeeze against me, delivering unbelievable pleasure to my throbbing, swollen member. \n\nI feel my face contort with pleasure as I fight the urge to throw my head back, determined to keep our eyes locked together. Hers are brimming with involuntary tears from gagging on my dick, and the drool that had pooled around my shaft starts to flow down her chin in twin little streams, dripping onto her sweaty, flushed breasts. And yet she keeps sucking me enthusiastically, taking only the occasional short break for a deeper breath before wrapping my dick with her wet lips once more. \n\nI feel the tingling of approaching orgasm and my hand tightens in her hair to tilt her head back as I stand up above her, my other hand shooting out to the side, to hold onto the wall, and I start fucking slowly, deeply into Sandra's tight throat. Every millimeter of my cock is hugged and squeezed in wet heat, and my pleasure spikes, pulsing and throbbing along with my galloping heartbeat. \n\nMy new position above her throws Sandra slightly off-balance and I feel her lean her head heavily into my hand, trusting me to keep her from toppling back, while she submits fully to me, swallowing around me as I fuck her face. \n\nOur eyes are still locked together when I feel my cum rush up my shaft, and then spill deep inside her convulsing throat in hot pulses. Unable to stop myself I finally tear my eyes away from Sandra's, throw my head back and shout my pleasure, almost howling with its intensity. Sandra swallows again and again, milking my cock and sending wild shivers cascading down my back, until I can no longer bear it and I pull back, popping out of her mouth and bending over, trying to catch my breath, while Sandra leans her damp forehead against my hip, breathing hard between small coughs. \n\nI sit heavily back down on the bed and pull Sandra, still kneeling, into my arms. She cuddles close, melting into me, her nose nuzzling the crook of my neck, her quick breaths puffing softly against my sweaty skin. I squeeze her tighter, and then reach down to pick her up under her hips and roll her over me and onto the bed. She squeals and giggles, finding herself flat on her back with me looming over her, smiling and stroking her flushed torso, smearing the pool of mixed drool, sweat, and pre-cum that had gathered there all over her tits. God I'd love to fuck these gorgeous tits. Soon. \n\n\"Look at all that dirty mess, babygirl...\" I murmur, and her giggles die with a soft gasp, while a deep blush floods her cheeks. My eyes fly up to meet hers and I catch her embarrassment - her humiliation, even - before she can conceal it. Fuck. She told me she didn't do humiliation. Back paddle, now. I let my fingers play in the wet slickness, spreading it further down her soft belly. \n\n\"I love you messy and dirty like that, babygirl. Do you have any idea how sexy you look right now?\" \n\nShe bites her lip and shakes her head slightly. Holding her gaze I glide my hand lower. When it reaches her abdomen and keeps edging lower she hesitates for a moment, and I raise an eyebrow at her, waiting. She swallows hard, and then with a breathy sigh she spreads her legs wide, obeying my unspoken command. So perfect. I let my fingers glide over her folds lightly before sinking easily between them. Her pussy yields sweetly to my touch, coating my fingers with fresh, hot cream. \n\nSo my babygirl likes giving head, does she? \n\n\"Mmmm... look what I found, baby... I think you made an even bigger mess down here...\" I make sure she can see and hear the teasing smile on my face. She blushes bright red, but smiles back at me. Good, I think I can push a little more then. I stroke up and down her slit, partly to keep her hot and bothered, partly because it just feels so damn good. \"Tell me what turned you on just now, babygirl. I wanna know which buttons I can push...\" I say, just as I start circling the tip of my middle finger lightly around her clit, and she arches her back way up, panting. \n\n\"Ohmygod! That's the one! Right there!\" \n\nI burst out laughing, and give her pussy a playful swat. \"C'mon, babygirl, that's not what I meant and you know it! Now spill. Remember it's in your best interest to let me know exactly what makes you horny...\" I bring my hand back to her skin, but not where she really wants it - stroking instead up and down the crease where thigh meets pussy. I can see her inner debate plainly written on her face - she knows I'll only touch her clit if she answers my question, but she's having a hard time saying the words out loud. \n\nI decide to give her a bit more incentive, and slide my fingers down to her entrance, circling the rim, tantalizing but not quite delivering. \"So what was it, exactly, that got you creaming yourself so prettily for me, baby? Having my dick in your mouth? Me tugging at your hair? Tell me.\" \n\nShe opens her mouth to start talking, but halts, apparently still struggling. I move my finger a tiny bit higher, inching towards her clit, but not quite there, and rub that sensitive spot just under her urethra in small circles. She gasps and starts panting more quickly. \"C'mon, babygirl... talk to me... or I may decide to switch to other types of incentives... maybe you'd like those better?\" \n\nHer eyes widen at the idea, and it looks as if she just may take me up on it, but then she shakes her head, swallows hard, and finally admits softly: \n\n\"It - it was the way you told me to get down on my knees... the tone of your voice when you said it... it was like you flipped a switch in my head. Everything you did after that - telling me exactly how to kneel, how to suck you, being a little rough with me... it all resonated once I was already in that zone in my mind.\" \n\nShe bites her lip, as if shocked by her own admission, and waits with baited breath for my response. I smile widely, simultaneously bending to kiss her lips lightly, and moving my fingertips up to gently rub her clit. \n\n\"Good girl! I'm so proud of you for telling me, babygirl.\" I murmur into her ear, watching her writhe under my touch. \"So, hearing my 'dom voice', my first command, had put you in 'sub zone', and then my telling you what to do and manhandling you, that's what got you all hot and bothered?\" \n\nShe arches her pelvis up into my fingers. \"Yes! Yes! Yessss!!\" \n\nI move my fingers away. \"Is that 'yes' to my question or 'yes' to my touch?\" \n\nShe whines in frustration and balls her fists, but she keeps her position - legs spread, arms above her head - and looks me pleadingly. \"Please, it's 'yes' to both. Please, please, please don't stop touching me, pleeaasse!\" \n\nI glide my fingers lightly along her outer labia a few times just to watch her squirm, but finally go back to focus on her protruding clitoris. Its hood had peeled back to expose the hard, swollen pearl, and I capture it between two fingers and start rubbing side-to-side in short, quick strokes. \n\n\"Oh yesss, rightthere rightthere rightthere please don't stop rightthere...!\" \n\nMy other palm comes down to press on her lower belly, feeling her abs clenching repeatedly under my fingers as she strains up, up, up... - \n\nHer breath hitches and holds for so long her face actually becomes red before she blows it out in a rush of \"ohmygod yesss! yyhhhhhesss... ohhhhhh... gaawwwd fffhhhuck yhhessss...\", heaving and bucking under my fingers for long, glorious moments. I watch her orgasm, fascinated, and keep stroking her for as long as her body seeks my touch. She's so fucking beautiful when she cums. \n\nFinally the tension in her body relaxes and she flops down to the mattress below, her breaths coming out in soft puffs and a smile curving her lips upwards. \n\nI gentle my touch as her peak passes, and then finally withdraw from her pussy altogether when her pelvis jerks away from my fingers, indicating her sensitivity, moving instead to stroke gently along her torso to help her calm down. She breathes in and sighs deeply, a contented smile on her sweaty face. I grin down at her. \n\n\"You're freakin' breathtaking when you cum for me, babygirl.\" Her smile turns shy, the flush on her cheeks deepening. God. So sweet. I give her another quick kiss before sitting up. \"Now I'm ready to face the day - and your family. Time to get up, young lady!\" \n\nSandra giggles breathily, answers with a cheerful \"yes, sir!\" and rolls over to sit next to me, bumping my shoulder in camaraderie. \"C'mon, big guy. Let's start with a shower.\" \n\n* \n\n* \n\n* \n\nWe ring the bell at Sandra's parents' home at exactly 12 noon. I am usually punctual - no doubt the result of my strict upbringing, cemented by years of police service - and today the need to be on time feels almost overwhelming; I don't want to screw up before I even meet them. \n\nMrs. Matsakis opens the door on the second ring. Her lovely face - an older, plumper version of Sandra's - break into a wide smile when she sees us, and she opens her arms in welcome for her daughter even as her eyes move to check me out from top to bottom, coming back to meet mine over Sandra's shoulder while the two hug tight. To my relief, all I see is open curiosity - and maybe a hint of hope? - in her light blue gaze. \n\nBoth women turn to me when they finally break their hug. \"Mom, I'd like you to meet my friend, Dan Moreno. Dan, this is my mother, Maria.\" \n\nMy friend. I realize we didn't discuss how she's going to introduce me, and while I can appreciate her wanting to keep it simple with her family, the title doesn't quite sit well with me. But I guess we'll clarify that one later. \n\nI step forward, hand extended. \"It's a pleasure meeting you, Mrs. Matsakis. Thank you for having me as your guest today.\" \n\nSandra's mom slaps my hand away and instead pulls me in for an affectionate hug, followed by a kiss on each cheek. \"Oh, please call me Maria! I'm very happy to meet you, my dear. Any friend of Sandra's is always welcome in my home. Now come in! Everyone is out back already. We decided to enjoy this time outside before it gets unbearably hot. Come after me.\" \n\n* \n\nSandra's father, Theo, is tall and lanky, hunched over a beautifully carved dark-wood walking cane, but his stride is purposeful and his grip is strong when we shake hands. His still-thick hair is a shock of silver waves with a full mustache to match, and his tan face is etched with deep wrinkles, attesting his many years under the harsh Mediterranean sun. He doesn't speak much, only nods and says 'welcome, Dan' upon our introductions, and then nods over, indicating we should go meet the others. \n\nI throw a questioning look at Sandra. \"It's okay\", she mouths quietly. Walking out onto the back lawn we are instantly surrounded by a swarm of kids in various ages, all of them jumping up and down trying to grab Sandra's attention. \n\n\"Auntie Sandra, Auntie Sandra, look at me!\" \n\n\"Auntie Sandra, check this out!\" \n\n\"Auntie, who's that man?\" \n\nSandra laughs as she bends down to kiss and hug each one in turn, picking the smallest of them up for a longer cuddle before setting the little girl down on her chubby feet. \n\n\"Hello, kiddies. This is my friend Dan. Dan, these are Stefan, Andreas and Ariana - my brother Lucas' kids.\" \n\n\"Hi there fellas. Nice to meet you guys\" I say lightly, and step forward to shake their hands. The kids exchange looks, apparently trying to figure out what to make of me, but eventually they reciprocate, each one in turn, looking kind of pleased for being treated like grown-ups. \n\nBy the time I stand back up the kids' parents - Lucas and his wife, Chloe, have stepped closer, and so have Sandra's younger sister, Helena, and her husband, Giannis, holding a sleeping baby in his arms. Introductions are made all around, and by the time they're over I feel a bit dizzy trying to keep track of everyone's names and faces. \n\nSandra senses my unease and steps closer, grabbing my arm and pulling me over towards a shaded corner, where cold drinks and beers are stacked on a small table. 'C'mon, Dan. I'll quiz you on them all later. Now, can I get you a beer?\" \n\n* \n\nI volunteer to mind the barbecue as soon as they get it going, which thankfully gives me a little break from all the small talk. I really am horribly rusty with this whole social niceties business, I think, and resolve to take this afternoon as an opportunity to improve myself. But for the time being I am left to observe Sandra and her family as they all pitch in to set up the long table on the wide back porch under a pale, striped fold-out awning. \n\nThey are all so comfortable with each other. As the only child of a small, aristocratic family, it's strangely painful to watch. \n\nSandra and her siblings and in-laws all laugh and tease each other as they work, following her mom's orders from the kitchen. The kids keep out of the way playing catch in the grass, while Theo sits in one of the lawn recliners, bouncing his now-awake youngest granddaughter on his lap, cooing and tickling her, making her squeal and giggle in delight. \n\nI suck in a shaky breath, feeling an ache spreading around my not-yet-fully healed left ribs, followed by an acute sense of jealousy over the loss of my own family, that had never really been. Annoyed at myself I mumble a curse under my breath. Enough of that, Dan. ",
        "With my attention firmly focused on the skewered meats roasting on the grill, I almost jump out of my skin when a heavy hand slaps my right shoulder, followed by Lucas's level stare and deceptively conversational voice: \n\n\"So, Dan, tell me about yourself.\" \n\nAh. I smile despite myself. The protective older brother is here to get some answers. For a moment I consider telling him the whole ugly truth, which would undoubtedly get me thrown out onto the street. But it was so important for Sandra to bring me here, even if I don't understand why; I can't chicken out on her. So I settle on the small part of the truth that will hopefully be acceptable. \n\n\"I'm a handyman. In the process of opening my own small business, in fact. How about you?\" \n\nLucas smirks knowingly at me, his thick, dark-blond eyebrows shooting up. \"Uh-uh, not so fast there. I have just a few more questions to ask you before we can turn the tables around.\" \n\nI half-smile, half-grimace, and nod my consent. I like his bluntness, even if I am at the receiving end of it. Lucas relaxes his stance at my clear acceptance of his brotherly right to interrogate me, and reaches out to turn some of the skewers around to get the meat cooked evenly from all sides. \n\n\"So, what kind of work do you do?\" \n\n\"Small repairs, mainly. All those odd-jobs that are too small for an actual contractor to take on, but require the use of work tools and some expertise to get it done right.\" \n\nLucas throws me a doubtful look. \"Is there actually enough work doing that to make a living?\" In other words, 'could you support my sister'. \n\nI feel my spine harden as I stand a little taller, unconsciously rising to his challenge, before catching myself and taking a moment to relax my stance. \"Yes, there is. Or at least, so does my research suggest. I've only just started, and haven't done any kind of marketing yet, but I think I can make it into a viable business.\" \n\n\"So, you haven't been doing this for long?\" \n\nFuck. This is going to be tricky. I gulp. \"No. I haven't - this is quite a recent development, but one I am very excited about.\" \n\n\"Whussup, guys?\" Sandra's voice startles both of us. We look at each other; me a little guilty, Lucas clearly annoyed at being interrupted before he got all his answers. Taking a deep breath, I decide to give him more - as much as I dare to give.  \n\n\"I was just telling Lucas about my new business.\" I try for lightness, while silently pleading Sandra not to freak out. \"Anyways, as I was saying -\" I turn back to meet Lucas's narrowed gaze \"- this venture is very new. I was actually a cop until a few weeks ago.\" Surprise flares in his gaze, and his shoulders relax a bit more. Don't get your hopes high, buddy. \"Well, technically I still am a policeman - on medical leave - but I don't expect to be reinstated, which is why I have started working on this new idea.\" \n\nTo hide my unease, I break away from Lucas's level stare to rotate the meats on the grill once more. \n\n\"I see.\" He sounds suspicious. As he should be. I look up to meet Sandra's eyes, her eyebrows raised in silent question, but then she turns to her brother. \n\n\"Yes, Dan took a hard fall that landed him with a bad concussion and some serious bruising. He ended up in my ward; that's actually how we met. It's still unclear when he's going to be fit for service again, if ever, so it's good that he's got this alternate plan to pursue.\" \n\n\"Ah.\" \n\nStill clearly skeptical, but probably reluctant to challenge Sandra right then and there, Lucas falls quiet next to me. \n\n\"Hey Lucas, how's the meat looking? Everything else is pretty much ready!\" Helena's voice, raised to an almost-shout to carry over the grass above the kids' squeals, breaks the uneasy silence between us. \n\n\"Pretty much done, actually. Ready to serve.\" Lucas calls back, and starts heaping the heavily-laden skewers on top of a waiting tray. \n\n\"Let me do it, Lucas.\" Sandra says, already taking over the task. \"You go help your kids wash up and get seated.\" \n\n\"Thanks, sis.\" he says, and leaves with only a quick nod in my direction. \n\nI heave another breath, exhale slowly, and then turn to look at Sandra. \"I hate this, baby. I hate lying to your family.\" \n\n\"You never lied, Dan. Everything you said - everything I said - was true.\" \n\n\"It's a lie by omission, and we both know it.\" \n\nShe shakes her head, her lips pursed determinedly, and then her face softens when she cups my bruised cheek in her hand. \n\n\"Please, Dan.\" \n\n\"Fuck.\" \n\nI don't mean the word to come out loud, but for some reason it makes Sandra smile, a crooked, knowing little grin that makes my own lips twitch, too. Shaking my head ruefully I cover her hand with mine, holding it in place as I turn to kiss it's soft palm before tugging it down, keeping our fingers laced. \n\n\"Okay. We'll play it your way, baby.\" For now. \n\n\"Thank you.\" She squeezes my fingers, and then lets them go to take the heavy tray in both hands. \"Shall we?\" \n\n* \n\nLunch is a laid-back, friendly experience. Even Lucas seems to relax; or maybe he just gave up on continuing our conversation, seeing as we are seated at opposite ends of the long table. I find myself actually having a good time listening to the quick banter and lively conversation around the table, without having to really join in. Apparently I still remember the art of nodding and laughing at the right places, and in truth I feel more at ease in the company of Sandra's family than I had in years. \n\nWe say our goodbyes shortly after desserts, and make our way in Sandra's car to my apartment, where we plan to hang out together until later in the evening, when Sandra needs to leave for her night shift. The ride goes by in comfortable silence, both of us quiet with our own thoughts, until finally I turn around to face her. \n\n\"So, I really liked your family. You all seem so close.\" \n\nShe throws me a quick smile while keeping her eyes on the road. \"Thanks. We are. And I think they liked you, too.\" \n\nI shrug. \"Not so sure about Lucas.\" \n\n\"Oh, he's just being Big Brother. Don't mind him, please.\" \n\n\"Sandra...\" \n\n\"Dan, please...\" \n\nI purse my lips tight, swallow my urge to push back, and instead try a different approach. \n\n\"Okay... So, tell me this: why was it so important to you that I come today?\" \n\nSandra slows to a stop before my building, parks, and turns to face me fully. \n\n\"Well, I wanted to see you in a... normal situation, I guess. Somewhere outside the hospital or our apartments. I wanted to see you interact with other people, and I wanted to hear their perspective on you - the 'normal' you.\" \n\nI chuckle, though it is painfully strained. \"Ouch. That bad, am I?\" \n\nShe has the decency to look embarrassed, at least, and she reaches out to take my hand. I squeeze hers in return. \n\n\"I like you a whole lot, Dan. But you've got to admit our situation is... unique. I love spending time alone together with you, but to allow myself to be really invested here I need to know there's at least the potential of... more.\" \n\nMy heart rate picks up at her words, and I fight to quell the crazy sense of hope that flares in my chest. Hold your horses, cowboy. You need to get your shit together before you start fantasizing about any 'more' with Sandra. \n\nI gulp hard, then ask carefully: \"So, what's the verdict?\" \n\n\"Watcha think?\" she shoots right back, her chin sticking out and her eyebrows raised in challenge, grinning. Her quick sass alleviates my self-doubts and makes my palm tingle all at once, and suddenly I feel a whole lot better. This, I know how to do. \n\nLeaning back, I keep my response light, but I make damn sure she gets the message. \n\n\"What I think, young lady, is that you seem all too smug, having me at your mercy like that. I think I'd have to take measures to correct that attitude.\" \n\nSandra gasps loudly and bites her lower lip, even as a sexy half-grin curls her mouth. \n\n\"That sounds lovely, sir.\" \n\nGod. Just to hear that promise in her voice makes my dick swell. Shaking my head I lean over to take her head in both my hands and kiss her thoroughly, the pleasure of her soft lips and wet tongue against mine sweeping us both, leaving us panting when we finally draw apart. \n\n\"Upstairs, baby. Now.\" \n\nI turn and swiftly get out of her car, but before I can swing around to open her door she's already there at my side, smiling eagerly. I narrow my eyes in mock annoyance, grab her hand, and lead the way to my apartment. \n\n* \n\n* \n\n* \n\nNothing beats a good spanking. \n\nSitting up at the head of my bed, my back supported by a solid pillow, with Sandra squirming across my lap and wiggling her bright-pink ass cheeks just inches from my face, is everything I've dreamt it to be. I feel this urge to pinch myself, just to make sure it's real. \n\nInstead, I pinch Sandra. Sliding my fingers in between her glowing cheeks and into the creamy folds below them, I tweak her clit firmly. She squeals and bucks, throwing her head back, but her hands never leave their grip on the edge of the mattress, where I had instructed her to hold on and not let go. \n\n\"Hmmm... good girl.\" \n\nShe squirms even harder, trying to rub her pussy against my fingers, which keep caressing lightly along her labia. My dick is so hard inside my boxers that I feel my heart beating in its veins, but I'm not anywhere done playing. I press my forearm across her lower back and grind up into her soft belly to relieve some of that unbearable tension, while my right hand moves away, only to return with several more loud spanks to her blushing buttocks. \n\nThis time, instead of jerking and twitching, she melts. Her muscles relax and she sinks down with a deep moan, opening her thighs wide in breathtaking surrender. \n\n\"Fuck, baby, that's beautiful...\" \n\nThe next few minutes are pure bliss - alternating between spanking her glorious ass and stroking her sweet, swollen, soaked pussy, watching her body respond to me while she lets her mind float, high on sensation. \n\nSeeing and feeling her so utterly submissive, so completely trusting under my hands, opens a well of emotions that had been bottled up inside for so long I almost forgot I ever had them. I feel humbled and worthy, omnipotent and utterly at her mercy, all at the same time. I feel my gut clench so tight it's suddenly hard to draw a breath. God, but I love this woman. \n\nI love this woman. \n\nThe realization slams into me like an asteroid impact, coming out of no-where and hitting with force strong enough to forever change life as I know it. I freeze, momentarily unable to move a muscle while my mind goes into overdrive, re-running this new knowledge over and over, trying to get a grasp on it: I love her. I love her. I love her. \n\nA soft moan - \"please... please...\" - snaps me back to the incredible reality of Sandra, submissively spread across my lap, begging me for... what? Focus, Dan. I breathe deeply, slow, controlled breaths, harnessing my wayward emotions. I'll have time to indulge in them later; right now I have Sandra, naked and dripping wet, begging in my arms. I lean down to kiss her smooth shoulder, her tender neck, keep moving my fingers lightly along her slit as I speak quietly in her ear. \n\n\"You wanna cum baby?\" \n\n\"Yes, please... please...!\" \n\nI glide my fingers back down her slit, all the way down to her hard little clitoris, and immediately start rubbing it quickly, mimicking her moves from last night when I told her to masturbate for me. She pushes her ass back and up, pressing herself fully into my palm, causing loud wet noises to rise from between her widely spread thighs. \n\nI press my left forearm harder across her lower back to keep her right where I want her, shifting my left hand from her hip to grab her right ass cheek. My fingers sink deep into the sensitive, just-spanked flesh, opening her crack wider to allow my hungry eyes full, undisturbed view of her dark-red, gleaming folds clinging to my fingers, while both her holes squeeze onto themselves in rhythmic pulses. Fuck. So beautiful. \n\nHer breath catches and her abs tighten, pressing hard against my painful erection, and I know she's right there on the edge. I keep rubbing fast - I can't deny her anything in the world in this moment - and within seconds she starts cumming, screaming her orgasm in total abandon, her pussy flooding with a gush of hot, fresh juice, dripping down to soak my way-too-tight boxers. \n\n\"Arrggghhh... fuck, baby, that's right... cum for me, baby. God that's beautiful...\" \n\nI keep rubbing as long as she keeps straining against my fingers, which seems to extend the plateau of her climax into a series of delightful little peaks. God, I love making her cum. I feel like a freakin' superhero. When her orgasm finally recedes Sandra slumps down, spent and panting heavily across my lap, while occasional shudders of residual pleasure ripple down her sweaty back. I half-push her over to slide my legs out from under her, then let her roll back to her stomach. \n\n\"Stay right there baby.\" \n\nShe mumbles incoherently in response while I get rid of my boxers and return to her, crawling between her spread thighs until I am fully above her, and then press down. My whole torso is flat against her back, my belly spoons her warm ass, and the length of my dick is snuggled along her wet slit. It feels so insanely good; I groan deep. Sandra tilts her pelvis back which causes the head of my cock to glide over her too-sensitive clit. She yelps and shudders, moving a half-inch away, but when she hears my growled approval she does it again, and again. I almost explode right then. \n\nI suck in a breath and shift back, breaking the direct contact. \"Fuck, baby, stop. Don't move...\" \n\nKneeling behind her, my knees pushing her thighs further apart, I spread her ass with my left hand, and align my dick to her opening with my right. I sink in slowly. Her slick, tight walls wrap hot and wet around me, and pleasure shoots up my shaft and back into my balls, that tighten and tingle in response. \n\nI start moving slowly but within a few strokes, I lose all control. She just feels so fucking amazing, there's no holding back anymore. I grab tight hold of her hips and let my body take over, let my spiraling need dictate my movements as I fuck her as hard and fast as I can. \n\nShe's still holding onto the edge of the mattress, and she keeps her hips tilted back, allowing me to go as deep as I want, but other than that she seems too spent to really fuck me back. I love it; love knowing I did that to her, made her cum so hard that now she can do nothing but submit. \n\nThat thought, combined with the incredible feel of Sandra's hot, wet body milking my cock tips the scales and I feel my climax start deep in my balls, boiling and running up my shaft... \n\nIn that same moment I realize the other reason fucking Sandra like this feels quite so amazing. \n\nI'm not wearing a condom. \n\n\"Fuck!!\" \n\nI pull out just as the first jets of cum shoot out of my angry-red, excruciatingly swollen head. The first string of milky jizz covers her slit, pooling at her entrance and dripping down to the bed below, the rest splutters across her ass and lower back. The view in front of me - Sandra's pink, just-spanked ass and red, just-fucked pussy, decorated with my fresh white cum - is obscenely sexy; I'm sure I'd be fantasizing about it for years to come. I also hope it means I'd just avoided a major fuck-up. \n\n\"Hmmm... that feels so good...\" \n\nSandra's soft, mumbled voice comes from somewhere between her outstretched arms, accompanied by slow twerking of her cum-covered ass. I groan and shift back on my knees to the edge of the bed, then stand and walk over to the bathroom to fetch a washcloth, all the while screaming at myself inside my head. \n\nIDIOT! \n\nI make sure the cloth is soft and warm and my movements gentle as I clean the worst of the mess off of Sandra's still-tender bits. When I'm done I gather her close in my arms, pulling the sheet up to cover us both. She snuggles close, tucking herself under my arm with her cheek on my chest, and relaxes against my side. \n\nMy own heart rate is yet to return to normal, though I suspect that has more to do with my lingering, self-directed anger than with my recent climax. \n\nFuck. We need to talk. I should apologize. The condoms were right there in the nightstand; I just totally forgot them in the heat of the moment. I think I pulled out in time but I can't be sure... And I wanna check in with her after that spanking, too - I know she enjoyed it but still it was our first real spanking session so I wanna talk about that experience for her... God, Dan. Listen to you. What about the little fact that you love her? Isn't THAT something you should talk about, too?! \n\nI feel cold sweat break on my forehead and top lip, and another kick in my chest as my pulse picks up even more. \n\nFuck, not now. \n\nBut of course, panic attacks can't be wished away, and I am pretty certain that's where I'm heading. \n\nBreathe, Dan. Remember the exercises Dr. Pappas gave you. Let's do them now. \n\nResolutely I turn my attention to my body, starting down at my toes, clenching and un-clenching each group of muscles in turn, focusing on the relaxation that follows the hard tightening. Feet. Calves. Thighs. Tighten every muscle as hard as you can... count to ten... then relax. Gluts. Abs. Chest. Tighten... count... then relax. Hands and arms. Tighten... count... relax. Jaw. Face. Scrunch up as tight as you can... hold it... and relax. \n\nPhew. Okay. Back in the driver's seat. \n\nBreathing evenly now I look down at Sandra's blond head resting on my chest, somewhat puzzled that she hadn't commented on the strange exercise I'd decided to do right then. Her soft, puffy breathes that tickle the hairs on my chest clue me in on the reason. \n\nShe fell asleep. \n\nI half-chuckle, half-gasp. She breathes a bit more deeply, but doesn't really stir. Shaking my head - mostly at myself - I decide she's probably right. I let my mind latch onto the steady rhythm of her breaths, let my body soak up the warmth and softness at my side, and thankfully, soon enough I fall asleep, too. \n\n* \n\nA couple of hours later we're sitting side-by-side on my couch, coffees in front of us, when I finally broach the subject. Well, at least, the most immediate of them. \n\n\"Sandra, I'm really sorry about earlier.\" \n\nShe looks at me, startled. \"About what?\" \n\n\"The condom, baby. Or lack thereof. I don't know how it slipped my mind.\" \n\n\"Oh!\" She looks honestly surprised, then gives me a rueful look. \"Truth is, I thought you'd planned it like that... you know, pulling out to cum on me...\" she shrugs and then blurts out - \"It was so hot! Feeling your cum hit my skin, imagining how I looked from your angle... I felt so sexy!\" Her cheeks flood bright-pink, but she meets my gaze head-on. Damn, I wanna kiss her. \n\nFocus, Dan. \n\n\"It sure was hot, baby, but it wasn't planned. I'm really sorry. I think I pulled out in time, but just in case I didn't...\" I gulp, and continue with quiet conviction. \"Just in case I didn't, I want you to know I'd be there for you. I'll take care of you, baby. I promise.\" \n\nSandra looks searchingly at me, and finally nods. \"Okay.\" \n\n\"I - 'okay'? That's it?\" I'm not sure what I wanted to hear, but her 'okay' throws me. \n\n\"Yes. Okay. Look, Dan...\" she shrugs, as if trying to keep it light. \"What I mean is, let's not start building scenarios here, okay? If my period's late, I'll let you know and we'll talk. For now, let's not worry about it. Please?\" ",
        "Easier said than done. I clear my throat. \"Yeah, all right. Just - when is your period due?\" \n\nSandra does a quick calculation in her head before answering. \"A little over a week, maybe 10 days or so, I think. I'm pretty regular but don't really track it all that precisely.\" She bites her lips and adds - \"so I think it's safe. I mean, not 100% fool-proof... but pretty safe.\" \n\nI can see she's ready to drop the subject, and debate with myself whether or not I should raise the possibility of the morning after pill. But then, Sandra is a nurse; she must know the drug exists, and is likely to have access to it if she needed it. \n\nWhat if she chose to take it? \n\nEven though on a rational level I believe it's her choice, that I could never force her to carry an unwanted pregnancy, to raise an unwanted child, certainly not when it was clear from the start that we were going to use condoms, that a pregnancy was something neither one of us wanted... even so, some deep, wild, visceral part of me wants to roar and lash out at the mere idea of Sandra terminating that crazy chance before it even took root. \n\nBut then, she didn't suggest the morning after pill herself. She said she thought it was safe, but she'll let me know if her period was late, and then 'we'll talk'. That doesn't sound like she's planning on doing anything without telling me... right? \n\nTrust and hope, Dan. \n\nFinally, I decide to let the subject drop. For now. \n\n\"Okay.\" \n\nShe smiles and reaches for her coffee. I do the same, and we drink in silence, both of us still deep in our own heads, slouched back on the worn cushions. Slowly, I feel myself unwinding, relaxing in the light afternoon breeze drifting through the open window of my living room. \n\nAfter a while I feel mostly calm and centered; enough so, I think, to tackle the next item on my mental agenda. I put my cup down and turn to face Sandra. She mimics my movements and looks up at me, acknowledging the change in mood between us. I keep looking at her thoughtfully, silently, and she sticks out her chin in clear challenge. \n\n\"What?!\" \n\nGosh, I adore her guts. I smile, shaking my head at her attitude while catching that chin gently in between my thumb and finger, and dropping a light kiss on her lips. \n\n\"Tell me how you liked your first spanking session, babygirl.\" \n\nHer face softens, her lips parting in a tiny gasp. \"Oh, I loved it, sir.\" And then she adds cheekily - \"although, you know, technically speaking, that wasn't quite my first spanking session. I did have a boyfriend or two spank me on occasion.\" \n\nIt takes every effort to keep my fingers gentle around her chin while jealousy slices my guts at her words. She'd already told me about those previous boyfriends; but right now I hate the reminder. I purse my lips, exhale slowly... and then I catch the twinkle in her eye. The little minx! She did that on purpose! \n\nI shake my head, and tell her in a mildly chiding voice: \"You know, baby, it really is poor taste to mention your previous bed-partners to your current lover.\" \n\nShe bites her lip, but then meets my gaze head-on, looking more daring than remorseful. \"Is that what you are to me, then? My lover?\" \n\nI try reading her mind, but fail miserably. There's a challenge to her words for sure, and also the ring of hope. But there's something else there, which I cannot put my finger on. Pain, maybe? Inhaling deep, I release her chin to slide my palm along her jaw until it cradles her head. She leans slightly into my hand, and the small gesture warms my insides, giving me courage to answer her question. \n\n\"Among other things, yes, I most certainly am your lover,\" I say, then add -\"as well as your 'friend'. At least, that's what you told your family...\" I let my unspoken question ring. \n\nShe grins. \"You're also my Dom. 'Exclusively', even, as we agreed. But I didn't think it was the appropriate timing for sharing that bit with my family.\" \n\nI chuckle. \"Yeah, I think I'd like a chance to get on Lucas's good side first.\" \n\nSandra's grin widens. \"So, that would make you my \"exclusive-dom-lover-friend\", then. It rolls right off the tongue, doesn't it?\" \n\nYour exclusive-dom-lover-friend who loves you. I think, but manage to say instead, \"Sounds really good to me, babygirl\". \n\nShe peeks at me from under lowered lashes, and asks haltingly - \"Would it... would it be alright if I used 'boyfriend' for short?\" \n\nI laugh. \"Sure, baby. I'd admit being called 'boy'-anything is a bit strange at my age... but I'd take it. Gladly. Especially if it means I can publically claim you as my girlfriend, too.\" \n\n\"Absolutely. Thank you.\" Sandra mumbles close to my lips, before giving me a sweet kiss, which I'm all too happy to take over, coaxing her lips further apart and inviting her tongue to play with mine. At her gasp, though, I draw back. \n\n\"So, let me rephrase my question, girlfriend... How did you like our first spanking session?\" \n\nHer smile turns wicked. \"Mmm... I liked it very, very, very much, sir.\" Then a tiny frown appears on her brow. \"In fact, I think all of your neighbors heard exactly how much I liked it... maybe you should gag me next time?\" \n\nMy initial satisfaction at her words is chased away by her mention of 'gag'. Immediate flashbacks of the last time I gagged and spanked a woman - Naomi - flare up in my mind, dizzying in their intensity. I shake my head, trying to keep them at bay, to focus on the here and now, on Sandra on the couch next to me. \n\n\"No. No gag. That's definitely a hard limit for me.\" I manage. Barely. \n\nSandra's mouth drops open, but then she shuts it and nods instead. \"Okay, no gag.\" She gives me a tentative smile, which I return, sort of. Then she adds - \"maybe...\" and stops abruptly. \n\n\"Maybe... what?\" \n\n\"It's just that I get so loud... I couldn't really help myself, but now I'm embarrassed thinking about the possibility of meeting your neighbors on the stairs. It's kind of... humiliating.\" \n\n\"Baby, you have nothing to be ashamed of. I loved hearing you.\" \n\nShe half-smiles and shrugs. \"I know, but still... It makes me uncomfortable thinking all these strangers may be... I dunno. Judging me now. Talking to each other about 'that loud slut who couldn't stop screaming'.\" She makes a reproachful face. \n\n\"Hmm. I see.\" I want to shake her out of it, but know I cannot argue her feelings away. Damn. \"So, you're saying we need to find a way to muffle your voice that isn't like a 'gag' that would freak me out.\" \n\nShe nods. \"Yes. Please.\" \n\n'Okay, I'll think about it.\" \n\n\"Thank you, sir.\" The way she says it, softly and breathily and with total trust in me, is just like I imagine in my fantasies. I feel myself stir. \n\n\"You're very welcome, babygirl. Now other than your concern about being overheard, was there anything else that bothered you during your spanking? Anything we need to adjust for next time?\" \n\nShe smiles wide. \"Oh, you sure got me plenty hot and bothered with that spanking, sir!\" \n\nI narrow my eyes at her. \"Baby, with that attitude you'll get another one sooner than you expect.\" \n\nShe giggles excitedly and I exhale, striving for patience. \"Sandra, please. This is important. I'm just learning you, you're just learning me. Not everything will be perfect the first time we do it, and I need to know about it to be able to fix it. Maybe the room was too hot for you. Maybe your back hurt in that position... I can't know these things unless you tell me.\" \n\n\"Argh... Sorry.\" She mumbles, lowering her eyes. \"I didn't mean to be blas\u00e9 about it. But honestly, it was...\" Her eyes meet mine again. \"It was perfect. I loved it.\" And then she adds softly: \"Thank you for spanking me, sir.' \n\nI feel my dick swell. God. \"The pleasure was entirely mine, baby. Now, I suggest you go take a shower while I start on dinner. You need to eat something before you leave for your shift.\" \n\nShe leans in and kisses me slow and deep, reminding me just how passionate she can be under that practical nurse persona of hers. When she finally withdraws and goes to do as I bid her I am fully hard, and need to adjust myself while watching her beautiful behind swing softly side-to-side until she disappears behind the bathroom door. \n\nMan. I really do love her. \n\n* \n\n* \n\n* \n\n\"So, Dan, shall we get started?\" \n\nTo her credit, Annie manages to keep any animosity she must still be harboring against me out of her voice. It is Tuesday evening, and Jon has taken over their kids' bedtime routine - baths, stories and a lengthy cuddle before tucking them in - so that Annie can help me set up 'online presence', as she calls it, for my new business. \n\nBefore the divorce, I used to be here often. Jon and Annie would invite Naomi and me to join them for dinner, usually on Fridays, and then we'd hang out - catch a movie on TV, or just chat and enjoy the company. But then after Naomi and I split, the invites became fewer and farther in-between, and even when they were extended I declined more often than not. Eventually they pretty much gave up on me. \n\nJon and I still spent time together outside of work, but it was usually away from the Leonidas's residence - playing street basketball with our friends, or going out for the occasional beer. But even those outings weren't nearly as common as they used to be, and in the last few months I'd seen him almost exclusively at our shifts. \n\nAnd then, Jon shocked me when he brought up the subject of D/s relationships, told me that he'd just learned about Naomi and me, and that he and Annie were curious about it, too. When he asked me to come over for an evening of Q&amp;A, I was hugely flattered. Seeing myself as the experienced Dom, helping a couple of newbies into this world, was a much-needed boost to my otherwise quickly-declining self-esteem. \n\nBut that evening ended in disaster when Annie mentioned 'Naomi's new Dom', and I'd gone crazy. It wasn't all that long ago - barely a month had passed - but it feels almost like a different lifetime. \n\n\"Dan? You with me?\" \n\nAnnie looks searchingly at me, and I'm surprised to find real concern in her eyes. I was certain Jon had to twist her arm into offering her assistance, but now... I'm not so sure anymore. \n\n\"Why are you doing this, Annie? Why would you help me out?\" \n\nAnnie purses her lips and looks down at her hands, fidgeting, clearly uncomfortable with my question, possibly debating internally whether or not to answer it. Finally she looks back at me and admits quietly: \n\n\"Because Naomi asked me to.\" \n\nHer answer floors me. \"What?! I mean, w-why?\" \n\nAnnie shrugs, but her annoyance peeks behind the nonchalant gesture. \"She didn't say so in so many words, but I suspect she somehow feels guilty. Or at least, somewhat responsible for you. So she wants to know you're not going to end up jobless and homeless, living on welfare.\" \n\nI gulp hard. \"Does that mean you told her about - \" \n\n\"We talk every day, Dan. She knows everything. Well, everything that I know, at least. She knows about your suicide attempt, about Jon's beating you up, about your likely being discharged from the Force.\" Annie's straight gaze holds mine, unflinching, but then she breaks it when she shakes her head, as if frustrated with her friend. \"Unfortunately, my saying 'forget about it' and 'it's not your problem' doesn't seem to work. On some level, I think she believes you deserve every misery. On another...\" \n\nAnnie looks at me. \"She told me that while she hates you for what you did, she can't just write off ten happy years of her life.\" Then to my surprise Annie smiles and adds - \"I told her she should try harder. She laughed, and told me to just do this for her.\" Annie gestures at the laptop sitting open atop the desk in front of us. \"So, here we are.\" \n\nI nod mutely. Yeah. Here we are. \n\nIt feels strange - wrong - having Naomi worry about me. Even if I hadn't attacked her, it wouldn't feel right. I struggle with it in my mind while unease churns in the pit of my stomach, when I finally get it: I had failed her so completely that somehow, somewhere in our no-longer-a-relationship, the roles had reversed. Now she feels like it's somehow her responsibility to protect me, to care for me, to make sure that I was okay. \n\nPathetic loser. \n\nI want to smash something. My head, preferably, against the hard brick wall. But I sit still, breathe deep, and get a grip. \n\nFace it, Dan. Face the consequences. You will never, ever, be the Dom in Naomi's mind again. Whenever she thinks of you, she'd think of this broken man who needs fixing. You hate this, right? Good. Live with it. Learn from it. And make damn sure you don't repeat these mistakes with Sandra. \n\nI rub my palms over my face, inhale sharply, then slowly release the air out of my lungs, putting my hands back down on my knees. \n\n\"Okay.\" \n\nAnnie looks at me, her head tilted to one side, appraising me silently. I grin tentatively at her. \"Let's make some good news to report back to Naomi. I think we both agree she should worry about her own life rather than about her whacko ex making a living, right?\" \n\nAnnie nods, hesitates, and then leans in to give me a quick hug and a kiss on my cheek, which she then wipes gently off with her thumb, to erase the small traces of pale lip-gloss from my blushing skin. \n\n\"Let's do this, then.\" She turns to the screen, but then swings back to look at me, her green eyes suspiciously moist. \"It's good to have you back, you know.\" \n\nI swallow the lump in my throat and cough before I can answer. \"Yeah. I... Thank you. For everything.\" \n\nShe smiles, and thankfully turns back to the screen, sitting up straight as she shifts her attention to the task at hand, giving me another moment to compose myself before I, too, focus on the work we're here to do together. \n\nIt's really good to be back. \n\n* \n\n* \n\n* \n\nBy the end of the week I have my business page up online. It waited a few days until I got clearance from my bosses at the Force, seeing as I was still, technically, a paid cop. But as soon as I got the green light Annie pressed the magic button and - ta-dah! - it went live, along with a small advertising campaign that put my listing next to Google's results for people searching for a handyman in town. \n\nA couple of days after the official launch of my website I get my first phone call from a potential customer, and by the end of that second week I have already done three paid gigs, and have a handful more scheduled for the following few days. \n\nI also keep my twice-a-week volunteer work at the women's shelter. A part of me feels like a fraud, imagining how they'd be cowering away had they known that I was, in fact, one of those abusive bastards they were all hiding from. But at the same time, I love going there. The younger kids all cheer in delight when I come in the door, shouting 'Dan the Handyman!' Dan's here!' and then congregating around me to look on with interest as I fix a broken door handle, hang a framed picture, or fix a rickety chair. Their older siblings hover in the background, keeping their cool, but already a couple had approached me and asked if they could help, and maybe learn how to do these things. The look of damn-near hero worship in their eyes is like balm to my soul. \n\nIt feels good. I feel good. \n\n* \n\nDr. Pappas seems satisfied with my progress, too. \n\nSeated across from him at his little clinic, I tell him about my conversation with Annie, and how much I hated being reduced to 'that mentally-unstable ex who may not be able to support himself' in Naomi's eyes. The older man nods in understanding. \n\n\"Yes, I imagine that could feel quite emasculating.\" He comments lightly. \n\nI make a face at his harsh - and astute - observation. \"Yes. Quite.\" \n\n\"So, how are you handling it?\" \n\n\"You mean, the blow to my ego?\" \n\nDr. Pappas rests his lips on his tented fingers, considering me thoughtfully before answering. \n\n\"Well, we both know it goes deeper than that, Dan.\" \n\nAt my silence, the older man tilts his head, waiting. Truth is, I'm uneasy - heck, I'm scared - to follow this line of thought. I keep my mouth firmly shut. Dr. Pappas raises an eyebrow, but even this open dare doesn't work. So he decides to spell it out for me. \n\n\"Dan, remember that your mental breakup happened when you learned that Naomi had moved on to a new Dom. At that moment, a big chunk of your self-identity - the part you had been clinging to as your last hope for happiness - had basically been shot down. Your violent reaction was the result of what, in your mind, was perceived as real threat to your very existence. 'Who you were', the very core of your worth as a man, was being invalidated, and you felt like you had to do something - anything - to stop that from happening.\" \n\nHe stops and looks at me pointedly over the rim of his half-moon spectacles. At my cautious, muted nod of agreement, he continues. \n\n\"And now it seems not only that this hope of returning to be Naomi's Dom had died, but that even the memory of 'Dan, Naomi's Good Dom' had been destroyed. You no longer live in her mind as the man she once loved and respected. Instead, you're her mentally-unstable, jobless, loser ex. It's almost like a second death... Isn't it?\" \n\nI look down at my hands, fingers laced tightly together, knuckles white - the only outward expression of the inner turmoil set forth by Dr. Pappas's blunt words. And yet, strangely, thankfully, I feel no rage. There's no anger boiling inside, just waiting to spill over, like there was before. \n\nInstead, there is grief. A deep sadness swells inside my chest, and settles as a hard lump in my throat, followed closely by the gut-wrenching acceptance of things that could never, ever be. \n\nThe wave of emotion almost knocks me over. I choke on my attempt to answer Dr. Pappas, and get into a fit of coughs. After a moment, I feel a hand at my shoulder, and then a paper cup filled with cold water is offered. I take the cup, drink shakily, and place it back on the table, clearing my throat. \n\n\"Better?\" \n\nI nod. \n\n\"Talk to me, then.\" \n\nResolutely, I nod and look up at him, and finally manage to answer. \"I guess... yes. It does feel like... that part of me just died again. And that just makes me... sad. I mean, I know it's done and buried and there's not a damn thing I can do to change it. I just... I wish I could erase the last couple of years from her memory. I wish she'd just remember the good times, the good husband, the good Dom that I'd been to her before.\" I take another shaky sip from the water. \"It's not about wanting to get back with her. We've both moved on. But still...\" \n\nMy voice trails off. Dr. Pappas considers my words, that seem to still swirl and echo in the air between us, with an unhurried, deeply thoughtful expression, until finally he leans forward, looks me in the eye, and asks in that soft, calm, precise manner of his: \n\n\"Why is it important that Naomi remembers how good you were before?\" \n\nHis question catches me unprepared. I slump back in my chair, my bottled-up breath leaving my chest in a whoosh of air, staring up at the ceiling. \"Pffff... I think...\" I inhale deeply, then sit up once more, and meet Dr. Pappas's intent, pale-blue gaze. \"I think if I knew she remembered, then I'd know it really was for real, before. So I could hope to be that again, in the future.\" With Sandra. \n\n\"Hmm.\" Dr. Pappas looks at me shrewdly, and then asks with a hint of challenge in his voice: \"What if only you remembered? What if nobody else but you knew how good a man, a husband, a Dom, you once were? Would that mean it never happened?\" \n\n\"I -\" \n",
        "I gasp as his words sink in, then shake my head slightly. The shrink half-grins at me, and pushes some more. \"If a tree fell in the forest and there's nobody there to hear it fall, would it still make a sound?\" \n\nWell, when put like that... \"Absolutely, sir.\" \n\nHis smile widens. \"Yes, I think so, too.\" \n\nAnd then he sobers up and leans forward, his eyes holding mine so that I cannot look away. \"Dan, I want you to remember this, because it's really important: you know you were a good man before. You know you are good now, today, with Sandra. You know how committed you are to continue being good, doing good, in the future. That knowledge exists inside of you, and it doesn't depend on anyone else. All right?\" \n\nI do know that. Even if nobody else knew, I would know. \n\n\"Yes sir. I'll remember that.\" \n\nHe smiles again, and relaxes back in his seat. \"Good. Then I'll see you next Tuesday.\" \n\n* \n\n* \n\n* \n\nMuch later in the evening, at Sandra's place, we're snuggled together on her couch watching a movie. Or rather, she's watching it, some lightweight chick flick I have little to no interest in; As for me, I have eyes - and hands - only for Sandra.  \n\nShe's on her side with her back to me, her head pillowed on my folded left arm. She's wearing light, loose-fitting pajama bottoms and a soft, clingy cami shirt, while I'm in my boxers and T-shirt, and her warm curves press back into me through the thin layers of clothing separating us. I lean in to kiss and nuzzle the spot where her neck meets shoulder, breathing in her sweet scent. \n\n\"Mmm...\" she murmurs and tilts her face away, giving me more room to play. Yes! I smile against her skin, and go back to kissing, trailing from just behind her ear, down her neck, all the way to her shoulder, then just behind it, that place where her arm meets her back, where her softness begs for a small bite and a deeper taste. \n\nShe giggles - aha! so that spot was ticklish! - and then she gasps when she feels my erection roll against her wiggling ass, and her hand shoots back to grab my hip as she presses into me fully. \n\n\"Ah, that feels good baby...\" I grunt and mimic her move, my hand taking firm hold of her hip bone as I grind slowly against her, though I keep my kisses light and teasing at the top of her spine. \n\n\"Mmm...\" she mumbles her agreement, and starts turning around. I stop her movement by tightening my grip on her side. \n\n\"Nope. Stay right where you are baby... keep watching that movie. I'm just gonna amuse myself with you for a while...\" \n\nShe makes a half-protesting noise but relaxes in my arms, and I smile my satisfaction into her smooth hair, dropping a kiss onto her crown. \n\n\"Good girl.\" \n\nShe sighs and melts a little more against me. My hand slides down to find the hem of her cami and slips under it, caressing her soft belly, then moving up to find the generous swells of her breasts. We both moan at that first contact. I spend long, leisurely moments stroking, cupping and kneading them lightly, but keeping away from her hardened, straining nipples. Sandra whimpers and presses herself into my hand and I chuckle behind her ear. \n\n\"Stop squiggling, baby. This has nothing to do with you. I'm just enjoying myself here.\" \n\nShe moans a low protest but tries harder to keep still. I murmur my approval into her neck, while my hand moves down over her belly and into her pj-bottoms, pushing them down her hips to expose her baby-pink bikini panties. My fingers slip to trail just under elastic waist band, feeling her abs clench in response, then going up and over her hip, sliding deeper under the clingy material to grab a handful of her round, fleshy ass, and to squeeze it in affection. \n\n\"Ahh... God I love your ass, babygirl. Feels so good in my hand.\" \n\nShe circles her hips slowly in response, moaning quietly. I push her pj's further down as far as I can reach, half-way down her thighs. \"Get them off, baby.\" I say, and she half-pushes, half-kicks them until they're at her ankles, then uses her feet to get rid of them altogether. I seize the opportunity to push my knee between hers, opening her thighs just enough to allow my hand easier access to her tender bits. \n\n\"Keep watching the movie baby. I'm gonna quiz you about it later, and spank you for every answer you get wrong.\" \n\nIt's an empty threat and we both know it - I have no freakin' idea what the movie is about - but Sandra giggles breathily and plays along, anyways. \n\n\"Yessir!\" She adds a mock salute, and I grab her wrist and pull her hand up until her fingers close around the edge of the armrest beyond our heads. \"Hold it, baby.\" \n\n\"Yes, sir.\" This time her voice sounds soft, compliant, and I know she's slipping into the right headspace. \n\n\"Good girl.\" My own voice turns low and gruff. God. I'm just as susceptible, if not more, to the shifting dynamics between us. Focus, Dan. \n\nStretched out like that, her cami bunched above her exposed breasts, her legs held open by my thigh in between her knees, Sandra's body becomes an open playground for my free hand to roam. While my mouth is limited to her neck and shoulder, it turns out to be just as well - apparently that spot just behind and a little under her ear is hot-wired to her pleasure center, because every time I touch it - kiss, lick, suck or bite - she jerks and shudders, and grinds her ass back against my dick. \n\nI chuckle, delighted at the unexpected find, and do it again. Man, I like this game! \n\nHer movements become a little more insistent. I smile wickedly behind her, and keep teasing her. My hand focuses on her thighs, sometimes lightly scratching her skin with the backs of my fingernails, sometimes kneading her muscles, sometimes drawing light circles with the tips of my fingers just along her crease - but never touching her panty-covered pussy. She gets a little frustrated and pushes her pelvis forward, clearly begging for me to touch it. I move my hand away, going back to play with her breasts. \n\nI do pay attention to her nipples this time around - I really can't keep away from them - but I keep my touch light, tracing around her areolas, rolling her hard tips gently between fingers and thumb, very lightly tugging on her sensitive buds, before going back to caressing the swollen undersides with my whole palm. \n\n\"Ohhh, pleeeaaassseeee...\" \n\n\"Shhh... hush, babygirl. I'm playing. You're watching your movie. No interruptions.\" \n\n\"Ffffuck...\" The whispered expletive makes me smile behind her ear. \n\n\"Tsk, tsk, tsk... keep quiet. I'll make you feel so good...\" \n\nThere's a slight shudder to her muscles, like she's struggling to hold herself still. The thought excites me even more. My hand glides over her smooth, rounded belly to cup her whole pussy in my palm over her panties. She pushes into me and this time I oblige, squeezing lightly, repeatedly. Sandra arches her back, her legs shifting restlessly, rubbing against mine. \n\nI start stroking up and down over the crotch of her undies, which now feels hot and damp under my fingers. But my touch is still way too light to deliver any real pleasure, certainly when not in direct contact with her skin. My goal is to tease, not to please - not yet - and by the look of it, it's working damn well. \n\n\"Oh God, Dan, you're driving me nuts...!\" \n\n\"Mmm... that's the point, babygirl. Hush.\" \n\nSandra whimpers. I smile so wide my cheeks hurt, thankful for my position behind her back that prevents her from seeing my expression. Man, this is a fun game! \n\nI move my hand back so that the tips of my fingers lie flat over her covered clit, press down just a little more until I feel that rigid bundle just on the other side of the soft cotton barrier, and start rubbing in small circles. Sandra arches up, pushing even harder into my hand, trying to get as close as possible as I drive her higher and higher towards the edge... \n\nUntil I stop, moving my hand to grab her inner thigh just above her knee, forcing her legs to remain open as I watch her buck and convulse, trying to grind her pussy against something, anything, that would bring her relief, but finding none. \n\n\"No, no, no, please, please, please...!\" \n\nGod, but I love that ring of true desperation when a woman is so close, so needy, but denied. \n\nI want to taste that need. \n\nSandra is startled when I push myself up and off the couch, rolling her onto her back and then pulling her hips forward so that her ass is right there over the edge, and then opening her thighs wide. She lets me arrange her body to my liking, watching me under eyelids that are heavy with desire, mouth open to allow for her quick, panting breaths, but says nothing. \n\nI lean down... but at the last moment move my mouth an inch to the side, to nuzzle the tops of her inner thighs just along her panty line. Sandra makes a high, mewling sound. I grin evilly and go back to lick, kiss and suck the sensitive bare skin, so close to where she wants me... \n\nHer smell is thick and intoxicating, her damp panties now clinging to her flesh, revealing more than concealing her treasures. Unable to resist much longer I look up into her flushed face and lower my open mouth onto her covered labia, letting my tongue swipe along the damp cloth before my lips clamp down on it in a deep, hard kiss. Her back arches, her head thrown back, her moans muffled by one arm thrown over her mouth. \n\nHer panties slide against her creamy cunt and I can no longer resist my own need to taste her fully. I hook my left finger under the soaked crotch of her panties and pull them as far to the side as I can, baring her delicious, dark-pink pussy to my eyes, my mouth, my tongue. \n\nI take another deep sniff, and then, finally, bring my mouth to her pink, glistening folds. My tongue sinks into her incredible softness, her essence swamping my senses, salty and sweet and perfect. I lick and suck and lick some more, relishing every taste and texture, until another desperate mewl draws my attention to her face. \n\n\"Please, please, please I need to cum so bad... please!\" \n\nI grin up at her, wiping my face some against her inner thighs, then licking up the sticky juice before meeting her eyes again. \"You sure, babygirl? I could do this all night, you know...\" \n\n\"Oh fuck yeah I'm sure! C'mon already!!\" \n\nI chuckle, and click my tongue at her. \"Tsk, tsk, tsk... you sound pissed off babygirl. You wanna try asking nicely?\" \n\nShe groans deep and long, clearly fighting her frustration, but then finally breathes in, relaxes back against the cushion, and gives me the most beautiful pleading look I'd ever seen in my entire life. \n\n\"Please, sir...\" her voice is as soft and submissive as I'd ever heard it. I almost cum in my boxers hearing it. \"Please, please, please sir, please make me cum...!\" \n\nI let the rush wash over me, enjoying every last millisecond of it, before answering her. \n\n\"With pleasure, babygirl. Just get these nice and wet for me...\" \n\nI give her my two fingers to suck on and she takes them deep into her mouth, swirling her tongue around them. \"Mmm, that's perfect baby.\" I withdraw the saliva-slicked fingers from her pouting lips and bring them down to her pussy, then slowly push in. She yields to me and they sink all the way into her tightness, and I hear Sandra's low gasp. \"Fuck, that feels so good!\" \n\n\"Enjoy it baby... you've been such a good girl for me tonight.\" \n\nThen I lower my lips to cover the whole top of her slit, sucking her clit fully into my mouth, and start pumping my fingers in and out. \n\n\"Oh my gaaawwwddd! Aaarrrgggghhhh!!\" \n\nSandra's high-pitched scream is muffled by her own arm, which she seems to bite into to keep from waking up the neighbors while I suck on her clit and finger-fuck her hard and fast. Her whole body seems locked in spasm as she strains for the peak until finally she gets there, squeaks once more behind her arm, and cums hard, her pussy pulsating and gushing fresh juice with every involuntary clench of her pelvic muscles. \n\nI keep going until the storm recedes, and finally, when I feel her inner muscles relax some, I withdraw my fingers slowly, carefully, and move to cover her soaked slit, pressing gently. She moans and presses back, shudders, and slumps back to the couch, breathing hard. \n\n\"Wow.\" She mumbles, and I burst out laughing. \"Damn, babygirl, could I get that on record?\" I manage, still chuckling. \n\nShe doesn't answer, just lies there, still trying to catch her breath. \n\nI sit back on my haunches, letting her have her moment, even though my own need is throbbing in my dick, uncomfortable inside my tight boxers. I know I'll get my release soon enough; but seeing Sandra like this, completely undone from my lovemaking... it's almost as good. \n\nFinally she opens her eyes enough to peer at me, then raises herself onto her forearms. \"How do you want me, sir?\" \n\nIn every way imaginable, now and forever, I want to say. Instead, I reach my hand out to her. \"Up on your knees, baby. Right here on the couch. I've been fantasizing about fucking these gorgeous breasts of yours...\" \n\nShe inhales sharply - \"yes, sir\" - and takes my hand, letting me pull her up and keep her steady until she settles on her knees on the couch, her face level with my belly. She looks up into my eyes and brings her hands to my boxers, hooking her fingers under the elastic. At my nod she pulls them off slowly, bending low to push them down towards my knees, laughing when my dick catches in them and then springs up to slap her cheek with a loud smack. \n\nI shake my head mockingly, stifling my own laughter. \"That's enough baby. Now let's get your shirt off. Hands up.\" \n\nSandra raises her hands obediently, and I quickly get rid of the bunched-up cami. Her beautiful, heavy breasts jiggle and sway when she lowers her hands to her hair and pushes it back from her face; reaching down, I palm the outer swells, one in each hand, while my thumbs stroke the sensitive undersides, gliding up to circle her hard, protruding nipples. The different textures fascinate me, the skin of her breast so smooth and soft, yielding to my touch, while her nipples are crinkled and taut, their bumpy texture pressing back into my finger pads. \n\nMan, these breasts are perfect. They were made for fucking. \n\n\"Open your mouth babygirl. I want as much spit as you can produce all over my cock for this. No sucking, just open wide and let me fuck real deep. I want you to gag a little - that would make you produce lots of spit - but then don't swallow, instead let it drool. All right?\" \n\nShe obeys, and I take her head in my hands, gritting my teeth as my cock splits her lips and glides down her tongue all the way in, then using short, staccato thrusts bumping right against the back of her mouth. Sure enough the wet, squelching noises coming from her throat tell me it's working, and then she pushes herself higher on her knees and tilts her head forward, and two streams of drool trickle from both corners of her mouth down my shaft, mixing with my precum, creating the perfect messy mix of slippery, natural lube. \n\nWhen my cock is completely covered I pull back. \"Now hold your breasts in your hands and spit onto them.\" I tell Sandra, and she complies without hesitation, squeezing her tits together, the generous orbs spilling over her smaller hands. She bows her head and deliberately lets the excess saliva that had pooled in her mouth drool in a long, thick, clear string, right into her cleavage. \n\nWhen the string finally snaps, she raises her head to look back at me, a satisfied smirk on her lovely mouth. \"Like that, sir?\" \n\n\"Mmm... just like that, babygirl. This is perfect. Now keep still.\" \n\nShe pushes her tits up, offering herself to me. I take her upper arms in my hands to hold her in place and step forward, sliding my dick up and into the deep, soft, wet cleft between them. \n\n\"Ahhh... this feels sooo good babygirl... now squeeze harder. I'm going to do all the work, you just squeeze those beautiful breasts around my dick and keep adding as much lube as you can, all right?\" \n\nShe nods and presses herself tight around me so that my dick is completely sandwiched inside her softness. Unable to resist for another second I start moving, my cock sliding up and down the slick, wet tunnel between her tightly-pressed breasts, the purple-red head peeking up in-between them before disappearing again. And again. And again. Sandra drops her head lower and sticks her tongue out to add little licks to my glans at the end of each strokes. Each hot, wet lick is hotwired to my pleasure center, pushing me higher and higher... \n\nIt's all I can do to keep standing as my orgasm hits me, hard and swift. My balls tighten up, and in another moment I start cumming with a loud shout, erupting in warm, thick squirts that sputter onto Sandra's lips and tongue, cling to her chin, and pool right at the dip of her neck where her pulse flutters, quick and shallow. \n\nMy hips keep moving, one hand losing its grip on her arm to tunnel in her blond hair, cradling her head and holding it in place while I keep fucking her breasts slowly, deliciously, soaking every last sweet sensation until finally, regretfully, I withdraw, and with a deep grunt move to sit heavily next to her on the couch, and flop back against the cushion, much like she did just moments before. \n\n\"Wow\", I mumble, and it's her turn to laugh. \"Told you so...\" she quips, and then settles on her back next to me, her head on my shoulder, her breathy giggles ebbing, softening into light, even breaths as she drifts off to sleep, cum pearls and all. \n\nGod, I love this woman. \n\n* \n\nAt some point in the evening we've relocated into the bedroom, after washing the necessary bits. The next morning, I wake up from a very sweet dream as the bed dips next to me when Sandra rejoins me under the covers. Cracking an eye open I see her looking back at me with a strange mix of hope and trepidation, though it is softened by the grey pre-dawn light. \n\n\"What is it, baby?\" I mumble, my voice still gruff with sleep. \n\n\"Ehm... we need to talk about our limits. We need to make some changes.\" Her teeth worry her full lower lip, while my foggy brain tries to wake up enough to figure out what the hell is going on. \n\n\"Sandra...\" I flop to my back and rub my hands over my face a couple of times, then peer up at her. \n\n\"Baby, is there any way we could postpone this talk an hour or two, or at the very least until we've had our morning coffee? It's not even 6am. On Saturday.\" \n\nThe scales tip towards anxiety on her face at the clear ring of annoyance in my tone, and I feel like a jerk. If it's important enough to wake her up this early... Shit. I sigh and push myself up to sit with my back against the headboard. \n\n\"Yes, we can talk. Come here.\" I open my arms so that she can scoot closer and snuggle to my side as I kiss the top of her head. Still feeling a bit out of sorts, I find myself stalling for time while waiting for my brain to kick into full gear. \n\n\"What made you get up so early, anyways? Have you set your alarm by mistake?\" \n\nI feel her shrug under my arm. \"I had to pee.\" \n\n\"Well... a girl's gotta do what a girl's gotta do.\" I shoot, trying to lighten the mood, and then grin apologetically at her. \"Sorry. Have I mentioned I really need my coffee in the morning?\" \n\nShe nods, but doesn't smile back, instead looking down at her hands, which are busy removing invisible lint from her light comforter. \n\nShit, she really is nervous. C'mon Dan, wake up! Focus. Your submissive - your new, inexperienced submissive - just came to you and said you needed to talk limits again. And she's obviously nervous about it. It's your job to guide her through this, remember? ",
        "\"Okay. I'm awake now, and I'm listening.\" I take her chin gently between my fingers and turn her head to face me. \"What's on your mind, baby?\" \n\nShe's still chewing hard on that poor lip of hers, until I tug it loose with my thumb. \"C'mon, babygirl. Out with it. You said we may need to make some changes to our limits? What's going on?\" \n\nShe gulps hard, and buries her hands under the cover. I have a sneaking suspicion she'd just crossed her fingers and doesn't want me to see. Shit. That bad, huh? I wait, my own anxiety climbing quickly, and finally, when the silence stretches a little too long, I snap. \n\nHolding her eyes I speak quietly but with absolute command. \"Enough stalling, babygirl. Talk. Now.\" \n\nThankfully that does the trick. \n\n\"Remember...\" she clears her throat. \"Ehm, Remember when we talked about how we each like being called, you said you were happy to call me babygirl, but you didn't want me calling you 'Daddy'? You said that was a hard limit for you, right?\" \n\n\"Yes... so?\" \n\n\"Well...\" gulp. \"I - I want to be able to call you 'Daddy' sometimes\". \n\nShit, shit, shit. Breathe, Dan. You avoided explaining before; now it's time to 'fess up. \n\n\"Baby, my aversion to that title is not simply a matter of preferences in kink. If it were, I'd totally play along, knowing it made you happy.\" She nods, looking back down at her hands. Again I reach to turn her face up so I can look at her, and find her eyes brimming with tears. Double fuck. \n\n\"Sandra... my issue - to me, that word is just way too loaded to use in play. For one, my relationship with my own father... there's a ton of bad baggage there. Then on top of that, Naomi and I had tried for kids for years, and failed. And as a result of that our whole marriage fell apart.\" I shake my head, grimacing. \"So to me, that word, 'daddy' - it's hopelessly connected to 'heartache' in my mind. I'm sorry, but I just can't do that. Using it would kill any play for me, guaranteed.\" I grimace. \"I hate disappointing you, baby. Maybe -\" \n\nI stop short. Could I really voice that hope out loud? \n\nI don't know if it's the eerie, surreal feel of the early morning, or the lingering sweetness of the dream in my mind, but something makes me feel like maybe, just maybe, something magical would happen if I let myself hope, here, with Sandra. I've never been fanciful, but right now - \n\nTrust and hope, Dan. \n\n\"Maybe that would change someday. Maybe one day when I have kids...\" I look into her eyes, silently adding 'with you' - \"...maybe it'd be different. It may not be a mood killer forever.\" \n\nShe nods now, looking strangely, hugely relieved. In fact, there may just be a hopeful smile curling the corner of her mouth. I tilt my head, looking at her questioningly. She hesitates, but finally speaks softly. \n\n\"So, what if it wasn't during play that I wanted to call you 'daddy'?\" Hope is definitely winning that battle now, lighting up the dark blue depths of her eyes. \n\nI'm not sure I follow. \"Huh? How do you mean, baby?\" \n\nShe takes a big breath and turns away from me, reaching for the nightstand beside her, and then faces me again, holding something in her hand. Holding my eyes she opens her grip, showing the mystery object to me. \n\nI drop my gaze to her hand, and my heart stops. And then kicks into crazy double-beat. \n\nIt's a pregnancy test stick. And there are, very clearly, two pink stripes in the small oval window. \n\n\"Congratulations, Daddy.\" \n\n* \n\n* \n\n* \n\nAuthor's note: Did you like this chapter? Tell me, please! VOTE, FAVORITE and COMMENT. Thank you so much!"
    ],
    "authorname": "small_town_girl",
    "tags": [
        "spanking",
        "blow job",
        "mdom",
        "fsub",
        "mature",
        "romance",
        "oral"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/hitting-the-bottom-ch-08"
}