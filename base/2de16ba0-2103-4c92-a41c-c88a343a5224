{
    "title": "Steamed Milk",
    "pages": [
        "\"Somewhere, a girl is warming up with your max.\"\n\nHe saw that motivational quote in a meme picture on the Internet. Seeing this at the beginning of the year, that optimistic time when everyone makes a promise of self-improvement... it was enough of a catalyst to actually get him in the gym this year.\n\nAt the end of this year, he hoped he'd have a girl warming up with him. After all, his name was Max.\n\nMax brought his arms in front of him, held out from his body at ninety-degree angles, pressing two padded arms inward in a way that always made him flinch that he'd finally pinch his nose between them, despite this having never happened before. Three or four plates clanked behind him as he lifted them.\n\nHe had no idea what this machine was called. If it wasn't for the pain in his pectorals after first using it, he might not have even known this was the muscle group being exercised.\n\nAcross from Max was a black metal structure where some ridiculously muscular man was squatting with a huge barbell across his shoulders. He looked like something out of Total Recall, moving those huge round black weights like they were Oreos. Max was much more familiar with that form of black disk.\n\nIt wasn't that Max was overweight. He was in perfectly acceptable shape. He just had very little muscle tone because he spent so little of his time moving. He worked in the office of an insurance company where they said they encouraged getting up and stretching every hour, as if his numbers could survive that much time away from his desk. After work, he walked to his car and up one single flight of stairs before collapsing onto his couch to eat whatever snacks and watch whatever TV allowed him to tolerate the grind for one more day. Even video games took too much mental energy on some nights. His gamer score suffered as a result.\n\nHopefully, working out would help his mood. If nothing else, his sleep was much deeper than it was before. Whether that was due to exchanging most sodas for water or simply being more exhausted when he got home, Max wasn't sure. On the downside, he had completely lost track of what was happening in his favorite shows.\n\nThe Governator across from him had finished his one trillion reps. He expected him to stride off with the barbell on his shoulder like a caveman's club. If Max tried lifting that, he would be tipped over like the Flinstones' car when they put the rack of Brontsaurus ribs on it. He wondered if ribs had enough protein to build muscle.\n\nProtein. He never heard that word so much in his whole life as he had in the five weeks he'd been going to gym. Evidently that was the building block of muscle. A three ounce bag of Doritos had two grams of protein, and that was per serving!\n\nIt still didn't seem like much. But anything was better than those protein shakes. Some people blended their own in plastic shakers with whey isolate protein or some crap. Those were intolerable. Then there was the brand with the word 'milk' in the name that somehow contained no milk. He boycotted those on principle. The only protein shake he could stomach had a Special K logo on the front, which always made him feel like a wimp. This one still tasted like someone crushed a bunch of chalky antacids into half-and-half and tarted up further with vanilla extract, the flavor lingering on his tongue for what felt like hours after a single sip.\n\nThe recently vacated exercise station across from Max was approached by two very attractive women. One thing the gym had in ample supply, other than vacillating self-esteem, was women who were fit and beautiful. One was black, with short straight black hair and a gray spandex top and shorts with yellow accents on the side. The other was white, brown hair pulled into a ponytail with the tips dyed red and a towel around her shoulder. Her workout clothes were just an old T-shirt and a pair of loose gym shorts.\n\nThe black woman jumped up and grabbed the horizontal bar at the top of the structure and started doing pull-ups. That was one exercise that Max knew the name of, at least. He watched with increasing amazement as the woman performed pull-up after effortless pull-up. Max knew not to stare, so he couldn't keep track, but it was a lot. It might have been fifty.\n\nAs she did that, the woman with the dyed tips stretched her arms over her head, revealing a little midriff. It wasn't as sculpted as the abs of her workout buddy. She had a stomach that could belong to a statue, and was surely just as hard.\n\nThe black woman released her grip on the pull up bar and rubbed her hands together. She wordlessly gestured to it, and the brunette stopped her stretching and moved herself under it. Evidently not wanting to jump to reach it, the black woman knitted her hands together and boosted her friend up until she could grab it. She circled behind her and held her hands out nervously, the way a mother might hover when their child was on the swing set for the first time.\n\nThe white woman-\n\nDammit, he was tired of referring to them by what they looked like. What name could he give them so he wouldn't keep having to say \"the black girl?\" How about Monica and Rachel? Sure. Good enough. \n\nRachel clenched her teeth, flexed her arms and pulled her chin above the bar.\n\nWait a minute. Max might have been wrong. Maybe that was a chin-up bar instead of a pull-up bar. Was there a difference? Surely, he could find some lunkhead in here with a strong opinion on the issue.\n\nRachel slowly lowered herself, never letting herself hang completely from her hands, keeping her arms slightly angled to keep them from locking. She brought herself back up, then down, her arms moving evenly and fluidly like the connecting arm on a steam locomotive. Her form wasn't as smooth as Monica's, but she was almost certainly stronger than him.\n\nUp and down she moved. Max inadvertently started doing his pec presses, or whatever they were called, in time with her. He watched her as she rose and fall, and something else rose and fell with a slight delay.\n\nAnd it wasn't her breasts.\n\nWithin her loose shorts, there was something bouncing, something long and floppy wagging in the left leg of the shorts. It looked like a dick, but it must have been an optical illusion. There's no way someone with a thing like that would just leave it hanging during a workout.\n\nRachel paused a bit, pulling her legs together and rubbing her thighs against each other. This caused her shorts to creep up about a centimeter, exposing the very tip of a penis from within.\n\nThe din that came from Max's shocked release of the equipment was such that he thought he'd wind up crushed within the machine somehow, like someone thrown into the gears of a giant clock.\n\n\"You OK?\" Called a voice from behind him, presumably someone who worked there.\n\n\"I'm good!\" Max called from the floor, somewhere inside this thing. He climbed his was to his feet, where the two women were now looking at him. He caught their gaze for a moment before looking away. He dared not look at that woman's pecker while he had their attention.\n\nMax returned to the seat. His arms and pecs were tired, but he didn't know how to get this machine to do anything else, and he was not about to leave his front row seat. Rachel continued her pull-ups, her penis flopping just out of her shorts. How could she not feel that? Was she THAT into her workout routines? Max didn't feel comfortable working if there was a hole in his sock.\n\nLooking towards Monica, stood behind her and ready to catch Rachel at any point if she lost her grip... Monica had a prominent bulge in her shorts as well. How on earth didn't he notice that earlier? Packed into a sizable and slightly oblong shape by the spandex, how big could it be when released? Bigger than her friend's? Were they lovers?\n\nMax had heard about the rare affliction of some women being born with penises. If that was what they were... he had never imagined how beautiful they would be in person. He pictured the bearded ladies or the half-man-half-women who grotesquely divided their body between the two halves on a vertical plane. Then again, maybe he shouldn't be getting his thoughts of rare sexual minorities from stereotypes of circus performers. There were plenty of men here who wouldn't look out of place in the leopard print pattern of the strongman leotard.\n\nFor men, the gym was a place to work to exchange fat for muscle. For women, the gym did the same thing, but with the goal of creating a pleasing figure. But with this third group, the coin landed on its edge and expressing all the best components of both halves... it threw the entire farce into stark relief.\n\nGyms were places where men tried to reach the ideal body mass to make their dicks look as big as possible. There was no machine to make it bigger, and even if there was, the line would be unending and Max wouldn't want to use it after someone else had. These women... who did they have to impress? They could be fat and smell perpetually like melted plastic, and what difference would it make? Yet here they were, toning their bodies like soldiers despite being permanently set for life in the body department.\n\nAfter fewer chin-ups than her partner, but many more than Max could likely do, Rachel descended slowly from the bar, Monica hover-handing behind her in case she slipped down. Rachel hit the floor with one last waggle of her thing, the tip now hanging completely outside the leg hole.\n\nRachel rubbed each bicep in turn, rolling her shoulders back and wiping the perspiration from her face with the towel draped over her shoulders. Monica circled in front of her, looked down, and gently pinched the leg hole of Rachel's shorts and pulled it down to cover the tip of Rachel's dick. It was a move as casual as brushing lint off the back of a friend's shirt.\n\nIn his storied five-week career at this gym, Max had never quite had the nerve to do what he was about to do. He stood, grabbing his water bottle from the floor next to the workout machine. He wiped his machine down with a hand towel, a piece of etiquette that was very emphatically expressed to him on his first day, even though he didn't sweat that much. Max then crossed the hardwood path that separated his workout machine from theirs and stood before them. He took a deep breath as the two ladies turned to him in the same second.\n\n\"Hi, I'm Max.\" He introduced himself.\n\n\"Hello.\" Said Monica. \"What can we do for you?\"\n\n\"I just wanted to compliment you on those pull-ups.\" Max said, hoping he got the terminology right. \"I can't do more than maybe two of them.\"\n\n\"That was me when I started.\" Rachel said. \"Now I can handle about ten or twelve.\"\n\nI'll bet you can ten or twelve inches, the little devil in Max's mind thought. He kept it to himself. He had to play it cool.\n\n\"I don't mean to be that guy who comes to the gym to pick up ladies, but... I didn't expect to see two women as beautiful as you to be absolutely rocking these exercises.\" Max said. \"But I'm sure you hear that all the time.\"\n\n\"No, not really.\" Monica answered. \"I get hit on more when I'm by myself, but when we work out together... I think most people think that we're gay.\"\n\n\"Well...\" Max pushed on. \"are you?\"\n\nMonica smirked. \"You watched us work out for a while, but you didn't look all that interested until you saw this.\" Monica's hand folded gently over the bulge in her groin, her thumb squishing the soft flesh.\n\nMax looked away. He felt his cheeks flush a bit.\n\n\"So the real question is not whether or not we're gay.\" Monica said \"The question is... are YOU gay?\"\n\n\"No, I'm not.\" Max answered. \"Not at all.\"\n\n\"Then why are you flirting with us?\"\n\nMax swallowed. \"Those guys... they don't know what they're missing.\"\n\nMonica chuckled. She picked up her small gym bag and looked Max over again. \"Our workout is about done, so... why don't you follow us? Unless you want to keep working out.\"\n\n\"No, I think I've done enough for today.\" Max turned his wrist over and looked at his smart watch. He had been in the gym for nineteen minutes.\n\n\"Yeah, I'm good.\"\n\n\"OK.\" Rachel tugged on the ends of her towel like a fat mayor tugging on his suspenders. \"Let's hit the showers.\"\n\nThey took two steps away from Max before the sentence fully penetrated his brain.\n\nMax chased after them. \"Let's!\"\n\n-\n\nOff near the showers, there was a featureless door with a sign that said \"Authorized Access Only.\" This was distinct from the \"Employees Only\" sign he saw on other doors in this gym. Monica pulled out a pink key, turned it in a lock on the doorknob, and entered.\n\nInside was a locker room, but a much smaller one than the men's locker room. There were about twenty-five lockers and two benches for sitting between them. It looked like a locker room had been carved out of a piece left over of another one, or perhaps a locker room in a small school.\n\n\"What is this?\" Max asked.\n\n\"There's a locker room for men, and there's a locker room for women.\" Rachel explained. \"But for those in between... we've got a place just for us.\"\n\n\"In between...\" Max looked for an open locker. \"You two aren't looking to... get rid of some part of you, are you?\"\n\nMonica spun around and put her hand on the opposite locker, her head higher than his. She didn't pin him in place, but he pressed himself against the lockers.\n\n\"Why?\" Monica said sharply. \"If we started differently then we are now, does that make you want us less?\"\n\nMax's mouth fell open. He knew the answer immediately, but had trouble saying it while Monica was staring at him. Even soaked in sweat... her scent didn't communicate anything to his brain but 'woman.'\n\n\"Of course not.\" Max answered. \"And besides, to get rid of that would be a crime.\"\n\nMonica stood out of her lean, allowing Max to relax a bit. Monica pulled down her shorts with both hands and stepped sideways out of them. \"Well, it's definitely not going anywhere, so...\" Monica turned around to her locker.\n\nThis would be the time where Max would normally take a few sneaky peeks at the athletic woman's toned rear end. But Max was still staggered by the enormity of what he'd just seen. It looked like an empty paper towel tube, and only a slightly different shade of brown. Max didn't know they made them in that size.\n\n\"Well... it might go somewhere.\" Rachel turned in place, stuffing her clothes into the locker. Somehow, hers was even bigger, a huge white snake hanging from her crotch.\n\nMax loved Whitesnake.\n\nMonica looked over her shoulder. \"What are you waiting for? Get undressed.\"\n\nMax started stripping and stuffing his clothes into the locker. \"I don't have my soap with me. It's in the other locker room.\" He said.\n\n\"You can use some of ours.\" Rachel offered, as she walked into the shower with her little caddy of soaps and such. Monica followed, and Max trailed behind, covering his nethers with his hands.\n\n\"Am I allowed to be in here?\" Max asked as he hopped into the showers.\n\n\"I don't think so.\" Monica turned on one showerhead. The showers had no dividers between them. It was a tiled room with showers on one wall and little else. Rachel took a showerhead further down the way, leaving an unoccupied one between them.\n\n\"But I've never been in here and seen anyone enter while we've been in here.\" Monica continued. \"You need the key that they gave us when we signed up. Almost nobody has it, not even most of the employees. So... I don't think we're going to get interrupted.\"\n\nMax moved under the shower between the two of them. This had to be what they planned, right? He turned on the water, but had no soap to wash with. He looked to each side, watching the women scrub themselves with loofahs, suds dancing across their bodies and dribbling downward, cascading off their members.\n\n\"Of course, if someone does come in here...\" Monica continued. \"Then we might have to pretend that you're some pervert who snuck in here. But if we're in the middle of pounding your ass, that excuse might not work.\"\n\n\"Could I get some soap?\" Max wished he had the courage to simply cup his hands and catch the suds running off their bodies, ineffective as it might be.\n\n\"I don't have a spare loofah right now.\" Rachel looked at her shower caddy, hung on a convenient hook in front of her.\n\n\"Here's mine.\" Monica put a new drop of body wash into her loofah and passed it to Max. He almost brought it to himself, but Monica spun 180 degrees and presented her back to him, not necessarily an unfamiliar sight for Max.\n\nMax began scrubbing her back. Even through the loofah, he could feel the muscle tone on Monica's back. She was not burly or overly muscular, just fit and entirely devoid of unnecessary fat. Her breasts were on the small side, and her ass was constructed out of two solid blocks of muscle.\n\n\"I can wash my own butt, thank you.\" Monica instructed.\n\nMax lifted the loofah back up to Monica's shoulders. \"Sorry. Got distracted.\" He rubbed the loofah until suds no longer dripped from within.\n\n\"Good.\" Monica said, taking his hand from under the loofah and squirting more body wash on it. \"Now do her.\"\n\nTurning in place, Rachel had spun away from him, pulling her hair over her shoulder to expose it. She wasn't as lean and athletic as her friend, but she was well put together, with a slim waist and larger breasts. With the addition of that other thing...\n\nSome people have all the luck.\n\nBut perhaps some of it was settling onto him.\n\nMax rubbed the loofah against Rachel's shoulders, wiping away some sweat and possibly exfoliating? Was that what these things did?\n\n\"Aw, she said 'do me,' and you didn't take the opportunity.\" Rachel pouted.\n\n\"I honestly don't know what you two are expecting in that department.\" Max confessed. \"I'm not sure I can... deliver.\"\n\n\"I have three older siblings.\" Monica said as she washed her short hair. \"And when you have older siblings, you know that they get to go first, because they're bigger. It's a pecking order.\"\n\n\"I get it.\" Max put his hand over his crotch. \"I mean, I wasn't even sure there was going to be...\"\n\nRachel bent at the waist, away from the loofah, presenting her slit right where Max expected it to be.\n\n\"OK, that was my second question answered.\" Max nodded. \"I must say, I'm really thrilled that it's there.\"\n\n\"Did you really follow us in here just so you could have sex with us?\" Rachel asked.\n\nMax felt disarmed. \"Well... yeah. You seemed down for it.\"\n\n\"Let me clarify that.\" Monica said. \"Did you come in here just to stick your boner into our pussies?\"\n\nMax was silent.\n\n\"Isn't that something you could get anywhere else? Something you've almost certainly had before?\"\n\n\"Yes, I have. I'm not a virgin.\"\n\n\"Good to know.\" Monica tipped her chin up, looking at him past her nose as she rinsed the soap out of her hair.\n\n\"OK, now it's time to get you ready.\" Rachel said, taking the loofah from Max and tossing it to Monica. They both refilled them with body wash and applied them to Max's body.\n\nIt wasn't the sexy romp that he expected. They scrubbed him like a dog that had gotten into the garbage. If there was a hose in there that they could spray him with without touching him, they probably would. On the other hand, they were thorough, consciously scrubbing him all over, even the parts he thought they'd leave for him to clean.\n\nThis didn't turn into a loofah handjob, which was probably for the best because that sounded painful. Once the scrubbed his short hair and behind his ears, surely knocking loose all those quarters that his grandfather used to find, they wrung out the loofahs and dropped them into the caddy.\n\n\"Alright, now we're all clean.\" Monica said. \"We can finally get started.\" She kissed Rachel with an open mouth, immediately sliding her tongue into Rachel's. They French kissed in front of him, each reaching out to tug on the other's crotch before embracing and lashing their tongues against each other.",
        "Max watched them make out with some disappointment. They ignored him for long enough for him to ask,\"So... am I out, then?\"\n\nRachel and Monica stopped, turning their heads without releasing one another. They eyed him, and peeled away from one another, both of them now fully engorged, the tips of their huge erections standing much higher than their navels. Rachel's was larger, if only slightly, flaunting the stereotype a bit.\n\n\"You're only out if you don't think you can handle us.\" Monica said. \"But I see that hungry look in your eye. You wish you had a huge hard thing like this. But the next best thing is playing with someone else's.\"\n\n\"I'm ready.\" Max said, his voice a little soft.\n\n\"You don't sound ready.\" Rachel put a hand on his shoulder. She pushed down, and Max went down to one knee. This wasn't evidently far enough, and Monica pushed him down further until he was sitting on his calves, staring up at the two huge cocks like the swords in an impromptu saber arch.\n\n\"Did you expect us to sneer at your smaller penis and call you useless?\" Monica asked.\n\nMax's eyes darted between their eyes and their penises. \"Sort of?\"\n\n\"We're not going to do that.\" Rachel said. \"So you have a penis smaller than ours. That's like saying you're not as tall as Kareem Abdul-Jabbar. What's supposed to be humiliating about that?\"\n\n\"Yeah... but standing next to him would still make me feel short.\"\n\n\"The point is...\" Monica leaned in a little. \"Whatever size it is, it doesn't matter right now. You followed us in here because you wanted to do something to our cocks. So here we are.\"\n\nThey were standing in a triangle, Max on his knees, legs tucked under him. Monica and Rachel stood before him, each posing one foot on each of his thighs to keep him where he was. They pointed their cocks towards his face, so close that his breath tickled the tips.\n\nMax had to make a choice here. There really was no going back from here if he did this. Every definition of 'straight' that he could reconcile with went out the window when another penis entered the picture.\n\nOf course, he knew he was going to do this. The only choice... was who to start with.\n\nHe moved his head towards Monica's cock. He puckered his lips and kissed the tip. The heat coming off it was incredible, even in this sweltering shower. He kissed it a few more times, and then he blew on it, in a perhaps silly attempt to cool it down. The gentle wind made Monica shudder. She tensed her pelvic floor, and her cock swelled and grew even harder for a moment. The tip grew a little redder, as did Max's cheeks.\n\nMax's hand reached out and held the base of Monica's erection in place. Extending his tongue like he was catching snowflakes, he stroked the tip of his tongue on the underside of Monica's appendage, nestling into the frenular delta and catching a string of something clear on his tongue. He batted it away like a spiderweb, unsure if it was his saliva... or something else.\n\nMax looked up and caught Monica's gaze. She looked down, a gentle sneer on her face. Max looked back down and leaned forward, raking his tongue across the full length of the dorsal side of Monica's cock, his nose running across the side.\n\nHaving smelled and tasted it... it wasn't what he expected. There was no smell of sweat or even soap. He could smell her body wash, but the taste was something unique and sweet. Max took another sniff of her cock, his nostrils nearly touching her flesh.\n\n\"You love the smell of my body wash, huh?\" Monica's sneer inverted into a smirk.\n\n\"It might just be the beautiful woman who's wearing it.\" Max panted.\n\n\"Do you want to know what brand it is, so you can buy some and sniff it while you whack it to thoughts of us later?\"\n\nMax coughed out a laugh. \"You two really know how men think, don't you?\"\n\n\"What makes you think it's any different than how we think?\" Rachel momentarily engaged him over her shoulder before retrieving the bottle from her shower caddy. She held it under his nose, the label facing away from him.\n\n\"Just don't squirt it in my face, please.\" Max put his nose over the hole and took a sniff. It smelled just like Monica's cock, the pleasant perfumes that had clung to her for that promised twelve hours of freshness...\n\nAnd yet, the bottle was lacking something, that intangible something that made Monica smell that much better.\n\n\"It's really nice.\" Max nodded.\n\nRachel spun the bottle around. The word \"MEN\" was larger than the \"30% More Free\" or the ludicrous name given to this scent. Electric Glacier, or something like that.\n\nMax cried out, \"Oh, dammit.\"\n\n\"Yep.\" Rachel said, returning the bottle to the caddy. \"Good ol' Old Spice. The most masculine soap in the world. Being in here with us is basically like being in here with Terry Crews.\"\n\n\"Well...\" Max looked to the tile for a second. \"He wouldn't have an erection. And even he's not as... huge as you two.\"\n\nRachel quickly mumbled, \"I'm not actually sure about that.\"\n\n\"If you tell anyone about this encounter, that's what people are going to think.\" Monica warned. \"It doesn't matter how feminine we are. Once you tell someone you were with us, there will be people in your life that will say that it makes you gay. If that makes you reconsider, that's fine. I won't be offended. So if you do this, it's because you want to.\"\n\n\"I do.\" Max said without hesitation. \"I really do.\"\n\nFine.\" Monica said sharply. \"Then stop looking at it and start doing something.\"\n\nMax looked down to the huge caramel colored thing he was still holding. It felt like a microphone for a speech he hadn't prepared. He would have to improvise, do what came naturally.\n\nThus, Max planted a line of kisses along Monica's cock, reaching the base and licking his way back to the tip. His other hand went between Monica's legs and took a delicate grip on her balls. They felt like heavy ball bearings inside a leather purse. No, not leather. That didn't portray how incredibly soft and smooth her skin was.\n\nMax brought his lips onto the tip of Monica's cock, slowly letting his lips crawl over it and his mouth widen until the whole thing was in his mouth. He felt as though he'd tried to eat a tangerine in one go. A searing hot tangerine that swelled every time he sucked and that tasted of sweet ladycock.\n\nHe pushed forward, trying to advance the tip further down his mouth and beyond. He could barely get more than a few inches in before his mouth was completely full. The jaw clicked at the depth of how low he had to open it, larger than he'd ever have to open for even the biggest burger, or wider than the dentist had ever told him to open. He was making a mouth 'like a lion,' as he was instructed as a child. This always looked so effortless in porn. Maybe that's why they were pornstars and not him. Also unlike porn stars, Max had an average sized penis and didn't have a serious drug problem nor a bad relationship with his parents.\n\nAs it was... he seemed to be doing pretty well for his first time. He closed his eyes, hiding the many inches of cock he couldn't quite reach. Monica grabbed his head with both hands and rocked his head back and forth as she moaned louder and louder, the tip flattening against the back of his throat. Max feared the automatic gag reflex would begin, but it never happened somehow. Her whole body tensed and she released the first blast of her come into Max's mouth.\n\nAnd Max immediately pulled his head away from her cock and spat out her come. Rachel dove in with hands cupped together to catch the remainder, as several ropy blasts of come sprayed in a parabola from Monica's cock.\n\nRachel brought her hands up to Monica's face. She dipped her lips into the collected semen and slurped it all out of Rachel's hands until they were empty, if still slick with the remainder. Monica held it in her mouth with puffed cheeks for a bit before Rachel got down on her knees, tipped her head back and opened her mouth like a baby bird. Monica spat the emissions down into Rachel's eager mouth, Rachel's tongue dancing around in the white lake of come. When Monica's mouth was empty, they kissed until every drop of white was gone.\n\nAs they ended their long kiss, they looked at Max disapprovingly.\n\n\"I wasn't ready for it. I'm sorry!\" He held out his hands.\n\n\"I made that for you.\" Monica teased.\n\n\"I'll try again!\"\n\n\"Is it that easy for you to just 'go again?' Do you have that kind of stamina?\"\n\nMax pulled his hands together, his shoulders drooping. \"No. I need a good night's sleep after that.\"\n\n\"I think I've got just the thing.\" Rachel left the shower.\n\nNo longer pinned down by their feet, Max took the opportunity to stand up. \"Is she leaving?\"\n\n\"She'd better not be. She's my ride home.\" Monica let her guard down for a moment.\n\nRachel returned from the locker room with Max's water bottle. She removed the cap and poured the water onto the tile floor.\n\n\"This should do.\" She nestled the rim of the bottle onto the tip of her cock and started to pump her cock with the other hand. She moaned and sucked air through her teeth, but looked down at herself. \"I might need help. Monica?\"\n\n\"How should I help?\" Max asked.\n\n\"You messed up, so you just sit there and watch while we fix this.\" Monica pointed at him. She slid behind Rachel and separated her ass cheeks, probing her pink tongue into the tiny pucker between them. Rachel shook a bit as Monica's tongue crossed her hole, spiraled around it, slipped in with as much force as her tongue could impart.\n\nMonica's hand reached underneath Rachel and worked two fingers between her folds. She retrieved her fingers, an arc of nectar connecting her fingers to Rachel, sparkling like a spideweb with frozen specks of dew clinging to it. Monica placed the fingers in her mouth, her eyes involuntarily rolling back in her head as her tongue spiraled around them to taste every ounce of it. Monica reluctantly released the fingers, now covered in aroused drool, and returned them for a second helping.\n\nAs she stood, Monica's hand went over Rachel's shoulder and her fingers entered Rachel's mouth. Her lips closed around it to taste the nectar, and Monica rubbed her fingers against Rachel's teeth, the way one might rub a controlled substance into the gums and with much the same effect.\n\nRachel set the bottle down, sliding down the tile wall until she was sitting on the floor, her legs splayed out from her. She pressed her cock against her torso, tipped her head forward and popped the head into her mouth.\n\n\"Rethinking those yoga classes yet?\" Monica teased.\n\n\"I would need a LOT of yoga to do that.\" Max rued. \"Or more length on the... you know.\"\n\n\"Well, one of those is possible, the other isn't.\" Monica said. \"I can't get her to join me for yoga because she can do this without really trying.\"\n\n\"I get it.\" Max shrugged. \"That's basically the goal of all male yoga practitioners, far as I'm concerned.\"\n\n\"Is that why you might have called them 'gay' in an intemperate moment?\"\n\n\"For wanting to suck their OWN things?\" Max said. \"That's sucking a guy's thing, no matter how you slice it. I'll stand by that analysis.\"\n\nRachel released herself for a moment to speak, a drop of drool falling from her lower lip and landing on her breast. \"I knew a few men who could do this, and they all didn't like it. They said it felt more like sucking than getting sucked. For me, it's like both at once. So you probably wouldn't like it, even if you could. But we saw how much you love sucking Monica's thick black cock...\"\n\nMax flushed.\n\nRachel resumed her autofellatio with the same gusto as before.\n\n\"I don't know. She's going down further on her cock than you did on mine, and that's attached to her.\" Monica brought herself to the floor between Rachel's legs. She reached out and stroked the underside of Rachel's balls with her tongue, moistening it and sucking one of them until it entered her mouth. Rachel's moans grew deeper, muffled somewhat by her position but no less musical.\n\nMonica released the smooth orb for a moment to speak to Max. \"You haven't lived unless you've felt the sublime pleasure of holding a nut in your mouth... while she nuts.\"\n\nWith that, she brought it back within her mouth. Rachel bucked her head back and threw the bottle onto the tip of her cock, filling it until it spilled over the edge. Monica was there to accept the rest in her mouth, wringing out every drop from Rachel's cock with both hands and delivering it back to her mouth with some more kisses. They rested their foreheads together for a moment, gathering themselves.\n\nThen they both turned to Max, sitting on the tile, legs tucked under him, a gentle twitch appearing under one eyelid that mirrored the twitching of his untouched member.\n\n\"You're going to make me drink that, aren't you?\" Max said with a hint of fear.\n\n\"We're not going to make you do anything.\" Monica walked towards him, sidling behind him. \"But if it makes it more fun for you...\" Monica placed her hand on Max's throat, not putting any pressure at all on him. \"I could pretend that I'm forcing you.\"\n\nMax's breathing got heavier. He looked at Rachel, holding the bottle in one palm and supporting it with the other, like she was holding a bottle of soap in a fifties detergent commercial.\n\n\"I really think you'll like it.\" Rachel smiled. \"It's so warm. I can feel it through the bottle. And I made it special for you. I'm sure she'd love to down this, but this one is for you.\"\n\nMax looked away from the bottle, and at Rachel's growing erection.\n\n\"Thinking about you drinking this got me hard again.\" Rachel cooed. \"Please... show me how much you want us.\" She now stood directly in front of him and put one hand on his shoulder, inching the mouth of the bottle close enough that he could smell it over the vague perfume of sweat and soap.\n\n\"It's not going to bite you.\" Monica said softly. \"Besides, if you're going to work out...\" She pinched his unimpressive bicep. She whispered directly into his ear in a way that would make him tingle no matter what he said.\n\n\"You're going to need to find a source of protein.\"\n\nMax's face grew so red, any nearby cars would have stopped. His jaw lowered and mouth opened into a welcoming O-shape. Rachel set the rim of the bottle on his bottom teeth and slowly tipped the bottle upwards.\n\nThe first drop of white cream touched his tongue, and Max jerked about in place, held still by his stronger companions. More followed, crawling over his tongue and filling his mouth, leaving him no choice but to swallow. It was thick like raw egg whites, or perhaps tapioca. It felt warmer than any coffee he'd ever had, though that might have been his imagination. The taste...\n\nThe only objection Max would have raised if he could was that they poured it so fast that he couldn't savor it. Like anything tried for the first time, it took more than one taste to really appreciate it.\n\nRachel tapped the bottom like a ketchup bottle before finally removing it from Max's lips. Max was flushed, panting, and wearing an impromptu white Fu Manchu mustache.\n\nMonica released Max, who wobbled a bit when released, holding his warmed stomach and staring out into space. Rachel tipped the bottle towards Monica so she could see how much he'd actually consumed.\n\n\"Very good.\" Monica patted her wet hand on his back, nearly knocking the unsteady man off his feet.\n\n\"I hope you'll still use this bottle.\" Rachel stood under a showerhead and turned it on to rinse the bottle out. \"I hope that no matter how many times you use, reuse and wash this bottle...\" Rachel let the bottle fill with warm water. \"And no matter how many times you suck on the plastic nipple...\"\n\nRachel bent her head over and clasped one of Monica's nipples with her lips, pinching a drop of sweat off into her mouth.\n\n\"You'll wish it was filled with my come.\"\n\nMax didn't say anything. The look in his eyes told Rachel that he'd definitely be thinking about her the next time he took a swig of Gatorade or whatever.\n\n\"Alright, I think it's time for the main event.\" Monica took something out of the shower caddy. \"Get on all fours.\"\n\nMax slowly went to the floor of the shower, unsure how long his sweaty hands and trembling muscles could hold him upright. Monica circled him and started rubbing some cold gel on his ass, probing a few fingers inside. Max made some uncertain noises.\n\n\"If you don't like my fingers, you'll never like the real thing.\" Monica said.\n\n\"No, it's great.\"\n\n\"Well, don't you dare come just from this.\" Monica worked a little more of the lube where it would be needed. \"What a letdown that would be.\" She pulled her hand back and loaded it with more lube, stroking it over the entire surface of her cock.\n\nMonica put her hands on Max's cheeks, her cock splayed out on his crack. \"You ready?\"\n\nMax nodded. He sort of wished he could see what was going on.\n\nMonica leaned back, poising the tip against his hole She pushed in gently, letting it slowly expand and accommodate the entry until the widest part was inside. Encouraged, Monica pushed the rest in, inch by inch, until her balls rested nearly against Max's.\n\n\"You still doing OK?\" Monica asked. \"I haven't hurt you, have I?\"\n\nMax shook his head. If he was in sorts enough to answer, he might have told them that there was some discomfort, but the last thing he wanted her to do was stop.\n\nMonica started to thrust gently. \"I'm surprised you got it all... you sure this is your first time doing this?\"\n\n\"I'm sure.\" Max panted. He craned his head up, his view wobbling from each stern thrust. He saw Rachel's engorged member sitting between her legs, unappreciated (except for Rachel jerking it gently Monica giving him the business).\n\nMax's mouth opened, almost as a reflex. Rachel slid forward and put the tip of her cock into his mouth. Despite this one being slightly bigger... somehow, it slid in perfectly.\n\nThe trainers at the gym repeated the mantra endlessly: do it over and over and it will get easier.\n\nThis didn't take long for him to adjust to. Two hot poles running through his ends. It may be impossible to wish they'd meet in the middle... unless he shed some internal stuff that never served him any good, except to temporarily shuttle him to this moist tile cathedral of debauchery.\n\nHow perfect this position was. Monica behind him, thrusting several inches of cock into him, pleasuring parts never before enlisted in pleasure, her balls slapping gently against his like a fat man belly-bouncing a skinny man across the room. Before him, Rachel's balls rested against his eyes as she rolled her hips in a circle, stirring her cock inside him gently.\n\nTo be on all fours like this, feeling the cock in his ass with no attention paid to his own at all, with Monica's breasts coming to rest on his back as she leaned forward to delicately grab a handful of hair... this was the ultimate subjugation, wasn't it? Monica didn't even pull his hair, perhaps not willing to cause him any unnecessary pain, unsure if this weakling with pie-eyed dreams of muscular adequacy would handle the mistreatment. Could it get any worse, or better, than this?\n\nMonica stopped, and Rachel pulled herself out of his mouth. Max felt empty, looking to the women for support. Monica wordlessly put her hand on his flank and coaxed him over onto his back. Monica put her hands on top of Max's thighs and inserted herself again.\n\nOf course there was deeper subjugation than 'doggy-style.' There was that most famous and most resolutely Christian pose: missionary. His role was to move as little as possible while she did all the work. In matters sexual, he was given no responsibility, not even a tambourine to pretend he was really part of the band. He was as good as his passive orifice, or orifices, as Rachel spun around and knelt astride Max's face and returned to him his pacifier.\n\nMonica's thrusts grew harder, her grip on his thighs more powerful, her groans louder and with a gentle high-pitched whimper. Rachel held Max's head in place and pumped his throat a few more times before crying out in ecstasy, dumping a hot load of come past his throat and into his stomach. She pulled back far enough to allow his mouth to fill with cream before breaking her previous promise:",
        "She did, in fact, squirt it in his face.\n\nWith the renewed scent of Rachel's come in the air, Monica could hold back no longer, and released herself into Max's ass. He felt burning hot come filling him until he swore it was percolating behind his eyeballs.\n\nAnd with that, Max came himself, his small wad covered multiple times by the emissions planted on his stomach by Monica, pulling out and decorating his unimpressive abs with streaks of white stuff.\n\nThe workout complete, Monica panted and slid against the tile until she was next to Max, bringing his head against her breasts. Rachel got behind Max and held Monica's back, making a Max sandwich between them.\n\n\"So...\" Monica scratched Max's wet scalp with one hand. \"I don't think it'll be that hard to get you to the gym after this, huh?\"\n\n-\n\nMax stood from his bench, wiped his machine down, grabbed his water bottle and marched across the path to the two beautiful women under the pull-up rack.\n\n\"Hi...\" He said. \"I'm Max.\"\n\n\"Hello.\" Said Monica. \"What can we do for you?\"\n\nMax inhaled deeply, ready to project out some compliment on their athletic prowess, or their beauty, or perhaps even the nice shape of their packages. Anything was better than the dead air he was broadcasting right now. He exhaled with great force and took in a new breath, hoping that one would be filled with the letters that he could make words with.\n\nNope, that breath was just as useless as the last one. He stammered, \"I just thought... you two were really impressive with those pull-ups, chin-ups, whatever they're called.\"\n\n\"Thank you.\" Monica nodded. \"We work very hard.\"\n\n\"Well, she does, I don't.\" Said Rachel.\n\nMax laughed, probably too hard. \"Um...\" He continued. \"You uh... you're here a lot?\"\n\nOh, no. Max had just used the 'come here often?' line. Max looked around the huge gym for a rock to crawl under. He'd seen large boulders in strongman competitions; maybe they had one on hand.\n\n\"Yeah, three or four times a week, depending on my work schedule.\" Monica said.\n\n\"Yeah, I'm starting with once a week, hoping to work up from there.\" He coughed involuntarily. \"I hope you don't mind my saying, but... I didn't expect you to be so...\"\n\nMax paused. \"And that's not to say that strong women can't be very... And it's not that I expected anything different because of your different... bodies...\"\n\nBoth women were now grinning at him.\n\n\"But it's not that I was looking, or not meaning to... or judging you based on it... or jealous of it. Well, OK, I can't even pretend that I'm not. I'd take it even if it was black. Not that you're... necessarily black. Maybe you are, maybe not, I don't know. I don't...\"\n\nIt had all gone so smoothly in his head, right down to the sodomy. But when faced with these two lovely women, the script had been dropped in mud and all the words scrambled and translated into French. What was he doing? He wasn't exactly smooth at picking up ladies on the best of days, and here was was trying to pick up two, two women with packages prominently presented in a way that basically advertised that they didn't need any man. What interest would they have in satisfying his curiosity?\n\nThe fantasy he had indulged in for that glorious few seconds... that's what it was. It was folly to think that he'd be chosen out of all the potential mates here, even if he agreed to everything they wanted. But that's all it was: a fantasy. He would not be drinking their sweet jisms today, certainly not together.\n\n\"You were right.\" Monica said softly, to her friend, whose name probably wasn't Rachel, either. That was the stupid name Max had come up with in two seconds because he'd fallen asleep to a rerun of Friends last night. \"The spandex doesn't keep ALL the men away.\"\n\nIf Max were smaller and more pathetic, maybe they'd grind him under their running shoes like a cigarette butt and give him the scorn he was craving. If he was more assertive, they might be threatened enough to reach for the mace, or just bop him with their obvious superior strength. But here... all they were was amused. They just smiled politely and let him chatter himself more rope that he could hang himself with. He was a curiosity, surely one of many confused men who had become enchanted at their first time imagining the sexual appetites these women must have, when probably the only thing they wanted was to finish their workout.\n\nMax felt himself flushing, somehow convinced he could still talk his way out of this. He stumbled forward like a waiter overloaded with foods marching forward to keep the tray from spilling. \"I really don't want to intrude on your workout routines, I just had to express my admiration for you both and I really think that you-\"\n\n'Rachel' put up one finger. Max started as though she'd raised a fist at him.\n\n\"You are so thirsty right now.\" She said through a huge grin.\n\nMax blinked. Could this still be in the cards? Had he somehow managed to pull it off?\n\nHe played it cool, or as cool as he could manage. \"Yeah, I'm pretty parched right now.\"\n\n'Rachel' whispered to 'Monica,' inaudible to Max. Monica looked through her gym bag and retrieved a card, passing it to Rachel to pass to him.\n\n\"Here.\" Said Rachel. \"Come visit us at work sometime.\"\n\nAnd the pair walked off.\n\nOnce they were barely out of sight, Max pumped his fist. \"Score!\" He cried.\n\nA gym rat tangled in some unidentifiable exercise machine looked over to Max, having seen the embarrassing spectacle from a distance, but unsure about the twist ending. \"Did you really just get their numbah?\" He asked.\n\nMax put his eyes on him, having not looked at the card yet. \"Maybe?\" He said, still excited. He turned the card over in his hands. \"Well, sort of. It's a business card. Maybe they run a business?\"\n\n\"What kind ah business?\" The gym rat asked.\n\nMax looked to the business card. It was all pink, with an address and phone number, some combination of the male and female gender symbols...\n\nAnd a mug of coffee.\n\nAloud, Max asked nobody in particular, \"What the hell is the Futa Brew?\""
    ],
    "authorname": "DTales",
    "tags": [
        "futa",
        "futa-on-futa",
        "futa-on-male",
        "mild humiliation",
        "fellatio",
        "autofellatio",
        "come drinking"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/steamed-milk"
}