{
    "title": "Finding the Perfect Fit",
    "pages": [
        "*This is a work of pure fiction. All characters are over 18.*\n\nLiving alone has brought some freedoms that I didn't have while married. I could walk around the house naked, leave the toilet seat up, and jerk off whenever I got horny. While I was married, the intimacy train left the station about 5 years before we pulled the plug, granted even when we were \"intimate\" she was a pillow princess. I would go down on her, she would bust her nut and then I would enter her and get my rocks off. Then off to the toilet to clean up. No afterward cuddle or pillow talk about what just happened. It got boring after awhile and we just stopped.\n\nWith the internet I now had the freedom to see all kinds of porn and one thing I wanted to find out is whether it was possible to orgasm analy. In the shower, I masturbated with a finger or two inside me and it made my orgasms more intense. It also made cleanup easier, too. That's when I decided I would go to the local Adult Toy Store after work one evening.\n\nIt was a half an hour before the store was closing and I was the only patron. After 5 minutes of looking at various things the clerk walked up to me and asked whether I needed any help. She had a smoking hot body wearing knee high boots, a leather mini dress, a leather bustier, a leather collar, and a shaved head. I asked if she could show me where the anal toys were. With a twinkle in her eye she asked me to stay where I was and went to the entrance. Locking the door and turning off the Open sign she came back and taking my hand in hers told me to follow her.\n\nShe led me to a back room that had a couch and assortment of toys on a display rack on the opposite wall and asked me to sit down. There was a small dishwasher in the corner and she opened it and pulled out the bottom rack. Bending down right in front of me I could see she wasn't wearing any panties and I could see both her vagina and pink anus beckoning to me. She was hairy and I could see that it was moist. I started to notice a faint scent of her cunt in this small room. I wanted to dive in and eat all of her.\n\nTurning around she smiled at me then spoke, \"I hope you don't mind but we don't get many cute guys asking for butt plugs around here and I thought I might help walk you through the selection process.\" She said with a seductive expression.\n\nNow tell me, have you tried anything so far and what did you experience?\" She asked.\n\n\"I have tried some fingers while I was in the shower and it made my orgasm more intense but the angle was weird.\" \n\n\"OK, this is where this might be handy\" she said holding up a slender dildo with a suction cup on the end.\n\nI think you can figure out how it works. As for Butt Plugs, you probably want to start out with something small and then work your way up. Personally, I like something in the middle.\"\n\nWith that, she turned around and bent over showing me her backside. \"You are going to want to use some lube. If you are just playing around then KY or Astroglide is fine, however, if you want to wear this all day, then I prefer to use saliva.\" She said and then put a copious amount of saliva onto the plug and spread it out with her finger. Then she reached through her legs with the plug in hand and the other hand around her side to open her cleft wider and then pushed the plug into her anus. There was some resistance put she kept pushing and then her anus flexed outwards and it settled in. She let out a hiss and then got up and turned towards me and smiled then winced and smiled again.\n\n\"Ooo, been awhile since anything is been back there and it takes a little getting used to. Remember, when you are pushing the plug in, push out with your sphincter like you are trying to poop and it will slide right in. Here, take this starter one and try it.\" She handed it to me.\n\nI didn't hesitate. I dropped my pants as I stood up and then pulled down my briefs and my cock sprang free, hard as a rock. Her eyes went right to it and smiled. Taking the plug, I sniffed it and didn't smell anything.\n\n\"Don't worry, all demos are sanitized in that dishwasher right there.\" She said knowing what was going through my head.\n\nI put the plug in my mouth and sucked on it and then put a copious amount of spit on rolling it against my lips to lube it up. Bending over and turning around I reached between my legs and before I could reach with my other hand to open my butt she put both hands on either of my cheeks and opened them up for me.\n\n\"Here, let me help you with that.\" She said.\n\nI slid the plug around until I found the indent of my hole and started to push and was immediately met with resistance.\n\n\"Remember, push your muscles out like you are trying to poop,\" she reminded me.\n\nDoing so it passed through my ring and settled home. I had to grab the couch with my free hand at the unexpected intrusion which was way bigger than two fingers. It felt weird to be so filled up, I couldn't quite pinpoint whether it was a good or bad feeling. The sales woman's finger rubbing around my anus and sensations it was creating felt really good. I let out a moan.\n\n\"Stand up for me sugar and let me see that jewel shine.\"\n\nI stood up and the plug pushed deeper into me. Still on the fence on whether it was a good or bad feeling. Turning toward her, my cock felt harder than it has ever felt before.\n\n\"Not sure about the feeling just yet. I feel so full though and I can feel my cock throbbing because of it.\" I said.\n\nShe moved in closer and then took hold of my cock and started stroking it. Looking up at me, she said, \"that's because it's pushing up against the back of your prostate.\"\n\nI looked down at her and then I moved my face closer to hers. She closed the distance and we started kissing. She took my right hand and pushed it under her bustier and I rubbed her nipple. At my touch of her nipple she moaned and then moved closer to me and captured my thigh between her legs. I could feel her moist cunt against my leg as she moved it up and down. She continued stroking my cock with a steady rhythm. \n\nI gripped her ass and held her tighter against me. Her breathing got harder and then she let out a long moan and started rubbing her wet cunt against my leg. Her grunts and moans became animalistic and she locked her lips to my and fervently sucked my tongue came on my leg. She let out a squeal and stopped, clamping onto my leg, her thighs holding my leg like a vice and she came. God that was hot!\n\nStill stroking me slowly she looked up at me with sleepy eyes, smiled and then mouthed thank you. Then she pushed me back to the couch and I sat down and she followed me down only her head descended to my cock and she took me in her mouth. She swallowed me whole and then backed off and then down again. I could feel the plug causing pressure behind my balls and it felt awesome. A wave of pleasure, like when I try to hold off cumming as hard as possible, shot up from behind my balls to my cock unexpectedly.\n\nI didn't have time to warn her as I exploded into her mouth. My orgasm was so intense that it consumed me and every feeling was centered on my crotch. She gagged on my cum and then coughed and spit some out that landed on my balls but then resumed her suction and gulping down everything else I had to offer.\n\nShe pulled off my cock and looked up at me. My cum covered her chin and the top of her lip. It was so sexy looking that I pulled her up to me and French kissed her tasting my cum for the first time and liking it. I licked it off her lips and chin and we kissed some more sharing it back and forth till all I could taste was cum.\n\nBreaking the kiss she leaned back down to my crotch and cleaned up what she coughed out and then came back up to share it with me. She climbed into my lap and settled her wet cunt on top of my softening penis and we kissed some more.\n\nBreaking the kiss she asked, \"so how was it?\"\n\nI was at a loss for words so the only thing that came to me was, \"sold!\"\n\n\"Great. I suggest you get the dildo in both thin and the middle size. Take a small and medium plug, too. You can keep the one you have in you for free. I think you earned it. When you are used to those then come see me and we'll look at other things you I think you might be interested in.\"\n\nThe taste of my cum still fresh in my mouth and the feeling of her wet cunt started getting me aroused again. \n\nWe kissed passionately again and my cock started rising to the occasion. \n\n\"That was a great blowjob. Can I return the favor?\" I asked, not wanting to end the moment.\n\n\"She got off me, turned around, and then looked over her back at me and said, \"eat me!\"\n\nGrabbing her cheeks I buried my face in her backside and inhaled her scent. My nose was against her plug and I stuck out my tongue and pushed it through her lips to seek out her clit. It wasn't hard to find and I gave it a few strokes. She moaned in appreciation. I pushed her back down to push her cunt up so that I could lock my mouth around her opening. I lapped up all her cream and I was in heaven. \n\nAs I fucked her with my tongue she mewled in appreciation and pushed back against my tongue. I alternated between her hole and her clit for a bit but then pulled my head back and then slowly pulled the plug out of her hole. She let out a hiss when I started kissing her pink anus. It was dilated so I stuck my tongue into and ate her ass. Then I pushed the plug back in and went back to her cunt.\n\nSearching out her clit again I attacked it with desperate fervor and then pulled my tongue back through her lips to taste more of her cream. Her moaning increased and then she pulled away from me and then turned around and just grabbed the back of my head pulling face back into her wet cunt. She got onto the couch so she could ride on my face. My nose was pushed into her mons and I sucked her clit. I looked up at her and she was staring intently down at me, her mouth open in ecstasy and twisting her nipples. I squeezed her butt cheeks harder. \n\nShe grunted and then her body jerked. She tensed up and then she let out a wail and relaxed somewhat. I slid my tongue into her hole to gather more of her cum and I just grazed her clit when she tensed up and jerked again. She stood up when she couldn't take it anymore. \n\nLooking down at my hard cock she licked her lips and then squatted over me. \n\nShe motioned me to move up on the couch and then straddled my crotch. Grabbing onto my penis she slid the head through her lips to wet it and then she slowly sat down on me. Her cunt was wet and hot and gripped me like a vice. When I was balls deep into her she pulled my mouth to hers and we kissed, Then she slid up the length of my cock only to slide back down. Each time she slid down I felt the plug push behind my balls and send a pulse wave of pleasure to my cock. \n\nIt was my turn to moan and say, \"your cunt is amazing and the plug is incredible.\"\n\nShe smiled at me and then looked down at my chest then leaned down licked one of nipples and pinched the other. The feeling was intense. I pinched and rolled her nipples and started thrusting into her. She stopped her assault on my nipples and held my head to her chest. I could feel her cunt spasming around my penis and felt like she was about to cum as her breathing and grunting increased. My orgasm started to boil and when I felt her cunt clamp down onto me that sent me over the edge and we came together.\n\nWhen we both started to come down off our orgasmic highs, I could feel my softening penis start to slip from her so I slipped my hand over her cunt to hold myself inside her and also keep my cum from sliding out when my penis did.\n\n\"Sit on my face and let me clean you out.\" I said.\n\nShe smiled and looked at me with wide eyes and stood up on her knees so that I could slide under her. My penis slipped out followed by a small stream of cum but I closed it off with my hand. When her cunt was directly over my mouth I removed my hand and opened my mouth. A gob of cum oozed out and dropped into my mouth. It was a mixture of hers and mine and it tasted so good. I clamped my mouth around her opening and she pushed out more that I hungrily sucked into my mouth and savored before swallowing.\n\nI pushed my tongue into her to pull out more of the creamy mixture. More came out that I missed and it landed on my chin and dribbled down my neck. She was still pretty sensitive and had to get off my face. Looking down at me she had this beaming smile and then crouched down to lick the cum that dribbled down my chin and then share another kiss.\n\nBreaking the kiss, she stood up in front of me. Her cunt was wet and her pubic hair was matted down with the mixture of both orgasms. I moved my face in to lick and suck it out of the hairs but she couldn't take any more stimulation and pushed me back. I got the message. Turning around, she went to the wall and got the items I would be buying tonight. Turning back towards me, in her hands was another small plug but looked bigger than the one that currently inside my ass and a much bigger one. My eyes widened when I saw that.\n\n\"When you are ready, you are going to love this one.\" She said smiling.\n\nTurning around to the wall she pulled off some dildos and turned back to me. She had thin and medium sized suction cup models in her hands.\n\nI got up and put my clothes back on and followed her out of the room and to the cash register. I paid with cash and when she was giving me my change I told her to keep it for extraordinary customer service. She thanked me and then stuffed the cash into her bustier.\n\nShe walked me to the door, opened it and gave me a kiss and then a pat of the rump that I felt in the plug.\n\n\"Call me. I might need a repeat performance.\"\n\nWe exchanged numbers and then I headed out to my car and the feeling of the plug pushing against my prostate was driving me crazy, again!"
    ],
    "authorname": "GoodBiCuriosity",
    "tags": [
        "butt plug",
        "cum eating",
        "oral sex",
        "anal",
        "anal sex"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/finding-the-perfect-fit"
}