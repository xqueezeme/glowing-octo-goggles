{
    "title": "Hero Worship Pt. 08",
    "pages": [
        "Well, here it is. Part 8, finally we are at the conclusion. Obviously, if you haven't read the first seven parts you should go do that before you read this. As always, all characters are over eighteen. Please, rate, comment and send feedback. Enjoy!\n\n- Aly -\n\nI'd never been so scared in my life. Ok, well that's not true, but this was different, a climbing the rollercoaster sort of scared/excited feeling. But I was scared. What if it was awful? What if it hurt too much? I wasn't kidding when I said I was a pain wimp. But in that place I went when I was being dominated everything felt so different.\n\nI'd talked it over with Trinity at the toy store, and we looked at a bunch of different options before settling on the cat o' nine tails that I ended up getting. The tresses really were incredibly soft, and even there in the store when Trinity tried it out on my arm it barely hurt at all. But still...\n\nMy nervousness was also making it a lot more difficult for me to relax into subspace than it usually was, but My Lady allowing me to service her helped a lot. There was nowhere I felt more comfortable than pleasuring Taylor, and I let myself enjoy her incredible flavor, the movement of her powerful body under my mouth. After some time, she pulled me up into her lap, slowly stripping off the outfit I'd worn for her and whispering in my ear how beautiful I was.\n\nShe didn't touch my new collar, though. I think I would have burst into tears if she'd tried to take it off. She slipped the blindfold over my eyes and the ball gag into my mouth, and I felt my spirit surrender to her.\n\nIn minutes I was on my back fully restrained, my hips lifted clear of the mattress. I was completely exposed as her mouth moved slowly over my sensitive inner thigh until she found my clit.\n\nMy Lady took me almost past my limit, and I was hanging on to my control by my fingernails when she stopped. I felt the tips of the flogger on my skin, and my overstimulated body began to shake. It wasn't the first time she'd touched me with it, but some part of me knew this was different, and she was going to use it now. The fear was still there, but it seemed far away. The bonds had let me sink deep under, where I existed only to give My Lady pleasure.\n\nThe nerves in my body were almost reaching out, desperate for this new experience. The tassels glided along my skin, over my thighs and butt, teasing my sex as it passed. Then it pulled away. Some thing swished in the air, and the soft leather slapped over my sex.\n\nIt hurt, but there was no pain. Or maybe there was pain, but it didn't hurt. I'm not sure. What I am sure of is that it was the most intense, exquisite, beautiful feeling, and I wanted more. After it landed she pulled the soft material across my sex, which was incredible, before pulling it away and doing it again. Taylor was being very gentle, but I didn't want gentle. I wanted more, and I wanted to come so badly I was seeing stars.\n\n\"Do you like this, baby?\" I whined into the ball in my mouth. I wanted to beg for more, for harder, but even if I hadn't been gagged there's no way I could have spoken.\n\n\"How about up here?\"\n\nMy Lady moved her attention up my leg, slap, slap slap, each landing a little higher. My entire body was humming, and it felt amazing, but I needed it back on my clit. I moaned pathetically, and she moved back done. The soft tassels landed on my sex again and I bucked. \"Oh, that's where you like it. Do you think you could come just from this?\"\n\nI could feel the tears flowing beneath my blindfold.\n\n\"Let's see. Come for me, baby.\" Every muscle in my body contracted in anticipation of release as the flogger landed two or three more times before I exploded in ecstasy. I pulled against my restraints with every overwhelming pulse, my core jerking and spasming with the deepest pleasure. When my body finally relaxed I was gone, fully given over to that special place, my whole body tingling as the leather landed again and again.\n\nEvery strike was bliss. My Lady moved up and down my legs, over my butt, but always she would come back to my exposed sex, and after a few seconds I would come again. I have no idea how long it lasted, but at some point the strikes were replaced My Lady's gentle lips. After a lovely, soothing session of kisses, she loosened the ankle restraints, so my hips were resting on the mattress again.\n\nI simply floated along, luxuriating in the ecstasy that surrounded me. I heard her fiddling in the bed stand, and then her heat was above me, her mouth closing over my breasts, one at a time, placing a clip on each when finished. A third closed over my super sensitive clit, making me moan.\n\nEvery part of me she had been striking was humming, and as I felt the length of the strap on against my hip I braced. What was this going to feel like? My pussy was so sensitive right now. Could I take it? Then My Lady was on me, and she filled me with one smooth motion, and the bliss carried me away again.\n\nThis was my universe. I would come, and then relax back into that perfect euphoria of subspace, where I would exist until the tempest of my orgasm swept me away again. Over and over, perfect beyond words.\n\nEventually it stopped, and as she pulled out I felt loss, the first negative feeling I'd had since we started. She finished as she always did, stripping off the clips and giving one last screaming moment of joy before letting me loose from the restraints. As they came off I felt reality start to return, and I just wanted it to go away. I wanted to go back to that place, but at the same time I felt wonderful, and I was blissfully happy.\n\nI'm not going to cry this time. There's no reason to cry, and I don't want to upset Taylor. I love her so much, and she's so good to me. She makes me so happy. And with that I lost it, sobbing as My Lady pulled me into her arms, rocking me gently against her strong body until I fell asleep\n\n***\n\nIt was after midnight when I woke up. Taylor was still holding me, but unfortunately I had to disentangle myself from her warmth to use the bathroom. I was also desperately thirsty, and sure enough there was a sports drink on my bed stand. When I was finished with both the drink and the potty I climbed back between the sheets. I was surprised how sore I didn't feel, but then I had a vague recollection of Taylor putting lotion on my half conscious body.\n\nI pressed against her, pulling her arms around me.\n\n\"You okay, baby?\"\n\n\"Yeah, just had to pee.\"\n\n\"You get your drink?\"\n\n\"Yes, thank you. I love you.\"\n\n\"Love you, too, baby. Come here.\" She pulled me close. \"How was it? With the, um...\"\n\nI smiled at the concern in her voice. \"It was perfect, and I loved every second. Thank you.\"\n\nHer relief was obvious. \"You're very welcome. Happy birthday, baby.\"\n\nI smiled and snuggled closer to her, relaxing back towards sleep.\n\n***\n\nWe spent Christmas Eve Day relaxing together, with me wrapping some presents for my parents and sister. I'd just gotten them a few trinkets from one of the campus stores, since this would be my last year in school. Hopefully next year I'd have my own money and I'd be able to do better. We headed to my parent's house for dinner, and we took a ride out to one of the local light shows in the evening.\n\nChristmas morning dawned, we gathered as a family around the tree. It wasn't quite the same as it had been when we were kids, a lot of the nervous energy had slipped away as we got older. But it was home, and Taylor was there.\n\nIt turned out to be the year of the computer, as Kelsey got a new, fully loaded laptop that would see her through college at least, and my parents had a surprise for me as well, with my own new computer all tricked out for drafting, along with a professional, but still somehow stylish, briefcase. I also got two business suits, which my dad says were for interviews and things. He was probably right that I needed some more professional clothes.\n\nThey gave Taylor a gift card to an online art shop. But they weren't done. After all the presents opened and stockings emptied, my dad cleared his throat.\n\n\"So, we waited until last for this one.\" He looked at my girlfriend. \"Taylor, we've very much enjoyed getting to know you this last month or so, and we want you to know how much we welcome you. But this isn't about that. You performed a service for this family, a miracle, that can't ever be repaid.\n\n\"From talking to you, and from things Aly's said, I know you're self conscious about not finishing school. So, we would like to help you change that. We will pay for your senior year if you'd like to return and graduate.\"\n\nTaylor's mouth was hanging open. I'd had no idea they were planning this, and the part of me that remembered the fight about the rent payment started to panic.\n\nMy mom must have seen my face and jumped in. \"Just letting you know, Aly had nothing to do with this. And, this has nothing to do with your relationship or any expectations about it. If you break up or get married or anything in between, this offer stands. This is about what you did for Kelsey, and for all of us.\"\n\n\"Um, thank you. I, uh ...\"\n\nDad raised his hand. \"You don't have to answer now. The offer is there for as long as you need.\"\n\n\"Thank you.\"\n\nI could feel the questions and conflicts running through my love, and she was distant the rest of the morning. Not cold distant, just thoughtful. After lunch I pulled her into the front room, so that it would be just her and I for a few minutes.\n\n\"How'ya doing?\"\n\nShe shook her head. \"I'm fine. Really.\"\n\n\"What are you thinking about?\"\n\nShe smirked at me. \"You could probably guess.\"\n\nI slipped my arm in hers. \"Okay, let me rephrase. What do you think about what my dad said?\"\n\n\"You really didn't know?\"\n\n\"Oh, no. I've learned that lesson. I would have warned you, promise.\" Taylor nodded and I heaved an inward sigh that she believed me. \"But it still begs the question, what are you going to do?\"\n\n\"I'm not sure. I'm just going to think about it for a few days.\"\n\n\"Okay, but if you want to do this, and I know there's a part of you that does, you should.\" I climbed into her lap, and her arms wrapped around my middle. \"Just promise me that if you say no, it won't be because of pride. Okay?\"\n\n\"Okay.\" Taylor nodded before kissing me on the cheek. I stayed like that for about ten minutes, just letting her hold me, my head resting on her shoulder. Little moments like this were so nice. It was kind of like the ocean. When Taylor and I were, well, you know, it was so easy to let myself submerge into the deepest parts of that place. Now, with her close, it was like I was walking along the shore, just dipping in my toes. Very nice, and it reminded me more was there when I wanted to go out deeper.\n\nTaylor made no movement to get up, and I was just letting myself sink a little when Taylor's phone rang. It startled me out of my reverie, and I sat up in her lap as she leaned forward. \"It's my brother.\"\n\n\"The one getting married?\"\n\nShe nodded and hit the icon to accept and put it on speaker. \"Hello?\"\n\n\"Hey, sis! I'm glad you answered. Merry Christmas!\"\n\nTaylor looked bemused. \"Thanks. You too, Gabe. Are you at mom and dad's?\"\n\nGabriel laughed. \"No, I'm not that brave. I'm at Christa's parent's. Mom and Dad are doing a family thing tomorrow. How 'bout you, Ruthie? Please tell me you're not just moping around your apartment.\"\n\nI stifled a giggle at the name 'Ruthie,' causing Taylor to make a face at me.\n\n\"Actually, I'm at my girlfriend's house.\"\n\n\"You're seeing someone? That's awesome, sis!\"\n\n\"Thanks. It's nice. The whole house is starting to smell like baking ham. It's almost like a real Christmas again. First one in awhile.\"\n\nThere was a nervous moment before Gabe continued. \"So, the reason I'm calling, other than to say Merry Christmas, is, did you get my card about the wedding?\"\n\n\"Yeah. Congratulations.\"\n\n\"Thanks. We'll be sending out formal invitations after the first of the year, but I just wanted to let you know that I really do want you there.\"\n\nI tried to give Taylor an encouraging look, but I could tell she wasn't convinced. \"You speaking for mom and dad, too?\"\n\n\"Ah, probably not. But the beautiful part about it is that Christa's parents are paying for the whole thing. Also, unlike Michael or Derrick, neither I nor Christa work for dad, so I get to decide who I want at the wedding.\"\n\nI scrunched up my face and mouthed, \"Derrick?\"\n\n\"Derrick's my little sister's husband.\"\n\n\"Hey! Who're you talking to? Is that your girlfriend?\"\n\nTaylor blushed, looking uncomfortable. \"Yeah, it is. Aly, my brother Gabe.\"\n\n\"Hi! I'm trying to convince her to go.\"\n\n\"I appreciate that, Aly, thanks.\"\n\n\"Gabe, I just don't want to cause a scene at your wedding. What if mom or dad won't come if I'm there?\"\n\n\"They won't push it that far.\"\n\nTaylor chuckled dryly. \"Are you really sure about that?\"\n\n\"Look, the way dad and mom have been treating you is wrong. I want my family at my wedding. All of my family. But if you don't want to deal with them I'll understand.\"\n\n* * *\n\nLaying in bed that night I could almost hear the thoughts running through Taylor's head. My cheek was nestled on her shoulder as she twirled her fingers through my hair.\n\nI kissed her skin. \"Sweetheart?\"\n\n\"Hmm?\"\n\n\"Penny for your thoughts.\"\n\nTaylor breathed deep. \"I feel like I can't shut my head off. It's back and forth between going back to school, what my family would be like at the wedding. If I could put you through that. How great today was. All those things.\"\n\nShe moved onto her side so we could look each other in the eyes. \"I'd hate it if they were horrible to you, baby. I'm not sure what I would do.\"\n\n\"Are you happy?\"\n\nTaylor's brow crinkled up at the non-sequitur. \"Hmm?\"\n\n\"With me, with us, together. Do I make you happy?\"\n\n\"Yes, of course. You know that.\"\n\n\"And would a family who really loves you want you to give that up just to make them feel better?\"\n\nTaylor closed her eyes and shook her head, laying back, and I knew I hadn't gotten anywhere with that. If my parents rejected me over this, how would I feel? It wouldn't matter how supportive my girlfriend's family was, I'd be devastated.\n\n\"I'm sorry, that was trite.\" I put my hand over her middle. \"They're your family and I know you want them to accept you.\"\n\n\"The only way that could happen would be for me to stop being me.\"\n\n\"So you have to choose. It's not fair.\"\n\n\"I've already chosen.\" She turned back towards me. \"And meeting you, I know I chose right.\" She sighed, and her gaze was far away. \"When I came out to my parents I did it to hurt them. I used it like a weapon. That was wrong. It was stupid and immature. I just wanted to get them back for everything I'd been feeling since I was twelve.\n\n\"But this needs to be different, y'know? I'm not a kid anymore. I think I have to stand up and be an adult. Show them I can make my own choices, and live with the consequences.\"\n\nI grinned at her. \"Consequences like me?\"\n\nHer gaze turned evil. \"Yes. I cannot tell you how rough it is to have a gorgeous girlfriend who obeys my every whim.\"\n\nI made my voice as obsequious as possible. \"I'm sorry I'm so difficult, My Lady.\"\n\nTaylor rolled me onto my back and overshadowed me with her body. \"It's awful. What are you going to do about it?\"\n\nMy sex was already tingling as her eyes bored into mine. \"I could try to please My Lady. I'll try hard, I promise.\"\n\n\"Very well.\" She kissed me deeply and I melted into the mattress. Eventually she broke away, leaving me gasping for breath, and rolled onto her back. \"You may begin, baby.\"\n\nI couldn't help the smile that broke across my face as I slipped under the sheets.\n\n- Taylor -\n\nA van came for the Winterbergs at seven the next morning, and I waved as they drove away toward the airport, before turning back to the mansion that was mine for a whole week. When Jessica had mentioned I'd be welcome to stay to look after the place, I really didn't feel like saying no.\n\nI still had to go to work and spend time at the warehouse, but afterwards I very much enjoyed making dinner in Aly's parent's huge kitchen and lounging in front of their massive flatscreen. The two cats warmed up to me as soon as I fed them once, and we got along fine. But what I really was looking forward to was a long soak in that tub in the master ensuite. Without Aly it wouldn't be as much fun as last time, but still, sometimes a girl just needs a good, long soak, and that's exactly what I was doing when Aly called the first night.\n\n\"Hey, baby, how was your trip?\"\n\n\"Fine. What are you doing?\"\n\n\"Soaking in your mom's tub. Wish you were here.\" I put a purr in my voice that made Aly giggle.\n\n\"Stop it. My sister's here.\"\n\n\"Hi, Taylor!\"\n\nI laughed \"Hey, kid. So, what's going on?\" I was a little nervous for Aly. Her mom's side of the family were a lot more conservative than what she was used to.\n\n\"It's eleven o'clock here, and everyone's in bed.\"\n\nKelsey chimed in. \"And we can't sleep. Mom said we should try. But it's always hard the first night.\"\n\nI was trying to find a way to ask if she'd told anyone there about me. I wouldn't blame her if she didn't, at least not for a while, but knowing Aly I wasn't sure if she'd wait.\n\n\"So, did you see everybody?\"\n\n\"Yeah, we had a big dinner. My aunt gave Kelsey and I sweaters. Big, heavy, homemade, woolen ones. We live in L.A. When are we going to use sweaters?\"\n\nI laughed, but that didn't answer my real question. Turns out I didn't have to wait much longer.\n\n\"Aly told them all she was gay. Well you did.\"\n\n\"You told them about me?\"\n\n\"Yeah. I'm done hiding. It sucks. I'd rather people just hate me.\"\n\n\"So what happened?\"\n\n\"Actually it turned out to be a big nothing burger.\"\n\n\"They just accepted it?\"\n\n\"Ah, not exactly. Mostly they pretended it didn't happen. My grandma actually said,\" Aly put on a creaky voice, \"'Well, we all do crazy things in college, dear. I'm sure the right man will change your mind.' And then she wouldn't talk about it anymore. If anyone else brought it up, she'd just change the subject.\"\n\nWe talked for another hour, until I got out of the cooling water and made it into bed. I said goodbye very reluctantly, getting ready to sleep in a huge and very empty house. It was an odd feeling, and I missed Aly something terrible. Quite a thing for a girl who would have sworn five months ago that she'd never need anyone again.\n\nThe week passed slowly. I talked to Aly most nights, but I had a lot of time to think about things, including a very lonely party at Jared's on New Year's Eve. I talked to Aly at ten, which was midnight for her, and we pretended to kiss. When I hung up there were tears in my eyes, and one slipped free.\n\n\"Hey, Taylor. You okay?\"\n\nI looked up at Jared, blushing as I wiped my cheek. \"Yeah, I'm fine.\"\n\n\"Uh-huh, sure. 'Cause you cry all the time.\" He handed me a red cup. \"Here, you need this.\"\n\nI took a sip of the cool beer inside. \"Thanks.\"\n\n\"So what's going on? Something wrong between you and Aly?\"\n\n\"No, just that she's not here.\"\n\n\"Man, I've never seen you worked up like this about a girl. You got your head on straight with her?\"\n\nI took another sip. \"Nope, not even close. She's got me all wrapped up.\"\n\n\"Lucky bastard.\"\n\nI grinned, tapping his cup with mine and downing the contents.\n\n\"Now, come on, Knox, let's go dance.\"\n\nI shook my head, but he pulled me to my feet anyway. When the countdown started and people started to partner up I slipped away. As soon as it struck midnight I sent Aly a text, just a simple 'I love you.' I'd been trying to figure out how to make myself feel worthy of Aly for months. Being able to stand up to my family was a solid place to start, I think. A ridiculous memory of Yoda talking to Luke Skywalker in Return of the Jedi popped into my head, the little green muppet telling Luke that he would not be a Jedi until he faced his father again. Maybe that was my fate as well.",
        "***\n\nAly was back in my arms three days later. I picked them up at the airport, and watching her beautiful face split into a dazzling smile when she saw me, how she unabashedly threw herself into my arms, I knew I'll never get over this girl. I obliged by catching her up and twirling her around once before kissing her soundly.\n\nAfter getting the rest of the Winterbergs home, Aly set some kind of record driving us back to my apartment. We raced up the stairs, practically ripping each other's clothes off as we stumbled toward bed.\n\nAfterwards I lay there, cuddling Aly as close as I could. \"Mmm, no more going away for you.\"\n\nAly giggled. \"So I'm just to be your kept woman, hmm?\"\n\n\"Yep, never leaving again, just staying here in bed with me.\"\n\n\"And how do you plan on accomplishing that?\"\n\n\"Well, see, I bought this stuff, ropes and things.\"\n\nAly laughed again and nuzzled my neck. We hadn't used any toys this time, just skin on skin. And it was wonderful.\n\n\"Baby?\"\n\n\"Hmm?\" She didn't stop her kisses until I continued.\n\n\"I want to go to that wedding. I need to stand up to my family.\"\n\n- Aly -\n\nI pulled my head up and looked Taylor in the eye. \"Okay. I'm coming with you.\"\n\nI could see her start to argue the point. She was scared at what her parents, specifically her father, might say to me. But I could handle it, and I wasn't about to let her face it alone. \"It'll be okay, Taylor. Let me be there.\"\n\nShe smiled weakly. I'd never seen her so vulnerable. She took my hand and nodded. \"Okay.\"\n\nI spent the rest of my break with Taylor. Every night, having dinner, cuddling on the couch, having some really great sex. Unfortunately, school started up again, which meant we lost our Tuesdays. Thanks to my advanced placement classes from high school I only had to take two courses this semester, not counting my senior project. Both of the ones I chose met on Tuesdays and Thursdays, and my weekly meetings with Professor Del Vecchio had been moved to Wednesdays.\n\nBut what that did mean was that when Taylor got home from the beach on Sunday, I was always there waiting for her, and I didn't have to leave until Tuesday morning. Weird how Monday could suddenly become your favorite day of the week, huh?\n\nUnfortunately, my senior project and the prospect of my looming adulthood were more than enough to keep me stressed. I'd started building my model for the new Tagalong Beach Community Center. Not everyone made the model, and most firms had professionals that were specifically devoted to that skill, but my professor insisted it was an essential part of design, and so I was doing it.\n\nAs it took shape, it was sad thinking how it was never going to be a reality, but that's alright. It existed in my head.\n\nI was also turning my attention to interviewing. Job hunting was quickly taking up most of the seniors' time at the house, and it was all anyone could talk about. Sadie was applying to graduate school, which was causing her no end of anxiety.\n\n\"I'd been planning on going back to Texas, you, know? The distance is hard and the cost of living is a lot lower at home. But ...\"\n\n\"But Noah?\"\n\nShe nodded, an actual tear in her eye. Sadie was not the weepy kind. \"If I move halfway across the country, I'm afraid I'll lose him, or that we'll lose each other. Distance scares me.\"\n\nI sat down next to her on her bed and put my arm around her shoulder. \"You made it through last summer.\"\n\n\"Yeah, but that was just a few months, and we were just starting out. We're a lot closer now.\" She leaned her head on me. \"I love him, Aly, and when I think about not being near him, it starts to hurt inside.\"\n\n\"Hey, I understand, believe me.\" I gave her a squeeze.\n\nThere was a soft knock on the door. I said \"Just a sec\" as Sadie wiped a tear away with her sleeve. I hopped up and headed to the door, pulling it open. Evelyn was standing there with a dumbstruck look on her face.\n\n\"Hey, come in. You okay?\"\n\nShe nodded and walked in, and I realized she was holding a piece of paper. \"I got in.\"\n\n\"What? Where?\" She held out the piece of paper she was holding, and I saw the huge crimson 'H' at the top in the letterhead. \"Harvard? That's amazing! Congratulations!\"\n\nSadie grabbed the paper as a huge smile broke out over Evelyn's face. \"I'm going to Harvard Law. Oh my god!\" We started to laugh and hug, the three of us. The commotion caused a few other girls to poke their head into the room, and in moments it was a little impromptu party. Even Macie stopped in to offer her congratulations, without acknowledging my presence, of course.\n\nThe topic of conversation, as could be guessed, quickly turned to after college plans, and the girls were laughing and bragging a little. Sadie, though, still seemed withdrawn.\n\nI put my hand on hers. \"Hey, you want to go for a walk?\"\n\nShe nodded, and we slipped away.\n\n\"Crazy time, isn't it, Aly?\"\n\n\"Yeah. How are we supposed to make these decisions? We're still, like, seven years old.\"\n\nSadie laughed. \"Yeah. Remember when we were in high school and knew everything?\"\n\n\"Of course. Especially exactly how our life was going to turn out.\"\n\n\"I knew I wanted to be a psychologist. But I laughed at all my friends who were bemoaning the loss of their boyfriends. Or even worse, the ones getting married.\"\n\n\"Did you have a lot of those?\"\n\n\"It was Texas.\" We giggled. \"I thought they were crazy, getting married so young. Maybe they were. But I wasn't going to fall in love. I wanted my career first. Then maybe a family someday down the road. Way down the road.\"\n\n\"So? You can still do all that.\"\n\n\"Yeah. But it's a long road. We're talking seven years of graduate school at least. Would Noah want to deal with that? I mean, he's going to be making good money six months from now. What does he want?\"\n\n\"Yep. It's inscrutable. You might even have to stoop so low as to ask him.\"\n\nShe made a face at me. \"You're lucky. You can just move in with your girlfriend after graduation. Easy-peasy.\" It was my turn to blush and look down at my shoes. \"That is what you're doing, right?\"\n\n\"I've always assumed so, but we haven't really talked about it, though\"\n\n\"We're a pair, aren't we?\"\n\nI laughed, and we walked a few more steps before my phone rang.\n\n\"Hello?\"\n\n\"Hi, Aly! It's Michelle Gonzalez from Urban Chic Architecture.\"\n\n\"Hi, Michelle. It's good to hear from you.\" My heart was instantly racing as I heard my internship mentor's voice on the phone. I'd only sent over my formal resume three days ago.\n\n\"How's your senior year going? Living it up?\"\n\n\"Yeah, 'cause I'm such a wild one. Good, though. My senior project's going well.\"\n\n\"I saw it. Professor Del Vecchio sent over your initial plans. It's very impressive. I love the styling.\"\n\nI did an inward check, wondering how she'd gotten those so quick. \"I can't take full credit for that. My, um, I've been seeing someone. An artist. It was her idea.\"\n\n\"But you executed it.\" Her complete nonchalance about the pronoun I'd used made me wonder if she'd even noticed. \"Anyway, Whitney in HR said you submitted a resume, and I was calling to schedule an interview. Even though we already know you.\"\n\nWe settled on Friday at ten and I disconnected. During the conversation I'd sat down on one of the benches, and Sadie was next to me. \"See? Everything's going to work out great for you.\"\n\n\"Isn't that when the other shoe drops?\"\n\nSadie grinned. \"Sometimes.\"\n\n***\n\nI'd put in my resume at probably a dozen other architecture firms all around Southern California, but, to be honest, Urban Chic was the only place I'd ever seriously considered working. I liked the people, I liked the atmosphere, and although it hadn't been something that had affected me during my internship, there were several LGBTQ+ employees there, all of whom seemed happy and part of the team.\n\nMy interview went wonderfully, feeling more like a reunion that anything else, and I had several people stop in and make comments varying on 'Can't wait to see you back.'\n\nI bought takeout Mexican and surprised Taylor at her apartment afterwards, regaling her with all of the details from my day and how excited I was that I might be getting my first real, grown up job. I also filled her in on all of the gossip, from Evelyn's Harvard acceptance to Sadie's (in my opinion) nonexistent quandary. I was jabbering, but it was so easy to do just sitting in Taylor's lap.\n\nWhen I finally looked at Taylor, she was wearing a little crooked smile.\n\n\"What?\"\n\nTaylor kissed me on the temple. \"I'm just thinking about how you always make fun of your sister when you go home to visit for talking non stop.\"\n\nI playfully slapped her on the shoulder. \"I'm not that bad.\"\n\n\"I'm not complaining.\"\n\nI bent down and kissed her, reveling in the feel of her lips, how her arms around me made my heart soar. I buried my head in her shoulder and rested there, feeling her chest rise and fall with each breath. There was a frilly envelope on the side table.\n\n\"You got it, huh?\"\n\n\"Yeah, it came Tuesday.\"\n\n\"You let them know you're coming?\"\n\n\"I left a message on the RSVP line, reservations for two. You sure you want to come?\"\n\n\"Yep. By your side, no matter what. So, are we going to fly? Or drive? How far away is Boise?\"\n\n\"It's about thirteen hours by car. I'm not sure how expensive flying would be.\"\n\nWe spent the next hour looking over travel options, researching flights and hotels. One of the nice things about living in LA is that you can find direct flights to most places around the US, but getting in and out of LAX was still a pain, and we decided to do the drive instead. I figured twenty some hours in a car together over the course of a weekend would be as good of a test of our relationship as anything.\n\nI'd never gone on a long road trip, as we'd always flown places for our family vacations, since both mom and Kelsey get car sick really easily. I was excited, to be honest, I hadn't seen the northern Rockies up close, and since I'd never driven in tall mountains I was too na\u00efve to be worried about it.\n\nI immediately got online and looked up all the things you should do before long road trips, making a list, which would include taking my car in for an oil change and brake inspection. The more fun stuff, of course, involved shopping.\n\nAs great as those weeks in January were, I could see the tension building in my love as the calendar ticked closer to and eventually became February. She was trying to be stoic about it, but bottling her anxiety was making it more and more obvious how she felt, rather than the reverse.\n\nI decided on a flanking maneuver to try to get her to talk about it, so the Sunday two weeks before the wedding I brought it up over some spaghetti and meatballs we'd made.\n\n\"So what are you going to wear?\"\n\nTaylor rolled her eyes at the question. \"Whatever. What do you think?\"\n\nI stared at her for a second.\n\nTaylor grimaced. \"Part of me wants to just do a suit and tie, but I think that's mostly to make my parents angry. Plus the fact I don't own a suit and tie. It won't be that fancy, so I can probably find something.\"\n\nI did a mental inventory of Taylor's wardrobe, not really coming up with anything. After dinner we did a more thorough, physical check. I even had her try on a few things I hadn't seen her wear. An hour later I realized there was only one viable option.\n\n\"Okay. We're going shopping tomorrow.\" Taylor groaned, but I stuck to my guns. \"We have to go get a wedding present anyway, and I want to look for a dress.\"\n\nTaylor made a face. \"Don't you already have all the dresses?\"\n\n\"I don't have anything for an Idaho wedding.\" Taylor rolled her eyes in resignation.\n\nThe next morning we went out to a pancake house for breakfast and talked it over.\n\n\"So, have you given it any thought now?\"\n\nTaylor nodded. \"It's not my wedding, and I don't want to cause any extra friction, so maybe we could find something in a nice blouse, one that's still kind of me? And just slacks?\"\n\nI nodded. \"Yeah, no problem. We can do that.\"\n\nAnd we did, spending a little more than an hour at a couple of different stores, trying on top after top. The salesgirl brought a few new selections to the changing room we were using, and Taylor glowered at me. \"You realize I'm going to have to punish you for this.\"\n\nThat just made me grin, and I handed her the next article of clothing I wanted to see. Eventually we found a silky green button down with breast pockets and roll up sleeves. I picked out a pair of dark slacks to go with. I decided not to press the issue with shoes.\n\nI was able to find a complimentary, but not matching, vintage skirt and cream colored tight sweater top. It didn't happen terribly quickly, though, and I could see Taylor's eyes glazing over as she repeatedly tried to give honest opinions about the things I was trying on. Luckily I had a clutch and a pair of shoes that would work back at home, so I didn't have to drag Taylor off accessorizing.\n\nWe talked as we sat in an outdoor food court, me munching on orange chicken and rice. \"See? That wasn't so bad.\"\n\n\"At least it's over.\"\n\n\"Not quite yet, we still have to get a wedding gift.\"\n\nI think Taylor almost cried, but that part went smoothly enough. They were registered at a number of places, like Target and Bed, Bath, and Beyond, but also at Williams-Sonoma, which my mom loved, so we picked something off their online list, and we were able to swing by the store and pick it up.\n\n\"See? All done. Now we can relax.\"\n\n\"I can't believe I let you put me through that.\"\n\nI gave her a wide grin.\n\nWhen we got home, Taylor 'punished' me for two glorious hours. I was ordered to strip and lay on the bed, arm behind my back. Taylor sleeved them there before attaching thigh, knee and ankle cuffs to both legs, the left and right of each linked with their counterparts, leaving me helpless and unable to spread my legs. My blindfold was put in place, and I tried to control my excited breathing as I heard My Lady disrobe.\n\nShe slid onto the bed, using a handful of my hair to guide my face to her waiting sex, and I began to pleasure her, losing myself in her exquisite flavor. When she was ready I wrapped my tongue around her clit, causing her to shake and shudder.\n\nI felt her come several times, but I still whimpered unhappily when she pulled me away, rolling me onto my stomach and unsleeving my arms. Their freedom lasted only a moment before wrist cuffs were applied and attached up to the top corners of the headboard, raising my torso off the mattress. My Lady pushed my still bound together knees underneath my hips and put on my ball gag.\n\nShe ran a lazy finger through my soaked sex, which was pouting from between my closed thighs, before slipping it inside.\n\n\"Oh, yes, nice and tight.\" She centered herself behind me, and I braced myself for the coming onslaught of pleasure, moaning into the red sphere in my mouth as she filled me from behind.\n\nMy body was a rag doll, existing only to please My Lady, as the ecstasy ricocheted through me. My Lady changed my position as she wanted, and each time my only thought was wondering what new way she'd decided to give me joy. One time she had me on me back, arms at my side so she could sit on my face, and as I worshipped her with my lips she ran a vibrator over my quivering pussy.\n\nAfter she'd climaxed she turned onto her back, replaced the double-ended and pulled me on top of her, rocking me back and forth over her sex as the phallus rode deep inside me. I felt her come again and again, which made me so happy, but my body was begging for release. I had no idea how long it had been, but my core was almost painful from it's denied desire to come. Tears began to leak out from under my blindfold.\n\nMoments later I was laying on my back as My Lady separated and spread my legs. She didn't even bother to tie them, just pressing them back. Taylor took my breasts into her mouth in succession, spending a few delicious moments on each before kissing down the skin of my belly.\n\nMy body shook as she reached my sex, and I cried out as she dipped her tongue inside me, drawing it up from my vagina to my nub. She swirled around it once before I heard those beautiful words from My Lady, and my body came apart as the orgasm denied for so long took hold. Over and over I came, my body twirling and spinning as I let go, sinking into that place I loved, where there was nothing but My Lady and the pleasure she was giving me.\n\nHer mouth left my pussy and I sensed her move up my body and over shadow me. The phallus she was wearing filled me, my legs wrapping around her and pulling her close. A hand behind my neck, and my gag released and fell away. A moment later my blindfold was lifted away and my vision cleared to behold My Lady's beautiful face and gorgeous eyes, looking deep into mine, and it was the most wonderful thing I'd ever seen.\n\nMy mouth opened as another orgasm claimed me, and My Lady's lips closed over mine, our tongues entwining as my body clenched and released in ecstasy. My lady took me through one more, slowly and tenderly, joining me at the top of the mountain as we came together, collapsing next to me for just a moment before slipping off the strap on and removing all hints of my restraints and pulling me close.\n\nI sucked in breath after breath as I felt my emotions begin to rise. In the past I'd always fought to control myself, failing miserably as I re-emerged from subspace. This time though, I just decided to let it happen, and follow my own advice about not bottling things up.\n\nMy emotions were raw, primal things, and I let them wash over me, overwhelming me as I wept into Taylor's shoulder. She didn't try to shush me, instead just letting me calm at my own pace. I kissed her skin softly as I quieted, heaving a great, contented sigh as I let her warmth surround me.\n\n\"You were really feeling it there baby.\"\n\n\"Yeah. I decided not to hold it in this time. It's not good for you, holding things in.\"\n\nTaylor smiled at me as I leaned on her shoulder. \"Trying to tell me something?\"\n\n\"Maybe.\" I kissed her shoulder.\n\n\"Aly.\" Her voice was playfully stern\n\n\"I know you're nervous about going back home. You don't have to hide it.\" I ran a finger over one of her breasts. \"You don't always have to be the strong one.\"\n\nTaylor breathed deep and leaned back. \"I know. I'm sorry.\"\n\n\"It's okay. Let me ask you this. What are you hoping for? By the time we get back home, where do you want to be, in here?\" I put my hand over her heart.\n\n\"Realistically? I want to know that I can stand up to my family and be proud of who I am. I don't want what they think to be so important.\"\n\n\"Sweetheart, you're always going to care what your family thinks, even if they're wrong.\"\n\nTaylor closed her eyes. \"I know. But...\"\n\nHer words dried up, and I saw a tear form. \"Oh sweetheart. Don't, I love you.\" I pulled her to me and she broke down. It was the most odd feeling, holding her while she cried, but it broke my heart. Eventually she stopped, and I stroked her hair.\n\n\"Taylor Knox, you are a wonderful human being, and anyone would be lucky to have you in their life. I know I am.\"\n\n\"I'm sorry, Aly.\"\n\nI chuckled and rubbed her back. \"It's okay. How many times have I cried on your shoulder?\"\n\nShe smiled. \"Including today?\"\n\n\"Hey. I was being punished. It's okay to cry.\"\n\nShe pulled me close. \"Yeah it is.\"\n\n\"Let's make a deal. It's always okay to cry on each other's shoulders. No matter what.\"\n\n\"Agreed. No matter what, and no judgment. I love you.\"\n\nI started to say it back, but it came out as a long yawn, which made Taylor laugh. \"Aww, is my baby tired?\"\n\nI nodded, exhaustion settling over me like a blanket. \"Being punished is hard work.\"\n\n\"I know, but you do it so well, baby.\"\n\n\"Did I make you happy, My Lady?\"\n\n\"Always.\" Taylor pulled me into her arms. \"You can relax now, baby. I've got you.\"",
        "***\n\nThe drive to Boise was spectacular. Flying over everything all the time, you never really get to appreciate the beauty of this incredible country. We went through mountains and deserts, spent an hour riding along a huge lake, it was amazing. We started out on Friday at six, well before the sun came up, and spent the early morning in the valley between the Inyo Mountains and the Sierra Nevadas before making our way into Nevada proper. We skirted Walker lake and headed through Nevada's stunning Great Basin Desert before heading into the mountains of Idaho.\n\nLuckily the weather was perfect the entire way. We switched off driving every three hours or so, and I fell asleep as we neared our destination. When Taylor gently shook me awake it was dark, and I could see the hotel's brightly lit sign shining through the window.\n\nWe entered the lobby, rolling our luggage behind us. The pretty brunette behind the counter smiled as we approached.\n\n\"Reservation under Winterberg?\"\n\n\"Yes ma'am, two nights, two occupants. One of our hot tub rooms, I see, very nice. You'll be in room 106.\"\n\nTaylor's eyes went wide, staring at me. \"Hot tub?\"\n\nI grinned up at her. \"It was a long drive.\"\n\nWhen we got into our room I wrapped my arms around Taylor. I was going to do my best to keep her relaxed tonight. \"Want to order some dinner? We could have it delivered. Just relax.\"\n\nTaylor returned my embrace. \"I am not going to be able to keep my clothes on long enough to have something delivered. I'm going to order, and I'll run and get it. And you,\" she kissed me on the forehead, \"have that tub filled and ready when I get back.\"\n\nMy cheeks stretched into a grin. \"Yes, My Lady.\"\n\nShe slipped back out of the room while I turned on the hot water.\n\nBy the time Taylor returned I was luxuriating in the hot tub. She set a bag down on the wooden desk. It had 'Diablo and Sons' written on it in a fancy, old timey script with a jackrabbit above. I rose up on my knees, letting the water run off my breasts and tummy.\n\n\"The water is ready for you, My Lady.\"\n\nI saw Taylor's pupil's dilate as she saw me. \"Baby, you look amazing. Hungry?\"\n\n\"Yes, My Lady.\"\n\nFor the next hour we relaxed in the tub, enjoying the water and munching on specialty tacos and this incredible, potato side thing she'd ordered. I think it was called patatas or something like that. Anyway, it was yummy. And so were My Lady's arms around me in the warm water.\n\nWhen we finally got out I dried her off slowly before laying her down and making love to her from head to toe. It was lovely, so intimate and tender. She set the pace, guiding me to where she wanted me, and she didn't try to reciprocate. Somehow she knew I hoped it would be all about her tonight. I wanted her to draw all the strength she might need tomorrow from my love. And when we fell asleep in each other's arms, we both knew the most important thing was that no matter what the morning held, we would end the day like this tomorrow night. Together.\n\n- Taylor -\n\nI didn't sleep well. That probably goes without saying, but still. I spent the few hours before dawn just holding Aly, feeling her skin against mine, watching her breathe. My body was still humming from the incredible things she'd done for me last night. How could someone's presence be so exciting and so calming at the same time? She was a wonder, my Aly, and I was going to need her today.\n\nI didn't want her to wake up, because that would mean the day was really starting, but eventually she stirred in my arms, opening those lovely, soft brown eyes.\n\n\"Mmm, good morning.\"\n\n\"Morning, baby. How'd you sleep?\"\n\n\"Okay. You?\"\n\nI grimaced. \"I've slept better. Couldn't shut my brain off. Again\"\n\nAly frowned. \"I didn't relax you enough last night? I'm sorry.\"\n\nI smiled and kissed her forehead, running my fingers through her soft hair. \"Baby, you are the only reason I got any sleep at all.\"\n\nOur lips found each other, and we kissed long and deep. I began to roll Aly onto her back when her tummy rumbled, making me break off laughing.\n\nAly put her hand over her eyes. \"I'm sorry.\"\n\n\"That's okay. You're hungry, I take it?\" She nodded. \"Me, too. Let's get cleaned up and go get some breakfast.\"\n\nAs we got out of bed I indicated that she did have chores to do before she was allowed to eat, and I led her into the shower so she could accomplish them.\n\nI let Aly pamper me under the hot water. Her presence was so soothing, but when she was done and I regained some semblance of a normal breath rate I washed her as well before bringing her to a well deserved orgasm.\n\nI took a moment as I held her against me to wonder why the outside world had to exist at all. Why couldn't it just be Aly and me together forever, just like this?\n\nWhen we went back into the room it was only a little after ten, and the wedding didn't start until half past two. We decided on another dip in our tub, Aly putting some silly cooking show on the T.V. After we got out she tried to get me to play some cards, but I was too high strung to concentrate.\n\n\"Hey, okay, let's talk through it.\" She put her hand on my knee, which was instantly calming. \"What's the goal today?\"\n\nSo we talked, Aly reminding me that I wasn't a silly kid anymore, and I so badly wanted her to be right.\n\nEventually it was time to get ready, and Aly went into the little sink area to do her hair while I changed. I'd just put on my blouse when she reemerged naked, holding the one of the chokers I'd bought her.\n\n\"May I wear this today, My Lady?\" She placed it in my hand, looking up at me in total surrender. I kissed her forehead, my nervousness retreating as I touched her.\n\n\"Do you remember what it means, baby?\"\n\n\"That I belong to My Lady. That I am hers and only hers.\" Her voice was breathy and pleading, and my heart was overwhelmed.\n\n\"And the heart means Your Lady loves you and only you, and she cherishes you above all things.\"\n\nI blinked away a tear as I had her turn and kneel, and while I attached the choker I remembered I was doing this for us, so I could be the partner she deserved. I doubted I'd ever truly be that person, but a lifetime spent trying didn't seem like a waste.\n\n***\n\nWe arrived at the church fifteen minutes before the service was scheduled to start. Aly looked beautiful, conservative and proper, and knowing this gorgeous creature would surrender herself to me as soon as I got her alone was the most delicious feeling. It was almost enough to quell the anxiety roiling around in my stomach.\n\nAly pulled into a space and put her Mini in park. \"You ready?\"\n\nI took a deep breath. \"No. But let's do it anyway.\" I got out of the car and she met me around front, holding out her hand. I took it and made my way to the front of the church.\n\nThey were getting married at Christa's church, and I was very glad that it wasn't the one in which I'd grown up. We walked into the building and were handed a program by a pretty young woman in a red dress. I didn't recognize her, so I scanned the entryway for people I did.\n\nDespite the expanse of the room, it didn't take long for me to find the first of my family, my sisters Esther and Martha, chatting together. Martha was noticeably pregnant, something I hadn't known. A little girl, maybe three years old, was holding Esther's hand. My niece, Ellie, whom I'd never met. Mom had barely deigned to call and inform me of her birth.\n\nIt had given her the opportunity to scold and shame me for my unnaturalness, and to convey that if I'd just repent I could have a home and family like Esther. It hadn't been a pleasant conversation, but I'd been so low at the time I'd put up with it just for some semblance of contact with my family. Things were different now.\n\nEsther's face widened in shock as her eyes fell across me. Martha turned and covered her mouth with her hand. I didn't look away. The whole point of being here was to stand tall, so no slinking off.\n\n\"Sisters?\" Aly's voice hummed with resolve.\n\n\"Yep. You ready?\"\n\nAly's hand tightened in mine, and I walked forward. Esther's face hardened from shock to cold, emotionless stone that was almost frightening.\n\n\"What are you doing here?\"\n\n\"I came to watch our brother get married. You?\"\n\nI failed to keep the sarcastic contempt out of my voice, and Aly's hand gave me a little squeeze.\n\n\"Esther, Martha, this is my girlfriend, Aly. Aly, these are my sisters.\"\n\nAly said 'hello,' wearing a friendly smile. Martha managed a weak grin, but Esther's look couldn't be described any way other than ugly.\n\n\"Mommy, who's that?\" Ellie tugged on her mother's dress.\n\n\"No one, honey.\"\n\nOh, no. No way she was getting away with that. I crouched down. \"I'm your mommy's sister, your Aunt Ruth.\" I wasn't going to push anything, but I was done hiding from my family.\n\nEsther scowled at me, but I met her gaze levelly. She took her daughter's hand and walked away.\n\n\"Nice to meet you, Aly.\" Martha smiled again, this time at me as well, and followed quickly after our sister.\n\nI looked down at Aly, who heaved a sigh and shook her head.\n\nI grinned at her. \"See what I mean?\"\n\n\"Martha seems nice.\"\n\nI gave a wry smile and looked down the hall after my sisters. \"Yeah, she's a good kid, but not real strong, opinion-wise. She kind of just does what she's told, wants everyone to get along, that sort of thing.\"\n\n\"Yeah. Let's go in and sit down.\"\n\nMy head was on a swivel as we walked, looking for my mom or dad, but Aly just slipped her arm in mine, which calmed me instantly. We made our way to the quadruple doors that lead into the sanctuary, where we were met by a smiling young man in a tux.\n\n\"Bride or Groom?\"\n\n\"Groom.\"\n\n\"This way.\" We followed him inside, and I watched his eyes flick down to our interlaced arms, but he kept smiling. \"So how do you know Gabe?\"\n\n\"I'm his sister, Ruth, but my friends call me Taylor.\"\n\nHis eyes went wide. \"The one from California! The ... um ...\"\n\n\"The lesbian?\"\n\nHe grinned sheepishly. \"Sorry. I'm Rich, Christa's brother.\"\n\nI shook his hand. \"It's nice to meet you. This is my girlfriend, Aly.\"\n\nThey said hi, and he turned back to me. \"Do you want to sit down closer to your family?\"\n\nI chuckled. \"That's okay. They'll probably have a conniption when they see I'm here.\"\n\nRich grimaced. \"Oh, yeah. Sorry. We're just glad Gabe isn't as uptight as the rest of his family. I mean, um, sorry.\" He was blushing furiously at his possible faux-pas,\n\n\"It's okay. We'll just sit here. Thanks, Rich.\"\n\nHe smiled and nodded, hustling back up the aisle to continue his duties.\n\nWe sat down and Aly put her hand in mine. \"That was interesting.\"\n\n\"Well, my sister didn't order me off the church grounds, so it's going better than I expected.\"\n\n\"Still nervous about seeing your parents, though, huh?\"\n\n\"Oh, yeah. My biggest fear is them seeing me and losing their shit while they're being seated.\"\n\n\"I doubt that'll happen. Do you really think your sister hasn't already told them you're here?\"\n\n\"Good point.\"\n\nThe sanctuary gradually filled, and my sisters filed past with their husbands without a word. About five minutes past the half hour the canned music that had been playing faded and a woman in a conservative black dress walked onto the stage and sat by a huge concert style harp. She began to play, the doors opened, and I saw my parents for the first time in four years.\n\nMy mother was on Rich's arm, and my father followed solemnly behind. My stomach was churning, and my hand tightened in Aly's, drawing strength from the connection. Without her I wasn't sure I'd have kept my composure.\n\nAs they neared, it was obvious that Aly had been correct. There was no surprise evident when their sweeping gaze landed on me. My mother's eyes lingered on me for only a second before forcefully pulling away, but she kept the radiant smile she'd plastered on in place. My father wasn't nearly as subtle, his pointed disapproval clearly evident in his hard gaze. .\n\nIn childhood, that look would have withered me in place. It was exactly the way he'd look at you before ordering you to fetch the paddle. But I wasn't ten anymore, and I didn't let myself drop my eyes. There was nothing wrong with me being here, regardless of his attitude.\n\nOnce he passed I let go of the breath I was holding. I didn't recognize the first two groomsmen, but my oldest brother Michael was the best man, and I got a second dose of bile from him as he lead the maid of honor down to the front, although it didn't carry anything like the weight of my father's disapproval, of course.\n\nThe doors closed, and the minister walked out with my brother. The congregation stood as the music changed smoothly from Pachelbel's Canon in D to Wagner's traditional Wedding March.\n\nGabriel's eyes found mine, and he jutted his chin in greeting, a small smile appearing on his face. I grinned back as the doors opened, and his attention was justifiably pulled away.\n\nI turned to look at my new sister-in-law for the first time. She was round faced, with dark hair standing out against her white gown and veil. Without her makeup and hair done, I doubt she'd be the prettiest girl I'd ever seen, but her face was alive with happiness and personality, and somehow I knew Gabe had made a very good choice in his partner, which knowing him was not surprising at all.\n\nAs it was, she looked beautiful, her arm linked with a smiling, older, tuxedoed man whom she definitely favored. For a moment my heart panged with jealousy. I didn't begrudge her this moment with her father, of course, but it struck me deeply that that would never happen for me. My dad wouldn't walk me down the aisle, or even help me get ready for my wedding, like he'd just done for Gabe.\n\nI looked back at my brother, who was beaming down the aisle as his bride began to walk towards him. He looked radiantly happy. We sat back down as Christa's father raised her veil, kissed her cheek and placed her hand in that of her soon-to-be husband.\n\nThey turned toward the minister, who began to speak. Aly's hand slipped into mine and I looked down at her. She was smiling as a tear formed in her eye. She gave me a warm smile, her hand tightening in mine, and turned back toward the front. Gabe and Christa began speaking their promises to each other, and I could feel Aly next to me like a hearth, warm and homey.\n\nWhen I'd been dating and living with Gillian I'd just assumed we'd be together forever. After she left, I assumed the opposite, that no one would ever want me. I was a worthless, evil abomination against nature after all. Just ask my parents.\n\nMaybe that's why I'd been so hurt. I wanted to spend my life with someone. I needed a person to come home to, or to come home to me. And damn it, but I wanted that person to be Aly. I imagined her in a white dress, me in a white suit or tuxedo, standing in front of each other in the California sunshine.\n\nA single tear rolled down my cheek, and Aly reached up and brushed it away.\n\n\"I knew you were a crier.\"\n\nI chuckled and focused back on the ceremony, holding my baby's hand just a little tighter.\n\nWe made it out of the church without any drama, as my family had remained at the front to engage in the meticulous photographic torture that follows weddings. We had several hours to kill, so I took Aly to Delsa's for some ice cream.\n\n\"Did you come here all the time as a kid?\"\n\nI laughed and shook my head. \"I've been here twice, both as a treat from a parent of one of the other girls on my swim teams. Everybody talks about it, though, and I remember it being good. Very occasionally we would get a half-gallon of ice cream from the store, which does not go far with five kids. But that was it.\" I took another bite of my hot fudge sundae. \"Mostly what I remember about this town is anxiety. Trying to pretend I wasn't poor, or gay, basically that I was remotely normal. There was a lot of hiding here.\"\n\n\"You don't have to hide anymore, though, sweetheart.\" She took my hand and brought it up to her mouth and kissed it. I did her one better by leaning forward and pressing my lips to hers. She moaned slightly into my mouth, her body relaxing the way it always did when I kissed her. It was the sexiest thing on earth, and I was so stupidly lucky to be able to do it.\n\nThe clock ticked past four-thirty and we needed to start heading back towards the reception hall, where festivities were starting at five. After arriving we headed inside, joining a bunch of other people, some of whom were familiar, but most I'd never seen before.\n\nNo one seemed to recognize me, though, which I wasn't surprised about. We headed into the room, where a table of red and pink hearts held the names of the guests and their table assignments. I found ours, which said table three. That was an awfully low number, and sure enough it was right near the head table. No one else was there yet, even though most other tables were beginning to fill up quickly. My heart was starting to beat fast again, as I knew my parents would be arriving shortly. Aly took my hand and smiled at me just as murmur ran through the crowd.\n\nI looked at the main entrance and sure enough, my parents came through the door with my sisters and brothers-in-law, along with several others I didn't know. I recognized Rich, who was holding the hand of a pretty young blonde in a pink dress as he made his way toward us, alongside a middle aged couple I recognized from the ceremony as Christa's parents.\n\n\"Hey, Ruth, let me introduce my parents, Mark and Darcy Devries. Mom, dad, this is Gabe's sister Ruth, from L.A., and her girlfriend, um...\"\n\nI stood and shook their hands, introducing Aly. They sat down next to us as Rich introduced his girlfriend, Hannah. An older couple joined us, who turned out to be Christa's grandparents. I was a little taken aback to be seated so familiarly with Christa's family.\n\n\"Are you okay, Ruth?\" Darcy looked directly at me, her face kind.\n\n\"I'm sorry, I'm just ... wouldn't you rather have some of your family sitting here?\"\n\nShe shook her head. \"When Gabe told me about the situation I asked him to put you here. You're family, and you should be here, in a place of honor. Not hidden away back at table sixteen.\"\n\n\"You're not going to win any points with your new in-laws like that.\"\n\nChrista's father snorted in derision. \"I've given up with those people. Sorry.\" He added the last word with a sheepish grin, and I waved a dismissive hand.\n\n\"It's fine, trust me.\"\n\nDarcy leaned forward. \"Don't get us wrong. We love Gabe, and he's devoted to our daughter, but your parents don't think much of us.\"\n\n\"Then I believe,\" I raised my water glass in salute, \"that I am in good company.\"\n\nWe completed our little toast just as the MC came over the speaker and began to introduce the bridal party. Dinner was served afterwards, baked chicken, mashed potatoes and green beans. Simple, but really good. The company was excellent, but everything would have been a lot better without the murmuring and pointed stares from my own family's table nearby.\n\nThe volume in the room began to increase as people finished dinner, and the frequency with which people began the annoying habit of clinking their silverware on their glasses to get the couple to kiss increased.\n\nEventually the newlyweds were called to the floor for their first dance, and Aly's hand slipped into mine as they began to sway to Elvis singing 'Unchained Melody'. I'd always been what Aly would likely call 'a little surly' at weddings in the past, but it felt different this time. This time I was with someone I loved with all my heart, and who felt the same way about me, so there was no jealousy based annoyance when I saw the radiant happiness in Gabe's face as he stared down into the eyes of his best friend and partner in life. I didn't have to be jealous. I had one of those, too, and I felt exactly the same way he did when I held my baby. A tear formed in my eye as I watched them, and I held Aly's hand tighter.",
        "We went through all of the traditional numbers, even a mother/son dance. It was, I think, the first time I'd ever seen my mom dance. There'd been no dancing at Michael's or Esther's weddings, of course. Eventually the emcee opened the floor for everyone. I glanced over at my father, who was looking on with disapproval. He didn't hold with dancing, as it made people happy. He probably had some other reason couched in scripture to explain why it was of the devil, but I'm pretty sure I knew better. In fact...\n\n\"Hey, baby.\" I stood up and held out my hand to Aly. \"Come dance with me.\" My little girlfriend beamed up at me as she stood, linking her arms in mine as we made our way toward the rapidly filling floor. My arms moved around her waist as we began to sway to the rhythm, and the world seemed to fall away for a few wonderful minutes. That is, until I felt a hand slip under my elbow and pull me determinedly off the floor.\n\n\"I have tolerated your presence thus far, young lady, but my patience has limits.\" The coldness of my father's voice caused an initial, bone-deep fear. Even after so many years, I could gauge his level of anger by the simple tone of his voice, and I struggled to recall a time when it had been this icy.\n\nHe turned me around, eyes blazing with frozen fire. \"You are finished embarrassing this family with your ... unnaturalness ... at your brother's wedding. Now leave, and take your harlot with you.\"\n\nHearing him call Aly that horrible name finally snapped me out of my stupor, and I pulled my arm away from him and stepped back. My father was over six feet tall, and weighed a solid two-forty, very little of which had gone to fat as he'd aged. He'd been a multi-sport star in high school, and seeing that much man seething in cold fury would have been deeply intimidating, even if he weren't my father.\n\nBut I hadn't come all this way to let myself be pushed around. \"Don't you dare call her that.\" There was still a quaver in my voice that even I could hear, and he didn't miss it.\n\n\"I'll call her what she is, Ruth Taylor. And if you want to thumb your nose at God you will not do it here. Get it through your head, young lady, until you come crawling on your knees in repentance you are not wanted or welcome.\"\n\n\"Yes she is, dad.\" My father rounded on Gabe, who was suddenly standing to my right. \"I asked her to be here, and she is welcome.\"\n\n\"Be quiet, Gabriel. Don't you dare start coddling sin like this, not on your first day as the master of your family.\" He turned back to me, an ugly, derisive sneer. \"You have to see her for what she is!\"\n\nI summoned every bit of courage I had and stepped forward. \"And what's that, Paul?\"\n\nHe bristled at my use of his first name. \"An abomination! An evil, shameless demon given over completely to sin.\" He took a step forward. \"You're nothing more than a whore of Satan, Ruth, vile and disgusting in God's...\"\n\nSMACK!!!\n\nMy spirit had been starting to shrink under the barrage when it happened. The small shape to my left stepped between me and my father and smacked him, hard and open palmed across the cheek. His face snapped to his right, mouth hanging open in shock.\n\nHis hand went to the red mark on his skin as he straightened up, but Aly didn't give an inch. Her voice was frozen Helium. \"Don't you EVER talk about the woman I love that way again.\"\n\nMy father was dumbfounded. No one had spoken to him like that in decades, likely, and he didn't know how to respond. People, especially women, did not stand up to him. Never in a million years would my mother have done so. He towered over my diminutive girlfriend, nearly a foot taller and more than a hundred pounds to the good, but for all my father's many faults, violence was not one of them. As far as I knew he'd never struck my mother, or any other woman, in his life, but I wasn't sure how long his control would prevail in this case.\n\nAly stared at him, fire raging in her eyes. \"Your daughter is amazing. She's talented and brave. She saves lives for a living. She saved my sister's life. What the hell have you ever done? And she sees beauty in everything. All you can see is hate. Anyone with half a brain, or half a heart would be ecstatic to have a daughter like her. She deserves so much better than you. Than either of you.\" Aly sent a pointed glance back to my mother, who was standing nearby.\n\nShe looked around at the small crowd of people that had gathered. Aly pointed at me. \"She is the most wonderful, incredible person I have ever met. And I love her, and she loves me, and That. Is. Not. Wrong! And I have no time for anyone who would rather celebrate hate than love. And I have something to tell you, Mr. Knox. I am going to spend my life making sure that your daughter knows how incredible she is. I am going to surround her with a family that loves her, like you were supposed to do. Shame on you.\"\n\nMy father's face was red, and he started to shake with anger. He moved toward Aly, and I stepped between them. No one was going to hurt my baby. I wouldn't allow it. Gabe moved forward too, and my mother even took her husband's elbow from behind.\n\n\"Paul, let's just go back to our table. Come on.\"\n\nMy father looked around at the people watching our little scene, and I watched him force his face into a mask of composure, standing taller and straightening his shirt. His eyes moved from Aly to me, and we held each other's gaze for a moment.\n\nThere was anger in his eyes, but it was impotent, and it came crashing down on me that this man had no say in my choices, and no more control over my emotions than what I gave him. And I wasn't going to be giving him any more.\n\nAs he turned away I slipped an arm around Aly. \"Hey, you okay?\"\n\nShe was still shaking, but she still reached up and took my hand, looking over her shoulder at me and nodding. \"Yeah.\" She took a deep breath. \"You?\"\n\n\"Yeah, I think so.\"\n\nGabe was standing nearby, and Christa and her parents, but the only one I cared about was holding my hand.\n\nAly kissed my arm. \"C'mon. I wasn't done dancing with you yet.\"\n\n\"Yes ma'am.\" We made our way back to the floor, where Aly wrapped her arms around my neck and leaned her head on my shoulder. I held her close to me as we swayed to the music. My cheek rested in the softness of her hair, and I let the warmth of her love fill me. It resonated inside my body, my own feelings amplifying it, and there on that dance floor, for the first time I truly surrendered. This was the woman I loved, the one I was going to spend the rest of my life with. And I knew, with every fiber of my soul, that Aly wanted that, too. My Aly. Forever.\n\nThere were joyful tears rolling down my cheeks by the time the music stopped for a second, and Aly looked up with a misty expression of her own.\n\n\"You're crying?\"\n\nI smiled at her. \"I'm fine. Can we sit down for a minute?\" Aly nodded and I led her off the floor as the DJ picked up the pace. We watched as the bridesmaids and Christa danced in a circle with a few of the younger girls as some little boys chased each other around the tables before their parents yelled at them. Mark and Darcy were dancing, Mark spinning and dipping his wife as she laughed in his arms. Then Gabe and Christa were dancing again, and I watched simple joy wash over them as they held each other close.\n\nWe stayed through the traditional stuff. Rich caught his sister's garter, and Aly went up to try to get the bouquet, but that was snagged by the maid of honor.\n\nShe shrugged as she walked back to me and sat in my lap.\n\n\"Good try, baby.\"\n\nAly's eyes glinted with mischief. \"Were you nervous about me catching it?\"\n\n\"No. I don't need any signs to tell me I want to marry you.\"\n\nThe effect on Aly's face was instantaneous, her eyes watering as a smile stretched across her face, and I pulled her in for a kiss.\n\nEventually the bride and groom disappeared to change out of their wedding clothes, and we saw them off with the appropriate fanfare. My parents completely ignored my existence, as did my older sister and brother and their families. Mom and dad disappeared almost immediately after Gabe and Christa's exit. It hadn't been anything like the perfect reunion, but I knew I'd done what I needed to do.\n\nAly and I gathered up our coats and bid a fond farewell to Mark and Darcy and their family. When I turned around I was surprised to see Martha standing shyly nearby with a young man I'd only seen in pictures until today. He had a kind face, not overly handsome but personable and earnest.\n\n\"Ruthie?\"\n\n\"Hey, sis.\"\n\n\"Hi. Um, this is my husband, Derrick. Derrick, this is my sister Ruth, and her girlfriend Aly.\"\n\nHe held out his hand. \"It's nice to finally meet you, Ruth.\"\n\nI shook it, and Aly did as well.\n\nI turned back to Martha, who was biting her lip, her eyes downcast. \"I'm sorry I didn't invite you to our wedding, Ruthie. Daddy was paying for it and he, um, I'm sorry.\"\n\n\"Hey,\" I put my hand on her shoulder, \"hey, it's okay, I understand. You guys are always welcome for a visit in L.A., you know. I miss you.\" I choked over the last words.\n\n\"I miss you, too, Ruthie.\" With that my sister broke into a sob and we embraced, a tear slipping free from my eye.\n\nWhen we separated I placed a hand on her pregnant belly. \"And I'm looking forward to meeting you, too.\" That made my sister laugh, and after another goodbye Aly and I slipped out into the cool night air.\n\nI drove back to the hotel, and we walked through the lobby with our arm around each other, making our way back to our room. Once inside I pushed Aly up against the wall, kissing her hungrily as she slid her leg up and down over my thigh.\n\nI unzipped her skirt and pulled it down before raising her arms over her head and peeling off hertop. Her bra went next followed by her panties and shoes until she was wearing nothing but a garter belt and thigh high stockings. I only stopped kissing her when absolutely necessary before carrying her back to our bed.\n\nI laid her down, whispering in her ear that she had been wonderful today, before stepping back and beginning to disrobe myself. I didn't rush, enjoying my baby's eyes go wide as I revealed my body to her.\n\nOnce nude I climbed onto the mattress, pushing my Baby back into the pillows, covering her with my body and whispering into her ear. \"You were amazing today, baby. And I'm going to give you your reward.\"\n\nI pressed my lips to her neck as she whispered, \"Thank you, My Lady.\" I nuzzled around the choker she wore, the one marking her as mine. I moved further down, nursing on one of her lovely round breasts for a few moments. Aly was sighing and moaning at my attentions, but I knew my baby, and I knew she wouldn't let herself really enjoy herself until she'd been given an opportunity to service me, so I got up on my knees, turning and straddling her face and lowering my dripping sex to her mouth.\n\nShe took me in hungrily as I reached down to play with her lovely, wet pussy. She made the cutest little whimpering sounds as I toyed with her, the vibrations from which resonated through my sex as she ate me with a fervor. I rocked my hips against her mouth as her talented tongue took me closer and closer to the edge, and then drove me over with practiced perfection.\n\nI rode her face as my orgasm shook me, letting her drink in my release, before sliding down her body and kissing her deeply and looking into her eyes. \"That was wonderful, baby. Now I'm going to make you feel so good. Because I love you. I love you more than I can say.\" I stroked her hair. \"My forever.\"\n\nWith that Aly's wide eyes filled with emotion, and I began my work. I worshipped every inch of her body, peeling her stockings off one at a time, kissing my way down each leg. When I finally settled on her sex Aly's whole body was trembling, and I only held her in suspense for a few minutes before I whispered my permission for her to come.\n\nShe exploded into my mouth, her body jerking and jumping as her insides seized and relaxed in ecstasy. I kept my ministrations going, pushing her back into her bliss over and over again, until somehow I instinctively knew she was done and kissed my way back up her lovely body.\n\nI pulled her to me, holding her close in a tangle of arms and legs. My fingers on one hand ran through her hair while the nails one the other softly traced over her back. I reveled in the happy little sounds she was making.\n\n\"Did you enjoy that, baby?\"\n\n\"Oh, yes, My Lady. Thank you.\"\n\nI pressed my lips to her forehead, earning a little coo. \"You are very welcome baby.\" I pulled the covers around us and we cuddled together, my baby sighing before speaking.\n\n\"I wish we didn't have to go home tomorrow.\"\n\n\"Well, do you have to go back to school on Monday?\"\n\nAly looked at me with those soft brown eyes and shook her head 'no.'\n\nI grinned at her and reached over and grabbed the phone, and punched zero.\n\n\"Front desk, Ezra speaking.\"\n\n\"Hi, this is Aly Winterberg in room 106.\" Aly's eyes went wide as I said it, and I just smirked at her and continued to talk. \"We were just wondering if it would be possible to extend our stay for a night?\"\n\n\"Let me see.\" I heard tapping at a computer. \"Yes, ma'am for one more night only, I'm afraid, but we can manage that.\"\n\n\"Excellent. Put us down for that.\"\n\n\"Will do, enjoy your night ma'am.\"\n\nI hung up the phone. \"There. Now we can relax.\"\n\nAly snuggled in close. \"So, what are we going to do tomorrow?\"\n\n\"I've got some ideas.\" I reached up and turned off the light and pulled the woman I was going to marry close to me. Now, I just had to figure out how to ask her. As sleep closed in a vision formed in my mind. I needed to get back into my studio.\n\n- Aly -\n\nI knew I was exhausted, but with my body still humming from what Taylor had just done to me, and my mind spinning from the events of the day, I found sleep hard to come by. The crazy thing was that with everything else that had happened, there was one sentence that stuck out in my head.\n\nShe said she wanted to marry me. I mean, she didn't exactly ask, but she'd said it, didn't she? Was I ready for that? I was hoping I'd move in at the end of the school year, that sounded more like the thing to do. I pulled in a deep breath, taking in her scent and feeling her strong arms around me. This was really nice. I could live with this for a very long time.\n\nI loved her. I've been telling myself how completely I was devoted to her. I guess this was the business end of it, huh? I opened my eyes and looked at My Lady's sleeping face. She was so beautiful. Could I spend a lifetime loving only her? Hell, yes, I could. I could absolutely do that. Peace settled over me like a blanket, and, there in Taylor's arms, I slept.\n\nThe next day was wonderful. We had a nice long lie in before stumbling down to the breakfast provided by the hotel, and then we just went driving. She took me up into the mountains.\n\n\"I'll have to bring you back up here in the summer some time. It's even more beautiful.\"\n\n\"It's wonderful just like it is.\" There was indeed a lot of snow on the mountains, but it was breathtaking.\n\n\"There're a lot of more amazing places, but I'm not trying them in February with your fake SUV. And without chains we can only drive on the plowed roads, anyway.\"\n\n\"Chains?\"\n\nTaylor looked at me funny. \"Yeah, y'know, chains for your tires. To give you grip in the snow.\" She chuckled at my dumbfounded expression.\n\n\"You put chains on your tires?\"\n\n\"Only when there's snow on the roads.\"\n\n\"Mountain people are weird.\"\n\nTaylor laughed. \"I'm not mountain people. I'm city folk. Hope you never run into real mountain people.\"\n\n\"Why?\"\n\n\"You seen 'Cabin in the Woods'?\"\n\nMy mouth hung open for a moment.\n\n\"Yeah, just hope we don't break down out here. It wouldn't go well.\"\n\nI stared at her until her mouth cracked into the barest hint of a smile. I slapped her on the shoulder. \"Stop it, you're just trying to scare me.\"\n\nShe gave me a grin. \"Maybe a little.\"\n\nWe got back into Boise just before dark and headed to a local restaurant called Lock Stock &amp; Barrel.\n\n\"No fancified California food here. Just good, all-American carnivorism.\" Taylor had a gleam in her eye, and she was right. She ordered me a big steak and baked potato and I'll admit it was amazing. Afterwards we got some ice cream to take back to our hotel room, and we attempted to recover from our food comas in our hot tub.\n\nI set aside my empty tub of mint chocolate chip and hot fudge and leaned back against Taylor, luxuriating in both the warmth of the bubbling water and my lover's strong arms, giving off a contented sigh.\n\n\"Good day, baby?\"\n\n\"The best. I love just spending time with you.\"\n\nShe kissed my head. \"Me too, baby.\" As she held me her energy changed slightly, and I knew she had something she wanted to talk about.\n\nI pulled the back of her hand to my mouth and kissed it. \"Is there something on your mind, My Lady?\"\n\nTaylor laughed once. \"How do you always do that?\"\n\n\"Because I know you. I pay attention to how you're feeling. It's my job.\"\n\nShe hugged me close. \"I don't deserve you. But you're right. I've made a decision.\" I tensed up for a second, wondering if she was going to propose, but that wasn't it at all. \"I've decided that I'm going to take you parents up on their offer, and go back for my senior year.\"\n\nMy cheeks broke into a smile as I spun around in her arms. \"That's wonderful! I'm so proud of you.\"\n\nShe hugged me. \"Thanks, baby. I just have to figure out how to pay for it.\"\n\n\"But, my parents...\"\n\n\"I don't mean the tuition. I still have to pay rent and buy food and gas and stuff. I can work on weekends, but it'll be really tight.\"\n\nI bit my lip for a second before I decided to try. \"You could get a roommate.\"\n\nShe smirked at me. \"There's only one bed baby.\" Her tone told me she knew exactly what I was getting at.\n\n\"Might not be a problem for some.\" I ran a finger down her arm. \"In fact, I know someone who wouldn't mind sharing a bed at all.\"\n\nHer voice got playfully stern. \"Are you asking to move in with me, Aly?\"\n\nI tried to look innocent. \"See, I'm trying not to ask.\"\n\n\"You stinker.\" She pulled me close, nuzzling my neck for a moment and making me giggle. \"I've made another decision, baby.\"\n\n\"What's that, My Lady?\"\n\n\"After you finish with that school of yours, you're going to move into my apartment, so I can have you every night if I wish. I'm growing tired of sharing you, baby.\" Looking at them now on paper, the words seem almost harsh, but you weren't there. You didn't hear the emotion in My Lady's voice as she spoke, how it dropped to a gentle whisper as she finished. There was such a depth of feeling, of her longing to have me near, that it broke my heart.\n\nAnd I knew, in that moment, that I was home. Home is where you are safe and loved, wanted and cherished. It's the place that isn't quite complete if you aren't there. And, for me, that place was Taylor's arms. It may happen in our little apartment to start, or in the house I was going to design and build for us eventually. But in truth, home would always be Taylor's arms, her strong presence, her warm embrace.\n\nI looked over my shoulder at the woman I loved, who was smiling down with contented happiness, and a peace I don't think I'd ever seen in her face before. But it was beautiful. There was only one thing to say, really. Maybe two.\n\n\"Yes, My Lady.\" I put my hand on her cheek as a tear slipped free from her perfect blue eyes. \"I love you.\"\n\nEmotion washed across Taylor's face, and she kissed me, deep and long as I melted into her. We started in the tub before moving to the bed, making love deep into the night. We held hands as we drove home the next day. She talked about the pieces she was working on for her show in April, and I talked about my senior project and how I was progressing with building my model.",
        "We also talked a lot about the semantics of me moving in and taking over the bulk of the financial responsibilities while Taylor finished school. I'd expected her to be really touchy on that subject, but, even though I could tell it was taking effort, she remained pragmatic about the whole thing.\n\nWhat she didn't know was I knew exactly how much she made being a lifeguard, or at least I did before she'd cut back to part time. Thanks to Macie I now knew all city employees' salaries are public record, and all I had to do was go online and look it up, which I'd done without telling her when she was contemplating working fewer hours. Eventually I confessed that to her, along with the reality that the smallest starting salary I could expect was more than double what she had been making.\n\nThat was buoyed by the fact that somewhere in Nevada I got a call from Michelle from Urban Chic, asking me to come back for another interview. And the way she was talking I had a good idea that this one was going to end in a formal job offer.\n\n\"I'm going to need a few things before I move in, you know.\"\n\n\"You realize, baby, that even with your lofty new salary, you're still going to be making about two percent of what your mom and dad do, right?\"\n\n\"All the more reason to get it now before I have to give back daddy's credit card.\" I gave her my best 'cat that ate the canary' grin, which made her laugh, and exactly one week later we were together at IKEA looking for a dresser and a writing desk. I figured I'd go ahead and ease into this whole economy thing.\n\nI will say this, if you want to test the strength of your relationship, spend a day or two assembling IKEA furniture together. Then you'll know. I also found out that Taylor, despite the myriad ways she was brilliant, had minimal spatial relations skills, at least in the art of putting furniture together. I guess it came from always having carte blanche when she assembled her sculptures, but apparently they are two very different skill sets.\n\n\"No, sweetheart, that's on the wrong side. See, it has to go this way, like the picture.\"\n\n\"I hate these things. Why do they have to be so difficult?\"\n\n\"I'm sorry, My Lady.\" I cuddled up to her and wrapped my arms around her waist. \"But thank you for helping me, even if you stink at it.\"\n\n\"You're cruising for it, baby.\"\n\nI gave her a pouty face, which just made her laugh and kiss me.\n\n\"C'mon, let's finish.\"\n\nI nodded and we went back to it. I had to correct her several more times, but eventually we got everything together and in place. As soon as it was finished Taylor pulled me to her and ran a hand through my hair.\n\n\"You're going to pay for putting me through that, baby.\" The breathy tone of her voice sent shivers down my spine.\n\n\"I'm sorry, My Lady. I'll do anything to make it up to you.\"\n\n\"Yes you will. Clothes off, now.\"\n\nTen minutes later I was on my knees tied to the bed, wrists fixed to the headboard, bent forward and thighs spread so my sex and ass were totally exposed. Taylor ran her hands over my body, telling me how beautiful I was, how much she was going to enjoy me. I moaned into my gag as Taylor began playing with my hair. She wove a rope into it, and she gave it a little tug, making me gasp.\n\nWith every touch I slipped deeper into that perfect place where I belonged totally to her, and by the time the first strike from the flogger landed I was in ecstasy, glorying in the beautifully perfect sting.\n\nShe landed blow after soft blow, moving from my thighs to my butt to my pussy, and my lower half was humming when she stopped. She moved her hands over my skin, soothing it, as the evidence of my arousal ran down my leg. She hadn't released me to come, and I needed it so badly, but even without the gag I wouldn't have asked. My pleasure was My Lady's to give, and I knew she would at the perfect time.\n\nTaylor caressed my small clit directly for a moment, inflaming it more before she attached the clamp. Two more went on my breasts. Then she was kneeling behind me, pulling my head up with the rope for a moment before the Captain filled me from behind.\n\nIt was perfect, a balance of pleasure and pain, which in that state for me was just another kind of bliss. My eyes rolled up in my head as my body began to shake, Taylor moving in and out with deliberate strokes.\n\n\"Come for me baby.\"\n\nI was just at my breaking point when the command came, and I let go of my control, sinking as deeply as I could into that place. My body exploded in pleasure, and I couldn't tell when one orgasm started and the other stopped.\n\nOver the next two months I could feel a difference when Taylor dominated me. She was more confident, more demanding, more sure of herself, and that let me go deeper than I ever had before. She was less afraid to use me, but at the same time she was always taking care of me with a loving, practiced hand that made me feel so safe. And after we finished she was right there, gently bringing me up through my recovery. It was heaven.\n\nI spent more and more time in what I really felt was our apartment, and I watched Taylor blossom into the perfect Dom outside the bedroom as well. When we went out, she always picked the activity, and I didn't even look at menus anymore when we went to restaurants she'd chosen. Some of you may think that's weird, but it was so wonderful. And all I had to do was suggest something I wanted to try or somewhere I wanted to go, and that very often became our outing a few days later. But it was always her decision.\n\nShe also started laying out outfits for me to wear from time to time. She didn't pick my regular, daytime clothes, but when we went out, and a lot of the times when we stayed in, she often would lay something on the bed for me. I especially loved it when she would tell me my evening attire was on the bed, and there would be nothing there at all.\n\nAnd her increased confidence had another definite positive effect in the bedroom as well. We experimented with a lot of things, and we always had frank, equal discussions about them afterwards. I still had to work to get Taylor to admit to what she enjoyed most at times. She was always trying to increase my pleasure first.\n\nIf subspace were the ocean, before, whenever I'd been near Taylor I could sense it, but now being with her every day was like walking ankle deep along the shore, a constant reality that I belonged to her. So when we made love, it became easier and easier to find it, and I was sinking deeper and deeper each time.\n\nWe doubled with Sadie and Noah a few times, which always went well, and we were out together when they told us that Sadie had decided not to move back to Texas.\n\n\"But we're not staying here, either. We decided to go somewhere far away from both our families, and start a life just the two of us.\"\n\nI smiled and shook my head. \"Where?\"\n\nThey looked at each other for a moment before responding. \"Minnesota.\"\n\nI almost spit out soda through my nose. \"Seriously? Isn't it really cold there?\"\n\n\"U of M is a top ten school in Psychology, and they have a really happening foodie scene, and yeah, it's cold a lot, but that'll leave plenty of time for snuggling together.\"\n\nI smiled and shook my head at their lunacy, but it was happening everywhere. All the seniors were getting ready to go out into the world. I hadn't been wrong, my meeting with Michelle was also with Mr. Urbanczyk, and I had a job offer I immediately accepted. Unfortunately it was contingent on me finishing my degree, and I had too much pride to ease off at the end.\n\nI worked for days at our apartment on my project, and as March ended Taylor was needing to spend longer and longer hours at the warehouse preparing for her show. She refused to let me come out and see what she was working on, though, saying it was a surprise.\n\nEventually the moment arrived. The opening gala was on a Friday night. Taylor had worked herself to the bone the week prior, and unfortunately I hadn't been able to give her all the support I would have wanted to since my own project was due just a week later. She was a nervous wreck that Friday morning, though, and I made sure to take her into the shower and relax her fully.\n\nShe was in a much better state afterwards as she dressed.\n\n\"So, it starts at seven. Are you going to bring your parents?\"\n\nI nodded. \"Yeah. I'm headed over there this afternoon, and I'll meet you at the gala.\"\n\nTaylor nodded, fidgeting a little.\n\nI took her hands in mine. \"Sweetheart, it's going to be fine. They're going to love you. Promise.\" Taylor had said there would be numerous art critics there. Apparently no one missed a Beville Gallery opening if they could help it.\n\nTaylor would be spending the day getting the last of her pieces in place and making sure the lighting was what she wanted and stuff like that. I spent the day working on a paper for one of my courses, but concentrating proved to be next to impossible. I headed over to my parents house around two and took a bath in mom's soaker tub while Taffey played with the bubbles. She was technically my cat, but she was thirteen and I wasn't going to move her out of her home at that age. I wonder if Taylor would let me get a kitten. Probably, if I asked very nicely. I loved asking Taylor nicely for things.\n\nFor the gala I pulled out a little black dress, nothing too flashy. I wanted to be pretty, but not to pull any attention away from Taylor. It was her night. When I came downstairs mom was already there looking beautiful in dark blue and pearls, and my dad was cutting a nice figure in one of his better suits. Kelsey was on her phone at the table, wearing a cute lavender dress.\n\n\"Everybody ready?\"\n\nMy mom was wearing a little bit of a misty expression, which confused me. \"You look beautiful, honey.\"\n\n\"Yeah, sweetheart, you do. All grown up.\" My dad was looking odd, too. He put his hands on my shoulders. \"I'm so proud of you, my baby girl.\"\n\n\"Thanks, daddy.\" I smiled at them strangely. \"You guys okay?\"\n\nThey nodded and we headed out, with only Kelsey not acting strangely. Other than the fact she was here at all, that is. I'd figured she would beg off somehow, but she seemed almost eager to go. I guess they were all acting weird.\n\nWe made it to the gallery at five after seven, and the place was already busy. Adeline was outside taking invitations, stunning in a red dress with her long, blonde hair and perfect makeup done in movie-star style. I handed her the card Taylor had given me and she waved us all through.\n\nMy few other visits here had all been during the day, and the place, while still fancy, had never been fully decked out like it was now. The lighting was exquisite, and each of Taylor's pieces in the initial entryway just seemed to glow. I saw a copy of Pacifica on prominent display, and it was maybe fifty percent larger than the one at the fair had been. There were several people standing around it, and I heard an admiring murmur from them.\n\nA female server in a black bowtie and smart white button down shirt approached up with a tray of hors d'oeuvres, and I took one, remembering that I'd forgotten to eat dinner. I wonder if Taylor had eaten anything all day. Where was she, anyway?\"\n\nMy mom took me by the arm. \"This is quite something, sweetie.\"\n\n\"Yeah. And if it goes well she could get shows like this all over the city.\"\n\nI grabbed a glass of champagne from another passing tray before we moved into the next room. I managied to take a sip before gasping at the centerpiece. There in perfect soft light was my face, only somehow far more beautiful and ephemeral than the real one. It was set off the ground, hung by wires, floating freely an unseen breeze. The chin was turned up slightly, eyes closed and lips slightly parted. I, it, whatever, was wearing a long hood that rippled behind, and it looked like the metal could simply take to the sky at any time.\n\n\"It is quite a likeness.\"\n\nSuddenly Mr. Beville was standing beside me, looking at the piece.\n\n\"Oh my god, Aly. That's you!\" Kelsey said it with the typical lack of tact ubiquitous in teenagers. But she wasn't wrong. And my parents were dumbfounded. I just stared open mouthed at it, remembering the sketch I'd seen in Taylor's notebook so many months ago.\n\nMr. Beville was wearing a knowing smile. \"It is a magnificent piece. This is the kind of work I knew she could do. Thanks to you, I think.\"\n\nI shook my head, a tear forming in my eye. I wiped it away and introduced my family to Mr. Beville, who greeted them warmly. \"Your daughter has had quite an influence on our Miss Knox, sir.\"\n\nMy dad nodded. \"They seem happy. But I always thought it took pain to create great art.\"\n\nMr. Beville chuckled. \"No, sir. It takes passion. Excuse me.\" He moved away, and my parents looked at me as my cheeks went scarlet. Luckily just then I heard my name from across the room, and Jen and Vicky entered waving.\n\nVicky ran over, arms outstretched. She took my hands and kissed me on each cheek. In the perfect lighting, with her hair and make-up done to full effect, Vicky was breathtaking, turning heads as she moved through the room. Jen was right behind her wearing a white and blue suit, and Vicky fit right into her side like they were made for each other. Which I guess they were. It made me want my other half.\n\nJen looked around. \"Aly, where's Taylor?\"\n\nI shrugged. \"No idea, I haven't seen her. I mean, she's got to be around here somewhere, doesn't she?\"\n\nJen nodded, and they both noticed the sculpture, their exclamations making me blush again. I left them talking to my parents, who'd they'd met at my birthday dinner. I decided I was going to go looking for Taylor, so I headed back into the next room. There was a crowd of people standing along the far wall, facing something that I couldn't see between them. Sometimes being short is really annoying.\n\nI went forward, trying to peek around the whispering bodies. I could make out a couple of metal figures, but I wasn't able to see what they were doing. They were life size, or close to it, at least. Something about it held my attention, though, and after a moment several people moved away and I was able to sneak to the front.\n\nIt was indeed two figures, the one on the left was definitely female, wearing a dress that seemed to flow in the wind around her. Her face wasn't in full relief, so whatever she was thinking and feeling had to be determined from her body language. I thought she looked sad. Her face was downcast, with one hand clasped to her chest just above her breasts, and the other thrown behind her, palm pointing away, directly at the other figure, from whom she was facing away.\n\nThe second figure was more androgynous, but his or her feelings were obvious. Down on one knee, arms extended, holding a small box which everyone knew contained a ring. It was so sad. The girl was saying no, that she couldn't, and she was walking away.\n\n\"What do you think?\"\n\nTwo strong arms wrapped around my middle as Taylor's lovely alto filled my ears. I leaned back against her. \"It makes me want to cry.\" A tear formed in my eye.\n\n\"Yeah. I think it's one of our worst fears, to offer ourselves completely and be rejected. To be told we are not enough, not worthy.\" She pulled me tight to her. \"But if we never offer, we can't be accepted.\"\n\nShe stepped to my side, reaching toward the sculpture and opening the small metal box the kneeling figure was holding. She put her hand inside and pulled something out.\n\n\"A small thing can mean everything.\" Taylor turned towards me and there was a gravity in her bearing that made me tremble. She took my hands. \"Aly, when you found me I was broken. I didn't think I could ever love again, and I knew for a fact no one would ever love me. I hurt so much I'd become numb to it. Aly, you made me feel again, love again, to see the world as a beautiful place, because you are in it. And the only thing I want is to walk through this life by your side.\" Her voice cracked with emotion.\n\nI was dimly aware that my family and Jen and Vicky were there, and that a crowd had gathered around us. But I didn't care, all I could see was her, all I could hear was her. I was crying, and I needed her to hold me, but I knew she had something to do first. She lifted up what she had taken from the sculpture, a small, black velvet clamshell box.\n\nShe held it tight and pressed her forehead to mine. Several people gasped. My mother was crying.\n\n\"Baby, be my wife. Stay with me forever.\" She kissed my hand and went to one knee, tears streaming down her face. She opened the box, and the diamond inside glittered in the soft light. \"Alyssa WInterberg, will you marry me?\"\n\nIn an instant our relationship passed in front of my eyes. The first time I'd seen her standing in her tower, her carrying Kelsey from the water. Her kissing me in that parking lot, riding on her motorcycle, the first time we made love. They crashed through my consciousness, one after the other, and I knew she was supposed to be mine, and I was supposed to be hers. The universe gives us so few perfect gifts, but this was mine, ours, and the answer was yes.\n\n\"Yes, yes, yes.\" As I said it a sound came from the sculpture, like a clasp releasing, and the metalwork girl rotated on her foot, spinning so that she was now facing the kneeling figure, and the whole tenor of the piece changed. Now she was clutching her breast in happiness, her hand thrown back in joy as she looked down at her lover. She was saying yes, just like me.\n\nI repeated it a bunch of times, muffled only by the shouts and applause from around us and me burying my face in Taylor's jacket. She pulled me close, standing as we clung to one another.\n\nTaylor laughed through her tears. \"Here, baby, you have to put this on.\"\n\nI giggled. \"Oh, sorry.\" I held out my left hand and Taylor slipped the ring into place. It was a simple round cut solitaire, and I loved it, and I loved her. My family rushed forward and basically the rest of the night was a blur. The next thing I really remember was that night, back at our apartment. Taylor had fallen asleep as soon as her head hit the pillow, exhausted after her very long week. I just snuggled in next to her, looking back and forth from my new piece of jewelry to the love of my life. I couldn't believe it. I was getting married, starting a real job. I was an adult, almost, anyway. But what really struck me was that I was home, forever.\n\n***\n\nWe got married on the beach that August, just in time for a week-long honeymoon before Taylor started school. It wasn't long to plan a wedding, but we wanted to keep it small, just family and a few close friends. Kelsey was my maid of honor, of course, but Sadie and Evelyn stood up with me as well, just before heading off to their respective graduate schools. Sadie was tremendously excited, because right after the wedding she and Noah would be moving to Minnesota and sharing an apartment for the first time. They weren't engaged yet, but I doubted it'd take that long. We promised to compare notes often.\n\nI'd been living with Taylor since I graduated, obviously, and it was amazing. Taylor seemed transformed. It helped that her collection at Beville's had gotten rave reviews, and that other galleries around the city were already requesting showings. But there was more to it than that. She was confident and optimistic about the future in a way that was wonderful to see.\n\nOn our big day I wore a thin, flowy, Grecian style white gown, and Taylor wore a white tux with a swirling pastel green and blue tie. Jen was her best woman, and Gabe, Christa, Martha and Derrick came down for the wedding.\n\nThe big surprise I had in store for Taylor during the ceremony was when I promised to love, honor, and obey. I'm not sure if anyone else even noticed, but Taylor sure did, and I couldn't keep the grin off my face when I said it. Nor did anyone mention the white choker and heart shaped lock, clearly visible with my hair up as it was.",
        "Vicky filled in for Taylor's mother admirably, and we still have the mixed sand glass thingy on our mantle. Most of that day is a blur, but I remember being introduced for the first time as Taylor and Aly Knox. I still get a happy little flutter whenever I see my name written like that.\n\nThe first year was rough. Taylor was trying to finish school while her career was taking off. She got it done, though, and I think she learned that it was okay to lean on me when she needed to. She's pretty famous now, having done shows at some of the biggest galleries in LA and has won several important awards. She's even worked on a few indie movie sets. We moved into a place of our own after she graduated, but we're waiting to buy until I get my license and can design our home.\n\nI'm progressing, studying for my architect licensure exams, learning on the job and doing a lot of grunt work as I pay my proverbial dues. And that's where I found myself four years later, sitting at my desk one Friday morning, putting together a floor plan for the new corporate headquarters of some law firm, when Michelle appeared over my shoulder.\n\n\"Hey, it's on, in the conference room.\"\n\nI checked the clock. Nine-fifteen, crap, I'd almost missed it.\n\nI hurried behind her, entering to find the whole of my team, along with Mr. Urbanczyk watching the flat screen, where a pretty reporter was talking into a microphone.\n\n\"Good morning, LA, we are here today on the North Side, looking up at what has quickly become a landmark for Angelinos. She's known by a few names, but the one that seems to be sticking is 'The Lady of L.A.'\" The camera panned up to show the fifty foot version of Pacifica that Taylor had erected on one of my dad's new properties along the PCH.\n\n\"She's become a favorite, and we are lucky enough to be joined by the artist responsible, Taylor Knox.\" My wife appeared on camera to applause and whistles from my team. I just smiled. Her hair was mussed. I'd spent almost half an hour trying to get it to behave this morning before I left, and she still managed to get it mussed before her interview. God, I love her.\n\n\"Good morning, so, what is it like seeing one of your creations causing so much stir around town?\"\n\nTaylor's cheeks colored a little before she answered. \"It's something else really. I remembered when I first sketched this out. The first one I made was only twenty inches high or so.\" She looked up. \"But this is how I always envisioned it, so it's something to see.\"\n\n\"Now a lot of people have commented on her face, lovingly done, they say. I understand it's of someone close to you?\"\n\nHer voice had a leading edge to it, and Taylor blushed deeper.\n\n\"Yeah, it's my wife's face. She gets embarrassed when we drive by, but I couldn't do anything else. Besides being the most beautiful woman I know, she's the reason all this was possible. She's my muse.\" Taylor waved at the camera. \"I love you, baby.\"\n\nSeveral of my co-workers whooped, and I wiped a tear from my eye, blowing a little kiss back at the screen as I touched the choker around my neck. I still wore one every day, and by now I had quite a collection. After we finished in the shower, which we still took together daily, I'd bring her one based on what I was wearing that day, and I would kneel in front of her.\n\nShe'd put the choker around my neck and ask me what it meant.\n\n\"That I belong to My Lady, to her and her alone.\"\n\nAnd then she'd attach the heart shaped lock. \"And this means that Your Lady loves you and only you, and she cherishes you above all things.\"\n\nAnd in doing so, every morning we take a moment to fall in love with each other all over again.\n\nTHE END\n\n************\n\nWhew! I cannot tell you how emotionally draining this was, both the writing and the posting. I hope everyone enjoyed this, and thank you so much for everyone who came along for the ride. I doubt I'll write any more about Taylor and Aly. Let's let them have their 'happily ever after.' If I do come back to any of these characters, it would be Macie. As many have guessed, she's more complicated than just a bigot. But she's also not just 'in the closet'. That'd be way down the road, though.\n\nI'm also never going to write from two perspectives again. It's so hard. And it made this so long. This was over 160K words, which is almost twice as long as a normal romance novel. My next posting will probably be Cindy and Mitch's story, who are side characters from 'The Tennis Star'. It will be shorter. I'm also working on 'Unrequited,' which is far and away my favorite story I've written. It'll be a little while, though. \n\nBe safe, I love you all.\n\n \n"
    ],
    "authorname": "JCMcNeilly",
    "tags": [
        "lesbian",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hero-worship-pt-08"
}