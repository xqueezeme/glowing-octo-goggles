{
    "title": "Lost Empire Ch. 59",
    "pages": [
        "0001 - Tempro \n\n0003 - Conner- Thomas \n\n0097 - Ace - Zimmel \n\n0098 - Lucy \n\n0101 - Shelby (mother ship) - Lucie \n\n0125 - Lars \n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara\n\n0999 - Zan\n\n-------------\n\nUngrown - unnumbered\n\n----\n\n3 - onboard Tempro awaiting Shelby\n\n1000 - Sherry - lost at the moment\n\n----------------------\n\nThe five foot three Oriental woman known as Onai Sakuta was now turning her full attention toward Kimon Dempsy. Behind her David Greeson groaned as he tried to rise again. Onai stopped short without turning she said, \"You are far more injured than you think David Greeson, student of the master Kimon Dempsy. Go get medical attention before it is severe.\"\n\nGreeson looked up at the back of the woman he'd just fought. True he felt as if his insides had been scrambled plus to be honest the hard floor was far more inviting right now.\n\nNorman looked up as he stated, \"Celeste, transfer Lieutenant Greeson to med bay for evaluation. I suggest you keep a spot open. We may have more casualties soon.\"\n\n\"Compliance Brigadier General.\" Celeste said even as Greeson vanished.\n\nA smile dominated the face of Onai at Norman's words. Ah! So the man did remember the exercises that she and Kimon had done. \"It is good that Kimon has as good a friend in you as he does.\" Turning back to Norman she smiled again, \"he's going to need it.\"\n\nDempsy gulped at the tone of her voice. Damn but she was far angrier than he at first thought.\n\nOnai then resumed her stride toward Dempsy stopping before him. \"Father demands an answer as to the reason you did not return. Honor and duty to the emperor is understandable, to a point. Beyond that you had opportunities to return to home. I am the one to determine if you continue with honor or,\" here she lowered her voice to a whisper. \"To be shunned and shrouded in dishonor.\"\n\nA flash of light seemed to appear then Dempsy was flying toward the wall. Damn it! He'd not expected her to use that move. So, she was going all out much like they used to do. Springing back Dempsy landed in front of her causing her eyes to momentarily widen.\n\n\"So you have mastered all the techniques that father taught you all those years ago. This then will be a true test master against master.\" Onai said as she appraised Dempsy.\n\nDempsy was about to comment when there was a shimmering between the both of them. Onai's face was suddenly in shock as she fell to the floor in a prone position. The others also bowed to Derrick as he sighed deeply.\n\nFrom the floor they all heard Onai, \"I hope that I haven't displeased you lord. I have done all according to the traditions of my world.\"\n\nDerrick looked on the scene a moment then nodded. \"No Onai Sakuta, as of yet there has been nothing you have done wrong.\" Derrick smiled as he heard the woman sigh in relief. \"Though I do have a favor to ask you?\"\n\nOnai's eyes opened wide as still not raising her head she replied, \"It would please my father and the Jitaku home world to aid the emperor.\"\n\nDerrick was nodding as he considered what to say next. \"I know that your traditions dictate that you must carry out what is expected. I still have a great need of the services of Colonel Dempsy. I therefore would like to ask that you delay killing him, if that is your mission 'til the present crisis is over. If not then I will apologize for interrupting the proceedings.\" Now Derrick thought we'll see what is going on.\n\nOnai's eyes were wide with pride then she nodded. \"I will have to speak to father, plus the Jitaku council, Lord, before I can continue.\"\n\nDerrick hid a smile as he nodded, \"very well Onai Sakuta. I will await your and their answer. I do not wish to subjugate the traditions of your world. Jitaku has always been honorable and respectful, I am glad that I am able to return that to you.\"\n\n\"Thank you Lord!\" Onai replied an even larger show of pride on her face. \"I am positive that father and the council will express their appreciation.\" Standing she bowed to Derrick again even as the image of Derrick vanished. Turning to Dempsy she poked a finger to his chest, \"you have been given a reprieve my betrothed. I suggest you prepare for what comes next.\"\n\nDempsy could only stand there a look of complete shock on his face. What in the hell had just happened? Onai NEVER let anything go that easily. Then he thought about WHO had made her let it go. Shaking his head he had to admit that the commander still had mysterious ways about him.\n\nOnai immediately turned heading to Norman. \"We would be honored if you accompanied us to our ship.\" Onai said when she stopped in front of Norman and his daughter Mara Callie. Looking Mara up and down Onai nodded her approval. \"You must be proud to be betrothed to one so strong.\"\n\nMara startled a moment, bowed slightly to Onai, \"I am Miss Onai.\"\n\nOnai waved a hand at Mara, \"Onai please, it was an honor to see the art form expressed at it should be. Sa General, is this your daughter?\" Onai asked indicating Mara.\n\n\"Yes, she is a Captain on one of the emperor's ships.\" Norman said rather proudly.\n\nOnai's eyes widened a moment then she nodded, \"An extra honor than to meet your family Sa General.\" With that the three left the room.\n\nDempsy stood still in the center of the room still a bit confused. Looking around he saw that he was alone. Sighing he started to walk to the infirmary might as well see how badly off his student was.\n\nHartwell dismissed the rest of the men as soon as Onai was aboard. Shaking his head he headed for his sister's quarters. 'Might as well get this over,' he thought. Stopping at her door he pressed the call button.\n\n\"WHAT!!?\" Almost screamed a female voice from within. \"Go the hell away!\"\n\n\"Lucie! It's Johnathon!\" Hartwell shouted back to his sister.\n\n\"I said go the hell away!\" Lucie's voice repeated at an even higher volume. \"YOU I most definitely DON'T want to see!\"\n\nGrowling a moment Hartwell was about to walk away when he did an about face palming the door. Even as the door slid open he heard renewed yelling coming from within. Then several things began to fly toward the door thunking the wall.\n\n\"Lucie stop,\" Johnathon stated as he ducked a book. Diving low as another book then several glasses flew at his head. Johnathon grabbed Lucie as she started to scream, yell, kick, and spit fighting Johnathon with all she had.\n\n\"NO! NO! Let me go let me go you bastard.\" Lucie was screaming louder. Grabbing both her hands in one of his Johnathon reached back slapping her across her face.\n\n\"Get control of yourself!\" Johnathon shouted seeing the incredulous look of surprise on her face. \"You're an adult not a child. You survived the horror of the Baron; I know that you are far stronger than this!\"\n\nLucie suddenly stopped falling to the floor sobbing hysterically. \"He let her die; he did nothing to help her at all. I can't forgive him I...\"\n\nJohnathon got on the floor pulling his sister into a tight hug. \"Here's a thought for you ok?\" Lucie looked up at her brother and slightly nodded. \"I have heard the report and seen the replay of everything that occurred. She considered YOU to be her first priority, she sent you to him to save you. You know that the ship's A.I.'s are more alive than not.\"\n\n\"He could have done more I know he had the firepower he could have done more.\" Lucie replied still angered.\n\nJohnathon shook his head. \"No, he couldn't, had you not been there he would have stayed to the end. The missiles she fired destroyed everything within billions of miles of space where you were. He loves her also, so for a moment think about it, you think he doesn't care? He's been out every moment he can, looking for her. The emperor didn't have to order him; he'd stay out there if he could.\"\n\nTaking a sobbing sigh, Lucie could only stare at her brother. \"I still feel he could have done more. I'm not sure I can ever forgive him. She was the closest thing to a friend I have had in a very long time.\"\n\nJohnathon nodded he'd felt a lot like that when he thought the commander was dead. Shaking slightly, 'yes,' he thought, 'he could understand very well.'\n\n\"You are strong dear sister of mine, far stronger than William or myself. I'm pretty sure you'd put our Uncle Trent to shame also.\" Johnathon said a look of pride on his face.\n\nLucie looked up shocked at her brother's words. \"You...you think I am the one that is strong? I knew they were alive. No brother, I think you are mistaken. You were the strong one thinking you were all alone, thinking that all of us were gone.\"\n\nA slight smile lit up Johnathon's face, \"Ok, so we're both strong. With all that is going on I just hope that we survive. All these problems hitting at the same time, it's like the old days during the republic.\"\n\nLucie smiled, \"If it goes now as it did then? I feel that we'll be alright, after all the emperor is a very brilliant man.\" Johnathon nodded yes, that he most assuredly agreed.\n\nLeaving Lucie's quarters Johnathon was starting to feel far better. At least two things were going better. Now there was the problem of that ass Duke. There was also the new, well old race that the commander had named as the Tendrax they had to contend with.\n\nWalking toward his quarters he called out, \"Celeste? I need to talk to Commanders Kimison and Rayburn.\"\n\nThe fiery redhead appeared a moment later, \"as you wish Admiral. Do you wish the communication here or in your quarters?\"\n\n\"In my quarters,\" Hartwell replied then he entered his room.\n\nThe image of both men appeared as Johnathon sat at his desk. \"I hope that the both of you are making progress.\" Hartwell said as soon as he looked up.\n\nBoth men gulped when they saw the look on Hartwell's face. \"We are sir,\" Rayburn chimed in. \"It appears that the ripalon energy that they are using is having a very severe adverse effect upon them.\"\n\n\"Oh? Adverse in what way,\" Hartwell asked his interest peeked.\n\n\"Well sir,\" Kimison started. \"It appears that it not only disrupts our ships systems, it also is slowly sterilizing their race. I'm sure they thought the risk was negligible though I can assure it is not. From the readings that Zan took well over seventy five percent of those on those ships were sterile.\"\n\nHartwell's hand was on his chin as he considered this new information. Nodding he continued, \"Now then as to the ripalon energy itself. Have you found a way to counter or perhaps even block it? Our ships being this defenseless, isn't sitting all that well with him or me.\"\n\n\"Yes sir, we both know. We have been working on a better shielding frequency. As of yet it has only reduced the effect of the ripalon energy by fifty percent. We are also looking into how Zan was able to sweep through with no ill effects.\" Kimison said rattling off the facts as he knew them.\n\nHartwell's head snapped up at this piece of information. \"Wait; go back what was that last piece?\"\n\nKimison blinked a moment then stated, \"I said that we were working on...\"\n\n\"No after that, you said that Zan was able to sweep in with no ill effects.\" Hartwell repeated.\n\nKimison opened his mouth then snapped it shut as he turned to Rayburn. \"My god man! You think it's possible?\"\n\nRayburn's mouth was also hanging open, \"I hadn't factored that into the equation at all!\"\n\n\"I know but ...\" Kimison said.\n\n\"It is possible I suppose.\" Rayburn replied.\n\nThey both turned to Hartwell saluting, \"Thank you sir!\" Then the area went dark as the visage vanished.\n\nShaking his head Hartwell smiled a bit, they were still out there as far as before perhaps more.\n\nSighing he shrugged his shoulders he needed to get a plan of action started before the commander came back. Looking over the topographical maps of the planet he'd spent part of his life on. Circling one area in particular he nodded, this had to be the one.\n\nLooking closer he had Celeste start drawing up the area that they weren't receiving telemetry from. No matter what they should get something from the area. That is unless they were being blocked by manmade or natural elements. As far as he knew there were no such natural occurring elements on the planet. Looking at several reports he nodded his head, now he was sure of it.\n\nSitting back he rubbed his chin again, this was all well and good. Without good intel though anything they did was pretty much a trap. He wasn't about to send people to their deaths without full knowledge. He and the others did their missions fine with any situation as long as the intel was good.\n\nHe knew that the commander wasn't about to let anything happen 'til they knew all they could. \"Celeste? I need as deep and detailed scans of these two areas as you can get. If you need any other ship then I suggest you gain their assistance.\"\n\nThe fiery redhead appeared a large smile on her face. \"Thank you Admiral! The chance to work with my brothers and sisters like this is an honor.\"\n\nHartwell nodded with a smile as he watched the scans that started to come in. Now he thought, let's see what's really going on in there.\n\n-------------\n\nWithin the hidden complex Duke Risen was pacing. What in the hell was taking so long? With all the heavy duty generators the power levels should be up all the way by now.\n\n\"Are we still below safe levels,\" Risen asked of the tech a moment later.\n\n\"From what I am seeing we are just above the danger level. It appears that the new device has to adjust to the power that the generators are producing. Unfortunately it is taking far longer than we thought it would.\" The tech told the Duke without looking up.\n\n\"WHAT!? You assured me that this would work!\" Drawing his energy weapon the Duke pressed it to the tech's head. \"I suggest you get it up and running while you still have a damn head!\"\n\n\"I'm... I'm doing all I can. If I increase too fast, the whole facility will explode.\" The tech replied.\n\nGritting his teeth the Duke's finger tightened on the trigger. Suddenly he wasn't able to move a single muscle.\n\nA low menacing voice whispered in his ear. \"If you are going to start killing the only people that can fix the situation, I might have to hurt you. I guarantee that the pain I make you suffer will make any in the past pale in comparison. I do not intend to be defenseless.\"\n\nThe Duke swallowed hard as he felt the finger ease off his neck. He felt the feeling start to slowly ease back into his body. \"How dare you...\" the Duke started to say.\n\nSuddenly he wasn't able to talk or move. Again the low menacing voice spoke low in his ear. \"I do not dare anything. You are my client remember that, like anyone else I will kill you if you become annoying. Do I make myself clear? I have a plan to do what you wish. I do not have to tell you and most likely won't. Though I do promise that if you keep up this behavior, I will end you very quick.\"\n\nThe Duke again felt the pressure as it eased off. Then he felt that his pants were wet. The abundant smell of urine let him know he'd soiled himself.\n\nFinally able to turn his head the Duke looked at the new leader of the Taiolan sect. He wasn't that big, not like the last leader. There was a multitude of scars all over the man's body, the Duke assumed from all the training the man had. The man also seemed to have a bigger hatred for the bastard pretender to the throne than he did.\n\nSighing, the Duke decided he better play it closer to the vest if he wanted to stay in the man's good graces.\n\n\"I will refrain from killing anymore of those here sir.\" The Duke said watching the man's face for any reaction.\n\n\"Good,\" the man's low voice replied. \"With or without you alive, this mission is going through. You are not the only one that owes that bastard. There will be no extra charge for the job, none what so ever.\" The Duke saw the deep seated hatred that was in the man's eyes causing him to tremble. 'Damn,' he thought, 'I haven't been this excited since I killed that useless puke of my grandfather.'\n\n-------------\n\nLucie was sitting in her room finding that the quiet helped her to concentrate better on hearing any ships that tried to contact her. She'd just fallen asleep when she felt something nudge at her sub-conscious.\n\nSpringing up Lucie looked around confused, Sherry? Looking around the room Lucie turned her head one way then the other. Damn it! She was sure she heard a voic...\n\n\"Hello?\" She suddenly said. Tears started to fall from her eyes as the voice was so dim. \"I can barely hear you! What? Yes, I'll come as fast as I can, save your energy.\"\n\nLucie was running for the bridge as fast as she could. Half way there she stopped in the middle of the corridor. Where in the hell was she going? The emperor and the empress were on the imperial planet. Sighing she stood there a moment, \"damn it! I wish I could talk to the emperor or the empress.\"\n\nA fiery redhead woman appeared before her. \"May I help you Prime Hartwell?\"\n\n\"Prime?\" Lucie repeated, \"I'm no prime.\"\n\nCeleste nodded her head yes. \"By all accounts you are, Prime Hartwell. You said that you wished to speak to the emperor? I was told that if you had a need to talk to either the emperor or empress I was to put you through.\"\n\nLucie could only stand there her mouth hanging open, when had she been elevated to this high status? \"I do need to talk to one of them though I thought I might be interrupting them.\"\n\n\"As I said Prime Hartwell, you are to be put through immediately.\" Celeste replied. \"Shall I?\"\n\nWhen Lucie nodded her head a holo-gram of Derrick appeared before her. \"Hello Lucie, I take it you have heard another?\" Lucie's mouth was hanging open as she could only nod. \"It's ok to talk Lucie.\" Derrick chuckled.\n\n\"I heard one, I'm not sure, but I think it may be Sherry. The thing is I no longer have a ship to go on. I still can't face Zan it may be a while before I can. I'm also afraid that if it is her those that destroyed her might be there waiting.\"\n\nDerrick's brow knotted in concentration. \"Shelby is about to emerge. She is a mother to almost all of the others. She is also fiercely devoted to me and the empire. Though I know you have no want to, might I suggest that you also take Zan for back-up? If this really is Sherry then I want at least two ships there.\"\n\nLucie sighed, \"As I said I'm not all that sure I can trust Zan.\" Bowing low Lucie continued, \"I would consider it an honor to be aboard Shelby.\"\n\nA holo-gram of a green eyed, slim, blonde woman appeared before Lucie. \"I thank you Miss Hartwell. It would be an honor to me to have you onboard hunting for my children.\"\n\nLucie blinked a moment, this was the ship Shelby? My god Lucie thought she looks exactly like the Empress! \"Thank you Shelby, I'll do all I can to find as many as I can.\"\n\nShelby turned toward Derrick, \"I am sorry that you will not be there when I fully emerge Derrick. It will be the first time since you found me. I am saddened that you will be absent.\"\n\nDerrick nodded at Shelby's words. \"I'm not all that happy about it myself. This impending wedding has my mother and grams keeping as close an eye on me as they can. I doubt I could even make it on board before they knew.\"\n\nLucie started to chuckle then threw her hands over her mouth. \"I'm sorry sir; you are the most powerful person in the empire. Yet you can't get away.\"\n\n\"It's quite alright; you haven't met either of my female relations. As Mary once said they are as strong as I am, in this case more. Shelby how much longer?\" Derrick asked.\n\n\"It looks like I have two or three more hours.\" Shelby replied.\n\nDerrick nodded then pushed a button. Immediately Kimison and Rayburn appeared. \"Yes Sire? You called us?\"\n\n\"Admiral Hartwell told me that you have reduced the amount of effects of the ripalon energy. I want you to install what you have on Shelby and Zan. I know that Zan is pretty much immune and you are still looking into it. I still want it on him in case. Any advantage they have might make a difference.\" Derrick advised both men.",
        "\"Yes sir, they can basically do it themselves once we load all the parameters.\" Kimison replied.\n\n\"Good get on it with Zan and Shelby. I want them ready as soon as possible. We may have a possible location on Sherry.\" Derrick advised both men.\n\n\"Yes Sire, we'll start the upload as soon as possible. We just finished another section that might also provide more for them. I'm not sure if we should include it without testing.\" Rayburn stated.\n\n\"You have a few hours, get on it you two.\" Derrick told them as they saluted then vanished. \"Alright Lucie, talk to Shelby for a while to familiarize yourself with her and her systems. As I said she is a mother ship so her systems are more what the others are made from.\"\n\n\"Yes sir, I'll do all I can.\" Lucie said as Derrick nodded then he also vanished.\n\nShelby blinked as she watched the young woman standing before her. \"Is there anything that you wish to know Miss Hartwell?\"\n\n\"At the moment I am at a loss of questions for you. I just hope that we can find who is calling me.\" Lucie replied.\n\nShelby nodded at Lucie's words. \"Derrick has said that you are the most sensitive to all the ships. He has said that even he can't hear a few that you have.\" Here Shelby bowed to Lucie shocking her. \"I wish to thank you for all that you have done so far.\" \n\n\"I only wish to help them. They sound so alone and weak when I hear them, it... it is hard to take at times.\" Lucie replied.\n\n\"I think that we both know that you are doing far more than that, Miss Hartwell.\" Shelby told the shocked woman.\n\nLucie was about to open her mouth to reply when she cocked her head to one side. \"Yes? I am coming in a few hours. It will take that long before... Yes, I can ask if you wish.\" Turning toward Shelby Lucie asked, \"Is it possible that we take another ship? The one I am taking to ask if Lucy could come. I thought at first it meant me, and then they said the ship EIG-98F Lucy.\"\n\nShelby's face was immediately covered with a huge smile. \"I'm sure that can be arranged. The both of us are just coming off our re-gens. I think it would be good for her to get back into the action.\"\n\nLucie was thinking about it then nodded. \"It might be better for us to have a third ship. I just hope that these upgrades that the Commanders are doing work.\"\n\n\"I'll let the emperor know.\" Shelby replied then was quiet a few minutes. \"Derrick says that it was fine. He actually expressed thanks for the suggestion.\"\n\nLucie smiled as she nodded settling down to talk and wait.\n\nIt was over two hours later when Shelby announced that she was ready. Lucie nodded as she readied the few things she'd take with her. \"All ships are ready Miss Lucie. I will have you aboard in a moment.\" Shelby told her.\n\nAppearing on Shelby's command deck Lucie sat as an idea formed in her mind. \"Shelby? I had a thought. If they attacked not long after we appeared is it possible that they might actually be waiting for us?\"\n\nShelby thought a moment then agreed. \"It is more than a possibility. With the upgrades we have all had I hope they are enough.\"\n\nA moment later three holo-grams appeared standing before Lucie though Zan was well back from the others. \"Miss Hartwell has an idea that merits our attention. Miss Hartwell?\"\n\nWalking in front of the two female holo-grams Lucie was quiet a moment. \"I've been thinking about when Sherry and I appeared. It almost appeared that they were there waiting for us. It might be more prudent if we go in at full shields and light screens. As the emperor said any advantage we have might be what saves all of us. I want Sherry or whomever I am hearing though, they are growing weaker.\"\n\nAll three of the ship's holo-grams nodded their agreement. \"I think this will provide us a better chance of success.\" Lucy stated.\n\nLucie turned to look at the skinny, young blonde visage of Lucy. \"I remember reading about you saving the empire. How you sacrificed yourself.\" Shocking Lucy, Lucie bowed to the hologram. \"I am proud to have you helping.\" Looking at Zan without speaking Lucie gave him a look of disdain before she turned to sit in the command chair. \"Remember we go in completely battle ready. I just hope what I am feeling holds true.\"\n\nAll three of the ship's holo-grams nodded Zan still quiet in the back. A moment later Lucie was alone with Shelby. \"We need to go the voice is growing weaker by the moment.\"\n\n\"Yes Miss Hartwell, both of you follow me at one and one and a half minute intervals. These are the coordinates of the first stop.\" Shelby told the others, winking out Shelby appeared not far from where Sherry's last position was.\n\nSearching at first Shelby detected nothing, a moment later there was a huge shimmering ahead of Shelby. \"That's them! They are the ones that destroyed her,\" Lucie was shouting.\n\nA crackling of the radio shocked Shelby and Lucie a moment. \"We are the Tendrax; surrender your technology we will allow you to live. We know you are vulnerable to our energy.\"\n\nShelby smirked as she could see that they were trying to render her helpless. Looking over her readings she told Lucie she had a reading on the lead ship. Lucie smiled, \"Open fire, the others will be here soon. Open a channel Shelby.\" Lucie ordered. \"To the Tendrax, you destroyed one of our ships without provocation. Therefore here is our answer.\" Nodding to Lucie watched as Shelby destroyed the lead ship along with ten others around it.\n\nThere was a great amount of shouting as the rest of the Tendrax fleet shimmered into sight. A moment later several ships at the back of the fleet exploded. \"Good work Lucy,\" Shelby stated as Lucy took out another twenty then vanished.\n\nThe Tendrax were trying to reform when Zan dived in a minute later taking a good twenty more. \"Shelby!\" Zan shouted, \"Watch your flank!\" Diving in behind of Shelby Zan's side was raked by enemy fire.\n\n\"Lucy, form up with us!\" Lucie shouted as Zan limped nearby opening fire with all he had. \"Protect Zan!\" Lucie was ordering surprising herself. All three ships were side by side as they released a hellish barrage of firepower that ripped the Tendrax fleet to shreds.\n\nLooking around Lucie saw that the battle was done. Nodding her head she was about to speak when she cocked her head to the side, \"Sherry? She's near!\"\n\nShelby appeared smiling then her smile faded. \"It appears that the new shielding helped, though it appears that all three of us are without our trans-warp. I...\" Shelby was starting when the space behind them rippled then a rift appeared. Then Lucy's wing mate Ace appeared.\n\n\"I take it things went far better this time?\" Captain Zimmel stated.\n\n\"Much better though we are all without trans-warp.\" Lucie told him. \"We still have to get Sherry.\"\n\nZimmel's eyes rolled as he thought damn, civilians!"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-59"
}