{
    "title": "A Long Walk Home Ch. 14",
    "pages": [
        " mikothebaby thank you once more for editing for me. I have tweaked the chapter so any mistakes are my own. \n\nEnjoy! \n\n*\n\n\"For the love of all that's holy would you two stop growling at each other?\" Caleb's words rang through the sitting room, startling Rhianna and earning an irritated snort from Gard.\n\nHis mate turned wintry eyes on him, her lips tightening in a firm line. It was enough to drag a weary sigh from him. The atmosphere in the house had been unbearable. Rhianna was still angry at her brother for forcing her hand to reveal herself. Gard was pissed about something he wasn't willing to talk about and failing to back down in the face of his sister's displeasure.\n\n\"Annie, what's done is done. Rafe is adapting well to everything he's learned as is Lacey, Jared and Millie. It's unfortunate they had to find out the way they did but growling at Gard every five minutes isn't going to turn the clock back.\" \n\nHis tone was firm, his usual patience almost at an end. He could feel her conflicted emotions through their bond, had heard her pacing back and forth at night when she thought he was sleeping. It was driving him crazy because he couldn't help her work through her issues. He hated feeling so helpless.\n\n\"You think I'm mad because of that?\" Rhianna gaped in surprise, her tone incredulous. \"I'm mad because he is hurting and refusing to talk about what's bothering him.\" She pointed a finger at her brother though her gaze never left her mate's. \"Stupid idiotic males! Think you're all so tough and can deal with everything on your own!\" \n\nHer eyes suddenly turned to her brother. \"Well you can't and as soon as you start realising that, I'll start calming down. Talk, Gard.\"\n\n\"I have nothing I wish to discuss.\" It was the same curt statement he'd delivered time and time again to his sister. Lavender eyes clashed and then Rhianna let out a frustrated shriek and left the room in a wave of fury.\n\nCaleb let out a long weary sigh and regarded his brother-in-law with a hard look. \"This has got to end. I don't give a fuck whether you want to talk or not. You are going to tell her something, anything, and make her believe what you're saying is what's really bothering you.\"\n\n\"Or what?\" Gard growled dangerously. He coiled his big body tensely, on his feet in an instant as his eyes began to glow with his own anger.\n\n\"Or I'm going to trash this room using you to do so,\" Caleb answered, his voice chilling. \"And then she's going to be pissed at me so I'm going to have to trash something else with your help once again. I will continue on doing so until my mate is happy once more. I hope I'm making myself perfectly clear.\"\n\nHe saw the dangerous flash in Gard's eyes but he didn't care. He'd always thought his Annie in tears was the worst thing he could be forced to endure. That was before she'd vanished completely and was replaced by the bundle of fury she currently was. This wasn't his Annie and he wanted his mate back. If kicking the living daylights out of Gard was the only way he was going to achieve it then he would.\n\nHe waited for Gard to attack, was certain he was going to do so and was prepared to carry out his threat. When the other man backed down he blinked in surprise. \n\n\"Crystal,\" Gard barked out before he too swept out of the room leaving him alone.\n\nCaleb knew something important had just occurred. His complicated relationship with Gard had hovered between them for years. His brother-in-law acquiescing to him had finally formalised their boundaries. \n\nGard was acknowledging Caleb's right as his former king and mate to Annie. There would be no more confusion on the matter.\n\nHe wanted to go search for his mate but he knew he needed to give brother and sister some time together. Instead he grabbed his car keys and left the house. Maybe if he wasn't around they would be able to scream at each other or whatever it was they needed to do to resolve their problem. His protective instincts always kicked in and he couldn't stay out of it when they started on each other. He was effectively doing more harm than good.\n\nWith a glance back at the house he climbed into his car and headed over to Demetri's. He hadn't been at work for days and figured he could use the time to catch up with anything that may need his attention.\n\n*****\n\nRhianna hated feeling the way she was. It was frustrating and unnecessary and she knew it was driving Caleb insane. She was amazed it had taken him so long to blow. He must have been gritting his teeth for days trying not to react to her temper. She would need to make it up to him but first she would need to try and find a way to get rid of the negative emotions she was feeling.\n\nGard's pain was killing her. She could feel it every moment of every day and it was like a knife in her gut. He was hurting so badly though to look at him it was hard to tell. But she could feel it deep inside and he wouldn't talk to her about it. \n\nShe had thought Rafe's pain was unbearable to endure. Her brother had amazed her with his acceptance once he'd gotten over his shock. She had thought everything was going to be fine now that hurdle was over but she hadn't counted on Gard becoming an issue.\n\nHe was clearly resentful of Rafe and that concerned her. Her fear was escalating daily because she didn't know if his withdrawal was in direct relation to her Were brother. If the two of them went head to head, if they put her in a position of having to choose between them, she didn't know if she could survive that. She loved them both so much.\n\n\"Anakatrine.\"\n\n\"Annie! My name is bloody Annie! How many times do I need to tell you that, Gard? When will you start listening to me?\"\n\nA loud snort greeted her angry words and she pushed away from the kitchen counter and walked across the room to sit at the dining table taking a deep breath to try and regain some control.\n\n\"Annie's full of love and laughter, a happy little thing who doesn't fail to draw everyone under her spell. Don't see much sign of her at the moment so I figure Anakatrine is most definitely in residence.\" Gard's tone was mocking as he sat down across from her, forcing her to look at him.\n\nShe was silent for a very long time and then her shoulders slumped and she let out a deep sigh. \"You're driving me insane,\" she whispered wearily. \"Did you forget the bond, Gard? I feel everything you're feeling. It's killing me.\"\n\nShock rocked through him and his own hard expression suddenly melted away to be replaced with one of horror. \"I've been blocking,\" he said hoarsely. He'd known the bond had reformed. That was how he'd tracked her down all those years ago. In the past they had always been able to block each other when required. He'd been doing so religiously for days.\n\n\"Well, it's not working for some reason,\" she answered, tartness still in her tone.\n\n\"I don't feel you or Caleb when you block. You shouldn't be able to feel me, Annie. Not unless you're much stronger this time around.\" He was aghast at the prospect. She had always been powerful but if she was even more so, then there was no telling just what she could do now.\n\n\"I don't want to be stronger. I just want to be your sister and to help you with whatever is hurting you so much. Please, Gard.\" Her eyes filled with moisture and he let out a groan and reached for her hand, enclosing it tightly in his.\n\n\"I'm sorry. I didn't know you could feel me. No wonder Caleb's just threatened to demolish the house using me as the wrecking ball.\"\n\nThat brought a startled gasp from his sister and he squeezed her hand gently and gave her a smile. \"It's okay. I know when to back down.\"\n\n\"Poor Caleb. He doesn't deserve me.\"\n\nGard agreed with her but not in the way she'd meant it. As far as he was concerned no one was good enough for his sister, not Callain or Caleb, but he was the best that walked the planet and he was her choice. He would concede to Caleb because that was what would make her happy.\n\nHe took a deep breath and let it out slowly. \"Her name is Rayne,\" he said quietly looking down at their joined hands. \"You haven't met her yet but I know you'll like her. She's feisty, independent, incredibly beautiful and as sexy as sin. When I'm with her, she is all that exists in my world. You told me to find love and I did. But she ran from me, discovered a way to hide so I can't track her. Being apart from her is tearing me up inside.\"\n\n\"The wildcat?\" Rhianna gasped softly. She'd heard all about her, knew that there was some suspicion that she could be a hybrid child. She had kept her own counsel on that point, waiting to meet Rayne before she spoke her thoughts on it. Hearing that Gard had found his mate in her both filled her with elation and also dread.\n\nIf Rayne was who she suspected she was, then Gard's pain would only increase rather than lessen when it was revealed. \"Are you sure?\"\n\nHer brother met her gaze. \"Completely. She's mine, Annie. It doesn't matter if she tries to deny it. We belong together. She's aware of it too. When we made love she claimed me with a word. A Were can't take back that word.\"\n\nShe swallowed, dread washing over her at the total conviction in his voice. \"Gard...I don't know how to say this.\" Rhianna couldn't continue, swallowing again as she tried to make herself speak.\n\nHer tension transmitted to him and unease flitted across his face. \"Say it,\" he demanded his fingers tightening around hers.\n\n\"You know who she is, don't you? If she's as old as she claims to be there can be no other explanation.\" She watched the haunted expression in his eyes, saw denial clashing with the truth. \"You can't deny it, Gard. You must have known the moment her uniqueness became evident.\"\n\nGard shook his head, releasing her hand and looking away as he fought her words. He couldn't admit it to himself, couldn't allow the truth to surface because if it did, if he let himself believe then he didn't think he could live with the knowledge.\n\n\"You can't hide from this, brother,\" Rhianna whispered sadly. \n\n\"I know,\" he groaned hoarsely, his expression so haunted it ripped at her heart. \"I think I've always known but it was only after Rafe found out about me, when he was telling you about the children that everything finally clicked into place. If Rayne truly is a hybrid child then there is really only one child she could be.\"\n\n\"Oh, Gard!\" Rhianna moved around the table, wrapping her arms around him, understanding the extreme pain she'd been feeling for days now. \n\nHe had left Rayne in the forest to try and save his sister. He had abandoned an infant, believed he had been responsible for her death all these centuries. To find out the child had lived and he hadn't protected her would be bad enough. To discover that child was his destined mate and he had betrayed her would be an agony beyond imagining for a man whose very core was to be a guardian. \n\n\"I left her,\" Gard choked out staring down at the table. \"All those centuries she's been alone not knowing who or what she was. Three thousand years, Annie. She's walked alone her entire life because I left her.\" That knowledge would torture his soul for eternity.\n\nShe held him tightly, tears rolling down her face as he let go and clung to her. She was the only person he would allow himself to be vulnerable around. That was until he found Rayne. But his mate wasn't there right now so he wept silently in his sister's arms, releasing the overwhelming guilt he felt for his past actions.\n\n\"She will forgive you,\" Rhianna whispered gently, tightening her hold on him. \"She's your mate. She has to forgive you because if she doesn't it will rip her apart inside. We'll find her somehow. We'll make her understand.\"\n\nGard wished he had her faith. He wanted to believe his sister but he couldn't. How could Rayne ever forgive him when he couldn't even begin to forgive himself?\n\n*****\n\nIt was a subdued Annie Caleb came home to later. He found her in their bedroom, staring sightlessly at the ceiling. It was clear she had been crying and he had to fight down the urge to go looking for Gard. He knew they were alone which meant he must have gone home.\n\nSilently he slid onto the bed and gathered her into his arms, feeling a shiver run through her as she came eagerly into his embrace. \"Do I need to kill him?\" his voice came out sounding hoarse, his heart breaking at her misery. He was surprised when she giggled against his chest.\n\n\"You never change, Caleb,\" she sighed softly. \"Still so overprotective even after all this time.\" She raised herself up on her elbow so she could look down at him. \"Rayne's the first hybrid child. She's also Gard's mate.\"\n\n\"Sweet Jesus!\" he groaned loudly, concern crossing his face. \"No wonder he's wound so tight. Fuck, Annie, this is turning into a nightmare.\"\n\nShe lowered her forehead to his and sighed deeply. \"I know. We have to help them. I've had to initiate a reverse block to tune Gard out. I'm more sensitive this time around so although he was blocking it was having no effect on me. Hence, the bitch from hell routine.\" She shot him a rueful smile, regret on her face.\n\nHis response was to pull her down so he could attack her lips in a long slow kiss which melted her from the inside out. \"I'll forgive you as long as you forgive me for threatening Gard. I know he will have told you about that.\"\n\nShe rolled her eyes and kissed him gently. \"Deal,\" she whispered against his mouth, a small sigh escaping her. \"What are we going to do, Caleb? I told him she would forgive him. What if she doesn't? I can't stand seeing him in so much pain.\"\n\nHe rolled her onto her back, smoothing back her tangled curls gently. \"I know you love him and want to help him, sweet one, but this is his battle. He and Rayne are going to have to work this one out between them. You have to step back and let them do so.\"\n\n\"But...\"\n\n\"No buts, Annie. You can't right every wrong in the world. You can't become so involved in everyone else's lives that you forget to live you own. The last few days must surely have taught you that. I want my Annie back.\"\n\nShe groaned and wrapped her arms around his neck, pulling his mouth to hers once more. \"I'm sorry.\" Her breath whispered against his lips and he groaned too.\n\n\"Show me how much.\" It was a blatant demand, his body pressing hard against hers making it more than clear which form he wanted her apology to take.\n\nShe choked off a laugh, desire igniting instantly as he slid between her thighs and pressed his erection intimately between her legs. \"You have a one track mind sometimes, Caleb Cullen.\" There was more than a hint of amusement in her voice.\n\n\"Thankfully we're always on the same track,\" he chuckled lightly, his fingers making short work of her top, baring her breasts for his eager attention. \"Do you know I haven't touched these beauties in almost three days?\" His hands captured the soft globes, squeezing gently. His tone was more than affronted at being denied the pleasure of her body.\n\nHis petulant tone made her laugh out loud even as his soft stroking of her heated flesh brought a moan from her lips. \"Maybe you should make up for lost time?\" she whispered huskily as her back arched to meet his descending mouth.\n\n\"Oh, I intend to,\" he mumbled against her softness, his tongue beginning a slow torturous swirl around her hard peak. He suckled it into his mouth, his touch gentle for a few seconds before he became firmer.\n\nHe had her writhing deliciously in next to no time, treating each breast to a wicked form of torture as he alternated between being gentle and then rougher. He focused entirely on her breasts, breathing in the sweet scent of her arousal but never going anywhere close to where he knew she wanted him to be.\n\n\"You are such a tease!\" she complained, trying to urge him lower as fire raged through her body and damp heat exploded between her legs.\n\n\"And you love every minute of it,\" he laughed, finally stripping off her jeans and panties, running his tongue against the soft skin of her inner thighs.\n\n\"Caleb!\" The tortured wail had him laughing harder. It also had his cock throbbing painfully hard in his jeans. He loved his name on her lips. It didn't matter what tone she used, just hearing her call to him made his heart soar. \n\nHer hands threaded in his hair trying to urge him close to her succulent flesh which was crying out for his touch. He removed them forcefully, sliding up her body to press her arms above her head.\n\n\"Keep your hands to yourself or I'll find an alternative bed to sleep in tonight,\" he warned, his eyes flashing with amusement as hers widened in shock. \"I mean it, Annie. You apologise by letting me do what I want. No negotiations.\"\n\n\"If I didn't love you so much I would tell you to piss off,\" she grumbled loudly but there was laughter in her voice and desire too. He knew she loved it when he took control. She always protested but succumbed so easily as he stroked her to orgasm.\n\nHe began to love her delectable body slowly, teasing her with light touches designed to drive her wild. It was an exercise in self-control not to strip himself naked and thrust hard inside her. He was desperate to feel her welcome him in deep, but he had days to make up for and he was going to take his time pleasuring his woman.\n\nRhianna cried out and arched up as he slid two long fingers deep inside her. She was hot and wet and ready for him. He teased her with light touches and then his thumb brushed her clit as he drove hard into her body. She cried out loudly, her body trembling as he tipped her over the edge and she soared with her climax, pleasure dancing across her beautiful face.\n\nThis was how he loved to see his mate, lost in the pleasure of her body, forgetting everything for a few brief seconds as he rocked her world and took her to Heaven.\n\nHis mouth replaced his fingers as he licked greedily at her sweet essence. He was addicted to her taste, addicted to everything about her. He ravished her body, pushing her mercilessly towards another climax so he could feast on her pleasure. \n\nHer hands were in his hair and he struggled not to laugh. She was so disobedient, even when he threatened to leave her bed. But she knew an empty threat when she heard one. Nothing would ever keep him from her side. He suckled against the tiny bundle of nerves that gave her the most pleasure, scraping lightly with his teeth until she stiffened with pleasure and her sweet cries filled the room once more.\n\nAs she slowly calmed, he stood up and rid himself of his clothes, joining her back on the bed in an instant. His own need was at fever pitch, his lust for her turning him almost feral. Caleb's fangs elongated and he gripped the nape of her neck, exposing the soft skin of her throat so he could sink his fangs into her flesh.\n\nHe thrust hard into her body at the same, pulling at her sweet blood as he claimed her. His arms snaked around her back, lifting her slightly from the bed and arching her body to his dual penetration. He rocked into her hard, savouring the feel of her silken heat around his throbbing cock. Making love to his Annie was the most intoxicating experience ever, one he intended to enjoy for the rest of his life.\n\nCaleb closed the wound on her neck and flipped over onto his back, keeping their bodies joined as he did so. His hands cupped Rhianna's breasts as she took over control, sliding sensually up and down his shaft in a slow, hot rhythm. He wanted to urge her to go faster but he equally wanted to watch her take her pleasure from him. It was one of the most erotic sights ever and he loved to indulge both of them with it.\n\nRhianna ran her hands over Caleb's chest, leaning forward as she rocked against him. Her fangs were already out, her lavender eyes glowing with pleasure as he bared his neck to her in open invitation. She didn't need a second urging, her fangs slicing through the corded skin to drink deeply at his life's essence.",
        "The fire of his blood rushing through her was an aphrodisiac like no other. She pulled again, her movements becoming more frantic as she raced towards completion again; knowing this time would be the best because he was with her every step of the way.\n\nShe had barely sealed his wound when she was once more flipped onto her back and he was taking her with long, hard thrusts. Her legs wrapped around him and she moved sensually against him, her ragged breathing matching his as he thrust harder and faster.\n\nLights danced before her eyes and she screamed his name as her world splintered completely and she was just a mass of sensation. She could hear him roaring out her name as he emptied himself inside her, his body shuddering with pleasure as they became one for a brief, precious moment.\n\n\"We didn't do that for almost three days?\" The incredulous note in Rhianna's voice, as she gasped the words out between laboured breaths, had Caleb laughing loudly as he cradled her close to his body.\n\n\"Rest assured it won't happen again,\" he chuckled softly, relaxing in the afterglow of their lovemaking and the joy of having his Annie back in his arms. \n\nShe snuggled into his arms as he pulled a blanket over them and then dropped a lazy kiss on her parted lips. \"You're right, love. It's hard to take a step back but I know I have to. Gard knows I'm here for him if he needs me.\"\n\nHe knew how hard it was for her to admit that and he kissed her again, this time a soft, gentle meeting of lips that conveyed just how much he loved her. \"It'll work itself out, sweet one. Everything always does. He knows we're both here for him.\"\n\nHe closed his eyes and hoped fervently it would work itself out. It would crush his Annie if Gard was left alone, mated to a woman who rejected him. He would never find happiness if that happened and his woman's tender heart would ache for eternity for him.\n\n*****\n\nYou're going to meet her?\" Freya's quiet question followed him as he slipped out of the Alpha's house.\n\n\"I'm going to the gallery,\" Dayton answered truthfully turning to look at her. \"I'm hoping Rayne will show up but I don't know if she will.\" He saw no point in lying to her. She wouldn't like it but it was something she would have to come to terms with. He had every intention of convincing Rayne to stay if he could find her.\n\nThe cold mask was securely in place, her green eyes devoid of all expression as she looked down on him from the doorway. He could almost see the thoughts whirling inside her head. He wondered what she was thinking in that moment.\n\nThe mask vanished and a look of confusion crossed her face. \"Why does this make me feel so angry, Dayton?\"\n\nHe walked back up the steps until his face was level with hers. \"You know why, Freya. You're just not in the right frame of mind to accept it yet.\" His voice was gentle, his hand reaching out to caress her cheek gently. \"There's no rush. And you have nothing to be concerned about regarding Rayne. So why don't you kiss me goodbye and then head back in and spend some time with your family?\"\n\nShe blinked slowly at him and then hesitantly leaned forward to brush her lips gently against his. Apart from that night in gallery, Dayton had always been the one to initiate the kisses they'd shared. This time he asked her for one, holding himself still as she brushed her mouth experimentally against his, feeling strange being the one in control of their small intimacies. \n\nShe didn't understand what his cryptic words meant but she did understand the need to taste him because it was all she could think about. His arms came around her and she deepened the kiss as he responded greedily to her, desire coursing through her body as their tongues duelled erotically.\n\nHe gently disentangled one of her arms from his neck, his mouth never leaving hers as he trailed her hand down his chest, over his stomach until he pressed her intimately against his groin. Her hand flexed against his hardness, her fingers curling around the throbbing erection straining against his jeans.\n\n\"That's why you have no need to be worried about Rayne,\" he breathed against her lips. \"One kiss, Freya, that's all it takes from you to make me hard as steel, desperate for your touch.\"\n\nA soft moan escaped her, liquid heat flooding between her thighs as his words washed over her and he groaned as she rubbed her hand against his body. He was so hard, so thick and long. She wanted to free him, to sink to her knees and taste him in her mouth.\n\nHe groaned again and reluctantly pulled away, his eyes so dark they looked almost black. \"Remember that when your emotions become confused,\" he said gruffly. \"Think one kiss and remember. I have to go now. I'll be back as soon as I can.\"\n\nFreya held herself still, her breathing slightly ragged as she stared deeply into his eyes, reading a promise in their depths. \"I will be here waiting,\" she finally said. They were simple words, appearing innocuous but it was a huge statement for her. She wondered if he realised that.\n\n\"My room's the second on the left on the first floor,\" he answered with a small smile.\n\nHer heart fluttered and she turned her head to look back into the house. \"That one?\" She pointed to the room two doors down from the top of the stairs.\n\nHis smile widened. \"That one,\" he confirmed with a glint in his eye.\n\nShe turned back to face him, her expression thoughtful. \"Now I have a location to wait.\" She leaned forward and kissed him again, a gentle kiss that was a brief meeting of lips. Then she turned and headed back inside, closing the door behind her.\n\nDayton didn't know whether to laugh or cry. She was slowly coming to trust him and that filled him with such joy but his cock was now rock hard and extremely painful because of her kisses and he couldn't relieve that ache until after he'd found Rayne and helped her. With a rueful smile, he dug out his cell phone and dialled Rayne's number as he headed towards his Jeep.\n\nThe call went to voicemail but he'd been expecting it to because of their last conversation. He waited for the beep. \"Dinner. I'm buying. Gallery. No need to dress up unless you really want to.\" He terminated the call and climbed into the Jeep. At least her last picnic hamper would get a second use even if she didn't show up. He headed out of the compound and away from his mate. He hoped he'd reassured Freya enough. He guessed he'd find out when he got back.\n\n*****\n\nRayne listened to the message for a second time and closed her cell. She wasn't sure what she was going to do. She'd barely moved out of her apartment since she'd fled from Gard. She was afraid he would be looking for her and decided that staying in one place would minimise the chances of him picking up her trail.\n\nHer earlier conversation with Dayton had left her reeling. She was so happy for him and wanted to go to him, to see the life in his eyes as he let go of his past and embraced the future. But he had been angry with her too because she'd talked of leaving. He'd said some harsh things but she couldn't fault him for doing so. She was a coward, running from Gard even though she didn't even know why she was.\n\nThe children needed her. The pack needed her. They had offered her a home, something she'd craved all her life. And all she wanted to do was run as far away as she could. Even her cat was mad at her for leaving their mate.\n\nShe sighed deeply and threw herself down into her large, overstuffed armchair in her small sitting room. Dayton didn't sound angry any more in his voicemail and she did want to see him. Making her decision she dragged herself out of the armchair and walked the block and a half to the gallery. \n\nThe door was locked but the wall lights were on, the rug she'd brought the last time in the middle of the room. She let herself in with her key just as Dayton walked out of the back office. Instantly she could see the change in him. He looked so much more relaxed, younger even now that he wasn't holding his emotions in so rigidly. The smile he gave her lit up his entire face and she felt tears well up in her eyes. He looked happy.\n\n\"Wasn't sure whether you'd come or not,\" he admitted moving over to the rug and kneeling down on it. \"You caught me off guard this afternoon. I'm sorry I came across so harsh.\"\n\n\"We've always told each other the truth,\" she sighed softly. \"Even if we haven't always wanted to hear it.\" She sank down beside him and accepted the glass of champagne he handed her.\n\n\"To new beginnings,\" he toasted, clinking his glass to hers.\n\nShe stared at him wondering just whose new beginnings he was referring to. He held her gaze for a moment and then he rummaged in the basket again and began laying out the food.\n\n\"You were right, you know,\" he said as he worked. \"About Freya. Did you know, Rayne?\" His eyes met hers again and they positively shone with happiness.\n\nShe gasped loudly, shaking her head. \"You and Freya?\" She had known they had the power to heal each other but she hadn't expected them to be mates. Suddenly she understood the full importance of Dayton letting go of his past. \"Where you with her; when you called the first time? Was she the friend you'd borrowed the cell phone from?\"\n\nHe nodded and stuck a cracker into a salsa dip. \"I'm taking it slow because she's not used to the whole love and adoration thing,\" he smiled taking a large bite out of the cracker and crunching enthusiastically. \"She's coming to trust me so it's only a matter of time before we complete the mating.\"\n\nRayne was stunned at his news but pleasantly so. \"Won't she have to...heal you so you can complete the mating?\"\n\nHe laughed softly and took another sip of his drink. \"Already taken care of as I was stupid enough to fall into a pit and sever my femoral artery. Freya found me and healed me. She's already had a bite out of me too and I'm still alive so we know everything's fine on that score.\"\n\nShe drained her glass and held it out for a refill, shock rippling through her as he casually spoke of almost dying, being healed by his mortal enemy before allowing her to bite him as he decided she was going to be his mate. All in a matter of days? It was making her head spin.\n\n\"Day, don't you think this is all happening too fast?\" She couldn't keep the concern out of her voice.\n\n\"Not any faster than you finding your mate in Gard and then pissing off with your tail between your legs.\"\n\nThe stem of her champagne flute snapped in two, the bottom part piercing her palm and drawing blood. Her body went rigid with shock as her eyes locked on his. He was watching her intently, daring her to lie to him.\n\n\"How did you find out about that?\"\n\nHe rose and headed into the office, coming back out with a first aid kit. \"Rafe said Gard admitted to having contact with you. He speculated it could have been something romantic. Gard being your mate seemed the only logical explanation to me.\"\n\nHe removed the stem from her palm and quickly used the tweezers from the kit to pull out any glass shards before she healed. She cleaned her hand with some antibacterial wipes and cleaned up the mess she'd made as he put the kit away and returned with a new glass for her.\n\n\"What's got you spooked, Rayne?\"\n\nHer head dropped and she stared sightlessly at the rug. \"I don't know,\" she whispered. \"He calls to me, Day. Everything about him makes my blood pound in my veins and my heart beat so fast I'm afraid it will burst out of my chest. My cat claimed him during the heat of passion. I claimed him before I even got into his bed. And then something frightened me. My gut told me to flee and I couldn't stop myself from doing so. I made out it was just a casual fuck and that hurt him, made him mad. I haven't been back to the compound since.\"\n\nHer misery was so strong that he reached out and pulled her down beside him stroking her cheek gently as they faced each other. \"Well, speaking from a male perspective I can understand why he wouldn't have been too impressed with that parting shot,\" he said with a touch of amusement in his voice. \n\n\"You know you can't run from your mate, Rayne. You know we need you in the pack. Come home with me. I'll help you reach an understanding with this Gard if you need me to. You're not alone. I've told you that before. You'll never be alone as long as I live. And you have a mate waiting for you now too.\"\n\nShe shivered and closed her eyes, looking so vulnerable that he barely recognised the woman he'd known for over five decades. Finally her eyes opened and she nodded her agreement.\n\n\"How does Freya feel about us?\" she asked suddenly. The vampire didn't strike her very much as the sharing kind. If she was going to be staying then she needed to know the lay of the land.\n\nA smile crossed his face and his eyes danced with amusement. \"She's as jealous as hell,\" he admitted smugly. \"A sure sign that she's feeling the mating pull and will soon be mine.\"\n\nRayne snorted and rolled onto her back, muttering a curse under her breath. \"Glad you're finding it so funny. I'm really not looking forward to having an Ancient vampire looking to rip my head off because she thinks I'm after you.\"\n\nHe laughed loudly and jumped to his feet. \"All the more reason to mate with Gard; so she doesn't see you as competition. Come on, let's get back. I've got a hot date lined up for tonight.\"\n\nStill muttering under her breath she helped him tidy up and Dayton was relieved to see the old Rayne appearing. He'd barely recognised the woman who'd first shown up at the gallery. He hoped this Gard character was going to treat her well because he'd have him to deal with if he hurt her in anyway. Not that he'd be able to do much against an Ancient vampire. Apart from sic Freya on him. That thought had him smiling, as did the one that she would be waiting for him in his room when he got home.\n\n\"Shift your ass, Rayne.\"\n\nShe arched an eyebrow at him and dumped the hamper in his arms before grabbing his car keys from the desk. \"I think I preferred you when you were a manic depressive,\" she said snippily. \"I'll wait in the car.\"\n\nGrinning, Dayton tossed the hamper in the office and closed and locked up. He was excited to return to the pack and also excited to have Rayne returning with him.\n\nIt didn't take them long to get back to the compound, Dayton all but bounding up the steps into the house. He sensed immediately that something was wrong and he stiffened as he saw the strangers in the sitting room. He knew they were vampires rather than Weres and it was easy enough to guess which two were Caleb and Rhianna and which was Gard.\n\nRayne walked in at the back of him and froze instantly. Her startled gasp was loud in the silence, her eyes strangely not on Gard but on the other two vampires.\n\nRafe stood from the sofa and motioned them to come in. It was only as they entered that Dayton noticed Freya leaning against the far wall, her eyes on Caleb Cullen but quickly swinging to his as he entered. He immediately wanted to go to her, Rafe's words from earlier causing him to want to protect her.\n\n\"Rayne, Dayton, you haven't been formally introduced to my sister Annie and her partner Caleb. I believe you already know Gard, Rayne.\" Silence greeted Rafe's introduction.\n\nDayton was torn between going to Freya and staying beside Rayne. She was so still at his side; he could barely hear her breathing. His eyes met Freya's and she nodded slightly, letting him know she was okay.\n\n\"I know you,\" Rayne suddenly whispered, her gaze still on Caleb and Annie. \"How can I know you?\"\n\nRhianna stood, walking towards her and stopping when she close enough to reach out and touch her. Her lavender eyes seemed to glow in the lamplight flooding the room and then a tear slid silently down her cheek.\n\n\"It's her,\" she said softly, her voice catching. \"I'd recognise those eyes anywhere. Even as an infant your eyes were already remarkable, that thread of silver captivating around the green of your iris. You've walked alone a long time, Sarayne.\"\n\nRayne's knees buckled and Dayton caught her before the vampire could lay hands on her. He immediately blocked her from the other woman, the huge auburn haired vampire growling loudly in the background.\n\n\"Annie, what the fuck?\" Rafe bit out. \"You said she was in no danger.\"\n\n\"She isn't,\" Rhianna cried, confusion crossing her face.\n\nDayton was easing Rayne further away, holding her tightly as he growled a warning at the room. \"You used me to bring her here?\" he roared furiously at Rafe, all his instincts to protect coming to the fore.\n\n\"Everyone calm down.\" Caleb's quiet tone didn't lessen the impact of his words. It had the desired effect the room falling silent for a moment.\n\nRayne appeared to be in some kind of shock, her gaze unfocused as Dayton held her close. \"Rayne, talk to me,\" he demanded choosing to ignore the others. \"Come on, snap out of it. Anyone would think you were some weak lily-livered woman the way you're carrying on.\" His tone was derisive, designed to catch her attention.\n\nIt worked as she slowly focused on him, blinking almost in slow motion as she gathered her wits about her. \"I remember, Day,\" she choked out. \"I was so young I shouldn't be able to remember it but I do. Mama was crying. We were in a cold, dark place and Mama was holding me so tightly and I could hear Daddy crying too. Then a pretty lady came and she took me and passed me to a man. I wanted Mama so I reached for her but she was holding another me but it wasn't me.\"\n\nHer breath caught in a sob and it was only his strong grip that held her up as the memories assaulted her. \"The man took me and ran away. I was crying because I wanted Mama but he wouldn't take me back no matter how much I cried. He ran for a long time and he kept falling down but he didn't drop me. Not until the last time he fell down.\"\n\nHer voice turned hoarse her breathing ragged as she pushed around Dayton staring first at Rhianna and then at Caleb. And then she turned to Gard, met his hard, lavender gaze and she crumpled to the floor with a cry of anguish. \"You left me,\" she wailed staring at him in disbelief. \"I was a child, a baby and you left me alone in the middle of a dark forest. How could you do that, Gard? How could you abandon me? Leave me helpless?\"\n\nThe vampire moved, hissing a warning as Dayton tried to intervene. The tension in the room exploded and Rafe immediately came to Dayton's side as Freya leapt across the room to land in a crouch in front of him. Her talons clicked together as she dared Gard to come anywhere near her wolf.\n\nGard ignored her and the others dropping down beside Rayne and pulling her into his arms. He said nothing, merely held her as she wept agonising sobs, his arms so tight around her he was afraid he would mark her soft skin. But he couldn't let her go, not when her heart was breaking and he was the cause of that anguish. \n\nFury oozed from every pore in Rafe's body as he glared at his sister. \"You'd better have a good explanation for this, Rhianna. Because if I don't like what I hear I swear to God you will no longer be welcome in this compound.\"\n\n\"Back off, Rafe.\" Caleb's voice was like a bucket of cold ice being thrown over the entire room. \"Don't you blame her for this or use emotional blackmail against her. You and I will have a serious issue if you do.\"\n\n\"Stop it,\" Rhianna moaned softly. \"Both of you.\" Her eyes turned to her brother with a silent plea in them. \"None of us mean any harm to Rayne. You wanted answers for her. Well, the answer is she is Sarayne, the first born hybrid child, the one we tried to save when her parents were destroyed by The Council. We told you our history. We believed the child perished when Gard came back to try and help us. She was less than eighteen months old at the time. How could we know she would retain enough memories of then?\"\n\nRafe glared at her a moment longer and then he frowned deeply and looked down at Rayne. \"Is she strong enough to cope with this, Dayton?\"",
        "\"Tell the vampire to back away.\" Dayton's words were hard, his expression murderous. \n\n\"Come near and I will kill you instantly,\" Gard growled, his fangs elongating as his eyes began to glow softly. \n\nRhianna stepped in front of him blocking his view of the others. \"You need to release her, brother,\" she said softly. \"I know you want to protect her but right now she needs the arms of someone she trusts. She needs time to come to terms with this.\"\n\n\"Don't ask that of me,\" he ground out, naked fury in his voice. His hold on Rayne tightened, his hand threading through her hair as he rocked her gently.\n\n\"Gard, you must.\" Rhianna's tone was firmer, allowing no room for argument. She reached out and ran a hand over his hair. \"She needs her pack's love. She needs to feel safe. When she is ready she will come to you.\"\n\nWith an anguished groan Gard dropped his head against the side of Rayne's neck, his lips whispering against her skin in a tender kiss. \"Forgive me,\" he whispered. \"I will wait for you in our special place.\" He released her and rose, striding out of the house without a backward glance.\n\nDayton immediately scooped Rayne up and carried her out of the room and upstairs to his. He heard the door closed quietly behind him.\n\n\"Pull the covers down,\" he said softly, waiting for Freya to do as he asked. He gently lowered the distraught woman into the bed and pulled off her boots. Then he covered her and sat down beside her.\n\nShe had stopped crying but now she stared off into the distance, unaware of anything around her. Her distress was heartbreaking to watch.\n\nFreya sat down beside him, wrapping her arms around his waist and resting her head against his back. She had no idea what had happened downstairs. All she knew was he was hurting because his cat was hurting and she wanted to give him comfort. She didn't even know if he wanted the comfort from her.\n\nWhen he didn't push her away she held him more tightly, letting him know she was there if he needed her. They sat like that for so long she must have drifted off because she woke to the feeling of being moved. For a moment she thought Dayton was taking her to her room then she realised he had dragged a large comfortable chaise from somewhere and had moved it close to the bed. He was stretched out full length on it and was settling her against his chest, a warm blanket covering them.\n\n\"I thought you would sleep in your bed,\" she said quietly, still struggling with her insecurity about the other woman.\n\n\"One kiss,\" he whispered, closing his eyes and stroking her hair gently as his lips brushed the top of her head.\n\nWarmth spread through her and she relaxed in his arms letting sleep claim her once more.\n\nTo be continued..."
    ],
    "authorname": "JazCullen",
    "tags": [
        "vampires",
        "love",
        "werewolves",
        "hybrids",
        "paranormal romance",
        "vampire bite"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-long-walk-home-ch-14"
}