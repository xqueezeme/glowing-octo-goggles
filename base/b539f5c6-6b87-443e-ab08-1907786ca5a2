{
    "title": "Joined by the Night",
    "pages": [
        "Soft golden flames cast the room in flickering shadows. Deep red silk and lace seemed almost as blood against pale skin turned alabaster by the wavering light. The darkness of the hand that trailed across her skin was an eerie compliment to the haunting music playing in the background.\n\nShe gasped as those same dark hands pulled the tiny straps off of her shoulders, exposing more and more of her sleekly rounded breasts. The plunging neckline caught on the ruby tips and she arched in pleasure, dark eyes closing in passionate abandon, long ebony strands of hair tumbling away from her face. Her hands curved into fists, catching creamy satin sheets in grasping fingers as she sought to cope with the bliss that was singing through her nerve endings, befuddling her mind. \n\nMasculine lips traced the line of her throat, burying themselves in the juncture of her shoulder. She felt him inhale her scent, heard his moan of need as if it were a physical thing that touched her with a soft feathery caress. He pushed the straps further down her arms, only stopping when they became caught on the bindings that held her to the bed.\n\nShe felt the restrictions of her arms held to her sides by the leather cuffs around her wrists and panicked, pleasure turning to fear as the fog of desire lifted suddenly. Her eyes opened and she stared around the room, a room that had been crafted into a nest of sensual delights, soft fabrics, seductively scented candles, quietly passionate music. The bed was sitting upon a platform, leaving the mattress she laid upon only inches from the floor, the leather ties that bound her to it coming from under the platform.\n\nShe moved her arms, struggling now not to touch him but to get away. Her eyes darted frantically around the room, searching for a means of escape, desperate for a way to get free of the spell he was weaving with such seductive guile. Her eyes landed upon the tray that was just beyond her reach. Chocolate covered strawberries lay in decadent disarray next to a small bowl filled with luscious ripe fruits. Cheeses lay under a protective stained-glass dome, a wooden cutting board next to it, a small knife sitting so temptingly upon it. Wine glasses, half-filled, one stained with just the trace of lipstick were off to one side.\n\nThe wine! It was drugged! Even now, she could feel its rich appeal, the frantic pounding of her heart rushing whatever he had given her through her system. The air seemed heavy, filled with erotic scents that weighed down her will, bending it until it was his. She wanted him. She couldn't fight it any longer. \n\nShe arched against the chest that crushed down against her breasts, pressing them even more firmly against him, moaning at the contact of his hot skin against her own. His hand pushed hair from her face, traced her features, the tip of his finger brushing with seductive demand against her bottom lip until she opened her mouth for him, her tongue greeting his finger eagerly, suckling upon it. \n\n\"You're so beautiful, so sensual,\" he whispered against her ear. His deep voice sent shivers through her, the texture of it seeming almost a tactile thing as more of the drug pulsed into her. He reached back and picked up her glass, dipping his finger into the blood red wine and running it over her lips, pushing delicately inside to let her suckle more. \"Trust me, my love,\" he whispered, kissing her eyes, her cheeks, licking a drop she had missed off of her lips. \"Trust me.\"\n\nHis weight lifted off of her and she whimpered in protest, craving the feel of him against her, needing the pressure of his body against every erogenous zone she possessed. Her breasts ached, her nipples seeming almost impossibly swollen, throbbing with need of his mouth and hands. Her lips felt dry, her mouth empty without the taste of him there. Her skin was cold, needing his heat, her thighs lax without the support of his against them.\n\nBut so much worse was the empty aching torment between those thighs. A torment that grew with every second he was gone from her. Her eyes opened once more, searching the room for him. He stood over her, his chest bare, a strange tattoo that seemed like blood tipped flames covering his shoulder and down one arm. He stared into her eyes, his hands toying with the buckle of his belt. He seemed to be waiting for something, to want something from her.\n\n\"I can't take you until you ask, my beautiful lady. You must say the words.\" \n\nUnder his searching gaze, her body grew even more tortured with need. Her thighs opened and closed, her hips arched against the softness of the satin as she grew even wetter and more swollen. There was a pain in her loins that seemed to grow the longer she fought him. His pale blue eyes spoke to her as she moaned, telling her she only had to ask and the pain would go away. She only had to ask for him and all she would feel would be pleasure.\n\n\"Please,\" she pleaded, her body writhing against the bed. \"Please.\"\n\n\"Say the words, sweet lady. Say them,\" he urged, \"and your pain will be gone.\" He undid the buckle, pulling the belt free of the loops, letting it drop against her skin. He dragged it over her body, between her breasts and down across her flat stomach, letting it slip between her thighs for a second before pulling it back and dropping it beside the bed.\n\nDesperate panting seemed to be all she was capable of, the air seemed too heavy to draw into her lungs, too filled with the scent of him. He smelled of richness, of sin, a decidedly too tempting concoction of maleness, sweat and spice mixed with desire and allure. It filled her making her want him as much as the drug had. As much as the sight of him, standing over her, his chest rising and falling rapidly with his own desire had her body arching towards him, pleading with a language of its own.\n\nHis hair was long, the color of sunlight and streamed across his shoulders. His face, harsh with desire, was beyond handsome, his features indelibly stamped upon her memory. Broad shoulders and a wide chest tapered into a muscular stomach and hard hips. His legs were strong, the thigh muscles that had pressed so wonderfully against her body, hard and delineated. Her eyes roved over him as she struggled to find the words to ask for what her body so desperately needed. \n\nHis pale blue gaze caught hers, his eyes demanding that she ask.\n\n\"Please,\" she whispered again, her voice broken. \"Take me.\"\n\nShe felt his hands upon her stomach, his knuckles brushing against her skin as he grasped the fragile satin she wore. With an easy movement of his strong hands, he ripped the sleek garment in two, leaving her body completely bare to his eyes. Then he tore open the fastening of his pants, yanking them down and stepping out of them in one movement before lying down next to her again.\n\nHis hands found her breasts, cupping and squeezing the firm roundness of them, his palms circling across her nipples. She gasped at the sensation, moaning as his fingers rolled across the pebbled tips, tugging upon them. Her thighs pressed together desperately, her legs moving as her hips arched, a blatant pleading for the pressure and fullness she craved.\n\nWhen he slid one hand down her stomach, his fingers parting the fine curls that covered her sex, she sobbed in pained pleasure, tiny eruptions building and circling through her, but never easing the blatant yearning of her body. He slipped his hand between her thighs, moaning his own appreciation as his long middle finger slid easily into the damp hot flesh, feeling the seductive walls of her vaginal sheath pull at him, weep her sweet moisture for him, cling to him.\n\n\"Yes,\" he groaned as she cried out her need. He slipped between her thighs, holding himself away from her on his strong arms as he let the long length of his hardness caress her slit, the bulbous head rubbing with torturous irregularity against the hard knot of her clit. \"Are you on any birth control?\" he asked her harshly, taunting her with his body, rubbing against her, plying his soft lips over her nipples.\n\n\"No,\" she gasped, mindless with need.\n\n\"Good,\" he said, a pleased smile spreading fleetingly across his hard and handsome face. \n\nHis hands circled her thighs, his chest for one glorious moment, pressing against her again. He pulled her legs open wider, pushing her thighs up until she was completely exposed to him, vulnerable to whatever he wanted to do with her. He leaned over her, his mouth finding hers as he pressed his cock against the delicate flesh of her opening, stretching her wider until just the head of his shaft nestled inside of her.\n\nHer hips moved, trying to force him to give her more, trying to take him into her to give herself what she needed.\n\n\"Gently, darling. I don't want to hurt you,\" he said, kissing her lips softly as he strained to keep himself from just thrusting into her. Slowly, inch by torturous inch, he pushed inside, the wet walls of her vagina giving way to his sultry invasion. \"You're so tight,\" he moaned, his hips twitching as he fought his own desire. \"I'd almost believe you virginal if I didn't know better.\"\n\nHer head tossed upon the pillow as he filled her with himself until she felt as if she would burst from the fullness. He pushed against her hips, his arms holding her open while he slowly moved inside of her, pleasing himself with his movements and teasing her until begging whimpers fell from lips bruised and swollen from his passionate kisses. Every move of his hips sent heated chills spiraling from her lower belly, every thrust brought her just that much closer to the fulfillment she craved.\n\n\"Yes,\" he hissed, watching her eyes, seeing the flush that suffused her face. \"You must reach your own pleasure first, lover.\" He thrust hard, flesh slapping against flesh, feeling her pleasure as it pulsed through her almost too strong and unexpected for her to handle. Her eyes closed, a keening cry coming from between her lips. \"No!\" he shouted, startling her, even as the walls around them shook slightly with the sound. \"Look at me.\"\n\nHer eyes flew open as he ground himself against her, his body punishing hers as it pleasured her. She felt it coming again, that overwhelming tide of ecstasy unlike anything she'd ever experienced before. She stared up at him as it consumed her, her body rigid with it. It radiated from where he still moved inside of her, pulsing through her body in rapturous waves, forcing a scream from between her parted lips.\n\nHe saw it and felt it, knew her pleasure even as his own stayed just beyond his reach. Her eyes were almost terrified as the sensations that poured through her were too intense to be understood. That fright he saw pushed at him, took him over the edge, sent him soaring in ecstasy. He could feel the hot pulses of his own pleasure, feel his potent seed as it throbbed through his cock, boiling its way deep inside of her as the tip of his spurting shaft touched her womb. \n\nHer body collapsed under his, the muscles growing lax as she lost consciousness.\n\nHe grunted as the last pulse of his seed left him, letting her legs slide from his arms, holding himself up with his elbows as his head came down next to hers. Kissing her ear, breathing deeply of the smell of her arousal and their pleasure as it mixed in the air around her, he smiled sleepily. \"You're wonderful,\" he breathed. He muttered a few guttural phrases in a dialect that she wouldn't recognize even if she were awake, feeling her relax into an even deeper sleep under him.\n\n~~~~~~~~\n\nBrianna Temple woke slowly, her mind fuzzy as if she'd had too much to drink. She stared at the familiar walls of her dorm room in confusion, feeling as if something had happened to her, something important, but she couldn't quite put her mind to what it was.\n\nSitting up in bed, she felt even more confusion as the sheet fell from her body, leaving her naked from the waist up. She lifted the rest of it, staring down at her naked lower half. She never slept naked. Not here in her dorm room. It was Grand Central Station in here most of the time, people coming and going with just a quick knock on the door.\n\nShe pushed her legs out of the covers and reached for her robe, standing before sliding her arms into its thick bulk and wrapping it around her small waist.\n\n\"Ouch,\" she groaned, her body aching as if she'd been run over by a cement mixer and left for dead. \"What did I do last night?\"\n\n\"I don't know, but I sure as hell want the dreams you were having.\" Her roommate stepped into the room, her arms loaded down with books. \"I swear, if I ever meet a man who could make me sound like that, I'm running away with him to some quiet place and let him fuck my brains out.\" Christy Stevens, a long legged redhead with big green eyes and a higher IQ than Einstein, grinned and dropped the books on her desk with a loud thud.\n\n\"I was moaning?\" Bria asked, her pale skin flushing quickly. She pulled her long, dark hair out from under the collar of her robe, wincing as the muscles protested.\n\n\"Moaning, groaning, whimpering, I think I even heard some begging in there. Trust me, doll, I was completely jealous.\" She stopped grinning suddenly as she watched her friend rubbing her arm. \"What's that?\" Her hand came out, grabbing Bria's hand in her own. She pushed up the sleeve of her robe, showing Bria her wrist. It was angrily red and chafed raw in spots, bruised around her thumb.\n\n\"Oh, wow. I don't know.\" She winced as Christy pressed down slightly on one of the spots. \"I hurt like hell today, Chris. And I woke up naked.\" \n\n\"You don't sleep naked.\"\n\n\"I know,\" Bria said, sarcasm laced lightly through her voice. \"That's why it seems so weird.\" She held up her other arm, staring at the same kind of bruises and red marks on that wrist. \"It looks like I was tied up.\"\n\n\"Were you?\" Christy let go of her arm, going over to sink down on her bed.\n\n\"I... I don't think so. I remember going to bed last night when I got back from going out with that new guy from the Chem. lab. You were asleep when I came in. I put on my jammies and got in bed.\" Bria closed her eyes, that same niggling thought that remained just beyond her grasp bugging her.\n\n\"No kinky sex games with the new Chem. guy?\" Christy asked seriously.\n\n\"Chris, you know how I feel about that. I... I haven't been with anyone since Jeff died.\" Jeff had been her high school love. They had started college here at Eastern Michigan University in Ypsilanti, Michigan, two years ago. During their first semester, a drunk driver had hit Jeff as he'd been walking across Michigan Avenue on his way back to the dormitories late one night. The driver had been caught five days later, Jeff's blood and hair still on the bumper of his car.\n\nBria had almost quit school then; the only thing keeping her here was the fact that Jeff wouldn't want her to give up her dreams of becoming a veterinarian. She'd gone out with guys, but she never let one get close, not since that night two years ago.\n\n\"I've heard that in dreams, if you die in your dream, you die in real life. Not that I actually believe it, but maybe your long sexual abstinence caused you to have some really kinky dream and your body, in its sexually starved state, believed what happened to be real?\" Christy stood up, reaching out for the tie on Bria's robe. \"Let's see if you have any more marks.\"\n\n\"Hey,\" Bria smacked Christy's hand away from her robe, backing up as her friend followed her. \"Knock it off!\" They fell on Bria's bed, her robe parting slightly, exposing long legs and the hint of hip as they struggled, laughing.\n\nThere was a knock on the door and it opened before the two girls could get up. They froze, Christy on top of Bria, her leg between Bria's thighs. \n\n\"I told you anyone rooming with Christy would have to be just as freaky as she is,\" a male voice said.\n\nBria pushed Christy off of her, exposing a large amount of hip to the two guys who stood just inside the door as she quickly straightened her robe. \"Shut up, you two.\"\n\nRyan and Mike Richardson, twin brothers who were good friends of Christy's and had a lot of the same classes that she did walked in and plopped down on Christy's bed. Chris had told Bria of some wild things the three of them had done, trying to talk her into dating Ryan who had a crush on Bria.\n\n\"Yeah, quit messing with my girl,\" Christy said, sitting up and putting her arm around Bria's shoulders, her hand toying teasingly with the neckline of Bria's robe.\n\n\"Nice, Chris,\" she said, slapping the laughing girl's hand away and getting off the bed. She went to her dresser, pulling out the two top drawers and searching through the neatly folded clothing. \"They aren't there.\" She looked at Chris. \"The clothes I wore to bed last night, where are they?\"\n\nChristy got down and stared under the bed. Slowly she reached under, her hand hesitant as she pulled out dark red silk, rent in two.\n\n~~~~~~~\n\nGoing to class was difficult for Brianna after finding the nightgown. It triggered a haunting memory of a man, no one she could remember seeing before. She just remembered blue eyes that gazed with such heated desire at her. She needed to find Matt, the guy she'd gone to the movies with last night. She needed to talk to him about what had happened on their date.\n\nCatching up to him after her English Lit. class, she snagged his arm, drawing him off to the side of the wide sidewalks that bisected the campus.\n\n\"Hey, Matt. Can I talk to you?\" Now that she'd found him, she wasn't quite sure what to say to him.\n\nMatt was tall and lean with dancing hazel eyes that never seemed serious. He had a contagious smile, slightly crooked that showed off a deep dimple in his right cheek.\n\n\"Sure, Bria, I've got lab in about twenty minutes though, so maybe we could do this later?\" He reached out and tucked a stray strand of dark hair behind her ear.\n\n\"It won't take long, I promise.\" She tried to smile back at him but her mind was on the strange things that were happening to her.\n\n\"Walk with me?\" Matt said, swinging his backpack up over his other shoulder and offering her his arm. When she took it, he started off on the same sidewalk, slowing his long legged pace somewhat for her. \"So what's up?\"\n\n\"Did anything strange happen last night?\" she asked before she could talk herself out of it. \"I mean, did anyone... God, I don't know, um, stop us or kidnap me or something?\"\n\nMatt stared down at her as if she were joking. \"Kidnap you? What are you talking about Brianna?\"\n\nShe sighed heavily, knowing she sounded crazy. But that's how she was beginning to feel, crazy. \"Can't you humor me Matt? Please? Just tell me everything we did last night, from the time you came and got me at my dorm room until you left me at the door. Please, I know it's nuts, but I'll try to explain after you tell me.\"\n\n\"Okay,\" he said. \"Um, I came and got you around 8:00, we went to the late show, saw the movie \"Mr. Brooks\" which we both really liked. Stopped at the Meijer's store on Carpenter Road so you could pick up some apples. Then we went to the coffee shop outside Arborland. We got home around 1:30, 2:00 at the latest. I dropped you off at the door of your dorm room and went back to my apartment.\" He stopped and took her arms gently. \"You were never kidnapped when you were with me, never out of my sight except for when you hit the ladies room after the movie. And you had an excellent time, which makes you want to ravish my manly form and very definitely want to go out with me again.\" He tried to lighten the mood and smiled down at her, sobering at her frowning expression. \"What's going on?\"\n\nShe tugged up her sleeves, showing him the dark black bruises, the chafed marks on her wrists. Then she tugged the neckline of her shirt aside slightly, showing him something she hadn't even shown Christy, a love bite on her shoulder, just above her collarbone. \"Christy said I was dreaming last night, that I was moaning and crying out in my sleep. She went to class this morning and when I got up, I was naked and had these bruises. Then Christy found a red silk nightgown under my bed that was ripped in half. I don't even own a nightgown like that, Matt.\"",
        "He took her hand, staring at the marks on her wrist. \"I've never seen a dream do anything like this, and if the nightgown was real, someone must have been in your room last night. Did you call the police, or campus security?\"\n\n\"And tell them what? I had a date with you, was wiped out when we got back and went to bed. The next thing I know, I'm waking up, still in my bed but the pajamas I wore last night were gone, I can't find them anywhere and I'm naked.\"\n\n\"They could take blood tests, find out if you've been drugged. If you were moaning, maybe you were having some kind of bad reaction to a drug. There are security cameras, they could see if you left your room last night. You need to call them, Bria. If you want, I can skip this lab and go with you.\" He pulled her close, hugging her gently as she rested her head against his shoulder.\n\nThe next thing he knew, he was flying through the air, landing about four feet away in the grass next to the sidewalk. Brianna stared down at him as he looked up at her in shock. \"You could have just said no, Bria,\" he said, feeling a little hint of anger as he got up and brushed the grass off his jeans.\n\n\"I didn't do that, Matt. Honest.\" Her eyes were wide with shock.\n\n\"Well, I didn't send myself flying.\" He glared at her for a second. \"I have to get to lab,\" he said finally, turning and walking away from her.\n\nShe watched him leave, feeling frozen to the spot. She couldn't figure out what was happening to her. One minute she'd been feeling comforted in his arms, grateful for his help, about to accept his offer, and the next, she was standing, feeling him torn from around her, watching him hit the ground. She hadn't pushed him, had she?\n\nHe turned once before he was out of sight, hesitating for an instant, then she saw him shake his head and turn back towards his class. Brianna knew she was on her own.\n\nShe walked into the security office twenty minutes later, her arms wrapped protectively around herself. Eastern Michigan University had a decent size security system, set up primarily during the late 1960's, early 1970's when a serial killer by the name of John Norman Collins had been making the rounds of the Universities here and in Ann Arbor. Co-eds had been disappearing off campuses and reappearing dead in deserted fields all over Washtenaw County.\n\nIt had been upgraded throughout the years, new technologies installed and learned until it was a force of its own. Walking into the office almost felt like walking into a police station. It made Brianna nervous.\n\n\"Can I help you?\" a stern faced older man sitting at a front desk asked Brianna nicely, as if noting her hesitation.\n\n\"I'm not sure. I'm not sure if...\" she hugged herself a little tighter and tried to smile. \"I don't know if a crime occurred or not. I just...\"\n\nHe held up a finger, dialing the phone in front of him and speaking into it. Then he got up and held the small gate that divided the waiting area from the actual offices. \"Go on back to the second door on the right, Miss. One of our investigators will be there to help you.\"\n\nShe slid through the door being careful not to touch him and hurried down the hallway he'd indicated, peering nervously into the second doorway. It was a small office, an older lady sitting at a desk. She looked up from the file she was looking at when she heard Brianna and stood, gesturing towards the chair across from her desk.\n\n\"Come on in. My name is Sharon Blass.\"\n\nBrie stepped over the threshold of the door and then stopped dead in her tracks. An excruciating pain, starting in her groin and emanating outward in waves of blinding, heated agony engulfed her. She gasped, bending over at the sudden pain. Sweat broke out on her forehead, prickly heat engulfed her face. She became nauseous and inhaled deeply.\n\n\"Are you okay?\" Sharon stood up from behind her desk, starting around it to reach the girl that stood so unsteadily, her face turning white, her hands clenched around her middle.\n\n\"No,\" Bria moaned. \"Don't touch me.\" She backed away, hurrying out of the room. She turned and ran towards the swinging door next to the receptionist desk, bursting through it with enough force to have it slam into the wall, leaving a dent in the already stained paint. She hurried out the front door, almost running by the time she reached the sidewalk outside.\n\nBy the time she was two hundred yards from the front door of the security office, she felt fine, as if the pain had never been there. There wasn't even a twinge leftover. Sinking down on the first bench she passed, Bria buried her face in her hands and wept.\n\nStrong hands came down upon her shoulders, squeezing gently, comfortingly, before releasing. Someone sank down on the bench next to her and a handkerchief was put into her hands.\n\n\"Come on,\" a gentle male voice said. \"It can't be that bad.\"\n\nBria lifted drenched brown eyes to the face of the stranger next to her. For one moment, she was startled by the almost unreal beauty of his face. Longish black hair trailed to his shoulders, eyes that were a startling blue, the color of corn flowers and morning glories were framed with thick black eyelashes. His features looked as if carved by angels determined to create perfection in the male form, including perfectly cut dimples that capped a mouth made to smile.\n\nHer eyes traveled over his face as if mesmerized, coming to a stop at the white clerical collar that surrounded his neck. \n\n\"I'm Father Joseph Christophe,\" he said, smiling at her reaction. \"And I'm a fantastic listener if you'd like to talk.\" He held out his hand for her to shake.\n\nBria reached out slowly, taking his strong hand in her own shaking one. He held it for a moment, his eyes traveling to the marks around her wrist that her movements had uncovered. \"I...\" she said, trying to untangle her hand from his. \n\nHe held on, his thumb brushing gently over the raw marks. He turned her hand over, seeing the deep bruise under the ball of her thumb. \"Is the other one the same?\"\n\n\"Yes, but...\"\n\nHis eyes closed and his lips moved quietly for a few seconds, then he abruptly let her hand loose. He looked into her eyes, cocking his head to the side. \"Are you okay? I saw you rush out of the security office. Did you report whoever did this to you?\"\n\n\"I don't know who did this to me,\" she muttered angrily. \"I woke up with these.\" She wiped at her eyes with the clean white handkerchief, swiping away tears of pain and illness. \"I don't know what is going on.\"\n\n\"You don't remember who hurt you?\" Father Joseph asked, incredulous. \"My child, those are pretty black bruises, it had to have hurt.\"\n\n\"That's just it.\" She looked up at him with panic filled eyes. \"I went to bed in my own room last night and woke up with these. My roommate told me I was moaning and crying out in my sleep. Could I have done these to myself?\"\n\nFather Joseph, his blue eyes shining with worry, took both of her hands in his. He rubbed his thumbs across the back of her hands, searching her eyes. His narrowed as if he'd found something but wasn't sure what. \"What's your name?\" he asked suddenly.\n\n\"B...Brianna Temple, Father. Please, do you know what's happening to me?\"\n\n\"I know that name,\" he said quietly, still holding her hands. \"Why do I know that name?\" he asked almost as if speaking to himself.\n\n\"Father?\"\n\nBria looked up, seeing the concerned face of Sharon Blass above her.\n\n\"Sharon, just the lady we need to see. Bria, this is Detective Sharon Blass of the campus police. She deals with these kinds of crimes. I think you should tell her your story.\" He felt the girl begin to shake, her hands pulling against his, as if trying to flee. \n\n\"N...no, I'm f...fine. P...please, father, let me go.\" She struggled, growing more panicked with each second as she felt her skin start to burn, the priest's hands causing the pain to grow even worse. \"Please!\" she half screamed, half moaned, finally yanking her hands away, getting up and running from the bench.\n\nFather Joseph sat where he was, watching her, his blue eyes growing dark. There was a blackness about the girl, an unnatural darkness that caused a shiver of fear in his heart. \"Sharon, do you know who she is?\"\n\n\"No Father. She came into my office about ten minutes ago and then flew out just like she did here. There's something off about this,\" she said quietly, sinking down on the bench next to the handsome priest. \"Did she give you her name?\"\n\n\"Yes, Brianna Temple. I've heard it before somewhere, I'm just not sure where.\" His brow furrowed in thought as he watched the girl turn the corner and disappear around one of the buildings on campus. \"Her wrists were bruised, chafed raw in places. I'd say she'd been tied up.\"\n\n\"Her demeanor seems to indicate some kind of attack,\" Sharon mused. \"God, I hope we don't have another rape. Can't these college boys keep it in their pants?\"\n\n\"I certainly hope that was a rhetorical question,\" he said, staring at her from under his thick lashes. \n\nShe laughed. \"Yeah, yeah it was, father. I guess I'll be keeping an eye on Brianna Temple.\" She stood, letting her hand rest against Father Joseph's black shirted shoulder. \"Thank you, Father.\"\n\n\"I didn't do anything but sit on a bench, Sharon.\" He glanced up as she left, but then went back to staring at the building that Brianna had disappeared around, a thoughtful expression upon his face.\n\nTo be continued..."
    ],
    "authorname": "Daniellekitten",
    "tags": [],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/joined-by-the-night"
}