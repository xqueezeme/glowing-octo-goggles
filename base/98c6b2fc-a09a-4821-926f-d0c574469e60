{
    "title": "Life after the Lottery Ch. 55",
    "pages": [
        "At the end of the last chapter, I was taking Linda up to the bedroom for some special time. What happened later we were not prepared for. In the process, I learned much more about Dawn than I knew.\n\n*****\n\nLife after the Lottery, CH. 55\n\nWe were not prepared\n\n\"Linda, would you come with me?\" I asked standing.\n\nLinda looked at me, then Dawn, then back at me. I reached out, and she took my hand. I pulled her up and led her into the house.\n\n\"What are we doing?\" Linda asked.\n\n\"I told you I had something for you.\"\n\nI led Linda up the stairs to my bedroom.\n\n\"I will be right back,\" I told her as she stood there.\n\nI went into my closet and grabbed a small bottle.\n\n\"Come with me,\" I told her as I led her to the shower.\n\nI pulled up her temperature selection on the panel and waited until the water got warm. I took her hand and led her into the shower.\n\n\"I like this,\" Linda said picking up the bottle of body wash.\n\nI took it from her and put it back. She stood looking at me.\n\n\"I am going to wash you,\" I told her.\n\nI took the showerhead and rinsed her body down well. Then I took the body wash and proceeded to slowly wash her magnificent body. After I had her soaped up, I got the shampoo and washed her hair. After that, I took my time slowly rinsing her off. Linda was standing there just watching.\n\n\"Feel better?\" I asked.\n\n\"Yes.\"\n\n\"Stand still,\" I told her.\n\nI picked up the other bottle and opened it.\n\n\"What's that?\"\n\n\"Shhh.\"\n\nI poured some of the oil in my hands and worked it, then started at Linda's face and worked it slowly into her skin. After I had finished her face, I started on her shoulders and neck. When I did this for Dawn, it took about 20 minutes. A few minutes later, I was working the oil into her back and hips.\n\n\"James?\"\n\n\"Shhh.\"\n\nWhen I finished at her feet, Linda was completely relaxed. I rinsed here off lightly and led her out of the shower. I stood her in the middle of the floor and took my time drying every inch of her body as she watched. I took her towel and slowly dried myself with it, smelling the oil mixed with her scent.\n\n\"James, I feel funny.\" \n\nI took her to the bed, pulled the covers back then laid her on the black silk sheets on her back. I picked up the remote and dimmed the lights then stood and looked at her beautiful long body as she looked up at me. I slid into the bed next to her and held my finger up to my lips.\n\n\"Close your eyes,\" I whispered. Linda hesitated then closed her eyes.\n\nI moved down to her feet and slowly began to run my fingers over one foot. I heard her inhale sharply. I had found a lot of Linda's erogenous spots already, but now I was going to completely map her body. I had already discovered her body was amazing. She had so many places. I thought that it was from her never having had love from her husband. About 15 minutes later, I had worked my way from her foot up to her hip bone; making plenty of mental notes. Even though I was just lightly feeling the changes when I touched her in places, Linda was breathing hard.\n\n\"You need to relax, or you will never get through this,\" I whispered to her. \"Breathe nice and deep for me.\"\n\nI waited until she slowed down her breathing then moved to the other side of the bed and covered her other leg and foot. Linda was breathing nice and slowly now as she relaxed.\n\n\"Breathe.\"\n\nI started mapping all of her erogenous places on the side of her hip and her ribs then I did her arms slowly. I took my time with her hand because they had so many places. I heard Linda exhaled deeply.\n\n\"Just breathe nice and slow,\" I whispered.\n\nI moved back to the other side of the bed and started on her hips and ribs. A little while later I finished with her other hand.\n\n\"Are you okay?\"\n\n\"yes...\"\n\nI leaned over and kissed her lips gently. I placed my fingertips on her face and started. I had already found the spots she had on the side of her neck and shoulders. This part took more of my concentration. I ran my fingertips all over her face, ears, lips, and neck. She was breathing faster again.\n\n\"Breathe slowly for me, please.\"\n\nOnce she slowed down, I was ready.\n\n\"I need you to relax and just go inside yourself and think of nothing for me.\"\n\nI had my fingertips on her neck and waited. Once she was where I wanted her to go, I began exploring her shoulders. When I finished there, I started working on her chest. Before I mapped her breasts, I waited for a few minutes.\n\n\"Breathe.\"\n\nI started the slow process of mapping her breasts, abdomen, and stomach. I was gauging where she was as I touched her. She was deeply relaxed.\n\n\"Breathe for me.\"\n\nI began to run the tips of my fingers over her waist slowly back and forth, moving down about a quarter of an inch with each pass. I felt her change when I touched the skin next to her hip bone and mound. I stopped and felt slowly. She was still deeply relaxed, so I continued. I was smiling to myself because she was such an amazing woman. After exploring her inner hips and the top of her mound I stopped.\n\n\"Linda, breathe for me and just relax, please,\" I whispered. \n\nI sat and watched as her chest rose up and down. I began the delicate process of exploring her lower mound and the area around her pussy, including her inner thighs. I stopped and felt her tenderly. She was still very relaxed. I needed her this way to feel the subtle involuntary movements beneath my fingertips. I already knew where all her spots were on her pussy. I moved back up to her head and gently kissed her lips again.\n\n\"I am happy you have relaxed so much for me. I need you to do that for me. I am going to help you roll over on your stomach, okay?\"\n\n\"emmm...\"\n\nI slowly rolled her over on her stomach. I took her arms and pulled them back and took her head and turned it to the side. Linda was more relaxed than I thought I would get her.\n\nI started back at her feet. I took me another hour or more to explore all of her backsides, including her ass and the backs of her legs. I finally moved all the way up to her shoulders and retraced the spots I had already found. I leaned over and whispered in her ear.\n\n\"You are doing great. Just a few more minutes.\"\n\nI placed the tips of my fingers at the base of her spine.\n\n\"Can you feel that?\"\n\n\"emmm...\"\n\n\"Linda, I want you to concentrate on where my fingers are touching your skin. Just keep breathing deeply, but I want you to feel the tips of my fingers touching you gently.\"\n\nWhat I did next was more for my benefit. I placed the tips of my fingers on top of her SI joint and waited. What Linda wouldn't know was that as she concentrated on where my fingers were touching her spine, I would feel feedback once she focused there. I slowly worked the tips of two fingers up her spine, about an eighth of an inch at a time and waited.\n\n\"Breathe, and feel,\" I whispered.\n\nThis took time and was delicate. It had taken me a long time to map Dawn, but it as worth it. I had only barely explored Sam and Amy. I moved slowly up, occasionally pausing and backing up a fraction of an inch. By the time I reached her mid-back, I could tell she was focusing faster on where my fingertips were touching her.\n\n\"Breathe,\" I whispered.\n\nI continued my journey until I was at the base of her neck. I was discovering she was surprising me. She had some incredible places that her focus was laser sharp.\n\n\"Thank you for relaxing for me, just like I asked. Just a few more minutes,\" I whispered.\n\nI felt the back of her neck. She wasn't asleep but in deep relaxation. I finished by slowly moving my fingertips along the vertebrae in the back of her neck. I was about half way up when I felt something different. I stopped and left my fingers in that spot. I could feel Linda's energy at that point. It wasn't anything unusual; Dawn had taught me a lot about this spot. She used it a lot on her patients. But, Linda felt different. I kept my fingers there and closed my eyes and concentrated. I had to be careful I didn't let her feel anything but the impulse of my fingertips.\n\n\"Breathe, for me,\" I whispered as I concentrated. I took a long time feeling this spot. I had not felt it before. \n\nI stopped concentrating and kept moving until I was at the base of her head. I ran my fingertips along the bones behind her ears because Dawn had places there. When I finished, I lay next to her for a few minutes. I had learned a lot about my lover.\n\n\"Thank you, Linda. I enjoyed touching you all over. Do you remember the first time I gave you a massage? I slowly ran my hands all over your body, tenderly touching you in places that no man has ever touched you before. You remember that? You remember that it took me a very long time as I slowly ran my hands all over your body. I remember how aroused you got when I rubbed your thighs and your hips. I could feel how aroused you got. You remember? I am sure you do. Think about that night for me.\"\n\nI was whispering quietly into her ear. I knew she was thinking about that time.\n\n\"When I was rubbing all that warm oil onto you, I remember how you reacted when I was running my fingers all over your ass and hips. Do you remember that? I'm sure you do. I remember how good you felt as I slowly touched you all over. I knew it was the first time any man had touched you all over like that. You felt so good under my hands as I ran them all over your body.\"\n\nI could feel her energy changing, even though I wasn't touching her.\n\n\"Linda, do you remember at the end when I was rubbing the tops of your thighs and your mound. I remember that. I felt all of your arousal coming through my hands as you grew more and more aroused. You remember that? I am sure you do. Remember that part? Just keep remembering how you got more and more aroused as I touched your warm naked flesh. Remember how you felt, how you felt the first time any man had touched you like that. So gently and tenderly. You remember that? I am sure you do.\"\n\nI let Linda recall that all in the back of her mind as she lay there so deep into relaxation. No time was passing for her.\n\n\"As I touched you on the places that aroused you more and more, you opened your eyes and looked into mine. We looked deep into each other's soul for a minute. Then you remember what happened? I am sure you do.\"\n\nLinda inhaled deeply as I watched her face.\n\n\"ahhhhhhhh...\" came from deep within her.\n\n\"Just feel it, Linda. Deep inside of you building.\"\n\nLinda was breathing differently now as I watched her.\n\n\"Feel the tension building deep inside you now, Linda.\"\n\nI waited.\n\n\"Ahhhhhhhh...\"\n\nLinda was gently trembling as I watched without touching her.\n\n\"Ohhhhhhhh!\"\n\nLinda jerked slightly.\n\n\"Oh, my, god,\" came from her.\n\nShe opened her eyes and looked into mine.\n\n\"Hi,\" I said.\n\n\"What happened?\"\n\n\"I don't know. Tell me.\"\n\n\"Ohhh. I fell asleep and woke up having a crazy dream and then I had an orgasm...I think.\"\n\n\"Nooo. That couldn't have happened,\" I said smiling at her.\n\n\"What time is it? I guess I fell asleep for a few minutes.\"\n\n\"It's 1:00.\"\n\n\"What? We came up here at 9:00? What did you do to me?\"\n\n\"You remember me telling you about mapping all of Dawn's erogenous places?\"\n\n\"Yes.\"\n\n\"I just did yours.\"\n\n\"Oh, no. James, I am sure I had an orgasm just before I woke up.\"\n\n\"How could that happen? I was just lying next to you talking to you.\"\n\n\"I remember it...James! Did you hypnotize me?\"\n\n\"I couldn't do that. You said you wouldn't let me.\"\n\n\"You did, didn't you?\"\n\nI saw a smile come across her face.\n\n\"I was just talking to you while you were asleep.\"\n\n\"James...did you really do that to me?\"\n\n\"Linda, let me explain something to you. Your mind is very powerful. I just suggested a few things. Your mind did the rest.\"\n\n''Wow.\"\n\n\"Are you tired?\" I asked.\n\n\"No. Actually, I feel great and rested.\"\n\n\"Good.\"\n\n\"James, what was that you rubbed on me in the shower?\"\n\n\"Just some oil Dawn likes. I thought you would like it.\"\n\n\"It made my skin tingle where you were touching me.\"\n\n\"It relaxes Dawn.\"\n\n\"It did that. Are you sure it is 1:00?\"\n\n\"Very sure. It takes me three or four hours to find all of your erogenous spots.\"\n\n\"Oh, no. I am going to regret you doing that, won't I?\"\n\n\"I don't think so.\"\n\nLinda rolled over on her back and looked at me.\n\n\"What now?\" She asked.\n\n\"What do you want?\"\n\n\"I feel so good...I want you to make love to me, James. Passionate love.\"\n\n\"If that is what you want my love, I will make love to you like I have never made love to you.\"\n\n\"Uh, oh.\"\n\n\"Linda, you will feel incredible pleasure and oneness with me. You will scream with great pleasure; you will feel incredible orgasms tearing through your body, over and over and over. You will experience pleasure you never thought you could ever feel,\" I told her as I smiled at her, planting those thoughts into her subconscious.\n\n\"Okay, you sold me. Now do it!\" Linda said giggling.\n\nI rolled to her and placed my mouth over hers. Her giggling stopped, and she grabbed my head and pulled me to her lips for several minutes.\n\n\"Ohhh...\" came from Linda.\n\n\"I wasn't kidding.\"\n\nLinda looked into my eyes deeply.\n\n\"You are serious, aren't you,\" Linda said. I smiled at her. \"On second thought, maybe I do need some sleep,\" Linda said. \n\nI placed my mouth back over hers. I removed it a few minutes later, and she looked into my eyes.\n\n\"Oh, god,\" she said.\n\nI placed my lips over hers again and moved on top of her. When I stopped kissing her, I started kissing slowly down her neck, taking advantage of the places I had found.\n\n\"James...\"\n\n\"Shhh...\"\n\n\"No...no shhh this time. What are you doing to me?\"\n\nI kept kissing and licking on her neck until she was breathing harder. I moved my lips and started kissing on her shoulders gently.\n\n\"James...\"\n\nLinda was melting beneath me as I kissed her. I kept moving my way down to some new places I had found on the sides of her breasts.\n\n\"Ohhhhhhh...\" she moaned.\n\nBy the time I was at her hips, Linda had already had one gentle orgasm.\n\n\"James...what are you doing to me...\"\n\nI looked up at her.\n\n\"Do you trust me?\" I asked.\n\n\"Of, course I do.\"\n\n\"Will you let me do anything to you?\"\n\n\"Yes.\"\n\nI placed my lips back on her mound and started kissing her.\n\n\"Ohhh...god...\"\n\nI gently spread Linda's legs apart so I could get between them. I took my time kissing and licking some new places on her mound. Linda was moaning softly. I kissed her gently and moved my way down to her inner thighs and started licking on a particular place I had found.\n\n\"Jaammesss...ohhhhh...oh god...\"\n\nI had my hand on her mound feeling her arousal slowly building as I avoided her pussy lips.\n\n\"ahhhhhhh...\"\n\nI moved to her other inner thigh and began to kiss her gently as I ran my lips tenderly over the flesh on her thighs that were now covered in goose bumps. I could feel her arousal growing and growing. I knew she felt something, but she didn't know what was happening. I moved down to her knee and very slowly ran my tongue up her leg, over a few new places I had found. I could feel her muscles tensing as I moved to the top of her leg. Linda was quiet now. I ran my tongue all the way to the bend of her leg next to her pussy lips. Then I ran my tongue through the crease in her skin. I felt her tense up more. I removed my tongue from her body.\n\n\"Breathe for me.\"\n\nI gently blew on her pussy lips then kissed them.\n\n\"Ahhhhhh!!\" Linda screamed and started thrusting her hips up into the air over and over. \"Fuck!!\"\n\nWhen Linda started gushing her juices, I used my tongue and licked them up.\n\n\"Ohhh, god!!\"\n\nAnother massive orgasm ripped through her body as she jerked repeatedly. I ran my tongue through her juices again and sat up and looked at her as her muscles twitched and she jerked slightly. I was worried because she was breathing so hard. I placed my hands on her thighs and calmed her down. She finally relaxed and opened her eyes and looked at me.\n\n\"What did you do to me?!\"\n\n\"Nothing yet. I was just kissing your body.\"\n\n\"Bull shit! What did you do?\"\n\n\"Linda, is that what you are really thinking about at this moment?\"\n\nShe looked at me a minute.\n\n\"No. James, I have never had an orgasm, orgasms, like that before.\"\n\n\"Without having a cock inside you?\"\n\n\"Or your tongue. James what did you do?\"\n\n\"I just pleased you.\"\n\n\"You did!\"\n\nI ran my hand over her smooth mound.\n\n\"Ohh, not yet.\"\n\nI took my hand off of her and smiled at her.\n\n\"James, did you do that by pushing your energy into me?\"\n\n\"Nope.\"\n\n\"Then what did you do?\"\n\nI moved over Linda and looked into her blue eyes. I gently placed my hand on the side of her face.\n\n\"Trust me?\"\n\nI slowly turned Linda's head to the side. I gently blew on a place on her neck I hadn't known about, then kissed her there and ran my tongue up to her ear.\n\n\"Ahhhhhhh!!\"\n\nLinda started humping her pussy up hard as she came again.\n\n\"Ohhh!! Fuck!!\" She screamed. \"Stop! Please.\"\n\nI turned her head back and kissed her lips.\n\n\"Fuck, James! What are you doing to me?\"\n\nI rolled to her side, and she turned her head and looked at me.\n\n\"You remember what I told you about Dawn having well over 100 erogenous places on her body. Places that I could touch and she will get aroused?\"\n\n\"Yes.\"\n\n\"You have 147.\"\n\n\"You can't know that!\"\n\nI took my hand and placed the tips of my fingers on a spot about three inches below her armpit and rubbed. This time I made sure she felt the tingle from my fingertips.\n\n\"Oh fuck! Stop!\"\n\n\"That is number 112,\" I told her.\n\n\"Jeez.\"\n\n\"Would you like for me to show you the other 146?\"\n\n\"Not right now! You were serious about what you said about Dawn?\"\n\n\"I am always serious about these things. As Dawn has gotten older and more in touch with her body, she now has 198. But, it really doesn't make much difference anymore.\"\n\n\"Why?\"\n\n\"Linda, you haven't been listening. I can touch Dawn anyplace on her body and drive her to an orgasm. Her entire body is an erogenous spot for me.\"\n\n\"Is that because you two...feel each other's energy?\"\n\n\"Yes, but she does have 12 places I should tell you about,\" I said smiling.\n\n\"You mean, you can show me where to touch her, and she will respond?\"\n\n\"You have to do more than touch her. I would suggest gentle kisses and your tongue.\"\n\n\"You have to show me!\"\n\n\"I will, but Dawn will know I showed you.\"\n\n\"I feel incredible. I never knew that I had these places.\"\n\n\"I will show Rachel a few she can use.\"\n\n\"Can you show me some on her body? Do you know where any of hers are yet?\"\n\nI smiled at Linda.\n\n\"Of, course you do.\"\n\n\"I'm ready to make love to you,\" I told her.\n\n\"No more spots!\"\n\n\"Maybe. I do want to explore your energy.\"\n\n\"Oh, god.\"\n\nI reached down and found her pussy lips and ran the tips of my fingers over them.\n\n\"Emmmm. Back to normal,\" Linda said.\n\n\"Would you like to feel something?\" I asked.\n\n\"Is it your energy?\"\n\n\"A little.\"\n\n\"Am I going to have another orgasm like the others?\"\n\n\"No.\"\n\n\"I guess.\"\n\nI moved and sat up between Linda's legs. I gently touched her pussy lips, and she jumped.\n\n\"What was that!?\"\n\n\"Sorry, too much.\"\n\nI placed my fingers on her pussy lips and slowly ramped up what she would feel.\n\n\"Ohhh...wow. That is coming from your fingers?\"\n\n\"Yes.\"\n\n\"I have felt that before when you were touching me. I didn't know you were doing it.\"\n\n\"Linda, I can't do this to every woman. You are one that can feel me.\"\n\n\"All women can't feel that?\"\n\n\"No.\" I pushed a little more.\n\n\"Ahhh! That feels incredible.\"\n\nI slowly slid my fingers into her while she was feeling the tingle.\n\n\"James!\" \n\nI slid my fingers in until I found one of her spots and added a little more energy.\n\n\"Oh, god!! Stop!!\" \n\nI stopped the energy flow and just rubbed her insides.\n\n\"I haven't felt that from you before.\"",
        "\"Dawn says it can be intense.\"\n\n\"It is.\"\n\n\"Are you okay?\"\n\n\"Oh, yes.\"\n\nI slid my fingers out of her pussy and rubbed her juices on her nipple. I slow built up the energy flowing from my fingertips.\n\n\"James, are you doing it again?\"\n\nI kept rubbing and adding more energy until I felt the tingle.\n\n\"Emmmm, that feels amazing.\"\n\nI kept rubbing around her hard nipple as I watched her areola fill with blood. Linda had closed her eyes and was just feeling what I was doing.\n\n\"Ohhhh... stop.\"\n\nI removed my fingers from her nipple.\n\n\"James, I am enjoying your touch. But, I want to ask you something?\"\n\n\"Okay.\"\n\n\"Is that how you drive me to incredible orgasms when you are fucking me?\"\n\n\"No.\"\n\n\"Never?\"\n\n\"A few times when we started because you were holding back.\"\n\n\"Really?\"\n\n\"It just opens up your energy to mine.\"\n\n\"What do you mean?\"\n\n\"When I touch a woman, it only takes me a few seconds to determine if she can feel me. If she can, but is resisting, I can open up her flow of energy from me.\"\n\n\"How?\"\n\n\"I don't know.\"\n\n\"Is that what you did to me?\"\n\n\"Sometimes. Are you ready? I'm still going to make love to you.\"\n\n\"Promises, promises,\" Linda said smiling. We laughed. I rolled next to her and rubbed her breasts. She took her hand and rubbed my chest for a while. We were quiet for some time.\n\n\"James?\" She was still rubbing my chest.\n\n\"Yes?\"\n\n\"It has been an incredible night so far. I have had a very good time.\"\n\n\"Good.\"\n\n\"When you and Dawn are together, and you drive her to those incredible orgasms, does it take a lot of your energy?\"\n\n\"Not what you have seen.\"\n\n\"Does it make you tired?\"\n\n\"With Dawn, no. It doesn't take much from either of us to have incredible orgasms. Once or twice we have experimented, and we wore ourselves out.\"\n\n\"What were you doing?\"\n\n\"A few times we have seen how long she can stay at the peak of her orgasm.\"\n\n\"Really. Does she do that, or do you do that to her?\"\n\n\"A little of both.\"\n\n\"What happens?\"\n\n\"It ends in some pretty crazy orgasms for both of us.\"\n\n\"Emmm, that sounds fabulous.\"\n\nLinda slowly slid her hand down until she had it wrapped around my cock.\n\n\"Tell me about what you can do to me?\" Linda asked.\n\n\"Dawn and I both have discovered that we can help you along when you are ready for it.\"\n\n\"What do you mean when I am ready for it?\"\n\n\"When you have time.\"\n\n\"What do you mean?\"\n\n\"Linda, I have pushed you to several huge orgasms, you know that. You get tired after it and want to sleep. So, if you are just stopping by, I don't do it.\"\n\nLinda stroked my cock quietly for a few minutes.\n\n\"I am here the rest of tonight and tomorrow,\" she said. \"You told me you were going to drive me to more pleasure than I have ever experienced. What did you have in mind?\" Linda asked.\n\n\"You have already had quite a night.\"\n\n\"I have...but...I want to scream with pleasure.\"\n\n\"Again?\"\n\n\"Yes! Again!\"\n\n\"I am sure I can make that happen, Linda.\"\n\nLinda released my cock and sat up next to me and looked at me.\n\n\"James...I want you to do it. Will you push your energy into me until I have an incredible orgasm and scream as loud as I can?\"\n\n\"Do you think you are ready for that? Do you think you understand more about it now?\"\n\n\"You would have to tell me. Am I capable of feeling all you can do to me? You have done it before you said.\"\n\n\"Honey, I have done it to you before, but nothing like it can be. I just helped you feel your own sensations and amplified them for you.\"\n\n\"And it was great. But, can you push me more? Can you drive me to the ultimate orgasm; something incredible I have never experienced?\"\n\n\"I'm sure I can if you want that to happen.\"\n\n\"Will you? Tonight? Right now?\"\n\n\"We can, but let me tell you something.\"\n\n\"Anything?\"\n\n\"Linda, I have done this to several women. They experienced the pentacle of orgasms a woman can have or at least as much as I can give them. But, once it was over with I regretted it.\"\n\n\"Why would you regret giving that to a woman?\"\n\n\"You have to understand something. If everything works as it should, you may have an orgasm that you may never experience again. The women I do this with did. Afterward, I told them I was sorry for doing it because they would never experience that level of arousal and pleasure again.\"\n\n\"But, James...you can always do it to me again.\"\n\n\"True, but I worry that a woman may never experience the pleasure from a regular orgasm again.\"\n\n\"What does Dawn say about it when she has those incredible orgasms?\"\n\n\"She says it makes all of her other orgasms more intense, but only because she understands where her body can go and lets herself go there.\"\n\n\"Can I learn to do that?\"\n\n\"I don't know. Dawn and I have talked about it. She is hoping Amy and Samantha can learn that.\"\n\n\"How many times have you done that to them?\"\n\n\"Once.\"\n\n\"Are they okay?\"\n\n\"Yes, but Linda, you are not like them. You are not in touch with your body and feelings like they are learning to be.\"\n\n\"James, you make me feel incredible when we are together. Since the first time you made love to me my orgasms have grown more and more intense, and as you and Dawn say, more emotional. I think it will keep growing...and...you have nothing to worry about.\"\n\n\"You are right; you are experiencing that.\"\n\n\"If you wanted to try and do that to me, do you think I am capable of responding that way?\"\n\n\"You mean a mind-blowing orgasm?\"\n\n\"Yes! Like Dawn has when you do that slow thing.\"\n\n\"Linda, I need to explain something to you. I can push some women to incredible physical and emotional orgasms like we are talking about. But, you need to know that what happens to Dawn when are doing the slow thing as you call it is completely different. You could not expect that to happen to you.\"\n\n\"Why not?\"\n\n\"What have you felt when I have pushed you to an orgasm?\"\n\n\"Wonderful things. My body is so full of every sensation that it just takes over and the feeling is incredible.\"\n\n\"What else?\"\n\n\"The muscle contractions that rip through my body make me melt and feel so wonderful. It is just a huge, incredible orgasm, that rips through my body.\"\n\n\"Anything else?\"\n\n\"I feel so excited and happy after it is over,\" Linda said.\n\nI looked at Linda for a minute.\n\n\"What are you not telling me, James?\"\n\n\"You have seen Dawn, and I, have those incredible orgasms when we are holding each other. Tell me what you saw happen to us?\"\n\n\"You two sit so still and hold each other so closely. Sometimes I hear you whispering softly to her, but not often. You two look like you are lost in your love. Then at some point, I see Dawn tremble, then scream. After that, she seems to melt into your arms. What happens to you?\"\n\n\"The same thing. We have an orgasm in unison. Once it is over, we have to hold each other for a while?\"\n\n\"Why?\"\n\n\"It is almost impossible for several reasons for us to move.\"\n\n\"Like what?'\n\n\"Linda, you are asking things that we have never told other people.\"\n\n\"I'm sorry. I'll stop.\"\n\n\"No...that's okay. Something you need to know is that when that happens to Dawn and me, it is a very complicated process of many things coming together at once. A few things are the physical sensations, relaxation, our breathing, our heart rates, and most of all our feelings of love for each other at that moment. It is not something that happens from physical stimulation; that is probably the smallest part of it. We can do that because we are connected spiritually; you and I are not.\"\n\n\"I have been curious about that because you two never move. Does it happen because you push so much of your energy into her?\"\n\nI sighed deeply.\n\n\"I don't think I can explain it to you yet. It involves years of practice. It is not something we knew we could do. We have developed it to the point it is now. What is between us is a very spiritual thing, it always has been. You need to understand something. You have felt the sexual energy and arousal I can push into you, and that Dawn can. The girls probably do it to you, but they haven't understood what they were doing until recently. When Dawn and I do that to you, we are finding your sexual energy and your arousal energy. It is sort of like finding and tuning into a frequency; it is not the same with all people. When someone gets aroused, at the surface of their feelings is the lust and desires of what they want to experience. That is what we use to find and sort of feedback to them on our level.\"\n\n\"You feel all that?\"\n\n\"Yes, from some people, remember. There are other feelings we can find and tune into.\"\n\n\"Like what?\"\n\n\"With you, we can feel your love energy, and we tune into that and give you that from us because you need it. When we can do that, it enhances the sexual feelings and arousal because the feelings of sex are very strong. Most people get off from just driving their lust and sexual satisfaction to a point they have an orgasm. Think of it as two people masturbating each other. There is no love in that for most people, just the act of having an orgasm. With us, our orgasm is all about the sum of the feelings between us and a deep connection we have.\"\n\n\"How do you know all of this?\"\n\n\"When you can feel other people's emotions and sensations, you learn what they are about. My training helps a lot. You know I have had sex with many of our friends. And...probably half of the women I just fuck. No love, no emotions, just sex. But, I love them and enjoy being with them.\"\n\n\"Did you just fuck me the first time?\"\n\n\"No, I didn't. Linda, I would have never had sex with you in the state you were in at the time if I had felt that I couldn't connect with you. The first time, I wanted you to realize you could feel great with just some simple, loving sex, and you did. That was all you needed at that time.\"\n\n\"It was. You are right, if I had felt like you were just fucking me, I would have never come back. But, even I knew there was much more to it than sex. Somehow, I knew you really wanted to help me. It felt like something from a lover even then. James, I trusted you then, and I trust you now more than ever. But, you haven't told me why what you and Dawn do is different than what you have done to me.\"\n\n\"You said you wonder about the two of us not moving?\"\n\n\"Yes.\"\n\n\"If we are not moving, how do you think we achieve those orgasms?\"\n\n\"I don't now. That is what I want you to explain to me, please.\"\n\n\"I know it is hard for you, and the other few people we have told, to understand that our love exists on a different plane and probably time than anyone else we have ever met. It is just some kind of connection we have had since we met.\"\n\n\"I still don't understand what you mean by that, James.\"\n\n\"Let me think a minute, Linda.\"\n\nThere was no way I could explain this to another human being that had never experienced it. I had to think.\n\n\"Linda, do you love me?\"\n\n\"You know I do, but...not like Dawn or your girls.\"\n\n\"Well, I think you have learned to share your love, and I believe you love me more than you think. But that is okay. When we have sex, do you feel my love for you?\"\n\n\"I know you love me, James.\"\n\n\"Do you feel it, not just know it?\"\n\nLinda looked at me for a minute.\n\n\"I do. Do you feel my love for you?\"\n\n\"Yes.\"\n\n\"Is that what you and Dawn feel?\"\n\n\"Yes, and no.\"\n\n\"I'm pushing, I'm sorry.\"\n\n\"That's okay...I just have to think.\"\n\n\"James, are you telling me that your love for Dawn and hers for you extend beyond what other people know as emotional love? Is it energy, as you call it, that only you two feel?\"\n\n\"Yes! Perfect! Let me think!\"\n\nI sat for a minute.\n\n\"Damnit!\" I yelled. \"I can't think of anything you can relate it to! I am already having trouble explaining it to Amy and Sam now that they have felt it.\"\n\n\"Maybe there is no way you can make me understand.\" Linda acknowledged.\n\n\"Linda, when we are together closely as we were earlier, tell me what you feel outside of the arousal?\"\n\n\"James, I am starting to feel sort of a oneness with you, it is hard to explain. It is like I just feel your emotions too. I am just very comfortable with how you feel to me. It is different than anything I have experienced, even from Dawn.\"\n\n\"Good! What else!\"\n\n\"I am starting to know the difference in the sexual feelings between us and our emotions.\"\n\n\"Really! Tell me what that feels like!\"\n\nLinda looked at me for a minute.\n\n\"Maybe I shouldn't, James.\"\n\n\"Please, I need to know what you feel.\"\n\n\"I...it...it may not be something that should be there between us...it may be something that has gone too far, James.\"\n\n\"Please! I need to know what level of emotions and feelings you are understanding?\"\n\n\"James...what I feel tells me that you love me more than you should.\"\n\n\"Great!\"\n\n\"No, it's not, James. I have been worried about this.\"\n\n\"No, you don't understand. I love you very much, but you do not have to worry because the deep love I feel for you has no comparison for the love I feel for Dawn! Do you remember Dawn telling you that we had love to share?\"\n\n\"Yes.\"\n\n\"It really is sharing on multiple levels. I can love you more than anyone probably other than your parents. I know from you that you had a deep love for your mother and father and even your grandparents. This is great!\"\n\n\"James, I am not sure about this. It has probably gone too far between us.\"\n\n\"No! I have been working and working with you so that you would feel that level of love again, and now you can! Wonderful! Oh wow, I need to try and explain something to you.\"\n\n\"James, slow down.\"\n\n\"Am going try and explain something to you using what you and I feel. The first time I touched you, I knew there was more to you. Even though you were in a somewhat emotionally withdrawn state, I knew. The first time I let myself make love to you, I knew there was enough to help you deep inside. Since we talk and other things, I know you trust me very much. That gives me the freedom to work with you because that trust has to be there because of the things you feel. You accepted what was happening between us and just let it grow. As things have progressed, yes, I have pushed my energies into you, but only at a level, you can handle. Any more would have overwhelmed you emotionally, and you would not have understood why. \n\nWhile we were traveling, I got to spend the time alone with you that I needed. I know you realized it since we have been back that things have changed. While we were traveling, I had been giving you more and more. That was why the sex between us was so great. But, while I have been giving you more and more, I have been taking from you the emotions that have grown in you. This is what I have to try and explain. We have told you that we can give emotions and mentioned that we can pull energy from someone. Right now, you are very open to all that I can give you, but I have to measure it, so you are not overcome by it. But, from what you're telling me, you are feeling it as I give you more. As you have grown with this, I have been able to draw your energies from you now.\"\n\n\"Like what?\" What do you take?\"\n\n\"I don't really take anything. I just let your energy run into me. If I want, I can actually pull your energy from you. I can do this on a level you could actually feel it leaving you.\"\n\n\"Can that be bad for me?\"\n\n\"Not with Dawn and me, but there are times it can be, but I will explain that another time. What I have been doing is taking the feelings of love you have for me and just drawing enough into me that you don't realize it. Now, you have to listen to me. I can draw your love for me into me and feel it very deeply. It is one of your energies I use to measure what we mean to each other. If it is on a very meaningful level and free from doubt, it is a very wonderful feeling for me. By that measure, I know what to give you back and how much.\"\n\n\"Your love?\"\n\n\"My love and dozens of other types of feelings. Since before we left on our trip that is what I have been doing when we were together. That is why you have felt more at peace and enjoyed everything more. It is also why I decided to find all of you erogenous places tonight because I can do so much with them now.\"\n\n\"Since I seem to know how much you love me, do you know how much I love you?\" l asked Linda.\n\n\"I do. I understand.\"\n\nLinda sat and looked at me concerned for several minutes.\n\n\"Linda, what's wrong?\" I asked.\n\n\"James, you and Dawn have forgotten something.\"\n\n\"What?\"\n\n\"You know how much I love you. And I know how much you love me. You said that the love you have for me is strong, but nothing like you love Dawn. You have forgotten, or don't understand, that I am not capable of sharing love on that level. James, I love you very much. What am I supposed to do with these feelings since I can't have you?\" Linda ask me as I watched her eyes well up. \"I am not like you two.\"\n\n\"Oh, my god. Linda, I am so sorry. I got caught up in your progress and didn't consider that. That explains something.\"\n\n\"What does that explain?\" Linda wanted to know.\n\n\"When Dawn needed to talk to you on the plane, she was feeling that. Now, I understand something else.\"\n\n\"What?\" \n\n\"I can't tell you right now. I'm so sorry. Linda, is the love you have for me getting in the way of you and Rachel? Is that what is holding you back from her?\"\n\n\"Honestly, yes.\"\n\n\"This is my fault.\"\n\n\"No, it's not. I just fell in love with you, James.\"\n\n\"I forget things like this. Until Amy and Samantha came into our lives, I only had Dawn to share love with. The two of them are still working through this shared loved too. You remember the time we told you that we had enough love to share with you?\"\n\n\"Yes.\"\n\n\"I guess we forgot that you had to be capable of sharing your love also. We just take it for granted.\"\n\n\"James, I need to know why you love me?\"\n\n\"Linda, I love you for several reasons. For some reason, I have a strong attachment to you. From the first time I met you I have felt that way.\"\n\n\"What do you mean?\"\n\n\"I am not sure. It was like when I met Amy the first time, then her sister. On a lower level, it is like when Dawn and I met the first time. There was no doubt between us that we were meant for each other. The connection I have with Dawn is all there is in my life. I like to look at other beautiful women, but I have never had any remote desire to do something like cheat on Dawn. It has been that way for 11 years.\"\n\n\"But, you have sex with other women.\"\n\n\"It's not cheating for either of us. It is just something we decided we could do and have some fun. Do you believe that things happen for a reason, Linda?\"\n\n\"Sometimes.\"\n\n\"The night that Amy and Dawn first made love to each other, it felt so right. Of, course, it was highly erotic and exciting as I watched, but it didn't feel wrong. Then Amy's roommate kicked her out, and Dawn told her she could live with us until she got back on her feet. When she moved in, Dawn and I knew our lives were going to change. Then when she asked if her sister could spend Christmas with us, we said okay. But, five minutes after I had met Samantha I knew she was different and was meant to be part of her sister's life and ours.\"\n\n\"How did you know that?\"\n\n\"It was a feeling. A feeling like we were in tune with them on some level.\"\n\n\"But they have ended up being like you two in some ways. What about me?\" Linda asked.\n\n\"When we were in the bikini store that day, I was watching the three of them run around half-naked while they tried on bikinis. I was sitting and watching them model as they kept changing clothes. I had a sudden feeling I needed to stand and look toward the door of the store when I heard it open. I did, and you walked in. If you remember, I walked to you.\"\n\n\"I remember. Are you saying you knew I was coming in?\"\n\n\"I guess. Once I was close to you for a few minutes, I knew that you needed my help. That couldn't have happened unless some type of connection formed between us that quickly.\"",
        "\"Was that why you invited me to your house?\"\n\n\"Yes. I knew I had to get to know you. I didn't know who you were, or anything about you until you introduced yourself. Linda, as our relationship has grown, I understand more about why we met. I also find you a very fascinating and exciting woman. I have never met anyone as confident as you are except Dawn. I knew I had to help you learn to love again.\"\n\n\"But still, I am having trouble handling and understanding my feelings for you, James.\"\n\n\"Linda, you can never have me as your lover on a level like you want. I am afraid you still think of love on a singular level.\"\n\n\"What does that mean?\"\n\n\"I have to tell you something about yourself first. When you and me and Dawn first got together on a sexual level, you had a deep trust in us. You found the sex enjoyable and incredible, something you had never experienced. You wanted more; you wanted to experiment, you wanted love. Dawn and I had many talks about you. She felt the same way about you that I did. The two of us immediately began to work with you on an emotional level before things went too far. You did very well and seemed to understand. But, you asked and wanted me to go on the trip with you so you could have me to yourself. Dawn had to let me go with you to see what happened.\"\n\n\"If she knew that, why did she agree?\"\n\n\"Dawn had to find out if I was falling in love with you. Not like I love you now, but like I love a wife. That was what you wanted wasn't it?\"\n\n\"Yes. I'm sorry. But, I knew after our trips that I could never have you all to myself,\" Linda said.\n\n\"Linda, that is singular love.\"\n\n\"But society does not allow...a man to love more than one woman when he is married. They consider it wrong and abnormal. I'm not sure that it can happen either and be equitable for the women either.\"\n\n\"Society doesn't agree with things that it can't understand. Linda, I have told you like I have told Amy and Samantha, I can love you like a wife should be loved, but Dawn always comes first. This is not like a man loving many different women and marrying all of them like it happens so he can have a harem of women he can fuck when he wants. Our society doesn't allow and doesn't understand polyamory. It never will. But, Dawn and I believe there are not many people that could actually love others on that level.\"\n\n\"But you two do?\"\n\n\"Do you believe in soul mates, Linda?\"\n\n\"I guess.\"\n\n\"The definition of a soul mate is a person that is ideally suited for another. I am talking about real soul mates. Two people that meet and have a connection like no other two people. Not just ideally suited for each other, but two people that live in a time and space that is just for them. Two people that connect on a physical, mental, emotional level, and some other level of unseen power. You have probably never met someone that you felt like you knew each other intimately before you ever spoke to each other.\"\n\n\"Can't say I have. Is that what you and Dawn are?\" Linda asked.\n\n\"Yes. It is an unbelievable feeling between us.\"\n\n\"What about the girls and me?\"\n\n\"Let's be careful. Amy and Samantha connect with us on a similar level. You could say the four of us are like soul mates as I described. It is nothing like Dawn and me, but they are where they belong.\"\n\n\"And me?\"\n\n\"You and I have something. Dawn has great feelings for you because I love you. I think we are soul mates, but for some other reason. I don't know why.\" I told her.\n\n\"But, Dawn does not feel that way about me?\"\n\n\"Linda, please be careful. Dawn and I are connected to Amy and Samantha on some level like Dawn and I. It is like we have always known each other. Dawn connects with you because she loves you and wants to be a part of you. She greatly enjoys being with you.\"\n\n\"But, she doesn't feel that special connection like you do?\"\n\n\"I don't think so. Honestly, we are still working through it. She understands that cosmic connection, if that is what you want to call it, the girls and we have. She doesn't have that with you.\"\n\n\"Then why has she allowed me to get this close to you, James?\"\n\n\"Linda, that has nothing to do with it. You are just one of those persons that both of us feel very drawn too. Never doubt that she loves you as much as I do.\"\n\n\"Then what is between us, James? What is it that draws us together with so much intensity?\"\n\n\"Linda, I honestly don't know. Sometimes, I feel like I have known you before.\"\n\n\"I have that same feeling. Sometimes I think you are a lover I missed someplace in my life, and now we have met again. James, I am struggling with this. I hear you saying you love me, and I know you do on some level...\"\n\n\"What is it, Linda?\"\n\n\"You tell me I am a beautiful woman, and I believe I am. However, I am also a very rich and powerful woman. If you didn't have the money you do, I would be very suspicious of you. I was taught by my parents and grandparent to trust very few people. All of this has happened so fast. After coming out from my divorce, I am not sure I trust myself. I don't want to get hurt again.\"\n\n\"I understand.\"\n\n\"You do?\"\n\n\"Yes. You doubt my love for you and our love for you. It is understandable. I need to ask you some things, and you must answer me honestly Linda. No matter what your doubts may be, you have to answer me absolutely honestly.\"\n\nI reached and took both of her hands in mine.\n\n\"If you don't I will know you are lying to me.\"\n\n\"James, I have always tried to answer you honestly.\"\n\nI gripped her hands tighter.\n\n\"I have to know a few things from you now. I am glad you are being so honest with me while you sit here naked with me.\"\n\nI got a smile from Linda, breaking the tension.\n\n\"I need to ask you some things, and you must tell me the truth without hesitation.\"\n\n\"I will.\"\n\nI held Linda's hands for a minute as I looked into her eyes. Once I could feel her energy, I relaxed.\n\n\"Linda, do you trust me 100%. Would you trust me with your life?\"\n\nLinda looked at me.\n\n\"Yes,\" she said.\n\n\"Do you think I would ever intentionally hurt you in any way?\"\n\n\"No.\"\n\n\"Do you love me in a deeply romantic way?\"\n\nI felt her hesitation to answer.\n\n\"Yes.\"\n\n\"Do you want me to leave my wife to be with you?\"\n\n\"No!\"\n\n\"One last question? Do you think I love you in a romantic, emotional way?\"\n\nLinda looked at me for a minute.\n\n\"I don't know.\"\n\nI released her hands.\n\n\"Why were you holding my hands, James?\"\n\n\"To see if you were telling me the truth.\"\n\n\"Seriously?\"\n\n\"Yes. You were. Linda, I am sorry that you have doubts about how much I love you. I guess I will have to show you.\"\n\n\"How can you do that?\"\n\n\"You said you trusted me.\"\n\n\"I do.\"\n\nI leaned over to Linda and took her and laid her down on the bed. I laid on her and kissed her for a few minutes, making sure I was letting her feel my love for her.\n\n\"Linda, what do you feel?\"\n\n\"I'm not sure. But, James, I know you love me right now.\"\n\nI kissed my way slowly down her body until I was licking her pussy again. Linda moaned as she got wetter and wetter. I lifted her legs up and moved between them. I grabbed my cock and started it into her pussy.\n\n\"Emmmm, finally.\"\n\nI held her legs up and slowly slid inside of her.\n\n\"Ahhhhhhhh...\"\n\nI hooked my arms under her knees and leaned forward pushing her legs back and apart as I leaned into her sliding all the way in.\n\n\"Emmm, take me, James.\"\n\n\"I am.\"\n\nWe looked into each other's eyes as I started slowly working my cock in and out of her. Linda smiled at me with a look of love and pleasure as I slowly made love to her. We took our time and enjoyed each other for a long time.\n\n\"Make me come, James.\"\n\n\"I will, but not like that.\"\n\nI kept working my cock in and out of her slowly.\n\n\"Remember what I told you about feeling everything. Feel the texture of my skin sliding in and out of you. Feel my love for you.\"\n\nLinda closed her eyes. It never failed when I told her or any other woman to do that; their pussy would tighten around my cock.\n\n\"That's it. Now feel it and relax and just let it come to you.\"\n\nI sped up just a little as Linda concentrated. I could feel her changing.\n\n\"Perfect.\"\n\nI closed my eyes as I kept going and just let her feelings wash over me. I could feel the warmth of her insides and her changing energy.\n\n\"Ohhh...god...\" Linda moaned.\n\nShe was there.\n\n\"Emmm. Emmm. Emmm.\"\n\nI could feel her slowly building. I wanted to drive her to the top, but I didn't. Slowly I pushed in all the way then slid back out.\n\n\"James...\"\n\n\"Relax.\"\n\nHer breathing was speeding up. I sped up just a little more.\n\n\"Yes...James...love me.\"\n\nShe was almost there. I kept going for a few more minutes.\n\n\"Ohh. Ohhh. Ohhhh.\"\n\nI felt Linda tense up hard.\n\n\"Jeeeeezzzz!\"\n\nLinda started slamming her head into the pillow.\n\n\"Yes!!\" She screamed and started coming hard. \"Ahhhhhh!! Fuck!!\"\n\nLinda screamed, and a huge orgasm ran through her, so hard her pussy was crushing my cock.\n\n\"I'm coming!!\"\n\nI pushed my cock in deep and held it. Linda was frantic as her body took over. She gushed onto my cock several times.\n\n\"Oh, god!! I'm coming again!!\"\n\nShe tensed up and then shook hard again.\n\n\"Fuck!!\"\n\nLinda gushed all over my cock several more times before she collapsed into the bed. I let her legs down and gently laid on her.\n\n\"Ohhhhh...damn...\"\n\nShe opened her eyes and grabbed my head and pulled my lips to hers for a minute.\n\n\"Linda, what did you feel?\"\n\n\"I felt you make passionate love to me.\"\n\n\"I think you like it nice and slow sometimes,\" I said.\n\n\"I like it like that. I was still horny from earlier. That was incredible, but you didn't fill me with your cum.\"\n\n\"I'm not finished with you yet,\" I told her. She smiled at me. \n\n\"What's next?\"\n\n\"I want you on top so I can watch you and so I can play with your breasts.\"\n\n\"Okay!\"\n\nI slid my cock out and rolled next to her. She got up and straddled my hips.\n\n\"My turn!\" Linda said.\n\nShe lifted herself and grabbed my cock and slid it back into her pussy. She quickly slid all the way down.\n\n\"How are you doing so far?\" I asked.\n\n\"Fantastic!\"\n\nLinda wiggled and settled completely down on my cock.\n\n\"Are you ready?\" She asked.\n\n\"Are you?\"\n\nLinda looked at me.\n\n\"What does that mean, James?\"\n\n\"You remember I told you that you would scream with more pleasure than you have ever experience?\"\n\n\"I have.\"\n\n\"Not yet.\" I said.\n\n\"What are you going to do?\"\n\n\"Make sure you enjoy this.\"\n\n\"I can't wait,\" Linda said.\n\n\"Linda, make love to me,\" I told her.\n\n\"I will.\"\n\nI watched Linda's long body as she worked her pussy on my cock. She was learning how to sit and wiggle her hips and body in a very sexy way like she had seen Dawn do. I could feel that she was still quite turned on. While she worked, I reached up and played with her huge tits. She kept smiling at me while she worked for a while to get us off.\n\n\"Emmmmm! Oh, I love doing this,\" she said.\n\n\"I love watching you.\" She smiled at me as she wiggled more.\n\nLinda kept going until she was moaning. I could feel her love for me as she took her time.\n\n\"Ohh...I am going to come!\"\n\nShe sped up as I watched her. She was deep into arousal; I was making sure of that.\n\n\"Oh! Oh! Ahhhhh!\"\n\nLinda started working my cock in her faster.\n\n\"Ahhhhh! I'm coming!\"\n\nI watched Linda's face as she had a nice orgasm. When it was over, she stopped and looked at me.\n\n\"Ohh, god! That was perfect,\" Linda said.\n\n\"You were perfect,\" I told Linda.\n\n\"I didn't scream like you said I would?\" She said smiling.\n\n\"Linda, when Dawn and I make love, sometimes it is just like that, other times it is intense and loud.\"\n\nLinda sat on me with my hard cock still inside of her. She looked at me for a few minutes.\n\n\"James...I want you to make me come.\"\n\n\"I plan on it.\"\n\n\"I mean, I want you to really make me come. Use your energy to do it.\"\n\n\"Are you sure?\"\n\n\"Yes. I want to experience a mind-blowing orgasm if you can do that. Can you?\"\n\n\"I can. But, remember what I told you about how you may feel about regular orgasms after it?\"\n\n\"Yes. I'm not worried; I have you, James.\"\n\nI pushed myself up so I could hold Linda for a minute. She felt so happy and open. I moved her legs, so they were wrapped around me and pulled her closer. I wanted her to feel our love.\n\n\"Are you going to do it like you and Dawn do?\"\n\n\"I need to feel you and be as close to you as I can. I find this is the best way. You can hold me, and I can hold you, but we are going to do it like we do it.\"\n\nLinda kissed me for a minute. I pulled my legs in so she was sitting on my lap.\n\n\"Linda, you will need to relax. I will talk you through it. I will be whispering to you the entire time.\"\n\n\"You are not going to hypnotize me again, are you? Because I want to remember everything.\"\n\n\"No. I just need you very relaxed. You are going to find this very different.\" I told her.\n\n\"Oh?\"\n\n\"You have to trust me completely, Linda.\"\n\n\"I do.\"\n\n\"I need to tell you something first since we have talked about it. This will be more intimate than anything you have experienced with me. The most important thing you need to do is just let yourself go and let anything you feel just flow through your body and your mind. Don't try and force anything. Most of all, I want you to think about the love you feel for me. While we are doing this, you will come to understand how much I love you and how much you mean to me.\"\n\nLinda kissed me again for a minute.\n\n\"How?\"\n\n\"You just will,\" I told her. \"You can hold me anywhere you like. I will be holding you closely. Please listen to what I say to you because it is important you let me control everything.\"\n\n\"I will.\"\n\nI looked deep into her eyes and moved my hands so I could hold her where I needed. I kissed her gently, and hoped this worked.\n\n\"Close your eyes for me,\" I told her.\n\nShe closed her eyes. I used my hand to pull her head down next to mine.\n\n\"Breathe and relax, honey.\"\n\nWe held each other for a long time. I was working to find all of her feelings. After that, I needed Linda to know how much I loved her. I slowly began to let my love flow into her where we touched. After a few minutes, she moaned softly. I had my hands on several places I had discovered on her back. She had responded well to me there. I had to be very careful and only let her feel the love I had for her, and not let her feel the love energy I had for Dawn because it was different. It would be too much for her if I slipped. I started feeling for the feedback from her. I felt her calming and feeling loved.\n\n\"Are you okay?\" I whispered in her ear.\n\n\"Yes,\" she whispered.\n\nI held her a long time until I knew she was filled with the love I had for her and knew she was accepting it. I could now feel the energy in her for the love she had for me, strong and familiar.\n\n\"I love you,\" I whispered.\n\n\"I love you too.\"\n\nI was surprised at how well she was doing. She felt so natural to me, like a past lover. I was surprised at how the feelings between us grew and felt.\n\n\"I need you to breathe and relax. I know you feel my love, and I feel yours. Just let it flow through you completely and fill every muscle and nerve.\"\n\nI felt her relax more in my arms. I moved my hand and brought it between us and placed it over her heart like I did Dawn. I pushed more into her. I could tell she was feeling it, but not like I needed her to feel it. I hesitated then slid my hand up to the back of her neck where I had found a very special place. What I felt surprised me. This spot was her locus like Dawn's was in the small of her back.\n\n\"You will understand my love for you,\" I whispered.\n\nI went into a deep concentration and began pushing my love for her into her mind and body slowly. I could feel her change. Her energy just opened up to mine. I felt feelings like I originally felt from Amy. Linda needed love, but she had held back like Amy had in expressing it and opening up to me.\n\n\"Emmm,\" came from Linda.\n\n\"Let go and let me in,\" I whispered.\n\nI took a deep breath and opened up and pushed my feelings for her in deep. I felt Linda change dramatically and suddenly. As I pushed, I suddenly felt her like she was giving back to me. I held her tighter and let her have all I had for her for a long time. She was accepting it, and it was all flowing back into me. I took her love for a few minutes then mixed it with mine and gave it back to her.\n\n\"Oh, god,\" she whispered. \"That is amazing...\"\n\nI was deeply connected to her as I felt her energy and mine. I concentrated even deeper and let her feel everything, all I had. It shocked me how she changed. She could feel it. Linda now understood. I was overcome with deep feelings for her, much different than I had for Sam and Amy, more like with Dawn.\n\n\"James...I love you too,\" Linda whispered.\n\nAfter I could do no more, I slowly came back to awareness. Linda was deep into the feelings. I removed my hand from her heart and then slid my hand away from the place on her neck and waited for her to come back to me.\n\n\"Linda.\"\n\nI felt her stir; then I suddenly felt her hug me very tightly. She did this for several minutes.\n\n\"Linda, are you okay?\"\n\nShe slowly raised her head and looked into my eyes. I could see that tears had been running down her face. She kissed me and kept hugging me.\n\n\"I am going to make love to you now,\" I whispered. She placed her head back on my shoulder.\n\nI held her close and felt. I was surprised that she still had all the love energy flowing through her. I placed my hands on her ass and pulled her to me.\n\n\"Emmmm...\"\n\nI was going to take her ass and pull her on and off of my cock, but I paused. I could feel her gentle arousal already; much like Dawn was when we connected this way.\n\n\"Linda, I want you to concentrate on every place we are touching, even where I am inside you.\"\n\nI didn't know what was happening, but we were deeply connected, but in a different way than Dawn and I. I wanted to make love to her without it being physical sex. Dawn was the only person I could do this with, but, Linda just felt right. The feelings kept making me feel like she was a past lover.\n\n\"You feel it?\" I asked.\n\n\"Yes. What is it?\"\n\nI went ahead a placed one hand at the base of her spine and moved the other to the back of her neck again. I began to push my loving sexual energy into her to start arousing her. I felt Linda breathing on my shoulder in long deep breaths.\n\n\"Just let it flow where you want it,\" I whispered.\n\nI kept gently pushing. After a few minutes, I was amazed; I could feel her arousal moving in her body as well as our love mixed together. When I could feel her energy of love and arousal come into my hand on her neck, it shocked me. I could more than feel her energy in my hand; I could feel her energy flowing into me. I was taking it; it was flowing into me like Dawn's did. We stayed connected like this for a very long time. After some time, I was very aroused from her energy, and she was feeling the arousal throughout her body. It was like Dawn's so much I wasn't sure what to do next.\n\n\"I love you,\" Linda whispered.\n\nI focused my energy in my cock to see if she felt it.\n\n\"Ahhhhh...yes...\"\n\nWhen I felt her energy move to her insides around my cock, I just let it flow. Before I knew it, we were both approaching the edges of an orgasm. Linda felt incredible, and so did I. I felt the peace I only felt from Dawn. I gave her what she needed, and she gave me what I needed.\n\n\"Oh, god, James...yes...\"\n\nShe felt so strong and full of energy, and so did I. Nothing was being a drain on either of us. I pulled her tighter to me. I could feel all of the places the tissue in her vagina touched me, and I could feel she felt all of me. I knew immediately that this was not going to be a physical orgasm like I pushed Amy and Sam too. This was going to be like the mind orgasms Dawn called it.",
        "\"Let it flow,\" I whispered. Linda moaned softly again.\n\nI let go then I felt us merge together. It was incredible. We both became more and more aroused, but I felt all the love from her I had been feeling along with the building of our orgasm. I got lost in her.\n\n\"Oh...god...I love you,\" came from Linda softly.\n\nI knew I didn't need to tell her anything else. Between the two of us, our energy grew more and more. I could feel Linda's muscles beginning to twitch so slightly as I held her. I also felt the warmth under my hand on her neck.\n\n\"Ohhhhhh...\" came out of Linda. Her pussy muscles were beginning to squeeze my cock hard. It was time.\n\n\"Feel it, feel it all through your body and mind,\" I whispered.\n\n\"Emmmmm!\"\n\nLinda began to tremble as her orgasm began. I waited until it peaked and focused to control her. I used all of the energy I had to hold her there a top of her orgasm, in pure ecstasy. Linda was trembling in my arms as I held her longer and longer.\n\n\"Ahhhhhh! Ahhhh! Ohh, my, god, James!!\n\nI held her and held her. I could feel the sensations of her orgasm running through her body. It was taking everything I had to keep her there because I was completely aroused also. I had no idea how long I held her at this place.\n\n\"Ahhhhhhhh!!\" I heard Linda scream.\n\nThe feeling from her was so dramatic and strong that I started coming inside her.\n\n\"Yes!!\"\n\n\"Oh, god!!\" I screamed as I started jerking into her as I pumped more and more cum into her.\n\nI was overtaken with what was happening. I could feel my cock continuing to spasm and shoot cum into her. Suddenly, I felt very light headed. It caused me to lose my hold on her orgasm.\n\n\"Ahhhhhhh!!\" Linda screamed and started jerking hard in my arms.\n\nI was trying to hold on to her as she shook and jerked. I could feel her orgasm taking over her body and mine.\n\n\"Ahhhhh!!\" I heard Linda scream again and another huge orgasm shot through her.\n\nI felt Linda sit up and drive her pussy down onto my cock as she screamed again. I felt my cock begin pumping cum into her again as a huge orgasm shot through me again. I was losing control.\n\n\"James!!\"\n\nI managed to get my eyes open. Linda was looking into my eyes. I was having trouble focusing on her.\n\n\"I...love...you...\" came from Linda. I saw her eyes roll back and felt her go limp.\n\n*****\n\n\"Linda! Linda!\" I heard someplace off in the distances.\n\n\"Lind...\"\n\n*****\n\n\"Amy! Go to my closet. In the back, you will see a red trauma bag, get it! Hurry...\"\n\nI heard Dawn someplace far away...then nothing.\n\n*****\n\n\"Dawn, what about James?\" I heard Sam say.\n\n\"He is okay; I have to work on Linda. Amy put the oxygen on her so...\"\n\n*****\n\nMy eyes finally opened. The room was bright from the morning sun. Then I felt Sam holding me and giving me her energy. I managed to get my head up and look. I saw Linda lying back on the bed with an oxygen mask on her face.\n\n\"What...\" was all I got out before my head fell back.\n\n*****\n\nI felt myself dreaming, wild thoughts of Linda and me. I could see myself trying to pull her out of the water. Then I woke up. I knew someone was lying in bed with me. I turned to look, and Linda was lying next to me. I looked around the room; the shades were drawn, and it was dim in the room. It took me a few minutes to get my senses. I knew it was late in the day.\n\n\"Fuck,\" I said to myself. \n\nI turned and placed my hand on Linda's shoulder. I could feel all of our love still inside her, but she was deep in sleep. I tried to sit up in bed but wasn't having a lot of success. I lay back down and turned to Linda and held her. My mind was slowly recalling what had happened. \n\n\"My, god...\" I whispered as it came back to me.\n\nI closed my eyes as I held her and tried to remember everything that had happened. While I recalled it, I suddenly remembered the dream. Linda was in the water, and I was screaming and trying to pull her out. I could feel the freezing cold. It was winter. Then I opened my eyes to look at Linda. I knew she was awake. She was looking at me.\n\n\"Hey,\" I got out. She kept looking at me. \"Are you okay?\"\n\n\"Yes. James, what happened?\"\n\n\"I think we both passed out.\"\n\n\"The last thing I remember is a massive orgasm ripping through my body...and my brain. Then I remember Dawn and Amy standing over me. Then waking up just now.\"\n\n\"I guess we both had a massive orgasm and passed out,\" I said.\n\n\"I'm tired,\" Linda said. She moved a hand to the side of my face and touched me. \"James, I know that you do love me. What do we do?\"\n\n\"Linda, I am not sure what happened last night. I did feel your love for me, and I made sure you felt mine for you. But, remember, it is different, it has to be.\"\n\n\"There is something I feel that I don't understand?\"\n\n\"What are you feeling?\" I asked.\n\n\"James, last night, I experienced some strange emotions and feelings.\"\n\n\"Linda, I didn't mean to push you so hard, but something happened that I don't understand.\"\n\n\"I know you love me and have feelings for me. But, when I felt your love, it felt so familiar and right. The sensation was so strong; I knew you loved me because it filled me. But, it felt right, not like I was feeling something new from you. I'm not sure what it is.\" Linda said.\n\n\"Linda, I don't know what to say. I was amazed that I could connect with you so deeply. It overtook me and everything else just happened. I hope I haven't caused you any problems.\"\n\n\"It was all incredible. The love I felt from you felt so deep, it overcame me, and I just let it flow through me. It was so strong; I knew that it was right and it took over my body. It felt familiar, but not like what I have been feeling with from you. It felt like you found something that had always been in me, but I don't know where it came from.\" Linda said.\n\n\"When Dawn and I first began to connect like that, we both felt something like that.\"\n\n\"Are you telling me you felt me like you feel Dawn?\"\n\n\"It many ways, yes.\"\n\n\"But, how?\"\n\n\"I don't know. It felt so natural to me,\" I said.\n\n\"Me too,\" Linda told me. \"James, you can't love me like that.\"\n\n\"Linda, we have to talk about this.\"\n\n\"I know.\"\n\n\"You have much more than a feeling of just love for me. I am afraid I have created a problem between us.\" I told her.\n\n\"You are afraid that I love you like Dawn does and I can't detach from it.\"\n\n\"Yes.\"\n\n\"James, I also know that you love me very deeply. Like a husband and wife love each other,\" Linda said.\n\n\"I know. I didn't mean for this to happen.\"\n\n\"You said my love felt familiar. I felt something like a marital love, but it was from someplace I don't understand. I also felt like there was something else in that love, both joy, and sadness.\" Linda said looking into my eyes.\n\n\"Sadness because we can't be together like that?\" I asked.\n\n\"No.\" Linda pushed herself up, so she was sitting in the bed, I did too.\n\nLinda reached over and took my hand and held it tight. I immediately felt her love.\n\n\"I can feel it,\" she said. \"I can feel the love I felt last night.\"\n\nLinda sat there for a minute.\n\n\"James, I know I can't have you all to myself. I know this because I know how much you love Dawn now. But, I also know you have some kind of deep love for me beyond just the relationship we have. You told me I am part of your family now. I can accept that, and I will love you like my family. But, there will also be a different place in my heart for you. I am going to need you and Dawn to teach me how to share that love.\"\n\n\"We will. Linda, there is something between us we can't explain. I have to tell you that Dawn will feel it if she hasn't already. The love I have for you is different than the love I have for Amy and Samantha. I'm like you; I can't explain it. The two of us are going to have to work with Dawn so we can both deal with this.\"\n\n\"Can we make this work?\" Linda asked.\n\n\"I'm sure we can. Linda, has this affected your feelings for Rachel?\"\n\nLinda looked at me and smiled.\n\n\"James, right now, I love her even more. I now understand that I have a lot of love to give. It is different now; my feelings for love are on top of all my emotions right now. They are out in the open, no longer buried deep inside me. You did something to me that is wonderful.\"\n\n\"That is your first step, knowing you have love to give.\"\n\nLinda leaned to me and wrapped her arms around me for a minute. She released me and kissed me.\n\n\"Do you feel like you can shower with me?\" I asked.\n\n\"Actually, I am feeling much better.\"\n\n\"Then come with me.\" I stood and took her hand, and we went to the shower.\n\nWe both were perking up and just enjoying washing each other's body slowly. I had washed Linda, and she was now soaping up my chest as the water ran over us. Then she suddenly froze.\n\n\"What's wrong?\" I asked.\n\n\"I just remembered a dream I had. It was about the two of us. We were outside, and it was freezing. I can see you pulling on my arm as I screamed. You were trying to pull me out of some water. I was freezing.\"\n\n\"Do you remember anything else?\"\n\n\"Just that. Weird.\"\n\nLinda went back to washing my body. Once we were rinsed off, we dried each other off. I grabbed one of my robes for her, and I slipped one on. I looked at the clock, and it was 1:30.\n\n\"Damn, it is 1:30. We slept all morning,\" I told Linda.\n\nWe headed down the stairs to the den.\n\n\"Well, good afternoon,\" Rachel said when she saw us.\n\n\"Sorry about that,\" Linda said.\n\n\"Do you two want some coffee?\" Sam asked from the kitchen.\n\nWe walked to the bar and got some coffee from Sam. Rachel walked up naked and hugged Linda. I looked around the den and saw Amy sitting in one of the loveseats looking at me. I didn't see Dawn.\n\n\"Where is Dawn?\" I asked. Sam looked up at me.\n\n\"She is outside someplace,\" Sam said.\n\nLinda got up and walked back to the sofa and sat with Rachel.\n\n\"James, you need to go find Dawn,\" Sam said.\n\nI took my coffee and walked out the back door. I didn't see Dawn anywhere around the pool. I walked to the edge of the patio and looked. I saw her sitting in the gazebo in a robe. I walked out to her.\n\n\"Honey, are you okay?\" I said as I went to sit next to her.\n\nDawn turned and looked at me. I knew there was a problem; she had been crying.\n\n\"James, have I lost you?\"\n\n\"What do you mean?\"\n\n\"Have I lost you to Linda?\"\n\n\"Of, course, not! Why would you think that?\"\n\n\"I laid in bed last night while Sam was asleep and I could feel everything you felt, and she felt. I know what happened between you two.\"\n\n\"You could feel that?\"\n\n\"Yes. I need you to tell me the truth. Have I lost you to her?\"\n\n\"No!\"\n\n\"Then what is going on between you two? When you passed out early this morning, Sam woke up suddenly. The two of us came to check on you. Linda was not in good shape. Her blood pressure was low, and her heart rate was erratic. But, while I was touching her...I felt the kind of love coming from her for you that only I have. Even while she was unconscious, I could feel your love still inside her. James, I don't feel it that strong from Amy and Samantha after you have been with one of them.\" Dawn said.\n\n\"Honey, something happened last night that I don't understand. We had been having sex all night; then she asked me to push her to a huge orgasm.\"\n\n\"You two must have talked a lot.\"\n\n\"I told her things about us and me that I have never told anyone but you. Linda and I were talking about keeping things in perspective when she told me that she loved me and that she had doubts about why I loved her. I felt her, and she was very confused. You will have to watch and listen to it. When I had her so that I could feel her and try and push her to a huge orgasm, something happened.\"\n\n\"What?\"\n\n\"I wanted her to know I loved her. Before I worked with her on having an orgasm, I held her and let her know I loved her. But, I made sure it was just love and no deep feeling of love like I have for you. I made sure of that. As she felt it, it grew stronger and stronger in her. Dawn, there is something different about her. Don't get mad at me, but I could connect with her almost as deeply as I can with you. I don't know what happened.\"\n\n\"But, you didn't stop.\"\n\n\"I couldn't. Honey, I could obviously feel her love for me, but, I started feeling her love for me flow into me, like she was pushing it into me.\"\n\n\"She can't do that.\"\n\n\"I know! But it happened. You know how it is when the two of us are holding each other and just trading our feelings for each other. It doesn't stop until we both withdraw. It was like that. I got caught up in going through her feelings and sorting them out. I am not sure I can explain exactly what I felt.\"\n\n\"Try.\"\n\n\"It is going to sound strange,\" I told Dawn.\n\n\"I'm waiting.\"\n\n\"You know when we first started and discovered how we could merge and feel each other. Once, you said it just felt like it was supposed to happen. We talked about it and said we were soul mates and had always been and that are love was meant for each other, and it just felt familiar.\"\n\n\"It does. It is like on some level we had known each other before we met. Like we were supposed to be together. You can't tell me that is what you felt from Linda,\" Dawn said.\n\n\"Remember at first, it all felt so new to us. Like we were exploring each other for the first time. It was so pure and right. Now, it is still that way; we feel each other like new all the time.\"\n\n\"Is that what you felt from Linda?\"\n\n\"Not exactly. I'm still trying to figure out what I felt. If I tell you this, I will need you to help me understand it, okay?\"\n\n\"Of, course.\"\n\nI sat for a minute as I thought about the feelings Linda and I shared.\n\n\"If I told you the love we felt between each other felt like it was old, and had always been there, what does that mean?\" I asked.\n\nDawn sat up and looked at me.\n\n\"Tell me more.\"\n\n\"When Linda and I were talking about it in bed, we both said it felt natural like it had always been there. Honey, she did feel so familiar. I'll just say what I felt. I felt like I have known her before. Does that make sense?\"\n\nDawn sat looking at me.\n\n\"Honey, what is it?\" I asked.\n\n\"Did you feel like you to had been together before?\" Dawn asked.\n\n\"Maybe. Like we had been lovers at some other time. I know it sounds strange, but that is the best I can make of it.\"\n\n\"It's not possible,\" Dawn said and got up and headed to the house.\n\n\"Dawn?\"\n\nI got up and followed her. I grabbed her shoulder and stopped her and turned her to me. I wrapped my arms around her and held her for a minute. \n\n\"James, please don't hold me right now.\"\n\n\"Why?\"\n\n\"Because I can feel her.\"\n\nI followed Dawn into the house.\n\n\"Is everything okay?\" Sam asked as we walked by. Dawn kept walking to the den.\n\n\"Linda, I need you to come with me, you to James,\" Dawn said.\n\nLinda looked at me then got up. The two of us followed Dawn down the hall to the last bedroom. We all sat on the bed.\n\n\"Linda, James has been telling me about what happened last night. I need to ask you something.\"\n\n\"Dawn, I'm sorry. I didn't know I felt that way about James,\" Linda said.\n\n\"I'm not concerned about that. I need you to tell me some things.\"\n\n\"Anything,\" Linda said.\n\n\"How much do you remember about how your love felt for James while you two were connected.\"\n\n\"It was very intense.\"\n\n\"I need to know how his love felt to you, emotionally,\" Dawn said.\n\n\"The best I can describe it is that it felt natural like we were supposed to feel each other deeply.\"\n\n\"Anything else?\"\n\n\"Dawn, I don't think I should tell you. I don't want you to make anything of it,\" Linda said.\n\n\"Linda, I have to know exactly how it felt running through your mind and body,\" Dawn said.\n\n\"I told James that it felt like it was supposed to be that way. Sort of like an old familiar feeling or something like that,\" Linda said. \"Dawn, I need to tell you that I have a deep and unusual feeling of love for James. I don't understand it, and I know he is yours. But he said you two could teach me how to share it. I am not trying to take him away from you because I love you too much.\"\n\n\"We will have to teach you how to share it, Linda,\" Dawn said.\n\n\"Dawn, I'm sorry. I don't know what happened or what is going on,\" Linda said. \"Please forgive me and don't shut me out because of this.\"\n\n\"Linda, I would never do that. The fact is that you and James share some kind of old love.\"\n\n\"What does that mean?\" Linda asked.\n\n\"I'm not sure.\"\n\nDawn reached out and took my hand and took Linda's hand. I watched as she closed her eyes. We all sat quietly for a long time. I could feel Dawn exploring my feelings deeply. Dawn finally released our hands and looked at us.\n\n\"What were you doing?\" Linda asked Dawn.\n\n\"Feeling the love you two have for each other.\"\n\n\"You can do that!\" Linda exclaimed.\n\n\"Yes, I can. You two do share something; I'm not sure what.\"\n\n\"We shared something last night. I feel very different Dawn. I told James that I now feel like my love fills me and it is open more. I actually feel more love for Rachel right now.\"\n\n\"That can happen. If you are holding back, even on an unconscious level, and experience like this can bring it out. That is a good thing.\" Dawn told Linda.\n\n\"Linda, tell Dawn about the dream you had,\" I said.\n\n\"What dream?\" Dawn asked.\n\n\"I remember having a dream about James and me. It was very strange. I could feel the cold and could see him pulling on my arm, trying to pull me from some freezing water. I have no idea what that was all about,\" Linda said.\n\n\"Linda, James and I are going to have to work with you like we are working with Sam and Amy. We are having to teach them that they can have a deep love for more than one person. With you, it is going to be harder, but I think you can learn to understand it and deal with it. Think about how much you love Rachel...and James. If you can separate the two, it is the first step. You have to understand that you can have deep romantic feelings for more than one person.\"\n\n\"I am going to need your help. Dawn is this going to be a problem between us?\" Linda asked.\n\n\"I don't think so. There are things you and I will need to talk about in private, though,\" Dawn said.\n\n\"Okay. Dawn, do you have any idea what happened?\" Linda asked.\n\n\"Not yet. I need to talk to James. Go and get Amy and Sam to make some lunch, please.\"\n\nLinda leaned over and kissed Dawn, then got off the bed and left the room.\n\n\"Any ideas?\" I asked.\n\n\"Not yet.\"\n\n\"I need to tell you one more thing,\" I said.\n\n\"What else?\"\n\n\"I had the same dream she did. I was trying to pull her out of a freezing river.\"\n\n\"What?!\"\n\n\"I just thought you should know in case it meant something.\"\n\n\"No! James, were you touching her when you had that dream?\"\n\n\"No, I remembered it while I was trying to wake up. She told me about it in the shower.\"\n\n\"Nonono!\"\n\n\"What, honey?\"\n\n\"Oh, my god! This can't be real!\" Dawn cried out.\n\n\"You are scaring me, Dawn.\"\n\n\"It can't be possible,\" Dawn said.\n\n\"What!\"\n\n\"There is an ancient belief among all Native People that if a man and woman that love each other and are bonded together...die together in a tragedy that cuts their lives short, their souls will find each other again, so they have a chance to finish their lives together.\"\n\n\"Dawn...seriously?\"\n\n\"This is what I was taught by my great-grandparents. James, you know I believe in all the traditions and stories I have been taught.\"\n\n\"I know, but...that is stretching things.\"\n\n\"Do you remember any more of the dream?\" Dawn asked.\n\n\"I was outside, and it was in the middle of winter. I remember holding onto Linda's hands tightly because she was slipping away from me into a river. That is all I remember.\"\n\n\"Did you get her out of the water?\"\n\n\"I don't know; that's all I remember, honey.\"\n\n\"How long ago do it seem, how were you dressed, where were you?\"",
        "\"It seemed like it was a long time ago. I can see Linda in a dress and bonnet like they wore in the colonial times or something.\"\n\n\"This can't be...\"\n\n\"Dawn, let's don't go that far with this.\"\n\n\"I hope that is not what it is.\"\n\n\"Why?\" I asked.\n\n\"Because...the stories say that you two are destined to be together, and nothing can separate you.\"\n\n\"Dawn, I am not going anywhere. I love you more and more every day; you know that.\"\n\n\"But, I can't fight the spirits,\" Dawn said.\n\n\"You need a drink.\"\n\n\"I do.\"\n\nWe left the bedroom and found Amy and Linda working on a late lunch. I poured Dawn a large glass of wine. We sat next to each other on the sofa; Sam moved from the loveseat next to us.\n\n\"What's going on?\" Sam asked.\n\n\"I am not sure, honey,\" Dawn said. Sam looked at her and glared.\n\n\"Dawn. I was there too this morning. I felt the same thing you felt, and I felt how you felt. Now, what is going on!\" Sam demanded.\n\n\"Keep it down,\" Dawn told her. \"I honestly don't understand it yet.\"\n\n\"But something happened between Linda and James. I felt how worried you were,\" Sam said.\n\n\"Did Amy feel it?\" Dawn asked.\n\n\"Yes, she did. You felt like you did the other morning when you felt like James didn't need you anymore. Why?\" Sam asked.\n\nDawn sat there quietly.\n\n\"Oh, my god,\" Dawn said.\n\n\"Dawn, what is it?\" Sam wanted to know.\n\n\"Sam, tell me exactly what you felt in me the other morning, we never talked about it,\" Dawn asked.\n\n\"Are you sure?\"\n\n\"Yes.\"\n\n\"I woke up because I felt something very wrong with you. When I came in and held you, I could feel that deep inside you, you felt like James didn't need you anymore. Or, maybe that you had lost his love. Why?\"\n\n\"Damn, it is coming back to me,\" Dawn said. \"I had a bad dream that Linda took you away from me! Oh, my god!\"\n\n\"Dawn, why?\" Sam asked.\n\n\"Because I had been around Linda for a week, then she had been at the house. James, it has to be!\" Dawn said.\n\n\"Dawn, you had also asked me that week if I was in love with Linda, and if I had crossed a line,\" I said.\n\n\"Dawn, he hasn't crossed that line,\" Sam said. \"James asked me to keep up with his feelings to make sure that didn't happen. It hasn't.\"\n\n\"That's not what it is,\" Dawn said.\n\n\"Dawn, what are you talking about?\" I asked.\n\n\"I picked up on it! I have always felt something different between you and Linda; now I know what it is.\"\n\n\"Honey, don't go there.\"\n\n\"No, James, I think it is true!\"\n\n\"Really?\" I said. \"I don't believe anything like that.\"\n\nDawn turned and looked at me.\n\n\"James, there are a lot of things you used not to believe in until we met. Can you explain what we have?\" Dawn said.\n\n\"No.\"\n\n\"Do you remember what my great-grandmother told you before we got married?\"\n\n\"Some of it.\"\n\n\"She told the both of us that we were meant to be together in spirit because we had an old love and shared the spirits. My great-grandmother knows these things.\"\n\n\"Would you like to fill me in?\" Sam asked.\n\n\"There is a very ancient Native People's belief that if two people that love each other and it is cut short by tragedy that their souls will meet one day again and be together.\"\n\n\"Is that what you and James are?\" Dawn asked.\n\n\"No. I am afraid it is what he and Linda are,\" Dawn said.\n\n\"What?!\" Came from Sam.\n\n\"Sam, there is more to it than I can explain right now,\" Dawn said.\n\n\"You really believe this?\" Sam asked.\n\n\"I am going to have to figure it out.\"\n\n\"No way!\" Sam said. \"What happens if that is true?\"\n\n\"The stories say that when these parted souls meet again, they will be together forever,\" Dawn told Sam.\n\n\"Dawn, is that what you felt in the dream?\" Sam asked.\n\n\"I think so. I think it all came together in my mind.\"\n\n\"James, you wouldn't leave us would you?\" Sam asked.\n\n\"No, honey. I will be with you and Dawn and your sister forever.\"\n\nSam reached over and hugged the two of us for a minute.\n\n\"Are you three okay?\" I heard Linda asked.\n\nSam released her hold on us and turned and looked at Linda.\n\n\"We were just having a moment,\" Dawn said.\n\n\"Lunch is almost ready,\" Linda said and went back toward the kitchen.\n\n\"Sam! Don't do that,\" Dawn said.\n\n\"What?\"\n\n\"Don't feel that way about Linda. It is not her fault,\" Dawn said.\n\n\"I don't want her taking James away.\"\n\n\"It is not going to happen. She is more of our family now than before,\" Dawn told Sam. \"You still love her.\"\n\nSam looked back at Dawn for few seconds, then got up and went to the kitchen.\n\n\"This is not going to be good,\" I said.\n\n\"Yes, it will. I want you to do something we talked about before,\" Dawn said.\n\n\"What is that?\"\n\n\"I want you to go ahead and hire a Genealogist and have them research yours and my ancestry. I know my Cherokee ancestry for 15 generations back, after that, it is all written down. I want you to find out about yours, as well as Amy and Sam's. I also want to find out about Linda's if she will let us.\"\n\n\"I will see what I can do.\"\n\nAmy told us all to come and eat. We all sat down at the table for lunch. It was quiet while we ate.\n\n\"Okay, enough!\" Linda exclaimed. \"You can cut the tension in here with a knife! What is going on? Is this about last night?\"\n\n\"This morning,\" Rachel said. \"The two of you were screaming about 5:30 this morning.\"\n\n\"Dawn has this crazy theory about us,\" I said.\n\n\"What theory?\" Linda demanded.\n\nDawn explained it as Rachel sat there with her mouth hanging open. She even told them about Linda and I being together for the rest of our lives.\n\n\"Dawn, you are crazy,\" Linda said.\n\n\"Maybe,\" Dawn said.\n\n\"What a minute,\" Rachel said. \"Linda, have you fallen in love with James?\"\n\n\"Not like that,\" Linda said.\n\n\"Well!\" Rachel said.\n\n\"No, Rachel...nothing between us has changed, honey,\" Linda told her. \"In fact, today I know I love you more than ever.\"\n\n\"You are going to have to explain this to me, Linda,\" Rachel said.\n\n\"Rachel, what Linda is telling you is true,\" Dawn said. \"She will be able to explain it to you.\"\n\n\"Dawn, do you really believe this?\" Rachel asked.\n\n\"I believe the stories I was taught. Somehow, we will have to see what we can find out.\"\n\n\"How are you going to do that?\"\n\n\"Linda, would you agree to let us research your ancestors?\" Dawn asked.\n\n\"Why?\"\n\n\"To see what could be there in your past.\"\n\n\"You really believe that James and I were together in another lifetime, don't you Dawn?\" Linda asked.\n\n\"Yes.\"\n\n\"Well, I know a lot back to my great-great-grandparents. They were immigrants, and my great-grandmother goes back to the very early settlers. I don't know much about my other great-grandparents.\"\n\n\"Good. Can you get together as many names, dates, and other information for me as you can?\" I said.\n\n\"Sure.\"\n\n\"Amy and Sam, this includes you two also,\" Dawn told them.\n\n\"We only know about our grandparents and very little about our great-grandparents,\" Amy said.\n\n\"Get me all the information you can,\" I said.\n\n\"Sis, you may need to call mom,\" Amy said.\n\n\"We will both call her,\" Sam said.\n\n\"What about you, James?\" Linda asked.\n\n\"My mother knows a lot about several generations. I think on my mom's side, they go Scotland. I think my dad's side goes back to England a long time ago. I guess I will find out.\"\n\n\"Dawn, what do you know about your Native American ancestors,\" Linda asked.\n\n\"I can you tell you about all of my ancestors for 15 generations back. I had to memorize it.\"\n\n\"Wow.\"\n\n\"Tell us some of it,\" Sam said.\n\n\"My mother is half Cherokee. My grandmother is full Cherokee. I don't know a lot about my grandfather; he died when I was twelve. My great-grandmother and father still live on the reservation in North Carolina. Their parents and grandparents were a small group that stayed in North Carolina and refused to be marched to Oklahoma. They are still alive. After that, it gets pretty complicated. I have it all written down, but I memorized it all. It is quite a few people that go back for 15 generations, well before the settlers, back to about the mid-1400s.\n\n\"That is so great you know all of that,\" Linda said.\n\n\"It is a tradition that each generation has to learn about all the previous ancestors. When I spent my summers with my great-grandparents, I had to learn all that and all the old traditions and stories.\"\n\n\"What else did you learn?\" Sam asked.\n\n\"Quite a lot. I haven't been back with my grandmother to see my great-grandparents for two years. I need to go see them.\"\n\n\"Dawn, were many of your ancestor's chiefs and warriors or things like that?\" Rachel asked.\n\n\"Quite a few. My great-grandfather is what you would call a shaman or medicine man. So is my great-grandmother. My great-grandfather's father was a very powerful medicine man. His wife was a priestess, the daughter of a famous tribal chief. My great uncle is the current chief. My great-grandmother is from a very long line of spirit keepers. They kept all the written and oral history.\"\n\n\"How much of it do you know?\" Rachel added.\n\n\"A lot. My great-grandmother has all of the oral histories. She also has some very old things written down.\"\n\n\"That would be interesting reading,\" Linda said.\n\n\"Not unless you can read Cherokee,\" Dawn said.\n\n\"Can you?\"\n\n\"Yes. All of her writings will pass to me, along with my great-grandfather's medicine and medicine books. At least what is written down. The written language was created around 1810. As it was learned, all of the old spirit keepers wrote down the stories and ancestors they could remember, which were a lot. Since then, all of the traditional medicine has been written down and passed along.\"\n\n\"Did you learn a lot of that from him?\" Linda asked.\n\n\"Yes, I did.\"\n\n\"Do you have it all written down?\" Linda kept asking.\n\n\"I do.\"\n\n\"That must be fascinating.\"\n\n\"You want to see one of my books?\" Dawn said trying to change the previous discussion.\n\n\"Yes! Can we!\" Linda asked.\n\n\"Let me go get one.\"\n\nDawn got up from the table and went upstairs.\n\n\"I didn't know all of this about her,\" Amy said.\n\n\"You will find out there is a lot about Dawn you don't know,\" I told her.\n\n\"James, what do you think about her theory?\" Linda asked.\n\n\"I don't know. But, she is a very strong believer in her traditions.\"\n\n\"Like what else?\"\n\n\"Those things are very private to her. She will only tell you about them if you ask or she needs to. I know many of them.\"\n\n\"Is she keeping secrets from you?\" Sam asked.\n\n\"No, honey. It is just a very private thing.\"\n\nDawn came back to the table and laid one of her huge old leather hide-bound books on the table and opened it up.\n\n\"This contains information about using herbs as medicine,\" Dawn said and opened it up.\n\n\"Dawn, what is it written in?\" Linda asked.\n\n\"The Cherokee written language.\"\n\n\"You can read this?\"\n\n\"I can read it, write it, and speak it. I wrote all of this as I grew up and learned.\"\n\n\"Why didn't you just write it in English?\"\n\n\"It wouldn't mean the same thing. And this way it is only available to those that can read the written language.\"\n\n\"Do you mean it is all a secret?\"\n\n\"Just to you, white woman!\"\n\nLinda and the girls laughed.\n\n\"Is this all you have?\"\n\n\"Oh, no. This book is just one about herbal medicine.\"\n\n\"Do you do any of this still?\"\n\n\"Sometimes.\"\n\nDawn was being very cryptic. As far as I knew, I was the only person outside of her family that had ever seen her books.\n\n\"You have never shown us that,\" Sam said.\n\n\"I will, someday.\"\n\nLinda flipped the pages in the book and looked at the drawings of plants.\n\n\"Dawn, you are becoming a very interesting person. You wrote and drew all of this?\" Linda said.\n\n\"Yes.\"\n\nDawn showed everyone some of the drawings and other things in the book for a while, then she closed. She picked up the book and cradled it.\n\n\"I have to go put it up,\" she said and went back up the stairs.\n\n\"All of you, that was very special for Dawn to let you see that,\" I told them.\n\n\"Where does she keep that?\" Sam asked.\n\n\"That is not for you to know until she shows you, sweetie.\"\n\nDawn finally came back down and sat with us.\n\n\"Linda, would you like to meet my great-grandfather?\" Dawn asked. I was shocked.\n\n\"That would be great, Dawn!\"\n\n\"We can fly into Ashville, North Carolina, and drive to the reservation.\"\n\n\"We can do that one weekend. That would be wonderful.\"\n\n\"How about the weekend after next since we are going to New York this weekend?\" Dawn asked as I watched her.\n\n\"Let me check my calendar,\" Linda said.\n\nI was very surprised at Dawn's request. I was sure there was a reason for it.\n\nAfter all of that, we went swimming. It was almost 3:30. Linda, Rachel, and Dawn were off at the other end of the pool. I went to Sam and Amy.\n\n\"You two. Please don't treat Linda any differently,\" I asked.\n\n\"James, we both felt what was between you two this morning,\" Amy said. \"You shouldn't love her like that,\" Amy said.\n\n\"And how would that be?\"\n\n\"Like a wife.\"\n\n\"I love both of you like a wife.\"\n\n\"You know what I mean.\"\n\n\"Amy, there is something different going on between Linda and me. Neither of us understands it yet. But, there is something going on between you and me and your sister. Is that wrong?\"\n\n\"James, you know what I am talking about.\"\n\n\"Amy, I am disappointed. You are jealous.\"\n\n\"No, I'm not!\"\n\n\"Yes, you are. I am going to need yours and Sam's help with Linda to teach her how to share her love, just like we are teaching the two of you.\"\n\n\"It's different!\" Amy said in a huff.\n\n\"No, it is not! Not unless you make it different.\"\n\n\"James, there is a bond between you and her that I don't have.\"\n\n\"Amy, there is a different bond between you and me, and there is a different bond between Sam and me. Each of you has a different bond with Dawn. You two know that.\"\n\n\"But, I didn't know you in another life!!\" Amy shouted. \"You are closer to her than you are me!\"\n\nI took her in my arms and held her.\n\n\"Honey, I love you very much now, and will always love you, no matter what. Nothing is going to happen between Dawn and me or the two of you. I never knew you would come into my life. We are special to each other for some reason, and so is your sister. I don't know why, but you two are. Something brought us together. And, something brought Linda into our lives. Sweetie, I need you to open up and understand what is between you and me. I haven't broken your trust.\"\n\nSam wrapped her arms around Amy and me and held us.\n\n\"Sis, James still loves us,\" Sam said. \"He always will.\"\n\n\"You can't be sure,\" Amy said under my arms.\n\n\"I am. There is a very special and deep bond he and Dawn have for us; you need to trust me,\" Sam said.\n\n\"Sam, I don't feel the things you do!\" Amy exclaimed.\n\n\"Yes, you do. You just don't understand them yet. You trust me don't you?\"\n\n\"Always.\"\n\nSam hugged her sister tighter.\n\n\"Then, until things change, you are going to have to believe what I tell you. It won't be long before you know these things,\" Sam told her sister. \"We agreed that Linda and Rachel could be a part of our family. We can't treat family this way.\"\n\n\"Amy, do you still feel like Linda is part of our family?\" I asked.\n\n\"Yes.\"\n\n\"Do you feel that anyone in our family loves you differently now?\"\n\n\"No.\"\n\n\"Do you feel that I love Linda more than Dawn, or you and your sister?\"\n\n\"You will always love Dawn more.\"\n\n\"I never said that. I said I would always love Dawn differently. Don't you understand that?\"\n\n\"Yes, sorry.\"\n\n\"Sam, do you understand that?\"\n\n\"Yes.\"\n\n\"Not more, just differently. More is not a level of love, okay?\" I told them.\n\n\"Yes,\" I got from them.\n\n\"Sam, can I borrow your sister?\"\n\n\"Of, course.\"\n\nSam released us.\n\n\"Go be with Dawn,\" I told her.\n\nSam kissed her sister and swam off. I took Amy's hand and led her out of the pool. I took her inside and dried her off. After I had dried off, I took her hand and led her upstairs to her room and laid her on the bed. I got in next to her.\n\n\"Are you okay?\" I asked.\n\n\"Yes. I'm still getting over this morning.\"\n\n\"That's okay; I am too.\"\n\nI pulled some of her hair off her face.\n\n\"I love you,\" I told her.\n\n\"I love you too.\"\n\nAmy turned to me, and I started kissing her. After some time, I was between her legs sliding my cock into her. I made love to Amy for a long time. I was happy that we could feel each other's love. After Amy came the first time, she lay there looking into my eyes as I kissed her. I pushed myself up and slowly worked my cock in and out of her, making sure she felt all of my love. For a long time, we made slow love until Amy came in a huge orgasm and I filled her with cum.\n\n\"Ohhh, my...\" Amy said as I kissed her.\n\n\"Are we okay?\" I asked.\n\n\"James, now that I feel you in me, it is so different.\"\n\n\"Better?\"\n\n\"Oh, yes. Much better.\"\n\n\"Good.\"\n\nI slowly withdrew my cock from her cum-filled pussy and lay on my back next to her.\n\n\"Sweetie, I want you up here,\" I told her.\n\n\"James...I don't know about that. You know I go crazy.\"\n\n\"I trust you.\"\n\n\"Are you sure? I don't want to hurt you.\"\n\n\"You won't.\"\n\nAmy slowly got up on her knees as she looked at me hesitantly.\n\n\"I'm not sure about this,\" she said.\n\n\"Amy, sweetie, please.\"\n\nShe moved carefully and straddled my head and slowly lowered her dripping pussy down to my mouth. I put my hands on her ass and licked her pussy lips.\n\n\"Oh, god!\" Amy screamed.\n\nI licked her several more times. She jumped each time.\n\n\"Ohhh...I don't know...\"\n\nI pulled her down all the way and slid my tongue into her.\n\n\"Ahhhhh!!\" Amy screamed and started coming. \"James!!\"\n\nI held her down and worked my tongue into her as she squirmed and jerked.\n\n\"Ohhhh!! Yes, I love you!! James!\"\n\nAmy kept screaming as I worked my tongue in her. She had come hard again. I pulled her back and went after her swollen clit.\n\n\"Oh, god, James!! Eat me!!\"\n\nAmy had two more orgasms before she pushed herself up to get away from my tongue. She moved back and collapsed on top of me and started kissing me.\n\n\"I love you so much,\" she said when she stopped kissing me.\n\n\"You know I love you.\"\n\n\"Did you do that to Linda last night?\"\n\n\"No yet. After what happened, she may have a heart attack when I do.\"\n\nAmy started laughing.\n\n\"You should have seen the two of you this morning. You scared us, but she was lying back on your legs, and you were lying back on the pillows. Have you ever passed out before?\"\n\n\"Dawn has almost made me pass out a few times.\"\n\n\"What happened?\"\n\n\"Things just went a little out of control while I was pushing her orgasm.\"\n\n\"Will you push me like that sometime?\"\n\n\"I don't know. Dawn is going to kill me later because I did it.\"\n\n\"Why?\"\n\n\"She told me to stop holding all of you at the peak of your orgasms.\"\n\n\"Oh, that is what you did. You made me pass out doing that.\"\n\n\"I remember, and I remember the trouble you got me into with Dawn by wanting me to fuck you while you were passed out.\"\n\n\"You haven't told me, did you like that?\"\n\n\"Strangely enough, yes.\"\n\n\"What was it like for you?\"\n\n\"I shouldn't tell you.\"\n\n\"You have to.\"\n\n\"I shouldn't have, but I really got off because I felt like I was raping you.\"\n\nAmy smiled at me.\n\n\"That is what I wanted you to feel!\" Amy kissed me.\n\nAmy rolled to me and held me.\n\n\"James, would you do something for me?\"\n\n\"What would that be?\"\n\n\"One day, when we are alone, I want you to tie me to the bed and fuck me all day, leaving me tied up. Then I want you to do that to me until I pass out...the fuck me.\"\n\n\"Why?\"\n\n\"Please?\"\n\n\"Is that one of your dark fantasies?\"\n\n\"No, it is one of my fantasies about you. Will you do it?\"\n\n\"You want me to leave you tied up all day and keep coming in and fucking you?\"\n\n\"Please. But I don't want anyone else here,\" Amy said looking at me.\n\n\"Honey, why do you want to be raped?\" I asked.\n\n\"It's just a dark fantasy.\"",
        "\"Why?\"\n\n\"A strange man fucking me against my will. There is just something about that that makes me horny.\"\n\n\"But, it would be traumatic for you.\"\n\n\"I would never want actually to be raped. It is just the thought of having no control,\" Amy said.\n\n\"And that turns you on?\"\n\n\"When we had the New Year's Eve party, and I was blindfolded while every man went down on me, I came almost every time. Not knowing who it was turned me on.\"\n\n\"Do you want to be dominated?\"\n\n\"No. I just have fantasies about a man I don't know holding me down and fucking me.\"\n\n\"You get off on that?\"\n\n\"I do. I watch the recording of you fucking me while I was passed out and get off every time.\"\n\n\"You are just a little bit crazy.\"\n\n\"Maybe!\"\n\n\"We better get back downstairs.\"\n\nAmy and I got up and went to her bathroom and cleaned off any remaining cum then we went downstairs. I was surprised when I saw Sam and Dawn watching Linda go down on Rachel. We walked over to them, and Amy sat with her sister, and I sat with Dawn. I watched Dawn as she fingered herself.\n\nLinda kept working on Rachel as we watched. Dawn was getting very aroused, so I got on the floor and pushed her hand out of the way and went down on her. She leaned back and kept watching. Minutes later we heard Rachel screaming. Dawn thrust her pussy up and squirted into my mouth.\n\n\"Oh, god, yes, Linda,\" Rachel said breathlessly.\n\nI looked at the sofa and Sam, and Amy were in a 69 pleasing each other. I watched Linda sit on the floor and watch them. Soon she was fingering her pussy as Sam and Amy moaned. As soon as the two of them started coming, Linda threw her head back, and I heard her pussy gushing.\n\n\"Ahhhhh...\" escaped from her.\n\nWe all sat quietly for a few minutes.\n\n\"It's 6:30. I know we had a late lunch, is anybody hungry?\" Dawn asked.\n\n\"I just ate,\" Linda said. We all laughed at her. \n\n\"Well, if anybody wants to eat, you know where it is,\" Dawn told them.\n\nAmy and Sam got up and went and got a glass of wine.\n\n\"Anybody else?\" Amy asked.\n\n\"Not this late,\" Linda said.\n\n\"When do you have to leave,\" I asked her.\n\n\"I am thinking about in the morning,\" Linda said.\n\n\"That's okay, but you will probably want to be out of here before my employee arrives at 8:00,\" I told her.\n\n\"We will be gone long before then.\"\n\n\"Rachel, I have neglected you this weekend,\" I told her as she sat there all flushed.\n\n\"Yes, you have.\"\n\n\"Come here.\"\n\nRachel looked up at me, then got up and came and stood in front of me. I grabbed her hips and pulled her to me. She straddled my hips with her knees, and I helped her down. Dawn grabbed my cock and fed it into Rachel's pussy. I held her as she slowly slid down all the way.\n\n\"Ohhhhhhh...I still can't get used to this.\"\n\nRachel worked her hips and settled on my cock. Dawn reached up and took one of Rachel's tits in her hand.\n\n\"You need to,\" Dawn said as she rubbed her tit.\n\nI held Rachel as she slowly started working her pussy on my cock. She put her arms around my neck, and I pulled her to me. She worked her pussy on my cock for a long time as I held her.\n\n\"Emmmmm, this feels so good,\" she said. \"Ohh!\"\n\nRachel sat up, and I saw Dawn fingering her clit.\n\n\"Ahhhh, yes...\"\n\nDawn kept going as Rachel rode my cock. Linda got up and stood behind her and reached for tits. Rachel moaned as Linda started rubbing her tits. She kept working her pussy slowly on my cock.\n\n\"Ohhhh, my! Linda, we have to stay more often!\" Rachel said.\n\n\"We will.\"\n\nDawn and Linda worked on Rachel as she worked her pussy harder on my cock for a long time. Rachel was moaning constantly.\n\n\"Ohhhh! Ohhhh, my god!\"\n\nRachel sped up.\n\n\"Ahhhhhhh! I'm coming!!\"\n\nRachel started driving her pussy onto my cock hard. When I felt her start coming, I grabbed her ass and pulled her to me.\n\n\"Ahhhhhhh!!\"\n\nShe was starting to jerk on me as an orgasm ripped through her.\n\n\"Ohhhhhh!!\"\n\nI pulled her tighter to me and started pumping cum into her.\n\n\"Yes!! Oh, yes!! More!!\"\n\nI held her tight and kept pumping cum into her as she kept jerking. When her orgasm subsided, she leaned into me. \n\n\"Emmmm, that was great.\"\n\n\"Yes, you were,\" I told her.\n\nI held her for a few minutes until she sat up.\n\n\"You forgot something,\" I told her.\n\nI pulled her to me and kissed her for a few minutes.\n\n\"I guess I did,\" she said looking at me.\n\nRachel pushed herself up on her knees. She reached down and ran her fingers through the cum running down her legs, then placed them in her mouth and sucked them clean. Linda sat on my other side. Rachel ran her fingers through the cum again, and Linda took her hand and sucked her fingers into her mouth. Rachel leaned over and kissed Linda.\n\n\"I love you,\" Linda said to her when they parted.\n\nRachel got off of my lap and straddled Linda's legs. The two of them kissed for several minutes. Linda wrapped her arms around her and held her tight.\n\n*****\n\nBy 8:30 everyone decided they were hungry and had found something to eat in the kitchen. Linda had decided to have some wine. Amy, Sam, and Rachel had gone outside by the pool. Linda was sitting with us.\n\n\"I'm sorry I have caused a problem,\" Linda said.\n\n\"You haven't,\" I told her.\n\n\"I overheard Amy in the pool.\"\n\n\"She is fine now.\"\n\n\"Dawn, are we okay?\"\n\n\"Yes, Linda.\"\n\n\"How, it has been a disturbing day,\" Linda said.\n\n\"I'm sure it has been for you. Are you okay?\" Dawn asked.\n\n\"Yes, I am.\"\n\n\"Are you tired?\" Dawn asked.\n\n\"Not really. I'm surprised, but I slept past noon.\"\n\n\"I'm not sure you were sleeping, Linda,\" Dawn said.\n\n\"What happened to me?\"\n\n\"As I have been telling my husband, most women cannot physically handle a sustained orgasm. It is so physically draining, and the flood of endorphins and hormones goes to your head,\" Dawn told her.\n\nLinda sat up and looked at Dawn.\n\n\"Dawn, are you telling me that James did that to me?\"\n\n\"Yes.\"\n\n\"I thought because of what we were feeling I just had a very incredible orgasm.\"\n\n\"Not quite. Despite what I have been telling him, he held you at the peak of your orgasm.\"\n\n\"I just remember feeling so incredible when I came. I don't remember much after that. So, that is why I passed out?\"\n\n\"Yes. I was listening, and he probably held you at your peak for ten minutes or more.\"\n\n\"Oh, my god! I had an orgasm that lasted for ten minutes!\"\n\n\"At least.\"\n\n\"I wish I remembered it. Can he do it again?\"\n\n\"You will, and, I'm not sure he should.\"\n\n\"Does he do that all the time?\" Linda asked.\n\n\"He is not going to do it anymore.\"\n\n\"Dawn, does he do that to you?\"\n\n\"We do it together. Since I am helping, he can't lose control and push too hard like he did to you.\"\n\n\"You mean you can control the length of your orgasm!\"\n\n\"It is something we are working on.\"\n\n\"How long have you gone?\"\n\n\"I don't know. Linda, when that happens, my orgasms are not like yours.\"\n\n\"What are yours like?\"\n\n\"It is a physical orgasm like you have, but it is also a very deep emotional and spiritual sensation. Linda, I need to know how yours felt,\" Dawn asked.\n\nLinda sat a minute quietly.\n\n\"Linda?\"\n\n\"Dawn, it was just incredible,\" was all Linda said.\n\n\"Linda, please tell me everything,\" Dawn said.\n\n\"Dawn, it was wonderful, that's enough.\"\n\n\"Linda, it was more than that, wasn't it? I need to know everything, please.\"\n\n\"Dawn, are you sure?\"\n\n\"Yes.\"\n\n\"Last night was incredible. James spent a long time finding all of my spots, then, he tortured me by touching them. We had some great sex, then, this morning I guess, I asked him to make me have a huge orgasm. He held me like he holds you. After some time, I was lost in his love and feelings running through me.\"\n\n\"You felt all of that?\" Dawn asked.\n\n\"I felt something, then figured out what it was. Dawn, is that what happens to you?\"\n\n\"Yes, but I don't understand how you could feel that. I have never felt that in you.\"\n\n\"I don't know, but I felt incredible. I have never been so overcome by emotions like that. At some point...Dawn...I shouldn't tell you.\"\n\n\"Linda, you have to, please.\"\n\n\"I...felt like we were one person for a short period of time. I knew James loved me more than just a lover. I don't know how to explain it, but I was sure the two of us had done what we were doing before. Then...my orgasm hit. All I remember from that point is the great pleasures I was overcome with until I woke up. Dawn, I don't understand it.\"\n\n\"I think I do,\" Dawn said.\n\n\"Dawn, you can't be serious about us having known each other before,\" I said.\n\n\"Honey, you said the same thing. I believe that is it,\" Dawn said.\n\n\"Dawn, it has to be something else,\" Linda said.\n\n\"We can find out if you will let me,\" Dawn said.\n\n\"How?\"\n\n\"Let us hire a genealogist, and, I need you to meet my great-grandfather.\"\n\n\"Why him?\" Linda asked.\n\n\"He can tell.\"\n\n\"Are you serious?\" Linda asked.\n\n\"Very.\"\n\n\"How?\"\n\n\"He just can,\" Dawn said.\n\n\"Dawn, can you?\" I asked.\n\n\"I don't know. He only told me about it.\"\n\n\"I'll do it,\" Linda said.\n\n\"Thank you,\" Dawn said and hugged Linda.\n\nWe heard the girls giggling as they came in the house. They walked over and sat around us.\n\n\"You all look too serious,\" Sam said.\n\n\"What have you three been doing?\" I asked.\n\n\"Talking!\" Rachel said.\n\n\"I'm afraid to ask about what,\" Dawn added.\n\n\"Rachel was telling us about your trip since you haven't told us everything,\" Amy said.\n\n\"Well, I have the pictures.\"\n\n\"Where!\"\n\nI got up and picked up the huge stack of pictures. I separated them into several stacks and passed them around. That was the end of any sensibility until 11:00 as they traded pictures and laughed and looked. Linda came over and sat with Dawn and me.\n\n\"Dawn, I have a question? Both of you have said that you can stay at the top of your orgasm for a long time. Do you pass out?\"\n\n\"No,\" Dawn said.\n\n\"Why not?\"\n\n\"Linda, I am in peak physical condition for one. And, I have done it a few more times and can control how it affects me.\"\n\n\"You remember everything then?\"\n\n\"Oh, yes. It is incredible. It does make me tired, both of us. I sleep very well afterward.\"\n\n\"I bet you do. Can James ever do that to me again?\"\n\n\"James can do what he wants to do with you Linda, but I don't think it would be a good idea for you to do that again. Your blood pressure dropped, and your heart rate was erratactic when I got to you.\"\n\n\"It was very nice,\" Linda said.\n\n\"Linda, you will feel your orgasm more now. Get used to that first,\" Dawn told her.\n\nRachel came over.\n\n\"James, what are you going to do with those pictures?\" She asked.\n\n\"I am going to make a big one of us fucking,\" I said.\n\n\"No you're not!\"\n\n\"Yes, I am.\"\n\n\"James!\"\n\n\"Rachel, it is late. We need to get to bed,\" Linda said.\n\nRachel paused and looked at Linda. \n\n\"The two of us?\" She asked.\n\n\"Yes,\" Linda said as she stood.\n\nRachel stood and moved to Linda, Linda grabbed her and kissed her and hugged her.\n\n\"We are going to bed,\" Linda said.\n\n\"What time do you need to get up?\" I asked.\n\n\"Oh, we will be up in time and out of here by 7:00,\" Linda said.\n\n\"Okay. I will check on you when I get up,\" I said.\n\n\"Come with me,\" Linda said taking Rachel's hand and leading her up the stairs to their bedroom.\n\n\"Could you teach her?\" I asked.\n\n\"Teach her what?\"\n\n\"Teach her to handle a long orgasm?\"\n\n\"I don't know. We will have to see about the girls first,\" Dawn said.\n\n\"Dawn? Is everything okay?\" Amy asked as she Sam came to us.\n\n\"Yes. There is just a lot going on we have to figure out.\"\n\n\"Do you really think they knew each other in another lifetime?\" Sam asked.\n\n\"Yes, I do,\" Dawn said. \"Do you two want to go with us to see my great-grandparents?\"\n\n\"Yes!!\" They both screamed.\n\n\"Okay. My great-grandfather will like you two.\"\n\n\"James, Dawn, I'm sorry about earlier,\" Amy said.\n\n\"Come here,\" I said.\n\nAmy got up and came and sat in my lap. I wrapped my arms around her.\n\n\"You know I love you,\" I said.\n\n\"I know.\"\n\n\"I don't love you any differently now. I want you to understand that. I don't love Dawn or Sam any less now...okay?\"\n\n\"I know. But, do you love Linda more now?\" Amy asked me.\n\n\"Honey, I love Linda differently now. Something happened I can't explain right now, but, something happened between us that was very strange. What it is, I don't know.\"\n\n\"Do you love her like a wife now?\"\n\n\"I talked to you about that.\"\n\n\"But Dawn thinks you two were married before.\"\n\n\"I don't know about that. I will tell all of you that there is something different between us now. We don't know what it is.\"\n\n\"But you love her more now?\"\n\n\"Amy, I love her differently now. I don't love her more than you or Sam. I still love Dawn as my wife, I love you two as my wives. I have to work through my love for Linda, but I love her too.\"\n\n\"Like a wife?\" Amy asked.\n\n\"I don't know. All of us will work through that, okay?\"\n\n\"I guess.\"\n\n\"Why don't we all go bed together,\" Sam said.\n\n\"That sounds like a good idea,\" Dawn said.\n\n\"You two go on up,\" I said.\n\nThey went up the stairs.\n\n\"Honey, what is all this with your great-grandfather knowing?\"\n\n\"James, Linda needs to know. I can't do that,\" Dawn said.\n\n\"What do you mean?\"\n\n\"He just will. Are you ready for bed?\"\n\n\"Come on.\"\n\nWe got up and went up to our bedroom. Amy and Sam were sitting on the edge of the bed waiting. Dawn got in the middle of the bed and laid back.\n\n\"James, next to Dawn,\" Amy said.\n\nI got in next to Dawn and lay with her. Amy got on my other side, and Sam got on Dawn's other side and pulled up the sheets and turned off the lights. I reached next to me and held Dawn's hand.\n\n*****\n\n\"Honey! Hold on!\" I felt myself yelling.\n\n\"I can't, let me go before you fall in!\" I could see Linda screaming as I pulled on her hand. She was sliding away from me into an icy river.\n\n\"I've got you! Hold on!\" I wrapped both of my hands around Linda's and pulled. I suddenly felt my feet slipping in the mud.\n\n\"James!!\"\n\nI sat up in the bed sure Dawn had heard me screaming. It was still dark. I turned and looked, and Dawn and the girls were still asleep. I was breathing so hard as I sat in the dark. I had my head in my hands as I sat until I calmed back down.\n\n\"Lay back down,\" I heard Dawn say.\n\nI lay back next to her. She laid her arm over my chest and held me. I was still shaking from the dream.\n\n\"James,\" I hear.\n\nI looked up and saw a tall female silhouette in the bedroom door. I thought I was still dreaming.\n\n\"Go to her,\" Dawn said.\n\nI pushed the sheet back and moved off the end of the bed and went to the shadowy female figure and wrapped my arms around her.\n\n\"I'm happy you are alright,\" she said. \"I miss you.\"\n\nShe kissed me, and I watched as the figure turned and walked down the hall and disappeared. My head was swimming, but I made it back to the bed.\n\n*****\n\nThe alarm went off at 5:30, I woke up and turned to Dawn. She was awake looking at me.\n\n\"Good morning,\" I said and kissed her forehead.\n\n\"James! Wake up!\" I heard Dawn yelling as the clock went off.\n\n\"What?\" I said as I woke up.\n\n\"You were screaming,\" Dawn said. \"Are you alright?\"\n\n\"Yes. What is going on?\"\n\n\"You woke us up screaming. I couldn't get you to wake up.\"\n\nI finally looked around, and Sam and Amy were looking at me.\n\n\"I guess it was a bad dream,\" I said.\n\n\"I'm going to my bed,\" Amy said.\n\n\"I'm coming with you. Don't you two ever sleep in late?\" Sam said. The two of them got up and left the bedroom.\n\n\"Honey, what were you dreaming about?\"\n\n\"I'm not sure. Did I get out of bed last night?\"\n\n\"No, I have been holding you all night. It would have woken me up,\" Dawn said.\n\n\"Did you feel anything before I woke up?\"\n\n\"No. What were you dreaming about? I didn't feel anything that woke me up until you started screaming?\"\n\n\"What was I screaming?\"\n\n\"You were just screaming.\"\n\nI sat up in bed and tried to recall what I had been dreaming about. Nothing came to me.\n\n\"Well, I'm awake now. What are you doing today?\" I asked Dawn.\n\n\"I have to go to the school for a while; then I will be back. Our designer is coming Tuesday so I can get her started on your studio.\"\n\n\"Okay. I better check on Linda and Rachel and make sure they are up.\"\n\nI got out of bed and walked down to Linda's room. They were not in bed. I went back to my room.\n\n\"Are they up?\" Dawn asked.\n\n\"I guess, they are not in bed.\"\n\n\"Why don't you come with me and shower,\" Dawn said as she looked at me.\n\nDawn got out of bed, and I followed her to the shower. I was still distracted while I showered. While we were drying off, I saw Dawn watching me.\n\n\"James, you seem distracted. What is going on?\"\n\n\"I guess it is just everything that happened this weekend.\"\n\n\"Were you dreaming about Linda again?\"\n\n\"I don't know.\"\n\n\"Maybe it will come to you. Why don't you got check on her.\"\n\nI took my towel with me and walked down the hall. Linda and Rachel were getting dressed.\n\n\"Good morning, you two,\" I said.\n\n\"Good morning.\"\n\n\"Can you stay for breakfast?\"\n\n\"No, we need to get going to the office. We will get something on the way,\" Linda said.\n\n\"Did you two enjoy staying the night?\"\n\n\"Yes,\" Rachel said. Linda turned and looked at her.\n\n\"Yes, we did,\" Linda said.\n\n\"You know you can come and stay anytime,\" I told them.\n\n\"We know. James, are things going to be alright?\" Linda asked.\n\n\"Yes. We are going to need to talk, all of us.\"\n\n\"I'm going to clear my schedule for the next weekend. I can't wait to meet Dawn's great-grandparents.\"\n\n\"Uh, okay. I will go make some coffee,\" I said and turned and headed downstairs.\n\nI was in the kitchen making coffee; my head was still someplace else. Dawn walked up and took my arm, and I jumped.\n\n\"Hey? What is wrong?\"\n\n\"Nothing, just thinking,\" I said. \n\nDawn turned me and hugged me and kissed me. I looked at her in her sexy lingerie then kissed her.\n\n\"Good morning, Dawn,\" I heard Linda say as she walked into the kitchen.\n\n\"Good morning.\" Dawn went to Linda and kissed her, then Rachel. \"Did you two have a good night?\"\n\n\"Yes, we did. It was so nice to wake up with Rachel in a familiar place.\"\n\n\"Rachel? Did you have a good night?\" Dawn asked.\n\n\"Yes, until this morning.\"\n\n\"Sorry you had to get up,\" Dawn said.\n\n\"No, she woke me tossing and turning in her sleep.\"\n\n\"Sorry, about that. I was having a bad dream,\" Linda told Rachel and hugged her. \"Dawn, I need to talk to you soon.\"\n\n\"Okay, when?\"\n\n\"Let me check when I get to work. Maybe Wednesday night?\"\n\n\"Okay. Call me. We need to discuss a few things.\"\n\n\"I will after I get to work.\"\n\n\"Come for dinner, and then we can have a girl talk.\"\n\n\"Okay. I hope we can figure all this out. Dawn, are we okay?\" Linda asked.\n\n\"Linda, we are good. We can't fight what is happening.\"\n\n\"Maybe it was just something that happened.\"\n\n\"As long as you two are doing better,\" Dawn said.\n\n\"I'm okay. My mind is working overtime,\" Linda said.\n\n\"I think James' is too.\"\n\nLinda walked to me and hugged me tightly.\n\n\"I'm, happy you are alright. I miss you,\" Linda said as I hugged her.\n\nIt all come rushing back in my head. I let go of Linda and held her and looked at her. She was looking at me.\n\n\"James...\" came from Linda as she looked into my eyes.\n\nI knew she had had the same dream. I pulled her back to me and kissed her.\n\n\"We will figure this out,\" I whispered in her ear before I released her.\n\n\"We better get going,\" Linda said. \"Rachel, you drive. I will talk to you later Dawn.\"\n\nLinda and Rachel left. Dawn came to me and wrapped her arms around me tightly and held me for several minutes.\n\n\"I love you,\" Dawn said.\n\n\"Honey, what is happening to me?\"\n\n\"I have to be right. What happened when you held Linda?\" Dawn asked looking up at me.\n\n\"Let's go sit.\"\n\nWe walked to the den and sat on the sofa.\n\n\"Honey, are you sure I didn't get out of bed last night?\"",
        "\"You didn't. Why?\"\n\n\"I clearly remember waking up and seeing Linda standing in the door of the bedroom. I was looking, and you told me to go to her. I got up and walked to her and hugged her. She said, \"I am happy you are alright. I miss you,\" then I kissed her.\"\n\n\"James, you didn't get up, and I never said that. Are you sure it was Linda you saw?\"\n\n\"I saw a tall female silhouette in the doorway. I assumed it was her. After I kissed her, things got fuzzy, and I watched her walk down the hall, but she didn't go into her room, she disappeared.\"\n\n\"Oh, my, god.\" Dawn was looking at me. I saw tears forming in her eyes.\n\n\"What is it?\" I asked. I grabbed Dawn in my arms and held her. \"Honey, I love you. I will always love you. I'm not going anywhere.\"\n\nDawn was crying now.\n\n\"Please don't do this,\" I said.\n\n\"There is nothing I can do.\"\n\n\"Honey, maybe it is true, and Linda and I have some kind of bond, but it is nothing like the bond you and I have, you know that. Please, stop crying.\"\n\nI held Dawn for a while before she stopped crying. I released her and looked into her eyes.\n\n\"I love you. You are my only spiritual wife,\" I said to her.\n\n\"I love you too.\"\n\n\"Honey, we will be together always. Stop worrying about this, please.\"\n\n\"Honey, when you held Linda just now, I was overcome by a great feeling of love and loss. You didn't have a dream last night when you saw her spirit, that was both of your spirits reuniting.\"\n\n\"Dawn, please.\"\n\n\"James, you must believe what I am telling you. Why else would she have said that this morning?\"\n\n\"I don't know.\"\n\n\"You felt something, didn't you?\" Dawn said.\n\n\"Yes. When she said that, I remembered all of last night. I also felt a great feeling of love from her. Dawn, this can't be. It was the kind of feeling I had when we first met. How can that be?\"\n\n\"I don't understand either. Maybe my great-grandfather can explain it.\"\n\nI took Dawn back into my arms and held her. We stayed this way a long time as we shared our love.\n\n\"Is everything okay?\" We heard Sam ask.\n\nWe opened our eyes, and she was standing next to us.\n\n\"Yes, honey,\" Dawn said.\n\n\"Are you sure?\"\n\n\"Yes, something happened this morning, and we have been talking about it,\" Dawn told her.\n\nSam sat down behind Dawn and leaned over and held her.\n\n\"It is all going to be alright,\" Sam said as she held Dawn.\n\nAfter a few minutes, we got up, and Sam went and got a cup of coffee with us. We sat in the kitchen until about 7:00 before Dawn went to finish dressing.\n\n\"James, everything is going to be okay, isn't it?\" Sam asked.\n\n\"Yes, honey.\"\n\n\"What happened this morning?\"\n\n\"It is hard to explain. We'll talk about it later. We better go get dressed. What are you and your sister doing today?\"\n\n\"Nothing. We are planning on hanging around here and see if we can help.\"\n\n\"Okay. Sherri will be here at 8:00, make sure you two have clothes on before you come down.\"\n\n\"We will. What can I do?\"\n\n\"You can help me put together a list of prices for all the limos. I need to make contact with the manufacturers. After that, you and Amy see if you can help Sherri. I have to go into town at lunch to see someone at the bank.\"\n\n\"Okay.\"\n\nWe put our coffee cups in the sink, then Sam wrapped her arms around me and held me for a minute.\n\n\"You feel confused,\" Sam said after she let go of me.\n\n\"I am.\"\n\n\"Why?\"\n\n\"Dawn said I met a ghost last night.\"\n\n\"What!\"\n\n\"We'll talk about it later.\"\n\nI took Sam's hand and led her up the stairs. She stopped me at my room and pulled me down and kissed me.\n\n\"I love you,\" she said.\n\n\"I love you too, honey.\"\n\nI went in the bedroom, and Dawn was pulling up a skirt.\n\n\"Do I feel confused?\" I asked.\n\nDawn looked up at me.\n\n\"Yes.\"\n\n\"That is what Sam said.\"\n\n\"What?\"\n\n\"She held me and then told me I felt confused.\"\n\n\"I don't believe her. Feeling strong emotions is one thing, but for her to be able to feel that in you is something else. She keeps surprising me.\"\n\n\"I hope that is good.\"\n\n\"It is, I guess.\"\n\nDawn finished dressing while I grabbed some pants and slipped them on.\n\n\"What time do you think you will be home?\" I asked.\n\n\"After lunch.\"\n\n\"I have to go down to the bank around lunch where all of the business accounts are set up. I should be back soon.\"\n\n\"Okay.\"\n\n\"Amy and Sam are going to be here to help.\"\n\n\"I better keep an eye on them until you get back. Finish dressing, I will start breakfast,\" Dawn said.\n\nShe left the bedroom, and I sat on the edge of the bed for a few minutes lost in thought.\n\n\"Hey, are you coming to breakfast?\" Sam said standing in the doorway in a short robe.\n\n\"Oh...yes. Let me get a shirt.\"\n\nI picked up a shirt and put it on and went with Sam.\n\n\"Where is your sister?\"\n\n\"Downstairs.\"\n\nI went downstairs with Sam, and we sat while Dawn finished cooking. Once we were eating, we all sat quietly.\n\n\"I'll be home right after lunch,\" Dawn said. \"Can we trust you two with Sherri?\"\n\nAmy and Sam smiled.\n\n\"Maybe,\" Sam said.\n\nThe gate buzzer went off.\n\n\"That is Sherri,\" I said.\n\nI got up and went to the door; she was getting out of her car.\n\n\"Good morning!\" She said.\n\n\"Good morning, you sound ready to go.\"\n\n\"I am. I had a great weekend working with Brenda.\"\n\nSherri came in the door.\n\n\"Oh, good morning you all,\" she said to the girls.\n\n\"Good morning, Sherri,\" they said.\n\n\"You want some coffee?\" I asked.\n\n\"Sure.\"\n\nI walked Sherri to the kitchen and poured her a cup of coffee.\n\n\"You missed breakfast,\" Dawn said.\n\n\"That's okay. Hi, Sam. Hi, Amy.\"\n\n\"Hi.\"\n\n\"Did you and Brenda get a lot done?\" I asked.\n\n\"Oh, yes. We had a good time. I think by the end of the week, we can give you some preliminary numbers.\"\n\n\"Great.\"\n\n\"I need to get some things off of my computer for you,\" Sherri said and headed to my study,\n\n\"James, does she always dress like that?\" Amy asked.\n\n\"Yes. I told her she could dress more casually if she wanted, but she said she was comfortable like that.\"\n\n\"I need to go,\" Dawn said.\n\n\"We'll clean up,\" Amy and Sam said.\n\nI walked to the door to the garage and hugged and kissed Dawn before she left. I was walking to the study when I heard her Ferrari fire up.\n\n\"So, what do you have for me?\" I asked Sherri. She looked up from her computer and smiled at me.\n\n\"I have some estimates on the number of items we need to start with. Brenda and I just need to sit down and decide how many of each and what sizes.\"\n\n\"How did you two come up with this.\"\n\n\"She knew how many units her old store stocked and so did I. We spent a lot of time on the internet looking at designs and came up with an estimate to start with.\"\n\n\"Great.\"\n\n\"How was your weekend?\" Sherri asked.\n\n\"Interesting.\"\n\n\"Here is your copy, we can go over them.\"\n\nSherri handed me a copy, then sat on the sofa near my desk. I got my morning look at her beautiful legs.\n\n\"James, do you want me to bring my computer down from my bedroom?\" I heard Sam ask.\n\nI looked up, and she was standing in the door with her robe untied.\n\n\"Yes, please,\" I said to her. Sam turned and walked off.\n\n\"She is so pretty,\" Sherri said.\n\nSherri explained the numbers she had to me for a while. They looked good. Sam came in a few minutes later in some shorts and a t-shirt.\n\n\"Where do you want me to start?\" She asked as she sat next to Sherri.\n\nI pulled out a folder. \n\n\"There is a list in here of all the limos we want and approximate prices. Will you put them all on a spreadsheet for me like you did the other numbers?\"\n\n\"Sure.\" Sam got up and took the folder and went back out.\n\n\"Oh, I have something for you,\" I said.\n\nI turned and went through the five boxes of business cards until I found Sherri's.\n\n\"Here you go,\" I said and handed them to her.\n\nShe opened up the box and pulled one out.\n\n\"Wow, these look nice!\"\n\n\"I guess you are official now.\"\n\n\"It looks like it.\"\n\n\"Those are your cards for Allure Holdings. Once the store is open, you will have another set for the store to give to customers.\"\n\n\"You got these quick.\"\n\n\"Linda brought them Friday.\"\n\n\"She was here?\"\n\nOops.\n\n\"She came by and dropped those off along with letterhead and other things.\"\n\n\"I can't wait to meet her again. I have been reading about her on the internet. Is she a friend of yours?\"\n\n\"Yes, she is a friend of the family now.\"\n\n\"Great. Is she really worth billions?\"\n\n\"Yes.\"\n\n\"Wow.\"\n\nSherri sat her cards next to her purse on the table and sat back down on the sofa. She turned to me.\n\n\"Are we still going to New York Saturday?\"\n\n\"Yes. Can you stay here Friday night so we can leave on-time?\"\n\n\"Of, course, I can.\"\n\nSherri turned a little further toward me. She had her legs spread on purpose because when I looked, she had no underwear on.\n\n\"You and Brenda must have talked about a lot of things this weekend.\"\n\n\"We did.\"\n\nI glanced down at her young pussy lips again then I looked up at her white silk top. I could clearly see her nipples poking through the material. Her and Brenda had talked about too much it appeared.\n\n\"I have something for you to read and sign,\" I told her.\n\nI got out one of the copies of the sexual harassment contracts I had added our names to. \n\n\"This is a non-sexual harassment contract I need you to sign. Since you will be working closely with me and in the stores wearing very little clothing, everyone that works for you will have to sign this.\"\n\n\"James, you don't need that from me.\"\n\n\"Yes, I do. It may not hold up in court, but it will help if something happens. You need to read it and have someone look over it if you need to and get it back to me.\"\n\n\"No problem,\" she said taking the paperwork.\n\n\"James, where you have more than one listed, do you want me to multiply that out?\" Sam said from the door.\n\n\"Yes. At the bottom, there are some listed under security, break those out separately.\"\n\n\"Okay.\" Sam left again. She was checking up on me.\n\n\"When does she start school?\" Sherri asked.\n\n\"About the middle of September.\"\n\n\"When are they leaving for Hawaii?\"\n\n\"As soon as school is out. Are you going to be able to go?\"\n\n\"I think so.\"\n\n\"Great. They can use your guidance.\"\n\n\"Is your wife going with us?\"\n\n\"I think so.\"\n\n\"What will you be doing while we are all gone?\" Sherri asked with a smile.\n\n\"I'm sure I can stay busy. When you get back, you and Brenda are off until after the first of the year.\"\n\n\"Okay.\"\n\n\"And, you will have the week of Thanksgiving off.\"\n\n\"Do you go and visit your family at Thanksgiving?\" Sherri asked.\n\n\"They come here.\"\n\n\"That's good.\"\n\n\"Anything I can do?\" Amy said as she walked in.\n\n\"I have something for you and your sister.\"\n\nI picked up the two boxes of business cards for them and handed them to Amy.\n\n\"Those are your business cards for Allure Holdings.\"\n\n\"Wow.\" \n\nAmy sat on the sofa and opened the box and took one out.\n\n\"Uhhh, James...this says Vice President on it.\"\n\n\"That is what you are.\"\n\n\"Really?\"\n\n\"Yes. Dawn is the President, and you and your sister are Vice Presidents. Sherri is Director of Marketing, and so is Brenda.\"\n\n\"But, we are not helping you.\"\n\n\"You will be, trust me.\"\n\n\"Can we still work in the store?\"\n\n\"If you want to.\"\n\n\"Okay.\"\n\nAmy got up and took the cards with her.\n\n\"She looks so much like her sister,\" Sherri said.\n\n\"They are a handful.\"\n\n\"And, you are having sex with them?\"\n\n\"I told you that we all have sex together, Sherri.\"\n\n\"Your wife is special.\"\n\n\"Yes, she is. More than you know.\"\n\nSherri and I discussed numbers and other things until about 11:00. Sam kept coming in asking questions.\n\n\"Sherri, I have to run into town for a while. Dawn will be home after lunch, probably before I get back.\"\n\n\"Okay.\"\n\nI got up and went to the den. Sam and Amy were working on my spreadsheet.\n\n\"You two, I am going into town for a while. I will be back after lunch.\"\n\n\"Can we take Sherri to lunch?\" Sam asked.\n\n\"If you two will put some more clothes on,\" I told them.\n\n\"Okay!\" \n\nI went upstairs and put on some more appropriate clothes. Amy came to my room naked.\n\n\"Amy, put some clothes on, please.\"\n\n\"I am!\"\n\nShe walked to me and pulled me down and kissed me.\n\n\"I have never been a vice president before.\"\n\n\"Well, you are now.\"\n\nShe kissed me again and left my room. I finished putting on a tie and went downstairs; Sam was talking to Sherri; she had changed.\n\n\"Sam, I will leave you the Escalade,\" I told her as I walked to her and handed her a credit card.\n\n\"Oh, we can go shopping!\"\n\n\"Maybe that would be a good thing for the three of you to do this afternoon. Sherri, can you take them to other places in town that sell nice swimwear?\"\n\n\"Sure, there aren't many.\"\n\n\"What about lingerie?\" Sam asked.\n\n\"I will let Brenda take all of you around town. I want you to see the good stuff and get an idea for prices before we go to New York.\"\n\n\"Okay.\"\n\n\"I will see you later.\" I leaned over and kissed Sam without thinking.\n\nI went to the garage and got in my Vette and headed downtown. I was at the bank by noon. I parked in the garage and went up to the lobby. I met a receptionist as I went in.\n\n\"I'm looking for Ian Dain?\" I told her.\n\n\"Third floor, Suite 304.\"\n\n\"Thank you.\"\n\nI got on the elevator and went up to the third floor. I found Suite 304 and knocked on the door.\n\n\"Come in!\"\n\nI opened the door and walked into a plush office. There was a blond headed guy sitting at his desk, looked late thirties, but there was also a lady about 5'2\" with jet black hair down to the middle of her back in a white lab coat leaning against his desk with her back to me.\n\n\"Mr. Dain, I'm Dr. James Smith.\"\n\n\"Oh, hi!\"\n\nThe lady stood and turned around. I watched as she buttoned her lab coat up from just below her breasts. I got a good peek at some nice looking tits as she did.\n\n\"Linda said you would be coming by. Dr. Smith, this is my wife, Sondra.\"\n\n\"Hello, Sondra.\"\n\n\"Hi,\" she said walking to me. I shook her hand and looked her over. She was gorgeous.\n\nI could smell female sex coming off of her.\n\n\"We were just having lunch,\" he said.\n\n\"Sorry to interrupt. I have lunches like this occasionally.\" His wife smiled at me.\n\n\"Have a seat,\" he said motioning to a high-back wing chair.\n\nI sat down.\n\n\"Honey, I have to get back to work,\" Sondra said as she walked to him and kissed him. I watched her walk past me as I glanced at her legs. I knew expensive silk stockings when I saw them.\n\n\"So, Dr. Smith, how do you know Linda?\"\n\n\"We met a while back.\"\n\n\"She told me about your plans to open a ladies' store. What can I do for you?\"\n\n\"We were talking about financing the store, and I told her I had the cash to put up. She said that was not the best thing to do tax wise and that I should get you to set up several lines of credit for me.\"\n\n\"How much are you talking about?\"\n\n\"Probably 3 or 4 million for the store, and 2 or 3 million for a limo business I am starting with some other people.\"\n\n\"Well, if you have that much cash, you can put it up front. But, if you set up lines of credit instead, it will work out better for taxes, and you don't have all of your money tied up.\"\n\n\"The money is not the problem, Linda said it would be better for taxes, and I hate paying taxes. I have paid enough.\"\n\n\"It will be. I have already set up Linda's line of credit for the store. She has several here. Dr. Smith, Linda said you won the lottery a few years back, is that where you got your money?\"\n\n\"Yes.\"\n\n\"What have you done with all of it?\"\n\n\"After we built a house and helped everyone, we have it invested well.\"\n\n\"Good, most people blow the money.\"\n\n\"I have a good investment manager. We draw about 10 million or more a year off it to live on.\"\n\n\"You must have it invested well. I will have to confirm that.\"\n\n\"No problem.\"\n\n\"How much are your investments worth?\"\n\n\"Right now, about 185 million.\"\n\n\"Very good. I don't see any problem.\"\n\n\"Mr. Dain, what does your wife do?\"\n\n\"She is a Veterinarian. We just moved her a few years ago from Washington State, and she is just getting her practice set up.\"\n\n\"What did you do in Washington?\"\n\n\"Same thing. We are retired military.\"\n\n\"Good. I also need to pick up some checks for our new businesses.\"\n\n\"Okay.\"\n\nIan and I sat and talked for over an hour about business and all the tax breaks. He was an interesting and nice guy. He told me how he and Sondra had met in the military and gotten married.\n\n\"What else do we need to discuss?\" He asked.\n\n\"I hope I can use you as a business advisor.\"\n\n\"That is what I am here for. I don't see any problem setting up the lines of credit for you. Linda has given me the business plan for the store, do you have one for the limo business?\"\n\n\"I am working on it. It is not as pressing as the store.\"\n\n\"Good. I need you to complete this stack of paperwork and get it back to me.\" He said.\n\nI took the folder from him.\n\n\"I can get it back tomorrow or Wednesday. I will try and not interrupt you and your beautiful wife again.\"\n\n\"That's okay. She comes by for lunch a few times a week.\"\n\n\"Maybe I can join you next time,\" I said. Ian looked at me and smiled.\n\n\"She might like that!\"\n\n\"I'll get this completed and get it back to you,\" I told him. \"One more thing, I need a payroll service.\"\n\n\"I will get you that information before you come back.\"\n\n\"Thanks.\"\n\nHe walked me out of his office, and we rode down the elevator to the first floor. He walked me over to another office.\n\n\"Monica will get your checks for you.\"\n\n\"Thanks, Ian.\"\n\n\"No problem. See you soon.\"\n\n\"Monica, I'm Dr. Smith, I need to pick up some checks and other things that Linda Williams' business manager had set up for me.\"\n\n\"Yes, sir, Dr. Smith.\"\n\nShe got up and went to a cabinet and got out several boxes.\n\n\"Dr. Smith, who else can sign these checks?\"\n\n\"My wife and the two Vice-Presidents.\"\n\n\"Okay. Take this form and have all of them sign it and bring it back. I need you to sign this one for me, please.\"\n\nI sat and signed the form for her.\n\n\"We got the transfer of one million dollars to the account. I understand you have one other account also that has not been funded yet.\"\n\n\"Yes. That will be taken care of by the end of the week.\"\n\n\"Okay. May I ask what Allure Holdings is?\"\n\n\"It will be a big surprise,\" I told her. She smiled back at me.\n\nI took the boxes and went down to the garage and put them in the passenger seat of my Vette. I drove back to the house. I saw Dawn's car in front. I grabbed the boxes and went inside; it was 2:00.\n\n\"Where are they?\" Dawn asked as I sat the boxes down.\n\n\"I sent them to lunch and shopping. I don't expect them to be back anytime soon.\" I said.\n\n\"Do you have much work to do this afternoon?\" \n\n\"No.\"\n\n\"Good, come with me.\"\n\nDawn walked to the basement doors and opened them. I followed her down to the basement. She went in the game room and pulled the doors open to the mirror room and started taking her clothes off. Once she was naked, she looked up at me.\n\n\"You too.\"\n\nI was taking my clothes off as Dawn picked up her cell phone and sent a text. Once I was naked, she took my hand and led me in the room. I turned on the lights and closed the door. She took me to the bed. Dawn lay in the middle of it and looked at me. I lay next to her.\n\n\"I need you,\" she said.\n\n\"I know you do, honey.\"\n\nDawn rolled to me and moved down and sucked my cock into her mouth for a minute. Then she looked up.\n\n\"Turn off the lights.\" I turned off all the lights except a LED above the bed as Dawn went back to work.\n\nI reached down and touched her as she sucked my cock until it was nice and hard. She grabbed it with her hand.\n\n\"Make love to me,\" Dawn said. I knew what she meant.\n\nI sat up on the bed and pulled my legs to me. Dawn moved and was soon sitting in my lap with her arms around me.\n\n\"Honey, I need you,\" Dawn said. \"I need you more than I have ever needed you.\"",
        "\"I know.\"\n\nI felt Dawn reach down and grab my cock. She lifted herself up and started it into her warm pussy. I held her as she slowly slid all the way down. Once she was settled, she placed her lips over mine and pulled me to her tight. That was the way we stayed for a long time. Dawn finally pulled away.\n\n\"Honey, I need all of your love. I need all of you,\" Dawn said.\n\n\"Always,\" I told her.\n\nDawn placed her hand over my heart, and I wrapped my arms around her and held her. She lowered her head to my shoulder. I knew what Dawn needed; I knew what we needed. I held her in the dark for a long time, just feeling her warmth and her energy.\n\n\"I love you,\" she whispered. I kissed her on the neck.\n\nWe were breathing together now, and our heartbeats were synchronized. I slid my hand down to the small of her back and held my wife. The amount of love coming from Dawn was incredible. I was open to her, and she was taking all of my love. Soon it was all mixed together, and that was all we felt.\n\n\"Move inside me,\" Dawn whispered.\n\nShe didn't mean for me to move my cock inside her. She wanted me inside of her mind and body. We had only done this a few other times because it was so intense.\n\n\"Help me,\" I whispered.\n\nDawn's hold on me tightened. I used everything I had to find all of the energy inside of her. Soon, I could feel her drawing me in. Every sensation I had just went away, except the love I had for her. I could feel her inside of me and myself inside of her. There was a reason we didn't do this often. More and more I lost all sensations of feeling and time. I drifted and drifted with Dawn. No space, no time, just our presence. I was lost in her. The few times we did this, this was the way we would stay; just together and feeling our love for each other.\n\n\"Come with me...\" I heard in my mind, then a flash.\n\n\"Hi, lover,\" I heard as what could be called awareness came into my mind.\n\nI saw Dawn standing naked in a mist filled with blue light.\n\n\"Hello, my lover,\" I heard myself say.\n\n\"Come to me,\" Dawn said.\n\nI floated to her, and she took my hands.\n\n\"You are here,\" she said.\n\n\"For you.\"\n\n\"Now I know you still love me with all you have, or you would not be here,\" Dawn said as I looked into her eyes.\n\n\"Where is here? And, what is this?\" I asked.\n\n\"A sacred place I must bring you to. You can't come with me unless I have all of your heart and spirit. This is a place of pure love, nothing else.\" She said.\n\n\"You know I love you.\"\n\n\"I do,\" Dawn said. \"I also know you love three other women.\"\n\n\"Not like I love you.\"\n\n\"No, not like you love me, or you wouldn't be here. I have to have 100% of your spirit and love, or you can't come here.\"\n\n\"You have it.\"\n\n\"I know. But, there is a woman from your past you love very much. It is an old and tragic love. You will love her always.\"\n\n\"But, I love you.\"\n\n\"I know, but the love between you was not finished and is deep. Now, it will exist in our world forever, unless it is broken.\"\n\n\"How can it be broken?\"\n\n\"That is not for me to decide. It can be done, but it is up to you and her.\"\n\n\"But, I don't understand what it is between us.\"\n\n\"Come.\"\n\nI took her hand, and we drifted. After some time, the mist turned dark, then cleared. We were standing in a forest in the middle of winter.\n\n\"Look,\" Dawn said.\n\nI looked and saw a couple walking through the forest. They came to a frozen river, and he told her it was okay to cross. They started out over the river, and the ice beneath the lady broke, and she screamed as she plunged into the river.\n\n\"Go and save her,\" Dawn said.\n\nSuddenly I was dressed and lying on the ice reaching out for Linda. It was her, she had long blonde hair, but it was her.\n\n\"I've got you!!\" I screamed as I pulled on her hand.\n\n\"James!! Help!!\" She screamed in a panic.\n\n\"Grab my hand, my love!!\" I screamed.\n\nI had both of my hands wrapped around hers as I pulled and pulled. I felt my feet slipping on the riverbank.\n\n\"Linda, hold on to my hands!!\"\n\n\"I'm trying!!\"\n\nShe was looking at me with terror in her eyes. I grabbed her tighter and pulled.\n\n\"James!! I can't make it!! Release me and raise our baby!!\"\n\n\"I'm not letting you go!!\"\n\n\"You must!!\"\n\n\"I will never let you go!!\"\n\nI felt my feet slide and I was on the ice holding her, then the ice gave way beneath me. It was suddenly dark and cold.\n\n\"You told her you would never let her go,\" Dawn said as I stood next to her again. \"Neither of you survived.\"\n\n\"She said there was a baby?\"\n\n\"There must have been. Do you understand now why you two still have such a love for each other, James?\"\n\n\"But, it seems like such a long time ago,\" I said.\n\n\"It was. But love never dies, James.\"\n\n\"But, I love you as my true wife!\"\n\n\"But you love Linda as your wife in the past.\"\n\n\"That is in the past!\"\n\n\"Love never dies. You two have met again. You will be together forever because you vowed to never let her go.\"\n\n\"Dawn, I love you.\"\n\n\"I don't know if I can compete with lost love.\"\n\n\"There is no competing. Maybe Linda and I were married in the past, but I am married to you now.\"\n\n\"I love you too, but you will have to choose,\" Dawn said.\n\n\"What? I can't do that!\"\n\n\"Then you still love her as a wife.\"\n\n\"I love you as my wife. But, I have a love for Linda too, and Sam and Amy.\"\n\n\"I know.\"\n\n\"Dawn, I want to go back, I want to feel your love for me!\"\n\n\"And yours for me.\"\n\nSuddenly I was aware that I was holding Dawn again. All of our love was flowing through us. \"I love you\" I heard myself say from somewhere. \"I know,\" I heard Dawn say.\n\nI was still inside Dawn, and she was still inside me. Our love for each other grew more and more as time past. I knew Dawn understood that I loved her as my wife and always would. I could feel her happiness as we were merged together. We stayed this way.\n\n\"I love you,\" I heard Dawn whisper in my ear.\n\n\"I love you always,\" I whispered back.\n\nI felt Dawn trembling in my arms. Everywhere we were touching was hot. She kept shaking as I held her. An incredible feeling I had never felt from her went through my body. It was pure love, but nothing like I had ever felt from her before. I held her tight as she shook, then there was an incredible burst of light.\n\n\"Ahhhhhh!!\" I heard both of us screaming.\n\nDawn was shaking violently in my arms as I held her tighter and tighter. \n\n\"James!!\" She screamed, and we both started having one orgasm after another.\n\n\"Dawn!!\"\n\nI was erupting inside her over and over and over hard.\n\n\"Yes!!\" She screamed.\n\nWe kept coming together repeatedly.\n\n\"Ahhhhh!!\" I screamed.\n\n\"Oh, god!!\" Came from Dawn.\n\nSlowly things started to subside until we were a gasping bundle of flesh. I felt Dawn's lips on mine and her hands behind my head. We were both breathing so hard.\n\n\"I love you!\" Dawn yelled and hugged me.\n\n\"I will love you forever!\" I told her.\n\nThe two of us finally were breathing normally as we set together.\n\n\"Dawn, what did you do?\" I managed to get out.\n\n\"Hold me,\" was all I got back.\n\nI held Dawn for a long time.\n\n\"I shouldn't have taken you there,\" I heard Dawn say.\n\n\"Where?\"\n\nDawn sat up, and I could see her looking at me in the faint light.\n\n\"To the spirit plane.\"\n\n\"What?\"\n\n\"To the spirit plane. My place for discovery.\"\n\n\"But, how did you know what happened?\" I asked.\n\n\"I didn't. You recalled all of that from your past life.\"\n\n\"But, it was so real,\" I said.\n\n\"It was real honey, you and Linda died there.\"\n\n\"Honey, you have never done anything like this before. Why did you do it now?\"\n\n\"I needed you to understand.\"\n\n\"But, you said I could only be with your there if you had 100% of my love.\"\n\n\"I had to take the chance. I had to know I have all of you,\" Dawn said.\n\n\"Do you, now?\"\n\n\"Yes.\"\n\n\"But you said I had to make a choice about loving Linda. Does that mean I can never see her again?\"\n\n\"No. It is a choice you will have to make about your spirits being together forever.\"\n\n\"What are you talking...and how did you do that!\"\n\n\"I haven't done that since I was a teenager. I wasn't sure I could do it by myself and with you.\"\n\n\"What was it?\"\n\n\"I took you to the spirit plane. My grandmother and I used to do that with my great-grandparents to visit my ancestors,\" Dawn said.\n\n\"Uhh...you what?\"\n\n\"I know all of my ancestors, honey. I have been with them there.\"\n\n\"Dawn, you are freaking me out.\"\n\n\"I never told you for that very reason. All of my knowledge and wisdom comes from them. I never tried that on my own. Honey, that was very special for you, I doubt there are very few white people that have been there.\"\n\n\"You are serious, aren't you?\"\n\n\"You were just there.\"\n\n\"Why did you do this?\"\n\n\"I was on the phone most of the day with my grandmother, telling her about everything. She told me I had to take you if you would come so you would know.\" Dawn told me.\n\n\"What do you mean, if I would come?\"\n\n\"Honey, you felt what happened. You had to trust me with all of your heart to come with me. You also had to love me completely. Only those that have pure love can travel with a guide.\"\n\n\"I hope you understand then that I have nothing but pure love for you now,\" I said.\n\n\"On this plane of existence, you do.\"\n\n\"Stop it! What is all this plane of spirit and existence?\"\n\n\"Honey, right here, right now, in this world and at this time, we are us. But, planes of existence can break through into others. That is what is happening between you and Linda. Your love for each other is breaking through from another time and plane.\" Dawn said as she looked at me.\n\n\"But, you know I love you right here, right now!\"\n\n\"Yes.\"\n\n\"Thank god!\"\n\n\"But, you still have a special love for Linda.\"\n\n\"You said I could choose?\"\n\n\"The love you have for her will always be in your heart, but you can choose to separate the bond between the now and then. To break the connection between the other time and plane.\"\n\n\"How?\"\n\n\"If that is what you want to do, my great-grandfather can do it. But, you have to choose that.\"\n\n\"Would I still love Linda?\"\n\n\"Yes, but like you love Sam or Amy. The tie between your souls would be broken.\"\n\n\"How do you know this?\"\n\n\"I just do.\"\n\n\"There is still so much about you I don't know, Dawn.\"\n\n\"I know. I will tell you more now because it doesn't get much weirder than this.\"\n\n\"You're not weird.\"\n\nI took Dawn and laid her on her back and stayed between her legs. I hadn't realized it, but I was still hard after all that had happened. We lay together and made passionate love on this plane for a long time.\n\n\"Honey, will you take me there again someday?\" I asked as I lay next to her.\n\n\"If there is a reason too.\"\n\n\"Will we ever be inside each other like that again?\"\n\n\"Yes.\"\n\n\"There is no telling what time it is, we better go back upstairs,\" I said.\n\n\"James, I love you, always.\"\n\nI rolled to Dawn and kissed her.\n\n\"Always,\" I told her.\n\nI found the remote and brought the lights up slowly. The sheets were all off of the bed and on the floor. We sat up and held each other.\n\n\"I don't need to tell you that you can't tell the girls or Linda about this,\" Dawn said.\n\n\"Of, course.\"\n\nI stood, expecting to be exhausted, but I wasn't.\n\n\"Are you tired?\" I asked.\n\n\"No.\"\n\n\"We should be.\"\n\nDawn turned to me.\n\n\"One day, you will understand,\" she said with a smile.\n\n\"Understand what?\"\n\n\"What happened before we just had sex did not happen on a physical plane. It happened on our spiritual plane. The only physical sex we had, was just now,\" Dawn said smiling.\n\n\"You are scaring the shit out of me!\"\n\n\"I will have to explain it to you,\" she said and kissed me and giggled.\n\n\"When can we do it on your plane again?\" I asked.\n\n\"Anytime!\"\n\nWe left the mirror room and went to the bathroom in the basement and showered. Once we were dry, we walked back and put our clothes on.\n\n\"There is no way we can avoid it, but Amy and Sam may have some type of reaction when they touch one of us,\" Dawn said.\n\n\"Why?\"\n\nDawn turned and placed her hand over my heart. I felt all of her.\n\n\"Damn! You feel incredible, honey!\"\n\n\"You do too,\" Dawn said.\n\nI looked at the clock in the game room, and it was 9:30.\n\n\"My god, it is 9:30,\" I said.\n\n\"James, honey, when I visited my ancestors sometimes it was days before we came back,\" Dawn said.\n\n\"You are fucking kidding me!\"\n\n\"No, I'm not.\"\n\nI took Dawn's hand and led her up the stairs. We were met by two sets of stares as we topped the steps.\n\n\"What is going on?\" Sam asked.\n\n\"James and I have been together.\"\n\n\"Since 2:00?\"\n\n\"Yes. Did you two eat?\"\n\n\"Hours ago!\"\n\n\"You two, we have been working out some things,\" Dawn said.\n\n\"In a special way?\" Amy asked.\n\n\"Yes.\"\n\n\"Is everything good now?\"\n\n\"Yes.\"\n\n\"I got your text; you said not to interrupt you two,\" Amy said.\n\n\"We are fine,\" Dawn said.\n\nAmy and Sam got up and ran to us. Amy wrapped her arms around Dawn and Sam wrapped hers around me.\n\n\"What?\" Sam said looking up at me; then her eyes rolled back in her head.\n\n\"Sam!\" I yelled and caught her before she hit the floor.\n\n\"Dawn, what is happening?\" I heard Amy say.\n\nI picked up Sam from the floor and carried her to the den and laid her on the sofa. She was out cold. I looked back, and Dawn was holding Amy up and guiding her to the loveseat.\n\n\"Amy, honey, sit right there,\" Dawn said. She went to the kitchen and poured a glass of wine and came back. \"Drink this.\"\n\nAmy took several sips.\n\n\"Incredible,\" Amy mumbled.\n\n\"Are you okay,\" Dawn ask.\n\n\"Yes! I am more than okay. How can I feel all that love coming from you?\" Amy asked Dawn. \"Why did Sam pass out?\"\n\n\"Amy, James and I have been in a special place, all of our love is on top of our feelings right now. I was afraid you two couldn't handle it.\"\n\n\"I feel incredible. I am full of both of yours love. It is incredible! Is sis okay?\"\n\n\"She was just overcome,\" Dawn said.\n\n\"Give me your hand, Dawn,\" Amy said.\n\n\"Are you sure?\"\n\n\"Yes.\"\n\nAmy took Dawn's hand; she closed her eyes for a few minutes.\n\n\"Wow. Have you two settled this thing with Linda?\" Amy asked.\n\n\"There was nothing to settle, honey. James and I just needed to be together for a while.\"\n\n\"Incredible. What do we do about sis?\"\n\n\"I think it would be best to just let her be,\" Dawn said. \"But, you can hold her.\"\n\nAmy got up and went to the sofa and lifted her sister's head up and sat and laid her head in her lap.\n\n\"We left you something to eat,\" Amy said as she stroked her sister's head.\n\n\"Thanks.\"\n\nDawn and I got some leftovers and sat and ate. \n\n\"Kerri is coming tomorrow after work; I am going to let her take care of designing your studio, I'm just too busy,\" Dawn told me.\n\n\"That's fine.\"\n\n\"What are you doing about the limo business?\"\n\n\"I'm working on it. I need to find one of them to run it and manage it so I can be hands off.\"\n\n\"Good idea,\" Dawn said\n\n\"Dawn, honey, thank you for tonight.\"\n\n\"You're welcome, but there are still things you have to do.\"\n\n\"Right now, I am just thinking about what we did.\" Dawn looked up and smiled.\n\nWe finished eating and cleaned up the kitchen. I walked over to check on Sam.\n\n\"How is she?\"\n\n\"She is okay. I wish she would wake up,\" Amy said.\n\n\"Let me see if I can help.\"\n\nI got on the floor next to Sam and placed my hand over her heart. I could feel her energy running through her body like crazy.\n\n\"Do you know what to do?\" Dawn asked from behind me.\n\n\"Her energy is going crazy. I think I can get it under control,\" I said.\n\n\"Slowly,\" Dawn said.\n\nI closed my eyes and sorted out Sam's energies. I found the love energy she had for Dawn and me; it was running wild. I slowly pulled it off of her until it was no longer disorganized. I took my hand away and leaned over and kissed her.\n\n\"Samantha,\" I said.\n\n\"Emmm.\"\n\n\"Sam.\"\n\n\"Emmm.\" She opened her eyes and looked at me.\n\n\"What happened?\"\n\n\"Just lay there for a few more minutes, honey.\"\n\n\"Amy?\"\n\n\"You're going to be okay,\" Amy said.\n\n\"James!\" Sam said as she tried to sit up. \"What did you do to me?\"\n\n\"I didn't do anything to you.\"\n\n\"Yes, you did! I wrapped my arms around you...and I passed out...oh, wait...James, you felt incredible. I was overcome by your love...no...both of you.\"\n\n\"I was too, but you passed out,\" Amy said.\n\n\"What was all of that?\" Sam asked.\n\nI sat on the sofa and Dawn, and I tried to explain as much as we could to Sam and Amy. Sam finally sat up and stood and moved to me and sat on my lap and wrapped her arms around me and laid her head on my shoulder.\n\n\"You still feel so nice,\" she said and kissed me. \"I feel you and Dawn.\"\n\nSam snuggled up to me and held me tight. She felt good.\n\n\"Will you make love to me,\" Sam whispered in my ear.\n\n\"Honey, it is getting late.\"\n\n\"Please. You feel so wonderful. I want to feel all of that.\"\n\nI saw Amy look up at Dawn.\n\n\"Dawn, I do too,\" she said.\n\n\"Amy, do you want me to make love to you?\" Dawn asked.\n\n\"Yes, please...\"\n\n\"Honey, are you okay with that?\" Dawn asked.\n\n\"Of, course,\" I said.\n\n\"Amy, go on to your room. I will be up in a minute.\"\n\nAmy got up and went upstairs.\n\n\"Are you okay now?\" I asked Sam.\n\n\"I will be better after you make love to me.\" She still had her head on my shoulder.\n\n\"I will be up in a minute.\"\n\n\"My room,\" Sam said as she got up and went upstairs.\n\n\"You wanted to talk to me?\" Dawn said.\n\n\"Don't do that!\" Dawn giggled.\n\n\"Sorry.\"\n\n\"I'm confused by something,\" I said.\n\n\"What?\"\n\n\"Why do you need Linda to see your great-grandfather? I know you are telling me the truth, you showed me.\"\n\n\"I had to show you; I am not strong enough to show her. My great-grandfather can,\" Dawn said.\n\n\"You mean he can take her there?\"\n\n\"Yes.\"\n\n\"Anything else?\"\n\nDawn looked down.\n\n\"Okay, there is more to this than you are telling me. Dawn, this is not right. You want to tell me the rest?\"\n\n\"Remember, I said the connection could be broken?\"\n\n\"Yes.\"\n\n\"I can't do that either.\"\n\n\"You said that was up to me,\" I said.\n\n\"You and Linda.\"\n\n\"Is that what you want?\"\n\n\"I have no say in it,\" Dawn replied.\n\n\"Yes, you do.\"\n\n\"I...cannot. This is your choice. James, I cannot have any say in it, please.\"\n\n\"Why not? I need your advice.\"\n\n\"I can't! Honey, I have the affected spirit, tradition says I cannot interfere in any way. I have already taken you to see; I shouldn't have done that.\"\n\n\"You had to. I didn't believe you.\"\n\n\"That is all I can do, James.\"\n\n\"You said I could not have gone with you unless you had 100% of my love. Are you telling me that other people can be taken there? Can you do that?\"\n\n\"I have never tried...before.\"\n\nI reached over and took Dawn's hands.\n\n\"Don't!\" She yelled and pulled her hands from mine.\n\n\"Dawn!\"\n\n\"James, please...this is something I can't discuss with you.\"\n\n\"Why not?\"\n\nDawn looked into my eyes.\n\n\"Please? This is a part of my beliefs. There are some things I can't tell you.\"\n\n\"Okay.\"\n\n\"That's it?\"\n\n\"Of, course. You don't need to explain.\"\n\n\"You don't think I am keeping something from you?\"\n\n\"No, honey. I understand. I already know there are things you don't tell me about your beliefs and traditions.\"\n\n\"My great-grandfather can tell you some things because he is the tribal medicine man. I am not allowed to.\"\n\n\"Honey, it is okay. Is taking Linda to see your great-grandfather going to be trouble?\"\n\n\"James, I need to see my great-grandfather about this. He will see Linda for me because I am the one being affected by this.\"\n\n\"What will he do?\"\n\n\"He can show Linda what I showed you. Then, if you two decide to break the connection between then and now, he can do it. You will still love Linda, but like you love the girls.\"\n\n\"Don't you think we should discuss this with Linda first?\" I said.\n\n\"Yes. I will when she comes.\"\n\n\"What about taking the girls?\"",
        "\"Great-grandfather will enjoy seeing them.\"\n\n\"Will he know?\"\n\n\"Yes.\"\n\n\"How will he feel about that?\" I asked.\n\n\"He will be okay with it.\"\n\n\"Do you need to call your great-grandparents?\"\n\n\"They don't have a phone; you know that.\"\n\n\"We don't want to surprise them,\" I said.\n\n\"He will know I am coming.\"\n\n\"How?\"\n\n\"He just will. I think we need to go to bed.\"\n\nI took Dawn in my arms and kissed her for a minute.\n\n\"I do understand,\" I told her.\n\nWe got up and went to find our lovers. I went into Sam's room, and she was lying on the bed.\n\n\"Undress me,\" Sam said.\n\nI sat on the edge of the bed and removed all of her clothes.\n\n\"Now, you,\" she said.\n\nI took off all of my clothes and got in bed next to her, she rolled to me and wrapped her arm and leg around me.\n\n\"You still feel good,\" she said.\n\n\"Honey, what do you want?\" I asked.\n\n\"You two have worried us; now I feel your love for each other. I am happy. Can you share it with me?\"\n\n\"Of, course. How do you want me to do that?\"\n\n\"Make love to me. I will feel all of it.\"\n\n\"I know you will,\" I said as I rolled to her.\n\n\"I want you inside of me.\" \n\nI knew what Sam wanted, nothing like when Dawn asked that. Sam spread her legs. I reached between them, and she was soaking wet.\n\n\"Why are you so wet?\"\n\n\"Lately, when I feel loved, I get wet.\"\n\n\"Why?\"\n\n\"I am finding that the feelings of love arouse me. I'm pretty aroused right now.\"\n\n\"I can tell. I'm happy the feelings of love do that to you now. It makes it special.\"\n\nI rolled on top of Sam, and she brought her legs up. I kissed her several times then grabbed my cock and guided it into her. Once the end was between her lips, I slid in very slowly.\n\n\"ahhhhhhhhhhhhhhh...\" came from Sam softly. \"Yes...\"\n\nShe wrapped her arms around my neck and pulled me down and kissed me for several minutes.\n\n\"Oh, my...this is incredible...\" Sam moaned.\n\n\"What do you feel, honey?\"\n\n\"Emmmmmm...I feel all of the love you two have for each other. It is wonderful.\"\n\n\"Does it excite you?\" I asked.\n\n\"Yes.\"\n\n\"Sam, you are so wonderful. You amaze me that you enjoy feeling us.\"\n\n\"It is not just you two; it is the feeling of pure unconditional love. That is what you two have, isn't it?\"\n\n\"Is that what you feel from me?\" I asked.\n\n\"Yes, but this is incredible.\"\n\nI began to very slowly slide my cock in and out of her.\n\n\"Ohhhhhhh...yes. This is an incredible feeling...\"\n\nSam pulled me to her lips again and kissed me for a few minutes as I worked my cock in and out of her.\n\n\"I have never felt anything like this. James, this is so sensual. Feeling Dawn's love from you while you make love to me,\" Sam said. \"It is like making love to both of you at the same time.\"\n\n\"Honey, you feel so calm and sexy,\" I told her. \"You take what you need.\"\n\n\"Emmmm...\"\n\nThis was one of the times that Sam's face looked angelic. I had never seen her look so satisfied. She had her arms around my neck as I made love to her. She was looking up into my eyes the entire time. I could feel her slowly drawing energy from me as she smiled. I smiled at her as she drew Dawn's love and my love from me.\n\n\"James, I love you so much. Amy loves you so much. I'm happy that you and Dawn are happy now. I not only feel the love from both of you, I feel the pure love you have for us.\"\n\n\"You know I love you and your sister.\"\n\n\"I know.\"\n\nI kept slowly sliding in and out of my lover below me. Sam wrapped her legs around my waist and pulled me deep into her.\n\n\"Right there,\" she said. \"Stay, right, there.\"\n\nSam closed her eyes. I felt her slowly drawing energy from me. I let her take all she wanted for as long as she wanted.\n\n\"Ahhhhhhhh...yes...perfect...\" came from Sam. \"Take mine.\"\n\nI begin to draw Sam's love and sexual energy from her slowly.\n\n\"Yes, take me...\" She moaned.\n\nWhere I was inside of Sam, she felt incredible. I knew from her energy she was feeling where we touched also. We stayed this way for a long time.\n\n\"Now!\" Sam said. \"Ahhhhhhhhhh!!\"\n\nSam's hips drove up to me; I suddenly started erupting inside of her.\n\n\"Oh, Sam.\"\n\nShe kept driving her pussy up to me as she came and I filled her full of my cum over and over.\n\n\"Ohhhhhh...god...yes!!\" She screamed.\n\nShe tightened her legs around me, and I slid my cock deep inside of her.\n\n\"Yes!!\" Sam started having another orgasm. I was still pumping cum into her. I was fascinated by what she had done.\n\n\"I love you,\" I told her and placed my lips over hers.\n\n\"Emmmmmm...\"\n\nSam pulled me down on top of her and moved her head next time mine.\n\n\"James, that was wonderful. Thank you.\"\n\nMy weight settled on top of Sam as she held me. There was still a flow of energy between us. I wasn't sure Sam knew what she did, but she had made me come when she wanted me. That was something Dawn did on rare occasions when she wanted me on her time schedule.\n\nAfter a few more minutes, I pushed myself up. Sam was looking deep into my eyes. I rolled next to her.\n\n\"Samantha, you are incredible.\"\n\n\"It's easy when I feel that much love.\"\n\nShe sat up and straddled my hips.\n\n\"Can I sleep up here?\" She asked.\n\n\"Of, course.\"\n\nSam grabbed the sheets and lay on top of me and snuggled. I turned off the lights.\n\n\"Good night, my love,\" she said.\n\nI kissed her on top of her head and wrapped my arms around her back.\n\n\"Good night, Samantha. I love you.\""
    ],
    "authorname": "drmac100",
    "tags": [
        "lottery",
        "james",
        "dawn",
        "redheads",
        "ghost",
        "linda",
        "incest"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/life-after-the-lottery-ch-55"
}