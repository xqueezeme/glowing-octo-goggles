{
    "title": "The Year of the Cat Ch. 23",
    "pages": [
        "100% Fiction. All sexualized characters are adults.\n\nMatt slept soundly in his own bed through the night. Linda beside him, snoring softly.\n\nThe doorknob hardly made any sound at all as it turned slowly and the bedroom door quietly swung open.\n\nTwo smiling sisters tiptoed into the room, stifling their giggles as they approached the bed. Morning sunlight peeked through the gap in the curtains as they took up positions on either side of the sleeping couple. Trading a silent grin, the girls lifted their night shirts over their heads, baring their enormous naked breasts. Then, with a nod, they quietly counted down from three.\n\n\"...2...1.... TITTY PIIIILE!!\" Janice and Tracy shouted, gleefully, throwing their bodies onto Matt and Linda, laughing hysterically.\n\nMatt was shocked out of sleep by the sudden noise and then by a heavy softness mashed against his entire upper body and head.\n\n\"WAAAH! What the fuck!?!\" Linda screamed in panic.\n\nTracy and Janice could hardly breathe though their uncontrollable laughter. Janice was laying across Matt's upper chest. Tracy's body was draped over her mother's with her breasts smothering Matt's face.\n\n\"Oh god... you two are fit for the looney bin!\" Linda exclaimed, attempting to adjust her eyes to the morning light.\n\n\"Good morning, you two!\" Janice giggled.\n\n\"Mmmmph!\" Matt's muffled cry was heard from beneath Tracy's massive boob.\n\n\"Trace, I think Matthew might need to breathe, hun.\" said Linda, casually.\n\n\"Oh yeah!\" exclaimed Tracy. She lifted herself up and crawled over Linda.\n\nMatt gasped for air when her massive, heavy tit was removed from his face. Tracy repositioned herself, laying directly on top of him while Janice and Linda scooted closer to either side of Matt's body, snuggling him.\n\n\"Mmm! Good morning, ladies! That was a great way to wake up!\" Matt smiled after catching his breath. He happily found that he was completely surrounded by gargantuan tits crowding his neck, cheeks and chin.\n\n\"A Boobie Boy's dream come true!\" Linda giggled, lifting her huge breasts up to Matt's lips. Janice and Tracy followed suit, hoisting up their massive breasts and positioning their erect nipples towards his mouth.\n\nMatt took a deep breath, nearly becoming overwhelmed by soft flesh as six enormous, beautiful tits closed in around his face. The women giggled when they felt Matt's head begin to swivel from side to side beneath them, motorboating all three sets of giant breasts at once.\n\nTracy could feel Matt's solid erection beneath her, prodding her damp panties. \"Mmm! Such a shame, Matty...\" she sighed. \"Your big ol' pee pee feels so good down there. I wish i could enjoy it without it tearing me in half.\"\n\n\"You're not giving your vagina enough credit, girl.\" Linda said to Tracy. \"Pussies are tougher than you realize. See? Mine took a pounding last night and it still looks pretty.\"\n\nWith that Linda threw the covers from her lower half and lifted her leg up high in the air, displaying her pink, spread open inner labia.\n\n\"Jesus, Mom!\" Tracy gasped. Despite her immediate reaction, she couldn't help but to notice that her mother's vagina looked as pristine as her own.\n\nJanice chuckled. \"I swear, it only hurts for a little bit.\"\n\n\"I've already gotten used to it!\" Linda beamed. \"When I find a place to live around here, you better watch out, Booby Boy!\" she spoke to Matt's submerged head.\n\n\"Mmmmmmph!!\" Matt cooed within the soft flesh sarcophagus.\n\n~~~~~~~~~~~~\n\nAfter breakfast, Linda frowned at the prospect of her long drive home alone. \"It was so good to see you, my beautiful daughters!\"\n\n\"We're going to see you again soon, Mom.\" Janice smiled. \"Have fun on your Rock 'n Roll cruise!\"\n\n\"Oh, I will!\" Linda exclaimed. \"David's gonna write a song about me when I'm through with him!\"\n\n\"Bye, Mom!\" Tracy said, giving Linda a tight hug. \"I love you!\"\n\n\"I love you all too!\"\n\nMatt followed Linda down the stairs, carrying her suitcase to her vehicle. Setting the bulky luggage next to her folded up massage table in the back seat, Matt stood to give Linda a farewell hug.\n\n\"Oh! This was such a wonderful visit!\" Linda said, embracing Matt, lovingly. \"Thank you again for looking after my precious girls.\"\n\nMatt grinned. \"To say 'it's my pleasure' is an understatement. Please get home safely, Mom. I love you.\"\n\nLinda pressed her lips to his. He felt her palms squeeze his ass cheeks.\n\n\"I love you, Matthew.\"\n\nMatt spent a moment watching Linda's car recede into the distance before turning and heading back upstairs to the apartment.\n\nInside, the girls were preparing to begin moving items between bedrooms in order to accommodate Tracy in Janice's room and Janice in Matt's room.\n\n\"I barely have anything to unpack.\" said Tracy. \"All my stuff will fit in the closet with plenty room to spare.\"\n\nMatt spoke to Janice. \"I have tons of space in my bedroom closet for all your things too, baby.\" he said with a smile. \"I'm really excited to officially share a bedroom with you!\"\n\n\"Me too, sweetheart!\" Janice exclaimed. \"This bed is gonna be rocking' every night!\"\n\nMatt's eyes were alight with daydreams of intimate entanglements. \"I'll go clear up some space for you.\" he said, eagerly retreating to his bedroom.\n\nIn Janice's room, Tracy was gathering loose items and placing them in a shoebox. Bubsy cat sat on the bed, observing the hullabaloo in the apartment with mild annoyance. Next to the black feline a framed picture on the bedside table caught Tracy's attention.\n\n\"Who's this?\" Tracy asked Janice, examining the photo of her and Matt's smiling faces with a third, unknown woman.\n\n\"Oh! That's my friend, Kendra. She had to move home to Louisiana recently.\" Janice replied.\n\n\"She looks fun.\"\n\n\"Oh damn, Kendra is a TRIP! I can't wait for you to meet her one day. We had ALL kinds of fun together.\"\n\nTracy smiled. \"You three look close... REALLY close.\"\n\nJanice chuckled. \"Pretty accurate assessment there, Trace. I think we were just about to have a threesome right before this photo was taken.\"\n\n\"Whoa... hold up. You've had sex with a GIRL?!\" Tracy exclaimed in shocked surprise.\n\n\"Sure did! And it was incredible!\" Janice replied. \"That lady eats pussy like there's no tomorrow!\"\n\n\"Oh my fucking god!\" Tracy gasped. \"I can't believe you, Janice!\"\n\nJanice giggled at Tracy's wide eyed stare of amazement. \"Why not? You've always known I was a bit freaky when it comes to sex.\"\n\n\"Well, I always knew you had 'freak potential', but I wasn't ever expecting you to go for it!\" Tracy chuckled. \"....Ok so, what's it like?\" Tracy asked, cautiously.\n\n\"What? Being with another woman?\"\n\nTracy nodded. \"That... and getting your pussy eaten. Joey never... did that for me.\"\n\n\"Oh... girl.\" Janice said. \"It is fucking amazing. If I had never met Matty, I might've gone full lezbo for Kendra.\"\n\n\"Jesus!\" Tracy exclaimed. \"So... I take it you're not wearing out mattress corners anymore.\"\n\nJanice laughed loudly. \"Nope! That was just a tickle compared having your clitoris sucked, believe me! I can't wait to get off the rag so Matty can give me one of his famous lick jobs.\"\n\n\"Oh! He's famous for that too?\" Tracy chuckled. \"He doesn't just let his his big ol' dong do all the work?\"\n\n\"No, he NEEDS to be good at eating pussy. His 'big ol' dong' won't fit in me unless I have a major orgasm right beforehand.\"\n\nTracy blinked. \"Wait... having an orgasm makes you... loose?\"\n\n\"Hell no! This kitty is tight!\" Janice furrowed her brow, crossing her arms across her chest. \"Having a big 'O' doesn't just get you lubed up down there, your vaginal cavity actually expands to let a dick in easier!\"\n\n\"No shit!\" Tracy said.\n\n\"Yeah! Pretty amazing, huh?\"\n\nTracy nodded her head as her eyes wandered to the doorway. From her bedroom, she could see across the apartment through Matt's open door, where he worked diligently picking up his room.\n\n\"I have to get ready for this work meeting today.\" Janice sighed, gathering her shower supplies. \"I'm nervous! I haven't had to show up at the office for weeks. I wonder what it's all about.\"\n\n\"Good stuff, I hope.\"\n\n\"We'll see.\"\n\n~~~~~~~~~~~~\n\nJanice was dressed in her professional business blouse and jacket with matching slacks as she departed through the front door.\n\n\"See you two soon! Love you!\" Janice exclaimed, stepping out into the stairway.\n\n\"Bye. Love you too!\" Matt and Tracy called out in unison as the door closed.\n\nThe two stood in Tracy's new, almost completely empty bedroom. A queen sized bed, night stand, a small computer desk and chair, as well as an enormous stuffed unicorn were all the items occupying the spacious area.\n\n\"Looks like there's plenty of room to shoot some photos in here.\" Tracy said, her voice echoing off of the bare walls.\n\n\"Do you feel like taking some pics now?\" Matt asked.\n\n\"Yeah, let's not put this off.\" Tracy said, nervously.\n\nMatt retrieved his camera and began to look for angles and natural light sources in the room to shoot against. Tracy, meanwhile, searched through Janice's dresser for an appropriate outfit.\n\n\"Matty Pants, what do you think I ought to wear?\"\n\n\"Hmm.\" said Matt, standing beside Tracy at the dresser. \"Look in this drawer here... it's got all of Janice's sexy tops in it.\"\n\nTracy fished out an extra large, white T-shirt with red lettering across the front.\n\n\"'I Wish These Were Brains.'?\" Tracy read aloud from the garment. A rising giggle couldn't be stifled as she examined the shirt. \"What the fuck? I bet this one would get a laugh!\" she exclaimed.\n\nMatt looked pensive. \"Uhhhm... yeah, that was Bobby's idea of a Christmas present for Janice. Let's try this one instead.\" he replied, holding up a stretched out, ultra loose, blue tank top.\n\n\"You're the expert!\" she said just before she pinched the lower hem of her large, black shirt she was wearing and threw the garment up over her head.\n\nMatt attempted not to let his facial expression react to the view of Tracy's naked upper body, despite his cock beginning to thicken in his pants.\n\nTracy pulled the blue top over her astoundingly large, round breasts. The fabric draped loosely over her figure, allowing a fully displayed cleavage from top to bottom. The outside flanks of her soft tits were exploding out of the sides of the worn out cotton cloth.\n\n\"Since these are my first official pictures on my new FAN page, maybe I should write 'WELCOME' across my chest, like with barbecue sauce or something?\" Tracy suggested. \"Might be funny!\"\n\nMatt's polite laugh was betrayed by his pensive expression returning. \"Listen, Trace. I like it that you want to entertain your audience, but... let's be honest: guys aren't gonna be visiting your page for laughs.\"\n\nTracy sighed. \"I know... I know... it's just that I'm super nervous right now and humor is my coping mechanism.\"\n\n\"Here, maybe this will help...\" said Matt. Tracy's eyes widened in surprise when Matt lifted his T-shirt over his head. She gawked at his muscled, nude torso, watching his hands move towards the fly on his jeans.\n\n\"W-what are you doing?!\" cried Tracy.\n\n\"I'm getting naked too.\" Matt said, flatly, unzipping his pants.\n\n\"Uhh... are you trying to relax me or make me horny?\"\n\n\"Both, I guess.\" said Matt, matter-of-factly, just as his jeans dropped to the floor.\n\nTracy gasped, staring straight at Matt's fully exposed, semi flaccid penis. It was the first time she had seen his dick, besides a glimpse of it on his phone screen.\n\nHer nipples grew erect, creating two points in the thin fabric that was barely hanging on to her torso. She unconsciously bit her lip, feeling a warmth spreading to her nether regions.\n\n\"Ok... fine.\" she breathed. \"Let's do this.\"\n\nMatt gave her a smile, raising his camera and lowering himself to his knees. \"I want to start with some low angle shots first.\"\n\n\"Uhh... how should I pose?\"\n\n\"Just... Let your top sorta fall off your body over time, like... you're trying to seduce me... or, uh, the camera.\"\n\n\"Ok. That's it?\" asked Tracy.\n\n\"Uhhh... how about we start there and see what inspires us.\" Matt said from behind the camera. \"I'll be shooting constantly the whole time, moving around to get different angles. Try to remember to keep your eyes focused on the camera. We'll pick out the best photos on your laptop afterwards.\"\n\n\"Ok, Matty.\" Tracy said, attempting to mask her shaking voice. \"Ready.\"\n\nMatt put his eye to the viewfinder of his camera. Tracy gulped and slowly lifted her hands to cradle her bosom. Surging, round, soft flesh oozed out of the low cut collar of her tank top as she compressed her enormous breasts together.\n\nThe shutter clicked repeatedly, capturing the incredible display. From the camera's angle below her waist, Tracy's enormous breasts obscured view of her shoulders and most of her face. Their gargantuan fullness stretching the tiny tank top to its limit, offering a tantalizing peek of bare under boob. Without even being aware of himself, Matt's penis began to lengthen.\n\n\"You look beautiful, Tracy.\" said Matt, raising himself to his feet as the shutter button clicked furiously, paying no mind to his stiffening cock. \"These pics are gonna blow people's minds!\"\n\nTracy's eyes couldn't help widening as she distractedly watched Matt's penis arriving at full mast.\n\n\"Tracy... eyes up here, please.\"\n\nTracy scoffed. \"Easier said than done with THAT thing bobbin' around!\"\n\nIt was only then, that Matt became aware of his aroused state. He blushed looking down on his solid erection, pointing up in Tracy's direction.\n\n\"Hmm.\" he said quietly. \"Maybe I didn't think this idea all the way through.\"\n\n\"Oh, really?\" Tracy chuckled. Her eyes were glued to Matt's engorged cock. She shook her head in silent disbelief. \"I'm sorry... I just can't focus on anything with you being... like that.\"\n\n\"It's ok. I guess I'll just... uh... rub one out in my bedroom real quick. We'll see if that works.\"\n\nTracy shook her head. \"We need to move this production along. Here, hand me that body oil on the counter.\"\n\nMatt blinked, handing her the bottle. Tracy quickly unscrewed the cap and poured a generous amount of oil over his long phallus. Lowering herself to her knees, she then grasped Matt's thick cock with both hands and began sliding the balm over him in a pumping motion.\n\n\"Oh!....\" Matt exclaimed. \"...ok.\"\n\nTracy leaned forward in her exertion, her face mere inches away from the slitted, bulbous crown of his massive dick. Back and forth, her fingers extended reach attempting to encircle his girth. She added a twisting motion to her wrists, providing an exhilarating sensation to Matt's sensitive member.\n\n\"Oh, geeze! That's fucking good, Tracy. Keep going!\"\n\n\"Mmm! You like this?\" Tracy looked up into his eyes with a sensual flame alight over her countenance. \"You like the way my tiny hands can't even grip you all the way?\" Her incredible beauty and her expert cock manipulation soon ignited the familiar chain reaction inside of Matt.\n\n\"Oh shit. Here it comes!\" he cried.\n\nTracy had plenty of time to aim Matt's penis anywhere she wanted to avoid the deluge of sperm that began to pump forth from his throbbing, purple dick head, yet she held the long, thick cock aimed towards her. Viscous, white semen splashed across her chest, coating her d\u00e9colletage in a pale glaze, pump after lurching pump.\n\nWhen the flood had subsided to a drip, the two looked down on her chest. \"Feel better, champ?\" said Tracy, wiping her chest clean with the blue tank top, still barely draped over her astoundingly large, round breasts.\n\n\"Perfect!\" Matt shouted, hands clamoring for his camera. \"Keep doing that and then clean off your boobs in the shower with that liquid body wash. Are you ok with that?\"\n\nTracy gave him an incredulous expression. \"That's what I was gonna do anyway.... DUH!\"\n\n\"Awesome!\" Matt exclaimed, clicking the shutter button with abandon.\n\nTracy made a show of her top being dispatched from her shoulders, the fabric pulled taught to allow her enormous swaths of breast flesh to appear. When her exquisite juggernauts rolled out of the low cut collar, Matt was positioned to capture several close up shots of their astonishing beauty and mass.\n\nThen, with sensual confidence, Tracy arched her back and poured a string of body wash over the tops of her soft globes. Matt switched his camera mode to video and steadily panned the lens over the gorgeous sight, capturing her hands and fingers passionately massaging her incredible, soft breasts. Tracy's eyes raised to the camera with the same fire alight within that Matt had seen earlier as she teased her erect nipples.\n\nOnce Tracy's tits had become glossy and sudsy, Matt followed her as she stepped into the glass shower stall and turned the water to 'warm'. Matt's camera captured the flow of rinsing water, clearing the soapy suds away, like a veil sliding down her sumptuous curves. Once Tracy's breasts were completely clean, she blew the camera a kiss to signal the end of the session.\n\n\"Ok... uh, cut!\" Matt said with exhilaration, lowering the camera at last. \"Wow! That was incredible!\"\n\n\"Oh my god, I'm so excited to see these photos!\" Tracy said, patting her body dry with a hanging bath towel.\n\nTracy quickly donned a thin cotton robe and sat down in front of her laptop. Matt helped her upload all the image files onto her hard drive, then took a seat beside her took look over the collection of photos.\n\nTracy gasped as the first image filled the screen. \"Holy fuck balls!\"\n\nHer astoundingly huge breasts, beautifully lit, in crisp detail, encompassed the entire viewable area of her small laptop. They were escaping her meager, blue tank top, threatening to tumble forth from the screen.\n\nMatt stayed anxiously quiet as Tracy silently flipped through the first several photos, pausing at each one to gaze at in an analytical trance.\n\n\"These pictures...\" Tracy said, at long last. \"...Are fucking depraved!\"\n\nA mock glare was cast over at Matt's wide stare.\n\n\"I fucking LOVE them!\" she squealed.\n\nTracy threw her arms around Matt, squeezing his body tightly against hers. Her robe, much too small to close around her titanic projection, was also unable to prevent her naked breasts from bathing Matt's unsuspecting chubby in warm, softness.\n\nShe sat up, wiping moisture from her eyes. \"Seriously... I do love them. I usually HATE photos of myself, too! I just... never imagined I could look so sexy!\"\n\nMatt chuckled. \"That seemed WAY too easy... you're a natural, lady.\"\n\nTracy began moving files as she continued to prune her favorites from the long list of photo files.\n\nThe last on the list was the movie file of Tracy's soapy finale. She watched herself on the screen with wide eyes. \"Holy fuck!\"\n\nMatt chuckled. \"Just imagine how everyone else is gonna react!\"\n\n\"You think it'll be enough?\" Tracy said, nervously. \"You know... to get the job done?\"\n\nHer eyes, casually traipsing over to Matt's lap, grew even wider when she saw the enormous erection craning towards his chin once again, like an unruly dog at the dinner table.\n\n\"Uh... YEAH! Even I'm barely holding it together over here.\" Matt blushed.\n\nTracy's cheeks donned a similar shade of pink.\n\n\"Ok, Katie Cupcakes...\" Matt said, finally. \"are you ready for your grand debut?\"\n\nTracy gulped, seemingly swallowing her final nerve, and began to post her first entry into the FAN website database.\n\n\"I'll just post a few pictures at a time for now.\" She said, hitting the 'Submit' button. \"That video will make a great private message purchase.\"\n\n\"I have a good feeling about this!\" Matt exclaimed, gleefully.\n\n\"Me too, partner!\" said Tracy, offering her fist to Matt for a bump of solidarity.\n\nMatt smiled as their knuckles made gentle contact.\n\n~~~~~~~~~~~~\n\nAbout an hour and a half had gone by while Tracy and Matt worked behind their screens, proliferating links to her page on various sites around the web, until the front door was heard, finally.",
        "\"Welcome home, baby!\" Matt spoke up.\n\n\"Hey...\" Janice answered from the other room, subdued and quiet.\n\nMatt's concern was immediately peaked by her unusually somber tone. He threw his clothes on again, quickly and left Tracy's room to investigate.\n\n\"You ok, honey?\" Matt asked, approaching Janice in the dining room, who was wearing an exhausted expression.\n\n\"Yeah... I just need a hug.\" She sighed heavily, reaching out for a calming embrace. Matt quickly closed the gap between them, holding her body closely against his.\n\n\"What happened at your meeting?\" Matt asked in a soft voice.\n\nA groan escaped her. \"They want me to go represent the company at a trade show next weekend in Greenville.\" Janice pouted. \"I wish I didn't have to go. I was looking forward to having some alone time with you!\"\n\n\"Yeah... we haven't really had that since I've gotten back from Japan, have we?\"\n\nHe felt Janice sorrowfully shake her head 'no' without a word.\n\n\"So... how about I come with you?\" Matt suggested.\n\nJanice blinked up at him. \"You... you would do that?\"\n\n\"Sure!\" Matt chuckled. \"It's only a five hour trip. We'll make a road trip out of it. Hell, I'll even drive us!\"\n\n\"Really!? Wait! Won't you be bored while I'm working at the show all day?\"\n\nMatt grunted, dismissively. \"Naw! I'll entertain myself during the day...\" he said, as his gentle hold on her waist slightly constricted. \"then, when you come back to the room afterwards, I'll massage all of that stress of the day away and we'll spend the rest of the night seeing how many orgasms we can give each other!\"\n\n\"Mmmmm!\" Janice cooed in approval. \"You had me at 'I'll drive us.'... but all that other stuff you said sounds REALLY GOOD! Fucking sold!\"\n\nThe two laughed together. Janice kissed his lips, softly.\n\n\"So... how is Tracy's web-\"\n\n\"HOLY SHIT!\" Tracy's voice shouted from her bedroom.\n\nShe looked shell shocked as she stumbled from the bedroom.\n\n\"Over a hundred people have subscribed in the past five minutes...\" Tracy said in a soft, shaking voice.\n\n\"Oh my god! Congratulations!\" Janice exclaimed.\n\nTracy urgently grabbed Janice's hand, leading her to the bedroom. \"Come here! You HAVE to see these pictures Matty took!\"\n\nMatt couldn't contain his self satisfactory smile, turning towards his room to continue making space for Janice's things in his bedroom.\n\nHe set up her home office near the back of the bedroom, next to the door leading to the black, metal fire escape steps that wound down all the way to the ground. \"She would be able to open the door and take in the fresh air while she works.\" he thought to himself, looking out over the rooftops of the neighbor's houses.\n\nBubsy curiously poked his nose out into the open air and sat contently on the door frame, glancing at the birds bathing in a garden birdbath.\n\nAs the sun set, Janice and Matt sighed with contentment, looking over their shared living space.\n\n\"This is going to be perfect!\" Janice squealed, hugging Matt tightly.\n\n\"It sure is, baby!\" he replied, kissing her forehead.\n\nJust then, Tracy marched into their room, a large, half empty glass of wine in her loose grasp. \"Ok guys...\" she growled. \"Enough is enough! Time to stop working and come party with me! We got CELEBRATING to do!\"\n\nTracy's first four hours as a FAN page model had been an astounding success. However, even after several hundred subscribers and almost as many video purchases, her trepidation persisted. Finally, she coaxed her anxious eyes off of the computer screen and had poured a large glass of wine to try to force a sense of relaxation upon herself.\n\n\"I need you all to help me take my mind off of my website. Have a drink with me, pleeeeease!\" Tracy cried.\n\n\"I can only have one.\" Janice replied. \"'Aunt Flo' is still in town, but Matty, you deserve to let loose tonight!\"\n\n\"Damn right, you do!\" Tracy said, leaning forward to grasp Matt's wrist, then dragging him along by the arm to the kitchen. She recklessly poured two huge glasses of white wine and shoved them into Matt and Janice's hands.\n\n\"Cheers!\" shouted Tracy. She tilted her glass back to her lips and proceeded to drink down the remaining half glass of wine in one go.\n\nTracy exhaled, wiping her lips on her arm. Matt almost choked on his sip as she raised her hands to the ceiling in a victory pose, watching the bottoms of her enormous bare tits came sliding out from beneath her crop top.\n\n\"Congratulations, you two!\" Janice exclaimed. \"Sounds like you all knocked it out of the park!\"\n\nMatt and the sisters finished their glasses over the din of lively music and conversation. Tracy was quick to refill Matt's glass every time his wine level approached the bottom. She kept her glass topped off as well until the final drops ceased utterance from the large bottle.\n\nJanice couldn't resist a groaning yawn. She stretched her limbs outward; her signature signal that she was approaching her bedtime.\n\nMatt's nostalgia took a jaunt to his first days with Janice in the apartment; watching the fabric of her low cut shirt stretch until translucent against her mammoth breasts as she relieved her muscles. It was the same thrilling spectacle then as it was at this very moment. His cock began to thicken on his lap.\n\n\"Cut it out, cheese snatch!\" Tracy snarled to her sister. \"It's too early for that yawning!\"\n\n\"Bitch. Don't make me destroy you.\" Janice sighed. \"I am fucking cramping here.\"\n\n\"Oh my god! You use that excuse every month!\" Tracy giggled.\n\nJanice leaned over and gave Matt a deep, lingering kiss. \"Good night, my love.\"\n\n\"Sleep well, baby.\" Matt replied with a smile. His erect dick was pointed up towards the ceiling, unnoticed.\n\n\"Wait... you're really just gonna go to bed?\" Tracy queried. \"You're seriously going to leave your man like THIS?!\" she said, pointing at Matt's protruding bulge.\n\nBoth Matt and Janice regarded his tented shorts in mild surprise.\n\n\"Oh... honey, I'm sorry. I gotta tap out tonight.\" Janice sighed.\n\n\"That's ok, b-\"\n\n\"No blowjob or anything?!\" Tracy cried, interrupting Matt.\n\nJanice rolled her eyes. \"Look... my jaw is hurting and I'm super tired. I just can't do it tonight! I'm sorry!\"\n\n\"No prob-\" Matt once again attempted to answer.\n\n\"Janice! He deserves SOMETHING at least!\" Tracy insisted. \"I mean, I can't do anything! He's too damn big!\"\n\n\"Well, I already told you what you have to do!\" Janice said in an exasperated tone. \"You just have to let Matty eat your pussy until you have a huge orgasm, and then his big ol' dick will just slide right in. Promise!\"\n\nTracy finally fell silent, her cheeks becoming a bright shade of pink. Matt blinked, unsure if he should speak.\n\n\"Nighty- night!\" Janice cooed with a wink before slipping behind the bedroom door.\n\n\"G-goodnight.\" Matt gulped.\n\nAn alarmingly loud silence filled the room upon the closing of the bedroom door.\n\nMatt cleared his throat, nervously.\n\nTracy forced a nervous chuckle. \"You're probably like, 'Gross! Hell no!', huh?\"\n\n\"Wha-! No!\" Matt protested. \"You... you actually want me to?\"\n\n\"We'll, you DO still owe me for the hand job I gave you earlier.\" Tracy said.\n\nShe suddenly sat all the way back, thrusting her pelvis upwards. Her small hands hooked the waist band of her tight leggings and pulled the front all the way down to her bare labia. \"I even shaved. See?\"\n\nMatt took in the gorgeous sight of her bare abs flexed, crowded by her enormous round breasts spilling out of the bottom of her tiny shirt. Without even being aware he found himself leaning forward. His lips pressed against the exposed skin that Tracy was presenting, just above her moist vagina.\n\nMatt heard a gasp and another hand gently resting upon his head. Tracy's fingers slowly entwined themselves in Matt's thick head of hair. He quickly rotated out of his chair before her, grasping the elastic band at her hips and dragging her tight leggings slowly down Tracy's long, toned legs.\n\n\"No panties either.\" she grinned, spreading her knees open wide before Matt's eyes. He could feel her hand on his head subtly pulling his face closer to her beautiful, glistening vagina.\n\nMatt's head dove forward without warning. He felt her clitoris become engorged almost immediately against the long strokes of his tongue and the suction applied by his lips.\n\nTracy let out a squeal when she felt Matt's mouth massaging her pussy in a way she had never felt before. She was barely able to wrap her mind around the stupefying sensation before the rumbling inside of her began.\n\n\"Oh fuck...\" Tracy cried, unable to control herself any longer. Her moans grew louder as the immense pleasure grew into a hurricane of bliss within her. When the intense orgasm finally crashed upon her senses, Tracy felt the thrill of pioneering into a new level of sexuality.\n\n\"I'm c-cumming so hhh...hard right n-now.\" Tracy sputtered. Her fingers now pulling Matt's hair with unconscious ferocity.\n\n\"Jesus!\" Tracy cried. Her chest heaved from her rapid, intense breathing. Her heart beating a relentless, blasting rhythm.\n\nMatt gently coaxed her grip from his hair without wincing too obliviously.\n\n\"What the.... ffffFFUCK?!\" she finally exclaimed after catching her breath.\n\n\"Pretty good?\" Matt smiled up at Tracy's wide eyes from between her legs.\n\nShe nodded, eagerly. \"Do it again!\"\n\nMatt proceeded to repeat his feat three more times for Tracy on the living room couch. Tracy suppressed her wailing ecstasy as best she could, however, soon a beleaguered moan arose from the bedroom nearby.\n\n\"OHMYGOD! YOU'RE READY ALREADY, TRACY!\" Janice shouted in frustration. \"GO ON AND GET FUCKED IN YOUR BEDROOM!\"\n\nTracy covered her mouth with both hands in embarrassment.\n\n\"Sorry, babe.\" Matt called out, wiping his mouth dry.\n\nTracy scrambled to her feet and practically dragged Matt towards her room. At the doorway, she surprised him by suddenly spinning on her heel to face him and lunging forward in a passionate embrace, her lips and tongue in a frenzy of lust against his.\n\n\"I think I'm ready.\" she whispered between her urgent, wet kisses. \"We're gonna try it, ok?\"\n\nMatt nodded. He felt her hand attempting to enclose around his solid shaft through his grey sweatpants.\n\n\"Mmm! You're hard already!\" Tracy cooed in his ear.\n\n\"I never lost my hard-on. I love eating pussy.\" Matt replied softly in her ear.\n\n\"Music to my ears!\" Tracy said as she guided Matt towards her bed, planting deep kisses on his lips.\n\nMatt raised his shirt up over his head when Tracy lowered herself to her knees in front of him. The enormous, thick shaft pressed clearly against the thin cotton.\n\n\"I still don't know how this is even going to work!\" she said, grasping the waist band of Matt's sweatpants and slowly pulling them down.\n\nTracy licked her lips watching Matt's fat cock slide into view. The thick appendage sprung upwards upon clearing his lowered pants. Tracy flinched at it's lumbering sway.\n\n\"You should start on top.\" Matt said, laying down prone, naked on Tracy's bed.\n\nTracy cautiously climbed over Matt, straddling his hips. Matt's cock spasmed, bouncing against Tracy's labia as she got into position and raised herself up before him. Her titanic breasts were pouring out of the bottom of her meager length T-shirt crop top. Her nipples were barely contained within its concealment.\n\nTracy reached between her legs as she leaned forward. \"Here goes nothing!\"\n\nMatt felt his cock being lifted by the shaft and then a wet, warm tightness bathing the tip of his cock head.\n\n\"God... it still feels too big!\" Tracy grunted.\n\n\"Don't rush it.\" Matt whispered. \"Take your time.\"\n\n\"No!\" Tracy cried. \"I want it too badly!!\"\n\nHer hips began rocking up and down in a mid tempo pace. Matt gasped as he felt more and more of his erect penis sliding into Tracy's wet vagina. Before long her pussy was sweeping up and down the entire length of his cock.\n\n\"Yes!\" Tracy cried. \"I'm fucking you, Matty! I can finally take your enormous dick!\"\n\n\"Oh god, yes!!\" Matt moaned. \"You're taking this dick SO good, babe.\"\n\nTracy's exquisite tightness gripped Matt's cock from inside of her. For the first time, her g-spot was being stimulated by the grinding pressure of his thickness. Likewise, Tracy's labia was spread so far apart by his girth, that her clitoris was persuaded naturally to glide against his throbbing shaft. The two elements being caressed in tandem ignited a massive reaction of carnal bliss exploding from Tracy's core.\n\n\"HOLY SHIT!\" Tracy bellowed when the intense orgasm washed over her like a flash flood.\n\nHaving reached a level of ease with Matt's enormous cock, Tracy risked a new position. She got on all fours and looked back at Matt with a sensual gaze. \"Grab my hair and fuck me doggy style!\" she cooed.\n\nMatt quickly positioned himself behind her on his knees. He slid the head of his cock against her wet pussy, teasing her lips. Then, reaching forward, he filled his hands with her long, thick, wavy auburn hair and pulled gentle, yet moderate force. A loud moan escaped her when Tracy reared back, her pussy pressed against his hips, swallowing Matt's cock whole.\n\n\"Oh! Uhhhg!\" Tracy cried in passion. \"Fuck yes! Ride this pussy!\"\n\nMatt's hips thrust against Tracy's ass, filling her snatch with as more cock than she had ever thought possible. An occasional rough tug of hair or busk slap of her ass would cause Tracy to wail in unfettered pleasure.\n\n\"Fuck. Yes.\" she growled. \"Give it to me hard! Give me that big dick! Hammer this tight pussy, baby!\"\n\nMatt wiped the sweat off of his brow and gripped Tracy's hips. Urgent, rhythmic slaps kept tempo with Tracy's cries of pleasure as Matt slammed his cock over and over into Tracy's wet vagina.\n\n\"Oh fuck! I keep cumming so hard! God damn, you... your cock... holy fuck!\"\n\nMatt shuddered. \"Oh shit... my turn!\"\n\nIn a flash, Tracy pulled away and spun around on the bed. She bent forward, her lips kissing the dribbling pre cum from his throbbing cock head, her fingers wrapped around dick pumping back and forth. Soon, Matt's white semen launched forward, coating Tracy's beautiful facial features in a pale glaze.\n\n\"Mmm! Oh fuck yes!\" she moaned, licking her lips clean.\n\n\"Ooooh!\" Matt groaned. \"Oh god, that feels good.\"\n\nThe two cuddled for a moment before assisting each other cleaning up.\n\n\"Think Janice will let me sleep with you two?\" Tracy whispered. \"I don't feel like sleeping alone tonight.\"\n\n\"There's plenty of room.\" Matt answered. \"We just gotta be quiet.\"\n\nMatt and Tracy silently tip toed into the bedroom where Janice slept soundly. She murmured contently as Matt slipped under the sheets beside her. Tracy cuddled Matt's torso from the opposite side as she navigated herself into a prone position. Even Bubsy felt inclined to join the household on the bed, nestling into a furry, black ball at the foot of the mattress and drifting off, like the rest, into a dreamless sleep."
    ],
    "authorname": "Jugg_Head",
    "tags": [
        "huge tits",
        "big boobs",
        "enormous breasts",
        "slow burn"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-year-of-the-cat-ch-23"
}