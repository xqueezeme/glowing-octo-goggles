{
    "title": "We Needed a Vacation Ch. 04",
    "pages": [
        "All of my writing is fiction and the stories and characters are all products of my imagination. They were created for my fun and, hopefully, your enjoyment. Some of the events in the stories are not particularly condoned nor encouraged by the author but are there to create and enhance the story of the imaginary characters and their lives. Comments are always encouraged and carefully reviewed. Enjoy!\n\nThis is a continuation of the adventures of four couples who meet in Belize when each is on vacation and willing to have a week without limitations. This chapter won't make much sense unless you read chapter one.\n\n*****\n\nAfter all of our activities, the hot tub always felt good and relaxing and soon we were joined by the other three. Kirsten and Libby were bright and cheerful and doing fine but Rich looked like he had just finished a marathon. He climbed into the tub and sat down next to Alison and put his head on her shoulder. I looked over at Kirsten who had set down beside me. She whispered, \"I think he had fantasized about a threesome so much that when it happened, well, he was a little too excited and you could hardly touch him with him orgasming. I felt so sexy and powerful.\" She gave me a kiss. \"How about you, did you save anything? I know you must have liked a little bit of chunk.\"\n\n\"I think she's happy and I think I'm happy but will be a much happier later when you show me just how sexy and powerful you really are.\"\n\n\"Well, it will be pretty boring with only two of us there, when there's been three just a little earlier.\"\n\n\"Good point,\" I countered. \"I guess you'll have to be as good as two of the others, or, maybe I can talk someone else into coming along with us tonight.\"\n\n\"Unless it's all four of the men, I'm not interested,\" she laughed.\n\n\"You're one hole short for four men so maybe it should just be the two of us.\"\n\n\"Good, because I'm sure I can be as good as two of those other females tonight, with you.\" She poked me in the ribs. \"But, I have to hear about your threesome and I'll share a little of ours.\"\n\nSoon, all three couples headed to their bungalows and, once inside, I got a nice kiss. \"Want some wine?\" Kirsten asked, and in just another minute we each had a glass of wine and were sitting on the couch in anticipation.\n\n\"So, tell me,\" she began. \"How was the little chunk?\n\n\"She has a couple of little rolls of extra body there, but she's okay. And, she was way different than I thought she'd be. She went in and got totally dressed and we had to seduce her which we did and when her clothes came off we all three went to work on each other and pretty soon she was a mess, but she really enjoyed it. So then, we talked for a while and decided we were all satisfied, plus, I wanted to save a little for later,\" as I coughed conspiratorially, \"and we decided to just go back and enjoy the hot tub. Marshall was out pretty fast and I stepped back to let her go ahead of me and she just stood there and told me she knew she wasn't as good looking as you other three and guys didn't gawk at her all the time but she had really enjoyed these days and the guys all seemed to be into her. So, with those big brown eyes looking at me very appealingly I think I surprised her. I kissed her, grabbed her hair and fucked her mouth with my tongue while I rubbed her clit and she came really hard. Then we came out to the hot tub.\n\n\"I would have loved to have seen that. Sex without planning is pretty good.\"\n\n\"How did Rich do?\"\n\nShe grinned broadly. \"Poor Rich. I think he's had a fantasy about being with two girls at once so often that he almost couldn't handle it when it happened. We went inside, Libby kissed him kind of long with a lot of tongue, then it was my turn so I kissed him the same way and grabbed his erection and pumped it about three times and he shot all over my stomach and legs. We did our best not to giggle but he was so far out of it I don't think he even noticed. We laid him on the floor and took turns sitting on his face and he did pretty good there - each of us came pretty quickly and Libby used her mouth to get him good and hard again, then climbed on it while I got on his face again. He was so intent on squeezing my tits and pulling on my nipples he totally forgot to lick and in no time he was jerking like crazy with another orgasm. Then it was my turn and I got him hard again and did a reverse cow girl on him and, you guessed it, before very long he was filling me with what little spunk he had left. When I stood up it didn't drain out at all so I think he was pretty much emptied out. A couple of blowjobs and a couple of hand jobs and he had a fourth one that just dribbled out onto my hand. After that he was done and said he'd like to just look at us and think about what just happened. You saw him when we got to the hot tub.\"\n\n\"He looked pretty spent but I don't think Alison will give him much rest. So,\" I added, \"your first threesome.\"\n\n\"And last,\" she quickly responded.\n\n\"Do you really think you can go back to being sweet innocent little Kirsten once we get home?\"\n\n\"I do, outside the house of course. Inside we have videos to watch and who knows what else and we are slightly different than we were when we got here so that part of it will be very different I think. Oh, and Rhonda told me yesterday that they live in Windsor and so are only about four hours from us and they'll have to come and see us sometime. That could complicate things.\"\n\nI agreed with what Kirsten was saying but when she mentioned Rhonda coming to visit I knew it might be hard to do nothing. I doubted she would get any uglier over the next few months, nor shorter nor have her boobs shrink. I looked up at Kirsten and she had a little smirk on her face.\n\n\"I know what you're thinking and what you're picturing. You can't hide that from me.\"\n\n\"Then distract me. You, of all people, can do that.\"\n\nShe stood up and moved to in front of me. \"It looks like this guy has been distracted a little too much,\" taking my now flaccid penis in her hand. Of course I had to look and the sight of her wonderful hands with the sensuous red fingernails holding me was all I needed. \"Wow,\" she said. \"I do have a magic power over you.\" She dropped to her knees. \"It's good but I think I can make it better.\" She did her favorite trick because she knew how I reacted to it, holding it tight in her hand and sliding toward the base, stretching the foreskin hard away from the head. I groaned fairly loudly as her lips moved over the head and her tongue went to work. She slid the glans back and forth gently between her lips, then sucked hard on the head, pulling it out of her mouth with a loud popping noise. Then she was back on it, sliding her lips down the length of it till they buried themselves in my kinky hair, her tight throat squeezing the head. Then she slid back and forth and my now very stiff erection was coated with her saliva. She pulled it out with another pop and said throatily, \"Is this better than two women?\"\n\nI moaned, \"I've never been with two women but this is better than just about anything,\" I said, having trouble getting the words out with the short breaths I was taking.\n\n\"Just about, huh,\" was her throaty reply. \"Try this then and let me know.\" She stood up and stepped across my legs, taking that stiffy and guiding it between her legs to about the wettest pleasure tube I had ever felt and slid down on it letting out one of the most wonderful moans I had ever heard. Her face was just inches from mine as I took both hands and squeezed those wonderfully perky boobs and then twisted a little on her nipples to an accompanying gasp. Our eyes were locked together as we knew this fantastically familiar action. My hand slipped down in the small space between us until I found her clit which wasn't difficult at all since it was nearly the size of the end of my little finger. As I rubbed her mouth opened and her breathing got more accentuated. She put her arms around my neck and played with my ears. I slowed my thrusting slightly, not wanting to get there before her but knowing, when she got there, that would be all I needed. Eyes still on me but head moving to the rhythm of the thrusting, the slurp, slurp, slurp sound of my cock in her wonderful pussy when, gently, her head turned a little sideways, eyes still locked on mine, and her body began to quiver and then shake and finally jerk to its own rhythm which matched the jerking that I was doing, shooting stream after stream of cum inside her, both of us groaning in ecstasy.\n\n\"Yeah,\" I said after a minute or so. \"That was better.\"\n\n\"So, I'm the best and the second best then?\"\n\n\"And all the other bests there are. You're all of them in one gorgeous, sexy and loveable bundle.\" I got a big and wonderful kiss after that.\n\nWe climbed into bed and snuggled a little. After all, this was our special vacation and being together in this neat little bungalow was great and the snuggling just somehow made it real.\n\n\"Now,\" she said softly. \"We need to figure out how to get back at Caleb.\"\n\nAs had become our norm, the four couples met for the usually delicious breakfast and a little chit chat before beginning our day. Kirsten whispered to me that Libby and Alison had told their husbands about the skinny dipping incident with Caleb, some of which I knew and, though they had been upset at first, the ladies assured them that they were going to get even with him today. After breakfast the ladies went off by themselves to plan their day and the men just hung around waiting. I found out later that they were filling in Rhonda on what had happened and soliciting her help in getting a little revenge. When we got back together, Rhonda grabbed Caleb's hand and led him off while the other three ladies joined the men. They now let us in on the plan. Caleb would be told that the men were going fishing and would be gone all day and the women, looking for a little adventure since they were left out were coming to his bungalow for a three on one or maybe a four on one if Rhonda wanted to join in. The men, also in need of a little revenge, would be secreted away in the bedroom so they could listen and watch what was going to happen. So, we headed back to the bungalows with the women quietly talking together making their plans, punctuated by giggles and a few loud exclamations of joy.\n\nThe men slipped into the bedroom just before Rhonda and Caleb arrived, he having been briefed that the women were coming over feeling left out and horny and were ready to show him a good time. And, very quickly the women arrived. In the bedroom we could hear clearly what was going on. Caleb was ready for some action.\n\nRhonda explained that the other ladies were going to have at him, but, they were going to tie him up so he had no choices and then they would \"ravage\" him like never before. Peeking out the door we could see that he was ready and getting excited. Rhonda told him to strip which he did while the ladies gathered around to watch. His erection was already pretty prominent and he was ready for a great time. The ladies each took one of those sash cords off the window curtains and two of them took an arm and tied it securely to a leg or the couch and the other two each took a leg and tied it to a leg of the heavy table. Now he was naked and spread eagled on the floor. Next the three ladies gathered around and began to strip and were joined by Rhonda who said, \"What the heck, I might as well join in.\" The stripping was slow and sensual and, as each breast was bared, the nipple was pinched and pulled till it was hard and erect and, as panties were shed there was rubbing and finger insertions to \"insure they were good and wet\". Caleb, in the meantime, was now breathing a little heavier and his erection was rock hard and ready.\n\n\"Who's first,\" one of them asked.\n\n\"Me,\" Libby said and kneeled between Caleb's legs. She took hold of his erection, bent down and gave a quick lick to the head followed by a kiss. \n\nAs her lips surrounded the head Alison called, \"No, I was supposed to be first.\" Libby raised her head.\n\n\"Are you sure?\" she asked hesitantly. \n\n\"Yep,\" was the prompt reply from Alison so Libby stood up and Alison took her place. The same process followed with a lick, a kiss and then the head surrounded by lips. Suddenly there was a squeal and Libby was leaning sharply and then fell onto Alison and across Caleb's body who grunted while Alison screamed.\n\n\"Oh, you hurt my arm,\" Alison said, standing up.\n\n\"Sorry,\" Libby replied. \"I stumbled.\" They pretty much ignored Caleb and the three of us in the bedroom could hardly stifle our laughter.\n\nNow Kirsten said, \"Here, let me do it. She put one leg across Caleb so that she was straddling his head and he was looking directly up into her shaved pussy which seemed to glisten, even in the subdued light of the bungalow. Then she slowly stepped backward until she was over his erection. Bending her knees she lowered herself until she could feel it touching her now very wet lips. She rocked back and forth, rubbing it against her and I, in the bedroom peeking, found this very erotic. Next she slowly reached down and took it in her hand, lined up very precisely and just dropped down hard. There was a loud yowl from Caleb and a quick response from Kirsten.\n\n\"Oh, sorry. Guess I wasn't lined up quite right.\" She slid off of him and the other two gathered around. There were tongue flicks, an occasional kiss, even the touch of lips and we could see that Caleb was about to go out of his mind with anticipation. \n\nThen Rhonda moved in, stepped across and sat down on his chest and received a very puzzled look from Caleb. She smiled and said, \"Today the ladies informed me that the first night in the hot tub was NOT the first time they had met you.\"\n\n\"Oh shit,\" was his quiet reply. She slid off his chest and we noticed she had a little wooden spoon from the kitchen area. She quickly whacked his erection with the spoon to his startled cry of pain.\n\n\"I understand you weren't a very good boy and made them do things.\" She quickly grabbed his slightly shrinking erection and gave it several strokes until it sprang back to life. Then she whacked it again with the spoon to another yell of pain. \n\n\"Rhonda, stop. That hurts like hell.\" She was pumping him again with her hand, then bent over and took him in her mouth to help accelerate things.\n\n\"There were three of them, right?\"\n\n\"Rhonda, no\" he shouted as the spoon swung again to another yowl of pain. \"Damn, don't,\" he said rather frantically.\n\nNow she stroked him again, lined him up and sat down on his cock to his accompanying moan. But, she didn't move and he couldn't with her weight on his hips. She stayed there for about 20 seconds then stood up quickly with an accompanying little pop as he exited her. \"That's for me and all you get,\" she said, waving the spoon in front of his face. \"You forgot to tell me about it too. Okay guys, come on out. We're through with him.\" He watched us walk out and stand over him, not sure of what might happen next. \"Want a go at him, guys?\" Rhonda said.\n\n\"I think you guys did a pretty good job so we're probably okay. Plus,\" I added, having trouble keeping my eyes off Rhonda as usual since she was still very naked, \"if I had seen Rhonda skinny dipping I might have grabbed her suit and done something foolish too.\" Rich and Marshall laughed and nodded as Rhonda was getting a good looking over. In the meantime the other ladies were untying Caleb and soon he was standing up with us.\n\n\"That hurt like hell,\" he said looking at the men, \"Both the spoon and the frustration. Can't believe you guys were watching and knew about that. I figured the women wouldn't tell.\"\n\n\"I was there and saw it all, so you were screwed from the opening bell,\" I said.\n\n\"No one had said anything to me about it all week, and I was with everyone.\"\n\n\"You were very kind and sweet and considerate or I might well have said something,\" Kirsten threw in.\n\n\"He normally is,\" Rhonda added. \"But that damned testosterone can be nasty.\"\n\nSuddenly Caleb realized something. \"Kirsten, Libby, Alison, I apologize, I really do. I deserved what I got today and maybe more. I should have been content with just hiding and watching you come out of the water naked.\" He seemed very contrite. \"And obviously, you guys aren't fishing.\"\n\nWe each went our separate ways for the rest of the day. Kirsten and I did some reading and some sun bathing on the beach, had another great lunch (the food here was fantastic and all included with the price of the vacation. Even without the sex, life would be great with just the food.) In the afternoon we went to the beach, slathered on the sunscreen, thank goodness, for we both fell asleep and woke up just mildly pink, not tan lines but just an alluring mild pink to the exposed skin which only emphasized the whiteness of the skin that was hidden. The people at the dining room had told us there was a small storm off the coast and the waves should be a little bigger and it would probably rain this evening. They were sure right about the waves so, when we woke up from our little naps, we headed for the bungalow, picked up the two boogie boards that were there and headed out into the waves to get some good rides which we did. We also got dumped quite a few times and spent some time bouncing along the sandy bottom and feeling some heavy water crashing down on us but it was a blast.\n\nWe came back to the bungalow after that to get dressed for dinner and Kirsten decided not to take the time to dry her hair and, as she got dressed with the slight pinkness to her skin and the wet hair I had a lot of trouble constraining myself which she seemed to enjoy as she flaunted herself just a little in order to drive me crazy.\n\n\"You love to tease when you know I can't do anything about it don't you?\"\n\n\"Sure do,\" was her reply.\n\nSo, we headed to dinner, noticing that some clouds were rolling in. The others were all there and we ate, stuffing ourselves as usual, then grabbed the bottles of wine and stopped before heading back to decide what we'd do. We all decided that the one girl going to each of the bungalows and then the guys picking one and going there had worked pretty well so we'd try that again. We gave the girls a ten minute head start, took some papers and numbered the bungalows and then each drew to see where we'd go. Just as we were getting to the bungalows it started to rain and we each ran to the one we had drawn. I had actually drawn Marshall and Libby's place so I rushed through the door, just a tiny bit wet - and didn't see anyone there. I called, \"Hello,\" and saw the bathroom door open and a tall, blond figure emerge. \n\n\"Hi,\" she said, then added, \"I'm glad it's you.\" That was a very nice compliment coming from her and I enjoyed it immensely. \"Do we plan or just let something happen?\" It had started raining much harder and there was a gentle roar-like sound as it hit the roof. I tilted my eyes upward, then looked at her.\n\n\"Yes,\" she said excitedly. \"And the beach will be deserted. Let's go.\" She stripped her clothes off quickly, but not any more quickly than I did. She grabbed my hand and we were out the door and heading to that little path toward the beach. \n\nThe rain was coming in heavy torrents now and we were instantly drenched and, as we were leaving the enclave area where there were a few lights she looked spectacular with hair already wet and water cascading off her body. As we got to the beach we could hear the waves crashing and, despite the rain there was just enough light to barely see each other. Holding my hand, she plunged into the raging water until it was waist deep, then turned and grabbed me and began kissing me until a big wave hit her in the back and we tumbled down under the water, still kissing as our arms were locked around each other. I could feel her hand on my erection as I grabbed onto one of her breasts and was knocked down again by another wave. When we surfaced, she yelled loudly, wholly swallowed up by the ecstasy of the moment. The next wave rolled us into shallower water where she kissed me again and quickly threw her leg over me and began to guide my erection home. But another wave tumbled us and this time, her face close to mine, that beautiful blond hair tangled across her face as we surfaced I slid inside that warm and slippery tube and I could hear her moan over the roar of the water. I rolled on top and she locked her legs around me and we rolled around, battered by the waves and the sandy bottom but stayed locked together. I didn't have to think about thrusting or withdrawing as the waves took care of that for us. There were sputtering moans and grunts as her arms were locked around my neck and her legs around my back so I slide one hand down between us until one of my fingers joined my cock inside her, then slide up a little and began to rub her clit. Over and over the waves pounded and we gasped and groaned and rolled around, her on top and then me on top as the waves had their way with us until, the sounds I could hear from her lips against my ear changed in intensity as her breaths became shorter and shorter and I knew what was coming even before she pulled her head back and began screaming, \"YES, YES, YES,\" at the top of her lungs and her body jerked as I echoed what she was saying and doing and we clung together like that for another 30 seconds.",
        "\"Don't move,\" she called into my ear, never relaxing her arm's or leg's hold on my body. We had finally rolled into the shallower water and the wave's final advancement was just washing over us now. Then she said, \"You'll have to do that with Kirsten sometime. It's fantastic,\" she sputtered out as another wave washed over her face. I started to move and she quickly said, \"No, don't move. Just stay like this for a few more minutes.\" As she said it I could feel her breath on the side of my face and I turned a little to face her and, as we bumped noses, her tongue went out again my lips and then my tongue was out too and she took it in her mouth and held it with her teeth, brushing her tongue over it as it was held in her mouth. She pressed against me and I could feel her breasts on my chest, her long legs still wrapped around my waist. I opened my eyes and hers, right in front of me were open too and it was too dark to see the blue but I could picture it in my fantasy as she made little, \"mmmm, mmmm, mmmm,\" sounds in her throat. \"Oh,\" she said and I could hear the smile in her voice. \"I can feel that you're getting ready again.\"\n\n\"You ever had that effect on men before?\" I said over the roar of the waves.\n\nShe just loosened the hold she had with her legs just a little and began moving her hips. I took a deep breath.\n\n\"How's that,\" she said right into my ear.\n\n\"Just, wow,\" I answered. \"Let's go back to the bungalow before we get all wrinkled here in the water.\" She unwound her legs from around me but kept her arms around my neck giving me little kisses as we struggled to stand up. It would have been much easier if she'd let go of my head, but not nearly as enjoyable. When we were finally standing and out of the water she still had her arms around my neck so I reached down with my right arm, put it under her knees, left arm around her waist and picked her up.\n\n\"Put me down,\" she said quickly. \"You'll hurt yourself.\"\n\n\"You're just afraid I'll drop you.\"\n\n\"That too,\" she giggled as I carried her up the beach and down the path, then deposited her at the door of the bungalow.\n\n\"That's pretty impressive,\" she said then. \"I'm quite a load.\"\n\n\"Load, is definitely not a word I'd use to describe you,\" I quipped and got a kiss on the cheek for my efforts. Then quickly I added, \"Sit in that chair.\" She looked at me and smiled.\n\n\"That would be wonderful,\" she said, \"because I know what you have in mind but, time is getting short here so you lay down on the floor.\" Not being one to argue, I did as I was told. She walked over to me and stood with her legs straddling my head. The view above was fantastic. Then she stepped a little forward and dropped to her knees and said, \"69 here we go.\"\n\nShe was still wet from the ocean but as she lowered herself onto my face, the aroma was familiar and definitely exciting. As my tongue began probing there was a salty taste from the seawater trapped in the nicely trimmed blond muff that was there. And, as that thought crossed my mind she said, \"Your cock has a salty taste, yummm,\" and I let out a long breath as I felt her lips take me in and her tongue beginning to do its work. My tongue was working too, as it slid past those wet lips and into that wonderful warm place, tasting what I had just left there a few minutes ago. Then it slipped out and began flicking away at her nub of a clit, now hard, pink and excited. Wonderful slurping sounds came from beyond where I could see and I used my lips, along with my tongue on that nub and her hips slowly arched into my face as her mouth left me and she moaned and grunted and then began to shake and by the fourth jerk I squirted hot cum onto her face and tits and my own stomach.\n\n\"I like it when we cum together,\" she said softly. \n\n\"Well, I have no control over it because when you cum it turns me on like nothing else and I'm right there with you. There's no sound in the world as nice as hearing a woman cumming.\"\n\nShe giggled and stood up. \"Nice arrangement,\" she said. \"I bet Kirsten loves it.\"\n\n\"Yup,\" I said and headed to the bathroom, along with her, to clean up a little.\n\nWhen we came back out she stopped and suddenly said, \"We still have some time left.\"\n\nNow interested I replied, \"And so?\" But she wasn't looking at me even though she was standing right in front of me. Then I noticed something totally unexpected. \"Are you blushing?\"\n\nShe looked at me, her face definitely a little pinkish. \"Probably,\" she replied, now looking me right in the eye and those blue eyes had me in their spell again. \"I want to do the other,\" she said softly, still looking right at me.\n\nI hesitated a second. \"Are you sure?\"\n\nShe shook her head. \"With you,\" she said.\n\n\"Why with me?\"\n\nA little embarrassed grin crossed her face. \"This is hard to say but . . . \" she paused, still looking at me. \"But, and don't you dare take this the wrong way, but you're smaller than Caleb and I just think it would be easier the first time.\"\n\n\"But, the first time should be Caleb,\" I quickly replied, having just said the same thing very recently with just one word changed.\n\n\"I told you my reason but it's up to you of course. But, that's what I want.\" She bent her head slightly and kissed me on the forehead.\n\n\"On one condition,\" I said. \"Follow me.\" And I led her into the bedroom and I'm sure her idea of why was totally wrong. I slid around the end of the bed and to the little night table beside it. Opening the drawer I smiled. Quickly I tossed her the slightly used tube of K-Y jelly. A huge smile crossed her face.\n\n\"How do you do that?\" was her puzzled response.\n\n\"Just good and I'll tell you sometime.\" I looked at the tube to see how the lid worked and when I turned around Rhonda was on the bed, her head down against the covers and her ass high in the air. I climbed up behind her. \"You have a wonderful ass,\" I said very sincerely and got a giggle in return. She had spread her legs nicely so I reached between them and ran my hand up and down and she was a little dryer than usual. I slide a finger inside where it was a little wetter then brought it out and found her clit and began to rub there with some very pleasant moans coming from up ahead. It wasn't long before she was noticeably wetter and so, since my body had prepared me for further adventure, I slide it gently into the now very warm and very moist place and this time I heard a groan. A few strokes and I pulled out, then a few more strokes and I checked and I was nice and wet too. I opened the tube and carefully squirted a glob on that other opening she had. I rubbed my finger in it, then began pressing against that small and very tight place. It slide in to the first knuckle and was trapped there. \"Relax,\" I said, \"and push like you were letting a fart.\" A little delay and then the finger slipped in further and then all the way. I pulled it most of the way out and spread that little opening as much as I could, then squirted in more of the K-Y. Now I added a second finger, reminding her to push and, as gently as possible, I edged them in until both were as far as I could get them. I gently twisted and rotated them, pulling out a little and then back in. After a couple of minutes of this I pulled both out and gave another quirt of K-Y. Now was the moment of truth and I pulled out of one hole and headed for the other. I reminded her to push and I did likewise, as gently as I could and as the head slide in there was a long, low moan. A couple of inches more, then out and another squirt. Now it was a slow push until everything I had was buried in her ass.\n\nShe groaned and lifted up so she was on all fours. \"Oh my gosh, that feels so different but soooo good.\"\n\nNow I was moving in and out and my hand was working wonderfully on her clit to some tiny jerks and twitches. \"If I cum,\" she groaned, will that make you cum?\"\n\n\"We'll have to see,\" I finally was able to say. But, moving in and out of that very tight tube I knew I wouldn't last long so I was rubbing her for all I was worth. Suddenly I knew it was no use and I could feel myself tensing to explode. With a loud, \"Ahhhhhhh,\" I let loose into her ass and, about the third squirt, she let out a loud, \"Yyyeeeeesssss,\" and began to jerk and each jerk milked my cock even more. I collapsed on top of her, supporting myself on my elbows.\n\n\"It does work, doesn't it? I did just like you do. When you started I just couldn't hold back, even if I'd wanted to.\"\n\nWe lay there for a couple of minutes and then I pulled out and we stood up and she turned around and I got a big, juicy, tongue-filled kiss. Now, suddenly filled with mischief I said, \"Now that you do anal, you're perfect for a threesome.\"\n\nShe turned and gave the remnants of my erection a slap to my exclamation of pain. \"That's what happens when boys are nasty.\"\n\n\"I know,\" I replied. \"I'm just glad you didn't have a spoon.\"\n\n\"Besides,\" she said. \"That's twice tonight we broke the limits but I loved it each time so no harm, no foul.\"\n\n\"Basketball talk. How do you know basketball talk?\"\n\n\"I'm six feet tall so, I've played.\" Then she smirked. \"Let's go,\" she said. I fully expected her ass to be dripping but I guess I'd had enough tonight that there wasn't much left.\n\nAs usual, we all got back to the hot tub about the same time and the rain had stopped which certainly helped since we didn't get a lot of rain water in our glasses of wine. Kirsten sat down next to me and whispered in my ear, \"Rhonda again?\" I smiled and she glanced over at Rhonda who gave her a thumbs up. I got a rather questioning look after that and it was my turn to whisper, \"I'll tell you later and you'll love it. Since I had seen her come out of the bungalow I followed with, \"How was Rich?\" I got a little smile and an \"I'll tell you later,\" look.\n\nCaleb and Alison got there last. \"We have gotten into kind of a routine, haven't we?\" he said, sitting down next to Rhonda who gave him a lick on the cheek. \"You hair is awfully wet,\" he added, then gave it a little lick as well. \"And a little salty. I guess I know where you're been.\" She looked over at me and smiled and I got a lick on the cheek from Kirsten.\n\n\"Salty?\" I questioned.\n\n\"Very,\" was her reply.\n\nMy turn to whisper again. \"Before we go to bed tonight, I'll show you something.\"\n\n\"Will it get me salty too?\"\n\n\"Very,\" was my reply this time.\n\nIn an hour or so we all headed for our respective bungalows but Kirsten and I were only in ours for a minute or two, then back out the door and heading for the beach. As we went I told her about my time there with Rhonda, having to speak fairly loudly over the sound of the waves. We ran into the churning water and out further, ducking a couple of small waves. She looked at me with slightly frightened eyes that I could barely see in the darkness and, as I threw my arms around her I sensed and heard a big wave approaching. It slammed into her back and we went rolling along the sandy bottom. I held her with one arm now and slide the other hand between her legs as we stood up and headed back out again. She seemed to understand and threw her legs around me and I quickly slid inside where it was warm and very slippery. Another wave crashed and we rolled again, and then again. Experienced at this, I slide my hand between us and found her clitoris rather easily and, even above the roar of the waves, I could hear her groans and moans. The waves pounded and we rolled and I thrust as best I could and she responded. I thought I could feel her cumming so, as usual, I was right there too just as a kind of rogue giant crashed down on us and we went to the bottom, gasping and rolling. When we came to the surface again she unwrapped her legs and headed out of the water.\n\n\"That's so terrifying,\" she said when I caught up to her, \"but so freaking exciting. Oh my gosh.\" We both lay down on the sand in the dark, fascinated by the sounds of the ocean and having an occasional big wave wash up and gently cover us.\n\n\"So, how was Rich?\"\n\n\"Video when we get home,\" she replied. \"He's kind of a sweetheart, overwhelmed by all that's going on this week. You always have to slow him down or nothing lasts very long. So, this evidently was how you spent some time with Rhonda. Anything else to tell?\"\n\n\"There's always more to tell isn't there?\" A nod in the darkness. So, I relayed a little of the episode after we got back to the bungalow. \"And, I added, she wanted to do that with me because, and you'll enjoy this, I was smaller than Caleb.\" A giggle in the darkness. \"She was really kind of apologetic about it but I understand it perfectly.\"\n\n\"He is considerably thicker than you are so yes, I can sympathize with her too. Let's go to bed, I'm worn out.\"\n\nMorning seemed to come early the next day and the walk up to breakfast was a little different due to the many puddles on the path. The ocean's roar beyond the strip of jungle had lessened as well as the storm must have passed on by the island. In the dining room Rhonda sidled over to me. \"Just guessing of course, but did Kirsten like the ocean.\"\n\n\"She was a little frightened but everything went very well. How about Caleb,\" I said, guessing a little.\n\n\"He thought it was amazing and I'm surprised we didn't crash into each other because we were probably both out there at the same time.\"\n\nI laughed. \"I suppose it was easier not to drown with something a little bigger stuck in you.\" Her fist caught me right in the pit of my stomach to a fairly loud, \"Humph!\"\n\nAs she walked away, of course Kirsten walked over to me. \"What was that about?\" she asked..\n\n\"I was being a smart ass and paid for it,\" I replied.\n\n\"It probably had something to do with the size of your dick.\"\n\n\"Or Caleb's.\" Another fist to my stomach and a laugh from Kirsten.\n\nKirsten slipped off for a moment to say something to Alison and Rhonda sidled over beside me. \"If we have any activities today, I want to be with you.\"\n\nMy eyes opened pretty wide at that. \"That's a nice compliment but we've actually been together three times now, two with the others, so another time might even upset Kirsten. And, last night I kind of forgot about your limits.\"\n\n\"No worries, I think Caleb probably forgot about his to. And, about the other, you're just so much nicer than the others. Maybe it will just happen.\" She smiled a big smile and winked. Now Kirsten was back.\n\n\"What's that about she asked,\" teasingly.\n\n\"If anything happens today she wants to be with me rather than the other two. I'm just so much nicer.\"\n\n\"Well, she's figured out what I figured out a few years ago.\"\n\n\"This routine we've fallen into is pretty amazing isn't it.\"\n\n\"It is but it's kind of like when we were teenagers. We'd go to a week-long camp and by the second day we all had boyfriends and girlfriends and we'd sneak off to make out and at the end of the week we'd go home and everything was back to normal.\"\n\n\"I think you're right. At camp we didn't know them before and here the same. Just kind of anonymous fun both places except the fun's a little more adult here.\"\n\nWe hung around the dining room for a while, looking in the two shops that were connected to it, then came out and headed back to the bungalows to decide what we'd do for the rest of the day. Kirsten looked a little nervous and I wondered what was going on so I asked her. She looked at me a little strangely, then began.\n\nI just had a strange conversation, sure not one I ever expected.\"\n\n\"Who with?\" I questioned.\n\n\"Rhonda. She started to talk to me and suddenly got bright red, so embarrassed she could hardly look at me, and, it kind of scared me after what you told me this morning. But, she finally got it together and said what she had to say. \"First she told me I was very lucky, that you were a great guy and obviously totally in love with me and that she was the same with Caleb. Then she went on to say that they had been gone the other day when we split up into threes and she had never done that before. She said she really wanted to try that, but that Caleb had to be one of the men and, then she really stammered, not something you expect from a big, beautiful, self-assured woman like her. She said she wanted you to be the other man because, and she stammered again, and then said she was sure you had told me what she had you do the other day, which you had, of course. Plus, she wanted me to be there so I wouldn't get the wrong idea about anything.\"\n\n\"Wow, and what did you tell her?\"\n\n\"What would you guess I told her?\"\n\n\"I'm not going there for sure. What did you say?\"\n\n\"I thought for a little bit, just to make her squirm a little more. Then I told her two things. First, okay we could do that just like she said except, the second thing was that we'd never done that either and so it had to be a two-way three-way if we were going to do it.\"\n\nMy mouth dropped open. \"Are you shitting me?\" was all I could reply.\n\n\"Oh, and one more thing. We actually flipped to see who would go to that little drug store and get the K-Y.\" She had a huge grin on her face.\n\n\"What about the others? We going to tell them?\"\n\n\"Just like you to think of that. I guess we will but after it's happened. Rhonda said we might encourage them to do the same thing.\"\n\n\"When's this going to happen?\"\n\n\"As soon as she gets back from the drug store. And, at our place so there will be video.\"\n\n\"I bet if we tell them about the video they'll love it and want a copy.\"\n\nAs we walked along Kirsten was a little silent, so I probed. \"You're quiet.\"\n\n\"This is another new world in the new world of this week. I guess I'm just a little nervous.\"\n\n\"I guess I don't blame you. It's really different for you.\"\n\n\"Last week if I thought about this, I would have been disgusted, probably said it was gross, and never even took the time to think of it happening to me. But, that was last week. Also I was thinking about something my mother told me one time. She didn't smoke, hardly drank at all and certainly didn't do any drugs but, before she met dad she had a boyfriend and sometimes he'd smoke a little weed and try to get her to do it too. She resisted until he finally talked her into it and so she smoked that one time. And later, when people talked about weed, she said she at least knew what they were talking about because she had done it one time.\"\n\n\"And that's this week.\"\n\n\"I guess so.\"\n\nWe had only been back in the bungalow about 15 minutes when Caleb and Rhonda got there. Rhonda had her little bag, similar to the one Kirsten had the other day. We sat down and realized this was a little awkward in comparison to the other days.\n\nFinally Kirsten hit it on the head. \"Too much planning takes away from the spontaneity doesn't it.\" We all nodded. \"But, here we are and let's get going.\" She took the bag from Rhonda.\"\n\nThen Caleb had a suggestion. \"We can separate things like we did the other day, a little time on the beach.\" More agreement.\n\nKirsten took my hand and led me toward the bed room, then stopped. \"Umm,\" she said, \"speaking of planning, who's going first in this?\"\n\nCaleb reached in his pocket and took out a coin. \"Heads it's Kirsten, tails it's Rhonda.\" He flipped and let it lay so we all could look. It was heads. I saw Kirsten bite her lower lip, then take my hand again and head for the bedroom. Inside, she shut the door.\n\n\"Now what,\" she said cautiously.\n\nI took the little bag and tossed it onto the bed. I kissed her and was kissed back. Slowly I unbuttoned her blouse and then her shorts as she kicked off her flip-flops. I squeezed her ass as I pulled her against me. Our tongues were dueling as she began pulling off my shirt, a slight interruption in the kiss. As she was pulling my shorts down I grabbed those wonderful boobs and pulled on the nipples. When she had my shorts off my feet she didn't bother to straighten up, just opened her mouth wide and swallowed the erection that had happened fairly quickly. It felt so good I could hardly breathe but I had to stop her since there was more to happen later. But, when she stood up I reached between her legs and began to rub and she threw her arms around my neck and spread her legs. The tongues were going again and she was making those wonderful little noises.",
        "\"All the way?\" I whispered.\n\n\"Please yes,\" she groaned and, in just a couple of minutes her groans turned to gasps as her body jerked and shook several times. In another minute she opened her eyes. \"Standing up,\" she said. \"It's going to be a good day.\" She stepped away from me. \"What are you going to do to my ass now?\"\n\n\"Get on the bed on all fours, then put your head down and your ass up.\" She did just that and I was amazed again at the shaved pussy and ass shining up at me. I used the K-Y, the fingers and she yelped gently a couple of times. \"Now, the moment.\" I said and realized how unromantic this was. But, it had to be done if the rest of the day was going to happen. And Kirsten had asked for it. I lined up my K-Y slavered erection with her now slightly stretched ass and gently pushed. She tightened up as I expected. \"Relax and push,\" I gently cautioned. \"Like you're making a fart.\" Slowly I felt that happen and the head slid in to that very tight tube. Using the method I'd used with Rhonda I reached around and slide my finger into her slit until I found her clit which I began gently massaging. Now, more moaning sounds and slowly I pushed until I was clear in and my balls were banging her butt cheeks.\n\n\"Oh lord,\" she murmured. \"You're all the way in.\"\n\n\"And if I'm not out pretty quickly something is going to happen.\" Then I slowly pulled out. \"You ready?\"\n\n\"More than ready.\" She gasped and got off the bed. \"Let's go.\"\n\nWe went out to the main room where Caleb and Rhonda were waiting. Not unexpectedly they were both naked. Kirsten, who was now very hot, looked at Rhonda, who sat down on the couch, then headed for Caleb, holding onto my hand. She took hold of his partial erection and pumped it several times until it was full size. As she was doing that he was pulling on her nipples and saying, \"So nice, so nice.\" She knelt down to take that erection in her mouth which stretched her lips just a little due to his thickness. I glanced at Rhonda and she had her hand between her legs, moving it gently and watching what was happening. As Kirsten was bent over working on Caleb's cock I moved behind her, spread her cheeks and pressed against her ass, hoping she was still lubricated. She was and I slipped in step by step. When I was in as far as I could go I put my arms around her and pulled her back ward so she was impaled on me with her legs spread.\n\nTo my surprise she said, \"Put it in and stretch me good.\" She was really getting into this. And Caleb, not one to keep her waiting and, with a smile on his face, did just that. He spread her with his hands then pushed it slowly into her, an \"Ooohhh,\" cominh out of her mouth with an arching of her back. With my hands free I reached around and began squeezing her boobs and playing with her nipples. Out of the corner of my eye I saw Rhonda move and she was beside us, hand and arm between Kirsten and Caleb as she rubbed Kirsten's clit. I was a little restricted in my movements but Caleb wasn't and he was moving in and out which I could feel through the flesh between Kirsten's pussy and ass. With three people working on her she was getting louder and louder, Caleb pumping in and out of her pussy still fairly slowly, Rhonda furiously rubbing her clit now and me, moving as best I could in her ass.\n\nThen, unlike her she began, starting softly, then getting louder and louder saying, \"I'm going to cum, I'm going to cum, I'm going to cum,\" followed by the beginning of those jerks and twitches and moans that marked her actual orgasm, and led right to mine as I shot my hot sperm in her ass. Caleb was not quite ready and kept pumping so Rhonda moved her hand and moved up to kiss Caleb with her tongue and he began moving faster and faster and that was enough to push him over the edge and he pulled out and shot on Kirsten's stomach and on Rhonda as well, squirt after squirt as he grunted with each squirt until finally he stopped.\n\n\"What about you?\" Caleb said to Rhonda rather breathlessly.\n\n\"I'll get mine later,\" she said looking from one of us to the others. She stood up and went to the couch. Caleb was still kneeling in front of Kirsten and I was still connected to her ass. \"You guys don't know, and we've teased you mercilessly I think but, Kirsten and I are about as different physically as we can get but, Caleb is totally fascinated by Kirsten and she tells me that Pat is fascinated by me all because of this difference. And so, we've had a great time here, a little to the expense of the others. But, so be it.\"\n\nKirsten leaned forward and raised herself off of my now very limp cock. \"I may never do that again, nearly guaranteed,\" she said, \"but I've done it and know what it is and it's something that probably none of our friends have done so I can gloat, in silence of course, if it ever comes up in conversations.\" Then she turned to me and said softly, \"I feel stretched everywhere.\" As we stood up she whispered in my ear, \"When I'm with him he pulls on my nipples so much they get red and very tender.\"\n\n\"Is that good or bad,\" I whispered back.\n\n\"Tender almost hurts but is also very exciting. They get almost like my clit . . . but not quite,\" she added.\n\nBathing suits were soon on and we headed to the very bright and sunny but very hot beach. We slathered each other with sun screen, spent some time in the water and finally just lay on our towels in the sand. I was trying to think of something a little different for a little later and finally had an idea. I shared it with Kirsten and got a wide-eyed, open-mouth look. \"It would be different,\" I suggested.\n\n\"Wow, yes it would,\" she replied.\n\n\"Can you do it?\"\n\n\"I never even thought about that before.\" She looked off into the distance.\n\n\"Well, this is the week.\"\n\n\"Yeah,\" she said thoughtfully, looking over at Caleb and Rhonda. Then, after a couple of more minutes of contemplation. \"Yeah, I guess so. Why not. It is this week.\"\n\nThen we watched Caleb and Rhonda for a while as he was kissing and otherwise touching her to keep her libido running on full throttle. After an hour or so we stood up and they took the cue and we all headed for the bungalow again. Since the camera didn't have to be a secret any longer we just left it plugged in so it was always ready. Once inside we took off our suits and, as Rhonda walked by me she grabbed my still limp cock and bent over and said to it. \"This is all your fault you know.\"\n\n\"Now wait,\" I countered. It didn't do anything it wasn't invited to do, even if it was insulted along the way.\" That brought a laugh from the two ladies and a puzzled look from Caleb.\n\n\"I'll tell you sometime, probably when we're back home,\" Rhonda added.\n\nAs for me, seeing those two naked women, both beautiful in very different ways, it didn't take me long to get ready for action. And, glancing at Caleb I could see that there were two of us. But, since it had been nearly two hours, he took Rhonda's hand and headed for the bedroom.\n\n\"I think I've had more sex already this week that in the whole past month.\" Kirsten giggled as she said it.\n\n\"There's only one of me.\" I added.\n\n\"Yeah, and me too cause I think you've done alright too.\"\n\n\"Yep, I've tripled my previous conquests this week.\"\n\n\"Me too.\"\n\nThen the other two returned and Rhonda grabbed me and gave me a huge and very tongue filled kiss as Caleb did the same to Kirsten who was more than ready to grab his rather thick erection and give it a couple of pumps. And, not to be left out, I got the same from Rhonda. Then, the four of us were kissing and caressing and rubbing until Caleb lay down on the floor. Rhonda stood over him, lowered her pussy to his face to have it probed by his tongue. It was clear to see that she was wet and ready and she began to lower herself toward his cock.\n\n\"Just a second,\" I threw in. \"I need to get ready.\" As she was on her knees it was easy for me to straddle Caleb's leg and push my own erection into her to a quick gasp. Two or three thrusts and I could see I was very wet and ready as I pulled it out and she quickly took Caleb in. She leaned over him, hands on his chest, her beautiful ass pointed right at me. I glanced at Kirsten who sighed and smiled and then I gently pulled Rhonda's butt cheeks apart, reminded her to relax and push and then began to push myself. A long moan from her as I slipped slowly in until my balls were lying against her ass. She moved her hips backward pulling Caleb slightly out but pushing me further in. Then her hips went the other way, pushing Caleb in and me out. With the rhythm established we did this a few more times when I saw Kirsten move beside us and, as Rhonda had done, slide her hand across Rhonda's belly and into her very juicy slit and begin to rub her clit. \n\nI took my cue from what we had discussed earlier and grabbed Rhonda's silky blond hair and pulled it back toward me to another gasp from her. Now she was sitting almost straight up and Kirsten swung her leg across so she was sitting on Caleb's chest. She leaned forward toward Rhonda's face and planted her lips on Rhonda's, her tongue darting quickly into her mouth. Rhonda's eyes snapped open but she responded quickly with her own tongue. Kirsten worked her clit with one hand and pinched a nipple with the other as I held Rhonda's head back. But, her hands grabbed Kirsten's head and held their mouths together as their tongues probed and teased. Caleb, seeing what was happening pushed his hand between Kirsten's legs and squeezed and rubbed her clit.\n\nThe sounds were nearly overwhelming as bodies smacked together, cocks squished in wet pleasure tubes, high pitched moans and groans mingled with much deeper tones. It was an unbelievable time of sheer ecstasy, both given and received until, as I had expected, Rhonda's breaths grew shorter and shorter and her moans louder and louder until out came a long, \"Ooohhhhh,\" followed by many more \"oh\"s accompanied by an intense grasping of my cock in her ass with each oh. I was amazed that I was able to hold it together. It wasn't long before Caleb arched his back and shot his hot load into his wife's pussy. But, bless his heart, he didn't let up on Kirsten during all of this and she began bucking with yes after loud yes escaping her. I let loose of Rhonda's hair and grabbed her hips as it was my turn to buck and jerk and squirt. So, four orgasms in about four minutes.\n\nKirsten rolled off Caleb onto her side and Rhonda collapsed on Caleb's chest. I slid out of Rhonda and collapsed beside Kirsten. We all just lay there breathing hard for long minutes. Then Rhonda got up on all fours and turned to Kirsten.\n\n\"How did you do that?\" she asked. \"It so shocked me at first but all of a sudden I could hardly stand it and, well, you see what happened.\"\n\n\"Well, when Pat suggested it I didn't think I could do it but, the more I thought about it, the more I couldn't wait to see it happen to just see how I liked it. Also, it was just you - I couldn't have done it with Alison or Libby.\"\n\n\"Yes, very true for me too. What's with that?\"\n\n\"I think it's the men, the way they think of us.\"\n\nShe turned her head and looked at me. You ready to go at it big guy?\" she said with that neat English accent.\n\n\"I hope you're kidding,\" I said. \"Philosophically I'd love it but practically . . . \" and I looked down at the limp dick hanging between my legs.\n\n\"Yeah, the others may want to do something since this week is almost over.\"\n\nWe lolled around for a while, then went our separate ways to get ready for diner, not having seen the others for most of the day. But at dinner, as usual, all four couples were there. Of course, talk eventually drifted around to the \"hot tub\" as we euphemistically called our evening activities.\n\n\"Well,\" Marshall began. \"We decided we'd go swimming, so we stopped at our place and Libby and I put on our suits, then we went to Rich and Alison's and they put on their suits.\" He paused and appeared to be a little embarrassed. \"There was just too much skin showing I guess and one thing led to another.\"\n\n\"So what you're saying is that just sitting in the hot tub and talking might be a good plan for tonight,\" Caleb suggested. There were several nods. \"Well,\" he added, \"we weren't taking a nap this afternoon either so I suspect it sounds good to us.\" More nods and laughs.\n\nSo, we ate, we talked, then we headed back and, since it was easier, we went to the hot tub naked. We talked about our day and the others shared what they had done which was nothing exceptional, based on the week so far and then we shared what we had done to silly grins from the guys and open-mouthed looks from the ladies including long stares at Kirsten. Then Alison ventured, \"I would have loved to have watched that,\" and I couldn't help but think of the video we had.\n\nI whispered to Kirsten about possibly sharing it with them and I caught some glances from Caleb and Rhonda as I'm sure they had guessed what I was whispering about. She finally shook her head and we all accepted that, probably based on what Rhonda and Kirsten had said about the other ladies at the end. But, since she took away my enjoyment of watching the others watch us, I slid my hand onto her thigh and quickly up between her legs and one finger went quickly inside. She just jerked very slightly and acted as if everything was normal. I began to rub her very gently, looking around and listening to the others talk as she was doing also. I think she was bound and determined not to let the others know what was happening to her and was showing just how tough she could be when she had to. Eventually, if she let me keep rubbing, she was going to have to climax and we'd just have to see how she handled things then. I could see her face starting to flush, even here in the hot tub, so I slowed a little and then picked up the pace again. She was trying to hide it but her breathing shortened and deepened and I could feel her starting to tense and, when her eyes closed, they were a while opening again. I was dying to see what would happen. Before, she had just let her orgasm blast out so that everyone knew what was happening.\n\nAs I felt the first jerk of her body she began to cough, deep and hard coughs and they kept on for 15 or 20 seconds, then faded away. Everyone was concerned and wanted to know if she was okay and she apologized and said she had choked on her own spit and laughed about it. As she settled back I suddenly felt her hand grab hold of my cock and she whispered, \"Now let's see how you do.\"\n\nUnder the water she began pumping, not visible at all from above the water. I knew that I couldn't do as well as she had done and I tried to decide how to handle it. She was in no hurry and I'm sure was now enjoying my mental squirming to avoid detection but, hurried or not, it was having its effect on me. I tried the old, \"thinking of sports\" routine remembering how it used to sometimes help when the unexpected erection began in class in high school but my body didn't seem to be buying that today. Of course, I could just let go and everyone would know what had happened but it was the challenge of matching Kirsten that kept me thinking. Plus, she was doing such a good job that it was getting harder and harder to just keep a straight face now. And, the evil little thing had obviously been pinching her nipples under the water, then letting them occasionally show as she moved around, knowing how I loved seeing them hard and sticking out which she knew would help her in her quest to win the orgasm contest we were having. My mind was frantically trying to think of something but with not much success when I realized, as my groin area began contracting, that I had lost and just let it go, groaning and gasping a little as I dirtied the hot tub waters with my explosions of semen, to the giggles and cheers of the others and huge, victorious smile from Kirsten.\n\nShe leaned over and whispered, \"You can't imagine how good it makes me feel to know that, after these years of marriage (4 to be exact) that I can still sexually excite you with three other naked women sitting within a few feet of you.\"\n\n\"The nipples were the clincher,\" I whispered back.\n\n\"I was hoping as much.\"\n\nCaleb then said, \"Tomorrow is our last day here and maybe it would be good for all of us to just do our own thing.\" He looked around and received several nods of approval. \"But, let's do one more weird thing before we leave. Let's go to our place.\" Now what did he have in his mind? \n\nSoon all eight of us were inside their bungalow and Caleb was ready to expound on his plan. \"Okay, I saw this on the internet one time - it's just something weird we can do that we'll never have a chance to do again. It's kind of a chain oral sex.\" Now everyone looked really puzzled. \"Let's do it in alphabetical order by first names, with the very first name starting off. Let's see, the ladies would be Alison, Kirsten, Libby and Rhonda and the men would be me, Marshall, Pat and Rich. So, the chain would be Alison, Caleb, Kirsten, Marshall, Libby, Pat, Rhonda and Rich. Now, this is an oral sex chain so Alison would lay down here,\" he said pointing, I'll lay down next with my head between her legs but angled so we'll eventually make a circle, then Kirsten after me at the same angle, then Marshall and next Libby. Wait.\" He paused for a moment, thinking. \"Maybe Rich and Marshall should change place so they won't be connected to their mates. So, after Kirsten is Rich, then Libby, then Pat followed by Rhonda and Marshall\"\n\nNow it was my turn. \"So, we're forming an octagon really with male - female connecting. Yeah, I get it. Everyone seemed to nod but weren't quite sure. Caleb had Alison lay down facing out from the center of the octagon area, Then he lay down facing in with his head between Alison's legs. Figuring it out, Kirsten lay down facing out, her head between Caleb's legs and I could see her greedily eyeing his partial erection, I'm sure anticipating what it would soon be. Next came Rich between Kirsten's legs, then the rest of us until we had our octagon with everyone's face now in front of someone else's crotch.\n\n\"Let's go,\" Caleb said. Last one to finish will suffer some consequence but I don't know what yet. Now, after our little episode in the hot tub, Kirsten and I were at a disadvantage except that she was ready to take on Caleb which was certainly going to be an advantage for her. \"Go,\" Caleb called and everyone began. \n\nSuddenly I realized what I hadn't noticed before with my watching Kirsten and Caleb but the lips and mouth that were making me tingle all over were none other than Rhonda's. And, of course, I was enjoying caressing those velvety smooth legs of Libby as I worked on the little nub of her clit. This was kind of a super-69 experience and the sounds were amazing with slurping, moans, groan and grunts coming from all sides. It was difficult to keep my mind centered as it kept drifting from Libby to Rhonda and back again. But, I was working well with Libby, tonguing and sucking and I could feel her tensing and then her hips were bucking into my face as her groaning told everyone that she was the first to orgasm. I kept licking until she clamped her legs together on my head letting me know she'd had enough which, of course, allowed me to concentrate on that feeling I was getting between my legs. Actually, the feeling started there but rippled all over my body. I could look down and see the top of Rhonda's blond head bobbing up and down and quickly I knew that I wasn't going to last long. As my muscles began to tense I heard what sounded like Alison squealing and groaning as Caleb had evidently done a good job with her. Then, as if by magic, as I looked, Rhonda began to twitch and moan a she continued to work on me but her extra jerking was more than I could handle and I mumbled, \"cumming\" in her direction and she pulled her head back in time to take a load of sticky cum all over her face. In just a few seconds I could hear those same sounds coming from Kirsten followed by Caleb and then, quickly, everyone had climaxed and were now just laying there panting.",
        "Caleb got up slowly and went into the bathroom, returning with four towels that were tossed to each of the women. I rolled around and sat next to Kirsten who was using the towel to clean the milky liquid from her tits and stomach. \"So, I assume you went as slowly as possible with him.\"\n\nShe grinned. \"No sense hurrying on my last chance with that thing.\" Then she eyed me. \"I believe you probably enjoyed what was happening to you as well.\"\n\n\"Pretty much, yes,\" I replied.\n\nWow, what a week. Tomorrow we were all leaving so we all hugged, shook hands and thought about the many pleasant memories we had with each other to take home and think about in the future And, Kirsten and I knew that we might face having Caleb and Rhonda come visit and how that might go since this week was a once-in-a-lifetime adventure. But, who knows. We'd just have to wait and see."
    ],
    "authorname": "PickFiction",
    "tags": [
        "exhibitionist",
        "sharing",
        "voyeur",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/we-needed-a-vacation-ch-04"
}