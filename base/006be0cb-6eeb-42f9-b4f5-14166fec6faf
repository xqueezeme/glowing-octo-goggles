{
    "title": "Something In Her Eyes Ch. 02",
    "pages": [
        "This is the second chapter in a series. To understand the characters and events presented here, please find Something In Her Eyes Ch. 1 for the full back story. Once again, this story is dedicated to my inspiration and my love. Happy New Year my baby. \n\n-------- (_*_) --------\n\nGlen ran his fingers through Jordan's hair and grabbed a hand full of it, holding her head back while he pounded her from behind. The lewd sound of his hips crashing wetly against hers filled the room, each of his thrusts punctuated with a virile grunt. His other hand had a firm grip on her waist, pulling her back to meet his merciless thrusts. All of her inhibitions were gone, and she brazenly begged Glen to make her his slut and use her for his pleasure. He slapped her on her ass playfully but hard enough to sting momentarily, making her yelp. \n\nGlen let go of her waist and brought his thumb to his mouth to get it wet. Then, still pulling Jordan's hair with his other hand, he started rubbing it around her anus, applying pressure intermittently. The added stimulation caused Jordan to moan louder. She used her arms to push her pelvis back forcefully into his thrusts, trying desperately to get as much of him into her as possible. Soon her ass submitted to his demand for entry and his thumb slid into her, making Jordan feel wonderfully full and slutty. He began finger fucking her ass, timing it such that his thumb stabbed into her as his cock withdrew, and his cock slammed into her as his thumb withdrew. Jordan was in heaven. \n\nShe was close to cuming but couldn't quite get there because her fianc\u00e9, lying on the bed next to them while they rutted against each other, kept asking her what she was doing. She tried to answer him but the words were lost in her groans and in the obscenities passed back and forth between her and Glen. Then her paralegal assistant walked into the bedroom and asked Jordan to hurry up and make a decision about whether she wanted blinds, shades or curtains to decorate the office. She needed to get the order in right away if they were going to deliver in time for the wedding. Jordan yelled her frustration at all of them and that's when she awoke. \n\nShe looked around for a minute before finally remembering she was at home. She was sweating and panting, and could feel her heart racing. Her sweat was so heavy that the sheets were damp beneath her. Her fianc\u00e9, who would usually be snoring soundly beside her, had also been awakened by her tossing and turning. \n\n\"What's wrong?\" he asked her quietly as heard her jolt out of her sleep. \n\nJordan thought about her reply for a minute. \"I just can't sleep,\" she said, deciding upon trying to avoid lying by telling a non-descript truth. She glanced at the glowing red lights of the alarm clock next to the bed and saw that it was just three hours after midnight. If tonight was like the five previous ones, she would toss and turn for the rest of the evening, only to finally fall asleep just minutes before her alarm went off. \n\n\"Why?\" he asked patiently. \n\n\"I'm just stressed,\" Jordan said finally. Dreams like the one she just had were haunting her sleep and had been doing so for a week now. The guilt and frustration was getting to her. She was irritable and found it hard to concentrate while at work. \n\nShe could not stop thinking about Glen and the sex they had in her office the previous week. It was some of the hottest sex of her life, and held the promise of being hotter still. The only problem was that she was engaged to be married, to someone other than Glen, a man who treated her well and loved her dearly; who was now asking her what was wrong. Her body craved Glen's touch but her mind was conflicted and wracked with guilt. She still loved her fianc\u00e9, she just happened to have fallen in love with someone else at the same time. There was no good resolution for this situation. \n\nHer fianc\u00e9 reached for her to spoon, deciding not to press her and instead just cuddle. It made Jordan feel even worse. \n\n\"I'll tell you about it when I sort it all out,\" she said eventually. \"Please try not to worry.\" He took her at her word and eventually fell back asleep. Jordan remained awake. \n\nAfter tossing and turning and thinking about it for hours, Jordan climbed out of bed a little after 8 AM, after her fianc\u00e9 had left for work. She called Glen on his cell. \n\n\"I don't think a meeting in person today would be such a good idea,\" she explained after they exchanged hellos. \n\n\"I know how you feel,\" he responded, \"I feel bad, too. I don't regret it, though.\"\n\n\"No, neither do I, but I'm not sure that we should do it again. I want to see you, actually, but I don't think we could control things right now, and I need to stay in control.\" \n\n\"Is this going to present a problem for us working together?\" Glen asked, worried.\n\n\"Honestly, I don't know. If it does, I will recuse myself from the case and recommend another attorney for you.\" Glen had sought Jordan's services because she was the best labor attorney in the region. He ran an educational and rehabilitation organization for people with mental health issues, mostly ex-offenders with a history of drug abuse. Once his clients had cleaned and sobered up, gone to school and learned a skilled trade, most employers continued to discriminate against them because of their record. Glen hired Jordan's services to challenge these practices in court. Jordan visited Glen's program and found it a worthy cause. They had been working together for almost two months. An immediate bond and attraction had formed between them. \n\n\"Now hold on, we are both adults and we're professionals,\" Glen interjected. \"I want you on this case because you are the best. If we can't work together I will fade into the background. Besides, it is my clients on whose behalf you are working, not mine.\"\n\n\"Fair enough,\" Jordan said, \"but as director of the program, you have critical information we need.\" She paused for a moment to think. \"How about for the time being we have conference calls and meet over the phone? I think that will give me time to sort out my emotions and allow me the distance to remain professional and serve you best.\" \n\nGlen thought about exactly how he really wanted her to serve him. The mental image he conjured made his cock jump in his pants. 'Stop it and get a hold of yourself,' he thought. Then he said to Jordan, \"it sounds like a good plan. Shall I call back at our regular meeting time?\"\n\n\"I think I need a little while longer to get ready this morning,\" Jordan explained, feeling the exhaustion of another restless night. \"Let's say 11 instead of 10, does that work for you?\"\n\n\"Perfect, I'll talk to you soon...\" Glen caught himself before a term of endearment came out, shocked at how easily one was ready to come forth when he thought of her. He had not stopped thinking of her the entire week and he was having his own crisis of sort at home. Thoughts of Jordan had him in a perpetual state of arousal. It did not matter what time of day it was or what he was doing, if he thought of her, he got hard. And he thought of her often, throughout most of his waking hours, and in his dreams as well. It did not matter where he was or who he was with. She had definitely gotten under his skin. Neither could sex or masturbation curb his constant lust for her. He was masturbating often and still having sex with his live-in girlfriend though when he did he was dreaming that it was Jordan he was fucking. He had to bite his lip to keep from screaming out Jordan's name when he came with her, the way he did when he masturbated alone. He was a mess, plain and simple. \n\n-------- (_*_) --------\n\nWhen Glen and Jordan talked later that afternoon, it was awkward. There was none of their usual banter, flirtation, dirty jokes or sexual innuendos. Both of them were struggling not to say what was really on their minds, trying desperately to keep the fire broiling just beneath the surface contained. Their conversation lasted only about a half hour, and when they said goodbye they both felt empty afterwards. \n\n\"That was weird,\" Glen texted to her cell phone immediately after they hung up. He couldn't just leave it at that. \n\n\"I know, I felt it, too,\" Jordan typed. \"I haven't been sleeping well.\"\n\n\"Me either, been thinking of you,\" Glen replied. \n\nJordan decided not to engage. \"Let's give it another week and see if we can calm down. I'll fax you the info when I get it. But let's talk next week.\"\n\n\"Ok,\" Glen typed, feeling a bit disappointed, \"try and get some rest, I'll talk to you later.\"\n\n--------(_*_)--------\n\nTheir phone meeting the following week was indeed much better -- at first. They had covered a good amount of ground for the case and managed to keep things professional. After they had attended to all business matters, they just began to chat and get to know each other better. They laughed to find out that they both didn't like sushi and hated the taste of beer. There were a dozen little quirks like that they shared in common. They talked about their childhoods, and in doing so what they eventually discovered about each other rocked both of them to their core. \n\nThey both suffered tragedies when they were 13 and 12, respectively. Their fathers were both killed while serving in the military, forcing them to grow up faster and assume more responsibility at home helping their mothers. They were a year apart in age, so this meant that they lost their fathers in the same year. Talking about it further, they learned that their fathers died in the same week of the same year, serving in the same branch of the military. They froze. \n\n\"Are any of your father's siblings still alive who may know and remember some more details about his death?\" Glen asked.\n\n\"Yes, my uncle, his younger brother, who looked up to him and remembers every detail,\" Jordan replied. \n\n\"Put me on hold and call him,\" Glen said, pulling out his cell phone and calling his aunt. She was his father's closest relative and life-long best friend. She would know the details he had never thought to ask in all these years. \n\n\"Ok,\" said Jordan, putting her office phone down and pulling out her cell as well. \n\nWhen they were done and rejoined each other 15 minutes later, they sat in silence after sharing what they had learned. Their fathers were part of the same unit within the same infantry company of the National Guard. They died as part of the same helicopter crash that killed 15 soldiers in all during a routine weekend training mission. They most certainly knew each other and likely were friends. They died together. \n\nJordan and Glen sat in disbelief for a moment at the connection they shared. Then they discussed how it had affected them. Jordan was her father's only daughter and the apple of his eye. Glen talked about the pain of not having said goodbye. They just sat still and quiet as they took it in. In their silence they contemplated the cosmic fate that brought them together. \n\n\"You know,\" Glen remarked, finally breaking the silence, \"this is the longest we've talked on the phone since I left your office that day...\"\n\n\"That day in the rain,\" Jordan interjected, knowing exactly what he was thinking. They had been talking for over three hours. Hearing his deep voice had her constantly fighting those thoughts and pushing them out of her head while they chatted. She had been pretty successful keeping her thoughts straight up until now. Finishing their work for the day and talking about all the things they had in common seemed to give her mind license wander. \n\n\"Mmmm hmm,\" Glen confirmed with growing lust in his voice. \n\n\"Yes, that was a very wet day indeed. I had quite the puddle to clean up afterward,\" Jordan teased. \n\n\"And you were so bad, so very bad.\" She could hear his breathing becoming heavier. \n\n\"Is that a complaint?\" Jordan asked, feigning insult.\n\n\"Oh no, you are very good at being naughty, some might even call you wicked. I don't think Santa would be mad at you at all if he got you across his knee.\"\n\n\"So if you were Santa I could still get presents for being so naughty?\" Jordan was really being bad now, flirting shamelessly. \n\n\"Oh, I'd have a gift for you, alright. But I also just may spank you for being so wicked.\"\n\n\"Hey, my butt is delicate. You need to be good to her!\" Jordan pouted. \n\n\"You know exactly how good I'm going to be to your ass,\" Glen said, his voice going an octave lower. It was a statement of purely sinful intentions. Jordan blushed. \n\n\"Mmmm, tell me,\" she said in a sultry voice, starting to give over to her desires. \n\n\"You already got a taste of what I'm going to do to you,\" Glen replied. \n\n\"A taste, huh?\" Jordan said, smacking her lips. \"Interesting choice of words.\" \n\n\"And you were absolutely delicious, Jordan. So delicious!\" Glen admitted, shocked at his own candor. \n\n\"So you like the way I taste, huh?\" Jordan asked, feeling incredibly sexy at his admission. \n\n\"Like is not the word! It was almost as if you knew what I was going to do to you. I have to admire a woman who keeps herself ready like that. Unless you stay ready for your fianc\u00e9?\" Glen asked, immediately regretting it. If she did, he didn't want to know. He didn't want that mental image in his head. \n\n\"Actually no,\" Jordan admitted. \"That's not really his... thing, if you will. To be honest, I was in a particularly raunchy mood that morning, and I got ready because I had a play date planned with my toys that you found. But what's your excuse?\"\n\n\"My excuse for what?\" Glen asked. \n\nJordan wondered if she could actually say what she was thinking. She had never come close to admitting such intimate details of her deepest and darkest desires to anyone; had never put voice to them. 'What the hell,' she thought finally. She had already given Glen a demonstration and truthfully, he made her feel safe in exposing her dark side to him. No man had ever provided her such freedom. \n\n\"Your ass was also quite delectable, as I recall,\" she said finally. Yes, they were having a conversation about preparing one's ass for a lover's tongue. She was wet. Being slutty for him made her gush, there was just no denying it. \"Is it your practice to keep yourself ready?\"\n\n\"Well, since we are being honest,\" Glen said as his dick swelled at her admission, \"I have to admit that I started preparing myself on Mondays for... whatever might happen. I was not planning on what happened with us, but truthfully, my preparation was my subconscious betraying the lie I told myself about keeping our relationship strictly professional and friendly. But something in your eyes told me that we were kindred spirits in our deepest desires.\"\n\n\"It seems we are,\" Jordan confirmed seriously. There was another pregnant pause in their conversation. \n\n\"So,\" Glen interjected, changing the subject slightly, \"where are your toys now?\" \n\n\"They're here, in my desk, still where you found them,\" Jordan said, nonchalantly. \n\n\"You know, most people keep their sex toys in their bedrooms, in a night table or underwear drawer or something. Why are yours in your desk in your office? I've been dying to know, actually. Don't tell me you keep toys in every room in case of emergency, like a flashlight.\"\n\nJordan laughed while she thought about whether to answer truthfully. \"Let's just say my inspiration has been work related, as of late,\" she admitted coyly. \n\n\"Who ever thought work could be so good,\" Glen replied. His erection was painful in its angry intensity. However, the thought of jacking off in his office was not appealing. The walls were thin and there were too many people around. Plus, he had nothing to use for lubrication and nothing handy with which to clean up. \n\nThere was another long pause in the conversation as both of them contemplated whether to take their flirtation any further. They were on the verge of being at the point of no return but not quite there yet. His cock was hard and the moisture of excitement pooled between Jordan's thighs, but they could stop now and be ok. The next words would probably decide what they would be doing for the next half hour. Glen checked his watch. Most of his office was still out to lunch. 'To hell with trying to be good,' he thought.\n\n\"So tell me about this new inspiration,\" Glen asked. \n\nJordan smiled broadly, liking the pull she had on him, even in her conflicted state of mind. \"That's a kind of personal question, don't you think?\" she teased. \n\n\"It's only fair,\" Glen quipped, \"seeing as I've been rubbing myself raw for almost two months now, thinking of you.\"\n\nJordan groaned then opened her drawer to take out her toys. She placed a foot up on her desk, opening herself for her touch. \"Tsk tsk tsk, shame to waste all that,\" she said, smacking her lips so he could hear. It was Glen's turn to groan. \n\n\"That's right, it seems we both have an insatiable appetite for each other.\" Heat was emanating from his tumid cock, pitching a circus-sized tent in his pants. Glen pressed down on his raging erection, trying to calm it. \n\n\"I told myself I wouldn't do this,\" she said, easing her panties to the side and sliding a finger in her wetness. \n\n\"We are only trying not to have sex,\" Glen said, gripping himself and squeezing. \"Just talking on the phone isn't being too bad.\" \n\n\"Phone sex can be just as bad,\" she responded. \"Its gateway behavior, you should know about that working with addicts.\"\n\n\"Gateway to what, baby?\" he asked, playing dumb. \n\n\"To this,\" Jordan said, turning on her large vibrator and bringing it near the mouthpiece of the phone so he could hear it. \"I get chills remembering how you used my toy on me, how you played with me, shoved it in my hole, and how you drank from me as I... as I... as I came gushing in your mouth. Yeeeesssssssss!\" Jordan cried, pushing the vibe deep into her pussy. \n\n\"Aw fuck! Hold on one sec.\" Glen tore out of his office on a mission. He figured his assistant must have some lotion buried in one of her desk drawers. He rummaged through three before hitting pay dirt. He squirted a generous amount in his hand and grabbed a few tissues then went back in his office and shut the door, locking it. \n\n\"Sorry about that,\" Glen said, sounding breathless after running back. \"Shit Jordan, if we keep this up you're going to make me store a bottle of lube in my office.\" \n\nJordan laughed wickedly, slowly shoving the dildo in and out of her dripping pussy, building her excitement. \"Is that what you went to go do, find something to wet yourself?\" she teased. \n\n\"Yes,\" Glen said, struggling to undo his belt and unbutton his pants with one hand. \"I found some lotion in my assistant's desk, luckily.\"\n\n\"Too bad, I've got plenty of the natural stuff over here. In fact, I've got so much of it I could probably capture it and send you some in a bottle.\" Both of Jordan's legs were up on the desk now and her skirt was around her waist. Her panties were on the floor beside her chair. She had leaned all the way back in her chair and her hand was pushing the vibrator in and out of her tight hole with increasing speed. She could see her lips hugging its girth with every withdrawal. It was positively pornographic. \n\n\"Hold on one sec, baby, I've got a little surprise for you,\" Jordan said, putting down her office phone and picking up her cell phone. She used it's camera to take a picture of the vibrator wet with her juices stuffed in her pussy. She almost came at how naughty she was being. Guarding her professional career and privacy, she NEVER sent any pictures of herself out over the internet, let alone pornographic ones. But this one was anonymous, there was nothing in it to identify that it was her steamy wet cunt being captured. She scrolled through her contacts to find Glen's email address then she hit send. She picked her office phone back up. \n\n\"Check your email,\" she said breathlessly, near orgasm. \n\nGlen turned to his computer and pulled up her email. \"OH FUCK!\" he said, stroking himself with fervor. He zoomed in on the pornographic picture she sent him. He could see her waxed pussy in explicit detail, could see its glistening wetness. The blood surged into his shaft. \"God, I wish that was me thrusting inside of you instead of that toy.\"",
        "\"So do I,\" Jordan said, panting. \"But we can't... uhhhhhhhnnnn... people will get hurt.\"\n\n\"I can see how wet you are. I remember precisely how sweet you taste, how you rode my face when I caught you from falling off your ladder. You want this, you need this.\"\n\n\"Need what, my baby... Oh fuck... Tell me,\" Jordan said. Her hand was a blur now, shoving the dildo into her with determined speed. \n\n\"You need me to fuck you, to fuck you dirty and do all those nasty things to you that satisfy that dark animal instinct in your soul.\" Glen was getting close, too. \"We connect because we both have this need, and neither of us can avoid it.\"\n\n\"You know me so well,\" Jordan admitted. Her fianc\u00e9 didn't even know this side of her, the part of her personality that had been a filthy slut for Glen when they fucked in her office two weeks ago. \"God, I want you deep in me. Thrusting. Pounding. Staring into my eyes. Taking me...\"\n\n\"Owning your pussy,\" Glen continued, \"making it mine, using you selfishly for my own nasty pleasure to satisfy my most filthy desires...\"\n\n\"Like your own... Oh God!... dirty little whore... Oh fuck!!!\" Jordan was cuming, violently. Her orgasm crashed into her, wracking her body. Her words degenerated into a jumbled mess of syllables and grunts interlaced with an occasional obscenity. \n\nIt was too much for Glen. Hearing her moans wrenched the cum right out of him, the sound of her voice like an invisible hand that reached into him and pulled the sauce from his balls in a violent torrent. His orgasm was so intense that he could not concentrate hard enough to make sure he caught the entire sticky mess he made in the wad of tissues he had. When he was finally able to regain his composure and open his eyes he saw that cum was everywhere -- on his clothes and on his desk, a few drops had made it onto some files and on his computer keyboard. \n\n\"God, what a mess!\" he exclaimed, breaking the sound of their heavy breathing. \n\n\"Did I do that to you, baby?\" Jordan teased. \n\n\"You most certainly did,\" Glen admitted easily. \"I shot everywhere.\"\n\nJordan thought about how she wanted his cum all over her, how she wanted him to blast inside both of her holes, and how she wanted to swallow some more of it. The thought sent fresh spasms through her pussy and she shivered. He brought out the slut in her more than any other man. It scared her to death, but he made her feel safe in revealing that side of her personality, and she loved that about him. Finally she said, \"I've got a small river running over here. I don't think I'll be able to get the stain out of this chair, let alone the smell.\"\n\n\"Mmmmmm,\" Glen said. \"I had to shower before I went home the last time we saw each other, and I hated it. I loved smelling you on my lips and on my face and on my fingers as I drove away. I wanted to keep smelling you as long as possible.\" \n\n\"I know what you mean,\" said Jordan, \"I hated washing your scent off of me as well. I was yours as long as I had your mark on me, and washing you off was like breaking the spell.\"\n\n\"Speaking of which,\" Glen said with a little sadness in his voice, \"I should let you go clean up, and I really need to as well before everyone comes back from lunch and sees the mess I've made of myself and my desk.\" \n\nJordan could not help but laugh. It was a bittersweet one: she was sad that they could not indulge in the desire they had for each other, but she damn sure loved her interactions with him. \"Ok, go clean yourself. Until next week then. Bye my baby.\" \n\nAfter Glen hung up he zipped up his pants then dashed quickly to the bathroom. He tried to clean himself as best he could, but cum stains on a black shirt would not come out with just water. He would have to rush home and change, scrub the stains out before they set in to make sure his girlfriend did not see any evidence of his dalliances. The thought of her brought a heavy feeling to his heart. He sat down on the commode with his elbows on his knees and cradled his head in his palms, reflecting on what had just happened. He thought about the profound connectedness he felt with Jordan at learning the dual fate of their fathers. He also thought about the fact that he just had a stronger orgasm masturbating with Jordan on the phone than he ever had in person with his girlfriend in their 3 years together. His reflection on all these issues resulted in the first crack in his resolve to not let developments with Jordan alter the commitment he had to his current relationship. \n\n--------- (_*_) --------\n\nThe following week their conversation went much the same way. For the first 90 minutes they talked professionally about their legal challenge. Jordan was ready to file papers launching the first lawsuit later that week. For this first case they selected a company against whom they had the best chance of winning, hoping to establish a precedent for the court. Even still it was a long shot. If they won that case, however, the others -- where the evidence was not so clear cut -- would be easier and the companies would be more likely to settle. But it wasn't about the money, they both agreed. It was about getting these companies to change their policies and give people a chance to earn an honest living. Glen was truly touched that she believed in this cause enough to do so much work without the promise of a big payday. It was one of the main reasons why he could not simply dismiss what he felt for her as just lust. He really did admire her personal and professional commitment to justice and to helping people. \n\nLike eager little kids just home from school doing homework, they greeted the completion of their work for the day as an opportunity to tear into playtime. Jordan's panties were quickly in a heap next to her on the floor and Glen had completely taken his pants and boxers off, in order to avoid making a mess of his clothes again. He also bought for his office a small bottle of lube he kept locked in a desk drawer, along with a towel. Their excitement was so intense that they were both panting through a fierce orgasm after no more than ten minutes. \n\n\"You know, you still owe me a lunch date,\" Glen remembered as he wiped himself off. \"It's safe, because we couldn't do anything in the middle of a crowded restaurant,\" he lied to both Jordan and himself. \"So meet me for lunch next week.\"\n\nJordan thought about if for a minute. Deep down, she knew better, and so did Glen, but she also lied to herself, burning to see him so badly, telling herself that indeed, they could be next to each other and it would be safe. Reluctantly but with butterflies in her stomach, she agreed. \n\n--------- (_*_) --------\n\nThe following week they met for their rain check lunch date, at a seafood place located centrally in the heart of town. The restaurant was crowded, offering them no privacy which was just perfect, Jordan thought. There was no way to get into trouble there. They were seated at a small table shrouded in a table cloth, right in the center of many other diners. They sat cattycorner from each other instead of directly across the table in order to hear each other better. \n\nJordan was dressed in a charcoal business skirt and jacket that perfectly accentuated her smooth sun-kissed skin. Glen saw her and wanted to taste every inch of her. He had on a midnight blue suit, with faint pinstripes that lined his figure. Jordan flashed on the memory of what he looked like outside of his clothes, and quickly pushed it out of her mind. \n\nInitially their lunch proceeded without incident. They both wanted to eat light, so they each ordered a salad and decided to share an entre of grilled salmon topped with cilantro lime butter and mango salsa. It was delicious. As they ate they just enjoyed each other's company and conversation. Their conversation turned very serious as they talked about the economic crises facing the nation and Glen angrily expressed his frustration at the hundreds of billions of taxpayer dollars needed to bail out all the \"crooks, thieves and swindlers who got us into this mess\" in order to save peoples' jobs. Jordan smiled internally. She shared his anger but she loved seeing him get fired up. She eased her left foot out of her heel and reached out with it to caress his calf. \n\nJordan's foot lingered and Glen welcomed the contact. He didn't let on in his demeanor, though, as they talked. Jordan appreciated that and it gave her an extra thrill, secretly being naughty while presenting a perfectly polished image of two colleagues having a business lunch. His discretion allowed her to feel safe with the minimal contact, made her want to risk pushing things a little further. \n\n\"You know,\" Jordan said, changing the subject, \"you have not told me any of your jokes lately. I miss them.\"\n\n\"I was trying to be good,\" Glen responded. \n\n\"You call what we did during our last two phone conversations being good?\" Jordan asked. \n\n\"Well, we were being better,\" Glen conceded, \"better than we were behaving three weeks ago. So are you giving me permission to be naughty with you?\" Glen asked, simultaneously reaching down to grab her foot that was caressing his calf. He placed her leg across his lap and began to give her a well practiced foot massage. \n\nJordan suppressed a groan. \"No, not too bad,\" she countered. \"Try to be good.\" His strong hands drew the tension right out of her with their skilled manipulation of her arch, taking the time rub between each toe. He was being good, alright. Too good. Jordan decadently indulged in his ministrations, and soon kicked off her other heel and offered her other foot for him to perform his magic. What Jordan found most thrilling was that all the while he maintained an above-table demeanor of strict professionalism. His voice lowered a bit and if you could not hear them, you would have no clue that they were teasing each other into a heighted state of arousal. The table cloth obscured the fact that her feet were in his lap. If anyone looked their way, they would have no clue Glen was giving her a massage that was starting to make her wet.\n\n\"I think I may have one you will like,\" Glen said finally, taking his time to settle on a joke to fit the occasion. His hands began to venture up past her ankles, massaging her lower legs as well. Jordan loved his muscular hands on her and the more excited she got, the more she lost her inhibitions. She spread her thighs subtly to give him greater access. As she did, she moved her foot closer to his crotch, feeling his cock stiffening. She started using the ball of her foot to rub his cock through his pants. Her foot was working magic on him, and soon Glen was sporting an erection to match the growing wetness between Jordan's thighs. Feeling Jordan rubbing his hardness only served to make him more excited, and he decided to take a risk and reach further. \n\n\"What do you know about witches?\" he asked, lightly rubbing and running his nails atop the fabric of her skirt guarding the skin of her thighs from his touch. \n\n\"The stereotypical usual,\" she said, \"green, black hats, and warts. Why?\" Wanting to feel her warmth, Glen reached down to the hem of her skirt at her knees and pulled it up. Then his bare hand immediately went to rubbing the inside of her thighs where the heat was palpable. \n\n\"Well, do you know why witches don't wear panties?\" Glen asked, moving his hand further up toward her core. Jordan clamped her thighs shut tight, holding his hand stuck in there in her smooth warmth, unsure if she wanted to let him go any further. It was another of those fate-deciding pauses where the next action would decide just what direction the rest of the afternoon would take. Jordan looked to the mirror across from them to make sure that the table cloth continued to obscure their activities. It did. Her heart was pounding, she knew she was being wicked, but she could not resist opening her thighs to allow him full access. Glen kept his cool, and did not let on to the rush he felt at the change their afternoon just took. \n\n\"I have no clue. Tell me,\" she said finally as she spread her legs for him. \n\nGlen reached her apex and felt the very wet heat coming through the soft cotton crotch of her lacy panties. He looked at her with an urgent intensity and a smoldering stare of desire, breaking his demeanor for the first time that afternoon. He held her eyes with his and let his fingers slide along the wet surface, feeling for the nub of her clit and rubbing it briefly. He found the lacey fabric's edge and pulled it to the side, exposing her hole to the cool air of the restaurant's AC. \"Because it helps them keep a better grip on the broom,\" he said in a barely audible voice, pressing two fingers forcefully up inside her. She was so wet he felt no resistance.\n\nThe combination of laughter and the stab of pleasure gushed from her in a loud burst. She brought her napkin up to her mouth to stifle her outburst and hide the crimson flush that was sweeping up her cheeks. Glen's professional demeanor returned and he brought his left hand up to continue eating his salad while his right hand continued slowly finger fucking her pussy under the table. \n\nJust when Jordan seemed to have resumed her control Glen decided to see if he could raise the stakes even further by giving her a challenge he was almost sure she would not accept. He leaned in close to her and whispered, \"Why don't you go and take these off?\" motioning with his hand to her panties.\n\n\"We shouldn't,\" Jordan said tentatively. Glen found the nub of her clit again and pressed on it. Jordan practically melted in her seat. It was no use resisting, she was weak in his presence. She did not want to admit to as much so easily, though. \"I actually need to go to the Ladies room, I'll think about it,\" she said finally. Jordan slipped her feet back into her heels then excused herself to go to the restroom. She could feel the sodden under garments wet against her skin. While she was gone Glen hailed the waiter and ordered a large bowl of fruit.\n\nWhen Jordan returned Glen wondered if she had actually done it. She sat down and Glen tried to reach for her again under the table but she pushed his hand away. Instead, she discretely pulled her panties out of her purse sitting on her lap and folded the flimsy moist white lace into her napkin. She used the table cloth to obscure her actions so that not even Glen could see. Jordan adjusted her panties so that the damp crotch was folded on the outside of the napkin, blending into the white fabric of the linen. \n\n\"You have a little something on the side of your mouth,\" Jordan said innocently. \"Here, let me get that for you.\" Before Glen could react, Jordan ever so casually brought the napkin with her panties inside and wiped his mouth, rubbing the wet crotch all over his lips and under his nose. Her scent rocked his brain like a jolt of electricity. He knew it instantly and his dick swelled with excitement, hurting him it was so hard. He struggled to keep his cool. An image flashed in his mind of throwing everything on their table to the floor, pushing Jordan up there and fucking her right in front of everybody in the restaurant. He had to close his eyes and grip the table to keep from doing anything rash. Jordan watched him struggle and a wicked smile broke out on her face in triumph. Glen opened his eyes and looked at Jordan with a smoldering stare. Before he could do anything, however, her phone rang. \n\nJordan looked at the caller ID and froze. It was her fianc\u00e9. \"Shit,\" she said out loud. \"I need to take this.\"\n\n\"By all means,\" Glen said, acting cool. Just then the waiter came by with their plate of fruit, containing slices of melons, strawberries, papaya, and grapes. While Jordan talked he plucked a slice of honeydew melon from the plate in front of them then discretely let his hand bearing the fruit disappear under the table. Jordan clamped her legs shut tight, again trapping his hand in her strong thighs and forbidding his entry. She was torn, as her body definitely wanted to spread for him, but not while she was on the phone with her fianc\u00e9. \n\n\"Hi honey,\" she said into her phone, \"what's up?\" Hearing that it was her fianc\u00e9 on the phone only made Glen more determined. He reached down with his other hand to pry her thighs apart. Jordan relented. It was really only a half-hearted defense she was putting up. Truthfully, she wanted it. She almost yelped into the phone when the cold fruit touched her wet lips. Glen hesitated and did not push it inside her right away. The sensation was thrilling. She reached a free hand down and grabbed Glen's forearm, digging her nails in deeply, almost deep enough to draw blood. \n\n\"Be good,\" she mouthed silently to him, looking at Glen with pleading eyes. \n\n\"I plan on it,\" he whispered back, and with that pushed the cold fruit into her steamy tunnel. He pushed it in deep to the first knuckle of his finger, and Jordan worried whether he would be able to get it out easily. Glen was quick, though, and a few rubs on her clit brought forth some spasms of her pussy that pushed the fruit right back out into his palm. Glen brought the fruit to his mouth and smelled it briefly before pushing it slowly between his lips. He savored the sticky fruit in three bites, leaving Jordan hungry for more. He grabbed a piece of papaya and repeated the process, all while Jordan continued to talk on the phone. For his part, Glen looked totally innocent as he did all this. He pulled a stack of papers from his briefcase and pretended to be looking them over while patiently waiting for Jordan to finish her conversation, all while leisurely enjoying a plate of luscious fruit. Jordan was finding it hard to concentrate, and it did not help that her fianc\u00e9 was talking to her about planning their wedding. Her mind was a mess with the slew of emotions swirling in her head. \n\nGlen decided to be naughty and raise the stakes again. For the next piece of fruit he chose a strawberry. He dipped it into her honey and then fed it to her lips instead of his own. Jordan gobbled it hungrily, letting her tongue swipe at his fingers ever so subtly before he withdrew them. She felt horribly guilty, but guilt over the situation only fed her excitement over how bad she was being. She could not help but be turned on by the feeling of being so wickedly yet discretely naughty, in public, on the phone with her fianc\u00e9 no less! Her pulse was racing and her pussy was throbbing. \n\n\"Mmmmm,\" she said, swallowing the berry after savoring it on her tongue. Then after a pause, \"Oh nothing, just enjoying a little fruit fondue for lunch with a client.\"\n\nGlen chuckled to himself, loving her quick wit. And so it continued -- Glen shoved piece after piece of fruit into her dripping pussy, letting them marinade in her and soak up her flavor like in a pitcher of sangria, then massaged her clit so her cunt would squeeze the fruit back out. Jordan was near panting and hysterical with lust from his teasing, but could not seem to get off the phone with her fianc\u00e9 fast enough. She did not even want a big wedding with so much fuss, but their families had insisted, and Jordan went along to please everybody. But it was only 3 months away, and she had been slacking on taking care of her end of the planning. She needed to at least give her fianc\u00e9 the impression that she was taking it seriously, so she stayed with the call. Glen meanwhile continued to feed them both fruit sticky with her nectar, until only the grapes remained. \n\nThe waiter stopped by to refill their waters and asked if they wanted some more fruit. Instead of curtly dismissing him, Glen carried on a conversation with him as he continued to play with her pussy under the table. Jordan was horrified and started turning red. Two could play at this game, though, so she coolly let her free hand travel down into Glen's lap and grabbed onto the raging hard-on she found there. Rubbing and squeezing his head quickly had Glen unable to hold up his end of the conversation and he immediately dismissed the waiter. Jordan elbowed him in his gut, but continued playing with his cock. She could feel its heat searing through his pants. ",
        "\"What was that honey?\" Jordan had lost track of what was going on in her own conversation as well. \"Oh, yeah I've set up the final appointment with the caterer next week; they said they could meet after 5 when you get off work. Samantha's going with me to pick up my dress the next day.\" 'I'm sorry,' she mouthed silently to Glen. \n\nGlen said nothing, but only reached for the bunch of grapes left in their fruit bowl. He plucked them off one by one and fed them to her greedy hole, never taking any out to eat afterwards. Jordan watched the grapes disappear from the vine until she was full, wonderfully full. She couldn't take any more. \n\n\"Sweetie, I'm being rude to my client and I really need to go, can we handle this later when I get home?\" Jordan begged. Nodding, she said, \"Okay, I love you, too. Bye.\" Glen motioned to the waiter and paid the bill. He took her panties out of her napkin and stuffed them in his pocket. \n\nGlen grabbed her hand and almost pulled her from the restaurant. They were both starving now from a different kind of hunger. Plus, hearing her say \"I love you\" and make plans to marry another man stirred something dark deep within him. His animal flared, and he burned with the need to take her roughly and make her his. He knew the score, knew that every moment they had together was stolen from someone else, but it didn't matter. It was strange, funny maybe, how she could stir up such conflicting emotions in him. On the one hand she brought forth within him the most profound desire to nurture her with the sweetest tenderness; to kiss her, hold her, love her, lick her, and protect her from any harm. \n\nOn the other hand, he wanted to hurt her with the force and savagery of his fucking, use her body to satisfy his most filthy desires, soil her, and leave her body sore, worn out, and chafed. He wanted to make it such that she'd be in no shape to give herself to another man, mentally, emotionally or physically; leave her so that for the next week every time she sat down or moved her legs she'd be reminded of him by the tenderness of the muscles in her groin. And this he wanted to do, not out of disrespect, not to shame her or strip her of her dignity, but to free them each to lose themselves in the hedonistic pursuit of life's ultimate pleasure. So there was no conflict in his heart about wanting to do these things to her. They were both two different sides of the deep feelings he had developed for her. \n\nThey tore out of the restaurant and headed for a nearby motel across the street. Jordan tried her best to hold onto the pieces of fruit buried inside her, and could feel them squishing together as they walked. They both would have preferred a nicer hotel, but their need was too urgent. The motel rented rooms by the hour, Glen paid for four. Secretly, Jordan was thrilled at the prospect of doing something so completely and utterly slutty, imagining all the prostitution that must have taken place in the motel over the years. She also knew that on this occasion, he was going to fuck her like the dirtiest of whores. Her pussy creamed with anticipation. \n\n---------(_*_)----------\n\nNot a word passed between them as they rode up the elevator. They hurried to their room number and no sooner were they in the door when Glen pushed her face-first against the wall. He roughly unzipped her skirt and yanked it off of her then spun her around. He knelt before her and placed both of her thighs over his shoulders, supporting her weight. He latched his mouth around the lips of her sticky cunt and began sucking out the fruit inside. \n\nJordan grabbed the back of Glen's head and rode his face for all she was worth. His eyes never tore from hers as he savored every mouthful of squished grapes as he lapped them out of her sweet pussy. She grunted and he moaned with every swallow. While eating her Glen reached down to unfasten his pants and free his achingly hard dick. His rigid shaft sprang forth stiffly, its head wet with pre-cum from all the teasing in the restaurant. It was sore with need and he couldn't hold off for too long. \n\nWhen he had the last mouthful of grapes he stood up abruptly and impaled her on his shaft. His strong hands held her ass in an iron grip and her legs locked around his waist. Jordan looked down to see the lewd display of her dripping pussy wrapped snugly around his thick angry cock. She squeezed him with her cunt, welcoming him inside her. He flexed his turgid dick and she felt his head flare in her depths as it filled with blood. She squeezed him again and he flared again. Her juices eased out of her, wetting his pubic hair as it dripped down onto his balls. She looked up and met his eyes. \n\nHis mouth consumed her as Glen started fucking her in rough, measured thrusts. He had not swallowed the last mouthful of the sweet fruit he ate out of her, and Jordan fed from his mouth ravenously. Their tongues slid along each other smoothly as the urgency of their fucking increased, slamming her against the wall. The three weeks they spent apart had been torture, the teasing merciless, and the need was exploding out of them in a searing heat. Jordan groaned out his name. \n\nThe occupants of the room next to theirs banged on the wall to let them know they were making too much noise and needed to move to a different part of the room. Glen carried her to the bed, never missing a stroke. He laid her on her back and pushed her legs up further to drape over his shoulders and continued to pound into her. The look in his eyes was fierce with the force he was putting into fucking her. The room was filled with the sound of their grunts and groans and the squishy slapping of their crotches slamming into each other. The pungent smell of raw sex hung heavy in the air. The bed springs squealed for help underneath them. Jordan dug her nails into his shoulders as her head rolled back in bliss. \n\n\"Yeessssss, fuck me,\" she moaned. \"Fuck me! Fuck me hard!\" Jordan continued to squeeze her pussy in sync with the wonderful rhythm of abuse her tight hole was taking. She clenched on every down stroke and released when he withdrew, reaching down to grab his ass to pull him into her harder, so greedy was her cunt with need. A light film of sweat broke out over them both as they reached a terminal heat. \n\nIt started in her toes. They curled as it left her feet and sped through the rest of her, wracking her body in waves of uncontrollable spasms. With all he felt for her and seeing her trembling beneath him like that, Glen couldn't take it. He had planned to fuck her through her first orgasm but her body had other plans for him. Her heat, her wetness and her perfectly-timed clenches yanked the cum out of him violently and he yelled her name as his back arched through his release. He fucked her through his orgasm, unable to stop, pounding each gushing spurt of his milky thickness deep into her womb. Her body drank him shamelessly, sucking him with her pussy, hungry for his seed. Finally he came to rest, still throbbing inside her, and still hard as a rock. \n\n\"Let me,\" Jordan said, pushing him back until he was resting on his knees so she could crawl out from under him, \"taste you.\" She turned around and laid on her stomach before him, reaching for his shaft but Glen stopped her. She looked up at him. He caressed her face gently with one hand, rubbing his thumb lightly over her lips. She licked it then sucked it into her mouth, mimicking what she wanted to do to him on his finger. His cock twitched, itching to get into her mouth. She wondered how long he would deny her, deny his self. \n\nGlen pulled his thumb from her lips with a wet smack. Then he lifted her chin to look up at him. Jordan saw the dark fire in his eyes and her heart skipped a beat. He held her jaw in his strong hand, holding her firmly in place. With his other hand, he took his wet dick and rubbed his dripping head all over her face, marking her with their combined juices. Jordan closed her eyes and moaned, feeling ever so dirty. \n\n\"God, you make me such a slut,\" she whispered, barely loud enough for Glen to hear, like she was telling a deep secret she could not yet admit freely. \n\n\"It's because you make me crazy,\" he said through clenched teeth. \"You make me want to do real bad things with you,\" he continued in a deep growl. \"Now open your mouth.\"\n\nJordan did as she was instructed and Glen placed his head on her tongue. She licked the underside while waiting for permission to devour him like she wanted. Glen let go if his dick and brought his right hand around to the back of her head, still holding her chin in his left. \"Look at me, baby,\" he said in a tender tone that did not match his actions. She opened her eyes. Their stares locked and they held still like that for a second, a whole book of emotions expressed between them without saying a word. Then Glen began to methodically fuck her face. His thrusts into her were relentless, using her mouth like a whore's cunt. Jordan tasted their combined juices as she felt his ridge and swollen veins sliding in and out of her mouth. She buried a hand in her pussy and rubbed her clit as he took her for his pleasure. \n\nSaliva dripped from the corners of her mouth as he forced his way again and again into her throat. It was a wet and sloppy blowjob as he fucked her mouth like he owned it. Jordan wanted to take ownership of him as well, so she took her sticky fingers out of her pussy and brought her hand up to cup his balls. Reaching back a little further she began to massage his anus with her index finger. Jordan knew she was having the desired effect as he began to fuck her face harder. She increased the pressure until his sphincter gave way letting her finger sink in to the second knuckle. \n\nGlen had never let a woman play with him back there to do anything more than licking. Penetration of any sort had always been out of the question. It angered him, not because she did it, but because he didn't stop her. So he fucked her throat harder. But that only served to make her begin fingering his ass in earnest. He felt vulnerable way past his comfort level, but he had to admit that he did not feel threatened. She did not make him feel like his manhood was at stake. Instead, he felt manlier because he knew she was doing it for him, to be the best for him, to give him ultimate pleasure and the best blowjob of his life. As she faithfully swirled her tongue around his head with every withdrawal, it most certainly was. \n\nThey established a good rhythm together but Glen had to stop when he felt the stirrings of another orgasm. The added prostate stimulation would send him over if he didn't change things up. He had other plans that could not be put off. He withdrew from her mouth reluctantly with a wet 'plop.' They were both breathing heavily. Jordan's lips were red and swollen and she had a wild look in her eyes. She sucked on the finger she had just pulled from being buried in his ass, coyly looking up at him with innocent eyes. Seeing her do that brought Glen's lustful heat to a fever pitch. He bent to kiss her roughly, savoring their combined flavor on her lips and tongue. It was time. \n\nGlen grabbed a couple of pillows and asked Jordan to go up on her knees and elbows so he could put them underneath her. Then with her ass up in the air and her face down on the bed, he knelt behind her. \n\n\"Spread for me, baby,\" he instructed. Jordan reached back with both hands and did so eagerly. She had been in need of this from him from the first moment he hinted and joked that anal play might be something he was into. It was everything she missed at home. \n\nGlen shoved two fingers in her pussy and began feasting on her ass. He couldn't hold back, there was no time for subtle buildup. He had been in desperate need of this from her as well. As Jordan began to relax his tongue gradually made its way inside her hole. Jordan broke out into a full-body blush at the nastiness of the act. If he did this to her every day for the rest of her life it would never get old, she though. She concentrated on relaxing more as he reamed and tongue-fucked her ass thoroughly. \n\nGlen smiled to himself, loving her clean taste. She had prepared for him this morning before she left her house, as had he for her, meaning that on some level, both of them had planned to be right here doing this very thing this afternoon. He reveled in giving her the most intimate of kisses two people can share. \n\nWhen she was relaxed enough Glen replaced his tongue with the wet fingers he took out of her pussy. Jordan took the thicker penetration slowly, taking full, measured breaths and pushing out to let him in. Once they sank all the way in, Glen held his fingers inside her and began to massage the inside of her rectum until he found the hard rubbery surface of her g-spot through her vaginal wall. Jordan gushed at the pressure he applied there, a loud groan escaping her lips. He pressed his thumb in the pool of her pussy and then began to rub her clit with it as he finger-fucked her ass. As she grew accustomed to his invasion Jordan began rutting back at him to meet his finger thrusts. She was ready. \n\nGlen removed his fingers then used his mouth to suck some more juice from her pussy then he used his tongue to lube her with the combination of cunt juice and saliva. When he backed away her hole was shiny. She beckoned him back by flexing her anus and blowing him an anal kiss, still faithfully holding her cheeks spread for him. Glen moaned at her lewd display. He took his dick and jammed it into her pussy to the hilt, wetting it again. Jordan's breath caught in her throat as he withdrew it just as quickly and put his head at her smaller entrance. He began to slowly push. \n\nJordan got nervous and tensed up but he was so hard with excitement that there was no bend or give to his cock. It insistently demanded entrance to her bowels. Jordan looked back at him over her shoulder, pleading for gentleness with her eyes. Glen brought a hand around to rub the small of her back. \n\n\"Breath baby, relax and let me inside you,\" he said with tenderness. He bent down to rain kisses on her back. That touch of affection was all she needed. The petals of her rose flowered open for him and he tunneled into her. Jordan cried in bliss. The fullness of having him in her back there was exquisite. There was no other feeling in the world like it, no other sexual experience that could match its intensity. Feeling so forcefully filled with dick was the ultimate thrill ride for Jordan. She felt so free with Glen. Free to indulge her body's deepest desires without fear of judgment from him. \n\nGlen straightened up and grabbed onto her hips, holding her steady while impaled on his shaft. He had only sunk about three quarters of the way into her. When she had adjusted to his size, she used her rectal muscles to give him a squeeze, letting him know she was ready. \n\nGlen withdrew slowly and stabbed back into her bowels. Jordan mewed beneath him, grinding her ass back into his hips trying to take more of him inside of her. She was unbelievably tight around him, and she could feel every detail of every ridge and every vein along his shaft. She could draw an accurate picture of him if she had to, just from feeling him so snugly in her ass. His moans told her how much he loved being inside of her, which turned her on even more. With her right hand she let go of spreading her cheeks to reach underneath them and rub her clit. \n\nGlen increased the pace of his thrusts but still wouldn't push the last two inches into her. It was driving Jordan crazy. She wanted it all. She knew he had more to give and she was determined to make him give it to her. \n\n\"Fuck me,\" she said, but Glen only laughed and continued as before. \n\n\"Fuck me, God damn it!\" she said, trying to push back onto him to capture more of him in her humid depths. \n\nGlen ripped one of the pillows out from underneath her, allowing her to lay a little more flat. Then he leaned over her torso, supporting his weight with his arms placed on either side of her head, increasing his leverage. \n\n\"Is this what you need?\" he asked, pounding one violent thrust into her before settling into a slower rhythm. \n\n\"Hell yes, baby, don't stop. Fuck me!\" she panted. \n\n\"Like this?\" he asked, again stabbing one forceful thrust into her ass but then resuming a slow pace. \n\nJordan grew insane with his teasing, almost angry. \"Are you teasing me because you're not man enough to fuck me any harder?\" she asked, wiggling her ass back at him. That did it. \n\nGlen let his full length sink into her, taking her breath away. \"You needed this, didn't you, needed to be my whore,\" he whispered softly in her ear as he ground the last inch of his dick down into her bowels. She could feel every part of him down deep inside her, like he might come out the other end. She felt him throbbing inside rectum. Her leaking pussy was making a sloppy mess of the remaining pillow underneath her. \n\n\"Yes,\" she whispered back, arching her hips to try to capture even more of him in her depths. \n\n\"What'd you say, baby?\" he asked, slowly pulling out a few inches.\n\n\"Yes!\" she groaned, louder this time, pushing her ass back into him.\n\n\"Say it!\" he growled, with a sharp, full jab into her ass. \n\n\"Yessss!\" she said even louder, \"fuck me!\"\n\n\"SAY - IT! TELL - ME - LIKE - YOU - MEAN - IT!\" he insisted, driving hard into her with every syllable. \n\n\"YES, YES, YESSSSSSSSS!!!!! I needed to be your whore! I needed your dick in my ass! My God, I needed this so bad! Fuck me, Glen, fuck my ass!\" Jordan could not believe the words coming out of her mouth but she was glad she said them, as Glen began giving her the fucking of her life, slamming into her ass without restraint. Growls and screams and the furious sound of wet flesh slamming into flesh were the only sounds that could be heard. She was about to cum and cum violently when all of a sudden he pulled out of her, standing on the bed above her. \n\n\"Show me,\" he demanded, \"show me how bad you need it, how nasty you can be.\" Jordan knew what he wanted. She knew because deep down she wanted it too, though she had never even admitted it to herself. She wanted to be taken like this, pushed to the edge of her sanity. She turned around quickly and without hesitation devoured him with her mouth. \n\n\"Holy fuck!\" Glen let out, \"God, you're a sexy bitch! My sweet sexy bitch.\"\n\nIt thrilled Jordan for him to talk so dirty to her. She took him all the way into her throat and buried her nose in his pubic hair, reveling in his manly scent. She sucked him like her life depended on it, grabbing his ass and pulling him into her mouth as deep as possible. It was a slutty display to beat all others. Glen couldn't take it for long. \n\nHe pulled out of her mouth and laid her on her back. He bent her legs all the way back so that her knees were in her chest then he placed a pillow under her ass to lift it up off the bed a little more. He climbed back on top of her and put the head of his angry cock back at her now dilated asshole. He sunk back into her easily, all the way to the hilt. \n\nThere was a special intimacy to having anal sex in this position. They stared deep into each other's eyes as Glen started to pound her again, fucking her with all his might, putting all his strength into every thrust. He abused her ass, slamming into her with reckless abandon. It was too intense, and Jordan worried if she could really take it, if he might actually injure her. There was an almost angry look on his face and his passion was so concentrated she knew she couldn't stop him even if she wanted to, and she surely did not. Then he kissed her. It was a sweet and tender counterpoint to the violence that was going on below their waists. That's all it took to push her over. \n\nShe had an out of body experience as she seemed to float away from their encounter, and everything went silent. Then it all came crashing back as both of their screams echoed loudly in her ears. Orgasms rolled through her in wave after wave, and she lost count of how many there were. Her words became unintelligible as her body struggled to ride out the energy from her release. ",
        "Glen was only a second behind her, he held off just long enough to watch her body as she came. He wanted to have that memory of her in that state for the rest of his life. Jordan's eyes shot open in disbelief that he could get any bigger as she felt him expand inside her with his imminent release. Seeing her cum so hard added extra fuel to his fire, and he exploded deep in her ass, filling her rectum with his seed. For Glen, it almost hurt he came so hard, his balls pumping jet after jet of white hot cum into her. Then the most amazing thing happened. Jordan was astounded at what she saw. \n\nWhen he was fucking her pussy earlier he looked intense. When he was fucking her ass he looked angry, but when Glen was cumming in her ass the innocent look of a little child came over his face. Jordan was seeing the true essence of his soul. Behind all his dark passion was a sweet little boy, scared he might lose who he loved the most. Jordan's heart melted. \n\n\"That was amazing, baby,\" she said as he finally came to rest atop her. \"I'm afraid I'm quite sore, though\" Jordan admitted, lightly pushing his hips back to ease his still half-erect cock out of her. It came out of her with a plop and she stroked it, amazed it still had any life in it. \"How can you still be semi-hard?! I'm not sure I can take care of you any further, baby,\" she said, \"I'm sore everywhere.\" She saw the look of concern in Glen's eyes and cradled his face in her hands, bringing his lips to hers for a gentle kiss. \"Don't worry, I loved it, and would not have wanted it any differently,\" she said, easing his worry over her. \n\n\"My sweet baby,\" Glen whispered, hugging her to him tight. Then he broke from her embrace and turned her on her stomach. He got behind her and kissed a line down her back as he scooted down on the bed, brining his face level with her ass, glistening with their sweat. He gently pried her cheeks apart and looked at her abused hole. It was red and swollen from the merciless pounding he'd given her. Another involuntary spasm went through her, and a stream of his cum came dribbling out of her anus, looking and smelling just as clean as when it comes out of him. \n\nGlen lowered his head and began to lick lovingly at her hole, lapping up their nasty salty juices and soothing her soreness. He sucked and gently probed at her musky center, coaxing more of his cum out of her. Jordan was mortified, what Glen was doing was disgusting. A shudder passed through her from the mental rush it gave her. She used her sore and tender sphincter to gently push outward, making sure he got every drop. When she was sure he had, she turned over onto her back and pulled him up to her. Jordan grabbed Glen by the hair and pulled his lips forcefully to hers, drinking hungrily from his mouth and swallowing every bit she could. It was a kiss so sexy she broke out in goose bumps, by far the most thrilling kiss of her life. \n\nIt was something her fianc\u00e9 would never do to her, would never do for her. Not because he did not love her as much as Glen did, but because it just wasn't in him. He had no dark side that needed sex done dirty like that. He didn't particularly care for anal sex, let alone intense and protracted rimming. Just the thought of something like this would disgust and appall him and likely send him running, thinking she was sick. But with Glen it was different. They understood each other on this primal level and shared a need for a kind of intimacy that would scare most people. She had known Glen for two months and yet they had shared their deepest and darkest secrets. Her fianc\u00e9 had lived with her for three years and did not know her like Glen knew her.\n\n\"Baby, I have to pee,\" Jordan said, finally breaking the kiss. Glen rolled from over her to let her up. She tried to stand but her legs were wobbly and sore, all the way up through her hips. She fell back down onto the bed. Glen laughed. Jordan punched him in his arm playfully, saying \"see what you did to me?\"\n\nGlen stole a quick kiss and then stood up. He scooped her up into his arms and Jordan wrapped her arms around his neck as he carried her to the bathroom. She buried her face in his neck, smelling him. He smelled of aftershave, sweat, and sex -- a heady combination of smells for Jordan -- and she could not resist having a taste while he carried her. He set her down on the toilet. \n\nJordan thought Glen would leave and close the door behind him but instead he grabbed a towel and laid it on the cold tile floor in front of the bowl. 'How sweet,' Jordan thought, 'he doesn't want my feet to get cold.' Then he shocked her by spreading her legs and kneeling on his knees right before her. Jordan hesitated. She had peed in the presence of a man before, but never like this. \"Go ahead, baby,\" was all he said before wrapping his arms around her and leaning in to kiss her. Finally Jordan let go. It was a strange sensation, peeing and kissing at the same time. When he heard her finish Glen broke the kiss and took a wad of tissue and wiped her. \n\n\"I adore you, Glen Arrington,\" she said, holding his face in her hands and staring deeply into his eyes. It was another shared moment of intimacy that touched her deeply. He smiled, then picked her up again and carried her back to the bed where they cuddled and continued kissing for a while, not saying a word. \n\n-------- (_*_) --------\n\nJordan awoke with a start, momentarily forgetting what day it was or where she was. The dark arms around her were not those of her fianc\u00e9, and she remembered she was in a motel room with Glen. She was curled up against his chest, and his gentle snoring had soothed her to sleep. Panic stricken, she looked over at the clock on the bedside table. \n\n\"Shit!\" she said, rising up on her arms. \"Wake up, baby,\" she said to Glen, gently shaking him. He opened his eyes, saw her and smiled. Then the same panicked look came over his face as he realized also that they were not still supposed to be here. \n\n\"What time is it?\" he asked, reaching out to caress her. \n\n\"It's after 5, fuck!\" she said. \"I didn't mean to fall asleep.\" \n\n\"We need to shower and get out of here,\" he said, \"come on.\" Her legs were a little steadier now and Jordan could stand. They showered quickly, taking turns to wash each other but too panicked to do anything too bad because they each knew they had to hurry. As it was, lies would have to be told to excuse their lateness. \n\nThey dressed in silence, a somber mood overtaking them. When they both were ready they stood at the door, unable to leave and just looked into each other's eyes. The kiss was different this time. It had the same urgency but was also full of sadness and longing. They both knew that they could not continue like this, and it may be the last time. If not, they would both have to hurt people who they loved and who really loved them. Tears flowed down their cheeks as the kiss intensified, missing each other already. With one last touch, they opened the door and walked out of the motel in silence. They got in their respective cars and drove away. \n\n--------- (_*_) --------\n\nEnd of Part 2. Thank you all for your votes and comments. We are not sure if there will be a part 3, as this story is still unfolding in actual events. Jordan may have to write the next chapter herself. My gut tells me, however, that it is best left as it is, for really we all have to make this decision for ourselves: whether to take a chance on true love or stick with something good and faithful but perhaps not ultimately fulfilling. Thanks for reading,\n\n- Jayded Lust"
    ],
    "authorname": "Jayded_Lust",
    "tags": [
        "anal",
        "ass-to-mouth",
        "rimming",
        "cum swallowing",
        "cheating spouses",
        "public sex"
    ],
    "category": "Anal",
    "url": "https://www.literotica.com/s/something-in-her-eyes-ch-02"
}