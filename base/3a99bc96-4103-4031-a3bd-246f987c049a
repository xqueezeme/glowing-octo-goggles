{
    "title": "The Idiot, the Farmer and Me Ch. 02",
    "pages": [
        "The Second bit, more sex, less London slang and the Farmer appears in this bit.\n\n-------------------------\n\nThe Policeman was looking at Uncle Dave and I had the feeling that he did actually feel for the suited and quite attractive man and his injured son, and not the two thugs sat in the back of his police car one of which he'd grabbed by his collar.\n\n\"Sorry,\" Uncle Dave took a breath and dropped his eyes, then looked up at me again \"Could you PLEASE go and tell my brother I'm here and ask him if he can take Chris for me until I can get this crap sorted out!\"\n\n\"Y...yes,\" I said, knowing that all of this crap was down to Izzy and me, and our own faith in our perfect organisational skills and what we'd caused through our lack of it.\n\nI ran inside; Gwyn was stood with arms folded and talking with some sense of disappointed anger to my brother Mike. Paul was talking to Izzy who was giggling.\n\n\"Paul,\" I stuttered quietly, desperately hoping Gwyn wouldn't hear, \"Err, your brother Dave is out front; could you come...\"\n\n\"Oh he's bloody here at last is he?\" hissed Gwyn stepping over, \"Just you wait 'til I...\" and she stormed off followed by both Paul and I in hot pursuit.\n\n\"Gwyn...\" called Paul after her as she stormed through the entrance, \"honey, slow down, we...\"\n\n\"Where the bloody hell have you been?\" snarled Gwyn, \"you've missed...\"\n\n\"DON'T START!\" snapped angry Dave, and I heard him across the lobby. By the time we'd run there he was pointing a finger at his sister in law's face who'd had the wind taken out of her sails for a moment, \"I get a snotty phone call with you howling at me because I'm not at a wedding I know nothing about.\" He snapped, \"Don't tell me Gwynnie, every Saturday I'm supposed to drive around all the churches within ten miles of your house, just in case one of your kids is getting married? Or I'm just supposed to guess that I'm supposed to be at a wedding?\" He slowed and put his hands on his hips. \"obviously, because none of you have your phones switched on, I have to do some major bloody detective work to ring all your work mates on Paula's old phone to find out where the reception I'm supposed to be at is.\" I found out later that his wife and his sister-in-law worked together, \"Next I have to get Chrissie from swimming - upset number one; I bring him home and find him something smart to wear - upset number two! Then once I get here I find that not only did I not know about the wedding, once I've driven sixty bloody miles across country, upset number three - I'm kept standing at the door for an hour by the brains trust there,\" he pointed to Carl getting into the second police car picking his nose, \"because, and I quote, 'my fucking name ain't on the fuckin' list so I ain't fuckin' comin' in.\" \n\nHe raised his drooping shoulders for his final attack, \"The final rabid, angry shark in the children's splash pool is my Chrissie hasn't eaten since breakfast and can smell food and see not only the buffet being carried through on trays AND the machine there in the foyer with all the chocolate bars, but that fu... that YOB gets in his face and scares the shit out of him. Then when Chrissie sees Julia and Will passing by over there he takes a step forward and that fucking savage screams in his face, jabs his finger in his chest then pushes him down the stairs cutting his head on the concrete in the process, and then laughs because he's made him cry!\" The place was silent, and you could have cut the air with a knife. \n\nGwyn's bottom lip flapped.\n\n\"So go on Gwynnie, tell me what you're cross about, really, go on, please, do tell me what a shitty day you've had!\" she looked at her husband and then the boy now being looked at by the paramedics, \"seems you can scream down the phone at me and then cut me off, but you can't turn the bastard back on again so I can find out what's going on and where I need to be or get one of you to come out and stand up for me!\"\n\nLike me they had turned off their phones during the service and with all the excitement had just forgotten to turn them back on. The first policeman was back now and watching Uncle Dave's outburst and just folded his arms and raised an eyebrow.\n\nChristopher had started to cry again, probably as much about his cross Dad as the cleaning wipes on the back of his head.\n\n\"Alright mate,\" said Dave, calming down, \"Uncle Paulie will look after you until I get back from the police station.\" He turned to his sister-in-law, and then me, \"That alright is it? Or does having the big kid not in a posh morning suit at the top secret wedding reception spoil everything?!\"\n\nGwyn looked on the verge of tears as was I.\n\n\"But...\" she looked at Paul then at me.\n\n\"Amy will be heading here as soon as her shift finishes at six, just watch Chrissie 'til she arrives or the police have done with me. If someone can get her from the railway station I'll be obliged to them. She can drive him home in my car.\"\n\n\"Police?\" said Paul in surprise.\n\n\"Yeah, a bit of an altercation with your bodyguards mate.\"\n\n\"Bodyguards?\" Paul said and turned to me.\n\n\"I think I can explain...\" I said.\n\nAngry Uncle Dave, Brian and Carl were all taken off to the nearest police station that was at least twenty miles away from this quaint country outcrop.\n\nWe sat in my room sipping tea, with Gwyn looking stunned and I fussed with a handkerchief I'd brought for much happier tears than these.\n\n\"...We must have missed them off of the list Gwyn, I'm so sorry.\" I wept. \"I didn't leave them off of the list on purpose, honestly; it was a real mistake, you have to believe me.\"\n\n\"OK,\" said Paul with a hand on my shoulder, \"I know that you and Izzy wouldn't have done that on purpose. You had a lot on your plate, the both of you. It was a mistake.\" Paul said genuinely, \"Dave will be alright, you wait.\"\n\n\"I didn't know that Les was getting his mates on the door, I think he only did it as a way of getting both of them to the party, because Izzy and Ed hadn't invited them and Les wanted them here.\" I growled. \"You wait 'til I get my hands on that bloody Idiot!\"\n\nChristopher sat on the bed and was working his way through a large plate of food the restaurant had cooked for him specially, and he looked temporarily upset by my distress.\n\n\"Alright mate,\" said Paul, \"Auntie Sam is just a bit upset, don't worry.\n\n\"I'm OK Uncle Paulie,\" said Christopher with his really cute smile, and ate the last of his chips. He looked up to Paul with real sincerity, \"can we go home in a minute?\" he said, nodding and favouring his uncle with a large grin.\n\n\"Not for a bit mate,\" Paul smiled, \"Dad'll be back soon Chrissie.\"\n\n\"OK,\" said Chrissie.\n\n\"Who's gone for Amy,\" said Gwyn wiping her face, and not looking at me.\n\n\"Julia's gone for her,\" said Paul, \"her train gets in about now.\" Julia was Ed's older sister and one of the bridesmaids.\n\n\"Amy isn't going to be happy,\" said Gwyn looking at Paul, \"Since her Mum died she watches over Chrissie like a hawk, and Dave for that matter,\" I closed my eyes - Oh shit, a lately departed wife and mother - could this seriously get any worse? Gwyn looked across at me, \"I'd hate to be your Les's friends if Amy gets hold of them.\"\n\nThat hit stung,\n\n\"He's not 'my Les' Gwyn, and I had no idea he was going to smuggle his Idiot mates in like that.\" I mopped my cheeks again, \"Amy can do what she likes to them for all I care, and then do the same to Les. I'll hold her jacket for her.\"\n\nThe ambulance crew had checked over Christopher and pronounced him a bit scratched up but generally fine and being allowed to calm down followed by a good night's sleep would see him right as rain by the next day. The hotel management realised they had a bit of a PR blip and probably should have checked the bona fide of the two scrotes on the door over and above their white shirts, black ties and black trousers, and the fact that a lovely eleven-year-old gentle giant like Christopher had been assaulted and injured at their impeccable premises was not something they wanted on Trip Advisor.\n\nThey had cleaned his suit and trousers and started to feed him his favourite foods - giant burger and chips.\n\nBy the time Christopher had finished his huge meal Julia, still in her bridesmaid dress, had returned with her cousin who looked the spitting image of her.\n\n\"Chrissie!\" purred Amy, and bent down to check him over, looking closely at the back of his head where the paramedic had wiped away the blood from his light brown hair that she gently stroked now. As Amy ducked down I could see she was wearing bright red scrubs under her light jacket, obviously a nurse.\n\n\"Amy!\" said Christopher with some obvious pleasure, \"I bashed my head...\" She grinned at him and shook her head, kissing his cheek.\n\n\"Any word from Dad?\" she said.\n\n\"Not yet honey,\" said Gwyn, sounding like she knew she wasn't totally free from blame for this day's events.\n\n\"I'll take Chrissie to the police station and we can wait there for him.\"\n\n\"No way!\" said Julia slipping an arm through her cousin's.\n\nI looked at this lovely family and just imagined the grief I'd caused.\n\n\"I'm really sorry,\" I tried to say, \"I never meant any of it...\"\n\n\"Amy, this is Sam - Izzy's mum,\" said Julia brightly.\n\n\"I've heard so much about you!\" said Amy with a big smile, and took the words from my mouth by kissing my cheek and giving me a hug. It was too much.\n\nMy breakdown was so complete that Gwyn came across to me and put her arms around me as well,\n\n\"It's OK Sam,\" she said, \"come on, let's get you changed and go and join in the party, all the evening guests are arriving look.\" She said. I shook my head, the last thing I wanted to do was to try and explain all of this shit to the bride and groom on their special day. \"Come on,\" said Gwyn, \"we have to go down for Izzy and Ed,\" Gwyn said to me firmly, \"don't we!\"\n\n\"Yeah,\" I said taking a deep breath. \"I won't get changed, I'll stick with...\"\n\n\"Yes you bloody will!\" laughed Gwyn, \"I have another outfit I want to wear, and I can't get changed if you don't get changed!\"\n\nEveryone left my room and I was on my own for the first time that day and I felt dreadful. I had a shower and redid my make up and put on my cocktail dress.\n\nBy the time I got back downstairs, the evening guests were starting to arrive, and Izzy was still in her wedding dress having promised to leave it on so people could see it. She asked me if everything was OK and I smiled and nodded and said that Dad had brought Brian and his twat son from London to 'do the door' but they had been sent on their way via the local police station probably being charged with something as we spoke.\n\nShe growled and made fists showing off her lovely white gold wedding ring,\n\n\"Mum, so help me I'm going to fucking kill him... I KNEW we should have...\" Ed gave her a big hug and she closed her eyes calmed down and we left it at that. \n\nDrama; why could my family never be shot of it.\n\nI walked to the bar and ordered a white wine, looking around the room and seeing Les the Idiot Ex circulating and giving it 1000 watts of cheeky, cheery cockney wide boy to anyone that would listen.\n\n\"Heurgh the draw with a puggly frit-natteraaaarghhahahahaha!\" he prattled away in an unintelligible Cockney drawl and I could see people starting to move away from him, which made him try harder. \n\nThe more he drank the more ridiculous he looked and became, and all of these nice people just stared. Whether he was feeling unloved or insecure, he gave it more - I thought that at any moment he was going to either start a fight, start singing 'Roll out the barrel' or 'Knocked 'em in the Old Kent Road'.\n\nSo by seven thirty between myself, Son Ray and his brother-in-law Dave we were able to get him to his room 'for a lie down for half hour' so he could come back to the party refreshed and 'really go for it'. He insisted he was still fresh as a daisy and another brandy would set him up fair and... \n\nSnore.\n\nRay rolled him into the recovery position, pulled off his shoes and we didn't see him until eleven the next morning.\n\nI'd danced with Ed, I danced with Ray, I danced with brother Mike then Paul and pretty soon I was starting to feel better about myself. The several glasses of wine I'd gotten through helped as well.\n\nJust before eight thirty I saw Uncle Dave now released without charge, and knew I'd have to go to him and apologise for the grief he had as a result of Izzy and us missing him of the list, then the Idiot Ex's mates stopping him coming in and getting him arrested.\n\nI stepped outside for a breath of fresh air to see Christopher and his Dad sat on a garden bench. I approached.\n\n\"Err... Dave?\"\n\n\"Yes...\" he said looking up and through the lights of the hotel, \"Sam; look,\" he stood up, \"I'm really sorry I had a go at you today, totally uncalled for. I'm afraid I was a victim of circumstance.\"\n\n\"And my appalling memory and Izzy's self-confidence,\" I took a deep breath and explained that we had two Dave's, a Chris and a Kris and an Ann and an Amy. \"I'm not taking any responsibility for those twats the Idiot Ex brought along.\"\n\n\"Fair play,\" he grinned.\n\n\"Is Chrissie alright?\"\n\n\"He'll mend,\" said Dave, \"the kitchen staff have all fallen in love with him and keep bringing him baskets of chips with ketchup, I expect he's forgotten all about it already.\" He grinned at his son, the only person eating chips in this high-class eating establishment, who grinned back at him.\n\n\"Is Amy OK?\" I said, \"I thought she was going to operate on me without anaesthetic when she first arrived. Has she gone home?\"\n\n\"No, she's in there dancing with Izzy, Julia and all of her mates. I brought a couple of her dresses and make-up bag along and she got showered and changed in Julia's room, they're like best mates when they get going and I expect by the end of the evening Izzy will be as well.\" He picked up a glass of Coke and sipped from it. \"the curse of living down south I don't get to see the family as often as I like. Hence not knowing about the wedding and not knowing I'd been missed off of the list, none of us do Facebook either. The final nail was that Julia is just back from travelling so never had time to catch up with Amy and find out about weddings and dresses and missing hen-nights and all that kind of thing. Julia said she saw the table plan with Dave, Kris and Ann and figured it was a spelling mistake!\"\n\n\"Sorry,\" I said.\n\nNever mind,\" he grinned, \"All's well that ends well.\"\n\n\"Can I buy you a drink?\" I asked.\n\n\"No, but thanks anyway,\" he said, \"I have to drive home tonight as there are 'no rooms at the Inn' so to speak.\"\n\n\"I'm so sorry,\" I put my hand to my mouth, \"I've caused you so much bother!\"\n\nHe giggled,\n\n\"Look Sam, don't worry seriously. It came as a bit of a shock at first then an annoyance then a major pain in the arse but now I've met you, I realise it was a cock-up, plain and simple. As William Shakespeare once said, 'Shit happens, deal with it and get on with life', damn good advice if you ask me.\"\n\n\"Did Shakespeare say that?\" I said sitting on the chair next to his and sipping my umpteenth glass of wine.\n\n\"Must have done,\" replied Dave, \"stands to reason,\" he sipped his Coke, \"that or Winston Churchill said it, one or the other.\"\n\n\"I'll take your word for it,\" I said, \"you're a school teacher.\"\n\n\"College lecturer Sam, please - what do you do?\" he asked forgetting our banter for a moment.\n\n\"I run nursery schools with my sister Denise, that's her with the sprayed-on red dress.\" \n\n\"That's still a teacher Sam,\" he said with a grin.\n\n\"Not like your teaching it isn't.\" I said.\n\n\"Do you get visits from Ofsted or the Care Quality Commission?\"\n\n\"Ofsted,\" I said, \"we got 'Outstanding' last time.\"\n\n\"My College? WE got 'Good' last year!\" he said. I giggled; his smile was infectious, and he was very charming. \"There, I reckon that makes you a teacher.\"\n\n\"I bet you have a degree don't you?\" I said.\n\n\"Yes, don't let that fool you though,\" he grinned, \"all of my colleagues are graduates are some of them are bloody Idiots.\" He tilted his head to one side and raised an eyebrow, fuck but he was attractive!\n\nHe looked a lot like his brother Paul but was broader across the shoulders, with dark hair with hints of grey at the temples, and deep blue eyes I could happily drift into...\n\nAmy and Julia appeared, both holding bottles of beer and beaming. Without knowing them, any other onlooker would have taken them for sisters and they chatted about how nice it was to get out of the bar and cool down in the night air.\n\n\"Hey Darling,\" said Dave.\n\n\"Daddy!\" said Amy, and walked across to her father, just the tiniest bit tipsy and sat on his lap. He gave her a big hug and she put her arms around his neck. Not something the Idiot Ex had done with Izzy after her sixth birthday.\n\n\"Baby brother!\" she squeaked at him and blew him a kiss. Chrissie grinned and pursed his lips and it was really cute. \"Julia has said I can sleep over in her room, so you and Chrissie can come and go as you please Daddy.\" I guessed this meant that if they wanted to go home they could.\n\n\"I didn't pack you any day clothes Honey,\" he said looking apologetic.\n\n\"My scrubs will do, Jules is driving me home tomorrow.\"\n\n\"After we've sobered up and swum in the pool!\" giggled Julia, looking just as hot and sexy as her cousin, both in strappy blue short dresses glued to their perfect figures. As Julia turned the lights caught the thousands of sparkly bits in her dress and she glowed.\n\nIzzy appeared next with Ed escaping the heat of the dance floor, as pretty and ravishing as her new relatives but with more curves!\n\n\"Hey Dave!\" said Ed, he looked at Izzy, \"Sorry about the mix up!\"\n\n\"Sorry Dave!\" Izzy dropped her eyes, then trotted as fast as her dress and heels would allow and hugged him. \"I'm soooooo sorry!\" Knowing my daughter so well I knew that with the booze she had undoubtedly consumed throughout the day she would be close to the weepy stage and I wasn't having my baby girl crying on her big day.\n\n\"It's alright Izzy,\" I said, \"I've already made the apologies, it was a joint cock-up don't forget!\"\n\n\"Don't you worry Darling,\" said Dave.\n\nAs if knowing a rescue was needed, Chrissie stood up brushed his shirt and trousers down, picked up his empty glass and walked towards his big sister sat on Dave's lap. He cleared his throat.\n\n\"Can I have some more Coke?\" he said, presenting his glass and as if this was a major decision.\n\n\"Coke Darling?\" said Julia with a smile, \"of course you can!\"\n\n\"Yes,\" said Chrissie with a huge grin, and Julia held out a hand.\n\n\"Let's go!\" and off they went.\n\n\"Aww it's a shame that Dave and Chrissie have to go home tonight,\" said Izzy now hugging her husband, \"are ALL the rooms taken for sure?\"\n\nI knew they were; all taken, no cancellations and a waiting list of two other couples should one become available at the last minute.\n\n\"Don't worry Izzy,\" said Dave, \"I think my boy is probably ready to go home anyway, besides which we haven't got anything to wear for tomorrow morning either!\"\n\nI remembered something,\n\n\"Before you go Dave, don't let me forget that Chrissie's jacket is in my room upstairs.\"\n\n\"OK,\" he said, \"I was wondering.\"\n\nThe music inside the hall changed slightly and it was a selection of Abba songs;\n\n\"Abba!\" squealed Izzy.\n\nShe had held onto a love of the group since playing a part in a school production of 'Mamma Mia' and she grabbed Ed and reached for Amy's hand and they all ran back into the sweltering room as the guests all sang 'take a chance on me'.\n\nI looked back over my shoulder with an indulgent grin and saw that Julia had both of Chrissie's hands and was attempting to get him to dance in time with the music. They were quickly joined by Amy, Izzy and Ed, and the young man's look of distraction was gone for the time being and there was a big ring of hand-holding cousins and cousins-in-law bopping to 'Waterloo' with a smiling if slightly nervous Chrissie with his sister and cousin both smiling and talking to him.",
        "\"Amy's been like a Mum to him,\" he was grinning himself. I smiled,\n\n\"I'm so sorry to hear about your wife.\"\n\n\"Thanks,\" he said genuinely.\n\n\"I'll go and get his jacket while we think of it.\"\n\n\"I'll get you a drink, another glass of wine?\"\n\n\"Yes please!\" I said and stood.\n\nAs I walked back to my room I thought about this really nice guy, widowed with a lovely family that was now, technically I suppose, part of my family. Standing on the grand staircase I looked down and into the room as 'Dancing Queen' finished the Abba music.\n\nI took a rather slow walk back to my room, taking in the other facilities this grand place had to offer - the fitness suite with its gym and huge pool, massage tables and beauty treatments, some of which the bride and the bridesmaids had all taken advantage of that morning. \n\nI looked out of the huge picture window at the grounds and could already see a few couples that had wandered off into gardens for a walk and a cool down, the sun setting in the background across the distant Ridgeway was the perfect end to an almost perfect day, but for me (and Izzy I suppose) managing to piss of the extremely attractive uncle of the groom.\n\nHmmmm, the uncle of the groom...\n\nI was snapped out of my reverie by the stunted snort that had awoken me in the night for at least eight years of my life as I walked past the Idiot Ex's room. Fuck, but I sooooo hated the fucking man! I stomped back down the corridor, significantly pissed that he had managed to ruin yet another nice moment in my life, which he kind of had a habit of doing.\n\nWhen I got back to my room and let myself in I was greeted by a bit of a high-pitched squeal which was a semi pissed Izzy stripping out of her wedding dress, her shapely bum in some almost invisible panties pointing at me!\n\nShe straightened up and laughed and shook her fantastic dress and stepped through to the small room and the day bed she had stored her clothes on for the journey home.\n\nShe was left in her white corset that she had put on under her dress, and she asked if I could undo the laces at the back.\n\n\"And poor Ed doesn't get to see any of this?\"\n\n\"Oh don't worry, he will!\" she giggled, \"It's going home tomorrow and I've promised him a private showing!\" she grinned, \"PLUS I had some boudoir photographs done two weeks ago wearing this lot,\" she waved at the dress, \"then gradually less of it. Something that the photographer suggested to me during our engagement photo shoot, and we've been planning it in secret ever since. Those are the special wedding photos that only Ed will get to see!\" She slipped the corset down and stepped out of it, and patted her suitcase, \"The album is in here,\" she said totally comfortable stood before me naked but for her tiny white panties.\n\nFuck but I was proud, my baby girl was the most beautiful woman and was comfortable and confident in herself and had just taken the next big step in her life. She picked up and folded her corset and turned to see me with a few tears running down my face.\n\n\"Hey Mum!\" she trotted over to me, \"No need for that!\"\n\n\"Not sadness Darling,\" I said, \"Just an amazingly proud Mummy moment!\" I wiped a quick hand across my face to catch the last few tears, then putting both on her slim waist, \"you are sooooo beautiful!\" I gave her a tiny shake.\n\n\"Awwww!\" We hugged, and she took a step back and posed with her hands on her hips looking me straight in the eye then looking me up and down in return, \"All your own work Mum.\"\n\n\"Your Dad was in there somewhere,\" I said. I will confess I only said it because I felt I had to rather than actually thinking it. Izzy took a step forward and put a hand on my shoulder.\n\n\"Fuck off Mum, even you don't believe that.\" She raised her head and looked strong, like her grandmother always had, \"I still love Dad, but all of what I have achieved is in spite of him rather than because of him. The rest if it was YOU!\" It was her turn to give me a tiny shake and even she had a few tears after that.\n\nI helped her into her going away dress which once I raised the zip looked like it was glued to her and was a mid-blue, mid-thigh designer frock with a plunging neckline that only someone with our kind of figure could really do justice to. We touched up her make up and went back to the party and had a great time.\n\nDave handed me my glass of wine and I suddenly remembered that I'd STILL left Chrissie's jacket in my room. I took a sip and promised to return for it later and was pulled off to dance by Izzy, Denise, Amy and Julia.\n\nThe night was drawing to a close and a taxi arrived and whisked the happy couple off to the airport and a late-night flight to Mexico for a fortnight. \n\nIt was only as I tearily waved goodbye to my gorgeous daughter that I remembered Chrissie's jacket and I as I turned to head back to my room it struck me that I now had a spare bed, almost in another room. I could sleep on the day bed (that my Izzy should have slept on the night before preferring to come and sleep with me drinking hot chocolate and chatting about days past) while Rob and Chrissie could sleep in the huge king size - I felt I owed them both that much and sat with him again to tell him about the spare bed.\n\nDave wasn't at all flustered by the whole thing, and I was a bit concerned by that; I mean, because of Izzy and my cock-up, he'd been dragged off by the police. If that had been one of The Idiot Ex's family they would already been on the phone to a no-win-no-fee solicitor and looking up which holiday they were going to take with their compensation.\n\nBut nothing from Dave, he smiled and we just chatted. I looked around the room and while there were quite a few people I could have gone and circulated with, I was quite taken with just sitting with the really nice bloke and his son and just chatting about life and how shit happens.\n\nSince divorcing The Idiot Ex I had been chatted up quite a few times, and quite often they made it quite plain what they were after. I had stopped going to the club, somewhere I had virtually grown up, because it was obvious - apparently - that 'Sammy was back on the market again' and they were all but queueing up to 'ask me out'. A long string of blokes just like Les who had perhaps stared across the bar and the dance floor at curvy Sammy and thought that they might like a little go with that.\n\nAfter all, she was divorcing Les and was bound to want a little bit every now and then. At a party to celebrate Mum's fiftieth birthday, those twats were all but lining up for me and after the fourth \"No thanks, I'm not looking to start a relationship right now,\" had ended up with my pissed prospective Romeo calling me a fucking slag and shouting across the packed Saturday evening clubroom that I was a 'fuckin' prick teaser'. My son Ray, still hurting from the ridicule brought down on us in this self-same room a few months before, kicked the offender square in the bollocks then hit him with a bar stool as he was bent over in agony.\n\nThe manager was about to remonstrate with the boy when almost the entire room stood up, insisting that the now out cold gobshite was well and truly asking for it, and all of the men in the room, bar the other three that had tried for my affections who were casually turning the groins away from my juvenile champion, said they would have done the same if it had been their mum.\n\nThat upset pretty much decided me on moving away from my part of London and going to stay nearer to Denise and her small business she'd offered me a job in.\n\nMy hero Ray was still my hero, and I looked across the bar at him looking fantastic in his evening suit and chatting to Izzy, Ed, Julia and her boyfriend and Amy. I hoped there was a beautiful and kind girl out there waiting for him.\n\nI looked at Dave, smiled, stood and took his hand pulling him to the quieter dance floor, and as if by magic the slow dancing started and I took the opportunity to pull him closer as Chrissie was given his umpteenth Coke.\n\nWe chatted nicely some more and as the music played softly and slowly and we moved gently to it.\n\n\"Sam...\" he said, knowing that the song would finish any moment, \"Would you... I mean...\" I smiled, the poor sod looked so uncomfortable.\n\n\"Would I what Dave?\" I grinned, and pushed myself closer to him, slipping my arms from his shoulders up around his neck - he was obviously trying to ask me out on a date! \n\n\"Would you... like to do dinner one evening?\" he managed to burst out. \n\n\"Why Dave!\" I said with a grin, \"I'd love to!\"\n\n\"Wow!\" he said, \"thanks!\"\n\n\"No,\" I said, \"thank you!\"\n\nHe smiled, the relief in his face evident, so evident that his daughter and niece spotted it from the other side of the room and cheered loudly, making the rest of the room stare and try to imagine what our smiles and red faces were about.\n\nAnother slow song started and we carried on dancing and I did something I love most of all, resting my head on a strong shoulder as I'm held by someone and Dave realised this, holding me tighter. Our simple pleasure was only stopped after a third song by Dave noticing that Chrissie was looking really tired and yawning his head off, sat alone at their table.\n\nI told him that I now had a spare bed and that he and Chrissie could sleep over. He thanked me and and we walked to my room where I let them in, explaining that they should have the large King size and make themselves comfortable while I would take the day bed in the main part of the room. I left him with his son and went down to the party with a real sense of disappointment, for the closing moments and the goodbyes for those not staying.\n\nAfter that there were some final dances and it was a shame that I couldn't share them with the rather nice man I'd been making friends and dancing with since I had found him arguing with the hotel management and being taken away by the police.\n\nI saw my Mum to her room and headed back to mine, tiptoeing in as I was conscious that two people would already be asleep. I had already moved my T-shirt nightdress to the day bed so as long as I kept it quiet I would disturb no one.\n\nOnce in, I could see through to the bedroom part where Dave and his son were sleeping. I moved to the bathroom and removed my make-up, cleaned my teeth, put on my nightdress then tiptoed back to the day bed and pulled the duvet over me.\n\nThe next morning I woke to some soft chat of Dave and some replies from Chrissie. I rolled over and looked across to where my guests were starting to wake up.\n\n\"Good morning boys!\" I said popping my head up and getting a soft smile from Chrissie and a big grin from Dave.\n\n\"Good Morning Sam!\" said Dave, \"Thank you so much, we both slept extremely well!\"\n\n\"Good!\" I said sitting up, conscious that my large boobs were just covered by the thin cotton of my T-shirt and not contained by the lacy light green bra I'd been wearing the day before when I was pressing them against him as we danced. Because I'd always looked after my tits and kept them supported gravity had been kind to them.\n\nSo conscious was I of Dave and his only being some yards away my nipples sprung to attention and much as I wanted to fold my arms to hide them, a brief hint of his bare, broad, hairy chest as he too sat up convinced me that I should let him see the effect that me sleeping in the same room and waking up with him had on me, if only unconsciously. I knew that my nightie was quite decent but would show off my long legs very nicely and just hint at what was beneath.\n\nI stood and walked across to the balcony and opened the door, stepping to one side as the breeze blew the soft net curtains and let in the fresh country air and the smell of the dewy grass and trees. I used the bathroom then once out stepped across to the dressing table where the there was a kettle and some mugs.\n\n\"Tea?\" I asked.\n\n\"Yes please,\" Dave said with a smile and yawning and stretching showing off his fine musculature even more.\n\n\"Chrissie?\"\n\nChrissie smiled and popped his tired-looking head up off of the pillow and added \"Please!\" so sweetly to the whole mix.\n\nI switched on the kettle and blew a kiss to him, which he returned with a grin, all but slapping himself in the mouth with his hand in his glee and desire to return the feeling.\n\nI stretched slightly on my toes, very much in the way that we did with the children doing some very basic physical education, something I did most mornings when carrying out this very task but in my own kitchen. What I forgot was that in my kitchen I wouldn't have had a very hot looking man watching my shortie-nightie creep up over my bare curvy buttocks just showing the lace of my tiny string panties as they appeared out of the cleft.\n\nI know this for as I rested my hands on my hips and stretched to my right I saw his refection looking at my virtually bare arse.\n\nI slowly sank down again letting my shirt slip down to re-cover me, and if my nipples hadn't been hard before they certainly were now and I swear I felt my pulse race and that tingle in the groin I hadn't felt in so strong, not even reading my outback porn of a few years before, not even when getting out my trusty tiny vibrator for a little something to help me sleep.\n\nControlling my trembling hands I poured the boiling water into the three cups and strolled across the room concentrating on not spilling anything on the oak flooring while trying to add the tiniest wiggle to my hips!\n\nI handed Dave his tea giving a tiny curtsey and we both grinned, then I stepped around the bed and sat, putting Chrissie's tea on the bedside table to cool.\n\nI took a sip from mine leaning forward slightly and blowing across the lip. Chrissie grinned at me and did likewise. He put down his cup as it was still very hot and headed for the bathroom.\n\n\"He is such a sweetie!\" I said with the blush on my face, trying not to look at the magnificent pectorals, abs and beautifully sculpted arms of the boy's Dad.\n\n\"Thanks,\" said Dave, \"I think so as well.\n\n\"Hell Dave,\" I said unable to hold it in, \"do you work out or something? I mean, just look at this body!\" I folded my arms and crossed my legs so he could take a look at mine at the same time.\n\n\"No,\" he said taking a sip of his tea, \"This is all as a result of my other job, well I suppose you'd have to call it a hobby really,\" he slapped a hand on his large bicep, \"This is lugging hay bales, sheering sheep, delivering all kinds of small animals out of other animals and generally living the good life.\" He drank more of his tea, \"I have a bit of a small holding down in West Sussex, and with some regular lecturing and the money from my late wife's estate me, Chrissie and Amy are able to live quite comfortably.\"\n\n\"Wow!\" I said pausing and taking a breath, \"you're a genuine rancher!\"\n\nHe looked at my pursed lips and cheeky grin that only I understood fully.\n\n\"Yeah, I'm bloody lucky and I never forget it either, you'll have to come and have a look one sunny day.\"\n\n\"That would be lovely.\" I said, I hadn't had a day in the country in years after all.\n\nHe paused,\n\n\"Well...\" he took a breath, \"when I take you out to dinner next week we can discuss it.\"\n\n\"That would be lovely,\" I said finishing my tea and managing to hide my giggles. \"Right!\" I said standing up, \"I'll use the bathroom while Chrissie finishes his tea!\"\n\nI took my towel from the day before and my jeans and a clean T-shirt and undies. By the time I came out, showered and dressed, Dave was sitting with Chrissie and they both stood smiling, both wearing tight stretchy boxer shorts, and fuck but Dave looked good in his and I tried jot to look at jis groin, honest. It did look very promising.\n\nI said I would see them both for breakfast.\n\nI headed down to the dinning room to meet some friends and family, looking slightly bleary eyed from the previous nights celebrations. I had already finished a bowl of yoghurt and fruit when Dave and Chrissie appeared both looking refreshed from their showers and in yesterday's trousers and shirts.\n\n\"May we join you?\" he said. I of course smiled and nodded.\n\n\"No sign of Amy yet?\" I asked.\n\n\"Nope, Ray?\"\n\n\"Not yet, his Facebook page showed him, Amy, Julia and a mess of others drinking and dancing into the wee hours, doubt we'll see them for a while!\"\n\n\"Excellent!\" said Dave, \"That's the kind of thing I like to see in young people.\" We stood and headed to the buffet where I loaded up, having a real appetite this fine morning, then I watched him load bacon, eggs, sausages, toast and all other manner of good things onto a plate, then a second, one of which he laid before his son.\n\n\"Party animal Dave?\"\n\nChrissie beamed and picking up his knife and fork set to the meal with gusto.\n\n\"Was once,\" he said, \"Children tend to calm you down a bit, after all you can't get too pissed in case you have to drive them somewhere in a hurry.\"\n\n\"That's right,\" I said, \"I only learned to drive nine or ten years ago mind you.\"\n\n\"Really?\"\n\n\"Yeah, I never really needed to, and we couldn't afford a second car, not until I split up with the Idiot Ex and moved out of London.\"\n\n\"I'm very sorry,\" he said, quite sweetly I thought.\n\n\"Don't be, best thing I ever did.\" I sipped some of the quite wonderful coffee the waiters and waitresses were bringing round to refill our mugs. \"I married when I was seventeen and pregnant with Ray; like all kids of my age I thought that I knew best and that it would all be good in the end.\" I drank more coffee, \"wasn't until I'd been single for a while and lived on my own with the kids that I actually grew up. Best thing that ever happened to me in the end.\"\n\nI started my plate of the wonderful food.\n\nHe smiled,\n\n\"Did I meet your Ex yesterday, pissed as a Chapel hat-rack and the life and soul of the party?\" he sipped his coffee and smiled at Chrissie, who was on his third sausage and really enjoying it, \"I could only understand one word in four.\"\n\nI couldn't stop myself from laughing.\n\n\"A really shitty light blue suit with beer stains on his shirt?\" He laughed and nodded, \"That's Les the Idiot Ex, believe it or not he's actually Izzy's father!\"\n\n\"That he may be but having met you I can see where she gets it from, she's a credit to you.\"\n\nI blushed and grinned,\n\n\"Thanks Dave,\" I stopped myself then gave in to it, and leaned across and kissed his cheek.\n\n\"You're very welcome!\" he said, patting his cheek.\n\n\"Kiss me too!\" said Chrissie next to his father, his lips drawn up into really cute pout, so I kissed him to, loudly and he giggled, wiping a hand across his mouth. He finished his plate of food telling his Dad he was going to get more. As I finished mine I saw that he had been side-lined by Uncle Paul and Auntie Gwyn and encouraged to sit with them and chat for a moment, and she touched his head to check on his wound of the night before by which time Paul had brought him another plate of the same and he set too.\n\nThis left both Dave and I on our own for a few moments and casting a quick sideways glance at Gwyn I was sure that this was her plan as well. I was just about to ask him about coming to visit his farm in the country when the peace was shattered.\n\n\"Good Morning Sam!\" said a loud voice and from my left I saw Denise, in her sprayed-on clothes and her perfect Higgins figure looking fine this bright sunny morning. I had watched her on and off for most of the night, hopeful that she might meet someone to slow dance with and like me, find someone with whom she might 'break her sexual fast' as it were. She had been on dates with a few blokes but nothing to write home about. \n\nWorking busy Monday to Friday weeks and occasionally going out with Denise, or parties at Mike and Mel's place we were both yet to find someone to party with on a more individual basis, but much as we both encouraged the other, we'd both had some bad experiences with men and in retrospect it's easy to find faults with a fella after you've had a real fucking peach of a bad one.",
        "A circling waiter pulled out Chrissie's now empty chair next to me and Denise sat, holding up an empty coffee cup for him to fill, and she sank it almost in one, holding it up for a refill. Once he had he returned with a full service to re-lay her place at the table she smiled at him and asked for a grapefruit half.\n\n\"Den,\" I said, hoping to hide any tone from my voice, \"you remember Dave from yesterday?\"\n\n\"I certainly do,\" she smiled at him, \"a fantastic party don't you think?\"\n\n\"It was a triumph,\" said Dave.\n\n\"Once he could get in...\" I said hiding my smile behind my coffee cup.\n\n\"What?\"\n\n\"Les...\" I said simply.\n\n\"Oh fuck,\" she said forgetting our company, \"what did he do this time?\"\n\n\"You remember he wanted to invite half of the club and all of his mates don't you.\"\n\n\"Yeah, and Izzy fucked him off quite nicely I thought,\" she said.\n\n\"But he arranged for Brian and Carl to do the door and err... they did.\"\n\n\"Fuck.\"\n\n\"Precisely.\" I pointed across to Chrissie on the adjacent table, \"and because some silly bitch and her gorgeous daughter left Dave off of the guest list, they decided anyone not already in the hotel must be a gate crasher.\"\n\n\"That's what the police car was for!\" said Den, her mouth dropping.\n\n\"Yeah, that was the gruesome twosome...\"\n\n\"And me...\" added Dave.\n\n\"And Dave...\" I grimaced, \"Brian and Carl were being whisked off to the police station for pushing lovely young Chrissie down the stairs.\"\n\n\"Bastards!\" she said and looked to Dave, \"what happened to them?\"\n\nDave wiped his mouth with his napkin,\n\n\"They were dropped off at the railway station to get a train back to London. That really pissed them off because the Dad had been breathalysed and was over the limit, and they wouldn't let the son drive because it turned out he was banned from driving and didn't even have a licence.\"\n\n\"What about their van?\" I asked hoping that the scabby and beaten white Ford Transit that Brian habitually drove wouldn't be left in the car park for too long and lower the property values in this lovely area.\n\n\"The policeman impounded it because he wasn't convinced that all of the paperwork for it was quite... shall we say... kosher? As I was getting into the taxi to come here, I could hear him arguing with the policeman and threatening to call his MP and saying that it was a breach of his human rights. The copper said if he had anymore shit from the pair of them, they could walk to the railway station.\" Considering the shitty afternoon he'd had the previous day his smile was still quite large and very genuine, \"The whole episode altogether cheered me up and by the time I got back here I was calmed down and ready for a party.\"\n\nDenise and I both laughed.\n\nDenise's grapefruit arrived and any cute discussion Dave and I might have had was brought to a stop. More family arrived and the chatter became far more general and finally our grown-up children started to arrive, looking very bleary-eyed and only interested in tea and coffee and light breakfasts before they all headed for the pool.\n\nAs the dining room filled Dave announced that it was time that they both went home, Amy's ride home already assured by her cousin Julia. Even my Ray appeared and along with his younger cousin Denise's son Rory they all trooped off to the pool, about a dozen or so, all in good company and excellent humour.\n\nDave had brought his few possessions down with him and with a hand on Chrissie's shoulder and offering his other arm to me we walked to the car park now much depleted from the previous days fullness, especially the gap where Brian's crappy white Transit had been parked, only the marks of it being dragged onto the police wrecker and the large, ugly but solitary oil stain indicating that it had ever been there.\n\n\"So Sam,\" he said as he reached his Toyota pick-up and opened the door for Chrissie to get in, \"I'll... can I have your number?\"\n\nI smiled, nodded and took my phone from my back pocket and handed it to him, swiping my fingerprint on the scanner so it opened. He typed in his number, rang himself, cancelled the call and that was that.\n\n\"I'll call you,\" he said, \"Promise; Wednesday or Thursday is best for me, that OK for you?\"\n\n\"Thursday would be perfect,\" I said taking my phone back and happy that his son couldn't see I leaned in and kissed him, properly this time. It was very nice.\n\n\"Until Thursday Sam,\" he said with just the biggest grin, then slipped into his truck.\n\nI stayed in the car park grinning back to him like an Idiot and waving coyly to his rear-view mirror, turning and Higgins-stalking back to the hotel hoping he would see my sexy wiggle. As it happens he did.\n\nBack into the hotel, I went back to my room and packed my stuff back into my case and with a final check, pulled the door closed and headed downstairs delivering Izzy's bags to Paul for safe storage until they came home.\n\n\"Get you Sammy!\" said Den as I stopped in the foyer with my case for a final cup of tea and some elevenses cake, and goodbyes to my family and Ed's.\n\n\"What?\"\n\n\"You and Uncle Dave, you were all over each other!\"\n\n\"You noticed?\"\n\n\"Hard not to lovey!\" she said with a grin.\n\n\"Yet you still sat at our table this morning Den, cheers mate.\"\n\nDen put a hand to her mouth,\n\n\"Shit! Sorry mate, I just thought...\"\n\n\"Don't worry, he's taking me out to dinner on Thursday.\"\n\n\"Yeeees!\" she said punching the air, \"What you wearing?\"\n\n\"I don't know!\" I said lightly flustered, \"I'll...\"\n\n\"I'll lend you my little black dress, you'll knock his eyes out in that. Balcony bra and pantyhose - no panties, just in case you want to...\"\n\n\"Bloody hell Den,\" I said with hissed whisper, \"We're only having dinner.\"\n\n\"Dinner, yeah,\" she frowned and raised her eyebrows, \"but you forget big sister, I watched you and him dancing last night, and you seeing him off in the car park. Make sure you have condoms with you.\" She hugged me around the shoulders and kissed my cheek.\n\n\"Why would she want fucking condoms?\" said a grating, suffering but still familiar voice.\n\nDen spun round at the bleary-eyed, unshaven fuck up of an ex-husband of mine, still wearing his stained shirt, trousers and shoes from the day before, hands on hips and his bulldog chin sticking out self righteously.\n\n\"And just what the fuck business is it of yours what my sister does?\"\n\nThe idiot Ex folded his arms and stepped up and into the fray,\n\n\"Well,\" he said, causing Den to flinch away, not because of his demeanour but from his breath, foul enough to strip paint.\n\nHe saw this backing off and figured that it was a retreat but no.\n\n\"Good Morning Leslie!\" said a bright, chirpy but slightly threatening voice that dropped a heavy hand down onto the Idiot's shoulder and causing him to flinch a bit now. It was Mike our big brother looking tall, tanned and muscular and towering over his former classmate and one-time brother in law, \"All OK mate?\"\n\n\"Err...\" said the Idiot Ex trying to extricate himself from between Denise and Mike.\n\n\"Hope so mate,\" he said, \"because as I've always said... if you have a problem with either Denise of Samantha then, effectively...\" he took a deep breath and sipped from his glass of orange juice, \"then you have a problem with me... you know?\"\n\n\"No problem Michael!\" said the idiot adopting a more familiar tone with his former brother-in-law, \"just nice to see how everyone is getting along.\"\n\n\"And moving on!\" said Den.\n\n\"Yes, and... erm... moving on.\" He gave me a stern look hoping that no one saw, but of course everyone did.\n\n\"I do hope you aren't attempting to put pressure on my sister at all Les,\" said Mike.\n\n\"No such thing Michael, Sammy has made it very clear that I got nuffin' to do wiv her life, an' I'll stick by that.\"\n\n\"Just see you do mate,\" said Mike with a threatening smile, patting Les on the shoulder with just enough force to let the entire ensemble know that it was way more than a friendly gesture.\n\nThe Idiot Ex wandered off and we could hear his disgruntled bitching when told that breakfast, even brunch had long since finished and that yes, while he could wait for lunch but he would need to pay for it. That gave forth another long string of whinges and complaints at which point we all decided it was time to leave him to it.\n\nApparently he was finally all but dragged out of the place by his sister Fay, her husband and their adult kids - his nephews and nieces outrageously embarrassed by Uncle Les - again. \n\nUncle Les, the gobby one that they all talked about, the one that couldn't be in the room or at the same party or function as Cousin Jayne or her daughter Kylie because of... you know... \n\nUncle Les, the one that no one really trusted, the one that always had a scheme, was always trying for that elusive fast buck, the one they said would steal your teeth if you fell asleep with your mouth open.\n\nThis was proved yet again when they stopped him just walking out and doing a runner on the bill, then talked him through the checking-out procedure because he'd had the two miniature bottles of brandy out of the mini bar and had to pay for them. \n\nHe insisted that he hadn't, swore on his kids lives, but the sensors built into the minibar stated that the bottles were removed at eleven twenty one the previous morning ten minutes after he'd arrived to get suited up. Someone else must have drunk them he'd insisted, but again hotel security said that his key card was the only one used. He finished by saying that he was a whiskey man and even his sister Fay scoffed at that. \n\nSo the Idiot Ex handed across his credit card and duly paid the bill, but with very bad grace. Before he handed back the credit card the hotel staff member asked to see in the Gentleman's bag as he'd had a message that three of the four towels, both bathrobes, the hairdryer and the kettle were all missing from his room.\n\nFay rolled her eyes in embarrassment and her children disappeared into the car park.\n\nHe started with the 'it weren't me' gambit but everyone just looked at his bulging wheeled suitcase, far to big for a one person's one night stay. Les played up again insisting that 'everyone does it' and 'surely that kind of 'fing was built into their profit margin considerin' 'ow much they charged at the bleedin' bar', eventually ending with him laughing and saying that it was all a joke and he'd always intended to give it all back.\n\nHe asked why they had checked his room while he was still in the building. The assistant manager, the same man that had watched his 'professional door stewards' at work the day before, smiled,\n\n\"A random check sir; just a lucky guess.\"\n\nLes left the building with even worse grace and an empty suitcase bought especially for the amount of stuff he was going to nick and had the hotel's electronic security not been so good he would have doubtless gone into my room, Ray's, his sister's, and even his nephews and nieces rooms and had some of their stuff away as well. \n\nOther than his hotel room the wedding didn't actually cost him anything, but he still felt he needed to make up for the expense of the shit present he'd bought for the bride and groom (towels!? From the father of the bride!?) his shit suit which was bought second hand from his friend Brian for 'a pony' (\u00a325 - but he still had to buy a tie) rather than rent the morning suits all of the other men had gone with, and then there was the cost of the petrol to drive here, and the cost of the few drinks he had to buy that were more expensive than The Club, but not by much. \n\nThe biggest loss wasn't his though. He'd read and re-read Brian's text message that his van had been impounded from the hotel car park and had already been crushed because while there was a 'Ministry of Transport test certificate' issued to the van with that registration number and an insurance certificate, THAT white Ford Transit van was parked in a builders' yard in Sevenoaks in Kent and had lots of police complaints that the number had been cloned. \n\nThis had made the quite suspicious policeman very suspicious and was a direct result of Brian's refusal to pay to park or even consider the congestion charge. A swift check of the police computer meant that the heart of a slightly dodgy livelihood was now crushed to the size of a small steel box in an authorised scrap yard because it had a completely different vehicle identification number on the engine, the registration for which was still a white Ford Transit but one that was six years older and that hadn't been taxed, MoT'd or insured in the last four.\n\nBrian told the policeman that 'I bought that van in good 'faif din' I - from a bloke in the pub - 'fer cash like...' who had promised to send on the log book 'as soon as 'e could find it' and his son did the road tax on his computer like and did the MoT test regular every year but couldn't rightly remember where he had it done this year, three months before. The policeman had looked at lumpen Carl and really doubted that the nose-picking epsillon semi-minus moron could do little with a computer other than steal it.\n\nThe policeman wouldn't be drawn on whether he believed Brian or not, or the quality of his memory and his insistence that he always 'paid cash for everyfin' and din't have no use for cheques or credit cards coz they weren't safe'. \n\nThat quote made the policeman smile but he struggled to find anything legally to do to the extremely dodgy father and son duo who both had criminal records as long as their arms other than take the van, so he did just that.\n\nSo the Idiot Ex now felt that he was indebted to his best mate, more so because his best mate's son Carl was 'sixpence short of the full quid' and had a bit of history of... shall we say... 'losing his temper'; at least that was what he told the magistrates.\n\nI drove home and unpacked, opening my phone and saving the last number called as 'Uncle Dave'. I watched a movie, had an early night and read my outback porn, wanking myself to sleep with visions of Dave grabbing me and pulling me into his barn and screwing me to orgasm over his hay bales.\n\nI went back to work the next day and there was Den with a suit bag and a big smile.\n\n\"This is the one lovey,\" she said across the empty room that would soon be filled with children, \"if this doesn't do it, then he's gay, or at the very least short sighted.\"\n\nI took it home and tried it on. Denise was right of course, it looked fantastic and any form of underwear other than a bra would have left a line so I put black pantyhose on my shopping list and bought them the next day.\n\nOn Wednesday afternoon, I had a thump on the door. I wasn't expecting anyone and thought it might be a parcel for one of my neighbours. I opened the door and there was the Brains Trust - Brian and Carl.\n\n\"Les says we was to pop round and make sure that you remembers that marriage is for life,\" said Brian with a sneer and folded arms. He wasn't THAT much of a gangland enforcer, for as soon as I raised an eyebrow, he couldn't even make eye contact with me.\n\n\"What?\" I snarled leaning against my door post and folding my arms.\n\n\"Les says he ain't 'aving you fuckin' around with no new boy and disrespectin' 'im in 'is own manor.\"\n\n\"What the fuck had it got to do with Les what I do and where I do it. Anyway since when has this part of the world been his manor, it's forty five miles away from his place?\" I was getting cross, \"And when did that brain damaged fuck think that he had a manor!?!\" The gangland enforcers took a step back as I moved to my doorstep.\n\n\"Fay's Nancy said she saw you dancin' wiv' some fella and Les 'eard 'ow you might be going out wiv someone and he 'doan like it,\" said Carl picking up on his Dad's lack of success. \n\n\"Like I said poppet,\" I said patting his fat cheek and using the same terms and tones that his late mother had, \"what the fuck does it have to do with Les?\"\n\nCarl looked lost, no one he'd ever threatened before had sounded and looked so much like his Mum, who might very well have been turning in her grave, \n\n\"Ee 'sez that 'cos you woz married he still...\"\n\n\"And the fact he was screwing around, including his cousins, that doesn't upset his delicate sensibilities then?\"\n\n\"Wot?\" said Brian and Carl at the same time. 'Sensibilities' was obviously a bit of a stretch for them at that time of day.\n\n\"He was screwing his cousin Jaynie, then a few weeks later was screwing Kylie her daughter who then got pregnant - guessing he thinks that was alright, and I don't get to be angry about it that obviously.\" I shifted my weight into my other leg, \"you remember Carl, the kid must be five or six years younger than you.\"\n\nCarl's furrowed brow gave me a clue that he was considering this, the fact I had thrown in a number fucked his thought processes as if I'd given him two quadratic equations to consider. \n\nHe'd never completed his secondary education, being a regular truant and having assaulted the two maths teachers he'd had because 'they woz teachin 'im harder stuff than everyone else' pretty much did for any hopes of further education he might have had.  \n\nHe took a couple of level one courses while he was in the Youth Offender Institution and again tried to attack the rather nerdy tutor because 'I before E except after somefink din't make no fuckin' sense and woz just a load 'a shit meant to confuse 'im'. #it wouldn't have taken much after all.\n\nSadly for Carl the only thing nerdy about his English teacher was his blazer, and he should have paid more attention to the globe and laurel badge on the pocket - Mr Hughes had become a teacher after a career as an education officer in the Royal Marines, and after his initial spirited rush at the man Carl found himself on his back with his wrist locked halfway up his back with two black eyes and a broken nose for his trouble, as the teacher had stepped aside and the thug's own momentum had done the rest. \n\nThe small man went on to propel him out of the classroom and into the corridor with a prison officer walking ahead to move people and open doors, the last one being the emergency cell kept just for incidents like this.\n\nAs he smelled the disinfectant used on the floor close up, Mr Hughes suggested straight into his ear that Carl may wish to moderate his behaviour if he didn't want this kind of thing to happen again and that not all teachers were, as Carl had already suggested, 'fucking pussies'. \n\nWith a knee in the small of the mid-teen hooligan's back, Mr Hughes felt the necessity to point out that should Carl try something along those lines again the result would be similar with a slightly stronger and less serendipitous response that would see the young offender in the hospital wing and eating his meals 'through a fucking straw'.\n\nCarl had never considered education again and his look suggested that he had tuned out of the discussion as soon as I'd mentioned a number. \n\nI looked at Brian again,\n\n\"Well does he?\"\n\n\"Does he... what?\" said Brian as equally lost as his son.\n\n\"I don't care what Les thinks, and he only sent you because he's scared of my brother the para.\"\n\n\"I ain't scared of no fuckin' para's\" said Carl back and tuned in to violence, a language he definitely understood.\n\n\"Well perhaps you should be Carl,\" I said with all of the maternal care I could, \"You got very badly beaten up by a Marine once after all.\"\n\nCarl looked very upset by that and looked at the floor, his bull terrier bottom lip protruding.\n\n\"Well,\" said Brian and added some emphasis, \"Les says...\"\n\n\"Les can say what he wants Brian,\" I said, \"I ain't his missus, and haven't been for fifteen years, I have a decree absolute to prove it, still my all-time favourite court document.\" I watched them both look even more uncomfortable with the words 'court document' than they had been with the subtraction of six from Carl's age, and I went with it, \"I framed it and it hangs in my downstairs toilet, hang on I'll get it...\"",
        "\"Errr...\" \n\nI guessed I had stretched their joint mental abilities to the limit so just smiled,\n\n\"Go back and give Les a message for me,\" I said.\n\n\"Well,\"\n\n\"Do you have a pen? I said. Brian patted himself down, he obviously didn't have one - in the same way he didn't have a microscope, telescope or stethoscope - he wouldn't know what to do with any of them and I doubted could write his own name. \"Wait there, I'll get one.\"\n\nI got a pen and a small piece of paper from the notepad on the table near the door and wrote down five words.\n\n'Les, \n\nGo fuck yourself.\n\nSam.'\n\n\"Give him this,\" I said stepping down to the street, the look on my face making the pair of Pound Shop gangsters move away, \"and tell him that if he so much as sneezes in my or any of my friends' direction I will cut off both of his testicles and fry them with onions and then tear his undersized penis from his body without anaesthetic; that's before I give what's left of him to Denise and then Mike.\"\n\nBrian looked at Carl and Carl looked at Brian - this whole threatening with menaces shit wasn't as easy as it looked on the telly, their victim looked fucking terrifying not terrified.\n\nThat night the Idiot Ex rang me, and I was about to disconnect the call and then bar him from calling me again when I just gave up and answered it.\n\n\"What the Fuck is this note about?\" he said, trying to sound intimidating.\n\n\"Oh good,\" I said, \"You found someone to read it to you.\"\n\n\"What you mean?\"\n\n\"Just get on with it Les,\" I said.\n\n\"Well...\" he started slowly, \"You're still my Missus see an'...\"\n\n\"I'm not your Missus.\" I snapped shutting him right down, \"We divorced fifteen years ago Les, or did you forget that?\" the line was quiet, \"Oh come on!\" I said brightening my tone, \"you MUST remember! You were fucking everything that moved including your own family and I wasn't, even though you said I was!\" I added a very false giggle, \"You gave me an STD and I threw you out... Oh! I remember it like it was only yesterday!\"\n\n\"Yeah,\" he paused taking a breath, \"Yeah... well...\" he said jumping straight back in, \"In... In the eyes of God we're still...\"\n\n\"GOD!?\" I snapped, \"bloody... GOD!?\" I all but howled in disbelief, \"We got married in a fucking registry office Les, REMEMBER?\" I snapped back at him, \"you said it was because I was pregnant and you were a Catholic, but really it was because you and your cousin Joe had screwed the Church Hall and had most of the lead off of the church roof the year before and you thought the verger recognised you and might go to the police...\"\n\n\"I'll... I'll...\"\n\n\"You'll what Les?\" I said, \"send round the gruesome twosome? You already tried that and they both ran away from me. From ME Les!\" I snarled, \"Remember that it's ME you're dealing with, Tommy Haymer's daughter! Remember that? I spent the first 16 years of my life living with a nastier bastard than you, and dumb and dumber and most of your mates will ever be and I don't scare easy Les; and you so much as scratch the paintwork on my car and they'll be digging up bits of you all over South London for the next twenty years!\" \n\nThe line went quiet. It was all shit, but Les never knew that. No one in my family had any dealings with what was left of my Dad's motley crew, let's face it even the younger ones were likely to be in their late sixties. But the threat was still a credible one, especially with the Idiot Ex who just lapped up all that gangster shit.\n\n\"Well,\" he mumbled, \"It... it still ain't right.\"\n\n\"Oh we're doing what's right and fair are we? Well if you think that we're still in some sort of relationship then it's OK, because you were fucking lots of people while we were actually legally married, so if I screw someone while we're divorced then we're equal! That's fair isn't it!\"\n\n\"I tol' you all that was...\" esteemed bullshitter that he was even he couldn't rationalise that, and I was expecting a Donald Trump 'fake news' claim but I doubt the Idiot Ex even knew who he was, coming in with a, \"Yeah, well I did say sorry...\"\n\n\"Fuck off Les,\" I disconnected the call.\n\nDave's car arrived on the dot of seven o'clock and I walked out to meet it. While I'd looked pretty good at the wedding, tonight I was HOT! Even I, my biggest critic, thought so and I Higgins-stalked across to his car again and he grinned. My gently tanned skin from the late holiday I'd bought for Izzy, Den and me before the wedding was on display with my shit-hot cleavage that I'd spent ten minutes arranging was better than I'd hoped for; he struggled to tear his eyes from it and I made sure that it was pointing at him as often as possible. Mind you, in his dark suit and silk shirt, with just the right amount of aftershave I was pleased with my view as well.\n\nWe both went straight for the banter seeing the effort that the other had made, and we had a nice drive the ten miles out into the country and the great restaurant he had chosen. He'd gotten a very cosy booth which meant that we had the best of both worlds and could make eyes at each other and still be close if necessary. The food was wonderful and my very first meal of that kind of quality and sophistication and he was so attentive, something no man had ever been before. Our chat was honest and open about our lives and became more tender as we seriously got into each other.\n\nOver coffee our mutual attraction was so evident that we slid closer and just grinned at each other, words quite unnecessary as he took my hand under the table. It was so romantic that I leaned forward for our first real kiss. I took his hand under the table and placed it on my leg and soon he was stroking my thigh and I moved so it would be easier for him to do so. We kissed passionately, our booth allowing us to do it in private without disapproving glares or stares and we were touching each other.\n\nAfter a third cup of coffee and his massaging of my inner thighs I was close to sliding off my pantyhose under the table when the waiter arrived with the bill.\n\nBastard. I was so fucking horny - like I never had been before ever!\n\nDave paid and I stood, managing to pull down my stretchy dress so the world wouldn't see my arse, and we were thanked for our custom and wished a very good night. It had been going rather well for me already!\n\nHe drove me home and parked,\n\n\"Would you like to come in?\" I said, boldly placing a hand on his thigh, inches from the erection I could see fighting within his trousers, and he flinched just a bit but slid across to kiss me.\n\n\"I so want to Sam, but I have a sitter that needs to be home by one...\" he took a deep breath, \"look, err... what are you doing this weekend?\"\n\n\"Nothing,\" I said, kissing him again.\n\n\"Come to my place, out in the country, bit of fresh air and...\"\n\n\"And fresh Dave!\"\n\n\"Oh yeah,\" he kissed me this time.\n\nEventually I was the one that looked at my watch and told him that he needed to go. He promised to text me instructions on how to get to his place and after a final heart stopping kiss through his open window I pushed myself away and waved him off, and had one of those Cher 'Moonstruck' moments walking back to my flat.\n\nI worked through that Friday like it was at double speed. With Denise over a lunchtime coffee we chatted about what I was going to do seeing as how we had so heavily petted the night before. Denise was all about what I should shave and what undies to wear while I was way past all of that. I had already packed my bag at silly o'clock that morning while I lay awake after a great naked and noisy masturbatory come, something I had had really gotten into since the departure of my daughter for her own place and the 'Fifty Shades' books she gave me a few weeks later. \n\nMy excitement was amazing, I was going to spend my first weekend at Dave's farm; well, I call it a farm, according to Dave it's a smallholding - I really can't tell the difference to be honest but at that farm... or small holding... I was going to be staying, and sleeping, with Dave. \n\nThe early chat that we had over our meal he told me that he has a small flock of sheep for lamb and mutton, four pigs, one of which was pregnant and expecting another litter of little porkers that would keep Dave and most of his immediate family in pork, bacon, ham and sausages for the foreseeable future. There was a whole mess of chickens, ducks and geese and that kept him supplied with eggs and meat for his table and then there was the three cows that did for milk and cheese, and every couple of years beef. \n\nLike I said, a bloody farm. I'd read a few chapters of my Australian outback rancher book for the final orgasm that eventually put me to sleep.\n\nIt was amazing that he had time to do any kind of work other than look after his livestock, but his Father-in-law lived locally and was around and helped out regularly, most days in fact. He had told me that the old boy was often there, but it wasn't by way of a warning.\n\n\"Ol' John is great,\" said Dave spreading his pate, \"he's really close to Chrissie, always has been but more since Paula died, they have the greatest relationship, it's fantastic to watch.\"\n\n\"Will he be OK with me Dave,\" I said, trying hard to keep a smile on my face and thinking that Dave's late wife's Dad might not be the ideal person to have around while I was hoping to seduce and be seduced by his son-in-law.\n\n\"Yeah, he's a really nice old boy, and he'll just love you.\"\n\n\"So long as you're sure.\" I said trying to hide my concern.\n\n\"Certain,\" said Dave.\n\nSo as I stretched slightly against my seatbelt, I motored slowly down the country road thinking on this first weekend at 'his place'; OK we had messed around in the restaurant and in his car but this was going to be proper, full on... full on what I hear you ask, well... sex I figured.\n\nYes, we'd had dinner, heavily petted in his car and everything but that thing; intercourse, sex, making love, screwing, shagging, a good fuck, we still had to do that and fucking hell I was looking forward to it. The Sammy of twenty years ago would have pulled off her tights and climbed in the back of his car and gone for it, but it hadn't some shitty pub car park or recreation ground, it was a rather well lit street in a very nice part of a Surrey market town.\n\nI saw the balloons he'd promised to put on the appropriate signposts and turned, my SatNav working quite well, and eventually there was the first dark green five-bar gate he'd told me to look out for.\n\nIt was amazing, what I thought was going to be some ramshackle collection of outbuildings was a glorious farmhouse with several large barns and buildings all surrounded by any number of hedged fields with animals moving around in them. There was the second five-bar gate and I slowed and stopped the car, stepping out to open it, then drove through to close it again after me. The big sign 'please shut the gate' was the big give-away there. In moments there was Dave, looking good in his jeans and a T-shirt with a big grin on his face,\n\n\"Sam!\" he shouted across the farmyard to me and I returned the big smile. Leaving my bag in my car I ran to him.\n\nWe kissed long and hard and the second we broke for breath he lifted me into his arms and carried me through to his house and into his incredible kitchen. It was the kind of place that you saw in TV programmes with a real kitchen table and he dragged out a chair and lowered me into it, kissing me again before turning to his work top and switching on a kettle.\n\n\"Wow Sam, you look incredible!\" he said. I had gone with my favourite stretchy blue jeans and a fitted top showing all of my curves to their very best and Dave obviously approved.\n\n\"Not looking so bad yourself Dave,\" I replied with a blushed giggle.\n\nWe sat at his table chatting the inconsequentialities of what had happened since the night before. I felt something touch my leg and looked down to see a very long canine nose and the black flappy ears of black flat-coated retriever. I'd always loved them but we could never afford a dog when I was young and the Idiot Ex never trusted them.\n\n\"You've met Russ!\" said Dave and at the sound of his name the dog plunked a large wide furry paw onto my thigh and his long tail started to wag energetically.\n\n\"Hi Russ!\" I said and still with his bottom on the kitchen fireplace rag rug, he raised both front paws, held them in the air for a few moments before lowering them onto my lap, gently pressing down and raising himself up to lick my face, all in a matter of seconds. It was sooooo cute!\n\nWe became very good friends and I proceeded to feed him bits and pieces of the cooked pizza that Dave had placed on the table the moment after I sat down. Next there was a plate of oven cooked chips with a spicy ketchup and I was having just the greatest time even though I was still just in his kitchen.\n\n\"Where's Chrissie?\" I said, sipping the lightly chilled Ros\u00e9 wine he'd brought out.\n\n\"He's with John in his campervan,\" he said with a big smile, \"they're probably stopped somewhere up in the Welsh valleys, a place close to both of their hearts.\"\n\n\"Not...\"\n\n\"Not because of you Sam!\" he grinned holding my hand across the table, \"well actually it is because of you, John said that you and I should have our first weekend alone without him or Chrissie around to mess things up for us!\"\n\n\"Really?\" I squealed, in part embarrassment part joy. His lovely family really wanted to give me and him a bit of chance to the point that they were leaving us alone for a couple of nights!\n\nWe ate more food, then he walked me around his farm showing me all the animals in their fields, barns and byres, before he put them to bed for the night. I looked at his barn and saw a large stack of hay bales! As the half-moon crept up into the sky he stepped up behind me as I stared down into the duck pond, and slipped his arms around me resting them on my belly. It was so nice!\n\nI then realised that it wasn't only the animals that he was going to be putting to bed this night.\n\n\"Are you sure you're OK with this Sam?\" as he pulled his bedroom door closed.\n\n\"Yes...\" I stuttered stood by his bed, \"Yes! Just a bit nervous if I'm honest.\"\n\nDave sat on the bed and pulled me to sit down next to him.\n\n\"Sam, you're a gorgeous, sexy woman and you have nothing to be nervous about! We're just sharing a bed, if you don't want to... do anything, then...\"\n\nI had to get it off of my chest,\n\n\"Dave... I... it's just I...\" \n\nHe kissed me, and it took my breath away,\n\n\"Like I said nothing to be nervous about.\"\n\n\"Dave, I... I... haven't had sex with anyone in fifteen years almost.\"\n\n\"OK,\" he said with a shrug of his shoulders, \"five for me, anything else?\"\n\nI grinned at him,\n\n\"It's just... I was never very good at it and...\"\n\n\"Let me be the judge of that honey.\" He smiled at me reassuringly, I thought I might melt!\n\n\"And Dave?\" He nodded and raised his eyebrows, \"Just before I kicked out Les, he gave me Chlamydia... all of those slappers he was shagging probably... I was treated for it and declared all clear but if you don't want to, or want to use a condom...\" I picked up my handbag and routed through it for the pack I'd bought in the supermarket early that day, \"I won't be offended hones...\"\n\nHe shut me up by gluing his mouth to mine and leaning back onto the bed pushing me flat under him. Next thing I knew his hands were at the belt of my jeans, then the button, then the zip, \n\n\"Lift you bottom for me,\" he whispered breaking our kiss and I did so, helping him pull my thankfully stretchy jeans down past my knees, holding them so I could pull my feet free of them. His mouth was still locked to mine as all this was going on, and I had my arms around his neck stroking his hair and his face.\n\nI did break our kiss if only to gasp, quite simply when he laid his across hand across my cotton string panty covered pussy and gave me just the gentlest squeeze, and far from the nervous first chatter, I was pushing my crotch up and against his grasp.\n\nFuck but it was hot and I was more turned on than I had been in my life before ever!\n\n\"Ooh Fuck yeah,\" I gasped into his mouth, my whole body trembling to this excitement, and I felt my nipples stinging, hardened as if they'd been frostbitten. \n\nDave let go of my puss for a second, and with a whispered 'hold tight' dragged me up so my head was resting my on the pillows. He lay his weight on me and we snogged outrageously and despite my concern that 'I wouldn't know what to do' after my years of celibacy then masturbation, soon I was hands all over him copying his hands all over me. \n\nHe pulled up my T-shirt kissing my still mostly flat tummy, then up to my bra that matched my tiny panties so well, kissing all the exposed flesh he could reach before he pulled my shirt over my head and settled his lips back on mine. Our kissing become more sensual and he gradually covered my face in tiny teasing pecks that stoked my already lit fires, and next he was kissing his way along my jawline, my neck, moving lower to my shoulder, and my now flushed chest, reaching his hand under me to squeeze and unclip my bra and I felt my full bosom relax and I panicked that he wouldn't approve of my big mature tits.\n\nNo such worry, his teasing pecks became sucks, licks and small bites, stopping to feast on my rock hard nipples. From the burn in my groin I just knew that I was ready for him and figured it was about time that I got in on the action and reached down to the front of his jeans. But I couldn't reach!\n\nHe was kissing lower and lower, and I felt my stomach muscles flex and tighten as he kissed the soft and tender flesh that had never been touched like this before ever and as his weight lifted from me, I felt my panties being inexorably pulled down my thighs and his mouth kissing to the thin strip of pubic hair that Denise had nagged me into having waxed the day before our midweek date. I had left work early and had scrubbed myself 'down there' because of my worry that there might be some smell, but this didn't worry Dave who was very gently raising and spreading my thighs so he could get his lips and tongue to this place I had so worried about.\n\nI cried out as he swiped his rough tongue along the groove of my labia, stopping to force its way up and into the shrouded hood of my clitoris that had only seen some fingering and electric stimulation since the kids had grown up and moved out and I was left alone with my thoughts, hormones and any number of mummy porn books that did the rounds. While I had beat myself off quite a few times it was nice and sexy and ended in orgasm but shit, nothing even close to this!\n\nAs he tongued my wet pussy it was just as a prequel to his long finger sliding into me and fiddling with my clit, my pussy lips all before sliding into me as far back as my cervix and my G-spot that he rubbed to fuck, so much so that my hips were pushing up and into his face as my first orgasm with a man came thundering through my body ready to implode.\n\nJESUS FUCKING CHRIST!\n\nMy warbled and gasped embarrassed encouragements of 'oh yeah', 'just like that' and 'please don't stop' gave way to long, high pitched warbling cry as I came to orgasm, my pussy pressed hard into my lovers face as he gave me about five seconds to recover before taking me there again, my cry modulating as he licked and picked and strummed my sex like a virtuoso.\n\nIt wasn't until I felt him kiss his way back up my body that I caught my breath and looked down at his smug wet face smiling back up at me that I realised that in the midst of all of that sexual pleasure I was naked and satisfied on his bed while he hadn't so much as taken his socks off!\n\nHe rolled to his side laying a warm hand on my tummy, and drawing his handsome face level with mine, he smiled that wonderful warm smile of his at me,\n\n\"No sex in fifteen years? Really didn't seem to be a problem, especially once we reached your second... or was it third orgasm, and as for chlamydia, well I couldn't taste it...\"",
        "I bit my bottom lip and rolled towards him, kissing his still wet lips tasting, I guessed, vaguely of me. \n\n\"You cheeky bastard!\" I giggled, \"now for the final test, you really need to take some clothes off and fuck me.\"\n\n\"Really? All of that not enough?\"\n\nI shook my head and undid the buttons on his polo shirt,\n\n\"Sorry Dave, there's still the final test that all of the equipment is still working and that means you getting you gear off and getting up me, a bit sharpish if you don't mind.\"\n\n\"Oh, Well if you say so.\"\n\n\"I absolutely insist Dave,\" I kissed him again before manhandling his shirt over his head and making a grab for his belt and trouser fastening.\n\nWithin seconds he was as naked as I and I was pulling him over me parting my thighs and feeling his erection pressing against me. I thought about my condoms in my bag.\n\n\"I'm not on the pill Dave,\" I said.\n\n\"No worries, I had the snip years ago, so...\"\n\nThat was all I needed to hear and pulled him up so his hard cock was where it needed to be and with a single hard thrust from him and a single 'oh fuck yeah' from me he was inside my sopping swollen puss and fuck wasn't he 'in me'. Having never had any other penis in me other than the Idiot Ex, to feel Dave be not only the first but had to be at least twice the size of the last and was soon establishing the most wonderful rhythm, sawing in and out of me and bringing me to a climax I hadn't seen coming.\n\nI hugged him through it, gasping in my pleasure, hissing a few 'Oh God's into his ear as he fucked me blissfully and wonderfully, his hands over my tingling, goose-pimpled body. \n\nBeing on my fifth or sixth come while he was still not on the scorecard, I hugged him tight and squeezed him with my thighs encouraging him to fuck me and to fuck me hard, crying out my pleasure in the same way I had with the Idiot Ex when I wanted him to finish quick so I could go to sleep.\n\nOnly when it had been with Les there was no real pleasure to it - it was just a very simple climb over me, stick it in and screw me 'til he came and waddle to the bathroom; it was OK but nothing like the thrills I was getting from my new lover, and all that happened this time was that he did just what I asked him and fucked me harder and I came again! Evidently that was enough and I felt Dave grow the tiniest bit, then growl and groan as his orgasm took him and I felt the hot jets of his pleasure splash around inside me.\n\n\"There,\" said Dave carrying out his final gentle thrusts to bring us both down and brushing my slightly damp hair back from my face, \"that all seemed to work OK.\"\n\n\"Brilliantly,\" I said kissing him on the nose, feeling just the greatest emotion and affection for my tender and passionate lover.\n\n\"You were fantastic Sam,\" he said kissing me again, \"your body is soooo fucking sexy it was all I could do not to come.\"\n\nI fabricated a look down my naked body, as he slid to one side of me. \n\n\"What, this old thing?\"\n\n\"Oh come on Sam,\" he said grinning and so very gently resting his chin on the slope of my breast, \"you're fucking gorgeous,\" he rested his hand on my still tender pussy, so wet and flushed from his attention.\n\nI thought about what Denise had said to me the week before when she loaned me her stretchy dress, about my hourglass figure and my tits that had defied gravity for so long.\n\n\"Not bad I suppose,\" I said wrinkling my nose a bit and leaning forward to kiss him on the lips, \"I have to admit that you seem extremely easy on the eye too David.\"\n\nHe smiled and leaned the few inches forward to kiss me back,\n\n\"We are obviously extremely good for each others ego's!\"\n\n\"And quite rightly, Dave...\" I said, \"that's the absolute best sex I've ever had.\"\n\n\"Seriously?\"\n\n\"Honest,\" I admitted with a cringe, \"never came through just shagging, Fuck what am I saying I never came with a man before,\"\n\nHe looked rather surprised if a little pleased with himself.\n\n\"Glad to be of service!\"\n\n\"OK, it was the best servicing I've ever had!\" I giggled. He laughed back and pulled me tight into his arms and we kissed.\n\nWe lay together kissing and canoodling for another twenty minutes until I needed the ladies room and excused myself. I felt slightly self-conscious about walking to the bathroom naked but figured that Dave had stripped me, suckled on my boobs before feasting on my genitalia so there really were no secrets between us.\n\nWhen I got back it was to find the bed turned down and my lover already tucked in and the lights turned down. I unzipped my overnight bag reaching in for my T-shirt nightdress.\n\n\"Cold?\" said Dave.\n\nI held it to myself,\n\n\"Force of habit,\" I said, \"don't forget my daughter only moved out completely ten months ago.\"\n\nDave smiled,\n\n\"How is she and my erstwhile nephew, have you heard from them?\"\n\nI explained that I'd had a postcard from them the week before but hadn't spoken as it were. \n\nI yawned,\n\n\"Come here,\" he said raising an arm, and putting my nightie on the chair I climbed under the thick duvet into his king size bed and felt him pull me into the loveliest cuddle.\n\nNow The Idiot Ex was never a cuddler while I definitely was; I think because of my distant, nasty father the rest of us - Mum, Mike, Den and me all cuddled for comfort, except for the rare occasion Dad was there.\n\nThe Idiot Ex would put his arm around me as an indication of ownership and outward display of affection - to everyone else. I had been hugged in the Club more times than ever at home, just because Les had wanted to send out a message to the rest of the clientele, especially the blokes, that Sammy was 'taken' and no longer on the market, untouchable. A slow arm wrapped around my shoulder was always nice, until I realised a few years after we were married that it was because he'd seen another man looking at me, not because he had any greater feeling for me at that instance.\n\nDave pulled me back into a spoons position and, other than sex, it was the first time I'd ever been held like that! It was lovely and I fell asleep really quickly. \n\nI woke next morning by myself in his large bed, still naked with a faint throb in my groin where I had come so many times the night before from my talented lover. I looked across at the bedside clock and saw that it was just a bit before seven and my predictable body had brought me round at work o'clock, just as it normally did every day of the week, including Saturdays and Sundays.\n\nDave was up and the huge bed felt even huger and it wasn't just a case of swinging my legs over to get up, in this king size I actually had to shuffle. I got up, used his ensuite again and put on the T-shirt from the top of my bag and walked down the stairs to the living room and through to the kitchen.\n\nAs I went, I saw that he had been up and I could hear noise from outside, Farmer Dave was up and at his work obviously. I filled the kettle and switched it on, before wandering across to the kitchen door to see him dressed in shorts and yesterday's polo shirt walking around with Russ cantering and dancing around him as Dave sang 'Something tells me I'm into something good'. He was obviously very pleased with himself and I guess that having some quite splendid sex with, even if I say so myself, a hot shapely MILF must have set him up for a good night's sleep and an even better awakening.\n\nI heard the click of the kettle and made two mugs of tea carrying both before me as I walked barefoot out into the large clean and clear farmyard.\n\nDave had just reached 'we only danced for a minute or two' line when he turned and saw me,\n\n\"Sam!\" he shouted in delight which had Big Russ bounding across the yard towards me dancing around me this time.\n\nI stopped, putting both cups on an abandoned milk churn before bending to greet my new furry friend. The dog got very silly and shy and walked around me brushing his big furry body against my legs while I rubbed his head telling him what a good boy he was.\n\n\"I've been a good boy too,\" said Dave closing the gate on the small enclosure that held his ducks and geese he had just walked into.\n\n\"Well come over here then,\" I said with a purr, dropping my weight onto one hip, then bending forward to blow him a kiss, \"and I'll stroke you too!\"\n\n\"But...\" he pointed at the animals before him.\n\nI looked around the compound happy that there was no one within two miles of the farm and surprising me more than anyone else slowly and with as much sexual energy as I could muster pulled off my T-shirt and hanging it from a gate post, to stand there naked as a jaybird. I picked up a mug of tea to sip from it quite innocently, enjoying the warm spring sunshine on my skin like I never had before.\n\nHe dropped his galvanised steel feed bucket and stepped towards me leaping the stone wall in one movement.\n\nHe came across to my and scooped me up and into his arms.\n\n\"Barn...\" I whispered to him. He looked at me a saw my grin.\n\n\"Russ, in your basket big fella,\" he said and the dog obediently trotted back into the farmhouse kitchen while Dave carried me to his large barn, kicking the door open stepping in and laying me down on a large pile of straw bales covered in green canvas.  \n\nLike my brunette outback lookalike heroine, I rolled onto my knees.\n\nHe dropped his shorts and knelt behind me and I felt his erection pushing against me, then in moments it was inside me and I was being fucked again, second time in less than ten hours and it was as fantastic as the night before, and just like the brunette I came, crying with the release. \n\nDave withdrew and turned me onto my back, lying across me and slipping back into me, it was just the loveliest feeling ever.\n\nMore than that, it was as romantic as it was sexy as Dave kissed me and stroked me, bringing me shuddering to my second orgasm of the day, crying out in tender agonies as he continued to pound in and out of me. I clung to him, desperate almost, desperate for another of those fantastic comes that he was such an expert in giving me and that I had never known before. Shit, how had I survived nearly eight years of marriage with that fucking Idiot when I could have been having sex like this.\n\nI heard mooing from the byre next door and it brought me back to just where I was. I was in a barn, on a farm in the middle of nowhere. OK, I'd had sex in cars, a few of which hadn't been stolen, and occasionally in a park somewhere but while it had felt 'a little bit naughty' this was... this was just amazing and I came again in delight, gasping and crying out in such joy that Dave smiled a perfect smile at me and then came himself, which seemed to surprise him.\n\n\"Christ Sam, like I said last night, you are SOOOO fucking sexy!\"\n\n\"Only when you are around Dave,\" I said feeling him give a last few soft thrusts just to finish off his, and my, pleasure. The cows mooed again, as if complimenting us on our exploits.\n\n\"Noisy bastards,\" he said kissing me, \"It's only because they're waiting for the man that does the milking.\"\n\n\"Milking?\" I said.\n\n\"Yeah,\" said Dave, \"A bloke will be here with his machine to do them in...\" he looked at his watch, \"Any time now in fact.\"\n\n\"What?\" I tried to push him up and off of me.\n\n\"I'm kidding!\" he said, rolling off of me and to one side, you've got at least six minutes before he gets here...\"\n\nI bashed him softly,\n\n\"Better go and put my T-shirt back on then,\" I pursed my lips and sat up feeling faint prickles through the canvas sheeting.\n\n\"Damn,\" said Dave picking up his shorts to follow me back out into the farmyard. I walked that funny walk that we girls have when we are trying not to let what our lovers have taken such an effort to put inside us run out but made it back to where my T-shirt was and pulled it over me.\n\nDave caught me up and picked up his as yet untouched tea which was still hot enough to be drinkable. He downed it in one, and pulled on his shirt kissing my cheek and walking back to his un-fed geese and ducks,\n\n\"Oh what a beautiful mornin', Oh what a beautiful day!\" he sang to the empty farmyard. I went back in giggling, sprinting the last bit to the downstairs bathroom before his efforts ran down my leg.\n\nGriff the milk man arrived while I was washing my hands.\n\nI showered and dressed and headed down to the kitchen just in time to greet Dave and Griff as that days paperwork was being signed and four cartons of milk were left on the counter top.\n\n\"Griff, this is my lovely friend Sam who's down for the weekend.\" Griff was a large strapping farm boy with very short dark hair and just the cheekiest grin.\n\n\"Mornin' Sam!\" said Griff with a big smile, looking me up and down and probably guessing exactly what I was down for.\n\n\"Morning Griff!\" I said, hoping that my cheeks didn't flush too much, \"Tea?\"\n\n\"That'll be lovely!\" he said and I got him a mug from the cupboard pouring him one from the pot I'd made.\n\nDave cooked me the most splendid breakfast and only the bread that he toasted hadn't come from his farm. The bacon, the sausages, the huge eggs, the mushrooms and tomatoes, the black pudding, even the butter was made from the cream from his cows and it was without doubt one of the tastiest plates of food I had ever enjoyed. It was improved by Dave loading in the plates into his dishwasher so we could enjoy another mug of tea.\n\n\"Don't suppose you brought a swimming costume by any chance?\" he asked.\n\nI only had a bikini, bought for the hen holiday and matching the ones I bought for Izzy and Den, and my tiny swimsuit - and being the same size Izzy had borrowed them both for her honeymoon.\n\n\"Err... no, I didn't know I had to!\" I squeaked.\n\n\"I totally forgot to mention it,\" he said slapping his forehead, \"becaaaaause...\" he pulled me up and across the kitchen and flung open another door that I hadn't taken much notice of the night before and that morning with a loud \"Taaadaaaah!\"\n\nThere was a kind of swimming pool, it was actually the local stream that ran through the centre of his garden that the previous owner had dug out and down and lined with large square stones and the ripples across the surface was enough indication that it was running water.\n\n\"Wow!\" I said, \"A pool! You never said!\"\n\n\"No, sorry,\" he said with a smile pulling me further out into what was obviously the family garden and separate from all of the farming activity that was going on just the other side of the house, \"What with all of the buzz and excitement I kinda forgot.\" \n\nI turned to face him,\n\n\"You forgot a twenty foot swimming pool?\"\n\n\"Thirty,\" he said with a grin pulling me into his arms and kissing me.\n\n\"Yeah,\" I said kissing him hard, \"more like you wanted another excuse to get me naked ALL weekend!\"\n\nHe looked surprised,\n\n\"What a damn fine idea!\" he said, undoing the buttons holding up my short shorts.\n\nI had to wiggle a little bit to get them down, but the slid down quite nicely to sit around my ankles and I had only to step out of them and did so. Next I pulled off my T-shirt and was stood bikini-like in my mid-blue string panties and matching balcony bra, he took my hand and walked me to a huge double bed sized sun lounger and suggested I lay down. I did so, and suddenly he was spraying a light sunscreen across me and I rolled onto my back to undo by bra and make the whole thing easier for him and I felt the delight as his strong fingers dug into my shoulders and carried out the most fantastic massage.\n\n\"There,\" he said, \"no more than ten minutes on either side, you should be cooked to perfection.\" \n\nI was so relaxed, but rolled to my back, slid down my panties and rolled back, flexing my buttocks,\n\n\"You missed a bit,\" I said and felt his strong fingers dig into my cheeks, getting that strange feeling of fresh air on my pussy and anus, then his oiled fingers were going other places and I felt him slip inside me, creeping up to my the back of my pussy being the first person ever to play with my G-spot and fuck didn't I know it. He brought me off twice before he opened a carton of orange juice so we could both chill out. I asked him what it was that he had been playing with and he told me going so far as to extend the discussion to my 'A-zone'.\n\n\"A-what?\"\n\nHe pushed me back on to the lounger and proceeded to show me, and I rolled on to my back and felt him use his fingers and tongue as he had the night before; only this time I felt his fingers and tongue touch my anus! Fuck but that was hot, and as I lay back clutching the backs of my thighs to make his access to my genitalia easier just the thought of that wonderful lover pushing his tongue at my anus, then his finger rimming me and making my whole body tingle!\n\nAfter my God-knows-how-many comes he slowed down to let me take a breath and pulled his finger gently out of my pussy and anus, and I came down slightly from the intense stimulation and caught my breath, as the final tremors rolled through me and I felt sooooo sexy. Although The Idiot Ex had often asked about \"doin' me up the arse\" it was never something I was interested in and no way was I ever going to let him do it. \n\nBut right now, here in his back garden by his pool and stark naked and following on from about a half a dozen orgasms I got up on to my hands and knees ready for him to take me again!\n\n\"Wow,\" I felt his knees go other side of mine and his prick slide into my sopping pussy and I groaned as he slid into me, pulling me back by my hips so I felt him pushing at the mouth of my cervix such was his size and my wetness.\n\nHe pounded into me and I prepared for my next come, and it didn't take too long for that to happen and I started a high-pitched warble interrupted by his thrusts.\n\n\"Oh Christ,\" I said, \"Dave, fuck me! Fuck me! Harder! HARDER Oooooooooh yeah!\" I felt my orgasm roll across me and I dropped my shoulders feeling him go even deeper. I gasped again, \"Dave, come baby, come in me!\"\n\nHe carried on thrusting harder, and that was all I needed and before I'd sneaked my hand down my past my swinging tits to play with my button I was coming hard as Dave pounded into me, my orgasm triggered his and I felt cock swell in me and the hard throbs as he came, his semen pumping easily into me.\n\nI felt him slip from me and I lay flat feeling a trembling in my thighs rolling to make room for Dave to lay next to me and he did so.\n\n\"I must go and wash my hands honey,\" Dave said, \"Can I get you anything?\"\n\n\"I'd love a glass of wine,\" I said feeling just so amazingly relaxed and fulfilled.\n\nDave was back in moments with a couple of glasses and an open bottle and he laid next to me and handing me the glasses so he could fill them. He did and we clinked sipping gratefully in a lovely calming moment, and according to the clock it was barely eleven o'clock. \n\nHe sipped more wine then rolled onto his back, sighing loudly and happily putting an arm behind his head. I rolled to my side and lay an arm on his chest.\n\n\"Wow Dave,\" I said stroking my fingers through the hair on his chest, \"that was just amazing, I've never had sex like that before!\"\n\n\"You're most welcome honey,\" he said taking my hand and kissing it.\n\nI tried to hide my giggles having never had so much romancing in my life before, and moved even closer enjoying the feel of Dave's hard and hot body next to mine and before I knew it I was asleep, woken only by Dave as the sun had moved around and we were both in danger of burning a bit.\n\nI woke and Dave took my hand, pulling me up from the lounger, and I stood slightly dazed and could do nothing to save myself as he pushed me into his freshwater pool! \n\nHe jumped in next to me and landed with a huge splash and I threw hand loads of water at him in some kind of revenge, wholly pointless because we were surrounded by the stuff anyway. Dave pinned me to the poolside and kissed me, the fun forgotten replaced by the kind of passion I'd hardly known. In the warmth of the water our tongues lashed the Jesus out the other, and I clung to him, wrapping my arms around him then my thighs, using the effect of the water to take my weight. Just as I'd hoped, his penis was hardening as it was squeezed between us and in moments just a slight shift of his groin had him inside me again, pushing hard into me pinned to the pool wall as I was and it was the most wonderful fuck and I cried as he came into me.",
        "\"Oh Dave,\" I gasped kissing his lips, his cheeks, his neck, all of his lovely face just to try and get closer to him. Once we'd calmed down he helped me from the pool giving me a towel to wipe myself dry, however I only wanted to get to the nearest bathroom before the result of our last effort ran down my leg. \n\nI made it to the bathroom just in time and managed to do what I needed coming back out into the garden to see Dave with a tray with sandwiches and mugs of tea and slices of cake. It had been three hours since our large breakfast but I was still ready for something else and I suppose that our hectic morning of lovemaking had certainly given me an appetite.\n\nAfter lunch I lay back on the sun lounger with some more sunscreen and topped up my tan, naked as a jaybird and glowing not only because of the effects of the sun but also the number of orgasms I'd had in the last twenty four hours, more than I'd ever had before in my life, let alone with one man. \n\nWe chatted some more and dozed until the sun dropped some and it was a bit too cool to lay there naked for much longer. I had a last swim in the pool before climbing out and drying with the towel he gave me earlier.\n\nWe went in and I took his hand while he led me to his bedroom and his bathroom where I showered and made up, putting on a nice dress for the evening. Dave who had been feeding and clearing out the animals, went in after me and came back out looking as nicely turned out as me. \n\nWe got into his car and drove out to dinner at his favourite local pub and we had a most splendid dinner having a few drinks at the bar and meeting some of his friends and neighbours, who were all really nice and I saw 'that look' in their faces that kind of said 'we really like Dave and we're happy that you seem to be making him happy' - at least that was how I read it. The pub landlady wanted to know all about 'us' and how long we'd known each other, if I was staying over at Dave's farm. Despite her interrogation I did feel really welcome and tried to put across that Dave and I were having a great time together and while we couldn't swear where it was going, I was going to hang on and see. After a wonderful evening we drove back to his farm and put his menagerie to bed.\n\nOnce they were done we went straight up to his bedroom and after stripping slipped into bed, content to just hold each other and sleep until the next morning.\n\nI didn't hear him get up and by the time I came round he was in the farmyard and Griff was there milking the cows. I woke up and made tea and appeared at the kitchen door with it in the same T-shirt I'd worn the morning before, and Griff looked at me and smiled, his thoughts of the day before confirmed, at least by the lack of a panty line under my T-shirt.\n\nWe went back into the farmhouse and could do nothing but grin at each other in a soppy stupidity. I finished my tea, stood and took Dave's hand, pulling him back to the bedroom where it was more fantastic lovemaking followed by a much smaller breakfast as he was taking me to back to his local pub for a Sunday lunch and that was just as nice, much nicer as there was no cooking in a hot kitchen and no washing up.\n\nAt a little after four o'clock there was the beeping of a horn and a tall campervan drove into the farmyard then after closing the gate drove into the large barn that Dave and I had screwed each other the previous morning.\n\nOut of the barn came young Chrissie, a beaming smile on his face in his pleasure to see his Daddy. After him came a very slight man in his seventies and I guessed this must be his Father in Law John, and it was.\n\nWithin seconds of me handing him a mug of tea we were firm friends and we were chatting about what a wonderful place it was and how glorious the pool was and how wonderful it was for a townie girl like me to spend a weekend out in the country with all of the fresh air and wonderful food. I never mentioned the incredible sex with his son-in-law of course.\n\nHaving spent most of Saturday naked I had a spare set of clothes and at Dave's insistence I stayed over an extra night, knowing that the farm would come to life in plenty of time for me to be able to get up, shower, have breakfast and still drive to work. \n\nDave even asked that I come back that evening with more clothes and stay the whole week. I was sorely tempted I must confess but did promise I would drive down in the middle of the week and stay over for a night. Dave seemed happy with that, and the next morning I woke with the first rays of the morning sun coming through his bedroom window, more than that his erect penis sliding into my pussy from the rear as he spooned me.\n\nI rose up onto my hands and knees so we could both embrace that wonderful early morning orgasmic experience of coming just as the sun came up. Shit but it was good, and I could still feel sensations in my groin as I slipped up into fifth gear for the thirty-mile straight run along the dual carriageway and into the town.\n\nI was first on site and opened the office and the playrooms, and Denise saw that I was still wearing my tight denim and T-shirt.\n\n\"Fucking look at you, you sexy bitch!\" said my younger sister.\n\nI grinned,\n\n\"Is it that obvious?\"\n\n\"Just a bit sweetie,\" she said smiling at me, \"you have that just-shagged shimmy about you, and you look like you've spent a fortnight on holiday!\"\n\n\"Well the just-shagged shimmy is perfectly right,\" I said and looked at my watch, \"Less than an hour ago in fact, and so many times over the weekend that I can't actually remember how many.\"\n\n\"Ooooh Sammy!\" she cooed, \"How exciting!\"\n\n\"Exciting isn't the word Den,\" I said, \"I've had so many orgasms my clit hasn't had time to cool down or calm down,\" I dropped my weight onto one hip, and smiled, \"which is why I have the just-shagged shimmy.\"\n\nThe 'just-shagged shimmy' was something that my sister and I, and a group of friends would refer to that funny walk that some girls have after a bit of a session; that self-confident hip swinging strut that told every other girl in the know exactly what an evening the girl in question had.\n\n\"Wowee!\" hissed Den, \"and he did it all?\"\n\n\"Christ didn't he,\" I said, \"He went down on me... four... I don't know or was it five times?\"\n\n\"SAMMY!\" hissed my sister in part shock, part delight. She paused, \"and was it good?\"\n\n\"It was fucking amazing Den,\" I said, stopped from explaining more by the arrival of more of the staff.\n\n\"I want details Sam,\" she said squirming a bit on her stool, \"I want dirty details!\"\n\n\"Even in his pool,\" I said, shimmying away from her to switch on the first computer.\n\nI was able to give her all of the details over a couple of coffees in the Starbucks up the road from the playgroup offices that afternoon and far from the 'dirty details' discussion that Den had demanded it was more of a grinning smiley chat of two women, one of whom was in a new relationship.\n\nI drove down to his place on Wednesday evening with clean clothes for the next day and I had dinner with Dave, Chrissie, Amy and Father-in-Law John. There was no drama and they all seemed fine with it, even pleased in the same way that the pub regulars had been.\n\nAmy said what a great time everyone had at the party and how nice Izzy was and, she smiled and paused, my son Ray. My Ray is an attractive and fun boy and I guessed that she was remembering the laughs and the banter from when he was an usher at his sister's and her cousins wedding ten days before. She joked about what a nice guy he was I said that I was bound to agree. She mentioned how impressed she was that he ran marathons. \n\nNow that was strange, he hardly ever mentioned that fact particularly to pretty girls and not when he was in company because people often reacted badly, either with piss-taking at his rather nerdy commitment to his sport or overly-gushing about his rather nerdly commitment to his sport. But Amy knew all about it and that he was due to run the Berlin marathon in a couple of weeks and was hard training for it. Even I didn't know that.\n\nBut along with Chrissie, John and Dave I gave her a hug as she headed back to the flat she shared with some other nurses for her six o'clock start the next morning. It was lovely and I got to know everyone just a little bit more, but the real testament of that night was that Amy, John and Chrissie saw us sat together and hugging, and eventually going to bed together. \n\nWhen we did we knew that we would make love again, stripping each other naked before he pushed me onto the bed on my hands and knees and fucked me quite royally from behind and I came again, enjoying a second orgasm moments later when he rolled me onto my back and we mastered the missionary and he came with me.\n\nI hadn't slept naked since I was first married and even then it wasn't something I really wanted to do. But now, with this amazing man that was an amazing lover I just wanted to be naked with him, still loving that freedom and the intimate contact when we spooned. I woke the next morning cradled in his arms at the moment his pushed his penis into me again.\n\nI drove back to work and Den's questioning look. I had to confess that on that we'd gone at it again, and again - and how wonderful it was.\n\nThe next night I was chatting with Dave on the phone when he said that one of the owners of a neighbouring farm had received a strange visit from some rough looking city boys in green bomber jackets looking for 'the schoolteacher farmer'. Dave asked him to describe them and from the bull terrier bottom lips it was easy - Brian and Carl.\n\nThat fucking Idiot Ex of mine, What NOW?!"
    ],
    "authorname": "Androgynousother",
    "tags": [
        "cunnilingus",
        "humour",
        "oral",
        "straight sex",
        "oral sex"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-idiot-the-farmer-and-me-ch-02"
}