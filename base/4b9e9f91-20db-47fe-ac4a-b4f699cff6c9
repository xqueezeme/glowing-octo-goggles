{
    "title": "Sholan Alliance - AU Bk. 02 Ch. 02",
    "pages": [
        "I had some feedback and comments about my getting some names mixed up. I apologize for that and all I can say is that occasionally the meds for both withdrawal and anxiety sort of zonk me out. Not bad enough that I end up with a bunch of gobldy gook but with Billy's and Jimmy's names so similar they just sort of happen. It is getting better the further I am from my last drink and eventually I will go back and correct the problems.\n\nI have been trying to get chapter 3 and 4 swapped so they are in the correct order but have been having some problems with it. I will get it resolved for all the poor souls who are confused by it. I am going to do the next chapter for Ranicke and then Silver Moon before I come back to the Sholan Alliance. The ideas for this story just seemed to stick out in my mind and demanded that I write it down first.\n\nAgain I want to thank my readers for both the positive and constructive comments. They mean a great deal to me as well as the voting. I figure that as long as I am above 4.65 or so I must be doing a good job. Keep reading and keep enjoying the stories. As I said in my last chapter submitted if anyone wants updates on the status of my stories send me feedback with your e-mail and I will add it to the list I am creating.\n\nAny and all relationships are 18+ or the equivalent with the alien species.\n\n*****\n\nBilly was still standing there leaning against the wall doing his best not to allow the emotions affect him. Normal emotions and feelings he could block and wouldn't be affected. These emotions were to strong and they were affecting him badly. At the moment he simply couldn't move because of what he was feeling. It was taking all his will power to remain in the spot that he was currently in. \n\nAs he was fighting to resist the urge to go and kill the pirates Vangie could see just how tense he was. You didn't have to be a telepath to see the tension he was under. As the doctor walked past Vangie waved her over. \"Doc do you happen to have any psychic suppressants on you? Yilly is not able to block it right now.\" He glanced over at him and leaned forward and whispered in her ear. \"He is trying to resist going and killing all the pirates. I think his shielding isn't strong enough.\"\n\nShe nodded at him and walked over and touched his shoulder. \"Yimmy I am going to give you something to help you. It is going to sting for a moment but it will help you block the sensations you are feeling.\" She waited for him to respond.\n\nWhen he did his voice was very guttural and filled with fury. \"Do it. I don't know how much longer I can hold on.\" His back and neck were a mass of tensed muscles and he hurt. At the moment he didn't care if she knocked him out as long as it would resolve the issue long enough to get off the ship.\n\nShe pressed the hypoderm against his neck and fired it. As she said it burned for a few moments and then a feeling of coolness flowed through his body. As it was flowing through his body he felt the rage almost shut off. When it did he collapsed against the wall but Vangie was expecting it and easily caught him. Billy pressed his head against the wall and let the drug finish working. \"Thanks doc.\" Now he sounded just exhausted.\n\nVangie looked at Dr. Desjean and smiled slightly. \"Just in case can I get some more of that drug? Leave the instructions and maybe half a dozen ampoules please.\" When she handed the hypoderm and meds over he pocketed them and picked Billy up. \"We are going to the docking area and as soon as your ship is attached we will get over there. You might sleep for a while but that is normal.\n\nBilly shook his head. \"I need to go to the bridge first to set up some instructions for when I put the ship in tow.\" God he felt like a limp rag at the moment. He was going to need to crash for at least a short time after everything was taken care of.  \n\nVangie contemplated for a moment and then nodded. \"Yes Captain. As you wish.\" He wrapped one of Billy's arms around his neck and an arm around his waist to keep him upright. \"Let's go and get this taken care of.\"\n\nThey headed to the bridge and Billy flopped in the command chair and unlocked the command consoles and went to work. Now that the suppressant was in him and he was away from everyone he was feeling better. He wasn't sure how long it would last. The remaining warriors who had helped take over the ship were going to remain on this ship. Only a small token crew was going to be on his ship. He should be able to handle the feelings and emotions from them.\n\nHe eventually had the commands punched in. \"Vangie when I tell you have one of the warriors press the illuminated button. That will be after I connect the tow cables to the ship and it will give me remote access to the controls.\" With a hand from Vangie he made it back to his ship which had connected while he was working with the console.\n\n\"To the bridge and disconnect the gangway between the ships.\" Once they were on the way to the bridge Vangie sent a message to one of the few warriors remaining on board. Billy could see the status of the gangway being disconnected and retracted by the other ship on the instrument panel. Once it was done he verified everything was green he started powering up the towing station and system.\n\nBilly moved over to the towing station and after checking the control lights there extended the cables one at a time. Each cable connected to one of four points on the other ship. Once connected Billy brought each online and verified that there wasn't any malicious code running. After he was satisfied he nodded at Vangie.\n\n\"Salvaged vessel activate the command button Yilly set.\" Vangie waited for a few moments and received a confirmation that the button had been pressed. He nodded at Billy so he knew as well.\n\nOnce that was done Billy checked and he had full control of the other ship. After running some system diagnostics he slowly powered his engines up and took her under tow. \"All the lights are green across the board Vangie. Ensure that they have a good rotation for watching the bridge, guards for the pirates, and sleep schedule.\" When he tried to get up Vangie actually had to catch him.\n\n\"I am taking you back to your room and give you a good massage. It will help your muscles relax as well as help you sleep and you need the sleep right now.\" He did just that and by the time Vangie had left Billy's cabin the man was snoring quietly in bed. Chances were good he would sleep for a good six or more hours which he needed.\n\n~~~ On the Barque\n\nThe first thing they did was to take them to the two rooms set aside for them. It was going to be a tight squeeze but only for a few days. For the moment all six were brought in and settled in the chairs and beds. Doctor Desjean settled down on a counter and gave them a slight smile. \"I do wish to apologize for the tight fit but the barque only has so much space. There are two rooms with two beds each and connected by a shower.\"\n\nShe shifted her tabard slightly before continuing. \"The showers are communal since we Sholan's tend to be communal people and help each other get clean. In each room is a drink dispenser that has several different drinks. As I am sure you noticed the beds are rather large since the average male Sholan is about six and a half feet tall. The women tend towards six foot tall as well.\"\n\nThe young warrior brought her a drink and she thanked him. \"First thing that is going to happen is we are going to be taking one of you at a time to medical for a scan to find out everything that is wrong with you.\" That got raised voices from them and she contemplated them.\n\nKingie saluted the doctor and turned to the women. \"Please, I know it probably scares you a great deal to be separated or the idea of being separated. I am here as well as three other warriors who were board ship when we rescued you. \"There is also Captain Yilly's daughter Sally, Yilly's bondmate Satasha, and Z'Marl. That makes seven of us who helped rescues you. There will be two guards on duty at all times, one from the rescue party and one from this ship. If you wish one of the ladies will sleep in here as well.\"\n\nHe looked around before settling down next to the girl and let her wrap her arm around him. \"There is only enough space in medical for a few people. One of the four of us in this room will accompany each of you to medical for the scan.\" He smiled a slight bit. \"There is nothing to fear and no physical probing of any sort. Yilly said he only felt lightly cooked when he had his scan.\"\n\nSally smacked him lightly on one shoulder. \"Warrior Kingie I am going to tell Vangie about that horrible joke and let him deal with you.\" She covered her face and sighed. \"Over grown children is what they are and I have to deal with them.\"\n\nBitty snorted and snickered and almost looked shocked that she had sort of laughed. \"Oh god that has to be Billy back there. Only he would come up with a joke that bad.\" She looked a bit more comfortable when she said that.\n\nSatasha gave her a warm grin. \"Actually I was the one teasing him about talking to the doctor and making sure he was only lightly cooked when the doctor was done with him.\" She squatted down in front of her. \"You are Yilly's niece correct? That makes you my bond niece and I will make sure you are okay. Would you accompany me to medical?\"\n\nBitty raised an eyebrow but didn't comment. Right now she didn't have a great deal of energy and it was quickly going. \"When can we get showers and food?\" She had to close her eyes and couldn't stop the tears. \"We haven't been allowed to shower since they captured the ship we were on and it has been a day or two since we last ate.\" Her voice was starting to shake and become brittle.\n\nSatasha gently wrapped her arms around her and tucked her head into her shoulder. \"I can't imagine what all of you have been through. You are safe here and we will take care of you. Before you can get clean we need to collect DNA samples as well as doing the scan. Once that is done we will shower you and get you some soft and gentle food.\"\n\nOne of the other ladies looked at her. \"Take Crystal first please. She is the girl resting against the warrior. She needs it more than we do.\" She looked around the room and got nods from everyone except one female. That was an older female and looked more than a bit grumpy about someone else going first.\n\nA different woman spoke. \"Don't say a word Marcella or I will shut your mouth for you. All you have done is cause problems since we were captured and I am sick of it. Crystal goes first and that is the beginning and end of it.\" Her voice was hard when she spoke. It was fairly obvious that she did not like the female what so ever. Several of the other ladies glared at her as well.\n\nLooking closer you could tell that she wasn't quite as filthy or battered as the others were. Kingie decided to keep a close eye on her and got a glance from Satasha as well. He picked the girl up and wanted to smack the older woman. As soon as her name came up the girl cringed closer to him and hid her face in his shoulder. \"This won't take very long but I am going to place you on a floater since it will be more comfortable.\"\n\n~~~\n\nEventually they had all the women scanned and samples of the DNA that was spread out over their bodies. Thankfully that was gathered during the scanning and didn't require any invasive procedures. Once everyone was scanned and back in the room Doctor Desjean spoke to them as a group. \"It is going to take some time to correlate the DNA scans but that isn't critical. For those of you who have injuries that we need to keep an eye on you will probably be scanned once a day. This is for fractured ribs, abdominal contusions, possible diseases and some other injuries.\"\n\nShe nodded towards the females. \"They are going to help you get reasonably clean and fed. It might take a day or two to get all the filth off you but we have plenty of hot water. The main reason we don't want you to take long baths is because we want you to eat and sleep. I know you will probably have nightmares but sleep is still one of the best healers out there. I will have a SBA available at all hours if you need something to help you sleep. He or she will also administer any medications that I feel you are going to need. These will be based on the scan results as I work on them.\"\n\nWith another nod she stood up and walked out of the room and to her office. One poor innocent chair suffered severe trauma as she shredded the coverings. As she was working on taking the chair apart she was cursing up a storm as well. How the hell could people do things like that. Eventually she finished disassembling the chair and stood there panting when her door buzzer sounded. \"Enter at your own risk.\" Her voice was a snarl.\n\nThe door did open and the Ship Commander frowned slightly at the dismembered chair. \"You might need to start dosing everyone with psychic suppressants. There have been one or two other cases of people taking things apart. Thankfully there hasn't been any fights but...\" Since the women had come aboard the anger level had gone up significantly. \"Either that or use it on them whichever is a better choice.\"\n\nShe nodded at him and settled down. \"I will have a preliminary report for you in a couple of hours. I will also see about who is best to give the suppressants to.\" She rubbed her temples for a moment. \"Now if you will excuse me I need to get to work.\" \n\n~~~\n\nNow that all the women had been scanned and were back in the room Satasha stood and looked at all the women. \"We are going to shower you in groups of three. The first three are going to be settled in the room next door and then take care of the second group.\" She smiled slightly as she looked around the room. \"The first three are going to be Angel, Crystal, and Savanna. We should be done within a half hour at most.\"\n\nSally stepped forward. The second group is going to have Marcella, Bitty, and Clarice.\" She was about ready to say more when Marcella interrupted.\n\n\"I demand that I be part of the first group. I have been on board longer than any of the others.\" She struggled to stand up and leaned heavily against the wall. \"I am from a very upstanding family and will not stand to be treated this way.\"\n\nKingie tilted his head and frowned. From what he had seen of her scans she shouldn't have to struggle that hard. It was always possible that she had some soft tissue injuries that hadn't shown up right away. Once the doctor had evaluated the scan he would find out more. \"Marcella if you are having that much trouble standing sit down and give the meds time to act. The order we called names out is going to be adhered to. I am sorry if you don't like that idea but it is how it is going to go.\"\n\nHe turned back to Crystal. \"Sally is going to take you into the shower. I will be in the other room getting everything ready for you three. Once I am sure the three of you are comfortable then I will come over here and check on the ladies over here. I will be nearby at all times so if you need me either call or one of the ladies can come and get me.\"\n\nCrystal almost clung to his hand and gave him an entreating look and he gave her a slight grin. \"You will be fine Crystal. I doubt you really want a boy kitty giving you a bath now do you?\" Kingie lightly stroked one cheek with the back of a finger. \"For now I am going to let the girl kitties and the human female give you your first shower.\"\n\nShe did sort of giggle with the 'boy kitty' bit and gave him a wan smile. \"I will see you on the other side right?\" \n\nHe leaned over and gently brushed his cheek against hers. \"Try keeping us away. At all times there is going to be two guards at the doors. One that helped rescue you and one from this ship. I am not sure how the ladies are going to be doing the rotation but they will be close by in case you need anything.\"\n\nSally lightly bumped him and grinned. \"One of us girl people will be available at all times for all of you. If you need medical we will get a hold of them and they will take care of you. Now for your showers and I will take care of you Crystal.\" She helped the girl stand and slowly walk into the bathing area. \n\nThere were seats for three people and she helped her into one. \"Let me get the jacket off and I will have it washed before Kingie gets it back. We have some fresh cloths for you as well.\" Once the water was on and warm she pulled her clothes off and grinned at Crystal. \"I don't know about you but I am not going to get my clothing wet right now.\"\n\nThe other two women were escorted in and all three were making slight groaning sounds as they felt the warm water flowing over their bodies. The first thing was to wash and condition their hair. That took a fair amount of time but eventually it was relatively clean. Soon they had their bodies cleaned as well.\n\nThe ladies were surprised by the warm air jets but it only took a moment or two before they were dry. Once dressed they were helped into the other room where Kingie was and he smiled. \"I am sure that you feel a bit more human now and this is a warm thick broth with some minced up meat and veggies. There are a few slabs of bread as well but take it easy as you eat it.\" \n\nOnce they were seated at the small table he started handing the food out. \"We used Sally and Yilly as test subjects and they seemed to have survived.\" He had a teasing smile on his face and his tail was waving in gentle amusement. \n\nSally rolled her eyes and shook her head. \"Kingie I am going to have another talk with Vangie about your questionable sense of humor. Keep the teasing to a minimum or I might have an oversized fur rug.\" She facepalmed. \"Damn it now you have me going. Eat up ladies the food is pretty good. I have had it before and though it does taste different it is filling and full of the icky good for you vitamins.\"\n\nAs the females were starting to eat Kingie was carefully brushing Crystal's hair out. He was smiling slightly as he was doing it and purring slightly as well. Once it was mostly done he moved to the next lady and started on her hair.\n\nAngel couldn't help but sort of smile at him as he was working on Savanna's hair. \"You seem to be enjoying that way too much for a boy kitty.\" She wrinkled her nose when she said that and took another bite of the food.\n\nKingie laughed lightly. \"We tend to groom each other since it is easier. Showers tend to be shared with family members as well as getting a good brushing down afterwards.\" He leaned over and lightly flicked Angel on the nose. \"This reminds me of grooming my sisters when I was younger and at home. It is a time for bonding and a shared closeness that helps to keep families together.\"\n\nEventually all six women were done getting bathed though Marcella was still acting like a grumpy bitch. She kept trying to get the first of everything, shower, food, grooming, and anything else that might come up. The one thing she insisted on was that she didn't share a bed which the other two didn't fight.\n\nBefore they turned the lights down low Kingie looked at the other three women. \"The flight is being shortened and we should be near earth in four days. Once there we will open communications with the Terran authorities and go from there. When our doctor and theirs both agree that we have done what we can and you are safe for transport then you will be sent to your families. Any questions can wait till tomorrow. Good night.\"\n\nHe walked over to the other room and informed them of pretty much the same thing. Crystal held her arms out to him and he came over and gave her a light hug. \"Go to sleep little one and I will see you tomorrow.\"\n\nShe shook her head. \"Stay please, I feel safe with you here.\" For whatever reason she felt safe with him around and had fixed on him as an anchor in her storm.\n\nHe sighed. \"I will get some blankets and a pillow and sleep on the floor next to you. If you wake and are scared just reach over the edge and you will feel me there for you.\" He glanced at the others and was glad when they nodded. \"Thank you ladies for your trust in me. Do not hesitate to wake me for anything you might need.\" He wrinkled his nose at them. \"That is an order by the way.\" There was a slight giggle when he said that.",
        "~~~\n\nBack on Billy's ship once they were underway Vangie pulled Billy from the seat. \"You are going to bed and I will contact you if we need anything. You are going to get at least six hours of sleep and if I need to I will give you a sleep med.\"\n\nBilly wasn't going to complain since he felt like a limp noodle. Whatever the doctor had given him had sort of isolated him from everything. With that sudden release of tension and holding his rage back he simply didn't have any energy. \"No complaints here Vangie. As it is you are probably going to need to carry me.\" He was holding onto Vangie's arm for support and he looked pale and shaky.\n\nVangie grinned at him and carefully picked Billy up and carried him to Billy's room. \"Just wait, I am so going to tell Satasha I carried you into your room and stripped you down.\" He snickered as he did that. \"If you don't mind I think I am going to collapse next to you.\"\n\nBilly started laughing when he said that. \"Fine, I am used to having a furry bed warmer.\" It didn't take him long to fall asleep curled up with his back to Vangie's. He knew he was going to be recovering for a while.\n\n~~~\n\nIt was just about four days later when they dropped out of hyper and paused for a short time. There was a three way conference between the captains of the various vessels. The senior ambassador was there as well and she listened as the captains verified the plans. Even with the attack and capture of the pirate ship they decided to stick with the original plan. Billy and the combat fighter would go in first. Once they were assured of safe passage then the barque would come into the system. If all else failed they would all go into hyper to a pre-arranged location.\n\nThere they would remove all the Sholan's from the two ships and Billy would go in alone. He would deliver the message from the Sholan's and eventually the mother ship would arrive. Once it arrived they would then commence trying to negotiate some sort of treaty. Sally would remain behind with Vangie just in case the earth authorities tried to arrest Billy.\n\n\"...So we have agreed on the basic plan. I have given you the coordinates to the Swiss neutral tunnel. In theory any ship that comes into the neutral area has diplomatic immunity. This was set up during the last major war we fought.\" He sighed when he said that since it wasn't all that long ago compared to how long the Sholans had been in space. \"I am going to head for that space and contact the Swiss department of foreign affairs. They deal with diplomatic issues and I can't think of anything more diplomatic than meeting a new species.\"\n\nHe scratched his chin and rubbed his temple since he was still getting headaches. They would come and go at times and the headache meds weren't working all that well. As soon as they landed he was going to get checked out. \"At the moment I can't think of any other issues other than remain in stealth till I say otherwise.\" \n\nBilly let the others talk for a few before he finally interrupted. \"I am going to do a micro jump and Commander Czernak is going to come out of hyper at the same time. This will reduce his chance of being noticed. I am pretty sure that my ship will make a noticeable splash coming out of hyper. It should be more than enough to conceal his hyper signature.\" He glanced at the three screens. \"Does anyone have any questions?\"\n\nOnce he had confirmed that the questions had been dealt with he gave a firm nod. \"Then shall we be about our business? Oh and remember 'live long and prosper' is not a valid greeting.\" He frowned slightly at Satasha when he said it. \"I will be sending the revised coordinates in a moment. I will see you on the other side.\"\n\nVangie killed the screen and everyone hurried to their stations. Billy took the captains seat, Vangie the navigator, and one of the other warriors the engineering. Billy triple checked the coordinates he wanted and finally sent them to the two ships. He powered up his N-space engines and slowly increased the speed till he hit the hyper speed and flashed over. Moments later he detected the other ship enter hyper as well.\n\nThe micro jump went well and they dropped out of hyper almost exactly where he wanted. Even as close as he was he barely detected the other ship drop out of hyper. Billy had to smile with the excellent control the other ship had. Using a short burst he sent a very brief message to the other ship. \"Correct coordinates, congrats.\"\n\nNow that they were in N-space he started broadcasting the canned message he had created. For the canned message it was only him on the bridge. There would be time enough to show the Sholan's down the road. That and till he got a bit further into the neutral passage he didn't want to chance someone from one of the other nations trying to stop him.\n\n\"Greetings, this is Capt. Billy Madlax of the SS Sandi. I have some important information for all the nations of earth. I encountered an alien craft that was damaged and not able to fly. I attempted to repair the vessel to no avail. In the name of humanity I took the alien onboard and delivered her to her mother ship. Aboard the mother ship my oldest girl Sally and I were treated well.\" He took a sip of coffee before starting to talk again.\n\n\"While aboard for a short time we were in secure quarters till Lt. Verzilon, Sally, and myself had been debriefed. We were also held there till the medical scans came back indicating that there didn't appear to be anything infectious for either species. Once we were cleared we were moved to regular quarters and with an escort allowed to see parts of the ship.\" He took another sip of the coffee.\n\n\"At no time did they ask for any secrets related to our planet or colonies. They did inquire as to why my drive signature was different from the others in this system. I informed them that I was testing out some modifications I had made. They did ask to see some parts of my equations which I did though I kept the proprietary secrets to myself. The Sholan's are at least 150 years more advanced than we are. Due to this I figured there wasn't much I could teach or show them that would impact on their technologies. The only equations I showed them were the ones I came up with and not for our primary drive systems.\"\n\nAnother sip of coffee and he continued. \"While I was on board I was approached by the Commander of the mother ship about escorting the first contact team to earth. After some consideration I decided to accept his proposal. I am going to ask Switzerland for diplomatic immunity for the aliens till such time as any treaties have been signed. While enroute we were attacked by pirates and successfully repulsed the attempted boarding. We retaliated and took command of the ship.\"\n\nHe paused for effect as well as another sip of coffee. \"The pirate ship I recovered and took command of is the Black Pearl. I also have the so called Jack Sparrow in lock down as well as twelve of his crew. The rest of the crew was killed trying to repel our boarding. I have captured the ship relatively intact and claim her as space salvage under the international treaties related to piracy. The crew and dead bodies will be turned over to the Swiss authorities for processing and prosecution.\"\n\nNow he just looked tired. \"In the process of the boarding one of the Sholan warriors was killed. I am waiting on instructions on how to properly honor his sacrifice. Also in the process of boarding and taking control of the ship we found six captives. All six are females and have been severely abused. They are currently aboard the barque that is carrying the first contact team. I am going to transmit their vital information once I have sent this. They have been treated well and my daughter Sally Madlax is aboard the barque. I have been in constant contact with her to ensure they are getting the proper treatment.\"\n\n\"Once we have landed I will have Doctor Desjean talk to a Swiss doctor of their choice. Please ensure that the doctor is female if possible. As mentioned the females we saved were severely abused by the crew of the pirate ship. The Sholan's have saved samples of the DNA from each of the females. It was collected in accordance with their standards for legal use. All evidence will be turned over as well. The computer data will be turned over as well upon landing. Captain Madlax out.\"\n\nOnce the recording finished Billy grinned at Vangie. \"Now comes the fun part... I expect Earth to melt down before going up in flames. We have encountered aliens before but they are primitives and their planets off bounds.\" This was going to be very interesting and as odd as it might sound Billy was looking forward to the fun. \"I figure we will be contacted within two or three hours. Heaven only knows who will show up to say hello.\"\n\nVangie frowned at him. \"Yilly I have a feeling that you are looking forwards to all the fun and excitement. I almost feel like we are being made the butt of some joke.\" It was all he could do to keep his face straight as he muttered at Billy.\n\n\"Darn straight I am looking forwards to it. If nothing else this might make some of the more obstreperous senior officers keel over. It is good for advancement you know.\" He leaned back in his chair and kicked his feet up on the console and took a sip of coffee. Once he was comfortable his expression changed and his headache showed. The damn thing had been coming and going since the pirate attack.\n\n\"Headache again Yilly?\" Vangie was starting to get a bit concerned since it just seemed to hang on. The meds he had for the headache helped but nothing completely got rid of it. \"Once we land you really need to see the doctor.\" He shifted so that he was behind him and started massaging Billy's forehead and neck. That seemed to usually help a fair amount.\n\n\"Planned on it and maybe hiding for a day or so in a room with Satasha and sleep and cuddle.\" God he missed having her next to him. It had been nice having Vangie curl up next to him but it just wasn't the same.\n\nVangie grinned. \"So is cuddling the only thing you are going to do?\" His tail was twitching in amusement as he teased Billy. \"I have a feeling she might object to just the cuddling.\"\n\nBilly grumbled at him. \"I am neither going to kiss or tell what might happen other than cuddling.\" He finally leaned back and closed his eyes and relaxed till a communication from who ever came in. Before Billy realized it he had fallen asleep.\n\nVangie was definitely a bit concerned since Billy seemed to be getting worse the closer to the end of the trip they got. He wasn't sure what was going on but he had been in contact with the doctor. She was going to take a look as soon as she could. When the ships made it to ground or took off back towards the mother ship.\n\nIt was several hours later when the communications indicator started blinking. Vangie called to have some coffee brought up. \"Yilly wake up the comm. light is on and flashing.\" He had to shake him a bit before Billy woke up.\n\nRight about then one of the warriors came in with some coffee for Billy and cshar for the others. \"Taking over engineering station captain.\" The warrior said. Vangie was already sitting at the navigation console. \"I have an escape plot entered. At your command we can escape if needed.\"\n\nBilly nodded and after careful consideration stayed in the position he was in. After reaching over and activating the comm. he picked up his coffee and took a sip. It was lucky he had just swallowed when the screen activated. On the screen was one of the enemies he had made during his time in. Both narrowed their eyes.\n\n\"Ah 'Captain' Madlax how nice to see you again. That was a fascinating broadcast you made.\" The male was tall and in very good shape. His hair was short and cropped close to his head. He had a number of ribbons on his chest as well.\n\nBilly yawned slightly. \"So nice to see you as well Commander Jeramiah, I see you have a command commiserate with your skills. Congratuations.\" There was most definitely traces of venom in his voice. It was obvious the two knew each other and disliked each other. \"So what brings you out here? Well other than my canned message that is.\" \n\nVangie had to flick an ear as he wondered what the back story was. He didn't bother saying or moving since the two were focused on each other.\n\n\"Well I must say it was a very fascinating message. Meeting aliens and capturing the Black Pearl oh my.\" He glanced around Billy's bridge and raised an eyebrow when he finally noticed the two felines. Vangie was a soft charcoal gray and the other was a highland sand color. \"Nice costumes boys. Gotta admit you did a good job on this Billy. Don't know what game you are playing at but I am sure the Space Corpse is not going to be amused.\" His voice was silky as he spoke.\n\nBilly sighed and then shook his head. \"You were always a stupid egotistical self centered bastard.\" When one of the Sholan's spoke to him he looked over his shoulder and replied in Sholan. \"Keep pretending that you don't speak English. He is a dickhead and a dweeb but as long as we stay in the neutral corridor he can't do anything.\"\n\n\"What did you say?\" Jeramiah demanded. He was sure that Billy had somehow concocted all this to make him the butt of some massive joke. \"What did you do to your engines? The hyper signature is way out of the norm for your ship.\" He smirked. \"Hope you didn't blow your tubes with that entrance.\"\n\nBilly settled for a grin. \"Just speaking Sholan to the pretend aliens you think I have on my ship.\" He took a sip of coffee and smiled in appreciation. \"Thank you for having the coffee brought Vangie. It hit the spot.\" He turned back to the comm. screen. \"My engines? I redesigned them while I was grounded. It gave me something to do while my tubes were re-crystallized. Oh wait, you aren't supposed to know about that.\"\n\nJerimiah was starting to get irritated by now. \"I have instructions to bring you to the Space Command orbital station. Ensure all weapons are secured and your shields lowered to the minimum strength.\" He seemed to think he had the authority to order him to follow.\n\nBilly rolled his eyes. \"You are as stupid now as you were when I almost got you drummed out of the Space Corpse. I am in the neutral corridor and under international treaties and regulations I do not need to respond. If the Swiss choose to ask me to leave then you will have authority over me. Till such time as that happens then I am not required to obey your orders.\"\n\nJerimiah snarled at him. \"You will obey the commands from your authorities and your space Navy. Come about or be fired on.\" He snapped a command out and a laser beam flashed in front of Billy's vessel. \n\nBefore Billy could do anything there was a brief ripple of space and a beam flashed out from the fighter. The weapons mount disintegrated if a burst of energy. Billy frowned slightly since that wasn't something he had expected or intended but he went with it. \"Oh, meet my escort. Since I am currently being paid by the Sholan's to bring their first contact team to Earth they provided an escort.\" He waved at Vangie.\n\n\"Fighter 23 that is sufficient unless there is any further attempt to take the ship over.\" The fighter changed positions to the other side of the intersystem patrol ship. \n\nThe commander looked furious. \"That was an act of war and will not be taken lightly. Prepare to be boarded and surrender your ship.\" He started issuing commands to prepare to move closer and board.\n\n\"Commander we will be going into the neutral corridor to board. That alone will cause an international incident. I strongly recommend against this action. I would also like it logged as well.\" The first officer was tired of the ass commanding the ship and wanted this noted.\n\n\"Fine it is logged and you are relieved. Go to your stateroom and remain there.\" The first officer was looking rather ticked as well but for different reasons. \n\n\"Yes sir, I stand relieved.\" He turned and walked off the deck of the bridge.\n\nBilly watched the action on the other ship and finally sat up. \"Commander I am going to continue my course. If you take any further action against me I will consider it an act of piracy and will defend myself. If you choose to back off I will not make a complaint against you with the Swiss. If you keep this illegal action up I will take it to the international courts and press charges.\"\n\nVangie activated the drives and they started moving forward. As they were starting to move forward various weapons sensors started sounding. \"Sir we are being hit with targeting systems from the other vessel.\" As he was talking they were powering up their weapons systems.\n\nBilly was in the process of taking control when the comms were taken over. On the screen was a very large male who was most definitely Nordic in looks. In a very heavy accent he spoke. \"This is Captain Jorgensen. Stand down all weapons or we will be forced to defend our territory.\"\n\nBilly listened and a slight smile crossed his face. \"Gladly Captain Jorgensen. We are powering down my weapons as I speak. I wish to introduce you to my acting first officer Senior Warrior Askeron and engineer warrior Shojim. They are Sholan's and part of the escorts for the first contact team.\"\n\n\"Captain this is a Space Corpse matter and I demand that you stand down and allow me to do my job. This man is obviously demented and unstable. I need to take him into custody to ensure that he doesn't harm anyone including himself.\" He was trying to look very official as he was speaking.\n\nBilly kicked his feet back up and watched the show. He sipped on his coffee and wished he had some popcorn and this would be great. The Swiss Captain looked down his nose at the Commander. \"You do not understand. This is our territory and we will deal with this ship and his allegations. If they prove to be false he will be dealt with in accordance with all treaties. Till then he is under our escort and protection. Move your ship.\"\n\n\"Damn but this is better than some movies I have seen.\" He shook his head and took another sip of coffee and simply waited. The two traded threats till another Swiss ship showed up.\n\n\"Commander that is a battle ship and we are being targeted. They are demanding that we lower shields, power down all weapons, and if needed they will force a boarding.\" The junior officer was looking very pale when he informed his commander of that.\n\nThat definitely got his attention and it took him a few moments before he slumped and he ordered his crew to stand down. \"You have not seen the last of me Madlax.\" That was a snarl and then the connection was broken.\n\nBilly became formal and looked at the Captain of the Swiss ship. \"My weapons are secured and I have shields at normal strength. Is there anything else you need me to do?\"\n\nThe Captain looked at him and nodded. \"Have the stealthed vessel lower their shielding. I am providing protection and escort to a secure landing facility. From what I understand there is another vessel as well. Have them come out of stealth or where they are and then we will leave.\"\n\n\"Understood but the escort vessel will need to briefly jump into hyper space. It has been waiting for us to signal it is safe. It will take about an hour or so.\" Once he got confirmation from the Captain he nodded at Vangie and he sent the signal. There was a flash as the fighter went into hyperspace and vanished from the sensors.\n\nWhile they were waiting the last warrior on board came forward and gave them some food and relieved them as needed. It was just about an hour and a half when the barque came out of hyper space as did the fighter. It was not cloaked at the moment and Billy had to appreciate the view on the screens. He had seen it on the mother ship but space was its environment and it showed.\n\n\"Captain Jorgensen these are the two vessels I have been escorting. The fighter was also an escort for the Barque. Her primary mission was to ensure the first contact team made it back to the mother ship if something happened. If you will escort us to the landing area it would be greatly appreciated. Please have sufficient soldiers or police to take charge of the prisoners.\"",
        "He turned to Vangie and spoke in English. \"Follow the course they are going to send and once we get to the planet I will take over. I have to land both vessels and that isn't easy.\" Billy turned back to the Captain. \"I am turning my bridge over to Vangie and he will follow your instructions. I am going to take a break since I am going to have to take the two ships down since they are in tow.\" \n\nBilly stood and walked out of the bridge and to his stateroom and collapsed on the bed. The headaches and body aches were getting worse. The meds were not helping and it was almost like he could feel Satasha in the back of his mind. Even imagining her presence helped somewhat and before he realized it he had fallen asleep again.\n\n~~~\n\nBack on the barque things were going reasonably well for the most part. The women who had been rescued had showered daily and been fed well. They were slowly regaining their strength and their physical wounds were starting to heal as well. Their mental wounds were a totally different matter at the moment. Any time a male came even relatively close who wasn't one of the warriors that saved them they tended to huddle in a corner.\n\nOne of the four warriors or the three women had to be there at any time someone else was in the room. With Crystal it had to be either Sally or Kingie that was with her. The others were okay but she would still cower till they left. Kingie ended up sleeping in the room next to her bed so she could even vaguely sleep. One morning he woke to find her curled in his arms and sleeping soundly. \n\nTo say he almost freaked out was an understatement. He had been tired enough after getting the women fed and in bed that he had fallen into a deep sleep. He hadn't really expected Crystal to get out of bed and curl up in his arms. Kingie had to admit that she looked more relaxed than she had the night before. \"Oh hell what do I do now?\"\n\nHe lay there till Sally walked in and when she couldn't help but grin at him he growled quietly. \"I did nothing and knew not that she was here till I woke up.\"\n\nSally came over and settled down. \"I know better than to think you might have tried taken advantage of her. You are a good male Kingie.\" She reached over and gently stroked Crystal's face. \"Hey love you need to wake up. Kingie needs the bathroom and breakfast will be here shortly.\" She kept up the gentle stroking till the girl started to wake up and then moved back from her.\n\nShe yawned and stretched and snuggled a bit closer. \"No wanna wake.\" It was rather obvious she was still extremely exhausted and really didn't want to move.\n\nSally moved a bit closer to her. \"Come here love and I will sit with you till Kingie gets back.\" She gently pulled her to her side and stroked her hair. Kingie came out a few minutes later and headed for the door since it just buzzed. When he opened it the smell of some more thick broth wafted into the room. Sally sniffed. \"Oh man that smells good. I am starving.\"\n\nKingie picked Crystal up and carried over to the table and settled her down. \"Eat Crystal. Let your strength come back to you.\" He settled down next to her and held the bowl for her so she could eat without making a mess. \n\nShe gave him a tiny smile and started eating. Crystal was being slow when it came to eating since it had upset her stomach slightly last night. As she was eating Sally was helping the older ladies over to the table. She gave them a shy smile as well. \"Morning.\" \n\nOne lady grinned but took a bite and sort of waved her spoon at her. For now she was concentrating on the food. She was working very hard not to scarf it down but it was damn hard. About the only thing that could be heard from her was chewing and mmm's.\n\nSally and Kingie settled down to a regular meal and made sure that the others didn't over eat. Once they were done the women were leaning back and looked fairly content. \"Time for another shower I think.\" Angel said and stretched. \"And then a nap I think.\"\n\nKingie looked at Crystal and the others. \"If you feel up to it you can shower on your own or Sally can help you. If you need more help I will get the other two to help you.\" He started collecting the dishes and put them on the tray to be taken away. When he turned back Crystal was trying to get to him.\n\nWhen he moved forward to catch her she clutched at him. She looked up at him and then buried her head in his chest. \"Please don't leave me. It is stupid but right now I only trust you.\" She started sobbing as she was speaking. \"I can't do it by myself. I can barely be in the dark without screaming.\" \n\nKingie wrapped his arms around her and looked at Sally with a sort of terrified expression. He had no idea what to do about or with Crystal. He was a warrior and when in battle the injured were sent behind the lines. If it was a civilian they were treated and he never saw them again. \n\n*Warrior this is the tutor and listen closely. I am not sure why but she has focused on you as the one who can still her nightmares. She knows that you will hold her while she screams and remembers. Give that to her warrior. Give her the space she needs to really start healing. As you told her treat her as if she was your little sister. If you have questions come to me son and I will answer as best I can.*\n\nHe pulled her a bit closer and held her. \"Then that is what I will do Kitling. As of now you are one of my little sisters.\" Kingie leaned back a bit and smiled at her. \"Mind you that means I might occasionally tickle you and when you are better chase you around and tug on your braid.\" He lightly tapped her nose as he grinned at her.\n\nShe actually giggled a bit before leaning into his warmth. \"I know I am asking a great deal Kingie but...\" Crystal settled for closing her eyes and relaxing against him. \"Thank you and I think I would like a shower as well. Would you do my hair and back?\"\n\nHe rolled his eyes at her. \"I think I am seeing the future now... Kingie do this, Kingie do that, Kingie...\" Just for good measure he scooped her up and sighed sadly just for good measure and tried to look pathetic. All that got him was some snickers from the others. It was what he was intending and he smiled gently at them.\n\nSavanna grinned slightly. \"Well Kingie once you are done... I am going to ask Crystal if I can borrow you to wash my hair.\"\n\nHe grumbled at her. \"Sorry but I am younger than you are. \" Kingie would let them wonder just how old he was. It would be good for them. After they walked into the shower area she pointed to the bathroom.\n\nOnce Kingie had set her down she went in and closed the door. A few minutes later she came out and he was already undressed and had the water running and warmed up. It was the shower closest to the bathroom. \"Come in, the water is warm.\"\n\nShe blushed slightly and gave him a good look and then frowned. \"Um, if you don't mind a personal question but you said you were male but...\" Crystal looked away when she said that.\n\nKingie looked startled and then grinned. \"You wouldn't have known but our genitals are kept internally till stimulated.\" He held a hand out and waited for her to strip down and then gently pulled her into the shower and faced her away from him. \"Just relax as I work on your hair.\" It was still a mess but was better than the day before.\n\nTowards the end Marcella walked in and froze. \"I am not going to shower with him in here. She can bring her bed toy in with but I will not shower while he is in here.\" Her face showed rage and anger at the sight of Kingie working on her lower legs.\n\nHe stood up and snarled at her. \"I am not a bed toy and you have no cause to speak to Crystal that way. If you can't deal with my helping her to bathe that is your problem. We will be done shortly.\" He could feel Crystal start to tremble as he stood. \"Calmly little one she won't hurt you.\" He rested his hands on her shoulders and lightly massaged them.\n\nMarcella snarled back as Z'Marl sort of shrink back from the human female. \"I see you have broken him to your commands. How typical.\" Her expression showed derision as she spoke. \"Little slut just can't wait to...\" That was as far as she get.\n\nKingie was suddenly next to her and his hand was around her throat. His teeth were bared and he was growling. \"If you ever speak to her or any of the women like that again I will have you taken to the brig. You will then have your own room and shower to use.\" He shoved her out of the shower area.\n\nHe yowled out a command and the warrior outside the door hurried in. \"You will remain in the room. If this female causes any problems inform me.\" Kingie stalked back into the shower area and over to Crystal. \"You did not deserve that little one and she will not bother you again.\" He started working on her legs again.\n\nEventually they were done and once she was dried off. Kingie wrapped a thick toweling robe around her and picked her up. \"You said you might want a nap. I will curl up with you and protect you Crystal.\" He was still angry with that other woman. She had struck a nerve and he was going to keep an eye on her since something was being played false.\n\nThe other two had come in while he had been finishing her up and Angel had lightly touched his shoulder. \"Good for you Kingie and I don't like her either. Take care of our little girl.\" She turned and stripped down and started getting cleaned up.\n\nCrystal leaned into him and closed her eyes and some tears slowly trickled out. What Marcella had said had really hurt and felt like a dagger had plunged into her heart. Who would ever want her now? Who would love her and someday when she was ready take someone to bed. She had been dirtied and soiled and everyone would know that.\n\nKingie could smell her distress and tears. There were other odors coming from her but he couldn't identify what they might signify. He just wasn't familiar enough with human scents to be able to identify them. \"It will eventually be okay Crystal. It is going to take time to recover and no it won't ever completely go away but you will grow past it.\" He settled down on the bed and carefully lay down and curled around her. \"She will never bother you again.\"\n\nHe started purring quietly in her ear and tried to project comfort and sleepiness. When Savanna came over and settled down on the pillow he had used the night before and started stroking her hair. \"We will keep that bitch from you. You will be as safe and protected as we can make you.\" The other two women were going to be watching as well. She didn't realize it but they were starting to gather around her even more now than on the pirate ship.\n\n~~~\n\nSally casually swapped rooms with Z'Marl and started keeping an eye on Marcella. She couldn't really explain it but she didn't trust her any further than she could throw her out of an airlock. Z'Marl was too nice of a person to deal with her. Sally had grown up under her father's tutelage and she didn't have any problem dealing with her. \n\nFrom watching the other two women they didn't particularly care for her either but they didn't totally freeze her out. From what Satasha and Sally could see it was sort of a case of 'we made it through' feeling. There wasn't any sort of other emotional bond between the three such as seemed to be forming in the other room. The two women were settling in reasonably well and were working on getting to know Satasha and Sally. \n\nBoth of them had talked about what was going on in the other room and had grinned. \"Poor Kingie, I think he is getting run ragged over there. I think they have all adopted him as an older brother or younger brother.\" Sally couldn't help but snicker when she said that. At the moment they were showering and Sally was working the shampoo into her fur on her back.\n\nSatasha snickered back. \"I have talked to Z'Marl and she was saying much the same. If she wasn't in there the poor boy would be worn to the bone.\" She thought it was good for the ladies that he was in there. Physically they were starting to recover though the emotional damage would take much longer. Both knew that but really had no idea of how long it would take them to recover. Each female would recover at their own rate. Some might never really recover totally and it was going to be hardest on them.\n\nOn the morning of the fourth day when they dropped out of hyper Kingie woke to find Crystal clutching his chest fur and light robe. She was shaking badly and sobbing in fear. His first thought was Marcella had somehow managed to get to her. His eyes narrowed and traveled the room but everyone else was asleep. He couldn't scent that female in the room what so ever so he knew it wasn't that. \n\nOnce he was satisfied that there wasn't any physical threat and that Crystal hadn't been threatened he gently touched her cheek. \"Hey sweetie what is wrong? Bad nightmare?\" He gently stroked her hair and didn't really think as he leaned down and lightly licked the tears from her face. \"Tell me about it Crystal. Sometimes it helps to talk about it and I am here to listen.\"\n\nShe shook her head since she knew she would get rejected. She simply remained curled up holding his fur and robe. Crystal knew if she exposed her fears a warrior like Kingie he would laugh and call her silly. For the moment she wasn't really thinking. How he had cared for her as well as the other two didn't cross her mind. Not only that but the way he had defended her from Marcella didn't either. When he started lightly licking her face it tickled but that was it.\n\n\"Come on loverling tell me what has you in such a state. I will hold you till you are done crying if needed before we talk. I do want to know what has you so upset though.\" When she clenched his fur even more he had to wince since it did hurt but he wasn't going to say anything. Instead his low soft purr started as he tried to comfort her as best possible.\n\nIt took some time and he could hear the other ladies waking up. Since he was facing them he could tell that they were being very quiet. Kingie assumed it was to give him time to try and help Crystal and he twitched an ear at them.\n\nShe cried for a while longer before she was finally able to talk to him. \"I am scared Kingie. I am so scared of reaching Earth.\" She knew her family would come and her mother would be upset. The trip she had gone on had been Crystal's idea and she had really pushed for it. Her mother would blame her for causing the family problems. Added to that was knowing that she was going to be rejected by everyone. She would be rejected because of what had happened to her. It wasn't her fault but she would still be rejected except for scum that was turned on by that sort of thing. \n\nKingie gave a slow nod. \"I am not sure what you are scared of but a number of possibilities come to mind.\" Damn it she had a strong grasp. \"Can you do me a favor and let go of the fur? You are sort of pulling it.\" When she did he urged her to wrap one of her arms around him and to hold on. \"What has you so scared? Please tell me and I will listen as carefully as I can.\"\n\nIt took her a force of will to release her grip but she did and wrapped an arm around him. She clung on for dear life and buried her face in his chest. Crystal could probably talk to him as long as she wasn't actually looking at him or anyone else. She tried to speak and had to swallow before she could. \"I am scared that I am going to be rejected. It wasn't my fault what happened but everyone is going to know and reject me. I have been soiled and corrupted and nobody will ever want me again.\" \n\nZ'Marl quietly moved over and settled down on a pillow and lightly touched her before resting her head against Crystal's back and started purring. She didn't say anything but simply purred as she tried to give as much comfort as she could.\n\nKingie looked at the top of her head and tucked a finger under her chin and urged her to look at him. \"Look at me Crystal and listen to what I have to say. This goes for all of you in this room as well.\" The other two were sitting up and had Sally between them. All of them were having variations of this fear and they were carefully watching Kingie to see what he would do.\n\n\"Crystal you were forcibly raped and abused. I am sure you fought as much as you could and the same for the rest. The simple fact is that there were far more males than you could defend against. They were going to do what they wanted no matter what you tried to do to resist.\" Now she was looking at him and she was looking stricken. \"The one fact you are forgetting is that you are alive and it is going to take time but you will get better. All of you will end up with some mental and emotional side effects and I won't lie about that.\"\n\nHe carefully sat up and wrapped his arms around her and held her close to his chest before he continued speaking. \"For you, you are a minor and your images and information will not be given to the press or anyone else without you and your parents' permission.\" He knew that eventually it would be put out there because someone would spill the beans. Right now he was trying to calm her down.\n\nWhen he forced her to look at him was how gentle his chocolate brown eyes looked. There was resolve and a hint of hardness to them as well. Crystal knew it wasn't for her but for the ones that had done this. She had seen him in the shower any number of times but for some reason the chocolate brown of his fur stuck out. There were highlights of a sort of creamy brown fur as well. As he wrapped his arms around her she did the same and sighed in contentment. Crystal was starting to calm down and in his arms felt very safe. There wasn't anything sexual to it which helped her a great deal.\n\n\"As far as I am concerned you are a very brave girl and if someone rejects you simply because, they are idiots. You are a little fighter and I know that you will fight what happened to you kicking and screaming.\" He was starting to purr again. \"You remind me of my youngest sister. She is about twelve turns old and a little scrapper.\" He grinned lightly when he said that. \"I am surprised she hasn't driven our parents to drinking. Don't ever challenge her by saying she can't do something.\" He couldn't help but smile even wider as he thought of some of the things she had done.\n\n\"You have not been defiled and corrupted. Again I will say this and keep saying it. You had no choice and couldn't fight that many men. Eventually you probably had to give in and let them do what they wanted. That is protecting yourself and doing your best to survive another day. Some might call that the weaklings way out but it isn't. It takes a very strong warrior to do what is needed to survive and get back home. In a warriors case it is usually in the hopes they have information that can help. In your case it was to get back to your family and friends.\" \n\nWhen he talked about his youngest sister she couldn't help but give him a sort of grin. She sounded like a feisty girl. \"I think I would like to meet her someday. She sounds like she has run you ragged as well.\" Crystal wrinkled her nose at him when she said that and then sighed and leaned back against him. \"I will try to believe that but...\" She simply sighed again and rested against him.\n\n\"One more thing and then it will be time for breakfast. \"Has anyone in here rejected you? I know that Angle and Savanna were abused as well but they haven't refused to have anything to do with you have they? Z'Marl is leaning against you and trying to give you comfort and so has Sally and Satasha.\" He stroked her back. \"I know they are females but have I rejected you? Have any of the warriors on this ship rejected you?\"\n\nThe next bit was likely to startle most of the women and especially Crystal. \"I know for a fact that most of the warriors that have dealt with most of you ladies respect you deeply. You went through L'Shoh's caves of ice but came through in the end.\" Just for good measure he had to tease her. \"I think they are considering asking you to be their mascot as well.\"",
        "She did listen and started a bit when he teased her about being made a Mascot. Crystal had to giggle as well since that sounded so funny. \"Oh, I would be a horribly terrifying mascot. Fear my claws and fangs...\" Crystal almost dissolved in a horrible case of giggles.\n\nIt was what he had been aiming for and the other women started snickering as well. Right about then the warrior outside pushed the food tray in. He raised an eyebrow at the women and then looked at Kingie. \"Someone woke up rather upset and we talked and I finally managed to get her to smile and even giggle.\"\n\nCrystal looked at the other warrior and made a pretend clawed hand and made a less than threatening Rowl. \"Fear me for I am a horribly mean human.\" The ladies started snickering even more.\n\nThe warrior frowned slightly and then shook his fist at Kingie. \"For giving away secrets I am going to challenge you to spar with me boy.\" A grin crossed his face as he slowly walked over to where Crystal was sitting. \"It is good to see you laugh. I know it won't last very long but keep looking for humor and it will help.\" He was a light tan color and had the wider ears of a highlander. One finger stroked her cheek. \"He is right though. You are a little fighter and we are going to talk to Senior Warrior Vangie about having some type of shoulder flash made. I would love to introduce you to my family as well. Show them the strength and courage a young female human had to come through this.\"\n\nCrystal was looking shocked when he said that and tentatively leaned forward and wrapped her arms around him. \"I didn't realize that at all. Right now almost anything will make me twitch and I have to force myself not to scream.\"\n\nHe returned the hug and pressed a kiss to her forehead. \"We know that you have been having a really hard time dealing with males so we were keeping our distance. Right now I can tell you that there isn't a warrior aboard any of the vessels that wouldn't lay down their lives to protect you.\"\n\nBeryl became serious. \"We did have one warrior killed during boarding. We have been sending ongoing status reports on all of you. When we give him last rights if you think you can deal with it we would like you and some of the other women front and center. I think he would like that, having the women he helped save helping to honor his memory.\"\n\nCrystal looked shocked since she hadn't realized that anyone other than pirates had died. She started crying again. \"I am so sorry you lost a brother in arms.\" It was hard to hear through her tears but they made out enough of it. \"I think we would all be honored. Would it be possible to send a message to his family?\"\n\nBeryl smiled at her. \"Of course it would be okay. It would be more than okay and I know they would appreciate it. Notes like that won't get rid of the loss of a loved one but it will let them know he didn't die in vain. Now it is time to have some real food and not the broth you have been slurping down by the gallon.\"\n\nThey started eating and all three ladies were almost drooling as the scent hit them. \"Oh my, I might not want to go home if they keep feeding us like this.\" Savanna took a bite and smiled as she chewed it. \"Oh lordy that is good.\"\n\nZ'Marl snickered. \"I would invite you home for a real home cooked meal but there are connotations you wouldn't know about.\" \n\nSally almost choked at that and smacked her lightly. \"God that was horrible you silly cat. What did I ever deserve to have to deal with the likes of you?\" It was a pretend whine before she started snickering.\n\nSavanna looked blank at that and Sally explained. \"When a Sholan invites you over for a home cooked meal they are inviting you to spend time with them.\" She snickered slightly. \"In this case she would just cook a good meal and nothing else. She was just seeing if she could make me choke on my food.\"\n\nThe three ladies started at the two of them and then sort of smiled. \"I am so confused... Why can't we all just get along?\" Angel wailed and pretended to start crying. Right about then an alert was passed letting them know they were dropping out of hyper and into the Terran space.\n\nSatasha stood up. \"I am going to talk to Doctor Desjean about a few things. I will be back eventually.\" She left the room and leaned against the wall and took several slow breaths. Over the last few days she had also started feeling sort of ill but had hidden it from the women. \n\nThe warrior outside the door took one look at her and called for a replacement to come and relieve him. \"Satasha you look like crap. I am going to escort you to medical and if you argue I will toss you over a shoulder.\" He was next to her by now and was doing a quick check and he thanked Vartra that all Brothers were trained as paramedics. They served under the head of the cult of Vartra as a lay-Brother as well as being trained as special forces. \n\nSatasha shook her head. \"No argument from me. I was going to ask you to call for someone to help me.\" When he wrapped an arm around her she leaned against him and closed her eyes. Before she realized it she was being picked up and carried down the hallway.\n\nWhen she was carried into medical the doctor sighed since she had been helping Satasha already. \"Into the scanner young lady and then you are going to a room where you can sleep and recover.\" She had told the commander that she felt it was too soon to send them but he had his orders and noted her statement.\n\n\"Make sure as soon as we land that Yilly is brought over so I can check him as well.\" Vangie had expressed some concerns as well. Billy sounded like he was having the same symptoms as Satasha.\n\n~~~\n\nOnce they were nearing Earth Vangie contacted the Captain of the ship that was escorting all of them. \"Sir I am going to go and get Captain Madlax so he can land the ships where you instruct.\" He stood and after turning the bridge over to one of the other Sholan's he hurried back to Billy's room and walked in. \n\nWhen he walked in he was rather shocked at how Billy looked. He was pale, curled into a ball, and shivering. He was also sweating heavily. Vangie hurried over to check on him and it almost looked like he had relapsed with the ni'uzu virus. It wasn't normal but wasn't unheard of. \"Damn it he can't land this thing the way he is. Yilly I am going to dock with the escort and have them pilot this down. If you try to argue with me I will give you a sedative.\"\n\nBilly tried sitting up and failed. \"I am the only one that familiar with the mods I made. I need...\" He groaned and collapsed back on the bed and gasped for air.\n\nVangie didn't bother arguing and settled for strapping him into the bed. \"As soon as we land I will take you to see the doctor. Now rest or else.\" As he was striding out he called for a warrior to keep an eye on Billy and keep him in bed.\n\nHe settled in the command chair. \"Sir I am sorry to report that Captain Madlax has relapsed into a fever he had while aboard our ship. He is not infectious or shouldn't be and has been immunized against it. It is my opinion that it was caused by the strain of the last week or two. Do you have anyone familiar with landing ships in tow? I would normally have someone detach the other vessel and leave it in station keeping but there are the pirates dead and alive aboard her.\"\n\nThe captain nodded and spoke in Swiss. He seemed to be discussing it with one of the officers before turning back to him. \"I will need to dock with you and send over a crew to bring the two ships down. Lower shields and prepare for docking.\"\n\nVangie started snapping out orders in Sholan and they took up a station keeping orbit and lowered the shields. He illuminated the docking ring and slid out of the chair. Before heading off the bridge he handed his weapons over to one of the other warriors. \"I will meet you there.\"\n\nThe man nodded. \"I bring doctor.\" He terminated the connection and a few minutes later they were docked and the hatches opened. \n\nSince the Captain was of a senior rank Vangie the Sholan way. His hand made a fist and came across his chest and was pressed against the opposing shoulder. \"Welcome Captain and Yilly's cabin is on the way to the bridge.\" He took a quick look and they did have sidearms but that appeared to be the extent of it.\n\nVangie turned and led them down the p-way and opened the door. The warrior he had assigned was helping Billy drink some water and he nodded. \"Stay and provide the doctor any assistance he might need.\" Vangie turned to the doctor. \"Once we land I am going to have him taken to the barque where our doctor is for a scan to see what might be going on. Being that he somehow caught a Sholan disease she will be the best to evaluate him and treat him. If you wish to accompany him that is fine.\"\n\nThe doctor and one other moved forward after the captain interpreted for them. He started checking Billy over and called for an IV to be started in case they needed it.\n\nVangie left them to it and walked out of the cabin and to the bridge. \"Captain she is all yours. Warriors you stand relieved and allow them to get to the workstations.\" He waited till they had moved off the bridge and sat down at the Sholan console. \"Yilly made some modifications to the engines so be very careful using them. I am going to contact the barque and let them know that Yilly is sick.\"\n\nThe captain nodded. \"Take care of warriors of great importance. I take down, you take care of your captain.\" It was obvious that the feline had a great deal of respect for Capt. Madlax. Considering how he carried himself he was warrior as well. For Billy to command his respect told the Captain a great deal about him and Billy.\n\nAs the Captain started issuing commands in Swiss Vangie contacted the barque and was quickly put threw to medical. \"Ah Vangie I was rather expecting a call from you. Satasha is ill as well though I am having some trouble identifying what she might have. Bring Yilly over as soon as we are landed.\"\n\nThe ship started to angle down and within an hour they had finally landed and Vangie had to raise an eyebrow at the level of security that was scattered around the landing area. What rather startled him the most was the colorful uniforms. There were only a few, maybe ten or so at the beginning of the landing area but they looked heavily armed. The swords and bill arms definitely stuck out but he had a sword as well so it wasn't too odd.\n\nCaptain Jurgensen turned and looked at Vangie. \"We be unloading pirates and bodies. Ship moved to different location for time being. It be guarded at all times and when Captain Madlax recovers of sufficients he will be shown to it.\" His accent was getting stronger since he was starting to get a bit tired. It had been a long day for him.\n\nVangie nodded. \"Captain the ship is yours. I will have two warriors at the ramp to provide what assistance you might need. I am going to take Yilly to the barque now.\" He left the bridge at a lope and hurried into Billy's room. The doctor must have given him something since he wasn't sweating as bad and he looked more comfortable.\n\n\"Doctor if you and your assistant will follow me I will show you to our doctor.\" He carefully lifted Billy up and made sure his head wasn't hanging and was resting on his shoulder. \n\nAs he was doing that the doctor was about to tell him that he needed to be seen by his staff. One of the warriors who had come over with the captain shook his head. \"Lead on Warrior Vangie. I will escort you to the barque.\"\n\nVangie nodded and they hurried off the ship and over to the barque. The ambassador was standing there in the door and looked concerned and waved him in. \"Keep me updated on his status at all times. I don't care if I am in a meeting if anything changes comm. me.\"\n\nHe nodded as he hurried past and into the ship. It didn't take very long to reach medical and the door opened as he approached. Vangie didn't even wait for the doctor to speak and settled him in the scanner and carefully stripped him down before stepping back.\n\nAs the doctor started working Sally hurried up to the Ambassador. \"Since Daddy isn't going to introduce you it was asked that I do. If you will follow me please Ambassador.\" She was dressed in a very nice tabard and soft sandals. She stood tall and walked out.\n\nAs they walked out the colorful warriors came to attention after falling in on either side of a red carpet. At the other end was what looked like officials from a number of countries. To be honest she was scared that she was going to screw up something till she felt a gentle touch on the edge of her mind. \n\n*Relax Sally and you will do fine. If needed I will give you additional instructions this way.* The ambassador gave her a slight smile as they walked out. There was the Ambassador, her assistant, several adjutants, and several warriors.\n\nSally recognized one of her daddy's old friends and sort of headed for him. It had been a while but he was hard to miss. He was about as tall as most of the Sholan's and was heavily muscled. Added to that was a bristling beard he looked pretty impressive. \"Good afternoon Commodore. It is good to see you again. Daddy was going to be making the introductions but he relapsed with the illness he had on our friend's ship.\"\n\nHe smiled down at her and gave her a slight nod. \"It is good to see you as well Sally and Billy seems to have done a darn good job raising you and your sister. Come talk to me later when you know how your father is doing.\"\n\nShe almost hugged him but instead turned to the others. \"Greetings from the Sholan people and government. This is ambassador Teolora and some of her staff. I would introduce you but I don't know the proper greetings.\"\n\nCommodore Ikarius Demopolus gave her a warm smile. \"I can take it from here Sally. Go check on your father and as I said keep me updated on how he is doing. I will come see him when he is feeling better.\" He turned to the Ambassador and saluted. \"It is my pleasure to meet you Ambassador and if you and your retinue will follow us I would appreciate it. I have a room ready for you to settle down and relax for an informal meeting. Not knowing what you might or might not be able to eat or drink I did have a bit of a wide variety of food and drink made available.\"\n\nShe nodded and stepped forward and after nodding to the others she took one of his arms and curled her hand around it. \"I am pleased to meet someone who knows Yilly. He is a very smart man even if he seems to enjoy handing out headaches when he starts talking.\" Her tail was gently swaying and she had a gentle smile on her face.\n\nIkarius was more than a bit startled when the feline took his arm and started walking with him. \"Um, that sounds like Billy. I know every time he tried to explain one of those nightmare equations to me I ended up having one drink to many. So what has he been showing you?\" From what he had seen their tech level was significantly more advanced than theirs but knowing Billy he had to check.\n\nShe gave him a gentle chuckle. \"Nothing top secret to the best of my knowledge. He had come up with an idea how to re-crystallize the hyper tubes and our engineers were curious so he explained it.\" She shook her head and smiled at the others as well so they didn't feel left out. \"Oh, and two things for your information. First Sholan's don't have external sexual differences as humans do. Females tend to be smaller and more slender though. We also have some banding on our tails that indicate we are both adults and females. Second any Sholan with purple on their robes are telepaths. Normally the greeting for a telepath is by touching finger tips.\"\n\nShe felt the tension mount when she said that and gave another gentle smile. \"Please don't worry about us trying to read your minds. That is against the telepath code and there are very few telepaths that can connect to an alien mind. Even when they do it is simply to catch surface thoughts. They tend to be used when making treaties, checking the honesty in legal issues and such. Only the worst criminals might get mind scanned though that is rather traumatic for the telepath.\"\n\nHe listened and then nodded. \"So if I am right you are a female Sholan and a telepath correct? Should I break out my foil cap to keep you from reading my mind?\" Ikarius gave her a sly look when he said that and was rewarded with a laugh.\n\n\"Oh goodness you are definitely a friend of Yilly's. When we first took him to medical he told us no probing though I am not sure where that came from. He also asked to be paid in gold plated latinum. We are still trying to figure that out. What is this 'latinum' he asked for?\"\n\nThere were several snickers before the others caught themselves and became serious again. \"First call me Ikarius and second Billy has a really warped sense of humor.\" He sighed and shook his head. \"Billy I am going to get you for this. Okay, the probing thing was something that was started about a hundred and fifty years ago. It references certain species of aliens that don't exist coming to earth and performing medical experiments on humans. There is no such thing as latinum since that was a currency used on a television show from about the same time. I guess you could say he was tweaking your tail or whiskers.\"\n\nShe looked shocked for a moment that Billy had been able to pull a joke like that over them. After a few moments she started snickering and then out right laughing. \"He is going to get it when he is better. That evil man. He might want to stay here for a while. The commander has been trying to figure it out.\"\n\nIkarius started laughing. \"He might not want to stay here. That is not a good way to start out a treaty or first contact.\" They continued into the building he was aiming for and to the room that had been set up.\n\n~~~\n\nBack on the barque the doctor started the scan after collecting the samples for testing. Over his body on the 3-D screen his organs started showing up as well as vital statistics in Sholan. As they were starting to show she explained what they were seeing and what the data was showing. Eventually the scans finished and so did the tests for the ni'uzu virus and he was negative for that. The antibodies in his blood were working and she hadn't detected any active particles of the virus.\n\nShe nibbled on her knuckle for a few moments. Their symptoms didn't make any sense to her. They were showing symptoms but there wasn't any cause she could detect. The doctor finally made a decision. \"Put him in the same room as Satasha and strap on a diagnostic monitor. I will set up some commands for it while you are getting him tucked in.\"\n\n\"Follow me please and I will explain what I am doing.\" She led them to her small office and started typing in commands. \"What I am doing is setting the alarm settings on the bracelets to alarm if their vitals go outside certain ranges. It will alert the on call attendant and alert me as well.\" She rubbed one temple. \"I rather wish that we had room for you to stay doctor but we simply don't. If you can stay somewhere close so I can contact you if I have any questions it would be appreciated.\"\n\nHe nodded and decided to ask one question before they left. \"Why put them in the same room? If they had different diseases, say something from you and something from us that could be bad.\"\n\nDesjean contemplated on how to answer the question. \"First of they are both telepaths and the contact will help them. Another reason for this is because they have become bond-mates and will sense each other. That will comfort them and keep them from fretting about the other.\"\n\nHe blinked. \"Bond-mates? What exactly does that mean?\" For all he knew it meant that they had connected telepathically or something odd like that.\n\nShe smiled slightly at him. \"It is something like a short term marriage contract. Normally it is done for having children but in their case it is because they have come to love each other deeply.\"",
        "He looked more than startled though not revolted or any feeling like that. \"How interesting. I will have to talk to you more about this later. You look a bit tired and I am sure it has been a stressful week. I will come back tomorrow to see the females that were rescued.\" With a nod he left the office and was escorted off the ship.\n\nBack in the treatment room once the attendant had tucked Billy in he had closed the door and turned the lights down. Just to ensure their minds weren't intruded on he turned the damper on full. It was to keep them from picking up any feelings or images from the human females.\n\nBilly was barely awake when he was tucked in and he slowly moved over to Satasha and curled his arms around her. Where he touched it was like a soothing cool flame flowed into him. Having her back in his mind was so wonderful as well. Her complex scent washed across his nose and he tucked his nose into her neck and inhaled. \"Gods I have missed you my love.\" It was barely above a mumble but some of his energy started coming back.\n\nShe pulled him close and was feeling much the same way. Her joints stopped aching as much and the fire that had been filling her was being quenched. His touch felt so good as his fingers stroked her fur and worked their way down to her skin. *Love you to Yilly. Don't ever leave me again if you can help it.*\n\n*Never my love. My love for you is as deep as it was for Danielle. I don't care if we end up on Earth or Shola but I will never leave you again.* He was moving his lips up the side of her neck and started nibbling on her ear. *The nice thing about being a telepath is we can talk while cuddling.*\n\nShe gave a quiet laugh and tilted her head into his ministrations. Low in her belly she could feel a different fire starting. \"If you keep that up we aren't going to sleep soon and that might annoy the doctor.\" Satasha was definitely feeling better and she could feel how her fur felt to him. That wasn't mentioning what he was scenting from her. She had never gotten this clear of a sensation from him.\n\nBilly was too occupied with seducing her. *Sods the doctor, we can just sleep in.* For some reason their lovemaking was on the fast side till he penetrated her. When he did that there was a sudden rush of memories from her not to mention he could feel everything she could.\n\nSatasha was as caught up in the transfer of memories as he was and suddenly they were just one being and not two. When they both finally climaxed he collapsed on his side and she felt him curl around her. Her mind was starting to freak out since she knew what had happened. It wasn't much knowledge but all telepaths were taught about Leska links. If this wasn't one then she didn't know what was. \"Oh goddess we have Leska linked Yilly.\"\n\n~~~\n\nI hope you enjoyed this chapter. Please leave me some feedback and comments. If you don't I might growl at you... "
    ],
    "authorname": "maxd01",
    "tags": [
        "alien felines",
        "injuries",
        "mental bonding"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/sholan-alliance-au-bk-02-ch-02"
}