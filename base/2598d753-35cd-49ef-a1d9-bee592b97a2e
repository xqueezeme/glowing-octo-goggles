{
    "title": "Transformations - Visions of Sugar Plums Ch. 02",
    "pages": [
        "Comments welcome!\n\n\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\u2014\n\n\"Oh, my God,\" Beth said as she looked at herself in the dressing room mirror. She was still herself... sort of. Her eyes were a shade or two lighter, but her skin sparkled as if she were dusted with glitter.\n\nHer lashes were longer, lips fuller.\n\nAnd, the fucking ears...\n\nFor some reason, they bothered her even more than the two volleyballs that seemed to have grown on her chest.\n\nShe gingerly touched the pointy tips of her ears.\n\n\"You look... adorable,\" Rich said. His voice was just a couple octaves lower than her own mouse squeak.\n\nShe turned and looked at him.\n\nHer boyfriend, the man who took her virginity and brought her to not one, not two, but ten orgasms was an elf too. His ears matched hers. Rich's muscular body looked thinner, but more defined than before.\n\nShe looked down at his red and white striped dick and involuntarily licked her lips... no! Focus! \"What did she do to us?\" Beth sobbed.\n\nRich pulled her into his arms. \"Hey, come on now. We'll figure this out.\"\n\nShe punched his chest. \"Stop trying to act all brave and shit! You have to be scared too!\"\n\n\"Yeah,\" he whispered. \"But, I'm kind of happy too.\"\n\nShe laid her head on his shoulder. \"I wish they'd turn off that stupid techno music out there.\"\n\nThere was an incessant buzzing just barely audible through the walls of the dressing room.\n\n\"Want to fool around some more?\" Rich asked.\n\n\"Yes. But, we can't. We need to get out of here and find a doctor or something. Get dressed.\"\n\n***\n\nThe mall floor was alive.\n\nWhen the sound started droning from the speakers, most of the people in the mall had simply torn off their clothes, grabbed the nearest equally naked body, and started fucking.\n\nAn orgy stretching through three floors of the mall involving thousands of people.\n\n\"Where are we going?\" Colleen asked as she followed Tara down the hall.\n\nThe long legged blonde threaded between the moaning tangles of flesh on her skyscraper heels. \"Someplace away from all this boomchickawowwow... unless you guys wanna join in! Looks like a lotta fun!\"\n\n\"No!\" Todd hissed as he followed along behind Colleen, one hand on her waist.\n\nTo Colleen's left, a kneeling, muscular man was ass fucking a skinny redhead who moaned on her hands and knees.\n\nThe man reached up and cupped Colleen's latex clad, left ass cheek as she walked past, and she screamed.\n\nTodd kicked the guy in the shoulder blades, causing him to push the redhead face down on the floor and fall on top of her, buried to the hilt in her ass.\n\nShe squealed, and at first Todd thought it was in pain - then she began to giggle, and the man started fucking her harder.\n\n\"You guys hungry? I'm totes hungry,\" Tara said.\n\n\"Stop saying that,\" Colleen said.\n\n\"What? Hungry?\"\n\n\"No, 'totes'. It makes you sound, I don't know, ditzy.\"\n\nTara stopped walking forward and turned around. \"Like a bimbo! I'm totes a... I mean, I am a bimbo! Totally!\" She blinked down at Colleen and Todd with huge doll eyes and curled lashes.\n\n\"Don't say that about yourself. It's degrading,\" Colleen said.\n\nTara frowned. Her cute lower lip stuck out. \"No, it isn't. I like being a bimbo! Don't you like me?\"\n\nColleen stared up at her. \"Of course, I like you.\" A girl on the floor tried to stroke the inside of Colleen's thigh. She slapped the girl's hand away. \"Can we talk about this later?\"\n\n\"No! We need to talk about it right now. If you don't like me, you have to tell me so I can change. I'm a street whore, but I'm sure they'll let me be a dominatrix or even a girlfriend experience whore.\" She seemed to be growing more agitated as she spoke. \"But, you have to still like me, Colleen! I couldn't stand it if you didn't like me!\" She began to sob uncontrollably and laid her head on Colleen's shoulder.\n\n\"No, no! Tara, honey, don't cry. I do like you. We're besties. You and me.\"\n\nTodd stared in disbelief as the seven foot tall sex doll heaved and sobbed on Colleen's shoulder.\n\nTara raised her head and sniffled. \"Really?\"\n\nColleen smiled. \"Totes.\"\n\nTara squealed and pulled Colleen into a hug, holding her two feet off the ground in the process.\n\n\"Well, what do we have here?\"\n\nTodd turned to the left.\n\nOle and two of the other security guards were smiling at them from a few yards away.\n\n\"Thank God,\" Todd said. \"Ole, what the fuck is going on?\"\n\nOle squinted. \"You got earplugs in your ears? That explains it. You didn't get your shots and you can't hear the music good enough. Take that shit out of the girl's ears and join the party.\"\n\nTara lowered Colleen to the floor and turned toward Ole. She thrust out her big, round breasts. \"I'm Tara - Terrific Titties Tara, Whore Caste. Are you a Whoremaster?\"\n\nOle grinned at Tara's big breasts. \"Goddamn. Baby, I don't know what you are, but I want some.\"\n\n\"I asked you a question. Are you a Whoremaster?\"\n\nHe grabbed his crotch. \"Yeah, I got your Whoremaster right here.\"\n\nThe other two guards laughed.\n\n\"Hmm, I don't think you're a Whoremaster at all. And, I don't think this is a Church sanctioned experiment...\"\n\n\"Church? What the fuck would this have to do with a church?\" Ole asked.\n\nTodd and Colleen looked at each other. \"What the hell are they talking about?\" Todd whispered.\n\nTara looked stern - as stern as a seven foot tall Barbie can look. She put her fists on her hips. \"You're not transformed. You totes ain't one of us. But, you're using our tech and our medicine. You're in real trouble, mister!\"\n\n\"Fuck this. Bitch, I'm gonna enjoy this,\" Ole laughed as he went straight toward Tara, his hands clenched into ham sized fists.\n\n\"Nope, you totes won't.\"\n\n***\n\nWhen the sound began blasting through the mall speakers, Ken was just leaving the video game store with his son's Christmas present.\n\nIt just seemed like white noise at first, but then he started hearing random words. Fuck, Ass, Pussy, Cunt, Cum...\n\nHe doubled over slightly as he suddenly developed an erection.\n\nAll around him, people were having the same reaction.\n\nA few feet away, a man reached out and grabbed a girl in a silk dress. The dress ripped, and the man laughed as the woman helped remove the remains before throwing herself around the man's neck. They tumbled onto the floor.\n\nKen staggered back, clasping his hands over his ears. His mind was a fast moving train of pornographic images. He turned and stumbled into a store: Candle Carousel.\n\nA short, plump brunette was staring at him with eyes as big as saucers. \"What's happening?! What's happening?!\"\n\nKen pushed past her. On the counter by the register, a large red candle was dripping wax down its side.\n\nKen scooped up warm wax on his finger and pushed a glob into his right ear.\n\nThe woman grabbed the counter and bent forward. \"Ooo, God! What's happening?!\"\n\nKen pushed wax into his other ear. The hum was still there, but the words were gone.\n\nHe turned to the brunette.\n\nShe was now leaning with her back against the counter.\n\nShe was squeezing her tits through her red silk blouse. \"You can have me,\" she whispered.\n\n\"Here, put this in your ears.\" He pushed a piece of wax into her left ear.\n\n\"You can have me. You can fuck me. I want you to,\" she moaned.\n\n\"What?\" Ken said. He could barely hear her.\n\nShe reached down and cupped his still hard erection through his jeans. \"You can fuck me. In my mouth. I'll even let you have my ass - I've never done that, but I'll let you. You can cum in me too.\"\n\nHe slid wax into her other ear. \"Hey! Snap out of it!\" He pushed her hand away from his crotch. \"We have to get out of here.\" Ken scooped more of the wax into his left hand and took her hand with his right.\n\nKen led her out of the store.\n\n\"Don't you want to fuck me? I want to fuck you,\" she said.\n\nThe hallway was strewn with naked bodies entangled.\n\nKen tugged and pulled, but she kept straining against him.\n\nFinally, she pulled free and tumbled into a group of four people. They stripped her bare within seconds.\n\nKen saw her laughing as she deepthroated a medium sized dick.\n\nA laughing woman snuggled against her and plucked the wax out of her ears.\n\nSomeone's hand closed on Ken's ankle and he kicked to the side, drawing a howl of pain as he freed himself.\n\nHe picked through the crowd, trying not to look at the orgy going on around him.\n\nBecause, even though he couldn't hear the words any longer? All he could think about was tearing off his clothes and joining the party.\n\nWhat kept him from doing that was the knowledge that Melanie was somewhere in the massive mall.\n\n***\n\nThis is what it feels like to be Superman's sidekick, Todd thought.\n\nOr, Wonder Woman's... yeah, that was closer.\n\nTara was a tall, thin, buxom blonde version of Wonder Woman.\n\nAnd, Ole had learned that the hard way.\n\nTara was still smiling as she delivered an upper cut to Ole's jaw that sent him tumbling backward into the tangled orgy.\n\nShe spread her long arms out and pushed Todd and Colleen behind her. \"You guys stay right behind me, okay?\" She said in her helium high voice.\n\nOle's two security guard pals looked unsure of themselves as they rushed Tara.\n\nShe winked at them, standing in a boxer's stance. \"This is gonna hurt,\" she giggled.\n\nThey were watching her hands.\n\nThey should have been watching her feet.\n\nShe took a step forward on her right foot, pivoted on her toes, and spun her body, swinging her long left leg in a graceful arc at face level.\n\nHer stiletto found one of the mall cop's noses and it exploded in a red mist.\n\nIt also knocked him sideways and he crashed into the other guard.\n\nThey both tumbled on top of Ole, knocking the wind out of the fat man.\n\nShe stood over them, legs spread and grinning. \"Had enough?\"\n\nOle shoved the other two off him.\n\nHe raised up and grabbed her pussy under the short skirt.\n\nTara giggled. She clasped her thighs together and gave a quick jerk to the left.\n\nOle howled as something snapped in his wrist.\n\nTara looked over her shoulder and winked. \"I got super duper strong thighs\"\n\nShe released Ole's broken appendage and he slumped back. A woman rolled on top of him and began kissing his neck while he cradled his broken wrist.\n\nTara took one of Colleen's hands and one of Todd's. \"Come on. Let's find somethin' to eat. This body burns a lot of calories.\"\n\n***\n\nKen had started checking the tangled bodies on the floor, half afraid he would find his wife among them.\n\nAnd, if she was there in a pile of the hedonists? What then?\n\nPull her out of it? Join her?\n\nTo his horror, the thought of joining her in the orgy turned him on.\n\nA woman riding a cock reverse cowgirl grabbed his hips. \"Fuck my mouth!\" she pleaded as she opened her bright red painted lips in an inviting 'O'.\n\nKen pulled away from her as gently as he could.\n\nBut for the wax plugs in his ears, he would be down there with them.\n\nAs he rode up the second floor escalator, he saw Melanie standing at the top.\n\nShe was wavering on her feet, legs spread. She had pulled up her skirt almost to her waist.\n\nMelanie was wearing pantyhose, but she had ripped the seam open with her long pink nails and pulled the crotch of her silk panties to the side.\n\nKen reached the top of the escalator.\n\nThe orgy was continuing on the floor around her, and how she had avoided being pulled down into the fray was anyone's guess.\n\nKen grabbed her elbow as he reached her. \"Mel?\"\n\nShe didn't look at him. She just stared at the orgy going on at her feet, lips open. She had her hand between her legs, rubbing her clit in slow circles with her pink nail. \"So beautiful,\" she whispered.\n\nHer blouse had been torn and her modest breasts were exposed.\n\nKen held her shoulders. \"Hey, Mel? Come on. Look at me.\"\n\nShe was a million miles away, her eyes unfocused.\n\nHe pushed a wax plug into her left ear.\n\nShe blinked up at him. \"Ken?\"\n\n\"Hi.\" He put the other plug in. \"Mel? Are you okay?\"\n\nShe nodded slowly and then smiled. \"Look at them. It's so beautiful.\" She unbuttoned the remains of her blouse. \"We could get down there with them. Wouldn't you like that?\"\n\nKen held her hands and began rebuttoning her blouse. \"Mel, listen to me. We're hypnotized. I know you feel like you want to do this, babe, but you don't really want to. Trust me, honey.\"\n\n\"I've been a horrible wife, Ken,\" she whispered.\n\n\"What?\" He couldn't hear her between the plugs and the moaning and the incessant drone from the speakers.\n\n\"I've been a horrible wife!\" She pointed at a woman with thick hips who knelt on the floor sucking a fat guy's cock. \"You can have her. I want you to fuck her. It's okay. I won't be jealous. I've been so horrible to you.\" She reached out and unzipped his jeans.\n\n\"No, hey, come on.\" He zipped up and pulled her close. \"I don't want her, Mel. I don't want... this.\" He gestured at the writhing forms on the floor.\n\nIt was a lie. He wanted almost nothing more than to tear off his clothes and join them.\n\nThe only thing he wanted more was to get Mel out of this place.\n\n\"I want to! I want us to!\" She screamed.\n\nHe reached down and scooped her up in his arms. \"Not today, honey.\"\n\nTwo naked men rose up to his right. \"She wants us, put her down,\" one of the men said.\n\nPeople started standing up all around.\n\n\"Oh, shit,\" Ken said. He held Mel tighter in his arms. \"Hang on.\"\n\nThe escalator had wide aluminum sides. He jumped onto the right side of the escalator with Mel in his arms and slid down.\n\nShe held on for dear life. To the right was a two story drop to the first floor\n\nHe reached the bottom and landed on his feet, Mel still in his arms.\n\nAbove, the crowd was fighting to descend the up escalator.\n\nKen ran, trying his best not to step on the orgy members on the second floor.\n\n***\n\nTodd and Colleen watched as Tara ate another fork full of cheesecake.\n\nThey were in the kitchen of the Cheesecake Factory, trying not to watch as the kitchen staff fucked like rabbits on the floor around them.\n\nTara had taken a whole cheesecake complete with strawberry topping out of the commercial fridge and had eaten a quarter of it so far.\n\n\"It's like the perfect food,\" Tara said as she smiled at her fork. \"It's cheese and it's cake. I mean that's brilliant.\" She turned toward Todd and Colleen and smiled, her teeth dazzling white even though her lips were coated with strawberry juice.\n\n\"Tara, you're going to be sick,\" Colleen whispered.\n\n\"Nope. I can eat and eat and eat. My tummy won't get upset and I won't gain an ounce. Being transformed is totes awesome,\" she said and stabbed the cake again with the fork before transferring several hundred calories into her mouth.\n\n\"What do you mean 'transformed'?\" Todd asked.\n\nShe pointed at herself. \"All this. The titties, the tushy, the legs. And, there are internal changes too. I'm super strong, and my insides are rearranged so I can like take huge monster cocks and stuff.\"\n\n\"How did this happen?\" Colleen asked. \"You weren't like this, this morning.\"\n\n\"Oh! When you left? I got my transformation kit in the mail. Then I called Bob - he's my handler, can't wait to fuck him, anyway Bob helped me give myself injections. It's a new program they started along with the Amy Lynn Challenge.\"\n\nColleen shook her head. \"Fuck! I knew it! I knew that Amy Lynn Challenge did something to you.\"\n\nShe nodded enthusiastically. \"Yep, I'm a total bimbo now. You're all kinky and shit too, you just don't realize it.\"\n\n\"Trust me, I fucking realize it,\" Colleen mumbled.\n\nTara giggled. \"Yeah, but you're fightin' it. That's silly. Totes more fun to give in and embrace it. We're the... next step in human evolution... or something like that. Anyway, I really, really like it.\"\n\n\"Yeah, but you said what's going on here isn't the same thing as what happened to you, right?\" Todd asked.\n\nShe shook her head with a mouthful of cheesecake in her mouth. \"Nope. Whoever they are? They're using Church tech, but they aren't from the Church. For one thing, some of these people are totally mean. We're not mean, not ever! We love everybody.\"\n\n\"The Church?\"\n\n\"The Church of Morpheus, of course,\" Tara said.\n\n\"Those weirdos that took over Cuba?!\" Colleen asked.\n\n\"Yep, they're taking over the world. To save it.\" She gave a crisp salute with her fork. \"And, I'm one of the soldiers. I'm a Street Whore, that means I'm general purpose. Wanna know my whore name?\"\n\n\"Your what?\" Colleen asked.\n\n\"My whore name. We all get them. I got mine today after my shots.\"\n\nColleen sighed. \"What is it?\"\n\nTara grinned from ear to ear. \"Terrific Titties Tara!\" She thrust out her enormous chest.\n\n\"For fuck's sake,\" Colleen whispered.\n\nTara's grin faded. \"Don't you like it?\" Her lower lip quivered, and her eyes filled with tears.\n\nTodd shook his head and smiled. \"No, sweetie, we love it! It's a beautiful name. Terrific Titties Tara is a... totes awesome name.\"\n\nTara beamed. \"Really?!\"\n\nTodd turned to Colleen. \"I know how you feel,\" he whispered. \"But, her emotions seem to be completely tied to what we think of her.\"\n\nColleen rolled her eyes. \"Yeah, Terrific Titties Tara is a great name.\"\n\nTara laughed and set the half eaten cheesecake on the stainless steel counter. She skipped across the floor and hugged Colleen tight. \"I love you!\"\n\n\"God, you're crushing me, Tara.\"\n\n\"Oopsie,\" she said as she released Colleen. She turned and looked at Todd. \"I love you too... actually, I love everybody. But, you two especially. And, Bob. Oh, and Joe, he was the Uber driver who brought me here. Super sweet.\"\n\n\"You took an Uber? Why didn't you just drive?\" Colleen asked.\n\n\"Bob told me I shouldn't, on account of I'm easily distracted because of the Titty Grow. Can we have sex now?\" Tara asked.\n\nColleen stared at her. \"No, we can't have sex. Jesus, Tara! We have to get out of here.\"\n\n\"But, I'm all sugared up now and I'm horny,\" she whined.\n\n\"Look, if you two want to have sex, I'll just wait in the restaurant,\" Todd said.\n\n\"What?!\" Colleen asked. \"No. No. It's not like that.\"\n\n\"No, it's not like that at all,\" Tara said. \"I want both of ya.\"\n\n\"Tara!\" Colleen groaned.\n\n\"What? You want him, you want me, he wants you, and I'll bet he totes wants me. I want you both. What's the problem?\" Tara asked batting her big doll-like eyelashes.\n\nColleen wrung her hands. \"We'll talk about this when we're someplace safe.\"\n\n\"Fine, geez, you're a real party pooper, Colleen,\" Tara grumbled.\n\nTodd pointed toward the back of the kitchen. \"There should be a door back there that leads to the parking lot.\"\n\nThey walked toward the back and turned left down a dark hall.\n\n\"Fuck,\" Todd said.\n\nThe door was chained shut.\n\n\"Oh, my God. They've locked us in,\" Colleen said.\n\n\"Yeah, I kind of thought so,\" Tara said.\n\nTodd looked up at the towering blonde. \"Any chance you could break that lock?\"\n\n\"Huh? Oh, um... no.\"\n\nTodd's eyes narrowed. Was she lying?\n\nShe smiled sweetly. \"We'll just have to find another way out.\"\n\n***\n\nMelanie had passed out somewhere along the way as Ken carried her through the halls.\n\nTheir pursuers had given up quickly upon reaching the second floor. They were completely focused on sex, and the second floor had hundreds of potential partners.\n\nKen ducked inside Haffner Sports, a small sporting goods store filled with brightly colored athletic shoes and tennis rackets.\n\nAnd, baseball bats.\n\nKen set Melanie on her feet and leaned her against him as he grabbed an aluminum bat.\n\n\"You going to use that on her?\"\n\nKen spun around and almost dropped Melanie. He pointed the bat at a naked man with a raging erection who had walked in behind them. \"Step the fuck back!\"\n\n\"Well, are you?\"\n\n\"Am I what?\"\n\n\"Gonna use that bat on her pussy? If you do, I want to watch.\" His eyes were glazed over. \"I'll bet she can take it.\"\n\n\"Get the fuck out of here or I'll cave your skull in.\"",
        "\"No need to get hostile. Plenty of sluts to go around.\"\n\nKen let Melanie slide to the floor. He raised the weapon and took a batting stance. \"Fucker, I'm not going to tell you again. Walk the fuck away or I will end you.\"\n\nThe man started laughing. \"Yeah, okay. I'm going. You got bigger problems than me, man.\"\n\nThe man backed away still laughing.\n\n\"What the fuck is that supposed to mean?\"\n\nHe yelped as a needle slid into his neck from behind.\n\nThen everything went black.\n\n***\n\nThe man on Kayla Cash's desk was nothing like he had been an hour before.\n\nMatt now had a full white beard. His body was massive and rippling with muscles.\n\nKayla smiled as she stroked his cock. It lurched and spewed precum, quickly growing slick with juice. She leaned over and ran her tongue up the shaft, reveling in the taste.\n\nNot that she was the same as she had been earlier either.\n\nKayla was forty-four, but now appeared twenty-four. Her body fat had redistributed to her tits and hips. She reached down and fingered her thick clit.\n\nSomeone moaned nearby.\n\nOle was still cradling his broken wrist.\n\nA monitor on a nearby desk flickered and Kayla stared at it. \"The master says you must find the Street Whore and bring her here.\"\n\n\"How?\" Ole asked. \"She's too strong for me.\"\n\nKayla shrugged. \"Take more men.\"\n\n\"My wrist is broken!\" Ole groaned.\n\n\"Come here,\" Kayla said.\n\nOle stood up, cradling his arm.\n\nKayla ran her fingers over his arm. She quickly grasped his forearm with one hand and grabbed his hand with the other.\n\nShe yanked his hand and Ole screamed.\n\n\"There. It's set. Wrap it in a bandage and get back to work.\"\n\n***\n\nKen opened his eyes to see SpongeBob staring down at him. He blinked.\n\nHe was lying on his back staring up at a t-shirt hanging on a rack above his head.\n\nHe tried to sit up, only to find he had been zip-tied to a clothing counter.\n\n\"No, God, don't do that! It hurts!\" Melanie screamed somewhere close by.\n\n\"Almost done,\" A woman's voice answered.\n\nKen strained his muscles and tried to break free. \"What are you doing?! Let her go!\"\n\nMelanie screamed again.\n\nKen was naked. Memory of the sharp stabbing pain in his neck flooded back. Drugged, I was drugged.\n\nHis whole body hurt: arms, legs, torso, even his cock and balls.\n\nMelanie screamed again.\n\nKen flexed his back muscles and tried to raise his arms.\n\nAnd, unbelievably, the ties began to give. They bit into his wrists as they stretched.\n\nThey snapped and he sat up abruptly.\n\nSomething was wrong, very wrong. He felt... wider and taller. He looked down at his arms.\n\nHe had never been a slouch exactly, but he now had bodybuilder arms. \"The fuck?\"\n\nMelanie screamed again.\n\nKen reached down and found the ties binding each of his ankles to the metal table. He ripped them apart and stood up.\n\nThey were in some kind of clothing store. The doors were locked shut and naked partiers were smiling in through the glass.\n\nMelanie was strapped down to a nearby clothing counter.\n\nA woman in a white nurse's uniform was leaning over her.\n\nBeside her was a tray of empty syringes, and she looked up at Ken holding one last syringe filled with red liquid. \"It's okay, I'm a nurse.\" She smiled showing snaggled, ill kept teeth.\n\n\"Get the fuck away from her,\" his voice came out in a low, bass growl.\n\nThe nurse shook her head. \"No, I got one last shot for her. You want her to be lopsided?\"\n\nMelanie looked at him in utter panic. \"She's crazy! Ken, she gave me shots. Dozens of them. She did it to you as well!\"\n\nKen clenched his fists and was astonished to hear his knuckles pop. He stared down at his ham sized fists. \"You touch her with that needle, and I'll kill you.\"\n\nThe nurse frowned. \"I already give her 5 CC's in the right boob. You want her to have one DDD tit and one A cup?\"\n\nKen loomed over the little nurse. \"What the fuck did you give her?\"\n\n\"Titty Grow. I cut back on the dose so she wouldn't be stupid. Normally, they're supposed to be at least a G, but DDD leaves her smart. I gotta do the other one.\"\n\n\"Don't let her touch me!\" Melanie cried.\n\nKen grabbed the nurse's tiny wrist and took the syringe out of her hand.\n\n\"No! You're ruining everything!\" The blonde nurse sobbed.\n\nKen looked down at Melanie.\n\nShe was hyperventilating. There were welts where she had been injected: two in her abdomen, one in each thigh.\n\nHer stomach was flat and rippled with muscles.\n\nHer pubic hair that had been short blonde curls was now gone, lying in wisps on the floor below. Her pussy looked swollen, especially her clit that was now almost the size of a grape.\n\nAnd, her right breast was a cup size larger than the left.\n\n\"What the fuck did you do to her?\" Ken growled. He lifted his arm and the skinny nurse rose into the air.\n\n\"I told you: Titty Grow! You're hurting me!\"\n\n\"What does it do?\"\n\nThe nurse rolled her eyes. \"What do you think, Einstein?\"\n\n\"Oh, God, Ken, my breast hurts!\" Melanie sobbed.\n\n\"How do we stop it?\"\n\nThe 'nurse' looked confused. \"Stop it?! You can't stop it. But, ya need to inject the other one or she's gonna look like a weirdo.\"\n\nKen set the needle on the tray beside the others and reached down. He snapped the zip ties on Melanie's right side with two fingers while still holding onto the nurse with his other hand. \"What do you want me to do, babe?\"\n\n\"I... Jesus, I don't know. Oh, sweet Jesus, my tit is swelling!\"\n\n\"Ya gotta do the other one,\" the nurse mumbled miserably.\n\n\"Shut up!\" Ken roared. He reached over and snapped the other two ties.\n\nMelanie sat up. She gingerly cupped her breasts. \"I... I don't know... if she's telling the truth?\"\n\n\"Just tell me what you want, Mel.\"\n\nMelanie nodded. \"Do it. I mean it's definitely growing.\"\n\nKen set the nurse down on her heels. \"Give her the shot.\"\n\n\"Not her! You!\" Melanie cried.\n\n\"I don't know how. She does.\"\n\nThe nurse was rubbing her wrist.\n\n\"Give her the shot. Now. And, I swear to God if you try anything, I'll squash you like a bug.\"\n\n\"I won't try anything. I'm a nurse. I don't hurt people. I make them better,\" she said as if she were insulted.\n\nShe picked up the syringe and squeezed Melanie's left breast. \"Little pinch, honey.\" The needle was almost six inches long.\n\n\"The fuck it's a little pinch. It feels like somebody jabbing a dagger in my chest.\"\n\nThe nurse touched the tip of the needle to Melanie's nipple.\n\nMelanie gasped.\n\nThe nurse eased forward sliding the needle into Melanie's breast.\n\n\"Fuck!\" Melanie screamed.\n\nHer breast didn't look big enough to take the length of steel.\n\nShe pressed the plunger and sent the crimson liquid deep into Melanie's boob.\n\nThen she eased the needle out. \"There! All done. In a couple of hours, you'll have perfect DDD...\"\n\nMelanie punched the nurse in the face and the woman collapsed in a heap on the carpeted floor.\n\n***\n\n\"How do they just keep going and going?\" Colleen asked. She was sticking close to Tara as they made their way through the crowded hall orgy toward the main entrance.\n\n\"They don't have a choice,\" Tara said. \"The hypnosis audio is making them do it over and over - but, it'll have to stop soon, or they'll get dehydrated. If you guys didn't have those earplugs in, you'd be having fun too!\"\n\n\"Why aren't you affected?\" Todd asked.\n\n\"Doesn't work on the transformed - but, I love the kinky words in the songs though.\" Tara stopped abruptly and crouched down.\n\nThey could see the front doors.\n\nA crowd of security guards stood by the entrance, which was locked with the same chains as Cheesecake Factory.\n\n\"Fuck,\" Todd said. \"Can you take them?\"\n\n\"Yeah, but it won't do any good. They won't have the keys.\"\n\nTodd nodded. \"You're right, they'd have to know about you by now. Kayla probably has the keys to the padlocks.\"\n\nColleen sighed. \"Then we need to go get them from the security office.\"\n\nTara patted her belly and cringed. \"Ooo... my tummy hurts.\"\n\n\"I told you not to eat all that cheesecake,\" Colleen hissed.\n\nTara poked out her lower lip. \"You were right. But, I really totes thought I could eat anything I wanted.\"\n\n\"It was at least two pounds of cheesecake!\"\n\n\"I have to go to the bathroom,\" Tara squeaked.\n\n\"Fuck's sake.\" Colleen pointed behind them. \"Back there beside the Lego store.\"\n\n\"Come with?\" Tara asked.\n\n\"What? No,\" Colleen whispered.\n\n\"I don't want to go alone. Please?\"\n\n\"Actually,\" Todd said. \"We should probably both go with her. I mean, if the security guards catch us again without Super Woman here, we're screwed.\"\n\n\"Good point,\" Colleen said.\n\n\"No way! I'm not poopin' in front of a boy. I'm not that kinky.\"\n\nTodd laughed. \"No, I won't go in with you, but I'll wait in the men's room.\"\n\n\"Oh! Smart!\"\n\n***\n\nRich and Beth stood outside the dressing room and stared at the moaning and laughing orgy. It was a sea of flesh.\n\n\"Think that nurse got to all of them too?\" Beth asked in her cartoon voice.\n\n\"Naah, they don't have the ears,\" Rich whispered. He was trying hard to make his voice sound lower and more manly.\n\nHe was failing. He still sounded like he belonged on a Christmas marionette show.\n\nBeth leaned against him. \"Those sounds? The music?\"\n\n\"I know.\"\n\n\"You hear the words too?\"\n\n\"Yeah.\"\n\n\"Are you...\"\n\n\"Horny?\"\n\nShe nodded and bit her lip.\n\nPeople were staring at them from the twisted piles of bodies.\n\nAnd, they were smiling.\n\nA woman was staring at Rich's crotch from a few yards away.\n\nBeth frowned and stepped in front of his bulging lederhosen, blocking her view. \"Let's...\"\n\n\"Go back inside?\"\n\n\"Yeah,\" she giggled.\n\nRich spanked her ass under the skirt as they dashed back into the dressing room and closed the door.\n\n***\n\n\"What else did you give us?\" Ken said menacingly as he towered over the split lipped nurse.\n\n\"What I'm supposed to give you. You got Cock Grow and Muscle Grow, the usual shots to make you a Junior Whoremaster.\"\n\n\"A what?!\"\n\n\"A Junior Whoremaster - you know: lots of muscles, a thirteen inch dick, and pheromones to make you irresistible to women.\"\n\nKen turned and looked at Melanie. \"She's a fucking loon.\"\n\n\"What did you do to me?\" Melanie asked. She was trying to crowd her boobs back into her bra and wincing.\n\n\"MILF Whore. DDD tits, super skinny waist, Booty Max hips, and longer legs. Your pheromones make you irresistible too.\"\n\nMelanie jumped to her feet. She reached back and grabbed her ass. \"Oh, Jesus Christ! Ken? Look!\" She turned around.\n\nHer skirt was close to ripping from her upraised and expanding behind.\n\n\"Oh, my God, I have J Lo's ass,\" she sobbed.\n\n\"This... this is some kind of allergic reaction. We're not really growing, we're just swelling.\"\n\n\"Yeah? Look at your nuts - you look like you're smuggling oranges between your thighs.\"\n\n\"Huh?\" He reached down and hefted his balls. \"Jesus!\" They were huge.\n\n\"Undo this! Right now!\" Melanie said as she stood over the nurse.\n\nKen blinked. Melanie was at least two inches taller than she had been a few hours ago.\n\n\"I... I can't,\" the nurse stammered.\n\n\"The fuck you can't!\" Melanie screamed.\n\nThe woman began to sob. \"I just give shots. I haven't been fully trained yet. The master hasn't gotten that far with me.\"\n\n\"The master? Who's the master?\" Ken asked.\n\n\"The god on the computer.\"\n\nKen shook his head. \"See? I told you. She's a fucking nut case.\"\n\n\"Oh, God, these shots probably gave us cancer. Cancer could do this, right?\" Melanie asked.\n\nKen rubbed her shoulders. \"It's going to be okay.\"\n\nShe jerked away. \"Don't... touch me. Nothing's changed, Ken.\"\n\n\"Uh, actually, a fuck ton of things have changed, Mel.\"\n\n\"You know what I mean. Our relationship hasn't changed. We're done. So, don't touch me.\"\n\n\"For fuck's sake, tell me what the hell I've done!\"\n\n\"Nothing. Not a thing.\"\n\n***\n\nKayla had fought it for as long as she could.\n\nSanta was too fucking hot to resist.\n\nHe lay on his back jerking from side to side as the goggles on his eyes programmed him.\n\nShe kissed her way up his body, paying careful attention to his straining cock.\n\nKayla smiled down and then straddled him, lowering her dripping sex onto his cock.\n\nSanta stopped jerking from side to side.\n\nHe brought his big hands up and grasped her waist.\n\n\"Slow, love. It's so...\"\n\nShe screamed.\n\nHe forced her down on his dick.\n\nKayla screamed, sure she must have internal bleeding from the massive tool lodged inside her.\n\nTo her surprise, there was no pain.\n\nBut, there was more pleasure than she had ever felt in her life.\n\nNerve endings deep inside her roared to life.\n\nSomething the master did to me, Kayla thought.\n\nSanta thrust up with his hips and Kayla screamed again, but this time, there was no fear. Her thoughts became muddled. Everything else faded away, and nothing existed other than the cock that surged into her.\n\nShe came, and he never slowed. She tried to pull herself free, the sensations were too strong. But, he held her in his massive hands and soon the pleasure returned.\n\nKayla threw back her head and laughed as her body convulsed again.\n\nShe opened her eyes.\n\nHe had removed his headset and smiled up at her with a grin that was almost cruel.\n\nShe tried to pull away as the goggles settled over her eyes.\n\nThe thrusting began again as the goggles came to life.\n\n\"The creature under you is called a Whoremaster. In a few moments, he will cum inside you. That cum will transform you and bind you to him forever. Your will, such as it is, will become his to command. In exchange, you will be loved unconditionally forever... Mrs. Claus.\"\n\nKayla screamed. \"No! You said I was in charge! You said...\"\n\nCum surged deep inside her as Santa filled her to overflowing.\n\nEuphoria. A sense of happiness she had never thought possible overtook her.\n\nAnd, she loved the man who filled her, this Whoremaster... she loved him more than life itself.\n\nHe chuckled in her ear and kissed her neck. \"There now. You're mine now,\" he said as she collapsed on top of him, still impaled on his cock.\n\n***\n\nThe restroom was, of course, occupied.\n\nThe ladies room floor was littered with naked women, and a couple of men as well.\n\nTara giggled. \"I guess they started doin' the nasty wherever they were when the music started, huh? Not sure where the guys came from.\"\n\nColleen tried not to look. \"Just... use the bathroom, okay?\"\n\nTwo women were going down on a guy with a thick cock in front of one of the stalls - the blonde was deep throating him as he lay on his back while the brunette sucked on his hairy balls.\n\n\"Yuck! I hate pubic hair,\" Tara laughed. \"All of us do. We like to be shaved. I really like that you shave your pussy, Colleen.\"\n\n\"Tara? Drop a deuce and lets get out of here.\"\n\nTara grinned mischievously and looked at the floor. \"You're totes gonna be mad.\"\n\n\"What?\"\n\nTara put her hands on Colleen's shoulders. \"I don't have to poop. I told you, I can eat a ton of food now and won't get sick.\"\n\n\"Then why...\"\n\nTara pulled her close and kissed her.\n\n\"Mmmph! No, Tara, stop!\"\n\n\"Shh,\" Tara whispered and kissed her tenderly before trailing kisses down Colleen's neck.\n\n\"No. Stop, Tara. I... I'm really mad at you.\"\n\n\"I know.\"\n\nColleen shivered as the gentle kisses on her neck continued. \"You... you made me watch that video knowing full well what it would do to me! Can't you understand that was wrong?\"\n\n\"I can't help it, Colleen. I love you.\"\n\n\"That's not how you show someone you love them! By helping hypnotize them? Tara, the fuck is wrong with you?!\"\n\nTara pouted. \"You never would have had sex with me if I hadn't.\"\n\n\"Well, you don't know that, because you cheated, Tara. You used mind control to get me into bed. That's wrong.\"\n\n\"You're in love with me,\" Tara said with a smile.\n\n\"Am I? I don't even...\"\n\nTara kissed her deep and giggled in her mouth.\n\nColleen was melting. God help her. After everything, she was sort of in love.\n\nTara leaned back and smiled.\n\n\"Don't. I'm mad,\" Colleen whispered, but not even she was convinced.\n\n\"You're conflicted because you love Todd too.\"\n\n\"Todd has nothing to do with this.\"\n\n\"Of course, he does. He's totes into you. I'm totes into you too. Me and you and Todd are a love triangle... except we're going to be the most fun love triangle like ever,\" Tara giggled.\n\n\"I'm not going to have a threesome, okay? I... I love you, but...\"\n\n\"You don't have to settle, ya know?\"\n\nColleen sighed. \"The world doesn't work that way, okay?\"\n\nTara laughed. \"It sort of does now.\"\n\n\"I'm not into threesomes, Tara!\"\n\nTara shrugged. \"Not yet.\" She bit her lower lip. \"You're really, really gonna be mad at me now.\"\n\n\"Huh?\"\n\nTara yanked the foam pieces out of Colleen's ears and tossed them over her shoulder. \"Sorry.\"\n\nColleen clamped her hands over her ears. \"Tara! What the fuck?\"\n\nTara spun Colleen around and held her with one arm from behind. She put her other hand over Colleen's mouth.\n\nColleen screamed into Tara's hand.\n\n\"Okay. It's okay. Just listen to the music, babe.\"\n\nColleen began to sob.\n\n\"Everything it says is true. It's right and good and yummy. Don't worry, I'm going to take good care of you - actually, you have to take care of me too, on account of I'm a lot ditzier than I was before. You'll still be super smart though.\"\n\n\"Why?\" Colleen mumbled against Tara's hand.\n\n\"Because I love you, and I want you to be happy. I'm really, really happy and I want you to be happy too. It's not like you think. And, I got all the shots to make you even happier in my purse. See, Bob sent me two kits. I even got shots for Todd.\"\n\n\"No!\" Colleen felt her body going limp. A warmth spread up from her crotch to her nipples. The words in her head painted such interesting pictures. She tried not to imagine the erotic things the words described, but she couldn't stop.\n\nA moment later, she didn't want to stop.\n\nAnd, when the first needle pierced her creamy white skin? She actually smiled.\n\n***\n\nHe was Santa. Nothing remained of who he had been. The brunette whore he had just made into his mate was passed out on the table, her arm over the side, crimson nails dragging the floor.\n\nThe voice in his head commanded him and he obeyed. He was mixing chemicals, for what purpose, he didn't know. Every speaker in the room hummed and the hum carried words.\n\nFrom the master.\n\nHe pricked his finger with a staple and let his red blood flow into the vial of green liquid he was mixing.\n\nThen he smiled as he drew the liquid into an empty syringe.\n\nHe leaned over the whore and rolled her onto her back.\n\nShe moaned in her sleep, the goggles still over her eyes.\n\nHe pushed the needle into her lower abdomen, and she cried out.\n\nThe liquid disappeared from the syringe as it flowed into her.\n\nHer body seized and sweat poured out of her, leaving her skin wet and slick.\n\nWhoremaster. That was what he was now. But, not the same as the other whoremasters.\n\nThe master had stripped away the empathy inflicted on the Church's definition of a whoremaster.\n\nHe felt nothing for the slut who was being transformed to even more extremes before his eyes. Nothing but lust.\n\nHe grabbed her legs and balanced them on his shoulders.\n\nSanta pressed his thick cock against her cunt and let her juices lubricate him.\n\nThen he lowered his cock and speared the slut's ass, driving his full length into her as she cried out again.\n\nShe began rotating her hips, giving her depths to him as he began thrusting.\n\nHer breasts swelled even larger. A moment later, thin jets of milk sprayed upward from her erect nipples.\n\nShe is infectious, the master's voice said in the hum.\n\nSanta smiled as he fucked her.\n\nShe smiled up at him as his balls slapped against her.\n\n\"What have you made me?\" Mrs. Claus asked.\n\n\"I have made you their downfall,\" Santa said. He yanked his cock from her gaping ass.",
        "Then he spun her around on the desk and shoved his cock down her throat.\n\n***\n\nTodd stood outside the ladies room door. It was taking a long time.\n\nA very long time.\n\nThe mens room had been crowded, the stalls and urinals blocked by copulating bodies.\n\nIn the end, he pissed in the trough sink.\n\nHe had to fight his way out of the room, but, though these hypnotized people were energetic, they weren't exceptionally strong - either that or they simply weren't predisposed to violence.\n\nOutside the ladies room, he only had one couple to contend with.\n\nThe naked woman was middle aged with long salt and pepper hair. She leaned with her hands on the tile as a thin eighteen year old with long black hair pounded her from behind.\n\n\"He's... young enough to... be my son,\" she moaned.\n\nTodd tried not to stare.\n\nThe woman's breasts were big and fake, her hair had obviously been done recently along with her manicured nails. Her fingers were adorned with expensive looking rings and a watch that might have been a Rolex.\n\nHer makeup was half rubbed off, and her skin was splattered with cum. Her rings dripped with semen and her coifed hair was matted.\n\n\"So good! God, so big.\" Her eyes were half closed. She smiled at Todd. \"I want you too... I'll suck you. I'll get on my hands and knees and suck you off while he fucks me. I always wanted to do that.\"\n\nTodd swallowed. \"No... thank you.\" How were you supposed to turn down a sexual advance? He'd never done it before, never been in that situation before.\n\nShe stared down at his crotch. \"You're hard. I can see it. Let me make you feel good.\" She reached down and caressed his hardening cock through the latex lederhosen.\n\nHe pushed her hand away, gently. \"No, I'm fine.\" His first order of business after getting out of this hallway was going to be finding clothes. Real clothes not made of form fitting rubber.\n\n***\n\nColleen was lost. It should have horrified her.\n\nInstead, with Tara guiding her, entire worlds were opening to her.\n\nThe thought of being like Tara had been frightening before, but now, as the drugs coursed through her, changing her? She stared at Tara's huge rack and not only wanted to fuck her, she wanted to be her.\n\nThe constant words that filled her head were nothing in comparison to the drugs. In particular, there was something called Slutifier that Tara had injected into one of Colleen's ovaries.\n\nShe had been horny before - nothing like guys often described, but she knew the longing feeling for someone, anyone, to touch her.\n\nThat feeling had been increased by a thousand.\n\nPornographic images flooded her mind and she wanted. She needed. She craved.\n\nIt had barely registered in her mind as Tara stripped off Colleen's ruined dress and laid the borrowed jacket on the floor.\n\n\"I'm gonna leave you with your pretty latex panties. Latex makes everything better, doesn't it?\" Tara whispered in her ear as she gently cupped Colleen's sex.\n\n\"Uh, huh,\" Colleen whispered.\n\nTara took Colleen's hand and guided it down, sliding Colleen's fingers under the latex.\n\nShe was so wet! Lube was dripping from her, coating her fingers. She found her little clit... only, now it was the size of a grape. She squealed as the sensation went like an electric current through her.\n\n\"I know, right? So much more sensitive now,\" Tara whispered in her ear. \"You're gonna need a lot of sex, Colleen. Luckily, I'm totes horny alllll the time!\"\n\nTara kissed her and Colleen moaned into her mouth. She was in love. Her trepidation before now seemed silly. Tara was beautiful and loving, why had she resisted?\n\nShe did this to you! A voice cried in Colleen's head.\n\nIt was true. Tara had been... naughty. But, not evil, not uncaring.\n\nShe had done some bad things because she loved Colleen!\n\n\"That's right, honey. Just keep rubbing your clitty. You're gonna cum totes hard!\"\n\nAnd, she did. Tara clamped her lips over Colleen's and Colleen screamed into her mouth as her body went off like fireworks.\n\nWarmth spread through her crotch and suddenly liquid dripped out the sides of her rubber panties.\n\n\"I... peed!\" Colleen said, embarrassed.\n\n\"Naah, you squirted. It's different. I think.\"\n\nColleen stared down at the puddle on the floor between her ankles.\n\nTara wiped Colleen's panty crotch with two fingers, then licked her fingertips with a wink. \"You taste totes good, Colleen!\"\n\nHer fingers went back to Colleen's crotch and then she held her wet fingertips to Colleen's lips.\n\n\"No, I don't want...\"\n\nTara pushed her fingers into Colleen's mouth.\n\nColleen mumbled in protest, but then licked and sucked. It actually tasted pretty nice! Musky and slick and warm.\n\nTara giggled.\n\nThen she led Colleen across the floor to the threesome from earlier: a blonde and a brunette were sucking off a guy as he lay on his back on the floor.\n\nTara gently pulled the girls off him.\n\nThey protested meekly, but then began to moan contentedly when Tara rolled the blonde onto her back and spun the brunette so they could 69. Soon, they were contentedly munching each other's muffs.\n\nThe guy was stroking his big cock, keeping it hard.\n\nTara dragged him by his ankles along the tile. \"Come here, Colleen.\"\n\n\"Huh? No,\" she said as she stared at the guy's thick cock.\n\n\"Yes. You know you need cock. Now, come here,\" she smiled and tapped her toe on the tile.\n\nColleen licked her lips and stepped forward.\n\n\"Look at my girlfriend, mister. Isn't she hot?\" Tara giggled into the man's ear as she lay down on the tile beside him.\n\n\"F... Fuck, yeah.\"\n\nTara wrapped her hand around the base of his cock. \"Mmm, nice and thick and long. Doesn't it look yummy, Colleen?\"\n\nColleen knelt down between his thighs.\n\n\"Now, Colleen, you need to suck his big cock for him. He really, really needs to cum, and we gotta help him.\"\n\nColleen nodded. Then she blinked. \"No, Todd...\"\n\n\"Isn't here. Todd isn't here and this guy totes needs a blowie. So, we gotta suck all the delicious cum out of him.\"\n\nColleen felt herself leaning forward.\n\n\"That's it. Open your mouth and give it a great big kiss,\" Tara giggled.\n\n\"Tara, I don't... want to do this,\" Colleen whispered.\n\nTara giggled. \"Then why are you opening your mouth?\"\n\n\"I... why did you do this to me?\"\n\n\"I already told ya... 'cause I love ya. Stop worrying. It's going to be fine, I promise.\"\n\nColleen pleaded with her eyes. \"I want you and I want Todd. I don't want anyone else.\"\n\nTara smiled. \"I know. But, the Church wants us to be completely free. Just try.\"\n\n\"But, Todd won't... understand.\"\n\nTara giggled. \"Don't worry, we're gonna make him understand. And, it'll be super duper fun! Trust me, I know what I'm doing. I'm trained and shit.\"\n\nColleen sighed. She leaned forward and licked the tip of the man's cock. His precum was salty and thick and, just like Tara said: totes yummy!\"\n\n***\n\nKen looked at himself in the mirror. The image had his eyes, his face.\n\nOther than that? It wasn't him.\n\nHe'd never been athletic, but now he looked like he could enter Mr. Universe and win.\n\nOnly, he had way too much package for the tight shorts.\n\nHis cock hung down almost to his knees, and his balls were so big they were uncomfortable.\n\nAnd, then there was the constant drip, drip, drip of lube from his piss slit.\n\nHe started to get an erection... again. He couldn't control it - sexual images would pop into his head and the next thing he knew he had a third, hard leg.\n\nThe 'nurse', if that's what she was, kept looking at him and smiling.\n\nShe'd be sexy if not for the meth teeth.\n\nMelanie, on the other hand...\n\nKen had always loved her. He had never thought of cheating on her.\n\nBut, now, he couldn't keep his eyes off her.\n\nHer boobs were now far too big for her bra. She had just grabbed a unicorn t-shirt off the rack and put it on over her bare breasts.\n\nWhich had been fine when her breasts were like ripe grapefruits.\n\nNow, however, they were ripe cantaloupes, and her shirt that had been baggy before had become a half shirt. She was scanning the racks for a new cover up.\n\nHer hips were doing wonderful things for the stretchy jeans, and the denim crotch was stained dark with her own lube.\n\nShe caught him looking and clasped her arms around her big breasts. \"Stop staring at me.\"\n\n\"I... I can't help it.\"\n\n\"Try.\"\n\nShe was as cold as ever.\n\nIt had started a couple of years ago. She grew steadily more distant over the months.\n\nAnd, then, one day she simply met him at the door and handed him his suitcase. She told him to leave without explanation.\n\nHe had half expected to find out there was another man, but either she was very secretive even now, or there wasn't someone new in her life.\n\n\"Don't you want to fuck? You should want to fuck,\" the nurse said.\n\n\"No,\" Melanie said.\n\n\"Wow, you two must be really fucked up. You should be fucking like rabbits with the Slutifier pumping through you.\"\n\n\"Slutifier?\" Ken asked.\n\nShe bit her lower lip and stared at his cock. \"Your sex hormones are amped up - both of you. From the shots I gave you.\"\n\n\"I'm fine,\" Melanie said as she looked away.\n\nThe nurse burst out laughing. \"Yeah, I can smell that wet cooch all the way over here.\" She giggled. \"And, your dick looks like a fence post.\"\n\n\"Look, just don't talk,\" Ken said.\n\nThe nurse sighed. \"I can take care of you. Mouth, pussy, ass... whatever you need. I'm a nurse. I take good care of my patients.\" She spread her legs, showing a wet, hairless pussy.\n\n\"Go ahead, Ken. Don't let me stop you,\" Melanie said.\n\n\"Pass,\" Ken said.\n\n\"The invitation was for both of you, together or separate,\" the nurse said with a smile as she stroked her little pink clit. \"I'm really good. I think I might have been a sex worker before.\"\n\n\"Big shocker there,\" Melanie said with a smirk.\n\n\"Don't you like girls?\"\n\nMelanie grimaced. \"No. And, if I did, I could do better than some meth head with rotten teeth.\"\n\nThe nurse's smile faltered. \"I'm not a meth head. I'm a nurse.\"\n\n\"You're a goddamned psychopath!\" Melanie clenched her fists and went after her.\n\nKen stepped in front of her and put his hands on her shoulders. \"Hey, come on. Mel, she's sick. I'm not even sure she knows what she did.\"\n\nMelanie looked down his naked body at his thick cock. There was a look on her face. It was as if the ice had cracked and lust was leaking out through the fissures. She blinked and then glared at him, the ice reforming. \"Put on some fucking clothes! You like parading around like this or something?\"\n\nShe spun around and stalked away.\n\nThe seam in the back of her jeans gave way and they split. \"Fuck's sake!\" She screamed and grabbed another pair off the rack.\n\n***\n\nDeepthroat was difficult.\n\nColleen had sucked cock before, but this nameless guy was about two inches longer than the biggest she'd ever sucked.\n\nTara stroked her hair and whispered encouragement as she bobbed up and down on the stranger's dick. \"No, Colleen, no hands. That's cheating,\" Tara giggled as she pulled Colleen's hand away from the base of the guy's cock.\n\nColleen grumbled and tried to take the cock deeper, but her gag reflex was triggered again, and she pulled back just before hurling.\n\nShe was so ashamed.\n\nIt was important to be able to suck a cock properly! What was Tara going to think? She would be so disappointed.\n\nAt the same time, a tiny voice inside her was screaming: You're not a whore! Stop doing this! He's a total stranger!\n\n\"Hmm,\" Tara said. \"Hang on a sec.\" She opened her little purse and pulled out a spray bottle.\n\nThe words on the side read, \"Gag No More.\"\n\nTara slid the stranger's dick from Colleen's mouth. \"Open wide.\"\n\nColleen opened her mouth and Tara sprayed liquid into her throat.\n\n\"Now, suck it like ya mean it!\" Tara giggled.\n\nColleen's throat felt strange, numb and tingly at the same time. She kissed the beautiful cock again and let it slide between her lips.\n\nIt went further and further along her tongue.\n\nThen it hit the back of her throat... and it kept going!\n\nHer eyes opened in shock as her gag reflex became a distant memory.\n\nTara laughed. \"Yay! A cocksucker is born!\"\n\nShe was doing it! A moment later the man's thick balls pressed against her chin.\n\n\"Okay, mister, fuck her face real hard, okay? But, you make sure to let my girlfriend breathe,\" Tara said as she sat up on the bathroom floor.\n\nColleen felt the man's fingers twist in her hair and then he was pumping his dick in and out of her new mouth pussy.\n\n\"That's my girl,\" Tara said as she stroked Colleen's upturned ass. She slid a finger down and under Colleen's latex panties. Tara tickled her asshole before sliding down farther to her soaked pussy and clit. \"Make him cum really hard, and you swallow every drop like a good girl, 'kay?\"\n\nColleen moaned in agreement and then angled her throat so the man could thrust even harder.\n\n***\n\nOutside the restroom, Todd was hoping the girls would hurry.\n\nBecause, the MILF wasn't giving up.\n\nShe was on her hands and knees as the younger man fucked her hard from behind.\n\nShe was kissing Todd's thighs and looking up at him imploringly.\n\nAnd, he was having trouble not giving in.\n\nSomething was wrong, very wrong. The short exposure to the sound in the mall before he plugged his ears had done something to him. Or, was there something more? Was there something in the air? A gas of some kind, maybe?\n\nThe MILF kissed her way up and began nuzzling his erection through the latex.\n\nTodd reached down and gently nudged her lips away from his package.\n\nShe just smiled and leaned forward again, this time, her tongue traced his hard cock outlined in rubber.\n\nHe reached down again.\n\nBut, this time, he simply stroked her hair.\n\nShe giggled as she began kissing the bulge in earnest.\n\nBehind her, the man fucking her was relentless, and he could hear the man's balls slapping against her as he fucked her.\n\nThe MILF reached up and hooked her fingers in the tight latex waistband.\n\nTodd watched open mouthed as she peeled the front down and his cock sprang free.\n\nShe engulfed him and Todd moaned, his fingers entwined in her hair.\n\n***\n\nInside the ladies room, Colleen swallowed the man's thick load as his cock erupted in her throat. She had never been a swallower, but now she actually pulled him out a little, letting the warm cum pour onto her tongue so she could taste the salty liquid.\n\nShe gulped loudly, wanting to nurse his cock until he grew hard again.\n\nAll so she could swallow his jizz one more time.\n\nShe was pleased with herself. Here she was lying between a stranger's thighs, nursing his cock, feeling him grow soft in her cum filled mouth and wanting to do it again and again.\n\nGod, what was she now?\n\nWhore, she thought. I'm a whore.\n\n\"Hey, I want some too!\" Tara giggled in her ear.\n\nSomething almost as delicious as cum! Kink! She smiled and let the man's cock slide from her lips.\n\nThen she turned her head and kissed Tara deeply, pushing cum into her mouth which the blonde bombshell accepted eagerly.\n\nIt was so dirty and hot and wonderful and maybe being a whore wasn't going to be that bad at all!\n\nTara smiled at her as she pulled away, her lips glistening with the stranger's cum. \"Round two?\"\n\nColleen looked up at the man from between his thighs. His cock was slick and flaccid, his eyes shut. \"I think he's done.\"\n\nTara giggled. \"Silly. We got ways of fixin' that!\" She shrugged her shoulder and pulled the front of her cocktail dress down.\n\nColleen gasped at the sight of Tara's left boob. Uncovered, it was even more impressive.\n\nShe was plastic perfection. Tara would be the envy of any fetish porn actress.\n\nTara smiled at her as she stared. \"I like it when you look at me.\" She pointed her index finger at her temple. \"I... it's hard to think a lot now. These boobies are totes cute, but my brain is kind of muddled now. You gotta watch out for me, 'kay?\"\n\nColleen just nodded slowly.\n\nTara's nipple was thick and dark, and she was wearing some kind of clamp on it: a black plastic pentagram with a spring loaded clamp in the middle.\n\nTara looked shy. \"I leak a lot. Your titties won't leak as bad as mine, but your Ambrosia will be just as powerful.\"\n\n\"Ambrosia?\"\n\n\"Milk. Our milk. You'll see,\" she said as she reclined and cradled the man's head against her breast. She pinched the clamp and it released.\n\nA long stream of breast milk jetted out and wet the man's cheek.\n\nHis reaction was instant: his eyes popped open and he jerked like he had been electrocuted.\n\n\"Suck,\" Tara whispered.\n\nThe man opened his mouth and gently kissed Tara's wet nipple.\n\nHe seized again, his back arching. He sucked in earnest, latching on like a thirsty infant.\n\nColleen gasped.\n\nHis cock jerked and then went fully erect.\n\nIf anything, he was harder than when he had been in her throat!\n\nShe stared in amazement.\n\nTara stroked his cheek as he sucked. \"We want them to go all night, give them like the best sex ever. That's how we make people happy.\"\n\nThe man's throat worked as he sucked down the 'Ambrosia'.\n\n\"Fuck him, Colleen,\" Tara said sweetly.\n\n\"What?\"\n\n\"Fuck him. Ride his cock.\"\n\n\"But... I need a condom...\"\n\nTara giggled. \"Not anymore, silly. You can't get pregnant.\"\n\nColleen was staring at the hard, thick cock. She licked her lips involuntarily. \"You... what did you do to me?\"\n\n\"Your left ovary is sleeping. The right is pumping you full of sex hormones - that's why you're super horny.\"\n\n\"Can it be undone?!\"\n\nTara nodded. \"Someday. But, for now, you just have sex for fun!\"\n\nColleen swallowed. \"But, what about diseases? I don't know him.\"\n\nTara shook her head. \"I got something I need to give you. It will finish your transformation, but you gotta want it. You have to agree.\"\n\n\"What will it do?\"\n\nTara smiled. \"You'll never ever get sick again. You won't grow old. And, you'll live forever.\"\n\nColleen stared at her. \"That... no, that's not possible.\"\n\n\"Told you. We're the next step in human evolution.\" She pointed at the raging erection that Colleen was now stroking absently. \"You got work to do. Only, this time, you get to cum too!\"\n\nColleen looked nervously over her shoulder at the bathroom door.\n\n\"He's gonna understand. We're gonna make sure he does. I'm super duper persuasive.\"\n\nColleen began to smile.\n\nShe crawled up the man's body and then squatted over him.\n\nShe still held his cock in one hand. Colleen rubbed it up and down the latex crotch of her panties.\n\nTara sat up and reached behind Colleen.\n\nColleen felt the latex slide away from her pussy.\n\nShe rubbed the man's cock against her wet slit and shivered. \"Ooo...\"\n\n\"Mmm, go on, take it. It's yours,\" Tara whispered.\n\nColleen guided him inside.\n\nThe man arched his back and thrust deep inside her.\n\nTara laughed as Colleen ground her hips against the invading cock.\n\nSo thick! He was touching so many spots inside her. She ground against him harder, maximizing the pleasure, not only for him but for herself as well.\n\nTara crouched over his face and lowered herself down.\n\nThe man began to suck and lick her clit and Tara moaned. \"Mmm, yeah. Wow. I really like that, mister.\"\n\nColleen worked her hips as the man fucked her hard.\n\nTara was facing her, and she drew Colleen into a tender kiss.\n\nColleen was gasping for breath. \"So... Jesus... Tara... this is so...\"\n\nTara nodded. \"Ya ain't seen nothin' yet.\" She guided Colleen's mouth down to her leaking left breast.\n\nColleen didn't hesitate, she latched on and sucked.\n\nTara sighed. \"You aren't transformed yet, so my Ambrosia still has a kick.\"\n\nColleen couldn't hear her. Her body was wracked by multiple orgasms that went from her toes to her head in delicious waves.\n\n***\n\nThey walked hand in hand through the mall: the man who had once been a deputy and the woman who had once been the head security guard.",
        "Those memories were all gone now.\n\nNow, there was only Santa and Mrs. Claus.\n\nThe writhing mass of naked bodies on the floor grabbed at them as they passed, this man dressed in a red leather Santa suit and his wife in fur trimmed red latex.\n\n\"Ho, ho, ho... whores,\" Santa bellowed.\n\nMrs. Claus laughed, her stilettos echoing through the hall above the moans.\n\nThey reached the center of the mall near the food court.\n\nPictures with Santa.\n\nSome of the decorations had been destroyed.\n\nFour unconscious people lay in the ruined decorations: two men and two women.\n\nSanta reached down and grabbed the nearest woman by her long, blonde hair.\n\nShe opened her eyes and smiled, a line of drool dripping from the corner of her lips.\n\nSanta smiled behind his long white beard. \"I'll bet you're nice and naughty, aren't you, slut?\"\n\nShe nodded.\n\n\"Good,\" he bent her over the picture desk and hooked both hands in her tight jeans. He ripped them in two down the back, exposing her black lace thong, which he tore off as well.\n\nHe playfully slapped her ass and then pushed a thick middle finger in her pussy.\n\nShe screamed, \"Yes!\"\n\nHe reached down and jerked the front of his leather pants down, pulling out the fire hose of a cock he now possessed. \"Merry Christmas, bitch.\"\n\nHe pushed ten inches into her, and the woman screamed, spreading her legs as wide as she could and arching her back.\n\nSanta fucked her as he wound his thick fingers in her long blonde hair.\n\nMrs. Claus stood behind him stroking his hips as he took the blonde slut.\n\nHis big balls pulled up and he poured a massive load into the stretched pussy.\n\nThe woman screamed again and then squirted around his cock, a heavy puddle of girl cum collecting on the floor between her spread legs.\n\nHer tits were growing within seconds as her hair turned platinum blonde.\n\nHis throbbing cock still inside her, he squeezed her ass cheeks, feeling them grow.\n\n\"Fuck. Good. More. Fuck,\" the woman moaned as he pulled his cock free from her body. The improved Bimbo flu took hold, and she rolled, giggling, onto the floor.\n\n\"Bring me the other slut,\" Santa laughed as he stroked himself back to an erection.\n\n***\n\nThe man's hips jerked as he poured cum into Colleen's depths.\n\nShe just moaned and continued to grind her hips, her muscles massaging the white cream from his cock.\n\nShe opened her eyes a little to see Tara smiling at her.\n\n\"It's what we do. We make them happy, see? If you make people happy enough? They won't be stressed and mean all the time.\"\n\n\"You... really believe that don't you?\" Colleen whispered, feeling the man soften inside her. Her body still held onto him even as she raised herself off his limp cock.\n\n\"Yeah. We'll get you programmed with the videos when we get outta here. You'll understand too.\"\n\nColleen tingled at the thought of letting Tara 'program' her. Would she be sweet and adorable like Tara afterwards?\n\nThe man's dick finally slid out of her and fell on his stomach, leaking cum onto his naval.\n\nColleen had an impulse to lick him clean.\n\nBut, Tara was already pulling the blonde and brunette out of their 69 and snuggling them up to the man.\n\nWithout being told, they began cleaning him with their tongues, then giggling as they shared the cum they had lapped up in a sapphic kiss.\n\nColleen was so entranced by the scene, she was jolted when she felt Tara push something hard against her pussy.\n\nTara smiled at her as she maneuvered what looked like a bottle of water between Colleen's legs.\n\nIt had two nozzles on it, and the longer nozzle slid into her snatch.\n\nShe moaned a little - it was cold.\n\n\"Sorry,\" Tara said. \"I shoulda warmed it for ya. This is Cunt Clean. This cleans you out for your next John... guys usually don't like doing your pussy if its full of another guy's cum. Silly, huh?\"\n\nLiquid surged inside her, but at least it had been warmed by Tara's hand around the thin bottle.\n\n\"Scootch back a little,\" Tara whispered.\n\nColleen let Tara push her into a squat over a small drain in the bathroom floor.\n\nTara winked at her and pulled the nozzle out of her pussy.\n\nClear liquid poured out of her and into the floor drain.\n\n\"There! All clean.\" Tara bit her lower lip. \"You think Todd likes assfucking?\"\n\n\"Huh?!\"\n\n\"You know,\" Tara whispered as she pushed a lock of hair out of Colleen's face. \"Up the butt.\"\n\n\"No! I mean... I don't think so. I don't know! Jesus, Tara.\"\n\n\"You wanna make him happy dontcha?\" Tara asked with an innocent look.\n\n\"Of course, I do...\"\n\n\"Then we need to make sure you're ready for him in case he wants to assfuck you.\"\n\nColleen was speechless. \"I... no... I don't want him to...\"\n\nTara looked confused. \"I fucked your butt last night, you fucked mine too. Remember? With the double dong?\"\n\n\"But, that was a... dildo. I mean, I was really messed up last night.\"\n\n\"'Fuck my ass, Tara... Ooo... Ooo... do it to me, Tara. I wanna be your bitch!'\" Tara mocked. \"You just kept saying that over and over. Totes turned me on.\"\n\nColleen felt herself growing wet. \"I... Tara... are you sure it's okay? What if he doesn't want to?\"\n\nTara giggled. \"Oh, he's gonna want to. He's gonna want every inch of ya.\" She put the bottle back between Colleen's legs.\n\nColleen felt the plug shaped nozzle on the Cunt Clean bottle probing at her little pucker. \"Fuck!\"\n\nTara laughed. \"This'll make sure you're cleaned out and stay that way for a few hours... oh, and it'll totally bleach your little hole pink.\"\n\n\"Sweet Jesus,\" Colleen mumbled as the nozzle pushed inside.\n\n***\n\nTodd wasn't getting a blowjob - he was throat fucking the MILF on her knees in front of him.\n\nAnd, she loved it, moaning with each stroke as his cock pushed into her throat.\n\nThe tighter he held her hair, the louder she moaned.\n\nAll the while, the other guy was fucking her from behind.\n\nHad this been her fantasy? Being used by two men at once? Was she finally living out some masturbatory dream?\n\nJudging from her excitement, the way she earnestly sucked him and ground her hips against the rear assault, he knew the answer was 'yes'.\n\nWas this bad? Was it wrong? When the effects of the droning from the speakers wore off, would she hate what she had done? Or, would she smile at the memory?\n\nHe smiled as he watched his dick slide in and out of her wet lips, the laugh lines around her sexy eyes emphasized by the smile on her sucking mouth.\n\nTodd was close.\n\nAnd, then the door behind him opened.\n\nColleen and Tara! He had forgotten. In his lust, he had pushed them out of his mind.\n\nColleen stood beside him looking up into his eyes as he continued to face fuck the MILF.\n\n\"God! Colleen... I... I'm sorry... it's just, she wanted to and I'm so...\"\n\nShe literally jumped around his neck, kissing him deep as her hand dropped down his muscled stomach.\n\nColleen's hand wrapped around his cock as the MILF sucked.\n\nHe held her in his left arm even as he pulled the MILF farther down his cock with his right hand.\n\nColleen leaned back and smiled. \"It's okay. I understand. I think... we're different now. It's okay.\"\n\n\"Really?\" Todd whispered.\n\nShe began stroking his cock. \"Better than okay.\"\n\nHe felt warmth behind him as Tara hugged him from behind.\n\n\"Everything is going to be super duper okay,\" Tara whispered.\n\nTodd cried out as Tara pulled the foam plugs out of his ears.\n\n\"It's okay, Todd,\" Colleen whispered as she snuggled against his neck. \"Just listen to the words - they're not wrong. They're saying beautiful things.\"\n\nThe words flooded into Todd's head. A slow smile crept across his lips.\n\nColleen returned the smile and nodded. She pulled his stiff cock from the MILF's lips.\n\nColleen looked down. \"He's going to cum on your face, in your hair, in your mouth. You want that, don't you?\"\n\n\"God, yessss!\" The MILF gasped.\n\nColleen jacked him faster. \"Todd, I want you to cum all over her face. Drench her in cum. I want every drop of cum in your body all over that slut. And, do you know what I'm going to do?\"\n\n\"N... No, what?\"\n\nShe bit his earlobe. \"I'm going to lick it off. Me and Tara. We're going to eat your cum right off that slut's face.\"\n\nTodd cried out as his cum spurted directly onto the MILF's face.\n\nTara and Colleen laughed as the woman opened her mouth wide and took two more thick jets directly on her tongue.\n\nColleen just smiled knowingly as she pumped his dick, depositing every drop on the woman's face and hair.\n\nThen she and Tara got on the floor and covered the woman's face with lesbian kisses while Todd leaned against the wall watching in disbelief.\n\n***\n\nAt Pictures with Santa, the two wives had been completely transformed. They were now endowed with balloon tits and firm round asses. Even their faces were different, eyes larger, lips fuller.\n\nTheir hair was thick and flowing almost to their asses.\n\nAnd, they were holding their own husbands down as Mrs. Claus stood over them, legs spread and fists on her hips. \"Santa doesn't need any followers with cocks. So, we're going to take care of that. You see, boys, I have a virus. It's super contagious and fast acting. You two are going to fuck me... look at your cocks, you're so hard just looking up my little skirt, you can't wait to sink your dicks in me.\"\n\nShe straddled the first man's cock. \"You're going to slide in this tight little pussy of mine, and my nasty little virus is going to go right inside you. It's going to shrivel those little balls and make that little cock into the cutest little clitty. You're gonna have big titties just like your former wifeys. And, a nice slick pussy too. Then? Santa is going to literally fuck your bimbo brains out and leave you giggly little sluts. Infectious, giggly little sluts.\"\n\nWithout ceremony, she squatted on the hard cock and slid down.\n\nThe man groaned, not caring what was going to happen to him.\n\nSanta watched and smiled from his throne.\n\nThe dressing room door opened a little.\n\nSanta kicked it open with his leather boot.\n\nThe cutest blonde elf was standing in the door with a shocked look on her face.\n\n\"Merry Christmas, little elf,\" Santa growled.\n\nShe just looked at him open mouthed.\n\n\"Come here and sit on Santa's lap,\" he said patting the bulge in his red leather pants.\n\nA tall, muscular elf appeared behind her and wrapped a thick arm around her.\n\n\"Get your filthy hands off my elf, boy,\" Santa laughed.\n\n\"She's not your elf,\" the boy elf replied.\n\n\"She will be. You smell me yet, slut?\" Santa asked.\n\nThe girl elf blinked and wobbled a little in the boy's arm.\n\n\"Beth? Are you okay?\" The boy asked.\n\n\"Rich? I... he's so... I want to do what he says,\" she whispered in a sleepy voice.\n\nRich held her tighter.\n\n\"Let her go, boy. She's too much whore for you to handle.\"\n\n\"Don't call her that,\" Rich said as he made a fist with his other hand.\n\nSanta bellowed in laughter. \"You whelp. You ought to be drowning in my pheromones too. Bring the little slut closer and I'll let you lick my boots while I fuck her.\"\n\nBeth pulled away from Rich.\n\nRich tried to grab her back. \"Beth! Stop!\"\n\n\"That's right. Get over here, whore.\" Santa was unbuttoning the strained crotch of his leather pants.\n\nBeth gasped as he pulled out a cock as long as her forearm. \"Wow,\" she whispered in her squeaky voice.\n\n\"Turn around and bend over, girl. I got a yule log to put in your fire.\" Santa roared with laughter at his own joke.\n\n\"You motherfucker!\" Rich bellowed.\n\n\"It's okay, Rich. I want to,\" Beth whispered. She turned around and bent over, pulling the latex crotch of her panties aside. \"We belong to him.\"\n\nSanta stood up. \"Fucking A you do!\" He hefted his thick cock in his right hand. \"Gonna show your little girlfriend what a real man feels like, then you can eat her out when I'm done,\" Santa said with a wink.\n\nRich glared at him. He turned to the side and wrenched a four foot long plywood candy cane out of the display. He turned it on it's edge and took aim. \"I don't think so, asshole.\"\n\nInches from Beth's pussy, Santa looked toward Rich as the muscular elf swung the plywood like a sledgehammer.\n\nSanta's nose exploded and he tumbled sideways on the floor, taking out the velvet ropes before crushing a nativity scene.\n\nBeth turned and looked at Rich with half-lidded eyes. She shook her head. \"Naughty list.\" She fainted in Rich's arms.\n\nHe tossed her over his shoulder in a fireman's carry and broke into a run.\n\nBehind him, Mrs. Claus was screaming like a banshee.\n\n***\n\nMelanie was crying as her expanding boobs made another t-shirt obsolete. \"Why won't it stop!?\"\n\n\"It will. You're almost DDD,\" the nurse said with a pout. She was leaning against the locked glass door of the store.\n\nBehind her was a pressing crowd of orgy revelers.\n\nThey wanted in, and they were eyeing Melanie hungrily through the glass.\n\nKen just watched helplessly. He couldn't console Melanie. She rebuffed even kind words, much less the loving embrace he longed to wrap her in.\n\nInstead he just watched as she sobbed, her body becoming what was to him a fetish dream, but a freakish nightmare to her.\n\nHis own body had finally stopped expanding.\n\nHe was bulging with muscles, and his t-shirt was stretched tight across his huge chest.\n\nHe had managed to squeeze his muscular thighs into the largest pair of sweatpants he could find on the rack, but his 'third leg' was clearly defined under the fabric - worse, his new cock leaked constantly, soaking the pants leg all the way to his ankle.\n\nThey had to find a way out, but the back door was chained shut from the outside.\n\n\"We have to get out of here,\" Melanie moaned as she cupped her enormous breasts.\n\n\"We will.\"\n\nAnd, at that moment, the glass door shattered, the weight of the crowd leaning against it finally becoming too great.\n\nThe crowd poured in, knocking the nurse to the floor.\n\nKen grabbed Melanie's hand. \"Come on!\"\n\nThey dashed into the stock room.\n\nKen turned and locked the door behind them. Then he reached over and grabbed a steel shelving unit in both hands.\n\nThere was a wrenching sound.\n\nThe unit had been bolted to the floor.\n\nThose bolts had snapped.\n\nKen was holding a twelve foot tall steel shelving unit two feet off the ground.\n\nAnd, it must have weighed over 400 pounds.\n\n\"Jesus,\" he whispered looking at his own hands.\n\nSomething thumped against the locked door.\n\n\"Ken!\" Melanie shrieked as something thumped even louder against the steel door. It was beginning to warp.\n\nKen angled the steel shelves against the door and pushed.\n\nThe shelves bent, thick angle iron bending effortlessly in his powerful hands. He just stared, unable to believe how he was wedging the steel in place, blocking the door.\n\nWhen he was done, he took a step back and stared at his big hands. \"That's not possible!\"\n\nWham! Something hard hit the door.\n\nMelanie grabbed his hand. \"The outer door! I know it's chained, but...\"\n\nKen turned and stared at the back door.\n\nHe kicked out with his right foot.\n\nThe door didn't just open - it exploded off its hinges and the chain behind it clattered to the floor.\n\nBeyond was a hallway that connected the stores together on the back side.\n\n\"Come on!\" Melanie cried, and they ran hand in hand into the dark hall.\n\n***\n\nMaria Marapova held the shipping manager by the throat two feet off the concrete floor. The man's face was turning purple.\n\nNormally, she would have just reached into the man's mind and pulled the information out.\n\nHowever, that was impossible.\n\nThe man slowly choking to death in her grasp was transformed. He had been given Ambrosia, made immortal, and was completely immune to mind control.\n\n\"You will tell me where the chemicals were shipped, or I will torture you to death. A few lifetimes ago, there were Nazis who thought they could hold back information from me.\" She smiled up at the choking man. \"I tortured them till they talked, or they died. Sometimes both. They called me the Icy Death.\"\n\nBehind her, Brittney snickered as she sifted through papers on the warehouse manager's desk.\n\nMaria shifted her eyes and glared. \"Something funny?\"\n\n\"Icy Death?\" Brittney broke into giggles. \"Not what I call you.\"\n\n\"Shush, Brittney.\"\n\nDemona rolled her eyes. \"Put him down, your royal bitchiness. You're not torturing anybody.\"\n\n\"Excuse me!\" Maria yelled.\n\n\"You heard me. You're not torturing anybody on my watch. We're not the bad guys here.\"\n\n\"You arrogant little...\"\n\n\"Yep. Arrogant little genius doctor whom you need to sort this mess out. So, put pencil neck down and let him breathe, or you can handle this on your own. I have zero tolerance for cruelty.\"\n\nThey had gone from the airport straight to where the shipment of chemicals had been delivered, only to find that they had been shipped on somewhere else.\n\n\"He can last a few minutes longer,\" Maria said with a smile.\n\n\"Want to know what I call her?\" Brittney asked.\n\n\"Sure,\" Demona said.\n\n\"No! Brittney, don't you dare!\" Maria growled.\n\n\"Snuggly Wuggly, because when she's sleepy, she loves to spoon,\" Brittney said with a smile.\n\nMaria sighed.\n\n\"She calls me Snuggle Bug,\" Brittney added.\n\n\"Adorable,\" Demona laughed.\n\n\"You two are not helping!\" Maria said.\n\n\"Maria, you can put him down,\" Brittney said.\n\n\"When I'm good and ready, and that will be when he tells me where...\"\n\n\"Galleria Minnesota,\" Brittney said as she pulled out her cellphone.\n\n\"What?\" Maria said.\n\n\"It was on the Bill of Lading thingy on top of the papers. The chemicals were delivered to Galleria Minnesota.\" Brittney pushed her black plastic glasses higher on her cute little nose. \"Ooo, that's two hours from here according to Google.\"\n\nMaria relaxed her grip and the man fell to the floor, gasping for air.\n\nBrittney walked up and handed Maria the Bill of Lading. She looked down at the gasping man and frowned. \"You should apologize to him.\"\n\n\"What?\" Maria asked absently as she flipped through the pages.\n\n\"You should apologize for being so mean. You scared the poor guy to death.\"\n\n\"Not happening.\"\n\nBrittney put her fists on her hips. \"Yes, you are! It's Christmas, and you need to stop being so mean and nasty.\"\n\n\"What? Or Santa won't bring me anything?\" Maria smirked.\n\n\"No. I won't be nursing on 'Milky Maria's' big titties until she cums anymore.\" She gave Demona a dazzling white smile. \"She likes it when I call her 'Milky Maria' and nurse her till she cums. She's a screamer once ya get her engine goin'.\"\n\n\"Ouch, that tongue can cut ya to the bone, huh, Milky Maria?\" Demona laughed.\n\nMaria stared furiously at Brittney. \"Those glasses make you look ridiculous.\"\n\nBrittney gritted her teeth. \"No, they don't. They make me look smart!\"\n\nMaria smiled. \"They would if they had lenses!\"\n\nBrittney pointed at the man on the floor. \"No apology, no nursing!\"\n\n\"Fine.\" She looked at the man. \"I'm sorry if I frightened you, you worthless piece of filth!\"\n\nBrittney smiled. \"She doesn't mean that. She's just mad at me, mister.\"\n\nThe man looked up at them. \"The master will come for you. He is everywhere. He is in all things! His power is limitless! You will bow before him.\"\n\nThwip!\n\nA dart hit the man in the neck, and he collapsed to the floor.\n\nMaria spun around.\n\nDemona twirled her dart gun on her finger. \"Man, I hate zealots. You think he was talking about SlutzNet?\"\n\nMaria nodded as she turned back to the Bill of Lading. \"He must be. I'll have Church agents come in and clean up this mess, search the area around the airport for more of these transformed.\"\n\nShe tapped a long nail against the paperwork. \"One of the trucks is still here.\"\n\nThey made their way around back.\n\nA semi sat at the loading dock.\n\nThere was a lock on the trailer door, but Maria kicked it off with her stiletto heeled boot.\n\nShe lifted the door.",
        "Inside were fifty gallon drums marked 'AMBROSIA'.\n\nDemona walked in and put a hand on the nearest drum. \"Transformative Ambrosia. Jesus, there's enough here to transform thousands of people. Thank God we stopped it.\"\n\nMaria shook her head and handed the paperwork to Demona. \"This is the second load. The same size load left for the Galleria an hour ago.\""
    ],
    "authorname": "wayneandanntriskelion",
    "tags": [
        "bimbofication",
        "body modification",
        "elves",
        "medical kink",
        "oral",
        "orgy",
        "romance",
        "threesome",
        "transgender"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/transformations-visions-of-sugar-plums-ch-02"
}