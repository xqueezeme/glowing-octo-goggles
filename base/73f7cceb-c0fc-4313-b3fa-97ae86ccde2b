{
    "title": "The Pirate King Ch. 14",
    "pages": [
        "This is part of an ongoing series - I highly recommend you go back and read from the beginning. We'll still be here when you get back. :)\n\nAlternate title: his infernal way of being \n\nAs always, comments and feedback much appreciated. Longer chapter this time; heard what you had to say and managed to get some more words on the page. Also, something new this way comes. It's long; it's. Well. Different. Keep an eye out for it and let me know what you think. \n\nLove, pleasure, and comfort to each and every one of you. May you find someone with which you can be vulnerable, who will remind you that your soul is dangerous and will hold you when you cry.\n\n*****\n\n\"Captain!\" \n\nCurls flipped up as the Captain raised his head quickly, his maps abandoned at the urgency of the man's voice. Dark eyes narrowed beneath brows drawn together with concern, and perhaps just a touch of anxiety. \n\nBeside him, Natch straightened. \"Speak, man,\" the small blonde said, not unkindly. \"We're in the middle of -\"\n\n\"There's a ship.\"\n\n\"Well.\" The Captain's eyes narrowed further. \"What of it?\"\n\nThe man shifted. \"It's getting closer.\"\n\n\"Well, naturally.\" The Captain leaned back on the table. His face didn't change, leveling the interrupting with a gaze that brooked no argument. \"We are giving chase, correct?\"\n\nThe man swallowed. \"Nay, Cap.\"\n\nThe Captain's eyebrow moved just the slightest bit up. Natch crossed his arms. \"No?\"\n\nThe Captain was more verbose. \"And, pray tell, why is that?\"\n\nThe man shifted, his eyes flicking between the two men before him. \"Seems, Cap, that she be chasin' us.\"\n\nThere was a long moment as the Captain and his first mate processed this information. \n\nThen everyone moved at once. The maps were forgotten. The interruption was forgotten. Everything was forgotten but the ship as the three men rushed up to catch sight of what - perhaps, of who - this approaching vessel might bring. \n\n***\n\nThe Hayworth was a small merchant ship captained by a small merchant man. He had given up his life behind a desk with the promise that life on the sea would be more exciting, fulfilling. That he would have grand adventures. \n\nHe had never regretted that decision as much as he did at this exact moment.\n\nThe captain was standing now uncomfortably, anxiously, on the deck of a pirate ship. It should not have to be said that he did not want to be here, surrounded by men who could kill him or his men and take his goods. And yet, here he was. Voluntarily, none the less. \n\nMore or less. Much, much more on the less. \n\nHe knew that if word of this made it back to the crown, if they found out he had sought out a pirate for parlay, had not even simply surrendered but had chased down the ship so that he might be able to take that option, he might never carry goods for certain merchants again. Hell, he might very well be hung. Or worse.\n\nBut he didn't have much of a choice, now did he? He shuffled his feet and cleared his throat to hide the sudden shivers that slipped down his body at the memory of his instructions, clear as day. \"He said you wouldn't hurt us.\"\n\nThe man at his elbow turned at that and gave him a long appraising look. \"No one says who I hurt or don't hurt besides me, mate.\" \n\nThe captain did not have a long time to think about that statement, which was probably a good thing, because at that moment a startling man came striding into view. \n\nHe was tall, not overly so but tall enough that the captain found himself wishing he could shade his eyes as he looked at him. Or maybe that was just the man himself, the brilliance that he carried. Curls bounced just on the edge of mutiny as he pulled up a few steps from the captain's position, his black cloak snapping back to reveal a series of very businesslike daggers, and a few ones that looked like they weren't businesslike at all, which made them all the more terrifying. \n\nThe captain swallowed. Images of a mahogany desk swam forlornly before his eyes. \n\n\"Well,\" the man said. He was staring down at the captain with dark eyes that threatened to push him flat just with the pressure they held. I am a captain, the captain reminded himself. I have a signed affidavit from the king himself. I am safe in my post, and in my standing.\n\nHe did not feel very safe. \n\n\"Why are you here?\"\n\n\"He said you wouldn't hurt us,\" the captain found himself repeating. \n\nThe man before him narrowed his eyes. \"Who?\"\n\nThe captain licked his lips. He looked from side to side. This had seemed like a good idea when it was the only option, or, it hadn't, but he'd done it because he'd wanted to live. But now, here, in the light of day, surrounded by pirates. Faced with  this man. \n\nHe wondered for a moment if he was running from smoke into open flame. But no, that being, those churning grey eyes...\n\nBut how the hell do you explain that to someone who wasn't there? He shifted his feet and fidgeted with his hands. I'm just going to have to lie, he thought suddenly. That's it. I'll just make something up. A god, or, or, a message from another pirate ship who captured us. Yes, that would do. \"Well, you see...\" \n\nThe man before him drew in a very sharp and very sudden breath. The captain fell silent.\n\n\"Who?\" the man asked again as if he were asking it for the first time. The captain got the feeling he was not a man who repeated himself often and thanked any god that would listen for this second chance. He didn't waste it, didn't even think.\n\n\"The ghost,\" he said immediately. \n\nJust as immediately he regretted it. \n\nThe man's face went dark, so dark. The captain had never seen a face so dark as that. He had the strangest sensation, just for a moment, that he was not looking at a face but instead the night sky just before lightning struck from nowhere. \n\nA small blonde man walked up. \"What's the verdict?\"\n\nThe lightning struck. \"He keeps fucking doing this! I'm not some child who needs my food brought to me on a goddamn golden platter, my meat cut up for me! I have fucking knives, I know how to use them!\"\n\n\"Uh,\" the captain said, unsure about being compared to meat that needed cutting so close to this man's display of blades. \n\n\"He just cares, Cap,\" the blonde said. \"He just wants you to know -\"\n\n\"Bullshit! He's fucking teasing me, he's tormenting me Natch, I know he's here but I can't fucking see him! Can't touch him! I just get his goddamn fucking. Long distance presents!\" He gestured wildly at the captain - the captain blinked. \n\n\"Uh,\" he repeated. \n\n\"Fuck!\" the man finished up. He whirled away, his curls bouncing after him. \n\n\"The third ship in two weeks!\" it was possible to hear him shout. \"In a goddamn barren stretch of sea! Where is he even finding ships! Where the fuck  is  he!\" \n\nThe blonde moved up closer to the captain. \"Gotta ask,\" he said. \"You get visited by a ghastly specter lately?\"\n\nThe captain nodded. \n\n\"Huge, scarred? Grey eyes?\" \n\nThe captain nodded again. \n\n\"Pretty much the sea incarnate?\"\n\nThe captain looked up in surprise. That summed it up pretty well - terrifyingly well, in fact. He nodded a third time. \n\n\"He tell you how to find us? What to say when you get here?\"\n\n\"He was very persuasive,\" the captain said, suppressing a shudder at the memory. \n\n\"What a fucking dick,\" muttered the small blonde. The captain of the Hayworth looked up in alarm. \n\n\"Oh,\" the blonde said. \"Not you, mate.\" He patted the man on the arm in what might have been a comforting gesture had he not been holding a knife in his other hand. \n\n\"We're supposed to give you any cargo you want,\" the captain found himself saying. There was something going on here that he didn't understand. He figured he'd better just stick to the script. \n\n\"Yeah,\" the blonde said. \"We don't want your cargo. Thanks, though.\"\n\n\"Uh, you're welcome.\" You're welcome? He could have kicked himself. But the blonde man merely nodded. \n\nThe wild man was still ranting somewhere. \"He's right fucking here, why doesn't he just fucking  show himself!\" \n\n\"What exactly is happening?\" the captain asked the blonde. He seemed the most sane of all these people here. Not like there was much of a competition at this point. \n\nThe blonde man sighed. \"Love, mate. True love.\" \n\nThe captain looked dubiously out at the deck. \"I'm gonna fucking  kill him!\" he heard.\n\n\"Oh,\" he said, and thought privately to himself that he had never been so glad to be a bachelor. \n\n***\n\nI leaned on the railing, staring out of the harbor. Somewhere out there, a captain sailed. Resplendent. Magnificent. Everything. \n\nWithout me. \n\nI sighed. It simply wasn't time yet. This ship was too good; we had made it to his bearings far too quickly. Along the way we'd gathered up a few presents for him, just little gifts I could send his way. By now he should know that I was close. \n\nI smiled slightly. He should have received my latest gift by now. I wondered how he had liked it. \n\n\"Priliv?\" \n\nI was pulled from my daydream by the Russian's hand on my shoulder. I was still not used to this name for me. The Russian had taken to calling each of us by a Russian word after he'd learned Sneg's name. \n\n\"Ah,\" he said. \"If you are the Snow, then he is the tide, and he is the dead man.\" I had thought that was insensitive, especially given that I was more dead than Ichor was, but the Russian was not to be deterred. And Ichor didn't seem to mind, even making the Russian repeat the name over and over again until he, too, could pronounce the strange syllables. \n\nI was much less enthusiastic. It was only after he explained to me that the name he'd chosen for me meant both \"the inexorable rush of the tides\" and \"boss\" that I relented. \n\nSneg, then, had asked him what we should call him. He had shrugged and said, \"chelovek\".\n\nSneg later explained to me that was nothing more than the Russian word for man. In any case, it proved too difficult for us, and so he told us we could call him Ivan. \n\n\"Is not my name,\" he told me amicably one day as we coiled ropes. \"But in the end, we are all Ivan, da?\" Then he slapped me on the shoulder and headed away, smiling.\n\nSneg did not have an explanation for that one. \n\n\"Priliv?\" he repeated now, and I turned to him. \n\n\"Yes?\"\n\n\"We are done here?\"\n\nI made a quick perusal of the deck. We had been making a stop at a small town on an island that wouldn't be surprised to see a ship such as ours, flying no flag and manned by no men. We only needed some fresh water, a bit of food. And a bag of limes, for Alan.\n\nI smiled to see Ichor carrying the limes up the gangway. Sneg was with him; the two traveled most places together now. Ichor had taken a liking to Sneg's narcotic incense. Sneg had taken a liking to having a large, heavily armed man with them at all times. \n\nAt the end of the day, I think they also had taken a liking to each other. \n\nI had not been pleased, at first, with Ichor's obvious enjoyment of the noxious smoke. But in the end it simply slowed him down to a more manageable pace, and calmed him enough to exist around others. I figured that if I ever needed him fighting it wouldn't be too hard to keep him from Sneg's stash. \n\nI, for one, stayed far away from the stuff. A mistake while ghosting an early present for the Captain while using makeshift smoke bombs that Sneg had rigged up had made me wary of the effects. At first we thought perhaps it might have uses beyond just recreation and making men see visions. We'd all just ended up high as shit, myself included, which had. Interesting results. \n\nThe ship we were ghosting no longer existed, which was not entirely my fault. In the end, it turned out alright, with most of the crew making it onto one of the three islands that sprung suddenly from the ocean, the men's bodies buoyed by the strange influx of schooling fish, dolphins, and one very large and very confused squid. \n\nWe did not use the smoke bombs again. \n\n\"Got your fucking limes,\" Sneg told me now, leaning on the railing with their air of affected indifference. Very little looked like it bothered that kid. I knew that they, like Natch, had years of practice hiding their emotions from those who might weaponize them. It never ceased to amaze me how Natch and Sneg could accomplish the same goals in such different ways.\n\nThe same, I thought with some fondness. And so, so different. \n\n\"The ship we ghosted last time had a shit ton of limes. Couldn't we have just grabbed some of those?\"\n\nI gave them a stern look. To steal from someone else's kitchen? \n\nThey rolled their eyes and moved further into the ship. \"Well, now we've got town guards looking for us, because Big and Obvious here sucks at lifting shit.\"\n\nI looked to Ichor. He shrugged, and I sighed. It wasn't his fault he was so large, and it was mine that he was covered in such distinctive markings. \"You could have just paid for the limes.\"\n\n\"We could have,\" Sneg agreed, \"if we had any money.\"\n\nFair. We had used the last of our scrounged money on the fresh water. \n\nA shout went up on the docks. I turned and saw a few uniformed men begin running our way. \n\n\"Oh, hell,\" Sneg muttered. \"All for some fucking limes.\"\n\n\"Limes are very important,\" I told them. \n\n\"Stop!\" the men shouted. Or something. It was boring to me; we were done here. Ichor,\" I said calmly. \"Anchor.\" He nodded and headed below. \"Ivan?\" \n\nThe Russian was at my side in an instant. \n\n\"We'll need your power to get the boom in place, I think.\" \n\n\"You're under arrest!\" a man shouted. He was insignificant, and so I ignored him. \n\n\"Sneg, if you could start on the aft ropes. When those are untied we'll worry about the gangplank.\"\n\n\"You're under arrest!\" the man shouted again. He was on the ship now. I walked past him to begin untying our fore ropes. \n\n\"Hey! I said -\" \n\nHe grabbed my arm, hindering my progress. It got my attention enough to earn a stern glare, the sea rising within me without my having to ask it. I wore it close to my skin in those days, knowing it would not surprise the three bodies I had on ship. They understood. \n\nThe man who had been shouting did not. He fell silent, and I moved to take care of the ropes. \n\nSneg met me at the gangplank soon after. We were already moving away from the dock. \n\n\"There's a man on our ship,\" they said. \n\nI had forgotten all about the guard that had come aboard. I sighed and beckoned him closer. \n\nHe didn't move.\n\n\"Look,\" I told him. \"We're about to pull up the gangplank. If you go now, you can still make it to the dock.\"\n\nHe pointed to the limes. \"You stole these.\" His hand was shaking. \n\n\"Yes.\" I spoke slowly, like you might for a child. \"And now I am leaving.\" I glanced down at the gangplank. \"You can still make it.\"\n\n\"You can always come with us,\" Sneg said, looking casual and uncaring. I saw the smile hiding behind their lips. \"Join the crew. Of course, you'd have to work for him...\"\n\nThe man walked stiffly over to the far side of the ship and jumped.\n\nSneg tsked at the sound of flesh hitting water. \"He didn't even use the gangplank.\" \n\nI shrugged and pulled it the rest of the way in. It made no difference to me, so long as he was gone. \n\n\"Anyway.\" They turned to me brightly. \"Where to, el Capitan?\"\n\nI sighed. Sneg was not getting that I was not the captain of this ship, would never be the captain of this ship. I let it go for now. They would learn. \"How long have we been doing this?\"\n\n\"This?\" Sneg shrugged. \"About two weeks, I suppose.\"\n\nMy mind hurried to put together the requisite math. Two weeks at my house. A week moving towards and dealing with the Russian. Another week waiting on Sneg's reply - that was four weeks, one month. \n\nAnd then the Captain had come. And then he had left. And my would had been brighter, so much darker, and I wouldn't have had it any other way.\n\nAnd then Sneg had come. And there had been a week of gathering everyone together, and now two weeks at sea. \n\nOne month and three weeks. That left one week. \n\nI smiled. One week to reach the man I loved. \n\n\"We will be out of harbor in very soon,\" the Russian called from his post. \n\n\"Good,\" I said. I turned to Sneg. \"Let's go get captured by pirates.\"\n\n***\n\nI knew where he was. I always knew where he was. It was just a matter of pointing our bow in the correct direction, to stop circling around him, toying with the idea of him. To go and truly begin our journey. \n\nI stood in the riggings of the bow as we drew closer, knowing him like a compass must know north. I called bearings out the the Russian, who adjusted our movements thusly. \n\nIn this way we came into view of his ship. \n\nI knew the ship instantly, knew it from sight and from the way my stomach suddenly felt a million times lighter and a thousand times heavier all at once. I breathed it in, the sight of those sails. The knowledge of him. The closeness of us. \n\nThen I directed the Russian to turn us 90 degrees starboard. \n\nSneg was at my side soon enough. \"Yo,\" they said. They didn't say anything more. \n\n\"He's there,\" I told them. My eyes had not left the ship since it had come into view. \"He's right there.\" My heart was singing. My heart was flying to pieces. \n\nSneg leaned around me to spit. \"Then what are we waiting for?\"\n\nAs we watched, the ship began to turn. I knew the sound of the shout that must be going up; could imagine the flurry of activity that was her deck. I watched as the ocean air filled her sails. My breath caught as she hit the first chuff in her flight towards us. \n\n\"That,\" I said. I turned and strode back across the deck. \"90 star again. Full sail, trim it good. We're going running!\"\n\nSneg gave me a look. \"I thought the idea was to go  to  your love, not away.\"\n\nIt is, I thought. Oh, but it is. \n\nBut where is the fun in that? I turned and smiled back at where I knew the Captain would be fuming. We were in my playing field now. Let him catch me if he thought he could. \n\n***\n\n\"Catch that fucking ship!\" the Captain shouted, his eyes trained on the ship on the horizon. When he spoke again, his words were quieter but no less intense. \"I fucking saw him Natch. Standing in the goddamn riggings. He's fucking taunting me.\"\n\nNatch nodded, unwilling to say anything else. All around them, men rushed to push the ship to go even faster. Wood creaked from the stain; rope and canvas did their best to keep up. \n\n\"But my ship is goddamn faster, I've got the better fucking ship,\" the Captain muttered, his eyeglass still pressed to his face. \"Fucking arrogant bastard, making me chase -\" He froze, leaning into the riggings to try and get a better view. \"Is that the fucking Russian?\"\n\nGoddamn it, Ghost, Natch thought as the ship lurched forward. God fucking damn it. \n\n***\n\nThree days. \n\nThree days I let them chase us. We could have outstripped them easily, made maneuvers they weren't equipped to do, unfurled sails they simply didn't have. \n\nWe didn't. \n\nOn the third day I knew we were approaching the invisible line that separated Things of the North and Things of the South. I could feel it in my bones, in my chest. To most people this line did not mean much, just slightly different currents or a warmer wind where you expected a colder one. But it made a difference, a large one, to those of use who relied on things like the weave of the world to stay informed. \n\nDreyfus would know if I crossed that line.\n\n\"Sails down,\" I told Sneg. There was no need to shout when everyone was right there. \"We'll let them catch us today.\"\n\nSneg cross their arms. \"They're gonna ram us.\" \n\n\"They won't.\" I looked out at the approaching ship. The Captain was probably frustrated. He might even be incredibly angry.\n\nBut he would also want this ship. Badly. He wouldn't injure it in any way. \n\nMe, on the other hand. I couldn't keep a smile from my face to think of what might be in store for me. ",
        "\"Fuck,\" Sneg muttered as they saw my smile. \"Dragging us into your weird fucking foreplay.\" They shook their head in frustration as they went to take down the sails. \n\nBut it was more than that. I needed the Captain to know that this ship was as good as I said it was. A demonstration against his old ship seemed the best way to do that. \n\nIf it got me what I wanted in other ways, I would not complain. \n\nThis run had also put us physically where I wanted us. Right at the border of the north. A moment away from beginning our revenge. \n\nMy chest tightened for a moment, then relaxed. The Captain came first. He was what was most important. \n\nAnd he was arriving. Fast. \n\nWe had slowed significantly and the Captain was finally gaining on us. I watched the ship pulling towards us, salt spray flying off the bow as it slapped the waves, skimming the ocean as if it were an extension of the sea itself. \n\nIt would be a shame to lose such a vessel. And if each ship had some beauty poured into its creation, that ship had enough for a navy. \n\nBut it would not be enough to take down the King. We would need more than beauty. Where that ship had looks, this ship had the lending of fate, and I knew when it came down to battle to which I would trust my life, and to which I merely wanted to watch, safe aboard a different ship. For now, however, I leaned into the ropes and let myself simply enjoy the view. \n\nSneg was back at my side as the ship came closer, shaking their head. \"They're gonna ram us. Ichor agrees.\"\n\nI shrugged. My eyes were caught up on the approaching ship. They hadn't slowed at all, and were directed right at our bearing. \n\n\"Prepare for impact,\" Sneg said drily. \n\nI ignored them, leaning softly on the railing. Waiting. \n\nThe Captain did not disappoint. At the very last moment he turned just the slightest bit, the ship he stood on sliding past mine so close our beams nearly touched. I smiled to see it.\n\nAnd then I saw him. \n\nHe stood at the railing, his arms crossed, long black cloak snapping in the wind. Even from here I could tell that those eyebrows of his were nearly fused together with the weight of everything they were carrying. His eyes landed on me and I felt a small shiver pass through every molecule of my body. \n\nI waved cheerfully. \n\nHe threw up his hands and strode out of view. I could almost hear him cursing from here. \n\n\"That your boy?\" Sneg leaned on the railing, looking bored with the whole situation.\n\n\"That's your Captain,\" I told them.\n\nThey looked back over to the ship. \"Yeah,\" they said, eyes busy. It was possible to track the Captain's movements by the places the sailors were scattering not to be. Sneg and I watched it together. \"You're so fucked.\"\n\nI smiled. They had no idea.\n\n\"They're passing us.\"\n\n\"They'll come about,\" I said with quiet confidence. I watched Sneg carefully as they took in the other crew, waiting for them to recognize a certain member. But their eyes ran over Natch without even catching. \n\nI waited.\n\nIt took another moment for it to settle. Then their body froze, every muscle becoming tense at once. Their eyes traced back over the deck, finding their way back into the air and up to the tow-headed boy that manned the ropes.\n\n\"His name is Natch,\" I told them quietly.\n\n\"I know what his fucking name is,\" they spat. They watched him for a moment more, then spun away so that they didn't have to look at him. \"Fuck, man. You could have warned me.\"\n\n\"I didn't think you'd come,\" I told them truthfully.\n\n\"Fucking shit ass.\" They were collapsing in on themself as much as someone like them could, their legs crossed nonchalantly and their arms hunched before them. \"Do you think he'll remember me?\"\n\nI kept my voice quiet as I watched him move through the sails. \"Without a doubt.\"\n\nThe string of curses to my side almost made me want to smile, except that I knew it came from a place of such anxiety. \n\n\"He'll be happy to see you.\"\n\n\"Fuck,\" they said again. \"No he fucking won't. Are you fucking stupid?\"\n\nI waited, knowing they would tell me what was wrong. Allowing them to speak to me like this only because I knew the sharpness they were pushing towards me was nothing compared to whatever they were carrying inside. \n\n\"I left him,\" they finally said. \n\n\"You survived.\"\n\n\"I left him,\" they repeated. \"I fucking left, so fucking.\" They fell silent. \n\n\"Look at him.\" They didn't, so I said it again, more forcefully. \"Sneg, look at him. He's doing fine. He's out, he's doing fine.\" I watched them turn to stare at him through their white lashes. The ship was coming back around, the figure growing large once more. \"You can't carry guilt on the back of your freedom forever.\"\n\n\"Fuck,\" was all they had to say to that, and headed off across the deck.\n\n***\n\nWhen the Captain's ship came up alongside ours, I was waiting. \n\nThe Russian was down putting down our anchor. Sneg was somewhere on deck, watching and waiting. Careful. Cautious. Ichor was probably in the riggings, still pulling up the last of the sails. And so it was just me on the deck, smiling softly, when the Captain strode across the gangplank looking so angry I thought the sky would open up. \n\nAh, the image, the moment as he crossed between the ships. Black cloak snapping, chest exposed as his shirt dipped down towards his stomach, skin smooth and dark and nearly glinting, those curls catching every hue the sun could think to throw their way and throwing them back better, more radiant. He was radiant. He was the sun, the stars, the only navigation I would ever need. \n\nHe was my world. I opened my arms and waited for him to crash into me, my chest aching, feeling how close I was to being whole. \n\n\"You fucking asshole,\" he snapped. Then his arms were around me, his face buried in my neck. \n\nAnd the world was right. \n\n\"Hello,\" I told the top of his head.\n\n\"I'm so fucking mad at you,\" he muttered into my neck. I kissed his hair and felt him sigh in my arms. \n\nWe stayed there a moment, just holding each other. No sounds but our breaths, the creak of the ropes, the snap of canvas. \n\n\"I brought you a ship,\" I said quietly.\n\n\"Brought me?\" he immediately answered, sounding pissed. His face came out from my neck, bringing those perfect lips into view. \"Brought me? Is that what you -\"\n\nI cut him off with a kiss.\n\nAnd everything was as it should be, and once again I was whole. The sky opened for me; the oceans were calmed for the first time in months. To be with him, here on the sea. It was where I belonged. It was where fate had placed me. \n\nAnd who was I to argue with fate? \n\nThe kiss was long, and soft, and complete. When it ended the Captain was completely relaxed in my arms; I was settled in his. Whatever tensions we might have brought into this were gone, forgotten. How could we be tense? How could we be composed of anything but tranquility? I was a sea of glassy waters. The Captain was the softest breeze sliding over my surface. We were where we belonged. Nothing could touch us. We were at peace, in control of the channels of the world, and in love. \n\nI rested my forehead on his, staring into his eyes. So dark. So perfect. I couldn't keep the smile from slipping across my lips.\n\nHis eyes caught the expression. \"What?\" \n\nI dropped a kiss on his nose and watched his eyes flutter at the contact. \"It's so good to be home.\" \n\nI could feel his arms tightening around me. Then he sighed. \"I missed you.\"\n\nI knew that he meant having me here, on his ship. On the sea where I belonged. Seeing him on land had been good, had been amazing. But it hadn't been the same. \"I know,\" I told him now. \"I missed you too.\" My smile grew, just the smallest amount. \"Did you get my presents?\"\n\n\"Oh,\" he started, and I watched those eyebrows in happy pleasure, how they snapped together as he pulled away from me to put a hand up in front of my face. \"And what the  fuck -\"\n\n\"Ghost!\" I was hit from behind by a force, arms wrapping around my stomach. It was only the Captain's amused expression that kept me from throwing whoever it was to the deck. \"I fucking missed you.\"\n\nI turned and looked under my arm to find the beaming face of Natch. \"I fucking told them you'd come back, I fucking knew it. Fuck, Ghost.\" I stared down, surprised, at the small blonde wrapping his arms around me. \"We missed you, you idiot. God, it's good to see you on the ocean.\"\n\nI looked up to the Captain. He raised an eyebrow, amused and happy with his first mates display of affection. I reached down and mussed the blonde hair. Natch leaned back and beamed up at me. \n\n\"You did say you'd bring back a ship. And what a fucking ship, huh!\"\n\nThe Captain scowled, his eyes immediately everywhere at once. I knew he was looking for something to critique. \n\nHe wouldn't find anything. The ship was sound. I wouldn't have brought it otherwise. \n\n\"And -\"\n\n\"Natch,\" I interrupted. \"Where are the others?\"\n\n\"Oh.\" He let go, stepping back. I let my arms drift back around the Captain. I had that option; I wasn't going to give up the opportunity. \"They won't come over.\"\n\nThe Captain frowned even as he stepped closer to me, his body lightly brushing against mine. \"Why not?\"\n\n\"Uh.\" Natch looked uncomfortable. \"They say it's a ghost ship.\"\n\nThe Captain's frown deepened. \"Why?\"\n\nI could guess. I'd done this sort of thing before, sailed a full ship with a small crew. I knew well the kinds of superstitions such actions tended to raise with sailors. \n\nAnd then, of course, there was my crew itself. \n\nI pulled the Captain closer and laid a light kiss on his temple. He turned to look at me, questions clear on his face. I smiled down at him. The men would come or they would not. We didn't really need them, in the end. I opened my mouth to tell him this, but of course I never got to say what I wanted to. \n\n\"Priliv!\" The voice leapt from the open door, making Natch and the Captain jump. I sighed and turned to face the Russian. Were the Captain and I ever to get through another conversation without an interruption? I wanted to know where the frustration of all my teasing, of all the things I had done. I needed to know where that would lead. The things that would naturally cause. \n\nBy the way the Captain was running his fingers over my spine, the Captain did as well. \n\nBut for now, the Russian was here. \"The anchor,  da, and is there something else?\" \n\n\"Ivan,\" I said, drawing the Captain closer to my body. \"Come and meet your Captain.\" \n\nThe Russian positively beamed, his arms held out and his palms upturned. \" Capitan! And do you like the ship? It is a good ship,  da , beautiful. Well stolen. Fun.\" \n\nThe Captain was staring at him, taking in the large form, the hair. The grey eyes. The scars. Many men knew the Russian from afar; very few had seen this man close up. Or, perhaps many men had, but few had lived to tell of it. And so it was only reasonable that he should be so curious.\n\nAnd of course, when this man was put next to me, with my grey eyes, with my large frame, with my scars...\n\nWhen the Captain turned to look at me, those brows were down tight and there were questions in his eyes and I knew he had made all the same comparisons that everyone else had. I didn't want to talk about it. \n\n\"Don't,\" I preempted him. \n\nNatch didn't notice the look I was giving the Captain. \"He looks -\"\n\n\" I said don't.\" \n\nThe Captain smirked as Natch jumped yet again. \n\n\" Moi brat,\" the Russian was continuing, seemingly oblivious. \"Where are our companions?\"\n\n\"I'm pretty sure that means my brother,\" the Captain muttered to me.\n\n\"I don't want to talk about it,\" I muttered back, already feeling exhausted. Why had I even brought this man?\n\n\"Where is Sneg? Where is  tryp?\"\n\n\"Sneg?\" Natch said.\n\n\"Sneg is somewhere on deck,\" I told him. \"And Ichor is in the riggings.\"\n\n\"Ichor?\" the Captain said. \n\nIchor chose that moment to drop from the sky.\n\n***\n\nI suppose, of all the emotions that come with seeing a man you believe to be dead, shock was something that I should have expected. But I was dead, and not very good at doing what was expected, and what did I know of men and their reactions when these were things I had been living for so long? And so it had not dawned on me that bringing Ichor back might be anything but convenient. \n\nIchor landed hard, his hands hitting the deck as his body was forced into a crouch by the velocity of his movement and the gravity of the world. I felt the Captain step back, saw his hands dart towards the impressive array of knives he'd taken to wearing since I'd seen him last. I put my hand in the way, blocked his path. He was always safe with me. He wrapped his fingers around mine and squeezed. \n\nIchor straitened up slowly. There was a time when his towering figure would have been merely annoying, another body to burn through if I needed to make a move. Now I knew that his soul burned at a rate that even I found impressive, that his movements were too quick for this world, his limbs used to the pressures of the deepest sea. His lungs still aching with oxygen. \n\nThat did not make him a threat to me, no. But it made him something to watch. I watched him now, my hand held tight by the Captain, as he realized that he was not alone. \n\n\"Oh,\" he said, taking in the people that were not his crew members, or at least not his most recent ones, that populated the deck. He still struggled with the living; this was possibly too much for him. He took a large step back, eyes wary. Limbs ready. \n\n\"Oh,\" the Captain repeated, his eyes on the scar that bisected his neck. A present from Wicky. It was the wrong mark to be looking at; the living could wear scars as easily as those brought back. The marks on his forearms, circular and seeming to shift when you didn't look at them directly, the ones that may as well have had as much life as Ichor himself. Those were what marked him as dangerous. Those were what marked him as one of Dave's. \n\nThe Captain's eyes flicked over to his old ship, and I knew he was thinking about how this was going to go over with the old crew. I squeezed his hand again. In the end, we didn't need them. I could crew this ship by myself if needed, and we didn't need. We had Natch. I had the Captain. And there was still Ichor, and the Russian, and Sneg. \n\nSneg. They moved so quietly, so easily. I had looked away for one moment, just to track the Captain's eyes. And then Natch drew in a breath, gasped, and that was so uncharacteristic, such a change from the way he had been existing, in which he held himself, and so I snapped my gaze back and found that Sneg had materialized from seemingly nowhere and placed themselves between our bodies and Ichor. \n\n\"Sneg,\" I said evenly. I kept my hand in the Captain's and shot a glance towards Natch. He was standing carefully. He looked frozen. \n\nBut, I reasoned. He looked better than he had when he had faced my brother, and he had made it through that. I turned away from him to face Sneg fully. \n\n\"Yo,\" they responded. Their eyes were on the Captain. \"This is your boy?\" I watched their hand slip behind them to land on Ichor's arm; he shuffled to stand directly behind them. Not even half his bulk was hidden by their small frame. \n\n\"This,\" I repeated, letting some of the sea slip into my voice at the need for reiteration. \"Is your Captain.\"\n\nSneg's eyes darted over the Captain's body, finishing on the hand that was held tight in mine. They were unimpressed; it was easy to see it on their body, hear it in their voice. \"Sure, man. I just didn't expect  him, is all.\"\n\n\"I'm sorry.\" The Captain's voice had picked up something too, some hint of the darkness I knew he carried. It made my spine start to tingle. \"Do I know you?\"\n\n\"No,\" Sneg shrugged, seeming unaffected. How could anyone be unaffected by such a voice as that? \"But I know you.\"\n\n\"Sneg,\" I said, a quiet warning in my voice. They were standing between the Captain and his man. This was not well done. \"Watch yourself.\" \n\nBut Sneg seemed not to hear me. \"The gods know what you've done, boy.\" Their light eyes ran up against the Captain's dark ones; I raised my brow when neither gave way. \"More importantly, I know what you've done.\"\n\n\"Sneg,\" I said again. I could feel the Captain's hand tighten in mine. \n\nSneg ignored me. They were something more than Sneg, I think, in that moment. In the same way I pulled forward the sea, and the Captain often wore the sky like a second skin, Sneg held something just under their eyes. On the tip of their tongue. \"The things you dream of,\" they said as they took a step forward. The Captain's fingers began looking for his knives. I held his hand fast; my presence was the only weapon he needed. \"The man you used to serve.\" \n\n\"You don't know me,\" the Captain said. His hand squeezed mine. \n\n\"Perhaps not,\" the thing that usually was Sneg agreed. \"But we know who you are going to be.\"\n\n\"Sneg.\" I watched Natch's voice hit Sneg with a force they were not expecting. It shook loose all the things they had become, pushing them back a step and when they landed back in front of Ichor they were once again simply who they were supposed to be. Or at least who they had been when I had first met them. \n\nWell, I thought. That was informative. I glanced over to the Captain to see how he was doing and found him dark, so dark. \n\n\"My love,\" I murmured. The Captain's eyes flashed towards me, and I did not like what I saw. There was more than just darkness hiding in those brows. I pulled him over to me, settling him in my arms. \"My love,\" I repeated, this time not a call but a reminder, spoken gently into the side of his head. \n\n\"Natch.\" Sneg sounded surprised. This time when they reached back to Ichor they were the one looking for comfort.\n\n\"Sailor,\" the Captain whispered to me. There was something there, something he couldn't shake loose...\n\n\"Ivan!\" the Russian said, throwing his hands up, a happy grin on his face. As one we turned to him. Our annoyance might have pressed a lesser man flat, but he was not a lesser man and merely smiled into our combined gaze. \n\nI sighed. This was not going as I had planned. This mix of people was dangerous, was no good. Tensions were high and needed to be dispersed, shaken to the winds in their individual ways before more bodies and more misgivings could be added to the mix. \"Sneg,\" I called. \"Why don't you take Natch up to show him how the rigging system works?\"\n\nSneg turned to me with a look that bordered on panic, if they could be said to have such a look. \n\n\"He's going to be first mate,\" I explained patiently. \"He'll need to know.\"\n\n\"I -\" they started. \n\n\" Now.\"\n\nThere was a moment of silence. \n\n\"Yeah.\" They took a deep breath. \"Natch. Uh. Fuck, let's go.\" They whirled around and were gone before any of us could say anything more.\n\nNatch turned me be with an expression so concerned I had to reach out. \"Don't be worried, lad. They just don't do well with others.\" \n\nHe dodged my touch. \"I'm not supposed to be an other.\"\n\n\"No,\" I agreed. \"Get to the riggings. Spend some time alone with them.\"\n\nHe bounced next to me for a moment, nodding, before setting off. \n\nThen I turned to Ichor. \n\n\"What the fuck?\" the Captain muttered in my arms. I ignored him for now; Ichor was looking distressed without the shadow in negative he had found in Sneg. \n\n\"Ichor.\" He looked up at me. \"Find somewhere where you're comfortable. Let Ivan know where you are. I'll send for you when we're ready to introduce you back to the crew.\"\n\nHe stared at me unhappily. I understood his concerns. \"I know you don't want to be around them, but you need to meet them all again. They think you dead.\" \n\nHe watched me for a moment, then nodded and headed below decks. Two down. \n\nI turned the the Russian. ",
        "He grinned happily, just on the wrong side of mischievous.\n\nI turned back to the Captain, silently cursing Russians and blood bonds and drink and plans, and whatever plan it was that had made me think it was a good idea to bring this man in the first place. \"Think we can get your crew over here?\"\n\nHe stared up at me from where he stood nestled in my arms. \"Fuck,\" he finally said. \"Fuck.\" \n\n***\n\nIt took the crew a long time to filter from the old ship to the new. I suppose I didn't blame them; they believed this ship populated by ghosts. And it was, in a way. I was dead, Ichor was born anew, Sneg carried things even I didn't understand.\n\nFuck if even I understood what the Russian was. \n\nBut their Captain called. And so they came. \n\nCookie was one of the first. Not the first, mind you. He knew better than to draw attention to himself in such a way. But still, he came, muttering the entire way, his arms full of kitchen goods. \n\nHe stared grumpily at me as he he made his way over the deck. I raised an eyebrow at his expression.\n\nHe chinned curtly at the large man I knew was somewhere back over my left. \"The fucking Russian?\" \n\nI shrugged. Alan might have been one of the few men on ship who had actually seen this man up close before, knew what he could do. It wouldn't surprise me if his reaction was as much to the stories and the way the crew would react as to this man's infernal way of being. \"There are fresh limes in the kitchen.\" \n\nHe didn't complain much after that. \n\nThron arrived soon after. \"Ghost.\"\n\n\"Thron.\"\n\nHe pulled up before me, clearly uncomfortable on this new deck, the larger expanse, the unfamiliar dip. He frowned. \"You came back.\"\n\nI felt my arms tighten against the Captain at the way those words fell from his lips, felt the Captain lean against me in comfort. \"I said I would.\"\n\n\"Aye,\" he said. \"Never doubted you.\" He didn't leave, still sweeping the docks with eyes that were still not quite at home. \n\nHe needed to be at home. This was going to be his home. \"You need something, Thron?\"\n\n\"No, Ghost. Nay. Just.\" His eyes were still roving. \"Looking.\" \n\n\"Look, then.\" I got an idea. It wasn't a good idea; it wasn't even a half decent idea. But I was tired of having the Russian so close to my back, of watching the way men's eyes danced between our bodies. \"Ivan could show you around, if you'd like.\"\n\nHe turned to me, questions in his eyes. Before me, I could feel the Captain stiffen. \n\nBut the Russian was already stepping forward. His eyes were taking in Thron's form. I watched them land on on the knife at his waist, the scars on his hands, the healthy fighting stance Thron always seemed to wear, then watched them linger on the muscled arms and wondered if it was a professional or a personal matter that held his attention. When I saw the smile that passed over his open face, I had my answer. \"Dryg! Come! It will be fun, da?\"\n\nThe Captain looked up at me. Thron looked over at me. A man or two who were simply passing by looked at me, then looked at the Russian, then looked back to me. \n\nI sighed. \n\n\"Okay,\" Thron said warily. The Russian positively beamed, his eyes still running over Thron's form and making no attempt to hide it.\n\nThe Captain and I watched them walk away from us. \"Will they be alright?\" he asked me. I heard the doubt in his voice and wrapped my arms over his chest. \n\n\"Trust,\" I murmured into his head. They were evenly matched. Unless Thron had severely dropped off his training since the last time I'd seen him, neither of them could beat the other. And the Russian might be gregarious, and overt, and shockingly willing to make his advances known, but I had never known him to make any attempt to take what he wanted by force. \n\nUnless it was an island. Or a ship. Or a stool, or beer. Once I had seen him kill a man for a shirt.\n\nIn fairness to him, it had been a very nice shirt. \n\nBut there had been no complaints from his lovers, or I would not have even brought him on board. I watched the two men disappear below deck, the Russian holding open the door for the still very suspicious Thron. We would just have to keep an eye on them and step in if necessary.\n\n\"I trust,\" the Captain was responding. \"He's just so.\" \n\nI knew he was speaking of the Russian. And I knew exactly  what he was speaking about. I buried my nose in his hair and ignored all the frustrations in the world for the pleasure of the man before me. \n\nAnd what a pleasure he was. I could feel the smooth chest under my arms, strong fingers hanging lightly on my arms. I smiled, letting my lips slide down his skull, seeking out his ear. \n\n\"Hey,\" he murmured, then, \"Hey,\" again, more emphatically, as my teeth found his earlobe. \n\n\"What about you?\" I asked quietly, lips against the skin just below his ear. I moved down further, finding the base of his jaw. He turned into me, his breath shuddering. \"Want to be shown around?\"\n\nI could feel him hesitate. \"My crew.\" \n\nI nipped at the skin I had found, so soft , so sensitive, and felt his fingers tense against my arms. His crew would be fine. If they needed him to babysit them, they were not a crew I wanted on any ship of mine. \n\n\"Finn,\" he called. \"FINN.\" \n\n\"Aye,\" the man answered, pulling up at the Captain's side. \"There's no need to shout, then.\"\n\n\"Have my things brought over from the other ship.\" He didn't even look at his steward to see if this command was being processed; he was too busy staring at me, having stepped out of range of my lips, staying just in range of my fingers and keeping me perfectly in range of those dark, dark eyes. I shuddered as I saw all the things he had planned for me flashing through their depths. \"And round up the rest of the men. Get them the fuck over here.\"\n\n\"Aye.\" I could see Finn where he stood behind the Captain. His eyes were everywhere, wide and suspicious. His fingers etched sign after sigil after sign. \"Ghost, good to see you.\" I managed to nod, my eyes still caught in the Captain's. \"Where's Natch?\"\n\n\"Busy.\" The Captain stepped forward and I shivered. \"How long should it take?\" \n\n\"An hour.\" Another sigil. That one was for the restless dead, I noticed. \n\nI didn't feel restless, not so much. I felt agitated, churning, everything on edge at the proximity of this man, those fingers. His lips. \n\n\"Perfect,\" he whispered, and he was close to me again, so close that those lips brushed against my skin, and that word, that sensation. I closed my eyes and let it all just wash over me, feel the sea within me respond. Feeling my soul begin to crash. \"Come and get me when it's done.\" \n\n\"Aye,\" Finn said, but we were already gone. \n\nThe Captain pushed me across the deck with his presence as much as his body, our eyes still locked as he made me back through ropes and duck under booms, his eyes guiding me, his hands keeping me safe. When we reached the door to the lower deck he spun me around, using his hand in my hair to push me down and through the small door. \n\nAs soon as we were inside he had me up against the wall, fingers entwining and tugging in his hair as he brought my lips crashing into his. I moaned into the kiss, letting my hands settle on his hips in an attempt to pull him even closer to me. \n\nI should have known I would never get away with such an action, such control. Almost immediately his hands were around my wrists, my hair forgotten. I gasped into his lips as he pushed my hands against the wall, pinning me where he wanted me. I could have moved easily, but his command was law and my body understood that, and so he had only to press the slightest bit against my wrists to hold me steady. But I did not want the slightest bit of pressure - no, I wanted so much more. And so I gathered myself and pressed lightly against his hold, writhing beneath his grasp.\n\nHis reaction was immediate. My breath left my frame as he surged closer to me, his hands painfully tight on my skin, his body weight pinning me against the wall. I could feel how hard he was against me; I know he must have felt the same. Dark, blown out eyes stared up at me with eyes that did not even bother to disguise the lust and hunger they held. \n\nI met them, if not entirely steadily. I could not be steady in the face of this. I was never entirely steady when so close to my love. \n\nHe came even closer, pressing his face into my neck. I felt his teeth making small nips against my neck and unthinkingly tilted my head to give him better access, even as gasps and small cries fell from my lips. He was so much. I was going to fly apart. \n\n\"Need you,\" I heard him mutter. His words sent an army of gooseflesh down my skin, made me prickle in a way that was anything but harmless. \"Need you tied up beneath me, need you begging for more, need you screaming for me.\" \n\nI was shuddering in full force now, my whole body reacting. I could feel stars being born in his words, and it was exhilarating to be so close to something so powerful. Something that could match me. The ocean within me rose, roaring, in response. \n\nHe nipped at my neck, a punctuated sentence in it's own right. My knees threatened to give. \"Need you,\" he finished, and his voice did not entirely seem his own. \n\nSome small part of me rejoiced to see him so affected by me. Most of me was focused on getting him to the bedroom, where I could submit, where I could be his. Where he could fuck me senseless. \"Sir,\" I whispered, and I felt a shudder go through his body that only served to tighten his grip on me. I had to wait a moment to regain control over my voice after what his reaction did to me. \"Your quarters.\"\n\nI could feel his hesitation to move. He liked me where I was. I liked me where I was. But there is a place better, I tried to tell him with my mind. Filled with things you will love. That I have been dreaming of you using to love me. \n\nHis hesitation was so long I began to believe we would fuck right there in the hall. \"I don't know the way,\" he finally admitted.\n\n\"I do.\"\n\nHis command was instant. \"Take me.\" \n\nAnd so I did. \n\nI think it was part of the game I had been playing these past weeks. Or perhaps it was just the ways I am, that I cannot fully ever turn off the dangerous things that lurk within. But as soon as he commanded me to take him I had him up against the opposite wall, my arm to his throat, my hardness pressed against his. I saw understanding flash over his face, felt him tense even as he moaned to be held in such a way. \n\nMy hand slowly moved over his ass, feeling it so perfect in those pants I loved so fucking much. I pulled his leg up around me, opening him to me. I felt him hiss, his breath slipping over my neck and making me shiver. \n\n\"Is this not what you wanted?\" I asked, feigning innocence. \"For me to take you?\"\n\n\"You know what I fucking meant.\" His voice was breathy as he felt my fingers graze over his ass, down his perfect crack so barely clothed in his tight fucking pants. In honesty, I didn't have much of a clue of what I was doing. This was new territory for me. \n\nBut the Captain, the Captain. I understood the Captain. Watching his reactions, seeing when he threw his head back, when he dropped curses like they were heavy things instead of the light banter he usually employed. That was enough for me. \n\nBut it was not what I was truly craving. At least not tonight. That thought surprised me, that at some point I might crave this. And it was harder to pull myself from teasing him than I had anticipated, finding my body strangely drawn to this. To having the Captain shivering beneath me, his body taut and drawn against mine like ropes and sails at full wind...\n\nI sighed and pulled myself away. For his first night on his ship, this would not do. And I didn't want it, not like this. Not tonight. I had very clear ideas of how this night should go. And so I stepped back, allowing space between our bodies.\n\nIt was a perfect mistake. \n\nThe Captain was on me in an instant, one hand twisting my hand behind my back, the other tight in my hair, pressing my face to the wall. I gasped to feel him press up against me, very aware of the deliberate way he arranged his body around me as his head came to a rest next to mine. \n\n\"Do that to me again,\" he whispered into my ear, his breath hot but his words somehow hotter, scorching, \"and I will be very, very displeased.\"\n\n\"What?\" I managed around the gasping pleasure that was having this man so close against me. \"Pinning you to a wall?\"\n\nHe pressed even closer. I moaned to feel his hardness against my ass. \"No,\" he murmured. \"Not finishing what you fucking start.\" \n\nThen he was gone, leaving me gasping, spinning. Dreaming. My face still pressed up against paneled wood. \n\n\"Well?\" he called from somewhere behind me. I wasn't ready to turn just yet, so I just basked in his voice. \"Are we going to the bedroom or not?\"\n\nFuck yes we were. I made myself be ready, spinning so quickly he took a step back as I grasped his hand and drug him through the halls. \n\nWe passed Thron and the Russian as we made our way through the halls. I paid them very little attention as we hurtled past Thron's bewildered face, then the Russian's cheerful smile. They were nothing. The Captain behind me, his breath fast, his eyes on me. He was what mattered. \n\nI barely registered the door when we arrived, simply opening it impatiently. I had only opened this door once before, when I had removed all traces of the previous captain and installed my own ideas of what a true captain should have in his room. Since then this room had been off limits. I had slept in the riggings; I did not know where the rest of my crew slept, but I was sure it was not here. Still, there was little ceremony as the door was flung open, my body pulling the Captain's through the opening. I needed him here. I needed him.\n\nI needed him.\n\nHe didn't waste time on his surroundings. He had eyes for me, and for me alone. My breath caught as I saw the way his eyes refused to leave my body, how they tracked me through space, not even checking spaces that could have held ambushes or enemies. He trusted me. He loved me. He wanted me.\n\nI pushed the door shut behind us and promptly ceased thinking. \n\nHe was on me in an instant, pulling at the hem of my shirt. He pushed me back even as he drove to get me undressed, my eyes unable to see as he pulled my shirt over my head but who needed sight when the Captain's hands were there. Then his lips landed on my neck, blistering and demanding and I knew what they would need of me even as I stumbled backwards, not caring what might be behind me, not knowing what was there. The Captain would keep me safe. The Captain -\n\nThe back of my knees hit something and I toppled over, my shirt already a thing of the past, my eyes captured by the dark irises of the Captains. His fingers already in my waistband. He chuckled as I hit the bed, my gasp losing itself in his amusement. Then he quickly pulled his shirt from his body and placed his knee over my hip, dragging his cock over mine in the movement. \n\nI groaned at the contact, feeling my eyes fluttering closed. I couldn't help myself; my sight was always the first to go in such situations. I was relieved when he allowed me to keep my eyes shut as he worked his fingers beneath my breeches up to the tie, his nimble fingers making short work of the laces. I pressed the back of my head into the mattress and gave myself into the feeling of his fingertips, of his breath. The pressure of his weight on top of mine. \n\n\"Hips,\" he whispered, and I lifted mine without second thought. I felt my breeches slide down, felt them leave my legs with determination. I sighed and put my hands up above my head, knowing how much he loved seeing me spread out like that. The gasp that came from above me told me that I had been right. \n\nI felt him coming closer, his body leaning down as his hands slid up my legs. When they reached my waist, one made a temporary diversion to my cock. He traced a single finger up it's length, beginning at the very base just above where my balls hung, letting his finger take a leisurely and tortuously light route that ended with his finger in the slit at the head, and with me, panting, my fingers tight in the bedsheets, eyes still squeezed shut. \n\nFrom my waist his hands continued their movements up over my ribs, just skirting my nipples. He lingered on my collarbones, his fingers drumming in the hollow of my neck, then his hands took separate paths. One continued it's upward trajectory, tracing over my shoulder, my bicep, finding my wrist and pinning me to the bed with exquisite pressure. The other waited a beat then landed, feather light and terribly, wonderfully, perfectly dangerous, on my exposed next.\n\nI immediately froze. I wanted to arch into his touch, needing more pressure, needing him to stop everything that was crashing through me relentlessly only to decide when it would again slam through my body. Only he could quiet me. Only he could make it okay when everything was loud again.\n\nBut I didn't move. I wasn't even sure if I could. \n\n\"Been dreaming of this,\" I heard him whisper. I felt his lips brush my cheekbone, his hair skimming the sides of my face. I shuddered at the light caress and felt his fingers tighten at the motion. \"Been dreaming of you. Every night. Every day. Every fucking second of every fucking minute.\" \n\nHis forehead landed on mine. I could feel his breath on my lips, warm and fast. His heart beat just above mine. \n\n\"My love.\" Words I had been waiting for dripped onto my mouth. I licked them up, tasted their honey, their lightning. \"Love, look at me.\"\n\nI took one last moment in darkness. But he had commanded, and I knew I would never deny him anything even if he hadn't, and so my eyes slowly drifted open.\n\nI found his right there, wide open, dark, filled with the world and the universe and everything beyond that and I gasped, couldn't keep the breath from leaving my lungs up past his hand and out my mouth and he smiled and dropped at once, crashing his lips to mine and pressing his hand tight against my throat. \n\nI think I forgot to exist during that kiss. I think I couldn't have existed even if I had remembered. He was everything; how could I have been anything outside of his lips on mine, his teeth on my lips, his tongue light and hot in my mouth. His hand holding me down, holding me in, keeping gasps in my mouth where he wanted them, not letting them make it down to my chest or my heart or my soul, my soul was there in my throat, my soul was everything and my everything was him. \n\nHe ended the kiss with a soft bite to my nose. We were each panting heavily, my breath slipping past his hand now resting softly on the soft flesh of my exposed throat, his thumb softly stroking the skin beneath it. \n\n\"Makes you so still,\" I heard him whisper. \"Makes you so fucking everything, and then so still.\" I knew he was looking down at me there, my body arrested by the suddenness of the ocean rushing after being held back. Have you ever seen a tsunami, I wanted to ask. Seen the seas rush out, gather themselves up. Feel the calm, the silence, before they come crashing back into shore. Do you know what you're doing, to hold the ocean in the palm of your hand like this? \n\nBut of course he did. I saw him smile and my heart fluttered at the sharpness of that expression. He always did, always would. And he thought it was fun.\n\nI felt him roll off of me, his hand lifting from my neck, my wrists, and heard myself let out a sound I didn't recognize at the separation. So needy. So soft. \n\n\"Shh,\" he murmured, dropping a kiss on my forehead. \"I just. I need some fucking rope.\" \n\nYou have so much more than rope, I wanted to tell him. But I couldn't fucking move, so I just laid there and hoped he found what I had brought him.\n\n\"Fuck,\" I heard him mutter as he looked me over one last time. Then he spun away. I could track him by the curses he dropped as he moved around the room, and was happy he was moving in the right direction. Just a little further, I thought. Just a bit -",
        "The curses abruptly stopped. I held my breath, waiting. Hoping. \n\nHis face filled my vision and I drew in a gasp at the sight of him, the darkness he held. The hunger in his smile. Then his hand was in my hair, pulling my head up and back so hard I cried back.\n\nHe pressed his mouth tight to my skin just below my ear. \"Oh love,\" he whispered. \"Oh, love. You're so fucking good to me.\" My head was angled up and so I could only stare at the ceiling, but I felt his other hand slowly make it's way over my body, trailing something cold. Metal. I shuddered and he pulled me even closer to him. \"Gonna make this so fucking good for you, baby. Gonna make this so fucking good.\" \n\nMy body was shaking with desire and anticipation, feeling the manacles move their way up my body. So slowly. He pulled back his head so that he was staring into my eyes, holding my gaze as the cold iron pressed lightly over my bicep, then forearm, then - \n\nMy eyes rolled up as a shudder passed through my body, the manacles closing around one wrist. I knew the Captain was watching me carefully, but I couldn't control this reaction, this moment of pure anticipation and pleasure. I didn't even think to try and reassure him that it was anything but a good motion, I was so deep within my own enjoyment. \n\nWhen I could refocus my eyes, I found the Captain looking down at me with a mixture of amusement and lust. I stared into his eyes, feeling him lean up to close the second manacle. At this motion, too, a wave passed through my body, although less intense. \n\nThe Captain leaned back. His fingers traced lightly down my face and I turned into them, needed more contact. Needing him. \"You okay?\" he asked quietly. I could hear the concern in his voice. I could hear the hunger. \n\nI wanted that hunger. I wanted him to consume me. The seas within me were drawing back up, readying themselves to come rushing back in. To crash against him, and I needed him to be ready. My mouth opened on it's own accord, my teeth seeking purchase on the calloused skin of his palm so light against my cheek. \n\nHe let me bite at him for a bit, then pulled away. I could feel his arm shaking. \"Okay,\" he told me softly. \"Okay.\" \n\nThen his hand was back in my hair, pulling me up to sitting. He kissed me hard, bruising, for just a moment before he was pushing my head down into the mattress, face first. My body had to twist to accommodate this new position, leading to my ass popping into the air, supported by the knees. \n\nThe Captain had my hips in his hand and pressed against the side of his body, steadying me in this new position, almost as quick as I had come into it. He waited until I was no longer in danger of toppling before he released my hair. His hand slid up and over my back until it reached my bottom, where it slowly caressed my ass. \n\n\"Want you here.\" His voice was so dark, so dark. I shuddered to hear it. \"Don't you fucking move.\"\n\nAs if I wanted to. As if I could, when he said things like that. \n\nHe shifted behind me, using his knees to nudge my knees apart. My heart was beating so fast to feel him behind me, to be so open for him. The sea was coursing through me. I needed him; I needed -\n\nHe moved as if he had all the time in the world. A single finger dripped it's way into my crack, starting at the very top and slowly making it's way to where I wanted it, where I needed it. The path felt slick and I knew he had found the jar of lube Val had packed in the trunk as well, but even that knowledge did nothing to make me feel better because he was  taking so damn long.\n\n\"Sir,\" I began, but he cut me off instantly. \n\n\"Hush.\" I shuddered at the cold in his voice, at the fire. My fingers worked at the sheets beneath me, my breathing at a rate that could not be sustainable. He was killing me; I loved it. Finally his finger reached my hole, and I tensed to feel the sensation even as I knew I should be relaxing, even as the moment I had been waiting for was finally on me.\n\nHe paused for only the briefest of moments before his finger continued it's way down my crack.\n\n\"No!\" I almost shouted. I couldn't believe he had denied me this. \"Sir -\"\n\nI was silenced immediately by his hand hitting my ass. \n\nThe sound reverberated through my soul; the pain sent my oceans shuddering, crashing. Wonderfully, intoxicatingly on edge and then soothed, at bay, empty, and his hand was already rubbing away the sting and he was saying something but I couldn't hear it past the roar of the ocean settling and he should know that, couldn't hold it against me after he'd gone and done  that.\n\nHis finger was pressing into the spot just between my balls and my ass, a perfect and terrible sensitivity that was causing me to arch up, moans escaping from my lips. How could he keep me so on edge with only one finger? Of course, it wasn't just his finger. It was the promise that finger held. All the things that were to come, that he was holding back. That he controlled for me. I begged him with my body, keeping my words in the curve of my spine, the quiet gasps that he was pressing out of my throat, the bunching of my shoulders. The way my wrists pressed against my restraints, over and over again. \n\nHe dropped a light kiss to the spot just above my spine. \"Good,\" he whispered. And then his finger sunk into my ass.\n\nI cried out. I couldn't remain silent, not when I had finally received from him what I had been needed for so long. For months. I pressed back, wanting more than what he had already given me, and received another sharp smack.\n\n\"Impatient,\" I heard him say through the haze he had shocked me into. \"I said don't fucking move.\" \n\n\"Fuck,\" I think I muttered, and I know he laughed before pressing another finger into my ass. \n\nI held still as well as I could beneath him, but it was so hard, so very difficult with the way he was going so slow, so deliberate. I didn't want deliberate. I wanted everything at once, wanted him to crash against me like my waves were trying to break against him. Instead he kept me right on the edge, giving me perfect glimpses of what could be then moving away, never enough, not enough, fuck I needed more, I needed - \n\n\"Baby,\" I heard him say. He moved his free hand to my hip, holding me tight. His voice dropped low, went so dark I thought I would die. \n\n\"Move for me.\"\n\nI called out my thanks in sounds that I hadn't even known I could make, my hips slamming back. I met him again and again, fucking myself against his hand, driving myself towards my conclusion. I heard him panting and turned to look at him, found him rubbing his cock against my leg in rhythm with my own wanton bucks and it drove me crazy, made me need him more and I was losing myself in the ocean, in his fingers, in the movement and I would have lost myself completely had he not pulled his fingers from my ass completely with a gasp.\n\nI wanted to cry. I think I whimpered, I was so upset, so empty. So needy.\n\n\"My love.\" His hands traveled up my my back until his body was bent over mine, his cock nestling into the crack of my ass. I know I whimpered at that, the feel of his heat so close, such an almost, but he merely sunk his hand into my hair tight and pulled my head back so that I could look at him. \n\nMy scalp tingling, my entire back covered in his skin. His cock in my ass. I felt him press his mouth my my ear and moaned, his wet hot breath feeling so much more in this moment than it ever could be. \n\n\"So fucking hot,\" he whispered. I felt his hips twitch and choked at the sensation. \"Almost came just from watching you.\" This time his movement was slower, more deliberate. My head moved on it's own, trying to throw back, to stretch out my body in passion and spread out this amazing sensation through motion but he held me tight. \"Wanna see you do that again.\" The head of his cock slid right over my hole, slick and sensitive and I gasped, nearly crying with need. \"Will you do that for me, baby? Will you fuck yourself and let me watch?\" \n\n\"Fuck me,\" I begged him, unable to stay quiet any longer. \"Oh gods, sir. Please. I need - \" He ground his hips again and I lost my words in sounds of pleasure and torment. \n\nHe buried his face in my neck. I felt his teeth scrape against my skin and it was so much, so sensitive. He had turned me into one giant nerve, one massive reaction to him, always to him, and when his hips made another motion I began to shake and he tightened his hand in my hair, his teeth biting down hard.\n\nHe kept me there for what felt like millenia, his cock passing over my hole, the head of it sometimes catching and I would nearly scream and he would just bite me, or tug at my hair, and continue. I was shaking so badly with need that he eventually stopped and pulled back to take in my face.\n\nWhatever he saw there, it must have convinced him that I was in no pain but for the pain of waiting, of wanting, of flying apart at his every little touch and he must have decided that was fine for the next thing I knew I was falling, my body being pushed to the side. \n\nI lay there on the bed, my weight on my shoulder, my heart in my throat. Just trying to breathe. \n\n\"I thought you wanted to fuck, not nap.\" I turned my head the slightest bit and found the Captain looking down at me with amusement. I tried to shoot him a look of daggers; I don't know how well I succeeded when he had made me so. So.\n\nSo. \n\nHe leaned down to me. My body reacted to his proximity immediately, shudders breaking out across my entire form. \"Get on your back, hands above your head. I wanna make you fucking scream.\"\n\nThose words sunk into my skin even as the meaning hit me like lightning, my sensitive soul crackling beneath the full force of his command. Before he had even finished his sentence I was moving, finishing rolling over onto my back, my arms stretched up above my head like I knew he loved, my knees bent and legs spread. I looked down to him through lashes and waited impatiently.\n\nHe froze, absolutely froze. His hand had been on his cock, lazily spreading lube over it's length, but now he was still. Still but for his eyes which roved over my body, setting me ablaze, threatening to electrify me. \n\nI shuddered, and that motion seemed to break whatever spell he had been under. He snapped his body forward, a single curse dropping from his lips as he grabbed my hips, lifting them suddenly. I gasped at the movement, then gasped again as he pressed my body into his. \n\n\"Fuck,\" I groaned, my head pressed back against the mattress. My legs wrapped around his back. \n\n\"Fuck, what?\" he responded, his voice light with amusement but tight, so tight with all the things he needed to do. I would have taken comfort in hearing that he was as affected as I was except I was past that. I couldn't think about anything but the way his skin felt against mine, the way his voice slithered into the base of my spine and made my entire body shake. His hand slipped between my legs, his fingers wrapping around my cock. I felt a drip of precum, long pooling at the tip of my cock, shaken loose from all the things the Captain was, fall onto my stomach.\n\n\"Fuck,\" I whispered, but the Captain let me for he was cursing as well. \n\n\"You gonna come?\" he asked me. I managed to nod through even as his hand slid up and down my length, threatening to end me. \n\nHe leaned down. \"Don't.\"\n\nI pressed my head into the mattress as hard as I could, something mixed between a sob and a moan making its way out of my throat. \n\nThe Captain continued his slow ministrations, killing me, making me alive, even as he positioned himself. He held himself ready, cock pressing up against my ass. I could see his breath speeding up, and yet he simply looked down at me, a sort of smirk upon his face. \n\n\"Are you sure you're ready?\" he finally asked, and I saw that smile, and just.\n\nI think the ocean within me grew tired of waiting. I would have laid back, waited at the edge for him forever, but I was not the only thing to consider in this body. I was the ocean, and the ocean cannot take orders forever. And had he not pressed me to this, had he not sent the sea out, pressed it from it's place with palm and fingers? Displaced an entire ocean?\n\nHe should not have been surprised when it came crashing back.\n\n\"Fuck!\" I shouted, sitting up so suddenly our heads nearly collided. The sea was in my eyes; fuck, the sea was in my everything. I tasted salt water. I heard the ocean waves, felt the tides in my fingertips. My breath was the steady wind; my heartbeat crushed rocks to sand. I was the sea. \"Just fucking fuck me already!\"\n\nThe Captain looked at me, his eyes wide, his mouth open. Looked at me, the sea, held in his hand and his love and pushed to this. Dangerous. Deadly. Directed at him.\n\nHe looked at me there, saw me, saw me. And then the infernal man began to laugh. \n\n\"Impatient,\" he whispered into my temple. Night air met salt water and I was churning, churning. He pushed me back, watching me topple, my eyes locked in his, he pushed the sea back into his bed and then the Captain, my perfect Captain, leaned over me. \"So fucking impatient.\"\n\nHis lips met mine just as he pushed into me. And I was in bliss. \n\nI needed him so badly I barely registered if there was pain at all. There must have been; he did not go slow. He did not hold back. But all I knew at the time was pleasure, amazing whole-body pleasure stemming from between my legs as he pounded into me, one hand on my chained hands to pull me back again and again as he wanted, the other on my cock keeping rhythm. My legs were locked around him and I pressed my feet into him, trying to drive him deeper, harder. Faster. \n\nWhen I came it was sudden. A shout shook loose from my throat even as a force ripped through my body. My cock erupted, painting both the Captain's and my stomachs with my cum. \n\nThe Captain was right there with me, slamming into me once or twice more as I rode through my own orgasm. Then he pressed deep within me and came before allowing his body to collapse onto mine.\n\nWe lay there panting for a moment. The sea slowly receded from my body, leaving me feeling strangely empty. Unfocused. \n\n\"Mhhhm.\" The Captain stirred above me. I felt his lips press against my chest and shuddered; I still felt sensitive. Raw, externally, as if this had taken down barriers I had not even known I had. \n\nI nudged at him so that I could lift my arms up from between us, then resettled them around his shoulders. I felt him sigh at the contact. My hand slowly stroked over his shoulder, feeling his skin. His body. The slight sheen of sweat he wore from pleasuring me.\n\nHe rolled his hips from me, putting most of his weight on the bed beside us. His chest remained on mine, his head moving slightly to fit perfectly under my chin. I shivered as his fingers traced lazy circles over the skin of my chest. \n\n\"You okay?\" he asked quietly. \n\nAbove him, I nodded. I wasn't ready for words yet. \n\nHe pushed up to look at me. \"Sailor?\" He sounded concerned. \n\nI smiled to let him know that everything was okay, everything was perfect. How could it not be, when I had him in my arms. I watched as those dark eyes took in my face, searching. Making sure. A strand of hair fell into his face and I automatically reached to brush it away, only to find my hand's path stopped by the oppressive tug of steel. I turned to stare balefully at the manacles that kept me from my love's touch. \n\nThe Captain looked to see what had caught my attention and laughed. \"Okay. Let's get those off.\" He slipped from between my arms, and then I was empty, truly empty.\n\nI made a small noise then. It was the same noise I had made earlier in the night for the Captain, the one I had not recognized, but this time there was no lust mixed in to dilute the true meaning. Only abandonment. I still did not, would not, recognize it, but the Captain perhaps did for he froze where he was and looked down to me, concern and wonder clear on his face.\n\n\"Love,\" he whispered. \"I'll be right back.\" He was moving as he spoke, getting further away. More distant. \"It's just for a moment.\"\n\nIt felt like millenia. I curled up on the bed as I waited, mourning the loss of him.\n\n\"My love.\" His voice was soft. Gentle. I let it fall over me like warmth, like a sunset. Trust, trust and understanding. He would always come back to me. I always would need to come back to him. He was the sun; I was the sea. I allowed him to uncurl my body to reach my manacled hands, to free me from their influence. Then those hands were on him, pulling him into my arms. Wrapping him up in me. \n\nHe indulged me in this, allowing me to bury my face into the back of his head, my lips at the base of his spine. I fit him to me, guiding his hips to mine, his knees bending over mine, his back to my chest. I breathed him in until I was filled once more, until his air was the atmosphere and I was back at the pressure at which I should exist. \n\nMy fingers were now the ones tracing circles on his chest. I felt the way that shook shivers loose down his spine and smiled into his hair. \"You're shaking,\" I murmured, feeling the way his words in my mouth did nothing at all to make him stop but instead caused a shudder of their own. \"Too much?\"\n\n\"No,\" came the immediate reply. I traced another circle. Then; \"Maybe.\"\n\nI paused for a beat. A breath. When he didn't continue, I lifted myself up so that I could look down at him. His hair was falling all over his face, making him hard to see. \n\n\"Love?\" I asked gently.\n\n\"It was just. A lot.\"\n\n\"Always is,\" I reminded him. I remembered the way I had become the sea before him. Was he remembering that? Did that memory, when not in the heat of the moment, feel different against his skin?\n\nWas he afraid of me?\n\n\"Was it me?\" I asked him softly. \"Was I too much?\"\n\n\"What?\" he turned to me, surprise clear in his face. \"No, no, it was. I was.\"\n\nMy fingers brushed his hair from his face, uncovering those brows I knew so well, drawn close together. Carrying something I didn't understand. There was something in his voice, something that made me unsettled. \"Love,\" I said, asking of him what was really the only thing that mattered, \"are you alright?\"\n\n\"Yeah. Of course.\" He bit his lip, pausing for a moment. When his eyes met mine again, he was looking through his lashes nearly bashfully. \"I'm sorry I hit you.\"\n\nI smiled down at him. \"Don't be. I enjoyed it.\"\n\n\"I.\" There was something on his face, something more than what our conversation contained. I let him sort it out, but I did reach and take his hand to let him know I was there. My thumb passed lightly over his calloused palm, gentling him. Reminding him. I felt him relax at the contact. \"I just don't like hitting people. You, especially. Like that the most.\"\n\n\"Like that?\"\n\n\"Like.\" He shifted. \"Like, as part of sex.\"\n\nI couldn't help but be amused to see him so uncomfortable speaking of something he had done so fantastically, so exuberantly just moments before. \"Why not?\"\n\nHe shifted again. There was a long stretch of silence where he didn't look at me. When he did, my heart nearly stopped. His eyes looked like he was afraid, nervous. His face held things I had not seen since that night he had been drunk, had hoped to never see again. \"I don't know if I'm ready to talk about it.\"\n\n\"Okay.\" My hand squeezed his lightly. That expression had no place on his face, not anymore. Not ever. And especially not when he was with me. I would kill every being who had ever had the insolence, the idiocy, the audacity to even think of making my love look like that. \"Okay.\"\n\nHis hand squeezed mine back. It was enough, that simple touch, to press the violence of the sea from my soul. \n\nThis man. My love. My soul.\n\n\"I'm sorry,\" he was saying again, and that wasn't right, wasn't right at all so I quickly dropped down to press a kiss to his forehead, hoping to press out all the things he held bunched there in his brows.",
        "\"You have nothing to be sorry for,\" I told him softly. \"We won't do it anymore.\"\n\n\"But.\" His words sounded muffled coming from up from under my chin. \"You like it.\"\n\nI didn't see what that had to do with anything. I pulled back to look at him. \"But you don't.\" \n\nHe looked away, and I frowned. That had not be the reaction I had been expecting. I kept my hand in his, waiting. There for him. \n\n\"What if I did?\" I heard him whisper. \n\n\"What?\" I wasn't sure if I had heard him right.\n\n\"What if.\" He paused. \"What if I did like it? What if I like hurting you?\"\n\nI remembered early in our relationship, his guilt over my bruises. The way he had reacted to my bite marks. I sat up fully, pulling him up with me. We were long past due a conversation about this. \"What is this about?\"\n\nHe was still not looking at me. \n\n\"Captain.\" I squeezed his hand. He never had to tell me anything he didn't want to. If something was important, I trusted him to let me know. But this was hurting him, and I could not let it go. \"You know you can never hurt me.\"\n\n\"I know.\" He sighed, then repeated his words again, softer. With more understanding. \"I know.\" His eyes flicked up to mine for just a moment before returning down to the bed. The shadows of that expression were still there in the creases of his eyes. Lurking. \n\n\"My love.\" I raised a hand to his face, letting my fingers rest on his chin. I wanted to press every last trace of whatever he was holding away. He leaned into my touch, eyes fluttering. \"These things, they are pleasure for me. Is it not then a good thing? Is it not something that you should enjoy as well?\"\n\nHe didn't respond. I could see him fighting with something within himself. I waited, letting him know that I was there with gentle touches. \n\n\"I just.\" He wasn't looking at me. \"There was someone, once. A place in my life. Where these things were done to me.\" \n\nI squeezed his hand gently. I needed him to remember that he wasn't there; that person was gone. He was with me now. He was safe, always safe with me. \n\nThat person was gone. If they were not dead already, they would be soon. I promised this to him silently. It was simple. It was truth. \n\nI think he understood, his body relaxing even as his voice stayed tight, so tight. \"I just don't want you to feel the way I did.\" He looked up to me, those dark eyes darker with memories and conviction. \"Ever.\"\n\n\"My love.\" I drew his lips to mine. Our kiss was gentle, brushing. A reminder of the things we held within our bodies. Between our souls. When it ended, he sighed. His forehead drifted forward to rest against mine. His arm came up and wrapped around my neck, fingers softly finding their way into my hair. \n\n\"Okay?\" I asked him. I had said everything I had needed to say.\n\n\"Thank you,\" he breathed. I pressed a kiss to his nose, then another to his cheek. He was my everything. He was my world. \n\n\"Thank you.\" \n\n***\n\nWhen they came down to fetch the Captain, we were entwined in a wondrous tangle of limbs and love and lungs and heartbeats. Neither of us moved when the knock sounded, unwilling to emerge from the cocoon of safety we had spun around each other, a new strand each breath, claiming our space with every exhalation. \n\nBut as much as the Captain was mine, he was still the Captain and his duties were sacred. I sighed deeply as he pulled his head from my neck, feeling the way the outer atmosphere rushed into our space and hating it. He pressed a soft kiss to my shoulder and I groaned, rolling onto my back.\n\nThe knock sounded again and the Captain finally looked back at the door. \"I have to go get that,\" he said. \n\nHe didn't move. \n\nMy arms tightened around his waist, unwilling to let space grow between our bodies. \n\nThe knock sounded a third time.\n\n\"I'm fucking coming!\" snapped the Captain, working to disengage my hands and free his body. I smiled and let him move away, knowing, trusting, that he would be back. \n\nHe took the time to dress before opening the door, finding his breeches on the floor. That was unusual for him, and so I watched him with some amusement as he tripped over himself, cursing, in his haste to pull the tight garment back onto his body. I think he was still delicate, bare in more ways than just body, and therefore unwilling to let anyone see him in such a way. Whatever the reason, he did not open the door until he had the breeches on and tied up.\n\n\"Aye?\" He managed to hide whatever his feelings were behind frustration as he addressed Finn. Finn seemed used to it, not even blinking at the brusque tone. \n\n\"Ready to head, Cap. Just need to know where to.\" He shifted. \"And what to do with the old ship, bless her dear ole heart.\"\n\n\"Burn her.\" The Captain looked back to me. \"Send Natch down. We need to look at the maps.\"\n\nFinn was staring at him, mouth hanging open, when the Captain shifted his gaze back away from me to the steward. \"What?\" \n\n\"I. You said.\"\n\n\"Burn the ship, Finn. Unless there is some reason not to?\" \n\n\"Aye. I mean, nay, Cap. It's just.\" He swallowed. \"She's our ship.\"\n\n\"Not anymore, she isn't. And she'll never be another's.\" \n\nI understood, intimately, what the Captain was doing. That ship had been a part of him. To have another man command it?\n\nNever. Better to let it burn. I stood, catching the Captain's attention. \"Ichor and I can take care of that. We'll ghost it from a distance.\"\n\n\"Ichor?\" Finn squeaked. \n\nThe Captain frowned. \"Ghost?\" \n\nI winced. I had forgotten the crew did not know that Ichor was back. And it made sense that the Captain did not know what ghosting was; the only time I had done it in his presence, I had hidden it from him. I moved towards him, gathering my pants along the way. \"I'll explain it when Natch gets down here.\" I looked over at Finn. \"Find the Russian. Tell him we need Ichor as well.\"\n\n\"Ichor?\" the man repeated. He looked to the Captain, as if hoping the Captain would contradict me.\n\nThe Captain ignored him. \"Does this have to do with your nickname?\"\n\n\"The nickname was coincidental,\" I told him, not believing it for a minute. Names are rarely given out without reason. I turned to Finn. \"You should go.\"\n\n\"Ichor,\" he repeated a third time. His fingers began sketching sigils in the air, Christian crosses mixed in for good measure. \"Cor. Christ. Fuck.\" He turned and began to walk away. As the Captain closed the door, I could hear him mutter, \"Ichor.\"\n\n\"Well,\" the Captain said. \"The whole ship knows now.\" \n\nI shrugged. They were going to learn at some point. \n\nIchor made it first. Probably Finn had run into the Russian on his way to find Natch in the riggings. He slipped in the door when the Captain opened it, not waiting to be invited in. \n\n\"Too many,\" he told me gruffly as he made his way to the far corner of the room. He squatted down there.\n\nThe Captain looked at me in shock, but I just shook my head. \"You look comfortable enough here.\" He did. His eyes were even closing as he leaned his head against the wall. \n\nNow they opened again as he gave me a strange look. \"Well, you two aren't people,\" he told me, as if it were the simplest thing in the world. Then his eyes drifted shut again.\n\nI let him be. He needed a moment of peace before he had to deal with the rest of the ship.\n\nThe Captain was beckoning me over to him. When I reached him, he grabbed my arm hard and pulled me farther across the room.\n\n\"Are you sure about him?\" he whispered harshly. \n\n\"Ichor?\" I looked back at him. \"He was your man first.\" \n\n\"No, I mean.\" He passed a hand over his face. \"Are you sure about him now.\"\n\nI looked down at him, confused. \n\n\"With him.\" He sighed, a quick huff of annoyance. More at himself and his inability to communicate than anything else, I think. \"The way he is.\"\n\n\"Brought back?\" I was surprised; I had thought the Captain would be alright with this. \"Of course. I have worked with many men like this. He's the same.\" I looked over the where Ichor sat, crouched in the corner. \"More or less.\"\n\n\"More or less.\"\n\n\"He's more,\" I admitted. \"But he is still Ichor.\" The Captain did not look convinced. \"Is there a reason for your concern?\"\n\nHe took a moment to sit with his worry before sharing it with me. \"The King had many men like this.\"\n\n\"He did?\" I was surprised. I had thought, after what Sneg had told me, that my men all would have abandoned the sea since I was not there to maintain the bargain with Dave. That, or they would have been reclaimed. Dave had a tendency to do that.\n\n\"Yes.\" The Captain was keeping one eye on Ichor as he spoke to me. \"He always told me, 'These are the only men we can trust. I bought them at a heavy price.' And then he would laugh.\" He shuddered after saying that. \n\nI gave the Captain a hard look for that. I had always assumed that he had been part of the fleet the way that most captains were part of the fleet - peripherally. Generally. Most captains never meet their King, they simply send tribute and receive instructions, make their intentions known and are punished if they stray. It is not a good thing to meet the Pirate King. \n\nBut here was my Captain, speaking as if he knew Dreyfus personally. As if they spoke colloquially, regularly. That was not the relationship between a captain and his King. That was a Lieutenant. That was a General. \n\nThe Captain jumped when he caught the intensity in my gaze. \"What?\"\n\nJust how well did you know the King? I wanted to ask, but it wasn't a pertinent question and if it was important, the Captain would tell me. And in the end, he could not know him more personally than I did, and so what was the point of it all? \n\n\"I did not buy Ichor,\" I said instead. \"I asked a man to take his place, and he did so willingly.\"\n\n\"You can't just. You just made a trade?\"\n\n\"Yes. A deal, silver and a man for silver and a man.\"\n\n\"Fuck, Sailor. How do you know how to do that shit?\" \n\nBut I wasn't listening, my mind caught up still on the King and his men. Had Dreyfus done new deals since I'd left? It seemed unlikely; he and Dave hated each other. It was more than mistrust. It was animosity. \"Do you remember the names of the men the King had?\"\n\n\"Homer,\" he answered with hesitation. \"Uni. Rex.\"\n\n\"Rex?\" I was surprised to feel a little hurt. Rex had been someone I had considered a friend. \"I'm going to have to talk to Dave about this,\" I murmured. \n\n\"Who's Dave?\"\n\nA knock on the door interrupted that line of questioning. The Captain shot me a look as he made his way over to let Natch in. \n\n\"Alright,\" he said as he came back. I moved the three of us over to the desk in the room, already equipped with maps and instruments. But the Captain had something else in mind first. \"Explain to me this ghost shit.\"\n\n\"Oh,\" Ichor said from the corner. He stood, eyes popping open. Natch gasped as he realized he was there for the first time. \"We're ghosting?\"\n\n\"Not yet,\" I told him. \"Go back to sleep.\" He nodded and crouched back down.\"\n\n\"What the fuck,\" I heard Natch mutter. I ignored him, my eyes on the Captain. Where to start? What the say? He knew of me, knew of the ghost of the north. Knew of my legend, or at least that one. How much to say?\n\nWhat was important?\n\nI sighed. \"Take a seat,\" I told the Captain. \"And then I'll begin.\"\n\n***\n\nNatch was staring at me, hand in his hair, eyes wide. Mouth open. I reached out and lightly used my fingers to close it before he started drooling. \n\n\"So?\" I asked lightly. \"Any questions?\"\n\n\"Yeah,\" the Captain said. \"What the actual fuck?\"\n\nI smiled. \"I know it's a lot to take in.\"\n\n\"No, no.\" He pressed his hands to his eyes. \"It makes perfect fucking sense with who you are. I don't know how I didn't see it before. You, the ghost of the North.\" He moved his hands and stared at me hard. \"You have any more big, crazy past life shit?\"\n\n\"Yes,\" I told him. I was the son of the King. We killed the King. I was the brother of the King. I chained the King to an island eternal. I was the King. The King killed me. Long live the King. \n\nAmong other things. \n\n\"Fuck.\" He leaned back. \"Fuck.\" \n\nThere was a moment where he just sat there, eyes on the desk before him. I assumed he was processing everything I had told him. I wondered what he thought of it, the violence I had just laid in his lap. The memory of the ship I had ghosted while in his care.\n\nI remembered that day. Remembered him coming back to his room, shaken and frightened. He had thought me the King.\n\nI smiled to think of that now. As if the King could do such a clean job of it. \n\n\"What are you smiling about?\"\n\nAnd so I told him. \"You thought me the King.\"\n\n\"Fuck, Sailor!\" he exploded. \"You killed twenty men! Disappeared!\"\n\n\"You thought he had sea-walked,\" I needled him. \n\nHis eyebrows went up, but I could see his smile. \"You put up his fucking flag.\"\n\nAny joy in my body disappeared with the reminder of the theft, the things that flag had come to represent. The way it had caused my love, my Captain, to fear. I felt my face grow dark. \"It was my flag first,\" I told him softly. \n\n\"Yours?\"\n\n\"Mine,\" I repeated with the kind of emphasis only the slowest, darkest kind of rage can bring.\n\n\"Huh.\" He watched me for a moment, his face catching all the mine was sending out and holding it so gently, so sweetly. How could a man make rage look so beautiful. \"Let's make it ours again, then.\"\n\nOurs. I smiled slow at that. \n\nOurs.\n\n\"Alright.\" He stood swiftly. \"First order, I want to watch you ghost that ship. I'll be on deck. Will that suffice?\" \n\nI shrugged, still smiling. That word, ours, was pinging around in my body, making my muscles sing. I wanted to fight someone. I wanted to fight the goddamn world. I wanted to rip the fabric of the universe apart and put it back in the ways I so decreed. \n\n\"Good. Then we sail east.\"\n\n\"North,\" I told him, my muscles so fucking ready. \"We go north.\"\n\nHe knew what I wanted, wanted it too. I saw it on his face, in his fingers as they balled into fists. His shoulders as they hunched forward in anger. But his head was shaking. \"I'm sorry, my love. But it was part of the deal I made with my men to keep them.\"\n\n\"Deal?\" I repeated. I was a thing of rage; I had no need for deals. \n\n\"We need to go see a witch. She lives in the east. She's the one who took my name from me when I first began.\" He gestured. \"The men want to know that my name remains gone.\"\n\n\"You are unnamed,\" I told him, sure of it. I didn't know his name. If the sea couldn't tell me; if Sybil couldn't tell me -\n\nBut he was shaking his head again. \"The men need more than your reassurances, my love.\"\n\nThe men should need nothing. The men should follow; it was what land boys were good for. I pulled my lips back and snarled before taking a breath, then a second. The Captain reached out and took my hand, again pressing the sea from my skin with just his touch. It took longer this time, but the sea receded until I was simply twitching muscles and anger and not the eternal raging unforgiving expansive ocean. \n\n\"Okay,\" I told him. \n\nThe Captain smiled at me, thanking me for my understanding. I didn't understand, not at all, but this was the way it would have to be and that was that. \n\nThen he surprised me. \"Why don't you take Natch with you? Teach him to. Ghost?\"\n\nI considered it. It was a very good idea for a number of reasons, not the least of which was it would look much better to the rest of the crew if we had the first mate along with us. Ichor and I, while technically part of the old crew, were still new. Fresh. And it could not be ignored that we were both unnerving. Having someone along that was unmistakably a part of the Captain's old, human crew, and such an integral part of the life of that ship. \n\nYes. That felt right. \n\nI turned to Natch. \"Can you swim?\"\n\nHe nodded, still seeming a little stunned. \n\n\"Can you swim as well as you climb?\"\n\nThat got a smile of pride from him. He nodded again. \"Been swimming near all my life.\"\n\n\"Good.\" Many sailors chose not to learn to swim, superstitious nonsense that lead to many men dying when they didn't need to. Pirates were better about that then merchants, but. You never knew. \"Ichor.\" The big man was on his feet instantly at his name. \"Let's go.\"\n\nHe nodded and headed to the door, shedding his shirt along the way. The Captain gave me a look.\n\nI pulled him in for a kiss. \"Get up to the deck. I'll be back soon.\"\n\nHe pulled me back as I tried to walk away, kissing me deeper. \"I love you,\" he told me when our lips were no longer engaged. \"I missed you.\" \n\nI smiled at him. My love. My world. We were not going north, no, but I was here with him. The world was right; he was my world, and it was wondrous, miraculous. Incredible. Everything. \n\n\"Deck, my love,\" I told him, and then I headed out the door."
    ],
    "authorname": "nakamook",
    "tags": [
        "gay male",
        "plot",
        "gay novella",
        "gay romance",
        "bdsm",
        "spanking",
        "submission",
        "fantasy",
        "rough sex"
    ],
    "category": "Gay Male",
    "url": "https://www.literotica.com/s/the-pirate-king-ch-14"
}