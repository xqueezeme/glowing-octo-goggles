{
    "title": "Just One Kiss",
    "pages": [
        "Author's Note: All characters over eighteen and paid above industry standard rates.\n\n****\n\nLuna was feeling absolutely miserable. Totally disgusted with the world, and her own particular problems within it. Never mind that it was meant to be her weekend to relax, and she'd already wasted most of her Saturday moping.\n\nThat was one of the lesser explored problems with breaking up, she felt. That person you expected to comfort you just wasn't there anymore. Never mind that they were the problem to start with.\n\nAnd the rest of her dang family wasn't helping either. All giving her space and shit just because she'd demanded they do so. How very dare they.\n\nWell fuck it. She'd just have to reach out, then. Like a normal, well-adjusted human being. Would the indignities never end?\n\n****\n\nRyu was out on the back deck, lounging in the sun, cooler full of beers next to him. He grinned at Luna trudging out the back door and harrumphing her way over. She grabbed a can out of his stash and cracked it as she sat down on the chair beside him.\n\n\"Look who awakens,\" Ryu said pleasantly.\n\n\"I wasn't sleeping,\" Luna said.\n\n\"Sisters, like Great Old Ones, can awaken from things other than slumber.\"\n\nLuna glared at Ryu. \"How many have you had anyway?\"\n\nRyu laughed. \"Enough.\" He took another sip of his current half-finished beer. \"I've worked it out, you know.\"\n\n\"Worked what out?\"\n\n\"Life.\"\n\n\"Oh. That.\"\n\n\"The secret to it,\" Ryu said. \"It's so simple.\"\n\n\"Is it?\"\n\n\"Yes. The secret is to have a yard in which to lie in the sun and drink beers.\"\n\nLuna stared at him. \"You think that's the secret?\"\n\n\"Why not? Better than any I've ever heard.\"\n\nLuna sighed and took a long drink, wincing at the taste. \"Well... today I don't even know if I can argue with it.\"\n\nRyu nodded easily. \"The question, of course, being why you've decided to join me in my philosophizing. You don't even hardly like beer.\"\n\n\"I can acquire the taste.\"\n\n\"Sure. I did. You've never shown the interest.\"\n\n\"Haven't often needed to get drunk.\"\n\nRyu waggled a finger. \"Ah, I should warn you. Part of the secret is in not needing to get drunk. Just... wanting to get a lovely buzz on.\"\n\nLuna made a face. \"Let's pretend for a second that I still don't believe your nonsense.\"\n\n\"Ouch.\"\n\n\"Let's further pretend that I'm in pain.\"\n\n\"Double ouch.\"\n\n\"So maybe... maybe I do just want to get stupidly drunk.\"\n\n\"Perhaps,\" Ryu allowed. \"Perhaps.\"\n\nLuna forced her way through half a can of Ryu's beer. She knew from experience that once she got a bit buzzed, she'd mind the taste less. She still didn't grasp how people found it enjoyable, but she allowed that it probably was one of those things that came with experience. She was perfectly happy with tastier drinks most of the time.\n\n\"This secret of yours...\" Luna said.\n\n\"Yes?\" Ryu said, halfway surprised that Luna would bring it up again. She'd seemed to prefer sullen silence.\n\n\"How does it account for the yard you drink in being your parents'?\"\n\nRyu laughed. \"Well... yes, I see what you're saying. And I've considered that. See, houses and yards are expensive.\"\n\n\"They are.\"\n\n\"And I like apartments alright, more affordable, but rarely with sufficiently private yards.\"\n\nLuna nodded, considering bringing up the last place Ryu had lived in with his ex. She wasn't sure she wanted to get into that, since it would probably mean getting to her fresh breakup.\n\n\"It's a problem,\" Luna said instead.\n\n\"Right,\" Ryu agreed. \"So for now... our parents' yard.\" He sighed. \"Housing market being what it is, I don't know how anyone affords a house at all these days.\"\n\n\"More's the pity.\"\n\n\"But hey, I get your lovely company, so there are upsides.\"\n\nLuna snorted. \"How many beers are you on again?\"\n\n\"How many beers do I need to love my delight of a little sister?\"\n\n\"... alright I'm cutting you off.\"\n\n\"You're very welcome to try.\"\n\nLuna halfway considered it, but it probably would have meant a bit of wrestling with her brother to take his alcohol away, and she wasn't in the mood. It might cheer her up, after all. Couldn't have that.\n\n\"Blurgh,\" Luna said. \"This is so stupid. You know what thought I just had?\"\n\n\"Couldn't possibly,\" Ryu said.\n\n\"Right, well... you know when you're in a bad mood, and you want to feel better, but also anything that might cheer you up is something you want to actively fight?\"\n\n\"Sure. Who doesn't?\"\n\n\"Well... why are we like that?\"\n\nRyu thought about the problem for a long moment. \"Not enough lying in the sun drinking,\" he finally decreed.\n\n\"You're hopelessly one track today, huh?\"\n\n\"You saying you aren't?\"\n\nLuna glared, but had to concede the point. \"Ok. You win this round. Toss me another beer?\"\n\n\"Getting a taste for them yet?\"\n\n\"Not yet. Give it a minute.\"\n\nLuna got in to her second beer. It still wasn't enjoyable, exactly, but she had a nice start of a buzz going, and it was less distasteful already.\n\nPlus she wasn't quite as morose about her situation. She tried to think how that had happened, but couldn't come up with anything. She wasn't drunk enough to forget about her ex yet, but she just couldn't seem to care as much.\n\nMaybe part of it was Ryu? He looked so damn carefree. Maybe it was rubbing off on her a little. Or maybe... maybe he was just a good person to be around right now. Big brothers couldn't be trusted, exactly, but they could be trusted not to engage in certain behaviours that ex-boyfriends sometimes got up to.\n\n\"Still thinking about him?\" Ryu asked.\n\nLuna blinked, then glared. \"Stay out of my head.\"\n\n\"Hehe, no mind tricks. I could just see your expression, is all. It went pretty dark there.\"\n\n\"Well... it's hard not to. I fucking hate Terrence, but... I thought I loved him too. Shatters your whole world.\"\n\nRyu sighed. \"Yeah, it does, doesn't it?\"\n\nLuna winced at the pain that flashed across her brother's face.\n\n\"Sorry. I know how you felt about Ava when you were with her.\"\n\nRyu shrugged. \"Yeah, well... you know she got cheated on by the guy she cheated on me with?\"\n\n\"No shit?\"\n\n\"Yeah. Doesn't help a lot, but... it's kinda funny at least.\"\n\n\"Ha, yeah. Maybe someone'll break Terrence's heart for me. Since apparently he didn't even care enough to ever give me that power.\"\n\nRyu looked at Luna, examining her expression. He carefully considered her mood.\n\n\"Is that what hurts?\" he asked softly. \"Giving him part of yourself and feeling like he never actually gave that same trust back?\"\n\nLuna's face screwed up, and Ryu ached at the pain his sister was currently feeling.\n\n\"Partly, I think,\" Luna said. \"You think you know someone, trust them, love them... and you were nothing to them the whole time.\"\n\n\"I don't think that's fully true. But... I know what you mean. Just remember, he's the asshole. You're not an asshole for daring to love someone.\"\n\n\"Yeah, well... yeah. I guess.\"\n\nLuna took a long drink from her beer. Ryu sighed his way to his feet, just a touch unsteady from drinking, and from not standing up in a while.\n\n\"I'll be back in a minute,\" Ryu said.\n\n\"Oh?\"\n\n\"Need to pee.\"\n\n\"Oh. Gee, thanks for sharing.\"\n\n\"You asked.\"\n\n\"I didn't!\"\n\n\"Your tone did.\"\n\nRyu started walking. As he passed Luna, on a whim he couldn't even understand, he reached down, lifted her chin up toward him, and kissed her. Not on the lips, that would have been weird, but not safely on the cheek either. Right on the edge of her mouth instead. Flirting with dangerous territory.\n\n\"You know I love you, though, right?\" he said.\n\nLuna blushed furiously, and had no idea how to respond.\n\n\"Sure,\" she mumbled. \"What....\"\n\nBut Ryu was already moving again, beyond her reach before she could muster any coherent response.\n\nWhat the hell was that? It wasn't a kiss. Not really. But kind of?\n\nLuna was still pondering on it when Ryu returned and settled back into his seat.\n\n\"You kissed me,\" Luna said.\n\n\"... yes?\"\n\n\"Why?\"\n\n\"To show sibling affection?\"\n\n\"It was on the mouth though,\" Luna said.\n\n\"No it wasn't.\"\n\n\"Very close.\"\n\nRyu shrugged. \"Not that close.\"\n\n\"Super close.\"\n\n\"Oh. Well... sorry.\"\n\nLuna waited for more. None was forthcoming. \"Did you mean it?\" she asked.\n\n\"How can one not mean a kiss?\" Ryu asked, brow furrowing in confusion.\n\n\"Like when someone doesn't actually care about you but pretends they do.\"\n\n\"Or an ex right before they reveal something horrible,\" Ryu added almost immediately. \"Yeah, I see that now. Well I don't intend on breaking up with you, or indeed cheating on you, if that's any help.\"\n\n\"You couldn't anyway,\" Luna said with a flippant toss of her hair. \"You're my brother. You can't cheat or break up with me. Even if you wanted to.\"\n\n\"I could see another sister behind your back.\"\n\n\"We haven't got one.\"\n\n\"That we know of.\"\n\nLuna just glared until Ryu laughed and shook his head.\n\nLuna softened as she watched her brother. Just the way he laughed, the way he stretched out unconcerned. The way... the way he'd so casually kissed her moments ago and expressed brotherly love.\n\nShe wasn't drunk enough for this. Maybe with enough booze in her she wouldn't mind. Wouldn't even think about any of it. Instead she had a minor obsession on her hands. And her stupid brother could just relax and not worry about anything.\n\nLuna hopped to her feet and stepped to Ryu. He raised an eyebrow, but she didn't give him time to say anything. She simply bent down and kissed him. A proper kiss, on the lips, none of this borderline shit.\n\nIt was fairly chaste as these things go. Hardly more than a quick peck. Enough to make Luna's tummy flutter a little, and Ryu's cheeks redden.\n\nLuna sat back down, feeling far better about her situation. Triumphant, really, in a weird sort of way.\n\n\"What was that?\" Ryu asked.\n\n\"A kiss.\"\n\n\"Yes, but... why?\"\n\n\"You're allowed but I'm not?\"\n\n\"Mine wasn't on the mouth.\"\n\nLuna waved an airy hand. \"Details.\"\n\nRyu frowned. He'd known his kiss was on the edge of inappropriate, but it had felt like the right thing at the time. He wanted Luna to feel better. To not sulk her days away forever. She was loved, after all.\n\nBut then she kissed him like that. That wasn't fair. Did it mean anything? Or was it pure revenge for his flirtation with her lips?\n\nThey both sat in silence for a while. Just sipping their beers. The buzz of alcohol only making thinking that much more difficult, even as they sought its solace.\n\n\"We probably shouldn't do that,\" Ryu said.\n\n\"What?\"\n\n\"You know what. Kisses.\"\n\nLuna cocked her head. \"Well you started it.\"\n\n\"... technically true.\"\n\n\"Technically is good enough.\"\n\n\"I liked yours better though.\"\n\nLuna's cheeks went a soft pink. \"Ryu!\"\n\n\"What?\"\n\n\"You shouldn't say that.\"\n\n\"You shouldn't have done it.\"\n\nLuna made eye contact with Ryu. She bit her lip, just for a second. Her tummy flutters had only lasted a moment before, but they were back again. Stronger, if anything.\n\n\"You know what?\" she asked.\n\n\"I don't think I do, no.\"\n\n\"I think one kiss is fine.\"\n\n\"Oh?\"\n\n\"Yeah. Why wouldn't it be?\"\n\n\"That feels like a trick question,\" Ryu answered slowly.\n\n\"It's not. I'm just saying one kiss never hurt anything.\"\n\n\"I don't think that's true.\"\n\nLuna glared at Ryu. \"So what, you think we did something wrong?\"\n\nRyu was quiet a long moment. Long enough for Luna to get fidgety. She wished she could see into his head, though truly it probably wouldn't help. His thoughts weren't any more organized than hers.\n\n\"You might be right, actually,\" Ryu finally admitted.\n\n\"I'm... right?\"\n\n\"Yeah. One kiss isn't bad. I mean... in movies and stuff one kiss is often, like, a whole big deal. Sometimes for bad. Like you know when a mean person kisses someone's crush in front of them, and then the rest of the movie is, like, the crush trying to explain they don't have feelings for said mean person? That kind of thing?\"\n\n\"Not specifically, but the general concept, sure.\"\n\n\"That's what I was thinking of. But right now, for us, just being... I think you're right. One kiss hurts nothing.\"\n\n\"Exactly,\" Luna said, untensing some and trying to relax again.\n\n\"But was this technically two kisses?\"\n\n\"One from each of us.\"\n\n\"Oh. Is that how we count it?\"\n\n\"Yes,\" Luna declared with more confidence than she really felt.\n\nRyu's lips still echoed on hers. She could feel him. That one brief second of contact, and it was all she could think of.\n\n\"Well I'm glad you understand the rules,\" Ryu said.\n\n\"Me too,\" Luna said, despite feeling like she really didn't understand much of anything at the moment.\n\nRyu cradled his mostly empty beer can. He tried not to stare at Luna too hard or too often. He didn't know it, but his fixation with the way she'd hopped over and kissed him like it was no big thing was very, very similar to her current obsession.\n\nHe'd started it. He kept recalling that too. He'd only wanted to maybe distract her a bit. Get her feeling something other than loss.\n\nWell, it had worked.\n\nBut why so close to her lips like that? They'd seemed so inviting in the moment. And it wasn't like chaste pecks on the lips were even a big deal, really. And even if they were, that one was Luna's fault.\n\nAnd... and... and....\n\nIt never ended. A downward spiral of self-reflection not to be escaped from.\n\n\"Ryu?\" Luna asked softly.\n\n\"Hm?\"\n\n\"Did I ruin the magic of beers and backyards?\"\n\nRyu smiled slowly. It was just Luna. He was obsessing for the wrong reasons. \"Nah,\" he said. \"It'd take more than that.\"\n\n\"Oh good. Want to... do this again tomorrow?\"\n\n\"Ha, wait and see how hungover you are in the morning before you make those kind of plans.\"\n\n\"Well I'm not gonna drink that much.\"\n\n****\n\nLuna groaned. \"I drank too much.\"\n\n\"I told--\"\n\n\"Don't say it! I will punch you so hard.\"\n\n\"Don't think you could connect with me right now,\" Ryu said cheerfully.\n\n\"Watch me.\" Luna glared. \"Anyway, how come you're not hungover? You drank more than I did.\"\n\n\"I spread it out over longer, though. You were fast and furious toward the end there.\"\n\n\"Wasn't!\"\n\n\"Was.\"\n\n\"Was. Not.\"\n\nRyu shrugged. \"Ok. Want some food or something?\"\n\nLuna put a hand on her belly. \"Undecided right now.\"\n\n\"I'll make you something just in case then. I'm hungry anyway.\"\n\n\"Blergh. Thanks, I guess.\"\n\nRyu only beamed wider, rather annoying Luna. He then stepped close, tilted her head back very similarly to the way he had the day before, fingers delicate on her chin and everything. He looked into her eyes a moment, then flashed a quick kiss on her lips.\n\n\"You're right,\" he said thoughtfully. \"It's better that way.\"\n\nLuna only stared after him. She had to stumble and follow him to the kitchen, collapsing into a chair to watch him.\n\n\"What the hell was that?\"\n\n\"How hungover are you?\"\n\n\"Don't change the subject,\" Luna said firmly. \"You kissed me.\"\n\n\"So you do know what it was, then.\"\n\n\"We said only once each. Remember?\"\n\nRyu paused, fridge open, carton of eggs in hand. He belatedly swung the door closed again.\n\n\"What, ever?\" he asked.\n\nIt was Luna's turn to hesitate. She'd just assumed ever. But now that she thought about it, that was an awfully long time.\n\n\"Well... maybe not ever....\"\n\n\"I just assumed, like, once a day or something,\" Ryu said.\n\n\"Once a day?\" Luna squeaked.\n\n\"Yeah. Lots of things reset daily.\"\n\n\"Not kissing your sister!\"\n\n\"Oh. My mistake.\"\n\nRyu kept moving, making eggs for them. Luna felt absolutely torn watching him. Her tummy had gone from gross to... not happy, exactly, but nervous and excited, maybe?\n\nBut he couldn't just be kissing her willy-nilly like that. Obviously not. That was rude. And presumptuous. And... and....\n\nWould he try it again tomorrow? She'd just told him not to. Shit. Why'd she do that? Because she had to. There were... things at stake. Some kind of things. Important things.\n\n****\n\nRyu wasn't sure why he'd kissed Luna again. It had just felt right. Twice now. And... it was kind of good. Like it made him all tingly and stuff.\n\nBut he'd probably pushed it. Luna hadn't looked happy. Half sick. Though the hangover was probably more the culprit than he was.\n\nBut certainly part of her confused, turmoiled expression had been his doing. He knew that.\n\nOh well. Mistakes had been made.\n\nHe still regretted it as he lay in bed that night. He hadn't even gone outside drinking, as he'd half planned to. Nice summer days for lounging didn't come along all the time, after all. It hadn't felt like the time for it, though.\n\nHis door cracked open. Luna pattered in. She was ready for bed. Dressed down, sleepy look in her eyes.\n\n\"What's up?\" Ryu asked.\n\nLuna said nothing. Kept padding silently closer. She leaned down and kissed him, then straightened and turned around without a word.\n\n\"Luna?\"\n\n\"What?\"\n\n\"What was that?\"\n\nLuna turned, a smirk evident on her lips. \"A kiss.\"\n\n\"You said--\"\n\n\"You got one today.\"\n\n\"Well....\"\n\n\"Only fair. Almost missed mine, really. You might have been asleep already.\"\n\n\"Not likely,\" Ryu whispered to himself. \"So you didn't mind that one from earlier?\"\n\nLuna shrugged and scratched her head. Ryu half felt like she was trying to cover a blush.\n\n\"I didn't mind it,\" Luna said softly but meaningfully. \"That was never the problem.\"\n\n\"Oh,\" Ryu said. \"I... don't know what that means.\"\n\n\"Me either. Night.\"\n\n\"Night.\"\n\nDarkness closed again as Luna exited and shut the door. Ryu lay staring for a moment, then broke into a wide grin. Sleep came much easier afterward.\n\n****\n\n\"Hey, Mom?\" Luna said.\n\nAdrianna turned and smiled at her daughter. \"Yes?\"\n\n\"I have a weird question.\"\n\nAdrianna arched her eyebrow. \"Oh? What about?\"\n\n\"Well... kisses, I guess.\"\n\nWill snorted from the sidelines. He was fiddling with some wires over at his workbench.\n\n\"Behave, dear,\" Adrianna admonished. \"Our daughter needs advice.\"\n\n\"I heard,\" Will said. \"You can field this one.\"\n\n\"She asked me in the first place,\" Adrianna reminded him.\n\nLuna rolled her eyes at her parents. She wasn't sure she should even bring the question up in the first place. They could be so embarrassing at times. But at least they didn't mind weird questions. She'd never been afraid to ask anything. Just... mortified at times. Like way back when she'd asked about orgasms and had received way more information than she ever expected.\n\nShe'd been the most knowledgeable rumour-monger at school for a time, though. That wasn't nothing.\n\n\"What does a kiss mean?\" Luna asked, forging ahead anyway. She'd already come in to her parents' workshop, she might as well make it worthwhile.\n\nShe really liked that her mom and dad did things together like that. She didn't know anyone else, friend or otherwise, whose parents liked to build stuff together like hers did. Woodworking, metalworking, electronics. Whatever. It was kind of cute, albeit occasionally infuriating. Just like her parents generally.\n\nLuna had both parents' attention at her question. Her dad was pretending to leave it to her mom, but she could see his interest piqued.\n\nAdrianna unplugged the saw she'd been using, folded her arms, and stared curiously at her daughter.\n\n\"I assume you mean beyond just... showing affection?\" Adrianna asked.\n\n\"I suppose, yes,\" Luna said. \"Like... is it always a romantic thing?\"\n\n\"Ha, no, not always,\" Will said, despite saying he'd stay out of it not two minutes prior.\n\nAdrianna shot Will a glare, and it was handily ignored.\n\n\"Romantic or... sexual, I mean,\" Luna amended. \"Obviously.\"\n\nAdrianna toyed with her ponytail. \"There are lots of other things it can be. Affection comes in many forms.\"\n\n\"Oh.\"\n\nAdrianna stepped forward and kissed Luna on the forehead. \"See?\"\n\n\"Right, no, I meant, like, on the mouth and everything. Proper kisses.\"\n\n\"There are lots of, ahem, 'proper' kisses, honey. Not always on the mouth.\"",
        "Luna blushed and rubbed her arm awkwardly. \"Well we don't need to get into that. Just... on the mouth, though. Romantic or sexual?\"\n\nA smile twitched at Adrianna's lips. \"Do you want this mystery kiss to be one of those? Or are you hoping it isn't?\"\n\n\"It's only hypothetical,\" Luna mumbled helplessly.\n\n\"No it's not,\" Adrianna said easily. \"And that's ok. I won't pry. Not about specifics.\"\n\n\"None of our business,\" Will agreed.\n\n\"But baby, let me just tell you right now, it's not so important who it is as how you feel about it,\" Adrianna said. \"Ok?\"\n\nLuna bit her lip. \"That really doesn't answer my question though.\"\n\n\"It's a hard question to answer,\" Adrianna said. \"Particularly without knowing the real question you want to ask, but won't share with your parents.\"\n\n\"Kisses are probably mostly sexual or romantic,\" Will said, not even pretending not to be paying attention anymore. \"But... they could certainly be other things. Maybe you should ask this person who-is-only-hypothetical. They might have more insight.\"\n\nLuna sighed. \"You know you're both asses sometimes?\"\n\nHer parents feigned shock, but were fighting not to laugh.\n\n\"But... I'm glad I can ask you stuff,\" Luna added.\n\nAdrianna ruffled her hair. \"Always, honey. That's what we're here for. Mind seeing if the battery for the drill is charged before you go?\"\n\nLuna nodded. \"Sure, Mom.\"\n\n****\n\nRyu sat on the back deck in the evening after work, idly kicking one foot back and forth. He was thinking of Luna. Not of anything about her in particular. Just her.\n\nSomehow, not for any reason he could vocalize, he expected her to join him. And he was right.\n\n\"Not drinking today?\" Luna asked.\n\n\"Not currently, no,\" Ryu said.\n\n\"Thought maybe you would be.\"\n\n\"So did I. Turns out I don't want to drink today.\"\n\n\"What do you want to do?\"\n\n\"Talk.\"\n\n\"Talk?\"\n\n\"To you,\" Ryu said, cautiously examining Luna from the corner of his eye.\n\nLuna brushed her hair back. \"About kisses?\"\n\n\"Yeah.\"\n\n\"Which one?\"\n\n\"Any of them, I suppose.\"\n\nLuna stared at Ryu a moment. \"I don't regret them.\"\n\n\"Good. No reason to.\"\n\n\"Agreed. So what do you want to talk about?\"\n\nRyu stayed quiet a moment. \"Nothing in particular. Just want to talk.\"\n\n\"Makes it tricky.\"\n\nRyu shrugged. \"What do you want to talk about?\"\n\nLuna sighed and picked at a bit of dirt on her leg. \"What does a kiss mean?\"\n\n\"... what?\"\n\n\"That's what I want to talk about. I asked Mom and Dad about it. I'm not sure I got a useful answer or not.\"\n\nRyu considered. \"I mean... it's about love, isn't it?\"\n\n\"Sure. But what kind of love? That's the question.\"\n\n\"Sibling love in this case.\"\n\n\"Oh.\"\n\n\"Disappointed?\"\n\nLuna shook her head. \"No. Just don't know if I believe it.\"\n\n\"What else is there?\"\n\n\"My question exactly. It's not romantic or sexual. Obviously.\"\n\n\"Obviously.\"\n\n\"But brothers and sisters don't kiss on the mouth.\"\n\n\"Maybe they do sometimes,\" Ryu suggested. \"It's nice.\"\n\n\"It is. And, you know, just one really can't hurt.\"\n\nRyu's lips twitched, unable to hold back a smile. \"Right. Just one.\"\n\nBoth siblings sat, just waiting, anticipating. Ryu moved first. He couldn't help himself, not the way Luna was sitting and watching him. The way her eyes shone, her cheeks flushed, and her lips invited him.\n\nRyu bent over Luna and gave her a tender kiss. One that lasted longer than any of their kisses yet, but could conceivably have been mistaken for something innocent. Maybe.\n\n\"God,\" Luna breathed. \"Do you even know what that does to me?\" she asked in a whisper.\n\n\"I think I do know, yes.\" Ryu reluctantly returned to his seat. \"But it has to just be one.\"\n\n\"Right. Just one. Any more wouldn't be seemly.\"\n\n\"Exactly.\"\n\nSilence. Luna's tummy fluttered and she squirmed in her seat. Ryu fidgeted and tried desperately to keep his eyes off his sister. It didn't work. Not even a little.\n\n\"You still have one,\" Ryu said, as though a casual reminder.\n\n\"I know,\" Luna said.\n\n\"... just saying.\"\n\n\"I'm saving it.\"\n\n\"For what?\"\n\n\"For when I can't wait anymore.\"\n\nRyu groaned. \"What asinine game have we gotten ourselves into?\"\n\n\"I truly couldn't say. But... it's helping, you know. I hardly even thought about Terrence all day.\"\n\n\"Good. That's really good.\"\n\n\"I know.\"\n\n\"What were you thinking about?\" Ryu asked.\n\nLuna's eyes flashed. \"You really need to ask?\"\n\n\"No. I suppose not.\"\n\nThey waited. Ryu squirmed, finding it all tremendously unfair. He felt powerless. It was so silly. Wanting to kiss his sister. Knowing he couldn't, but that she might at any moment.\n\nThe smart thing to do would just be to get up and leave. Not let more kisses happen period. But obviously that wasn't a serious consideration here.\n\nOr... he could just kiss her again. See how that went. There wasn't any particular reason he couldn't. But--\n\nLuna pounced while Ryu was deep in thought. She'd been watching, examining, thinking, and getting all worked up trying to hold back. As she expected, it all burst out eventually, nothing to be done about it.\n\nLuna landed in Ryu's lap, coming dangerously close to tipping the whole chair over. Ryu put his hands on her, both to try and steady them and just because it felt right.\n\nShe was warm to his touch. Ryu's hands met bare skin at the edge of her shirt, just the barest amount at first. He pushed her shirt up higher, getting underneath it. Just on her sides. Relatively innocent. But so very fascinating to him.\n\nLuna dipped her head toward him. Ryu tilted to meet her, but she didn't kiss him. She stopped, wild-eyed, panting softly. She just stared at him, then wiggled around in his lap some, getting comfortable.\n\n\"Are you going to kiss me?\" Ryu asked.\n\nLuna bit her lip, feeling the pull as she stared into her big brother's eyes. \"Not yet.\"\n\n\"No?\"\n\n\"No.\"\n\n\"Well that's not fair. I can't kiss you.\"\n\n\"I'm going to,\" Luna assured Ryu, running fingers through his hair, teasing him with her proximity and touch. \"But as soon as I do... that's it for today.\"\n\nRyu groaned. \"Unfair,\" he repeated.\n\nLuna dipped her head again, and again Ryu fell for it, straining to meet his little sister's lips. But she didn't get quite close enough.\n\nLuna's pulse was way up. Her heart thumped, her body tingled. Ryu's hands on her sides, on her bare skin, felt hot and electric. Doing things to her a brother should never be able to do. Things she'd never felt with a boyfriend, even at her most loving state.\n\nJust Ryu. Why him?\n\n\"Why you?\" Luna whispered aloud.\n\n\"What?\"\n\n\"Why do I want to do this with you?\"\n\n\"Don't ask me questions like that,\" Ryu protested. \"I've got too much going on as it is.\"\n\n\"Mmm, I can feel what you've got going on.\"\n\n\"... I didn't mean that.\"\n\n\"But it's true. You're getting hard.\"\n\n\"I mean... yeah. That is happening.\"\n\nLuna smiled shyly. \"For me.\"\n\nRyu nodded, equally shy. \"For you.\"\n\n\"That might deserve a kiss.\"\n\nRyu's eyes flashed with hope and he moved to accept a kiss once again, and again Luna darted for him but pulled away just before contact.\n\n\"Lunaaa,\" Ryu whined.\n\n\"Yeah?\" Luna said, halfway breathless.\n\n\"Give me one.\"\n\n\"Please?\"\n\n\"Pleeeaaase. I need it.\"\n\n\"Unf. You need my kisses?\"\n\nRyu nodded, giving her his best puppy eyes. \"I need your kisses.\"\n\n\"But I can only give you one.\"\n\n\"I know. Can I have it?\"\n\n\"I want to save it.\"\n\nRyu groaned in frustration. \"Mean.\"\n\nLuna laughed and leaned down, nuzzling against Ryu's neck. She was careful not to press her lips to him, to not use her one free kiss.\n\nShe was turned on. Insanely turned on, actually. Reveling in the power she had over her big brother at that moment. And fighting the pull she felt in herself. The desire and sheer need to just kiss him. Because once she did, that was it.\n\nHe was so hard beneath her. She was wet for him. His hands on her sides kept creeping up. She silently urged him on, seeing how high he'd dare to go.\n\n\"You're just gonna grind around in my lap, huh?\" Ryu said.\n\n\"Not grinding.\"\n\n\"You are so.\"\n\n\"Nooo, I can't grind on my brother, silly.\"\n\n\"But you can kiss him?\"\n\n\"Once, yes,\" Luna said. \"We decided.\"\n\n\"And let him put his hands up your shirt?\"\n\n\"I had nothing to do with that.\"\n\n\"Uh huh. What else are you just gonna let happen, hm?\" Ryu asked.\n\n\"Nothin'. Just sitting with my brother. Waiting for the right moment to kiss him. Just normal stuff.\"\n\n\"Unf. Sitting on my erection too.\"\n\nLuna flushed and thrilled at Ryu straight up saying it. She was. She was sitting right on his increasingly hard bulge. Through their respective clothes, of course. But still.\n\nAnd his hands kept creeping! They were going so slow she felt like he might just be chickening out, but then they'd shift a little. Sometimes in time with her movements, like he was trying to make it seem like her fault.\n\nHe must almost be able to feel her bra by now. Almost. And then what? What else might he dare?\n\n\"Maybe you shouldn't get so excited from your sis-ter sitting on you,\" Luna suggested.\n\n\"Maybe you shouldn't give your bro-ther a lap dance,\" Ryu responded.\n\nLuna squeaked and buried her face in Ryu's neck again. That was not at all what was happening. Mostly. Kind of. Was it? It maybe wasn't all that far off.\n\nRyu's fingertips made it to Luna's bra, getting a brief flash of material. That was probably where he needed to stop. He knew that. But Luna... Luna wouldn't just kiss him already. So much teasing. And what could he do? Nothing. Nothing until she just kissed him already.\n\n\"Sisters can sit on their brothers' laps,\" Luna said. \"It's fine.\"\n\n\"Oh is it?\"\n\n\"Yes.\"\n\nRyu ran his hands around to Luna's back, still under her shirt. Partly it was just to feel more of her. He wanted more. She was so damn fascinating to him all of a sudden. Just the feel of her.\n\nPartly, too, he wanted the clasp of her bra. He took his time, getting a sense of it, trying to pretend like he had no interest at all in it. Then all at once released it and tugged Luna's bra from under her shirt.\n\nLuna sat straight up, eyes wide, mouth open, gasping shock at Ryu's audacity.\n\n\"Brothers do not take their sisters' bras off though,\" Luna said.\n\n\"Who's making these rules?\" Ryu asked.\n\n\"Everyone knows. Sitting in laps is fine. Taking off bras isn't.\"\n\nRyu dangled her bra carelessly in front of her. \"Oops,\" he said as he gently tossed it aside.\n\n\"Ryu!\"\n\n\"I mean, once a day must be fine though.\"\n\nLuna growled. \"You can't just use that excuse for everything.\"\n\n\"Why not?\"\n\n\"Because... because.\"\n\n\"Oh.\"\n\nRyu slipped his hands back under Luna's shirt. She had no bra on now. It made her warm skin all the more forbidden and enticing. If he went up too high....\n\n\"It's different with kisses,\" Luna said.\n\n\"Is it?\"\n\n\"Yes. Once a day makes sense. It's a good limit.\"\n\n\"No limit on taking your bra off. Got it.\"\n\n\"That is not at all what I said.\"\n\nRyu ran his thumbs dangerously high, just barely brushing the underside of Luna's boobs. Goddamn but he wanted to touch them. To cup them. To play with them. His little sister's boobies.\n\n\"See?\" Luna said, her cheeks flushing. \"If I still had my bra on, it wouldn't be so tempting, would it?\"\n\n\"What makes you think I'm tempted?\" Ryu asked.\n\n\"I know where your hands are headed. Plus you can't stop staring at my tits.\"\n\nRyu yanked his eyes up to meet Luna's, tearing his gaze away from her chest.\n\n\"Well they're right there,\" he mumbled, slightly embarrassed.\n\n\"They are.\" Luna danced her face in, making Ryu think she was going to sneak a kiss on him after all. She swerved away and only booped his nose instead. \"They aren't for brothers though.\"\n\nRyu shrugged. \"Oops.\" As he spoke, he moved his hands up and enfolded Luna's perfect little tits.\n\nLuna squealed and threw her head back, thrusting her chest forward perhaps accidentally, possibly totally on purpose. She couldn't even have answered that particular question.\n\n\"You can't just say 'oops' every time you're naughty,\" Luna said.\n\n\"It's working so far,\" Ryu said.\n\nHe cupped and massaged Luna's boobies, feeling her nipples stiffen for him and giving them some tender attention with his fingertips. He explored her breasts with dedication, from sides to middle, stroking them with horny reverence.\n\n\"I'm gonna have to kiss you to make you stop, aren't I?\" Luna asked.\n\n\"You could,\" Ryu said. \"But you're grinding pretty hard on me. I don't think you want to stop me.\"\n\n\"I'm not!\"\n\n\"... I mean, you're still doing it.\"\n\nLuna shook her head. \"No.\"\n\nShe was, though. She knew it. And she knew Ryu knew that she knew.\n\nShe couldn't help herself. Ryu was so hard in his pants. His erection was just kind of there. Easy to rub herself against. And it felt so good.\n\nPlus Ryu was making her horny in other ways. The way he stared at her, and the way he kept touching her. She hadn't been touched like this in... quite some time. Maybe ever. There was a level of naughtiness to this that tromped on anything else in her past. A shared knowledge that everything they did was totally unacceptable, and yet they just keep doing it.\n\nThe kisses alone might have been fine. Everything else certainly was not.\n\nAnd Ryu appreciated her. That was important to Luna too. He wasn't just using her body for getting himself off. He was horny from her, sure, but his touches were so meaningful. He thought about what he was doing. He felt her sides and back like he couldn't get enough of her, and caressed her whole breasts, not just the diamond-hard little nipples.\n\nIt had never occurred to Luna before how guys could just ignore everything but the nipple, sucking on it when they were horny, but not playing with the whole thing. It was all sensitive, damn it. Whether Ryu knew that, or whether he was just awed and enraptured, Luna couldn't say for sure.\n\n\"You're enjoying this,\" Ryu said softly.\n\n\"Well duh,\" Luna hissed back. \"Like you aren't?\"\n\n\"Do you... want me to suck on them some?\"\n\nLuna gasped, trying her best to stifle the reaction but not succeeding. \"You've already had your kiss!\"\n\n\"Ah. Good point, I guess.\"\n\n\"You can... just keep doing that.\"\n\nRyu smirked. \"Just keep feeling your boobies?\"\n\n\"Yeah. I mean, if you want.\"\n\n\"... just going to admit you like it, huh?\"\n\nLuna sat particularly hard on the bulge in her brother's pants, making him groan. \"As if I'm admitting anything,\" she said.\n\n\"You were just telling me brothers weren't meant to play with their sisters' tits. Seems like you changed your mind.\"\n\n\"... well you're good at it.\"\n\n\"I... what?\"\n\nLuna nodded. \"You heard me.\"\n\n\"Oh. Well... good then.\"\n\nRyu didn't know what he was doing well, exactly. He'd just been trying to be as gentle and arousing as he could, on the basis that Luna might let it keep going longer. Apparently he'd succeeded.\n\nMight as well keep going for it then. Ryu knew he was way too horny to be making any decisions right now, and yet he did anyway. He decided he could probably get away with pushing Luna's shirt up some more. So he did.\n\nLuna gasped and writhed around some more in his lap. Ryu steadied her by sliding his hands back down her sides and holding her. It was an excuse just to stare more than anything. Stare at his little sister's boobs.\n\n\"I don't have to kiss you just 'cause you look at my tits, you know,\" Luna said.\n\n\"That's ok,\" Ryu assured her. \"I can just keep looking.\"\n\nLuna squirmed more, despite Ryu's efforts. He wasn't trying that hard, though, because all her wiggling felt really nice in his lap.\n\n\"I don't have to even kiss you,\" Luna said.\n\n\"True.\"\n\n\"I could just pull my shirt down and leave.\"\n\n\"Certainly feasible.\"\n\n\"Grr, why are you being like this?\"\n\nRyu shrugged, meeting Luna's eyes despite wanting to keep checking out her tits right in front of his face.\n\n\"Because you won't kiss me.\"\n\n\"Is that all?\"\n\n\"Well, I wouldn't say--\"\n\nLuna kissed Ryu. She went fully for it. Taking possession of his face for her own purposes, kissing fiercely, claiming his lips.\n\nRyu was caught off-guard after so long waiting. It took him a few seconds to kiss back properly. It felt so perfect when he did.\n\nLuna was aggressive with lips and tongue. She was all worked up. Way more than she had expected to get. The two of them just kept naughtily encouraging each other. There were supposed to be limits. Yet when she was with Ryu... she couldn't quite seem to remember what they were. Her big brother of all people. How did this happen?\n\nLuna kept the kiss going as long as she could, well past the point of sanity. Her brother's mouth consumed her. The way he felt beneath her, his obvious interest and arousal, the way his simple gaze could make her feel sexier than anyone else ever had. It made her want the kiss to last forever.\n\nBut they were only human. Luna had to pull back, panting desperately. Even at her first glance of Ryu she wanted to kiss him again. But she couldn't. That was her one for the day.\n\nStupid rule.\n\n\"Damn, Luna,\" Ryu said.\n\n\"Ok, was it?\"\n\n\"How the fuck do you kiss so good?\"\n\nLuna blushed. \"I don't know that I do.\"\n\n\"I know.\"\n\n\"Yeah, well... you're ok too.\"\n\nRyu smirked. \"Just ok?\"\n\n\"Ok, pretty good then.\"\n\n\"Gee, thanks.\" Ryu sighed. \"You're just lucky I can't kiss you again yet.\"\n\nLuna's tummy twisted. She didn't feel particularly lucky. She wanted more kisses. Right the hell now. While the warmth of her brother's lips was still fresh on hers. While she could still taste him.\n\nInstead all she could do was sit there and watch him, secretly hoping that maybe he'd break the rule and kiss her again, twice in one day. But she couldn't admit it to him. Nor could she quite bring herself to break the rule either. It was unfortunate.\n\nRyu helped by playing with her tits some more. Fondling them delicately and with great thoroughness. Like he had to commit them to tactile memory.\n\n\"One kiss isn't enough,\" Luna said.\n\nRyu nodded seriously. \"I know.\"\n\n\"But....\"\n\n\"Yeah.\"\n\n\"We can't do more.\"\n\n\"I know.\"\n\nLuna whimpered. \"Ok, a few more minutes of playing, then I need to go.\"\n\n\"Do you?\"\n\n\"Yes.\"\n\n\"Why?\"\n\n\"... to masturbate.\"\n\n\"Unf.\"\n\nLuna smirked. \"What, you like hearing that?\"\n\n\"Kinda, yeah.\"\n\n\"I could tell. Your penis twitched.\"\n\n\"Shut up. It did not.\"\n\n\"Sure did.\"\n\nRyu bit his lip, idly rolling one of Luna's nipples in his fingers. \"I'm gonna have to get off too.\"\n\n\"Yeah, I figured.\"\n\n\"Should we... go do that?\"\n\n\"... can you play with my tits a little more first?\"\n\n\"Ha, yeah, ok. Anything in particular?\"\n\nLuna flushed softly. \"I mean... I like when you hold them. Right in your palm. And kind of stroke them a bit.\"\n\n\"Just gentle, huh?\"\n\n\"I guess. I mean, I like my nipples played with, but I feel like the rest gets neglected a bit sometimes.\"\n\n\"That's fair. Nipples get all the attention.\"\n\n\"They do.\"\n\nLuna closed her eyes and just enjoyed herself as long as she could. Eventually, as she knew would happen, she either had to go get herself off, or start grinding wantonly in Ryu's lap. She'd been wiggling around lots, enjoying his erection against her, but actually getting herself off like that was too much for her. Way too much.\n\n\"Ok,\" Luna said. \"I have to go.\"\n\n\"Mmhm, thought you might.\"\n\nLuna unsteadily stood up. Ryu was right behind her. He had the sort of look in his eyes like he might try to kiss her again. He didn't, though. He just gave her chest another look, then gently tugged her shirt back down for her.\n\n\"I'll, uh, see ya,\" Luna said awkwardly.\n\nRyu nodded, feeling a flush in his cheeks matching that in Luna's. They knew what they were about to do. The things they'd made each other feel just now. Somehow, being separated already made him less sure of himself.\n\nGoing to their own rooms helped somewhat. That distance and inability to look at each other.",
        "Ryu found that stroking himself was simultaneously the most embarrassing and most intense masturbation he could ever remember. He didn't need to be embarrassed about it, Luna was rubbing her pussy in her own bed too. But he hadn't done anything quite like this before. Not with nearly the same emotional mix.\n\nThey didn't know it at first, but they each helped the other to an insane orgasm. Both making big messes, and leaving themselves weak and panting afterward, still just thinking about each other.\n\n****\n\nLuna actually found herself humming cheerfully the next morning when she got up, and even sang to herself in the shower. She only thought about Terrence when she realized that she didn't want to dwell on her breakup. Didn't have that destructive urge to pick it all apart in retrospect.\n\nJust Ryu. That's all she wanted to think about. Ryu and... and that kiss. And what led up to it, of course.\n\nShe'd been so horny after. Rubbing herself in bed, thinking about her brother. Thinking about him stroking himself while thinking about her. It was a deliciously vicious cycle.\n\nEven now, standing under the decadent warm shower spray, Luna had the urge to play with herself, or bring down the shower head and turn it on her pussy. Or something. She'd had a really good cum last night. She shouldn't be worked up again already, even just at a low level.\n\nBut Ryu though....\n\nWhat she'd give to have him in the shower with her right now. Not that they could do that. Obviously. But she could think about it. Thinking was fine. Sort of.\n\nHis hands on her, his eyes on her, his... other things on her....\n\nLuna flushed just at her own imagination. Going too far with it. Like... sex was out. She could picture it in her mind so very easily. All kissing and rubbing up on one another, all slippery and horny. And... and maybe Ryu would slip somewhere he shouldn't. Maybe right inside her. Luna didn't think she'd stop him if he did. That was a scary thought.\n\nShe gave in and grabbed the shower head. She leaned back against the wall and pressed the spray to her pussy, finding her clit and biting her lip as it hit her forcefully. It was often too much to go so aggressive on her clit just like that, but this morning it felt so, so good. Needed.\n\nLuna felt that she just needed another cum. That was all. Clear her head. She came up with wild and impossible fantasies all the time when she got in certain moods, and getting off usually made them go away. That was just how horniness worked.\n\nLuna whimpered softly as she got closer and closer, her little noises mostly muffled by the shower. She leaned back heavily against the wall, trusting her legs not to give out entirely on her. Her tummy tightened a little, warmth and tingles running through her, then the explosion of a much needed orgasm giving her what she needed, making her happy, flushing out most of her nerves and leaving her much calmer afterward.\n\nShe hummed to herself as she dried off. Ryu was still in her head, but not in quite such an urgent way as before. That was something.\n\nStill, as Luna took a look at herself in the mirror, she wondered what he'd think. She was pretty sure she knew. She knew how he looked at her with her clothes on, or with her tits out. If he saw her naked it'd be close to the same, only... more. So she hoped, anyway.\n\nLuna wrapped a towel around her fresh and damp body. She padded out of the bathroom, intent on her own room to get dressed. The allure of Ryu's room was too strong, though. She stopped at his door instead, barely clothed, mind whirling, excited at the possibilities despite just getting herself off.\n\nShe wasn't going to do anything, though. Just say good morning. That was all.\n\nLuna cracked the door open and peeked her head in. \"Hey, you up? Or-- oh!\"\n\nRyu threw his covers back over himself. Quick, but not quite quick enough. Fast enough that Luna only got a flash instead of a full look, at least.\n\n\"Don't you knock?\" Ryu asked without any real malice in his voice.\n\n\"Were you masturbating?\"\n\n\"... no?\"\n\n\"You were, though.\"\n\n\"Ok, yes.\"\n\n\"Didn't you just do that last night?\"\n\n\"Yeah. And I was doing it this morning. So?\"\n\nLuna blushed. \"Thinking about me?\"\n\nRyu flicked his gaze away for a second, but it was quickly drawn back to his little sister, freshly showered and toweled. \"Obviously.\"\n\n\"Oh.\" Luna fidgeted. \"I had to this morning too,\" she admitted. \"I don't usually have to again so soon.\"\n\n\"Like... how often would you have to? On average?\"\n\n\"I don't know. A couple times a week maybe?\"\n\n\"Not even once a day?\"\n\nLuna snorted. \"That's way too much.\"\n\n\"Disagree.\"\n\n\"Yeah, well, you're a boy. It's different. You get hard, you just want to touch it. I know how that works.\"\n\nRyu laughed softly. \"Not quite that simple, but... maybe not far off I guess.\"\n\nLuna shifted her weight. She was halfway in her brother's doorway. She really should just leave again. Or go in. Standing halfway was just asking to get caught.\n\n\"Are you gonna keep going?\" Luna asked.\n\n\"That's the plan.\"\n\n\"... after I leave?\"\n\n\"Well of course. What kind of boy do you think I am? I'm not gonna jerk off in front of my sister.\"\n\n\"Mmhm.\"\n\nLuna fidgeted some more and checked behind her to make sure the coast was still clear. She grinned wickedly, the grasped her towel and carefully lowered it to flash her tits without revealing anything more.\n\nRyu's expression was exactly what she'd hoped for. He'd seen her tits the night before, but she wouldn't have known it by the surprised and awed look on his face.\n\nLuna stuck her tongue out, then arranged her towel and skipped away, only barely remembering to shut the door behind her. Let him jerk off to that. It was a much fresher memory for him.\n\nRyu groaned as Luna twirled around and left. That was so unfair. Leaving him with such a brief flash. Making him wonder about everything else under her towel. As though he wasn't already far too obsessed with his sister while masturbating.\n\nIf she was going to do something like that, she could have at least given him a proper look. He'd seen plenty of her tits already, after all. Felt them up to his heart's content last night. This was such a tease in comparison, just exactly the way she wanted.\n\nWell... he didn't have to let her get away with it.\n\nRyu hopped out of bed and stuffed himself into his boxers. He struggled into a shirt while moving, risking being in the hall with an obvious boner for the sake of exigency.\n\nHe barged in to Luna's room just before she dropped her towel. She spun around, alarmed and confused for a brief second before taking in the sight of her chaotically dressed brother.\n\n\"What are you doing?\" Luna asked, eyes firmly on the tent in Ryu's underwear.\n\n\"What do you think?\" Ryu said.\n\n\"I don't-- hey!\"\n\nRyu casually flipped the front of Luna's towel down, and she only just barely managed to hold the rest of it mostly in place. Her boobs were out, and the rest of her only scantily protected.\n\nRyu grinned and felt his cock twitch at uncovering his little sister's chest again. How was she so damn perfect anyway?\n\n\"You can't just do that whenever you want, you know,\" Luna said, making no move to recover herself.\n\n\"Sure I can,\" Ryu said. \"I get one kiss, don't I?\"\n\n\"What does that have to do with my boobies?\"\n\nRyu's smile widened, matching the sudden increase in size of Luna's eyes. He ducked his head, placing a soft hand on one of Luna's breasts while approaching the other with his mouth. He kissed her tenderly just above her nipple, then trailed more kisses across her sensitive skin.\n\nTechnically speaking, it probably didn't count as one kiss. Ryu knew that even as he did it. But it was pretty close. His lips stayed pretty firmly attached to Luna, and to her pretty tits.\n\n\"On my mouth!\" Luna said, gasping at the sudden flood of sensation and arousal. \"You get a kiss on my mouth.\"\n\nRyu shrugged and kept teasing her with his mouth. He traveled from one breast, across the gap between them, and onto the other. He kissed them everywhere, tactically not focusing on the nipple, as per their previous conversation.\n\n\"This is cheating,\" Luna whined, while simultaneously sticking her chest out and nearly losing her precarious grip on her towel.\n\nAgain, Ryu only shrugged and kept kissing. More like sucking, at times. And definitely some licking. But it could arguably be considered kissing. Luna didn't dare think about what it would mean to call it anything different.\n\nAlthough... he'd played with her tits a lot last night. Like a lot. And she'd happily let him. If she let this not count as a kiss... that would mean she'd still get one from him at some point. But it would also imply that her big brother could march in, pull down her towel or pull up her shirt, and suck on her boobies whenever he wanted. That sounded like a dangerous precedent to set.\n\nBut oh god was she tempted. The thrill and electric arousal dancing around inside her pushed her to just do it. Just let Ryu do what he wanted.\n\nAnd then what? Could she... could she do stuff to him too then? Oh god, what would she do with that kind of power?\n\nRyu, temporarily oblivious to any thoughts milling through his sister's head, felt an increasingly urgent need to get back to playing with himself. He wasn't brave enough to do it right there in front of Luna, though making himself cum while sucking on her tits was tempting as all hell.\n\nHis cock throbbed in its constrained prison. He felt the dampness of precum soaking into his boxers. Only the continued siren song of Luna's beautiful titties kept him from racing back to his room and sorting it out.\n\nShe was so soft, so delicious, so fresh and clean and adorable. Her protests all came with increasing physical touches to urge him on, making her words a bit ridiculous. Telling him to stop while pushing her chest to his face, and pressing a thigh to his erection, practically letting him grind on her.\n\nRyu finally raised his head, meeting Luna's big, emotion-filled eyes.\n\n\"You got me all spitty,\" Luna said.\n\n\"Sorry.\"\n\nLuna left her towel where it was, her breasts fully uncovered and shining from their recent oral attentions.\n\n\"You know what's really unfair about that though?\" she asked.\n\n\"I don't suspect I do.\"\n\n\"Now I only have one kiss left for the whole day. You went and used yours on my boobies. And that's not even a proper kiss. One kiss all day, Ryu!\"\n\n\"Sorry,\" Ryu said again. \"How about if tomorrow I definitely give you a proper kiss?\"\n\n\"Promise?\"\n\n\"I promise.\"\n\nLuna felt better immediately, already looking insanely forward to tomorrow, despite it being so early yet in today.\n\n\"You know I'm gonna have to masturbate again thanks to you,\" Luna said. \"Three times in, what, twelve hours?\" She poked Ryu in the chest. \"You're a bad influence, big brother of mine.\"\n\n\"You know I'm only gonna feel proud of that.\"\n\nLuna softened. \"I know.\"\n\nShe stared at him a moment, then launched herself at him. Luna's arms wrapped around Ryu, she pressed herself close, including feeling his erection poking urgently at her. Quickly, decisively, perhaps recklessly, she kissed him.\n\nLuna's towel fell off in the process. She knew it. Knew she was pressing herself nakedly against her brother. He knew it too. His hands were on her back, down to her butt, squeezing, groping, then back up her spine. Ryu couldn't see while they were kissing, but he knew her towel had come off.\n\nBad as it was, Luna loved it. Loved being held by Ryu without any of her clothes on. It wasn't on purpose. Dropping the towel had been pure accident. But she felt so naughty, so appreciated, and so safe, held nakedly by her big brother.\n\nRyu enjoyed it too, from the opposite side. Luna all naked in his arms, kissing him fiercely, rubbing up on him.\n\nHer tongue flashed over his and he met her, moaning into her mouth. Why did she do this to him? Of all the girls possible, Luna for fuck's sake. They'd hardly even done anything. Just kissing, mostly. And playing with her tits a bunch.\n\nSure she was naked now. Naked and loving up on him. But he was pretty sure it wasn't intentional, that she was just rolling with it. Like him, she probably didn't know what to do about it once this kiss was over.\n\n\"My towel fell off,\" Luna murmured, finally letting their lips separate.\n\n\"I noticed,\" Ryu said.\n\n\"Close your eyes.\"\n\n\"Why?\"\n\n\"So you don't see me.\"\n\n\"I can feel you.\"\n\n\"I know. Just... close your eyes.\"\n\nRyu closed his eyes. It was hard to keep from peeking. Nearly impossible. He heard Luna scrambling, knew she wasn't covered yet, knew he could probably get away with a quick look, but he didn't.\n\n\"Ok, you can look.\"\n\nRyu opened his eyes. Luna had her towel back around her, looking somewhat modest and innocent again. Her flushed cheeks and wild eyes gave her away, as did the oh-so-recent memory of her body against him.\n\n\"You know I'm gonna see you naked sooner or later,\" Ryu said.\n\nLuna blushed even redder. \"Maybe.\"\n\n\"Definitely.\"\n\nShe bit her lip. \"Jeez. You know I'm worked up already. Don't have to keep it up.\"\n\n\"I did notice,\" Ryu said. \"Didn't think you'd use your kiss already.\"\n\n\"Grr, me either. Now I've got nothing left to look forward to all day. Thanks for that.\"\n\n\"Not my fault.\"\n\n\"It is, though. You're... you're ruining me.\"\n\n\"Oh?\" Ryu raised an eyebrow.\n\n\"Making me lose control. No one does that to me so bad.\"\n\n\"Just needed the right guy maybe.\"\n\nLuna crossed her arms and chewed her lip. \"You?\" she asked softly.\n\n\"I mean... not specifically. But maybe.\"\n\n\"You're gonna get such an ego on you. That you could do these things to me. Your sis-ter.\"\n\nRyu considered the point. \"Well... what about you doing these things to me?\"\n\n\"That's different. You're hornier anyway.\"\n\n\"Yeah, but... I've never felt like this.\"\n\nLuna's heart beat harder in her chest. \"Really?\"\n\n\"Yeah. Really. Was it not obvious?\"\n\nLuna tossed her hair flippantly. \"Well, you know, a boner's a boner.\"\n\n\"Not necessarily,\" Ryu said quietly. \"And it's not all about the boner.\"\n\nLuna squeezed her arms tighter around herself. Her tummy was so fluttery, and she was desperately trying not to tremble.\n\n\"Tryin' to sweet talk me now?\" Luna asked.\n\n\"Nope. Just sayin'. I mean, I got what I was after already.\"\n\n\"Oh really? Just my boobs is all you want, huh?\"\n\n\"And your kisses. And other stuff. I just don't really expect to get other stuff.\"\n\nLuna felt herself shaking despite her best efforts. \"Like what other stuff?\"\n\nRyu felt his face heat up. \"I can't say.\"\n\n\"You can.\"\n\n\"You're my sister.\"\n\n\"Doesn't seem to stop you.\"\n\nRyu stepped closer and put his hand under Luna's chin, lifting it slightly, gazing into her eyes.\n\n\"You're lucky I'm out of kisses,\" he said. \"Or you'd be in trouble.\"\n\nLuna let out a small whine. \"You can kiss me.\"\n\n\"I'm all out.\"\n\n\"Nooo... maybe... maybe you can do one.\"\n\n\"I can't.\"\n\n\"Just... kissing my boobies doesn't count. Has to be my mouth.\"\n\nRyu smiled. \"Is that the rule?\"\n\n\"Yeah. Of course. We get one kiss a day. But you have to do it right.\"\n\nLuna watched Ryu nervously. She didn't know what she was doing. Not really. Only that she needed his lips on hers again. She needed it so badly. And she wasn't sure Ryu would go for it. The rules were being stretched to breaking point. How long had it even lasted? A couple days? Brutal. How was it so hard to be good around her damn bro-ther?\n\n\"I better do it right, then,\" Ryu said after what felt like an eternity.\n\nLuna squealed as Ryu gently pushed her back, his lips meeting hers mid-stride, then the two of them tumbled onto her bed. Technically their kiss came apart mid-fall, but neither counted that. They picked right back up lying together, Ryu on top, heavy and warm on top of her, comforting and sensual.\n\nLuna ran her hands up Ryu's shirt. She wanted it off, but there was no way to remove it while they made out, and she wasn't giving that up for anything.\n\nHer towel came undone as they felt each other up and wiggled around together. She let it be. If it fell off again, then it fell off, and that was fine.\n\nRyu was aware of Luna's towel falling open. First little flashes of her bare skin could be felt, then more and more. He waited patiently at first, but soon slipped a hand down to help her towel along. He cupped one of Luna's tits in his palm and caressed it lovingly, all the while locking lips and dancing tongues with his cute and mostly naked little sister.\n\n\"Don't stop,\" Luna begged.\n\n\"I think I have to,\" Ryu said regretfully. \"I'm gonna cum.\"\n\n\"More,\" Luna insisted. \"You can cum if you need to.\"\n\n\"On you?\"\n\n\"... if it happens it happens.\"\n\n\"Dammit Luna.\"\n\nRyu kissed her more aggressively. Definitely breaking rules by now. Unquestionably. But he couldn't stop. Nor did Luna want him to. He could only imagine the look of disappointment and betrayal he'd get if he stopped kissing her now.\n\n\"Lemme get your shirt off,\" Luna hissed.\n\n\"You're really pushing this one kiss thing,\" Ryu said.\n\n\"... shush.\"\n\nLuna was mildly annoyed at Ryu pointing that out. Mostly because it was totally true. The time it took to get his shirt off definitely meant they were starting another kiss after. But if he hadn't said it, it would be much easier to pretend otherwise.\n\nThe other notable concern, not that Luna minded, was that Ryu got a full glimpse of her as his shirt came off. At least down to her waist. His lips curled in a possessive smile as his eyes bounced down her body, then back up. Her towel wasn't even a consideration anymore as far as covering her.\n\n\"You're so naked,\" Ryu said.\n\n\"I know.\"\n\n\"With your brother.\"\n\n\"I knooowww.\"\n\n\"Seems bad.\"\n\n\"For who?\"\n\nRyu shrugged. He didn't have an answer for that. It seemed all good to him, actually.\n\nHe kissed Luna again, molding his body to hers. He lay atop her, holding his weight off somewhat at first, but she happily accepted him and he settled fully along her length.\n\nLuna couldn't have been more thrilled and aroused. With Ryu of all people. She was naked beneath him. It was crazy. But he kept kissing her, and feeling her tits, and grinding on her. She was lost to it. Just as happy and loved as could be.\n\n\"You've still got boxers on,\" Luna whispered.\n\n\"I'm aware.\"\n\n\"Should take 'em off.\"\n\n\"Then we'd both be naked.\"\n\nLuna felt electricity inside, squirming at the excitement. \"You say that like it's a bad thing.\"\n\n\"That'd be very close to having sex, Luna.\"\n\nLuna whimpered and kissed Ryu deeply. \"Well obviously we can't do that,\" she said.\n\n\"Obviously.\"\n\n\"But you need to cum. You don't want to make a mess.\"\n\n\"I'd make a mess on you in that case.\"\n\nLuna's eyes fluttered closed and she struggled to breathe. \"Yes,\" she said faintly. \"You would.\"\n\nRyu grunted and thrust harder on his sister. He couldn't take it. This was too much. Too horny. Too crazy. But oh god he wanted it. He wanted to cum on Luna. To make that mess he'd threatened. And she only encouraged him. It was so bad.\n\nLuna struggled with Ryu's boxers, tugging them down, feeling his cock suddenly slide against her. All slick with precum, and only getting more slippery as his precum smeared around on her skin.\n\nLuna grabbed Ryu's butt and urged him on. He was going to cum. He was going to cum on her!\n\nRyu grunted and tensed, trying to hold back. He couldn't. Luna was too much. His own little sister. The way she just kept kissing him....\n\nHe wasn't sure he'd ever felt more desired in his life. No one had ever been quite so manic about kissing him, nor wanted him to cum so badly that they didn't care about the mess. Or actively sought it? Either way.\n\nAnd he was right there with Luna. Wanting more of her. Wanting to give her what she wanted. Wanting to make her feel good.\n\nBut not sex. Fuck, not that. The temptation was there. Ryu kept his cock safely on Luna's tummy so as not to accidentally do anything they'd both regret. The implication being that they wouldn't regret what they were already doing.",
        "\"You can cum,\" Luna said in a surprisingly gentle voice. \"It's ok.\"\n\n\"Luna....\"\n\n\"It's ok,\" she repeated, then kissed him again, going deep with her tongue right away.\n\nRyu was right there anyway. Whether she'd said anything or not. Since she had once again encouraged him, he was done.\n\nRyu took solace and comfort in Luna's mouth as pleasure welled inside him, intense and almost painful, but releasing in such a rush of ecstasy as to be overwhelming. The constant reminder throughout that it was Luna he was cumming on. That she had halfway made him do it.\n\nAnd it was such a mess. Ryu could feel it all over the both of them. A shared, slick, sticky disaster. Damn it felt good though.\n\n\"You came on me,\" Luna cooed.\n\n\"You knew that was going to happen.\"\n\n\"I did.\"\n\n\"So now what?\"\n\nLuna shrugged. \"I dunno.\"\n\n\"I can't get up.\"\n\n\"Why not?\"\n\n\"... you're naked.\"\n\n\"Right. Well... that's fine.\"\n\n\"You didn't want me to see you like that,\" Ryu pointed out.\n\n\"You got cum all over me. I think we might be past that.\"\n\n\"Oh.\"\n\nRyu sat up. His and Luna's tummies were indeed quite messy. His eyes were only for Luna, though. Her shy, beaming smile, impish eyes, perfect, perky breasts, and her cute, slippery tummy that led to forbidden areas as his gaze followed it downward. Areas he couldn't actually see while still straddling her, but could well imagine.\n\nLuna didn't let that stop her. Once Ryu was upright, she sneaked a hand under him and rubbed her pussy while her brother still sat atop her.\n\nLuna bit her lip and fingered herself, feeling her own touch all the more intently for Ryu's proximity and gaze. And, indeed, her first full body look at him without clothes on. It was intense and electric, so unreal and dream-like.\n\n\"Ryu?\"\n\n\"Hm?\"\n\n\"This is ok, right?\"\n\nRyu cocked his head. \"Little late to be asking that, isn't it? You kinda told me it was.\"\n\n\"I know. But just... your turn to tell me, ok?\"\n\nRyu nodded slowly. \"It's ok, Luna. It's all ok.\"\n\nLuna smiled at the reassurance, letting her eyes half-close and her gaze soften, still locked firmly on to Ryu. \"Thanks.\"\n\n\"You do things to me, Luna,\" Ryu said, lazily running his fingers up her soft skin, deftly avoiding cummy swathes.\n\n\"Oh?\"\n\n\"I don't quite know what to make of that.\"\n\n\"You're supposed to be telling me it's ok!\"\n\n\"It is,\" Ryu said soothingly. \"It's me and you.\"\n\n\"Yeah,\" Luna breathed. \"Me and you. That's right.\" She eyed Ryu cautiously, needing more from him, but not sure if she dared take things further. How could she dare? And yet, how could she not? \"I love you,\" she said, trembling, feeling butterflies inside, fighting a painful need in her clit.\n\n\"Yeah. Me too, Luna.\"\n\n\"No, I mean, I think I love you, Ryu.\"\n\n\"Like....\"\n\n\"Like how the fuck am I supposed to find anyone else like you? Like... like why can't I love my brother anyway? Who made that rule?\"\n\nRyu felt himself shaking, very much the same as Luna. He hardly dared touch her, knowing he'd give away some feelings in doing so. But he couldn't bear not to touch her.\n\n\"I don't know,\" he said. \"I don't have any answers at all for you right now.\"\n\n\"Jeez. And after you already cummed on me, even. Horny again already?\"\n\n\"I don't think it's about being horny, Luna. I mean... parts of it are. Obviously.\"\n\n\"Obviously,\" Luna agreed, still rubbing her pussy.\n\n\"Just, like... you confuse me. You know that, don't you? You've been turning some things in my life all upside down.\"\n\n\"You started it.\"\n\nRyu grinned crookedly. \"I guess that's true. Then... maybe this started a ways back. I don't know when.\"\n\n\"Me either,\" Luna said. \"I can't imagine when I ever would have had feelings like this, but... it's so easy to just let them happen.\"\n\n\"It really is.\"\n\n\"I love you, Ryu.\" Luna smiled. \"It feels so good just to say it.\"\n\n\"Goddamn, Luna. I... I love you too.\"\n\nLuna whimpered and threw her head back, trying desperately to keep some order to the way she was rubbing herself. She could cum. Just a little more....\n\n\"Again.\"\n\n\"What?\"\n\n\"Say it again! Please?\"\n\nRyu leaned down, knowing full well what he was doing, but unable to help himself. \"I love you,\" he repeated, then kissed Luna softly, tenderly, lovingly on the lips. Showing affection both physically and verbally. His brotherly love for her.\n\nLuna came. The most perfect cum she could imagine. Well... almost. Perfect enough.\n\nRyu's touch, his kiss, his love. Her poor little pussy exploded in happy pleasure, making almost as much mess of her sheets as Ryu had of her tummy. Her legs tensed and shook and her toes curled. She moaned and clung to Ryu, needing his mouth on hers for as long as possible. Needing something to hold on to while she drowned in her own physical pleasure and a storm of emotional connection and adoration.\n\nToo much. Way too much all at once. But so very perfect.\n\nHer perfect big brother. Who could have suspected?\n\n****\n\n\"You know, we should clean up at some point,\" Ryu said.\n\n\"I know,\" Luna said. \"But I want to just lie here.\"\n\n\"That's all we've been doing for... how long has it been?\"\n\n\"No idea.\"\n\n\"I think I'm super late for work.\"\n\n\"Probably.\"\n\n\"You don't care at all, do you?\" Ryu accused.\n\n\"Nope,\" Luna said.\n\n\"Ah. Well... me either, actually. Though I should probably shoot a text and hope I'm not in massive trouble over it.\"\n\n\"Probably.\"\n\n\"... you're not gonna let me go, are you?\"\n\n\"Not without a fight.\"\n\n\"'K.\"\n\nLuna sighed happily as Ryu failed to move. \"You know I just showered and everything. Now I have to clean up again.\"\n\n\"In comparison, I think mine's a bigger bother.\"\n\n\"Wasn't a competition.\"\n\n\"Just saying.\"\n\n****\n\nRyu and Luna didn't make much progress on figuring things out for a few days. Which was fine with them, really. They probably needed to make some decisions, but it was so much easier and more fun just not to.\n\nRyu found his days obsessed with Luna, and she right back at him. The sort of obsession that comes of seeing each other naked, and cumming, and lots and lots of kisses. More than that, though, even just regular time spent together had new meaning. New, beautiful, deeper meaning.\n\n\"What's going on with the two of you anyway?\" Will asked one day.\n\nRyu startled and tried not to panic at his father's question. \"What?\"\n\n\"You and Luna,\" Will said. \"We knew your sister was seeing someone she didn't want us to know about, but now the two of you are acting all secretive and happy.\"\n\n\"Hush, darling,\" Adrianna said. \"You shouldn't just give away Luna's secrets like that. She talked to us in confidence.\"\n\n\"I'm not giving anything away,\" Will protested. \"They'd tell each other stuff way before they'd tell their poor old parents. Ryu probably knows who Luna's seeing, don't you?\"\n\n\"I'm uncomfortable with this,\" Ryu said honestly.\n\n\"Don't worry about your father, dear,\" Adrianna said, rolling her eyes. \"Luna's on a journey of some kind. And maybe it's a good idea and maybe it isn't, but that's not for us to decide for her.\"\n\n\"Oh,\" Ryu said. \"Well... good, then.\"\n\n\"It's infuriating not to know,\" Adrianna admitted. \"But we're going to respect her privacy, aren't we?\" she asked, looking meaningfully at Will.\n\n\"Yeah, yeah. Privacy,\" Will grumbled. \"Overrated!\"\n\n\"You don't think so when its ours we're talking about,\" Adrianna said with a sly smirk.\n\nRyu's eyes flashed. \"Please tell me that wasn't a hint of something I don't want to know about.\"\n\n\"Ok,\" Adrianna said. \"I won't tell you.\"\n\n\"Aaannnd I'm out,\" Ryu said. \"I'd say this exchange was fun, but....\"\n\n\"Urgh, you always ruin my interrogations,\" Will said as Ryu retreated.\n\n\"Darling, you shouldn't be interrogating our children.\"\n\n\"Well if they wouldn't keep secrets....\"\n\n\"It's what children do, I think you'll find. Very healthy for their development.\"\n\n\"Then I'm helping them hone that development.\"\n\n\"Yes, darling, of course you are.\"\n\nRyu shook his head as he got safely out of earshot. His parents were cool, generally, but with a knack for being absolutely mortifying when they so chose. Often not for reasons they'd ever consider.\n\nHow red had he gotten during that brief talk anyway? Hopefully not bad enough to give anything away. He and Luna needed to be more careful, it seemed. And yet....\n\nRyu sighed wistfully just thinking about Luna. How could they be more careful? They were doing all the could to be sneaky while still getting their time together they so desperately needed.\n\nIt just wasn't fair how complicated loving his sister was.\n\n****\n\n\"I don't think we need to worry,\" Luna said.\n\n\"Oh you don't?\"\n\n\"Nope.\"\n\n\"So even though Mom and Dad fully know we're both seeing someone--\"\n\n\"They suspect,\" Luna corrected. \"They don't actually know anything.\"\n\n\"Leaving that aside for the moment... we also spend a lot of time in compromising positions. We could be caught at basically any time.\"\n\nLuna frowned. \"How do you mean?\"\n\n\"I mean we're sitting outside, and you're in my lap again with your shirt up over your boobs and keep teasing me like you're going to kiss me.\"\n\nLuna grinned. \"Well it's one of my favs. And not just because I could use a little tanning on my boobs.\"\n\n\"I am aware. I love it too.\"\n\n\"You love my boobies,\" Luna corrected.\n\n\"I do,\" Ryu said. \"And I love you. Possibly in that order, as you pointed out.\"\n\n\"Hey! No, I never... you have to love me first, then my boobies. In that order.\"\n\n\"I shall do so, then.\"\n\n\"Good.\"\n\nRyu took the time to kiss Luna's tits, trailing kisses across them with all due brotherly care.\n\n\"I'm right there with you,\" Ryu said. \"Don't get me wrong. I don't want to stop anything we're doing. Just... how do we not get caught?\"\n\n\"You think I know?\"\n\n\"No. I'm just asking.\"\n\nLuna tangled her fingers in Ryu's hair and encouraged his face back to her chest. She sighed happily as he kissed her tits some more.\n\n\"Ok, so like, if we had to... we could stop with the inappropriate stuff,\" Luna said.\n\n\"Uh....\"\n\n\"Just if we had to, I said. Not that I want to. But... I don't know, Ryu, you make me happy. I want the sexy stuff, but it's not as important as you are.\"\n\n\"Luna....\"\n\n\"... I didn't say you had to stop kissing me.\"\n\nRyu grinned wickedly, looking up at Luna, abandoning her tits for the moment. He went for a proper kiss instead, caressing her lips with his, starting tender and affectionate. He went deeper, sought out her tongue, poured his love into her.\n\nThe kiss, as often happened between them, lasted as long as their breath held out.\n\n\"Well, that's my one for the day,\" Ryu said.\n\nLuna squirmed in his lap. \"Remind me why we're still doing that? It's not like we even stick to it most of the time.\"\n\n\"Because that's the rule. One kiss a day.\"\n\n\"I don't think I like that rule anymore.\"\n\n\"Gotta have rules. Where would we be otherwise?\"\n\nLuna pouted. \"But I already used my kiss today.\"\n\n\"I know.\"\n\n\"What am I gonna do, wait 'til tomorrow?\"\n\n\"Seems unlikely, doesn't it?\"\n\n\"Maybe... maybe I just find something else to kiss.\"\n\nRyu groaned at the look in his sister's eye. The fact that only kisses on the mouth counted, as per their increasingly stretched rule, forced them to be inventive. Which was, honestly, one of the best reasons for even pretending to stick to their 'one kiss.'\n\nLuna did, indeed, get inventive with it. She kissed all along Ryu's neck and collarbone, up to his ears, then down his chest. She took his shirt off to make things easier, then started undoing his pants as well when she got low enough.\n\n\"Where you goin', Luna?\"\n\n\"You'll find out,\" Luna teased.\n\n\"... is it in my pants?\"\n\n\"Maaayyybe.\"\n\n\"I only ask because you seem to be trying to get in pants, is all.\"\n\nLuna nodded. \"And if you'd just help out for a second, I'd have them off already.\"\n\n\"Remember what I said about compromising positions?\"\n\nLuna waved Ryu's concern away. \"You worry too much.\"\n\n\"I don't. Usually you worry more. Just... I don't know, Mom and Dad are onto us. Kinda. I really don't need them finding out about this.\"\n\nLuna looked up at her brother from her knees, beaming as she got his pants down and his cock freed. She stared up at him as she took a gentle hold of his erection, leaned in, and gave the softest of kisses right underneath the head.\n\nRyu groaned and his cock twitched in Luna's hand. \"That's where you wanted to kiss, huh?\"\n\nLuna nodded. \"Mmhm!\"\n\n\"... well you can do that some more if you like.\"\n\n\"What makes you think I didn't just want one?\"\n\n\"That wouldn't be nice.\"\n\n\"I mean... really I should put your penis away before we get caught.\"\n\n\"Lunaaa.\"\n\n\"Yes?\"\n\n\"Play nice.\"\n\n\"Sooo... you want another kiss?\"\n\n\"Yes please.\"\n\nLuna nodded and kissed Ryu's cock again, just down from the first one. Again, she gave him only one, then just looked at him, still holding and gently teasing his shaft with her fingers.\n\n\"Are you going to make me keep asking?\" Ryu asked.\n\n\"Depends. Do you want your sis-ter to keep kissing your penis?\"\n\n\"Unf. Goddamn, Luna. Seriously.\"\n\nLuna quite enjoyed being able to drive her brother crazy like this. She was getting really good at it, she felt.\n\nRyu quite enjoyed it too, for that matter. Enjoyed it enough to put thoughts of their parents aside and have eyes only for Luna, kneeling before him, looking a perfect mix of falsely innocent, coy, and deviant. A look his little sister shouldn't be able to pull off so well.\n\nLuna leaned in like she was going to kiss him again, then flirted away, so close that he could feel her breath on his sensitive skin, but not close enough to touch.\n\n\"Seriously,\" Ryu repeated.\n\n\"Yeah, seriously,\" Luna said. \"What do you want? You gotta tell me.\"\n\n\"The same thing I want all day, every damn day. More kisses from my little sister.\"\n\nLuna whimpered softly at hearing Ryu say it out loud. She had to reward him with another naughty kiss for that. Had to. Then another one.\n\nRyu sighed happily as Luna showered his cock with kisses. He tousled her hair adoringly as she kissed all over. All along his shaft, the head, and down to his balls even. All the illicit attention a boy could ask for.\n\n\"Creativity is good sometimes,\" Ryu murmured.\n\n\"Like when it gets my mouth on your dick?\" Luna asked.\n\n\"Yeah. Kinda like then.\"\n\n\"That's a baaaddd big brother.\"\n\nRyu bit his lip and declined to argue that, in fact, Luna was the one kissing his cock all over. It seemed counter-productive.\n\nLuna enjoyed the control she had over Ryu, while also making him feel good. Just kneeling in front of him, giving him her most sultry little sister eyes, and smothering his cock with kisses. It was fun and effective, and made Ryu twitch and leak precum all over.\n\nA lovely way to while away a late sunny afternoon into the evening. The question was how long she could go before Ryu demanded more of her. Or, indeed, before she felt a need to do more than just kisses.\n\nRyu got wiggly in his seat. Luna's teasing was getting to him, in the very best possible way. And the way she kept looking at him, even through all those kisses....\n\nShe couldn't maintain eye contact for every angle. Not at all. But boy was she doing her best.\n\nThere were ways a brother never expected his sister to look at him, and Luna had been getting very good at those exact ways lately.\n\n\"Lunaaa....\"\n\n\"Hm?\"\n\n\"Can you... maybe suck me a little?\"\n\nLuna gasped. \"You want me to suck my brother's pe-nis? That sounds baaaddd.\"\n\nRyu groaned. \"You're killing me, Luna.\"\n\n\"Kisses are one thing, but sucking? I mean--\"\n\n\"Absolutely killing me. This act of yours--\"\n\n\"You love this act of mine,\" Luna said, grinning devilishly as she gave Ryu another tactical kiss on the tip of his cock.\n\n\"... true. But... please? I'll kiss your pussy for you.\"\n\nLuna closed her eyes and let a delightful shiver run through her at the brotherly promise. \"Hard to say no to that,\" she admitted softly.\n\nLuna kept kissing Ryu, but started sucking on him a bit instead of pulling away immediately. She let her sucking get longer and harder, still teasing her big brother as only a little sister could. Eventually she gave him what he actually really wanted, and took him in her mouth.\n\nRyu moaned in the sexiest way for her as she bobbed her head on his cock, working him deep. He had such an amazing flavour from all the copious precum.\n\nRyu was putty for Luna. She played him so exquisitely, building him up, making him helpless. He sent affection back, stroking her hair, meeting her eyes when she looked up at him. He felt such a mix of love and lust for his little sister. The sorts of things that he should never have felt, but were becoming all too common. But it all felt so right, though.\n\n\"Luna?\"\n\n\"Hm?\"\n\n\"I'm gonna cum.\"\n\nLuna's nostrils flared and she sucked Ryu a little harder, working him toward completion.\n\n\"Where do you want me to cum?\" Ryu asked.\n\nLuna's eyes rolled back for a moment, and she just kept aggressively sucking. Soon enough she wouldn't have a choice.\n\nBut Luna knew where she wanted it already. She just didn't want to take her mouth off her brother long enough to tell him.\n\nAs soon as Ryu started cumming, Luna pulled her head back and aimed at her tits. Getting them all covered. Just the way she knew Ryu would find exceedingly hot, and would do such wonderful things for her already well soaked pussy too.\n\nLuna got a bit of a taste of Ryu's cum before she pulled off, and she left it on her tongue until he was all drained.\n\nRyu experienced the tingles and surges of pleasure that came with orgasm, plus all the added benefits of Luna doing it. It was more intense, for sure, from Luna's lips and tongue at first, trailing away to her soft, sisterly fingers pumping him dry. The after-effect of seeing her douse her own tits in his messy cum was a lovely bonus.\n\nLuna nuzzled Ryu's cock after and gave it a few more small kisses until he couldn't take it.\n\n\"Ok, ok, I surrender,\" Ryu said.\n\n\"Oh good,\" Luna said. \"'Cause you owe me some kisses.\"\n\n\"On your pussy.\"\n\n\"On my pussy. Obviously. Already kissed me properly. Can't do that any more.\"\n\n\"No. That would be bad.\"\n\n\"Exactly.\"\n\nRyu and Luna switched places, including Luna ditching her bottoms in the process.\n\nLuna was nearly naked now, same as her brother, and the sun felt good on her exposed skin. She was getting a real taste for nudity outdoors. Something she wouldn't have expected of herself. Then again, until she and Ryu started messing around, there was no way she would have dared take her clothes off in front of him like this.\n\nLuna tensed with anticipation as Ryu knelt between her legs and gently pushed them wider apart. She drew in a breath as she watched him get closer and closer, then shivered and made an embarrassing little squeak as he actually kissed her pussy.\n\n\"Again!\" she commanded.\n\n\"Really? More than--\"\n\n\"Again!\"\n\nRyu grinned and kissed Luna's pussy again. He started slow, but was soon showering her with naughty kisses. Once he had her taste, he couldn't stop. His kisses got deeper, using plenty of tongue, becoming more licking than anything else.\n\n\"Lick meee,\" Luna insisted.\n\n\"I am.\"\n\n\"S'niiice.\"\n\nLuna cooed and encouraged Ryu, loving every second of his oral attention. He could make her feel so damn good. Just by being her brother. And especially while doing unbrotherly type things.\n\nRyu kissed and licked Luna to orgasm. He made her cum in that delightfully cute way that he loved. She moaned his name and caressed his hair, even squeezing his head between her thighs as she came.\n\nRyu gave her soft, slow kisses as she released him. Bringing her down gently and with all due adoration.\n\n\"I love how you kiss me,\" Luna whispered.\n\n\"Proper kisses, or....\"\n\n\"Both. Obviously both.\"\n\n\"Too bad I have no more proper kisses for you.\"\n\n\"I know. It's not fair. I--\"",
        "Ryu darted forward, taking Luna by surprise as he kissed her. Her shock didn't prevent her from enjoying every second of the kiss.\n\n\"Cheater,\" she said with a wide grin.\n\n\"That's me.\"\n\n\"We're really bad at stopping at just one.\"\n\n\"We really are.\"\n\nRyu kissed Luna again, even quicker this time, then worked on getting his clothes back on. Luna just watched him dress at first, then only reluctantly gathered her clothes as well.\n\n\"Should probably get dressed,\" Luna said.\n\n\"Mmm, probably should,\" Ryu said. \"Or... you could stay like that.\"\n\nLuna's lips twitched up. \"Perv.\"\n\n\"What, I can't like seeing my little sister now?\"\n\n\"When she's got no clothes on, you mean?\"\n\nRyu shrugged. \"You've got some clothes on. Sort of.\"\n\n\"Uh huh. Bet you like that.\"\n\n\"You know I do.\"\n\nLuna moved in for a quick kiss of her own. Ryu smiled after.\n\n\"Now who's a cheater?\" he asked quietly.\n\n\"Shush. I do need to get dressed. Mom and Dad'll be home soon.\"\n\n\"Yeah. I know. You make it hard, though.\"\n\nLuna pulled her panties on. \"What, being responsible? Or your dick?\"\n\n\"Both.\"\n\nLuna feigned exasperation, but made sure to pose sexily for Ryu as she slowly dressed. She made a special show of pulling her shirt back down over her cum-covered chest. Such a mess. Ryu just watched, obviously enjoying the naughty spectacle.\n\nRyu and Luna were still smiling and teasing each other as they walked inside. To their immediate discomfort, their parents were already there.\n\nRyu tried to subtly move away from Luna. \"You guys are home early.\"\n\n\"Yeah,\" Will said. \"I suppose that's true.\"\n\n\"What's up?\" Luna asked, equally trying to feign nonchalance, and failing just as bad as her brother was.\n\nWill and Adrianna looked at each other, then back at their children. Their faces were serious, which neither Ryu or Luna took as a good sign.\n\n\"You know,\" Adrianna started slowly, \"we'd been wondering why we kept finding clothes in weird places. Mostly your bras, Luna. For some reason.\"\n\nLuna blushed. \"I lose them sometimes. So what?\"\n\n\"We just thought... you know... having a boy over when we're not home,\" Will said.\n\n\"Ew! Dad! I just broke up with Terrence.\"\n\nAdrianna sighed. \"Yes, darling. That's why we didn't push it. But you didn't have a boy over at all, did you?\"\n\nLuna looked at Ryu for help. He didn't have much to give.\n\n\"Home really early then, huh?\" Ryu mumbled, taking at least a little heat off Luna. Just for a moment. It was the best he could do.\n\n\"Early enough.\" Will sighed. \"Not what we expected to see, is all I can say.\"\n\nLuna folded her arms tight and stared at the floor. \"It's just....\"\n\n\"We only...\" Ryu added.\n\n\"It wasn't....\"\n\n\"You don't....\"\n\n\"I mean....\"\n\n\"What if....\"\n\n\"But it....\"\n\n\"Oh my lord,\" Adrianna interrupted. \"We're not mad, alright?\"\n\n\"Are you sure?\" Ryu asked. \"'Cause you saw--\"\n\n\"Please don't say it. We all know what we saw.\"\n\n\"Please... just don't say it,\" Will agreed. \"I mean, honestly, you couldn't have gone to your rooms or something?\"\n\n\"It was nice out,\" Luna mumbled. \"It's... freeing.\"\n\n\"A little too freeing, maybe,\" Adrianna said.\n\n\"But you're not mad?\"\n\n\"No, baby, we're not mad,\" Adrianna said. \"But... your father and I need to talk about this. Obviously. We... we've been trying to figure out what to think. We never expected this from you two.\"\n\n\"I mean... it wasn't on purpose, really,\" Ryu said. \"Just kind of happened.\"\n\n\"Ryu makes everything feel better,\" Luna said in a small voice, stepping closer to her brother.\n\nWill coughed awkwardly.\n\n\"Not like that!\" Luna said. \"I mean... emotionally.\"\n\n\"The emotions are fine,\" Will said. \"It's, you know, the sex that's the worry.\"\n\n\"Ew! Dad, gross. Ryu's my brother. We're not having sex.\"\n\n\"We saw you,\" Adrianna reminded Luna. \"Out on the deck.\"\n\nLuna fidgeted. \"S'not sex.\"\n\n\"It's kissing,\" Ryu said, just as awkward as Luna. \"Mostly. Mostly just kissing. And it was only supposed to be once a day.\"\n\n\"Once a day?\" Will asked.\n\n\"Yeah. 'Cause, you know, we didn't want to make it weird.\"\n\nBoth parents raise eyebrows.\n\n\"I think maybe it's weird,\" Adrianna said gently.\n\n\"Well it didn't work,\" Luna said. \"Obviously. Don't look at us that way.\"\n\n\"We tried our best,\" Ryu said. \"It's just... you ever kiss someone, and it gets out of control, and makes other kisses just seem... meh?\"\n\nAdrianna and Will exchanged a meaningful glance.\n\n\"I do understand that,\" Will said.\n\n\"We do,\" Adrianna agreed. \"It would have been nice if it wasn't... you two. Together. But... everyone has to go through some things growing up.\"\n\n\"Maybe for good, maybe for bad,\" Will said. \"Who knows. Just... your mother and I need to talk.\"\n\n\"Yeah, sure,\" Ryu said. He started edging toward the door, nudging Luna along with him.\n\n\"Separate rooms, please,\" Adrianna said firmly\n\nRyu hesitated. He knew he was taking a risk pushing things any further, but he also knew Luna was just as unsure and insecure as he was. He didn't like having to split up just at that moment. So he did the same questionable thing that got them in trouble in the first place. He kissed Luna.\n\nIt was only a quick, tactically chosen kiss. Only long enough to register with everyone and to provide some comfort to Luna. Hardly even inappropriate between siblings, really.\n\nRyu then started moving before anyone else could react. He only hoped it helped Luna some, he couldn't stop and wait before heading to his room.\n\n\"Unnecessary!\" Adrianna called after him.\n\n\"Sorry, Mom. Had to be done.\"\n\n\"Did it, though?\"\n\n\"Yes,\" Luna said, her voice faint but firm. \"It did.\"\n\n****\n\nIt felt silly calling Ryu when they were so close together in the house, but Luna needed to. She lay on her bed, nervously hearing the rings through her phone, then smiling when Ryu picked up.\n\n\"Think I made it worse just then?\" he asked.\n\n\"Nah. They saw you eating my pussy,\" Luna said. \"This was definitely not worse than that.\"\n\n\"Or did they see you sucking me off?\"\n\n\"Coulda been both.\"\n\n\"Could have, yeah.\"\n\nLuna swung her foot idly. She knew they were still in danger, but as long as she had Ryu there, even on the other side of a phone, she felt ok.\n\n\"You don't think they'll, like, try and make us stop altogether, do you?\" Luna asked.\n\n\"Can't imagine,\" Ryu said.\n\n\"Really?\"\n\n\"When have you ever known our parents to try and force a path for us in life?\"\n\n\"I mean... never? But, like, setting rules is different.\"\n\n\"This isn't rules, Luna. This is messing with Love.\"\n\nLuna's insides warmed and fluttered. \"Say that again?\"\n\n\"What? About love?\"\n\n\"Yeah.\"\n\n\"Hehe, alright. Love you, little sister.\"\n\n\"Unf. Love you too.\"\n\nRyu smiled, imagining Luna though he couldn't see her at the moment. He could picture her well enough.\n\nAfter a moment, Luna spoke again. \"It's gonna be ok, right?\"\n\n\"Yeah, it's gonna be ok,\" Ryu assured her. He didn't particularly know what was going to happen, but reassurance was the least he could give his sister. \"It's all gonna be ok.\"\n\n****\n\nLuna padded into Ryu's room the next morning and sat on the edge of his bed. She just watched him sleep for a few minutes, all peaceful and relaxed. It was hard to worry about anything when she could just sit and be with Ryu, awake or not, and feel their connection.\n\nShe eventually kissed him awake, leaning over his sleeping form and sending love via her lips. Ryu fluttered awake and smiled as he realized what was happening. His hand slipped around to the small of Luna's back, holding her comfortingly.\n\n\"Gotta face the parents again this morning,\" Luna said.\n\n\"Mmm, we do,\" Ryu acknowledged. \"You think one kiss'll be enough.\"\n\nLuna sighed. \"One kiss was never enough. I don't know how we thought we'd get away with that.\"\n\n\"Me either. Give me another.\"\n\nLuna snorted and brushed her hair out of the way to lean in and kiss Ryu again. She lingered this time, savouring an early morning kiss with her brother.\n\n\"I need so many kisses,\" Luna murmured. \"It's not even fit.\"\n\n\"Mmm. Need some naughtier ones?\"\n\n\"Don't tempt me. I need to be focused for Mom and Dad. Who knows what we're gonna get.\"\n\nRyu nodded, idly slipping a hand up Luna's shirt. No one had ever fascinated him quite like his sister had recently, nor made him desire nearly so much intimate touch. Especially when it wasn't technically sexual.\n\nLuna quite enjoyed Ryu's wandering hand as well. Her satisfaction and comfort warred with her nerves this morning. She wanted to rip the bandaid off and find out how much trouble they were really in, but more immediately wanted to stay right where she was and let her brother touch her.\n\nAs long as Ryu was feeling her up, Luna decided she might as well get some more kisses. She particularly needed them this morning.\n\n\"We're gonna need a new rule,\" Luna said between smooches.\n\n\"For what?\" Ryu asked.\n\n\"For kisses. I'm getting rid of the once a day thing. I can't be bothered with it.\"\n\n\"We didn't--\"\n\n\"I know we didn't follow it at all. But just... the hell with it.\"\n\n\"Fair. What about... once a day in front of Mom and Dad.\"\n\nLuna rolled her eyes. \"You think we're gonna kiss in front of them?\"\n\n\"I mean... maybe. They've seen worse already.\"\n\nLuna blushed. \"Yeah, well, that obviously wasn't on purpose.\"\n\n\"They saw me licking your--\"\n\n\"I know what they saw!\"\n\nRyu put his free hand on Luna's cheek and stroked it gently. \"I want to kiss you in front of people, Luna. Our parents. Our friends, maybe. Or perfect strangers. They might be easiest, since they wouldn't know that we shouldn't be doing that stuff.\"\n\n\"That's... that's... we can't.\"\n\nLuna's face was so warm. She wanted what Ryu was suggesting. Wanted it so badly. But she couldn't imagine doing it in front of people. Not with her brother.\n\n\"Just one,\" Ryu murmured, still caressing Luna's cheek. \"We could just do one.\"\n\n\"Just one?\"\n\n\"Mmhm.\"\n\n\"... you might have to do the first one.\"\n\nRyu smiled. \"We'll do it together, Luna.\"\n\n\"Yeah, but you start, though.\"\n\n\"Ha, ok.\"\n\n\"Really?\"\n\n\"Maybe. I might chicken out. Have to see how Mom and Dad are feeling this morning.\"\n\nLuna tapped Ryu's shoulder with her fist, just lightly. \"You can't chicken out. You promised.\"\n\n\"You need to make up your mind.\"\n\n\"... maybe.\"\n\n****\n\nRyu and Luna crept cautiously toward the sound of their parents. Adrianna and Will broke off as their children arrived, but fortunately neither seemed any more upset than they were yesterday.\n\n\"Morning,\" Ryu tried cautiously.\n\nLuna echoed the sentiment in more of a shy mumble. Her hand found Ryu's, intertwining their fingers. The gesture did not go unnoticed, but still didn't seem to draw any ire.\n\n\"Good morning,\" Adrianna said, sipping from a coffee mug cradled in her hands.\n\n\"How in trouble are we?\" Luna asked in a quiet voice.\n\n\"You're not in trouble,\" Will said. \"It's not like that.\"\n\n\"We got sent to our rooms,\" Luna pointed out.\n\n\"Yes, well... we needed time to think, didn't we?\" Will said. \"The surprises you spring on your poor old parents....\"\n\n\"This is like the only one,\" Ryu said. \"We should get partial credit for that.\"\n\n\"It's a big one though,\" Adrianna said gently.\n\nRyu glanced at Luna, who looked right back at him for support. Neither particularly knew what to do.\n\n\"Look, as parents, we have to be prepared for things to happen that aren't... traditional,\" Will said.\n\n\"That's right,\" Adrianna said. \"This just was never on our radar. Though maybe it should have been.\"\n\n\"... why would it have been on your radar at all?\" Ryu asked, curious despite himself.\n\n\"Just... you know,\" Will said awkwardly. \"The two of you... being close....\"\n\n\"I can't help feeling like if I'd considered it at all I might have seen it coming,\" Adrianna said.\n\n\"We didn't even see it coming,\" Luna said. \"I didn't think I'd ever want to... to kiss Ryu.\" Her grip tightened on his hand. \"There was no way to foresee that.\"\n\n\"But... it's ok though?\" Ryu asked.\n\nWill sighed. \"There are battles as a parent you just shouldn't fight. Who your kids want to be with is one of them. Trust me. My parents tried to talk me out of seeing your mother. It... didn't work.\"\n\nLuna gasped. \"I didn't know that!\"\n\n\"We didn't want to say,\" Adrianna said. \"And they've come around since then. More or less. I was never quite enough of a proper lady for them, I think. They just had to get used to it.\"\n\n\"Well that's rude,\" Ryu said. \"The hell is a proper lady anyway?\"\n\nAdrianna's lips twitched in a smile. \"One who doesn't build her own furniture as a hobby, I think.\"\n\n\"Nonsense,\" Ryu said.\n\n\"Thank you, darling,\" Adrianna said. \"But the point is... it's your lives. It's not for us to tell you what to do. Just... be careful, ok? Look after each other.\"\n\n\"Try not to get pregnant, if at all possible,\" Will added.\n\n\"Dad!\" Ryu and Luna said at the same time, both blushing furiously.\n\n\"We're not even... we don't do that,\" Luna mumbled. \"Ryu's still my brother. Don't be gross.\"\n\nWill and Adrianna exchanged looks this time.\n\n\"You, uh, were doing--\" Will started.\n\n\"Don't be gross I said!\" Luna insisted. \"I know what you saw us doing, but... it's not sex. And it's mostly just kissing, so... so there.\"\n\n\"Mmhm, that is often how it starts,\" Adrianna said, giving a dreamy glance Will's way.\n\n\"And again... gross,\" Luna said. \"Can't you just--\"\n\n\"Luna,\" Ryu said.\n\n\"Hm?\"\n\nRyu tilted Luna's face, angled it nicely, and gave her a soft but purposeful kiss. \"Let's quit while we're ahead, yeah?\"\n\n\"Ok,\" Luna agreed faintly.\n\n\"I can't decide if that's cute or weird,\" Will murmured, just loud enough that Ryu and Luna could make it out.\n\n\"Some of both, I think,\" Adrianna hissed back, still not quiet enough to be truly sneaky.\n\n\"Aaannnd I think that must be time to leave,\" Luna said, her body halfway between melting into Ryu and still fluttering nervously from the whole encounter.\n\n\"Don't you want some breakfast?\" Adrianna asked. \"You should eat something.\"\n\n\"I don't think I could right now,\" Luna said. \"But... thanks, I think. For being cool. Mostly.\"\n\n\"We do our best,\" Adrianna said.\n\n****\n\nLuna crept cautiously into the workshop. Adrianna was fiddling with the table saw, but stopped and smiled at her daughter's approach.\n\n\"You don't have to look so nervous,\" Adrianna said.\n\n\"I know,\" Luna said. \"But... it's scarier without Ryu around.\"\n\n\"I don't want to scare you, baby.\"\n\n\"Yeah, just, I still feel like we've disappointed you. It's my fault, you know. Ryu just wanted me to feel better. It... got out of hand.\"\n\nAdrianna leaned back against her work bench. \"Luna, it's going to take your father and me some time to really adjust, but I promise we aren't blaming either of you.\"\n\n\"But... it's not what you wanted, is it?\"\n\nAdrianna smiled crookedly. \"Any parents who get too focused on what they want from their kids are just plain doing it wrong. I want things for you, not from you. Being happy and loved is the main thing.\"\n\nLuna wrapped her arms around herself. She felt her eyes tearing up. \"I feel so happy and loved,\" she admitted softly.\n\nAdrianna nodded and stepped forward, enfolding Luna in a big, motherly hug. \"Good.\"\n\nLuna stayed right where she was, taking comfort in her mother's embrace and trying not to cry too much.\n\n\"Think I'm gettin' snot on your boobs,\" Luna mumbled.\n\n\"Ha, that's alright,\" Adrianna said. \"I'm only in work clothes anyway.\"\n\n\"Mom?\"\n\n\"Hm?\"\n\n\"Thanks for... understanding.\"\n\n\"Sure, baby. That's what I'm here for.\"\n\n****\n\nRyu and Luna sat quietly together on the back deck. They were side by side, reaching across to hold hands, but otherwise just kind of sitting.\n\nOne would glance at the other from time to time. Multiple times almost saying something, but never quite feeling it was right.\n\n\"It's different now, huh?\" Luna finally said.\n\n\"Yeah,\" Ryu said. \"It is.\"\n\n\"Like... it was all sneaky before. Kinda hot because we were being bad.\"\n\n\"That wasn't why it was hot,\" Ryu said.\n\n\"Well... it was part of it.\"\n\n\"Maybe part of it, sure. Mostly it was, you know, because it's you.\"\n\n\"Sweet talk me why don't ya?\"\n\nRyu smiled at Luna, who completely failed to maintain a straight face. Just looking into her brother's eyes....\n\n\"It feels harder to be naughty out here,\" Ryu said. \"Now that we know they know.\"\n\n\"Yeah. But... they support it.\"\n\n\"Not the point. Doesn't matter who you're with, you don't really want your parents catching you... doing stuff.\"\n\n\"True. You could kiss me though, if you want.\"\n\nRyu smirked and leaned over, giving Luna exactly the kiss she'd asked for. Then another smaller kiss right after, just for luck.\n\n\"Kissing is good,\" Ryu said.\n\n\"Mmhm!\"\n\n\"But... I kinda liked being able to kiss you other places too.\"\n\n\"Unf. Well... you can. We can wait for Mom and Dad to be somewhere. Or... we could go to my room.\"\n\n\"Not very subtle, heading to your room together.\"\n\nLuna shrugged. \"It can't always be subtle.\"\n\n\"Fair. Maybe... maybe we'll do that in a bit. I kinda want to just sit here with you for a while.\"\n\nLuna smiled and squeezed Ryu's hand. \"Me too.\"\n\n\"But if you wanted... you could undo your jeans.\"\n\nLuna perked up. \"You want me to take them off? That's risky.\"\n\n\"No. Just undo them.\"\n\nLuna flicked her gaze toward the house. It was probably fine. They were facing away from it anyway, so a slight modification to her appearance shouldn't be readily visible.\n\nLuna undid the front of her pants, then leaned back as Ryu's hand crept into her lap. His fingers sneaked into her panties, and he quietly and tenderly rubbed her pussy.\n\n\"That's niiice,\" Luna breathed.\n\nRyu smiled but didn't say anything.\n\nIt was hard to say if having her pussy played with was better than just holding hands. They were different kinds of good, was the thing, and the longer Ryu rubbed Luna, the hornier she got, the more she was in the mood for being touched.\n\nRyu didn't focus, though. He deliberately didn't get aggressive with his touches. Just kept gently rubbing his sister's little pussy. Like he was petting a dog who'd put its head in his lap. No goal beyond idly stroking.\n\nThe expressions Luna made were rather fun for Ryu. Mostly she was happy and contented with it, which he liked. Making Luna feel good was one of his favourite things. But after a while she was pretty worked up, and getting a teensy bit frustrated at not getting more from him, which was enjoyable in a slightly different way.\n\n\"You could rub my clit more, if you wanted,\" Luna suggested, trying not to whine.\n\n\"Nah.\"\n\n\"Nah?\"\n\n\"I'm not trying to make you cum.\"\n\n\"Well... why not?\"\n\n\"'Cause you're so cute like this. And... I just want to spend time with you.\"\n\nLuna squirmed. \"You can spend time licking me.\"\n\n\"I could.\"\n\n\"But you're not going to?\"\n\n\"Not just yet, no.\"\n\n\"Mean!\"\n\nRyu grinned at Luna. \"You're even cuter when you're frustrated with me.\"\n\n\"Well... I must be awfully cute most of the time then.\"\n\n\"You sure are.\"\n\nRyu mollified Luna somewhat with a long, deep kiss. But he went right back to just sitting quietly with his hand down her panties. It was, to Luna, simultaneously one of the best and most frustrating things ever. Which was his goal, it seemed.\n\nLuna leaned back and just enjoyed it. She was way too horny to want to sit still, but she could manage if she tried. She could just let her big brother keep casually rubbing her. Enjoying the sun and his company.\n\nThey had to break off suddenly when Will came out, and Luna hurriedly hid the fact that her jeans were open, whilst trying not to appear that anything at all was amiss. It didn't fully work.\n\n\"You two are up to something, aren't you?\" Will said, giving them an odd look.\n\n\"Just sitting,\" Ryu said.\n\n\"Uh huh.\"\n\nRyu leaned over and kissed Luna. Their kisses still had the effect of mildly embarrassing their parents much of the time, and in this case made Will move on without further questioning, tending to some plants in the yard. Only once he was back inside did Ryu continue fingering Luna.",
        "\"I think I really like kissing in front of them,\" Luna said.\n\n\"Mmhm.\"\n\n\"It makes us feel more... official.\"\n\n\"Sure. Plus they can't decide whether it's cute, or whether it's awkward as hell.\"\n\n\"I can't really decide either,\" Luna said. \"So... fair enough, really.\"\n\nLuna's panties were absolutely drenched. Ryu just kept rubbing her. Kept her turned on like crazy, and refused to actually make her cum.\n\nRyu knew exactly what he was doing. He rather enjoyed himself in the process too. It turned him on immensely to rub his sister's pussy while they sat together, and it amused him to pretend he didn't notice her cute whimpers or the way her eyes pleaded with him to get her off.\n\n\"You'd honestly just sit and do this to me all day, wouldn't you?\" Luna accused.\n\nRyu smiled lazily at her. \"Probably.\"\n\n\"What if I played with you for hours and never let you cum?\"\n\n\"Don't threaten me with a good time.\" Ryu slid a finger inside Luna, making her gasp softly. \"Are you not enjoying yourself.\"\n\n\"I love it,\" Luna said. \"And I love you. And I am so super horny right now. That's what you do to me, you know. You make me horny. And you make me want to spend all my time with you.\"\n\n\"Good. Same.\"\n\n\"But Ryu, I don't think you understand the things you make me think about. Especially when you do stuff like this to me.\"\n\n\"Oh? Such as what?\"\n\n\"Such as... bad things. Like what it would feel like to climb on top of you and... ride you.\"\n\nRyu hissed in a sharp breath. His eyes closed and a very inappropriate but highly enticing image manifested itself.\n\n\"You'd do that?\" he asked.\n\n\"Of course not. You're my bro-ther. Duhhh.\"\n\nRyu's gaze flicked to where his hand was down Luna's panties. However, there was no trace of irony in Luna's statement or expression.\n\nBut oh god, what if she did? What if she did try to climb up on him? Ryu wouldn't stop her. He knew he wouldn't. He couldn't imagine actually trying to have sex with his little sister, but he also couldn't imagine saying no to it. It was a weird and confusing thing to realize, and he didn't quite know what to do with it.\n\n\"What if I just kept rubbing you?\" Ryu asked.\n\nLuna's eyes were dangerous. \"You almost sound like you want me to get in your lap.\"\n\n\"You said you wouldn't do that. 'Cause I'm your brother and all.\"\n\n\"But it sounds like you want me to.\"\n\n\"Don't be silly. You're my sis-ter.\"\n\n\"Right.\"\n\n\"Right.\"\n\n\"Good.\"\n\n\"Good.\"\n\nLuna leaned back. Basically as expected, Ryu kept right on toying with her pussy. She'd known he would, but he didn't seem to realize how much fire he was playing with. She wouldn't have sex with him. Obviously. But... fuck, she probably would though. Like if he just carried her to bed, laid her down, took their clothes off... she wouldn't say no. She couldn't imagine saying no. But she couldn't actually deliberately do it, right?\n\nExcept if he kept her so revved up for so long, what was a girl to do anyway? It would serve him right if she started stroking him instead, just casually, but unendingly. See how long before he needed to... to....\n\n\"Ryu?\" Luna croaked in an uncertain voice.\n\n\"Hm?\"\n\n\"I think we need to go to my room.\"\n\n\"Oh do you?\"\n\n\"Yes. And I think you need to lick my pussy.\"\n\nRyu smiled in smug satisfaction. \"Well if that's what you think....\"\n\n\"You have to make me cum. It's gonna be bad if you don't.\"\n\n\"Unf. You do make a tempting offer.\"\n\n\"I'm serious!\" Luna said.\n\n\"So am I,\" Ryu countered.\n\n\"You make me feel like we should have sex. And we definitely shouldn't.\"\n\nRyu looked at Luna, then slowly stood. He bent over her, tilted her chin, and kissed her possessively.\n\n\"I wouldn't say 'definitely',\" he said quietly.\n\nLuna shivered. \"You wouldn't?\" she squeaked.\n\n\"No. I wouldn't.\"\n\nRyu took Luna's hand and hauled her to her feet. He dragged her off to the house while she laughed and tried to adjust her pants one-handed so they didn't fall down on the way.\n\nRather embarrassingly, they knew their mad dash to Luna's room attracted parental attention on the way, but there was nothing to be done about that.\n\n\"Kinda awkward that they know what we're doing,\" Ryu said.\n\n\"They don't know,\" Luna said. \"But... they probably have good guesses. And that might be worse.\"\n\n\"Might well be.\"\n\nRyu swung Luna into his arms, kissing her again, feeling her tremble against him. He let her fall onto her bed where she lay panting softly, big hopeful eyes fixed firmly on him.\n\n\"I gotta lick you, huh?\" Ryu asked.\n\nLuna bit her lip and nodded, eyes still fixed on her big brother.\n\nRyu felt the beautiful tingles and sense of desire that only Luna could produce in him that way. \"Gotta do what I gotta do,\" he said softly, still gazing adoringly at her.\n\n\"That's right.\"\n\nRyu unwrapped Luna like she was a present just for him. He removed clothes slowly and bestowed kisses to new areas of skin revealed.\n\n\"Ryu? That feels really good, but you need to kiss my pussy,\" Luna said.\n\n\"I know. I'm getting there.\"\n\n\"Can you get there faster?\"\n\n\"It's called foreplay, Luna.\"\n\n\"Yeah, and I appreciate it, but you're overdoing it.\"\n\n\"Only out of love.\"\n\n\"Well... can you love my pussy some then?\"\n\n\"You don't like kisses?\"\n\n\"Grrr, Ryu, you know I love your kisses. But if you don't--\"\n\nRyu interrupted by kissing Luna full on the mouth, nipping ever so softly at her bottom lip, then sliding down her body before she could mount a counter attack. He spread her legs and positioned himself between them, face just above her pussy. Knowing what his sister wanted, he planted a kiss square on her soaked little slit.\n\nLuna melted into her bed. Her needful tension dissolved rapidly as soft, brotherly kisses rained down on her horny, begging pussy.\n\n\"Yesss, Ryu.\"\n\n\"You like?\"\n\n\"More pleeeaaase.\"\n\nRyu licked Luna, eating his little sister's pussy. No more teasing, no more anything other than pure sibling pleasure, wanting to make her cum now. Wanting her to cum hard.\n\nLuna soared on blissful feelings and her brother's love. Her eyes rolled back and her toes curled. Her whole world narrowed to just Ryu's tongue on her. His sweet, sweet tongue.\n\nLuna came for Ryu and all his licking and kisses and love. All the teasing and build up came out all at once in a furious explosion of body wrenching pleasure. She moaned and writhed and let the waves overwhelm her, then slowly leave her relaxed. She felt the happy after-tingles while Ryu softly kissed all around her pussy.\n\n\"Worth it?\" Ryu asked.\n\n\"... yes, ok, worth it,\" Luna admitted. She stretched lazily. \"You tease me like that again, I'm gonna make you lick me out after. Every time.\"\n\n\"That's fair.\"\n\n\"You'd probably just enjoy it.\"\n\n\"Well duh.\"\n\nRyu kept kissing Luna, around her pussy, up to her waist, down on her inner thighs. It wasn't that she needed another cum right away or anything. Nothing quite so direct as that. But as he kept kissing her, Luna knew she needed more... something.\n\nLuna reached out and stroked Ryu's hair. He responded to the pets affectionately, nuzzling for more.\n\n\"Ryu?\"\n\n\"Hm?\"\n\n\"What if... we did a bad thing? But just once.\"\n\n\"We're kind of bad at doing things just once,\" Ryu said, kissing Luna's palm.\n\n\"I know. But maybe this time. Like, it'd be really bad for us to have sex and everything, but--\"\n\n\"You want to have sex?\"\n\nLuna flinched her hand back. \"I mean... I don't know. I just feel really good, and you're here, and I don't want you to go, and... I think I want more.\"\n\nRyu looked up at Luna, along the length of her body. She was so cute and vulnerable. He hadn't had any intention of leaving anyway. He didn't want to be apart any more than she did, but he hadn't actually considered taking that kind of leap.\n\nOn the other hand... how could they not? He was in his naked sister's bed with her, basking in the afterglow of making her cum. She needed him now, and he needed to be there for her. And he was so damn horny from playing with her and eating her pussy.\n\nRyu reached out and pulled Luna's hand back to him, giving her palm another soft kiss. \"I could stay with you,\" he said. \"Doesn't have to be sex.\"\n\nLuna deflated a little. \"It doesn't. Technically. That'd probably be smarter.\"\n\n\"But... we could. Just once.\"\n\nLuna perked back up immediately. \"Just once. Obviously. If you, maybe, want to do it?\"\n\nRyu shivered at the way Luna looked at him. His little sister could so easily cause feelings in him like it was nothing. And she probably wasn't even doing it on purpose.\n\n\"How am I even gonna say no to you?\" Ryu murmured.\n\nLuna shrugged. \"You shouldn't say no when it's important to me.\"\n\n\"That's true. And... god, I just really want this, actually.\"\n\n\"Well why didn't you say?\"\n\n\"Because I didn't know for sure until you asked and looked at me like that.\"\n\nLuna tilted her head. \"Like what?\"\n\n\"Like the same as you're doing now.\"\n\n\"I'm not doing anything weird.\"\n\n\"You are,\" Ryu insisted. \"You're looking at me, and all I wanna do is stare in your eyes, and... and kiss you.\"\n\n\"Well you're allowed, if you want. I always want your kisses. I don't know how I ever thought just one was enough.\"\n\n\"We're really, really bad at doing just one,\" Ryu agreed.\n\nHe crawled slowly up Luna's warm, naked, trembling body. He kissed her firmly and passionately. He gave love to his sister the best way he knew how, though soon enough it would be in a whole new way.\n\n\"I gotta run to my room real quick,\" Ryu said reluctantly.\n\n\"Why?\"\n\n\"Because... because we're gonna need a condom. And... either Mom or Dad left me some the other day. Just on my bed. Like... I don't know. It's weird, but kinda supportive I guess.\"\n\nLuna smiled shyly. \"You don't have to go to your room. They left some here too. I assumed they're both in on it.\"\n\nRyu giggled softly. \"I'm glad they aren't mad at us, but goddamn are they a little too weirdly supportive.\"\n\n\"Hehe, right? But I guess maybe they just don't want you knocking me up accidentally.\"\n\nRyu made a shocked expression. \"I wouldn't do that.\"\n\n\"Well you're gonna have sex with me, so....\"\n\n\"Only 'cause you asked all unfairly, like I was gonna ever say no to that.\"\n\n\"You would have asked me sooner or later if I didn't first.\"\n\n\"You don't know that.\"\n\n\"Yes,\" Luna said firmly. \"I do. But I guess I gotta do everything around here if we're ever gonna get anywhere.\"\n\nRyu snorted. \"You're such a little shit.\"\n\n\"Fine thing to say to your sister right before you bang her.\"\n\n\"I am most definitely not banging my sister. It's... love. I'm loving my sister.\"\n\n\"With your dick?\"\n\n\"... technically yes.\"\n\n\"Mmhm.\"\n\n\"Unless you don't want to anymo--\"\n\nLuna caught Ryu by surprise and flipped him over. She got on top of him and pinned him down. She held him down long enough to make sure he wasn't going to try and wriggle free.\n\nHonestly, though, being pinned down by his horny, naked, loving sister was not a situation Ryu had any thought of escaping. The determination in her eyes combined with her sexy nude body on top of him made him feel like staying put and being a good boy was the best possible decision.\n\n\"You should pin me down more often,\" Ryu said. \"It's pretty hot.\"\n\nLuna flushed and sat up, sitting nakedly on her brother and watching his eyes travel up her body. \"Only 'cause I'm naked. You think everything's hot when I'm naked.\"\n\n\"... well it is. But I kinda like you taking what you want too.\"\n\n\"Maybe I'll just do that then.\"\n\nLuna started working on undressing Ryu. He bemusedly let her do it, somewhat helping her get his clothes off but not actively doing it for her.\n\nLuna quite enjoyed getting to unwrap her big brother for her own perverse desires. The reciprocal of the rush she got when he unwrapped her.\n\nLuna then took the time to show Ryu some physical adoration. Nuzzling and kissing his chest, running her hands over him, slowly moving down between his legs and sucking on his balls. She mostly just teased his cock some, not really giving it proper attention but making sure he was all primed.\n\nThe amount of precum he leaked was dangerous and addictive. Luna felt she could get lost in flicking her tongue over the head of his cock, cleaning him up, then making him produce more with her naughty, sisterly teasing.\n\n\"Luna?\" Ryu said.\n\n\"M'busy.\"\n\n\"I know. Just... I really want to have sex with you, though.\"\n\nLuna's heart beat harder. She felt tingles in her tummy, and in her pussy. Who was she kidding anyway? She couldn't resist any much longer than she already had.\n\n\"With me?\" she asked in a small voice, even though the answer was so very obvious.\n\n\"Of course with you,\" Ryu said, reaching out for Luna's cheek and smiling at her.\n\nLuna nodded. \"Just once,\" she whispered.\n\nLooking into her eyes, Ryu shook his head. He was melting for her. Feeling an intense love for his little sister that defied all reason. \"I'm never going to be able to do it just once. And not even just because we're really bad at it.\"\n\n\"Good,\" Luna said, kissing Ryu's palm just like he'd done to her earlier. \"It didn't seem feasible to me either.\"\n\nLuna crawled up, purposefully dragging her breasts over Ryu's face, and stretched to reach her dresser from atop him. She located a condom by touch, squealing a bit as Ryu took advantage and kissed her nipple.\n\nLuna sat back and carefully unwrapped the condom. Her fingers shook, making the process so much trickier. Her tongue poked out the corner of her mouth rather cutely as she concentrated and tried not to tremble. She straddled Ryu, sitting upright atop him, and slowly rolled the condom down his shaft.\n\n\"God that's hot,\" Ryu breathed.\n\nLuna's eyes flicked up and she tilted her head. \"What?\"\n\n\"You. Like that. So hot.\"\n\n\"Shut up. It's just... it's a condom.\"\n\n\"Yeah, but what it means. And how much you're focusing on it. And just... being you.\"\n\n\"Without clothes on, you mean?\"\n\nRyu snickered. \"Yeah, that helps.\"\n\nHe ran his hands up Luna's thighs, staying out of her way while she secured the condom, but wanting her so badly that it was near-impossible to behave himself. She was so cute and determined, and he could feel how wet her pussy was from her sitting directly on top of him.\n\n\"How's that feel?\" Luna asked softly, her fingers lightly stroking the condom over Ryu's erection.\n\n\"Ok,\" Ryu said. \"It'll feel better soon.\"\n\n\"You've got a one track mind all of a sudden.\"\n\n\"If you were seeing what I'm seeing, you would too.\"\n\nLuna pushed some of her hair back shyly, but still let Ryu stare at her. She made quite an image of a horny, loving little sister.\n\n\"I kind of am seeing what you are,\" she said softly. \"But... reversed.\"\n\n\"And what are you thinking?\" Ryu asked, just as softly.\n\n\"Whether I actually dare climb on.\"\n\n\"And?\"\n\n\"And I think I do dare.\"\n\n\"Well it'd be a waste of effort if you didn't.\"\n\nLuna's lips twitched in a crooked smirk. \"Wouldn't want that.\"\n\nLuna nervously lifted her hips. It was kind of scary, but so very exciting. Her nerves danced in anticipation. She paused uncertainly just above the tip of her brother's cock, but looking into Ryu's eyes she knew she was safe, and that she needed to keep going. She'd be so disappointed in herself if she didn't.\n\nIt felt like a final barrier. One last thing that was desperately needed. The scary part was how definitive it was, and how it might shape their relationship afterward. But it was also a case of their relationship leading them here, and maybe it wouldn't shape anything so much as it would confirm what they both already knew.\n\n\"Ryu?\" Luna said, voice cracking slightly.\n\n\"Luna?\"\n\n\"Would you... hold me?\"\n\nRyu gazed up at Luna, looking suddenly very delicate, even as she held herself just above him. She was ready to take him, to lower herself onto his cock. But in that moment she was so vulnerable. He understood it. He was about as emotionally open as he ever could be for his little sister, wanting to be close, and not just because he was horny. Even if all they did was cuddle the rest of the day, it would be the most perfect thing in the world.\n\nRyu reached up and put his hands on Luna's waist, holding her as firmly as he could from an awkward position.\n\n\"I got you,\" he said.\n\nLuna nodded, thankful eyes smiling at him. Her jaw set in determination again, and she grabbed Ryu's cock to slowly take it inside her.\n\nBoth siblings were dead silent for a moment, other than involuntary gasps from both sides.\n\n\"You're in me,\" Luna whispered reverently.\n\n\"I'm in you,\" Ryu confirmed, watching in awe as Luna's little pussy slowly swallowed him.\n\nHis cock disappeared inside one little bit at a time, until Luna found herself sitting atop him once more, this time very filled up in the process.\n\n\"Oh wow,\" Luna said. \"My brother....\"\n\n\"Is it ok?\" Ryu asked, running hands up her sides.\n\nLuna smiled, awkwardly swiping at a stray tear from the corner of her eye. \"Do you really have to ask?\"\n\n\"Are you crying?\"\n\n\"Only a little. In a good way.\"\n\nRyu reached even higher up and wiped the corner of Luna's other eye for her, his thumb coming back wet.\n\n\"As long as it's a good way,\" Ryu said.\n\n\"Trust me. It is.\"\n\nRyu struggled to contain his own emotions. Just watching Luna, having taken his cock, now sitting there looking so happy and overwhelmed. He didn't want to cry, exactly, but he felt he needed to do something to relieve the excited turmoil within his body.\n\nLuna rocked back and forth on Ryu, enjoying how it felt to have him inside her. The feelings remained overwhelming, threatening to spill more tears, but she had her beloved brother gazing adoringly at her and caressing her. It was all so perfect.\n\n\"I'm gonna make you cum,\" Luna said.\n\n\"You don't have to worry about. It'll just happen.\"\n\n\"It will, won't it?\" Luna shrugged. \"But it's what I want to do.\"\n\n\"I... kind of just want to stay like this,\" Ryu admitted.\n\n\"What, inside your sis-ter?\"\n\n\"Just... with you. In you or next to you or whatever. You make me feel things, Luna. Good things. And nothing else has ever come close.\"\n\n\"... shut up, you'll make me cry more.\"\n\n\"I thought it was in a good way,\" Ryu teased gently.\n\n\"It is,\" Luna said. \"But... it'd be embarrassing getting too emotional while I'm trying to ride you.\"\n\n\"Ah. Fair enough.\"\n\nLuna wiggled around more on Ryu's cock. She rested her hands on his chest, bracing herself and getting more freedom to move her hips. She encouraged his touches, any way at all he wanted to feel or caress her.\n\nIt was a slow, sensual affair. Luna wanted to make Ryu cum, to make him feel good, but she didn't want to rush it. Really, she didn't want it to end. His words about just wanting to be close with her, to just feel unique things that only she could make him experience, rang in her head. She knew what he meant. It was the same for her.\n\nRyu was in heaven. Pure bliss. Luna felt good, sure, but more than that the sheer affection she showed and the desire to keep him in that state made it so much better. The sisterly love combined with some very fun and very unsiblinglike activities.\n\n\"Ah, don't rub my clit like that,\" Luna moaned.\n\nRyu, having been freely running his hands all over Luna, didn't stop gently rubbing her just above where his cock disappeared inside her.\n\n\"Why not?\" he asked.\n\n\"You'll make me cum.\"\n\n\"Oh. Good.\"\n\n\"Nooo, I wanna make you cum!\"\n\n\"We can do both.\"\n\n\"But....\"\n\nLuna whimpered. Her movements became less focused the more Ryu rubbed her. He hadn't really meant to go after her clit like that, but the way she was reacting made it unreasonable to stop. Making his sister feel good was all too addictive.\n\nWhen Luna got too out of it, Ryu tenderly rolled over on top of her. She happily wrapped her legs and arms around him, entwining together and purring as he thrust lovingly in and out of her pussy.",
        "\"Harder to rub me though, isn't it?\" Luna whispered.\n\nRyu nodded, hand now trapped more awkwardly between them than before. \"Kinda. I'll manage.\"\n\n\"I'm sure you will.\"\n\nLuna kissed Ryu, losing herself in him even as she got closer and closer to cumming again. She wanted him to cum. Wanted him to have that pleasure, but another orgasm on the way couldn't hurt. Especially if that's what her brother wanted. Anything for him.\n\nLuna whimpered and felt more tears welling up as she came again. This time with Ryu deep inside her, and his fingers awkwardly fumbling at her clit as he tried to juggle too many things all at once.\n\n\"There it is,\" Ryu hissed in satisfaction.\n\nHe kissed Luna, reveling in the feeling of her tensing and shaking. Her pussy tightened and released on his cock, her body losing some control through it all.\n\nLuna giggled as Ryu moved from her lips to kiss away some fresh tears from her cheeks.\n\n\"Ok, you got me,\" Luna murmured happily. \"Now your turn. Cum in me.\"\n\n\"... you mean in the condom?\"\n\n\"Well, yeah, but still kinda in me. Just without the mess.\"\n\nRyu snickered. \"You're baaaddd.\"\n\n\"What, you're only just now noticing?\"\n\n\"That's a good point.\" Ryu kissed Luna some more. \"I am gonna cum.\"\n\nLuna nodded, eyes wide and excited. \"Good.\"\n\nHe didn't hurry though. Luna thought it might be quick, but Ryu didn't really speed up any. He just kept tenderly loving her. Going slow and deep, and so very gentle.\n\nIt was so nice. Luna could have been happy for it to go on for hours, if only for the excuse to be so close and intimate with her brother. But she wanted him to cum. He needed to feel good too. It just wasn't right if he didn't.\n\nShe really didn't have to concern herself. Ryu was going to cum. It was inevitable. He only wanted to savour the moment as long as he could before then. Truly enjoy his precious sister for as long as they both could take it.\n\nThe love he felt for her mixed with an insane level of horniness in a beautiful, intense melding of emotion. He imagined a deeper and deeper connection with Luna all the time, which seemed paradoxical as he really wasn't convinced her could love her any more than he already did.\n\nRyu had never cum so hard as he did in Luna this time. After all that build up and love and need, he was absolutely engulfed in the pleasure of it, of the total release.\n\nLuna purred loudly, just as happy for him to finish as he was. She kissed and stroked him, taking over while he was temporarily unable to process reality. She held and caressed him, and brought him slowly back into focus.\n\n\"There you go,\" Luna whispered. \"Good boy.\"\n\nRyu snorted weakly. \"I just came, is all.\"\n\n\"Mmhm. Like you were supposed to.\"\n\nRyu shrugged and decided not to argue the point. He rested atop Luna, who was happy to have him all close and snuggly, and didn't mind being squished a little. It was a loving, comforting weight.\n\n\"I already know just once isn't going to cut it,\" Luna murmured.\n\n\"Pff, yeah, we knew that going in.\"\n\n\"I know. Just saying.\"\n\nRyu grinned, but was interrupted before he could say anything more. A knock came at the door, then their mother's voice.\n\n\"Don't stay in there all evening, you two! Wouldn't want you having too much fun!\"\n\nRyu and Luna both groaned.\n\n\"Mooommm!\" Luna yelled back. \"Jeez!\" More quietly, just for Ryu, she murmured, \"So embarrassing.\"\n\n\"God, I know,\" Ryu complained.\n\n\"I mean, supportive is nice, but....\"\n\n\"Yeah. Some boundaries maybe.\"\n\n\"You two want to watch a movie?\" Adrianna called in again, seemingly undeterred.\n\n\"Mom, please!\" Ryu called back. \"You're ruining the moment!\"\n\nAll the siblings heard was some far-too-amused chuckling, but at least Adrianna left afterward and let them be.\n\n\"We're gonna have to go back out there,\" Ryu said.\n\n\"I know,\" Luna said.\n\n\"And they're gonna know.\"\n\n\"Suspect. They can only suspect.\"\n\n\"Right, well... as long as I have you with me, I guess it's fine.\"\n\nLuna nodded seriously. \"I can be your emotional support sister.\"\n\n\"Yeah. I bet you can.\"\n\n\"... more kisses first though.\"\n\n\"Naturally.\"\n\n****\n\nLuna and Ryu sat on the back deck, chairs close up together for as much cuddling as they could get.\n\n\"Whatever happened to drinking in the backyard anyway?\" Luna mused, casually holding Ryu's hand and running her thumb back and forth over his fingers.\n\n\"Nothing happened to it.\"\n\n\"You don't do it anymore.\"\n\n\"Oh. That. Well... I dunno. I'd rather just hang out with you, I guess.\"\n\n\"Ah, good. I'm a cure for alcoholism. I knew I had powers.\"\n\nRyu snorted. \"That's... not at all the case. But you do make me happy.\"\n\nLuna struggled to think of a witty retort when she was all warm and tingly inside. Making her brother happy was all she really wanted most of the time. And he made her so damn happy too. It was a beautiful thing.\n\n\"We're almost out of condoms again,\" Luna said instead.\n\n\"We do seem to be going through them, huh?\"\n\n\"Can you pick us up more?\"\n\n\"We could always ask our parents. They'd love--\"\n\n\"Ew, Ryu! Don't even joke. They already... grrr, they already know way too much. I don't need them knowing how often we do... stuff.\"\n\nRyu smirked. \"I was joking, Luna. Obviously I'm not gonna ask them.\"\n\n\"Ask us what?\" Will asked, coming around the corner of the house.\n\nLuna tightened up in her chair, though still held possessively on to Ryu's hand. \"Nothing! Are you and Mom stalking us now or what? You're always listening.\"\n\n\"We live here, my darling,\" Will said easily.\n\n\"Yeah, well, still though.\"\n\n\"I think they needed more condoms,\" Adrianna said, coming slightly behind Will. \"It's good they're being safe.\"\n\nLuna let go of Ryu and buried her face in her hands. She could feel her face going bright red. \"Ok, I'ma just curl up and die if that's ok with everyone.\"\n\nRyu was amused by his sister, but also just about as mortified as she was too, so he didn't get to enjoy her embarrassment.\n\n\"I don't suppose you guys could be a little less supportive every now and then, could you?\" Ryu asked.\n\n\"Well,\" Will said thoughtfully. \"I'd tell you you're bad kids and send you to your rooms, but....\"\n\nAdrianna snickered. \"Hard enough getting them out of each other's rooms as it is.\"\n\n\"Aaannnd I'm out,\" Ryu said. His face felt as warm as Luna's looked. \"Come on,\" he said, taking Luna's hand and hauling her up.\n\nLuna followed eagerly along with Ryu, happy to escape the torment of loving parents.\n\n\"Remember dinner's soon,\" Adrianna called after them. \"Don't get too crazy.\"\n\nLuna meeped and clung closer to her brother. \"They aren't going to cut it out, are they?\"\n\n\"Not likely.\"\n\n\"... I mean, it's kind of terrible, but also... I weirdly think I love them for it.\"\n\n\"Yeah. Me too. We could have done a lot worse for parents.\"\n\n\"Mmhm.\" Luna squeezed Ryu's hand. \"You know, I kind of asked them about building a new bed frame. A bigger one. Like how hard it would be, and how much wood it would take and everything.\"\n\n\"You did what?\"\n\n\"You know. For us. To share.\"\n\n\"No, I got that. I mean... no wonder they've been insufferable lately.\"\n\nLuna shrugged shyly. \"I know. My fault. But I thought maybe... we could build a new bed together. With some help, obviously. You know, if you wanted--\"\n\nRyu pressed Luna up against the wall, not even making it to their rooms first. He kissed her fiercely, cradling her cheek in his hand.\n\n\"That sounds amazing,\" he said.\n\n\"Yeah?\"\n\n\"Yeah. We're gonna have to deal with their oh-so-witty comments, though. You know that, right?\"\n\n\"So what's new?\"\n\n\"Ha, right.\" Ryu looked deep into Luna's eyes. \"I love you, you know.\"\n\nLuna's heart pounded. Ryu could do things like that to her with so very little effort. \"I know. I love you too.\"\n\n\"Wanna maybe be late for dinner?\"\n\n\"With you? Always.\""
    ],
    "authorname": "Xarth",
    "tags": [
        "brother",
        "sister",
        "sibcest",
        "kisses",
        "sibling love",
        "cutesy",
        "naughty game",
        "pussy licking",
        "cock sucking",
        "backyard"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/just-one-kiss-6"
}