{
    "title": "Summer in Maine Ch. 05",
    "pages": [
        "We both jolted awake at the sound of a phone ringing. Chrissy bolted out of bed to answer it. \n\n\"Hello?\" She said anxiously, after a moment she sighed. \"Okay sweety, have fun, we'll see you this afternoon. Love you, bye.\" \n\nI looked over at the bedside clock and realized we'd slept late, it was after 9. \n\n\"They're going to a matinee in town then Diane is going to drop her off around 3 o'clock.\" \n\n\"What will we do until then?\" I said sarcastically. \n\nShe looked me up and down with the blankets thrown back. \"Oh I'm sure we'll think of something.\" She wiggled her eyebrows at me, and I busted out laughing. \n\nShe climbed back into the bed, we were instantly kissing and touching, there was no urgency, just the acknowledgment that we were both where we most wanted to be, and with whom we we wanted to be. Lips teased, fingers caressed, and time floated pleasantly by without either of us noticing. Chrissy rolled me onto my back and threw a leg over me sliding down my legs, and began licking my cock. She looked me in the eye as she did it, the hunger I saw there was intense. My breathing was getting shallow as I watched her get me harder and wetter. I lifted my hips hoping she would take me in her mouth but she only smiled, and licked again, and again. The sweet torture nearing a fever pitch, and she only continued, long slow wet licks. \n\n\"If you see something you want, take it.\" She said, her voice low and husky. She licked the length of me, then swirled her tongue around the tip. I gathered what little wits I had, and slid out from under her got up and walked to the foot of the bed seeing her beautiful ass pointing up in the air, moisture glinting off pink lips, I knew what I wanted. I placed my cock at her entrance and pushed slightly, eliciting a moan from each of us. \n\n\"I want it, and I'll take it.\" I said as I pushed forward burying my hard cock deep inside her. Chrissy let out a sharp moan, as she threw her head back. I began long hard strokes, the moans synchronized quickly. \n\n\"Pull my hair.\" She gasped. I reached up and gathered her hair and pulled her head back gently. Her moans increased and my tempo picked up, my hips driving her forward with every stroke. She began chanting, \"yes, yes, yes, oh fuck\" and I soon lost all control and took her hips in both hands driving forward a few last hard strokes exploding deep inside her. I could feel the walls of her pussy clamp down on me hard as spent myself in her. Chrissy collapsed face first into the sheets gasping for air. I still had her hips in a vice like grip as the spasms subsided. \n\n\"I didn't think it was possible, but I think you're getting better at this.\" Chrissy gasped from the folds of the sheets. \"Which is impressive considering you were damn good at it in the first place.\" \n\nI smiled, gasping for air. \"I have a good teacher.\" I released my grip on her hips and pulled free of her, she let out a sad little moan and rolled onto her side. Her hair was a complete mess, covering her face I could see her peeking out from between the locks. \"Nice hair.\" I laughed. \n\n\"It has that freshly fucked look I was going for.\" She giggled. We cuddled for a while before she groaned. \"We'd better get up, it's lunch time, and we'll need to be presentable when Emily gets home.\" \n\nI stripped the bed and got the sheets into the wash. Chrissy made coffee and whipped us up some brunch. A not so quick shower for the both of us and we were parked on the couch watching TV when Emily burst into the house, her friend Jesse hot on her heels. \n\n\"Hi Mom! Pete we listened to all those guitar players you gave me to listen to, they were awesome. They all play electric guitar though. I'm not sure mom's going to let me get one.\" \n\n\"Well let's look at some great acoustics then. No need to dive head long into your rock &amp; roll career just yet, you've got a couple years.\" I said laughing. \n\n\"We'd better get going Jesse.\" Her mother said. \n\nEm just sat next to me and I gave her a nudge. \"Don't you think you should say thank you?\" I murmured. She looked at me, smiled and jumped up and ran after Jesse and her mother. Chrissy and I hot on her heels to join in with thanks. \n\nShe spent the afternoon apprising us of everything they did, and the movie they saw. At her insistence I gave her a short list of acoustic guitarists to research online. We ended up finishing our Italian food weekend with baked ziti for dinner. Bed time was a bit tougher, I had to promise to be there tomorrow when she got home from school before I got a hug. \n\nChrissy poured the dregs of the wine off into our glasses and handed me mine. \"You're doing it again.\" \n\n\"Doing what?\" \n\n\"Thinking, the question is, what about.\" \n\nI just shook my head. \"Nothing really... it's just that...\" I let out a heavy sigh. \n\nChrissy's eyebrows raised as she waited for me to spill my guts. \n\n\"Promise me you won't laugh?\" I said. \n\nShe smiled. \"Not a chance.\" \n\n\"I was just thinking that I wondered what kind of step-dad I'd make.\" \n\nChrissy's eyes popped open at that. A few expressions raced across her face, before quickly returning to a thoughtful look of her own. \"Listen,\" she said, \"don't get ahead of yourself. I don't want you to feel like you have to fill any role in that regard. Let's take it one day at a time. Besides, you have a lot on your plate to start with, a new job, a new city, a new life. The only thing she needs is a friend, and I think you've already proven that you can do that with little effort.\" She smiled at me, but there was worry in her eyes. \n\n\"That's not going to be a problem.\" I smiled back at her and drew her closer. \"I'm turning into a worry-wart like you.\" I got a quick poke in the ribs for that. \n\nWe were up at the crack of dawn, well actually before it cracked. Chrissy kept telling me that I didn't need to be up so early and I just turned her towards the bathroom to get ready for work. While the girls did their thing, I did mine, and had lunches ready to go for both of them, and breakfast laid out before they even popped back into the kitchen. \n\n\"Don't get used to this.\" Chrissy turned to lecture Em. \"As soon as he's gone it's back to corn flakes and bananas.\" I laughed, as they dug into breakfast with a single minded urgency. Em was soon bundled up and out the door with her book bag, Chrissy wasn't far behind her a deep kiss and a wish to play hooky from work. I patted her gently on the backside. \n\n\"Your patients are waiting for that bright smile to make them feel better.\" I said. \n\n\"Well if Mr. Brown makes a grab for my ass while I'm checking his vitals again, he may ended up for an extended stay with a few extra bruises.\" She said smartly. \"I might just have to put him in restraints.\" \n\n\"Sounds fun.\" I said wiggling my eyebrows. \n\n\"Maybe I'll bring some home for you.\" She grinned. She bolted out the door, as I shouted for her to drive safe. \n\nThe next days lent themselves to relative domesticity. I played house mate, making meals, keeping things organized and assisting with homework. \n\nIt soon came time for me to head home. That morning I woke before the alarm staring at the glow of the clock. Our lovemaking the night before had been frantic as if we were never going to see each other again. I could feel the slight sting of scratches on my back which left me with a feeling of contentment. As I wallowed in bliss at the feelings flowing through me I was surprised when I felt her lips brush the knuckles of my hand. \n\n\"You're awake.\" I whispered softly enough not to wake her if I was wrong. She responded with a gentle hum. I leaned forward and kissed behind the ear, a tremble flowed through her as she arched her neck gracefully inviting more of the same. I obliged her, a contented sigh was how she responded. \n\n\"I don't know how I'm going to keep from going crazy for the next two months.\" She said, another sigh escaping her lips. \n\n\"How so?\" \n\nLaughter bubbled up from deep in her chest. \"Despite what you may think, you're not the only horny one of this duo. I've kind of gotten used to this guy being ready and willing with little notice.\" She said as she snaked her hand over her hip grasping my cock. \n\n\"I hope he's not all your after.\" I teased. \n\nShe rolled over quickly, her hand slipping around my neck bringing us forehead to forehead. \"You don't think that, do you?\" She asked, concern evident in her voice. \n\nIt was my turn to laugh. \"If I were at all worried, I wouldn't be here. Remember, I'm the one who came looking for you.\" I said as I kissed her. She took control and rolled me onto my back and straddled me. I wasn't sure if it was her hips pinning me to the mattress, or me pinning her hips to mine as she kissed my chest, she worked her way up neck. Quickly our lips crashed together, bodies gripped tightly not wanting to let go. She slid forward slightly and settled herself on me as she took my face in her hands, willing herself to slow down. I wrapped my arms around her waist holding her in place as I lifted my hips plunging into her in long deep strokes. \n\n\"Take me like you did the other night.\" She gasped into my mouth. \"Take me like you want nothing else.\" \n\n\"I want nothing else.\" I growled as I rolled her off me, she scooted onto all fours and snatched my pillow from the head of the bed hugging it tightly, her ass pointing straight up. I slid my hand down her ass and up between her legs, she was so wet and hot I thought she was melting. She pressed back against my hand and made a small yearning moan. \n\n\"Please.\" She whispered urgently wiggling her ass in the air. I felt my cock throb at the sight of her, in the gray light. I couldn't take my eyes off her, but my body moved without conscious control as I slipped behind her, took her hips in my hands and slid into her. She whimpered into the pillow, she tried to pull away from me and I only pulled her back onto me. I held her like that for a long moment, her pussy gripping down on me, trying hard to get me moving. I closed my eyes and tried to keep my breathing steady as I began rolling my hips back and forth. She let out a long moan as I picked up the pace driving forward. I don't know when I did it but I had my hand on her neck, holding her in place while I filled her with deep hard strokes. I was barely aware of her fingers stroking her clit lighting fast , as she began to jerk and moan loudly into the pillow. Her pussy clenched hard, the spasms were more than I could take as I erupted in her one last time. \n\nI reached up beneath her cupping her breasts and lifted her up toward me, she shifted her head to one side, reached back, and pulled my face down to hers and kissed me deeply. \n\n\"I don't deserve you.\" She said. \n\n\"Sshh, you deserve everything I can give you and more.\" \n\n\"I don't think I can take much more and still be able to walk.\" She laughed. Just then the alarm clock went off. \n\n\"Time to get up.\" I said softly into her mussed hair. \n\n\"I'd say you already did a fine job of that.\" She leaned forward crawling on all fours to turn the alarm off. She turned back towards me and flipped her hair back out of her face. The light was brighter, and shone in her eyes, the look she gave me was nothing short of feral. My stomach did a little flip and I suddenly knew how the gazelle feels when the lioness has made her decision. Chrissy crawled back towards me and leaned down taking my half hard cock in her mouth bringing it fully to attention quickly. She wasn't stopping, she hungrily sucked and licked bringing me near the edge and stopped. She turned quickly and laid back with her legs spread wide. \"If I have to wait two months for more then I plan on filling up now.\" She held up her finger beckoning me towards her. I reached down and circled her clit with my thumb, her sharp intake of breath was all I needed to hear as I pushed deep into her again. She waved her hand at me in an effort to speed me up as she covered her mouth with the other. Soon the waving stopped and she was pulling and massaging her nipple. I began to flick her faster with my thumb causing her to yelp into the back of her hand as her hips arched up and I exploded again, with less force, but no less desire. \n\nWe collapsed into a heap on the bed panting like we'd just sprinted a mile, the alarm went off again. \n\n\"I hate that thing already.\" I gasped. Chrissy chuckled before she rolled over and got up slowly, limping to her closet and pulled on her robe. \n\n\"Shit. You're hard on a girl's anatomy. I'm going to have to come up with a cover story for limping today. I guess I could say I twisted my ankle again. C'mon sleepy head, time to face the music.\" \n\n\"I... I don't think I can walk.\" I chuckled. A few minutes later we were sitting around the kitchen table. \n\n\"Are you all right Mom?\" \n\n\"Yes hon, I just stubbed my toe.\" She said sitting gently with her cup of coffee. I buried my face in my cup so as not to be caught grinning. \"I'm going in a little late this morning, so when you get off the bus, head over to Beth's and I'll pick you up there. Okay?\" \n\nEm just nodded, and continued eating her cereal. It wasn't long before she was giving me a big bear hug imploring me to drive safe so I'd be back in a couple months to stay. I had her promise to work hard on her schoolwork, and if she needed any help with her to call me. \n\nChrissy made her phone calls and turned to me, her robe falling open slightly. \"I feel like a hot bath.\" She didn't move but looked at me sweetly, the invitation was clearly implied. \n\n\"That sounds nice.\" I said pulling my shirt off. I looked up and her smile had gotten wider. I held out my hand and she stepped forward taking it in hers as I led her to the bath. \n\nShe laid back against my chest, the warm water lapping around us, fingers glided down slippery skin. We didn't need to speak, our bodies were carrying on a conversation of their own. \n\n\"You know.\" I started softly. Chrissy quickly shook her head shushing me. She took my hand in hers running her fingers up and down the lines in my palm the turned it over rubbing the knuckles and surprisingly brought it up and kissed them. She relaxed even more and melted against me and laid my hand over her heart holding it there. I wrapped my other arm slowly around her and pulled her tighter against me. \n\n\"This is what love feels like.\" She whispered. I sighed and drew a wet heart between her breasts. She giggled as the water droplets slid down her chest. Time was moving far too quickly though and she stood up to rinse off, in the process she sprayed me in the face with a laugh. I reached up and gave her ass a wet smack which made her yelp. We dried off, Chrissy began applying lotion to her arms, and placed one foot on the edge of the tub and did one leg then the other. I don't think I'd ever seen anything more beautiful in my life. She took a bottle of baby oil and poured some into my hand. She looked me deep in the eye as she placed it between her legs. I took her cue and massaged it gently into her warm wet skin. She gasped, lifting gently away for a moment. Her hands were on my shoulders, holding herself steady as I massaged slowly, my middle finger slipped inside her. Her mouth fell open, her breath shallow and fast as I began pulling back and pushing forward in that little come hither motion she'd taught me years before. Her body tensed, her nails digging into my shoulders as she began to shudder. She was up on her toes now, as she moaned loudly. My fingers suddenly more slippery as I kept up my assault on her. She fell forward clutching me, her face buried in my neck. \n\n\"Stop!\" She gasped, drawing in air deeply. \"Stop, please.\" She pleaded. I let my finger slip out of her and gently patted her lips. \n\n\"You're not going to forget me in two months are you?\" I said smiling. \n\n\"Forget you? I'm going to need two months to rest.\" She said. \"Besides, it's a long dark winter here in the mountains. We don't want to wear ourselves out too fast now do we?\" She reached for another towel and handed it to me, pushing me out so that she could 'put her face on' and get to work. \n\nI walked to the bedroom and toweled off along the way. That little moment we had aroused me incredibly, my hard cock bounced in front of me. I stripped the bed, not for the first time since I'd been there and made my way to the washer with the rumpled damp sheets. When I walked into the bedroom again Chrissy was wearing the palest pink lace panties and was bent over a drawer rummaging around. My arousal, which had begun to subside, was back in spades. She turned and peeked at me from under her hair. \"Brute, I look like I've been the main course at a vampire buffet. Now I have to find a turtleneck or face a lot of embarrassing questions all day.\" \n\n\"Like why you're wearing a turtleneck, a silly grin, and walking funny?\" I laughed. I ducked as she threw a balled up t-shirt at me, but started laughing too. \n\n\"I get your point. Sandy and Sam will catch on quick, they've seen you, and won't be surprised.\" She found the shirt she was looking for tossed it on the bed. Pulled a bra out and whipped that on with practiced efficiency, she turned and noticed me standing there leaning against the doorway watching her, she just looked me up and down and sighed. \"I'm sorry hon.\" Her eyes tilted and her mouth pulled down in a frown. \n\n\"What?\" I asked, my eyes opening wider. \n\nShe looked down at my bobbing cock. I just chuckled. \"Don't worry about me, you don't want to be any later.\" \n\nShe stepped over took a pillow off the bed and knelt down on it in front of me. \"Sweets, you're going to be late.\" I said with a lot less conviction now that my cock was slipping over her tongue. \n\n\"Have faith in me.\" She said before swallowing me as far as she could drawing back with incredible suction, her cheeks hollowing as she drew me out. She began bobbing in earnest. I laid my hand gently on her head and began pumping furiously. She pulled back with just the tip in her mouth just before reaching up and massaging my balls. I couldn't take any more and filled her mouth, her throat bob as she swallowed. She cleaned me up quickly, and licked her lips clean, all the while giving me a look that said, \"if I didn't have to get to work I could have kept you on edge all morning.\" I knew she could too. She stood up tossed the pillow back on the bed and grabbed the shirt pulling it on. She fluffed her hair out from the collar and smiled at me. She pulled on her scrubs, donned socks and her work shoes. She pinned on her badge and gave a little twirl, the smile still on her face. \n\n\"Will you put some clothes on so I can get out of here.\" She said laughing. \"I can't tear myself away with you standing there like that.\" \n\n\"Sorry.\" I said, not feeling one bit sorry as I grabbed my jeans. She went out and filled her travel mug with the rest of the coffee. \n\n\"Listen, if you feel tired you pull over. I don't want a call that they found you in a ditch. Drive safe okay?\" She said in her best motherly voice. \n\n\"I'm already tired. I didn't get much sleep last night.\" I said kissing her. \n\n\"Make some more coffee, take a nap before you leave, stay until tomorrow, what ever you need to do. I'm serious.\" She said pausing to look at me. A moment passed and a tear rolled down her cheek. \n\n\"Hey, hey.\" I said gently brushing the tear away and kissing her. \"I will be careful, don't worry.\" \n\n\"I wish you didn't have to go.\" She said wrapping her arms around me and hugging me tight. \n\n\"It's only two months, and you'll be busy with Em, the holidays and work that it will be behind us before you know it.\" \n\n\"Don't stand under any mistletoe before you get back here.\" She smiled though another tear followed the first. \n\nI smiled. \"Consider yourself off the market. Your prince will return after the ball.\" \n\n\"Don't you dare steal one of my shoes before you go.\" We both laughed at that. ",
        "\"Come on.\" I led her to the Jeep, opened the door for her and got her settled in. \"Drive safe, go on about your daily routine. Call me, text me, send up smoke signals, any time.\" I leaned in and kissed her softly. We lingered for a moment and I stepped out closing the door. She lowered the window. \n\n\"Smoke signals huh? Do you always run towards a fire?\" \n\n\"It's what I do.\" I said smiling. \n\nHer face turned serious. \"I love you.\" Her eyes welled up again. \n\n\"I love you more.\" I leaned in and kissed her again. \"Now get going before you get fired.\" \n\n*** \n\n\"You're quiet.\" \n\nI smiled. \"Sorry, just thinking.\" I'd gotten home a few days before and promptly went back to work. This was my first night off, and sitting across the table from Mom, I thought that it was time to tell her, but unsure about how to go about it. \n\n\"Your trip went well then.\" She asked, the questioning tone left hanging in the air between us. \n\n\"It went very well.\" I said and looked her in the eyes. She knew, like mothers do, that there was a lot more to the story. She sat there with an expression that said, \"when you're ready, tell me what you need to get off your chest.\" \n\n\"Dinner smells terrific.\" I said. \n\n\"Yea it does. Sorry it's going to be a bit late, I got it into the slow cooker later than I'd planned.\" She said, before getting up and setting the table. \n\nI'm not sure if it was the homely sounds of the kitchen but I relaxed. \"Do you remember two years ago when I went down to see Davy about a job for the summer?\" \n\n\"Yes, when he'd given it to that Dylan boy.\" She said, knowing that the story was about to unfold. \n\n\"Yea, the reason he gave it to Dylan was because I didn't make it there in time. I stopped down at Paula's and she asked me to make a delivery for her since I was going right near the place on my way to see Davy.\" I began. I let the story unfold, not going into the steamy details. After all it was my mother I was talking to, and she didn't need to hear about that, any more than I wanted to tell her. I told her about taking care of Chrissy for weeks. She mentioned that Paula told her about me taking her to the concert in the park. I said that I had, and a good many people had let her know that I had been on stage and played for some girl named Chrissy. I had totally forgotten about how public that was, and yet she never mentioned it to me even though she'd heard about it. Mothers can be the sneaky when they want to be. \n\n\"So you already knew?\" I said surprised. \n\n\"Well not so much as you think, but when your son serenades a pretty girl at a crowded summer concert, people will ask you about it.\" She said with a smile. \"I thought that you'd tell me when you were ready.\" She paused. \"I knew something had happened though, and I didn't want to pry. You're an adult, and I respect the fact that you're not going to tell me everything that's going on in your life. Listen to me, that sounded like a huge guilt trip, it's not. I just want you to know that I respect your privacy. Paula tried to dig for dirt with me and I told her that you hadn't discussed your job with me.\" \n\nI told her about how abruptly Chrissy had left. The look on my face must have conveyed exactly how it felt. She walked over and rested a hand on my shoulder before running her hand down the back of my head and giving my neck a little squeeze. She knew somebody had broken my heart, now she knew who it was. \n\n\"So you went to see her?\" She asked. \n\n\"It's nice there, kind of like west of here over towards the mountains. She lives in a decent sized city, like Augusta maybe. She's a nurse at the hospital there. She's got a terrific daughter named Emily.\" At that I spied mom's eyebrows lift a fraction. \n\n\"So how did the first meeting go?\" You hadn't seen her in over a year, the way she left I can't imagine you'd heard from her before that.\" \n\n\"It was nerve wracking.\" I said with a laugh. I told her about leaving the note and finally meeting again. I mentioned meeting Em and how they asked me to stay with them. I watched for a look of shock or surprise and didn't see one cross mom's face. Her head just bobbed as she took it all in. \n\n\"So, when?\" She asked, picking up the thread of a conversation we'd had weeks before. \n\nI just smiled. \"First of the year. I'll be done with my one year duty here. I've already picked up the necessary forms to apply there. If I don't get in there, I'll look to nearby towns, or just go back to school and get a job doing something else. I'm going to get my EMT training one way or another.\" She smiled at that. \n\n\"I hope I get to meet her some day.\" There's the guilt trip I thought. \n\n\"Well, funny you should mention that, because I was thinking of the same thing.\" I replied, and let her know how I hoped we could make it happen. She was all smiles after that. \n\n*** \n\n\"Oh my God, to have been a fly on the wall during that conversation.\" Chrissy said. Her voice sounded so sweet. It made my heart beat faster just to hear it. \n\n\"I left out most of the lurid bits of the story. I didn't want her to keel over on me.\" \n\n\"I'm sure any parts you left out, she figured out already. From the sounds of her, she doesn't seem like the type to fool easily.\" She replied. \n\n\"That she isn't. Luckily I was a good kid so I didn't have to bullshit my way through many situations.\" \n\nWe talked about little things, Emily was doing a little better in school, but still wasn't pushing for the all A's that Chrissy was looking for. I said to give her time, the music is helping I was sure of it. Emily insisted on talking to me, I could hear her bouncing like a jumping bean in the background. She was all excited to tell me about how her music teacher thought it was terrific she was so interested in everything I was showing her and her friends and how she was going to be in a holiday concert at school. I brought up school, asking how she was doing. She let out a little sigh. \n\n\"One A, two B's and two C's\" was her reply. \"I just don't get algebra!\" The other C was from a history class which had her bored to tears talking about 'boring dead people' as she put it. \n\nI made her a deal, no C's by the mid-term report card and I'd make it worth her while. It was after her mother chivied her off the phone and to bed that I brought up my idea. I was surprised that not only did she like the idea she was very excited. \n\n*** \n\nThanksgiving day past with several calls on homes with scorched turkeys, and one unfortunate turkey frying experiment that cost a family their garage. Soon the snow was upon us. This early the snow usually didn't stick long, not this close to the ocean. It did make the driving difficult for the people who hadn't seen it in seven months. Luckily there were no major incidents. That is until I handed my notice into the chief. \n\nHe was less than impressed, until I told him my plans. He said he'd push to get me EMT training the budgets would be out soon. I showed him a picture of Chrissy and Em that I'd snapped with my phone. \"Unless you can make that job happen where they are. It's not likely to change my mind.\" I said with a smile. \n\n\"Would she be willing to move here?\" \n\nI laughed. \"Not nearly as I'm ready to move there. Don't worry I'm a first year greenhorn, I can't be that tough to replace.\" \n\n\"No but that means I have to find one willing to relocate here or scrounge up another, get him up to Fairfield, and wait months to put him to work.\" He shook his head, then asked to see the picture again. \"I'll say this, she looks worthy of a guy like you. Don't screw it up.\" \n\n\"I like to think that I'm worthy of a girl like her. Trust me, I'll do everything I can to not screw it up.\" \n\n*** \n\nChristmas eve came quietly, the crackle of a log in the wood stove, the soft hum of the refrigerator in the kitchen and in the living room me rustling and muttering while attempting to wrap a gift. \n\n\"Do you want a cookie?\" Mom called out from the kitchen. \n\n\"Of course, but did you make enough for Santa?\" I said chuckling. \n\n\"Don't you worry, I'm practicing for when the girls get here. What kind of grandma street cred would I have if I couldn't whip up cookies on the spur of the moment?\" \n\nWe had a quiet dinner earlier just the two of us. I started to doubt my gift choice and my mother put her hand on my arm. \"Relax, she's going to love it, trust me.\" \n\n\"I know, I'm just getting a little anxious.\" I said with a sigh. She chuckled at that. \n\n\"She'll be here day after tomorrow. Breathe.\" \n\nMom was going to pick her up at the airport since I'd swapped shifts with Mike so I could have the later part of the week off. I'd be working Christmas day and the day after and have the next three days off, then two more days and I was done. I'd already started packing. Mom kept trying to give me furniture, which was nice but wasn't going to travel well since I didn't know where I'd be living just yet. I asked Chrissy if I could stay with her for a few days while I looked at apartments to which she quickly said yes. I felt a hand on my shoulder rubbing it firmly. \n\n\"Breathe.\" She said again. \n\n\"You're going to like her.\" \n\n\"I already do, because I trust you. You've always been a good judge of character.\" We did justice to the cookies leaving a couple out with a small glass of milk, just in case. \n\nWork went by slowly, we had a huge dinner at the engine house. We did have one call of a chimney fire from some over zealous wrapping paper burning. The next day had me so jumpy Herb said I should drink decaf from now on. When I told him why his face broke into a huge grin. \n\n\"You finally tugged back, huh? Tell me you're going to bring her by so we can meet the woman you're dumping us for.\" \n\n\"I might, just to show her why I'm leaving.\" I laughed ducking his backhanded slap. About mid-afternoon I got a text saying that they had landed and mom had found them. They should be in town in a little over an hour. I did an equipment check and spent some time polishing the chrome on #3 to keep myself occupied. \n\n\"Hey Pete!\" I heard from over by the kitchen. I walked around the corner and Chrissy was standing there, her arm on Em's shoulder. Allan, the lieutenant on duty laughed. \"I haven't seen him smile like that since the time we ordered pizzas from next door and didn't make him cook.\" I walked up and Chrissy launched herself into my arms. Several kisses later I noticed we were getting a round of applause. \n\n\"You may need to hose them off, they do this all the time.\" Em announced to everybody, to a hale of laughter. I gave Chrissy another kiss before releasing my grip and reaching out to Em. \n\n\"Come here smart ass and give me a hug.\" She gladly dove into my side and I kissed her on the forehead. \n\n\"What are you feeding her? I used to be able to kiss the top of her head.\" \n\n\"Everything, I think she's having another growth spurt.\" Chrissy replied. I showed them around, introducing them to the guys on duty. Herb gave me a sly wink, I don't think he had any doubts now as to why I was leaving. \n\nAllan walked over to us. \"Damn, I'm sorry you're not feeling well Pete. Hopefully you'll feel better by Thursday. Danny is coming into the cover the overnight.\" I looked at him oddly. \"Get outta here you three.\" He smiled and thumped me on the back and walked off. \n\nI wasn't sure what happened, but I wasn't about to argue the point. We all piled into my truck and I drove back to the house. I felt Mom's hand in this when I saw a big spread being worked on for dinner. I knew I was right. I asked her if she needed any help. \n\n\"Maybe a little.\" She put her hand on Em's shoulder. \"Would you mind giving me a hand Emily?\" Mom gave me a look and raised an eyebrow in dismissal. \n\n\"Don't work her too hard. We'll need some help to clean out under the tree later.\" I said chuckling. \n\nAs soon as we made it through the doorway Chrissy turned me and fell into my arms. The kiss was sweet with an underlying urgency. Her body felt like a taught bowstring against me, the energy waiting to be unleashed. \n\nEm said a little louder than necessary. \"If I know them, they're in there with their faces stuck together.\" Causing us both to laugh. \n\n\"I hope we have a lot of potatoes to peel. I'm really hungry.\" I called back. Chrissy pulled me down onto the couch and kissed me again. \n\n\"I have a special surprise for you.\" She said with a big grin. \n\n\"Not here, my mother is right in the kitchen!\" I said laughing. \n\n\"Not that, maybe later if we can find a way to pull it off.\" She said as she gave the front of my pants a squeeze. \"I've only had Bob to keep me company the last two months, and he's a lousy cuddler.\" \n\nMy eyes went wide. \"Who is Bob?\" I asked. \n\nShe snorted and leaned in to whisper in my ear. \"Battery operated boyfriend.\" I busted out laughing. \n\n\"Is this the same Bob you traveled with a few years ago?\" I asked softly, not wanting the conversation to raise questions. \n\nChrissy rolled her eyes. \"Maybe, maybe not? You left me in a bad way two weeks ago when you called. It's not nice to ply a girl with pretty words and promises and then leave her to take matters in her own hands.\" I remembered the call, and I wanted so badly to ravish her until we both passed out. \n\n\"Oh my God, look at you blush.\" She said with a smile. She leaned in and whispered in my ear. \"Don't you worry, I'll get my due for that, and then some.\" She took my ear lobe in her mouth giving it a tug. Her hand slipped between my legs, she massaged the inside of my thigh and it was getting the reaction she expected. \n\n\"I'm going to run upstairs and change, I'll be right back.\" I said, trying to steady my breathing. \n\nShe grinned even further with a glint in her eye. \"Want to show me your room?\" \n\nI chuckled at that. \"Sure.\" I stood taking her hand and led her upstairs. I led her into the room where she peeked out the door behind us before closing it quietly and began unbuttoning my shirt for me. In a flash I was shirtless and she was kissing her way down as she pushed my t-shirt up and off. \n\n\"Are you nuts?\" I chuckled. \n\n\"I can't leave you like this through dinner.\" She said stroking my hard cock through my pants. She stepped back sitting on the edge of the bed and pulled me towards her by the belt and undid it. She had my pants and boxers around my knees and began licking my cock. She looked up catching my eye as she began taking it into her mouth. It's a wonder my knees didn't buckle at the sensation. She took me slowly at first, but sensed my mounting frustration and sped up, bobbing swiftly drawing me out until I exploded down her throat. \n\nI gasped catching my breath. \"You're a little bit evil, you know that?\" \n\nShe dabbed at the corner of her mouth with a tissue she grabbed from the box on the nightstand. \n\n\"I don't know about that. I think I'm more angelic, to relieve you from your suffering like that.\" She replied. \n\n\"I can't wait to return the favor.\" \n\n\"Neither can I.\" She said smiling. \"Is there a bathroom up here?\" I told her it was the last door on the right. \"Good, let me go freshen up and head downstairs before you come down.\" \n\nI came down the stairs and stopped at the sight before me. Chrissy sat at the end of the couch, with a mug in her hands, eyes wide as she watched Em. Colored lights twinkled making the scene magical. She had the most beatific expression as she watched Emily scouting the presents under the tree. Emily sounded amazed that she had so many. Mom had pulled out the stops when she discovered she finally had a girl to shop for. Chrissy's gaze lit on me and her smile got even bigger as she beckoned me over. Just as I sat down Mom called out for a hand and I hopped back up and grabbed the tray she'd put together. \n\n\"This one for Em, no rum in it.\" She pointed at one of the mugs of hot cider. \n\n\"Going to be that kind of night is it?\" I chuckled. \n\n\"Hey, it's the holidays. Why not enjoy ourselves?\" She followed me out with a huge platter of food and set it on the coffee table. We chatted while dinner cooked. Emily landed next to the platter and began nibbling away. I had a dread feeling that this meeting was going to be awkward for everybody involved. Trust Mom to treat Chrissy like a long time girlfriend, not like someone she'd met a few hours before. Somehow discussion turned to what I was like when I was little and the embarrassing stories began. Before long the buzzer on the stove went off and we mobilized and soon we were sitting around the table, a feast laid out before us. \n\n\"I wondered where he got his culinary skills from, now I know. Everything was delicious.\" \n\n\"Thank you. I assure you that I only showed him the basics, he's more creative than I've ever been in the kitchen.\" \n\nEm piped in describing our weekend of Italian food when I was at their house a few months earlier. \n\n\"Your lieutenant wasn't happy with me because of it either. I guess since you've been there they've eaten better than they had in years. Some of the guys said you were a better cook than their wives.\" Chrissy said laughing. \n\n\"It's probably for the best, Earl was getting a paunch on him.\" I replied. \"I have a gift. What can I say?\" \n\n\"You could say, don't move Mom, I'll take care of the dishes.\" \n\nHearing my groan caused Em to add, \"You know the deal, the cook doesn't do the dishes, and you didn't cook.\" \n\n\"I didn't cook, either I'll help you hon.\" Chrissy added as the laughter subsided. It wasn't long before we joined Mom and Emily in the living room again. \n\n\"I now have a promise that you're going to practice your music so you don't forget it.\" Mom said. \"Emily is going to teach you to play guitar too, so I hear.\" \n\n\"I hope so.\" I replied as we got comfortable on the couch. I looked up and Emily's face was full of pent up excitement. Chrissy stifled a yawn behind her hand. \"Maybe we should wait, your mom seems pretty tired.\" \n\n\"Mom, do you need some coffee?\" She asked with a longing in her voice. We all laughed as her mother declined. \n\n\"Pete, get in there and play Santa for us.\" Mom said as she prodded me with a toe. \n\nIt was surprising how little time it took to tear through the loot. Emily dancing around a pile hugging her new game. She pouted slightly because her mother said she'd lose it if her grades didn't stay up. I agreed, and reminded her we had a deal. We did our best to neaten up and make a pathway. Mom said she was going to go to bed and made her way upstairs. We had Emily's bed made up in Mom's office on a borrowed folding bed. Chrissy allowed her to take the game with her so she could try it out. A quiet settled over the house as we tucked in for the night. \n\nChrissy emerged from Emily's makeshift bedroom. I had cleared the coffee table off and set the last gift in the middle of the table. A small velvet box with a little red bow on it. She stopped half way across the room, her eyes wide as she looked at the box then over at me. I knelt on one knee in front of the wood stove a stick in hand poking up the coals. She looked at me kneeling then at the box again. I was unsure of what was going on in her mind, but a wash of expressions made their way across her face in a fleeting moment. She finally broke eye contact with me and retrieved a similar box from her purse setting it next to the one that was on the coffee table. She sat on the couch and and patted the spot next to her. My heart pounding because of the look she gave me. I was both worried and hopeful. \n\nShe inhaled quickly as if to begin a speech. \"Pete, remember when you came out to see me?\" \n\n\"Just open it first. Please.\" I interrupted her. She looked up sharply at me. \"Please?\" I said with a grin. She gave me a curious look and reached for the box like it might go off like a bomb if she moved to quickly. She lifted the lid gently and looked for a moment at the silver pendant. A grin crept across her face as she let out the breath she'd been holding. ",
        "\"It's beautiful!\" She said turning to me and giving me a kiss. \n\n\"It's one of a kind. The woman that made it said she wouldn't make another for at least three months. It was our deal after she saw the design I'd made for it.\" The pendant was a large silver heart with a smaller heart inside, and another smaller heart inside of that one. Along the edge where the three hearts joined, small stones were set. I chose our three birthstones and they worked well together in pale blue, clear and pink. \n\nI chuckled after a few more kisses. \"I know what you were thinking. I was thinking the same thing myself. I spent weeks looking at rings.\" I said softly. \"Then about about a month ago, I don't know what reminded me of it, but I remembered how proud you sounded when you told me that you were back on your feet, and you were doing well. I didn't want to feel like I was trying to tie you down again, and become the old ball and chain.\" \n\nShe drew a breath to say something and I turned looking deep into her eyes and saw the answer to the question I hadn't asked. \n\n\"I want you to want it as much as I do. When I ask, you'll know it's coming.\" I said as I took her face in my hands and kissed her deeply. I pulled back to see her eyes welling up. \n\n\"How is it that you understand me so well?\" Her voice barely above a whisper. \n\n\"I listen to what you say, and to what you don't say.\" I smiled at her and the first tear broke free and rolled down her face. I brushed them away with my thumbs and before I knew it she was straddling me and our lips crashed together. The frustration of the past two months apart trickled away gently. It took a loud pop from the wood stove to rouse us. Chrissy jumped, startled by the sound, then realizing what it was began to chuckle. She sat up slightly, still straddling my lap and whipped her hair to one side, with a deft motion she undid the necklace she was wearing and set it on the table. She reached into the box and lifted out the pendant and handed it to me. She turned and sat on my lap and lifted her hair. I clasped the necklace and leaned in kissing her softly on the neck, causing her to let out a sigh and tilted her head inviting me to have my fill. \n\n\"You're distracting me.\" She mumbled. \n\n\"Really?\" I said. \"From what?\" She shivered in my arms as I continued my gentle assault on her neck. \n\n\"We need to talk.\" \n\nI felt an icy bolt run down my spine. Those are words I never wanted to hear. She noticed I'd stopped nibbling her neck and patted the hand I had wrapped around her waist. She leaned forward and then slid off my lap and sat next to me. The other little box in hand. She was still smiling but looked at me with concern. \n\n\"Are you okay?\" \n\n\"Yea,\" I said, \"what do you mean we need to talk?\" \n\nShe laughed gently. \"Relax. It's just that this needs a little explanation.\" She handed me the box and tucked her leg under her. She nodded at the box, urging me to open it. I looked up at her for a moment, her eyebrows went up as she urged me to open it with an impish grin. \"Well go on.\" I pulled the ribbon off and tore the paper sliding out what looked like a jewelry box. I opened up to find a pewter key chain with my initials on it. I breathed a little better. \n\n\"Em and I decided we don't want you to come stay with us for a few weeks while you look for a new place.\" \n\nI looked up sharply at that. She had a devious smile on her lips. She motioned towards the box again. I picked up the heavy oval and keys dangled out from underneath it. \n\n\"We decided we don't want you to look for a new home. You already have one if you want it.\" \n\nI turned it over, the inscription on the other side said, \"Always Remember To Come Home.\" \n\n\"That was Emily's idea. She knows being a firefighter isn't exactly the safest profession. She's close to Uncle Dale. So much so that sometimes I wonder which one is the kid.\" I turned and kissed her, smothering her next words. She pulled back gasping for breath. \"Is that a yes?\" \n\nI just nodded, too choked up to reply. \n\nEpilogue \n\nI sat on an old stump, steam rising off my coffee in the cool morning air. The clouds were heavy, a faint glimmer of the sun trying to break through near the horizon. The breeze kicked up, dried leaves skittered across the brown grass at my feet. I looked up, in the distance there was a V of southbound geese. I lowered my eyes and took in the little house with a grin and shook my head. So many things had happened in just a few short years. A blue jay called out just as the door opened and Em barreled out headed for the school bus. She didn't even look up as she darted around the house to stand with the her friends down a few houses. She'd grown and was looking more like the beautiful woman she would soon become. I looked over at the kitchen window and saw a shadow move. A few minutes later the door opened again, Chrissy stood on the step scanning the yard, for me I assumed. \n\n\"Pete?\" She hollered. \n\n\"I'm over here.\" I said, getting her attention. She walked over and stopped in front of me, her hair blew in front of her face, her arms crossed tight against the chill. \n\n\"Are you okay?\" \n\n\"I'm fine.\" \n\n\"What are you doing out here in the cold?\" She said bumping my foot aside slightly so she could perch on my knee, her arm wrapped around my back as she nestled in to find some warmth. \n\n\"Counting my blessings. The second one just dashed up the road to catch the bus, the first one is right here.\" I said running my hand up her back. \"After that I lost count.\" \n\n\"Today?\" I asked. We'd gotten into a little routine over the past year, where I had asked her to marry me, and she said she'd tell me when she was ready. It had been over a year, nearly two, since I'd moved here, and the life agreed with me somehow. The area was rough, but the people strong and supportive. There were whisperings about us, but they all disappeared when people realized just how in love we were... we are. Our game was to the point where I wouldn't have to say anything more, and she knew what I wanted. I asked daily. \n\n\"Happy birthday.\" She said, then leaned down and kissed me. The blue jay taking offense to our conversation decided to voice his opinion again. I raised my eyebrows at her. I never let her get away without answering me. She looked up over my head, her eyes scanning the yard, she looked up at the sky and slowly began nodding. She looked down at me with a smile. \"Today.\" \n\n***** \n\nI'd like to thank those of you that commented on previous chapters of the story. This particular story is inspired by a real person, (not to worry, names were changed to protect both the innocent, and not-so innocent) who read each chapter before it was published. It was her encouragement that kept pushing me to finish it after I'd left it for so long, and for that I thank her immensely. I hope you enjoyed it."
    ],
    "authorname": "Member389",
    "tags": [
        "romance",
        "oral",
        "christmas"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/summer-in-maine-ch-05"
}