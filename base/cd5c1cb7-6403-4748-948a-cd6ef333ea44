{
    "title": "99 First Dates Ch. 03",
    "pages": [
        "I was getting annoyed and discouraged enough now to want to give up. Farah told me to shut up the whining and grow a pair. On the positive side, I was at least getting laid a whole lot more regularly than I had been. The caf\u00e9 betting pot was now over $5000.\n\n<p align=\"center\">*************</p>\n\n63. Mademoiselle LePew - This woman who I briefly entertained for a coffee date wore so much heavy perfume that I nearly had to run for the bathroom to vomit. She was also quite a bit overweight so I suspect that she was trying to cover over some body odor problem. Frankly I had too much of a headache from the overpowering scent that I didn't much care what she was hiding.\n\n<p align=\"center\">*************</p>\n\n64. Ms. Constant Texter (or more Cell Phone Shenanigans #2) -- Oddly, I found this even more annoying than constant chatting on the phone. My coffee date spent the entire hour with her fingers under the table tapping away text messages and Tweeting to her friends. Why she thought I'd never notice this I'm just not sure.\n\nI was annoyed enough about this to actually complain to her that this was extremely disrespectful to me. She suggested that I mind my own business. I then suggested that she 'lol' and 'C U L8R' to her twit Twitter friends elsewhere.\n\nWhen she drove away a few minutes later she was still texting away on her phone while driving!\n\n<p align=\"center\">*************</p>\n\n65. Ms. Retread - During the course of dinner with this ravishing redhead, she freely admitted that she hung out mostly with guys and that she probably had about two hundred guy 'friends'. Some were ex's, some were gay, some were guys who probably wanted to date her but became a friend while waiting their turn... but most seemed to be just plain 'friends with benefits'. She was getting even more action without a #1 boyfriend than I was hanging out with the stripper gals!\n\nWhatever, no thanks.\n\n<p align=\"center\">*************</p>\n\n66. Das Chancellor -- Right from the start of our dinner date, 'The Rule Maker' began to review my life and, for my own good, began to set up some ground rules for me. By the time the dessert had arrived I wasn't even sure if I would be permitted to go to work all alone by myself or take a shit without her express permission. Like The Commander above, if I give this woman an inch then she would take a mile, or roll her panzers right over the Polish border. She didn't like men that drank, so I made sure I kept the beers flowing.\n\nI paid the check and told her to concentrate on raising cute little teacup poodles and clean up after their shit instead.\n\n<p align=\"center\">*************</p>\n\n67. Ms. Smug Bitch -- She complained nonstop, and with an insufferable smug look that I just would have loved to have slapped off of her face. She knew that she was bitchy... and she was proud of it. She mentioned 'supply and demand' at least three times during dinner. She was certain that there weren't enough good looking non-bitchy girls to go around, so she had 'take me as I am' written all over her smug intolerable face... but nearly everything about me needed to change.\n\nNo matter how beautiful a woman is, there is always at least one man that won't put up with her shit. If you look at listings of the fifty or one hundred most beautiful actresses and supermodels in the world, a pretty big chunk of them have been divorced already at least once... or even multiple times. Someday even Sandra Bullock might be on the dating block once again and then she'll be all mine!\n\nAs for this particular bitch - Fuck you and the horse you rode in on!\n\n<p align=\"center\">*************</p>\n\n68. The Criminal Mastermind -- I wondered why she wanted my home address before she agreed to meet me for a coffee date. This was so her boyfriend could try and rob my house while she knew it would be empty. He couldn't force my expensive door locks and the windows all had iron burglar bars that deterred him until my chronically nosy next door neighbor saw him called the police.\n\nThey caught him and since he had a long criminal record he in turn ratted out his girlfriend in exchange for a reduced sentence. Apparently the two of them had been running this scam for a long time.\n\n<p align=\"center\">*************</p>\n\n69. The Stalking Crazy Ex -- She was a frantic bundle of nerves during our dinner date, until I figured out that her crazy ex-husband was stalking her and he had even followed us here to the restaurant that night to spy on our date. I told the fucker to get lost and stay lost. He went semi-nuts and started ranting about how they were 'meant to be together' and that I was the troublemaker in their way.\n\nMy friends at the Italian restaurant had seen enough craziness and two large Mexican cooks appeared from the kitchen and they escorted the fellow out the back door and into a nice dark alley where they took out some of their own frustrations upon his soon helpless personage.\n\nIt's nice to have friends in high and low places.\n\nNeedless to say, the gal and I didn't hit it off. She apparently liked the stalking drama and the two of them soon reunited for the seventh or eighth time.\n\n<p align=\"center\">*************</p>\n\n70. The Legal Eagle -- This coffee date was with an attorney that had her own very successful practice. She was quite a nice and pretty lady but during the course of dinner, I discovered that her electricity had been cut off twice this year. Not because she couldn't afford it but because she always forgot to pay it. She was a smart girl, but she lived her life with blinders on focused only on big-picture items and never any of life's small details. Apparently she had a staff that handled that sort of mundane stuff for her.\n\nThat level of absent-mindedness does not make for a good life partner.\n\n<p align=\"center\">*************</p>\n\n71. Church Lady #2 -- This harridan was seriously hardcore Christian Taliban from a cult that disapproved of nearly technological or social advancement of the twentieth century, let alone the twenty-first. She wore a granny style dress that buttoned up tight to her neck and didn't expose an inch of wickedly sinful skin below her face. She also apparently went to church at least three times a week and disapproved of nearly everything, such as electricity, mechanical works, science or even medicine as all being absolutely the work of Satan.\n\nI then suggested to her that my Norse God Thor was far mightier than her wimpy Mediterranean middle-eastern God. My God had a hammer... and hers got nailed onto a cross. I laughed evilly while she tried to bludgeon the devil out of me with her ever-present bible.\n\n<p align=\"center\">*************</p>\n\n72. The High School Counselor -- It was clearly obvious that she hated her job, if not her entire life so far to date. When I asked her where she hoped to be in a year, she was pretty specific. In a year she hoped to be married and raising kids at home (which implied that if she wasn't pregnant already, she fully expected to become so rather soon).\n\nCheck, please!\n\n<p align=\"center\">*************</p>\n\n73. The Doormat -- Every single little thing about her screamed 'Danger Will Robinson!' She had the crazy... but she was smart and good enough at conversation to keep most of it hidden, until for some reason the conversation turned to sex. She was then quite brutally frank and honest -- she liked it very hard and rough. So did I sometimes, but not as hard and rough as she apparently did. I think she was looking for a brutal Master to completely submit herself to.\n\nInteresting, but not quite my cup of tea. While I enjoy a woman who can be a bit submissive in bed, I'm not looking for a human punching bag who fondly dreams about violent rape fantasies.\n\nShe was quite willing to submit herself to me as my abjectly obedient whimpering slave until I started mentioning my love for knives and blood, and how her black dress would look really nice on my bedroom floor, covered in blood, and marked Prosecution Exhibit #A.\n\nApparently she did have a few remaining limitations.\n\n<p align=\"center\">*************</p>\n\n74. Ms. Entrepreneur -- Save yourself some time and expense and don't try to date any woman who runs her own mid to large sized business, because that's all she cares about or has time for. If you do get involved, it becomes just like being another employee, except without the paycheck, benefits and fixed hours.\n\nWe talked a lot of shop over coffee, but neither of us was going to close our own business to help with our spouses, if we married. Her work hours actually exceeded mine! She took no vacations, and only rarely took any days or evenings off. She often worked on the books most nights until midnight. What was the point of dating? She didn't have any room left in her life for a husband.\n\nI told her that was ok; I had my Internet porn and World of Warcraft addictions to keep me busy. I'm not sure she realized that this wasn't quite a joke.\n\n<p align=\"center\">*************</p>\n\n75. The Skank -- Like the slut I dated earlier who was the town bike, this particular skank was a girl who had slept with at least three of or more different guys in just the last week alone without any protection. Recently she thought she was pregnant and didn't know or have a clue who the father might be. Then after later realizing she wasn't pregnant, she still continued being a whore and sleep slept with another five different guys the following week. Really, she thought this story was funny! She also seemed to have the local Planned Parenthood abortion clinic on speed dial for handling her regular succession of 'unexpected incidents'.\n\nShe didn't really date much, but she had her own stool at the bar of the local Holiday Inn where she spent almost every evening cruising for strangers for yet another one night stand. She didn't really want a husband, she just seemed to want a different nameless stranger to use her nearly every night to give her pathetic life some validation.\n\nEwwwww!\n\n<p align=\"center\">*************</p>\n\nBy now the local caf\u00e9 betting was at a complete frenzy. The jackpot was alleged up to over ten grand now. Farah went and bought a 'Now Serving # xx' electronic sign so that my unbelievable string of dating failures could be clearly noted, even to cars passing by.\n\nI was occasionally getting laid, but never with a woman that I would want to spend the rest of my life with... perfecting the experience. I was becoming jumpier than a jackrabbit and getting increasingly quick to pull the trigger early to quit on bad dates, which kept coming in droves.\n\n<p align=\"center\">*************</p>\n\n76. The Skunk -- When she kissed me goodnight her breath stunk worse than a feral mutt. The rest of her hygiene didn't seem quite top notch either. No, she wasn't particularly height/weight proportional.\n\n<p align=\"center\">*************</p>\n\n77. The Nympho Slut -- While on the second date that I had with a lady not much younger than I was, she took me home to show me some home movies. These 'movies' were ones that she had made in the bedroom with her various guy and girl friends. This was a bit disturbing for an early date, but it was definitely hot!\n\nWhile showing off her homemade amateur porn collection we ended up screwing on the sofa. Of course she taped us, as I realized later. I found out later she had hundreds of different recordings, most now on DVD but many older ones were still on VHS. Apparently normal sex wasn't real and exciting enough for her unless she could record it and then later masturbate while watching it over, again and again.\n\nShe wanted to fuck every single day, at a minimum, and admitted that she also masturbated up to dozen times a day in addition. I got the idea that she had a rotating stable of men that attempted to attend to her near endless sexual needs. I never saw any of them, but her bed sheets stayed pretty warm and the men came and went in some sort of carefully choreographed stage production so that our paths didn't cross.\n\nLike the Swinger gal, this babe of a lady wasn't quite ready to settle down into mundane married life just yet. That didn't stop me from banging her like a cheap drum for the next month until I found a tactful way to end the relationship. She then promised me a threesome with an old college roommate, but I'd had enough of that from the Stripper ladies.\n\n<p align=\"center\">*************</p>\n\n78. Ms. Bullshitter -- She tried hard to pretend that she was smart... but she wasn't. Her only real knowledge of world affairs came from the National Enquirer.\n\nWhile I really did want a smart woman to be my wife, I could have possibly tolerated her room temperature IQ. I just didn't like her well ingrained habit of making shit up right and left.\n\n<p align=\"center\">*************</p>\n\n79. The Goddess -- She was gorgeous and WAY out of my league -- she came across as being intelligent, articulate, well-educated, and down to Earth. She was a natural beauty and smoking hot looking with a luxurious, flowing red mane and flawless pale alabaster skin. She was a senior marketing executive from a top name brand corporation and she probably earned more in a week than I did in a year.\n\nI wanted and absolutely lusted after her in every possible way. I invited her right away to a second dinner date but she smiled and sadly shook her head no before kissing me on the cheek goodbye. I didn't wash that side of my face for a week.\n\n<p align=\"center\">*************</p>\n\n80. Ms. Calculating Drunk -- This one was a circus from the very start. She very most definitely wanted the dinner date, but she had arrived at the restaurant nearly a full hour early and made a good head start at the bar. Her bar tab, which was already impressive, somehow now magically appeared onto my dinner check. I paid it, very grudgingly.\n\nShe then suggested that we move back to the bar for a few more drinks; I agreed, but I clearly used the phrase 'separate tabs' to the bartender. My cunning and conniving alcoholic partner didn't seem to notice so I reminded the bartender (with a loud stage whisper) a few drinks later. She still didn't notice. I nursed three glasses of red wine while she took an extravagant tour of the world's top shelf liquors.\n\nI paid off the bartender with a pair of twenties for my own fifteen dollar tab and whispered that he might have a problem collecting the payment for my former dinner partner's bar tab. Then I took a good long healthy break in the restroom that took at least half an hour. Once I heard the loud yelling and screaming reach a fever pitch, I snuck a peak around the corner to watch the fun. As I figured, she couldn't pay her tab. Her three credit cards were all rejected in turn, and one was so overdue for late payment that the credit card machine signaled the bartender to seize and keep that card.\n\nEventually the police were called and Ms. Calculating Drunk was hauled off to jail for theft, the non-payment of a nearly five hundred dollar bar bill.\n\nBeing a softy, I did reluctantly pay her tab after she had been hauled off to jail, but told my friend Antonio the restaurant owner to keep this payment on the down-low and take her to court if necessary for her payment. I wanted to teach her a good lesson. She did eventually pay, about nine months later. Did she learn anything from the experience? Who knows... I certainly didn't care.\n\n<p align=\"center\">*************</p>\n\n81. Drunky McSmokestack -- Two wild uncontrollable drunks in a row? Yep, it happened. One of my cousins called me and said he set me up with an older friend of the young woman he was dating. They had decided on a nice steak house and we all agreed that we would all 'go dutch', everyone on their own tabs.\n\nThey all arrived at the restaurant and my first impression was, 'She could be hot, if she didn't look like she came from a trailer park'. In an insane fit of gentlemanly behavior, I offered to cover her food and just like that we were off to the races. She ordered three appetizers, all for herself, and one of the bigger steak meals and about five mixed drinks throughout the meal. There was never a moment when she wasn't smoking.\n\nAfter the meal she wanted to go to the bar and started ordering more drinks; she was already pretty drunk by this point. She then started loudly telling the strangers at the bar how she was would going to suck my balls right through my cock that night and mentioned, multiple times, how I wouldn't be able to walk the next day.\n\nThe woman sitting at the table next to me said that it sounded like I was in for an 'awesome night' and laughed. She was alone, prettier and sober.\n\n\"Not a chance in seven hells. She might mistake my balls for martini olives and try to eat them... and not in a fun, pleasant or delightful way!\" I said. I then paid 'my' tab and told the bartender that my chain-smoking friend was on her own, and then I left to go dancing with my new found friend.\n\nMy cousin and his date got Drunky back home more or less in one piece. He tried about a week later to set me up with her again and I laughed.\n\n\"Not only no, but Hell No! She smokes non-stop, drinks like a fish, and has the uncouth mouth of a whore on nickel night\".\n\nI honestly didn't know that she was right there in the next room listening! Nor did I care!\n\n<p align=\"center\">*************</p>\n\n82. Yet More Talking about Ex-boyfriends -- Unfortunately, my sudden dancing date from the steakhouse didn't turn out as well as I had hoped. She was still hung up on her ex and I had to hear all about it for the next four hours.\n\nDon't bring up your ex on a first date, especially to tell us how you're still excellent friends. We guys hear, 'I'm still way into this dude, but yeah, you're, uh, pretty OK.' This is one of my #1 dating peeves! When the girl says she's still 'really good friends' with her ex, she might as well be announcing to everyone that she'd still fuck him... if she isn't already. And if she isn't now, she will the first time you piss her off. No second date.\n\nIt's just courtesy. Don't talk about your ex or your boy-toys and I won't discuss my swinger date, or the amateur pornographer, or my parties with the pair of strippers. Paybacks can be hell.\n\n<p align=\"center\">*************</p>\n\n83. The AA Zealot -- Let me remind everyone that any and all zealots are bad news. This particular woman had just recently quit drinking, good for her... but my glass of wine was now highly insulting to her and she harangued me about the evils of alcohol long after it became interesting or amusing. I asked her if she was late to an AA meeting and suggested she go there and stay until one of her sponsors taught her something about moderating ones own lifestyle and not starting any crusades that they couldn't win... or at least wait until they had their one year of sobriety anniversary coin.\n\n<p align=\"center\">*************</p>\n\n84. Ms. Social Butterfly #1 -- She was actually far too busy to waste much time drinking coffee with me. She ran a complete nightly schedule of written appointments scheduled often weeks in advance. Her Day-Timer calendar was her bible. She volunteered for EVERYTHING at her church and her kid's school and was the 'go-to' woman for dozens of community and civic projects.\n\nGood riddance, if she wants to be a Queen Bee she can buzz around someone else's hive.\n\n<p align=\"center\">*************</p>",
        "85. Sharpie McEyebrows -- This coffee date was absolutely no fun at all. She kept a constipated expression on her face the entire twenty minutes we met. Her makeup was just well... disturbing. I suggested that she quit being a killjoy and instead she should go pluck her eyebrows into even further oblivion.\n\nI then discovered to my horror that she had received 'permanent makeup'. In fact, her eyebrows had been permanently laser removed and replaced with a less than realistic tattoo. Same also for her overly bright eyeliner, cheek blush and lipstick.\n\nShudder.\n\n<p align=\"center\">*************</p>\n\n86. Ms. Social Butterfly #2 -- I wondered if she had ever met the other Social Butterfly, if so they were undoubtedly hated rivals. She also ran a complete nightly schedule of appointments scheduled often weeks in advance, but with future planned dates. Apparently, she couldn't ever tolerate being alone by herself for even a moment.\n\nI quickly decided that the further away I kept myself from her, the better. She was showing unhealthy interest in organizing my own schedule. I told her that I was late for an amateur porno film shooting and went to go visit The Nympho Slut.\n\n<p align=\"center\">*************</p>\n\n87. Miss Princess -- She wanted the dinner and the full roses and violin treatment. She even expected me to pull out her chair for her. Her tiny little evening sequined clutch handbag contained only some lipstick, a little compact of coverup and a handkerchief. She acted like she was made out of porcelain, but she wasn't nearly as entertaining as a good old piece of antique Dresden fine china.\n\nMy follow-up advice for ladies that constantly act helpless, just like an anti-bellum Southern Belle straight from a plantation, is that men will see you as somebody who expects to be constantly taken care of. That may be a turn-on for some guys but it's a big turn-off for many others, like me. If you want a guy to constantly take care of you, don't be surprised when he doesn't treat you as an equal in the relationship.\n\n<p align=\"center\">*************</p>\n\n88. Ms. Social Butterfly #3 -- Fuck! How many of these sorts of women are out there? This busy gal always spends most of her evenings out with her girlfriends. A couple of drinks after work, bridge night, movie night, pottery class night, and art night at a gallery or museum, and of course long Friday nights at their favorite bar. It came as no surprise at all however that my usual one night a week out with the guys was going to be a big no-no for her. Go figure... what was good for goose was apparently not at all good for the gander.\n\nIt was even less of a surprise to learn that all of her friends had multiple divorces between them. Unspoken was the impression that her own previous three failed marriages had resulted because she spent more time and emotional energy on her friends than on her husband.\n\nAlso, any group of women that hit the same bar every single Friday night are usually looking for more than some bar snacks and to pound down a few glasses of cheap Chardonnay. They apparently wanted the right to have a little fling on occasion whenever the mood suited them.\n\nObviously this was trouble just waiting to happen. I decided to go home and add to my collection of Internet porn and wrangled a last second date with Rosie Palm and her four sisters... The Nympho Slut and I were finally on the outs after I discovered she'd posted some of our sex videos on YouPorn.\n\n<p align=\"center\">*************</p>\n\n89. Ms. Feminist Zealot -- Have I mentioned how much I hate all zealots? This one was a radical liberal who blamed me as a man and my lifestyle for destroying the entire planet... but for some reason she was convinced she could save me! She also exhibited extreme hardcore-feminist leanings that were going to be awfully hard to live with. She left the dinner table fast when I suggested the greatest punch ever thrown in professional boxing was when Mike Tyson beat-up his first wife. That was really cruel, but she was prodding on my last nerve.\n\nEquality in a relationship is fine. One partner being just a little more equal than the other sucks, and I'm not dealing with that ever again.\n\n<p align=\"center\">*************</p>\n\n90. Ms. Social Butterfly #4 -- Where do all of these desperately and pathetically lonely women come from? This one usually spend two to three nights a week out doing the elite social scene with the top movers and shakers of the city. Boy was she ever disappointed that I wasn't a millionaire and didn't even have a boat, let alone a yacht.\n\nThe less I say about her cult worship of certain far, far right wing fringe politicians, the better. Also her rabid gushing about her religious cult at the prestigious First Baptist Church nearly qualified her for the Zealot of the Year award... until I met a woman even crazier a few weeks later on.\n\n<p align=\"center\">*************</p>\n\n91. The Freak -- This poor gal actually made The Doormat look sane and well-adjusted. Really!\n\nTrust me. I don't want to hear about your love for autoerotic sexual role-playing games, like being fake raped and nearly (but not quite) strangled to death with your own pantyhose. The fact that you need sharp intense pain in order to achieve orgasm is not first date material, even for me!\n\nI decided to reuse the line about her bloody dress being marked Exhibit A on my bedroom floor, but it didn't frighten her off in the least. I then ran for Farah's help in getting this poor woman out of our caf\u00e9 and well out of my life.\n\nAlarmingly, I had at least three friends push me rather hard for her name and phone number. I didn't give it to them... I really didn't want to hear about any more details of her extreme sado-masochistic sex lifestyle.\n\n<p align=\"center\">*************</p>\n\n92. The Professional Paranoid -- She was suspicious of everything I offered her at our coffee date and had Farah replace her coffee often so that I couldn't secretly drug her and then 'date rape' her. What a total nutcase!\n\nThe 'run screaming for the hills moment' was when she commented that she knew a lot of people who were kiddy-diddlers. In fact, every man she meet seemed to turn out to be one. I didn't like the way she then looked at me. It had 'YOU'RE NEXT' written all over her.\n\nI told her to go away, that she was much too old for me... but could I see some cute bathtub pictures of her grandchildren?\n\nYes, she called the police on me, but I let Farah straighten them out. They already had her on their 'rubber room' list, as she phoned in several complaints about kiddy-diddlers running amok on the streets each and every day. Not one of her complaints had ever been even remotely substantiated.\n\nThe cops loved our coffee and pastries and within a week the local district station officers were coming in every morning and often late at night for their caffeine and sugar fixes. The safest business in the world is one that quickly gets the reputation of being a cop hangout, even when they're out of uniform. One idiot tried to stick up Farah's new husband several months later late one night and three off duty cops quickly had him covered. No one ever tried it again.\n\n<p align=\"center\">*************</p>\n\n93. Ms. Oblivious #2 -- Like the original Ms. Oblivious, this gal was darned near utterly clueless about anything around her... and nearly a hundred pounds overweight for good measure. She imagined herself as some sort of fairy princess, and like the Princess, she wanted the full treatment with nothing but the very best and lots of attention. But when she got up to powder her nose and knocked the chair over with her huge ass, she never noticed that I leaped and caught it... or pushed it back in later for her massive backside. Nor did she notice when her fat rump bashed into a dozen other chairs both to and from the restroom.\n\nIf she noticed anything that occurred in life past her nose, I seriously doubted it. She certainly didn't notice the dinner check and pointedly looked away when I started to loudly and obviously calculate a tip to give our waiter, whom she'd abused the entire dinner.\n\n<p align=\"center\">*************</p>\n\n94. The Compleat Zealot -- Yes, the archaic spelling is intentional. This zealot took the absolute top prize for being fifty pounds of crazy in just a ten-pound bag. She was so horrifying that it was just like a snake mesmerizing a mouse, I just couldn't look away. She was also quite as cute as a button and had a pert ass that I was longing to sodomize.\n\nOver dinner, drinks and two rounds of desserts, she tried to convert me at the first date to become a vegetarian, bicycle pedaling, democrat, and attend church with her on Saturday at her wacko new-age cult church where they talked to crystals.\n\nShe was such a magnificent train-wreck that it really hurt my conscience to inform her that I was a meat gobbling, truck polluting, dyed in the wool political moderate (everyone hates us). When that didn't faze her I then complained that the Catholic Church had really gone off the rails into heresy since the unfortunate reforms of Vatican II.\n\nI hinted, loudly, that I'd be more than willing to take her back to my place to discuss peace, love, mutual understanding... and a lot more love. Preferably physical. She smiled but said no, and her pert ass wiggled off un-buggered.\n\n<p align=\"center\">*************</p>\n\n95. Ms. Indian Brave on the Warpath -- If just a little makeup really brings out the beauty of a woman, then a ton of makeup donned with a trowel must be even better, right? Not hardly. She wore so much makeup that I have no idea what she actually looked like underneath. She proudly stated that it took her two hours to do her 'normal' everyday war paint and an hour every night to remove it.\n\nWay too high maintenance.\n\n<p align=\"center\">*************</p>\n\n96. Ms. Toilet Mouth -- Hey, I admit that I often swear like a sailor and don't mind a lady with a bit of an earthy mouth who can talk dirty to me in the bedroom, but not every other word out of her mouth, and not on a first date... and not loudly in a family caf\u00e9.\n\nSince she clearly knew what the word 'fuck' meant (she'd used it at least once a minute our entire date), I suggested to her that we quit the fucking pussyfooting and go back to my place to do some real fucking. Not surprisingly, this offended her and she slapped my face and left.\n\nHonestly I was a bit disappointed that she didn't say 'sure, let's ball!' She wasn't that much of a looker and didn't possess any long term qualities suitable to a relationship, I did had to admit that I was curious to find out how nasty I could get her talk in bed.\n\n<p align=\"center\">*************</p>\n\n97. The Compulsive Hoarder -- Ok, I'm pretty bad about buying and saving old junk. My shop is full of it and my house used to be full of it. Don't even ask about my still over-stuffed garage. But she was even worse than I was. She kept all of her trash saved up in bags in the kitchen by the back door for weeks, if not months. There were even more, older, full trash bags sitting against the house outside. Just in case she decided she needed to retrieve something back from the rubbish.\n\nIt wouldn't have surprised me in the least if there was a long dead relative still buried under heaps of trash somewhere in that house. Cringe.\n\n<p align=\"center\">*************</p>\n\n98. Not Being Jane Austin -- I couldn't believe it when she said that I simply failed to measure up because I wasn't a proper Mr. Darcy in the flesh. Just where did I put those knee-breeches and long waistcoat? The fact that I could in fact recite from memory the entire plot of Jane Austin's 'Persuasion' unfortunately didn't redeem me in her eyes in the slightest.\n\nShe really got up my nose, so I asked her when I needed to drop her back at Refuge Pines, a noted local private bughouse for the terminally demented.\n\n<p align=\"center\">*************</p>\n\n99. The Sports Widower -- I knew she liked sports... a lot, but it is not a religion for me. I'm rather partial to baseball and I don't mind watching our local pro football team lose (usually rather badly) but my life doesn't revolve around professional sports. Instead of a dinner date, she requested a date at the local ballpark. Well, that night at the ballpark ended up costing more than most dinner dates and then at the very end of the date she announced that she was a confirmed Lesbian.\n\nDamn it! She had scammed me! All she had really wanted was to score some nice tickets to see the game at someone else's expense. I did a little research and found that she had pulled this scam on at least three other gents at our dating service. We compared notes and then filed complaints and she was kicked out of the dating service, but I still see profiles very similar to hers still running on Craigslist. Caveat Emptor.\n\n<p align=\"center\">*************</p>\n\nI was now way more than just seriously pissed!\n\nThat was the last straw, I raged at everyone who would listen! The doomsday clock on the wall was going to stay stuck at 'Now Serving #100' because I was done with dating.\n\nDone -- finished -- fini!\n\nI was over and done with dating - for good. Frankly by this point in my life, I would have been hard pressed to thing think of anything nice to say about a woman, let alone select any of their allegedly fair sex for a long and very meaningful relationship.\n\nNo More!\n\n<p align=\"center\">*************</p>\n\nThis attitude lasted for about a week, and then the love of my life walked into our caf\u00e9.\n\nI was working one evening at cleaning up some old Chinese jade snuff bottles to make them ready for display in a showcase when I looked up suddenly into the eyes of sheer perfection.\n\n\"Farah says that you've gone off women... for good. Are you going to go bat for the other team now and chase after buff hairless pool boys? You do tend to look at women's asses more than their tits.\" The divine creature asked.\n\nI stuck my tongue out at her and blatted.\n\n\"Good stout and brave fellow! Once more into the breech! Besides, I've got a few hundred dollars invested in your dating pool, so get off your cute tight ass and go make some romance!\"\n\n\"Bah! The world, or at least this section of it, is remarkably short of suitable, attractive women of indeterminate years looking for a sane, reasonably normal and fairly well-adjusted relationship. Beside, my friend Antonio at my favorite Italian restaurant says he's suffered enough property damage and has promised to chuck the next woman I bring there into a dumpster.\"\n\n\"That would be a terrible shame, because Tony makes my chicken piccata just exactly the way I like it and he has never once complained about my dining habits. Tonight I'm in a lasagna mood though. Now see what you've done! You started to talk about food in front of a hungry woman and now I'm starving! It's all your entire fault... but to make up for it, I will allow you to make take me out to dinner. Are you ready to go? Besides I think that snuff bottle is actually soapstone and no amount of polishing is going to improve it. It also looks like a later Victorian era reproduction as well, but I'm sure you'd already noticed that.\"\n\nI hadn't. That was worth the price of dinner and then some!\n\n<p align=\"center\">*************</p>\n\nOur dinner date would have been a dream, except for the odd disfunctionality of the entire experience. Antonio not only was delighted to see me enter his restaurant with a new date, but he fixed up a special table for us with his best glassware and his finest Italian wine!\n\nI should have smelled the rat right from the start!\n\nBy dessert, when he declined to offer me the bill for payment of this magnificent feast, I knew the fix was in... especially when Antonio came over to give his niece a big hug and kiss. I'd been played and 'scammed again' - but in a delightfully different and nice sort of way.\n\nBesides, I'd already been in head over heels in love with her since the garlic bread first arrived at our table, long before our lasagnas arrived.\n\nEven dressed casually, she was a creature of beauty and elegance. She was cultured and very well educated but never wore it like a suit of armor. Her father, Antonio's brother, was in banking and her mother had been a Charleston, SC socialite. Obviously she had money, but she didn't flaunt it. She had many hobbies and interests, including antiques and owned and operated her own antiquarian bookstore. It was also quite clear that she had a wild sense of humor, a natural love of adventure and fun, and a perhaps a rather checkered past of intimate wildness with very unsuitable men, like me.\n\n\"So,\" She asked me with a laugh, \"what exactly were your qualifications for your future intended girlfriend?\"\n\n\"Oh, the usual small little things that every man looks for. A bisexual gourmet chef from a filthy rich family that looks good in stiletto heels and a set of pearls... and nothing else, and enjoys lots of quality time spent with her lord and master... mostly on her knees or all fours. Just the usual tiny things necessary for domestic bliss.\"\n\n\"Oh dear, I'm badly over-qualified then. I loved to diddle my best girlfriend at my private finishing school and my college roommates and I shared many wonderful hours with a rather special double-ended dildo on weekends when we couldn't get otherwise laid by prep school boys or outlaw bikers from ear to ear. My mother did send me to a famous cooking school in Connecticut after college and I've learned some really nasty fun things that can be done with really good chocolate mousse in bed while wearing seven inch pumps, but it makes the pearls hard to clean afterwards.\"\n\n\"I defer to your superior expertise then. Your resume for the very vacant position seems quite in order!\" I laughed.\n\n\"Quite,\" She agreed, \"but that's not the point. Now we'll see if you match my currently current qualifications... but on the other hand, I do also have an opening for a swarthy pool boy, if all else fails.\"\n\n<p align=\"center\">*************</p>\n\nFor the next two weeks she played the game of 'hard to get' down to perfection. She knew just how to keep me stimulated and primed for the chase after her. I'd call her pleading for another date but she'd always put me off... but in a very carefully calculated sort of way that sounded 'reasonable' and not too ego deflating. I'd grumble and be an utter bear to deal with at work for a few days and then call her up to try my fortune again... and then later yet again.\n\nFinally when I got that second date, it was just as good. She dolled herself up a bit and wore her lovely long rusty brown hair up into ringlets that teased the bare shoulders of her spaghetti strap dress. She didn't wear the full seven inch heels, but she carried herself like a goddess in the more mundane four inch ones. This dinner at a nice seafood restaurant I was allowed to pick up the tab, but she offered to pay the tip. I declined to let her, this time.\n\nGetting that third date took me another two full weeks of near pleading effort, but it was worth every moment of the wait. She wore an utterly amazing silk halter gown that was nearly backless almost down to her ass, and it showed off the glories of her flawless front cleavage to perfection. I'm still not entirely certain how she kept all of the important parts of herself covered. I spent the evening agog at her splendor and probably spilled about half of my dinner into my lap because I too agog with wonder to eat or chew properly.",
        "She grabbed the dinner bill before I even had a chance to look at it and gave me a beady-eyed stare that confirmed that tonight was 'her treat'. I offered to cover the tip and she accepted.\n\nIt was hard, but I acted the perfect gentleman all night and didn't ravish her right on the table at our restaurant, or later when we went dancing. The way her ass cheeks and tits moved under that thin dress guaranteed that she was the center of attention all night long... but she only had eyes for me! It was also quite clear that she wasn't wearing anything at all underneath that dress!\n\nThe smile on her face all of that magical evening told a different sort of story this time, namely 'play your cards right and you'll see this dress again... right on your bedroom floor.'\n\nYes, that dress did end up on my bedroom floor... and once again the next Saturday night on her bedroom floor, as I shared her bed and lovely house for the weekend. Yes, she really could cook and she was also an utterly delightful and delicious nasty whore in the bedroom! It went absolutely without saying that she was also every inch the lady, when her clothes were on.\n\nNo! I'm not going to give you all of the extremely naughty details! She was now my fianc\u00e9e and a real proper gentlemen never discusses the rather abundant charms and unusually creative sexual proclivities and inclinations of his wife, or wife-to-be.\n\nThe hook was in... fast hard and tight.\n\n<p align=\"center\">*************</p>\n\nIt didn't take long for her to relocate her bookstore and merge it painlessly and smoothly into the caf\u00e9 operation as an equal third partner. Soon her own wonderful tastes for acquiring new beautiful antique items began to improve my own stock. We began to constantly upgrade my old stock with nicer and more expensive items and our profits only further increased. Since Ankar hadn't yet rented out the other half of the retail space next to us, we made a sweetheart of a deal to rent out the extra 4000 sqf and the caf\u00e9 operation doubled in size, and soon also nearly doubled our sales.\n\nNearly immediately, I began to wonder how I functioned at all without her!\n\n<p align=\"center\">*************</p>\n\nThere was some debate about her entitlement for her claim of winning the contest jackpot of nearly ten thousand dollars with her lucky number of 100, since she was now a partner in the business, but once she announced that the entire contest award would be blown on a fancy party for everyone who had entered the contest pool, customers included, there were certainly no lingering hard feelings.\n\n<p align=\"center\">*************</p>\n\nOn our wedding night, I learned her last terrible secret. That she had heard about what a great guy I was from Antonio, her uncle, and she had clandestinely watched a few of my later horrific dinner dates from back in the kitchen. Sizing up my favorable qualities, she had deliberately gone to my caf\u00e9 and placed her bet on the very next available date number, number one hundred and set out to deliberately conquer me right from the very start!\n\nIn penance, I ordered down to room service for some chocolate mousse and she bounced deliciously out of bed just long enough to put on a long string of pearls and her highest heels. It was a long and very delightful night and we twice had to order more mousse!  "
    ],
    "authorname": "Stultus",
    "tags": [
        "dating"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/99-first-dates-ch-03"
}