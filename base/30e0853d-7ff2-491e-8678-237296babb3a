{
    "title": "Falling Snow Ch. 07",
    "pages": [
        "I'm pretty sure this going to be the second to last chapter of this book. As we get closer to the end there isn't going to be much in the way of sex, there's none in this chapter. As I said in the last chapter, chapters 6 & 7 were originally one chapter but were split up because I was having writers block and wanted to get what I had out. My plan of having one sex scene per chapter kind of went out the window because of this. You can expect a sex scene in chapter 8.\n\nHope you all enjoyed it. I read all comments, both public and private, even if I'm not the best at responding. So, vote and let me know what you think. -NP\n\n****\n\nDarkness had fallen by the time the car turned off the main road.\n\nThe difference was as stark as it was unnerving. \n\nThey left the slightly rough ride of the city street and transitioned onto the much smoother surface of a private road. As if the, \"No Trespassing,\" signs or the lack of other cars wasn't enough of a clue that they were now several miles outside of town.\n\nThey were moving further into the woods. The forest closed in on the edges of the road, creating a darkened tunnel that blocked out the light. Only the washed-out green of the trees and the shadows of the headlights could be seen outside of the vehicle. The driver was a dark and silent presence in the front seat. He hadn't said a word to either of them since they were picked up.\n\nTom turned around and realized he could no longer see the highway behind them. They were a long way from the school carnival now. The encroaching trees were making him claustrophobic and despite his earlier confidence, he was starting to get a bad feeling in the pit of his stomach. These were going to be the first warlocks, other than Sara, who he had any interactions with and he found himself feeling wholly unprepared. \n\n\"It's best to let me do the talking.\" Sara said. Tom snapped back to the conversation he was having with her.\n\n\"Right.\" He said.\n\n\"You're about to enter my world and there's a lot you don't know. It's best if I handle the politics.\" She said in disgust.\n\nTom could once again see the stars as the car exited the forest. They burned with a sudden intensity that forced the breath out of his lungs with their beauty. It had to be magic, he thought, in wonder. They were a fair distance away from the city but they weren't so far away from the city for the light pollution to be reduced to nothing. \n\nThe car stopped. A set of massive wrought iron gates finally stole his gaze away from the night sky. They were as ornate as they were imposing, a solid wall of iron in an intricately designed floral pattern. They must have cost a fortune, he thought. They were obviously designed to show off the wealth and class of the owners of the estate; Tom still got the feeling that they could survive a tank. Stretching out into the darkness on either side of the gates was an equally imposing stone wall topped with iron spikes of the same floral pattern..\n\nSara and Tom exited the car into the cool summer night.\n\n\"We're not driving all the way to the house?\" Tom asked as Sara stopped to pay the driver.\n\n\"Not tonight.\" She whispered.\n\nThey approached a smaller door set into the larger gate. A pair of burly men with no necks to speak of and matching black suits, stood on opposite sides of the door. Each of them had a matching bulge in the side of their jackets and wire earpieces that connected to radios at their waists. Tom could have sworn he saw the barrel of a gun sticking out of the bottom of one of their jackets.\n\n\"Name?\" One of the guards asked gruffly.\n\n\"You know who I am.\" Sara said as she entered the circle of illumination cast by the sole light above the door. She stared straight ahead like the guard wasn't even worth looking at.\n\nThe guard's previous bored eyes widened slightly as he rushed to open the door.\n\n\"Of course, have a wonderful evening, Ms. Van Westler.\"\n\nThat certainly got Tom's attention. His eyebrows rose slightly as he wordlessly followed Sara.\n\nThey passed through the door and onto a well-manicured lawn that stretched up the side of a gentle hill. The stars caught his attention once again as they walked. A cool evening dew caught the light of the stars, casting a thousand diamonds of light that drew his eyes to the top of the ridge. On top of the hill was a massive mansion in all of its glory, silhouette against the night sky. To the left was a dark and seemingly vast lake. It's mirror like and undisturbed waters a testament to the lack of neighbors in the area. The lawn they were walking on stretched around the entire property and with the exception of the lake, ended in woods as far as the eye could see.\n\nThey must be on a hell of a lot of private land, he thought. Not to mention the apparently private lake within driving distance of a major city.\n\nThe two of them set off up the hill. As they went they passed more men in matching black suits patrolling the grounds. They swept their flashlights across the lawn; small pockets of light among the inky blackness of the night. Somewhere in the distance a dog barked.\n\nTom was slightly surprised that they were walking all the way to the mansion. Images of expensive cars and valet parking came to mind. The only thing that he could think of was that security was so tight that the guests to the party couldn't be allowed to drive all the way up to the house. He mentioned his thoughts to Sara.\n\nShe had an amused if slightly tense expression on her cute face. \"I also imagine that much of the guest list didn't travel by car.\"\n\nTom was saved from asking another stupid question as they arrived at the front door. The mansion was no less impressive up close. Stone walls and high windows loomed over him, hinting at the glamour and wealth contained within. Stone gargoyles were placed along the entire outside circumference of the building. They stared down at him from ledges cut into the stonework.\n\nAn ornately dressed footman with thinning hair and a pencil mustache stood at attention in front of a pair of open and lavishly carved front doors. The light billowing out onto the front steps brought with it the sounds of the party beyond.\n\n\"Who stands before the house of Edwards this night?\" The man asked formally.\n\nSara all but rolled her eyes but when she spoke her tone was aristocratic perfection. \"Warlock Sara Van Westler and guest, unattached Warlock Thomas Thornton.\"\n\nIf the man was surprised, he hid it well. \"Very well then. Enter and be treated to the protection and hospitality of the noble house of Edwards.\" As the man turned away from them Sara actually did roll her eyes.\n\n\"I'm sure the Dean will be as hospitable as always.\" Sara muttered under her breath. \n\nTom marveled at the changes in Sara since their arrival. Her voice was suddenly crisp and well educated. Not at all her usual combination of annoyed and bossy. Even her posture and the way she walked seemed to have changed. She moved with an easy confidence, shoulders thrown back, back perfectly straight. She didn't walk so much as she glided forward, like she expected the world to bend to her every whim. Tom certainly did.\n\nThey walked into a large two-story entrance way. A large medallion was set into the center of the marble floor, depicting what Tom assumed was some sort of family crest. A pair of ornate staircases flanked the sides of the room and led to a balcony on the second story overlooking the entrance way. \n\nSmall groups of well-dressed people were standing around and conversing with each. Tom felt even more underdressed than when he picked up Sara earlier in the evening. They wore the type of clothing that was commissioned more than simply bought. Something he could never hope to complete with, certainly not with his big box store bought items.\n\nThey passed below the balcony overhead and through another set of carved wooden doors. The sounds of the party grew louder as their footsteps clicked on the expensive marble floors.\n\nWhen Tom finally got his first look at the approaching ballroom, he had to keep his jaw from hitting the floor at the sight that greeted them. \n\n****\n\n\"This isn't working.\" Aresta said seriously.\n\nShyira and Aresta were standing around Tom's dingy little bedroom looking intently at his cramped closet. A few boxes were stacked up in the corner. A game controller was perched precariously on top of a stack of games on one of the shelves. His overloaded laundry basket was overflowing onto the floor. Aresta looked at in with contempt.\n\n\"We should really find him a servant to clean up this mess.\"\n\n\"Volunteering?\"\n\nAresta's eyes shifted a little nervously to Shyira. \"No, I think I'll pass.\"\n\nShyira continued to stare forward intently. \"You must have patience, it will work.\" She said.\n\n\"It didn't work the last two times we tried.\" Aresta said in a huff. \n\n\"Then try again.\"\n\nAresta reached out her clawed hands. Her eyes glowed faintly red as she poured magic into a spell. The lights dimmed and flickered. The air crackled with power. An unseen breeze rustled her bubble gum pink and red hair. It was all very impressive, until nothing happened. The lights in the room returned to normal. Aresta gave out a frustration sound, walked up and kick the frame of the closet with her foot.\n\n\"I give up.\" Aresta said, throwing her clawed hands in the air.\n\n\"You're such an impatient slut, you know that.\" Shyira said mildly. She stepped forward and looked closely at the runes carved in the chipped wooden trim surrounding Tom's closet.\n\nShe stared intently at the runes until with one clawed hand she reached out and scratched an extra line into one of the runes. \n\n\"There, try it again.\"\n\nAresta swished her tail irritably and raised her hands again. This time the runes of the door glowed in time with her red eyes. The lights of the room dimmed as a steady crackling of power increased in volume, until with a pop, and the smell of brimstone, a portal of shimmering red light appeared.\n\nA look of girlish satisfaction passed over Shyira's demonic features as a blast of frigid air flew into the room.\n\n\"Good.\" She said simply.\n\nAresta looked on as the first of the icy creatures stepped through the portal and bowed in front of Shyira. The first creature was short and ugly. The skin that wasn't covered by animal skins was midnight blue and smooth like a baby. A second creature walked out and bowed as well. An air of overwhelming malevolent violence radiated from the pair. Their sharp teeth were only matched by the razor sharp knives of pure ice that they clutched in their stubbly little fingers.\n\nShyira paid them no mind as behind them, the massive furred form of Hughar stepped through the portal and bowed in front of Shyira. \"Mistress.\" He rasped respectfully. The two smaller creatures echoed Hughar's action, bowing even deeper.\n\n\"Mistress.\"\n\nShyira smiled.\n\n****\n\nTom could hear the party in full swing as they entered the antechamber of the main ballroom. The same family crest was inlaid into the marble floor of the circular room. Everywhere Tom looked he saw walls covered in paintings and mosaics. Although on closer inspection, the paintings looked more line with the Haunted Mansion in Disney Land than the manor of a wealthy dean. Along with the usual portraits showing well-bred and impeccably dressed men going back several generations, there were also several paintings a bit odder. One painting showed a beautiful woman in a traditional witch's outfit, riding a broom with a laughing toddler in her arms. Another showed a bearded man in the fashion of an American settler doing battle with a large horned beast inside of a cave. Yet another painting showed a group of naked women dancing around a bonfire in the middle of a dark forest at night.\n\nThey left antechamber and stepped through another set of doors into the ballroom proper. The room was teaming with people of all shapes and sizes and Tom wanted to see them all. Tom could see that tables were arranged on one half of the floor, where well-dressed people were sitting and socializing. An area along the wall had been designated the refreshments area and he could see a large area of the floor was serving as the dance floor. \n\nTom moved to take a step forward. Sara just as quickly took his hand and pulled him back. They caught each other's eyes for a moment. Sara's reproachful look vanished as her eyes widened slightly and her cheeks flushed beet red. She just as quickly released Tom's hand.\n\n\"Wait until we're announced.\" She said in a hushed whisper. Tom found her attempt to hide her embarrassment to be incredibly cute.\n\nAs if on cue, the footman stepped forward and raised his voice to the room, \"Announcing Warlock Sara Van Westler and her companion, unattached Warlock Thomas Thornton.\"\n\nWith that hey stepped forward. As they entered the room they warranted a few looks from the people close enough to the door to hear the announcement but most of the crowd was too caught up in the party to notice.\n\nTom caught Sara looking intently at the other end of the room. There a single table stood overlooking the floor from a raised platform. The host's table sat empty as Dean Henry Edwards was nowhere to be seen, much to Sara's annoyance.\n\nHis attention quickly moved away from Sara as he surveyed the room and got a better look at the crowd. What caught his attention first were the chandeliers. Four ornate chandeliers made of polished silver and crystal floated around the room above them. The light of a hundred candles shined through the crystal, creating a rainbow of colors that danced along the ceiling. \n\n\"Come on.\" Sara said, grabbing is arm and pulling him further into the party.\n\nThe party seem to be an international affair. Along with the types of warlocks he expected to find in his town, he saw warlocks from all over the world. What looked like a Hindu priest was having a discussion with an Asian man in a suit. He saw an African warlock using his wand to make a bunch of glowing bubbles dance through the air, to the delight of a gaggle of laughing children.\n\n\"This is amazing.\" Tom breathed.\n\nSara broke her gaze with the host's table to give Tom an alarmed look. \"What did I tell you about keeping your guard up?\"\n\nBut Tom wasn't listening. The man at the door may have been human but now that they were in the party proper it was clear to Tom that most of the waiting staff were not. Dozens of waiters moved through the party carrying trays of food and drinks. Tom saw blue skin and green, wings and horns. No single race comprised them all, although all of them were female. They wore matching sexy servant outfits. Thigh high stockings, with a skirt that was little more than a black band of cloth. A small butler blouse that left their flat stomachs exposed was finished off with matching black leather collars instead of bow ties.\n\nTom dragged Sara to the refreshment table where a massive selection of pastries and hors d'oeuvres greeted him. Having had his dinner so rudely interrupted, Tom was quick to grab a sandwich earning him another eye roll from Sara. \"Men,\" she murmured. Tom looked around for something to wash his food down with. Men and Women were filling goblets from a functioning fountain filled with a glowing red liquid. \n\n\"Come on.\" Sara said as she pulled Tom away from the refreshment table but not before he grabbed a couple of flutes of a bubbling purple drink. \"The whole point is for me to be making an appearance so we can get out of here.\"\n\n\"What's the hurry?\" Tom said.\n\nHe handed Sara one of the glasses and raised his own expectedly. Sara gave a frustrated sound before raising her own glass and downing it in one go. He expected a grape flavor but found that he couldn't quite place the slightly tart fruit that comprised the drink. It burned slightly from a high alcohol content as it went down his throat and left a pleasant aftertaste on his tongue. After one sip, he followed Sara's lead and tipped the rest back in one go. He resisted the urge to go back for another glass. He didn't want to end the night blacking out. Instead he gave Sara a big smile.\n\n\"And we will, just as soon as you give me a dance.\"\n\nDespite the sudden turn in the night's events, Tom hadn't forgotten that he was still on a date with Sara and he really wanted it to go well. Come hell or high water he wanted her to have a good time. Plus, he wasn't about to lose the opportunity to get Sara in his arms. Tom grabbed Sara's arm before she could react and dragged her in the opposite direction Sara was attempting to go.\n\nSara immediately stared to pull back from Tom. \"Oh no! We don't have time for this.\" She said.\n\n\"Sure, we do,\" he said confidently has he finished pulling her onto the dance floor just as the first song started.\n\nSara gave Tom an annoyed look that somehow only made her look cuter.\n\nThe song was a fast one, thank god. Tom wasn't sure he could have handled a slow dance. The speed also helped mask his own lack of dancing skills, which he was grateful for. He only stepped on Sara's feet once. \n\nSara really did look beautiful, Tom decided. \n\nHe'd been spending so much time in the company of supernatural bombshells that it was nice to have a real flesh and blood girl in front of him. Not that he had much more experience with human girls than with the non-human ones, still, it felt good just to be in her company.\n\nSara loosened up after the first song. The combination of nerves and alcohol finally allowing her to flash Tom her first real smile since they were so rudely interrupted during dinner. Tom pulled her closer to him as he sensed the change in her mood. What started as the type of awkward dance of acquaintances, all awkward movements and personal space, ended with Sara's arms thrown around Tom's neck and Tom's hands resting firmly on Sara's hips.\n\nThe second song ended and Tom moved one of his hands from Sara's hip and brushed his fingers across her cheek, feeling the soft pale skin underneath his fingers. He began to lean in, intent on stealing a kiss, when the next song started and broke the moment. \n\nThey started to dance again with renewed vigor. They moved across the dance floor with wild abandon. They bumped into several very well-dressed people as they danced. Years of upper class schooling made Sara horrified at the breaches of social etiquette, at first. By the end, the bumps into other people earned him only fits of giggles from her.\n\nTom hoped he was part of the reason she was finally having some fun, although the alcohol was obviously helping to loosen her up.\n\nSara finally pulled away from Tom as the song ended. \n\n\"Having fun yet?\" Tom asked.\n\n\"We're not supposed to be having fun.\" She hit Tom on the chest playfully. Her serious, chastising tone of voice in stark contrast with the smile on her face.\n\nShe was having fun despite herself. Tom has happy at her reaction, despite never getting another chance to grab a kiss.\n\n\"Come on, I need to find the dean if I ever want to get out of here tonight.\"\n\nShe moved to approach an elvish server. She was tall and blond and built like a brick house. She had dark mocha skin. Skin that would have suggested her homeland was somewhere tropical if she had been human. Tom had no idea what it meant for an elf. If it wasn't for the pointed ears or her canted purple eyes, she could have past for human. She bowed respectfully to Sara, inadvertently exposing the deep valley of her breasts in her low-cut butler outfit.\n\n\"Miss,\" She said demurely.\n\n\"Where is the dean?\"\n\n\"The master is in the summoning room.\"\n\n\"The summoning room?\" Sara asked.\n\n\"He will be observing one of the trainees attempt a summoning soon.\" After careful observation, Tom had decided that the elf's breasts were bigger than Sara's but still slightly smaller than Shyira's. After more careful thought he started to wonder if Shyira might be able to help him live out one of his Lord of the Rings fantasizes. ",
        "\"Good.\" Sara said. The elf bowed deeper as Sara turned to move away and caught Tom's eye.\n\n\"What were you looking at?\" Sara asked suspiciously.\n\n\"Nothing.\" Tom said too quickly as he adverted his eyes from the elvish bombshell.\n\nSara rolled her eyes. \"Come on. I need to find the dean and get this over with.\"\n\n\"Let's go then.\" Tom moved to follow Sara, who responded with a firm hand on his chest and a stern look on her pretty face.\n\n\"No. Bringing you to this party was already a mistake. The last thing an unattached warlock like you needs is to be on the dean's radar.\" She said.\n\n\"Did she say what I think she just said?\" Tom asked, ignoring her last statement and referring to the Elf's mention of a summoning. He fitted her with an equally stern and determined look.\n\nSara sighed and rolled her eyes, emitting defeat. \"Yes, if you can blend in with the crowd and try not to get caught, it looks like you can get a look at a proper summoning lesson tonight.\"\n\nTom started to look interested at the prospect as they moved through the crowd. Sara's amused expression to turn to a troubled one.\n\n\"Remember to keep your guard up. This place isn't what it seems.\"\n\nSara pulled him into a side hallway away from the loud party raging behind them. As they moved further down the hallway the d\u00e9cor of the mansion began to shift. Gone were the paneled walls of dark expensive wood, replaced with stone walls and vaulted gothic arches that ran the length of the hallway. \n\nTom couldn't shake the feeling that the hallway was declined slightly downward and that they were steadily heading further underground. The air was certainly getting colder and he thought he could catch the faintest whiff of damp stone in the air.\n\nAt the end of the hallway, a few people were milling around and talking in front of a stone archway in place of a door. Among them was the Dean's son, Chris and his little group of friends.\n\nChris swept his eyes up and down Sara's body as the two of them approached, a deep hunger in his gaze. His expression turned to a sneer as his eyes briefly met Tom's before addressing Sara.\n\n\"Why don't you ditch that geek and come hang out with a real man?\"\n\n\"If you find one be sure to introduce me.\" \n\nChris moved to block her from moving past him.\n\n\"If you know what's good for you, you'll be nicer to me.\" Chris said. He moved his hand and ran it down the side of Sara's face just like Tom had done on the dance floor.\n\nTom opened his mouth and took a step forward. Sara promptly stomped on Tom's foot. She moved her head forward until she was almost nose to nose with Chris. \"Don't forget who you're talking too Christopher.\"\n\nThey stared at each other intently, not just as individuals but as members of their respective families. Some high-class game of chicken that involved family honor and status and most importantly power. It all flew right over Tom's head but the rest of the people present seemed to be holding their collective breath. Chris blinked first and shifted his gaze away from Sara. \"Move.\" She said simply as she grabbed Tom's arm and pushed past him.\n\n\"You've got a lot of balls bringing him here,\" Chris said, \"he doesn't belong in my house.\"\n\nSara ignored him. Tom could tell Chris was pissed but he still caught him staring at Sara's ass as they entered the room beyond. Sara's demonstration of her status doing nothing to satiate his lust for her. If anything he probably wanted her even more because he couldn't have her.\n\n\"You're nothing.\" Chris said to Tom as they passed.\n\nTom's hand curled into a fist and the urge to turn around and punch him was almost overwhelming. It was only Sara's vague warning that allowed him to keep his cool.\n\nSara looked at him approvingly as they passed out of earshot of the doorway. \"Thank You.\n\n\"For what?\" Tom asked.\n\n\"For doing nothing. Status is everything with warlocks, it wouldn't have ended well if you had done anything to him.\" \n\n\"I was about too.\"\n\n\"I know.\" She said.\n\nTom's eyes adjusted to the dim light of the room and for the second time that night his words left him as he viewed the sight in front of him. This house is massive, he thought. \n\nThey entered into a small amphitheater of a sort. The room was circular and obviously sunken into the ground. Several rows of seating surrounded the entire circumference of the room. A few people were seated in small groups around the mostly empty room. They were obviously waiting on something. Their voices echoed off the doomed ceiling that immediately caught Tom's attention. The entirety of the white plastered ceiling was painted with elaborate frescoes depicting apocalyptic battles between warlocks and armies of demonic horrors. He sat enraptured at the paintings until Sara nudged him to descend the stairs.\n\nAt the bottom of the stairs they reached a metal railing that surrounded the circular pit in the center of the room. Several feet below them was a large concrete floor. A large metal pentagram was bolted to the floor. A candle sat glowing at every point of the pentagram and in the center of the summoning circle a goat was tied to a cinder block. Even in the dim light, Tom could see scorch marks and long dried stains on the floor.\n\nSeveral figures in long red robes stood along the walls of the pit and one slightly shorter figure stood right outside the summoning circle. Tom couldn't tell the gender of the person or even how old they were. What he could tell was that the person had their hands in the air and was chanting a long string of gibberish.\n\nHoly shit, he thought.\n\nThey took a seat in the first row and gazed down at the summoning.\n\nThe robed figures around the edges of the pit could also be seen chanting. Many of them swung metal thuribles of burning incense on long chains or swished wooden wands out in front of them. The perfumed smoke drifted lazily through the air, somehow giving the massive room a mysterious and claustrophobic feeling. It was all very intense, Tom decided. He was also certain that Shyira would have found it hilarious.\n\nThe speaker's chanting grew louder and louder. The summoner was a boy, Tom was sure of that now. His slightly nasally voice was audible now even if the ritualistic gibberish meant nothing to him. The chanting of the robbed figures also grew louder until at its climax the boy suddenly screamed out loudly in English.\n\n\"Arise creature of the beyond! Arise from the inferno of the pit and into the mortal realm. Arise and know your new master!\"\n\nThe steel embedded into the summoning circle suddenly flashed red. A wave of heat and the smell of brimstone filled the room as a shimming portal appeared where the summoning circle had once laid. Tom could feel the arid and pungent breeze now blowing out of the new hole in the ground. It left a grayish mist in the room that soon obscured the exits and increased the claustrophobic feeling Tom felt. One powerful clawed hand grabbed onto the edge of the portal now connecting our world to the pit. A red muscular demon wearing rusted chain mail and sporting a set of bone white horns hauled itself out of the newly created portal to hell and into our realm. \n\nThe boy took a hesitant step back. The head of the goat slid past him, leaving a long red streak of blood on the concrete.\n\n\"B-bow to your new M-master beast of the pit.\" The boy shouted nervously. The creature smiled as a sword of pure fire appeared in its clawed hand. Uh-Oh, Tom thought. The boy took another step back. The robed warlocks along the perimeter of the summoning pit took a step forward as they prepared to contain the creature.\n\nNow, Tom was sure that the warlocks present were all experienced and powerful practitioners. Maybe not a match for the creature individually, but as a group, the topic of whether they could take the creature down was certainly a matter open for debate. Physics and hard surfaces won that debate.\n\nWith a demonic roar of rage and bloodlust the creature sent out a shockwave of pure power out in every direction. From his vantage point some distance away from the summoning circle the shockwave felt like a hard slap to the face. Inside the pit, the warlocks moving to contain the creature were physically throw back, straight into the concrete wall of the enclosure. Some hit head first and immediately slumped to ground unconscious, a sheet of blood coating their faces. Others hit the wall at the wrong angle with the sickening snap of broken bones. They fell to the ground screaming. The room was soon filled the with sounds of pain and fear. Many of the spectators began running towards the exits.\n\nThe only one in the pit who wasn't any worse for wear was the little warlock who had summoned the monstrosity. Sure, he'd been blown to the ground by the shockwave but he'd been close enough to the summoning circle to avoid slamming into the wall. That left the unlucky kid as one of the only uninjured people in the summoning pit.\n\nLooking back on this moment. Tom would still never figure out what he was thinking but watching the boy regain his feet only to immediately begin shuffling back in pure terror, triggered something in Tom. He jumped out of his seat, vaulted over the nearby railing and jumped down into the summoning pit.\n\nHe felt the impact of the fall as pain shot up his legs. He even stumbled a little as he regained his feet. He certainly felt like a bad ass but upon later reflection he would admit it wasn't the most heroic thing to witness.\n\n\"Tom,\" Sara screamed, \"what the hell are you doing?\"\n\nThe boy ran behind him. The creature growled and took a step forward. Tom poured power into a shield of bluish light which he put between himself and the creature. The creature paused his advanced and...sniffed Tom, before making a sound of understanding.\n\n\"I can smell her on you,\" the creature said in a deep and raspy voice, \"move aside moral, leave me too my prey. I have no quarrel with the Lady of the Frost tonight.\"\n\n\"Can't do that.\" Tom said. He tried to sound much braver than he felt.\n\n\"Move.\" The creature bellowed. \n\nThe creature gave a grunt of irritation as one massive hoof took a step towards him. The floor physically shook as the creature put his full weight into the step. Tom poured more power into the shield.\n\n\"Stop!\" Tom yelled, trying not to let the tremor be heard in his voice. The creature stared at Tom, deep in concentration.\n\n\"So be it.\" The creature rasped.\n\nThe creature raised the massive arm holding the sword of pure fire. Tom was shaking as he readied his puny shield, sure that he was about to die for his stupid bravery.\n\nThe runes of the summoning circle glowed once more as a new portal appeared behind the creature. The mist began to clear as a great wind sucked the air of the room into the portal. An unseen force began pulling the creature backwards. Its hoofed feet screeched against the concrete as it struggled against the force dragging it backward. Deep scratches appeared in the concrete as it gave ground. When it reached the edge of the portal it had just enough time to give Tom a look of pure hate before it tipped over the side and fell back to hell.\n\nJust like that, the wind ceased as the portal closed. Tom stared in shock at where the creature had stood a moment before. \n\n\"Very good young man, VERY good!\" The direction of the voice wasn't immediately apparent.\n\nA well-dressed man stepped though the dissipating mist and onto the now solid floor where the demon had stood. His hands were thrown up in a welcoming gesture and a large smile plastered on his face.\n\n\"Very good!\"\n\nThe man's eyes swept over Tom with a calculating and intelligent look. Sara had joined Tom by then, having taken the more sensible route of the stairs. The man's eyes moved to Sara for a long moment before realization seemed to dawn on him\n\n\"Ah. If you're accompanying the young Miss Westler this evening than you must be Tom.\" He extended a hand as his eyes bore into him. \"My name is Dean Henry Edwards and I'm very happy to make your acquaintance.\"\n\nThey followed in the dean's wake like a couple of school kids on their way to detention. Sara's near constant look of alarm did nothing to help settle his stomach and was increasingly churning with nerves. \n\nThey passed through a door on the opposite side of the room and found themselves walking through an eerie stone hallway. Along both sides of the hallway were mounted antlers and horns of many different animals. Mixed with the usual deer and moose were other racks that Tom couldn't identify but were obviously supernatural in origin. They made him keenly uneasy if he looked at them too long.\n\nTom gave Sara a look and she answered the unspoken question. \"Hunting trophies.\" She quietly mouthed to him with disgusted curl of her lip. Tom noticed that she was careful to look at the deans back to make sure they wouldn't be overheard. At the end of the hallway they came to a grand spiral staircase of wrought iron that was tall enough that it must have led back into the mansion proper.\n\nHis guess was proven correct when, legs burning slightly, they reached the top of the stairs and were led into a posh office overlooking the lawn from the second floor. The walls were lined with shelves filled with books and other trinkets. Along with the chairs in front of a massive wooden desk over by an equally massive window, there were also seats in a semicircle surrounding a fireplace set in the wall. It was here that the dean directed them.\n\n\"So much excitement tonight.\" He said clapping his hands together. \"I'm sure what happened down in the summoning pit will make for an interesting story and you handled yourself so well down there. Makes me think that you must have other stories to tell an old man by the fire tonight.\" He said to the room.\n\nThe dean sat in the largest chair around the crackling fire. A crystal glass and decanter filled with a golden-brown liquid was set on a table to his right. To his left, sat a beautiful creature on a pillow on the ground. She was naked expect for a black collar around her neck. Tom could just make out the runes embedded in the leather. She had platinum blond hair and skin the color of a dark tan. If it wasn't for the horns and the cant to her eyes Tom could have mistaken her for human. She sat with her back straight, her eyes cast down to the floor. The dean didn't acknowledge her except to absentmindedly stroke her golden hair as he sat.\n\n\"Sit young man, let us speak as one warlock to another. I must admit that I know so very little about you.\"\n\n\"Well Dean\u2014.\" Tom began.\n\nA fatherly smile spread across Dean Edward's face. \"Henry, my boy. Henry will do just fine. There's no reason to be so formal here.\"\n\nTom doubted that. \"Well I don't exactly know much about you either...Henry.\"\n\nDean Edwards expression turned more calculating without completely losing the fatherly look. \"Now see that is curious. More curious than I knowing so little about you.\" He laughed at that. \"You must think that is an incredibly arrogant statement to make. You may be right but I am also very aware of my own position in society. You on the other had are a bit of an unknown quantity. A mysterious and unvouched for warlock showing up to a party with the daughter of a respectable and powerful family. Quite the scandal, some would even say.\" He winked at Tom at that last statement. Sara shifted in her seat uncomfortably. \n\n\"Well I only recently became a warlock.\" Tom said.\n\nSara attempted to kick Tom, but the damage had already been done.\n\n\"Ah, now that is interesting. Do you know what I see when I look upon you son?\"\n\n\"What?\"\n\n\"Just what you are, a young man. Impulsive, headstrong, with the one-track mind that all men share at that that age. Letting their little head doing the thinking for them, even when it isn't the wisest course of action.\" The dean glanced at Sara as he finished his sentence. Sara understood his meaning but resisted the urge to comment.\n\nTom didn't like where this conversation was going.\n\n\"A young man from an unknown family, seemingly ignorant of things he should have been aware of from adolescence. Dabbling in things he doesn't understand and couldn't possibly control.\"\n\nTom said nothing but he was sure the Dean could read his every though on his face.\n\n\"Plus, I'm hearing so many stories of strange occurrences on campus lately. A fire at one of our faculty buildings, a greenhouse full of priceless plants, destroyed by temperature shock of all things. Even a few disappearances thrown into the mix. One can't be helped but try and connect the dots, maybe go looking for someone who doesn't belong.\"\n\nThe dean's eyes were boring into Tom now. He still had the smile of a fatherly dean but his eyes screamed predator. \n\nThe Dean's tone turned more serious. \"You've summoned a demon from the pit, haven't you son? Perhaps even a succubus?\"\n\nA sinking feeling crept up Tom's legs and into the pit of his stomach. He couldn't possibly know that...could he? Tom suddenly got the feeling that the man he's been having such a casual conversation with might just be one of the most dangerous men that he'd ever met. He also got the feeling that he had fucked up big time by pressuring Sara to take him to this party. \n\nDean Edwards didn't seem to be waiting for an answer, he seemed to read his expression like a book. He shook his head in a disappoint manner. \"Regrettable,\" he said.\n\n\"S-so what if I have?\"\n\n\"I think that you do not yet understand the true nature of the Pit.\" He clasped his hands together and brought them to his chin, the patent professor granting his pupil a nugget of wisdom. \n\n\"Perhaps you are completely ignorant of the other worldly dimension we call the Pit,\" he paused, almost long enough for Tom to think he expected a response, \"but I don't think so. I think you've been lured in by the carnal pleasures the hellish beasts can offer the young and foolish. Understandably so.\"\n\nHe ran a finger across the cheek of the gorgeous creature kneeling at his feet. A shiver of apparent pleasure, but what Tom was quickly recognizing as revulsion, ran down her spine. \"You've yet to witness the horrors of the pit. The eldritch terrors that make men weep and cry out to their gods. The undying machinations of creatures who witnessed the birth of man and expect to see his death. Such terrors require a degree of protection and caution.\"\n\n\"And that's where you come in?\" Tom asked, his throat dry.\n\n\"Precisely.\" He said with a flourish of his hands. \"It is only through the constant vigilance of the Ordo Custos Terrae that humanity's enemies are kept at arm's length, that the Eternity gate is kept closed and the realms of man kept secure. That is the true purpose of Warlock society.\"\n\n\"According to some.\" Sara spoke at last.\n\nThe dean smiled but let her comment pass before turning back to Tom and letting out a deep sigh, \"which brings me to you.\"\n\nTom gulped.\n\n\"You understand that we take the training of new warlocks very seriously. An untrained warlock can be very dangerous, both to himself and others. And an unknown warlock raises many questions, questions I intend to have answers too.\"\n\nThe dean stared at Tom now. Such an intense stare that Tom wondered what he could possible be thinking while making such a face.\n\n\"I have so many things to discuss with you Tom, starting with what happened at the police station.\"\n\nTom had no idea what the dean was talking about and was sure he didn't want to know. Sara was tugging on his arm now, urging him to follow her out of the room. She had such a look of alarm on her face that he allowed her to pull him away from the intense stare of Dean Henry Edwards. The Dean made no attempt to stop them as they moved towards the door. Tom just barely heard his last words as the two of them stepped out of the room.\n\n\"Questions I have for you, young man and questions I will have answered.\"",
        "They reached the spiral staircase that led back down the way that they had come in record time. They took the steps two at a time as they descended. They stepped off the last stair into the hallway that would lead them back to the summoning room, only to find their way blocked by Chris Edwards and a collection of security guards.\n\n\"I told you, you should have been nicer to me.\" Chris said with a smug look.\n\n\"Move aside.\" Sara said.\n\nShe took a step forward as the security guards did the same. Sara paused looking uncertain. More men appeared behind them blocking the way back.\n\n\"You're going to wish you had spread your pretty little legs for me now bitch.\" Chris said as his eyes roamed over Sara.\n\n\"Hey Fuck yo\u2014.\" Tom had just enough time to register the sharp pain at the base of his skull. Sara watched in horror as a guard stepped up behind him and clubbed him in the back of the head with a submachine gun. Tom crumbled to the floor unconscious\n\nSara stared at Tom in shock as more guards surrounded Tom's limp form.\n\n\"Her too.\" Chris pointed to Sara. \n\nShe recovered from the shock of the moment. The guards hesitated as Sara locked eyes with Chris with a look of pure venom. \n\n\"You wouldn't dare.\" She said with a hard edge to her voice. She locked eyes with him like he was a vermin she wanted to stomp on. \"You're not the only one with a powerful father Christopher.\"\n\nChris looked like he wanted to push the issue, instead he broke eye contact with Sara. He pointed to Tom as he looked at one of the security guards, \"take him to one of the holding cells.\"\n\nMovement behind Sara caught her attention as Dean Edwards approached from the direction of the stairs. The dean shook his head impassionedly.\n\n\"Regrettable.\"\n\nA pair of goons in matching suits grabbed Tom under the arms and dragged his unconscious body further into the bowels of the mansion. They passed through a doorway and down a set of stairs. Sara continued to look at the empty doorway even after he was out of sight. With a troubled expression she turned on her heel and stomped away without another word.\n\nNo one tried to stop her.\n\n*****"
    ],
    "authorname": "NightPorter",
    "tags": [
        "succubi",
        "demon",
        "succubus",
        "university",
        "party",
        "geek",
        "warlock",
        "nerd",
        "date",
        "summoning"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/falling-snow-ch-07"
}