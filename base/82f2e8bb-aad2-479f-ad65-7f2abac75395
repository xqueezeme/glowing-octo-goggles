{
    "title": "The Twelve Vitali Ch. 24",
    "pages": [
        "Authors note: Hello everyone. Thank to everyone who takes the time to vote and comment, as always I have been overwhelmed by the generosity of the people who read this series. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\n\"I'm going to be late if you don't let go of me,\" Cat laughed. Matteo held Cat tightly against him and kissed her deeply, not wanting to let her go. He had stayed with her until she slept last night and had not left her side for more than a few minutes this morning as she packed her overnight bag and prepared to spend the night with Lucia at the small house she had taken over for her wedding preparations.\n\n\"I don't want to,\" he grumbled. \"Why can't you just stay here tonight?\" It wasn't just the guilt and awkwardness he still felt from the evening before that made him not want to let her go. He had a bad feeling. Like Phil's sixth sense or Dante's gut feeling, he just felt that something big was looming over them, even though he couldn't place exactly what that was.\n\n\"It's bad luck to see the bride the night before the wedding. Besides, you're the one who wanted all the traditions. It's too late now to complain and want a more modern wedding,\" she laughed again.\n\n\"Then stay at Papa's tonight, they have the room, and they would love to have you and Lucia both there. Theresa, especially, would love to have you there for all those last-minute things,\" he suggested.\n\n\"Theresa has me on speed dial, plus she has to be here for the gathering events. All your friends will be here soon, you have to let me go,\" she kissed him and wriggled against his hold on her again.\n\n\"Let her go, Matt,\" Ricco chuckled as he walked into the room. \"Nathanael is here early.\"\n\n\"Someone finally talking some sense,\" Cat shook her head as Matteo's grip on her loosened.\n\n\"He's only saying that so he can kiss you goodbye,\" Matteo grumbled.\n\n\"Is that a problem?\" Ricco asked, raising an eyebrow. He felt just as unsettled after last night as Matteo did. He'd fucked up, and for a second time he had believed she was leaving him.\n\n\"Here, keep my place warm while I say hello to Nathanael,\" Matteo finally let her go, passing her to Ricco.\n\n\"This is ridiculous, you realise,\" Cat sighed. \"Let me go and say hello to Matt's friend before I leave. You can hold my bag hostage if you like for a few minutes, but I have to leave soon or I will be late to meet Lucia.\" She wriggled out of his arms and picked up her bag, smiling as he took it from her and followed Matteo to the living room.\n\n\"Hello,\" Cat said, greeting the man who stood talking with Matteo.\n\n\"Hello,\" Nathanael turned toward her. \"I've heard so much about you, but I doubt he has even mentioned me, despite our long friendship.\"\n\n\"I'm just going to assume he said good things about me, so don't disillusion me if he hasn't,\" Cat grinned. \"I won't disillusion you either if you want to believe he talks about you all the time!\"\n\n\"Deal!\" Nathanael grinned, liking the woman immediately. \"I expect you need to be somewhere, so I can babysit him now and make sure he gets to the church on time.\"\n\n\"Oh, would you?\" Cat enthused. \"I do so worry about him when he's left to his own devices.\"\n\n\"I'm standing right here,\" Matteo groaned.\n\n\"We know, my love, but you and Ricco do tend to get into too much mischief when you're on your own, so it will be nice to have someone responsible here to keep you out of trouble, especially when Dante arrives,\" she said patronisingly, and included Ricco in her statement.\n\n\"You don't have to worry, Catriona. I'll keep an eye on them both,\" Nathanael reassured her. \"And if I don't, Phil will when he arrives.\"\n\n\"Now I really have to go, so give me my bag,\" she held her hand out to Ricco.\n\n\"Knox is coming up to get it,\" Ricco said. \"It's heavier than it looks.\"\n\n\"Good grief, if you have to. But I thought we decided that Hugh would drive me so Knox could be here in case you needed him?\" she looked between Matteo and Ricco.\n\n\"Changed my mind, I'll feel better knowing Knox is with you,\" Matteo said with a shrug. \"I need to know someone will make sure you get to the church on time. There's nothing that could stop me from being there tomorrow, and I would like to know you won't be late.\"\n\n\"I won't be late, we're doing this whether you like it or now,\" she laughed as Knox walked in and took her bag from Ricco. \"Don't have too much fun, I don't want to be bailing you out of jail or having to get you back from Timbuktu because your friends thought it would be fun to send you on a little trip,\" she turned to Ricco and Nathanael. \"No shaving his eyebrows or any other body parts, no permanent markers or any of that other stuff, understand?\"\n\n\"Yes, ma'am,\" Nathanael said seriously.\n\n\"Thank you,\" Cat smiled. \"Despite what you think, he did tell me about you, and I am glad you're here early to keep an eye on him for me, Nathanael. Don't let Dante or...\" Cat paused to think, \"Or Massimo, I think, convince him to do anything too dumb.\"\n\n\"He did tell you about us,\" Nathanael laughed.\n\nCat kissed the men goodbye and left with Knox to meet Lucia at the hotel where she and Dante had booked rooms. They had planned a relaxed lunch and a trip to the spa before heading over to the small house for the night, where her wedding dress waited. She walked into the hotel and, far from being late, she was early. She checked at reception to find that Lucia Battaglia had just checked-in and had left a message that she would meet Cat in the bar once she had been to see her room.\n\nCat ordered a coke, not wanting to end up drinking too much during the afternoon and evening, then find herself feeling awful on the morning of her wedding when she needed to look and feel her best. When Lucia arrived, they went into the restaurant and Cat left her to order a bottle of wine while she went to the bathroom. Cat was standing at the sink and washing her hands when the woman beside her struck up a conversation.\n\n\"You're Catriona Leonne, aren't you?\" the woman asked.\n\n\"Do I know you?\" Cat asked, looking at the woman. She was tall and extraordinarily beautiful, like a supermodel, and she held an air of superiority about her.\n\n\"No, though I'm sure you have probably heard my name mentioned. I'm one of Matteo's ... old friends. I'm here for the wedding,\" she said lightly. \"Veronica Maris,\" she held out her hand in greeting.\n\n\"Oh, I guess that makes sense,\" Cat tilted her head, not being able to place the name. \"It's quite disconcerting to have so many strangers know who I am and not have a clue whether I've met them before or if they are part of the Vitali family,\" Cat admitted.\n\n\"I hate to be rude, and I know this is the last place I should be asking this,\" she indicated the surrounding bathroom. \"Would you mind if we got a selfie? I'm sure you'll be surrounded by so many people tomorrow, it just won't be possible.\"\n\n\"Seriously? Why? You don't even know me?\" Cat shook her head.\n\n\"Trust me, everyone in the family knows the woman who managed to catch Matteo and make him settle down,\" Veronica laughed. \"My friends would love to know I met you in person. Honestly, you'd be doing me a huge favour, they will be so jealous!\" she wheedled. \"We never thought he would get past the loss of his great love, Nik Donati. They were the perfect couple.\"\n\n\"That's not the impression I got about their relationship,\" Cat said, feeling strangely defensive about her love for Matteo.\n\n\"When she died he threw himself into work and wouldn't socialise and have fun anymore, we barely saw him. He was a mess, trust me. It's nice he found someone who doesn't mind him still pining after his first love,\" Veronica smiled. \"You must be a very special woman to get him to the church, and I'd so love a picture with you. Please?\" she asked again.\n\n\"I'm having lunch with Lucia Donati. Why don't you come out to the table and she can take the picture for you?\" Cat asked, feeling like something was very wrong with what this woman was saying about Matteo and Nik.\n\n\"Selfies are always so much more intimate,\" Veronica said. \"It will only take a moment.\"\n\n\"Sure, I'll take one too,\" Cat said, thinking she would be asking Matteo about this woman and what she said regarding Nik. \"It will help me remember who I've met this weekend at the wedding. Matteo's family is just so big!\" She took her phone out of her purse.\n\n\"That's not necessary, I can text it to you,\" she said. \n\n\"Great, and I'll text mine to you!\" Cat said enthusiastically. \"Then I'll have your phone number as well.\" She stood close to Veronica and snapped a pic before the woman could argue more.\n\nVeronica was livid that his stupid woman wasn't doing what she asked, but she stood and took several pictures with Cat. This wasn't how this well-orchestrated 'accidental' meeting was supposed to go. She farewelled Cat, refusing to come to their table to meet Lucia, who would recognise her immediately, and hoped that Cat didn't show the photo too soon. She needed time to escape; this had not gone to plan at all.\n\nCat watched the woman practically run from the bathroom and the restaurant. She watched her until she lost sight of her leaving the building and entering the busy street outside, then she went back to see Lucia and ask advice as to what to do, because she knew something didn't sit right about the whole conversation.\n\n\"Do you know this woman?\" Cat held out her phone to Lucia as she came back to the table and took her seat.\n\n\"Fuck!\" Lucia exploded after staring at it for a few moments. \"Come on, we have to go! Do you have a driver?\"\n\n\"Yes, but...\" Cat began, confused by what was happening.\n\n\"Get him here now, we have to go! We have to go now!\" Lucia said, dragging Cat from the restaurant as she called Knox to pick them up.\n\nDino ran from the building to the sidewalk where they waited for the car and bundled them inside as soon as Knox pulled up, demanding Cat's phone from her and studying the picture in minute detail.\n\n\"What's going on?\" Cat whispered, panic rising in her chest as she looked at Lucia and her husband.\n\n\"You just had a conversation with a dead woman!\" Lucia said as if in shock.\n\n\"She was very much alive, I assure you!\" Cat said.\n\n\"That's the problem right there,\" Lucia nodded. \"We buried Veronica Maris Donati, Nik, my sister, two years ago!\"\n\nCat paled and blinked at Lucia, unbelievingly at a total loss for words. When they pulled up at the HQ building, Dino instructed Knox to take the girls to the safe house where they had planned to stay the night and not leave them, he would have extra security meet Knox there. Then he disappeared into the building, leaving Lucia to explain further to Cat and make her realise the danger the woman she had met posed.\n\n*****\n\nDino was escorted up to the penthouse by what he assumed was the Vitali's version of a watchman. Rather than a blue suit, he wore a black suit and shirt with a scarlet red tie. He walked in looking like thunder, holding his phone with the pictures he had forwarded from Cat's phone. He locked eyes with Dante and nodded and followed him into an office space, closing the door.\n\n\"This woman, claiming her name was Veronica Maris, just took selfies with Cat in the bathroom of the restaurant where she was meeting Lucy,\" Dino said, keeping his voice low and looking at his brother-in-law intently.\n\n\"It's not possible!\" Dante gasped.\n\n\"We both know it's impossible. The question is, how?\" Dino murmured.\n\n\"Where is Cat now?\" Dante demanded, trying to think.\n\n\"I sent her and Lucy to the safe house with Knox and the watchmen who travelled with us as security.\"\n\n\"Stay here,\" Dante said, and left the room, walking back into the living room where the friends had gathered. \"Rick,\" Dante said, trying to keep his anger and anxiety from his voice. \"Can I see you a minute? Yes, you can come too, Phil,\" he grumbled as Phil eyed him and began to walk in that direction. \"I'll explain in a minute, Nathanael,\" he shook his head as the other man began to get up from where he was sitting too.\n\n\"Where's Nik?\" Dante demanded of Rick as soon as they walked into the office and shut the door.\n\n\"You know where she is,\" Rick shrugged, eyeing Dino suspiciously.\n\n\"Then explain how this was taken less than half an ago here in Melbourne?\" Dino held out his phone with the picture of Veronica and Cat showing on the screen.\n\n\"It's got to be a look alike; I swear there are no breaches in our systems. I can confirm it, if you want, but that's not who you think it is, it's just a very good copy,\" Rick said.\n\n\"It does seem a bit convenient to have her show up on the eve of the wedding,\" Phil said as if working his way through the crisis. \"What if having Rick confirm Nik's whereabouts is what whoever set this up wants? They didn't get what they wanted through the data mining attack, so having Rick, here, panic and sound alarms that would have his family moving and making calls and exposing the hidden facility to get confirmation may be playing straight into their hands.\" The three men looked at Phil and back at each other.\n\n\"If she wanted to hurt or kidnap Cat she had every opportunity,\" Dino said, considering the idea. \"No one would have known until Lucia went to find her. Whoever is behind this wanted us to panic and hit the alarm buttons in every family. They probably have all the Papillo phone lines into various facilities hacked.\"\n\n\"I have a secure line to Leyton, I can confirm without compromising anything or anyone,\" Rick said, and texted his brother a code to contact him on a secure phone.\n\n\"Someone better fucking tell me what the hell is going on here!\" Matteo exploded through the door of the office, holding up his phone showing a similar photo to the one they had been looking at that had been sent to him anonymously.\n\n\"Tell me you haven't hit the panic alarm yet!\" Phil asked urgently, and, when Matteo nodded, he began to explain his theory about what was going on and why.\n\n\"Of all the people in that facility, Nik is the worst and would cause the most panic,\" Rick confirmed as he hung up from his brother. \"Leyton is doing a full sweep of all of their tech, including phones again, and will confirm no breaches of the hidden facility. He'll call us back as soon as he finds anything, but nothing is amiss. I agree with Phil, my first instinct was to push the panic button which would have had our watchmen all racing for the Ghost Town. It wouldn't have been hard to track the men themselves, even if the phone lines are clean. Even if Cat hadn't told us first, that text you just got proves they want you to panic and sound the alarms. The Papillo have been doing this for generations, looking after these people is our job, we've never had a breach, and I guarantee you there hasn't been one now. Let us handle it.\"\n\n\"Alright, but we better let the others know. They probably hadn't factored it into their scenario that we'd all be together today and be able to warn the other families about seeing dead people come back to life. Lookalikes, you think?\"\n\n\"It makes sense,\" Dante said slowly as they went back out to inform their friends who could warn their families in case they, too, had someone in the facility who might magically come back to life this weekend.\n\n\"I better warn Papa there is another ghost that could come back to haunt us this weekend, and the outcome would not be pleasant, I can assure you,\" Matteo said, having calmed down quickly once he knew Dino had taken steps to protect Cat.\n\n\"I'm going to go and see Cat and explain what we think is happening,\" Ricco said from behind him. \"We need to beef up security around her, too, if they are targeting you and this wedding, because we both know who else could show up.\"\n\n\"Get David and his mate to the safe house too,\" Matteo said, not willing to take any chances.\n\nRicco waited for confirmation from the Papillo before leaving, and decided on the spur of the moment and a large gut feeling to grab Lucca and take him with him. Lucca had become his go-to guy, just as he was for Matteo. His younger brother stepped up and did whatever needed to be done at a moment's notice and never once let them down. He had an uncanny knack of unravelling problems and conundrums to see to the heart of things. If anyone could help ease his mind about the strange occurrences, Lucca was the man to do it. He could imagine that Lucca was destined to take over the watchmen, after talking to Cat about her portrait, and how each of the Donati men seemed to be a natural fit for their roles on their table, as if it was preordained. He wouldn't have picked his and Matteo's leadership, though, until it happened.\n\n\"It's happening, isn't it?\" Lucca said softly as they pulled up at the house. \"You know, I always thought it would be the other way around and you would lead with Matteo as Oracle, though it could have been me if he hadn't have come back to family life.\"\n\n\"What?\" Ricco frowned at his brother.\n\n\"The new table, they're going to announce it,\" Lucca said as a statement, looking his brother in the eye. \"Up until six months ago, when you broke up with Cat, I thought it might have been you and me leading, together,\" he shrugged. \"I'm glad it's Matt, but I always thought you were the leader, or could have been.\"\n\n\"I always thought it would have been Cobi,\" Ricco admitted.\n\n\"Nah, we love him, he's our brother, but we wouldn't follow him into hell and back because he ordered us to,\" Lucca laughed. \"The difference is you wouldn't order us, you'd ask and expect our opinions or alternatives. Cobi was never going to be chair; he didn't love the rest of us enough to let us do our own thing without constant judgement and instruction on how to do it better.\"\n\nRicco thought about the changes in Jacobi since he'd realised the chair was not in his grasp after all. He'd changed, his relationships with all of his siblings had changed. Now that he wasn't big-brothering them, even his relationship with Maryanne had changed. It was all for good, but, as Lucca had pointed out, it was too late to make those changes.\n\n\"Yeah,\" Ricco said after a few moments thought. \"Sunday, after the wedding, when people least expect it, I imagine.\"\n\n\"Cat's a good choice,\" Lucca nodded. \"I guess they were waiting for that, I know Papa had wanted you to make it work with her. If you had we could have been looking at a far different scenario.\"\n\n\"True, but it's better this way. Cat makes him want family and love again, and Matteo makes me a better man. I'm not sure the bonds would have been as strong if she had stayed with me, I needed him as well as her,\" he said.\n\n\"She's an easy woman to love, can't say I'm not a little bit jealous,\" Lucca chuckled. \"Thanks for the honesty here, I appreciate it and won't say a word. We all know it's coming, just not when. Even the little genius's have worked out they will be the youngest men of the tables in a few decades. Sunday will take most of them by surprise.\" He opened his car door as if ending the conversation, but he turned back and looked Ricco in the eye. \"You know, even Mama loves her like she was one of her own, and that, in itself, is no small thing.\" He stepped out of the car.\n\n\"Ricco! What are you doing here?\" Cat gasped, opening the door. \"You can't come in! My dress is in the middle of the living room!\"\n\n\"Throw a sheet over it or something, because I'm coming in whether you like it or not, and so is Lucca. David and Mick are also on their way. So suck it up, princess,\" he chuckled.\n\n\"Lucca, help me out here!\" she pleaded.\n\n\"You know that any other time I would do anything for you, Cat, absolutely anything, but I just can't this time. Why don't you show us where the kitchen is and I'll make sure he doesn't peek and report back to Matteo that you are wearing the proverbial hessian sack. How about that?\" Lucca grinned.\n\n\"Fine, but no peeking!\" she warned both of them, wagging a finger in their faces. Cat turned and led them through the small house to the kitchen where they unloaded lunch and several good bottles of wine.",
        "\"We heard you had to skip lunch, and you shouldn't be drinking on an empty stomach, so we came to the rescue,\" Ricco said.\n\n\"Oh, thank God, decent wine. I love you right now!\" Lucia said happily.\n\n\"Dino called, I take it?\" Ricco asked.\n\n\"Yeah, seems like everyone over there thinks this Phil guy is a true psychic medium or something. Even if he wasn't, he makes a lot of sense,\" Lucia nodded.\n\n\"Matt's like that. It's as if he has a sixth sense when something is wrong with one of us and just shows up to help make it right again,\" Lucca chuckled. \"I can't explain it, he just knows stuff.\" He said without going into detail about the puzzles and problems he had presented his brother over time and never got the better of him.\n\n\"Dante's a bit like that, though he would never admit it,\" Lucia nodded. \"It's no wonder they're all friends, the weirdos!\" she laughed loudly.\n\nThe idea stuck in Ricco's brain, along with what Lucca had said in the car. What if he wasn't destined to be the oracle? What if he, like Jacobi, had just convinced himself that was his destiny? He considered the idea and decided he would make the time to talk to his fathers' tonight about why they had chosen the way they had.\n\n\"Gentlemen, I'd like you to meet Edith and Kate, who have been so kindly here helping me out with the wedding plans,\" she introduced the other two women as she came back into the room. \"We can eat in the dining room, if you like; the dress has been hidden now.\"\n\nRicco waited for David and Mick to arrive before explaining the seriousness of the situation in broader terms than he might have otherwise without the other two men there. It was important they knew the seriousness of the situation and that there would be extra security and staff around to cater to their needs so they wouldn't have to leave the house again unnecessarily until the wedding. If they did, they would go with someone from the security team.\n\n\"The life of the rich and famous,\" Mick chuckled. \"I don't get why I'm here, but, hey, good food and company, I'm not gonna complain, especially if you guys are going to stick around for a while.\"\n\n\"We can't stay that long, sorry, but I have reinforcements coming,\" Ricco grinned. \"I've got a couple of cousins I can call on who can talk footy with you. One you probably already know pretty well. Brady Vitali.\"\n\n\"Yeah, Brady is great,\" Mick acknowledged.\n\n*****\n\nMatteo sat with his friends and considered what was happening. Extra security was being placed on everyone, and there were recent photos of both Nik, or the woman pretending to be her, and Maria circulating amongst the watchmen. The thought that someone pretending to be his mother could possibly show up at the church tomorrow and throw the wedding into chaos loomed large in his mind, and he worried about it. It was with some relief that he saw Ricco return, knowing that people he trusted were in the house with Cat and the rest of her wedding party.\n\n\"You know this is what they wanted, right?\" Massimo sat back, his large frame dwarfing the armchair he sat in. \"They want to ruin the wedding for you. The rest of the future chairs are all married, you're the last. It wasn't hard for them to work it out. If they stop the wedding they have more time to plan an attack. Let's face it, we all know it's a shotgun wedding with the speed at which you did it.\"\n\n\"She's not pregnant!\" Matteo said defensively. \"Not that it would matter if she were.\"\n\n\"No, man, the shotgun is pointed at her, she has to marry you cause, let's face it, you're not the most eligible bachelor around anymore. You're getting old and grey, and you could use a little more exercise,\" he teased. \"Not everyone can be born blessed with my machismo.\" He chuckled, knowing his friend was super fit from daily workouts and eating healthy in an almost obsessive way.\n\n\"What can I say, she likes old and flabby, and I am putting a ring on it before she changes her mind and realises I have much younger brothers,\" Matteo shrugged.\n\n\"Shotgun wedding,\" Massimo pointed out. \"I knew you were rushing that woman down the aisle for some reason. Now, where's the booze and strippers? I came here for a bachelor party, not all this drama.\" He looked at Ricco who had invited them all to his gathering of friends.\n\n\"Who knew you'd all be here early and eager, must be a tough life in Adelaide,\" Ricco chuckled.\n\n\"Friggin' city of churches, man. Fun was outlawed there decades ago,\" he rolled his eyes. \"Why else do you think I put up with these freaks?\"\n\n\"Same reason I do, they get the girls,\" Ricco shrugged, holding back his smile. \"Wait until you meet Cat, you'll understand.\"\n\n\"I met her already,\" Nathanael said with a grin, knowing how curious the group was about the woman who brought Matteo back into the fold. \"She's lovely, if you like that tall, leggy Victoria's Secret model type of thing,\" he chuckled as Massimo's eyes widened. He'd seen her picture, but he knew reality was always different.\n\n\"Yeah, not my type these days, but she's pretty hot,\" Dante chimed in, \"If you like the whole supermodel thing,\" he chuckled, looking at Massimo. \"I imagine Matteo will keep her as far away from you as possible. You could break her with one of your hugs.\" \n\n\"I'm good with delicate things, just asked Connie,\" he waggled his bushy eyebrows.\n\n\"I can't do much about strippers, that's not my choice, but booze I can do, follow me,\" Ricco invited and led Massimo to the wet bar in the living room. \"You can play barman until the caterers get here.\"\n\nThe evening wore on and the men gathered became more relaxed as their families took over the warnings and the precautions needed to ensure the safety of everyone attending the wedding the next day, as well as their own family interests.\n\nGood food accompanied by good wine flowed seemingly without end as the friends, along with Matteo's brothers and a few of the cousins, all lounged around the beautiful penthouse. Lucca and Sebastian sat out on the deck enjoying the small breeze that flowed around them and talking quietly. Ricco joined them, sinking into one of the thickly cushioned wicker chairs.\n\n\"Care to let me in on the secrets?\" Ricco asked.\n\n\"Never seen Logan look so happy,\" Sebastian said, not skipping a beat. \"He's not saying much about why, but I get the feeling it's not the hunt, not if Matteo stayed out of it like he agreed.\"\n\n\"Have you given him his clues?\" Ricco tried not to smirk.\n\n\"Yeah, he pinned me down that night,\" Sebastian narrowed his eyes.\n\n\"I think Matteo's exact words to Lucca were, he wouldn't help from that point on, he was holding the clue list at the time,\" Ricco let his lip curl. \"Luckily Cat had only asked for his help that morning, or you could have been in real trouble.\"\n\n\"Shit, I knew he gave in too easily,\" Lucca said. \"They probably didn't even need our hints.\"\n\n\"They need them, but maybe not as badly as you think,\" he let his smirk show fully then. \"Logan's good mood might have something to do with the new job Matt offered, though. So I wouldn't be too worried about the hunt.\"\n\n\"New job?\" Sebastian asked, wondering if Logan was going to make it onto the table as one of the four or five cousins who would be needed to make up the numbers. He'd been hoping to be included in that number himself.\n\n\"He's going to be working with Cat on renovating or rebuilding the house out on the great ocean road. Matt gave it to her as an engagement present, or an enticement to say yes, I haven't quite worked out that deal yet,\" he chuckled.\n\n\"Are they going to keep the stable?\" Lucca asked.\n\n\"I expect so, I taught Cat to ride out there, she loved it. I can't imagine her wanting to tear it down,\" he said thoughtfully.\n\n\"Anyone else that we know coming on board in your household once he makes her Mrs. Vitali?\" Lucca asked, just taking it for granted that this was Ricco's household now too, even though it hasn't been announced yet.\n\n\"We all know it's coming,\" Sebastian shrugged. \"We just don't know when.\"\n\n\"Hugh is going to be her driver. I'm not sure if you know him, he doesn't usually make it to gatherings, that family is a bit far removed from the table. Arturo is coming on board as her assistant, and Logan will pretty much have stewardship of both properties once the project on the house is done, and if it gets done well,\" Ricco said quietly, keeping his voice low, just as they had. There was no need to make any announcements before Sunday. \"But, of course, a lot can change between now and then,\" he shrugged. \"Nothing is ever guaranteed.\"\n\n\"Too true,\" Lucca agreed.\n\n\"What's up?\" Chase asked, coming to join them with Arlo.\n\n\"Just realising that I am far too trusting of my devious older brothers,\" Lucca lamented. \"Did Tate get her hints from you yet?\" he asked.\n\n\"Sure, the same night,\" Chase narrowed his eyes.\n\n\"Matt's legal counsel, here, just pointed out that we should have taken more notice of the fine print in that deal,\" Lucca said disgustedly. \"I think Logan and Kalum are playing with us.\"\n\n\"I doubt Kalum has any idea,\" Ricco chuckled, \"And that's just the way Tate and Logan like it. I think they like the idea of pretending to be martyrs helping the newbies while making the most of every opportunity that presents itself. You know, Papa gave them a choice to change teams on the first day, and they both refused.\"\n\n\"I'm guessing Tate would love beating you as much as Logan will gloat over beating me for years to come if they pull it off,\" Sebastian chuckled to Chase.\n\n\"She won't get far on my hints, they were as cryptic as the clues themselves,\" Chase chuckled.\n\n\"Mine too,\" Sebastian said. \"So it seems no one played fair except probably Lucca, he's never been good at lying and deception. For someone who loves puzzles and games, he's surprisingly bad at playing them.\"\n\n\"Yeah, it's a shame, really, because he could have been our biggest threat this year,\" Chase nodded seriously as Lucca eyed them both as if about to defend himself, but burst out laughing instead.\n\n\"I don't know how I grew up to be such a nice guy with shits like you in my family,\" Lucca accused. \"Didn't you and Aria have some plan to sell Chase to the circus?\" Lucca turned to Zion for help.\n\n\"He wanted to go too badly, and, seriously, it was pretty doubtful we could get past Cosimo and Angela to pull it off,\" Zion admitted.\n\n\"Disappointing, really, because I would have fucking loved that,\" Chase grinned.\n\n\"It's not too late, we could probably still do it,\" Lucca said urbanely.\n\n\"Nah, it's too late, he's got no talent, and he's too old to learn anything that would make him attractive to the circus folk,\" Zion pondered the proposition.\n\n\"Look at him, he's a freak, they love that shit,\" Lucca chuckled.\n\n\"Don't be hating because I'm beautiful,\" Chase said with a grin. \"So, did you give Cat her hints?\"\n\n\"She hasn't asked,\" Lucca admitted. \"I expect she will next week. I don't think she's getting a honeymoon for a while.\"\n\n\"She doesn't have a passport, she's got to get that organised first,\" Ricco shrugged as curious eyes turned on him.\n\n\"As I'm not the groom, I might go check on her before it gets any later,\" Ricco came to his feet.\n\n\"Sit down and let her have her girl's night,\" Chase said grumpily. \"Tell me more about how you think Tate and Logan will beat us in the hunt.\"\n\n\"Because I'm on their team and they respond well to motivational military speeches,\" Kalum said in a serious tone. \"Plus, I told them that I hate to lose, and that second is the first loser and totally unacceptable. Logan's been carrying our team all week; he's been practically playing on his own most of the time. Cat and I went along with a couple of team ones, but he's been pulling all the big weight, while we sit back and reap the rewards. I think he likes having Tate as a side-kick though, nothing seems to bother that girl.\"\n\n\"That's Tate, Little Miss Sunshine,\" Chase chuckled. \"It can be annoying at times.\"\n\n\"I'm surprised she gets on so well with Logan's gloom and doom persona. Maybe it's a counterbalance,\" Sebastian mused. \"Or maybe she's rubbed off on him a bit, he does seem happier lately.\"\n\n\"Well, Kalum, I'm happy to make you the first loser,\" Chase grinned. \"I had planned to make Sebastian the first loser, but he can be second to you.\"\n\n\"We'll see how the dust settles at the end, shall we? It might be a nice wedding present for Cat if you let her win though,\" he grinned. \"I'm sure Lucca is already on board with that idea.\"\n\n\"I might have been, until I realised these two don't see me as a threat at all,\" Lucca grumbled. \"Seems like we have a real contest now. Anyone care to make an extra wager?\"\n\n\"I think I'll wait to see the standings on Sunday after the wedding,\" Sebastian said, considering the proposition and narrowing his eyes at Lucca.\n\n\"Ricco, got a few minutes?\" Nathanael asked, joining the group of Vitali men.\n\n\"Sure,\" Ricco said, getting to his feet. \"What's up?\" he asked, walking away from the group of men he had been sitting with to the far dimly lit end of the deck.\n\n\"It's a tough gig being the third wheel at the top of the table,\" Nathanael said tentatively. \"Matteo says he's all good with you though, and tried to explain why. I imagine it's different from his point of view, and I wanted to ask you about how you felt about it, seeing as you both seem pretty happy about the situation.\"\n\n\"It's probably different for me.\" Ricco let out a large breath. This was the last thing he expected to be asked about tonight. He skirted over his relationship with his twin brother, Jacobi, and how, if as they had thought he had become the chair, Ricco could very well be in the same position as Nathanael and living with a Kept rather than being involved in a real relationship. He talked about his failed relationship with Cat because of that commitment to his brother and his subsequent heartache when he found out about Matteo and Cat.\n\n\"When it became obvious that Matt and I would be forced together, and I had an opportunity to start a new and very different relationship with both Matt and Cat, I laid it all on the line. I was brutally honest and demanded the same from Matt.\" Ricco explained. \"I never said a word to, or went near Cat until Matteo was fully on board with the relationship. He knows I love him and would never do anything to hurt or betray him. He trusts me implicitly, not just with Cat, but with his heart too.\"\n\n\"Matt said I needed to date my brother, I don't think I understood what he meant at the time, but what you're saying is that I need an intimate relationship with him even more so than with the mother,\" Nathanael seemed to be thinking it through as he spoke.\n\n\"Not sexual, but loving and intimate. Talk about everything, including her,\" Ricco shrugged. \"Let him know what you need, it's not just about his needs or her needs, you need your needs to be met, or else how can you be effective as a team if you don't have that level of trust and respect?\"\n\n\"I've been thinking about it a lot since seeing Matt and Dante in Kuala Lumpur,\" Nathanael admitted. \"You know why the tables were set up this way. You've got to admit it's a bizarre tradition to have been kept in place for so long, even the most progressive families still insist upon it.\"\n\n\"The families have always been under attack; where there is light there is always a shadow. I expect they did it so that if one head of a family was cut off, there was another to stand strong while a new head grew in its place, like the Hydra,\" Ricco mused.\n\n\"I always thought it was to protect the mother and the bloodline. Until recently, travelling could take weeks or months, and a man in such a position wouldn't want to leave the mother alone. It's also not out of the realm of possibility that more than one man throughout history was infertile,\" Nathanael spoke as if he'd given it some thought.\n\n\"We're probably both right, but I was thinking of the Donatis'. Christo died pretty soon after becoming the Oracle,\" he said sadly. \"Just like this whole deal today with the look alike, we're all so well protected by the tables, we forget there are real threats out there.\"\n\n\"You seem worried, more so than the others,\" Nathanael looked at Ricco. \"You do realise all twelve tables have security here, now. I can't see anyone getting through the net they've constructed. Still, it doesn't pay to be complacent, I guess.\"\n\n\"We have another skeleton in Ghost Town, and I have a feeling they'll try to disrupt the wedding and cause panic, considering today's appearance didn't work,\" Ricco said. He wondered how Cat would cope if someone who looked like his mother stepped forward when the priest asked if anyone had a reason to object. She already had deep insecurities about being good enough for Matteo.\n\n*****\n\nCat woke early. The wedding still seemed a long way off, and she tried to lie in bed and rest, if not sleep. In the end, she gave up and picked up her phone. She knew Matteo would be awake already, she doubted he slept more than a couple of hours each night. She contemplated texting or calling him, but, after the strangeness of her meeting with Veronica yesterday, she wanted to hear his voice and know that he wasn't stressed or anxious about the day. She pressed his name and listened to it ring once before his voice sounded in her ear, making her smile and calming her nervousness.\n\n\"Good morning, Kitten,\" Matteo smiled through the phone. \"You're awake early.\"\n\n\"I know, and I thought, rather than cursing you silently for always waking me up so early, I'd call and curse you for it out loud,\" she teased.\n\n\"Are you nervous?\" he asked softly.\n\n\"A little. Are you?\" she asked in return.\n\n\"A lot,\" he chuckled. \"Just promise me you will be there on time and say all the right things in the right places without any buts or ifs or second guesses.\"\n\n\"I promise I will do nothing to mess up your big traditional fantasy wedding, I might even wear a pretty dress for you,\" she grinned.\n\n\"Well, if you have one lying around, that would be nice,\" he chuckled.\n\n\"I'll see what I can dig up, but you know me, I'm not into the whole girly frilly thing, so don't get your hopes up too high. I can, however, promise no yoga pants, if that helps,\" she offered.\n\n\"It does, but I was really hoping for lacey and frilly, something especially girly,\" he continued to laugh.\n\n\"Now you tell me! Geez some warning next time would be nice! I wonder if I have time this morning to run out shopping? Probably not, with the schedule my minders have me on,\" Cat sighed.\n\n\"Speaking of minders, you'll have a lot more security today, and Knox is going to stay with you, don't get in any car that isn't being driven by him. The woman yesterday may have been a look-alike, but I'm not taking any chances with you until I see you at the church,\" Matteo instructed.\n\n\"Yes, Sir!\" Cat responded in a clipped voice, rolling her eyes at him, even though he couldn't see her.\n\n\"I know you just rolled your eyes at me, but this is serious, Cat. I mean it! No one but Knox is to take you anywhere. I trust him to bring the woman I love safely to me at the church where I can finally tie her down with a gold band on her finger,\" Matteo's voice softened. \"I missed you last night; let's not do this sleeping in different beds thing again.\"\n\n\"I'd say yes, but I don't want to be dragged along on every business trip you take,\" she laughed. \"How's Ricco this morning?\"\n\n\"Pouting because you called me first,\" Matteo teased.\n\n\"Is he even awake yet?\" she asked, looking at her watch and seeing it was barely five thirty.\n\n\"Yep, he's sitting on the other side of my desk pouting, though it's not as bad as it was, because we're talking about him,\" Matteo laughed, and Cat imagined Ricco saying something unkind under his breath. \"He said something about saving the best for last. I'm trying to ignore it, seeing as he's my best man and all, and I don't want to have to hit him this morning.\"",
        "\"Good grief,\" Cat laughed. \"I can't leave you boys alone for one night without a fight breaking out?\"\n\n\"That's a very good reason why you should never do it again,\" Matteo said, sounding amused.\n\nThere was a light tap on her door, and Lucia poked her head into the room as Cat looked up and smiled.\n\n\"There's...\" Cat squealed as several men entered her room and a huge bear of a man came to lay down beside her.\n\n\"Cat!\" Matteo yelled into the phone. \"Cat!\" Panic laced his voice, and before she could speak the phone was taken from her hand.\n\n\"Hey, Matt, we came to have breakfast with the little woman before you marry her!\" Massimo laughed raucously, and Cat could hear Matteo swearing loudly through the phone.\n\n\"Not all of us, just those of us with the best stories about your misspent youth. We didn't want to overwhelm your bride-to-be,\" Massimo winked at Cat and passed her back the phone.\n\n\"Matt?\" she said, not sure what to make of this, as Massimo took out his own phone and snapped a picture of them in bed together. \"These are your friends?\"\n\n\"I'm so sorry, Kitten, just kick them out, and don't let Mo hug you,\" Matteo groaned.\n\n\"Which one is Mo?\" she asked, looking around her room.\n\n\"The one you're in bed with!\" Massimo chortled loudly enough for Matteo to hear.\n\n\"Is Dante there?\" Matteo asked, making Cat look around the room.\n\n\"Yes,\" she nodded, even though he couldn't see her.\n\n\"Could you pass him your phone, please?\" He asked, obviously trying to keep his voice calm.\n\n\"He'd like to talk to you,\" she held her phone out to Dante.\n\n\"Hey, buddy,\" Dante said in a relaxed, easy manner. \"What's up?\" He asked as if it was a normal day and Matt had called for a chat. \"Yeah... No way! I didn't bring a crane, and, despite popular belief, I don't have superhero strength... You're really grouchy in the mornings, you know that... You'd think you'd be grateful we all came to make sure security was good around here... Breakfast? Sure, we can do a second breakfast with you... Massimo can always eat enough for ten of us... Yeah, alright, I heard you... Mo, get out of Cat's bed, Matt's intimidated.\" Dante chuckled and passed the phone back to Cat.\n\n\"Please tell me you're wearing something that covers you entirely, like a flannelette granny nightgown or something,\" Matteo groaned, imagining her in bed with his friends all standing around gawking.\n\n\"No, Matt, I slept in a house full of strangers stark naked,\" Cat rolled her eyes again. \"Of course I have clothes on! Lucia wouldn't have let them in otherwise!\"\n\n\"Call me when they leave!\" he barked at her, showing his frustration.\n\n\"Well, when you ask me so sweetly, how could I possibly say no,\" she said acidly and hung up.\n\n\"Gentlemen, if you'll let me get up and change, I'll be right out,\" Cat said, looking at them all.\n\n\"We don't mind waiting,\" Massimo waggled his brows at her, making her laugh, but he got up from the bed.\n\n\"Now what was your wife's name again? Just so I know when I meet her tonight,\" Cat smiled softly at him.\n\n\"Connie, and she's going to love you!\" Massimo laughed loudly and left Cat's room, followed by the others.\n\n\"Sorry,\" Dante said before leaving the room. \"I couldn't stop them, so I came along to try and negate the consequences for Matt. Nice negligee, by the way,\" He chuckled and closed the door behind him and left her to get up and get dressed.\n\nCat looked down, she had been wearing one of Matteo's big soft shirts and boxers, she smiled, standing up and taking a selfie in the mirror. She sent it to Matt with the message: \"I was as well dressed as you usually are.\"\n\n\"Fuck, that's just as bad,\" Matteo sent back. \"You could make a sack look sexy, but you have always looked amazingly gorgeous in my clothes.\" \n\n\"See you at the church! I'll be the one in the sack, no time for shopping for a pretty dress now.\" Cat laughed as she hit send. She dressed quickly and pulled her hair into a ponytail before going out to meet Matteo's closest friends properly before starting her day.\n\n\"I love you, make sure Matt doesn't get too stressed out about things he can't control, please,\" she sent to Ricco with a smile. \"I'll call once the circus leaves.\"\n\n\"I've got the big guy, don't worry. I love you too, stay relaxed and enjoy the day,\" Ricco replied with heart emoticons.\n\n*****\n\nMatteo spent the morning worrying about Cat, worrying about his friends and worrying about the ceremony at the church, considering all the things that could go wrong. Ricco never left his side, constantly giving answers to all his unspoken worries as if reading his mind. His other brothers slowly arrived, with the little geniuses coming in last laughing and joking. They sat to eat a late lunch, and, while the others all seemed in a buoyant mood, Matteo picked at the food and brooded on everything that could go wrong. The appearance of Nik the day before had rattled him badly, and not even Ricco's reassurances could dispel the dark cloud he felt following him. He knew it would follow him until the priest said I do and he had kissed his wife.\n\nHe stood to get dressed, the photographer would be there soon to take some candid shots and then accompany them to the church. Another photographer would be arriving at the house where Cat was staying at the same time to take some candid shots before travelling with the ladies to the church. He imagined her walking up the aisle toward him. The dress, each time he imagined it, changed from one of white satin, straight and severe with no adornments, to a wide-skirted old-fashioned ball gown that floated like a cloud. He honestly had no idea what type of wedding dress she would choose.\n\n\"You're pretty quiet,\" Jacobi said, walking into the bedroom as Matteo finished dressing. \"Nervous?\"\n\n\"Not for the reasons most grooms are nervous,\" Matteo said. \"You heard what happened yesterday?\"\n\n\"Yeah, I've been working with Salvatore and Cosimo overnight to make sure nothing like that happens today. Rest easy, big brother. We've got your back,\" Jacobi grinned.\n\n\"I haven't seen much of you lately. Everything good? Maryanne and the baby?\" Matteo asked.\n\n\"Great, we've been living in our own little bubble; Maryanne is so ready to have this baby. There are only a few weeks to go until I'm a Papa,\" he grinned. Matteo realised how relaxed he seemed and was surprised. Jacobi had seemed stand-offish in recent weeks, and Matteo had thought he still harboured resentment over Ricco and his fathers' decisions regarding the table.\n\n\"I can't wait to be an Uncle,\" Matteo grinned. \"You're going to be an awesome Papa.\"\n\n\"You will be soon too, no doubt,\" Jacobi grinned with Matteo. \"Ricco tells me you've given Cat the house on the hill to renovate. I hope you're keeping the stables, maybe even improving them.\"\n\n\"Truthfully, I haven't given the house that much thought since meeting Cat; I've never been there with her. She and Ricco used to hang out there together,\" Matteo admitted.\n\n\"Still too much Nik there?\" Jacobi asked. \"Especially after yesterday?\"\n\n\"Yeah, probably, I don't know. I just have no interest in being there anymore while it is the way it is. I'm not the same man who built it anymore. Cat will make it her own, our own, and then I'll be happy to go back, with her,\" Matteo said. \"Nik's a footnote in my life now. I'm over it, so the effect of yesterday is not an emotional response to an ex, it's more a response to a psychopath being so close to the woman I love.\"\n\n\"Maryanne took it badly when she found out. It took Dante and me a long time to calm her down,\" he admitted. \"I was worried she would go into labour and ruin the wedding.\"\n\n\"She's always been a little highly strung,\" Matteo said gently, realising why they were having this conversation. \"I'm sure she'll be fine today, and if she goes into labour we'll deal with it, you can't help mother nature.\" Matteo grinned, letting his brother off the hook for any histrionics on his wife's behalf.\n\n\"I hope so,\" Jacobi said, having dropped Maryanne off at the house with the other women, feeling awful about the way she looked and felt.\n\n\"Trista really didn't listen to me when I told her what I wanted for the wedding,\" Matteo sighed, picking up the long black jacket.\n\n\"You're the one who wanted traditional,\" Jacobi grinned.\n\n\"Traditional, not medieval,\" Matteo groaned.\n\n\"At least you've got the height to pull off the Prince Charming look. The rest of us are struggling to pull it off,\" Jacobi chuckled. \"I like the black and gold theme. It's a subtle gold, not gaudy and showy.\"\n\n\"Prince Charming?\" Mateo turned to consider his brother. He'd only considered that the suits looked historical rather than fashionable. He hadn't considered the Prince Charming angle, and while he would have worn his suit, because Trista obviously knew what Cat and the girls were wearing, he suddenly felt better about it. He could do Prince Charming on his wedding day. \"Thanks, Cobi,\" he smiled. \"Let's go see how bad the others look.\"\n\n*****\n\nCat had spent the morning going from one adventure to another. First Matteo's friends had arrived for breakfast and made her laugh by telling stories about his teenage years and their annual camps where they all came together, something enforced by their parents from the age of twelve. She had fallen a little bit in love with each of them, even the serious-seeming Nathanael, who had smiled shyly at her but said little.\n\nThe men left only when the ladies began to arrive along with the team meant to pamper and prepare them for the day ahead. From that point on the house had become a hive of activity, with people coming and going in rapid succession and the security, who manned the door, constantly checking clipboards and making phone calls to ensure her safety.\n\nThe constant flow of people and the activity around her kept Cat so busy the time flew by and, before she knew it, she was standing in the living room looking like a princess bride with her glittering bridesmaids all smiling for the camera as causal shots were taken by the wedding photographer. David came into the room looking so handsome in his one of a kind suit specially created by Trista.\n\n\"Wow, you look so grown up!\" Cat stepped forward and grinned at her brother.\n\n\"It might have escaped your notice, but I've been a grown-up for a while now. You know, the job and house might have given you a clue that I've been adulting successfully without you looking after me this year,\" he chuckled.\n\n\"I haven't been a very good big sister this year, have I?\" she asked, allowing the photographer to arrange her into a pose with her brother.\n\n\"Are you kidding? You're the best! My boss is about to become my brother-in-law though, and that's a bit weird, but it's also job security for a lifetime,\" he chuckled. \"I wouldn't have gotten half the opportunities I have this year if it wasn't for you. I wouldn't have my home if it weren't for you. I wouldn't be standing here looking like this if it wasn't for you.\" He ran his fingers inside the collar of his shirt as if it was too tight.\n\n\"You were doing well at work, regardless, that had nothing to do with me,\" she smiled softly.\n\n\"We've both come a long way, haven't we,\" he agreed. \"Do you think we can get a shot with Mick in it? He's almost like another brother, isn't he?\"\n\n\"He is,\" she laughed softly, looking over to where Mick stood watching them and waved him over.\n\n\"You look amazing, Cat,\" Mick said with a touch of sadness in his voice.\n\n\"So do you,\" Cat said, brushing the shoulders of his suit as if there was lint on him. \"It feels like forever since I've spent any real time with you two.\"\n\n\"It has been forever, but we've consoled ourselves with the access we get to corporate boxes now that the footy season has started again,\" Mick chuckled. \"It mightn't be at our team's home ground, but, hey, who am I to complain.\"\n\n\"Another perk of the boss becoming my brother-in-law,\" David shrugged when Cat looked at him quizzically. \"You keep him too busy to use his membership, so I get to.\" He checked his watch. \"But once again my job is on the line if I don't get you to the church on time, one of the downsides of you marrying my boss,\" he sighed exaggeratedly.\n\n\"We better go then,\" she grinned. \"I wouldn't want you to lose your job because I was late.\"\n\nThere were four cars waiting for them as they emerged from the house. Cat smiled as she saw Knox open the door for her and, after several attempts to fold the full skirt while lifting the veil, she finally made it into the car without creasing too much of the delicate layered fabric as Kate and Edith supervised her. Kate and Edith would be following her to the church with the security detail, and she was glad of that, she wanted them there to see the fruition of all their hard work.\n\nCat gripped David's hand as he sat beside her. She was suddenly nervous as the car moved forward and out into the traffic. He looked at her, surprised.\n\n\"You okay?\" he asked with a frown.\n\n\"Nervous, don't let me trip or stumble up the aisle,\" Cat said by way of explanation.\n\n\"You have nothing to worry about,\" David chuckled. \"Matt's so whipped, he would marry you however you got there, even tripping and stumbling up the aisle.\"\n\n\"He's not whipped,\" she laughed.\n\n\"He is so whipped, everyone at work knows it. Apparently, he was pretty overbearing at work until you came along. A real control freak. Then, suddenly, people can do no wrong, and he's spending more and more time away from the company to be with you,\" David continued to chuckle. \"If anything goes wrong today, not only will Matt fire me, but most of the people I work with will come after me.\"\n\n\"Poor you. How awful it must be to be my little brother,\" she smiled lopsidedly.\n\n\"Meh, the perks balance things out,\" he chuckled. \"What other workplace would pay me to go to University to get my degree?\"\n\n\"Are you enjoying it?\" she asked.\n\n\"Would you be surprised if I said yes?\" he chuckled.\n\n\"Maybe, but I feel like we've both changed a lot since meeting the Vitali family,\" she admitted.\n\n\"In less than an hour you will be part of that family too,\" David pointed out, startling her.\n\n\"Mrs. Catriona Vitali,\" she said in a soft, thoughtful voice. \"Sounds strange, doesn't it.\"\n\n\"Only the Catriona part, Cat Vitali sounds just right,\" he grinned.\n\n*****\n\nMatteo stood at the end of the aisle with his brothers beside him. The cathedral was full to overflowing, and the security teams were having issues keeping the paparazzi at bay. He was surprised by how many media outlets had come to report on his wedding. He had been here for Jacobi's wedding and had stood at his side, but it wasn't until now that he truly appreciated the immensity of the cathedral, and wondered how long it would take the bridal party to walk the full length of the aisle before he would see his Kitten.\n\nThe music of the stringed orchestra changed in tone and timber, signalling the arrival of the first of the cars holding the wedding party. Matteo looked at his watch and considered that he would have at least another twenty minutes before he saw the woman he loved emerge from the ante-chamber into the aisle and begin the long slow walk toward him. He was uncharacteristically nervous. Not about the marriage itself, he'd never been surer of anything in his life. It was all the strange occurrences of the last weeks that had him on edge.\n\nHe was comforted to know that his friends, who were scattered amongst the guests, would be vigilant during the ceremony; they all believed that anything could happen after the appearance of the woman who looked like Nik Donati. Had his fathers known that he would need his friends and rely on them today? They were certainly the only men he truly trusted, aside of his brothers, and, like himself, they wielded the power of wealth and the loyalty of the people around them. There was a veritable army of security around his church, thanks to all twelve families.\n\nMatteo took a large breath and once again scanned the waiting crowd as he waited for the procession music to begin. Once he had said he wanted a traditional wedding, she had kept to that and had been guided by Theresa. Thankfully they had decided on Pachelbel's Canon in D rather than the bridal chorus, or march, which would have been too much tradition, even for him.\n\n\"How are you holding up, big guy?\" Ricco murmured from his position beside Matteo.\n\n\"Ready and willing, if a little impatient,\" Matteo nodded, obviously scanning the crowd for familiar faces that should belong to ghosts.\n\n\"We are surrounded by family and friends, Matt, nothing will go wrong. We have done everything we possibly can to ensure it,\" Ricco repeated the same words he had been uttering all day to his brother.\n\n\"I'll feel better once she is here where I can see her and protect her myself,\" Matteo grumbled.\n\n\"Me too,\" Ricco said, finally admitting the truth. He hated not being able to check on her today, but Matteo had insisted he not see her either, as this was, in some ways, their wedding, not just his alone. Ricco couldn't complain about being included in marriage, and he was beyond grateful to both his brother and the woman they loved for loving him in such a way. As Matt had said, once this day was over all of the dramas of recent weeks would be over, and they could finally settle down into family life together. Well, once the gathering was over, and the new table had been informed of their positions on it.\n\nRicco took a step forward and looked down the long wide central aisle of the cathedral for a sign from the front that the ladies were ready. He noticed that the Giant, Massimo, stood at the back of the church, and he wondered why until he saw three other men he recognised from Matteo's buck's night. Had Phil had one of his gut feelings? He wondered, and, not wanting to worry Matteo, said nothing and stepped back, making sure Matteo did not have a clear view of the four men.\n\n*****\n\nCat held tightly to David's hand, her anxiety growing by the second as the car moved slowly forward when the bridesmaids alighted from the lead cars. When her car finally pulled up at the door of the church, she was surprised to see Kalum opening her door, and then Logan move around to open David's car door for him.\n\n\"Hello,\" she greeted Kalum with a quizzical look.\n\n\"You look absolutely stunning,\" Kalum smiled and bent to kiss her cheek through the veil.\n\n\"Thank you. But would you like to tell me what's going on?\" She said in a no-nonsense voice.\n\n\"Just making sure you make it all the way up this long aisle,\" he grinned. \"Mia has been with you, and I am not as comfortable sitting with the fathers on my own as I would be if any of her siblings were there,\" he chuckled, \"so I get to be the usher of the bride.\"\n\n\"You are here to usher me into the church? Seriously?\" Cat laughed. \"Is he scared I will run away at the last moment?\"\n\n\"This is a crazy family we are joining. No one would blame you for having second thoughts,\" he said.\n\n\"You're such a romantic,\" she said, rolling her eyes. Cat was worried, particularly after yesterday and having to endure all of the added security today, but she was not having second thoughts. She was eager to get to Matteo, especially now, and she allowed Kate and Edith to fuss with her dress and veil before she stepped forward, nodding at her bridesmaids to begin the bridal procession. \"I'm ready,\" she smiled radiantly.\n\nDavid came to stand beside Cat as they entered the church with Kalum and Logan moving into position behind them. He smiled at his sister but looked around carefully. There was security everywhere he looked, and it prickled at his scalp that his sister seemed to need so much security since becoming involved in this family. At least with Ned they had known what to expect, this not knowing where the danger lurked was unnerving to him. He continued to scan the people he could see as they stood at the rear of the church.",
        "\"You are amazing,\" Lucia embraced her tightly before she turned to start her walk down the aisle. Cat giggled, Lucia had been a good friend for a long time now, and she was so glad she was here, and had been over the last twenty-four hours to help her navigate the minefield that was Matteo's past with Nik and his friends who had shown up that morning. Lucia had been a calming influence whenever anything seemed to get overwhelming, always ready with a joke or a glass of champagne. Cat loved her like a sister now.\n\n\"Let's do this then,\" Cat grinned at David and stepped to the end of the aisle, watching Lucia as she began the procession up the long aisle before moving herself. She stepped at a slow and stately pace, looking at the crowd for a familiar face or two and finding none at the rear of the church. She had known, with such a large gathering in the church, she wouldn't be able to see Matteo from this distance, but then he stepped into the centre of the aisle at the far end with a wide smile, making her breath catch.\n\nThe women in front of her obscured her view, and, when she looked up next, he had moved out of her line of sight again. With all thoughts of danger from the crowd forgotten, she wished she could hurry the rest of the way in her need to see and touch the man she loved. He made her feel safe, loved and cherished. Beside him she could be anything, do anything; he made her believe everything was possible. Cat smiled widely and looked straight ahead, no longer concerned about the crowd or the dangers that might be lurking there. Matteo had made sure this ceremony would be uninterrupted, and she would be safe. She trusted him absolutely, and she loved him with all her heart.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "ghosts",
        "friends",
        "wedding"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-24"
}