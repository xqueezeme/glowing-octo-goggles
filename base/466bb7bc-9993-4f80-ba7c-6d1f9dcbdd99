{
    "title": "A Clockwork Green Ch. 04",
    "pages": [
        "\"Well, this has certainly been a long job,\" I say, as I lean back against the railing of the skiff and let the wind whip through my hair. Mackenzie sits at the controls as we speed along the desert floor to the outermost edges of New Verdia; to where our latest employer is waiting for us. I've enjoyed working for this lady very much. She's a nice middle-aged woman, a former professor who still finds learning fun in all its forms. She has taken to calling us her 'daughters'. \"It took us just shy of two weeks.\"\n\n\"You think she's gonna have some of those fudge cookies? Those things kick ass.\" Every time we come back with more information about what she hired us to find, she offers us cookies and cake. Mackenzie always manages to take far more treats than she should, but The Professor encourages it, so it's no harm, no foul I suppose. I'm almost sorry this job is over. Mackenzie smacks her lips as she looks over the skiff's piloting wheel at me.\n\n\"Maybe. But this time you're not going to take more than one or two. Making such a pig of yourself like that in front of our host is just so ruuude!\"\n\n\"Hey, she likes it when I take more.\" She smiles a smug little grin that makes me roll my eyes. \"Yer just pissed 'cus she likes me better'n you.\"\n\n\"She likes us the same, you twit.\" I cross my arms and close my eyes in indignation. \"Besides, if she were to like one of us more than the other it'd be me. I'm the one with the pet name, after all.\"\n\n\"Blah blah blah, 'her little student', blah blah!\" Mackenzie apes, then looks at me with an impish grin. \"If she likes you so much, then how come I get more cookies than you?\"\n\nI stand upright, stamping my foot and clenching my fists in irritation. \"Because you take more! OOOOOOOHHH!\" I stalk off to the front of the skiff. Mackenzie's laughter chases me all the way there. \"Just get us there, you little brat. I have half a mind not to let you anywhere near me tonight, you know.\"\n\nShe laughs even louder, and has to shout to be heard over the wind. \"That ass is mine tonight, Cherry. You just think you got a say in the matter!\"\n\nI don't let her see my smile, turning to face forward as the skiff speeds along the floor of the desert. She is right, of course... but that doesn't mean I have to let her know that she is.\n\n***\n\n\"My daughters! It has beeen too loong!\" Professor Annette Tournesol waits at the door for us with a huge smile that neither of us can resist. Mackenzie's face nearly splits in half as we make our way up the path to her house. \n\nHer straight hair, more silver than gray, is pulled back into a ponytail. It hangs down to the small of her back, a stark contrast to the deep brown leather jacket she's wearing to ward off the chill of the approaching night. She wears a pair of silver glasses, and she has her hands clasped before her. She lost one of her arms in an accident long ago, and replaced it with a top of the line clockwork construct. I've seen Mackenzie attempting to study it surreptitiously on numerous occasions. Two pistols hang off of either side of the Professor's belt, and despite her pleasant demeanor she carries herself with the presence of a gunfighter. I'll bet she was formidable in front of a class, despite her diminutive frame.\n\nIt's been wonderful having a steady employer again. This was the sixth job she had for us. The three months between Heimdahl and her were fairly lean. Heimdahl, for all his many flaws, always had work. That kind of additional income was a huge relief, even if he did... no. What am I even saying?!  He was horrible, and no amount of money made up for his behavior. The thought of him blind and lost in his maze-of-a-compound brings a little smile to my face every morning. \n\nBut it's still wonderful to have a steady employer. \n\n\"Yes ma'am. We have a surprise for you as well.\" \n\nHer eyes widen, and she clasps her hands in front of her mouth. \"You... you found eet? Oh, my dears, tell me you have the boook!\"\n\nMackenzie pulls out the thick tome from her duster, holding it up for her see. \"We have your book.\"\n\nProfessor Tournesol's eyes light up, and that smile of hers grows brighter than I thought possible. \"Happy daaays, happy daaays! I made you both fudge cookies again, and this time I even baked up extra for you, Mack. Come insiiide!!\"\n\nMackenzie shoots me a smug look, as if to tell me 'I-told-you-so'. I slap at her in response, doing a bad job of hiding my irritation. The Professor laughs happily.\n\n\"Don't worry, little student. I adore you both eeeequally.\" She reaches out to hug us both as we finally make our way to her. Putting an arm around each of our waists, she guides us inside to the delightful smell of baked goods and the warmth of a happy home.\n\n***\n\nMackenzie sits at the table, stuffing a second cookie into her mouth and making little noises of enjoyment. I nibble on my first, watching intently as Annette thumbs through the book, pausing every once in a while to read a passage. She finally closes it and smiles at us both. \"This means a lot to me, you two. It will add a great deal more to my study of known magics in the world, and will prove invaluable in the near future.\"\n\n\"Doef ih haff fiwe maffics nn ih?\" Mackenzie is annihilating her fourth cookie. I cross my eyes in irritation and Annette laughs deeply.\n\n\"No, Mackenzie. It has more to do with earth magic than anything else.\"\n\nThat makes me perk up immediately. \"I... thought that form of arcana had died out here long ago, ma'am.\"\n\n\"It did, but just because it is no longer in use doesn't mean we can't study it. Right, my little student?\" She gets up to put the new tome away, and pats me gently on my head as she passes by. I blush a little at the sign of affection and nod, distracting myself with a small bite of the cookie. \"Plus, it being archaic and lost just makes it that much moore interesting to study.\" She reaches her book shelf, and slides it into a prepared slot before turning around to address us both. \"This wouldn't have been possible without you two. I want to do two things for you. The first is to double your pay for the work you've done.\"\n\n\"Oh, please don't. You've already paid us so well.\"\n\nMackenzie gulps down the last of her cookie, reaching for a fifth. \"Yeah. We liked working for you, P'fessor. You don't have to give us anymore than what you already have.\"\n\n\"Nonsense, my dears. This isn't a debaaate you're going to win.\" Her eyes twinkle at us merrily. \"Besides, there's a reeeeeson why I am doing this. There is an auction next weeeek over in the 'classieer' sections of New Verdia. I have one or two items I want to sell at that auuuuction, and I'd like for you to be my representatives theeere.\" She turns back to the bookcase, looking for a particular book. \"The extra money is for you to buy fancy dresses. The kind that respectable society, if you can indeed call it that, would expect you to have.\"\n\nMackenzie pauses her assault on the plate of baked goods to look up at Annette fearfully. \"A... dress? On me? I... I don't-\"\n\n\"Now, Mack. I know you fancy yourseeelf a hardened caster and a harder woman.\" Annette winks at her with an impish smile. \"But you're also veeery beautiful. You would look wonderful in a stylish dress. Besides, wouldn't you like to see Chaaaarlotte here in a nice ev-en-ing gown?\" Me? In a nice dress? Rubbing elbows with some of society's bright lights?! I sit in my chair, trying desperately to keep from squealing with happiness. Annette sees it and giggles. \"See? She can barely contain herself at the thought.\"\n\nMackenzie's eyes shift from me, to Annette and back. She smiles nervously at last, sheepishly nodding in agreement. \"Yeah. Yeah, I can do that.\"\n\n\"Wonderfuuul! It's not for a couple of weeeeks, so you have lots of time to plan. Here, let's seet down, shall we?\"\n\nProfessor Tournesol gives us a quick rundown of the items she wants to sell, actual worth, expected prices, etc. I pay attention, but the thought of me at that auction makes me smile to no end. I'm going to be sooo pretty... and so is Mackenzie! The world will get to see her how I see her at long last.\n\n***\n\n\"Seeya P'fessor! Thanks for the cookies!\" Mackenzie has the whole plate in front of her, happily bouncing along as she heads over to the skiff sitting just outside of Annette's property. The darkness is all-encompassing, so she flips on her flood lights for us. Despite the bounce in her step, Mackenzie's head swivels constantly. She's not eager to share her score with coyotes. \n\nI yawn at the late hour as the wind switches directions abruptly, carrying with it an odd sound. I spin around to see Annette leaning up against the doorjamb with her arms crossed over the book we brought back to her. She's smiling at both of us, but that's not what catches me off guard.\n\nShe's crying.\n\nThere is a bittersweet kind of melancholy written on her face, like a mother who's watching her children leave home to make a life of their own. I frown and open my mouth, but she waves a hand dismissively and smiles. \"Pay me no mind. When you get to be my age, everythiiing reminds you of something painful.\" She wipes her eyes with the sleeve of her jacket and comes over to kiss me on the forehead. \"Go. Get some rest. You have a big daaay coming up soon.\"\n\n\"I will.\" I turn to leave, then spin back and pull her into a gentle hug. \"Thank you, Professor. For everything.\" She tenses for a moment, and I worry that I may have gone one step too far. Then she wraps one arm around me and returns my embrace tightly, hugging me as if she doesn't want to let go.\n\n\"Be good and be saaafe, hija tierra.\" The language is unfamiliar to me, and I pull back slightly. She smiles and waves it off. \"Just a term of endearment I picked up in my travels, little student. Go now... and take caaare!\"\n\nSmiling, I pull away from the embrace and run to the skiff. Mackenzie waits for me there, confusion written all over her features.\n\n\"What was that about?\"\n\n\"I'm not sure. But she seems to be okay now.\" I glance over my shoulder one last time to see her wave at us happily. \"Come on, let's go home.\"\n\n***\n\nMackenzie's jaw drops open as she takes in everything around us. \"Are... are we in New Verdia anymore?\" She's wonder-struck, and I can't really blame her. Most everyone has this reaction the first time they see the Elysia District for themselves.\n\nEverything is clean, neat and... well, beautiful. Shops line the roads, selling all kinds of high-end baubles and items not meant for people like us. Little clockwork machines scurry along the walkways, some of them carrying messages while others pick up bits of trash. Flying machines zip along over our heads, eagerly performing tasks given to them by their owners. The people walking along the street are all sharply dressed, sporting the latest fashions while talking about the various topics of the day. Vast, almost palatial estates rise up in the distance, as if to reinforce the view that everything here is simply better. A clean, sharp white reigns supreme on the visual palette, but clear blue, shiny chrome, and a shade of magenta I read about as the color of the season all have a strong presence. \n\nAs we walk down one of the little side roads, her head darts back and forth as she takes in all the wonders Elysia has to offer. People walking by us take notice, but by and large make no comment as they go on about their business. They don't have to, at least as far as I am concerned. I can see it on their faces, plain as day. Bourgeois. Commoner. Lower class. I can feel the disgust as it radiates off of them, making me uncomfortable and bleeding off some of my enthusiasm for the day ahead. We can play dress-up all we want, and it wouldn't change the fact that we simply do not belong.\n\nThis was the reason why I fled New Verdia so long ago. I knew I would never become more than what I was here, another sewer rat from Nuovo district. I would forever be pigeon-holed into a particular place with no chance to do more than what I was born into. The people here live and die within the caste system that underpins this city like rotten scaffolding. \n\nI say nothing to her as she cranes her neck while looking about, clearly taken with the scene around her. I don't want to steal that wonder from her, and I have to admit it is a sight to behold. Everything here seems so delightful, and it gives you the sense that the sky's the limit. If you're one of the chosen.\n\nMackenzie and I? We would never be one of them. Not even if the Gods themselves came down from on high and granted us a boon.\n\n***\n\n\"Money talks, bullshit walks,\" Mackenzie said under her breath. I couldn't agree with her more. The store we're shopping in, Pierre's, tried to turn us away. The flash of money almost didn't convince them either. My irritation is another thought to be saved for later. I. Want. To. SHOOOOOOOOOP!!! \n\nThe auction is still a week away yet, but any excuse I can take to look at lovely things and model pretty clothes is a day that is unquestionably good in my book. And the best part is that both Mackenzie and I are going to walk away with pretties that will be ours to keep!\n\nTo say that I am giddy would be like saying New Verdia is arid; one hell of an understatement.\n\nMackenzie does nothing but laugh as I bounce from one display to the next, admiring each dress. A purple and blue slip with floral patterns catches my eye, but I quickly dismiss it as being too gaudy. I want to look respectable, yet sexy at the same time. That would be something a little girl would wear.\n\nThen, I see it.\n\nIt's a demure variation of the little black dress, but it looks flawless. It's strapless, and would let me display my favorite amethyst necklace prominently. The hem of the dress should come to about mid-thigh, and I can tell even now that it'd hug my form sooo deliciously. Throw in a little black purse and spaghetti strapped stiletto heels and... Talk about elegance and sexiness combined! I cannot believe this is my life now!!\n\nI gingerly pull it off of the rack and set it up to my chest to get an idea of how it'd look on me, and to show Mackenzie my new find. She stops laughing, her eyes slowly growing wider as her jaw lowers.\n\n\"What do you think? Maybe a pair of-\"\n\n\"Dressin' room. Now.\" She is actually leering at me. There is unbridled lust in her eyes as she grabs me by the shoulders and spins me around. I don't exactly fight her as she pushes me towards the changing rooms.\n\n\"Okay, okay! I'm guessing you want me to try this on,\" I laugh. I almost trip as Mackenzie shoves me along. She throws open the door to a room, pushes me inside, and slams the door shut behind her. Then she grabs me by the shoulders, twirls me around, and comes within inches of my face. \n\n\"I have to see you in that dress!\"\n\n\"Mackenzie, what's gotten into-\"\n\n\"Please!\"\n\nI smile at her sweetly, nodding with a slight flush as I undo the buttons on my surcoat. I do love this dress, and I can't wait to see what I look like in it. My motivations for wanting to see it might be juuuust a little different than hers though. I take my time undressing, making it a little ritual whenever I strip. I know I may be toying with her, but we're in public.\n\nFinally, I am ready to slip into the dress. I can hear her pout behind me. \"C'mon, turn around so I can see you!\"\n\nI toss my head as I look over my shoulder. \"No, Mackenzie. We're here to go clothes shopping, so you can see me when I'm in the dress. Not before.\" I offer her a smug smile as I pick up the dress, taking care not to show her anything. I can feel her frustration as I shimmy into the garment, making minor adjustments and tweaking it before finally turning around.\n\n\"Well, what do you think?\" I'm asking her, but I already know that I love it!  It fits me like a glove, and the only word I can think of that describes how I feel wearing it is 'scrumptious'. An image of a delicate chocolate wrapped in a silky confectioner's tissue flits across my mind, and I can't help but giggle.\n\nI have to have this dress. It's perfect.\n\nMackenzie stares at me with an open-mouthed, drooling leer. If I'm that sweet little chocolate, I know for a fact she sees herself eating me up. Gods, I almost can't stop squirming at that thought.\n\n\"Uh... uhm.\" That's all she gets out of her mouth.\n\n\"Do you like it?\"\n\n\"Uh... uh huh.\" Oh, I have her so worked up, and there's nothing she can do about it here. This is turning out to be even more fun than I had thought!\n\nI spin around to the mirror, striking various poses while admiring my reflection. No, there's no need to look any further. This is what I'm going to buy. Still, there's no reason why I can't have a little fun. \n\nAfter a few minutes, I finally look in the mirror and sigh. \"Alright!l We still need to get your dress, and I need to find a nice pair of heels.\" I strip down and step out of it, and then gingerly hang it up and set it to the side.\n\nSomething hitting the ground catches my attention, bouncing around with the 'ping' of metal. Oh, it's a coin. It must've fallen out of Mackenzie's pocket or something. I bend over to pick it up only to hear the door slam behind me. Startled, I instinctively grab for my clothes, only find that they're not there. Mackenzie, my clothes, and the dress are gone!\n\nShe took everything I could possibly wear! I'm naked, and with no way out of the room!\n\nSeconds pass like hours...\n\nAfter what seems like an eternity, Mackenzie saunters back into the dressing room wearing a smug little smile. \"There, now we're talking!\"\n\nI race to put an arm over my chest to cover my breasts while trying to hide my growing erection behind the other hand. \"What did you do with my clothes?!\" My voice is little more than a hoarse whisper. \"There are so many people around. How am I supposed to get out of here?\"\n\n\"They're safe,\" she says haughtily, \"but you ain't gettin' them back until you do what I tell you to.\" Mackenzie licks her lips as her eyes caress my body.\n\n\"W-what... what do you want me to do?\" \n\nShe grins as she reaches out to cup my chin in her hand. \"Get yourself off for me, Cherry.\"\n\n\"Here? I can't! People will know!\"\n\n\"Then I guess you're gonna to have to figure out a way to get home naked, huh?\"\n\nI can feel my face flush deeply as I bite my lower lip. Mackenzie smiles impishly at the fact that I am hard and throbbing now, the head of my cock bouncing in mid air as if begging to be touched.\n\n\"You'll... you'll give me back my clothes if I do?\"\n\n\"It's a promise, baby girl.\"\n\nGods, I love this so. I slowly drop my arms to my sides as I stand up straight and look meekly around, noticing the small bench behind me. I step back to the side and prop my right foot up on it.\n\n\"Mmm, that's it Cherry. Show me fuckin' everything.\" Mackenzie puts her hand to her mouth, biting her index finger before licking it lustfully. \n\n\"D-don't talk like that. It makes me squirm so,\" I stammer, as I reach down with my right hand and and gingerly take up my cock. My other hand slides up to one of my breasts and begins to tease the nipple, pinching and tugging gently on it.\n\n\"Gods, you're cute as hell.\" Mackenzie starts teasing one of her pigtails over and over in her fingers as she stares at me. \"You look so fuckin' hot right now!\"\n\nMy teeth clamp down on my lip. My cheeks are so red, I feel like I must be glowing. The thrill of being watched, of being caught, is gradually joined by the wondrous physical sensation as I slide my hand back and forth. Slowly at first. A small moan escapes. ",
        "\"You... you're being so m-mean to me right now. Uhnn! Making me b-be naughty like this.\" \n\nI'm only vaguely aware of the fact that I am shifting my weight onto the leg balanced on the bench, and that I'm rocking my hips back and forth. Gods, what kind of pervert am I to be doing this? Ever since that episode with Heimdahl, I haven't been able to get the idea of being watched out of my head. Maybe I should stop. Good people don't do this kind of thing...\n\nAnd then I see the look on Mackenzie's face. I see her slide a hand down her own trousers, though it's obvious by the swell that her cock needs no coaxing. She is staring at me desperately, watching me with a hunger that sends a shiver up my spine. Ripples of delight dance over my scalp.\n\n\"Cherry,\" she whispers, as though she were out of breath. Suddenly I don't give one sweet damn about being a good girl anymore. I want to be my Mackenzie's nasty little plaything, and she's going to get such a show here.\n\n\"Y-you like seeing me... like this, don't you my Sweetness?\" I roll my hips around and arch my back, thrusting my erection out at her while stroking it faster. My posturing makes her whimper as she takes a step forward, and it's becoming clear to me that she's starting to lose what remaining willpower she has left. \"Oh, I'm having... having such an eff-ffect on m-my love, aren't I.\" My lips quiver as my fingertips tease my swollen head. I reverse the arch of my back to stick my backside out a little, and reach back with the other hand to slide two fingers into my ass. My mewling cry sounds so loud in so small a space, but that realization does nothing to quiet me as I'm penetrated. Pure animal lust takes control of my fingers, wiggling about and around. \"But, you're going to, ah!!, have to stay back. You want to see m-me come for you, yes?\"\n\n\"Yeah. Fuck yeah, I wanna see that!\" She stops herself short and looks me up and down. There it is! The look I saw back on the tables in Heimdahl's room. That ravenous, wide-eyed stare that lets me know I am moments away from being her little toy; to be used as she sees fit. I can feel the lust in her gaze, and it makes me feel sooo yummy... so wanted...\n\n\"Ahn! I-I can see the... the look in your eyes, Sweetness. You want your treat, d-don't you? You ah!!!... You want your Cherry,\" I whimper. I am getting close now, and I can feel pressure starting to build at the base of my cock. It starts to spasm in my hand, and it only makes me finger my ass all the more. \n\n\"You're about to come, aren't you...\" I can hear the hunger in her voice. \"Show me. Show me everything. I want to see you shoot your load all over this room!\"\n\n\"M-Mackenzie! I... ahn!  I-I...\" I close my eyes and the room starts to spin. I am so close, now. Just another few moments... just a few more strokes...\n\nMackenzie's touch breaks my concentration. She's moved beside me, and I feel her run her fingers under my chin as she so very gently turns my head to look at her. I open my eyes to see her smiling softly at me. I've... I've not seen that look since that strange dream in the desert months ago.\n\n\"You're my good little girl, aren't you...\"\n\n\"Yes.\"\n\nThe smile grows warmer still. \"Come for me, Cherry.\"\n\nThat moment, that very moment... I feel something wash over me. A warmth I've only felt once before, more than just my impending climax. It wraps around my like a soft blanket, and I whimper happily at the sensation. A vision of a field of flowers pops into my head as I feel cum spurt from the tip of my cock. It pulses over and over, streams of white spunk shooting across the room for what seems like forever.\n\nI make no sound at all, not even a whimper as I look into those emerald eyes of hers. I feel... safe. Happy. Content.\n\nShe surveys the mess I made, then looks at me with such happiness. Like she's been finally sated at last after a large meal. \"That's my girl. That's my sweet Cherry.\"\n\nIt's all I can do to just lean over and put my head on her shoulder, letting out a little sigh of contentment. I take a few deep breaths to clear my head, and I can feel her put her arms around me.\n\n\"Let's get this cleaned up and finish our shoppin'. After seeing that, I've got plans for that ass of yours.\"\n\nOh, Mackenzie...\n\n***\n\nFinally! The night of the auction! I've been eagerly anticipating this day for so very long, waiting for the chance to see what the other side of the world looks like. Despite my views on the order of things, I am curious to know how people of money and power act and behave. What are we going to see? This is more than just a chance to show off a pretty dress while on Mackenzie's arm. It's a learning opportunity, and it's one I'm not going to pass up.\n\nJust passing through Elysia subjects us to a battery of disrespect, ranging from indifference to disgust. The level of assholery drops off significantly once we reach the estate housing the auction, however. It's a grand and wonderful building to be sure, and the pleasant smiles of the staff stand in stark contrast to the sneers and eye rolling encountered minutes before. \n\n\"The shitty attitudes disappear when there's money to be made.\" Mackenzie shakes her head. I positively beam at her, squeezing her arm in approval at the observation. My girl may not have a high education, but that doesn't mean she's dumb. She looks at me sheepishly while flushing slightly; she still hasn't quite figured out what to do with my adoration.\n\nWe go inside after handing our cloaks to the doorman. His eyes almost seem to bug out of his head as he ogles us, stumbling over his words as he lets us in. \n\n\"I guess we're too much woman for him to handle.\" My hand shields my mouth to suppress a little giggle. Mackenzie may not have been happy about it, but I finally convinced her to take off her goggles and let me put her flaming orange hair up in a bun of curls. She's at least nine kinds of adorable right now in her strapless, sleeveless red dress. \n\nShe winks back at me. \"What'd really blow his fuckin' mind is if he knew we're better hung than him, too.\" That's my girl! I swat at her playfully as we make our way down through the causeway and into a great hall set up for the auction. The sight before us makes us both stop and gaze in wonder at the scene before us.\n\nThe room is very well lit despite the late hour, thanks to ornate hanging gas lamps supplemented with fire magic to burn brightly. They chase away the shadows, illuminating priceless works of art that are set up between large windows. Heavy red velvet curtains offset sharply against the cream-colored walls\n\nTables line the perimeter of the room, overflowing with foods that even I've never laid eyes on before. The sheer quantity of it is making my mind boggle. There is more food here in this room right now than some people back where we live will see in a month! All different kinds of delicacies, from exotic fruits to delicate chocolates and everything in between are artfully displayed to appeal to the senses.\n\nLarge, comfortable sofas have been arranged around the room, offering those here to buy a place to relax and enjoy themselves. Servants make their way to various patrons, filling orders for drinks and food. Some of them are very scantily clad, and there's no illusions as to what they're offering. A small gasp from Mackenzie causes me to turn around, and I see her gawking at everything around her; She has such a wonderstruck look on her face.\n\n\"Char, people can afford to live like this?\"\n\n\"Yes, they can.\" \n\n\"Why... I don't understand. Don't they know there are people who don't have almost nothin' to eat? Why can't they...\" She slowly brings her gaze to lock with mine, and I can see her start to connect the dots.\n\n\"They know.\" It's all I can manage to say. She's from Hollinsport, a hardscrabble town where everyone had to work together to survive. To know that there are people living like this while others are suffering is creating a kind of mental logjam.\n\n\"I think... I think I understand what you've been gettin' at.\" A look of mild disgust slowly spreads across her face. \"And I think I know why the P'fessor lives where she does now, too.\"\n\nI open my mouth to agree with her, only to be cut off by a commanding voice from up at the massive stage in front of us. \"Esteemed guests, please begin to take your seats. The evening's events will begin shortly.\"\n\nMackenzie starts over to the chairs in front of us, forcing me to catch her by the arm quickly and shake my head. \"Those are for the guests buying things tonight. We'll have to go to the back of the room, and when our item is sold we'll collect the money. We'll have to leave here afterwards.\"\n\nShe nods silently, though I can tell she doesn't like the idea. Nobody likes being told they're not good enough, and Mackenzie is a proud person. \n\nA waitress in a black and white maid's outfit wanders by carrying a tray of drinks. She pauses in front of us, eyeballing us for a moment. \"You don't look like aristocracy, ducky. What are you here for?\"\n\n\"Retainers,\" Mackenzie says simply. \n\nThe waitress nods with an \"ah\" and smiles. \"Seen a few of those lately. And you two look more like soldiers than royalty. Who you working for?\"\n\n\"Professor Annette Tournesol.\"\n\n\"Oooh, I know her! Wonderful woman. Tell her Jessica said 'hello', won't you?\" She winks at us before looking around the room. \"And make sure you enjoy a little of what's around here before you go. You don't get the opportunity to have a little taste of the good things like this often. In fact, here...\" \n\nShe offers both of us a tall crystal glass of a orangish drink. I accept it with a nod, while Mackenzie takes hers a little more reluctantly. \"You'll like this, trust me.\" With that, she sashays off to serve the other patrons.\n\nMackenzie and I take a sip of our drinks, and I watch as her expression lights up almost immediately. \"That's fuckin' good... What is this, Char?\"\n\n\"It's called a 'Mimosa'. It's part chilled orange juice and part champaigne.\" I giggle at her as she takes a large swig from the glass, relishing the drink thoroughly. \n\n\"I call it fuckin' good! I wanna have another.\" She drains the last of the glass and sets it down on the tray of a passing servant before giving chase after him. \"Hey! You got another of those Mimosas, buddy? Give it up!\"\n\nI laugh heartily, admiring my girl as she runs after him. \n\nMy thoughts are interrupted by the announcer, who has begun to introduce the prime patrons of the evening. \"Ladies and gentlemen, before we begin I'd like to introduce you to the esteemed sponsors for tonight's affair. These champions of New Verdia have led us through times both harrowing and difficult, and their names echo through the halls of every corner of the city. May I introduce to you...\"\n\nMy pulse quickens immediately. This is another reason why I am here tonight; I want to catch a glimpse of the people in power, to see them as up close and personal as I can get. Regardless of what I think of the affairs of New Verdia, these people are proven leaders. They have the one thing that most of the people in this room don't, and that is power. They are the movers and shakers in our corner of the world, and I want to see what that looks like.\n\n\"Baron Erlich Von Krauss.\"\n\nA short, gray-haired man wearing delicate spectacles and a somber look raises his glass in the air in acknowledgement. He's the Minister of Science and Arcana, and is responsible for most of the city's infrastructure. He's probably forgotten more about applied mechanics and magic than most people will ever learn.\n\n\"Baron Ivanovich Mikhail Rasputin.\"\n\nHe has women on both arms, despite the fact that he's in a relationship with another noble. He has the look of a powerful warrior, wearing a long sword on his left side. He's ruggedly handsome, and yet I can see a cruel streak in the set of his eyes as he looks around the room. From what I've read, he's fought in many battles. There is a reason why he's called 'New Verdia's General'. I wonder how I'd match up against him?\n\n\"Baroness Emmaline Wadsworth.\"\n\nNew Verdia's self-appointed Minister of Commerce. She's a mousy woman, though the hard steel in her gaze betrays her true nature. This woman is responsible for much of the financial goings-on in the city, and it's due to her leadership that the city is prospering. She is also the reason the city is segregated like it is, and I can actually taste the bile rising in my throat at the mention of her name.\n\nMackenzie comes bounding up, clearly pleased with herself. She actually has four drinks in her hands, and the fact that she only learned to walk in heels three days ago is a testament to her determination to get her drink on. Watching her practice was... lovely. \"I brought you a drink, Char.\"\n\nI shoot her a bemused look, eyeing the four drinks she's trying to balance in her grasp. \"Only one, Sweetness?\"\n\n\"Yup. The rest are for me.\" She hands me one of the drinks and sets the other two down on a table. \"I've been a good girl, and I deserve a present.\"\n\n\"Duchess Emilie Amaranth.\"\n\nIt's rather strange, really. No-one seems to know what she really does for the city, though she wields the most political clout of the four. Some believe her to be some kind of power broker, a matchmaker of sorts for the political elite. Others say that she is no more than a dilettante, the daughter of a powerful scion of the city in days past with no real power. Then there are the few that whisper in conspiratorial tones that she has made faustian deals with arcane entities for her powers. \n\nI spin around to see her for myself, and my jaw drops open. She is regal, confident... and painfully beautiful. She gazes over room with a kind of bemused expression, one that brings to mind a predator sizing up potential prey from afar. Her eyes bore holes as she stares, and she has the bearing of one who is accustomed to getting her way. Every. Single. Time.\n\nAt the same time, there is something... sinister about her. I can't quite place my finger on it; for all the power the other three show, she radiates it, and dangerously so. It scares me, and yet it draws me inexplicably to her. For the life of me, I cannot figure out why I am feeling like this... but it's there, all the same.\n\nI am still watching the Duchess as she heads to her observation box above the auction house floor. I can hear someone calling my name, distantly. I pay them no mind as my eyes follow her up the stairs before the wall steals her from my view.\n\n\"Char? You're staring at her.\"\n\nI hear myself sigh, almost in a dreamlike manner. \"Huh?\"\n\n\"Charlotte...\"\n\nIt's enough to finally break me from my reverie, though she's not being loud at all. It's the tone in her voice that finally makes me turn to her. She has a stony look on her face, one that is tinged with a barely realized fear. She regards me with trepidation, and I can't help but feel that something, however small, has changed.\n\n\"Sorry, Sweetness. I just got caught up thinking about the auction is all.\" It's a lie, and I can immediately tell that Mackenzie doesn't buy it. \n\n\"Sure.\" The announcer finishes the introductions and begins the auction. She takes a heavy swig from her glass and turns away from me.\n\n\"Mackenzie, I...\"\n\n\"Forget it. It's not important.\" Now we're both lying to each other, and that small change doesn't feel so small anymore. I ruefully sip my drink. It tastes like ash. \n\nGood job, Charlotte. You've managed to ruin a wonderful evening. You stupid bitch.\n\n***\n\nThe auction continues on well into the evening, and I watch as amazing things that I would never have presumed to put a value on are bought and sold at whim. They have yet to get the item we're selling for the Professor, but I know that it's coming up soon. Truth be told, I am grateful our part in this evening is almost done. \n\nMackenzie has been drinking more than usual. She's not drunk yet, but I suspect that she's well on her way. She's had five or six mixed drinks, and I know from experience that's her judgement will start to wander soon. She's not said one word to me since the auction began, making for a very awkward silence. She drains her glass yet again before spinning on her heels (while almost toppling over in the process) and stalking off.\n\nI start off after her, only to be pulled back to the auctioneer. They've gotten to our item! I watch the proceedings with excitement as the bids climb higher and higher for the Professor's artifact. This is going to sell for far more than she thought...\n\nMore and more money is being offered, each bid building suspense within me. How much is she going to get for that tiny statue?! A thought pops into my head as I watch; she promised us a ten percent commission! Comparatively speaking, we're going to have a lot of money when this night's over. \n\nA hand lightly touches my hip, breaking the spell that's come over me. I whirl. \n\nIt's Mackenzie. She's standing before me, wearing a very embarrassed and petulant expression on her face. \"Cherry,\" she whispers quietly. \"I, um... We have a problem.\" \n\n\"What's wrong, Sweetness? Are you okay?\"\n\n\"I just... um... we need to find a broom closet or something.\"\n\n\"Did you spill something, or make a mess?\"\n\n\"Heh... not yet...\" I turn around to search for a lavatory or other place where we can deal with this. My hand inadvertently brushes over her bulging erection, and I gasp in shock\n\n\"Mackenzie! What has gotten into you?! Control yourself!\"\n\n\"Cherry, I'm so sorry. It's that dress!\"\n\n\"This one? You've seen me in less!\"\n\n\"Yeah, but... heh, never while I was in a dress too. There's nowhere to hide!\" Her apologetic grin looks so out of place, and I can't help but giggle at her. The grin fades into a scowl as she tears away from my gaze. \"This isn't funny!\"\n\n\"It very much is, my dear. Come on. It doesn't look like there's a bathroom around here. Let's head over to the balcony over there.\" I take her by the hand and lead her behind the crowd as much as I can.. \n\nWe both step out into the cool night's air, goose bumps forming on my skin as we cross the partition from inside to outside. The night sky is simply amazing, stars scattered throughout the firmament like dust on the wind as they shine down on us. A full moon hangs lazily on the horizon, casting shadows over the landscape of the city. These are the kind of nights I loved to stand watch on back when we were aboard The Chimaera. \n\nMackenzie brings me back to the real world as she presses close to me. \"Who do you belong to, Cherry?\" The fear in her voice is palpable, and it takes me aback. I know exactly what is going on here now, and it breaks my heart. I did more damage to her with that stupid fucking display earlier than I had thought. She's trying to be dominant here, but she's rattled and hurting.\n\n\"Mackenzie. I -\"\n\n\"Please. Who do you belong to?\"\n\nI catch myself in a whimper as I cup her chin in both hands. \"You. Always you, my Sweetness.\"\n\nHer eyes soften a little, but there is still trepidation there. I look around, a thought forming in my head. I don't know whether it's the night's air, or the alcohol I've been drinking or just the fact that I've hurt the dearest person to me in this world. But I have an idea as to how I can prove my admission to her. I look down at the bulge straining against her dress, and a wan smile plays over my lips. I flutter my eyelashes as I turn my gaze to meet hers. \"Take me. Here. Now.\" Her jaw drops open, and she seems to be at a loss for words. She stares into my eyes, as if she doesn't quite believe what I am asking of her. I lick my lips as I caress her cheek with a long, slow touch. \"Bend me over this railing and use me as you like.\"\n\nI hear her actually growl as she roughly spins me around, pushing me down onto the marble latticework that overhangs the balcony with one hand while hiking the hem of my dress up over my hips with the other. The garden below is empty, blessedly empty. I feel her yank down my panties, making me step out of them before kicking at my ankle and forcing my legs wide apart. I hear myself whine pathetically, whimpering as she tosses me around. \"M-Mackenzie. I -\"",
        "\"Shut up.\" She grabs me by the hips, and I can feel her prick brush up against my lips. She stops there for a moment, as if to prove a point. \"You don't speak. You don't complain or offer any resistance... you hear me?\"\n\n\"Mackenzie... I just...\"\n\nShe slaps my ass, and hard. I cry out in pain, bringing a hand to my mouth and biting on my index finger. The echo from the slap races across the palatial grounds unnoticed. \"What did I just say, bitch?\" I don't answer, suppressing a sob while still smarting from the blow. \"Good. You're learning. But I wanna make sure you keep that yap of yours shut.\" She reaches forward and stuffs my panties into my mouth, cutting off any means of protest. \"If those come outta your mouth, there's gonna be hell to pay. We clear on that?\" I nod with a sniffle, and she moves back into position. \"Good. Now, buckle up, slut. This is gonna get wild here inna sec.\"\n\nShe pushes the head of her cock into my flower, the tip penetrating my lips. She forces them apart as she slams her full length into me unceremoniously. My eyes widen at the violation, tears streaming down my cheeks as I pound the railing with my fist. But even that isn't what is getting me the most. \n\nWe're in public. Anyone can see us out here. All they have to do is step out onto the balcony, or look at the building from across the street, and everything would be there for them to see. Oh, Gods... I am terrified. That fear shreds my soul, certain that at any moment we'll be discovered. It also makes me delirious with ecstasy, that simultaneous thrill that comes with the idea that we're doing something so dirty... so delicious. So unknown, and yet so visible!\n\n\"Yeah, you like this doncha? You're already so fuckin' wet... come on, baby. Work that ass for me!\" She pulls out almost her whole length, only to slam it back in and make my body shudder with delight. I feel her run her hand up my back and into my hair, grasping a handful of it as she tightens her fingers in my curls. She pulls back hard, forcing my back into an arch as my ass grinds up against her. \n\nShe pumps my cunt mercilessly, drawing back slowly before ramming her tool deep inside me repeatedly. She's being so forceful... so strong. I can't help but reach down with a free hand to grasp my own cock.\n\nShe slaps my ass hard again, the sound of flesh on flesh ringing out over the balcony. \"NO! You don't get to do that, Char. Good girls get treats like that, and you haven't been good, have you?!\" I withdraw the hand immediately, putting it back on the bannister. My muffled cries serve only to make her harder, and I can feel her throb against my womanhood. I'm being stretched to new lengths... She's getting off on this! The thought that she's getting satisfaction makes me feel so yummy, and I begin to grind against her in timing with her thrusts.\n\n\"Fuck! FUUUCK!!! Gods, Cherry...\" She's getting close now, and I can feel her pumping me harder and faster as she approaches her climax. Every impact threatens to push me over the ledge, excepting for the fingers digging into my hips. Every impact threatens to push me over the edge. I'm starting to lose sense of the world around me, and it barely phases me when I notice two people staring at us from the curtain separating the balcony from the auction hall. I gaze at them, heavy lidded. I am so close, I don't care anymore. All that matters is that Mackenzie is taking me as she sees fit. Gods, it hurts!\n\n\"... the fuck you looking at, jackass?!\"\n\nA short, squat balding man with spectacles and an overbite harrumphs and scurries off before she can say anything else. With him gone, Mackenzie turns her attention to Jessica, our hostess from earlier. A slow smile spreads over the server's face as she flashes a thumbs up and mouths \"get some\" at us before disappearing.\n\n\"Ah! Uuuhn! Fuck! FuckfuckFUUUUCK! I'm... I'mmmmmcooooommminnng!!!!\" I feel her cock throb wildly inside me. My cunt clamps down on her, feeling every wave of cum forced through my trembling lips. \n\nMy fingers try to dig into the stone of the railing as I look up into the night's sky unseeing, lost in the throes of my own climax. My vision doubles for a moment as I rise up onto the very tips of my toes. My ass twitches as waves of pleasure wash over me. I feel Mackenzie slump over me as we both try to recover and catch our breath. \n\nFinally, she pulls out of me with great effort. Gods above, she's so thick... \"Heh, almost wasn't able to pull out of you, Cherry. You really get off on this exhibition shit, don't you?\"\n\nI pull my panties out of my mouth, nodding weakly at her. \"Yes, I do.\" The memory of those two heads peeking out at us finally fights its way through the sex-fueled fog \"Did we just get caught? Are we... Do you think we're in trouble?\"\n\n\"Nahh, no trouble. Poindexter there looked like that was the first show he'd ever seen, and that Jessica girl was cheering us on.\"\n\n\"All the same, we should... we should try to get as presentable as we can. Our... our item was being bid on, so that means that we should collect the Professor's money and go.\"\n\nShe nods in agreement before studying me for a moment. \"Cherry...\"\n\nI pull my dear Mackenzie into an embrace, hugging her tightly. \"Like you said with Selt. She means nothing. It's you I love, Sweetness.\"\n\nShe smiles at me, though I can't help but notice it's still a little sad. \"That'll do for now. Come on, let's get outta here.\"\n\n***\n\nI am sitting, gingerly, at the table the next morning, reading the newspaper and drinking my usual first cup of coffee. I have to admit, I am very happy with the way things are shaping up. And it's more than just with the events of last night.\n\nMackenzie and I now have enough money to more than just get by. We can go and have fun while actually leading something of a normal life. Between her work as a mechanic and our mercenary contracts, we can afford some of the small creature comforts that had eluded us before. We're building a life here, and it's one that we both can be proud of.\n\nI take a slow sip from my cup, set it down, and return to the paper. Yes, things are going well in our world, and I couldn't be happier. \n\nI always have a ritual when reading the news. I start with the things that matter, like politics and economics. Then I move on to sports, because my day isn't complete without my fix of Boards info. I wonder how Haversham did yesterday... Then, if I have time, I move on to the arts and entertainment section. Nothing important usually happens in that section, but if I have the time I like to be thorough. And today is one of those days.\n\nI thumb back to the last few pages and start at the top. Nothing of real consequence, just another third-rate artist complaining that people \"don't get her work.\" It's followed by a plea for patronage, and I know that a few people would support her, but not for her \"art\". Then, I see it. The second story down... last night's auction.\n\nTwo women of unidentified status were seen at last night's Gala Of The City, engaged in sexual intercourse. While things of that nature are not unexpected, witnesses say that the two women had fully functional male anatomies as well. 'I'm not kidding,\" one witness stated. \"They had real cocks, and they were fucking each other like minks! I've never seen anything like it.\"\n\nWhen pressed for comment, Duchess Emilie Amaranth had this to say: \"We have guests engage in questionable behavior at events like these constantly. But if it's to be believed, the actual nature of these two individuals is a very interesting development. One we would be keen to look into.\"\n\nThe identity of the women remains a mystery as they left the auction shortly after the incident. While not pressing charges, Lady Amaranth has expressed a desire to find and speak to these women and has offered a reward for information leading to their location. Those with any knowledge should contact...\n\nMy hands start to tremble as I gaze a thousand yards through the wall. The paper slips from my grasp and falls to the table. My heart races madly, and I can feel color creep up my neck and into my face. Tears begin to form and threaten to spill down my cheeks as I look around the room in a panic.\n\nWe've been found out, and they want to talk to us!\n\nWhy? We should be nothing more than a curiosity. A small one at that! There are others who have the kind of physiology we do, and no-one prattles on about them! Why would one of the most powerful people in the city want to seek us out personally? \n\n\"MAAAACKENZIIIIIIEEEEEEEE!!!\""
    ],
    "authorname": "AwkwardMD",
    "tags": [
        "futa",
        "futanari",
        "dickgirl",
        "masturbation",
        "public",
        "humiliation",
        "exhibitionism"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/a-clockwork-green-ch-04"
}