{
    "title": "Cat Fight Ch. 19: Space Battle",
    "pages": [
        "TERMS\n\ntinton - 2 1/2 seconds\n\nspecton - 2 1/2 minutes\n\nToton - 2 1/2 hours\n\nminton - 2 1/2 days\n\ndaycon - 2 1/2 weeks\n\nquant - 2 1/2 years\n\ngalant - 2 1/2 centuries\n\nMetson - 2 1/2 inches\n\nmaclon - 2 1/2 feet\n\nheckson - 2 1/2 miles\n\ntetson - 2 1/2 acres\n\nCharacters\n\nBill Axor (AKA Ambrose or Ambree) - Lion clan\n\nKing Tomco Traxor - Bill's dead father, Lion clan\n\nKing Tobias Traxor - Bill's dead brother, Lion clan\n\nQueen Trianna Axor - Bill's dead mother, Lion clan of Mandria\n\nQueen Niaco Traxor - Tiger clan, Tobias mate, now Bill's\n\nTwitty Glax - Grey Tabby clan, bill's body guard and mate\n\nGlenna Nox - Bengal clan, Bill's body guard and mate\n\nMikos Glac - Chartreux clan\n\nCommander of star cruiser - Wire hair clan\n\nHenna Glac - Chartreux clan, Mikos mate, Xendran Doctor\n\nTheta Panadon - Cheetah clan\n\nCornelius Glax - one of Bill's Uncles, Grey Tabby clan\n\nConrad Nox - Bill's other Uncle Bengal clan\n\nAssassin group - Jaguar clan\n\nsecond assassin group - Ocicat clan\n\nTypree Maxor - Sub King of Mandria, Lion clan\n\nAdina Maxor - Paladin Princess of Xendra, Sub-princess of Mandria, Lion clan\n\nKNIGHTS\n\nGeneral Roth - Leopard clan\n\nGregor - Cougar clan\n\nGwayne - Panther clan\n\nThomas - Lynx clan\n\nPALADINS\n\nWrena - Leopard clan, Roth's mate\n\nCetana - cougar clan. Gregor's mate\n\nDawney - Panther clan Gwayne's mate\n\nMileen - Lynx clan Thomas's mate\n\n---------------------------------\n\nAmbrose was running as fast as he could out the back of the palace. Off in the distance he could hear the whine of a craft lifting off. Roaring Ambrose tried to increase his speed toward the sound. Breaking into the open Ambrose tried to leap at the lifting craft only to fall short.\n\nClose on his heels were his Knights, Paladins and Niaco. Roaring in frustration as the craft lifted skyward. Even as he watched he saw his star cruiser appear firing on the ascending craft. \"Skylos,\" Ambrose roared! \"Bring them down Princess Adina is on board!\"\n\nChanging tactics Ambrose's star cruiser started to make more pin point hits. Then suddenly the foreign craft climbed faster evading the cruiser making open space. Cursing Skylos was about to give chase, then landed next to Ambrose and the others. Leaping aboard Ambrose shouted, \"Make for space! Catch them!\"\n\nNodding the wire hair clan commander, Skylos, quickly lifted the star cruiser giving chase. \"On it now Sire. I managed to hit their engines so they won't be able to hide. We should catch them soon!\"\n\n\"Good Captain, go!\" Ambrose roared as they felt the ship accelerate. Ambrose was pacing the deck angry that he had allowed this to happen. Shit he thought! Her brother was going to start destroying things if Adina got hurt. Ambrose felt a paw on his shoulder as he whirled roaring at Niaco almost lashing out at her.\n\nBowing shaking a little she stated, \"We will fight to the death for the family my mate. Have no fear of that. If need be we will lay waste to the Talandian world if she is harmed!\" Ambrose's eyes went large as all his Knights, Paladins and Niaco bowed before him. \"We all pledge to release her mate.\"\n\n\"It is good to go into battle with such loyal people! So be it! If the Talandian planet has to run red with blood then by the great feline it will! This shall be the last time that the kingdom is betrayed by them!\"\n\nAll of his Knights and Paladins raised their swords as they cheered. Roth leaned close whispering, \"Fantastic speech Sire! Your father would be extremely proud of you!\"\n\n\"Thank you Roth but it wasn't a speech. I meant every word of it! We have to make sure this can never happen again!\" Ambrose whispered back to Roth.\n\nRoth turned from Ambrose walking to Skylos, after a moment he was on the radio. \"This is General Roth I want every ship, every soldier ready to go. Follow us to Talandia we will finally put this rebellion to rest!\"\n\nTurning the radio off Roth spoke briefly to Skylos then walked back to Ambrose.\n\n\"Are we closing the distance?\" Ambrose asked of Roth.\n\n\"Captain Skylos said we are gaining, he is afraid that the other craft might land before we over take it. He is mad that he didn't damage it more.\" Roth relayed.\n\nAmbrose smiled he'd like nothing better than to blow the hell out of the other ship. Had Adina not been aboard Ambrose figured the other would be junk by now.\n\nOnboard the other ship Twitty and Glenna were bidding their time before they struck. They really had no idea how to land the hulk of a ship.\n\nAdina's kidnapper cursed under his breath they were being followed! Damn it! Looking over everything he again cursed. The brief scuffle he'd had escaping had obviously damaged the ship more than he thought! Looking again he saw that the other ship was starting to over take him. Making several adjustments the male smiled. It was of no consequence his pursuer wouldn't catch him before he landed.\n\nSkylos cursed as he started to adjust his equipment as much as he could. He had to catch them it was a disgrace if he didn't! Pushing the engines they crept even closer. Skylos smiled more as the engines strained good they were closing faster!\n\nThe kidnapper cursed again as he saw that his pursuer was closing faster! Damn it at this rate they'd have him in orbit! \"Predator to king! I suggest you get some support up here or you're going to lose your prize!\"\n\n\"King to predator, we have no...\" came Conrad's voice.\n\n\"Like I said get them here or this is the last you will hear from me. I will not be a prisoner of Xendra not for you nor any other! Get them here now!\" The male growled out at Conrad.\n\n\"On the way! We have a reception committee if they get past.\" Conrad said through clenched teeth. This assassin was seriously pissing him off!\n\n\"Good! Then prepare I should have her to you very soon,\" the male said looking over at the unconscious form of Adina. She wasn't well trained though he could see that she had the basics down. It had been a long time since a novice had surprised him.\n\nSkylos cursed as his eyes went wide seeing the ten ships that were approaching from the planet. Roaring he got off two shots that shook the other ship dropping it back into normal space. Arming all weapons a fierce smile crossed his features.\n\n\"I have ten enemy ships approaching! I need some of you on the pulse cannons! I can get some of them though not all!\" Skylos shouted.\n\nAll four of Knights got wicked smiles as they went to the mid-ship junction. Roth went up; Gwayne went down, Gregor left and Thomas right. A moment later they all reported in.\n\n\"Mid-ship weapons report!\" Skylos shouted.\n\n\"Port side on line,\" Gregor reported.\n\n\"Starboard up and running,\" came Thomas's reply.\n\n\"Bow top cannon activated,\" came Roth's answer.\n\n\"Stern cannon ready! Let's blow these traitors out of the sky!\" Came Gwayne's shout.\n\nSkylos smiled more then started to adjust as the ships rushed toward them. \"Here they come! Contact one half specton!\"\n\nA moment later there were several explosions as the ten, and then only five ships started to fire on them. \"Damn it!\" Came Roth's voice as he missed then Gwayne got the ship!\n\n\"You're getting old Roth!\" They heard Gwayne say.\n\nGrowling Roth took out another two that crossed in front of the ship. \"Shut up Gwayne! Beat that!\" The last two exploded suddenly on either side of the ship.\n\n\"Good job moving in to intercept the other ship.\" Skylos said as they quickly approached the other ship. They'd almost docked, the four knights starting to disengage from their pulse cannons when Skylos started shouting. \"Looks like we aren't done yet! Twenty more inbound!\"\n\nLooking down the corridor to Gwayne's position Roth smiled. \"We'll see who is old, Gwayne!\"\n\nNodding at Roth, Gwayne growled back to him, \"Yes I think we will old one!\"\n\nGrowling Skylos shouted, \"Fight later! Get back online! Contact in a specton!\"\n\nAmbrose was pacing as he watched the battle, he hated being a sitting target like this! Going up front Skylos looked up pointing to a seat. Ambrose smiled, sitting taking the auto pulse cannon control in his paw.\n\nConrad watched the first wave disappear within moments. What in the hell was this ship using? Then he saw that it was that bastard nephew of his. Shaking his head he knew the second wave wasn't going to be effective either. Ordering up the heavier armored ships he sent them as fast as he could behind the second wave.\n\nRoth cursed when Gwayne had equaled the score of ships destroyed to his own. The second wave destroyed Skylos moved to intercept the other ship again. Opening the airlock they started in stopping short when the male had Adina's unconscious body with a knife at her throat.\n\nA wicked smile crossed his face as he looked up seeing all of them. Then he growled as Thomas entered the room as did Thomas.\n\n\"So traitor! You have to hide behind the skirts of an unconscious female! Now I am extremely glad that I killed that traitorous father of yours! Perhaps now I can finish the entire traitor family! I missed the execution of that bitch of a mother of yours!\" Thomas hissed out.\n\nThe male's raspy voice filled the room, \"not nearly as glad as I will be when I kill this one. To end even a bastard off shoot of this family will be satisfying!\" Smiling a wicked smile, the male started to press forward with the knife even as Ambrose shouted no.\n\nSuddenly everything froze as Ambrose rushed forward knocking the knife from the grasp of the male. Raking his paw across the male's face Ambrose ripped Adina's body from him.\n\nAn extreme look of surprise and horror crossed the male's face as everything started to move again. Reaching for his sword he suddenly stopped when he felt not one but two sword points against his back.\n\n\"Though I wish to rip you apart, I leave that honor for Thomas!\" Came the growling voice of Twitty.\n\n\"So special agent Twitty I see you have passed to the next level. The other feels like elite guard Glenna.\" Nodding the male stopped when he felt the points push forward a bit more. Thomas came forward cuffing the male with the butt of his sword knocking him out.\n\n\"I suggest we search him. He kept a variety of weapons hidden, I suspect even more now.\" Thomas said removing at least twenty in a quarter specton.\n\n\"SIRE!\" Came the frantic voice of Skylos. \"All of you need to get back here! We have another wave of ships approaching! These are far more combat ready than the first two waves!\"\n\nAmbrose nodded as he took a shaky step toward the airlock. Adina's eyes suddenly opened then went wide as she saw everyone. Locking on Ambrose they went wider when she saw him momentarily shaken as he stepped forward.\n\n[Cousin! You used the final power of royalty again didn't you?] Came Adina's thoughts.\n\nWith a sigh Ambrose looked at her then nodded. \"I didn't use the full extent of it though. Only about ten tintons as you and Typree suggested. I feel a little weak though no where as badly as last time.\"\n\n[Good I am afraid I can't find my voice right now. Whatever that traitor used on me has rendered my throat numb] Replied Adina's thoughts. Gaining her feet Adina slowly made her way onboard also.\n\nSlamming the airlock shut Skylos ran for the control room. Undocking from the foreign ship Skylos started to make his way from Talandia. His eyes wide Skylos started to curse as he saw that they weren't going to get that far as their hyper drive was offline. Running from the command deck Skylos was in the engine room adjusting and replacing all he could.\n\nTwitty followed as she stared at several burned circuits. Grabbing a case she started replacing what she could beside Skylos. Looking up, then at what she was doing Skylos nodded, then made for the command deck. Adjusting again he felt the hyper drive activate though only at a quarter power.\n\n\"I'm afraid the shields are low Sire. Your mate has managed to get them back up but I don't think it will be enough.\" A beeping drew his attention then he nodded. \"I need at least twice as much if we are to get at least half hyper drive back online.\"\n\n\"I'll do what I can. A few of these are too badly burned to effect repair.\" Came Twitty's voice.\n\n\"I know, do what you can, at least we are making open space.\" Then turning toward Ambrose, he said, \"We need more in order to take them. The last battle with the second wave seriously over taxed the system.\" Turning Skylos adjusted again then smiled as the hyper drive came up to half.\n\n\"We have help coming though I'm not sure they will reach us before we are over taken. We have to...\" Ambrose started when the com went off.\n\n\"Cousin? Are you alright?\" Came the voice of Typree.\n\n\"For the moment we are though your sister can't speak.\" Ambrose replied.\n\n\"By the great feline it must be so peaceful!\" Typree replied.\n\n[I heard that brother!] Came the loud thoughts of Adina.\n\n[Damn she's pissed.] Thought Typree.\n\n[Wait!] A startled Ambrose thought. [Where are you? I thought you had to be close to use it!]\n\n[Coming in from... ] Typree started.\n\n\"Sire! I have a large force moving around the planet! They are approaching at high speed. I'm afraid Sire, we are screwed!\" Reported Skylos.\n\n\"That would be me and my force Captain. I congratulate you on your superb handling of the situation. Were you not the King's I'd try to steal you away to help train my fleet.\" Typree told the Captain. \"Thank you for protecting my cousin as well. We'll take it from here!\"\n\nAmbrose watched as the force of Talandian ships suddenly turned firing at the oncoming fleet. Though heavier armored the Talandian fleet was having a hard time against the oncoming Mandrian fleet. Midway through the battle two ships broke off heading toward Ambrose's ship.\n\n\"Two got through! I need all of you on the cannons! Switch to high pulse rate, make every shot count! We might only get a few shots from each!\" All the Knights scrambled to the cannons as Skylos yelled. \"Queen Twitty please come out! I'm afraid there's no more we can do right now!\"\n\n\"Damn it! What are we at?\" Came her reply.\n\n\"We've got over half shields. Maneuverability at sixty percent. Barely enough to power the high pulses on the cannons I am afraid.\" Skylos replied.\n\n\"Damn it! I thought that last junction I repaired helped.\" She shouted.\n\n\"You did activate it didn't you? After you repaired it?\" Skylos asked.\n\n\"Activate? I thought they did automatically, shit!\" Twitty yelled as she disconnected.\n\nA moment later Skylos watched as one then three then six junctions came back on! Holy shit! They had seventy five percent shields! Plus their maneuverability was at eighty percent! Running up front Twitty smiled when she looked at the readings. \"I thought I'd repaired more than that!\"\n\nSkylos stared at her with wide eyes; she might have saved their lives!\n\n\"Great job Queen Twitty! It's just the advantage we need!\" Skylos told her.\n\nEven as he turned back they were engaging the enemy ships. Roth and the others were trying to resist firing continuously at the two ships. Finally two spectons later one of the ships exploded. The other had just started around on another attack when several shots got through striking the front of the ship.\n\nEven as Roth yelled taking it out also. Ambrose's eyes went wide as he heard the breach alarm. Reaching out he felt Roth as he was trying to escape. Suddenly Roth was flying through the space the doors stopped as was everything. Growling Ambrose growled pulling harder feeling the last power of royalty stop.\n\nRoth was on the deck at Ambrose's paws. Ambrose was panting shaking his head he could feel something building higher and higher within him. Damn it! What was this strange feeling? Why the hell couldn't he stop it? Trying to calm only made it worse.\n\nAdina's eyes were wide she'd only felt this once the time that her father had used too much. Then he wasted away to nothing.\n\n[Cousin! Push it away! It's the only way to shut it off! I know it's hard, you have too!] Came Adina's thoughts.\n\n[I've tried everything except embracing it. Nothing is helping. At least if I do I can protect all of you!] Ambrose thought to her.\n\n[NO cousin! That's how father felt, it killed him! I can't lose you again cousin. I can't!] Adina's thoughts were yelling.\n\nRunning to Ambrose she threw her arms around him locking her paws as a shock started to run through her.\n\nAmbrose could only stare at his cousin as her body started to convulse with what was running through her. Let go he thought this could kill you, you little fool!\n\n[NO! I won't! I refuse to lose you again!] Her thoughts shouted though weakly.\n\nAmbrose felt tears from her eyes then suddenly felt the power within start to lower.\n\nUp front Skylos could only stare as space suddenly went dark outside the front view screen! What in the name of the great feline was going on? He'd seen the ship start to move away from the battle, and then suddenly the instruments seemed to be running in reverse?\n\nIt felt like an hour had passed when as suddenly as it started space started to reappear again. Looking down he saw that the reverse of the equipment was slowing then it stopped slowly going forward again. Shaking his head he watched as a strange planet appeared in front on them. Why does that look familiar he thought.\n\nAmbrose finally felt the power start to decrease. Adina still had her arms locked around him. Finally the power was gone, then Ambrose fell to his knees, crap he felt weak!\n\nSkylos ran from the command deck, \"I'm going to need help we seem to have lost power. We're drifting toward a planet I don't recognize.\" Twitty nodded as did several of the knights as they all took off toward the engine room.\n\nNiaco and Glenna gently laid Adina then Ambrose on the deck. Covering them both Ambrose whispered to Niaco. Her eyes wide she nodded to Ambrose.\n\nSkylos was directing all of the Knights and Paladins as they all started to replace circuits. Two spectons later he nodded as he headed back to the command deck. Looking over everything he cursed they had hardly enough power to land. That in its self was going to be a miracle. Sighing he tried to bring at least one engine online. They were starting to drift toward the planet.\n\n\"I've gotten two junctions back on. The rest are fried it appears. Trying to hot wire two more, sorry that's all I can do.\" Twitty said on the radio. Skylos nodded as one engine came on slowing their approach. A surprised look came to his eyes as he saw the shields come up also. Not a lot but enough for them to at least land!\n\nTwitty came into command a moment later. \"I think you saved all our lives again. How is the king?\" Skylos asked.\n\n\"He appears to be exhausted, I...\" Twitty started.\n\nSkylos looked over at Twitty whose eyes were wide staring at the planet in the view screen. \"Are you alright Queen Twitty?\" A concerned Skylos asked.\n\n\"That planet!\" Twitty whispered. \"That's earth!\""
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "body modification",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/cat-fight-ch-19-space-battle"
}