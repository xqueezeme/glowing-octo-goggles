{
    "title": "Vicious Rumours Pt. 01",
    "pages": [
        "The grand hall was packed, with mahogany, with pictures of old men with stern faces, and with students attending their first assembly of the new year at St. Bernard's Boys Boarding School. An imposing matronly figure walked behind the walnut lectern on the grand stage and stared down at the students. She cleared her throat getting ready to tell the gathered boys to quieten down, but her imposing form carried that message long before she could open her mouth.\n\n\"Thank you.\" She curtly admitted. \"For those returning for a new school year that have not yet heard, Headmaster Bittenbinder has retired, we all wish him the best in the future. This is why I am addressing you as your new headmistress.\"\n\n\"I can't believe they made her headmistress.\" One student whispered. \"I heard she's a total slut.\"\n\n\"I bet she got the job by screwing all the governors.\" Their friend whispered in reply.\n\n\"Many of you will be used to calling me Mrs. Hardwick from my six years as an IT teacher. I will allow some time for adjustment but my new title is Headmistress Hardwick, is that clear.\"\n\n\"More like headmistress hard-dick.\" A stocky boy mumbled under his breath.\n\n\"When I first started teaching IT, many counselled against it. The jury was still out about whether the internet would be a passing fad or our new future. But I followed my passion and now I am the headmistress at the most prestigious private school in the country. You too can follow your dreams, regardless of adversity. So stay focussed and learn all you can, you never know what doors could be unlocked from learning hexadecimal code.\"\n\n\"Unless hexadecimal code will get me a ticket to that ass, I don't care.\" A laid-back boy quietly joshed to his friend.\n\nNone of the students whispering to one another knew that Gladys Hardwick was catching snippets of their comments and was loving every one of them.\n\n...\n\nGladys returned to the on-campus house the headmaster was given as part of their pay and benefits, she was not expected to stay there all the time but had opted to move in for at least the first year. Her husband was head of the local business forum and didn't mind the long stints away as he had done similar on some of his international trips when he was building his first company up from the ground. She locked the door behind her and squealed with pent up joy at her new situation.\n\nBeing a female school teacher at an all boys school always meant the inevitable childish sexualisation and mocking from her students, the hushed whispers of deviation when they thought she couldn't hear them, the nasty comments written on bathroom walls, the rumours of her sexual proclivities that varied from one week to the next. It didn't help that her larger imposing frame was somewhat undermined by whopping E-cup tits and an ass to match. She was not petite, some even thought her fat, although her figure was far from it and she carried most of her weight in her breasts and butt. However what the students didn't know was that Gladys had the hearing of a bat, for as long as she could remember hushed conversations were never quiet enough for her to not overhear them.\n\nAt first she hadn't let them get to her, then she had found them funny, then over time they wore away at her like a river cutting through rock, until her new response to each schoolchild commentary on her was to retreat into the fantasy of wondering what life would be like if she were the person they said she was. Aged 36, and now in charge of a school, Gladys felt all that power rush to her and felt tingles at the prospect of how she could use it. She didn't know if it was just that she now had power and freedom, or maybe some form of midlife crisis, but she became eager to see what she could do and get away with.\n\nDuring one of the interviews for the headmistressing job, she had mentioned some flaws in the school's website, and the governor's had agreed the most cost effective solution was for her to fix it in her own time given her IT qualifications. When fixing up the browser extensions, she decided to leave a little Easter egg, on the page \"about the headmistress\" she made the browser extension \"/57686f7265.\" To the untrained eye, a string of random numbers a letters, but to Gladys, hexadecimal code that spelled out \"whore.\"\n\nIt was from there that Gladys discovered the joy of \"leaving breadcrumbs.\" She had always liked the childish conspiracy theories of her being a secret slut, and now she was going to thrill herself by creating a conspiracy of her own and sitting back to see if anyone figured out the simple hexadecimal code she left in her wake. On the front page of the school website she added \"the headmistress is a dirty slut\" in hexadecimal writing at the bottom of the page where it would be mistaken for errant code by the tech illiterate.\n\nWhile she had an office in the school for dealing with the kids, she also had a home office as part of her campus accommodation. She christened her office by writing \"If you order me to fuck you, right here and now, I will become your slave\" in green coding style writing and hiding it in a computer screen on a stock photo of children in class that she had in a frame on her wall.\n\nThe day before the first day of school, Gladys spent the night lost in fantasies about the whole student body engaging in the usual speculation about her sex life, then one day, one of her former students, now older and smart enough to crack the code, will suddenly start seeing her code everywhere and begin to realise it was all true. But as she was fantasising, she realised so far all she had done was contribute to childish name calling, albeit in stranger places. As far as she was concerned it wasn't true yet. That's when she decided there must be a goal, something infinitely impossible to get to that nailed down, without a doubt, that she was a sexual deviant.\n\nIt took her a bit of searching to discover \"SkankBank\", the latest in a series of pay to access porn modelling websites, but one the internet assured her had the worst reputation. It was a bright pink monstrosity of a site, but sign up was easy. Gladys made her username 476c6164797320486172647769636b, her full name in hexadecimal code, anyone who cracked her codes and got lucky searching around porn websites could find it. But setting up the account was only the first step.\n\nSkankBank asked her to set up two profiles, the first was for people who had not paid and the other for her fee paying fans. Gladys kept her free profile generic, using the only place-holder photos and not filling out any details, then she switched to her premium page and saw it awaiting her content.\n\nGladys took a deep breath, the video ahead she hadn't planned per se, it had just been spinning around her head, fully formed, keeping her from sleep. She went to her bathroom to prepare, a process speeded along through familiar routine, she was making sure she looked exactly as she would look on an average school day. Her long black hair was styled into a sensible bun, her face was smoothed and contoured with subtle makeup, not enough to draw attention or get accused of being too sultry, but more than necessary to look professional. Next her work clothes, a black knee length skirt covering thick black tights, white blouse with a tie in school colours, and finally a heavy grey blazer. It was exactly as she would wear to school with the exception that she didn't have on any underwear.\n\nShe propped up her phone against a table in her bedroom, facing the bed that all the previous heads had slept in, and pressed record.\n\n\"Hello!\" She giggled. \"If you're seeing this then you have solved my clues and found my shame. Well I guess you've earned this.\" Gladys took a couple of steps back and began to sway as she removed her blaser, staring at the light on the phone that illuminated her silent striptease and reminded her she was being recorded.\n\n\"Can you tell already that I don't have a bra on? I couldn't bear to contain these humongous breasts a moment longer.\" She moaned, tracing herself through her blouse, letting her stuff nipples stand out against the fabric. \"Do you want to see them? Do you want to see the tits that students of my school have wet dreams over?\" She pulled off the school tie with a single practiced motion and began to undo her top button. With her hands shaking so badly, Gladys struggled, dancing on the spot and eventually gasping at the effort as her blouse loosened. When she noticed she was facing slightly away from the camera and still had six buttons to go, Gladys tried a different approach. She sighed, walked a bit closer so her torso was directly in front of the camera, and ripped her top open.\n\nButtons pinged everywhere as Gladys' breasts burst free, she gasped and then, having caught her breath, peeled off the remains of her blouse and fondled her exposed tits.\n\n\"Aren't these just the biggest, sluttiest tits you've ever seen? Don't you just want to shove your cock between them and jizz all over my face.\" She crooned before stepping back to unbuckle her skirt, she turned sideways so the camera could capture the full curves of her ass as she pulled the hem of the skirt around and down.\n\n\"Oh dear, these tights don't hide very much do they? I bet if you look close enough you can already see my pussy.\" Gladys acknowledged as she pulled the tights tight against her, framing her camel toe clearly for the camera. \"Better take them off, they'll only get in the way while I play with myself.\"\n\nGladys sat on the bed and peeled her tights down her legs, letting out a little squeal with the full realisation that she was fully naked in front of a camera recording her. She stood up again running her hands around every exposed contour, driving herself into a frenzy.\n\n\"I hope you like big asses.\" She almost screamed, bending over and pulling her cheeks apart. \"I've got this huge ass that's perfect for swallowing cocks.\" She walked forward, seamlessly traversing from bending over facing away from the camera to crawling on all fours on the bed. She collapsed forward as her hand traced a path down between her legs.\n\n\"God my pussy is so fucking wet, I bet I'm going to cum so hard. Do you want to watch me cum?\" She asked, not waiting for an answer before allowing her hand to start a frenzy of movement against her clit, not controlling her moans of delight, using her other hand to pull a cheek to one side to make sure the camera caught every inch of her show. It did not take long for Gladys to bring herself to a squealing orgasm, gushing over her bed before collapsing for a moment. She gathered her wits and walked back over to the camera.\n\n\"The rumours are true, Headmistress Gladys Hardwick is a horny bitch, and you just watched her cum.\" She said by way of a sign off before turning off the camera and collapsing on the bed to review the footage.\n\nGladys watched the video three times, and masturbated each time before steeling her resolve and uploading it to SkankBank.\n\nFinally, SkankBank asked what price she would like to set as the fee to see her profile and the video she just uploaded. She thought about it carefully, no amount of money was beyond pocket change for some of the boys at her school, she needed a way to dissuade them from paying. Suddenly she had an idea, she set the value to \u00a32047, the maximum SkankBank allowed. Then she went back over to the free profile and uploaded her picture from the school website, for her bio she copied and pasted the one from the school website into translation software, translating it to Polish then back to English so it was broken and not quite right. She had made sure the first lesson new students had in IT was how to spot an internet scam and she channelled her knowledge to make sure this page ticked every box. Then she screamed with adrenaline as she clicked \"submit profile\" and watched her page go live.\n\nIt was a very long shot, but now it was no longer impossible that someone she knows could find proof of her sluttiness.\n\n...\n\nGladys tingled as she walked the school grounds, she still maintained the stern exterior that solidified her authority and kept the sexual harassment to snide comments in quiet hallways. But whenever she overheard the latest comment on her body from the hormonal monsters she was in charge of, it cast her mind back to the video she had made.\n\nGladys continued to leave breadcrumbs when she could, \"492068617665206120766964656f206f6e20\n\n536b616e6b42616e6b\" was her confession, a string of hexadecimal code that read \"I have a video on SkankBank\" and was placed at the end of the small print in her email signature. She delighted that a confession of her slutty nature was sitting in the inboxes of all the governors, the parents, even a funny attachment she had emailed her husband from her work account. Nonetheless she was also able to remain calm as long as she received no sudden payments in her bank account from SkankBank.\n\nAfter a bit of time, Gladys wanted to try something, she wanted to make every rumour about her come true, to be the school slut they all speculated, but at the same time the idea of screwing a student made her retch and the teenager pocket miners only ever talked about her begging for schoolboy cock. She wondered if it was possible to direct the rumours, exert a modicum of control to guide them in the right direction but also leave them free enough to gather the chaotic momentum she loved. All it took was a subtle but deliberate alteration to a cafeteria supply order, mixed with a clever drafting of a morning announcement and Gladys was ready to see if she could steer minds.\n\n\"OK, before we move on to the results of our intramural rugby tournament, I have a couple of announcements. Firstly I'd like to remind all boys that masturbating in the showers is strictly forbidden. It is disgusting and we have had a series of clogged drains because of it. Secondly I'm afraid that the school has run out of cucumbers, so all canteen items with cucumber in them have been discontinued until we can order some more.\" She saw the horny minds in the audience giggling at what they thought would be a unique revelation, she was certain by the end of the day, every boy would think of her as someone who used up all the cucumbers with her constant masturbation. Sure enough that same day she overheard a boy whispering to his friend.\n\n\"I bet the canteen ran out of cucumbers because she shoved them in her pussy.\"\n\n\"Girls only need the one cucumber for that Dennis.\" His friend replied.\n\n\"Not if she used one after another. Horny bitch like that, I bet she could spend the whole weekend fucking herself silly.\"\n\n\"Alright, if you want a moment alone with that thought, I'll be over here not being gross.\"\n\nGladys thought ahead to her shopping trip Friday night and hoped the nearby supermarket sold cucumbers by the case.\n\n...\n\nGladys awoke Saturday morning with a plan. She got the milk out of the fridge for her morning cereal and shuddered with delight at a vegetable drawer full of cucumbers. Her local store didn't sell cucumbers by the case, but did have display boxes and Gladys decided to take all the cucumbers in the topmost one home. She had resolved that by the end of the weekend she would have fucked every cucumber in her fridge.\n\nOnce she had finished breakfast, she made her way to the shower, grabbing a cucumber from the fridge. She felt how cold it was in her hand and decided to take them all out and lay them on the kitchen table to warm up. In the shower she eased the first cucumber inside of her, gasping at her willingness to follow unseen directions from the ignorant and horny. At first it was a bit awkward to get the angles right, but once she resolved to lie on the shower floor and got into a good rhythm, she managed to bring herself to climax with the first of her sex vegetables.\n\nWhen she went downstairs, with the hindsight of what fucking a cucumber entailed, the pile on the table became more daunting, if she worked her way through these her pussy would be dry and raw in no time. Her brain buzzed with ideas, the echoes of her suggested deviation ringing in her ears, before she had an idea.\n\n...\n\n\"Hello.\" Gladys said, stood in the middle of her kitchen, nervously twisting her exposed nipples, the light of her phone camera illuminating her naked body as it recorded. \"It is October 9th, yesterday the school ran out of cucumbers, and the rumour going around the students is that I took them all so I could fuck them. Sounds far-fetched doesn't it, however, as we both know, all the rumours about me are true.\"\n\nGladys reached over the table and picked up a cucumber, showing it to the camera. She sat on her kitchen floor and eased the cucumber into her pussy, moaning with humiliated delight. She pushed it in and out of herself for a few moments before giving her camera a cheeky grin.\n\n\"I don't need all the cucumbers if I'm just going to fuck them one at a time do I?\" She picked up a second cucumber, smearing it with olive oil (she had googled beforehand and had found that as long as you wash it thoroughly afterwards olive oil made good sex lube in a pinch). \"Do you want to see me shove this cucumber up my big, slutty ass?\"\n\nShe kneeled facing away from the camera, and bent over, using one hand to hold a cucumber in her pussy she used the other to ease a second cucumber into her ass. Gladys was not a stranger to anal, she had been with her husband a long time and so they had tried a little of everything, but the pressure of having something in her pussy as she pushed another thing passed her rectum was new. She let out an almighty moan as her ass opened up and she felt thoroughly filled.\n\nIt was awkward work pumping both cucumbers at the same time and trying to keep her punished holes in view of the camera. She almost called it at that, but Gladys had one more thing planned for her video.\n\n\"Oh yes...\" she moaned. \"So you can tell I'm an anal whore as well as a pussy whore. But I also want to show you how good I am with a cock in my mouth.\" She pulled herself back up to a kneel, using the floor to keep the cucumbers in her pussy and ass while she reached for another one. As this was less about her pleasure and more about the performance, Gladys took her time, sensuously licking the cucumber before wrapping her lips around it and pushing it down her throat.\n\nGladys pushed the cucumber further than she had ever taken her husband she pushed until her gag reflex kicked in and she began to choke on the cucumber. The thought of what she must have looked like at that moment, the pressure from her filled holes and the choking presence in her throat all came together to drive Gladys into overdrive. She bit down on the cucumber, forcing it to remain down her throat while her hands returned to plunging the cucumbers in and out of her pussy and ass, her whole pelvis thrumming in the rhythm as she orgasmed to the overwhelming stimulation.\n\nShe collapsed on the floor and coughed up the cucumber, shaking with the aftershocks of her successful experimentation. She gathered her thoughts and stood up, grabbing her phone.\n\n\"Mmmm... so that was three cucumbers, how many do I have?\" She turned the camera to the kitchen table and the remaining ones, counting aloud. \"Still six to go. I better get moving.\" In that moment she had a wicked idea she knew she had to say out loud so she would be committed to it. \"I bet I could be a cucumber slut in every room of the headmistress' house. How many rooms are there? Besides the kitchen and the bathroom where I have already fucked myself. There's the bedroom, the office, the hallway, the spare bedroom, the living room...\" she paused, this was such a good idea but she had run out of steam one short until she realised, \"oh there's also the back garden, six areas, six cucumbers, I'll alternate between my pussy and my ass. I better get to work.\"",
        "Gladys stopped the recording but told herself she wasn't allowed to upload the video until she had completed her self-set challenge. Late that night, her pussy and ass practically singing, she stumbled to her computer and clicked \"upload.\"\n\n...\n\nHer experience with the cucumbers and the tingles of joy she felt as she walked the halls of her school meant Gladys was walking on air for some time. Although rumours endured they didn't evolve much, so Gladys had weeks overhearing conversations about her and cucumbers and thrilling that the students didn't know how true they were.\n\nAside from that Gladys kept herself busy leaving more of her breadcrumbs, she changed her email signature so the hexadecimal code now read \"I am a SkankBank slut. New videos soon.\" Her most devious plan was that she memorised the link to her profile in hexadecimal code and began writing it on any paper litter she found on her rounds of the school.\n\n'Surely someone will figure it out eventually' she thought to herself.\n\nAs autumn rolled round and the leaves began to fall, Gladys decided to get herself a new coat. As she was now headmistress with the salary bump to match she decided why not treat herself, and ended up buying a long brown designer coat from Burberry with no small price tag. After her first day wearing the coat around the school, the rumours she overheard changed in an unexpected but not unpleasant way.\n\n\"Have you seen the headmistress' new coat?\n\n\"The long brown one, yeah, who cares?\"\n\n\"Who cares? Oliver, that's the kind of coat flashers use. I bet she goes out at night wearing nothing underneath it.\"\n\n\"You think headmistress Hardwick is a flasher? That can't be true.\"\n\n'Not yet' Gladys thought to herself.\n\n...\n\nNight time at a boarding school was a whole other world. The boarding houses were separate from the school houses and night porters patrolled the grounds, but they were always short staffed and teachers always ended up picking up the slack to earn a bit of overtime. Gladys had told everyone it would be good for moral if she picked up the occasional night time shift just to show that she wasn't asking teachers to do something she wouldn't do herself.\n\nGladys shuddered, after all she had bought the coat because the weather was getting colder and now she was out in a cold, late October night wearing nothing but her flasher coat and some high heels. She had been wearing more when she did her first walk through the dormitories before heading back to change at the main school building where nobody patrolled at night, trusting the locks (that Gladys had the keys for), the alarms (that Gladys disarmed), and the security cameras (that Gladys turned off) to keep the school safe. She placed her phone on a plant pot facing the iconic mahogany front doors, angled to make sure the grand metal sign announcing \"St. Bernard's School: where the future is crafted\" was also in frame. She hit record, and took her place under the sign.\n\n\"So the boys in my school have been talking, and I heard they think my new coat looks like a flasher's coat. I don't think it looks like a flasher's coat, do you?\" She pattered to the camera, tuning around to show off her coat. \"Maybe it's something to do with the lining, does the lining make this look like a flasher's coat?\" She opened the coat, exposing her naked body to the camera, shuddering at the rush of cold air that hit her body.\n\n\"Oh dear, I'm a flasher. I guess that does make this a flasher's coat. In which case I better go show off my slutty flasher body to the whole school shouldn't I?\" She reasoned, walking back to her phone with an unbuttoned coat and letting the camera get a good look at her cold naked body before shutting it off. She had decided that tonight would be a series of videos of her flashing around the school, and she knew her first stop on the tour.\n\nThe grand hall was used for morning assemblies, as well as other scholastic events, so it was a staple of school life. It has been designed with a series of high windows to let in natural light, however the location of the stage meant the light would shine directly in the speaker's eyes in the morning, so assemblies almost always were done with the blinds closed and the lights on. This meant that despite it being the dead of night, the grand hall looked exactly as it would look for a regular school assembly. It took a bit of time and experimentation but Gladys was able to place her phone in just the right place in a middle row to provide an uncannily similar vantage point to a student in assembly as she walked on stage.\n\n\"Good morning students, settle down, settle down.\" She mocked to her imaginary audience. \"Recently a student found out about a profile I had set up on a website and is now blackmailing me. Which is why I will be taking the rest of this assembly like this.\" She stepped to one side of the lectern and dropped her coat, imagining the gasps and cheers that would come from an audience of boys seeing their headmistress naked. \"Yes the rumours are true, I am a dirty whore and now I want you all to see my slutty body. Are there any questions?\" Gladys mocked listening to various questions.\n\n\"What website did I have a profile on? Good question, it was SkankBank. Don't worry I will put a link in an email to the whole school later today, and of course I will drop the paywall. Surely stripping for the school is worse than the blackmailer just releasing your naughty videos? You are correct, however what you fail to take into account is that I'm a dirty whore who wants to be blackmailed. Are you still our headmistress? Well I suppose until someone complains and they fire me and probably arrest me, until then you can call me Headmistress Hard-dick, or if you don't like that you can call me bitch, slut, cunt, whatever takes your fancy. What made you like this? Well let me show you.\"\n\nGladys walked around and sat in front of the lectern, so she could spread her legs.\n\n\"Look at this juicy cunt, how could I not be a whore with such a ravenous pussy. Look at these giant swinging udders, I bet I could tit-wank ten cocks at once with these mammoth tits. You boys took one look at my body and knew I was an insatiable slut, I'm just fulfilling the role.\" She stood back up and took her position behind the podium. \"So what now? Well I guess you can do whatever you want to me until the police come over to arrest me for being an illegally ravenous cock-whore. If you need me I'll be in the boys toilets awaiting your abuse. Thank you, this ends the assembly.\"\n\nGladys picked up her coat and giggled incessantly until she was able to get back to the camera and turn it off. In her ad-libbing she had inadvertently planned the next step of her flashing expedition.\n\n\"So here we are in the boy's toilets.\" Gladys announced to her phone, now taking a selfie video looking down at her naked body. The toilets were far cleaner and more well maintained than she would have liked but the smell was dirty enough to lower her defenses as she posed kneeling next to the urinals and explored the cubicles. She got to one cubicle and her eyes widened with joyous possibilities.\n\nThere were large words above the toilet that read 'this toilet is dedicated to Headmistress Gladys Hardwick.' Gladys walked in and turned the camera to the walls of the cubicle, covered in the most obscene graffiti, all addressed at her, and pens left on top of the toilet roll dispenser to ensure any student could vent their sexual frustrations at their headmistress at will.\n\n\"This is the best thing I've ever discovered.\" Gladys moaned at the camera, her mind rapidly melting in the degrading smut that surrounded her. \"The students think I'm such a slut. Imagine what they would think if they knew I was reading their comments.\" She took a sharp intake of breath as an idea formed in her mind. \"Imagine what they would think if they heard me reading their comments out loud while masturbating.\"\n\nIt took Gladys a bit of time to figure out where to prop her phone where she wouldn't need to hold it, but where it could see all of her inside a closed cubicle. Eventually she had to make a concession and propped the phone on the sink across from the cubicle and left the door open. It made her more exposed and meant she had to shout louder to be heard, but also meant she couldn't read any graffiti on the door. Luckily enough there was enough smut on the remaining three walls to keep her going. She turned away from the camera and bent over the toilet, her hand wiggling into place on her pussy as she began to read the back wall.\n\n\"Hardwick looks like she'd be dirty in bed.\" She moaned. \"I'd fuck her so hard. Mmmm... she's got a fat ass I'd love to bury my cock in. I want to see her stupid face gagging on my cock. I bet she swallows. Oh my god... I'd fuck those huge tits off given an opportunity. I wanna see my cum on her giant tits. If she wore a low cut top to assembly, I would jizz my pants right there and then. Oohhh... I want to shove my cock deep in her ass.\" Gladys ran out of words on the back wall (although there were also plenty of drawings to make her mind wander.) She turned around and sat on the toilet seat, opening her legs wide and continuing to read the comments in a lustful frenzy as she punished her clitoris.\n\n\"I bet she fucked her way into becoming headmistress. Of course I'd give her any job she asked for while on my cock.\" Gladys slowed down a bit, but started using her other hand to shove two fingers into her pussy while she fingered her clit. She looked at the camera to give her imaginary audience an explanation. \"I have slowed down because I have decided I'm not allowed to cum until I have read every comment on these walls.\" Speaking it aloud made it true in Gladys' mind as she brought herself tortuously close to the edge again and again.\n\n\"I don't get what the fuss is about, I wouldn't let that fatass lick my cock clean after a piss. In which case I'll take your place next time she's at the gloryhole. Ah... can you imagine Hardwick doing a gloryhole? She'd be a one woman sperm bank in seconds. Can we talk about how big her tits are? Seconded. Getting a tit-fuck from her must be like shoving your dick in the middle of a sumo match. Her tits are so big my sperm got altitude sickness. I wanna... oh... I wanna fuck her... mmmm... I wanna fuck her so bad. I'd sign away my inheritance and go live in a monastery for the rest of my life just to see a bad photocopy of her left nipple. I'd slam my balls in a bear trap just to have her sit on my face to put me out of my misery. You beta males keep simping, if I had my way I'd have Hardwick next to my toilet, begging me to let her lick my ass clean. Yeah, for me Hardwick would jump pussy first into a cactus patch just to watch my balls jiggle as I laughed at her. Hardwick would crawl naked over hot coals just to... oh my god no... just to suck my cum out of... oh, ohhhh... out of my sock drawer.\"\n\nGladys screamed into an orgasm, squirting all over the toilet and thrashing wildly. There were still unread comments, she had cum too early. When she finished letting wave after wave of almighty orgasms wash over her body, she sheepishly looked at the camera still recording.\n\n\"Oh no, I hadn't finished reading all the comments when I came. I guess I am a stupid slut who can't follow orders must be punished, right?\" She looked around trying to think of an appropriate punishment, before seeing the pens and having an idea. \"So as far as I can tell, there are four poor students out there, who never got to hear me say their comments while masturbating. I don't want them to think they wasted their time expressing themselves, so to make it up to them I'm going to copy their comments onto my body for later.\"\n\nShe picked up one of the pens and began writing across her tits, slowly reading out what she was writing.\n\n'Hardwick told me she would change her name to toilet bin if it meant she got to suck the tampons of the last girl I fucked.' She then bent over and began to write on her inner thigh. 'I'd fuck her so hard, her collasal bouncing tits would cause earthquakes.' She moved to her other thigh. 'This dick only wants thicc, bring me Hardwick's pussy.' Then finally she wrote the final short sweet graffiti on her pubis just above her pussy. 'Hardwick can suck my hard dick.' Gladys moaned with humiliated delight before moving the camera to view the toilet seat.\n\n\"I can't very well leave without leaving my own note can I?\" She asked the camera as she began to scrawl on the toilet seat itself.\n\n'Headmistress Gladys Hardwick rubbed her pussy raw right here on this toilet. She also recorded it all to upload onto her SkankBank page.'\n\n\"Do you think anyone will believe that?\" She asked the camera with a cheeky grin before signing off.\n\n...\n\nGladys walked the school grounds, keeping an ear out for any good rumours, pen at the ready in case there was another piece of rubbish to write her web address on, when out of the corner of her eye she spotted an oddly located bit of graffiti. Inside a little alcove, above some stairs where a student would have had to have climbed up to reach were the words 'Hardwick jilled-off here.' Later on her rounds she saw the same words by the dumpsters behind the canteen, then again on a section of roof near an open window. It seemed that her confession in the toilet had sparked a new trend for students finding more and more adventurous places to graffiti that specific fantasy.\n\nOver the next month Gladys made a mental note whenever she spotted the soon iconic graffiti and would return later that night to make it a self fulfilling prophecy. Meanwhile the most common rumour floating around was the childish speculation that some of that graffiti was written in earnest by Headmistress Hardwick, she had to go hyperventilate in her office when she overheard a student correctly guessing that the confession in the toilet was her handiwork and even talking about trying to find her account on SkankBank.\n\nAlas like any rebellious teenage trend it eventually got out of control and with a heavy heart, Gladys had to put a stop to it. She sulked in her office for the rest of the day after she announced that the groundskeeper had been given special graffiti removing tools and if additional graffiti was spotted the whole school would be punished. Even her dedicated cubical in the boy's toilet was not spared. The only consolation to be had was that she hoped that spared this distraction, the boys would get to work spreading the latest disgusting rumours about her. Sat alone in her office, she took out a pen and wrote 'Hardwick jilled-off here' on her desk and hid it under some paperwork, chuckling to herself.\n\n...\n\nHeadmistress Hardwick's frustration was building to boiling point. The students were due to go on Christmas holidays soon and still any time she overheard her name in private conversations it was inevitably either boys bitching about her sternness, speculating which teacher she had slept with, or if she was lucky a word of mouth continuation of the 'Hardwick jilled-off here' graffiti trend where they guessed the worst places for her to masturbate. All of which were becoming tedious for her. She even occasionally visited different toilets after hours to see if any spiritual successor to her cubicle had emerged but her strict attitude had been too effective at dissuading the physical manifestation of rampaging hormones. Once again she had to personally intervene to guide the rumours to more fruitful soil.\n\nAt the start of the final week before the Christmas holidays, Gladys decided that assembly should address the upcoming holidays, but she added a couple of lines to her speech to get some adolescent brains buzzing.\n\n\"...Of course regardless of your beliefs, for most people Christmas is a time to reconnect with family, but spare a thought for those who cannot. I myself will not be seeing my family over Christmas as I will be staying in the master's house here on campus, but nevertheless I have plenty planned to make my Christmas holiday special for me...\"\n\nAs Gladys delivered her speech, she saw the grins and nudges of student's whose minds were working overtime speculating on her Christmas holidays.\n\nHer mind swum in the whisperer conversations as she walked the halls of the school. There was all the standard and uninspired guesses that she would spend the holidays with her lover, whichever teacher that was. Some speculated an upcoming orgy the likes of which the world had never seen with Gladys as its centrepiece. There was even one kid who thought Gladys would be spending the Christmas holidays being trained to be a slave by a series of masters and mistresses. All beyond her ability to organise, however her Christmas plans did eventually come to her in the form of a conversation she overheard in the cafeteria from kids eating lunch a couple tables away.\n\n\"... I reckon it's Miss Amal she's spending the holidays with.\"\n\n\"Take it seriously Scott, don't just let your dick's love for interracial lesbian porn do the talking.\"\n\n\"Everyone loves interracial lesbian porn, probably including Hardwick.\"\n\n\"Fuck off! listen, here's what we know about the headmistress. She's a flasher, so definitely an exhibitionist, and she's masturbated all over the school, so she's not having an affair, she's just really into mastubating.\"\n\n\"That's no more based in reality than Scott's interracial lesbian ideas. It's just a bunch of graffiti.\"\n\n\"Remember the cubicle, no two people had the same idea about Hardwick then all of a sudden everyone agrees she's a flasher and a public masturbater. There must be something in it.\"\n\n\"Fine, so she's going to spend the holidays flashing and masturbating.\"\n\n\"She's already been doing that, she'll want to do something special during the holidays when nobody is around.\"\n\n\"Alright we get it, you've done some deep thinking, cock in hand, about Hardwick. So tell us Sherlock Bones, what has your brilliant mind deduced.\"\n\n\"Well exhibitionists enjoy the risk, when we all leave she's going to need to do something to cause a requisite increase in risk. So I think she's going to do something to make it impossible for her to wear clothes for the Christmas period, like locking them away or something.\"\n\n\"That's stup...\"\n\n\"Let him finish!\"\n\n\"Well the nudity is the only thing she can plan, after that it's just a matter of her living a life where she is never not naked, always in a sexual situation, so she's going to end up taking risks, setting herself challenges, spending the holiday being the campus' whore.\"\n\nGladys had no idea how she was going to thank the student who came up with these ideas, in fact she deliberately left the canteen without looking over her shoulder so she would never know who had drafted her Christmas activities.\n\n...\n\n\"Hello again SkankBank subscribers.\" Gladys announced to her camera, now recording her propped against a flower pot in her front garden as she stood in front of her house. \"I'm currently freezing my big slutty tits off because I am outside my house and all my clothes are inside my house. So I'm going to explain my plan while I walk to the school and get by the radiators.\" Gladys grabbed the camera and began a cold quick march towards the school, shuddering as she went.\n\n\"So everyone went home for Christmas except me, and my students all were wondering why. They know I'm an exhibitionist slut so they had some ideas but let me explain in full what is going to happen. I've locked my house up tight, there's no way I'm getting in there without this key.\" She held up the key for the camera as she barged her way through the front door to the school and headed towards her office.\n\n\"God my plan ahead is already making me so wet, but I've promised I won't touch myself until I have finished my plan, that way I become stupider and sluttier every moment. So this key is the only way for me to get into my house and collect my clothes, without it I am stuck naked. Here on my desk I have a padded envelope addressed to the school with a second class stamp on it.\" She picked up the envelope, dropped her house key in it and then sealed it up.",
        "\"By my calculations, if I were to post this, I would be stuck naked for quite some time. It's Saturday night so they wouldn't pick up the post until Monday. In theory this should take two to three working days, however Wednesday is Christmas Eve, so they won't be able to get the key to me until the next working day after Christmas, according to the website that is the 27th December, but we all know how things take longer over the Christmas period. So if I were to post this letter I will be stuck naked for at least seven days. So here's what I am going to do before I'm allowed to fuck myself silly for you.\" She set the camera down and began to slowly play with her pussy to underscore the frustration she was causing herself.\n\n\"One: walk to the postbox, which is on a main road by the way, and post this letter. Two: go back to my office and write down twelve different tasks with increasing deviancy, the penultimate four should be things I would never dream of doing, totally unthinkable, and one for the final day that will be completely devastating. This way I can have the twelve days of Christmas, constantly on edge about if royal mail will be on time.\" Gladys had to pull her hand back from her pussy to keep herself from orgasm, her frustration was bubbling so she finished her explanation, snatched the envelope and stomped into the dark.\n\nGoosebumps covered every inch of Gladys' naked body as she shivered her way into the dark. The boarding school was deliberately away from the nearby towns so the roads were quiet, but that didn't stop her from shivering behind a gate to build up the courage to venture off campus. She ran to the postbox, her camera responsibilities temporarily forgotten in favour of the need to support her huge bouncing breasts as she ran. She held the camera wide to catch her shaking with cold, frustration, and fear, holding the envelope in the mouth of the post box.\n\n\"If I let go of this envelope, I will be stuck being the school slut for at least nine days. What if Royal Mail loses the package? Or the key pokes a hole in the envelope and falls out? Oh my god what if... ah... I dropped it. Too late now it's in the postbox, I'm stuck like this.\" She squeezed her legs together, her hands were shaking, she ran back to the office where her next task awaited her.\n\nGladys deliberately didn't want the camera seeing what she wrote down, but every time she stopped writing she moaned with longing for the orgasm awaiting her. She gasped with dread at some of her ideas, she squealed as her writing and her thoughts became more erratic. Then with an almighty yell she announced that she was done and immediately grabbed a vibrator from her modest collection of sex toys that now resided in her office and pleasured herself to one of the fastest orgasms she had ever had.\n\n...\n\n\"Day one: write a new insult across your body in permanent marker every day until your keys arrive. The insult must be something you have heard a student say about you.\" Gladys read off her notepad. She took a couple of steps back to show the camera that she had gone big for her first day. She had written 'Whore' in huge, multicoloured letters across her tits. \"Nothing too strenuous for the first couple of days.\"\n\n...\n\n\"Day two: take an A3 photocopy of your tits and run it up the school flagpole.\" Gladys announced, the camera panned from her naked body (now with the additional label of 'big titted slut' on her leg) to the flagpole, her breasts fluttering in the breeze.\n\n...\n\n\"Day three: last of the easy ones.\" Gladys announced between deep breaths in the gym, her body covered in sweat, 'flabby cocktease' now written on her tummy. \"Cycle one mile on an exercise bike with a dildo on the seat.\"\n\n...\n\n\"Day four: Christmas Eve.\" Gladys strained, she looked particularly uncomfortable, and not just because of the new label of 'loose cunted fatass' written across her bottom. \"One student told me how in Russia they fast for Christmas Eve, so I decided on a more rigorous routine of ensuring nothing enters or leaves my body for 24 hours. I have of course had a butt plug in me all day, and I have been wearing a gag, to stop me eating, but I have removed it occasionally, that is because every time I have peed today, I have done so in a bowl that I have then drank.\" Gladys shuddered with discomfort. \"I've never tried something like that before but look at me now, a piss drinking whore, my students would be so proud.\" In the background a clock struck for midnight. \"Oh thank God, merry Christmas everyone, I'm going to go take this plug out and relieve this incredible pressure within me.\"\n\n...\n\n\"Day five: Christmas day.\" Gladys nervously announced in the canteen kitchens, some more space found on her left breast to write 'cocksucking bitch.' \"So this one is a bit dangerous but I promised I would do it. Today I am going to be the Christmas dinner.\" Gladys picked up a bottle of sunflower oil and began applying it liberally to her body as she continued her explanation. \"Now I know that the traditional Christmas meat is a turkey, but turkey is a lean meat and I'm clearly not, so instead this dirty fuck pig is going to make herself into roast pork. Oh that reminds me.\" Gladys put down the oil for a moment and picked up an improvised nose hook she had crafted out of paper clips and elastic bands, squealing for the camera as it pulled her nose up before finishing the job of oiling herself.\n\n\"Of course, as any chef knows, the secret to a good roast is the stuffing.\" She joked as she picked up a parsnip and bent over so her camera could watch it get slowly eased into her ass. Next she took a carrot and pushed it into her pussy. \"Now that I am all stuffed it is time to cook me. I have this industrial size oven that I can just about fit into, Don't worry I've only set it to 80 degrees Celsius, and I've checked they circulate air so I won't suffocate, and I'm going to set a timer to automatically turn the oven off after 10 minutes just in case. So let's roast this pig.\" Gladys put an apple in her mouth as a final humiliation before walking over and opening the oven.\n\nA waft of heat hit Gladys as she lowered herself level with the oven, she turned to the left then edged herself sideways onto the waiting oven tray, the skin on her knees prickling with the heat. As she edged a bit further she yelped into the apple as her nipple brushed the hot pan, she tried to lift her chest up but her back was pressing against the top of the oven already. She took a deep breath, pivoted, then collapsed inwards, pressing her oily hanging breasts against the pan. She grabbed the oven door and closed it behind her, she was now jammed into a hot oven for up to ten minutes (she could open the oven door whenever she wanted but was resolute in her plan to stay in for the full 10 minutes.)\n\nGladys moaned and squirmed with the full sensory overload she was feeling, her body was already boiling, especially where she was making contact with the tray on her knees, elbows, torso and breasts. She felt the oil begin to prickle her skin as it heated and dripped over her body. With the oven light on it felt like she had a spotlight on her and she spent a moment lost in a fantasy of her kitchen staff all gathered around the oven watching their boss become slut meat. The carrot began to slip out, so with some manoeuvring Gladys was able to reach a hand down to push it back in and the effect was immediate.\n\nImmediately she started to push the carrot in and out of herself, harder and faster until she was pounding her pussy as her body turned to heat around her. The oil dripped onto the tray around her breasts, creating a pool of heat that clawed at her as she swayed back and forward with the effort of pleasuring herself. Eventually the light turned off above her to signal the oven was now off, but Gladys didn't leave until she finished herself off. The oven door opened and smoke rose as Gladys rolled off her tray, heat rippled off her as she went to the camera, taking the apple out of her mouth to reveal a huge grin.\n\n\"This pig has been stuffed, roasted, and is now streaming hot and begging for you to come eat her.\" She concluded before turning the camera off.\n\n...\n\n\"Day six: boxing day.\" Gladys stuttered out through chattering teeth. She was outside in the school grounds, 'bimbo cocksleave' newly written on her inner thigh. \"Today I'm going to be using the school pond to do my own version of those nutters who go swimming every Boxing Day.\" She turned the camera around as she put it down on a bench facing the pond. It was an idyllic pound, well maintained, and from the screams of the headmistress as she lowered her naked body into its still water, freezing cold. She swam in a small circle before climbing out, her body covered in goosebumps, her teeth chattering, her nipples so stiff she could have used them to engrave a new plaque for her office.\n\n\"I much preferred the oven.\"\n\n...\n\n\"Day seven: the final day.\" Gladys began standing in the entrance hallway of the school, 'cum guzzling bitch' written arching around her neckline. \"The post arrives in the early afternoon, if my key isn't with it I move on to the unthinkable challenges. I bet you'd love that, me stuck being a dirtier and dirtier slut while the key sits in some sorting office. Can I let you in on a secret? I'd love that too.\" Gladys took a moment to let that revelation set, not just with her imaginary audience but with herself as well.\n\n\"Today's challenge is simple, I'm going to fuck Lord Darlington.\" Gladys turned the camera to the bronze statue of the school's founder in the centre of the entrance hallway, a stern upright man, looking imposing and respectable save for the dildo that had been hastily tied and taped to his crotch. Gladys began her show by wrapping herself around the statue, kissing him on the mouth while running her hands up and down his body. His face remained impassive as she knelt in front of him and began to suck on his bright pink surrogate cock. Once she was satisfied her tonsils had been suitably tickled she stepped away and bent over, forcing her wet pussy onto the waiting dildo.\n\nUsually when having sex doggy style the man does most of the thrusting, but Lord Darlington remained impassively still, so Gladys began rocking herself backwards and forwards, her ass bouncing off his bronze lap while her swinging breasts swayed with the pounding rhythm. After some time Gladys screamed and pulled herself as close as she could to drive the dildo deep into her for her orgasm. She collapsed off of the lord before standing up and giving Lord Darlington one last lustful kiss.\n\n\"I love this school so fucking much.\"\n\n...\n\n\"Day eight.\" Gladys shuddered. She was blushing all over with fear, 'rape meat' written around her neck like a choker. She sat next to a blue box built into an office wall. \"I know I said I was looking forward to this, but now I'm worried about what I have to do if there is no key in this box.\"\n\nGladys opened the box and pulled out a fistful of letters that had been delivered the previous day, placing them on the table one at a time before shuddering in recognition that her key was not among the post. She picked up her notepad and read out the first of her unthinkable challenges.\n\n\"Go to the road running down the side of the school, masturbate underneath the street lamp, you are not allowed to stop until a car honks its horn at you.\" She stammered out, pale-faced. \"I suppose it's about time, I can't exactly be the school's exhibitionist slut if I've never shown off my body to a stranger before.\" She picked up the camera and walked to the door, it wasn't too late in the afternoon but winter meant night had already long become dark outside.\n\nSt. Bernard's location in the countryside meant the nearby roads were unlit. Gladys looked out into the darkness and searched her memories until she figured out where she thought the nearest street light was. There was nothing but darkness in the camera shot for some time before an island of light erupted over the horizon. A crossroads that had seen enough accidents to compel the council to install some lighting. Gladys propped her phone up on one corner and took her place on the far corner, awkwardly standing with her legs open, playing with her pussy.\n\nIn the middle of the Christmas holidays, there wasn't much reason for people to travel the area near the school, so Gladys ended up standing alone for quite some time before she cringed with embarrassment at the sound of an approaching engine. She squealed and danced on the spot, her body reacting to a deep craving to run away from her inevitable discovery but in the end she stayed put as a silver jaguar pulled up to the crossroads. One downside Gladys hadn't considered about choosing the crossroad was that cars wouldn't be zooming by, they had to stop to check the junction was clear. The camera didn't catch it but Gladys' eyes were wide with fear as an older man pulled up to the junction, and stared at her.\n\nAges seemed to pass as the driver of a silver jaguar looked over Gladys, as his eyes roamed her body, there was a moment of true terror for Gladys as his eyes met hers, she was staring into a stranger's eyes while she stood nude and masturbating next to the road. A grin crawled across his face that spoke to a malevolent plan forming in his mind. Just as he was about to undo his seatbelt, another car pulled up behind him, honking their horn at the car they thought was waiting at the junction for no reason. As the man was distracted, Gladys made a run for it, grabbing her phone and fleeing into the darkness. A couple of times on her walk back to the school she had to hide as a silver jaguar slowly patrolled the area.\n\n...\n\n\"Day nine. You may notice I am not by the office post box today. I think that I have being playing the part of a stupid whore so long I'm actually becoming one. I was so busy thinking about my hungry pussy, I forgot that there's no post on Sundays. So I'm going to have to do another of the unthinkable challenges. But before we start, you also may have noticed I haven't added an insult to my body. I thought you would want to watch as I added this one.\"\n\nGladys sobbed as she took the pen out and leant in really close so the camera could see her face. Then with a shaking hand she slowly wrote 'stupid cunt' across her forehead.\n\n\"So my next unthinkable task: time to punish those huge dirty udders of yours... I actually wrote that, pick up a brand new pot of elastic bands, and your smallest dildo. Put the dildo in your ass and start walking towards the nearest town. Every time the dildo falls out of your ass you must put one elastic band around one of your whore tits.\" Gladys moaned in remembrance of the horny frenzy she was in when she wrote this.\n\n\"If there are still elastic bands left in the pot when you reach the sign that says 'welcome to Grendelton' you can turn around and come back, once you've wrapped the rest of the bands around your tits of course. But if you can't keep your sphincter tight like a good slut, and run out of elastic bands before you reach the sign, you can only come back once you have found someone in Grendelton to give your breasts a firm squeeze. You may only take the elastic bands off once you are back at the school.\" Gladys squealed with fear, when she started writing these ones, she was certain they would be speculative fiction, not only did her body shake in fear at what she was to do, but the reminder of the state of arousal she was in and the insane things awaiting her if the package didn't arrive.\n\n\"I think with holding the pot of elastic bands, dealing with the dildo, and the inevitable fingering of my horny cunt, I'm going to have my hands full on this one. So I'm afraid I'm going to leave the camera behind and report back when I'm done.\"\n\nThe video cut out but immediately cut back to Gladys looking exhausted. Her tits were red and bulging away from her body as the elastic bands cut off circulation and she spoke in short stuttering sentences.\n\n\"I did it. Grendelton is quite far to walk. At first the dildo fell out a lot. But then I got use to it and it only fell out a few more times. It's still in there now.\" Gladys turned around so the camera could watch her pull the dildo out of her butt while moaning with pleasure. \"So I didn't need someone in Grendelton to grope these tits. Oh these slutty tits. They're so sensitive right now.\" To illustrate her point she lightly tickled the sides of her bulging breasts and her whole body shook with pain and pleasure. \"So the only other thing to report is I was seen by at least a couple of cars, I didn't keep count because I was distracted but probably five or so. Half the teachers in this school live in Grendelton so I hope it wasn't one of them driving. Anyway, now it's time to take the bands off.\"\n\nGladys had fetched some scissors and made sure the camera got a good view of her slipping them under the bands and cutting clean through them. She screamed and collapsed on the floor but some vestigial sense of mission forced her upright to cut free her other breast. She thrashed and screamed as the immense pressure released, before crawling over to the camera.\n\n\"That postman better have my motherfucking keys tomorrow.\"\n\n...\n\n\"Day ten: a large bundle of post arrived today, I hope my key is with it.\" Gladys announced next to the office post box, 'fat slut' written on her cheek. She slowly moved through the box until her eyes lit up, it was her envelope with her house key in it. She opened it and dangled the key for the camera, mocking her imaginary audience before shutting the camera off.\n\nThe next scene was her standing in her day to day headmistressing clothes, the same outfit she was wearing when she shot her first video for her SkankBank profile, however the writing on her neck and face were still visible, undermining her new stern headmistress look and attitude.\n\n\"Now that I have my clothes back, I am no longer some stupid slut, I am the headmistress of this school and you will treat me with respect.\" She ordered at the camera. \"However, I have decided it is only fair that I fill you in on the final three tasks I would have done were it not for my keys arrival.\" She pulled the notepad up to her eyes and read in a level, matter-of-fact way. \"Had the keys not returned today, I would have been ordering takeaway food to the school, then I would have offered the delivery boy free reign on my body in lieu of a tip. Had the keys still not arrived tomorrow I would have tied myself up inside the dumpsters outside the canteen and stayed there until freed by the bin-men who I had ordered for that day. Finally, if I made it to the end of the period without getting my key, I was going to walk to the post sorting office in Grendelwood in broad daylight, demand my package from the postal workers, then tie myself to the sign outside until I got my package. So you can see how it was good the package wasn't lost.\" A slight crack in her stern exterior appeared as Gladys gave herself a moment to blush at the thought.\n\n\"Now if you will excuse me, I'm going to see if I can wash this disgusting permanent marker off me before the students start to return. After all, I'm looking forward to hearing what rumours they make up about me in the new year.\n\n...\n\nEpilogue.\n\nGladys hated governors' meetings, the governors liked to present themselves as maintaining strong overview of the school but we're never concerned with the day to day minutiae of actually running a school, so the meeting was a full day of Gladys sat listening and nodding while out of touch men showed her graphs and data while abstractedly talking about the basic concepts of teaching.\n\n\"Well I'd say it's time for a quick lunch break before we get back into it don't you?\" A man with an unironic mustache announced. Gladys calmly walked out so she didn't look like she was in a rush but the truth was she had to use her lunch break to stay on top of her work while cramming whatever lunch she could scrounge into her mouth. She sat in her office swimming in emails and plans, barely getting a few bites of her smoked salmon and cream cheese sandwich before seeing the clock practically screaming at her to get back to her meeting before her tardiness made a negative impression.",
        "As she stormed through the hallway she scanned through her phone swiping aside notifications for her husband's most recent doting text message, whatever her friends were liking and messaging on Facebook, and the spam emails that piled up every day. Suddenly she saw a notification that made her blood freeze, her stomach crawled up to her throat and threatened to jump out.\n\n'Citybest Banking App: \u00a32047 has been deposited in your account.'\n\n\"Come on Headmistress, the meeting is starting again, I'm sure whatever that is it can wait until the end.\"\n\nGladys had a feeling she was going to be distracted until she could get back to her computer.\n\n...\n\nSo thank you for reading this. I have a plan for a sequel but I also wanted to try engaging with my audience again. So I want to turn the comments section of this story into the rumour mill at St. Barnard's School.\n\nLeave a comment with a snippet of a students' conversation for Gladys to overhear and it will feature in the second part. If the rumour is juicy enough Gladys may even emulate it (although, fair warning, she will not be doing anything that directly interacts with her students.)\n\nSo channel your inner horny schoolboy and tell me what kind of whore you think Gladys is in secret."
    ],
    "authorname": "Iwroteathing",
    "tags": [
        "enf",
        "moral degeneration",
        "exhibitionism",
        "headmistress",
        "degradation",
        "humiliation",
        "recording",
        "streaking",
        "busty",
        "predicaments"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/vicious-rumours-pt-01"
}