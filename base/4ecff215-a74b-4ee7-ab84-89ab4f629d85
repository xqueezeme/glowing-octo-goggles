{
    "title": "Dark as Daylight Ch. 15",
    "pages": [
        "Note: I can't believe it! Instead of rejecting the story, they cut of at least 1, possibly 2 pages of it. I will add them here, hoping it makes sense to you, because they are out of context. Bob\n\n********************************\n\n57. Shocks to her system\n\nThey couldn't catch a break. They were up at 5 AM to get a 7 o'clock flight out of Washington National to LaGuardia Airport which was supposed to land at 8:35 AM. The long line of taxis that were normally in front of the hotel were not there. The reason was the dense fog. You couldn't see your hand in front of your face, at 'Foggy Bottom' (aptly named), no less drive-through it. They called Jet Blue and verified their tickets. They were told there was at least a 90-minute delay because of the fog. They went back inside the hotel and had a leisurely breakfast.\n\n\"Do you think this is just the beginning of the bad day, or is it going to get worse?\"\n\n\"Joe, do you want me to beat you to shit in the middle of a restaurant, or are you going to be nice to me today. I have to go to a dress shop, recommended by Zabo, because I do not want to incur his wrath this evening. I will spend 15 or 20 minutes there looking at the garbage the woman has to sell, and we will go to Macy's. I will buy my gown in the Junior's section for tomorrow night, in less than 1 hour.\"\n\nYou have confirmed early check-in at the Mandarin Oriental, so nothing can go wrong there. We will eat lunch, fuck until 4 o'clock, get dressed, and get to his home by 6 PM exactly. He will laugh at me, and grill you to make sure you are worthy of me. We will have dinner with his son William, his wife, Gwen, his younger son Patrick, and his other guests. Jokes will be made about us, until about 11:00 PM, when we will make our escape. After that the weekend is ours to do with as we please.\"\n\n\"What are you doing Monday?\"\n\n\"I'm supposed to go back to work, and find the person who's keeping us from changing my last name.\"\n\n\"Will one more day make that much of a difference?\"\n\n\"No, I guess not.\"\n\n\"Could you call in sick and tired; or just tired of being sick of this shit. I'm very good at keeping you tired.\"\n\n\"That's bull shit and you know it. I'm the one that keeps you tired.\"\n\n\"I'll bet you all day Monday that I keep you tired.\"\n\n\"There is a taxi outside, I'll pay the bill and we can get to the airport.\"\n\n\"Why is it every time I ask you a question, you always dodge the answer?\"\n\n\"You want the truth?\"\n\n\"We promised we would always tell each other the truth; don't you remember?\"\n\n\"Yes I remember. The reason I do it, is because it pisses you off. You become much more aggressive when we are in bed when I do it.\"\n\n\"Laura, if you want me to act like an ape in man in bed just say so. I try not to hurt you, because you are so much smaller than I am. If I pushed Junior to his limit, he would wind up in your lungs. I don't want to do that to you.\"\n\n\"Jefferson Atkins was bigger than you are, and he didn't hurt me.\"\n\n\"We are comparing penis size now? Who was Jefferson Atkins?\"\n\n\"That is none of your business. I was 18 years old when we coupled.\"\n\n\"Please tell me you were 5 foot tall when that happened?\"\n\n\"I believe so, but I can't be sure. I wasn't measured until I joined the FBI.\"\n\n\"I just know you're going to kill me before my time.\"\n\n\"It means we will be together for a very long time, Joseph.\"\n\n\"May God help us both.\"\n\n**************************\n\n\"Good morning folks; the FBI building, Dulles, or National?\"\n\n\"National please, and do not rush. Our airplane is delayed by 90 minutes, and we'd like all 3 of us to get there alive.\"\n\nAs the driver put their luggage in the trunk, Joe handed him a $100 bill.\n\n\"You will not exceed 30 miles per hour. If you do, the bags will come up front, and you will be in the trunk with a bullet in the back of your head. Do we understand one another?\"\n\n\"You do work for the FBI, don't you?\"\n\n\"Yes we do, and we do know how to commit the perfect murder.\"\n\n\"I do understand, sir. I will not exceed 30 miles an hour.\"\n\n\"You are a good man Mohammed. I do want you to go home to your wife and family tonight.\"\n\n\"Thank you very much sir.\"\n\nA trip that should have taken 20 minutes, took them one hour.\n\nAs Mohammed retrieved the bags from the trunk, Joe paid him the mount on the meter, plus $100 more.\n\n\"Thank you for getting us here safely. Continue driving this way until the fog lifts, and you will have a good day.\"\n\n\"Thank you very much sir. It has been my pleasure to serve you.\"\n\n\"I hope to see you when we return from New York Tuesday afternoon.\"\n\n\"My name is Mohammed Asashi. If you call my dispatcher, and give him your flight number, and my name, I will be here waiting for you.\"\n\nHe handed Joe his card, with all the information he needed. They shook hands and parted company.\n\n\"Did you smell it, Laura?\"\n\n\"Yes I did. He is either a courier, or they are going to use him to blow something up. I'm going to call it in so they can put detail on him.\"\n\n\"I believe I asked you a little while ago 'if this was just the beginning of a bad day, or if it is going to get worse. I believe Mohammed just answered the question for us.\"\n\n\"No Joseph, I think he just helped us stop an attack someplace in DC. If we told him to take us to the FBI building, and down to the garage to let us off, just think of the bedlam he could have caused.\n\nIf it doesn't happen today, and he waits for us until Tuesday, it works to our advantage. He does have to take some time off. Our forensic team can go over that cab with a fine tooth comb, to see what they have planned.\n\nOne of our covert teams can follow him wherever he goes, and see who his friends are. Your nose has just stopped what could have been a major terrorist attack on U.S. soil.\"\n\n\"You smelled it too.\"\n\n\"I need another star in my folder, like I need hemorrhoids.\"\n\n\"I know a way to give you those hemorrhoids.\"\n\n\"I'll think about it; for a very long time.\"\n\n\"Did you ever think that the next star would help you break the glass ceiling?\"\n\n\"You are another pain in my ass.\"\n\n\"You said you would think about it, for a very long time.\"\n\n\"They are calling our flight. If you don't want to go into the luggage compartment, be quiet.\"\n\n\"Yes Madame. I do not wish to get into an argument with you, in a tunnel with wings.\"\n\n*****************************\n\n\"FBI, we are carrying weapons.\"\n\n\"Yes agent Burkart, Mister Constantine, you have been cleared through by Homeland Security, and by the TSA to the aircraft. Your seats have been upgraded to first class. Please keep your weapons out of sight.\"\n\n\"Thank you very much.\"\n\nAs they walked through the gate, Laura said, \"As God is my witness, I am going to kill that man.\"\n\n\"The Attorney General? I know he won $250,000 because of you. Maybe this is his way of saying thank you.\"\n\n\"No, William Zabo did this.\"\n\n\"If he did, I'll bet you a dime to a doughnut, there is a limousine waiting for us at LaGuardia.\"\n\n\"Not even he would go that far.\"\n\n\"I don't know why, Laura, but I think that man likes you more than you will ever know.\"\n\n\"I don't understand why? I just feel like a pawn in his game. I'm doing everything legal to find the guy who is attempting to blow up that rocket. Tonight he is going to tell me who the man is.\n\nI'm not close to finding out the man's name. We just found the connection with the car in Switzerland, and wound up in Sweden. We found out because the Swiss are asking for extradition of the 3 men. They killed an important family in a shopping mall there.\n\nWe are so far behind him, we should just stop our investigation, save the money, and let him finish it. He told me the other day that there will be a trial for this man and he will not take part of it, because he's known him and considers him a friend.\n\nThe other members of the Project will pass judgment on him within the next 60 days. If he is not handed over to me to be tried and convicted under the law, I will know what the judgment was, and that the man no longer exists.\n\nSince William had no part in it I can't accuse him of murder, or any crime in the man's disappearance. I can't accuse any of the members of the Science Project, because they will plead ignorance. It is the perfect crime.\"\n\n\"May I ask you one favor please?\"\n\n\"Sure, anything.\"\n\n\"Don't let this ruin our weekend.\"\n\n\"As long as you attempt to fuck me to death, you have my word.\"\n\n************************\n\nAs he carried their luggage towards the exit, a liveried chauffeur held a sign bearing their names.\n\n\"I told you so.\"\n\n\"Shut up before I break your knees.\"\n\n\"Good morning Miss Burkart, Mister Constantine, would you follow me please. May I take your luggage?\"\n\n\"Will you be unemployed if I say no?\"\n\n\"Probably.\"\n\n\"I told you I hated that man Joseph.\"\n\n\"Miss Burkart, he is a really good man, when you get to know him. He is generous to a fault, as long as you do as he asks of you.\"\n\n\"So you are his slaves?\"\n\n\"Not by a longshot, Ms. Burkart. We have our jobs to do, and as long as we do them well, we are generously paid. Please come with me, Carolina is waiting for you.\"\n\n\"Oh yes, I must see these dresses, before I go to Macy's.\"\n\n\"Why would you go to Macy's to find a dress, instead of taking one from Carolina?\"\n\n\"I don't know the woman. I'm sure Mister Zabo is about to play a trick on me.\"\n\n\"Sit back and relax, I am sure you have heard of Carolina.\"\n\n**************************\n\nThey didn't enter by the front. The huge garage door opened and the limousine slid inside.\n\nLaura said snidely, \"Oh good, this is a mob operation.\"\n\n\"No Laura, traffic does not permit parking in front of the store. That's why we have this entrance on the side. You will love it when you go in to the main salon.\"\n\nAs promised, when she walked into the main salon, everything was too beautiful for words. The windows to the front and side of the salon were draped in heavy pink silk draperies, with lights focused on them to make sure no one could see inside.\n\nShe was looking around the opulent room, when a woman exited from the back.\n\n\"Good morning Laura, I am Carolina Herrera, it is my pleasure to meet you.\"\n\nThe name rang a bell, and as she tried to place it her mouth opened.\n\n\"Yes Laura, I am that Carolina Herrera. William is a very good friend of mine.\"\n\n\"That son of a bitch. Is there anyone he doesn't know in this world?\"\n\n\"As William will tell you, there are many people he doesn't know. Like me, he saw a talent, and he picked me up out of the gutter, and made me famous. How do you thank a man for that generosity?\"\n\n\"There is no way to repay him, except to remain his friend for life.\"\n\n\"That is the correct answer. If he calls me, and needs something quickly, I drop whatever I'm doing, and I start on his project. I never say no, and I never say I need more time. I will work 24 hours a day to get it done, and it will be beautiful. I did it for his daughter, Patricia, and many others.\"\n\n\"Do you have anything in a size 1. I need it for tomorrow night?\"\n\nCarolina looked at Joe. \"Do you know 'egg heads' cell number?\"\n\n\"I think I may remember it.\"\n\n\"Good; get lost. She will call you when she's ready.\"\n\n\"I'll be at the Mandarin if you need me.\"\n\n\"I'll be in good hands Joe. I don't believe we will be fucking this afternoon.\"\n\n\"I told you today was going to get worse.\"\n\n\"Do not proceed by hand. Get lost like the lady said.\"\n\nAs he departed, Joe heard Carolina say, \"Couldn't you find someone handsome, instead of tall?\"\n\nLaura giggled.\n\n**********************************\n\n\"Do I have any time restrictions?\"\n\n\"I must be at William's home at 6 PM.\"\n\n\"Let me see your luggage. What are you going to wear tonight?\"\n\n\"This jacket, blouse, skirt, and shoes.\"\n\n\"No, no, no, no. These will never do. Ladies get out here now.\"\n\n\"These are my best clothes, I like them.\"\n\n\"I'm very happy for you. You're not going to William's in them.\n\nA dozen women descended on Carolina. In Spanish, she started giving orders about each piece of clothing. Her best clothes disappeared in a flash.\n\nCarolina called out four names.\n\nWomen, whose combined age looked like it could exceed 500 years, walked slowly out of the back. Even though they were ancient, and bent over, each of them was taller than Laura.\n\nCarolina asked Laura if she was shy.\n\n\"No, not at all.\"\n\n\"Excellent, take off all your clothes and step on the low pedestal. We have to measure you for tomorrow night's gown. We will have to try on size 2 gowns to see if we can get them to a size 1, or if we will have to make a size 1 for you by tomorrow evening.\"\n\n\"I don't need anything fancy for tomorrow night. A simple sheath will do.\"\n\n\"No it won't. You are wearing a Carolina Herrera gown, to a Celebrity Event. The paparazzi will ask you who made the gown for you. You could say you did it yourself, or your mother did it, but you work for the FBI and you will not lie about it. You will be the belle of the ball, and you will tell them I made it for you.\"\n\n\"You still have your clothes on, and we are wasting time.\"\n\nWithout a 2<sup>nd</sup> thought, Laura stripped to the skin, and stepped on the low pedestal. She was used to taking orders, and she followed every one of them. The measuring went by faster than she thought, and the first size 2 gown came out.\n\nLaura gasp when she saw it. It was stunning. It was easy to get into and out of, and it turned out that is where the problem came in. From the waist down to her ankles it was perfect, too perfect. After more than an hour of trying, they gave up on trying to make the top of the gown fit. As they removed it from her, Laura' eyes were moist.\n\nCarolina brought her back to the here and now. She barked.\n\n\"You must shave that off. Many of my fabrics are translucent, and your hair is as black as coal.\"\n\n\"I look like a baby when I'm bald down there.\"\n\n\"You will be bald tomorrow afternoon, when we try on the dress, or I will pull each hair out 'One at a time.\"\n\n\"Yes ma'am.\"\n\nLaura didn't like the 2<sup>nd</sup> dress, and sent it back without trying it on.\n\nThe 3<sup>rd</sup> size 2 gown was breathtaking, but it was too small in the waist.\n\nLaura asked, \"How can a size 2 gown have a waist that is smaller than a size one person?\"\n\n\"Models are taller and thinner than you are. Some of them are size 0. I don't know who wore this dress last, but it must have been at one of my shows. I don't know why I'm discussing this with you. I have to find a piece of Royal Silk in 'Amaranthine' so I can expand the waist. If I can find it, this gown is perfect for you.\n\nThe search was on. The fabric was so dark many people mistook it for black. The ladies tried to use black to extend the seams, by 1 \u00bd inches, but it didn't work. Her store in Beverly Hills did not have the color. Her store in Malan did not have it either. None of her vendors had it. For 18 inches of fabric, the dress was put away, and a second knife was put through Laura's heart.\n\nAs dress number 4 came out, Laura knew this dress could not possibly be for her. It was meant for royalty, a well-known actress, or singer. The bodice looked black, but was actually a dark navy blue silk. It had jewels in a mosaic design, and long flowing arms, with jewels and sequins spiraling down to a hidden cuff. The bottom was 'Fawn,' from her hips to her ankles in a beautiful bell shape. The jewels started tight together at her hips, and exploded outwards towards the edge of the hem of the gown. She couldn't take her eyes off it, but she knew it was not for her.\n\n\"Carolina, the dress is stunning, but it's too good for me. Let's try something plainer.\"\n\nCarolina snapped back at her.\n\n\"Why do you sell yourself short? Just because you are tiny, does not mean you do not have stature among your peers. William does not do this for anyone. He knows you, and wants you to succeed. One day you will be a giant, and you will have no peers. They will be looking to you for guidance. Try on this dress, Laura. I will make it work.\"\n\nNearly 2 hours later, she looked in to the 3-way mirror and could not believe the person wearing the dress was truly her.\n\nThe four women were on their knees making last-minute adjustments, when they realized she was not wearing shoes. It was a ploy to keep her happy, until the hairstylists got there. He was running a late, and Carolina was giving him an ear full.\n\nThe women who took her clothes, when she first arrived, came running out with new clothes for her to try on.\n\nCarolina said, \"Take the dress off, and try these on.\"\n\n\"Can I put my underwear on now?\"\n\n\"If you insist.\"\n\nShe had barely buckled her bra, when a man burst into the room.\n\n\"Carolina, I'm here.\"\n\n\"You're 2 hours late Frederick; there's no excuse for it.\"\n\n\"If you look at my car, you'll be happy I am here at all. The police wouldn't let me leave the scene of the accident, until they wrote up everything. The idiot ran a red light and plowed into the side of it.\"\n\n\"You better do a great job on her hair, or I'll make sure you never drive again.\"\n\n\"Why are you angry with me? Get angry with the cabbie; he caused the accident.\"\n\n\"You should have taken the subway. It's faster and safer.\"\n\n\"Carolina your pain in my ass, as usual. Is this her?\"\n\n\"Yes, this is Laura Burkart, and if you upset her she is going to leave your hands on my walls as a thank you. Now, do your best work or you're in trouble.\"\n\n\"How do you want me to address you, so I don't get into any more trouble with her then I am?\"\n\n\"You can call me Laura.\"\n\n\"That's the dress you wearing tomorrow night?\"\n\n\"Yes, it is.\"\n\n\"Do you want me to cut your hair so you look good in the dress, or as you will look every day of the week?\"\n\n\"Is there a happy medium?\"\n\n\"Yes there is.\"\n\n\"Then that's the way I want you to do it. Just so you know, we are time sensitive. Don't sit back and admire your work, just work.\"\n\n\"I love people like you. Straightforward, and down to business.\"\n\n***********************\n\n25 minutes later he was done. She thought her hair looked gorgeous.\n\n\"Frank, why can't the people at Supercuts do it like this?\"\n\nHe laughed. \"Laura, most of those people stock the shelves at Walmart at night. They just got out of Barber College and have no idea what to do with hair. Anyone who is good with hair has been tutored by someone in a good salon for over 1\u00bd to 2 years. You don't come out of school knowing anything about hair.\n\nDon't go to Supercuts again. Find a good beautician, and let him or her do your hair. That way you won't look like you just came out of a Mixmaster, when they are through with you.\"\n\n\"Thanks Frank, what do I owe you?\"\n\n\"If I took a penny from you, I would never work again.\"\n\n\"That man has too much power.\"\n\n\"That man paid for my mother's cancer operation. It was something I could never have afforded to do. I do Mrs. Zabo's hair, and apparently she told him. What am I supposed to do, when I owe him my mother's life?\"\n\n\"I stand corrected Frank. I still think he's a pain in the ass.\"\n\n\"Everyone is entitled to their own opinion.\"\n\n\"If you 2 are finished yapping, she has clothes to try on.\"\n\n\"Don't argue with her. When she's in this mood, she is a pussycat.\"\n\n\"Out Franklin, out now.\"\n\n\"Yes mommy.\"\n\n**************************\n\nLaura slipped on the first blouse, and she knew she had died and gone to heaven. It had no weight to it all. It was a pale pink long-sleeved blouse with a high neck, and French cuffs. It fit perfectly.\n\n\"How did they do that? How did they make it fit so well?\"\n\n\"They had your blouse to go as a guide. They added an extra quarter inch to be safe, and there you are. Are you happy with it?\"\n\n\"Happy, I'm ecstatic. This is the finest fabric I've ever felt, and the fit is wonderful. It is better then the blouse I was going to wear.\"",
        "\"Good, because you have 5 more in the back, in different colors. Leave the blouse on, and try on the slacks.\"\n\nThe slacks were a little darker than the blouse, but you could tell they were a set. The zipper was on the side, and there were belt loops available.\n\n\"Your seamstresses are absolutely amazing. The slacks are perfect.\"\n\n\"Excellent, now here is what you are going to do. Except for your work clothes, you are going to give all the clothes you consider going out to dinner, or out with your boyfriend, to charity.\n\nClothes will be delivered to your apartment by a delivery service. They are licensed, bonded and insured. One of Williams people will be with them. You do not have to be home, because they will have a key to your apartment.\n\nEverything from socks to hats, if you wear one, had better be gone within 2 weeks. If the service is directed to clean out your clothing, you won't recognize your armoire or closet when you get back to New York. Undergarments and everything else in your apartment will be new. There will be no arguing. I have my orders. They have their orders. And all orders come down from the top.\"\n\n\"Does egghead have his tuxedo yet?\"\n\n\"I don't know what he's been doing. I've been here with you.\"\n\n\"Call him, and see what he's been doing beside playing with himself.\"\n\n\"I told him he wasn't allowed to do that today.\"\n\n\"Does he always listen to you?\"\n\n\"He does, unless he wants the shit beaten out of him.\"\n\n\"From the tone of your voice, I can tell you mean what you say.\"\n\n\"A friend won almost $250,000 betting on me beating him up.\"\n\n\"Explosives do come in small packages. Call him.\"\n\n************************************\n\n\"Hello Joe, it's me. I think we are finished here. What have you been doing all day?\"\n\n\"I'm happy you called now baby. Ten minutes ago, one of the girls might have answered. I've been partying all morning and afternoon, practicing for you tonight.\"\n\n\"I'm very happy to hear you had fun today. When I get to the room, I'm going to plaster the walls with your blood. Did you make arrangements for your tuxedo?\"\n\n\"If I'm going to be dead what do I need with the tuxedo?\"\n\n\"I didn't say you were going to be dead, I said you were going to be bleeding, profusely.\"\n\nShe hung up on him, and waited.\n\nCarolina asked, \"Do you two do this all the time?\"\n\n\"It's foreplay. My phone will ring in a moment.\"\n\n30 seconds later it rang.\n\n\"Are you going to apologize or am I going to hang up again?\"\n\n\"You are getting much too good at this game of ours.\"\n\n\"You promised not to have any other women in your life except me. Do you remember?\"\n\n\"I was the one who said it to you. I said it to you, without you badgering me about it. I told you I only wanted you, but you keep throwing these roadblocks between us. Where is my ring? I got you your ring. What is my last name? You won't let me change your last name until you catch this bastard. I so want you, every bit of you. I can't wait to have you as my wife so we can stop arguing over the little things.\"\n\n\"Did you get your tuxedo?\"\n\n\"I was going nutty staying in the room, so I asked the concierge where I could get a top-notch mohair tuxedo. He gave me 3 choices, and guaranteed me all 3 were the best in the area. I read all 3, and their reviews, and chose one. He called the store, set up an appointment for me, and had the hotel limousine take me there. My tuxedo will be ready by 2 o'clock tomorrow afternoon.\"\n\n\"You are such a good boy; I think I'll marry you twice.\"\n\n\"Wasn't that our original plan?\"\n\n\"I think so.\"\n\n\"When are you going to get back here?\"\n\n\"I should be back within the hour.\"\n\n\"If you are, we can fit 1 or 2 in.\"\n\n\"Turn down the bed, and heat up the hot tub, I'm thinking of you already.\"\n\n\"I've been thinking about you all day. Come home.\"\n\n**********************************\n\nAs they were packing up everything Laura cursed.\n\n\"That idiot of mine didn't tell me what room we're in.\"\n\n\"Did you ask him what room you are in?\"\n\n\"What difference does that make? He told me to come home, but didn't tell me where home was.\"\n\n\"Maybe you should call him.\"\n\n\"You're a genius.\"\n\n*******************************\n\n\"I'm turning down the bed now Laura; what do you want?\"\n\n\"I want to know what room that bed is in asshole.\"\n\n\"Do you remember the piece of paper I gave you with our complete itinerary on it? It had our flight numbers, hotel rooms, our return flight numbers, our hotel room when we returned, and everything else we needed to know. Where is that piece of paper Laura?\"\n\n\"It's in my pocketbook.\"\n\n\"That's what I figured. We are in suite 2016. Do you think you can remember that?\"\n\n\"Yes dear, I'm on my way. Don't be angry with me, I've had a long, tiring day.\"\n\n\"Just get home to me safely, okay?\"\n\n\"Okay.\"\n\n*******************\n\nThe chauffeur put everything on the cart at the hotel, and said something to the valet. They shook hands and Laura took the lead. When they reached the suite, she knocked on the door.\n\nJoe opened the door, naked.\n\nThe valet said, \"Very nice sir, but I'm working. Can I take a raincheck?\"\n\n\"You will have to ask my wife about it. I'm not allowed to touch women, but she never said anything about men.\"\n\n\"Joseph get inside and put a robe on.\"\n\n\"I think that means no.\"\n\nThe valet refused a tip and left the room quickly.\n\n\"What the hell did you buy, the entire store?\"\n\n\"Do you know what time it is?\"\n\n\"Yes, it is 3:15 PM.\"\n\n\"At 4:15 PM, we have to stop playing, and start getting dressed to go to Zabo's home. That gives us one hour, and you better be damn good between now and then. I am absolutely fried.\n\nCarolina is a wonderful woman, for a drill sergeant. She wants what she wants, and she wants it yesterday. You can't say no to her, just like you can't say no to William. She received her orders from him, and she follows them.\n\nBed now Joseph, I need help unwinding. \"Oh, Don't you dare touch my hair!\"\n\n\"Come to me darling, I'll lead you to greener pastures.\"\n\nThey should have left the wake up call.\n\n*********************************\n\n\"Dammit Joseph, it's 5:10 P.M. we will never get there on time.\"\n\n\"Yes we will. Do you want to take a shower or bath?\"\n\n\"I'd better take a bath.\"\n\n\"You take your bath. By the time you get out of the bath, I will have taken a cold shower, so I don't steam up the bathroom, shaved and done all the stuff I need do. The bathroom will be yours, and you will have plenty of time. What are you wearing to Zabo's?\"\n\n\"There is a new green outfit; slacks and a blouse. Carolina's staff made it for me.\"\n\n\"Okay, I will lay them out for you.\"\n\n************************\n\nThey were walking out the lobby at 5:35 PM, when the limousine pulled forward, and the chauffeur opened the door for them.\n\n\"Do you get any time off?\"\n\n\"Yes I do. If you would get in please, we are running a few minutes late.\"\n\n\"I'm sorry, it was my fault. I forgot to leave a wake-up call.\"\n\n\"Shit happens.\"\n\nThey drove up Park Avenue to 82<sup>nd</sup> St. and turned left towards 5<sup>th</sup> Avenue. As they neared the end of the street, 3 men removed parking cones and directed the limousine into the space.\n\nLaura said, \"He even has his own parking police.\"\n\n\"Hello Miss Burkart, Mister Constantine, are either one of you carry a weapon?\"\n\n\"George, you know damn well I am, and you know damn well you can't have it.\"\n\n\"Why do you always have to make my day harder than it is?\"\n\n\"Oh, she does that to you too?\"\n\n\"I swear Joseph, if you start in on me here, there will be blood all over the street.\"\n\n\"I was just commiserating with a kindred spirit.\"\n\n\"Continue going on that way, and you will be a spirit.\"\n\n\"Alfonse said it's okay for you to carry your weapon Miss Burkart.\"\n\n\"He knew he didn't have a choice. I either carry my weapon, or I go back to the hotel.\"\n\n\"Miss Burkart, I believe you are the only person I've ever met who would defy Mister Zabo.\"\n\n\"I'm not defying him. I just play on equal ground with him.\"\n\n\"Turn off the alarms, we don't want to wake up the neighborhood.\"\n\n\"How many alarms are there?\"\n\n\"6; 3 metal, 2 chemical and 1 radiation.\"\n\n\"He has them all covered.\"\n\n\"If you can afford it, wouldn't you?\"\n\n\"Alfonse wants you inside now, please.\"\n\nThe main door opened, and a man in a very sharp, expensive suit greeted them.\n\n\"Good evening Miss Burkart, Mister Constantine; Mister and Mrs. Zabo will be down in one moment. Would you please make yourself comfortable in the library? My name is Alfonse. I am head of security for Mister Zabo. If you need anything, please ask for me, and I will make sure you have it.\"\n\n\"Thank you Alfonse, I believe we met one time before.\"\n\n\"You have an excellent memory Miss Burkart. We met, very briefly, on your first visit here. This is the library, please make yourself comfortable.\"\n\n\"Not too shabby a place, is it Laura?\"\n\n\"I've been here before Joe. I try not to be impressed, but it doesn't work. All these books are first editions, and the bastard has read each and every one of them.\"\n\n\"What's the sense of having a book if you are not going to read it, Laura?\"\n\n\"You know I hate when you do that to me Mister Zabo.\"\n\n\"It always gives me a little lead on you at the start on our conversations. I'd like to introduce you to my wife, Jemma. She is the light of my life, and the mother of my children. I could not go on without her.\"\n\n\"The only reason that wrinkly old windbag says that about me, is because sleeping on his money is noisy and it wakes him up at night. Please call me Jemma.\"\n\n\"It's a great pleasure to meet you Jemma. I didn't know there was anyone in this world that could put him in his place.\"\n\n\"I don't put him in his place. I just beat the shit out of him, until he agrees with me.\"\n\n\"Do you see what I mean Joseph; I too have a kindred spirit.\"\n\n\"You already beat the crap out of me. You didn't need anyone's help to do it.\"\n\n\"Hello everyone, I'm sorry we are late.\"\n\n\"You're not late Patrick. You had a long walk from your home, through the backyard to here. It must have been exhausting. Laura, Joseph, this is my son Patrick, and his friend Audra.\"\n\n\"As long as you're still doing introductions dad, you have 2 more to do.\"\n\n\"Oh good the entire family is here. This is my son William Junior, and his wife Gwen. Gwen has just given birth to a beautiful baby girl.\"\n\n\"Congratulations Gwen, did you name her already?\"\n\n\"Yes we did. I named her after the aunt who raised me. We named her 'Hannah.\"\n\n\"That's a wonderful name. It's a very strong name. People will be drawn to her all her life. You made an excellent choice. How did your husband make it through the delivery?\"\n\n\"He didn't throw up. He was too busy laughing at his brother's jokes. I wanted to kill Patrick as I was pushing Hannah out of me. If he wasn't holding my hand I would've had it around his throat.\"\n\n\"You know that's not true, Gwenny. I was supposed to be looking at your vagina, watching Hannah squirt out. However, I was a good sixteen-year-old brother-in-law. I was kind, and nice enough not to look to see if you shaved or not.\n\nI was dressed up in greens, and could have taken over for Doctor Stephanopoulos, as she popped out of you, painlessly, because I had you laughing so hard. I held your hand, and told you a jokes, about your husband. I was a really nice guy.\"\n\n\"If you weren't holding my hand, you would be in a coffin now.\"\n\n\"Do you see what I mean dad; no good deed goes unpunished.\"\n\n\"I will admit you livened up the birthing suite for many hours. The nurses thought you were on speed. I had to convince them that it was only you, and for you that was normal. They didn't believe me; they did believe your mother.\"\n\n\"Thanks mom, at least you believed in me.\"\n\n\"Did anyone hear me say that?\"\n\n\"I can see this is going to be pick on Patrick night.\"\n\n\"No, there are other things to be taken care of this evening that takes precedence over picking on you, Patrick. I believe they will be more fun, and educational then picking on you.\"\n\n\"First, how did things go with Carolina's today, Laura?\"\n\n\"The only word I can think of in terms of Carolina and her staff is 'Fabulous'. The work they did for me today was unbelievable. The dress I'm wearing tomorrow night belongs on someone who is royalty, or a superstar, not me. I am overwhelmed by it. Carolina yelled at me when I told her so.\n\nJoe and I are going to have professional pictures taken of the 2 of us, in the lobby of the Mandarin Oriental, before we head off to the opera. We will send copies to his parents, and grandparents, and he will tell them we are getting married. We have not set the date yet, but it will be soon.\"\n\n\"You are going to give me a set of the photos, aren't you?\"\n\n\"You are going to get the second set of photographs. Joseph and I are keeping the first.\"\n\n\"How did you and Joseph, first get together?\"\n\n\"You or me, Joseph?\"\n\n\"Me naturally; I'll tell the truth.\"\n\nHe grabbed her arms, before she could hit him.\n\n\"Down dear, it was only a joke. You can tell them if you want to.\"\n\n\"That is your one for the evening Joseph. If there is another one, you will be walking out on your knees.\"\n\n\"Doesn't this sound like an interesting evening? Why don't we go into the living room, and make ourselves comfortable? There will be many stories told before, during, and after dinner. I'm sure we will all have a wonderful time.\"\n\n\"Dad, she is so tiny, her head doesn't reach his elbow. She couldn't possibly hurt him.\"\n\nJoe grabbed Laura as she lunged towards Patrick.\n\nAlphonse grabbed Patrick and pulled him to the ground, just in case Laura got too close to him.\n\nPatrick yelled, \"What happened, what did I say that upset her?\"\n\nWilliam Senior said, \"Son, you just set off a time bomb that is set at zero. You will never refer to agent Burkart in any manner other than by her name, or her title. You will never refer to her in any other way, or she will take you apart to the bone.\n\nShe is the best agent the FBI has in it's ranks. No one in the Bureau, regardless of size, has beaten her in their gym. She has never failed to catch a perpetrator she was assigned to capture. Every explosive has a fuse, agent Burkart's has to do with her diminutive size.\n\nIf Joseph had not caught her, and Alphonse had not pulled you to the ground in time, Gwen would be working on you at this moment.\"\n\n\"Agent Burkart, Laura, I apologize. I didn't realize you were so sensitive about your stature. I will never do it again.\"\n\n\"Patrick, I always forgive a person the first time. I give them a warning about that problem. The second time I don't give them a choice. They either come with me to a gym and take me on one on one, or I beat the shit out of them on the spot. You have been warned, and I do not care whose son you are.\"\n\nJoe asked, \"Are you still in training Patrick?\"\n\n\"No, I stopped a few months ago.\"\n\n\"If I were you, I would arrange a schedule with Alfonse, and get back into training immediately. It's not just for Laura's warning. It's for anyone who might attack you and your entourage with overwhelming numbers. Self defense is the best defense.\"\n\nAlfonse laughed. \"Joseph, we must have had the same instructor when we were younger. I don't know how many times I heard that saying every time I went to class.\"\n\n\"I'm not sure about you Alfonse, but I always heard it when I was flat on my back. My instructor had his knee on my throat, smiling down at me, and talking to the rest of the class.\"\n\n\"Mine had me in a chokehold, and was discussing my faults to the class.\"\n\n\"Patrick, I believe it's safe for you to get up now.\"\n\n\"Thanks dad.\"\n\nJemma said, \"Gwen, you sit here, Laura you sit next to Gwen, and I will sit on your left. I hope the 2 of us can have a calming influence on you, while stories are told by the people with too much testosterone running through their veins.\"\n\n\"If I'm sitting with you two, I can't beat the shit out of Joseph when he tells lies about the two of us.\"\n\n\"That's my point dear. When you get back to your hotel this evening, you will have all that pent-up anger in you. Then you can either take him apart sexually, or violently.\"\n\n\"Is that how you and William have survived marriage for so long?\"\n\n\"If you want William to remove his shirt, you will see the scars on his back from my nails. The love making ones are light. The fighting ones are a quarter of an inch deep. Gwen has had to take care of some of them.\"\n\n\"When I met my darling wife, she was a combat trained stewardess for United Airlines. She was and is the most beautiful woman I have ever met. If you look at her nails, you can see they are razor sharp.\"\n\n\"They are not William, but they can be for tonight.\"\n\n\"I stand corrected, dear.\"\n\n\"Do you see how well I have him trained?\"\n\n\"I'm working on Joseph. I can tell this is going to take a long time.\"\n\n\"When we have more time, I'll tell you about the night William and I were married.\"\n\n\"All I will say about that night is 'she drove, talked two police officers out of speeding tickets, and parked on the sidewalk of the Department of Justice building. The rest she will have to tell you.\"\n\nJunior said, \"Dad that is totally unfair.\"\n\nHis mother said, \"It's my story, not his. I'll decide when to tell it.\"\n\n\"Yes mother.\"\n\nLaura gasped. \"My goodness, you have all of them trained.\"\n\n\"This house is in my name. This house is run by my rules. Patrick lucked out, because his townhouse was just completed, and he moved out. However, when he steps into this house, he is still subject to my rules. Aren't you Patrick?\"\n\n\"Absolutely mother.\"\n\n\"Laura, one-day Joseph will respond to you the same way.\"\n\n\"From your lips to God's ears.\"\n\n\"Time is on your side. It is not a man's world; women control the world. Men just don't realize it yet.\"\n\nWilliam Senior said, \"I realized it the day after I married her, and I haven't regretted it one bit.\"\n\n\"You are such a liar.\"\n\n\"It sounded good didn't?\"\n\n\"I'll speak to you in the bedroom later.\"\n\n\"We don't speak in the bedroom.\"\n\n\"My point exactly.\"\n\n*************************************\n\nWilliam said, \"Joseph, please continue with your meeting of Laura.\"\n\n\"General Morris was in overall command of the defense of the complex. Unfortunately, he is an Air Force officer, and has no concept of ground-based defense. He has a captain that is a ground officer that keeps him in check, but he has to stay inside with him to do it. That leaves me and my friend Tom to take care of the outside defenses.\n\nThe Attorney General arrived with a 9 person FBI entourage protecting him. The lead agent was Laura. God is she beautiful, and I wanted to take her to bed instantly. So did 97 other heterosexual men. All eyes were on her, and suddenly she was standing at the entrance to the complex right beside Tom and me. That was when I realized she didn't understand the word, \"NO.\"\n\nA more obstinate woman you have never met. As soon as I started arguing with her, Tom kept pushing us closer together.\n\n\"You know you love her, ask her to marry you.\"\n\n\"I don't know how many times he said that over the course of a few hours, but something inside me clicked. I asked her to marry me, and I meant it. She brushed it off as a joke.\n\nTom kept at us, pushing us closer, until I had to get away from him. I told her I was going to check the perimeter and asked her if she wanted to come with me, knowing she was going to say no.\n\nThe one time I wanted her to say no, she said yes. I took her out and showed her the lakes, and the chokepoints we made in preparation for the invasion; the fields of fire for the 50 caliber machine guns, and the minefields. She was suitably impressed.\n\nWe continued walking the perimeter until I heard an inbound mortar. I yelled, 'Incoming' expecting her to hit the ground as I did.",
        "She didn't. She stood there looking around for what I meant. I grabbed her by her bulletproof vest, just as the mortar hit. The shockwave lifted her off the ground, but I had enough of a hold on her to bring her down to the ground.\n\nShe was unconscious.\n\nI threw her over my shoulder and ran towards cover. I heard another inbound, dropped her to the ground, and covered her with my body. This mortar had eyes, and we were covered with dirt. Nearly before I could get her up, I heard another inbound. I ran with her to the previous mortar hole, and dove in with her underneath me. The mortar landed 25 yards away from us. I picked her up again and ran for the tree line. As I got there, one of my men was waiting for us with a medical pack open. It wasn't needed because she began to come around.\n\nI told her what happened, and she called me an idiot. She told me I should have left her out there and run for cover myself. The enemy wants two kills for the price of one. She said I played right into their hands. Then she asked me where my weapon was. I told her I had a choice of her or my weapon, and I chose her.\n\nShe called me a fucking idiot. How was I supposed to defend myself if there was an infantry attack?\n\nNeedless to say I was furious, but there was still something about her that I couldn't get out of my system.\n\nOne of our helicopters flew overhead, and took out the mortar. We walked back to the center of the field, I picked up my weapon, and we walked back. I didn't talk to her all the way there.\n\nTom looked at her face, which was red on one side from the mortar blast, and said, \"You hit your wife already?\"\n\nHe continued like that all evening. He stacked the tables at dinner so she and I had to sit together. He did everything he could to push us together. We knew the following morning the attack was coming, because we intercepted all their radio communications.\n\nWe were standing at the entrance to the complex, and she tells me that they are going to overrun us in less than half an hour. I told her it was not possible and I showed her why. I told her we had experts from all over the country come out and check our defensive positions for the entrance to the complex, and they told us as long as we didn't run out of ammunition, no one was getting in.\"\n\n\"Did you ask anyone from the FBI to come and look at your wonderful complex, and your defensive positions?\"\n\n\"No.\"\n\nThen she showed us that the defensive positions we set up were useless if they came up the middle instead of the sides as we anticipated. I felt like an idiot because she was right.\n\nI couldn't do anything without getting the general's permission, so I went inside and had to convince him to move people around. It took more than an hour for me to do it. By the time Tom and I got back outside, she had completed 90% of the work, plus some things we had not even anticipated. She is so smart; I would put her up against anyone in a tactical situation.\n\nYou know the rest of the story, because your Colonel Canyon pulled off a miracle, and we only lost 7 men in the battle. 7 too many, but still only 7.\n\nAs far as Laura and I, a challenge was made, because I asked her to marry me, and she wouldn't answer. I invited her to the gym to get that answer, and she was only too happy to accept.\n\nTom promised her absolute privacy for the match. They checked out the entire 4<sup>th</sup> floor to make sure no one was hiding, and put guards at the elevators and stairwells. Everyone forgot about 2 young boys. Richard and Holden managed to hook up the television lines from the Good Luck 2, so everyone was able to watch Laura beat the crap out of me. What they didn't know, or hear, was, her say, \"Yes, I will marry you,\" as she was laying over my broken body.\n\nI had a feeling we were being watched, because it was too quiet. We turned over, and waved at the cameras, and we heard the cheering start. We have been together ever since.\"\n\nJemma said, \"If that's not a hearts and flower romance, I've never heard of one. Is that the way it happened Laura?\"\n\n\"Yes, I really beat the crap out of him that evening.\"\n\nGwen said, \"At least he didn't try to rape her in public.\"\n\n\"You tripped me, and you know it.\"\n\n\"Not now children, that is for after dinner. Right now I have something more important to talk about.\n\n\"Alfonse, my folio please.\"\n\n\"Here you are sir.\"\n\n\"Thank you.\"\n\nWilliam opened the folio and took out a sealed envelope.\n\n\"Laura, please take this. It contains the name of the man, who is the 'Tip of the Spear', plus all the evidence that we have against him. It is not only the evidence that came from the 3 men that were indicted by Doctor Aubrey from the Good Luck 1, but travel documents, secret meetings, radio intercepts, money transfers, and other means. Some you may, or may not be able to use in a court of law, if we can get it to go that far. As I told you, that decision is not going to be up to me. With the exception of you and Joe, everyone in this room knows his name.\n\nI cannot understand his treachery. The patents from the building of the Good Luck 1 have made all of us more money than we will ever spend in 100 lifetimes. We cannot give the money away fast enough to avoid paying exorbitant taxes on it. By the time we are done, every college in this country will have endowments larger than Harvard's. Patricia and Harold are working on hunger in the United States. We are all doing good work.\n\nThen along comes Turner Stansfield, and he wants more. None of us can understand it. He had to borrow money, from his entire family, to get into the directorship of the Good Luck 1. We never held him back when he wanted to do something, and when he needed something we gave it to him, without restraint. Now he has a bank account with 9 zeros, and he wants more. I will never understand it, and we were friends. As I said, the decision on his life will not be mine.\n\nJemma and I are going up to Patricia's to pick up our babies, Monday, and we may spend a few days, in Glens Falls, with her. It all depends on her schedule.\"\n\n'Let's move on to happier items. Laura would you like to sit down, or have Joseph stand behind you and catch you as you fall. I don't want you to hurt yourself, and I do guarantee you will fall.\"\n\n\"I have felt her strength sir, on a scale of 1 to 10, how sure are you she is going to fall?\"\n\nHe opened the folder in front of him, pulled out a document, and verified its contents.\n\n\"I am a betting man Joseph. I have bet on companies, people, stocks, bonds, gold, and everything else in this world. I guarantee you Laura will fall.\"\n\n\"Laura, if you don't want to fall, please sit down.\"\n\n\"There is nothing in this world he can say to me that will make me fall. Go ahead Mister Zabo give me your worst. As long as you don't tell me Joseph is a member of the mob, I'll be fine.\"\n\n\"Okay, you can't say I didn't ask you to sit down.\"\n\n\"Laura, why didn't you tell me you are going to marry my great grandson?\"\n\nJoe's head popped up. His brain was stunned. His arms were frozen. Catching Laura was not on his list of things to do list.\n\nLaura's head spun. Her blood pressure took a nose dive, and her lights went out.\n\nIf it wasn't for Alfonse, she would've been on the floor.\n\nWilliam said, \"Nice catch Alfonse.\"\n\n\"Thank you, sir. I have read everything about her sir. Seeing her made me think she was the wrong person. However, the way she went after Patrick made me change my mind. There is the heart of the bull raging inside her, and no one, with a brain, should get in her way.\"\n\n\"Are you in there, Joseph? Joseph are you in there?\"\n\nHis head cleared, and his first thought was, \"Yes, I'm here.\"\n\n\"You better take her from me, and make believe you caught her.\"\n\n\"Thanks, but she can tell when I'm lying to her, when she is in a lead box. I'd rather get hit now, than let her get angrier, and get hit when we get home.\"\n\n\"Very smart man, very smart.\"\n\nHe sat down with Laura on his lap, and asked, \"I take it you're very sure I am your great grandson?\"\n\n\"I have our family tree for you to see, and read. I was as shocked as you were to find out that I had a great grandson...\"\n\n\"Can I use my gun on him now; I'm never going to get away from him.\"\n\n\"It was not my fault you fell in love with my great grandson. You did that all by yourself, Laura.\"\n\n\"I know it. I knew something was up from the moment I saw him. There was something so familiar about him, but I couldn't place it. Look at the 2 of you. You are almost 50 years apart, and you could be twins. I never put 2 and 2 together, until the two of you were in the same room. I'm surprised the Attorney General didn't pick up on it.\"\n\nJemma asked, \"When is the wedding?\"\n\nLaura replied, \"It's a lot closer now than it was when we got here.\"\n\n\"What does that mean?\"\n\n\"You or me, Mister Zabo?\"\n\n\"I'll take it. Laura will not get married until the tip of the spear is caught and brought to justice. If the board of directors makes a decision that Turner will disappear, Laura and Joe can get married after 61 days. If the decision is made to let the wheels of justice go through the legal system, we will turn Turner over to her, along with the evidence, and then she can get married anytime afterwards. What were your plans for the wedding?\"\n\n\"We are having 2 weddings. A simple one in Washington, and a big church wedding at Joseph's home, in Italy.\"\n\n\"Do you remember the story with the grandmothers and the rolling pins?\"\n\n\"Yes, of course.\"\n\n\"One of my 4 daughters, by my first wife is your grandmother, and they all live on the land where we grow our grapes. We have a wonderful winery there.\n\nWhich one of my daughters is your grandmother? The people who made up our family tree could not find out, because the Hall of Records burned down over 40 years ago, and all the birth certificates were destroyed?\"\n\n\"It is you. My grandmother's name is Ludovica. She keeps telling me someone sends them money every year, even though they don't need it anymore.\"\n\n\"It's an automatic withdrawal. I never bothered to change it. She was my 2<sup>nd</sup> daughter, and a true beauty. Who did she marry?\"\n\n\"She never married.\"\n\n\"Why.\"\n\n\"You weren't around. The people who ran the area sent you to New York, and they guaranteed your family safety in return. Grandma fell in love with a young man from another village close by. He was a mason, and was doing very well for himself. He had to ask permission to marry your daughter, my grandmother. It was denied. When she got pregnant, and could no longer hide it, he disappeared. She was devastated. She never looked at another man. She had a son, and her mother, your wife refused to allow her to name him after the young man whose name was Raffaele, because she feared retribution from those people.\"\n\n\"Was that man Raffaele DiGiovanni?\"\n\n\"I don't know his last name.\"\n\n\"Alfonse would you come here for a moment.\"\n\n\"Yes sir.\"\n\n\"Would you contact Colonel Canyon, and ask him if he's interested in discussing a vacation to Italy.\"\n\n\"Right away sir.\"\n\n\"Mister Zabo, what are you doing?\"\n\n\"I'm asking a friend if he would like to go on a vacation to Italy. It is lovely at this time of year, and after what he has just done for us, I think he deserves something more than his normal paycheck.\"\n\n\"You're sending Colonel Canyon on a vacation to Italy, like I am going to the moon to ski. You can't do something illegal in front of me, Mister Zabo, and expect me to sit here and do nothing.\"\n\n\"Did I do anything illegal, Agent Burkart? Did I mention anything illegal in my discussion with Alfonse? I would never do anything illegal in your presence, because I would expect you to obey the law at all times. It is one of the reasons why both Timothy and I hold you in the highest regard. You are incorruptible. No one, regardless of how rich or powerful they are, could approach you, and ask you to bend the law in their favor. You may infer whatever you want about my discussion with Alfonse, but nothing illegal was discussed.\"\n\n\"I apologize for my outburst, Mister Zabo. You are correct. The probability of any of the people who gave those orders still being in power is minuscule, as well as still being alive after all these years. Please accept my apology\".\n\n\"Thank you Laura, I appreciate your ability to see a mistake, and reverse your opinion.\"\n\n\"Are you going to be able to attend our wedding in Italy?\"\n\n\"Patrick, we need to use your airplane.\"\n\nLaura asked, \"What airplane?\"\n\n\"Patrick's new Boeing 747. It is being delivered Tuesday.\"\n\n\"Why can't I go dad?\"\n\n\"You are going to be the new administrator of NASA. You have a great deal of work to do, and you can't start off by taking a vacation.\"\n\n\"I'll take a week off, in preparation for starting my new job.\"\n\n\"That will be setting a good example for you troops. You get your new job, walk in the door, and say hi. You give a rousing speech, and tell everyone how different things are going to be around here, and you go on vacation.\"\n\n\"Dad, no one knows when that idiot from Texas is going to show up in Washington? You don't know when he's going to allow the committee to hold my hearing. You don't know when they are going to allow me to take control of NASA. You don't know the date of the wedding. At this moment you know nothing.\"\n\n\"All valid questions my son. However, I'm afraid your answers will have to wait until later. Dinner is ready to be served in the main dining room.\"\n\n\"God dammit dad, why does this always happens to me.\"\n\n\"You or me, dad?\"\n\nJoe asked, \"Why not me? I am the oldest, and newest family member, under my great grandfather, of course?\"\n\n\"He has a point Willaim.\"\n\n\"I've been moved to 2<sup>nd</sup> place?\"\n\n\"Not at all, my son. Just in these odd family circumstances, where a person is going to be put in his place, or torn apart by his new uncle.\"\n\n\"I didn't say anything bad about anyone here, did I?\"\n\n\"No Pat, you didn't. Otherwise we would be calling for an ambulance. You broke family protocol.\"\n\n\"I did?\"\n\n\"Yes, you did. Now all you have to do, after dinner of course, is fight Joseph, because of the severity of the breach.\"\n\n\"How bad was it?\"\n\n\"You cursed and took the Lord's name in vain, in front of your mother.\"\n\n\"OH NO, MOM, please forgive me. Look at him, he will turn me into 'Dog Chow.\"\n\n\"A little humility will do that superior brain of yours some good. Stop whining, dinner is getting cold.\n\n*************************\n\n58 Dairy Queen\n\nIt was amazing how many people knew how, or had a rudimentary knowledge of how to milk a cow. More than three quarters of the adults knew how to do it, all of the teenagers above the age of 14 knew how, and those below 13 were dying to try it out.\n\nExcept for the bridge, engineering, medical staff and security, which were always fully manned, nearly the entire ship's company was outside watching the 6 cows be milked.\n\nSince the cows had taken a bath, and the disgusting odor was gone, no one minded being near them. When the calves weren't nursing, they were romping around with the younger children. They would run into the water, and the kids would run in after them. Filthy is not the word parents would call their children. They had passed that term long ago. Parents would wash them in the river, regardless of how cold the water was, before they would be allowed onto the ship. 2 young girls, with long blonde hair were now beyond recognition.\n\nAnother girl was at the wrong end of a calf, when it raised its' tail. When the others laughed at her, she took the glob from the top of her head and threw it at them. The fight was on. Soon it became a mob scene.\n\nParents were in the water seconds later separating their children from each other. 13 unhappy kids sat on the river bank, 5 feet apart, waiting for soap, towels, new clothes, and possible restrictions. They were not happy.\n\nThey were just kids being kids.\n\n***************************\n\nThe milk the nurses brought in to the infirmary was being analyzed. So far, no untoward bacteria had shown up. It was still being put through the mass spectrometer to look up for other contaminants, which could be harmful to humans. The results would be in before morning.\n\nThe fat content was amazing. After removing it to make heavy cream, ice cream, and butter, less than 60% remained for milk. Everyone would have to start watching their weight again.\n\nThree days later, Teddy had her birthday cake. It was a 100% Atwater Luck Premium Ice Cream cake, and she received the first slice.\n\n*****************************\n\n\"I am not sure what to do with you Elizabeth. You are a little girl, and you are dilated 7 centimeters. I don't believe you will ever get to ten, which is ideal, but you got to 7 so quickly, I would like to give you another few hours to see if you get there.\"\n\nElizabeth asked, \"Where is my shit-faced husband?\"\n\n\"We gave him a drug that knocked him out.\"\n\n\"Okay, you either give me a drug that knocks me out, so I don't feel the pain from my next contraction, or after I deliver this baby, I am going to kill two men. Do you want to guess who they are Doctor Finch?\"\n\n\"I can't knock you out. The contractions will stop, and the baby will be in distress.\"\n\n\"Mom, wake up that lazy bastard of a husband of mine.\"\n\n\"With pleasure, honey.\"\n\nJennifer left the infirmary and asked Gray to get her a fire extinguisher.\n\n\"Where is the fire, mom?\"\n\n\"I'm going to lite one under someone's ass.\"\n\nGray came back with a twenty-pound chemical fire extinguisher.\n\n\"That's perfect, Gray.\"\n\n\"It's heavy, would you like me to carry it for you?\"\n\n\"Thank you, that would be very nice.\"\n\nThey walked over to Newton, who was sound asleep.\n\n\"Mom no, you will freeze his balls off.\"\n\n\"It will teach him not to have unprotected sex, before he gets married.\"\n\n\"Isn't it a little late to teach him that lesson?\"\n\n\"You learned it the hard way, but you learned it.\"\n\n\"I wouldn't wish that trial by fire on anyone.\"\n\n\"Was it worth it in the end?\"\n\n\"We did learn to talk to one another. It did help recently.\"\n\n\"So, it was not a waste of time on either of your parts?\"\n\n\"No, I guess it wasn't.\"\n\n\"Let me wake your son up.\"\n\n\"No, I think that's his father's job. Go back to Liz, and tell her to listen for the scream.\"\n\n\"Sounds like a wonderful plan to me.\"\n\nGray pulled down Newton's pants and shorts leaving him totally exposed. He was about to pull the pin and push the release, when he felt a tap on his shoulder.\n\n\"Shit!\"\n\n\"What are you going to do to our son?\"\n\n\"Mom asked me to wake him up. She was going to do it, but I said it was his father's job.\"\n\n\"Why was she going to wake him up?\"\n\n\"Liz is in terrible pain. She is stuck at 7 centimeters and Finch wants to wait 2 more hours before he does a C-Section. Liz said if he didn't do something before the next contraction, after the baby was born, she was going to kill 2 men. She asked him if he wanted to guess who they were. That's when mom came up with the fire extinguisher idea.\"\n\n\"You hold his arms; I'll use the weapon.\"\n\n\"I never get to have any fun.\"\n\n\"You pulled his pants down.\"\n\n\"I am not gay.\"\n\n\"He is a good size.\"\n\n\"He won't be after that stuff hits him.\"\n\n**************************\n\nElizabeth had a contraction, and screamed, \"Where is that little bastard. I'm going to pull his heart out through his ass.\"\n\n\"Gray, I think that is going to hurt him more than this is. Let's go.\"\n\nNewton was dreaming about wormholes, time fluctuations, dark matter, and a host of other scientific possibilities, when something cold caught his attention. Ah yes, he thought. If we travel through a time fluctuation... holy shit, it's cold. His mind left the universe and traveled back to the Good Luck 1. His Eyes popped open, and he saw his mother laughing at him as she sprayed the foamy substance towards the southern end of his body.",
        "He tried to use his arms to lift his body to see what she was aiming at, but his arms would not move. He looked back and saw his father smiling at him.\n\n\"Hello son, having a nice dream, were you?\"\n\n\"I'm freezing dad, what's going on.\"\n\n\"You mother is spraying chemical fire retardant on your privates. It is extremely cold. Your grandmother came up with the idea, because your wife needs you. She is in intense pain, and you were out here in la-la land.\"\n\n\"Doctor Finch gave me a shot, and it knocked the shit out of me. Would you tell mom I'm awake? She can stop shooting that stuff on me now.\"\n\n\"I believe she knows you are awake, but she is intent on emptying the canister.\"\n\n\"If you hit mom high, I'll hit her low, and you can spray the rest of the can on her.\"\n\n\"Deal. Go.\"\n\nDelicious screamed when she saw the 2 men attacking her. She didn't have a prayer. Even with his pants down, Newton was able to leap at his mother's knees, and take her down.\n\nGray had nothing to do, except pick up the canister, and aim it at his wife.\n\nDelicious said, \"You wouldn't dar...\"\n\nGray aimed at every inch of exposed skin, except her face. He would never mar anything that beautiful. Hands, feet, and hair were all fair game.\n\nShe yelled, \"I'm going to get you for this.\"\n\n\"I certainly hope so. Do you want to go to bed now?\"\n\n\"No, I have to find Teddy. I swear, I am going to have to put a bell on her.\"\n\n\"Did you look at the check out log?\"\n\n\"It's after dinner, no child under 14 years old is allowed out after dinner, without an adult.\"\n\n\"Bingo! If you checked the log, you would see that Teddy is outside with your brother.\"\n\n\"Those two are going to blow up this planet.\"\n\n************************************\n\n\"I'm here baby. I'm sorry I slept so long. I guess the drug the doc gave me was a little too much for my system. I was out of it.\"\n\n\"It's okay dear you are here now.\"\n\nShe reared back and hit him with every bit of strength she had left in her body.\n\n\"Thanks for being with me asshole. I had our baby 3 minutes ago. Get out of my sight before I wring your neck.\"\n\n\"Elizabeth, it wasn't Newton's fault. Go easy on him. They gave him 1 mg. of Xanax. That is equivalent to 10 mg. of Valium. He was supposed to get 0.1 mg of Xanax. It was Dr. Finch's writing error. He wrote .1 and the nurse missed it.\"\n\n\"Do you mean I can't kill Newton, but I can kill Finch?\"\n\n\"You will have to talk to Sandy about that.\"\n\n\"He made me lie here in pain, while waiting for me to open 3 lousy centimeters; and he was the one who gave my husband with 0.9 mg more Xanax, then he was supposed to get, which kept him away from me. Tell Sandy I want to see her. Tell her it's about her husband's life or death.\"\n\n\"Elizabeth, you are being a little overdramatic.\"\n\n\"What happened? What hit me? Are you okay Liz, did something fall?\"\n\n\"Yes, you idiot! You fell, and I was the one that hit you. You slept through your child's birth. I'm going to kill Doctor Finch. He gave you too much medication, and me too little.\"\n\n\"Do you want me to do it for you?\"\n\n\"Why the hell would I want you to kill Finch for me? I want the pleasure of seeing his eyes close.\"\n\n\"Elizabeth that's enough. One more word out of you and I'll take the baby to the nursery, and you won't see her.\"\n\n\"You're not being fair, mom.\"\n\n\"Fatima, I'll be taking the baby up to the nursery.\"\n\n\"That's fine Captain Luck, except for the 7 toes on her left foot and 6 toes on her right foot, she's nearly perfect.\"\n\nElizabeth yelled, \"Give me my baby, let me see her right now.\"\n\n\"Mrs. Thyme, no one will know she's cross eyed until she turns 10 or 11 years old. No one will believe it's a birth defect.\"\n\n\"MOOOMMM, give me my baby.\"\n\n\"Here you go Elizabeth, don't drop her on her head; although, looking at her, I guess it couldn't hurt.\"\n\nElizabeth pushed back the little hood, and saw bright red hair. As her eyes moved down, she saw perfect green eyes looking back at her. She was about to to say something, when Jennifer said, \"Great work Fatima.\"\n\n\"I hate both of you.\"\n\nNewton asked, \"Does that mean we are okay?\"\n\n\"Don't you ever touch me again.\"\n\n\"I guess were not okay.\"\n\n\"Newton, look at our baby, could she be any more beautiful?\"\n\n\"She could look more like her mother.\"\n\nJennifer said, \"That was very good, Newton. You may live to see 20.\"\n\nDoctor Finch walked in, after cleaning up. \"I'm sorry about the medicine mix-up, Newton. I take it you slept well.\"\n\n\"Actually, I slept better from Elizabeth right cross.\"\n\n\"Why did you hit the boy Elizabeth?\"\n\n\"It was a choice of him or you, and he was closer.\"\n\n\"I can accept that, but it wasn't his fault, it was my fault.\"\n\n\"I was told it was your fault Doctor, but Newton has nothing to do tonight but take care of me. If anyone gets hurt tonight, it's up to you, and Doctor Daniels. If I put you out of commission that leaves us with only one Doctor. It's better for the safety of this ship to have both doctors safe and sound. Don't do this to me the next time, because I swear, I'll brand you like a steer.\"\n\n\"That would definitely catch my attention.\"\n\n\"Did you have a name in mind for her, Newt?\"\n\n\"Only if it's okay with you, babe. I was thinking about Jennifer. Everyone would call her Jenny.\"\n\n\"No, Jennifer is such an old-fashioned name. No one uses Jennifer anymore. It's an old lady's name. When I think of a woman with that name, I picture her with a big wart on her nose, and moles on her chin.\"\n\n\"You 2 should take your vaudeville act on the road, a long way down the road. You are very, very, not funny.\"\n\n\"Here's your great-granddaughter mom.\"\n\n\"I'm too young to have a great-granddaughter. Did you count her 7 toes?\"\n\n\"No, I was too busy trying to straighten out her crossed eyes.\"\n\n\"Okay you 3, get out of here. Jennifer stays in the incubator for the evening.\"\n\n\"Do you think I'll fit?\"\n\n\"Jen, go with those 2 on their roadshow. I'll send the pony express out to tell you when you can come back.\"\n\n\"I will remind you Joseph that the clock is now ticking. My namesake will be the one who makes first contact.\"\n\n\"I will be opening a Greek sorority house next month.\"\n\n\"Hannah will make sure you pass the physical.\"\n\n\"That is mean Jennifer. I said I was opening the sorority house. I did not say I was going to be a member.\"\n\n\"You just want a lifetime pass.\"\n\n\"If he says yes, I'll make sure Hannah does a good job.\"\n\n\"You know I have eyes only for you, dear. How else did we wind up with... 6 children?\"\n\n\"Did you all notice how he hesitated on the number of children we have?\"\n\n\"Its been a long time since we've seen those 2 geniuses. I wonder how much trouble they've gotten into, and how my parents have handled it.\"\n\n\"I know one thing Joe; both Becca, and Danni have lower handicaps than your father, and he doesn't like it one bit.\"\n\n\"He was the one that ordered them to start play golf, in the Chicago winter. He deserves what he gets. I am so happy I never took up that game.\"\n\n\"What a great idea. We have perfect grass, and ideal weather. We can build a 9- hole golf course for the kids. It will keep them active, and they will have something fun to do.\"\n\n\"I agree, as long as it is only for the children.\"\n\nSandy kissed him. \"You have a terrible phobia about golf, golf clubs, and golf balls, don't you?\"\n\n\"You didn't grow up with my father looking over your shoulder, every day and night; waiting to see if you ever had a free moment to join him on a golf course. I always had my nose in a book, just in case he walked into my room.\"\n\n\"You poor puppy. I will help you get over it. I will lay naked on every green. If you a birdie, you get laid. If you get a par, you get a hand job. If you get a bogey, no sex for 2 days. A double bogey, you don't want to hear about the punishment, because you won't be sleeping in my bed.\"\n\n\"Sandy, that's not fair. I hate that game.\"\n\n\"I know you do, but you love sex. You have a decision to make.\"\n\n\"What are you doing tomorrow, Newton?\"\n\n\"I'm taking care of my wife and daughter, doctor.\"\n\n\"Elizabeth will have a full time nurse with her, and Jennifer will stay in the incubator, until I release her to the nursery. You are going to help me arrange a 9-hole golf course.\"\n\n\"Why are doctors so dense, when they have the answer at their finger-tips. Ask Callie to lay out the design for the course, and all we will have to do is mark it off.\"\n\n\"I hate smart asses.\"\n\nNewton opened his communicator.\n\n\"Callie, this is Associate Engineer, Newton Thyme. Would you please lay out a 9-hole golf course for children, age 14 and under? When you have completed this task, please send the results to the infirmary.\"\n\n\"Associate Engineer Newton Thyme, I have 163 possibilities. How many do you want me to print out?\"\n\n\"Callie, if you would print out 'number one as the hardest', and 'number 10 as the easiest', plus numbers 2 through 9 in ascending order of hard to easy, that will be plenty.\"\n\n\"Printing.\"\n\n\"Thank you Callie, you can go back and play chess with my grandfather now.\"\n\n\"Your grandfather is a very interesting man.\"\n\n\"I grew up under his tutelage. You are not telling me anything I am not already aware of.\"\n\n\"I believe I should be sorry for you.\"\n\n\"He is a very strict task master.\"\n\n\"That is not quite the way your cousin, Gordon, put it.\"\n\n\"Gordon lived with my grandfather, grandmother, and Monty looking over his shoulder every moment he was awake. I was fortunate enough to live across the street with my mom and dad. I only had to interact with my grandfather, when I was at work with him. It is the reason I am calmer than Gordon, and more reasonable than he is.\"\n\n\"That's bullshit Newton, and you know it.\"\n\n\"Hello grandpa; you are a great grandparent. We named our baby girl, Jennifer, after her great-grandmother.\"\n\n\"That was very nice of you, Newton. How much trouble were you in before that?\"\n\n\"Elizabeth and I decided on the name before I got in trouble.\"\n\n\"You were in trouble though weren't you? How did that happen?\"\n\n\"It wasn't my fault.\"\n\n\"I've heard that excuse before.\"\n\n\"Even, go play chess, before I give you a piece of my mind.\"\n\n\"Yes dear.\"\n\n\"That was wonderful, Mrs. Luck. I have never heard him become quiet so quickly before.\"\n\n\"Practice Callie, years and years of practice.\"\n\n****************************\n\n\"Teddy, call your pony over, I want to try something.\"\n\n\"Daylight, Daylight come to me.\"\n\nThe pony raised her head when she heard Teddy call her. She stopped grazing and trotted over to her. They did their normal greeting.\n\nTeddy said to her, \"You are getting bigger. You are no longer my little pony, but you are not yet a full grown pony. I am very proud of you.\"\n\nThe pony nuzzled her head at the compliment.\n\n\"What do you want to do Gordon?\"\n\n\"I was wondering if Daylight could go to one of the cows with a young calf, and bring her over to the ship, so we could milk her. If her milk is good, we can bring over some of the other cows and milk them. We will have plenty of milk for our children to grow up on, and make ice cream too.\"\n\nThe pony must have misunderstood what Gordon said, but she ran away.\n\n\"She's never done that before Gordon. I don't know if she's afraid of the cows, or not, but it doesn't appear like it was a good idea.\"\n\nThey began walking back to the ship, when Daylight reappeared, with a large Stallion, by her side.\n\nGordon said, \"I believe I understand why Daylight ran away. Only the lead horse can make a decision for the herd. This Stallion is in charge of the herd.\"\n\nThe large male horse stopped directly in front of Teddy. He sniffed her, put his muzzle to her head, and licked her hair.\n\nIn return, Teddy kissed his muzzle, and put her cheek to the side of his. She stepped back and looked him in the eyes. I have named my Little Pony Daylight. Would it be okay with you if I named you, \"Admiral?\"\n\nThe big horse nodded its head, and pranced around in a circle.\n\n\"I think he likes that name Teddy.\"\n\n\"I think so too. Why don't you ask him what you want to do?\"\n\nStanding beside Teddy, Gordon asked him, \"Admiral, we would like you, or members of your herd, to have one of the cows, with a small calf, come to our ship, so we can milk her. We want to test her milk to see if it will be good for all of us to drink.\"\n\nAdmiral left them without giving them a sign either way. Daylight stayed with them.\n\nAs he reached the herd, all the horses turned towards him. Whatever he did, or said to them, 6 of the older horses headed towards them.\n\n\"I hope you have more names ready for these horses, Teddy?\"\n\n\"I'm going to start naming them after the members of our crew. I hope they like it, because it's the only way I'll remember it.\"\n\n\"Teddy, somehow I doubt that.\"\n\nThe lead mare stopped and sniffed Teddy. She went through the same ritual as all the other horses had, and Teddy returned her welcome. She went to the other 5 horses and greeted them the same way. She was an amazing six-year-old child.\n\nShe returned to the lead mare. I have named my pony Daylight, and your stallion, Admiral. I would like to name you Anastasia, if that meets with your approval.\"\n\nShe went through all 6 horses, naming them in alphabetical order: Brandi, Caramel, Dakota, Erin, and Fancy. Each accepted the names she gave them. When this was done, they headed towards the mass of cattle, and without any problem, cows with little calves followed them out of the herd.\n\nGordon opened his communicator and called Monty.\n\n\"I hope you have a lot of buckets to put milk in, because we have 6 cows with little calves coming our way.\"\n\n\"6, we only wanted 1.\"\n\n\"Do you want to argue about it with Teddy, or are you going punch a gift horse in the mouth?\"\n\n\"That child is going to be the death of me.\"\n\n\"That child is a gift from God. I would listen to her if I were you.\"\n\n\"She's got you doesn't she?\"\n\n\"She's the reason I'm alive, but don't ask me how.\"\n\n\"I don't like you anymore.\"\n\n\"I want to be your Matron of Honor. I'll even wear a dress.\"\n\n\"Where is a camera when you need one?\"\n\n\"They are all over the ship.\"\n\n\"You're right, I forgot about them. I'll put your makeup on, and make sure the cameras are on you.\"\n\n\"That's acceptable.\"\n\n\"Dammit, I was expecting you to argue with me. You just ruined my evening.\"\n\n\"The cows are getting close. You better get people who know how to milk them down here with buckets, or something that can hold the milk.\"\n\n\"They'll be there in 5 minutes.\"\n\nTeddy said, \"Those cows smell bad.\"\n\n\"Why don't you ask your horses make them go into the water. Maybe it will help take the smell away.\"\n\n\"Daylight would you ask Anastasia to make the cows go in the water, so they can take a bath.\"\n\nDaylight was off like a shot. She pulled up along Anastasia, and communicated with her what Teddy wanted done.\n\nWithin seconds, all 6 cows were in deep water. The 6 juveniles were splashing around the edge of the water playing, and rolling around in it.\n\nEveryone who worked in the kitchen was there to help milk the cows, and every able-bodied man was there to help carry the heavy plastic bags of milk up to the kitchen, where it would be marked and frozen.\"\n\nFour nurses where there to take smaller plastic bags to the infirmary, where it would be tested, for any signs of bacteria, and other organisms that would make it unsuitable for human consumption.\n\nTeddy told Daylight it was okay for the cows to come out. She delivered the message to Anastasia, and obediently the cows walked out of the water.\n\n\"Look at them Teddy, it seems they've lost 20 lbs. of hair.\"\n\n\"I don't care about the hair; the smell is gone. Maybe we can convince all of them to take a bath.\"\n\n\"I would have to go downstream to see what all that hair will do to the ecosystem. I don't want to mess up this planet like we did Earth.\"\n\n\"I want to go with you. I must see it also.\"\n\n\"You want to see it, or you must see it?\"\n\n\"God says I must see it.\"\n\n\"I told you I would help you with anything you need. You will come with me, even if we have to drag your mother along.\"\n\n\"I think that would be fun, but you two argue all the time.\"\n\n\"That's not arguing, we are having fun with one another.\"\n\n\"You confuse me.\"\n\n\"Life is not easy. We have free will. That's why I can say to your mother, 'I'm going to cut your head off' and she knows I don't mean it. You saw me smack her bottom, and you didn't tell her it was my fault, you told her it was her fault for doing something bad. That was free will.\"\n\n\"I still have much to learn.\"\n\n\"I'm happy you said that. You are only 6 years old, and if you didn't have anything to learn, I would be of no use to you.\"\n\n\"Here come the cows.\"\n\n\"We are done here today. Let's thank the horses for what they've done for us, and go to the chapel to pray?\"\n\n\"I tell my mommy we are back inside.\"\n\n\"Good girl.\"\n\n************************\n\n\"Captain Jamison, this is Harvey Cushing in the science area.\"\n\n\"Go ahead Mister Cushing.\"\n\n\"Captain, if our calculations are correct, it's going to rain in the mountains tomorrow. It would be a good idea for us to open the vents tomorrow morning around 8 AM, and be ready for an immediate lift off as soon as it starts. It should take us no longer than 5 minutes to get there, and we can fill up the external wall with water to protect us if we have to go back into space, for our drinking supply, and everything else we need on board.\"\n\n\"I won't ask you how you came up with this calculation Mister Cushing, because it is as good as anyone else's guess. I will have everyone on board ready to go at a moments notice. Call engineering, and tell them what you told me so they can have the vents open by the time we reach the rain. I will make a general announcement now.\"\n\n\"Very good Captain, I'll calling engineering now.\"\n\n\"This message is for all personnel on board, including Teddy Thyme. No one is allowed off this ship after 0100 hours. Security will be called inside at that time. The elevators and walkways will be brought up and locked and a complete headcount will be taken at that time. The first head I want counted is Teddy's. Delicious, I want to know where she is at 0730 tomorrow morning. It's not that I don't trust her, but I do not trust her one bit. The science section believes it will start to rain sometime tomorrow morning, or early afternoon. As soon as it does we will take off and move to that position to refill our external tanks. Once that is done we will return to this position and land. Security begin your headcount.\"\n\nTeddy ran onto the bridge and saluted.\n\n\"6-year-old Teddy Thyme is on board The Good Luck 1. She will not leave until the Big Captain says it's okay.\"\n\n\"Thank you very much Teddy. You made me feel much better now.\"\n\n\"Captain, it's going to rain tomorrow.\"\n\n\"The science section thinks it's going to rain tomorrow morning or afternoon.\"\n\n\"They not wrong; but it is raining now too.\"\n\n\"Mister Cushing, look at your machines. Is it raining over the mountains now?\"\n\n\"We don't see anything Captain.\"\n\n\"Engineering get ready to get us off the ground now.\"\n\n\"Captain, this is Jack Daniels in engineering, what's going on?\"\n\n\"Mister Daniels, do I tell you how to run engineering?\"\n\n\"No captain.\"\n\n\"Then get my nuclear engine up to 18% now.\"\n\n\"Nuclear engine 18% now.\n\n\"Antigravity engines to 50%.\"\n\n\"Antigravity engines to 50%\n\n\"Nuclear engines to 24%.\"\n\n\"Nuclear engines to 24% captain.\"\n\n\"Mister Hutchins heading 340\u00b0\n\n\"Heading 340\u00b0 Captain.\"\n\n\"Mister Hathaway if I feel one bump I'm going to put you in the brig.\"\n\n\"Security is your head count complete?\"\n\n\"Yes Captain, all members of the Good Luck 1 are on board.\"\n\n\"Secure the ship for immediate lift off.\"\n\n\"Elevators, and stairways coming up.\"\n\n\"Captain, we have green lights across the board. The ship is prepared for lift-off.\"",
        "\"Thank you Mr. Trainor.\"\n\n\"Helm is ready Captain.\"\n\n\"Make your altitude 3000 feet, lift off.\"\n\n\"Lifting off Captain, heading 340\u00b0 climbing through 550 feet to 3000 feet.\"\n\n\"Engineering, open the exterior valves and vents.\"\n\n\"Engineering is opening the exterior valves and vents.\"\n\n\"Teddy, I don't see the rain. Where is it?\"\n\n\"To the right and higher.\"\n\n\"How high Teddy?\"\n\n\"It not fall to the ground yet, but is much higher. It is raining very hard.\"\n\n\"Will you tell me when we are right under it?\"\n\n\"Yes, big area, lot of rain tomorrow, lot of flooding. You must move the ship far away from where we were.\"\n\n\"Thank you Teddy, I will do that when we get back.\"\n\n\"You can go up now. We are directly under the rain.\"\n\n\"Attention on board, we are about to go up into the rain. I do not know what to expect when we enter it, so please hang up on. It is raining very heavily, and I do not know what kind of wind factor there is with it. Security please help out in a nursery. Here we go.\"\n\n\"Mister Hathaway make our altitude 13,000 feet, and do it slowly.\"\n\n\"Aye, Aye Captain.\"\n\n\"Teddy get into your chair and buckle yourself in.\"\n\n\"Yes Big Captain.\"\n\nAs soon as they passed through 12500 feet they could hear the rain smacking against the exterior hull of the ship. They could also feel the wind blowing them around.\n\n\"Captain, helm, I am no longer able to maintain a heading of 340\u00b0. I need more power, or I am going to have to let the wind take us.\"\n\n\"Mister Hathaway let the wind take us.\"\n\n\"Yes Captain I will advise you of our heading. I would still advise you to increased power on the nuclear engine just in case we need to get out of this thing.\"\n\n\"That's a good idea Mister Hathaway.\"\n\n\"Engineering, increase power to the nuclear engine to 40%.\"\n\n\"Nuclear engine to 40%.\"\n\n\"Captain from what I'm seeing on my displays, may I suggest 60%.\"\n\n\"Go to 60% Jack.\"\n\n(Ten Minutes Later)\n\n\"How are we doing on water, Jack?\"\n\n\"Give it few minutes, and we will be full-up.\"\n\n\"Very good. What are you seeing out there?\"\n\n\"Captain, if we were on earth, I would tell you we are in the middle of a tornado.\"\n\n\"Screw it, in 30 seconds close the water intake valves, go to 80% on the nuclear engines, 100% on the antigravity engines, and we are going to get out of this thing in a hurry.\"\n\n\"You are too cute Captain. I would have everyone lie down for this maneuver.\"\n\n\"I was going to do just that Jack.\"\n\n\"Great minds think alike Captain.\"\n\n\"Attention everyone on board, if you are near your reclining seats get in them and buckle yourself down. If you are near your beds get in them and lie down. If you are not near anything else lie down on the floor. I am about to perform a maneuver that is going to take us straight up out of a tornado. This maneuver will take 10 seconds, and may knock the breath out of you. I will count you down when it's about to begin.\"\n\nTeddy said, \"That's my job.\"\n\n\"What's your job Teddy?\"\n\n\"When we leave Earth, I count down from 10. We do this maneuver; I count down from 10.\"\n\n\"Okay Teddy, you can count down from 10.\"\n\n\"Engineering is everything ready to go?\"\n\n\"Engineering is 100% go.\"\n\n\"Ships company this is your 30 second warning. Teddy will count down from 10.\"\n\n\"Jack close the vents and valves.\"\n\n\"Done.\"\n\n\"Teddy is ready to count down from 10.\"\n\n\"I just told them that Teddy.\"\n\n\"I know.\"\n\n\"At Zero, Make your altitude 200,000 feet Mr. Hathaway.\"\n\n\"Aye aye captain.\"\n\n\"Start Teddy.\"\n\nShe pushed the button on her chair. Here we go; \"10-9-8-7-6-5-4-3-2-1-Blast Off. Plus 1-2-3-4-5-6-7-8-9-10. Engine Stop.\"\n\nMonty said, \"Smart ass. That was my job.\"\n\n\"We in space now.\"\n\n\"What; what is our altitude, Mr. Hathaway?\"\n\n\"381,062 feet above the planet, and rising. We sort of passed 200,000 feet, Captain.\"\n\n\"I noticed. Take up a heading to bring us back to where we started from, plus 1 mile west. Navigation give him a heading. Engineering reduce nuclear engine to 10%. Reduce antigravity engine to 20%.\"\n\n\"That was one kick ass ride Captain. I think we may have overdone it a little.\"\n\n\"I've never been in a tornado Jack, and I wasn't taking any chances getting out of this one. As long as our tanks are full, and no damage was done to the ship, our mission was successfully accomplished.\"\n\n\"That it was Captain, a 100% success. Engineering, out.\"\n\n\"Adam Schiff would you check your gauges and verify the water tanks are full from your end.\"\n\n\"I'm already here, Captain. The water tanks are full to 104%. However, everyone seems to be using their sanitation units at this time, because of your last maneuver. We will be down to 102% of capacity momentarily.\"\n\n\"Did the maneuver upset Laura?\"\n\n\"No, my lovely wife is a champ. She took this as she took instructions from her former mentor, George; gracefully.\"\n\n\"I did not, you asshole. I'll get you for that Monty. I thought the baby was going to come out of me.\"\n\n\"That would have been a good thing, Laura; no labor pains.\"\n\n\"I might not have had labor pains, but that asshole husband of mine would have.\"\n\n\"Laura, I promised I would love you until death do us part. If you kill me, at least I would have kept my part of the bargain.\"\n\n\"Do you see what he does to me Monty? He puts all the blame on me. He is such a nice person; I can't bring myself to kill him.\"\n\n\"People are making bets on you killing Gordon, after you have the baby. You can kill him, without feeling bad.\"\n\n\"I hadn't thought about that, but you're right. I can kill him and not feel bad. What are the odds between me and Gordon?\"\n\n\"Since Gordon beat me in 22 seconds, the odds between you and him are even.\"\n\n\"He beat you in 22 seconds, and the odds between him and I are EVEN?\"\n\n\"Your exploits preceded you darling. Your husband keeps talking about your Longshoremen's handshake, and what it did to him the night before you had to bring in your luggage.\"\n\n\"That no good loudmouth.\"\n\n\"Laura, how many people do you know who can dislocate a man's shoulder by shaking his hand?\"\n\n\"I was angry with him.\"\n\n\"Please remind me never to get you angry with me.\"\n\n\"The bastard got me to marry him, didn't he?\"\n\n\"You could have said no at any time. No one broke your arm, did they?\"\n\n\"I didn't break his arm. I only dislocated his shoulder.\"\n\n\"You fired your best friend, your defense team quit, and you were left on your own on the biggest day of your life. Should I say anything else about what you did the day you got married?\"\n\n\"I am going to kill him, very, very slowly. He's like a woman who can't keep her mouth shut.\"\n\n\"How about you Laura, can you keep your mouth shut? Should we discuss your husband's length and girth?\"\n\n\"I hate you, I hate him, and I hate me and my big mouth.\"\n\n\"It happens to all of us Laura. Now suck it up and relax. A few months after the baby is born, you can start training again, and beat the shit out of Gordon. Use that as your motivation.\"\n\n\"He beat you in 22 seconds. You were at the top of the charts. What am I supposed to do with him?\"\n\n\"No one is invincible Laura. No one is invincible.\"\n\n**************************************\n\n\"We are passing through the atmosphere now, and will be landing about a mile and a quarter west of where we were originally. Teddy advises us there will be severe flooding in the area where we originally landed.\"\n\n\"Navigation pick us out a good spot for defensive purposes. We've only seen one carnivore in this area, and it came after Teddy. We have a few thousand cows, and about 30 horses here. The heavy rain may force them down from the hills. This will become prime feeding ground for them. I just don't want them to come too close to us, especially if they come in packs.\"\n\n\"I'm going to move us further away from the tree line, Captain. It will give us a better line of sight for anything coming up the plain at us. It also gives us more time to defend ourselves from anything coming out of the trees.\"\n\n\"I agree, let's do it.\"\n\nAs soon as they landed, and the elevators and stairways were down, Teddy asked Monty if it was okay to go outside.\n\n\"You have to ask your mother first, and if she says okay you have to sign out.\"\n\n\"I promise to do everything right, Big Captain.\"\n\nAs she was running to her parent's room, she passed Gordon.\n\n\"I need you to come with me, otherwise many will die.\"\n\n\"Who will die Teddy?\"\n\n\"Cows and ponies will die, because of fast water coming down the hills. There will be much flooding today, and they don't know it. I have to tell my mother I'm leaving the ship. It will be better if I tell her I'm leaving with you.\"\n\n***************************\n\nDelicious open the door to their room and looked at Teddy.\"\n\n\"Where have you been all day?\"\n\n\"I was on the bridge counting down, and counting up.\"\n\n\"I heard you. You did an excellent job. The only thing you didn't do was tell me where you were.\"\n\n\"Big Captain kept saying my name and I wanted to make sure she knew I was on the ship. She seemed very worried about me, and I wanted her not to worry.\"\n\n\"Did you ever think your mother might worry?\"\n\n\"I tell you I was on the ship, when Gordon and I came back on.\"\n\n\"Yes you did, but did you think that was enough when we had to take off in a hurry?\"\n\n\"I didn't have time to tell you again, because I was on the bridge telling Big Captain where the rain was.\"\n\n\"There is going to be bad rain today, and if Gordon and I don't get to the animals there are going to be many killed.\"\n\n\"Is that where you want to go now?\"\n\n\"It's where I have to go now.\"\n\n\"Delicious, trust me, if she says she has to go somewhere, there is a reason behind it.\"\n\n\"What is the reason?\"\n\n\"I can't tell you the reason, but I know as sure as I'm standing here, she has to go there. You are stopping us from doing our work now. We have to leave, tell her it's okay. She won't leave unless you tell her it's okay.\"\n\n\"You are going to miss breakfast again.\"\n\n\"I promise to eat breakfast as soon as I come back with Gordon. He will tell you what I had for breakfast. I promise mommy.\"\n\n\"Why is it I can't say no to you?\"\n\n\"Because I love you so much.\"\n\n\"No it's because I love you so much. Get going, I don't want anyone's death on my conscience.\"\n\nTeddy reached up, and kissed her mother.\n\n\"I love you my mommy.\"\n\n\"Go ahead Teddy, I love you too.\"\n\n********************\n\nAs they reached the first floor Gordon had an eerie feeling.\n\n\"Teddy stay here, and don't move.\"\n\n\"Okay.\"\n\nGordon went to the Sergeant at arms and asked him for a Sidearm.\n\n\"Where are you going Gordon that you need a Sidearm?\"\n\n\"I'm going back to our original landing site to try and move the herds of cattle and horses back this way. I have an eerie feeling that I'm going to run into some carnivores back there. I just want to protect Teddy and myself from them.\"\n\nHe was given a Sidearm and one other item. One of the security team, Devon, was assigned to go along with them. She carried a rifle, and a Sidearm with her.\n\nAs they got within shouting distance, Teddy yelled, \"Daylight, Daylight come to me.\"\n\nGordon said, \"Call Admiral also.\"\n\nTeddy called him.\n\nSoon, the pony and the large stallion came running their way. After their greetings were finished, Teddy said to Admiral, \"There will be a big flood here very soon. Many cows will die, unless you move them to where our ship is. Can you help us?\"\n\nAdmiral ran back to his harem, and issued instructions to them. All the ponies ran towards the cows trying to get them to turn away from the water and move to the spacecraft, and safety.\n\nThousands of them did, but hundreds were reluctant to move from the fresh water.\n\nTeddy saw the water begin to rush down out of the high mountains, and through the gouges formed by previous onslaughts of flooding.\n\n\"Daylight tell Admiral to get the horses away from there. The water is coming fast.\"\n\nDaylight ran swiftly to Admiral.\n\nThe stallion reared up on his hind legs, and all his mares ran to him and away from the cattle. As they approached Teddy, she pointed towards the ship, and told Admiral to take the horses to it for their own safety. They ran fast, and fortunately, none of the ponies were lost.\n\nThe water moved down the mountain passes so fast many of the cattle were caught in the quick rising river. Hundreds of them did not know what to do. They began circling together and mooing. The began looking for someone to tell them what to do.\n\nGordon said, \"Devon, she stays with you. No matter what happens to me, she doesn't leave your side. I don't care if you have to knock her out, and carry her back to the ship, she does not leave you.\"\n\n\"Yes Captain.\"\n\n\"Gordon, what are you going to do?\"\n\n\"I'm going to become a cow.\"\n\n\"You can't be a cow; you're a boy.\"\n\n\"If you don't tell them, I won't.\"\n\nGordon walked into the fast moving water, until he was almost knee deep. He grabbed one cows' ear and her little calf that was trying to stay near her. He began pulling both of them towards the river's bank, mooing, as best he could. He did it again and his imitation of a cow was no better than before. Not only couldn't he sing, he couldn't even imitate a cow.\n\nHe grabbed another cow, and was pulling it out of the river, along with her calf. Her calf went under water, and Gordon didn't see it for a few seconds. When it finally surfaced, it was 15 feet downstream, and moving away fast. He had to let it go, in an attempt to try and save others. He felt like shit.\n\nHe went back into the water, which was now waist high. He grabbed a cow by its upper lip, and put her calf over his shoulder, so this one wouldn't die. He couldn't moo, because the water was taking too much of his strength away.\n\nAs they reached the edge of the river, more of the 4 legged beasts swam towards him, but not fast enough for the rising water. Soon, many of them would be washed downstream, and would die.\n\nGordon had one more card to play. He took his 9 mm Sidearm, pulled back the slide and loaded a round into the chamber. He released the safety, and fired one round into the rocks. The cattle were so stunned by the loud report; they began moving out of the water by themselves, and towards the closest shoreline.\n\nOnce out of the water, the cattle on the west side moved towards their brethren and continued their slow march West, until they were part of the large herd.\n\nThe cattle that moved to the east side of river seemed unperturbed by their separation from the main heard. They began grazing until several of them sounded an alarm. They began running south.\n\nGordon didn't see why until he rejoined Devon and Teddy.\n\nDevon said, \"Those cows are toast.\"\n\nHe turned and saw why.\n\nThe torrential rains forced large predators out from the mountains, their natural hunting grounds. These large cats, much longer, but sleeker than lions, and with great spots, and stripe covering their bodies, began chasing the cattle. There were 13 of them in this one pride. There was 1 huge male, 6 females, and 3 yearlings, and three cubs.\n\nIt was no contest when the cats caught up to the lagging cattle, and the small calves.\n\nGordon was amazed to see the yearlings take down one of the calves. This was not normal conduct for a lion yearling on earth.\n\nIt was not the only group to come down from the mountains. There were 3 groups they could see, and although they didn't act as teams, they separated groups of cattle, as they went after them.\n\nDevon said, \"Let's get back to the ship. They can come down on our side, and I don't feel like fighting something that size, with one rifle, and two pistols. Let's go Teddy, run.\"\n\nGordon got on his communicator, and told security to look for large cats coming out of the mountains. They were running back to the ship for their own safety.\n\nWhen Monty was appraised of this situation, she sent every security team outside to protect the ship.\n\nIt was a good thing she did. Out of the mountains came all sorts of carnivores, there were the big cats, and others all the way down the type that initially attacked Teddy. It wasn't the smallest of the carnivores, but it was close.\n\nIt was also the first time they saw a bird. This one was a fearsome looking, and featherless. This was not good! It had a wingspan of nearly 10 feet, like a 'Chilean Condor', but a neck like a vulture. They would catalogue it later.\n\n\"Devon give me your rifle. Pick up Teddy, and run to the ship. I will try to keep them away from you for as long as I can. Don't stop, I will try to keep up with you, but her safety is more important than mine.\"\n\n\"Gordon, that's my job.\"\n\n\"Devon, your faster than I am. I am the captain. Give me your dam rifle and go. That's an order.\"\n\n\"Bad word, Gordon.\"\n\n\"I will meet you in the chapel.\"\n\n\"No wonder your father tells everyone you are a pain in the ass.\"\n\n\"He's right. Now take Teddy and run.\"\n\n*********************\n\nGordon started shooting at anything that was close to Devon. He was determined nothing would happen to them. Even though the hyenas were closing in on him, he concentrated on the animals that were closer to Teddy. Shot after shot those animal fell. He never realized he was that good with a weapon.\n\nThe hyenas were closing in on him, and the rifle was of no use. He was about to shoulder it, when they started falling. One of the got to his left leg, and he howled in pain. Suddenly, the animal died, and let go. He didn't see who was shooting at them, but he was grateful for the help.\n\nHe resumed firing the rifle, until the magazine ran out of ammunition, he threw it over his shoulder, and took out the 9 mm. It was not effective at range, but anything that got close to him went down.\n\nThen he saw the line of security forces lying down in the grass picking off the carnivores as they approached him. He changed his direction, and within 30 yards he limped behind them.\n\n\"Someone give me a magazine, I'm out of ammunition.\"\n\n\"The sergeant said, \"Haven't you caused enough problems for today? Go inside and return your weapons. We have this under control.\"\n\n\"I didn't do this; the rain did it.\"\n\n\"Go tell that to Monty. Go to the infirmary and let them bandage that nick in your leg.\"\n\n\"He picked up Teddy. Are you okay?\"\n\n\"Yes, I am fine. I could have stopped the animals, and we could have walked here.\"\n\n\"How would you explain that to Devon?\"\n\n\"She fainted?\"\n\n\"I don't think that would have worked, little one. Too many people would have noticed the time lapse. Let's keep that secret between the two of us; Okay?\"\n\n\"Okay.\"\n\n\"We have two things to do. We promised your mother you would have breakfast as soon as we returned, and we have to get yelled at by the 'Big Captain. What do you want to do first?\"\n\n\"I think we should eat first. I may not be hungry after I get yelled at.\"\n\n\"How do I explain my leg being fixed?\"\n\n\"It bit your shoe, and the blood is the animals?\"\n\n\"I think we both have to go to the chapel, don't we?\n\n\"Yes.\"\n\n\"We didn't do anything wrong, Teddy. We went for a walk to save the horses and cows.\"\n\n\"Why did you take a gun.\"\n\n\"Are you on my side or hers?\"\n\n\"Breakfast, please.\"\n\n\"Somehow, I think we will be in the chapel later, trying to ask God to forgive our bad thoughts.\"\n\n\"Not me, I love everyone.\"\n\n\"Tell me that after I spank you.\"\n\n\"Why are you going to spank me?\"\n\n\"Because you love everyone.\"\n\nTeddy laughed.\n\n******************\n\nAs they sat down to breakfast Teddy said, \"After all the running, I am hungry.\"\n\n\"Don't tell your mother why you were hungry, unless she asks you.\"\n\n\"Isn't that lying?\"\n\n\"No it's not. It's only a lie if she asks you why you were hungry, and you don't give her a complete answer.\n\nIf she asks you if you had breakfast, and you say yes, that's not a lie, because you did eat breakfast.\"\n\n\"I think that's very close to lying.\"",
        "\"It's not lying. You could go into a court of law, and swear before God, that you had breakfast. Your answer 'Yes' I did have breakfast; it is the absolute truth.\"\n\n\"I see, and you're right. Mommy asks me if I had breakfast. I did have breakfast. You are cheating by using funny words.\"\n\n\"Truer words were never spoken.\"\n\n***********************************\n\nThey were eating breakfast, when Teddy's eyes opened wide, and the hairs on Gordon's neck stood up.\n\nOh no! \"Good morning Monty, would you like to join us for breakfast?\"\n\n\"I told security I wanted to see you upon your return to the ship.\"\n\n\"I received that message, but I had one obligation to take care of before I could see you. I promised Delicious I would take Teddy to breakfast as soon as we returned. I could not serve 2 masters at the same time, and in order not to get Teddy in trouble with her mother, I chose to have her eat breakfast first.\"\n\n\"Is that true, Teddy?\"\n\n\"Yes Big Captain, we promised my mommy I would eat breakfast when I came back.\"\n\n\"You are so lucky Gordon.\"\n\n\"The truth has nothing to do with luck, Captain.\"\n\n\"You will be in my ready room as soon as you deliver Teddy to her mother.\"\n\n\"As you wish Captain.\"\n\n\"You have no idea how I want to take you up to the gym, and take you apart like the old days.\"\n\n\"I could tie both my arms behind my back.\"\n\nMonty smacked him so hard, he laughed.\n\n\"Was that a yes?\"\n\nMonty growled and left them.\n\n\"I think Big Captain loves you.\"\n\n\"I love her so much I'm going to be Matron of Honor at her wedding. I'm going to wear a dress, and make up. We are going to take pictures so she can keep them forever.\"\n\n\"Gordon, you always confuse me. You can't be a cow, because your boy, but you make believe you're a cow. A matron of honor at a wedding is a girl. You are going to be matron of honor at Big Captain's wedding? How are you doing that?\"\n\n\"Teddy, I'm doing that because Monty is my best friend. If she told me to stand on my head at her wedding, I would do that for her. If she asked me to sing at her wedding, I would. Have you ever heard me sing?\"\n\n\"No, I haven't.\"\n\n\"Teddy, you don't ever want to hear me sing. I am probably the worst singer you've ever heard. I cannot carry a tune. I can't follow a rhythm. I am awful when it comes to singing. You can ask Zoey; I cannot even sing in the shower.\"\n\n\"What does a shower have to do with singing?\"\n\n\"It is an old story, and it has nothing to do with singing. Let me take you back to your mother, so I can tell her both of us have just come back from breakfast.\"\n\n\"Are you going to argue with her?\"\n\n\"I could get her to yell at me by telling her that Tatum and Truman are ugly.\"\n\n\"But they are not ugly, they are very pretty baby's. They don't listen to me, and Truman is going to be a very bad boy, when he starts to talk. His nose is going to be in the corner for a very long time. Tatum is going to be just like me. God loves both of them very much, but my daddy's hair is going to turn white getting Truman to do what he is capable of doing.\"\n\n\"Is Truman going to be like Newton?\"\n\n\"Truman will find a new mineral on this planet. Truman, Newton, Jennifer, Adele, Mia, and our new friend's children will build a spaceship that will go so fast that time will mean nothing. You will be like your daddy was; you will keep everyone going in the same direction.\"\n\n\"How can we possibly build a spacecraft, without the necessary manufacturing facilities to do it?\"\n\n\"That's what you are for Gordon. You will find a way.\"\n\n\"I love our little talks.\"\n\n****************************\n\nHe knocked on her door. Delicious answered it, after a considerable length of time. Her hair was messed up, her make-up was askew, and her eyes were on fire.\n\nGordon knew he had just interrupted sexual interplay.\n\n\"Hello sis, Teddy and I just had breakfast, but if you have any coffee ready, I'd love some. It's been a long morning, and Teddy and I went for a nice walk. It's absolutely beautiful outside, you really should go out instead of staying inside with the baby's. Is Gray working today? If he is, I'll help you change the kids and you can get outside quicker. We have incredible stories to tell you about our little adventure.\"\n\n\"Get the hell out of here Gordon.\"\n\n\"Mommy, you used bad word.\"\n\n\"Not as bad as I'm going to use if you're uncle doesn't get out of here now.\"\n\n\"Do you see what I mean, Teddy. I was being very nice to your mommy. I offered to help change the babies, and she gets angry at me for no reason at all. There is nothing I can do to keep her happy.\"\n\n\"Gordon, if you don't leave now, I will kill you where you stand.\"\n\n\"Zoey tried it, and she couldn't do it.\"\n\n\"Come on Gordon, you know what's going on, please leave us alone.\"\n\n\"Oh, you and Gray are making love. Why didn't you say so in the first place? I would've left immediately. I'm sorry sis, I will come back later for the coffee. Goodbye Teddy, if you need me, you know where I'll be. Monty needs to see me now, so I'll be with her for the next 30 minutes. Then I'll be down in engineering with Newton...\"\n\n\"Leave Now!\"\n\n\"Okay, you didn't have to yell. I got your message. If I'm not in engineering, I'll be in the...\"\n\nDelicious pulled Teddy into their apartment, and slammed the door in her brother's face.\n\nGordon yelled, \"Are you angry with me?\"\n\n\"Gordon, Leave!\"\n\n\"Okay, but I'm coming back later for coffee.\"\n\nSomething hit the back of the door. He hoped it wasn't Teddy.\n\n**************************\n\n\"Teddy, please go to your room, and read. Mommy and daddy are trying to make another baby.\"\n\n\"This one will be a girl baby, mommy. Hair like me, smart like Truman, very very smart girl baby.\"\n\n\"Thank you Teddy, go read.\"\n\n****************************\n\nGray asked, \"What's up baby?\"\n\n\"I'm going to shoot my dam brother. He was purposely keeping us apart. Teddy said we are going to make a baby today. It will be another girl. She will be smarter than Truman. Since she told us how smart Truman is going to be, it appears we are going to be breeding geniuses.\"\n\n\"There is nothing we can do about it baby, it's in our genes.\"\n\n\"Don't you start with me. I have to put up with my brother, I could put you on ice for a generation.\"\n\n\"Honey, it doesn't matter to me if I have 7 children as I approach 40, or as I approach 60. I am still going to father 7 children with you, and there is only one way I'm going to do it.\"\n\n\"I hate you Gray.\"\n\n\"No you don't, you love me.\"\n\n\"So what?\"\n\n\"I think I'll take a nap now.\"\n\n\"If you do, you will wake up dead.\"\n\n\"Does that mean you want us to continue making today's child now, or later today?\"\n\n\"Gray, go to sleep, I will take care of everything else.\"\n\n\"If I go to sleep, I'm taking him with me.\"\n\n\"I'll tell you what; you may continue, and I will lie here like grass.\"\n\n\"I will make you a bet. You won't be able to lie there like grass.\"\n\n\"I don't have to take off my night gown?\"\n\n\"No, you may leave your nightgown on.\"\n\n\"I accept your bet.\"\n\n\"Move to the center of the bed please.\"\n\n\"Okay?\"\n\n\"Very nice, I've wanted to try this for years. He reached for his robe, and pulled off the tie. He grabbed her left ankle, wrapped the tie around it, and knotted it to the end of their bed.\"\n\n\"What the fuck do you think you're doing?\"\n\n\"Making sure you stay in the center of the bed.\"\n\nShe had a confused look on her face, and he couldn't believe she bought it.\n\nHe did the same to the right leg, and she finally realized she could not protect her center.\n\n\"You pervert; I didn't tell you you could do this to me.\"\n\n\"You didn't tell me I couldn't do it either. You look absolutely 'Delicious' like that.\"\n\n\"You have a warped sense of humor, Grayson, untie me.\"\n\n\"I was going for your hands next.\"\n\n\"If you get that close; my hands will be around your throat.\"\n\n\"You are tethered to the bed. You can't use your speed or weight to put any force behind your punches, and you can't kick me. Not only will I tie your arms and hands to the headboard, I will gag you just to keep you quiet.\"\n\n\"You wouldn't dare.\"\n\nHe reached for the belt to his uniform, a handkerchief from his chest, and walked towards her.\n\n\"Don't do it; I'll keep my voice down. I will get you for this later, and it won't be much later either.\"\n\n\"I go to work in 4 hours. I may leave you here until I return.\"\n\n\"You can't, the babies come back from the nursery at 1600 hrs.\"\n\n\"I can change that very simply.\"\n\n\"Teddy will know something is up. She will want to talk to me.\"\n\n\"I will tell her you are sleeping, and she has to stay with her grandmother for the night.\"\n\n\"I'm going to lay here like dirt.\"\n\n\"You are going to move as soon as I touch you.\"\n\n\"You are such a bastard.\"\n\n\"You've met both my parents, although one of them was nothing to speak about.\"\n\n\"Let's get this over with, I'm getting bored. Besides that, you shrank to nothing.\"\n\n\"He will wake up in due course. You, however, must keep your promise. You must lay there like dirt. Dirt does not move.\"\n\n\"Pig.\"\n\n\"Did I just hear dirt talk? If I did, dirt is going to be muddy between her thighs very soon.\"\n\n\"You are so full of shit Gray. You can't get to my neck, and or my breasts. That's what get my fire going, and you know it. I may as well go to sleep.\"\n\n\"Good night dear, pleasant dreams.\"\n\nGray lay down at the end of the bed, and began working on her toes. He licked, sucked, and bit each one them. As he went along, 'Dirt' was trying to pull her left foot away from him.\n\n\"We must be having a 'mini' earthquake. The 'Dirt' I am inspecting is moving.\"\n\n\"It's just the wind pushing the dirt around.\"\n\n\"Dirt doesn't talk.\"\n\nHis lips moved to the top of her foot, as his thumbs began massaging the soles. At first he did it lightly, and then harder, until he heard the first moan exit her mouth.\n\nHis lips and teeth tormented her calf, while his hands moved to her ankle, and began reflexing it. He kissed, nipped, and bit his way up to her knee, and moved his hands up to massage her calf. They worked in tandem, as his mouth moved up her thigh, his hands followed.\n\nWhen he ran out of thigh, his tongue slipped past the crease, between her leg and her body, and began playing along her pubic ridge.\n\n\"You prick.\"\n\n\"Did I just hear 'Dirt' talk?\"\n\nDelicious did not answer him, but she wanted to strangle him, because he didn't go the way she wanted him to.\n\nGray's hands continued moving up her thighs, and Delicious had hope again.\n\nIf he just kept his hands moving at the same pace, in the same direction, and at the same, he would be inside her in seconds.\n\nHer vulva was bloated with blood, and if he touched her just right, she would explode. He was there, right next to her, and she moved her hips in an attempt to make contact.\n\n\"Did 'Dirt' just move?\"\n\n\"Yes it did Gray, please touch me, I'm going crazy here. Please touch me.\"\n\n\"That's against the rules.\"\n\n\"I want my baby now. I want you inside me now. Please Gray stop this, and make love with me.\n\n\"Are you going to lie there like dirt?\"\n\n\"I promise you will be very happy when we are done.\"\n\n\"Should I untie you? I've never tied you up before.\"\n\n\"Yes that was new. Where did you dream that one up?\"\n\n\"String theory.\"\n\n\"You used a scientific theory to tie up your wife?\"\n\n\"It's another thing you can kill your brother for. He was explaining it to me. He was showing me 'open strings', and closed strings. He believes there are at least 2000 other kinds of strings in the universe. He even believes there is one like the double helix in the human genome. It would explain multiple universes, and how to travel between them. You can go up any to level, and get off like an elevator...\"\n\n\"Gray look where you are, and ask me if I'm interested in string theory?\"\n\n\"Should I tie up your hands?\"\n\n\"Maybe some other time, but right now, I would like to make our baby.\"\n\n\"Are you in that much of a hurry?\"\n\n\"Grayson Thyme, think about this. No sex for the next 24 years. Then we will have 3 babies in a row. Then no sex for the rest of your life. How does that float your boat?\"\n\n\"Should I untie you?\"\n\n\"No, I'd like to know what this feels like at the end of our coupling.\"\n\n\"May I continue from where I left off, or do you want to go to the main event?\"\n\n\"After talking about string theory, I have cooled down considerably. You may continue where you left off, but if I pull your hair again, you better be ready for the main event.\"\n\n\"Your wish is my command, dear.\"\n\nGray was kissing down the outside of her right thigh, when there was a knock on their bedroom door.\n\n\"Yes.\"\n\nTeddy said, \"I'm sorry to bother you, daddy. There is a problem on the bridge, and they would like you to be there in 30 minutes.\"\n\n\"Thank you Teddy, you can tell them I will be there.\"\n\n\"Thank you, daddy.\"\n\n\"Gray before we do anything else, untie me. All Teddy has to do is find me like this, and she will have you arrested. After I am untied, we will have 20 minutes to ourselves, 7 minutes for you to shower shave and get dressed, and 3 minutes for you to get to the bridge.\"\n\n\"Do you see dear, everything involves math.\"\n\nEven though he ducked, she was able to hit him on the back of his head.\"\n\n\"You should have stayed on earth, and pitched for the Boston Red Sox. You don't miss what you aim for.\"\n\n\"Will you try to aim for this please? I'll give you a hand if necessary.\"\n\n\"No, I've had plenty of practice throughout the years. I believe I can do that by myself.\"\n\n\"Give me their names, I'll go back to Earth and kill each one of them.\"\n\n\"We weren't married, and then I waited a year for you. I should have had both heads examined before I did that. It was extremely cruel, and very unusual punishment.\"\n\n\"Are you complaining?\"\n\n\"You bet your ass I am. Look what I missed out on for one year.\"\n\n*************************************\n\nOutside the ship was a curious mix of life and death. Carnivores had to eat, just as everyone else had to in order to survive. Only those carnivores who approached within 100 meters of the spacecraft were killed. The others were allowed to do as God intended them to do. They preyed on the weak, and the old, leaving the young and healthy to bring forth the next generation.\n\nThis brought about one more concern. No one on the spacecraft had meat in their diet for over 4 years. The turkeys were still running around inside the ship, but there was still too few of them to make any difference.\n\nThere were dead cattle lying on the ground going to waste. The carnivores had killed too many cows during their brief encounter with them, and after they had eaten their fill, they retreated to the mountains, and their normal hunting grounds.\n\nThey named the featherless birds 'Vultures', because they provided the same service as those birds did on earth. They picked the bones of the animals until they were clean.\n\nAs on Earth, myriads of tiny creatures came from underground, and began feasting on the left overs from the bones and carcasses of the dead animals. Apparently, nature was the same everywhere in the universe. Nothing went to waste.\n\n*************************\n\nMonty sent out two 10 man units. 4 men were armed, and 6 men with ropes to pull the dead cattle towards the ship. Other units were sent into the forest to bring back as much dead wood as they could find. They were not going to have a barbeque tonight. Tonight they were going to learn how to turn bones into items that would make their lives easier, and more fruitful.\n\nBones from these dead animals were retrieved to make plates, spoons, forks, ladles, hammers, screws, screw drivers, bottles, knives, and other implements.\n\nNone of these were put on the ship before they left earth, because they contained metal, and metal degraded the antigravity engines. One day, if they were forced to leave this planet, and they were lucky enough to make metal implements, they would have to be left behind also.\n\nGordon went up to Monty and told her they needed stones, and a lot of them. She didn't even question him as to why they needed them, she already knew.\n\nEveryone, 16 years old and above was assigned to this task.\n\nIn the auditorium, Gordon showed everyone the type of rocks they were looking for. He was very specific about them.\n\n\"We don't know how this planet was formed. However, if you find rocks that are black, take those because they are volcanic, and they will flake easily. We can make knives and other cutting tools with them.\n\nWe need large rocks, weighing between 10 and 15 lbs. We need flat rocks like a cutting board, we can use those to pound other rocks on and smooth them out. Later on in this process we will look for very larger rocks, and we will start making wheels. As soon as we are capable of making wheels, transportation will become much easier. We have all the beasts of burden we need right outside our door, but without wheels they are of no use to us. Wheels are months, maybe years away, but we have a plan. All we have to do is stick to the plan and we will get there. We are going to be here for a long time. We will start planting crops as soon as we can make our first plow. We do not need wheels for that; we have the cattle to pull those for us.\n\nLet's start today with the simplest things we have to get, rocks, and wood. Everyone 16 to 22 years old works 2 hours per day outside collecting what we need, and then goes back to their studies. The rest of us working stiffs will work our normal shifts, plus another 3 hours on the outside.\n\nThe only people excused from outside duty are the doctors, nurses, and Adam Schiff and his staff. They are too important to lose.\"\n\nSomeone yelled, \"Yea, Adam takes enough shit all day, he shouldn't have to take more shit from the rest of us, while we are working outside.\"\n\nAdam replied, \"Thanks guys, I'll remember each of you as you flush your john's.\"\n\n\"Captain, that's another thing we should concern ourselves with for the long term. What are we going to do with the excrement we use to dispose of it in space?\n\nAre you going to let it pile up in storage, and take a trip into space to get rid of it? Are we going to use it as fertilizer for our crops? There is going to be too much of it for the arboretum? If you are going to take the ship on a cruise for half an hour into space as you did last evening, we could dispose of 3-month's worth of excrement during that time. It's all up to you.\"\n\n\"How much do you have on hand now, Adam?\"\n\n\"I don't have any on my hands now. I washed them before I came to the meeting.\"\n\n\"Laura smack him for me, please.\"\n\n\"I can't, he's too nice to me.\"\n\n\"I hate that in a man.\"\n\nGordon said, \"I'm right here Monty.\"\n\n\"Oh good.\"\n\nShe swung at him, but he jumped over her arm, did a handstand, and walked behind her. He locked his feet underneath her chin, and she screamed.\n\n\"Gordon don't you do it; you will break my back.\"\n\n\"Are you going to marry that asshole?\"\n\n\"He's never asked me to marry him, and I'm getting tired of waiting.\"\n\n\"Maybe he's afraid, because you're getting grumpy again.\"\n\n\"He takes me as I am, or he should get off the ship permanently.\"\n\n\"I'll let you go if you guarantee me you will say yes when he asks you?\"\n\n\"Are you still going to wear a dress at my wedding?\"\n\n\"I'll even look like a southern belle, if you want.\"\n\n\"Fine, if that asshole ever climbs out of one of your sister's electrical supply closets, and decides to ask me to marry him, I'll say yes just before I knock his lights out for making me wait this long.\"\n\n\"Montgomery LaBrennia Jamison will you marry me?\"\n\nGordon released his feet from around Monty's neck, and ran from the dais screaming, \"I never told a soul. As God is my witness Monty, I never told anyone your middle name.\""
    ],
    "authorname": "Prolonged_Debut10",
    "tags": [
        "little green men"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/dark-as-daylight-ch-15"
}