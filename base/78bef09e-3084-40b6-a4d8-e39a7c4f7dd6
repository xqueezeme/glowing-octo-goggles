{
    "title": "The Twelve Zenati Pt. 08",
    "pages": [
        "Authors note: Hello everyone. I hope you have been enjoying this series of the Tables. Thank you once again to David and Kate for being my second set of eyes. Enjoy! ~ellie. \n\n***\n\nMarcella stepped out of the movie theatre and sighed. She'd known they would be there, but she wasn't prepared for the glare they gave her at being alone. She hadn't lied exactly. She had told them that both she and Vivienne were fine. It wasn't her fault that they assumed they were fine together, was it?\n\n\"Where is she?\" Gideon growled at her. It was obvious that he was barely keeping a rein on his temper.\n\n\"What time is it?\" Marcella asked, standing straighter in the face of his anger. He stared at her as if not comprehending the question, and she shrugged and checked her watch.\n\n\"Marcella, where is Vivienne?\" Noah asked more gently, moving a step closer. \"We just need to know that she is okay.\"\n\n\"Then stop worrying. She is fine. Honestly. I wouldn't have let her go if she wasn't. She just needed some time and space to think about things,\" Marcella tried to explain.\n\n\"Let her go?\" Noah asked as Gideon seemed, impossibly, to get more rigid with anger.\n\n\"She went home. Her flight should land in...\" She checked her watch again, but she paused and looked up as Gideon gave a low painful-sounding groan and roughly ran his fingers through his hair.\n\n\"Fuck!\" Gideon growled and turned and walked away. \n\n\"Come, we'll take you home,\" Noah said, obviously worried about his brother and wanting to follow him.\n\n\"Go and look after Gideon. I have a car nearby. I'll be home tonight if either of you want to talk about what really happened, rather than just believing what you've been told,\" Marcella said and went to move away.\n\n\"What we've been told?\" Noah frowned. As far as he knew, Vivienne hadn't shown up at the clinic when she said she would and hadn't been answering her phone. Gideon had thought she had been in an accident until Marcella had finally answered her phone.\n\n\"You don't know what happened?\" Marcella asked as she looked at him wide-eyed.\n\n\"Something happened to Vivienne?\" Noah growled this time.\n\n\"Your mother happened. She ambushed Viv at the lunch that we had organised with Sera today. It wasn't pretty,\" Marcella said without giving details. \"It was cruel of Gideon to ambush her that way. I doubt that she will want to talk to him today. She needs some time and space to recover. She hid it well, but she was pretty upset.\"\n\n\"Fuck!\" Noah spat. \"Go home. I will call you once I calm Gideon down before he makes the situation worse.\"\n\nMarcella watched him turn and jog away from her. Even if he hadn't engineered the meeting, she couldn't work out why neither Tatianna nor Sera would have told Gideon about their lunch and twisted it to their own advantage. These people were strange, and she couldn't even begin to understand their relationships. he'd spent the last few hours thinking of her own plans and determined to make sure that she started them over the next few days. She couldn't stay here forever, especially now, and the more she found out about the Zenati family, the less sure she was about leaving Olivia here with them, despite Genesis's almost obsessive care of her.\n\n\"Gideon, slow down. There's something you don't know,\" Noah called after Gideon as he jogged to catch up to his brother. \"Gideon, stop! You'll just make it worse!\"\n\n\"Worse?\" Gideon whirled around to face his brother. \"She left! She's flying home! How can it get any worse?\" he asked as if his brother was insane. \"I need to go and get her.\"\n\n\"No, you need to go and find out why Mama ambushed her at lunch today and what she said to make her run away from you,\" Noah said in a low, calm voice, noting the surprised look on Gideon's face twist into pain, followed quickly by building fury. \"We warned you. Just because she hadn't interfered in your life before didn't mean that she wouldn't now. Geez man, why wouldn't you listen to us?\"\n\n\"Mama did this?\" Gideon ground out between clenched teeth.\n\n\"Marcella said she ambushed Viv at lunch. I didn't stick around for details, but something tells me it didn't go well. Look, if you have ever trusted me, trust me now. Talk to Papa. Don't give Mama the satisfaction. Let her know that she didn't just chase Viv away, she chased you away in the process. Ranting and raving at her now will only drag you into her drama and the games she plays,\" Noah advised, doubting that Gideon would listen to him but trying anyway. He pulled his phone from his pocket and called their father as Marcella hurried passed them, staying out of Gideon's line of sight.\n\nAs she passed them, Marcella smiled at Noah and mimed driving to indicate she was heading home. She couldn't be rude to them while she was staying in their apartment and driving their car, both of which she would need if she wanted to start on her own plans over the next few days. It was a shame that she was no longer interested in the boyfriend deal she had made with Noah, not after meeting his mother, but she would find another way to keep her father off her back. Hopefully, she would be able to organise a time to make a video call to her mother from Olivia, when and if Olivia ever admitted she had a family back in Perth, which was doubtful at the moment.\n\nThe legal help that she needed she could get from any family law practice. She would just do it secretively, so she didn't offend Noah, who had offered to help her without hesitation or uncomfortable questions when she had asked. The more she thought about it, the more she realised that she was probably better off not confiding her plans to the Zenatis. They were way too unpredictable with how they reacted to things. While Noah seemed quite normal, the rest of his family were obviously nutcases, so she was sure that, even though he might appear slightly more well-adjusted than his brothers, he was just as crazy.\n\nShe smiled, thinking of Vivienne's description of their Madrina, and was keen to meet the woman. She would keep that up her sleeve if she ever needed to distract Noah from looking too closely into what she would be busy with in the next few weeks. She drove home, becoming more determined to make a difference in her sister's life and to show her that she could be trusted and relied on to have her back. \n\n*****\n\nVivienne smiled as the plane that she had rented landed. She was looking forward to going home and surrounding herself in the peace and tranquillity of her apartment. She had been dreaming about a long bath in her huge soaking-tub and having dinner delivered from her favourite restaurant. What she hadn't expected or wanted was a disappointed-looking Leighton waiting for her as she exited the small plane that had taken her home. She thought that she would have had more time to be locked in her apartment, where she could ignore him for at least a little while, before being confronted with what she had just done.\n\n\"Hey,\" Leighton said and gave her a soft smile. He held out his arms, and she stepped into them, feeling unshed tears sting her eyes. \"Must have been pretty bad there to make you come home without warning or packing. Gideon was always a moron,\" he said softly, rubbing her back as he soothed her and felt her relax against him.\n\n\"No, it wasn't like that. Gideon didn't do anything wrong. It's me.\" Vivienne sighed and shook her head, unable to explain how she felt. \"I just got really badly homesick and wanted to come home. Did he call?\" \n\n\"No one called, but I always know when a plane requests to land here. I heard that it was you that had rented the plane and made the request. I'm not buying that Gideon wasn't the one who made you so homesick that you couldn't wait for me to send the jet or pack any luggage, but I won't push. Lydia, on the other hand, is livid with him and probably will push,\" he chuckled. \"She's at your place now, filling your freezer with ice cream and your fridge with wine and cheese and pate, or whatever it is you girls are into at the moment.\"\n\n\"You didn't call him?\" Vivienne arched an eyebrow. \n\n\"I figured that he probably didn't even realise you'd left, since I hadn't heard from him yet,\" Leighton returned her suspicious look. \"I decided to let you tell me what was going on before I called and threatened to kick his ass.\"\n\n\"You are the best big brother ever, but he didn't do anything wrong, honestly. Just the opposite in fact. He couldn't have treated me better. I just needed to come home,\" Vivienne said and smiled, feeling loved and accepted rather than the fish out of water which constantly jumped out of the frying pan and got burned. She was beyond happy to be home and gave Leighton a smile. \"Have I told you lately how much I love you?\"\n\n\"Yes, but I could stand to hear it again,\" he chuckled. \"Come on. Rick is waiting with the car.\"\n\n\"You both came?\" she asked.\n\n\"When we found out who was on the plane requesting to land here, did you think we would just send a driver?\" Leighton asked.\n\n\"I hoped,\" she said. \"Aren't you all still busy chasing down Suebi sympathisers and keeping Lydia safe?\" \n\n\"They aren't as active up here in the wilderness as they are in the bigger cities. It was more of a shipping and transport operation here. We flushed out a few pods in Broome though, thanks to the Tatar. Those guys are pretty amazing.\" Leighton filled her in as they walked. \"Lydia has been a bit lost since Cat left for Melbourne. I'm not sure that she is dealing with what happened as well as we initially thought, so it's good to have you back.\"\n\n\"You should have said something. Lydia takes priority over anything else I was doing,\" Vivienne gasped. She loved her sister-in-law, and there wasn't much Vivienne wouldn't do for her.\n\n\"She's been keeping busy, and I don't think she gave herself time to stop and think about what happened here,\" he explained. \"She's had counselling, but I think she'll be happier talking to you.\"\n\n\"Hey, you,\" Rick said as he stepped forward to hug her as they neared the car. \"Let's go before Lydia calls again to see where we are.\" He rolled his eyes exaggeratedly. \n\n\"Hey, it's good to see you too,\" she chided him with a kiss to his cheek and climbed into the back of the car.\n\n\"No luggage. Did you murder someone and need to skip town in a hurry?\" he chuckled. \"I always knew you had that killer instinct. I just didn't think you'd take it this far.\"\n\n\"It was a close call, but everyone was breathing when I left,\" she laughed, feeling more and more like her old self. Why couldn't she just be herself in Darwin with Gideon and his family? Why did she always feel like she wasn't good enough, wasn't smart enough, wasn't pretty enough? She sighed to herself. She was better at home. These people loved her, and she was a better person because of that.\n\nWhen they arrived at Vivienne's welcoming apartment, Lydia had pulled Vivienne into her arms and shooed both brothers away to watch football while they talked. It hadn't taken much for the whole story of the last two weeks to come pouring out of Vivienne. All of her mistakes and the strange hot and cool behaviour of Gideon. She left out the claims of love and proposal, knowing how ludicrous that would sound after only being there a few weeks. She spoke warmly of Marcella and Madrina and laughed at the old woman's antics, all the while telling Lydia how much she didn't fit in there.\n\n\"Yes, Gideon, she is here,\" Leighton said into his phone as he approached the kitchen door, speaking loud enough to get the women's attention. Vivienne shook her head. \"Look, if she hasn't turned her phone back on, I'd say that's a pretty good sign that she doesn't want to talk about whatever happened yet... No, she hasn't said anything to me, yet... No, I don't think that would do anyone any good... Yes, I will tell her... Gideon, just chill man, she'll call when she's ready,\" Leighton sounded less than amused.\n\nBoth women listened carefully, grateful that Leighton had approached them as he took the call.\n\n\"Gideon, stop. Viv is my sister and you are my friend, but if I find out you hurt her in any way... No, she didn't say that, the opposite in fact, but what am I supposed to think with the mad dash home without even taking the time to pack her stuff? ... Yes, I'll call you later if she tells me anything,\" he sighed and ended the call. Then he turned to Vivienne and raised an eyebrow. \"That man has lost his shit over the fact that you left. You want to tell me why?\"\n\n\"He thinks he's in love with me,\" she mumbled, realising what a joke that was.\n\n\"Wait! What?\" Lydia exclaimed. \"You didn't tell me that part. Only that he was flirty one minute and scolding you for messing up the next.\"\n\n\"It doesn't matter. I know it wasn't real,\" Vivienne sighed.\n\n\"No, you don't. The Zenati men do not profess love, not ever unless... Did he have a heart attack while you were there?\" Lydia demanded.\n\n\"What? No!\" Vivienne said, but she had a flash of that first morning, when he had gone pale and rubbed at his chest. \"At least I don't think so,\" she said quietly.\n\n\"We're going to need another bottle of wine,\" Lydia laughed, \"because do I have a story to tell you.\n\n\"I can't remember when exactly, but at one of the mother's councils, the year before last I think, Peri Donati began asking Junie Zenati all sorts of strange questions about the history of the family, in particular, a story that she had heard about a curse. You know how she is with her family histories and books,\" Lydia said. \"Anyway, one evening after dinner, the two of them went to the library to talk, and I came along, professing to love the quirky stories in each family's history and why they have certain traditions. You know like we have the Waterfall Moons, the Donatis are entertainers, and the Vitalis are treasure hunters. I knew that the big gathering festival for the Zenati was Halloween, so it didn't surprise me that there was a story about a witch's curse.\n\n\"The witch hunts weren't quite as ferocious in Italy as they were in other European countries, and the Italians didn't mind the Gypsy's and witches. However, the Church had other ideas. Apparently, the story goes, the son of a pious man, who was attempting to buy his way into heaven by patronising a rather fanatical bishop, came under scrutiny for recovering from an injury that should have killed him. It was one of those local battles between lords or whatever. During the investigation, however, it was discovered that the son had fallen in love with a young witch and had allowed her and her mother to live in a small community on one of his father's vast properties. The girl and her mother were gifted healers and belonged to a nearby community where other healers dwelled.\n\n\"The pious man evicted them at the fanatic's behest, but that wasn't enough for the bishop, who ordered them to be arrested and tried as heretics for their witchcraft. There was a lot more to the story, but it was a while ago. Now I'm not sure if I can remember all the details. I would have to contact Peri to see if she has had all of the information verified yet as well, but the lovers went through many trials, and always love brought them back together, until the young man was killed trying to save the woman he loved from execution. The young witch vowed revenge on the father of her dead lover and all the male heirs in the line of his family for listening to the bishop.\" Lydia paused and took a sip of her wine.\n\n\"Woah, this is a good story,\" Vivienne said, noticing, for the first time that both Leighton and Rick were in the kitchen with them listening to Lydia's retelling of the story.\n\n\"The story goes that the young witch escaped her execution because of her lover's sacrifice and formed a mighty coven. Then she cursed the family with a love curse. It is said that no male heir of that family line would ever know romantic love until they met their one true love, destined through time to be their soul mate. Each man who did meet his love would have to go through trials to earn her love in return. Only those true of heart would win the love they craved, or they would live their lives suffering for the one they lost.\" She paused again and looked at the rapt faces so engrossed in her story. \n\n\"That can't be it, how do they suffer? How do they recognise the one who is meant for them?\" Vivienne asked.\n\n\"Junie said that, according to her husband and the men she had spoken with about the curse, it feels like someone had reached in and wrapped a giant hand around their heart and squeezed it, much like they had a heart attack. But when they go to see a doctor, there are no physical symptoms. It's been like that for generations. They say the pain subsides to a bearable level, but doesn't go away entirely until they have won the love of the woman who is their curse breaker. A few have tried to get around the curse, using affection rather than love to woo the woman, or the woman does not feel that deep love in return, and the curse never leaves, making him suffer all the more. Once broken, though, it's gone for good, and the world around them fills with love and affection,\" Lydia said with a smile, ending the story on a happy note.\n\n\"Okay,\" Leighton frowned. \"Let's go back to why you told us this story?\"\n\n\"Because, silly, the Zenati men don't fall in love or, I should say, they only fall in love once in their lifetime, and they do not use that word as a throw-away like so many others do. They can't, or so Junie says,\" Lydia shrugged. \"According to her, if Gideon told you that he loved you, then he believes you are his curse breaker and his one true love. He is probably having chronic chest pain right now thinking he lost you, and that's probably why Leighton says he sounds like he's losing his shit.\"\n\n\"I wonder how that works for the Oracle-Chair relationship. Is the Oracle fated never to meet his one? Does he share the breaking of the curse? Does he have his own love that he keeps hidden like a Kept?\" Rick mused.\n\n\"It's just a story,\" Vivienne laughed. \"You can't seriously tell me that you believe in curses now?\"\n\n\"There are more than a few people who wouldn't believe in what I do as the Oracle or the powers of the Tatar, who have yet to give us bad information, or give any of the families bad information for that matter. Is a curse such a stretch of the imagination?\" Rick asked.\n\n*****\n\n\"Serafina,\" Armando said and greeted his only daughter with a hug.\n\n\"Hi Papa,\" she smiled and enjoyed the warm smothering embrace that her father gave her before stepping aside so her father could greet her mother with the usual public display of affection.\n\n\"Armando, right on time,\" Tatianna smiled, sweeping into the room, looking beautiful in an evening gown. \"I'm so looking forward to this dinner,\" she said leaning in close and embracing him, placing her cheek against his so as not to mess up her perfect lipstick line.\n\n\"The dinner was cancelled, my love,\" Armando said and stepped away rather than nuzzling his wife's neck as he normally would have in this situation. \"I will still take you and Serafina to dinner if you would like, of course.\" \n\n\"Cancelled?\" Tatianna frowned and looked at her husband. \"Gideon asked me to come. Why would he cancel after I spent half the day on a plane coming to the city for him? I will just call him and remind him of his manners. This is inexcusable,\" she said, as if it was a personal insult to her.\n\n\"Put down your phone. He is in the hospital,\" Armando held up his hand to stop her from crying out dramatically. \"Calm down, my love, Hector and Noah are with him. He has had an episode, and they will monitor him. At least we talked him out of flying anywhere tonight,\" he sighed. \"He was fairly determined to go after Vivienne when she left without warning today. Just out of the blue, she up and left, without even a word to him.\"\n\n\"What do you mean, an episode?\" Tatianna demanded, ignoring Sera who had gone pale and tried to speak and tell her father exactly why Vivienne had left without a word to anyone. \"Forget the dinner. Take me to my son!\" Tatianna said in the same demanding tone.",
        "\"What did you say, Serafina?\" Armando asked. \"You've gone pale. Are you all right?\"\n\n\"I told you that you went too far today. You upset Vivienne so much she flew home,\" Sera accused her mother. \"Now Gideon is in the hospital, and it's your fault. He won't forgive you, or me for that matter!\" \n\n\"Tatianna, what is she talking about?\" Armando asked. \n\n\"I did nothing. We met Vivienne and Marcella at lunch today. Marcella was very rude and upset everyone during lunch. She did warn us that she was a bitch, but that didn't excuse her behaviour,\" Tatianna said with a negligent wave of her hand.\n\n\"You went to lunch with Vivienne and Marcella?\" Armando asked. He knew this much, but what no one knew for certain was what happened during the lunch. Marcella had only said that it had gone badly, according to Noah. \"Why would either of them have been rude? I have spoken with them both over the last few weeks and found them charming young women, especially Vivienne, who has given her time freely to help Genesis and Marcella's sister.\"\n\n\"Help Genesis? Why would he need help?\" Tatiana asked, narrowing her eyes. \n\n\"He has been helping with the investigation into the Suebi plot. You know this, my love. Marcella's sister was caught in the crossfire, and he helped her to escape the people who planned to kill her and has since formed a bond with her. She has information we need, and he has been working with Vivienne to help Olivia to remember all the details we need about her time with the Suebi,\" he informed his wife. \"The information she holds is crucial to our investigations right now, and Vivienne's absence from the team will set us back considerably.\"\n\n\"Take me to the hospital. I need to see my son,\" Tatianna demanded imperiously.\n\n\"I think you should tell me about this lunch today and why Sera believes you are the reason Vivienne left town so suddenly,\" Armando said in a hard voice. While he usually catered to his flighty wife's whims indulgently and treated her like the queen she portrayed, he would not countenance her meddling in his sons' love lives. \"What did you do, Tatianna?\"\n\n\"I already told you. I didn't do anything. Marcella was rude and upset Vivienne. They hardly touched their food before making a scene and leaving the restaurant. The girl could hardly be his one true love. The idea of it is absurd if my inviting myself to lunch with Sera is enough to send her running home to her mother,\" Tatianna sighed dramatically. \n\n\"Her mother died when she was a child, Mama. You know that. Stop being so cruel!\" Sera broke down. \"I'll tell you everything Papa. I know why she left, and I'm so sorry. We are just so used to Mama's thoughtlessness that I sometimes forget that others can't shrug it off as easily.\"\n\n\"Don't be stupid. You can't believe that other girl's lies. She was just the bitch she told us she was. She upset everyone at lunch today. If you are looking for answers, Armando, go and see that awful Marcella girl. First though, take me to the hospital to see my son!\" \n\n\"Meg Papillo did die when Vivienne was a child, Tatianna,\" Armando corrected his wife sternly and looked to his daughter. \"I think I would like to hear what Sera has to say, as it seems she was the only one listening to the other two women today.\" He took a seat and indicated that his wife and daughter should do the same.\n\n\"This is ridiculous,\" Tatianna huffed. \"I want to go to the hospital!\"\n\n\"As do I, but I want to find out why my son is in the hospital for an anxiety attack first,\" Armando said in a tight voice. \"So, sit down, my love, because you are not going near Gideon until I am sure that you will not do even more damage to his well-being.\"\n\n\"I would never hurt our son,\" she said, horrified by the notion. \"If this is about that curse nonsense...\"\n\n\"Sit down!\" Armando barked, surprising his wife and daughter. He was usually so mild-mannered and laid-back that they could count the times he had raised his voice to either of them on one hand. \"Now speak, Sera. Your mother will not interrupt you again.\"\n\nSera spoke quickly, detailing everything that had been said during the lunch by both the other women as well as herself and her mother. She was surprised that her mother had not interrupted her but rather sat and fidgeted throughout the retelling.\n\n\"Just to ensure that I have this correct, upon meeting Vivienne, your mother insulted her height. During the lunch, she went so far as to put a hand on Vivienne's, stopping her from eating and suggesting she could stand to eat less. Then to cap it all off, she insulted her overall look and suggested that her dead mother should have done a better job at guiding her?\" Armando summarised.\n\n\"It wasn't like that at all! I said those things in a very helpful way. It was obvious she was uncomfortable in that restaurant, and I was just being kind.\" Tatianna waved her hand as if dismissing that she had done anything wrong. \"Now take me to see my son, please, Armando.\" She got to her feet, glancing at her phone in frustration.\n\n\"Marcella told Noah that you had gone to the lunch she had arranged with Sera and hinted that Gideon had planned the ambush himself. At this point tonight, not one of your sons wants to see to you or speak with you, and now I know why. Thank you, Sera, for your explanation of events. Marcella would not give any details except to say that the lunch didn't go well and to apologise for not keeping a rein on her temper. As the woman Gideon invited you to the city to meet at dinner tonight is no longer here, I think that it's best you fly home as soon as possible,\" he said sadly. \"Sera, it is perhaps better if you leave it a day or two to try and make amends with your brother for your part in the shemozzle.\"\n\n\"You can't do that to me!\" Tatianna cried as if she was being punished unduly. \"My son needs me!\" \n\n\"Yet not one of them are taking your calls tonight,\" Armando pointed out, indicating the phone she had been frowning at and pulled his phone from his pocket and placed it on the coffee table before him. He took a moment before making the call. \"Noah, could you ask Gideon if he would like to see his mother tonight,\" he said as his middle son answered his phone immediately.\n\n\"Is it as bad as we think?\" Noah asked carefully, hearing the hollow voice of his father and realising he was on speaker.\n\n\"It is,\" Armando said shortly. \"I will not excuse her this time or force you or your brothers to see her tonight.\"\n\n\"Gideon is fine. He spoke to Leighton and calmed down. Helena is discharging him now,\" Noah said as he walked back into the room Gideon was in and handed him the phone. The phone became muffled as the brothers spoke.\n\n\"Papa, I'm fine,\" Gideon's voice sounded clear and strong. \"I'm heading home. I don't think it's in anyone's best interests to be around me tonight,\" he said unemotionally. \"I'll call you in the morning.\" The phone went dead, and Armando raised an eyebrow at his wife.\n\n*****\n\nCurse or no curse, Genesis could not get enough of the beautiful woman who now kissed him with the same passion that he felt for her. After their honest conversations of that morning, he felt the shift in her in more ways than one. He couldn't pinpoint the shift exactly, however. She was still beautifully submissive to him, but there was something more, a strange gleam that came into her eyes that she quickly hid or a small smile that randomly curved her lips without explanation. \n\nThe small clinic in which they were staying now housed any number of men from his family at various times, and despite the suite they stayed in, he ached for solitude with Olivia. He knew staying here was for the best until she healed, but getting carried away with her willingness to please him now would be a very real risk. Still, he had the brace, which he had just laced her into, and was looking forward to a few quiet hours with her this evening as his brothers and cousins all went off for dinners with family and friends, leaving only a few watchmen patrolling the grounds and corridors. \n\nThe presence of the watchmen was another reason that he was happy to stay here for the time being. The idea that Olivia could identify members of the Suebi who had not been picked up yet and that she would need to be questioned by the leaders of his family and the Tatar had barely been a flicker in his mind as he had fought to possess her for himself. Now, the idea loomed large as a threat to his newfound happiness with her acceptance of his role in her life. The mirrored idea, that the Suebi might also be seeking her out to stop her from divulging their identities, filled him with unease. He could hold his own in a fight and protect her if it came down to it, but the fact that this place was crawling with the men he trusted, as well as their trained security men, lessened the worry that thought gave him.\n\nEnding the kiss and shaking his head to dispel the negative thoughts, Genesis looked down into Olivia's face, noting the fine features and cupid bow lips that so enticed him. She opened her mouth as if to speak but shut it again, making him frown and tilt his head. He hoped the movement and expression alone would urge her to speak, but when she didn't, he commanded her.\n\n\"Talk to me,\" he murmured softly. \"Tell me what you were going to say,\" he encouraged.\n\n\"Do you think I could... I mean, I just wondered...\" she whispered and looked up at him and licked her lips nervously. \"I'd like to undress you the way that you have done for me so often,\" she said, the last words coming out in a rush of breath as if she had been holding it as she made her request. \n\n\"I think I would like that,\" Genesis grinned down at her, but before he could finish his sentence, there was a small tap on the door. Knowing that it would be Naomi and that she wouldn't disturb them unnecessarily, Genesis turned his gaze toward the door with a frown and disengaged himself from Olivia, handing her a robe to put on. \"Yes?\" he asked, showing his displeasure at being interrupted as he opened the door a minimal amount to see that it was Naomi, who looked more than a little flustered.\n\n\"Marcella Gambaro is here, and she is quite adamant about seeing her sister,\" Naomi said apologetically.\n\n\"Tell her that we will be a minute or two and offer her a drink in the living area please, Naomi. We'll be out as soon as we can.\" He gave a tight smile of apology for his terse greeting. The fact that Marcella had shown up unexpectedly piqued his curiosity more than it irritated him.\n\n\"Your sister is here. Let's find you a nightgown to wear,\" he said, moving to her closet.\n\n\"But...\" Olivia frowned.\n\n\"We will have all night to revisit what we were just talking about,\" he chuckled. \"Marcella wouldn't come unannounced unless she had something important to say. We should listen to her, don't you think? She's been here to support you this whole time, even when you rejected her. She loves you despite everything, just as I and many others do, Olivia.\" Coming out of the closet with a loose nightgown in hand, he noted the anxious expression on her face.\n\n\"You have nothing to fear from anyone in your family or mine. You belong to me now, and I will always keep you safe,\" he murmured softly and bent to kiss her before helping her dress in the nightgown and robe.\n\nOlivia said nothing as she allowed him to dress her and guide her from the room. She'd accepted him and his insistence that he didn't care about her past or who she was before they met, but Marcella was part of that past. She knew Olivia for the horribly spoilt, mean girl she had been. She wasn't sure that she was ready to face her sister yet without the mask of denial that she had been wearing for so long.\n\n\"Olivia!\" Marcella exclaimed, coming to her feet at seeing her sister walking from the bedroom holding Genesis's hand and lagging slightly behind him. \"I didn't expect to see you up and walking around yet,\" she said, trying to cover her surprise. \"How are you feeling?\" She directed her questions directly at her sister rather than the imposing man standing between them.\n\nGenesis felt Olivia stiffen and halt in her slow walk as she was confronted with her sister's obvious delight as seeing her out of the hospital bed. He squeezed her hand reassuringly and pulled her forward to stand beside him.\n\n\"I... I...\" Olivia stammered, trying to form the words she needed and losing the battle. She fell silent and looked at up Genesis.\n\n\"We've made some good progress in the last twenty-four hours. Olivia has a brace to support her wound as she walks and help with the pain of moving her body,\" he explained, forcing her to acknowledge him rather than look past him to her sister. \"I thought you and Noah were having dinner with the family tonight?\" he asked, still curious as to why she was here.\n\n\"Do you know who I am now?\" Marcella asked softly, still ignoring Genesis. More than anything she wanted her sister back. Vivienne had made her promise to tell Olivia that she had gone home because of a family emergency in a rushed phone call earlier, but that wasn't the reason she had come tonight. She had stewed on what had happened at lunch and had come here to tell Genesis that if Vivienne, the trauma specialist, were no longer here, she would be taking her sister home where she could keep her from his crazy-ass family. Seeing Olivia out of bed and walking in to greet her like this, however, had shattered her resolve.\n\n\"I... I... yes,\" Olivia sighed quietly. \"I always knew who you were,\" she admitted and looked down, not wanting to see the hurt that had entered Marcella's eyes.\n\n\"Why don't we sit down and you can tell us why you came to see Olivia tonight, instead of going out to dinner?\" Genesis invited and guided Olivia to the couch where he sat beside her, still holding her hand for support as Marcella sat adjacent to her sister.\n\n\"Vivienne had to fly home this afternoon, and she asked me to come and explain to Olivia. She said that when she felt up to it, Olivia should call her. Call her anytime that she needed a friend,\" Marcella said the last word pointedly at Genesis, knowing what had happened the last time Vivienne had seen Olivia.\n\n\"Vivienne left?\" Genesis frowned.\n\n\"You don't know what's been going on?\" Marcella asked in return.\n\n\"Obviously not,\" Genesis growled, pulling his phone from his pocket. \"I wasn't going to the dinner tonight.\" He checked his screen. There were no messages, and he narrowed his eyes. Something was wrong, very wrong and he needed to know what happened. \"I think you should explain what's going on,\" he almost growled at her.\n\n\"Viv and I met your mother today,\" Marcella said sweetly, giving him a saccharin smile. \n\n\"Fuck! Where's Gideon?\" Genesis cut her off. He knew only too well the lengths his mother would go to in trying to thwart the curse, if she thought it was at play. \n\n\"With Noah,\" she shrugged. \"They ditched me as soon as they realised Viv had flown home. Why don't you give them a call while I talk to Liv?\" she suggested and turned a more genuine smile on her little sister.\n\n\"But she promised,\" Olivia whispered almost to herself and if Genesis wasn't so hyper-aware of her he might have missed it. \"She promised we would be... sisters.\" A fat tear rolled down her cheek, and she sagged back into the couch, withdrawing into herself.\n\n\"I'm sure it's just a misunderstanding,\" Genesis assured her but got no response which only made his agitation worse. \"Marcella, call Viv and let Olivia talk to her before all the good work we've done today is undone. I somehow doubt that she will answer a call from me or my brothers,\" he growled angrily. \n\nClearly surprised by the command in his voice, Marcella none-the-less took out her phone and dialled the number. Olivia had acknowledged her for the first time, and now, because of her careless words, all the life that had been in her sister's eyes had seemed to drain away. She needed to get Olivia out of here and away from these crazy people. She knew that now more than ever.\n\nMarcella called Vivienne and was grateful when she answered. She explained what had happened since arriving at the clinic and handed the phone to Olivia, who seemed to look at it as if it might bite her, and shook her head almost imperceptibly.\n\n\"Talk to her or I will put it on speaker so she can talk to you with all of us listening,\" Genesis demanded.\n\n\"You can't order her around, Genesis. She's injured, not stupid! So just back the fuck up, okay? I came here tonight to let you know that I am getting my sister away from your crazy-ass family. As soon as the doctor says she can travel, I am taking her home to Perth,\" Marcella said as she finally let loose her temper and surged to her feet.\n\n\"The hell you are,\" Genesis growled, also coming to his feet. \"Olivia doesn't want to go back there. Do you think for one moment that I haven't done the research into your background? That I don't know why Olivia left in the first place? Do you think for one moment that I would let her go back to a man who had considered her dead and buried and never once called since we found her here, so badly injured and unwell? You can think again if you believe for one moment that I will let you take her anywhere. She stays with me,\" he said with a certainty that showed in his whole-body stance.\n\n\"I will look after her. I will make sure she is looked after properly. That is not your responsibility or your right!\" Marcella raged back at him. No one intimidated her. She might not be big in stature, but she could hold her own against the best and most deceptive legal minds in her hometown. She had no problem going toe-to-toe with Genesis or any of the Zenati clan.\n\n\"Have you ever asked her what she wants? Are you planning on giving her a choice in her own life?\" Genesis challenged. \n\n\"Like you have ever given her a choice from the time you found her. You've used and abused her, just like Remington Royce did, only you did it with the sanction of the Table. Typical fucking Alpha, as long as the little women are cowed and follow your commands all is well. But the moment one talks back, there's all hell to pay. Well, let me tell you, Mister Zenati,\" she crowded into his personal space and poked a finger into his chest. \"You can't cow me, and I intend to get my sister out of here tonight! I have had a gut full of you, your brothers, your bitch of a mother and sister and the whole damn lot of you! Vivienne had the right idea, and while I might not have her money or private jets, I have a hotline to the Battaglia, and trust me, I will have no hesitation about calling them in to free my sister!\"\n\n\"You think you can intimidate me with the Battaglia? Call them. I am sure they will be quite happy to enforce her continued convalescence here, especially as many of Royce's business associates have yet to be caught, and are probably searching for your sister as we speak. You can convince them about how she is safer with you rather than here, surrounded by the new Zenati Table and its watchmen. The next time they try to kill her, she may not survive, but that will be on your head, won't it?\" He narrowed his eyes at her. \"I am guessing by the expression on your face that you forgot that she was the fianc\u00e9e of a Suebi Chieftain and can identify them all.\"\n\n\"Fuck!\" she hissed. \"You mother-fucking bastard. You don't scare me, and you forget I belong to one of the great Tables, too!\"\n\n\"Everything I have done has been to help Olivia and you would compare me to Royce?\" he said in a deathly quiet growl, showing just how dangerous he had become, which started to corrode Marcella's already-shaky bravado as he pointed out the Suebi links to her. \"Ask her, ask your sister if I have ever done anything but help her to recover and get better?\" he challenged. He knew he had used her in harsh ways, but he didn't believe that Olivia would see that as anything like what Royce had done to her. He wasn't ever cruel in his use of her. He knew, without a doubt, that she didn't want to return to Perth. He just hoped that he had done enough in the last twenty-four hours to truly cement his bond with her. \"Ask her if she will feel safe with just you to protect from the big wide world and all the boogie men who will come after her!\"",
        "\"We'll be safe in Perth,\" she spat. \"It's here with you and all Royce's cronies that she's not safe!' Marcella spat.\n\n\"Yeah, I bet Nathanael thought he and Emma were safe in Perth too, or have you forgotten that the Suebi infiltrated the watchmen there too?!\" Genesis fought back.\n\n\"What the fuck is wrong with you?\" Noah roared into the room, coming to where they both stood glowering at each other. \n\n\"Come on, Pixie, let's get you back to bed,\" Gideon said softly, moving to pick the sobbing girl from the couch and carry her back to the bedroom.\n\n\"I'll do that,\" Genesis growled at his brother, his temper still seething. \n\n\"No, you won't. You've both scared her enough. Sort your shit out, then apologise to her. Trust me, you don't want to risk losing her or each other.\" Gideon turned his back on the room and walked away with Olivia in his arms as he left Noah to deal with Marcella and Genesis.\n\n*****\n\nVivienne sat stunned. She could hear the whole fight. It was loud and terrible, and she couldn't imagine how Olivia must be feeling, having to listen to Genesis and Marcella fight over the danger she was in. She gasped when she heard Gideon's voice and the devastation it held as he spoke of losing her. She closed her eyes and took a deep breath. She'd moved away from Lydia and her brothers to take the call from Marcella, knowing that she wouldn't call unless she needed to, but she hadn't expected all of this. What had she done? To start with, she'd broken her promise to be Olivia's friend and help her. She sighed heavily. \n\n\"She promised,\" Olivia said softly. \"She promised to be my friend, no matter what.\" Olivia's voice broke as she caught a sob. \"We were supposed to be brave and...\" she sobbed again. \"She ran away.\"\n\n\"Vivienne?\" Gideon's voice sounded unsure through the phone that Olivia must have still been holding. There was another sob and Vivienne could hear the soothing, shushing sounds that Gideon was making to try and calm the girl. \"She'll be back, Pixie girl. I will go and get her back, I promise, and I never break my promises.\" \n\n\"Everyone does,\" she cried softly, and Vivienne could hear the rustling of the bed covers as the girl moved and then there was silence. Thinking that Gideon must have left the room to deal with the argument between Marcella and Genesis, Vivienne drew a deep breath and tried to decide what to do. Everything had imploded because she left. Olivia could very well regress again, and it would be her fault. She would have hurt one of her patients, except Olivia wasn't her patient, not really. She had hurt her friend badly, and the knowledge killed her.\n\n\"Olivia?\" she asked into the phone, hoping that the young woman still held it in her hand close enough to hear her entreaty to talk. \"Liv, please answer me. Liv? Serena?\" She tried anything to get her to answer. \n\n\"Vivienne?\" Gideon asked incredulously.\n\n\"Yes, can you put me on speaker so I can talk to Olivia please?\" she asked, feeling her belly knot at hearing his voice so clearly now.\n\n\"I'm sorry. I never would have ambushed you with Mama like that. I didn't know,\" he said desperately. \n\n\"I'm sorry, too,\" she said sadly. \"Can you put me on speaker, please? Olivia needs to hear me right now. We can talk later.\" She sounded tired even to herself, and the wine had made her even more aware of just how much Gideon affected her and how much she wanted to believe him.\n\n\"Promise we will talk later,\" he hedged.\n\n\"Yes,\" she sighed and closed her eyes.\n\n\"I will call once all of the drama here settles,\" he said in a slightly disembodied voice, showing that he had done as she asked and put her on speaker.\n\n\"Liv, can you hear me?\" Vivienne asked.\n\n\"She can, but she's not talking,\" Gideon answered for her.\n\n\"I haven't broken my promise. I am your friend. I will always be your friend, and I am trying very hard to be brave. In order to be brave though, I had to go to my happy place to think. Those sexy Zenati men don't give us any time to just think, and I had to get away for a little while. I already miss you and Genesis, Noah and Marcie. I even miss Gideon, a lot. I wish I hadn't had to go so far to get some space to think about everything, and I wish I could have had some time to tell you myself, but I had to go when I did. I am sorry, Liv. Truly, deeply sorry.\"\n\n\"No one will let me go to my happy place, if it still exists,\" Olivia whispered. \"No one will let me move from this room.\"\n\n\"Tell me about your happy place,\" Vivienne asked, grateful to have heard the young woman's voice.\n\n\"My boat. It's the one thing in this world that's mine. That no one can take from me, except they did, and it's impounded somewhere, I think,\" Olivia said, struggling to remember what had happened to it so long ago.\n\n\"Maybe Genesis and his brothers will help you find it. I know that Marcie would, if you asked her. I'll help you find it when I come back to see you,\" she said with a smile, even though she knew Olivia couldn't see it.\n\n\"You'd help me find it?\" Olivia asked.\n\n\"Of course,\" Gideon said. \"If it will make you happy, we will find it for you. There isn't much Genesis wouldn't do to make you happy. You only have to ask. Just like there isn't much I wouldn't do to make sure Vivienne is happy, if only she would ask me. We aren't mind readers, though that skill would sure come in handy lately.\"\n\n\"And you will come back so we can be sisters?\" Olivia asked, knowing that her inner brat was showing again. Damn Genesis and his insistence that she let the heart of Olivia free from the cage she had placed it in. Serena never would have asked the question so boldly in front of Gideon.\n\n\"That depends entirely on Gideon,\" Vivienne said with a similar cheeky tone, feeling the buzz of the wine she had drunk with her siblings making her tease him. \n\n\"I can come and pick you up right now. The jet has been fuelled and ready to go since I found out you left,\" he blurted immediately, cutting off her words. \n\n\"Maybe in the morning, after we've talked,\" she said with a sigh. \"I was serious when I said I need some space to think, Gideon. Not from you though, Liv. You can call me anytime you need a friend. I will always be here for you, no matter what, just like Marcie is. You know she only yelled at Genesis because she wants to make sure that you are safe and happy. Reassure her that you are and she will stop fighting with him and trying to take you back to Perth. Unless you want to go there, but something tells me you don't want to leave Genesis.\"\n\n\"No, I don't,\" Olivia admitted. Last night she had come to terms with the fact that she didn't want him to leave her or to run away from him. It had been a hard truth to swallow, but it was true none-the-less. She trusted him, possibly even loved him to some degree. He made her feel safe and cherished. She liked the control and dominance he exuded, and as she struggled to take a deep breath in the brace, she knew that even though he would dominate her physically, he would never truly want to hurt her in the same way that Remy did and had.\n\n\"You need to make sure Marcie knows that before she tries to force the issue. She will understand if you just talk to her. She's feisty but she's incredibly loyal and trustworthy to those who earn it, and she loves you. She has a lot of guilt about what happened to you. She is just trying to make amends and do a better job of being a sister, now.\"\n\n\"Okay,\" Olivia said softly, uncertain that she and Marcie could ever be the sisters they once were.\n\n\"We can talk again tomorrow. Call me okay?\" Vivienne encouraged.\n\n\"Okay,\" Olivia agreed. \n\n\"Good. Now rest while Gideon goes and calms Genesis down before he says something he regrets to Marcie. Or she says something she regrets. I'm not sure Noah is the right man for the job, considering the way he looks at Marcie lately,\" she giggled. \"Good night, Olivia, sweet dreams.\"\n\n\"I'll talk to you later this evening,\" Gideon said, more to reassure himself than Vivienne, before she ended the call. \n\nYes, Vivienne thought, she would talk to him, and she would go back, but she would go back on her terms, strong and more in charge of her own life. Vivienne looked up and saw Leighton lurking in the doorway. \"How much did you hear?\" she asked.\n\n\"It's not what I heard that's most telling. It's how you look right now that tells what I need to know, even if Rick hadn't felt it in you,\" Leighton said gently. \"If you love him, why are you here?\"\n\n\"Because he's a moron, just like you said,\" she shrugged. \"It was all too much too fast, and let's face it, I'm me, and he's... well, he's amazing in more ways than one.\" She dropped her head, feeling all her insecurities rise to the surface again.\n\n\"It's because of comments like that that Lydia has decided to take matters into her own hands tomorrow. So if you talk with Gideon, he can't come and claim you back until at least tomorrow night, if not the next day,\" he informed her.\n\n\"Oh God, a Lydia plan?\" Vivienne grimaced.\n\n\"You only have yourself to blame for this one,\" he chuckled and sat beside her, draping an arm over her shoulder.\n\n\"She's also started talking about engagement party themes and lamenting that you will have to wed in Darwin. Let her run with it though. She needs the distraction after what happened at the airfield and with Cat going back to Melbourne so soon,\" Leighton advised. \"She's not thrilled about the thought of losing you too.\"\n\n\"The things I do for you,\" she replied as she rolled her eyes.\n\n\"Now tell me what you need. You want me to call Gideon and tell him to back off a bit?\" he asked.\n\n\"No, but as Papa isn't with us anymore, he may ask you about the marriage thing. He's already proposed. I just haven't given him an answer,\" Vivienne admitted.\n\n\"That could be fun. How would you like me to handle it? Protective big brother or the guy who is thankful someone is willing to take my spinster sister off my hands?\" he chuckled.\n\n\"Neither!\" she gasped but smiled at his chuckle. \"Don't tease me. This is hard enough, and eventually, I will have to face that bitchy mother of his again. Regardless of what you or he might say to her, it will still come down to her and me.\"\n\n\"True, but you have a unique opportunity here because you will eventually be the keeper of the grandbabies and will be able to make whatever demands you want, with them as little hostages,\" he laughed.\n\n\"I wouldn't do that!\" Vivienne gasped. \n\n\"I know that and you know that, but she doesn't, and it's a pretty hefty card to play at a pivotal moment,\" he grinned slyly. \"Okay, they are Lydia's words, but if you ever needed a warrior woman in your corner to come out fighting, you couldn't go past Lydia. She had to deal with all our Zias and still came out on top, smelling like roses. She will make sure that you're well equipped to hold your own.\"\n\n\"The question is, will I need to be?\" Vivienne asked as once again her insecurities threatened to overwhelm her.\n\n\"Yes, because, even though his whole family is bat-shit crazy, you love the guy,\" Leighton said seriously and pulled her into a hug. \"And he quite obviously loves you. Not that I blame him.\"\n\n*****\n\n\"That's Marcie's phone. You should go give it to her. I am okay,\" Olivia told Gideon as he looked at the now-silent phone.\n\n\"I'm okay too,\" Gideon smiled. \"Thank you, little Pixie. You made my night so much better than it was.\" He leaned over and kissed her forehead.\n\n\"You love her, don't you?\" Olivia asked.\n\n\"I do. I want Vivienne to come back as soon as possible, and I think you have helped me hurry her up a little,\" Gideon grinned. \"You know Gen loves you, don't you?\" he asked, and when she tilted her head slightly at the question, he smiled. \"He does, and you, little Pixie, will one day soon become my little sister, which means that if you ever needed anything, all you have to do is ask. The question is, do you love him?\"\n\n\"People use the word love so casually now that I don't even know what it means anymore. I mean, I love boysenberry swirl ice cream, but I couldn't have it all the time, or it would just be a regular thing. It's enough that I know I love it, and if I ever feel like ice cream, I would choose that flavour if they had it in stock. Sometimes there's a new flavour though, and I try that. It doesn't mean I've stopped loving Boysenberry swirl. It just doesn't matter. The thing with Genesis is different. I want to be with him and not worry about the other flavours which might, on occasion, seem better. So, it's more than that sort of love. It's that feeling you get when you see another flavour, that might seem new and exciting, but you don't want to eat it because there's a special feeling in your tummy when you know the flavour that's right for you. You know you want to eat that same flavour all the time, and it will never become boring or regular. What's that called?\"\n\n\"Magic,\" he chuckled. \"Would you like to come with me and settle the dispute in the other room. I think Marcella needs to know how you feel about leaving here.\"\n\n\"She won't understand. She never understood me,\" Olivia sighed. \"I don't think I understood me back then.\"\n\n\"Well then, you tell her,\" Gideon encouraged. \"If you want to be here with Gen, you have to tell her, or she will keep fighting to take you where she can look after you herself.\"\n\n\"Okay,\" she agreed sceptically and let him help her from the bed and back into the living room.\n\nOnce back in the living room, they found that Marcella was now fighting with both brothers, looking angry and almost snarling as she refused to back down and get steamrolled by the crazy entity that was the Zenati family.\n\n\"Marcie,\" Olivia said softly, stepping between her and the two brothers, holding out her phone to her sister. \"Thank you for calling Vivienne. I feel much better. Can I talk to you for a minute?\"\n\nMarcella blinked but nodded, unsure what to make of Olivia who had, up until this point, denied that they were sisters at all. She let Olivia lead her to a couch and sit beside her.\n\n\"When I landed here, with a broken boat and little money, I had lost almost everything. I had no friends, no people in the world to care what happened to me.\" She held up her hand to forestall Marcella's denials. \"I know what I had, and I know that I did it to myself. I knew I couldn't reach out to Mama and Papa or you. I had burned that bridge. The boat was badly in need of repairs, and so I got a cheap berth for her and found a job in a sleazy dive, and struggled every day with my miserable existence.\"\n\n\"I'm sorry that you had to feel like that. I would never have turned you away if you had come to me for help.\" Marcella felt the need to say it, even though she understood why Olivia hadn't reached out.\n\n\"Then I lost everything when I saw a man murdered near my boat. Remington saved me. I was grateful to him, and in the beginning, he was so wonderful to me. Then my boat went missing. The marina manager said that detectives had towed it away because blood from the murder had splashed on it and it was evidence. Remy couldn't locate it after that, and then I had nothing and no one, except Remy. I gave up and just let him take control, and all the sense of entitlement and self-worth that Olivia had always had to motivate her got locked away in a box in the back of my mind, so that I could be the good girl, the perfect partner for Remington Royce. Serena Seabrook.\"\n\n\"Genesis said he believes that Remy brainwashed you. Used drugs and other techniques to make you like that,\" Marcella commented rather than ask the question. \"You can recover from that. I promise that I will help you.\"\n\n\"I guess he did. My memories are fairly fuzzy from the first few months that I was with him, but in the end, I just gave in. I let him take the control he wanted, and I did what I was told. The punishments for being naughty were too hard to take in the end, and it was taking longer and longer for my body to heal, which just made him more impatient with me. So, Olivia and everything about her died in that little box in the back of my mind so that Serena could thrive and love Remy obsessively, to the point of being able to predict his needs and commands. Once I gave in completely to who I had become life was good, and I was treated like a princess, but I knew that I lived every minute in a glass cage.\"\n\n\"You took a long time to heal from his punishments?\" Marcie asked.\n\n\"Sometimes a day or two, at worst a week. Unless he broke something that needed a cast,\" she admitted. \"Still, I was alive, and I wouldn't have been if I ever left him or tried to leave.\"\n\n\"I had no idea,\" Marcie gasped.\n\n\"Genesis may not have always seemed to be doing the right thing. He lied to me more than once. He threatened and cajoled and tricked me even, but he has never hurt me or intended to cause me harm. He has never pushed me beyond my limits. Instead, he has been patient in the face of my refusal to face reality and denial of who I truly am. He has done everything possible to make me feel safe and secure here with his family, and I believe that he cares for me. I feel like I know him. You and I may share the same blood, Marcie, but I don't think either of us ever knew each other. Not honestly knew the other well enough to know what the other would want. I won't be going back to Perth with you, so please stop fighting Genesis about it. He is right, it's not safe for me anywhere, yet. I'm only just starting to find my old self again, and that is thanks to Genesis alone, not you or Vivienne or anyone else. Just one person, who wouldn't let me get away with hiding from the world for forever.\" Olivia let out a huge breath as she finally stopped talking.\n\n\"I should never have helped you run away in the first place,\" Marcella cried as she moved suddenly to wrap her arms around her sister. \"I'm just trying to make sure that I look after you properly this time.\" \n\n\"You couldn't have stopped me then, and there is little you can do now. I am old enough to make my own decisions, and I will be staying with Genesis and his family for as long as they allow me to. Besides, you can't tell me Papa would be happy to have me home again or even back in Perth, for that matter.\"\n\n\"No, but Mama would,\" Marcie said softly. \"Not that the old prick would let her see you, but we would find a way.\"\n\n\"We can still find a way, even if I stay here,\" Olivia said softly. \"Go home, Marcie. I don't need saving, not from Genesis.\"\n\n\"Go home?\" Marcie asked. \"You don't want me to stay here in Darwin and help you find your boat and get all your belongings from the mansion once the police are done with it?\"\n\n\"Gideon has already offered to help me try and find my boat,\" she smiled softly. \"As for the rest, I don't care about anything Remy gave me,\" she sighed. \"It always came with so many conditions and expectations.\"\n\n\"I would like to stay and be your sister, get to know you again,\" Marcie said with tears in her eyes. \n\n\"That will take some getting used to, but Vivienne suggested I give you a chance,\" Olivia shrugged.\n\n\"God, I love that woman,\" Marcie grinned. \"I promise that I will get a grip on my temper if you continue to be Olivia and not Serena,\" she bargained.\n\n\"I have no choice about that anymore. Genesis banished Serena last night,\" Olivia smiled softly. \"Unfortunately, he has no idea just how bratty Olivia really is, and I think he will regret doing that.\"\n\n\"You always were pretty bratty,\" Marcie laughed in agreement. \"I won't tell him and ruin the surprise though,\" she whispered conspiratorially. \"He deserves all the brattiness he gets.\"\n\n\"Thanks, it's late. Go home Marcie. Gideon has an important call to make and he won't until he knows things here are settled,\" Olivia prompted again.\n\n\"Okay, I'll pop in to see you tomorrow sometime,\" Marcie said, hating that Olivia had not once embraced her back and worried about why she remained so distant if she was getting her memory back. Olivia nodded but said nothing, and looked up as Genesis approached her and scooped her into his arms.",
        "\"Tired, little one?\" he asked. Olivia nodded and once again said nothing. She felt like she had talked more in the last twenty-four hours than she had in the last year. \"Okay, let's get you out of this brace so that you can sleep while I talk to my brothers about what happened tonight.\" He said disappointedly. He had plans for their evening together, but as always, family came first.\n\n\"Genesis, I... I mean do you think... May I sleep in your bed again, please?\" she blurted as he carried her to the room with the hospital bed where he had put in her the brace. She watched as a wide smile split his face and he changed direction, carrying her toward his own bed, pleased that she had been the one to ask. Despite wanting control over her every action and decision, he was finding these small moments of pleasure that she gave him by showing her acceptance of his place in her life truly thrilling, and he considered making his brothers wait while he took her hard and fast before letting her sleep.\n\n\"Gen,\" Gideon called. \"I need to make a call, and Noah is going to follow Marcella home to make sure she's safe. We'll meet back here in an hour or so, okay.\"\n\n\"Great but then I want some goddamn answers,\" he growled, still feeling the rage of Marcella's threats to take his girl from him. He stepped into the bedroom and lowered his head to kiss the woman in his arms. She was his. She had just announced it to his brothers and her sister, and the idea gave him more pleasure than he could have thought possible. Placing her on her feet he stepped back. \"Now, where were we before we were rudely interrupted?\" he grinned and loosened the top button of his shirt.\n\n\"I was about to do that for you,\" Olivia said softly and stepped forward to press against him, placing her hands on his chest and running them down to the next button on his shirt. She quickly undid the buttons and pushed the shirt over his shoulders, smiling as he helped her by pulling the tails from his pants. She ran her fingers over his chest lightly, teasingly, and smiled again as he groaned. It was too much for him then, and he wrapped his arms around her to cup her ass in both hands and pull her against him.\n\nHis body wrapped eagerly around her petite frame, his big hands caressing her cutely rounded and dimpled ass cheeks. She let her robe drop, leaving only the nightgown between her body and his hands. She had already begun touching his rapid swelling cock through his pants as she looked up at him with desire in her eyes. Reaching up to bring his head down to hers, she licked his lips and kissed him deeply as she wrapped her arms around him to claw at his back, urging him to touch her and feel her in the same way. They moved back toward the bed, and she lay back as he lowered her nightgown from her shoulders and kissed her slender neck, tracing a rapid line towards her pert breasts. He sucked, tugging at the erect nipples with his teeth and sucking the hard, pink nubs between his lips as if he was starving for her. \n\nOlivia caressed his hair and moaned, encouraging his insistent suckling. He kissed his way past her breasts. Her skin was so smooth and warm as his mouth finally descended from her breast, over the brace to the soft skin of her pelvis above her mound. He placed his thumb and palm between her legs to feel the dampness gathering there. As he kissed his way towards the damp patch of panty, he recognised the familiar scent that filled his senses and thrilled his body. The first taste of her through the diaphanous panties reaffirmed that she was the most intoxicating woman he had ever known, and he wanted her, all of her. Her cute whimpers and moans as well as her cries of pleasure and pain. \n\nGenesis's lips touched her pussy sensuously, and he pulled the panties from her, exposing her to his need. Bending, he pressed his mouth against her until he caught her clit and sucked it, letting his teeth scrap over the sensitive nub. Olivia arched her back and drew his head tightly against her, making him groan in pleasure. Every pore in his body tingled as if an electrical charge ran through him. His left hand moved to cup her tiny ass while the other massaged her labia, pressing further inside so that he could finger her wetness. He allowed himself the pleasure of her whimper and thrust two fingers inside her tight pussy, revelling in her tightness. He moved his fingers inside her so that he could find her most sensitive of spots as she writhed in pleasure and whimpered until her whole body responded to his hands and mouth, triggering a long-awaited orgasm that left her gasping and shivering with pleasure. \n\nOlivia was overcome with need and desire. She shivered as his fingers entered her, lancing into her tight pussy, and he returned to lap and suck her clit. It seemed like an eternity before he allowed her to come down from the rolling high that assailed her body for a second time. She lay there panting, as he moved to stand beside the bed and gaze down at her expectantly. She moved toward him as if drawn by an invisible thread, her hands reaching out to finish undressing him. His belt and the button then zip of his pants fell away easily, and she reached out to rid him of the barrier between his flesh and her own. \n\nShe lowered her head further below his hard cock, letting it trail along her cheek, to kiss his balls and suck them into her sweet lips. His deep groan poured fuel on the flames of her need, and lifting her head slightly, she trailed her lips and tongue over every millimetre of skin on the rock-hard erection she held. She caressed his cock tenderly, feeling the insistent throbs, then ran her tongue up and down so lightly that she barely touched him. She listened to him groan and knew she was pushing her luck with his control again. When she finally took him into her mouth, she sucked as much of him as deeply as she could before bobbing her head up and down his shaft until she had him all. \n\nHis fingers twined into her hair, and she could feel him throb within her mouth as he began to take control of her actions. Her hair pulled and tightened between his fingers, making her elicit a soft moan around his cock, pushing out an echoing one from his throat. She felt the insistent throbs become stronger and she tasted pre-cum across her tongue as she sucked him deeply. She swallowed and took a quick breath, gagging as he pumped in and out of her mouth and throat. \n\n\"God, I want to fuck you so badly right now,\" he growled and pushed her hard enough to topple her back onto the bed, then quickly grasped her flailing legs, pulling her ankles to his shoulders as he lunged forward. He slowly sank deep into the hot velvet warmth of her pussy and groaned loudly in pure pleasure.\n\nHer sweet pixie face contorted in pleasure as he pushed into her. Her tender, tight pussy stretched to take him inside her, and she hissed as he thrust deeper until he was fully lodged within her, groaning deeply. He kissed her tenderly, and she grabbed his face, deepening the kiss by lancing her tongue into his mouth as he thrust his cock inside her. He pushed inside her again and pressed until every millimetre of his throbbing flesh was inside her and his balls rested against her flesh. They held still as they kissed deeply again, one of his hands pawing at her delicious breasts, toying with the nipples, and the other cupping her sweet little ass and pushing her up tightly against his body.\n\nHe loved the unbelievable tightness of this amazingly sexy woman. Each time his cock slid deep into her, she shivered and her pussy, which at first relaxed to take his him into her, contracted around him like a vice, making him groan deeply and savour the excruciating moment. He continued the slow delicious process of pulling out and thrusting back in hard and deep with growing speed and urgency as he built towards his climax with her.\n\n\"Fuck, yes,\" he growled as she cried out below him, her body arching, spasming and dragging at him. Genesis slammed his cock into her as she requested in her garbled cries, his balls slapping her as he thrust deep. She gyrated against his thrusts, and her pussy's contractions seemed to match his throbs. \n\nShivers and tingles passed through Olivia, as waves of pleasure seemed to envelop her whole body and translate into floods of wetness, incoherent cries and contractions that clamped his cock like a vice, almost sucking him into her with each stroke. She came hard, screaming and shuddering, as he continued slamming into her.\n\n\"Oh fuck!\" Genesis drew out the word as he released his own climax into her, growling loudly and ferociously in his pleasure. He lay on the bed panting beside her, reaching out to pull her to him, curling her into his side.\n\nShe lay half on top of him and kissed him, her fingernail once more teasing the nape of his neck and reigniting his passion for her. His eyes drifted open and shut. He wanted nothing more than to stay here for the remainder of the night and make love to her, between bouts of unconsciousness brought on by the pleasure of knowing she was finally his. Utterly and completely his, she would fight to stay with him herself if anyone ever tried to wrench them apart again.\n\nHe knew that he had to speak to his brothers though, so he slowly unlaced the brace and gently eased it from her body, before going to the bathroom for a warm towel to clean her up. She smiled lazily as he took care of her and offered her water. He lay back down beside her until she fell asleep and only then did he get up and pull his clothes on to go and meet with his brothers.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "non-con",
        "noncon"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-twelve-zenati-pt-08"
}