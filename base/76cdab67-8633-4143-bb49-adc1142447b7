{
    "title": "Hard Landing Ch. 07",
    "pages": [
        "*** This series was awarded Best Lesbian Story, as well as Most Literary/Genre Transcending Story in the 2019 Reader's Choice Awards. Thank you to all who voted. ***\n\nWelcome to Chapter Seven. If you plan on reading this, but you haven't read Chapters One through Six then we need to have a talk, because I'm getting worried about you. Do you need a hug, friend? Or maybe a cup of hot cocoa?\n\nAs usual, I've updated the Spotify playlist for the band with the new songs from this chapter. You can find the link on the CONTACT tab of my author page. Thank you if you've given me a like on Spotify; nothing thrills me more than hearing readers tell me they listen to my Set List.\n\nA big shout out to my intrepid editor, ThisNameIsntTakenYet, who makes me look like a competent speller and grammarian.\n\nThank you for coming back, and enjoy.\n\n~~ Walter Reed National Military Medical Center, Bethesda Maryland, May ~~\n\nJO\n\n\"I'll see you tonight for dinner, okay baby?\" Blue asked as she pulled up to the main entrance to Reed to drop off Jo. They had woken up early that morning. Jo had wanted to retrace their steps from their frosty morning in January, walking from Jill's apartment to her favorite coffee shop then through the National Zoo.\n\nAfter they kissed goodbye, Jo went inside the hospital to start her daily routine. She had her usual two hours of PT in the morning with Tony, and another therapy session with Dr. Allen after lunch. She'd finally gotten comfortable enough with him that she could do them without Blue at her side.\n\nAfter her therapy session, she met Liz in the gym and they threw the weights around for a couple of hours. She and Liz had coffee after, as had become their habit, then Jo walked back to her suite. As she walked in the room, she froze, rooted to a spot just inside the door.\n\nBlue was sitting cross-legged on the couch with Jo's guitar, Belle, across her lap, softly picking at the strings of the white acoustic Yamaha.\n\n\"Uh, hey Blue... Where did you get that?\"\n\n\"I drove out to Front Royal after I dropped you off this morning. Your dad says 'hi', by the way. He said he'll be up to see us again this Sunday.\"\n\n\"O-o-o-o-kay. But what's\u2014\"\n\n\"This is the beginning of part one of my Jo plan. Let's get you showered up, you don't want to be holding this sweet baby while you're all sweaty and gross.\"\n\nAfter she was showered and changed into track pants and an Army t-shirt, she met Blue back into the living area.\n\n\"Okay, part one of my three-part plan is that I want to get you playing again. I think you should make it a goal to go on the beach tour with the Rotors again this summer. So, sit down and let's try this out.\"\n\n\"Can we go eat first? I skipped lunch.\"\n\n\"Okay, a quick dinner and then we'll get started.\" They left Belle resting on the couch and headed out the door for the cafeteria.\n\nThey were a few steps down the hall when Jo paused. \"Hey, I forgot my phone. Go ahead and see if Liz has a table. I'll be right behind you, okay?\"\n\n\"Sure thing, baby.\" Blue gave her a quick kiss and headed on down the hall.\n\nJo went back to their room and found her phone on the side table. She picked it up, turned around. The sight of the white guitar laying on the couch stopped her in her tracks again. She stood looking at it for a long time, then turned back to grab her wallet. After she came out of the elevator on the ground floor, she glanced down the hallway towards the cafeteria, then started off the other way toward the front of the hospital and the entrance to the Metro.\n\n\"Where the fuck are you going, Collins?\"\n\nShe stood on the platform at Metro Center. She'd gotten on the first Red Line train that had come into the Medical Center Station. It had taken two stops for her to realize she was headed towards Shady Grove and the end of the line, so she had gotten off at Twinbrook and reversed directions. Now she was at Metro Center on the Orange and Blue line platform.\n\n\"I don't know Little, I just\u2014\"\n\n\"Are you talking to me?\" the man standing next to her snapped.\n\n\"No, sorry I\u2014\" He turned and walked away. Jo shook her head. Make sure you use your inside voice when talking to Little, dumbass, she thought.\n\n\"Are you running away from a fucking guitar? Or are you running from Blue? What the fuck's going on, what are we doing?\"\n\nI don't know. I just had to go, okay? Leave me alone, she thought, as an Orange Line train pulled into the station.\n\nIt was near the end of rush hour, so the car wasn't too full and she managed to find a seat by herself. When the train came above ground after Ballston she got a signal again, and her phone started lighting up with texts and voicemails. She'd read the first few, started to respond, but couldn't think of anything to say. She set her phone to do not disturb and put it back in her pocket.\n\nIn just under an hour she reached the end of the line in Vienna, Virginia. She filed off the train with the rest of the remaining passengers, then sat down on one of the cement benches as everyone else left the station, leaving her sitting alone on the platform as the late Spring sun dipped towards the horizon.\n\n\"Now what, Collins?\"\n\nI don't know. Blue managed to find a Lyft from Front Royal to D.C. Maybe I could find one who would take me out there.\n\n\"And do what? Do you think you're going to get away from whatever you're running from at the farm?\"\n\nNo... I don't know. I just want to go home.\n\n\"You know, just because you're in a hospital doesn't mean you're out of the Army. Technically you're AWOL right now.\"\n\nWhat are they going to do, Little? Kick me out?\n\n\"They could take your retirement away, you dumb fuck. And you think you'd ever get a real flying job with a dishonorable discharge?\"\n\n\"Jesus, Little,\" she sighed out loud. I don't even know if they'll ever let me fly again anyway.\n\nShe sat on the bench, watching a dozen trains come and go, then finally sighed and got up and boarded one headed back towards D.C. Forty-five minutes later, she impulsively rode past Metro Center and got off at Smithsonian Station. As she came up the escalator and looked up at the Washington Monument, the white marble spire was brilliantly lit up, towering over the National Mall. She looked right, toward the Capitol, then turned and started walking the other direction.\n\nWhen she got to the Vietnam Memorial, it was ghostly and somber in contrast to the Washington Monument. The lights set in the sidewalk dimly illuminated the black marble wall and the names carved into the face of it, listing all fifty-eight thousand soldiers, sailors, marines, airmen and coasties who died in that war. She stood in front of it, staring ahead, the letters unseen by her eyes.\n\n\"So many names...\" Little sounded subdued, for once.\n\n\"I wonder when they'll build the one for the shit show in Afghanistan,\" Jo muttered to herself.\n\n\"When they do, we'll come to pay our respects to Jackson and Nguyen.\"\n\nShe felt a tear roll down her face. \"Eric,\" she whispered.\n\n\"Gets ya right in the gut, doesn't it, soldier?\" The gruff voice startled her. She turned and saw an older, bearded man with a cane standing a few feet away, wearing a Vietnam Veteran hat.\n\n\"How'd you know I'm a soldier?\" she asked, rubbing the tear off her cheek with the back of her fist.\n\n\"Once a soldier, always a soldier, and it takes one to know one,\" he said, then chuckled. \"Also, you're wearing an Army shirt. And then there's the foot.\" He gestured downward.\n\nJo looked down and saw her track pants' cuff had gotten caught up in the joint of her foot, exposing the metal and composite ankle. She leaned down and shook her pants free to cover her shoe.\n\nHe smiled at her. \"Nothing to be ashamed of, soldier.\" He knocked his right calf with his cane and it made a hollow, clunking sound. \"Lost mine at Khe Sanh. How about you?\"\n\n\"Kandahar.\"\n\n\"That's tough. Your war is as big a mess as mine was.\" He looked at the wall, searching. \"There you are, brother.\" He leaned over and traced his fingers over the name Leon Fentress.\n\n\"He was your brother?\" Jo asked.\n\n\"Not in blood. He was my best friend. The same land mine that took my leg killed him. I come to see him here every now and then.\"\n\n\"I'm sorry,\" said Jo.\n\n\"I've made my peace with it.\"\n\n\"How long did that take?\" she asked.\n\n\"There's the question, eh? Longer than it might've. I call those my 'lost years'.\"\n\nThere was a long silence. Jo sighed. \"Years, huh?\"\n\n\"Well, back then no one knew from PTSD. They just called it 'shell shock'. The treatment was you got discharged, and then you crawled into a bottle. Or worse. It was worse in my case.\"\n\n\"So, what finally brought you back?\"\n\n\"My kid. He fished me out of the gutter and moved me in with him and his wife and my grandkids. Took me a few years to let him, though. Well... more than a few. But I'm sober twelve years now.\"\n\nHe reached out a hand and Jo shook it.\n\n\"Have a good night, soldier. And take that lesson with you. Don't wait to take whatever help you get offered.\" He shuffled off into the darkness.\n\n\"That was pretty on the nose,\" Little said.\n\n\"Whatever.\"\n\nShe headed towards the Lincoln Memorial. It must have been after ten o'clock by now, and there were few people about, it being a weeknight. She walked inside the monument, looking up the giant, seated sculpture of Lincoln.\n\nYou had a hell of a war to deal with too, didn't you Abe? she thought.\n\n\"You know, he saved the Union. You could at least call him Mr. President.\"\n\nShe rolled her eyes, then walked outside and sat on the memorial's steps, leaning back against one of the massive marble columns, looking east towards the sight of the Washington Monument again. Her stump hurt. She'd been walking way more than she was used to. She wasn't sure what time it was now, but the sliver of the moon was just coming up over the Capitol building at the other end of the Mall.\n\nShe reluctantly pulled out her phone. Twenty-seven texts from Blue. A bunch from Steve and dad. Even a few from Liz. She sent a text to Blue, the a quick, \"I'm okay, call you tomorrow\" message to Steve and Dad then put her phone away and watched the moon rise.\n\nThe moon was well up in the sky when Blue climbed up the steps and sat down next to her. She waited for Blue to say something, but she was apparently determined to make Jo speak first. Finally, when she couldn't stand the silence any longer, she spoke up.\n\n\"I'm sorry... I... I'm sorry I just left.\"\n\n\"Are you okay?\" Blue asked.\n\n\"Fuck if I know.\"\n\n\"What happened?\"\n\n\"I saw that guitar and I just...\" She didn't want to go on.\n\n\"Jo, I need you to explain to me what happened tonight.\"\n\n\"I don't remember how to play, Blue! Okay?! I can't remember any chords, I can't remember any of the notes! I can't remember how any song goes or even the name of a single song I used to be able to play! I couldn't tell you right now which string is 'D' or any other fucking note! Music and flying were all I had! What if I can never get medical clearance, and can never fly again? What if I can never play again? What the fuck am I going to do with my life?!\"\n\nShe stopped when she realized the few tourists walking around had started looking at them. She continued in a softer voice, resting her elbows on her knees and rubbing her hands together.\n\n\"I know how to do two things, fly and play. I've gone to war six times now. Five times to Afghanistan. You know this war is old enough to vote? I wasn't old enough to drive when it started. And so many, so many people have come back, but not all the way back. Some of them never make it all the way back and they just decide to step out. I know of so many guys who've made it through combat tours, some of 'em without a scratch, then they've come home and killed themselves.\"\n\n\"Were you thinking of hurting yourself tonight?\" Blue's voice trembled as she asked.\n\n\"No. No I wasn't. But I was thinking about something like that starting to happen someday. I was worried if I picked up Belle and nothing happened... I saw that guitar and thought 'This is it. This could be the moment I start to find out I've lost everything I used to care about.' And then I ran.\"\n\nSilence stretched out between them.\n\nBlue started softly rubbing Jo's back with one hand. \"Jo, I can't promise you that you'll be able to play. And I can't promise you that you'll be able to fly. All I can promise you is I'll be here for you whatever happens. And if you can't fly or you can't play, I'll help you figure out something else to do, okay?\"\n\n\"Okay,\" Jo said hoarsely. Blue leaned her head against Jo's and they watched the moon together, until Blue suddenly sat up and punched her hard in the arm.\n\n\"Ow! What the hell, Blue?\"\n\n\"Jocelyn Collins! You'd better promise me that if you ever need space or need to flake out and run away again you'll tell me first or at least answer your freaking texts so I know you're okay!\" She kept punching Jo's arm while she yelled at her.\n\n\"Ow, okay! I'll try! Blue, stop! I'm sorry!\"\n\n\"Okay!\" Blue stood up. \"Okay then, it's way after midnight, and it's time to go home.\" She offered her hand, which Jo accepted. She winced as she let Blue pull her to her feet.\n\n\"What's wrong?\"\n\n\"I've walked more than I'm used to, that's all.\"\n\nBlue looked down and gasped. \"Jo! Your shoe has blood all over it!\"\n\n\"What?\" She looked down. \"Well, shit.\" There was a big blood stain on her cross-trainer.\n\nBlue insisted that Jo lean on her shoulder all the way to her car. Once there, she took off her foot and it was quickly evident what the problem was. She'd rubbed a sore on the bottom of her stump and it had bled, covering her artificial leg and her shoe.\n\n\"Fuck. Tony's going to kill me.\"\n\nTony didn't kill her, but the next morning he took her foot away.\n\n\"C'mon man, really?\" She was sitting in one of the hospital wheelchairs while Tony held her prosthetic up so he could inspect it.\n\n\"Really Jo, this is gone for a week. Minimum. You can't walk on this until that sore heals up.\"\n\n\"Tony!\"\n\n\"Jo, I told you that you could fuck up and hurt yourself and set yourself back if you overdid it, and that's just what you did. You can't walk on your stump until that sore heals or you risk having it fester and get infected and maybe having to go back under the knife to take off more skin. So, until that heals, you're in the chair or on crutches.\"\n\n\"What the hell am I supposed to do in the meantime?\" She was clearly exasperated, although whether that was at Tony or herself was an open question.\n\n\"We can work on your flexibility. You can get in the pool and do some water therapy or just swim. Swimming's good for you. Other than that, go find a good book and stay on your backside for a week. If you want to keep doing your upper body workouts with Liz, that's fine but do 'em from a wheelchair. Stay off that leg. You got me, Jo?\"\n\nJo mumbled something.\n\n\"I said you got me, Chief?\"\n\n\"Yes! Sorry, Tony. Yes, I got you.\"\n\nShe wheeled her way back to her suite, with all the enthusiasm of an inmate returning to solitary confinement. Blue was working on her MacBook at their small kitchen table. She looked up when Jo rolled in, and noticed the lack of her prosthetic.\n\n\"No foot for a while?\"\n\n\"At least a week.\"\n\n\"Okay. Well, they know best, I guess... What do you want to do now?\" she asked. Jo could tell that Blue was trying her hardest not to look over to the couch where Belle sat, propped up in the corner against the cushions.\n\n\"Man up, Collins,\" Little encouraged her.\n\nJo squared her shoulders, then huffed out a breath. An especially loud one this time.\n\nShe rolled over, hopped out of her wheelchair and sat down on the couch. Then she picked up Belle, and set the guitar in her lap, then she sat staring into space.\n\nBlue came over and sat down next to her. \"Do you want to try and play something?\" she asked.\n\n\"I'm trying,\" Jo said.\n\n\"I think you have to put your hands on the guitar to try, Jo.\"\n\n\"No, I'm trying to think of a song, any song that I used to be able to play and my mind's just blank.\"\n\n\"Well, let's go at it from another angle then. Remember in Germany when I was rubbing your foot and you didn't remember that I was good at massage, but after I mentioned our night in Ocean City, it all rushed back to you?\"\n\n\"Yeah?\"\n\n\"So, let's try this. After the beach jam, I was buzzed and forgot about you not singing and opened my big mouth, then Jack told me about the thing with Amy. Do you remember that? You kicked Jack off his stool and ran away up the beach to Delaware, and I followed you?\"\n\n\"Yeah. I mean, no, I didn't until just now when you said it.\"\n\n\"When I finally caught up to you, I came up behind you while you were standing on the beach playing a song, and when you finished I said 'that's lovely' and you spun around because you hadn't noticed I was there.\"\n\n\"Yeah...\" Jo's eyes had taken on a faraway look.\n\n\"You told me later that song was called Stories Of The Painted Desert. Do you remember that song?\"\n\nJo's face went completely blank, as her eyes focused a thousand yards away. She brought her left hand up to the neck of the guitar and as she plucked at the strings, the wistful notes of the song started filling the room.\n\nWhen she had played this song the night of the beach jam, she'd just started learning it. She'd worked on it some more on the old beat-up acoustic in the ready room at the airbase in Afghanistan after she deployed, but had never gotten it quite there.\n\nShe nailed it this time. Not just every note, but also the emotion, the feeling that the artist had put into it. Russ Freeman was one of her favorite jazz guitarists. She's seen him live twice, but she hadn't thought she'd ever be able to match his technical skills. But this wasn't one of his hardest songs, and she was in the groove.\n\nShe wasn't even sure how she was doing it, the melody just came into her head and her fingers translated it to the strings. She felt certain if she stopped to think about what she was doing she'd suddenly be unable to play again, so she just closed her eyes and focused on enjoying the experience, rocking back and forth on the couch as she played.\n\nAs the song trailed away, she looked over at Blue, and broke into a huge grin.\n\n\"Holy shit, Blue,\" she whispered. She reached out and grabbed Blue around the neck, sandwiching Belle between their fierce hug. The sound of the strings squashed between them echoed the moment Blue had tackled her at the bar in January. \"It worked,\" she whispered. She grabbed Blue's face with both hands and kissed her hard. Then she threw her own head back and her fists in the air and joyfully yelled \"It worked!\" just as there was a knock at the door.\n\nBlue got up and opened the door to find Liz sitting there in her wheelchair.\n\n\"Hey, Jill. Jo! You're playing again!\"\n\nJill stood aside and motioned for Liz to come in. She rolled up to Jo and said, \"I just wanted to check on you. I was pretty freaked out when you disappeared yesterday. I was with Jill most of the evening while she tried to figure out where you went.\"\n\n\"Sorry Liz, I just... I just needed a little space I wasn't going to get here.\" She looked over at Blue. \"But I've been set straight. Hopefully I won't do that again.\"\n\n\"Sorry about the eavesdropping.\" She tipped her head towards the hallway. \"I rolled up outside your door while you were playing, and I waited to knock because I didn't want to interrupt. I'm sorry I couldn't hear you better though, that sounded really great. I've only ever seen you play rock and roll, I didn't know you were so versatile!\"",
        "\"Thanks Liz, I just had a bit of a breakthrough. Blue, I want to do another one! Help me out, tell me another song I used to play!\"\n\n\"Uh, something acoustic or anything?\"\n\n\"Anything, whatever. Just give me a song!\"\n\n\"Okay... I mean one of my favorites is obviously Just A Girl.\"\n\nJo looked up at the ceiling. \"Just A Girl. What is that, when did I play it? Tell me about when you heard me play it.\"\n\n\"It's the No Doubt song from the Captain Marvel movie. The first time I heard you play it was after the set break during the kick-off show for last year's beach tour. We were at the bar in Arlington, the night we first met. You and I had just been introduced and we spent the break talking. I said I liked the songs from Captain Marvel, and you said you'd try and get another one in for me in the second set.\" Jo's eyes had gone out of focus again, and she was staring into space. Blue continued, \"When you guys went back on stage, you didn't even look at the rest of the band, you just started playing the intro, and\u2014\" She was interrupted as Jo started to play the staccato intro.\n\nIt didn't have quite the impact that it had when Jo had been on stage, with her effects pedals, and the amps blasting. But it was unmistakably the No Doubt tune.\n\nShe played into the chorus as Blue and Liz grinned at each other, then they started to sing along with Jo as she played.\n\n'Cause I'm just a girl, little ol' me, Well don't let me out of your sight.\n\nOh, I'm just a girl, all pretty and petite, so don't let me have any rights.\n\nO-o-o-o-o-o-h, I've had it up to here!\n\nThat was how they spent the next half hour. Blue would tell Jo about the first time she'd heard her play something. Jo's eyes would go out of focus as the memories flooded back in, then she'd play the song, and Blue and Liz would sing along.\n\nJo held up her fingers which were red and raw. \"Clearly I've lost my callouses. I'll have to work on that.\" She started rubbing her wrist. \"This feel pretty weak too. Too much time in a cast.\"\n\n\"But you're playing! This is great, baby!\" Jill seemed more thrilled than Jo was.\n\n\"I guess. I still can't remember any of the chords or notes. I think I need to get a guitar lesson book and start learning that stuff over.\"\n\n\"Should we go eat some lunch? I've got nothing until group tonight,\" Liz said.\n\n\"Sure,\" Blue said, \"but let's keep it light. I think we should go swimming this afternoon.\"\n\n\"Really? I mean, Tony did say something about water therapy.\" Jo hadn't used the aquatic center at Reed, but she'd seen it during her orientation tour.\n\n\"Sure. I know you've been anxious to start running, but it'll still be awhile. I think we should start doing laps together,\" Blue said.\n\n\"Not to be all third-wheel-y, but do you mind if I come too? Tony said I might want to try swimming,\" Liz said.\n\n\"Sure! We'll have a girl's day at the pool!\" Blue smiled at her.\n\nIt became an instant routine for them. Four afternoons a week, Jo and Liz hit the gym. On gym days, Blue would leave in the morning to work at her condo and do all the personal errands needed to keep life moving, then come back to Reed after Jo's evening group therapy sessions.\n\nThe other three days of the week, the three of them hit the pool in the afternoon. Blue got Jo a small paddle fin for her right foot to make up for only having one to kick with. Once in the water, Jo quickly grew to love swimming laps with Blue. They would easily stroke up and down the lane side-by-side, doing slow, steady laps, with an occasional sprint. Jo found being in the pool was a chance to feel almost normal. She barely noticed her missing foot once in the water.\n\nLiz swam in the lane next to them. She had a flotation device the staff strapped around her to help her keep her lower body from sinking, and she'd slowly swim up and down the lane using just her arms.\n\nAfterwards they'd sit in the whirlpool, talking until they decided they were getting too wrinkled, then go to dinner together. After eating they'd go back to Jo and Blue's suite where Blue would tell Jo about the time she'd heard her play a song and unfailingly Jo would stare off into space as Blue described hearing her play it, then the notes would come into her mind and through her fingers, while Blue and Liz sang along.\n\nAfter nine days, the medical staff decided Jo's sore had healed enough and she got her foot back.\n\nShe was a little wobbly at first, having not walked on it for over a week, but Tony quickly had her back up to speed after a couple of days.\n\n\"Probably three, four more weeks and we'll have you trying out your running prosthetic. For short distances! And you'll discharge a few weeks after that, and just come back for PT appointments and therapy sessions.\"\n\nJo was doing squats, carefully holding the rails like Tony had instructed.\n\n\"I'm really wanting to get out of here by mid-July,\" Jo said. Blue had convinced her that going on the beach tour with the band was something to strive for. Inside, Jo still a little terrified about the idea of getting on stage again, but she felt better about it than she had. Since the guitar had started to come back to her, the idea didn't seem impossible. Just scary.\n\n\"That's probably the time-table we're looking at. You're more dedicated than most of my patients here. As long as you listen and don't overdo it again.\"\n\n\"Okay, dad.\"\n\nTony laughed at her. \"We're going to go down to five days a week too. Diane worked it out with Jill so you guys can start spending weekends away from here.\"\n\nJo lost her balance and had to clutch the rails. \"What? When did that happen?\"\n\n\"Oh, she didn't tell you, did she?\" He laughed. \"I'm not sure I've ever seen a significant other so actively involved in managing a service member's recovery as your girl. It's good to see.\"\n\n\"I guess so,\" Jo grumbled. \"I wish she kept me in the loop, though.\"\n\nTony got serious. \"Don't take that for granted. She's a valuable part of your recovery. Physical and otherwise.\"\n\n\"I'm not taking her for granted, Tony! I just don't like surprises!\" Jo snapped. She was getting irritated at how Blue kept dropping \"surprise\" things to work on her self-confidence.\n\n\"Whoa, settle down Jo. She's trying to help you. If you're having a problem with how she's going about it, just talk to her.\"\n\nJo took a deep breath. \"You're right, Tony. I'm just... I don't like being handled.\"\n\nTony laughed at her. \"You know, I think maybe the Army might not be a good fit for you! Perhaps you should reconsider enlisting.\"\n\nJo laughed ruefully. \"You might have something there.\"\n\nWhen she walked back into her room, Blue was pecking away at her MacBook. She looked up and smiled. \"Hey baby! How was PT?\"\n\n\"Fine.\" Jo paused, then squared her shoulders and huffed out a breath.\n\n\"Uh, oh,\" said Blue. \"What's wrong?\"\n\n\"Did you arrange for us to get out of here on the weekends?\"\n\n\"Shoot, that was supposed to be a surprise. Who spilled the beans? Tony?\"\n\n\"It doesn't matter. You did, right?\" Jo seemed not entirely pleased with the subject.\n\n\"Uh, yeah I did. Do you not want to leave the hospital?\"\n\nJo sat down on the couch and started taking off her foot. \"No, it's fine. Christ this aches. I just... I appreciate you wanting to be 'drill sergeant Blue' to try to beat my self-confidence back into me, but...\"\n\n\"But it isn't working for you?\" Blue got up from the table and sat next to Jo on the couch, helping her finish undoing the straps on her prosthetic, then pulled Jo's stump onto her lap and started massaging her calf muscles.\n\n\"I'm not an eighteen-year-old recruit anymore, and I've gotten bad at being handled. I know what you're trying to do, but the way you sprung Belle on me... And then when Tony offhandedly mentioned I was going to be going down to five days a week because you arranged it. It just... hit me wrong.\"\n\n\"Okay, I get that. And I'm sorry about the Belle thing. I mean I'm glad you're playing again, but clearly springing that on you unannounced wasn't good for you. You know, since you ran away from me.\"\n\n\"Sorry about that.\"\n\n\"Stop apologizing, you've been saying that for two weeks now. Just don't do it again.\" Blue smiled. \"But now that you know, yes, I was going to get us out of here this weekend. Is that okay?\"\n\n\"Where are we going?\"\n\n\"I was going to take us out to the farm. Henry is out of town for business until Sunday, so we'll have the whole place to ourselves. We can stay at your house.\"\n\n\"My house...\" Jo smiled wistfully. \"I'd like that, Blue.\"\n\n\"Good! I'll try not to ambush you with stuff anymore, but I'm still going to be trying to get you to do stuff to get you back into Jo-shape, okay?\"\n\n\"Okay.\"\n\n\"There is one surprise I am going to keep from you. Just one, but it's a big one.\"\n\n\"What is it?\"\n\nBlue looked at her, trying not to laugh.\n\n\"Right. A surprise.\"\n\n\"You'll find out Sunday, I promise, okay?\"\n\nJo sighed. \"I hope it's okay. I mean, I'll try to be okay with it.\"\n\n\"That's all I can ask, Jo.\"\n\n~~ Front Royal, Virginia ~~\n\nJILL\n\nOur trip didn't get off to a good start. We'd left Reed around two o'clock to beat the Friday rush hour exodus from D.C. I'd gone through a Starbucks drive through to get us coffee for the drive out to Front Royal.\n\nWe were on the I-495 beltway, circling D.C. from Maryland around towards Virginia to get to I-66. As we passed the Mormon Temple in Kensington with its gold spires towering over the beltway, a semi passing right next to Jo's window blasted its horn at a car the next lane over.\n\nJo gasped and started violently, crushing her cup with her fist and spilling half its contents all over her lap.\n\n\"Shit! Shit, shit, ow, shit!\" she yelled, trying to wipe the hot liquid off her pants.\n\nI swerved, then got control of the car. \"Are you okay?\" I started to look for room to pull over to the shoulder, but the semi was blocking me.\n\n<br >\"Yeah, I just... god damnit. Don't pull over, I'm okay. She lifted her butt off the seat and started pulling her track pants off.\n\n\"Uh, Jo, you might\u2014\"\n\n\"I have to get these off, it's burning me.\"\n\n\"But Jo, there's\u2014\"\n\nShe managed to pull her pants down to her ankles, then grabbed a bunch of napkins from my glove compartment to wipe the coffee off her skin. \"Ah, that's better.\"\n\nThe semi honked again and Jo jumped. \"God dammit!\" She turned and glared out the window to find the driver leering down at her pantless legs. \"Oh, fuck you, asshole!\" she yelled at the window and gave him the finger. She turned to drag her backpack from the back seat into her lap, and started digging through it. She pulled out a t-shirt and covered her lap. I noticed her breathing was speeding up and she was trembling.\n\n\"Are you sure you don't want me to pull off?\"\n\nShe didn't answer, just closed her eyes and I could see her visibly trying to get herself under control. I reached out and rested my hand on her thigh as I drove.\n\n\"It's okay Jo, I'm here with you. It's okay. Just breathe.\" She grabbed my hand and squeezed it painfully as she hyperventilated. I didn't complain, I just let her hold it.\n\nAbout ten miles passed before she got her breathing under control and opened her eyes again. \"Fuck...\" she breathed.\n\n\"Are you okay?\"\n\n\"I think I just had a panic attack.\"\n\n\"Do you want me to go back to the hospital?\"\n\n\"No. No, I'm okay now. Keep going. I just want to go home.\" It was the first time since she woke up I could remember her saying \"home\".\n\nThe next hour and a half were uneventful, thankfully. After she'd air-dried off, she'd pulled on some shorts from her bag. As we bumped down the long gravel driveway to the farm, I looked over and saw her eyes were glistening, but she was smiling too.\n\n\"Welcome home, Jo.\"\n\nShe turned to me and said in a hoarse voice, \"Thanks for doing this.\"\n\nI parked my little Mini-Cooper in the area where Henry usually parked his truck. Jo got out and looked around, gazing up at the barn and over at the hanger.\n\n\"What do you want to do first?\" I asked as I walked around the car to stand next to her.\n\nShe didn't say anything. Instead she took my hand and walked towards her little house and up the steps onto her porch. She stopped on the top step.\n\n\"I just realized I don't have my keys.\"\n\n\"I got you babe,\" I said, and put a key from my keyring in her door. \"Your dad gave me this when I came out to pick up Belle last week. I think he likes me.\"\n\n\"Can't blame him for that,\" Jo said with a grin. As we went inside, Jo took a deep breath and seemed to grow a few inches. \"Home,\" she breathed.\n\n\"What do you want to do?\" I asked her.\n\nJo took both my hands in hers and kissed me. \"Something I fantasized about every day I was in Afghanistan after we got back together.\"\n\nMaybe an hour later I gave a contented sigh and said, \"You know, I fantasized about this too.\"\n\n\"You did? When?\"\n\n\"The night we met.\"\n\n\"You did not!\"\n\n\"I really did,\" I said. \"I had to tell myself 'down girl, you've known her for like half a minute', but I was totally imagining going to my comic shop with you and spending Saturdays curled up together, trading our favorites back and forth.\" We were sitting on her couch with my feet in her lap, stroking her leg with my socks. \"When you said something you had been fantasizing about I'd imagined us having less clothes on, though. Not that I'm complaining.\"\n\nJo chuckled. After she'd kissed me, she'd gone over to the bookshelf by the fireplace and pulled out a stack of comics, then dragged me onto the couch saying, \"This is my unread pile I had left behind when I deployed,\" She'd offered me the first pick and I'd taken her three trade paperbacks of the Jane Foster Thor run, a series I hadn't gotten around to yet, while Jo had started on Unbeatable Squirrel Girl, which had her giggling every other page.\n\n\"Don't you worry, Blue Girl, I want to be very naked later. I just wanted to start the weekend with this.\"\n\nThat brought a huge grin to my face. \"Promises, promises, Jocelyn Collins,\" I said and brought my knees up so my sundress slid up my thighs towards my waist, giving her an eyeful of skin. Her eyes twinkled at me.\n\n\"You know, you're the only person besides my dad who can get away with calling me that.\"\n\n\"Does it bother you? I won't if you don't like it.\"\n\nShe looked thoughtful. \"No, no it doesn't. I usually hate it. I got in so many fights in school when girls would try to tease me by calling me Jocelyn. Mom and dad are the only ones who ever called me that without it bothering me.\" She looked at me. \"But not you, Blue. It sounds... right, coming from you.\"\n\nI pinched her thigh with my toes. \"Well then, Jocelyn, I won't hold back on using it. Getting hungry yet?\" I looked out the glass front door into the yard. It was getting dark.\n\n\"Sure. Did you have a big dinner planned too?\"\n\n\"Not exactly.\"\n\nAn hour later, we were sitting behind the main house between the back deck and the woods, where there was a circle of wooden Adirondack chairs around a rough stone fire pit.\n\n\"Somehow I think this is more for you than it is for me,\" Jo laughed, as she reached the stick holding her hot dog out over the fire.\n\n\"What can I say?\" I ventured. \"I never got to go camping as a kid.\"\n\n\"Yeah, well this was like a weekly thing for me, so it's not much of a novelty. It is really nice though.\" She held out her bottle of Corona to me. I picked up mine and we clinked the necks together, then ate our hot dogs in comfortable silence.\n\nAfter she popped her last bite in her mouth, Jo dusted her hands off, leaned back in her chair and looked up at the stars. \"God, it didn't hit me how much I missed this place until we pulled down the drive. Or how much I needed a trip home. Thanks again, Blue.\"\n\n\"I kind of needed a break from the hospital myself,\" I said. \"Is there anything else you specifically want to do while we're here this weekend?\"\n\n\"Nope, I just want to relax.\"\n\n\"How would you feel about spending some time in the barn tomorrow? I'd like to see if there are some songs we could actually play together, since there's a piano here.\"\n\n\"I'd like that.\"\n\n\"Good. So, we did comic time today. We're going to do music time tomorrow. That just leaves naked time.\"\n\nShe raised her eyebrows and grinned at me, her face lovely in the firelight. \"Are you going to schedule that too?\"\n\n\"Depends. When Henry goes away on business, does he ever come back early?\"\n\n\"No, not that I know of.\"\n\n\"And how far away is your nearest neighbor?\" I asked.\n\n\"Almost a mile. Why?\"\n\nI pulled my phone out of my dress pocket, opened Spotify and pulled up our \"Set List\" playlist, clicked on You Get What You Give, turned up the volume and set my phone on the arm of my chair. Then I stood up in between Jo and the fire and started dancing, swaying back and forth, running my hands over my body. She looked at me with hunger in her eyes and started to get up, but I reached forward and pushed her back into her chair.\n\n\"Nuh-uh, Jo, this is your lap dance,\" I said as I pulled my sundress over my head and dropped it into my chair. I swayed my hips and turned in a slow circle, running my hands through my hair and moving closer so she had to part her knees to make room for me in between her legs as the New Radicals sang to us in the night.\n\nYou've got the music in you.\n\nDon't let go, You've got the music in you.\n\nOne dance left, This world is gonna pull through.\n\nDon't give up, You've got a reason to live.\n\nCan't forget, We only get what we give...\n\nI felt her hands brush over my hips and I wiggled my butt to encourage her. She ran her hands over my behind while I reached back, unfastened my bra and tossed it after my dress. I turned around, holding my hands over my breasts and looked down at my Jo, swaying my hips back and forth. She looked at me questioningly and I whispered, \"Go ahead.\"\n\nShe reached up and lifted the strings of my thong away from my hips and slid it down my legs. I lifted one leg so she could ease my underwear over my sneaker, then switched feet so she could do the other one. Then I dropped my hands from my breasts and stood dancing naked for her as she watched me. I knelt down and straddled her right leg, put my hands on her shoulders and kissed her. The intensity with which she returned it startled me, but warmed my body, as I felt the heat between my legs grow. I started rubbing myself on the hard muscles of her thigh.\n\nShe leaned back and looked up at me, caressing my breasts with her hands. \"I've never actually done make-outs with a naked girl in my dad's yard before, believe it or not.\"\n\nI laughed, kissed her again, then stood up and put my foot up on the arm of her chair. \"Honored to be your first then.\" She grinned at me as she leaned forward and traced her tongue around the soft skin of my thigh, pausing to take a deep breath to savor the scent of my arousal. When her tongue parted my lips, I moaned and took a double fistful of her hair to steady myself. After a few minutes, my knees were shaking and I lowered my foot to the ground so I wouldn't fall, eliciting an unhappy sound from Jo.\n\nI turned to sit on her lap, my back to her and leaned back against her. She immediately reached around me, one hand stroking my breasts and pinching my nipples, the other reaching down between my legs. Her finger slipped between my lips like I was oiled, and I gasped as she stroked my clit. She soon had me shaking and moaning on her lap. As I climaxed, I thrashed around on her lap, then leaned forwards with my hands on her knees. As I did, Jo slapped me sharply on the cheek of my ass and I shrieked loudly, my orgasm intensifying.\n\n\"Sorry, Blue. You had a mosquito there.\"\n\nI was moaning and trembling as I fell back into her arms, and I gasped, \"More!\"\n\nShe embraced me as I started to come down. Then she leaned down and smacked me again, this time on my thigh. I jumped and moaned.",
        "\"As much as I'm loving this, let's go inside. The mosquitos are really starting to come out. You're getting eaten up, and that's my job. I'll slap your ass more inside if you want.\"\n\n\"Yes, please!\"\n\nWe got up from the fire. I picked up my phone and stuck it in Jo's back pocket but left my dress and underwear sitting in the chair. We held hands as we walked around towards her house, the night breeze flowing over my naked skin, giving me goosebumps. When we got to the steps of her cabin, an impulse seized me and I pulled her past the steps towards the barn.\n\n\"Blue, what...?\"\n\n\"Help me open the door,\" I said, leaning on the big sliding door into the barn.\n\nThe dry, dusty scent of the music space inside filled our noses. In the dim starlight filtering in through the doorway, I could barely make out the silhouette of Jo's face, but I heard her take a deep breath and give a sigh of contentment. She stepped closer to me and ran her hands over my skin. \"What are we doing in here, Blue?\"\n\n\"We can make love in your cabin anytime we come here. How often are we going to have the entire farm to ourselves?\" I pulled her over to the piano against the far wall, then got busy trying to pull off her shirt. She let me, then I knelt down in front of her and pulled off her shorts and panties in one motion.\n\nI pushed her back and guided her to sit down on the piano bench, then shuffled forward on my knees until I could lean down and nuzzle the soft fur between her legs. She sucked in a breath, leaned back and opened her legs wider to give me access. I gave her a hard lick, then rubbed her clit with my thumb. She moaned, and I replaced my thumb with my tongue as I slid the two fingers inside her that I knew she loved. My fingertips seemed to know her exact right spot of their own volition and I curled my fingers and stroked her as she relaxed into the sensations.\n\nAs her breathing quickened, I lifted her legs so they would rest on my shoulders. I loved the feeling of her weight on me when I made her come. As she got closer to her release, I noticed she was holding her left leg up away from me. I stopped and lifted my head, while continuing to stroke her with my fingers.\n\n\"Jo,\" I said in a soft voice, \"I'm not afraid of your foot. You aren't grossing me out or making me scared.\" I reached up and stroked her calf where it joined her prosthetic, then firmly pulled her leg down onto my back, feeling the cold metal on my skin. \"This is you, Jo. And I want all of you.\" I lowered my tongue to her again and she gasped, almost a sob.\n\nI bent to pleasuring her with determination, and her cries filled the barn.\n\nAfterwards, I pulled her to sit up and when I kissed her, I felt tears on her cheeks in the dark.\n\n\"Are you okay, love?\" I asked.\n\nShe sniffed and said, \"Yeah. You just seem to know exactly when I'm worried or self-conscious and come right at me with what I need to hear. It's a little scary, that's all.\"\n\n\"It's scary I know what you need?\"\n\nShe grabbed my face with both hands. \"It's scary I've let you in so far that you can know me so well.\" She kissed me hard. \"I never thought in my life I'd let someone in as far as you.\"\n\n\"I'm glad you have.\"\n\n\"God, Blue, me too.\"\n\nJILL\n\nIt was not quite an hour before sunrise when Jo had her first nightmare. I sat up in bed confused, as she shouted a wordless sound of warning.\n\nOnce I realized what was happening, I was surprised it had taken this long.\n\n\"Eric? Eric! My aircraft!\" she yelled.\n\nShe started thrashing back and forth, tensing her whole body. I sat up and reached over to grab her by her shoulders and held onto her. It was pitch black in her cabin and I couldn't see if her eyes were open, but I was sure she wasn't awake.\n\n\"Jo! Jo, wake up! It's okay baby, you're safe!\"\n\n\"Billy! Is everyone okay back there?! Hold on, we're going in! No. No! Fuck, too fast! Eric, No!\"\n\n\"Jo! Jo wake up, you're at home, you're okay! It's okay, I'm here, you're safe!\"\n\nShe sat bolt upright in bed, gasping for air like she'd run a marathon. \"Blue? How did you... what's... oh god. Oh god!\" She started crying and her arms wrapped tightly around me. \"Oh god, Eric... Ben...\" she cried against my shoulder.\n\n\"It's okay, Jo. It's okay, I'm here.\" I held her and rubbed her back until she stopped crying and her breathing slowed to deep, ragged breaths. \"It's okay baby.\"\n\nShe sniffed. Then she said in a rough voice, \"I have to get up.\" She threw the blanket back.\n\n\"Jo, wait!\" I said, but it was too late. She'd tried to jump to her feet, forgetting in her groggy haze that she only had one, and she crashed to the ground. She lay motionless on the floor in the dark. I jumped up and knelt down next to her. \"Are you okay Jo?\"\n\nShe was silent for a long moment, then she said in a matter of fact voice, \"Well, fuck.\"\n\nI snorted, then covered my mouth in embarrassment. She surprised me by starting to laugh herself. Once she started, I couldn't stop myself and I started giggling again. Soon we were both laughing hard as I helped her sit up.\n\nI tried again. \"Are you okay, love?\"\n\n\"Yeah, I guess so.\"\n\n\"Dr. Allen told me you'd probably start having nightmares sooner or later.\"\n\n\"No kidding.\"\n\n\"Sorry, that was an obvious thing to say. Do you want to go back to bed?\"\n\n\"Fuck no! I'm done with the sleeping; can you hand me my foot?\"\n\nWe got up, made coffee and took our mugs out to her tiny porch. We sat in the two chairs out front, and watched the sun rise. Jo held her coffee in one hand and my hand with her other.\n\nWe sat in silence for a long time until she said quietly, \"You think this is how it's always going to be now? Panic attacks and nightmares?\"\n\n\"No, I don't. I think you've been through some stuff, and you're going to have to deal with it, but I think you're going to be okay.\"\n\n\"It's just going to take time?\"\n\n\"Yes.\"\n\n\"I've really grown to hate that phrase.\"\n\n\"Anyway, I think your nightmare tonight was triggered by Mr. Fuck-Nuts truck driver yesterday afternoon.\"\n\nShe laughed. I took it as a good sign.\n\nJO\n\nAfter breakfast, Blue was taking a shower while Jo stood on her porch, idly staring into the distance. Her gaze fell on her dad's house.\n\n\"You know what you've been wanting to do. It's right there,\" Little said.\n\nJo went inside and got a keyring out of a drawer in her kitchen along with a pad of sticky notes and a Sharpie. She wrote \"DAD'S HOUSE\" on a note and stuck it to the inside of the glass front door, then walked across the courtyard from her house and up the steps to the main house where she grew up.\n\nShe didn't waste any time with nostalgia, but went right to the music nook. Her mom's baby grand, polished and gleaming as usual, took up most of the space. Jo went around it to the small bookcase on the back wall and searched until she found what she was looking for. She spread the book out on top of the piano, then took a Martin acoustic guitar down from where it was hanging on the wall and put the strap over her shoulder as she started paging through the book, Guitar Chords for Beginners as she idly strummed the strings with her thumb.\n\nThe strings made a sour noise, and she subconsciously started turning the tuning knobs as she strummed. She was finished tuning it before she even realized what she was doing.\n\n\"Huh. I guess that's a good sign,\" she said out loud to the empty room.\n\nShe started going over the chords in the book, checking the fingering of each one and replicating it on the Martin.\n\n\"It's all there, Collins. You just need to see it.\"\n\nShe quickly went through the chord progressions as they were coming back to her. She just needed to see it on the page to remember what each one was. As she came across chords that were in the songs she'd played for Blue and Liz at Walter Reed, she started getting excited, playing bits of licks from each song and tying the chords in the books to the songs in her head. She found that she could sight-read the simple tunes in the beginner book easily, now that she could recognize the notes written out on the staff.\n\nShe went to the bookcase again and saw several more guitar books. She was about to pick out another one, when she noticed a plain blue notebook that said Jo's Songs on the spine in her own handwriting. She pulled it down and spread it out on the piano. It was full of sheet music, but handwritten.\n\nThe top page was titled Bahia Funk - Lee Ritenour, 1986. Arrangement by Jo Collins, 2005.\n\nJo snorted. \"Man, I was a pretentious little twat,\" she thought. \"Alright let's see how good I was back then. Or how good I am now, I guess.\"\n\n\"Just relax and let it flow, Collins. You got this.\" Little sounded encouraging for once.\n\nShe gave it a few halting starts as the memories came back. She remembered she had written this out her senior year in high school, right before she enlisted, when she was still on the fence between becoming a pilot and running away somewhere to try to become a professional guitar player.\n\n\"Mom always said you were good enough, you know.\"\n\nShe squared her shoulders, huffed out a breath then let it rip. She relaxed and tried not to think about the notes, skimming over the page with half-focused eyes and letting her fingers do the work for her. Quickly she was fully immersed in the music, the Brazilian rhythm flying out of her guitar. About halfway through she found she could close her eyes, as the song had come fully back into her head. The only thing that would have made it better for her was if she'd had someone on the saxophone to jam with, but her eighteen-year-old self had re-written the sax part for her guitar.\n\nAs she finished the song she was startled to hear Blue closing the front door behind her. She'd been so wrapped up in playing, she hadn't heard her come in.\n\n\"Oh, hey Blue.\"\n\n\"Jo, that was great! How did you remember that one?\" she walked over to stand next to her at the piano.\n\n\"Well, apparently I was an aspiring jazz guitarist back in the day.\" She gestured towards the notebook on top of the piano.\n\nBlue started flipping through the pages. \"Did you write out all of this?\"\n\n\"It looks like it. I don't have any clear memories of this stuff, but that's my handwriting.\"\n\n\"Looks like you kept this up for years. Here's one from five years ago, Flaming. Try that one.\"\n\nJo gave it a read-through, did some fingering without picking the strings, then took a breath and started off the song. It started with a harmonic note pattern, Jo just lightly picking at the notes without pressing the strings down onto the fretboard. Then she started a complicated strumming chord progression, with a strong Spanish flavor. Blue was nodding her head, while Jo played, then she sat down at the piano and started softly feeling out accompanying chords. Nothing complicated, just enough to fill in the spaces around Jo's playing. They finished the song together and Jo took a deep breath, then leaned over to kiss her Blue Girl on top of the head.\n\n\"I'm going to end up trying to convince you to join The Rotors, you know that, right?\"\n\n\"Oh no, I'm not that good.\"\n\n\"You are, Blue. You just don't have experience playing with a group. But if you think you and I aren't going to do I'm Feeling You together at Secrets on the tour you're crazy.\"\n\nBlue blanched at the thought of singing in front of such a big crowd. \"Uh...\"\n\n\"It's gonna happen, even if I have to drag you up on the stage. Let's play something else.\"\n\n\"Like what?\"\n\n\"You pick. I'll see if I can improvise, I need to try that anyway.\"\n\nBlue took a deep breath and cracked her knuckles. \"Okay. Well, I don't know if you remember, but I played Billy Joel for your dad when we came here after the last beach tour. Did you play a lot of his stuff with your dad growing up?\"\n\nJo laughed. \"I guess? You told me you played that for him. I'm guessing I played a lot of Billy as a kid since he loves it so much. Give it a shot and we'll see what happens.\n\nBlue looked down at the keys, then started the intro to Only The Good Die Young. Jo immediately started the strumming acoustic part. Blue started singing the lyrics tentatively, until Jo joined her, then their voices grew in strength.\n\nAw, but they never told you the price that you pay\n\nFor things that you might have done\n\nOnly the good die young\n\nThe finished the song and Jo said, \"I guess I'm lucky I'm not one of the good ones.\"\n\nBlue playfully slapped at her hand. \"Don't say that!\" she said, while Jo chuckled at her.\n\nJO\n\n\"This place has changed a lot since I've been here. At least, I think it has,\" Jo said. They had driven into downtown Front Royal for dinner, and were sitting on the patio at the PaveMint Taphouse.\n\n\"This restaurant?\" Blue asked.\n\n\"No, downtown. I can't even remember if this place was open the last time I was here.\" She took a sip of her draft beer as Blue twirled the stem of her wine glass between her fingertips.\n\n\"So, check-in time, how do you think we're doing this weekend? You seem a bit less... skittish today,\" Blue asked her.\n\n\"I feel pretty good. I mean, other than having a panic attack and jumping out of my skin with that nightmare last night. I don't know if it's being out of the hospital in general, or if it was a whole day of jamming. You really are better than you think Blue. You're gonna have to jam with the rest of the band.\"\n\n\"We'll see,\" Blue said nervously. They'd spent most of the day messing around with music together. After the morning at the piano inside the main house, they'd had lunch then moved out to the barn so Jo could switch to an electric guitar, which was much more her thing. Blue had spent the afternoon letting Jo jam on whatever she wanted to, sometimes helping her remember a song, with Blue trying to fill behind her on the old upright piano.\n\n\"Anyway, it's a good thing we went out to the barn, right?\" Jo smirked at Blue. When they'd walked in the barn they'd found Jo's clothes next to the piano, which had reminded Blue that she'd left her dress and underwear at the fire pit behind Henry's house.\n\n\"Um, yeah. If your dad had come home to find my panties sitting out in his backyard, I'm not sure I'd ever be able to face him again.\" Blue turned red thinking about that possible faux pas.\n\n\"Anyway, how are we doing on your three-part plan for me? You said that part one was music and we seem to be doing okay in that area. What's part two?\"\n\nBlue smiled and flushed a little darker. \"Part two started last night at the fire pit and in the barn.\"\n\n\"Wait... part two is sex?\"\n\n\"Sort of. I mean, we haven't had much privacy at the hospital.\" Since the first night at Blue's condo, they'd managed to make love a few times at Reed, but the idea that a nurse could knock on the door at any time was a splash of cold water. \"I've just been remembering the day we spent at my apartment when you came back for me from Afghanistan. You were so into me, you dominated me the way I love and you just seemed so... studly.\"\n\nJo smirked. \"Studly?\"\n\n\"You know what I mean. You were so powerful, and just took charge of me. I just feel that getting your groove back like that would be a big boost to your confidence.\"\n\nJo's grin got even more wicked. \"So, part two of your plan, is to have me do to you exactly what you love the most, is that what you're saying?\"\n\nBlue looked around to make sure their waitress wasn't standing nearby. \"No. Well, yes. But while I do love you dominating me like that, I think you felt really powerful doing it and that's something I think you need again.\"\n\n\"Mmm. So, you want to make me feel powerful. How are you going to do that?\"\n\n\"We're going to try something new for you. That's all.\" Blue's smile had gotten as big as Jo's, as she caught their waitress's eye from across the patio and signaled for the check.\n\nJO\n\n\"Gotta tell you Blue, I don't feel very powerful right now. I feel ridiculous.\"\n\nThey were back in the bedroom at Jo's house, with several candles lit around the room providing a soft, warm light. Jo was naked, having let Blue undress them both, including removing Jo's prosthetic, and she was currently on her knees on the bed while Blue fussed with the harness she was in the process of fastening around Jo's hips. Jo looked down at the blue dildo jutting out from her own groin.\n\n\"I know I'm pretty butch, but I've never really imagined having a dick you know. Much less a blue one.\"\n\nBlue came around in front of her and made a final adjustment. \"Mmm. You look hot baby. I bought this one special for us. A blue dick to fuck your Blue Girl.\" She kissed Jo. \"You may or may not remember, but the first time we had sex here in your house, I told you when you got back from Afghanistan we'd have to try you fucking me with this. I said with muscles like yours, you could fuck me like no one else.\"\n\n\"I think I recall, now that you mention it. I have no idea how I'm supposed to do this though.\"\n\n\"Don't worry. I got you babe. I've been wet since the restaurant thinking about this, but just for good measure...\" she grabbed the tiny bottle of lube she'd gotten out of her bag along with the strap-on, poured a small amount in her palm and started stroking the silicone cock while she kissed Jo.\n\nJo made a \"Mmmph!\" sound and drew back, surprised.\n\nBlue grinned. \"Discovered the nubs?\" The inside of the harness had rubber nubs in just the right spot and as Blue had stroked her, they had rubbed against Jo's clit. \"C'mere, I don't wanna wait for foreplay.\" Blue lay back on the bed, and pulled Jo down to her between her spread legs.\n\n\"Uh... what do I...\" Jo started, but Blue was already guiding her in.\n\n\"Gently! Give me a second to get used to it, it's been awhile,\" Blue gasped, wrapping her hands around Jo's shoulders.\n\nJo held herself up on her arms and she rocked her hips, thrusting a little deeper each time. Finally, Blue wrapped her legs around Jo, and pushed with her heels on Jo's butt. She sank fully inside, resting the length of her body on top of Blue. They were face to face and Jo stared at Blue's closed eyes then tipped her head down to kiss her on her lips. Blue started a bit, having been focused on the feeling of being filled for the first time in more than a year.\n\n\"I like this part of it,\" Jo whispered.\n\nBlue opened her eyes and hungrily kissed Jo back. \"Fuck me Jocelyn,\" she whispered.\n\nJo said nothing, but watched Blue's face as she withdrew, then rocked back in. Then again. And again. Blue moaned and her hands slid up from Jo's shoulders into her hair, as she pulled her down to kiss again. It didn't take long until Blue's breathing quickened and she started shuddering against Jo's body.\n\nThe nubs in the harness had felt good, but hadn't gotten close to getting her off. On the other hand, Jo felt she'd gotten a taste of what this was all about. And she liked it. She pulled out and rose to her knees, grabbing Blue's leg and flipping her onto her stomach.\n\n\"God yes!\" Blue groaned, as she rose up to her knees and presented her butt to Jo. Jo sharply slapped her on the ass with one hand. Blue squealed \"EEP!\" and tried to get away, but Jo grabbed her hips with one hand and pulled her close as she reached down with her other to try to guide the toy back into Blue. She was too unfamiliar with this to do it easily, but Blue reached down between her legs, grabbed the shaft and guided it in.\n\nJo grabbed Blue's hips with both hands and started thrusting into her. Blue was up on her hands and knees, pushing her butt back at Jo, but soon her arms gave out, trembling, and she fell on her face, crying out wordless sounds.\n\n\"No, you don't!\" Jo growled, and grabbed a fistful of blue hair and pulled her back up, until Blue was upright on her knees herself. Jo picked up her pace, wrapped her arms around Blue's body as she thrust into her from behind, pinning Blue's arms at her sides in a bear hug.",
        "Jo could feel her own orgasm approach from the friction of the harness. It wasn't going to be earth-shattering, but it was going to be good. As she got Jo started to come, Blue started chanting in a breathless monotone. \"Fuck me Jo, fuck me, god Jo, fuck me, fuck me, Jo fuck m-e-e-e-e-e-e-e!\"\n\nWhen she felt Blue start to quiver, signaling the height of her climax, Jo squeezed her tightly and rasped in her ear, \"Now I remember what I told you that night Blue. You're mine!\" then lowered her head and sank her teeth into Blue's special spot on her neck, the first time she'd done so since she'd come back.\n\nBlue stiffened, throwing her head back and screamed loud and long, straining her arms against Jo's embrace, then collapsed face-first onto the mattress despite Jo's effort to keep her upright. Jo fell forward with her, keeping the silicone dick buried inside her and started nuzzling her ear.\n\nBlue had her eyes closed and seemed to be trying to speak, but was only making unintelligible sounds.\n\nJo licked her ear and said, \"God damn, Blue, if you didn't make me feel powerful after all.\"\n\n\"Nnngh,\" Blue grunted and smiled, her hair plastered to the side of her face with sweat, then she finally got out, \"That's my Jo...\"\n\nJO\n\nWhen she woke the next morning, Jo rolled over and reached for Blue, and was mildly startled to find her gone. She couldn't remember if she'd ever woken up after her Blue Girl. She flopped onto her back and stared at the ceiling, musing on the night before. When Blue had pulled out part two of her... plan... for building up Jo's self-confidence last night, Jo had struggled not to make fun of her. But god damn, was that a hot night.\n\n\"She knows how to push your buttons in all the right ways, Collins,\" Little said, by way of a good morning.\n\n\"Jesus, you ain't lyin', Little.\" she said to the empty room.\n\nShe sat up and turned to sit on the edge of the bed and noticed her foot was standing upright next to her side of the bed. There was a sticky-note on the top that said \"DAD'S HOUSE FOR BREAKFAST\" and she laughed out loud. \"Working my own game, eh Blue?\" she mused.\n\nAfter checking her weather app and seeing it was going to be cool-ish for June, she selected a pair of worn jeans. Digging through her dresser drawer, she caught sight of a shirt she'd thought she might never wear again. It was her olive colored CHIPS-&amp;-SALSA t-shirt that Blue had bought her on the beach tour last year. The one she'd been wearing the day when she'd broken Blue's heart.\n\n\"Time to give this thing some better memories,\" she thought, pulling it over her head.\n\nAs she came out onto her porch, she saw her dad's truck parked next to Blue's Mini. She walked up to the steps of her dad's house to find Hank, her dad's gigantic St. Bernard, who lifted himself up off the porch to greet her with a deep \"Woof\" and an avalanche of wet doggy kisses. \"Yeah, boy, it's good to see you too!\" she said as she let them both in the front door.\n\nHer dad was in the kitchen, doing dishes. As she came in, he immediately grabbed a towel to dry his hands, then came around the island to grab her in a hug. She held onto it longer than she usually did.\n\n\"Hey dad, welcome back. How was your trip? Did you get in late?\"\n\n\"It was fine. I got in early, actually. You know how I hate hotels, I drove back from Columbia overnight. I scored a few contracts to do some line work down in South Carolina this fall. How's it going at Reed?\"\n\n\"The same. I'll probably get discharged in three to four weeks then just go back for PT and therapy sessions. Blue's condo is only a few block's walk and six Metro stops and from Reed, so we've decided we'll stay there during the week, and probably come out here on the weekends, if that's okay. At least until I figure out what the hell I'm going to do next.\"\n\n\"Well, I wouldn't rush that Jocelyn.\" He went back around the island and fixed her a plate of eggs and bacon from the pan warming on the stove, set it at the breakfast bar across from the sink, then poured her a cup of coffee. \"Take your time figuring out what's next. You and Jill are always welcome here, you don't even need to ask.\" He grinned at her. \"In fact, I told her the same thing I told Sara, she doesn't need to bring you to come visit me.\"\n\n\"Where is Blue, anyways?\" Jo looked around the house.\n\nHe grinned wider. \"Oh, I've got her doing a chore for me. Finish up your breakfast and we'll go find her.\"\n\n\"Uh oh... That look on your face usually means there's a big practical joke aimed right at me.\"\n\n\"No joke, just a surprise. C'mon, eat up.\"\n\nAfter breakfast her dad escorted her out onto the porch. He surprised her by leaving Hank inside, then she was surprised again to notice again that Margaret, her dad's Vietnam-era Bell-47 helicopter, was sitting out in front of the hanger, the morning sun gleaming off the plexiglass canopy.\n\n\"Uh... That wasn't out a minute ago.\"\n\n\"Huh, it sure wasn't. How about that. C'mon Jocelyn, let's go see what's up.\" He headed out across the grass courtyard towards the hanger without waiting to see if Jo was following.\n\nJo had to hustle, limping to catch up with her dad just as he reached the concrete pad. Blue was sitting in the left seat of the chopper with a small notebook in her lap. She looked up and smiled at the pair of them. She was wearing jeans, unusual for her in the summer, and her Rotors baseball cap and a pair of sunglasses.\n\n\"Morning baby! Henry, I think I'm ready.\"\n\n\"Alright Jill, show me what you got.\" He nimbly hopped up into the cockpit and sat in the middle seat. \"Jo, you get up here.\" He patted the right seat, the one with the second set of controls for the copilot.\n\nJo pensively climbed up into the right seat. \"So, uh... what are we doing?\"\n\n\"Wait your turn, Jocelyn. Ok Jill, give me the rundown.\"\n\n\"Okay.\" Blue looked down at her notebook and started reading down the page and ticking off each one with her pencil as she read. \"Fuel level, eighty percent. Hydraulic fluid, full. Oil level, full. Visually inspected belts, bolts and cables.\" She looked up to the control panel. \"Master switch on. Battery voltage, green. Compass, working. Altimeter, working. Radio, working.\" She grabbed the cyclic and moved it around, looking up at the main rotor. \"Stick linkages, good.\" Then she grabbed the collective and moved it up and down, watching the blades twist. \"Collective linkages, good.\" She worked the pedals back and forth then looked at Henry and said, \"I think I'm good to go.\"\n\nJo was sitting there open-mouthed. \"Blue, dad, what... what's going on?\"\n\nHenry started putting on his four-point harness in the middle seat, and Blue followed his lead.\n\nBlue looked shyly at Jo across the cockpit. \"This is the big surprise I told you I was holding back.\"\n\n\"But you... when did you...?\"\n\n\"Well, you know how I've been going home to work every day? It's hasn't been every day... I've been coming out here every Wednesday. Henry's a really good teacher.\"\n\n\"You know your old man still has his instructor rating, right?\" Henry said, his eyes twinkling. \"Better strap in, Jocelyn.\"\n\n\"I've got my twenty hours of instructor-led flight time now with Henry, and seven of my ten solo hours.\" She was strapping on a knee board on her left leg with an aviation map under the clear cover. \"I was hoping to finish and take my test so I'd have my license so I could take you out myself. But I didn't have time, so Henry will have to join us. Not that I mind having you along, Henry!\" Blue said quickly.\n\n\"No offense taken.\" Henry was clearly amused as hell at the situation.\n\nBlue reached out and turned the key and the engine roared to life. She and Henry put on their headsets. Jo sat there looking conflicted. For a moment, she thought about jumping out and running.\n\n\"You did that when it was a fucking guitar. You gonna run from a fucking helicopter too? You've got over five thousand hours of stick time, five hundred hours in this bird alone. What are you afraid of, Collins? And what did you gain by running last time?\"\n\n\"Goddamn it, Little,\" she muttered under her breath, then quickly strapped herself into the seat and reached for her headset. There was a ballcap and a pair of sunglasses hanging with the headset, and she put those on too. Once she settled the earphones on, she heard her dad say in her ears, \"Ok Jill, your aircraft.\"\n\nBlue looked at Jo, seeking some sign of approval, but Jo sat impassively behind her sunglasses. Blue took a deep breath, and said into the mic, \"Okay, throttle to fifty percent, temp looks good, RPMs look good.\" She looked up at the windsock on the corner of the landing pad. \"Wind from the west at less than five M-P-H. Okay.\" Jo heard her huff out a breath and imperceptibly smiled. Blue was taking after her in more ways than one.\n\n\"Here we go!\" she said, and twisted the throttle to full and lifted up on the collective. The Bell lifted up in the air, not as smoothly as it would have under the control of Henry or Jo, but after an initial wobble, Blue started climbing.\n\nWhen they lifted off, Jo had found herself grabbing the edge of her seat with both hands and drawing in an almost panicked breath. When Blue wobbled on the take-off, it took all her self-control not to grab the stick.\n\n\"Calm the fuck down, Collins. Sure, you're not medically cleared, but you can take over in a hot second when she fucks up.\"\n\nJo ground her teeth and snarled back in her mind, Don't talk about Blue like that! But her anger had the side-effect of bringing her fear under control. She looked over across the cockpit. Her dad was relaxed, sitting with his arms crossed, watching Blue's every move.\n\nBlue was totally focused on her task. They circled the farm once, then Blue headed east. She looked fairly competent for a newbie to Jo's critical eye. She scanned her eyes back and forth from her instruments to the outside, watching for obstacles and other aircraft, as well as looking for landmarks to compare to the map on her kneeboard. She was clearly headed somewhere.\n\n\"Damn Blue... I'm impressed.\"\n\n\"Thanks, Jo. You're the one who gave me the bug to want to learn this, you know. Do you want to take over for a bit?\"\n\n\"No, not yet Jill,\" Henry said. \"You need to work on your navigation. Jo can have a turn on the way back.\"\n\n\"Where are we going?\" Jo asked.\n\n\"Lunch,\" Blue answered.\n\n\"What?\" Jo laughed. \"We're flying to lunch in a chopper?\"\n\n\"You'll see.\"\n\nAs they approached the Manassas Regional Airport forty minutes later, Blue got on the radio and correctly requested clearance to approach the flight pattern, then landed on the ramp near several other helicopters. She followed the shutdown procedure, ticking each step on her checklist, then turned to Henry expectantly as the rotors wound down. \"Well Teach, how'd I do?\" she asked him.\n\n\"You can stop asking me that after every flight, Jill. You're doing just fine.\" Henry seemed proud of her. \"Okay, you kids go to lunch. I'm going to take Margaret over to my buddy's airfield in Gainesville. I'll refuel her and be back in a couple of hours. Have fun, girls.\"\n\nBlue and Jo unstrapped and jumped down from Margaret, then stood a safe distance away and watched as Henry started her back up, took off and flew away.\n\nJo could see Blue was nervous about her reaction. \"I hope you aren't mad,\" she said.\n\n\"Why would I be mad? You're really good for a newbie, Blue.\"\n\n\"I mean, because I didn't tell you. I almost told you so many times, but I had in my head it would be this cool surprise, then when you came out of the house this morning, your face\u2014\"\n\n\"Oh Blue, I'm sorry. It wasn't you that was making my face... wait, what about my face?\" she laughed.\n\n\"You had the same look on your face when you walked into our room and I was sitting with Belle on my lap.\"\n\nJo could see Blue was really worried. She gathered her into her arms, taking the opportunity to smell her hair.\n\n\"I'm not gonna run this time, Blue. I won't lie, I had a moment of panic when we took off, but then it was like I was home again. Honestly the hardest thing for me was not to treat you like a new greenhorn pilot under my command. I was biting my tongue the whole trip, but my dad would've had my ass if I'd commandeered his student.\"\n\n\"Oh! So, what did I do wrong? What would have had me do different?\"\n\n\"Blue, you're not in the Army. You don't have to do everything exactly a certain way. You did fine. You did it the way dad taught you, that's plenty good enough, okay?\"\n\nBlue still looked uncertain, but nodded. \"Okay.\"\n\n\"The real question is, what are we doing at a municipal airport for a couple of hours?\"\n\n\"That's the other half of the surprise. I'm told the grill here has one of the best burgers in Northern Virginia.\"\n\nJo laughed. \"Fair enough. Who told you about this local treasure?\"\n\n\"Just a friend.\" Blue held out her hand and they walked towards the terminal building together.\n\nInside the small airport, there was just one restaurant, a small diner-type place with a dozen tables.\n\nIt was still early in the morning for lunch, and it looked like they had the place mostly to themselves. Only one table was taken, by a woman in her early fifties, with short, greying hair, sitting with her back to them. Blue called out \"Alice?\" and the woman turned, then stood and smiled.\n\n\"Jill? Glad to finally meet you in person. Hello Jo, I'm so glad to see you again.\"\n\nJo stood dumbfounded for a second to see Major Alice Wright, one of her first commanding officers and her most valuable mentor in the Army standing before her. Then she snapped to attention, ramrod straight, an almost comical thing to see with her in her jeans and CHIPS-&amp;-SALSA t-shirt. \"Major Wr\u2014! Major Wr\u2014! UGH! Major!\"\n\nThe woman laughed. \"Jo, I've been retired for three years and you're not long for the Army either as I hear it. I think you can call me Alice.\" She held out her hand. Jo looked at it, then took several seconds to relax enough to shake her hand, then snapped back to attention, earning her another smile.\n\n\"Okay, Jo, we'll do it your way. At ease, Chief!\"\n\nJo unclenched and turned to glare daggers at Blue, then turned back. \"So, uh, Major. What are you doing here?\"\n\n\"Meeting some friends for a burger, Jo. What else?\" She indicated her table. \"Why don't we sit?\"\n\nJo and Blue took seats opposite Alice, who offered them menus. \"The green chili burger is the way to go,\" she advised them.\n\n\"But Major, really, what's going on here? Blue, what did you do?\"\n\n\"Okay, first of all Chief, I order you to call me Alice, alright?\"\n\n\"A... Alice. Christ, that feels weird Major! I mean... Alice.\"\n\n\"Better. Secondly, Jill here found me through LinkedIn. We've been talking a little and she just wanted to get us together. I've missed my favorite Warrant, I have to say. I'm sorry we lost track of each other my last few years in the Army, with me moving to battalion HQ. Jill, this woman is by far the best pilot, male or female, I ever had under my command. And just as stubborn as she is good.\"\n\nJo had slowly been turning red as Alice sang her praises. Alice was interrupted by the waitress. They all followed Alice's lead and ordered the house special green chili burger and fries, then settled into catching up.\n\n\"So, it sounds like Tony really has your number!\" Alice laughed later, reaching for a French fry, after Blue finished recounting a tale of Jo and Tony butting heads over her attempts to speed her recovery.\n\n\"Blue, remind me to tell you about the time Major... Alice, here told me to fly nap-of-the-earth when her Colonel needed a ride out to a FOB. I didn't know she was pissed at him and that he got motion sick. Her staff sergeant told me later than she'd wished she could have put 'Made Col. Dinkins barf' in my fitness report.\"\n\n\"He was such a misogynistic jackass,\" Alice laughed. \"He told me once he didn't understand why the Army ever let women fly. Keep in mind, I was a female pilot commanding an air wing that was over twenty percent female pilots when he said that to my face. So, when he asked me who my best pilot was for a ride out to the FOB, I couldn't pass up the chance to say 'Oh, that's Jo, hands down.' Dumbass didn't even think for a second I was talking about a woman until he got on your bird.\"\n\n\"Oh my god, was his name really Dinkins? I mean, how appropriate,\" Blue said, giggling.\n\n\"Damn, Major... Alice, sorry. That sounds so weird coming out of my mouth! It's really great to see you again. Blue, thanks for setting this up. I'd like to stay in touch, Alice, if you want to.\"\n\nAlice exchanged glances with Blue. \"Actually, I have an ulterior motive today. I asked Jill to set this up after she told me about what happened to you.\"\n\n\"What's that?\" Jo looked confused.\n\n\"Well, since I retired from the Army, I have a new job. I'm the commander of Virginia's state Life-Flight air wing\"\n\n\"Oh...\" Jo said softly.\n\n\"Have you ever flown an EC-135?\"\n\n\"No...\"\n\n\"Well, I wanted to tell you, I have no control over the medical board, so I can't promise you that you can get your flight status reinstated. But I can promise you that if you do get medical clearance to fly again, and you get yourself certified on the Euro-Copter, you'll have a slot flying for me as long as you want one.\"\n\nJo nodded, then sat mutely, looking down at the table. Blue could tell she was trying to hold back tears.\n\nAlice reached out and rubbed her arm. \"You don't have to say anything right now, Jo. But I know what a great pilot you are. And our mission is to go get help to the people who need us, and you were always more committed to that mission than anyone else I served with.\" She smiled and added, \"And I can almost promise you no one will shoot at you while you're working for me.\"\n\nJo gulped and choked out a laugh. She raised her head and whispered, \"Thanks Major... Alice. I'm going to get cleared and I'm going to take you up on that.\"\n\nJust then Jo's phone pinged, letting them know that Henry had landed. They said their goodbyes after Jo and Alice traded their contact information. Alice hugged Jo warmly, which Jo took, stiffly at first, before she relaxed and returned it.\n\nThe last thing Alice said before they left was, \"Jo, there's one condition to a job with me.\"\n\n\"What's that Majo... Alice?\" Jo said.\n\nShe smiled. \"No calling me Major.\"\n\nOutside Jo whirled and crushed a surprised Blue in a fierce embrace. She couldn't say anything, but just held onto her Blue Girl.\n\nFinally, Blue said, laughing, \"Henry's waiting on us Jo. You can hug me more at home.\"\n\nThe went out to the helicopter parking apron and found Henry, already strapped into the middle seat of Margaret, waiting with his arms crossed. Blue hopped in the left seat again, while Jo took the right. Blue did her very by-the-book checklist, started up and took off, headed west towards the farm and home.\n\nThey were halfway home when Blue asked Jo if she wanted to take the controls for a while.\n\n\"Dad? You're the instructor on board. Technically I'm not even supposed to be sitting behind these controls, you are.\"\n\n\"Jocelyn, I don't need some fussy state medical board to tell me my daughter can fly. If you want to take the stick, take the stick.\"\n\n\"Do it! Let's fly again, Collins!\" chimed in an enthusiastic Little Voice.\n\nJo took the stick, grinning like a maniac, and gave it a shake. \"My aircraft, Blue!\" she said, with joy in her voice.\n\n\"Your aircraft, my love!\" Blue called back. Jo immediately took them into a hard, diving bank while Henry laughed and Blue screamed \"Eep!\" with delight.\n\nTo be continued"
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "erotic romance",
        "gay",
        "gay romance",
        "lesbian romance",
        "love",
        "romance"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hard-landing-ch-07"
}