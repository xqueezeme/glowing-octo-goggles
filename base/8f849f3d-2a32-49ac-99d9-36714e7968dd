{
    "title": "Cockatoo Pt. 44",
    "pages": [
        "\"Dao, Dao, calm down. What do you mean she's been taken?\"\n\nAlex wrenched the phone from me and talked to Dao in Thai. At the same time, Alex's phone rang.\n\n\"Jamie, it's Shane. I tried to call your phone, but it's busy.\"\n\n\"Alex is on my phone to Dao. She says Areeya's been taken. What the fuck's going on?\"\n\n\"Thaksin just called to warn me. Jandaeng was being taken under guard to hospital to have treatment on his arm. They were jumped between the prison and the hospital, and he was sprung. He's in the air. Two guards are dead, and a third isn't expected to make it.\"\n\n\"Where's Areeya?\"\n\n\"As soon as I heard about Jandaeng, I called Areeya's close protection guy. No answer at all. There's a guy with Areeya 24/7 now she's running Kritsada's operations. We have a tracker on her car, it appears to be stationary somewhere in Sukhumvit. There's a team on the way there now. They should be there in 10.\"\n\n\"Shane. this isn't a coincidence is it?\"\n\n\"No, it has to be Jandaeng somehow.\"\n\nAlex grabbed my arm, \"Tell him Dao is sending the plane down to pick us up. We'll be in Bangkok in four hours.\"\n\n\"Did you get that, Shane?\"\n\n\"Copy that. I'll have someone waiting for you at the airport. I'll call back when the team reaches her car.\"\n\nAlex fell back onto a chair. \"Fuck, fuck, fuck, this has to be Jandaeng, doesn't it? Why didn't that shot kill him?\"\n\nMy heart hammered in my chest, and my knees buckled as it hit me what had happened. I slumped down with my head in my hands unable to look at Alex.\n\n\"This is all my fault.\"\n\nAlex turned to look at me. \"What do you mean? This isn't your fault, it's Jandaeng.\"\n\n\"It is my fault. I didn't tell you everything that happened that night in the garage with Aki.\" I took a deep breath, \"It's my fault because I could have killed Jandaeng that night.\"\n\n\"How? I mean it was an accident Jandaeng got shot, right?\"\n\n\"Yes it was, but it didn't happen the way I told you. When Aki took me into the garage, he pushed a gun in my hand and told me to shoot Jandaeng. He even held my finger on the trigger. I couldn't do it, and the gun fell to the floor and went off, hitting Jandaeng in the arm.\"\n\n\"You're telling me you could have got rid of Jandaeng, and you didn't do it?\"\n\n\"Alex, you weren't there. You don't know what it was like. I couldn't shoot him tied up on a chair. I thought Aki would shoot him, anyway. That's when they blew open the door.\"\n\nMy phone bleeped. It was Shane calling back.\n\n\"Shane, It's Jamie, I'll put you on speaker.\"\n\n\"It's not good news. We found her car in Sukhumvit. Her bodyguard was dead inside the car, but there's no sign of Areeya. The only good news is that there was no sign of blood on Areeya's side of the car. There was a witness who said she saw a woman pulled from the car and bundled into a white van. That's all we've got so far, but the Thai police are all over this, and Thaksin is keeping us in touch with anything they uncover.\"\n\nAlex slumped back in her chair. \"Fuck, there must be something more we can do?\"\n\n\"Alex, we're doing everything we can do from here. Kritsada is pulling in every favour he can. We will find her.\"\n\nNone of us wanted to say the obvious, would it be in time?\n\n\"Shane, Jamie again, we will give you an ETA for our arrival as soon as we have one.\"\n\n\"Copy that, we will find her.\"\n\nAlex got up and walked into the apartment. I heard her crying, and it broke my heart to hear her. I went inside to comfort her.\n\n\"Get away from me. I don't want you near me.\" The words cut me like a whip, and I retreated outside. I thought she would never forgive me after this, and I was about to lose everything I loved. I swore to myself that if I had another chance, I would kill Jandaeng without a second's hesitation.\n\nMy phone beeped again.\n\n\"Shane, any news?\"\n\n\"No, but your plane is about an hour out of Samui, so get yourselves out there now and they'll do a hot turnaround.\"\n\n\"Thanks, Shane. See you soon.\"\n\nI called a taxi and went back inside.\n\n\"Alex, we need to go, the plane is due soon. I've called a taxi.\"\n\nShe said nothing, stood up and walked past me as if I didn't exist. As the taxi pulled up Alex slipped into the front seat leaving me alone in the back. We didn't speak a word on the way to the airport. Alex stared straight ahead all the way, and all I could do was go over what happened in the garage time and again, hating myself for what had happened.\n\nThey rushed us through the airport and onto the apron where we watched as the company plane landed, turned around at the end of the single runway and taxied towards us. The rear door opened and a set of internal stairs deployed as the propellers kept turning. We ran over and climbed the stairs into the cabin. An attendant retracted the stairs and as soon as the door locked shut, the pilot gunned the throttle and we were off down the runway. I barely had time to buckle my seat belt before we were airborne. The plane had been on the ground for less than three minutes.\n\nWe landed at Dom Mueang airport an hour later. Alex had taken a single seat and spent the entire flight staring out the window. She obviously hated me, and Areeya was in Jandaeng's hands. It was all my fault, and I had never felt more miserable and alone in my life.\n\nNin met us on the apron at the airport in an SUV with another one close on our tail. Shane was taking no chances now. She kissed me on the cheek and turned to Alex who snapped at her, \"Just get us to Shane.\" Nin looked at me and I shook my head, trying to tell her it wasn't her. Alex couldn't avoid being in the back seat with me, but she edged as far away from me as she could.\n\nNin spoke from the front seat. \"We have command centre at Kritsada's office. We are going there now. No news yet from anyone. Police have roadblocks all over city stopping and searching cars.\"\n\nIn our panic about Areeya, I had almost forgotten that at least two policemen had been killed. The Thai police had as much interest in catching Jandaeng as we did, and we passed one roadblock, adding even more chaos to the usual traffic. We arrived at the office and went straight up to Kritsada's floor where he met us at the lift. Alex embraced him and they held each other for a while, their fears obvious to everyone. Kritsada turned and we hugged, \"Jamie, we will find her, won't we?\"\n\n\"Yes sir, we will. I will do anything to get her back safely.\"\n\nAlex snorted and Kritsada looked at her in surprise. She ignored us both and said, \"Where's Shane?\"\n\nNin led us to what was clearly their command centre. TV monitors were showing continuous news feeds and a huge map of Bangkok covered one wall. There were two huge PC monitors, one of which was showing GPS locations and the other streaming social media sites.\n\nShane appeared, hugged me and turned to Alex, who shook him off, saying \"What's going on, why hasn't she been found yet?\"\n\nShane frowned and shot a puzzled look at me. I shrugged. Alex snarled, \"Don't look at her, she's no use whatsoever.\"\n\nShane looked from me to Alex. \"What's your problem? You two fighting won't help us find Areeya.\"\n\nAlex glared at me. \"Why don't you tell him, as this is all your fault.\"\n\n\"She's right, Shane, it is all my fault. I had the chance to shoot Jandaeng, but I couldn't do it. It didn't happen as I told you all. Aki took me into the garage and gave me a gun and told me to shoot him. He put his hand over mine and pointed it at Jandaeng's head, but I couldn't shoot him like that. I thought Aki would kill him so I dropped the gun and it went off. That's how Jandaeng got hit. Before Aki could do it, the police blew the doors open. As she said, it is my fault Jandaeng's alive, and now he's taken Areeya.\"\n\nShane looked from me to Alex. \"Alex, come with me.\" He grabbed her arm, pulled her into a side room and closed the door. I couldn't hear what was being said, but Shane seemed to be doing most of the talking. I thought it wouldn't matter anyway, my life here was finished. Whatever happened, Alex wouldn't forgive me, and I would lose everything and everybody I loved. I felt so wretched I thought I was going to be sick as the minutes ticked by. Nin took my hand and squeezed.\n\n\"I sure it will be all right, Jamie.\" I tried and failed to smile at her. Shane opened the door and closed it again leaving Alex inside.\n\n\"Jamie, I will let you talk to Alex in a moment, but you need to get it through your head this is not your fault. Nobody can see into the future. You did what you thought was right. You could not have foreseen what would happen afterwards. This is all on Jandaeng and nobody else.\" He held me by my shoulders. \"This is not your fault. Now, go talk to Alex.\"\n\nHe pushed me into the room with Alex and shut the door behind me. I flopped into a seat and kept my eyes to the floor, not wanting to look at her. Neither of us spoke for a few minutes, and I considered getting up and walking out.\n\n\"Jamie, look at me.\" She said. I didn't move. I was scared of what she would say. \"Jamie, look at me, please?\" She sounded close to tears. \"Shane has spent the last ten minutes telling me to stop being a selfish bitch, his exact words, and that none of this is your fault, to apologise to you, and for me to quote get my shit in order unquote.\"\n\nI looked up at her in amazement.\n\n\"What did he say?\"\n\nShe heaved a sigh, \"I will cut out the swearing, but what he said was nobody can see into the future, that killing another human being is the toughest thing anyone could do, that in a kill or be killed situation it is justified, but shooting an unarmed man tied to a chair would be cold-blooded murder and could only be done by a heartless bastard. He said you did what you thought was right, and he was proud of you, and the only thing anyone of us should worry about is getting Areeya back safely.\" She mustered a wry smile. \"I feel like I've had my pants pulled down and my arse spanked over his knee, but I deserved it.\"\n\nShe sniffled and wiped her nose with her sleeve.\n\n\"Jamie, I hope you can somehow forgive me for being such a cow. When we had our fight about what I was doing with Kritsada, you told me afterwards you didn't think about what I had gone through. You said all you thought about was how it affected you. You then risked everything to make it up to me.\" She brushed away a tear. \"The lesson didn't sink in because when you told me what happened in the garage, I lashed out at the person who loves me more than anyone else in the world. I blamed you because I was angry and somebody had to take the blame. I didn't stop to consider what a terrible choice it must have been for you. I should have known the Jamie I love so much would make the right decision. Please forgive me.\"\n\nI blinked away the tears pricking the corners of my eyes and wrapped her into my arms. She cried on my shoulder, and I held her tight and stroked her back until the sobbing stopped.\n\n\"Alex, there's nothing to forgive. I love you too, and we both want to get Areeya back so badly. That's all that matters now.\"\n\nAs she sobbed on my shoulder, I thought even if Alex forgave me, there was only one way I could forgive myself, and that was to cut off the snake's head.\n\nAlex and I emerged from the room holding hands to be greeted with a nod by Shane and a relieved smile from Nin.\n\n\"Did you really call her a selfish bitch?\" I whispered to Shane.\n\nHe nodded. \"Heaps of other things too.\"\n\nI reached up and kissed him on the cheek. \"Thank you, my friend.\"\n\nHe squeezed my arm, \"Glad to have you both back in the fight. Now, let's go find Areeya.\"\n\nDao had arrived, and we hugged her before Shane called us together for an update.\n\n\"Nin is the point person with Thaksin, so I'm asking her to give us a rundown on what we know. Nin, over to you.\"\n\n\"Jandaeng was being transferred from Bang Kwang prison for an operation on his arm. They originally thought they would have to amputate. It was saved but he cannot move his left arm. It is useless. This was check-up visit. He was guarded by three armed police but their armoured van was hit by a hijacked van driven into the side, here.\" She pointed a laser pen on the map at a location near Chatachuk Market. \"Back doors were blown off, and two guards in the back shot, the driver badly injured, he is still critical. Jandaeng escaped in a van later found burnt out in Nonthaburi, here.\" She used the laser pen again. \"We assume they changed vehicles. There were no witnesses to the exchange, so we do not know the second vehicle.\"\n\n\"Nin, how many men were involved in the ambush?\" I wanted to know what we were up against.\n\n\"At least four, from what witnesses say.\"\n\n\"This happened at 08:27. At 09:05 we receive call from Thaksin telling us of Jandaeng escape. We immediately call Areeya bodyguard and no reply. Checking GPS, Areeya's car stopped here at 08:55.\" The laser pen pointed to a spot in Sukhumvit, well away from where Jandaeng had been freed. \"We attended at 09:25. Bodyguard dead, no sign of Areeya. I am sorry.\"\n\nNin paused, but nobody broke the stunned silence, and she carried on.\n\n\"It mean there are two groups involved. We assume at least 6 men maybe more. Thaksin mobilise police with road blocks and internal investigations. Jandeang's old team seems to have disappeared. Thaksin thinks these are Jandeang's men.\"\n\nNin's phone rang, and she listened, then waved her hand for silence before scribbling something on a pad. Shane grabbed it and turned to us. \"It's Thaksin, they think they have located some of Jandaeng's men in a warehouse out by the river in Pak Kret.\" He looked at the map, \"Up here.\" He pointed to a location to the north of the city.\n\nAlex was quickest to respond. \"Is Areeya with them?\"\n\nNin had come off the phone by then. \"They not sure. There was a tip off from someone about the warehouse. Their SWAT team there now.\"\n\n\"Nin, get back onto Thaksin and tell him not to send in the SWAT team until I get there. They'll be trigger happy with two cops down. Jamie, you're with me. Alex and Dao, stay here and wait for our call.\"\n\nAlex shook her head. \"Fuck that, Rambo, we're coming with you.\"\n\nShane shrugged, \"OK, but stay out of the way when we get there.\" Alex glared at him, but I dragged her away before she could say anything. We came out of the building to see the traffic at a standstill.\n\n\"Shit,\" said Shane, \"It will take us forever to get there.\"\n\nAlex turned to Dao and said something in Thai. Dao nodded, \"We use Khlong Saen Saep, it will be much faster, take us to river then up to Pak Kret. It just round corner from here.\"\n\nAlex noticed my puzzled expression. \"It's a canal linking the Chao Praya all the way to Prachinburi. We can get a long-tail boat along the canal and then up the river.\" She glanced at Shane. \"Good job we came along.\" He grunted as Dao led the way, and within a few minutes we were in a long-tail boat heading along the Khlong towards the river. It was slow going along the Khlong but when we reached the river, the driver opened up the massive truck engine with a deafening roar and we hurtled along the river playing dodgems with the other river traffic.\n\nWe took less than fifteen minutes to get to Pak Kret, where the boat landed us close to the warehouse. The police had cordoned off the area with guards holding back people attracted by the police presence. Shane called Thaksin who came over to let us through and he led us through to an office he had commandeered.\n\n\"We believe some of Jandaeng's men are in the warehouse, but we don't know how many or if Jandaeng is with them.\"\n\n\"Do you know if Areeya is in there?\" Shane's question was the one we all wanted to ask.\n\nThaksin shook his head. \"No, we don't know who is in there. We have the warehouse surrounded and are trying to establish communication with them. We had a tip off from an informer. Jandaeng has made many, many enemies.\"\n\n\"Look, Thaksin, you have to take this carefully in case Areeya is in there, right?\"\n\n\"I promise you we will not move in for the moment. But, if they start something...\"\n\n\"No, you must not risk Areeya.\" Dao screamed at Thaksin, before Alex put her arms around her and made her sit down.\n\n\"We will do everything we can, but these men have already killed two policemen and one of your guards. We cannot take any risks with them.\"\n\nI put my hand on Thaksin's arm. \"Thaksin, I know you will do your best.\"\n\nHe nodded. \"I have to go now. One of you can come with me, but the rest will have to wait here.\"\n\n\"Shane, I think it should be you.\" I said, and the others nodded. \"Just keep us in touch.\"\n\n\"I will, can you let Nin know what's going on?\"\n\n\"Sure,\" I said, \"Alex, can you talk to Kritsada?\"\n\nAlex called Kritsada, and I rang Nin. \"We don't know much, Nin. Not even who is in there. Shane's gone with Thaksin and all we can do is wait. I wanted to say you are doing great, you are on top of everything.\"\n\n\"Thank you, Jamie. That means a lot. I think Shane and I work well together. There's no more news from here, I think we all have to wait.\"\n\n\"If you hear anything let us know.\"\n\n\"OK, Jamie, and stay safe there.\"\n\nI ended the call and Alex came and sat next to me. \"Kritsada is using all his clout, but nobody seems to know anything.\"\n\n\"Nothing from Nin either.\"\n\nAs I reached for her hand, the crackling of automatic weapons erupted outside. There was a pause in the gunfire, then it started again; short bursts followed by screaming and shouting. The shooting sounded close, so I grabbed Alex and Dao and pushed them to the floor. There was another short burst from what seemed to be right outside the door. I looked around for something, anything I could use to defend us.\n\nAlex and Dao had crawled under a desk, and I picked up a wooden chair and smashed it against the floor. It broke into pieces and I picked up what remained of one of the legs. It would have to do. I stood to one side of the door holding the chair leg like a baseball bat as someone turned the handle from the outside. The door opened and a man burst in holding a short-barrelled automatic weapon. Dao screamed as she saw him, and as he whipped round to face the noise, I swung the chair leg as hard as I could straight into his face. It splintered into pieces, but I heard the crack of his nose breaking. He screamed and dropped the rifle as he fell to the floor holding his face with blood pouring through his fingers.\n\nI picked up the rifle and locked the door. The man was now rolling around on the floor making sickening grunting noises, but I was taking no chances and kept the gun trained on him. I jumped as another burst of gunfire came from outside, followed by long bursts from several guns at once. The firing stopped, then one shorter burst and no more.\n\nIn the sudden silence we heard the wail of an ambulance, and a helicopter clattered overhead. Alex had picked up a piece of the broken chair and was beating the man with it and screaming something in Thai. Dao said, \"She's asking him where Areeya is.\"\n\nThe door handle rattled, and I pointed the rifle at the door, my finger on the trigger. I would take this one out if he came through the door.\n\n\"It's me, Shane, open the door.\"\n\nI almost collapsed with relief and unlocked the door. He pulled up as he saw me with the rifle.\n\n\"Whoa, Jamie. Let me take that.\"\n\n\"With pleasure, Shane.\"\n\nHe took it and unclipped the magazine. Alex had stopped hitting the man, but she was still trying to get him to answer her questions. Shane bent down, pulled her away and cuffed the man's hands behind his back with cable ties from his pocket.\n\n\"Alex, he won't be answering questions for a while, not with the way his face has been rearranged. Who did this to him?\"\n\nDao pointed at me. \"It was Jamie, she saved our lives. He would have shot us I'm sure.\"\n\n\"Fair dinkum, Jamie. I guess I shouldn't be surprised.\"\n\nAlex jumped in. \"What the fuck happened? Is Areeya OK? I thought they weren't going to start anything.\"",
        "\"Jandaeng's men tried to break out to get to the river. They started shooting, and Thaksin's men had to return fire. Nobody says they saw a woman, but we'll have to wait until they have cleared the place.\"\n\n\"It's clear now.\" Thaksin stood in the open door. \"I can tell you we have found no trace of your friend or Jandaeng, they were not here.\"\n\nHe stared down at the man on their floor who was now whimpring, then looked at me. I shrugged. \"You don't have to say it, I was in the wrong place at the wrong time.\"\n\n\"You are wrong, this time it seems you were in the wrong place at the right time. I am sorry, we should have stopped him. He should never have reached here.\"\n\nI wrapped my arms around Alex and Dao, but our relief was short lived. If Areeya hadn't been here, she was still with Jandaeng somewhere. As if reading our thoughts, Thaksin said, \"Jandaeng is on his own. He cannot run and hide much longer. We will find him soon. I would ask Jamie to stay to give us a statement about how this piece of shit came by his accident, shall we call it?\" He paused to prod the man with his foot which set off another round of moans. \"But it's a formality. The rest of you can go.\"\n\nAlex squeezed my hand. \"Do you want me to stay?\"\n\n\"No, you all go. You'll do more good back at the centre. Bring Kritsada and Nin up to speed. I won't be long.\"\n\nDao came over and kissed me on the lips. \"Thank you, Jamie. That was so brave.\"\n\n\"Not brave, Dao. Desperate.\"\n\nAlex snorted. \"When will you believe us when we say you're brave?\" She kissed me too. \"Hurry back.\"\n\nThe three of them left and after some of Thaksin's men had dragged the man away, we sat and I wrote out my statement.\n\n\"Will this one get lost in the system too?\"\n\nHe smiled. \"The inefficient bureaucracy in the Kingdom can sometimes mean documents are lost, yes. I am sorry we have met again under these circumstances. I will do everything to find Jandaeng and your friend.\"\n\n\"Thank you, I know this was none of your doing, but we want her back so badly.\"\n\n\"We want to find him too, he has many things to answer for. Do you want an escort to take you back?\"\n\n\"No, don't worry, I'll make my own way back. I'll pick up a boat and go back along the river.\"\n\nHe walked me out through the barricades and we shook hands. \"Keep us in touch, Thaksin.\" I said as we parted.\n\nI walked towards the river and was almost there when my phone rang and I stopped to answer it. I almost dropped the phone as I heard Jandaeng's voice.\n\n\"Listen farang whore. If you want to see your friend alive, then you do what I tell you.\"\n\n\"Fuck you Jandaeng, where is she?\"\n\n\"I have her here. Bitch, tell the farang you are here.\"\n\n\"Jamie, I'm here but don't do what he wants.\"\n\nI heard a slap and I felt sick as I thought of what he was doing to her.\n\n\"If you want to see her again, then do as I say.\"\n\n\"OK, OK.\"\n\n\"I want you to come here. I will give instructions. Catch river bus to Asiatique. I will call you in 30 minutes with more instructions. Do not tell anyone else. If you do not come alone she dies.\"\n\nThe line went dead, and I had to hurry to catch the river bus which had just pulled up. What the hell should I do? Would he carry through with his threat if I called anyone? Could I risk calling his bluff? It took me the whole of the ride to Asiatique to decide that I had to do what he said. If there was a chance to free Areeya, I had to take it. It would go a long way to make up for the guilt I felt.\n\nAsiatique is a shopping mall on the riverside packed with tourists and locals. I got off the river bus and my phone rang as I walked into the mall.\n\n\"Go through to road and catch tuk-tuk to Mandarin Hotel. Remember, if you talk to anyone, she dies. I give you 20 minutes.\"\n\nI pushed to the front of the queue for tuk-tuks and told the driver to get there as fast as he could. Traffic was worse than usual due to the many roadblocks, and we got there with a few seconds to spare.\n\nHis call came as I paid the tuk-tuk. \"Walk through hotel and there is service area at back. Go straight through. If I see anyone else, I will kill her.\"\n\nI did as he said and emerged into a dark alley at the rear of the hotel. As I looked around, I felt something poke into my side and Jandaeng whispered. \"I have gun in your side, we walk now.\"\n\nHe pushed me forward, and we walked down into a maze of passages and alleys. I had no idea where we were.\n\n\"Take out phone, then drop on floor.\" I did, and he stamped on the phone, smashing it into pieces. There would be no chance of anyone tracking me now.\n\n\"Where are we going?\" I said.\n\n\"Fuckin' shut up.\" He pushed the gun harder into my side. We emerged onto a street where he stopped a tuk-tuk and pushed me inside. Keeping the gun well hidden under his coat he gave the driver an address. He kept checking the back window, but seemed to be satisfied we weren't being followed. Telling the driver to stop he pushed me out in the middle of a deserted side street. He hustled me down an alley, and I thought this was where it was going to end. Jandaeng would shoot me here and leave me dead in a grubby Bangkok alley. I steeled myself to try to jump him, but he kept the gun pressed hard into my side. He stopped and opened a door, pushing me inside. I gasped as I saw Areeya tied to a chair with duct tape around her mouth.\n\n\"Areeya, are you OK?\"\n\n\"She fine, I make her stop talking. She talk all the time.\"\n\n\"If you hurt her, I will make you pay for it.\"\n\nHe laughed and pointed the gun at my face. \"You in no position to make me pay for anything.\"\n\n\"What do you want, Jandaeng?\"\n\n\"I want my fuckin' arm back.\" He yelled, thrusting his left shoulder forward, his arm hanging uselessly by his side. \"The one you shot, you farang whore.\"\n\n\"It was an accident, I didn't shoot you. The gun dropped on the floor and went off.\"\n\n\"I don't care, it was your fault.\"\n\n\"Listen to me Jandaeng, it wasn't my fault you got caught while you were trying to kill Aki. If it wasn't for me, you would be dead. Aki was going to kill you. You owe me your life.\"\n\n\"Fuck you.\" he screamed, \"I owe you nothing. You will pay for what you did to me, and Kritsada will pay big time money for his bitch daughter. Maybe even in one piece if he pay enough.\"\n\nKeeping the gun trained on me he patted me down. He found the Palad Khik amulet Areeya had given me in my skirt pocket.\n\n\"You think this fuckin' piece of crap will protect you?\" He threw it into the corner of the room. \"Nothing will save you now. You should not have come. You should have shot me when you had the chance with that fuckin' Yakuza.\"\n\nI glanced at Areeya and she was staring wide eyed at me.\n\nJandaeng noticed and laughed. \"You didn't know? The whore had the chance to shoot me, but she couldn't do it. Good for me, bad for you both.\"\n\n\"Areeya, it wasn't like that, believe me.\"\n\n\"Shut up,\" he screamed and kicked me behind the knee, sending me sprawling to the floor to the floor. I thought a ligament had snapped because it felt like my knee had been touched with a red-hot poker. He bent down and pressed the gun to my temple. \"I have the gun now, and I am not scared to use it like you.\"\n\nI closed my eyes, waiting for him to pull the trigger.\n\n\"But no. I won't shoot you yet. You have to pay for my arm.\" He stood up and stamped on my elbow. The pain was like nothing I had ever felt, shooting up my arm and into the rest of my body. \"That's only to start with.\" I was writhing on the floor and he kicked me in the ribs, and that was worse, like a cattle prod had been stuck in my side. I was sure some of my ribs were broken. Bending down he yanked open my mouth and stuck the barrel of the gun inside.\n\n\"I would put my cock in your mouth and make you suck it like last time, but you would bite it off. So, suck on this, you whore.\"\n\nHe moved the barrel in and out and I closed my eyes, gagging on it. He stood up once more, placed his foot on my elbow and slowly increased the pressure until I was screaming with the pain.\n\n\"Now you know what my arm feels like.\" He moved around and kicked me in the ribs on the other side. I moved with this kick this time, so it didn't do as much damage, but it still hurt like hell.\n\n\"Before I am finished, you will be begging me to kill you.\"\n\nThe pain in my side and arm had subsided a little, and I knew I would have to tackle him soon. I would not lay here and have him kick me to death. As that thought went through my mind, he bent down again and cracked me across the face with the gun. I turned my head as he hit me, so it was a glancing blow but it made my ears ring and I could feel blood running down my nose.\n\nI glimpsed Areeya who seemed to be trying to break free from the duct tape that bound her to the chair.\n\nHe kicked me once more in the ribs and then aimed a kick at my head. I covered my face with my hands which seemed to enrage him, and he hit my knee with the gun butt making me scream once more, and he laughed. I couldn't take much more of this, the beating was draining my strength. I glanced at Areeya again and for a moment I thought she had loosened the tape a little.\n\nJandaeng was warming to his task and stood on my elbow once more, making me scream and writhe in agony. He kicked my ribs again, and I felt more of them snap. Another kick like that could send a rib through my heart or lungs. Time was running out fast, and I looked at Areeya for what I thought would the last time before he killed me. She had got one arm free and was tearing at the tape on her other arm. I screamed and yelled to cover up the noise of the tape ripping, and to distract Jandaeng.\n\nHe kicked me again and stood in front of me so all I could see were his shoes. \"Say goodbye to your friend, because this is where I kill you.\" He drew back his shoe and I tensed waiting for the kick that would slam into my head.\n\nInstead, I heard him say \"Fuck.\" I opened my eyes to see Areeya had freed both arms and was ripping at the tape on her legs. Jandaeng ran across to Areeya and slapped her hard across the face. She fell sideways to the floor, one leg now free of the tape. As he bent down to slap her again, something glittered in my peripheral vision, and I realised he had put his gun down while he dealt with Areeya. I tried to stretch out my hand but it was just out of reach.\n\nSummoning up all my remaining strength I tried to crawl on my belly towards the gun. I moved a few inches and then flopped down exhausted. Jandaeng slapped Areeya again and was yelling at her in Thai. He was trying to tie her to the chair, but she was fighting back, and with only one arm he was finding it difficult.\n\nThe gun was now only inches away, and I knew this would be my last chance. Gritting my teeth and ignoring the pain, I moved one, then two inches and felt the steel of the gun against my fingers. Areeya could see what I was doing, and she redoubled her efforts to fight Jandaeng. He was hitting her now to get her to stop. I knew if I didn't reach the gun this time, I wouldn't have the strength to go for it again. My fingers scrabbled to get a grip on the gun, and then I had it in my hand. Jandaeng turned around, saw me and moved back towards me.\n\nI raised the gun and as Jandaeng tried to kick it out of my hand, I pulled the trigger. The noise was deafening and the recoil from the shot knocked the gun from my hand. I thought I had lost my chance, he would shoot me now for sure. I looked up expecting to see him standing over me, but he was laying against the wall, his hands over his belly trying to stop the blood pouring through his fingers.\n\nHe was looking wide eyed at me and trying to say something. He looked disbelievingly down at the blood seeping through his hands before his head slumped onto his chest. My last thought before my eyes closed and the darkness came was that finally I had cut off the head off the snake.\n\nThey told me later Areeya had freed herself and used Jandaeng's phone to call Shane. When he arrived, he picked me up and carried me to the helicopter which took Areeya and me to the hospital. Alex and Dao rode with us while Shane stayed behind to deal with Thaksin when he too arrived.\n\nI spent a week in hospital, then another week in a wheelchair while I recuperated at Kritsada's house. Alex and Dao watched over Areeya and me like mother hens while we tried to deal with the emotional trauma we had experienced. Praew supervised our care and eventually gave Areeya the green light to go back to work.\n\nThaksin visited to take yet another statement from me. He said this one wouldn't get lost, and I was in line for a reward for what I had done. I told him to donate it to charity, I wanted no part of it.\n\nI took a little while longer to deal with the nightmares I suffered, but in time they became less frequent and I could sleep without reliving the events of that night. Areeya had picked up the Palad Khik Jandaeng had taken from me. I carry it everywhere, and it's sitting on my desk as I write this.\n\nWhich brings me neatly onto why I am writing this. As part of my therapy, Alex suggested I write down our adventures, and thus Cockatoo was born. She says I should publish the story, but I seriously doubt anyone else would find it interesting.\n\nSo, what happened to us afterwards?\n\nKritsada resigned his control of the businesses and became Non-Executive President. Areeya took over as Chairman with Dao as CEO, and Alex and I joined the Board. We sold off most of the red-light businesses, but kept Cockatoo in Bangkok and Samui for old times' sake. We reinvested in the legitimate businesses and expanded into new markets in Malaysia and Vietnam. Pao is running both Cockatoo bars, and she is doing such a great job we are making her a partner soon. A Chinese company bought the property on Samui which we had bought for the Kathoey showbar and we turned a good profit on the deal.\n\nPraew and Kritsada married in a beautiful ceremony on Samui and moved to the US where she has become a leading trauma surgeon and lectures all over the world on advanced trauma care. She uses my survival after the pirate attack as a case study. We owe her so much. Kritsada set up a Muay Thai gym in Los Angeles and already has a few promising fighters on his books. He sends me a bottle of Glendronach every birthday and New Year.\n\nI bumped into Sam at a tech conference one day in Bangkok. She was shocked to see me as Jamie, but we chatted and she was cool with it. It turned out she wasn't happy with her job with the company which had been bought out by an American tech giant. I told her I felt at a loose end and after talking a few times we decided our skill sets would complement each other, and we set up our own IT consulting company. It's gone well, even taking clients from our old firm, and we're hiring extra staff to cope with demand. Areeya doesn't mind me working with Sam. She's happy with Dao, and I think she's forgiven Sam.\n\nAlex got her Michelin star for Koh Samui Blue. She opened a new restaurant in Bangkok called Bangkok Blue, and it won't be long before it too gets a Michelin star. She's in Phuket now scouting locations for another restaurant site. Alex and I decided we couldn't run our various enterprises from Samui, so we moved our base to Bangkok. Alex still runs Koh Samui Blue though, and we all use the apartment there as a vacation home. Cockatoo 3 is still there and I've taken my Yacht Master ticket so I can take clients out by myself, but I keep an eye on any boat which gets too close. We keep a shotgun on board, just in case.\n\nDo I miss living on Samui? Yes, and no. It is still a beautiful island, and after all it's where I met Alex and Areeya and where my life changed forever. But, it harbours mixed emotions for me.\n\nShane and Nin set up their own close protection security company. I've watched her training new recruits, and any guys who think someone like her can't teach them anything have second thoughts when she has flipped them onto their back with her fist poised to smash their windpipe. Shane and Nin are not just business partners. They live together and are blissfully happy. I have, with Alex's blessing, been with them both a few times, and it's as awesome as you might imagine.\n\nAlex and I are still together. I love her more than ever and we share a penthouse apartment in Sukhumvit with Areeya and Dao. Yes, we do all get together sometimes, and it can get steamy. After a lot of soul searching, I decided to go ahead with breast implants. Praew recommended a surgeon she trusts, and my operation is next week. Alex said she wants me to get 38 DDs. I will get something more modest, but I'm still not entirely sure she was joking.\n\nWhat happened to the others?\n\nAki didn't spend long in Bang Kwang prison. He was quietly deported to Japan without even going on trial. There were rumours the Thai Government were leant on by the Japanese Government. Mysteriously, he didn't go on trial there either. The Yakuza have a long reach. The Triad leaders were deported to Hong Kong. Nobody knows what happened to them when they got there. It ended the turf war, leaving Thai crime back in the hands of the Thais.\n\nWe heard through Sam that her brother Tony, the journalist who had caused us so much trouble, had been fired from job after job because of his drinking. Despite her many attempts to help, he died one night when he smashed his car into a lamp post in Birmingham. His blood alcohol level was four times the legal limit.\n\nThaksin was promoted and now heads up the entire country's anti-corruption force; a tough job in Thailand.\n\nNancy and Joe separated, but we still do business with her company, and once or twice I've met her as Scarlett. She loves to use her strapon, and so do I.\n\nSo, that's about it. But, if you are lucky enough to visit Bangkok, find your way to the Cockatoo bar in Soi Cowboy. You might find Alex, Areeya, Pao, Shane, Nin, Dao, or Jamie there. If you're very lucky Scarlett might be in that night. If you do meet any of them, tell them Nikkie sent you.\n\nLa\u00e9w-jer-gan\n\nThe End"
    ],
    "authorname": "nikkiesilk",
    "tags": [
        "ladyboys",
        "bangkok",
        "action adventure",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/cockatoo-pt-44"
}