{
    "title": "A Ski Bunny is Born Ch. 05",
    "pages": [
        "Hi all you Ski Bunny fans! Here is the next chapter in our European tour. This one should have been entitled 'Ski Bunny does Berlin!'\n\nSorry its taken sooo long but hey, a girl's gotta have a life too! \n\nHere we go, I really hope you all enjoy it... \n\nA huge rainstorm tainted our morning arrival in Berlin, and as the train pulled into Bahnhof Zoo station the clouds seemed to just open up. We had certainly picked the wrong day to travel and had to stand in line for a taxi. As we waited we saw Erik scurrying along the sidewalk in the pouring rain, trying desperately to shelter under his backpack. We shouted and waved over to him but he didn't hear us. We didn't have our normal luggage with us and had both dressed conservatively for the day. I had chosen a simple but sexy little black dress made from a shiny jacquard print material. It was a tube style that was just above knee length and fitted snugly around my breasts and waist with no flare at all in the skirt. I had a tailored black jacket over the top and some black 3-inch heeled pumps. For lingerie I had a matching set of black satin bra, panties and garter belt along with some natural sheer glossy stockings. I had my long blonde hair scrunched up in a white pearlescent hair-grip, leaving some long wispy strands dangling seductively down at the back, and had applied a just little light make-up for the day. My nails were finished in shiny pastel pink polish, and I had some simple gold jewelry, a gold necklace and bracelet set along with some 1-inch gold hoop earnings. Kim had gone for a similar look and was wearing a pure white skirt suit over a black shiny satin top that complemented her beautifully sleek shiny hair. She had a white necklace and bracelet set and like me, had some natural sheer glossy stockings but white 3-inch heeled pumps. Stood together we looked quite formal and business-like, although in the damp morning air we had to huddle together to keep warm.\n\nThe taxi line up was full of businessmen and as we stood huddling and shivering together we felt a large overcoat being wrapped around our shoulders from behind. We immediately felt the warmth from the heavy coat as it easily wrapped around our petite bodies. We turned around to see who had done it and behind us stood a very tall and distinguished looking gentleman who then spoke something in German to us.\n\n\"Sorry, we don't speak German\" I replied softly, looking up into his eyes.\n\n\"Ah, you were cold, Ya?\" he asked.\n\n\"Actually, yes we were, thank you\" replied Kim.\n\n\"I could not let two such pretty fraulines' shiver in this unpleasant weather\" he replied in a heavy German accent.\n\n\"Thanks so much,\" I said, fluttering my eyes at him.\n\nA big grin flashed over his face and he said that it was his pleasure.\n\nWe chatted with him as we waited but soon it was our turn for a taxi. We returned his coat and he immediately drew it to his nose and inhaled our sweet scent. \"Delightful\" he said!\n\nOur taxi whisked us to the Four Seasons Hotel and we scurried inside to the reception desk with our overnight bags. We had reserved a suite but when we asked about out luggage we were greeted with a blank look. \n\n\"We did arrange for our luggage to be delivered directly to our room,\" said Kim.\n\n\"I'm sorry madam, I know nothing about it\" replied the receptionist.\n\n\"Well, can you check please\" she asked.\n\nA few calls later the receptionist came back looking a little nervous.\n\n\"I'm sorry Madam, but it appears your luggage has not yet arrived.\"\n\n\"Well where the hell is it!\" shouted Kim, getting more than a little stressed out by this time.\n\n\"We do not know,\" she replied, \"the railway station has no record of it arriving.\"\n\n\"You gotta be kidding me! What do you mean no record? We had it delivered to the station in Copenhagen to accompany us on the train journey, somebody had better find it and Fast!\" she shouted, \"tell them to go and check again.\" She was really stressed now!\n\nThe receptionist scurried away like a scalded cat to make some more calls.\n\nI was giggling at Kim's antics by this stage, as she got more and more hot and bothered by the situation.\n\nShe noticed me giggling and shouted, \"And what are you laughing at!\"\n\nAt that I giggled even more and had to grip onto the reception desk to stop from falling over.\n\nAs she watched me giggle she seemed to calm down and I saw a look of amusement sweep over her face.\n\n\"I'm glad you find it funny\" she laughed, \"what are we going to do without our luggage and clothes?\"\n\n\"We could always go shopping?\" I replied.\n\n\"Oh Nikki, what a good idea\" she exclaimed.\n\nJust then the receptionist returned, \"I'm sorry but your luggage is still on route from Copenhagen. They sent it on a later train so it will be here this afternoon,\" she said. \n\n\"Oh well, I suppose that's Ok\" said Kim, flicking back her hair \"anyway, is there any chance that you could get tickets for the concert this evening?\" she asked cheekily.\n\nThe receptionist said she would try so Kim took our suite key and we both headed off towards the elevators with the bus boys carrying our small overnight bags. As we swayed along together taking dainty little steps in our tight skirts our heels were clicking on the hard floor. My loose wisps of hair were flowing behind me as I tottered along, and we both certainly attracted many admiring glances from the men in the reception area.\n\n\"Can you feel their eyes undressing us!\" whispered Kim in my ear.\n\n\"Yeah, isn't it cool!\" I giggled.\n\nOur suite was really classy and very luxurious. It had a wonderful view out to the Friedrichstadt cathedral and was full of beautiful antique furniture and other elegant trimmings. \"Wow\" we both gasped as we went inside and saw how sumptuous it was. We had a good snoop around but were distracted when the phone rang. Kim was nearest so answered it.\n\n\"Oh that's good\" I heard her exclaim \"how much? Well, thank you so much!\"\n\nHanging up she said, \"She's managed to get some tickets for us!\"\n\n\"Awesome\" I cried \"we had better shop for something appropriate to wear, we can't go to a rock concert dressed like this!\"\n\n\"Why, what's wrong with this?\" she asked innocently.\n\n\"I guess you've never been to a rock concert before,\" I exclaimed, \"we're dressed far too business like for that. Have you ever seen how rock chicks dress?\"\n\n\"Not really,\" she replied.\n\n\"We need lots of black leather and lace!\" I replied, \"and it's got to be tight and skimpy too, they really dress to tease!\"\n\n\"Sounds perfect for us!\" she laughed, \"Lets go shopping then!\"\n\nBy now the rain had stopped so we hit the Ku'Damm shopping area on the hunt for something to wear for the evening. The shopping was fantastic, with fashions varying widely from very conservative to hard Punk, and we were both in heaven rummaging around in the many boutiques and stores. We eventually stumbled upon a store that had just what we were looking for. It specialized in leather and PVC clothing ranging from standard leather clothes up to really racy leather and PVC fashions.\n\n\"Wow, lets get one of everything!\" exclaimed Kim as we went in and saw what the store had.\n\n\"Well, that's a little extravagant isn't it?\" I giggled, \"we've got to haul it around Europe with us don't forget!\"\n\nThere was only one sales guy in the store and he certainly had an effeminate air about him, dressed in tight leather pants and a tight cap sleeved white ribbed T-shirt. When he saw us come in to the store I'm sure he thought we had wandered into the wrong place dressed the way we were. We excitedly searched through the racks for just the right thing and started to pull out stuff to try on. We soon had quite a pile of sexy leather and PVC garments. We had both been working on our figures and could squeeze into a very petite size 6, and since my many trips to the plastic surgeon I still fill out women's clothes with sexy bumps in all of the right places so was really excited about trying the stuff on.\n\n\"Can we try these?\" I asked the sales guy.\n\n\"Of course\" he said, \"use any of the fitting rooms at the back\".\n\nKim and I hurried to the back of the store, eager to try the sexy clothes.\n\nWe chose a large fitting room and eagerly started to take off our own clothes until we were both eventually down to our bra, panties, garter belt, stockings and shoes. The anticipation had my cock raging hard inside my skimpy satin panties. \n\n\"Oh Kim\" I whispered, \"I'm all aroused just at the thought of this.\"\n\n\"I can see,\" she giggled, \"and I'm all wet just looking at it!\"\n\n\"Little hussy!\" I giggled back at her.\n\nI felt her hand playfully slap my butt as she said, \"Hey, your no better, you're turning into a bit of a tart yourself!\" \n\nI turned to face her trying to compose a look of shock but she didn't give me chance as she immediately pulled my face to hers as she kissed me hard on the lips. I could taste her sweet mouth and lipstick and soon our tongues were chasing each other around. She pulled back slightly and licked gently all around my lips. The soft wet sensation was out of this world. I returned the favor and delighted in the taste of her lipstick as I slowly traced the outline of her lips with my tongue. I could feel her breasts pressing against mine, and my nipples immediately hardened at the touch. Without breaking our kiss Kim reached up and removed my hairgrip, causing my long blonde locks to tumble seductively down over my shoulders and face. The soft caress of my hair brushing against my naked skin caused me to shiver in delight.\n\n\"Oh Nikki,\" she gasped \"I wish I could feel you inside me now!\"\n\n\"Mmmm\" I agreed as I slipped one hand down inside her panties and my other hand moved up to her breasts and started to caress them. She groaned in delight as my long pink lacquered nails found her wet pussy and clit. By now her hand had slipped inside my panties and she had wrapped her delicate fingers around my hot hard cock while her other hand was gently massaging my firm breast and hard nipples. We both groaned in delight as we caressed each other but still had our lips locked together in a passionate kiss. We both realized that we really needed to start trying on some of the clothes that we had picked, so we turned to look over the huge pile of clothes we had selected, rummaging through to find the first thing to try on. We spent ages in the changing room trying on everything and by the end we had two piles of clothes, one small one that was the stuff we didn't want, and a huge pile containing everything we intended to get. \n\nWe decided to try on again the outfits that we had picked for that evening. Kim had picked a tight shiny black leather low rider mini skirt that had a studded trim on the hip band and a matching leather halter neck crop top. It revealed a lot of her belly and midriff and looked really sexy on her. I had picked a shiny black leather flared dress that had immediately caught my eye when I first spotted it. I could hear Kim wriggling around behind me as she squeezed into the tight leather skirt so I started with my risqu\u00e9 little dress. I slid it over my head and slowly slipped it down around my waist. The dress fitted really snugly, especially around my waist and breasts, just the way I liked it. The front of the dress was finished in a strapped corset style that really squeezed my breasts together to form a deep cavernous cleavage. The back of the dress was very low cut and plunged away under my arms to produce a deep but sexy low cut back, revealing lots of smooth creamy flesh. The dress also had two straps that were attached at the front, passed over my shoulders and crossed at the back before attaching at the sides. I laced up the front of the dress and could see that if I was going to wear it I would definitely have to go bra-less as my black bra could be clearly seen through the gaps in the corset style front. I pulled the dress down, unfastened my bra and let my luscious breasts swing free. I pulled the dress back over them and adjusted the straps and lacing to make sure it showed my deep cleavage. Then I smoothed the skirt down around my legs. The skirt was really quite short and just covered my stocking tops. I wriggled around until I was comfortable and glanced across at my reflection in the mirror again. 'Wow' I thought to myself 'you look hot in this little number girlfriend!'\n\nI bent forward to let my long blonde locks fall forward and then quickly flicked my hair back as I stood up again to give my delicate hair some volume. As my soft hair settled gently over my shoulders I shivered with delight again at its sensual touch. My hair now looked really glamorous, but wearing this dress the overall look was quite sluty! The only problem was my shoes and stockings. My stockings definitely needed to be black and my 3-inch heeled pumps were not raunchy enough for this outfit. As I stood admiring my reflection in the mirror I felt Kim's hand slide around my waist and felt her nuzzle gently at my neck and ear. The sensation was really nice so I leant my head to one side to let her to suck and nibble at little more at my neck.\n\n\"God, you look hot. Good enough to eat!\" she whispered.\n\nI turned to face her and saw her in her outfit for the first time. The leather skirt fit her like a second skin and the little leather top looked really raunchy. She had kept her bra on underneath but I bet she wouldn't be wearing it later tonight!\n\n\"And look at you!\" I gasped, \"but what about our shoes, we can't wear the ones we have on now, they're far to sensible for these outfits.\"\n\n\"Your right Nikki\" she replied, \"I wonder if this store also has shoes?\"\n\n\"Let's ask,\" I said.\n\nWe opened the door and walked out of the changing area into the main store. We were still the only customers and when the sales guy saw us his eyes nearly popped from his head.\n\n\"You like?\" I teased, doing a little twirl so that my skirt flared up just enough to reveal my stocking tops.\n\n\"Ya!\" he replied.\n\n\"Do you sell shoes here?\" asked Kim.\n\n\"Ya, in the back room\" he replied, \"let me show you.\"\n\nHe took us to a room at the back of the store where the shoes and boots were displayed.\n\nNow it was our turn to be in shock as the shoes and boots they sold were amazing! They had the very styles that we both loved, very high spiky heels and platforms. \n\nWell you know me, I rushed over to the shoes with the highest heels that they had! They were a pair of black platform style sandals. The platform was two and a half inches tall and the spiky heel was an awesome eight and half inches. They were called 'extreme' and certainly lived up to their name as they had the highest heels I had ever seen!\n\n\"Wow, I've just got to try these!\" I said excitedly.\n\nKim knelt in front of me and helped to unfasten the straps and slip the shoes on my smooth nylon clad feet. My delicate pink varnished toenails looked really pretty against the shiny black shoes and as soon as Kim had fastened the ankle straps I stood up. I was really eager to see how I looked in them and started to rush over to the mirror but soon started to wobble on the high platforms and huge heels. In my rush I lost my balance altogether and started to tumble, luckily the sales guy was close by and he caught me. My long blonde hair was draped all over his head, my skirt was up around my waist, revealing my sexy garter belt and stocking clad legs but more worrying my soft satin panties and the tell-tale large bulge in them. With my breasts firmly planted in his face and my soft hair strewn all over him I hoped that he had not seen my hard cock throbbing in its soft panty cell as I quickly smoothed my dress back down over my cock. The whole episode had Kim giggling like a schoolgirl on a chocolate overdose. As he helped me back to my feet his hands were all over my body, especially my butt and breasts. \n\n\"Thank you\" I said softly, fluttering my eyes at him as I regained my balance. He just grinned and nodded as I tottered away. \n\nAs I walked around and got used to the new shoes my hair tumbled softly back and forth across the naked flesh of my back, making goose bumps stand on me again. Even today the sensual feeling of that still gets me excited, and I feel sorry for guys who will never experience it. To walk safely in these shoes I really had to exaggerate my hip and butt sway. I made my way to the full-length mirror to check out how I looked. My shiny nylon clad legs looked even longer and shapelier than ever, what with the very short dress and extra high heels. My hair was a little messed up but all I really needed was some raunchy make up, nail coloring and black stockings and I was good to go. I looked so hot that my cock immediately grew harder. Jeez how I wanted to fuck myself, what an odd feeling that is!\n\n\"Oh Yes!\" I gasped \"I like these, I like these a lot!\"\n\n\"Nikki, they make your legs look so shapely,\" gushed Kim, nearly as excited as I was.\n\n\"I've just got to have them,\" I said flatly.\n\n\"Help me find some,\" said Kim.\n\n\"Do you want them as high as these\"? I asked.\n\n\"Of course!\" she laughed.\n\nKim picked up a pair of seven and a half inch heeled sandals. The platform was made from shiny silver and the straps were finished in a sparkling diamante effect. Kim sat down and I knelt before her and helped her fit them. The smell of her new leather skirt and sweet perfume smelt intoxicating and I couldn't wait to see her in them, and neither could my cock which was straining to get out of its satin panty cell by now. She still had her smooth stockings on so her feet slid effortlessly into the sexy shoes. As soon as I had fastened them she was on her feet and swaying sexily across to the mirror.\n\n\"I love then!\" she giggled \"but they would look better in black, what do you think Nikki?\"\n\n\"Your right,\" I agreed, \"with that outfit its got to be black.\"\n\nWe both spent another 30 minutes or more trying on all shapes and sizes of sexy shoes and boots. Eventually we had picked around a dozen pairs and set them to one side. Kim settled on a pair of black pumps with a really slender but spiky six-inch stiletto heel to wear with her outfit. They had no platform whatsoever and her small dainty feet were really forced into an uncomfortable looking position with the huge spiky heel. The sales guy had been helping us and on more than one occasion I caught him gawking up under my skirt. We had both noticed that he paid me a lot more attention than Kim and she said, \"Have you got another admirer Nikki?\"\n\n\"I think so Kim, he keeps looking under my skirt all of the time!\"\n\n\"He looks like a fag to me,\" giggled Kim.\n\n\"He is very effeminate, but I don't think he's gay, not the way he keeps trying to look under my skirt!\"\n\nKim and I left all of the shoes we had chosen with the sales guy and walked back to the changing room in our 3inch heeled shoes. \n\n\"Ugh, these shoes feel so boring now Kim\" I said\n\n\"Sure do Nikki\" she agreed, \"nowhere near as sexy!\"\n\n\"You got that right,\" I giggled as we went into our changing room.\n\nWe noticed that the sales guy was closing the store door as we went into our room but thought nothing of it.\n\nThe changing room door didn't have a lock, and we had just gone inside when it flew open as the sales guy came bursting in. Kim was terrified and cuddled in behind me. Even in my 3-inch heels I was still only 5 feet 8 inches tall, and this guy towered over me.\n\n\"Do you mind!\" I growled angrily, looking up at him. \n\n\"Yeah, get out,\" echoed Kim bravely from behind my back, what a hero!\n\nThankfully he was very apologetic when he realized that he had scared us.\n\n\"Sorry, but please, I must know\" he pleaded looking straight at me, \"are you a transsexual?\" \n\nBoth Kim and I were taken aback at this, and Kim snuggled back into me feeling a little more scared.\n\n\"What a question to ask a lady\" I managed to reply.\n\n\"But I have seen\" he went on \"I saw under your skirt?\"",
        "'The games up' I thought to myself. I looked at Kim who was starting to get a little braver and she just shrugged as if to say 'what the hell'.\n\n\"OK, what if I am!\" I replied defensively.\n\n\"Oh, please don't take offense\" he replied, \"I think its amazing\".\n\n\"So, what's it to you?\" I asked.\n\n\"I've always wanted to go with a transsexual,\" he whimpered like a sissy.\n\nI realized that I now had power over him.\n\n\"Oh, is that all\" I said, \"are you gay?\"\n\n\"Yes,\" he replied, \"I go both ways.\"\n\nKim gave me a look as if to say 'told you so!'\n\nHe sat on the bench like a little schoolboy and looked up to us both with begging eyes.\n\nWell, what do you think Kim?\"\n\n\"Go for it!\" she giggled, \"I'm gonna watch!\"\n\nI decided to put a little show on for him and lifted my leather skirt up and did a sexy little dance, wiggling my butt around and letting him have a good view of my stocking clad legs and my tight butt encased in my soft panties. I slowly turned around until I was facing him and he gasped out loud when he saw the large bulge in the front of my black shiny panties. I let my dress fall back down and slowly arched my back, pushing my breasts into his face while cupping my long blonde hair up on top of my head in a very seductive pose. His hand snaked down to his groin as he watched me intensely, never taking his eyes off my swinging breasts only inches from his face. I lifted the hem of my dress again and plunged my hand into my panties then slowly and erotically slipped them down to my knees to reveal my throbbing eight-inch monster. I heard him groan as he shifted his stare from my breasts to my cock.\n\n\"Do you want it?\" I teased.\n\n\"Oh, Ya\" he gasped.\n\nHe reached out forward but I quickly jumped back out of his way before he could touch me. Kim was watching intently and giggled as I dodged his grabbing hands. I carried on dancing, which caused my panties to fall to the floor. As I stepped out of them he lunged forward again and this time firmly grabbed my hard cock. I could not get away so shimmied up towards him as he pulled me forward by my cock. As I got close he quickly knelt in front of me and in one swift movement slid his head down onto my throbbing shaft. For the first time in my life I could feel the hot wet mouth of a guy on my cock and must admit it felt good. I looked down and all I could see was the soft leather material of my skirt rising and falling as he suckled on my cock. He must have been very aroused as he was not very gentle and was nibbling and biting as he moved his mouth up and down my shaft. Kim was watching intently and moved over next to me and started to gently massage my breasts. The sensations were out of this world as my sensitive breasts were softly massaged by Kim's gentle touch and a hot wet mouth was slowly milking my aching cock. I tipped my head back and groaned as Kim's mouth met mine and we started a deep and passionate kiss. As he bit and nibbled at my cock he was really starting to get a little too rough, so I had to push him off. I felt him move away from my cock and looked down to see him removing his leather pants and briefs. He was soon naked from the waist down and his little cock was also standing to attention. He laid back on the little wooden bench and I knelt down between his legs and licked the tip of his hard cock. I opened my mouth a little wider and let his cock slide into my mouth over my lipstick-coated lips. I clamped my lips firmly around the base and started to bob my head up and down, jacking him off with my lips. He was so excited as I sucked and licked that I could taste his pre-cum already. I felt Kim move in behind me and lift the material of my skirt, slip her hand between my legs and firmly grab my aching cock and start to jack me off with one hand and gently caress my stocking clad leg with her other.\n\n\"Is that good Nikki?\" I heard Kim whisper.\n\n\"Oh Yeah\" I gasped \n\nI could easily take all of his cock in my mouth in one go without any trouble so let my lips slide down the full length until my lips were buried in his pubic hair. I started to hum, as Kim did to me, and his groaning increased in intensity as I held his cock deep in my mouth and hummed away. I knew that my hot wet mouth felt just like a vibrating pussy to him. While I continued to suck and hum I started to move my mouth up and down and I could tell from his pulsating cock and the intense taste of pre-cum that he was nearing the point of no return.\n\nI let his cock slip from my mouth and decided it was time he was fucked like the sissy he wanted to be.\n\nI moved forward and knelt between his legs. My cock was now aching to get inside something hot so I pull my skirt hem up again, then forced his hairy legs wide apart and pushed forward until my cock was resting against his butt. Just for a second I felt the tip of my cock push against his tight hole, and then it opened and my slippery cock started to slide in.\n\n\"AAHH\" he cried in pain as I slid slowly into him.\n\n\"Ohhh, should I stop?\" I asked.\n\n\"Please no\" he gasped.\n\nI pressed harder and my full eight inches were soon buried as deep inside his butt as it would go.\n\nI started to slowly pump back and forth, reaming out his butt hole as I picked up the rhythm. I was soon pumping harder and harder until our flesh was slapping hard together at every stroke.\n\n\"Ya, Ya, Ya\" he shouted at every thrust. \n\nWe were in a sort of missionary position, and as leant forward to rested my hands on his strong chest my long blonde hair tumbled down over his face. He grabbed a handful of it and held it to his face, inhaling my scent from it. By now my breasts were swinging back and forth and I felt him grab one and start to roughly paw at it through the soft leather of my dress, not in a gentle like Kim or another girl would, but in a very rough and manly way. Since living as a girl I now realize how sensitive breasts are, and how rough men can be with them! Kim reached between us and took his cock in her hands and started to jack him off while I was still pounding on his butt.\n\nHe started to thrash his head around and roll his eyes and I guessed he was going to cum. I looked down just in time to see his cock start to spurt out his cum all over my dress and his own T-shirt. Kim continued to jack him off and a big spurt flew up and hit me on my breast. I watched as the white creamy liquid started to slide down the shiny black leather and drip off me and onto him. He pumped more cum onto my dress and his T-shirt until he was fully drained. I slowed down and pulled out of him. I had not cum and my cock was still throbbing hard and raring to go. As I backed away from him he just continued to lie on the bench in his post-orgasmic state, groaning and panting with his own cum all over his stomach and T-shirt.\n\n\"Wow\" I heard Kim gasp, \"He really did want fucking didn't he!\"\n\nOn hearing this he sat up, smiled, put his pants back on and walked out.\n\n\"Insensitive pig\" I remarked. \"He's finished. He's OK, but just leaves me like this? Men!\"\n\nThat set Kim off in one of her giggling fits again. I sat down on the bench and pulled the hem of my skirt up around my waist. My hard glistening cock was pointing to the ceiling and I wrapped my small delicate hands around it. My long elegant pink nails looked so sexy wrapped around my cock as I started to slowly jack myself off and rolled my head back in pleasure at the sensations. Kim came over and sat on my knee causing our soft nylon stockings to brush softly together which only heightened my pleasures even more. As she slid forward her panties eventually came to rest against my hard cock. She reached down between us and expertly pulled her panties to one side, then lifted up to impale herself on my rock hard cock. She gazed deep into my eyes as her tight pussy slowly slid down the full eight inches until she was fully impaled. When she came to a rest she started to grind her hips back and forth slowly and silently screwing herself on my hard cock. The sensations were out of this world as her hands massaged my aching breasts and her pussy muscles milked my cock with every thrust of her hips. Her deep sensual eyes still held my gaze and I sensed she was in the throes of a really quick orgasm when her eyes started to glaze over and her thrust became more forceful. By now I was ready, so I let my orgasm engulf me and soon started to pump my love juice into her sweet pussy. We kissed passionately as I filled her full of my love seed with every spurt. I was soon spent but we still didn't break our kiss as we sat for a few minutes, just kissing, running our hands through each others luscious hair and gently massaging each other breasts. We eventually broke off and both stood up. We looked down at my dress and noticed the dried cum stains on the shiny material. \"Well, I've got to change this, I can't go out tonight looking like this can I?\" I giggled.\n\nWe each spent 10 minutes getting dressed in our day clothes, reapplying our makeup, fixing our hair, and finishing off with a squirt of tantalizing perfume. We were soon looking like respectable business ladies again and not the hot, sexy tarts we had just been. We emerged from the changing room to see the sales guy still working on our purchases so we arranged to have them delivered to our hotel that afternoon. The store had a couple of young people looking around now and they all stared at Kim and I dressed as we were in such a store. We thanked the sales guy, who smiled and winked at us as we left the store. I could feel his eyes staring at my swaying butt as we walked arm in arm out of the store, we never did catch his name.\n\nWe carried on browsing the stores for a while but soon stopped for lunch and we decided to call in at one of the many street side caf\u00e9s. We sat outside in the fresh air, ordered a bottle of wine, and relaxed to watch the busy world rush by and chat about the morning. I took off my jacket as the sun was now really quite warm and felt really nice as it beamed down on my naked arms. Kim also took off her white jacket and looked delightful in her black shiny satin top. While we were waiting she took out her cigarettes and offered one to me, which I took. She leant across and lit mine, then lit hers. I inhaled enjoying the acrid taste, and blew out a cool stream of smoke. I watched as Kim did the same, and noticed her red lipstick stain on the cigarette butt as she slowly inhaled again. She looked really elegant but very sexy as she sipped her wine and sexily smoked her cigarette. This resulted in my cock rising to attention again in my panties. I knew I had to be careful, as a telltale bulge in my tight dress would probably give me away again, so I started to people watch. I noticed that so many of the young guys and girls had piercings, some in the nose, eyebrow and even chin. Many of the young girls also had their navels pierced, some had cute little buttons in them and some had large rings.\n\n\"Do you think we should get our navels pierced?\" I casually asked Kim.\n\n\"Oh I don't know, that might hurt\" she squealed.\n\n\"Chicken\" I teased.\n\n\"No I'm not!\" she replied defensively, blowing a plume of sexy smoke in my direction.\n\n\"Prove it then\" I said, \"lets get our navels pierced this afternoon!\" \n\n\"Are you kidding?\" she asked.\n\n\"No, I think it looks kinda cute.\" \n\n\"I'm not sure Nikki,\" she replied reservedly.\n\n\"See, still a chicken,\" I teased again.\n\nThat seemed to do it, but then she caught me off guard.\n\n\"Ok, if we are going to have our navel pierced I want us to get a tattoo as well.\n\nNow it was my turn to be a chicken!\n\n\"Kim, I'm not sure about a tattoo\" I replied cautiously, \"I've heard they hurt!\"\n\n\"What, do we have a chicken?\" she teased back at me.\n\n\"Ok let's go for it,\" I conceded.\n\nWe finished our cigarettes and wine and went in search of a tattooist.\n\nWe didn't need to look hard, as there were plenty around. We picked one that looked respectable and went inside. There were three tattooists working, two guys and a girl. We decided to go with the girl so went over to speak with her. We didn't speak German and she spoke broken English, but we soon managed to get across to her what we wanted. She handed us a book full of artists' work that could be translated into body art. We flipped through the pages and I quickly spotted a really sweet image. It was two pretty butterflies, one pink and one yellow that were embraced in a sort of sensual embrace with flower garlands surrounding them. It was just how I saw our relationship, two pretty butterflies entwined together as one.\n\n\"Oh! look Kim,\" I said excitedly, \"this one just reminds me of us. Two pretty butterflies entwined in a sensual embrace. I'm going to get it!\"\n\n\"Oh, that's so sweet\" she cooed cuddling in to me \"should we both have the same one?\"\n\n\"That sounds really cool,\" I replied.\n\n\"Ok, you have yours done on your left hip and I'll have mine done on my right, then we will share the same mark, what do you think?\" she asked.\n\n\"Perfect\" I replied. \n\nThat sealed it, and after a couple of hours of pain (now I know that tattoos hurt!) we were on our way back to the hotel, each with a dainty ring through our navel and a delicate pink and yellow butterfly tattoo on our hips. While I was getting my tattoo I had an interesting moment. I had to pull up my little black dress and that meant I was showing my sheer stockings and panties again. The rooms were very private, with only Kim the tattooist and myself inside, and as soon as I slipped up the dress the tattooist saw the tell tale bulge in my panties. She gave me a quizzical look up and down, then just shrugged her shoulders as if to say 'whatever' and carried on as normal. I guess working in such a place she had seen all sorts of different things and was not at all concerned, which was really cool.\n\nWhen we got back to the hotel our luggage had already arrived, along with our new clothes and shoes we had bought that morning. We rummaged through our stuff for a while then both had a shower before spending the rest of the day relaxing and getting ready for our night out. After my shower I sat naked in front of the mirror and dried my pretty long blonde hair, brushing the full length in slow gentle movements. By then it had grown to about 20 inches long and looked really pretty with the highlights, a real sun bleached blonde look. It made me really horny to watch my big breasts rising and falling and bouncing around as I moved my arms about. I watched in amazement as my nipples grew visibly hard before my eyes. I left my hair with its natural gentle waves and then slipped my soft cream-colored lace & chiffon baby-doll on. It was really very pretty with a lacy embellished bust, 3 delicate criss-cross shoulder straps on each side and an un-even hemline that just covered my groin. It had a matching chiffon over-robe and lacy tie-string panties. I slipped the cool fabric over my head and gently pulled it on. It slid easily into place and the lacy bust held my breasts firmly but gently in its soft grip. I adjusted the delicate shoulder straps and then slipped the soft chiffon over-robe up my arms, trembling with delight at its cool and delicate touch. The soft fabric slid effortlessly into place. I finally slipped into my panties, tying a pretty bow in each side around my slender waist. I slipped my feet into my house shoes, which were some pure white fluffy mules with a 4-inch heel. I applied a generous coat of shiny pink lip gloss, gathered my long blonde locks up and flicked them back behind me and was finally ready to go. I was now fully prepared for a quiet afternoon in our ladies boudoir! I took a final look in the mirror, 'Wow' I thought to myself, 'I look gorgeous' and my cock started to harden in my panties again. The gold of my new navel ring could be clearly seen glimmering through the soft chiffon material and I must admit it did look sexy. I turned sideways and looked at my new tattoo. It is only about an inch in size and still looked a little red and puffy, but I was sure it would soon settle down and look sexy too.\n\nI heard a whistle and looked around to see Kim coming out of the shower.\n\n\"Hey, cheeky!\" I laughed.\n\n\"Hot Mama!\" she teased back as she started to get ready herself.\n\nI went to wait in our dayroom while Kim finished off. I opened a bottle of wine from the mini-bar, poured two glasses and left Kim's on the table but took mine with me and walked over and opened the large veranda doors. We were on the third floor and noise from the street was not too bad so I walked out onto the balcony and leant over the steel railings to gaze down into the street. It was very busy, with people scurrying back and forth and soon had me mesmerized. I was slowly twirling my wine around in the glass and delighting as my soft blonde hair blew around in the gentle breeze although I was soon brought back to my senses when I heard a loud whistle and shout from below. I had caught the eye of a couple of guys who stopped in the street and were shouting and whistling up at me. I had forgotten that I was clad in some very sexy and revealing lingerie and must have looked a treat to them! I felt very embarrassed and quickly walked back into our room. Just as I sat on the sofa Kim came out from the bathroom, her sleek mahogany hair looked as beautiful and shiny as ever as it gently swayed and glistened in the sunlight as she walked. She was wearing her really long and luxurious black satin gown. It has a padded lacy push-up for her breasts and very delicate shoulder straps. It also has a soft chiffon shoulder-wrap just like mine, but the best thing I liked about it was the sexy high cut front opening that showed tantalizing glimpses of her beautifully tanned legs and black fluffy 4 inch heeled mules as she seductively walked over to me.\n\n\"Wow Kim, you look awesome!\" I remarked. Even without any make-up she is absolutely beautiful.\n\n\"Thanks\" she replied, looking coy and blushing a little at my compliment. She joined me on the sofa and started to slowly sip her wine. I cuddled into her and rested my head on her breasts. I could hear her heart beating and felt her hand gently start to ruffle and mess with my hair. I let my empty hand drop to her legs and gently caress her thigh through the soft satin materiel of her gown. I could hear her heart start to beat a little quicker and felt thoroughly content and happy. My cock started to stir in my panties and ended up in a sort of semi-erection, the type that leaves you with a general warm glowing feeling. I lifted my head up and placed my arm around her shoulder and cuddled her into me. She sighed with pleasure and contentment as we both sat quietly in that position for quite a while, slowly sipping our wine and listening to the bustle in the streets. There was simply no need for words as we were both so finely tuned in to each other, and just so utterly relaxed in the intimate moment.\n\nAfter a while Kim sat up and said, \"Ok, it's about time we started getting ready, we'd better do our nails.\"\n\nWe both agreed it had to be bright red polish to go with our raunchy look for that evening. I went to get our nail kit boxes and we were soon filing and polishing our long talons as we excitedly chatted about the day, the new experiences we had had shopping that morning, and about how painful our navels and hips felt!\n\nWe were soon ready for the polish and started to apply the first coat of the sexy red nail lacquer. After the first coat was dry we applied a second thick coat to get a really deep and colorful shine. As soon as that coat was dry we both applied a topcoat of clear gloss to give a perfect mirror shine. Once our nails were dry they were so shiny and smooth that you could see your reflection in the bright red polish, just how we both liked them. I wiggled my fingers and felt thrilled at how feminine and elegant they looked. The shiny red nails made my fingers look really long and delicate, especially set against my beautiful large single stone diamond solitaire engagement ring and gold wedding band.",
        "\"Let me see yours\" said Kim.\n\n\"There, what do you think\" I replied as I flashed my nails at her.\n\n\"Perfect, you're a real pro now Nikki!\" she said looking pleased.\n\nFlicking my long blonde hair back I replied saucily \"A girls gotta look her best!\" \n\n\"Oh and you do\" complimented Kim.\n\n\"Why thank you\" I replied \"and what about yours?\" \n\n\"Well, are they OK?\" she asked as she jiggled her fingers in front of me. \n\n\"Perfect as well\" I replied.\n\n\"Fix my toes for me Nikki\" Kim asked\n\n\"Sure, if you do mine?\"\n\nWe then spent a further 10 minutes pampering each other toes and applying a coat of the same bright red polish to each others toe nails.\n\n\"Hair next?\" I asked Kim when our toes had dried.\n\n\"Sure, can I do yours for you?\" she asked.\n\n\"Oh, Please\" I cooed \"you know I like that, then I'll do yours for you\"\n\n\"Deal\" she agreed.\n\n\"What style then?\" she asked.\n\n\"I'm not sure, what would go best with my little black leather dress?\"\n\n\"I think that outfit calls for big hair, \" she joked.\n\n\"Sounds perfect,\" I agreed.\n\nI sat on the floor between her legs with my back to her while she styled my hair. She spent over half an hour with our heated tongs, brushes, combs and other hair tools teasing my long sun kissed blonde locks into the style she had in mind. I couldn't see what she was doing as I didn't have a mirror to look into, but was getting more excited by the second in anticipation. When she finally finished she had used about a gallon of body mousse but the result was simply amazing. My beautiful blonde hair was teased up into the biggest bounciest and most raunchy style I had seen yet. It was so pleased.\n\n\"Oh Kim, your amazing, what a good job!\" I gushed.\n\n\"My pleasure!\" she replied giving me one of her sexy big smiles that makes my stomach flutter and knees go weak.\n\n\"I'm going to wear mine down I think,\" she said \"It'll suit my outfit more\"\n\n\"Yeah, I agree\" I replied, \"but can I finish yours off for you?\"\n\n\"Of course honey\" she replied.\n\nWe swapped places, with her sat between my legs and I started to brush her shiny hair, using heated tongs and brushes to remove all of the kinks and waves until her hair was straight and sleek looking. It didn't take me long as she had already made such a good job of it in the first place.\n\n\"There, hot to trot\" I joked.\n\nShe had a quick look in the mirror and was very happy with the result.\n\nBy now it was early evening so we decided to get dressed and to go out for a something to eat before the show. We both grabbed our outfits and shoes and went into the bedroom to get dressed. As I walked along my big hairstyle was bouncing around and it felt so sensual as wisps of my hair caressed the soft skin on my neck. Kim was swaying along in front of me and I thrilled at watching her sexy butt wriggle at every step.\n\nI had very little choices to make with my outfit, as I definitely had to go braless, so the only real decision was what panties and jewelry to wear, and what jacket over the top. I went to my luggage and picked out a pair of pure black satin and lace panties, some sheer black lacy top holdup stockings but was stuck for what jacket to wear. \n\n\"Kim, what jacket should I wear with this outfit?\"\n\n\"Hmm, let me think\" she replied \"how about a long leather coat, that way you can fasten it up if you want to?\"\n\n\"Yeah, that would work\" I agreed.\n\n\"You have yours with you?\"\n\n\"Sure do\" I replied. My long leather coat was quite special. It was made from shiny black leather just like the little dress, and had soft black fur trim around the neck that continued all of the way down the front to the hemline. It didn't have buttons, just a leather tie belt to fasten around my waist. I now only had to look for some suitable jewelry. \n\nMost of our jewelry is very glitzy and expensive so I had to find something a little more raucous that would be suitable for the show and my outfit. I dug around and found some long dangly diamond style earrings. Each earring had 4 strands of diamonds, and each strand was a huge 4-inches long. I held them to my ear and they complemented my 'big-hair' style perfectly. I then picked out a necklace and bracelet set made from large black pearlescent beads. They shimmered like real pearls so I decided that they would go well with my outfit. I was now ready to put on my make-up.\n\nKim was already working on hers so I joined her at the dressing table and started on mine. \n\nI chose a darker than normal foundation and applied it evenly all over my face and neck to give a silky smooth appearance. Then I fixed my eyebrows using a dark pencil to enhance my already thin and delicately shaped eyebrows. Next came my eyes. First of all I applied a good thick coat of sexy black eyeliner all of the way around the rims of my eyes. I then started with my eye shadow and decided to use shades of gray and charcoal to get a dark and sultry look. I started off with a light gray color in the corner of my eyes and gradually blended it with darker colors until I had a near black shade swept up at the end. I took a minute to look at the effect and was really pleased. The transformation was starting to take place and my eyes were now starting to look deep, dark and sultry, just the effect I was looking for. The last things to do on my eyes were my eyelashes. I knew that at least three coats of mascara would be needed so before applying the first coat I used my eyelash curlers to crimp and nice curl in my long lashes. I then used an eyelash comb to ensure all of my sexy lashes were fully separated before applying the first coat of sexy black mascara, making sure each lash was thoroughly coated in the thick black cosmetic. It took no time at all to dry and soon I had applied the second and third coats. As usual my already long lashes looked stunning, and as I fluttered them I could my long heavy lashes gently opening and closing. \n\nMy eyes were now complete and looked truly awesome, next was some blush, powder and then I was ready for lipstick. It just had to be crimson red to complement my nails, nothing else would do. I carefully traced a line around the outside of my lips with a dark red lip pencil and then picked my brightest red lipstick. I applied a really thick coat onto the flesh part of my soft lips. The cosmetic slid easily on and when I had finished my lips looked so big, plump and red! I did the usual blotting to remove the excess then applied a generous coat of clear lip-gloss to give them a deep shine and to prevent the color from smudging. My face was now finished and I sat back to admire my handiwork. I could not have been more pleased as the overall result was just what I had hoped for, a sultry but trashy look. 'Perfect' I thought to my self as I pouted and looked myself over in the mirror. I attached my earrings which complimented my look even more, and then slipped on my necklace and bracelet and was finally ready for my clothes. As I stood my long earrings bounced against my skin as they swayed around. They looked fabulous with my big-hair style and I knew that I was going to look extra hot tonight.\n\nKim was also nearly finished and I could see that she had also gone for a similar dark and sultry look. I walked over to get my outfit and let my chiffon over-robe slide to the floor. The smooth fabric slid softly down my arms and caused a few goose bumps to stand on my skin. I removed my baby-doll, being extra careful not to smudge my make-up and that soon joined my over-robe on the floor. I unfastened each of the tie-strings on my panties and was then stood naked. I simply had to look in the mirror as my image when fully glammed-up still excites me, even today. From the waist up I look 110% female, with a pretty face, glamorous long blonde hair, beautiful pert breasts and a slender waistline which gives way to a huge 8-inch cock and balls, before back to female again with my feminine hips and shapely, well toned legs. My cock rose to attention as I gazed at my image. 'Oh yeah!' I thought to myself, feeling really pleased I had taken this route in my life.\n\nI opened the pack of new stockings and sat on the edge of the bed to put them on. First of all I stretched the sheer material a little, being careful not cause a ladder with my long sharp nails. I rolled down the smooth nylon until only the foot was left and was then ready to slip it on. As I leant forward my long blonde curls tumbled forward gently caressing my soft skin. My cock took another hit again and continued to get harder. I pulled the stocking easily over my foot and up my leg, the cool nylon sliding easily against my smooth skin. As usual my cock got harder and harder and when I had my stocking up to thigh level and smoothed out the lacy hold-up my cock was rock hard. I did the same with my second stocking and then stood to make sure they were level. When I was happy I picked up my skimpy black satin and lace panties. I slipped my feet into the delicate material and pulled them up my legs, really enjoying the feeling of the satin and lace rubbing against the smooth nylon of my stockings. The panties were soon sat comfortably on my hips, but only just managing to cover my hard cock.\n\nNext I was ready for my sexy little black leather dress. I very carefully pulled the soft material over my head, being extra careful again not to spoil my hair or make up, and soon had it pulled into place. As soon as I had adjusted it for comfort I laced up the front causing the black material to pull tightly around my breasts and waist. I tied the lace in a bow and then readjusted my waist and hemline. This dress fit like a second skin around my waist and hips and really caused my breasts to be squeezed together and pushed up. I had a cleavage that would have challenged the Grand Canyon and with the long lace up front, every bit of it from my stomach up could be clearly seen. The hemline just covered my stocking tops, although if I moved or turned too quickly the material rose up and they were clearly visible. 'Wow, I look like a tease tonight!' I thought to myself. I applied some of my favorite 'Allure\" perfume and finally I was ready for my shoes. Naturally I was wearing the new eight and a half inch heels that I had picked that day. I took them from the box and slid the first one onto my foot. My bright red toe polish looked very sexy set against the dark nylon of my stockings and the shiny black shoes. I fastened the ankle strap and was soon ready for the second one. which again slid effortlessly on and I was soon ready to stand up in them. I got to my feet carefully, remembering my escapade from earlier, and practiced walking around in them. I was watching my reflection in the mirror and was getting so turned on it was unbelievable. As I strutted around my stocking tops were sensually swishing together, my earnings were jangling against my neck and my soft hair was caressing my skin, I was in heaven and could not have felt any more feminine. My cock was so hard inside my panties that it could nearly be seen through the ample folds in the material of my dress. Jeez how I wanted to fuck myself again!\n\nI hadn't noticed, but Kim had already finished and had been watching me for a couple of minutes. \n\n\"Wow\" was all she could say, \"WOW!\"\n\n\"You like\" I teased, doing a gentle twirl for her and giving her a glimpse of my lacy black stocking tops.\n\n\"Oh yeah, you just don't know how much!\" she panted.\n\nShe stood up and walked over to me and finally I saw her in her complete outfit. Her tight leather mini skirt and crop top looked really raunchy along with her fishnet stockings and spiky high heels. Her new navel ring was clearly visible and looked really good. She looked absolutely stunning and made me go weak at the news when she caught my stare with her dark sultry eyes and kept it as she slowly and very seductively walked over to me. I stood completely still, like a rabbit caught in headlights, as she approached me. As we met we both slowly licked and pecked at each other's lips and our hands started to explore each other's body. This had me tingling all over with excitement and anticipation and I knew Kim felt the same as when my long nails gently brushed against her naked stomach I felt her shiver with delight. My cock was aching to be touched now, but Kim knew this and one of her hands soon found its way through the folds of my dress and firmly clamped itself around my rock hard cock, as we still nibbled at each other's lips. \n\n\"Kim, well mess our makeup,\" I panted.\n\n\"So?\" she replied finally clamping hers lips firmly onto mine.\n\nOur lipstick covered lips slid together easily and the oily cosmetic made it very greasy as we played an erotic game of tongue hockey in our mouths. The passion of her kiss caused my foot to rise behind me, just like in the old movies, what a tart I am! Kim's hand was slowly milking my hard cock and I could feel my knees going weak with pleasure. I slipped my hand under her short leather skirt and quickly found her hot juicy love box encased behind her tight panties. It was her turn to feel weak at the knees as I gently and expertly massaged her clit through the soft fabric. We moved over to the bed without breaking our kiss and were soon sat facing each other and caressing each other's bodies all over with mad unbridled passion. The feeling of her stocking clad legs brushing against mine was out of this world and at that moment I was just aching to be fucked hard, just like the sluty girl I felt I was. My heart was racing under my heaving breasts, and Kim seemed to know exactly what I wanted. She got up, walked over to her bag and brought back our favorite strap-on dildo.\n\n\"You want this don't you?\" she teased.\n\n\"Mmmhh!\" was all I could reply, staring at the big pink dildo and trembling with anticipation as all I wanted was to be fucked silly by Kim with that huge dildo.\n\nShe strapped it around her waist and she looked really erotic with the large pink latex cock jutting out from under her shiny black leather skirt as she strutted back over to me. She stopped right in front of me and I took the tip of it between my smudged lipstick covered lips. She drove it back and forth and started to slowly fuck my mouth with it. My mouth was stretched so wide that I thought I would rip my skin as she slowly pushed it in and out. I wrapped my thin fingers around the remainder and helped her to fuck my mouth with it, wishing deep down that it was a real juicy cock.\n\nAfter a while she withdrew and sat on the bed. As she sat the dildo immediately pointed invitingly towards the ceiling and I just had to climb onto it! I faced away from Kim, pulled my panties down to my knees and slowly lowered my butt towards the huge bulbous end. I felt it start to push between my butt cheeks and then press against my tight butt hole but by this stage I was more than ready for it and just continued to squat down. The saliva lubricated tip slipped inside and then the main shaft started to stretch my butt wider and wider. The initial discomfort soon gave way to immense pleasure and I groaned as it slowly filled me, inch by inch, until I was finally sat firmly on top of Kim, with the dildo buried fully in my butt.\n\nI was struggling to keep my balance on the huge eight and a half inch heeled shoes but started to bounce up and down anyway, causing the soft latex dildo to drive in and out of me. I put my hands behind me and rested them on Kim's stocking clad legs as I forced myself down harder and harder onto it. Her smooth legs felt really sensual, but nowhere near as sensual as my big breasts bouncing up and down on my chest with my efforts. I was being well and truly fucked now but soon Kim commanded me lie on the bed. I did as requested and she quickly moved between my legs again. She gently pulled my legs apart and effortlessly slid the hard dildo back into me. I groaned with pleasure as it filled my butt again but then started to grunt as she drove it in and out of me, harder and harder with each thrust causing our flesh to slap hard together. I was now total oblivious to everything except that huge dildo ravaging my sweet butt and was thrashing around in complete ecstasy. My elegant nylon clad legs and sexy shoes were waving around in the air in a big V shape as she was nestled between them and relentlessly continued to fuck me with the huge dildo. \n\nI looked up to see Kim staring down at me with a big grin on her face.\n\n\"Enjoying that?\" she asked\n\n\"Shit Yeah!\" I panted.\n\nShe carried on but soon I could take no more and was ready to explode. I looked up at Kim and could see that she also was worked up into a frenzy and needed to be fucked herself, just as badly as I was.\n\n\"Ok,\" I gasped \"your turn now Kim\"\n\nShe slowed down and was son pulling out of me. She stood back and quickly pulled the dildo out of the way and while she had her skirt hiked up I yanked her panties down to her knees. Her luscious love box was right in front of me and I wasted no time in leaning forward and letting my tongue probe her pussy lips. She was so wet and juicy that as soon as my tongue pushed inside her a big trickle of pussy honey ran into my mouth so I greedily drank it down, relishing the erotic taste. She was wriggling and thrusting against my tongue and I knew she needed more than a tongue inside her so laid her on the bed and positioned myself between her legs. I pushed forward and soon my cock was nestled up against her pussy lips. \n\nI teased her for a while, pushing forward only a bit then pulling back until she could take it no more. She sat up reached behind me and grabbed my butt with both hands.\n\nShe started right at me and hissed \"Fuck Me\" at the same time as pulling me forward with all of her strength. My huge cock slid straight inside her tight pussy and was soon buried up to the hilt. She was so wet and hot that it felt like I had slid my cock into a carton of hot butter, but it felt so good. I never took my eyes off her as I slid quickly inside and her eyes rolled with ecstasy as she finally felt her juicy pussy being filled with hard cock. I was leaning right over her and our breasts were nearly touching as I started to slowly pump my cock in and out of her wet love box. Kim was now thrashing around as I fucked her slowly and deliberately with slow full thrusts. I was in such a heightened state of arousal, with my soft hair cascading down between us, my long dangly earrings bashing gently against my flesh with every thrust, my breasts swinging back and forth, our soft nylon clad legs softly brushing together, and to top it all my butt still throbbing from the fucking it had received, that I was ready to cum and had to really work hard to block it out as I knew Kim was in desperate need a good screwing. \n\nShe had orgasm after orgasm as I kept up the slow pace, letting my cock slide all of the way out before pushing it in again. I continued to fuck her for as long as I could but the sensations were more than I could take and I felt my pent up cum starting to boil.\n\n\"Here it comes,\" I panted.\n\n\"Yeah, deep inside me!\" she growled.\n\nI kissed her hard and passionately as I let my load flood inside her, filling her love box with spurt after spurt of lovely hot and sticky cum. When I had finished I stood up and Kim was still laid on the bed in her post orgasmic state.\n\n\"I wish I could have tasted some of that,\" she panted.\n\n\"We still can\" I replied.\n\nI knelt between her legs and put my mouth up to her pussy. \n\nKim shivered with pleasure as I started to probe her love box with my tongue. The aroma was pure sex, a mixture of Kim's love honey and my cum. I slipped my tongue further inside her and relished the first taste of the sweet juices. I slid my tongue in a little further and that seemed to burst the dam as a torrent of juice came flooding out straight into my open mouth. I clamped my lips around her pussy and sucked hard as it continued to pour. I could feel my mouth filing up and had to swallow one mouth full to allow it all to drain out of her and into me. Kim flexed her pussy muscles to pump it all out but soon I could tell I had it all and backed off, keeping my mouth closed to stop the yummy juices from dribbling out. Kim sat up and had a greedy look on her face as she waited in anticipation, for she knew what I had planned next. I put my slimy love juice covered lips to hers and as our mouths clamped together we both parted our lips gently. The juices flowed freely between us and we played another game of tongue hockey, but this time our tongues were in a pool of pussy honey and cum. I could feel some of it dribbling out from between our lips and down our chins as we sloppily kissed. Soon it was all gone and I pulled away from her. She had a look of contentment on her face, and dribbles of our love juice cocktail down her chin and on her leather top. I looked down and could see the same on my leather dress. A large dribble of white cum was still slowly trickling its way over my breasts. Kim leant forward and sexily licked it off for me.",
        "\"That was soooo good\" she panted, looking very flushed after having so many intense orgasms.\n\nI sat on the edge of the bed next to her and could see our reflections in the mirror opposite.\n\n\"What a mess we look!\" I giggled.\n\n\"What the hell\" she replied, \"it was worth it!\" and I just had to agree.\n\nIt took another fifteen minutes to return our hair, make-up and clothes to their former glory. We then each packed a bag with the essentials for the evening; money, tickets, make-up, perfume and smokes, and were then ready to go. I slipped my full-length black leather coat over my dress and Kim put on the leather jacket she had picked. We decided to head out for food before the show, and had planned to let the night develop after that. We left the hotel and could feel what felt like a hundred pairs of eyes following us as we carefully wiggled our way along the street in our super high heels. We felt really special with the attention we were getting and guessed this night still had a lot to offer! \n\nWe ate in a local bar and noticed that there were quite a few people dressed as if they were heading to the same concert as us. We got some wine, ordered a pizza and sat back to relax. I offered Kim a cigarette while we were waiting and we sat seductively smoking and watching the other people in the bar. A lot of the guys were dressed predictably in jeans and T-shirts brandishing the bands name and various tour dates and pictures. Many of the girls were dressed in tight leather and similar T-shirts. We noticed quite a few of the girls were also dressed quite provocatively so Kim and I did not really feel out of place. Our pizza soon turned up and we hungrily devoured it. After a few more glasses of wine we decided to head out for the stadium where the show was. We had no trouble hailing a taxi as when we stood waiting three all tried to stop for us at the same time! We climbed in the nearest and were soon on our way.\n\nWe arrived at the stadium and had to join a huge line-up to get inside. The concert was in a stadium so everybody was stood on the pitch in front of the stage. We slowly inched our way forward, through security checks, and into the stadium. It was already packed, with loud music blasting from the PA systems as the support band had their turn on stage. We soon noticed that even in our heels we were so small compared to the big German guys, so we wriggled and squirmed our way through the crowd until we got a better view of the stage. As I followed Kim through I could feel hands groping at me, grabbing my butt and breasts and pushing under my coat and rubbing my smooth nylon clad legs. It felt really erotic to have so many hands groping me all at once and when we eventually found a good spot I felt like a piece of well-squeezed fruit in a supermarket store!\n\nI leant in to Kim and shouted over the music \"I've never been groped so much in all of my life\"\n\n\"Yeah, me too!\" she grinned. \n\nWe were really squeezed in so linked arms with each other while we waited, having to shout in each other's ear to be heard above the loud music. There were a few girls around but we had managed to end up completely surrounded by a group of big tall German guys and could just to say see the stage. It soon got quite warm huddled in the crowd so we both unfastened our coats and slid them off. As soon as we had removed out coats our dress caught the attention of everybody around us. The group of guys around us was obviously together and when one of them glanced back I could see his eyes immediately look down my top and at my creamy breasts. He quickly said something to his buddies, who then all looked back and gave Kim and I the once over, undressing us with their eyes. They then turned back around and all started excitedly talking to each other.\n\n\"I think we've just been stripped naked and fucked silly!\" Kim shouted in my ear.\n\nI laughed and nodded my agreement\n\nThe guy in front of Kim turned around and shouted something in her ear. Kim shrugged her shoulders and shouted something back to him. He turned round and talked with his buddies again.\n\n\"Couldn't understand a word of it!' she shouted in my ear.\n\nAt that one of the others turned and spoke to me.\n\n\"My friend tells me you do not speak German?\"\n\n\"That's right\" I replied \"Sorry, English only.\"\n\nHe asked if we could see the stage OK.\n\n\"Not really,\" I replied.\n\n\"Please, come and stand with us?\" he asked\n\n\"Sure, why not\" I replied.\n\nI motioned to Kim that we were moving forward so she followed me as we squeezed further forward.\n\nThere were about 8 or 10 of these guys together and they shepherded us between them until we were in the middle of their group. All of these guys must have been over six feet tall and looked quite menacing in their heavy rock clothes and boots, but as soon as Kim and I fluttered our eye lashes at them they quickly turned into little puppy dogs and flashed big smiles at us. The guys right at the front moved a little to each side and suddenly we had a really good view of the stage and also had a little more room to move.\n\nOur new friend had moved through behind us and I nodded my approval and said 'Thanks' to him.\n\n\"Velcome\", he replied in his heavy German accent.\n\nOne of the other guys started to talk with Kim so we both chatted with our newfound friends for a while.\n\nIt came out that the guys were all students from a local Uni and were on a \"boy's night out\". Most of them spoke English, only a couple didn't, and after a while we had chatted, well more like shouted, with most of them! Just then the crowd erupted as the main act came on stage and everybody around us was jumping up and down with excitement. The music started and was even louder than before, it was awesome! The crowd was quickly whipped up into frenzy as track after track was pumped out. Just in front of us a girl was hoisted onto the shoulders of some guy. She had removed her top and her big breasts were bouncing around on full show. The singer spotted her and pointed her out to the other band members who all laughed. Kim and I started to dance together and were soon swept up in the whole atmosphere. As we danced in the tight crowd I could feel my butt wiggling against the guy behind me, and I could also feel his cock get a little bit harder every time my butt was thrust into him. I turned and flashed a big smile at him and just carried on. As I jigged up and down my senses were running at overload, my breasts were bouncing inside my dress causing my nipples to be hard as they gently rubbed against the soft leather, I could feel my lacy top stockings swishing together and delighted in the coarseness of the lace gently scratching my skin as I moved around, my large dangly earrings were heavy on my ears, swinging wildly and bumping against my neck, all in all I was in heaven and my cock was throbbing hard in my black satin and lace panties. While we were enjoying the show I could feel hands from all directions grabbing at my breasts and butt. I looked at Kim and could see that she had somebody's arm wrapped around her from behind with a hand firmly clamped on her breast. Rather than push it away she just carried on dancing and had a look of amusement on her face. I soon felt a hand slide around me and wrap around my breast and loved the feeling of a big strong hand on my soft breast. Kim looked across and laughed even more as we both now had our breasts fondled as we danced to the music. \"Good Huh?\" Kim shouted at me.\n\nI nodded my agreement and kept on moving with the crowd and music. \n\nThe music went on for close on two hours and through that time Kim and I must have had over a dozen hands fondling our breasts and butt as we danced along to the music. Thankfully nobody had found my throbbing cock trying to burst out from my satin and lace panties. When the music eventually ended we still had to shout at each other because of the ringing in our ears! We started to move off with the crowd and were being shepherded along by the large group of guys we had befriended. We were in the middle of the group and just had to go along in the direction they were going. We must have looked like a couple of celebrities surrounded by bodyguards as we were trapped in the center of the group and each of the guys was towering over us.\n\n\"We are going for a drink, you will you join us, Ya?\" asked a blonde guy.\n\n\"Sure, why not\" I replied feeling quite reckless after the heady mix of loud music, wine and fun.\n\n\"We're going with them for a drink Kim, Ok?\" I shouted at her.\n\n\"Sure,\" she replied, \"although it could lead to something a little more exciting than a drink!\"\n\n\"What do you mean?\" I asked.\n\n\"Well, they have more than a drink on their minds, don't you think?\" she answered, \"they really want to screw us!\"\n\n\"Jeez, all of them?\" I asked in amazement.\n\n\"Every one of them!\" she giggled \"Are you game Nikki?\"\n\n\"Shit! Why not!\" I laughed, \"I'm game if you are, but what about me? Don't forget what I've got hiding between my legs.\"\n\n\"How could I\" she replied, \"Don't worry, It'll be cool, you just wait and see\"\n\n\"Wow, there must be ten of them, are you sure?\" I replied, a little worried at the thought.\n\n\"Don't be a chicken Nikki,\" she teased, \"It'll be a blast!\"\n\n\"Well I guess?\" I replied not really knowing what she had in mind, so nodded my agreement and then linked arms with Kim as we were carried forward in the middle of the group. I had just committed myself to what was to be an amazing night. Looking at how tall they were I thought to myself 'Jeez, I wonder how big their cocks are!' \n\n\"How are your feet in those shoes?\" Kim asked, changing the subject as we walked out of the stadium.\n\nWe were having to nearly run to keep up with the guys and it was starting to tell on my poor feet, these shoes are not made for running in! \"Aching now\" I replied \"how's yours?\"\n\n\"Mine too\" she replied, \"but we must have been stood for over four hours now!\"\n\n\"Yeah, and run the last mile or two!\" I giggled.\n\nWe soon made it to a bar and were escorted to a table. The guys offered to get us a drink so Kim and I ordered some wine, then headed for the washrooms to freshen up a little while the guys headed off to the bar. The bar was really busy and as we returned we could feel lots of eyes following our every move as we wiggled across the floor to join our group. The guys had saved some space at the back of the table so we squeezed in, removed our coats, and sat close together. Our glasses of wine were waiting so we started to chat with the whole group excitedly about the night as we settled in. The conversation was a mix of German and English, although the German seemed to be used when they were talking about us, and they always seemed to look over with a look of lust on their faces. Kim and I took out our cigarettes and were immediately presented with at least six different lighters as the guys rushed to light them for us. We both lit our smokes and sexily blew out a long stream of blue acrid smoke. Over the course of the next few hours we had many glasses of wine and were soon feeling quite tipsy and as usual, very horny. We had both been flirting shamelessly all night and were reveling in the attention we were receiving. Unconsciously my hand had been resting on Kim's thigh and I was slowly caressing her smooth nylon clad legs with my long fingernails. The guy next to me had noticed this and this information seemed to be relayed to the other guys in German as they all tried to innocently watch. By this stage I was past caring and flashed a big grin at them all. That must have given them the green light because I soon felt a hand sneak gently onto my chest and start to massage my breast in plain view of the whole group. My nipples immediately hardened and could be seen as a bump in the soft leather of my dress. His fingers started to tweak at my hard nipple and I swooned with delight, gasping and letting my head fall back slightly. I felt a mouth close on my flesh and start to nibble at my neck and ears, and by now was in heaven. I glanced sideways at Kim and could see that she was locked in a deep kiss with the guy sat next to her. He has his hand inside her top and was also massaging her breasts and nipples. \n\n'This is gonna be pretty intense!' I thought to myself as I watched all of the other guys staring open mouthed and hoping to get a chance. The guy next to me moved and somebody else took his place. The new guy pulled my face around to him and pressed his lips onto mine. I felt his tongue invade my mouth and start to chase mine around. My cock was throbbing hard now but I knew I had to prevent them from finding it just yet. He was unshaven and his coarse bristle was very rough against my soft skin. As he kissed me his hand slid inside my dress and firmly clamped itself around my breast. I swooned with delight again, feeling totally vulnerable to his attentions. I could see that Kim had also changed partners, and the new guy had a hand firmly buried in her crotch. 'Lucky girl' I thought to myself.\n\nI felt a hand drop to my leg and start to slide its way up my smooth nylon clad leg, under the folds of my skirt, and up towards my hard cock. I put my hand down and shook my head, indicating 'No'. That seemed to stop him for now, but it didn't stop the tongue invasion into my mouth. Something was said in German and our partners backed off but were quickly replaced by two more. The same happened again and soon we had been kissed and fondled by all of them. My breasts and nipples had been squeezed until they were tender and I guess Kim's pussy had got a good groping too. One of the guys stood up and said something in German. It was quickly translated to us.\n\n\"Alex has some beer in his room, we are going back there to party, please join us?\"\n\nIt was now or never time. If we went back with them I knew where it would lead. The full group would fuck both Kim and me senseless with a bit of luck! 'Jeez, can we handle 10 guys' I thought, panicking a little at the thought of it.\n\nI glanced at Kim and she had a look on her face that was asking for my approval. I certainly had a little apprehension but grinned and nodded anyway, which was the response she was hoping for as a big smile quickly spread over her face, and she gave me a big sexy wink as she said \"Sure!\"\n\nWe were 100% committed now and were again shepherded by the group out of the bar and up the street. \n\nI felt more than a little apprehension, but was also very excited at the thought, which made the butterflies in my stomach do somersaults as I fought with the two emotions. I looked at Kim for some reassurance and as usual she was there for me. She squeezed my arm and said, \"don't worry honey, It'll be just fine, you'll knock 'em dead!\" and then cuddled tighter into me. Her reassurance comforted me and was just what I was looking for. She always seems to know what I'm thinking, but there again she does say that I wear my emotions on my sleeve! \n\nAs I grinned back at her I noticed that her lipstick was smudged all over her face, she looked pretty ruffled! \n\n\"Kim, you look a mess girl! I teased.\n\n\"Have you seen yourself?\" she teased back.\n\nI caught my reflection in a window and was in no better state than Kim. My lovely hair was now looking a little disheveled and my lipstick was also smudged.\n\n\"Kim, how the hell am I gonna get away with this?\" I asked.\n\n\"They're all drunk now,\" she laughed, \"you know guys, they will screw anything when they're drunk!\"\n\n\"That's true,\" I had to agree, remembering back to my former life.\n\n\"We'll put on a little show for them, and when we have they won't give a dam\" she replied, flashing me one of her big sexy smiles, \"they'll just want to fuck us both stupid! Are you Ok with this? cos' if you're not we can go now?\"\n\n\"What the hell, lets do it\" I replied.\n\nWe walked for a couple of minutes and were soon at this guy's apartment. It was kinda scruffy, a typical student dive, but did have a large, well used but comfortable looking couch in the main room. There were empty pizza boxes and beer cans strewn on the floor, which were kicked out of the way as we all went in. Kim and I made our excuses and went to the washroom together. I fixed my make-up while Kim took a pee, and then we swapped places. We were soon nearly respectable again and ready for round two.\n\n\"Lets go then, into the lions den!\" teased Kim.\n\n\"Oh Shit!\" I cried, not really knowing what to expect.\n\nWe made our way back into the room and the guys were all sitting around and drinking more beer. Kim and I took a beer and went to stand by the open window. We each lit a cigarette and I felt really aroused when Kim inhaled and blew a long stream of acrid smoke at me. She was being a little tease, as she knew the effect that it would have on me as I was enveloped in her exhaled smoke. I felt my cock throbbing inside my panties and turned my back to the guys so they wouldn't see it.\n\n\"What's the matter Nikki?\" She teased.\n\n\"You know!\" I hissed. \n\n\"Well girl, are you ready then?\" she asked.\n\n\"For what?\" I replied.\n\n\"You know!\" she teased\n\n\"Oh, what the hell, lets go for it!\" I replied.\n\nI turned to face her and we fell into a big sloppy kiss, still holding our cigarettes at arms length.\n\nWe both heard the gasp of disbelief come from the guys as we really went for it, kissing long and hard.\n\nWe broke our kiss and turned to look at the guys. They all had their tongues hanging out in amazement, just like a group of eager puppy dogs full of mischief.\n\n\"Do you want more?\" asked Kim.\n\n\"Ya, Ya, Ya!\" came the resounding response.\n\nWe both took one last smoke, before throwing our cigarettes out of the window and falling into each other's arms again. We kissed passionately and both slowly removed each other's coat, letting them slide to the floor where we stood. I felt Kim's hands find my breasts and it felt wonderful when her soft delicate hand slipped inside my dress to gently cup my breast. Her soft touch was perfect after the rough handling from earlier. I returned the favor and we both melted a little more into each other as our passions increased. We continued with the show for a few more minutes, but it must have gotten too much for one of the guys as he got up to walk over to us.\n\n\"Not yet\" said Kim quite forcefully, stopping him in his tracks.\n\nKim returned her attentions to me and slowly unfastened the lace front on my dress that attracted shouts of encouragement from the guys. As Kim seductively unlaced my dress I turned to look at the guys and gave them a huge sexy smile and wink. They were all clearly panting for it now, and were eager to join in. Kim then pulled my dress down to my waist, finally freeing my large creamy breasts. I heard gasps of disbelief as they swung free and Kim bent down to clamp her soft lips round my hard nipples. The guys were shouting encouragement, but in German, which was totally lost on us!\n\nKim soon stood up and I slowly pulled her tight little crop top over her head so her breasts were now on show. We both twisted sideways, back and forth, causing our nipples to rub together and threw our heads back in pleasure. We were putting on quite a show for the guys now and they were all slowly edging forward, wanting to get involved. I fell to my knees and in one tug, pulled Kim's short skirt to the floor, which drew even louder shouts of encouragement from the guys. She was now stood in just her fishnet stockings, black lacy panties and six-inch heels. I nuzzled my face into her crotch and could smell her musky juices. She was really aroused as her panties were soaking wet with pussy juice. I pulled her panties to one side and started to lick and suck at her wet pussy. The guys were now like a pack of baying guard dogs pulling at their chains, eager to get at us. Kim had her head rolled back in ecstasy but still indicated to the guys 'Not yet'.",
        "After a bit she pulled me back to my feet and said, \"Your turn now honey!\" \n\nShe dropped to her knees and turned me slightly to one side so my crotch was hidden from the guys. She pulled my dress down over my hips and I was then stood nearly naked, dressed only in my satin and lace panties, sexy nylons and eight and a half inch heels. She pushed her head into my crotch and I nearly fell to the floor as my knees weakened when she slipped my panties to one side and put her hot mouth onto the tip of my cock. The guys still couldn't see what she was doing and were really straining to see. With my cock still buried in her mouth she then looked up at me with her big deep eyes, gave me a sexy wink and turned us both around for the guys to see.\n\n'Here we go!' I thought to myself, 'this is where we find out how game they are!'\n\nTheir reaction was amazing. A loud shout went up in German, \"Schei\u00dfe? Nein? Mein Gott? and other such expletives that only a German would know. They clearly couldn't believe what they were seeing! Kim was now giving me a slow and sexy blowjob while I caressed my own breasts as the guys gasped and cheered.\n\nThat seemed to be the final straw and they couldn't hold back any longer and came charging over. Two of them lifted Kim up like a rag doll. I could see her looking at me and smiling as she was swiftly carried over to the couch wearing just her nylon fishnet stockings and shoes. Just then I felt at least four strong hands grab me and lift me easily into the air. I was also carried over to the sofa where I saw that Kim was already laying down with her legs spread wide and one of the guys pummeling her pussy with his hard cock. Another one had his cock buried in her mouth and she was jacking off another two guys, one with each hand, jeez what a performer she is! She had wasted no time at all and when she saw me being carried over she winked sexily at me as she went about the business of servicing the four cocks she had. \n\nI was laid on the sofa next to Kim and immediately and watched as one of the guys positioned himself between my legs and slipped my panties off my legs. He then lifted my stocking clad legs up onto his shoulders, which presented my butt to him just ready for fucking. I felt his cock push between my butt cheeks and then straight on into my butt hole. There was no finesse with this guy, he completed his penetration in one thrust, driving in hard until I was fully impaled on his throbbing member. It hurt to get such rough treatment, but as I was so aroused with anticipation that the pain only intensified the pleasure.\n\nThe other guys surrounding me wasted no time at all, and as soon as the guy fucking my butt got into his rhythm one of them straddled my chest and sat on my breasts. His hard cock was sticking out of his open pants and looked so inviting so I willingly opened my mouth and relished that taste of his hot throbbing member as I moved my head slowly down onto it, taking it as far into my mouth as it would go. The other Guys had their hands everywhere and I couldn't keep up with what was happening. A cock appeared at both sides of me so I reached up and grabbed hold of them to jack them off. My small delicate hands and shiny long red talons looked so sexy wrapped around the hard cocks that I started to groan with pleasure and feel my own cock harden even more. By now I was in ecstasy. My butt was receiving the screwing of its life, I had a cock buried firmly in my mouth, and a throbbing cock in each hand that I was jacking off, I was in heaven!\n\nI moaned more and more with the intensity of the pleasure, which seemed to do it for the guy fucking my mouth. His cock throbbed and twitched then delivered a full load of hot slimy cum right down my throat. His cock continued to erupt, slowly filling my sweet mouth with hot tasty cum. As I gulped and swallowed I looked sideways and could see that Kim was also getting a mouthful of hot cum as the guy she was blowing was gripped in a major orgasm and she was frowning as she struggled to cope with it all.\n\nThe guy filling my mouth with cum was soon finished and I did not get chance to swallow it all before one of the guys I had been jacking off replaced him. I felt his weight pinning me down by my chest and then his cock being forcefully pushed into my mouth. I opened my mouth wide to take him in and could feel the slimy un-swallowed cum that still coated my tongue and teeth dribbling out of the corners of my mouth. The guy pounding my butt was relentless and I could feel myself being pushed back and forth by the hardness of his thrusts. As I suckled on the new cock in my mouth a new guy came up beside me and presented his cock to my spare hand. I wrapped my fingers around this one and was then back where I had started, with four cocks to be serviced and milked! I felt the cock in my butt bury itself to the hilt as its hot load was squirted inside me. That guy pulled away but was soon replaced by one of the cocks I had been jacking off. This cock was bigger cock than the last one and even though my butt was already well stretched and lubricated I could feel it being fully stretched as the new guy drove himself into me and started to fuck me hard. I glanced over at Kim and noticed that she had changed position and now had all three holes filed at once, lucky girl! She was squatting down on one cock, had another firmly buried in her butt, was blowing one guy and jacking off the last one.\n\nShe looked amazing as she skillfully screwed all four guys, milking them for their ball juice. She saw me looking over and we caught each other's gaze again and I noticed her eyes soften in a big smile. We kept each other gaze for a while as we both received the fucking we deserved but soon had to turn our attentions back to the cocks invading our bodies. I saw Kim's look change as she received another spurt of cum into her mouth and her attention was then turned to her job in hand, swallowing the hot sticky load filling her mouth. I was still getting a big butt fucking and was sucking hard on the cock in my mouth and jacking off another one, just inches from my face. The cock in my butt had not delivered its load but for some reason the guy pulled out of me. I felt my legs being gently laid back down and then guy made his way around to beside my face. I reached out and took his cock in my hand and started to jack him off too. I still had three juicy cocks to go at, one pummeling my mouth and one in each hand. The guy fucking my mouth started to groan and I sensed he was going to cum. I was more than ready for another mouthful of lovely cum, but was not ready for what happened next. \n\nI tasted his pre-cum start to ooze so got ready for the cum onslaught but he quickly pulled his cock out of my mouth just as he was starting to delver his full load and jerked himself off all over my face! His buddies cheered him on as spurt after spurt of hot cum landed on my chin, lips, nose, and cheeks and even in my eyes. He must have had a gallon stored up because he ended up coating most of my face in thick gooey cum. He even managed to get a squirt or two on my lovely soft blonde hair. I managed to catch a little bit in my mouth but most of it went on my pretty face. The smell of his cum plastered all over my face was really intense and the feeling as the hot cum dribbled down my face and into my hair was yummy. When he eventually stood back up I had what felt like a cum-mask on my face. I didn't have time to move as one of the guys I was jacking off quickly replaced him. His cock was forced into my mouth and again my mouth was fucked like a pussy as he rammed his cock in and out of it. In no time at all he also pulled out and I could see him jacking himself off right in front of my cum covered face. I was still jacking off the last guy and guessed what was going to happen next so kept my mouth wide open, hoping for at least a taste of the sweet cum. Both of the guys seemed to cum at the same time and the first blasts of hot slimy cum went straight into my open mouth and covered my tongue, but that was all I got. The rest was sprayed all over my face. I could feel it hit me on the cheek, in my eye again; one squirt even went up my nose! I also felt a couple of squirts land in my pretty hair again and by the time they were both finished I guessed that I looked a real mess, a proper little cum slut! \n\nThey moved away and I looked over at Kim with my open eye and noticed that the guys were pulling out of her, having delivered their loads into her pussy, butt and mouth. She had witnessed my predicament and she was staring with her eyes wide open in disbelief, and I could see she was really eager to get over and lick the dripping cum from my face. Assoon as the guys got off her she was beside me and moved in close. \n\n\"Allow me!\" she said, and I felt her soft tongue start to lick at my face as she eagerly lapped up the sticky load deposited all over my pretty face. Her tongue worked its way all over, in my eyes, down my cheeks and over my chin until it was nearly gone. She moved quite a lot of it around with her tongue, using it like a scoop, and dropping it in my open mouth for me to share with her. The guys looked on in disbelief as Kim worked her way all around my face until I was clean again. Our lips then met and we swapped the last few lumps of cum between us.\n\nWith watching our antics the guys were getting worked up again and two of them were already ready to go and walked over with their hard cocks in their hands. As Kim and I sat on the floor kissing each other and sucking on each other's tongues they both stood over us jacking themselves off. One started to cum almost straight away and directed his blasts at our faces. Kim and I both turned to face his cock as he leant forward. The tip was only an inch or two from my mouth when the first spurt came. It hit me on my upper teeth and I could feel it slowly dribble off them and onto my tongue. The second blast was directed at Kim, which hit her square in the eye. We huddled together and took the rest on our faces as he emptied his goo filed balls all over us. He was quickly replaced by the second guy, who carried on where the first one left off, hosing down our faces with his hot cum. I got hit in the eye with another spurt, and then a second found my mouth and coated my tongue with the yummy goo. The remainder was directed at Kim, who took it all in and all around her mouth. When he was done Kim and I fell into a sloppy cummy kiss again. Kim licked my eyes clean and cleaned up the rest of my face and I returned the favor for her. \n\nWhen we were finished I moved around to sit with my back against the sofa I could feel slimy cum dribbling from my butt hole, it felt all soft and squishy as it drained out between my butt cheeks. My breasts were covered in dribbles of cum and my hair was also well sprayed, I felt so horny that my cock was ready to explode. Not one of the guys had touched it, but Kim knew I needed some relief and climbed on top of me, straddling my legs and impaling her pussy on my aching cock. The relief of her hot wet cum filed pussy wrapping itself around my cock was sensational and I groaned out loud as she slid slowly down it until it was fully inside her.\n\n\"I love you Nikki,\" she whispered as she started to drive herself up and down on it.\n\n\"Love you too hun,\" I replied, fully enjoying the sensations of our stocking clad legs swishing together with every thrust.\n\nWe carried on screwing, kissing and gazing into each other's eyes but were soon interrupted by the guys again. I saw the one with the big cock kneel behind Kim and knew he was going to fuck her butt. She was about to be in for a treat! As we kissed I could feel her tense up as he penetrated her. I could feel the huge shaft against mine as it pushed inside her through her thin pussy walls. \n\n\"Oh fuck!\" she groaned as she was filled to bursting with two monster cocks, mine in her pussy and another in her tight butt. Her face was contorted into a look of pain and pleasure as she took it, her eyes rolled and she moaned and groaned with bliss as he finally buried himself fully inside her and started to drive it in and out, pounding her butt with no mercy. Her face was being forced into mine with every thrust so we kissed hard and passionately again. I could smell and taste the cum on her lips and tongue and it tasted so horny. Her breasts were swinging hard causing our nipples to brush together which nearly did it for me. Before I had chance to think of anything else another two cocks were pushed between our faces, one from each side. We both took one in our mouths and kept each others gaze as we sucked on them. \n\nThe cock in my mouth was really quite soft, just like an uncooked sausage, and as I sucked on it the thing started to get harder and harder and bigger and bigger in my mouth. It was an amazing feeling as it went from soft and flaccid to hard and throbbing as I sucked and licked it! \n\n'Cool' I thought to myself. The whole situation had really got the better of me and I could feel my cum start to boil. Kim looked so horny with a cock buried in her mouth, our breasts and nipples were still rubbing together covered in a coating of slimy cum, our stocking clad legs were still swishing together as she received a thorough butt fucking, the creamy cum was still oozing out of my butt hole and between my butt cheeks, and to cap it all Kim's tight pussy was milking my cock for all it was worth. At that my world exploded and I closed my eyes in what felt like the most intense orgasm ever. My cock filled Kim's sweet pussy with spurt after spurt of cum, it just didn't seem to end. There was so much cum I could feel it dribbling around my cock, down over my balls and running between my butt cheeks along with the other cum. When I opened my eyes again Kim was still directly in front of me, and with the cock still buried in her mouth. As I came down from my orgasm I realized that I was still sucking on the one in my mouth and turned my attention back to it, wanting to taste some more cum. Kim caught my gaze with her deep sultry and mesmerized eyes again, and she gave me a big sexy wink. Her look changed as we both felt the cock in her butt throb as the guy fucking her butt deposited his load deep inside her and then he moved away, but both still we had to milk the cocks in our mouths. \n\nKim won the race and I saw her frown as the cock erupted in her mouth. The first spurt must have gone right down her throat, but then the guy pulled out and sprayed the last dribble onto her face. It was only a small load as he was all but completely spent by now. I felt the cock in my mouth twitch, shudder, then relished the taste of cum as it boiled out of it, flooding into my waiting mouth. I reached behind him, grabbed his butt with both hands and pulled him forward to hold it deep inside my mouth to take all he had to offer. The hot slimy fluid spurted into my waiting mouth and it felt amazing as I played with it with my tongue. He pulled out and left just Kim and I together. She knew I had a mouthful of cum and wanted some herself so we fell into our delicious cum swapping kiss again and had soon drained it all away and cleaned up each others face again. \n\nNone of the guys were ready to go again so Kim stood up, letting my now soft cock slide out of her pussy and as she stood over me a large dribble of cum cocktail oozed out of her pussy and fell onto my nylon-clad leg. Not wanting to waste a drop she bent down and licked it off for me. As we both stood up we noticed that the guys were really popped now. A couple had crashed onto the sofa totally spent, one was even snoring in a drunken sleep! but a couple of them were still watching enthusiastically and had their cocks still in their hands.\n\nAs I stood I could feel the cum dribbling out of my butt and down my legs. I looked down to see it soaking into the lacy top of my sheer black stockings. Kim looked a mess, her pretty make-up smudged all over her face, her hair all messed and also coated in squirts of cum, and her breasts were covered in the stuff, I guessed I looked no better as I had got the same hosing down with cum. We made our excuses grabbed our panties and bags and tottered into the washroom in our high heels. \n\n\"How cool was that!\" I panted as we closed the door behind us.\n\n\"The best orgy ever\" she agreed, \"Did you enjoy it Nikki?\"\n\n\"Shit Yes!\" I replied, \"I've never tasted so much cum in my entire life!\"\n\n\"Me too!\" she giggled cuddling in to me while I applied some fresh make-up.\n\nWe cleaned ourselves off, pulled on our panties and returned to the room looking a lot more presentable, but weren't ready for the sight we saw. There were now more guys in the room! Word had got around the digs, and some other student neighbors had dropped in for some sexy fun. Most of the guys were pooped from earlier, but there was still at least 6 rock hard cocks waiting for us, so being girls not to disappoint we rose to the challenge!\n\nKim was led to one side by three of them and the other three joined me. Two of my guys were new, not from the concert. I was moved down onto the floor in a kneeling doggy position and one of the guys moved in behind me. I steadied myself, ready for another butt fucking, and was not disappointed when I felt my panties being pulled down once again and a big cock slip easily inside my already lubricated butt hole. The other two guys knelt in front of me and I took the first one into my mouth. As the cock in my butt started to pound me harder and harder my face was forced deep onto the one in my mouth and I gagged as it pushed its way into my throat. The guys seemed to get the rhythms just right and as I was pushed forward by a hard trust into my butt, the guy in front pushed forward, burying his cock deep into my mouth and into my throat. His coarse pubic hairs were brushing against my lips, and my mouth and throat was being stretched so wide to accommodate it I thought my lips would tear. \n\nAfter a while I got a little used to the feeling of taking a cock into my throat and soon stopped gagging at every thrust. While getting a double fucking I glanced the other way and saw that Kim was also getting stuffed again. She had a cock in every hole and was going at it like a steam train. The cock in my mouth was pulled out and he traded places with the one who had been waiting patiently. I eagerly took his cock into my mouth, as I really wanted to taste more cum. One of the guys said something in German, and the two new guys eagerly nodded their agreement. We carried on screwing for a few minutes and my soft cock started to get hard again with the intensity of the pleasure. As I was pummeled in both ends my breasts were swing heavily on my chest, my soft hair was brushing erotically over my soft flesh, and my heavy earrings were banging against my neck. I glanced sideways and caught sight of my reflection in a mirror and Jeez was it a horny sight. I looked like a real true to life porn star! At that both of my guys pulled out for me and pushed me gently into a sitting position. Kim was moved into position beside me and we then knew what we were going to get, another hosing down with yummy cum!\n\nAll six of the guys stood in front of us and were jacking off, getting ready to cum. We were both completely willing and more than ready so sat giggling and cuddling together with our pretty mouths open wide, egging them on and just waiting for our lovely meal of ball juice. The two new guys cum first. I felt the first spurt of hot slimy liquid hit my tongue from the first guy, followed quickly by a second leaving my tongue swimming in juicy cum. The second guy had done the same to Kim but the rest of their loads were sprayed all over our faces, on our cheeks, chin and all over our lips and hair. Big dollops dribbled off my chin and landed on my breasts. The smell of the hot cum was so horny and had my own cock standing to attention again. I did not close my mouth or swallow the whole time, just keeping the yummy cum swimming around in my mouth. When these guys were done we did not have to wait long and the remaining four guys moved in. We pressed our cheeks together so our mouths were like one big opening and soon were receiving more and more jets of hot slimy cum on our tongues and faces. When all of the guys had finished we were in a real sticky mess again. I swallowed the cum in my mouth and turned to Kim. She looked awesome with cum all over her pretty face. We both eagerly licked each other clean again and soon all of the cum was gone. We had both had a real belly full of cum now, more than enough for one night, so we grabbed our gear and went back to the washroom to clean up.",
        "\"Oh Nikki, I think I've just about had enough now\" groaned Kim \"I've got a bitch of a hangover starting, My butt and pussy are sore and I feel absolutely stuffed from all that cum.\"\n\n\"I know,\" I replied, \"my butt feels like it has been stretched beyond return, how about yours?\"\n\n\"Shit Yes\" she replied, \"and then some!\"\n\nWe spent a few minutes tidying up our faces, freshening our make-up and then slipped our sexy clothes back on. We walked back in the room carrying our coats over our arms expecting the guys to be spent, but were both surprised to see three hard cocks still waiting for us. The new guys were still raring to go. \n\nWe indicated that we had had enough but they were not going to take no for an answer.\n\nWe were both pushed down onto the sofa, side by side, and quickly had a cock pushed into our faces. Kim was in the middle of saying 'no' as a cock filled her mouth and stopped her from talking. By this stage I also had a cock fully buried in my mouth. We looked at each other with a hopeless shrug and resigned ourselves to the fact that we would not get out of this room until we had exhausted every one of them, and with only three of them left there was not too much left to do. The third guy decided to fuck my butt and I felt my legs being lifted up, my panties being roughly pulled off and then a cock present itself at the entrance to my aching butt. He had his hands on my soft nylon clad legs and then drove forward quite hard causing he to gasp with pain as he slid inside me, even though I was already well fucked and fully lubricated from cum. His cock quickly buried itself in my butt and he started to pound me harder and harder. Kim and I were still gazing longingly at each other and she winked as she could tell I was getting a good hard screwing again.\n\nThe guy fucking my butt then grabbed hold of my cock and started to jack me off. He was the first guy to touch it that evening and it felt wonderful to have it caressed at the same time as getting and a good butt fucking and giving a wet blowjob. We carried on fucking for a few minutes and then I could feel my cum boiling up. There was no sense holding back so I let my load come blasting out, all over my dress and the guys' butt who was sitting on my chest with his cock in my mouth. The guy pounding my butt continued to jack me off until I was spent, then he cum himself, filling my now painful butt with more cupfuls of his slimy load. He pulled away and Kim and I were now only left with the cocks buried deep in our mouths. 'I'm sure we've been here before' I giggled to myself as we sat side-by-side sucking and slurping on the cocks invading our mouths. I had my hands on the guy's hips and was pulling him back and forth, helping him screw my sweet mouth with every thrust. My long elegant fingers, with bright red nails, looked really sexy against his hairy skin and made me feel really good inside.\n\nI looked over at Kim and she winked at me before starting to hum a little tune. I knew the effect that had, so did the same. In virtually no time at all I saw Kim start to suck harder and swallow as she was getting a load in her pretty mouth. With no warning I felt the cock in my mouth explode its load into my throat and I gagged on the enormity of it as I tried to swallow the huge load of slimy fluid. As soon as I had swallowed one mouthful another was squirted into my mouth. Both guys seemed to finish together and as Kim's backed away he quickly leant down and pulled her panties off. \n\n'What's next' I thought to myself, but the guys simply moved away to flop down in a heap on the floor. \n\nThis time we had both managed to keep our faces tidy and had swallowed everything. We stood up, still fully dressed and looked around for our panties. They should have been on the floor but were nowhere to be seen.\n\n\"Where are our panties?\" I asked.\n\n\"Souvenirs!\" replied one of the cheeky guys, holding them up in front of him.\n\nWe tried to grab them back but couldn't get them. Our sexy antics, running around the room trying to catch our panties as they were throw from guy to guy, seemed to be bringing some of them back to life and Kim said \"Shit Nikki, lets just leave them and go, my heads throbbing, I feel like shit and I don't think I could face another blowjob tonight!\"\n\n\"Yeah, me too, I'm done in\" I replied.\n\nWe didn't need to clean ourselves up so slipped our coats on and were soon ready to go, with or without our panties!\n\nWe said our goodbyes and walked out. When we left the building we immediately felt the cool night air wafting around our naked butts. As we walked along I could feel the cum still oozing from my butt. I clenched my muscles hard but they were hopelessly stretched and the cum just continued to ooze out. It trickled slowly down my leg and started to soak even more into the lacy tops of my stockings, making them feel wet on my legs.\n\n\"Kim, I'm all wet and slimy down below\" I giggled, \"my butts just oozing cum!\"\n\n\"And rightly so,\" she laughed, \"It's taken more deposits than a sperm bank tonight!\"\n\nWe both cuddled in together and laughed out loud as we tottered along in our super high heels.\n\nWe tracked down a cab and were soon whisked away and back to our hotel. Cum was still dribbling from my aching butt, and I could feel it soaking out onto the car seat. I wonder what the next customer would think when he or she sat in the wet patch? As we sat in the back of the cab I could still taste and smell the cum on my breath from our amazing evening. My hair was matted from squirts of cum and I said, \"Kim, I think I need a shower!\"\n\n\"Me too Nikki,\" she agreed.\n\nWe were soon in our hotel and walked into the elevator. A middle-aged couple joined us and I could tell that the woman did not approve of our looks and kept sneering at us. She was really snooty looking and I could see her scowling out of the corner of her eyes at us and planned to give her a treat before we left. As the elevator stopped at our floor I leant in close to her and huskily breathed \"Good Night\" so she got the full aroma of my cum scented breath. She recoiled in shock and horror, wafting her hand in front of her face and bitching to her husband in German about us. Kim and I tottered out of the elevator in a fit of giggles and were soon inside out hotel room.\n\nA nice hot shower beckoned, and we both quickly stripped off and stood for ages under a stream of hot steamy water. We soaped each other all over, loving the luxurious feel of the soapy bubbles and my cock was really quite worn out now, but still started to get hard again. Kim wrapped both of her hands around it while we gently kissed. We were both really ready for bed now and not up for any more sexy antics, so put on the nightgowns we had worn earlier and hit the sack. \n\nWe slept late next morning, and both woke with a huge hangover. We sat in bed and talked about our night of amazing sex. We both agreed it was special and would be difficult to repeat, but hey, who knows!\n\nWe decided to spend the rest of our time in Berlin with just each other and thoroughly enjoyed our time in each other's company. We did the tourist thing and went to see all of the things that you must see when in Berlin, which I must say is a simply awesome city. We shopped a lot and ended up with some really elegant clothes to compliment the trashy stuff we had bought earlier. \n\n\"A girls gotta have a dress for every occasion\" I remarked to Kim one day.\n\nShe just giggled and agreed.\n\nFrom Berlin we were at the start of our driving tour. We had rented a nice sports car. We only had enough trunk space for a small amount of luggage so only carried enough clothes for a few days and nights, and had to send our large cases via courier to the next major hotel we were due at. We spent a leisurely time driving through the German countryside, through Belgium and down into France, stopping at small hotels and just reveling in the European culture and being fully contented with each other's company. Some of my European friends may even have seen us that year. Two attractive ladies, one blonde and the other dark auburn, zipping through the back roads and down the autobahns in a shiny silver BMW ragtop?\n\nWell friends, that's it for now, hope you enjoyed it!? Please, Please, Please! let us know if you want to hear more. \n\nLove and Hugs, \n\nNikki & Kim "
    ],
    "authorname": "Nikki H",
    "tags": [
        "thick coat",
        "middle group",
        "-inch heeled",
        "laced front",
        "fluttering eyes",
        "kim shouted",
        "shoes kim",
        "hell replied",
        "seductively walked",
        "dangly earrings"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/a-ski-bunny-is-born-ch-05"
}