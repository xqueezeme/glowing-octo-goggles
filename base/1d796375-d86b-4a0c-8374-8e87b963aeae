{
    "title": "Missing You, Missing Me Ch. 07",
    "pages": [
        "The alarm went off at 6:00 a.m. and Jasmine's eyes slowly fluttered open as she stumbled for the snooze button. Successful, she rolled onto her back and stretched, flinging out an arm as she reached for April. Finding the bed empty, she propped herself up on her forearms and looked around the room. She spotted April sitting in the couch, fully dressed, in front of a low burning fire; just enough to take the chill out of the room.\n\nApril stared blindly into the fire, lost in thought. Out of the corner of her eye, she saw Jasmine walk around the end of the couch. She watched her as she sank down beside her on the couch, curling her legs under her. Jasmine snuggled into the crock of April's arm and tilted her head back, nervousness creeping in when the serious expression on April's face didn't change.\n\n\"Penny for your thoughts, cher.\"\n\nApril sighed and rested her forehead against Jasmine's, just enjoying the feel of her in her arms, saying nothing.\n\n\"Are you worried about tonight?\"\n\n\"Um hum.\"\n\nJasmine leaned back so she could see April's face. \"What's the matter, April? I thought we had everything planned out.\"\n\n\"Um hum.\" April wanted to just treasure this moment, sitting here holding Jasmine in her arms; wanted to hold on just a little longer.\n\nThey sat in silence for a few moments before Jasmine's impatience, and worry, won out.\n\n\"April, talk to me,\" Jasmine pleaded.\n\nApril pulled her head back. It was now or never. \"Angel, please don't be mad at me, but we can't go as a couple tonight. In fact, you can't even acknowledge that you know me at all.\"\n\nJasmine just stared at her for a few minutes, eyes blinking, before she found her voice. \"What? Why? Honey, I don't understand.\"\n\nApril sucked in a breath. \"I've been up all night thinking.\"\n\n\"Didn't you go to bed last night?\"\n\n\"No. Now hold on, angel, hear me out. I've been thinking. I'm afraid Lonna won't take the bait tonight, at least not from John, like we originally planned. I think Lonna's too sharp for that. I've got a backup plan that I've been thinking through all night, but it won't work if I walk in there tonight with you. The minute I do, the whole room will know exactly who I am.\"\n\n\"April, they already do.\"\n\n\"No, they don't. They know of me, but nobody's met me yet. They're going to be looking for whomever you walk in with, and I want you to walk in with your uncle and Mama, and stick to them like glue tonight. No matter what you see, what you hear, do NOT acknowledge me. Just act like I'm just another face in the crowd.\" April gave Jasmine a long look. \"Can you do that for me, angel?\"\n\nJasmine nodded.\n\nApril planted a kiss to her forehead. \"Just trust me, Jasmine. I know you're confused; that none of this makes sense to you, but it's our only chance. If Jade doesn't walk out of there with us tonight, we might never get her back, and I, for one, can't live with that.\"\n\n\"April...\"\n\nShe laid a finger to Jasmine's lips. \"Shush baby. I know, I know.\" She forced herself to pry herself away from Jasmine and stood up. \"Now, you have to go to work, and I've got some errands to run. We won't see each other again until the party.\" April walked around the back of the couch, heading for the closet to get her costume for tonight. She hesitated for a minute, a few feet away from the couch, then turned around and walked back. Leaning over the back of the couch, she buried a hand in Jasmine's hair, angling her head up, and gave her a deep, passionate kiss. \"After tonight, angel, it'll be you and me, together forever. We'll be a family, with Jade and John right beside us. Whatever happens tonight, remember that.\" April sauntered off to the closet, grabbed her Zorro costume, and strode out the bedroom door; she had too many appointments and not enough time.\n\n##\n\nAt 8:00 p.m., Halloween night, a black stretch limo pulled up in front of The Magnolia, one of New Orleans oldest, most prestigious, country clubs. The driver parked, leapt out, and opened the back door. Two women emerged; the first was dressed in a pin stripe suit complete with vest, a black pair of men's dress shoes, a red handkerchief tucked into the front breast pocket of the suite, and a black fedora. Stepping out, she turned back towards the limo and reached out a hand. Those standing nearby only saw one slim, bronze hand as it accepted the first woman's. \n\nSlowly, a slim, gorgeous, raven-haired beauty emerged from the limo. People stared as multiple layers of tiered fringe, which made up the red flapper's dress, swayed with the woman's movements while the dressed hugged every curve. It was held up by the thinnest pair of spaghetti straps and she wore matching red gloves which ran up her arms, past her elbows, and ended halfway up her upper arms. The headpiece was just a thin red band that encircled her head, stretching across her forehead, and a little red feather stuck up on one side, her hair hung straight and long down her back. Her mascara was dark and thick, her lips ruby red, and the whole costume was set off with a pair of red pumps with stiletto heels, adding at least three inches to an already tall body. \n\nThe woman dressed as a 1920's gangster, went to great pains to make sure everyone saw her and the incredible woman accompanying her. She barely contained her smirk as she saw men staring, their eyes bulging out of their heads, as they walked past them down the red carpet that snaked it's way into the grand ballroom. \n\nInside, Lonna made a show of pulling out a chair for Jade. As she pushed it in, she leaned down to whisper in her ear.\n\n\"Oh look, darling! Your family is sitting at the very next table. How convenient.\"\n\nJade tried not to wince, Lonna's voice both smug and condescending. She'd already been given strict orders not to attempt to talk to her family; in fact, Lonna wanted her to make a show of snubbing them. She'd threatened retribution, once they got home tonight, if she didn't do exactly what she was told, but it was killing her, sitting only a few feet away from Jasmine, who looked amazing dressed as a Spanish Countess. Jade could see her out of the corner of her eye, knew Lonna had seated her here just for that purpose, and she wanted to cry as she fought the urge to run over and hug her sister.\n\nTheir uncle sat to Jasmine's left, going the safe route with an old fashioned Dracula costume, the same one he wore every year. Mama Dubois sat on the other side of Jasmine. She wasn't really wearing a costume, just decked out as if she was going to some swank jazz club. Jade continued to scan the table, without actually looking at it, searching for April. No one else at the table even remotely resembled her, and Jade felt a moment of panic thinking April wasn't here, and wasn't coming. She had just been so sure that April would use tonight's event to her advantage.\n\nLonna sat down beside her and gave the Dupree's table her most sincere smile. Jade wondered if she realized how smug she looked. Knowing Lonna, she did, and had done it on purpose. Jade had come to know Lonna well enough to realize the woman's every move was thoroughly calculated; to her advantage.\n\nIt was too painful to see her family and not be able to talk to them, so she twisted a little in her chair, towards Lonna. This gave her back to her family, which Lonna took as a public snub and grinned her approval, but Jade had done it out of a sense of self-preservation. She had to survive tonight's party, and silently prayed that April really would rescue her. She just couldn't take living with Lonna, practically in captivity, much longer.\n\nJasmine's eyes darted from Lonna's smarmy face to the back of her sister's head. When Jade had walked in, it took everything she had not to jump up and run over to her, but April's words from this morning kept ringing in her head, 'We'll be a family'. After tonight, they'll all be together, she just had to keep calm and play along, just for this one night.\n\nShe felt Mama lay a reassuring hand on her arm. Jasmine covered it with her own and turned towards her, returning the smile. On her other side, she could hear Uncle John grinding his teeth together, the one sure sign that told her that he was barely able to keep his temper in check. For some reason, she found it more reassuring than Mama's efforts, and felt her insides calm down a little. She started scanning the room for Zorro's. To her dismay, there were quite a few of them tonight, more so than any other past party, that she could remember. Jasmine shook her head at the odd though. Lord, she was so nervous she had resorted to counting costumes!\n\nAcross the room, two particular Zorro's were whispering back and forth to each other while they drifted around the buffet, trying to pretend they didn't already know each other. A third stood somewhere in between, smiling into her cup of punch as she listen to the other two trying to play super spy. Bowing her head to take a sip, she whispered into the minuscule microphone clipped inside the neck of her cape.\n\n\"Sit tight a little longer, John, maybe another half hour, twenty minutes, then go over. I can see the bitch's smug smile clear over here, so she's really enjoying the show at the moment. Let her eat it up a little longer before you strike up a conversation.\"\n\nApril heard John's whispered, \"Ok,\" in her earpiece. Taking her time, she turned away from the buffet table and started to meander towards the two tables. \"Pipe down,\" she ordered Trina and Sam as she walked past. The two lovers' conversation was starting to increase in volume, and she was afraid someone would soon notice their bickering and realize they were together.\n\nThey instantly shut up at her command and she shook her head, chuckling. Nearing the tables where Lonna, Jade, and the rest of the Duprees sat, she quickly grew serious as she concentrated on the business at hand. She stopped at the table in front of Lonna and Jade's, at the farthest end away from them, and struck up a conversation with the middle aged couple occupying the chairs closet to her. She had no idea who they were, but it didn't matter. This was the kind of event that was chocked full of the upperly mobile types, who would rather die before they ignored a stranger, just incase it was someone really important.\n\nThe wife was something of a chatterbox, which suited April's needs just fine. This way, she could watch the tables she needed, without having to put too much concentration into the conversation, just nod her head and agree at all the key points. Minutes later, she watched John get up from the table and walk towards Lonna. Glancing at her watch she noted that it was exactly twenty minutes from when she last spoke to him. He must have sat there and timed it.\n\nAs he came around the edge of the table, farthest from Jade and closer to her, she watched Lonna stand up and intercept him. She was being careful not to let John get too close to Jade, but thankfully they stood off to the side just enough to not block her view of Jade. She glanced briefly at Jasmine, watched for a moment, then tried not to smile when she realized Jasmine was scrutinizing every person in the room dressed as Zorro. The fact that Jasmine was looking for her gave her a warm feeling. Yeah, she was really getting used to this partners thing.\n\nShe and John were wired with the same equipment, so she could easily hear his conversation with Lonna. John was trying to play it casual, \"Oh, Lonna, nice to see you again. It's been so long. How are you?\" He was doing a good job of it. April almost couldn't tell that he was fighting the urge to knock Lonna on her ass, and she knew John to be the last man on the planet to ever hit a woman. Well, she was hoping one of them would get that treat later tonight.\n\nApril nodded at the woman she was chatting with, noting that Lonna was playing right along with John, but she could tell Lonna wasn't buying any of it, not for a minute. This was what she had been afraid of. Lonna was too sharp to fall for something so simple, but April hadn't realized it until after the party invitation had already been mailed out. It was ok though; this would work in their favor because now, Lonna would think this was it. The Dupree's had played their hand, they failed, and she'd spend the rest of the night smug and happy in the fact that they hadn't been able to trick her into confessing anything. Actually, everything was working amazingly well for such a last ditch, spur of the moment plan.\n\nShe heard John turning the conversation towards her relationship with Jade and was now actively trying to trip Lonna up, trying to get her to admit that she was blackmailing Jade and had set this whole thing up from day one. April had to give him an A for effort, but could tell it wasn't working. Lonna was easily deflecting his attempts, steering the conversation away, onto other topics. April took that as her cue.\n\nSaying goodbye to the couple she was chatting with, she walked past Lonna and John to one of several mini bars that were scattered around the room. She ordered a Jack with ginger ale for herself, and tequila with orange juice. Staying close to the wall, she walked back towards Jade's table; careful to make sure she was behind Lonna, who was facing John and the rest of the ballroom. Lonna was too busy enjoying her little war of words with John, to notice her as she slid into the chair beside Jade.\n\nJade glanced up as she felt someone beside her. She looked up just as a woman in a Zorro outfit placed a mixed drink in front of her and slid into the chair.\n\n\"You're way too beautiful to be sitting her all alone.\" April gave Jade her best smile and she saw her eyes widen in recognition at the sound of her voice.\n\n\"You've never seen me before,\" April whispered under her breath. Jade gave her a small nod, moving her head just enough to acknowledge she heard her, but not enough for anyone else to really notice.\n\n\"Thank you, for the drink. What is it?\"\n\n\"Tequila and orange juice. You know, if you drink enough of those, they start to taste like Tootsie Rolls.\"\n\nJade laughed and April smiled, putting on the charm, which really wasn't all that hard. If Jasmine really hadn't been interested in her, she probably would have stayed with Jade. The two of them had always found it so easy, and fun, to flirt with each other, so this would be cake.\n\nJade sipped her drink and studied April, looking her over as if she was a new, interesting prospect. \"Mmmm. This is really good.\" Jade took another sip. \"I have to tell you, I'm not here alone.\"\n\nApril made a show of looking around at all the empty seats at the table, then turned back to Jade and then arched a brow. \"Who are you with? The Invisible Man?\" she quipped.\n\nJade laughed and waved a hand towards Lonna. \"No. And I'm with a woman.\"\n\n\"Well,\" April drawled, \"that answers that question.\"\n\n\"Which was?\"\n\n\"Wither or not you're into women. Walking over here, I was praying pretty hard, hoping you wouldn't turn out to be straight.\"\n\n\"What if I was?\"\n\nApril gave her a wicked grin. \"I'd work it like a tent evangelist and try like hell to cure you.\"\n\nJade's burst of laughter had Lonna whipping around. \"Who the hell are you?\" she snapped.\n\n\"The woman taking your neglected date for a dance.\" April stared Lonna down as she grabbed Jade's hand and lead her towards the dance floor, mentally taking a snap shot of Lonna's shocked face as she took off with her date. That would be a Kodak moment to treasure.\n\nThey reached the dance floor just as the band struck up a nice slow song. She turned around to face Jade and pulled her into her arms. The two of them glided around the floor in silence.\n\n\"Lonna's madder than a wet hen,\" Jade whispered in her ear. \"You better damn well know what you're doing, April, or I'm going to pay for it later.\"\n\nApril tighten her hold on Jade, the thought of Lonna hurting her making her stomach clench. \"Just play along, act like you're enjoying all of the attention, and I promise, you're walking out of here with me before the night's over.\"\n\nThe conviction in April's voice strengthened her own resolve, and Jade let herself enjoy the feel of being in the arms of someone who cared for her. Seconds later, she felt April's hand slide down, dangerously close to cupping her ass. She glanced back at Lonna as they turned, saw the rage on her face, and sent up a silent prayer.\n\nThe song ended a few minutes later and Jade started to step away, but April pulled her right back into her arms for another dance, the band switching to some Latin music. Expertly, she spun Jade around the floor, people stepping back out of their way. An audience was gathering to watch them and April was trying hard not to check for Lonna's reaction. This worked only if Lonna thought she wasn't paying her any mind, acted as if she didn't even exist.\n\nThe song ended and the crowd began to applaud as April dipped Jade one last time. Swinging Jade back up, onto her feet, she bowed to the crowd, and then led Jade to the mini-bar farthest from Lonna. She ordered two drinks and turned her attention to Jade. \n\n\"Ready?\"\n\nJade narrowed her eyes. \"For what?\"\n\n\"Well, darling, the show, of course,\" April answered with a smile.\n\nIt was the wicked gleam in April's eyes that was making Jade nervous, or excited, she wasn't sure which. The thought of getting away from Lonna, for good, was a joyous thought, but the consequences if April's plan, whatever it was, failed, was something she didn't want to linger on. Her smile faded and she grew solemn as she stared down at her drink. \n\n\"April...\"\n\nApril cut her off. \"No, Jade, there's only one way this will end. You, Jasmine, and I are walking out of here together. Then we'll go home, sit on the porch and have a few shots of tequila. From now on, we're family, and we stay together.\" Jade's fear wasn't lost on her, and she could tell her words didn't go far in the way of reassuring her. Leaning over, she pressed a kiss to her temple and, grabbing her hand, walked with her towards a deserted table.\n\n\"Now, we're going to sit here and talk, share a few laughs, just relax. When I think Lonna's good and mad, we'll go back over and finish this.\" April laid a hand against Jade's cheek, cupping her face and guiding her head up so she could look her in the eye.\n\n\"Do you trust me?\"\n\n\"Yes,\" Jade whispered.\n\n\"Do you want to go home?\"\n\n\"Yes,\" Jade answered vehemently.\n\n\"Then stop worrying and ride with it, baby. I know you know how to do that.\" April's grin was wicked and she felt relief flood through her when Jade returned the grin with a sheepish one of her own.\n\n\"Jasmine's not too happy.\" Jade nodded towards Jasmine's table. Following her gaze, April's eyes quickly found Jasmine and could tell she was fighting to control her temper and tried not to stare at the two of them, sitting cozily at a corner table. Jasmine's gaze flicked to them and their eyes locked for a split second. It was just enough for April to hear her own breath quicken, feel her heart speed up. She cared for Jade, a great deal, but there was only one woman who made her go from 0 to 60 with just a look. \n\n\"Jasmine will make me pay for this later,\" she thought, and then smiled as memories of their lovemaking played through her mind.\n\n\"Penny for your thoughts, cher,\" Jade quietly asked. April looked over to find deep blue eyes watching her every move. Jade was so beautiful, it was hard to imagine that she'd been so lonely that she'd fallen in with a viper like Lonna.\n\n\"What in heaven's name where you doing with this bitch in the first place? Don't tell me women weren't lined up at your door to go out with you?\"\n\nJade smiled weakly and went back to staring into her glass, \"sad and lonely\" written all over her face. \"They weren't, lined up at my door, that is. Jasmine and I, our family, have quite a reputation in this town, and a scandalous past that every single soul knows about. Women are either afraid that we're both a mental and emotional mess, because of our parents, and don't want to get tangled up in all that, or their afraid of our money, or interested in us just because of it.\"",
        "Jade inhaled deeply, slowly exhaled, and then looked up to face April. \"I guess that's why we fought over you. For the first time, there was this beautiful woman who wasn't afraid of us, or interested in cashing in on the Dupree name. Yes, I seduced you when you first came here. I thought it would be a fun, and convenient, way to keep tabs on you and the progress of your investigation. I was so use to all of my relationships being just about sex; I didn't expect...\" her voice trailed off. April waited a few moments, but she didn't continue.\n\nShe chuckled. \"I sure as hell didn't expect you and your sister, either, but here we are. And I think the real reason there isn't a line at your door is because you and Jasmine are intimidating as hell. Both wild, fiercely independent, and tempers that should require you both to wear warning labels.\" April laughed at her own comment, saw Jade's face transform into a genuine smile, and continued. \"I mean, face it Jade, you two are a hell of a hand full. I think most women around here just didn't think they could hold on for the ride. They were probably afraid you'd trample them, and you would have, both of you would have, have even, I'll bet.\"\n\nApril leaned towards Jade. Anyone watching would probably think she was asking about to whisper sweet nothings in her ear. \"I'll let you in on a little secret, my friend,\" she patted Jade on the knee under the table, \"I'm not that strong. Matter of fact, you and your sister scare the hell out of me, every single day.\" She sat back in her chair. \"No, honey, I'm with you two because I'm too crazy, or maybe too stupid, there's a thin line between the two, to know when to run like hell.\"\n\nJade burst out laughing and several heads swiveled their way, but neither one of them noticed. They talked a little longer and April soaked up every minute. She started envisioning what it would be like, once Jade was back home, the three of them hanging out, shopping together, sharing their lives together, and it made her smile. For the first time in a very long time, she had a family again. \n\nShe glanced over at Lonna's table and decided it was time to wrap things up. Tucking her Hallmark images into the back of her mind, she stood up and offered Jade her hand.\n\n\"Let's get this show on the road, shall we?\"\n\nJade looked up into April's dark brown eyes, her smiling face, and felt momentarily jealous of her sister's good luck. Then again, maybe she was lucky too, in a different kind of way. Returning April's smile, she accepted her hand and stood, then let April guide her back to the table she was sharing earlier with Lonna.\n\nAs they neared the table, April could tell Lonna was spoiling for a fight. They were inches from the table when Lonna stood up, grabbed Jade's arm and pushed her into a chair, then turned on April.\n\n\"I hope you enjoyed yourself,\" she snarled, \"because it's over. If we weren't in public, I'd stomp you into the ground.\"\n\nApril just smiled and casually reached out to smooth the lapels of Lonna's suite. \"Relax, lady. No need to get your panties in a bunch.\" She considered Lonna for a minute. \"Well, maybe there is, because the lady is leaving with me. You obviously are too stupid to know what to do with her, or she wouldn't have been so eager for my attention.\"\n\nIt was really satisfying to watch Lonna's face turn beet red as she glowered at her. \"Why you little shit! Do you know whom you're dealing with? I can ruin you with the snap of my fingers! Who the hell are you, anyway?\"\n\n\"Ruin me, huh? I find that extremely doubtful,\" April answered with a cocky grin. She could tell Lonna wasn't use to anyone being insolent with her, amused even, and April happily listened as Lonna started to sputter.\n\n\"You...You...\"\n\n\"Bitch?\" April helpfully offered. \"Yeah, I get that a lot. So much so, it's probably true. Looks like you met your match, sugar.\"\n\nLonna's eyes were beginning to go red with rage. If they weren't in the middle of a party, she'd probably attack her. \n\nApril folded her arms across her chest, bent one arm at the elbow and rested her chin in the palm so she could tap a finger against her lips. \"I'm curious though, who exactly YOU think you are, that you've got the power to ruin me. Wait, let me guess, you're the DA's wife, right?\"\n\nShe made a show of looking around the ballroom, found the DA and his wife seated several tables away, and then she pointed to them. \"No, that's not right, because she's right there with her husband.\"\n\nAt this point, Lonna was vibrating with anger. \"I'm the woman who can crush Dupree Enterprises with a single phone call.\"\n\n\"Ewwwww. That's impressive, but I don't think there's anyone to answer that call.\"\n\n\"What? You think I'm bluffing?\"\n\n\"As a matter of fact...\"\n\nLonna was now standing toe to toe with April, literally nose to nose. \"One phone call, and this little bitch you're so hot for, goes straight to jail for embezzlement, and when they investigate, they'll find Dupree Enterprises is wiped out; completely bankrupt.\"\n\nJasmine had been keenly watching the argument, listening in. When she heard Lonna's last comment, though, her head snapped towards her uncle, but he looked as surprised as she was.\n\nApril noticed Jasmine and John's reaction, which spoke volumes, and decided she needed to bait Lonna a little longer. \"Completely bankrupt?\"\n\nLonna became smug, nodded in the affirmative. \"You see, while Jade was sitting here, leading you on, she had a hacker sneak into the company's system and transfer their funds to her Swiss bank account.\"\n\n\"Hmmm. Well, seeing that you know so much about it, wouldn't that makes you an accomplice?\"\n\n\"Oh no. I'm the poor, duped girlfriend who just happened to stumble onto Jade's scheme.\" Lonna laid a hand against her chest. \"And as an upstanding citizen, I quickly reported it to the authorities. Jade will be arrested within the hour. In fact, they might mistake YOU for an accomplice.\"\n\n\"Bingo!\" was all April could think. She raised her hand into the air and seemed to wave someone over. All heads turned to face the same direction she was looking in. Three men emerged from the kitchen area, two of them in dark suits flanking a third man dressed in jeans and a t-shirt, his face sullen, hands cuffed in front of him.\n\nAs they approached, April watched all color drain from Lonna's face. She turned to bolt, but April grabbed her arm and kicked a knee out from under her. Lonna would have fell, but April yanked her back onto her feet and, with a tight hold on one of Lonna's hands, pulled her to stand in front of her while she twisted Lonna's arm behind her back, effectively holding her in place.\n\nThe three men stepped up to them. \"Lonna, I'd like you to meet Special Agent Tom Lucas of the FBI. I'm not sure who his friend is, the other suite, but I know I don't have to introduce you to Ralph here.\" April nodded towards the man in handcuffs.\n\n\"In fact, I believe you two are old friends, of sorts. Well, you were, anyway. I suppose that's all over now.\" April pressed up against Lonna's back and spoke into her ear. \"You see, Ralph and I spent the morning together, discussing his outstanding warrants. Deep down, he's a really swell guy, so I helped him out and hooked him up with Agent Lucas. See, Tom and I go back a ways, and since he owed me a favor,\" April shot Tom a smile, which he returned, \"he was happy to drive down to Baton Rouge and listen to Ralph's story.\"\n\n\"It's pretty sad, actually. It seems he got seduced by this older woman, who promised him the sun and moon, if he just did a few favors for her, like siphon some funds from Dupree Enterprises and make it look like Jade did the whole thing. Ralph's really, really good with computers, so it wasn't all that hard, but he was really upset this morning when I told him you really hate guys and planned on taking off with another woman, that you've been fucking another woman this whole time, while you told him he had to wait for it.\"\n\n\"Tusk, tusk, Lonna. Don't you know guys hate to be dumped for another woman? Anyway, once I explained the situation, showed him photos of you banging one of your waitresses behind the club the other night, he got kind of vengeful. Of course, I was more than happy to help him with that and, as a bonus, get him immunity for spilling his guts about your plan.\"\n\nJasmine rounded the table, fire in her eyes directed at April. \"Why the hell did you wait this long? We could have had this bitch arrested the minute she got here.\"\n\nApril met Jasmine's glare. \"Because. This way, we get a confession, of sorts, and a guarantee that Lonna Tassin will never darken the Dupree's doorstep ever again.\"\n\nAgent Lucas pulled a small tape recorder out of his pocket and played back the last few minutes of April and Lonna's conversation. \"I think,\" he said, \"that the jury will be pretty interested in hearing Ms. Tassin explain how she knew all about the depletion of Dupree Enterprise's funds. Which, by the way, never actually occurred, since our friend here,\" Tom gave Ralph's arm a little tug, \"decided to come forward this morning.\"\n\nApril looked at Tom, who was standing directly in front of Lonna. \"Want to take this one off my hands too?\"\n\n\"With pleasure.\" Tom stepped forwarded, walked behind Lonna, and promptly cuffed her. He pushed her forward and all four of them, Tom with Lonna and the other agent holding Ralph, began to walk away. Tom stopped and looked back.\n\n\"Pleasure doing business with you, April, as always.\"\n\nApril smiled and waved as the FBI agent marched a very disgruntled Lonna out the front door. She turned towards Jasmine, who was staring at her sister. Jade was staring back, a death grip on the back of the chair she was sitting in. Neither of them spoke, and John and Mama seemed reluctant to step between them, or break the silence.\n\n\"Kiss and make up already,\" April said, her voice a mix of impatience and amusement.\n\nSuddenly, Jade launched herself out of the chair and straight into Jasmine's open arms. The two sisters held on tight to each other, crying. John rushed over and wrapped his arms around both of them. Mama stood beside the table, wiping tears from her eyes with a linen napkin.\n\nApril stood back and watched, happy to see the Dupree family reunited. Jasmine jerked away from her family and turned towards April.\n\n\"Don't you dare!\"\n\n\"What?\"\n\n\"The last time the three of us got caught up in a family moment, you disappeared.\"\n\nApril walked towards Jasmine, pulling her hat and mask off as she went. Once she was standing directly in front of Jasmine, she framed her face with her hands and pulled her in for a deep kiss. Long minutes passed as she dipped her tongue between Jasmine's soft lips, their tongues tangling together. Finally, April pulled her head back and stared in Jasmine's eyes.\n\n\"No such luck, this time. You're stuck with me, angel.\"\n\nJasmine threw her arms around April and hugged her for all she was worth. April glanced up to see John and Jade grinning at them, arms wrapped behind each other's backs.\n\n\"What?\"\n\nJohn spoke first. \"Come on you two. Let's go home and celebrate.\" He started to guide Jade away, but April untangled herself from Jasmine, yet kept hold of one hand. She wrapped the other hand around Jade's arm and gently pried her away from John.\n\n\"Sorry, John, but I made these two a promise.\" She captured Jade's hand in hers and stood there, holding on to both sisters. She raised their hands to her lips and kissed each one.\n\n\"I think I said something about the three of us walking out together.\"\n\nJade and Jasmine looked at each other, smiled, then they stepped forward and, one standing on each side of April, wrapped an arm across her back. April reached out both arms to encircle their waists and pull them close against her.\n\n\"And you always keep your promises, don't you?\" Jasmine asked, beaming at her.\n\n\"You bet your Cajun ass I do.\" She smirked at Jasmine as she heard Jade burst out laughing beside her, and felt her heart warm. She'd done it. She fixed everything, and now she had her family back; a new family in a new town, but it was all hers."
    ],
    "authorname": "Phoenix74",
    "tags": [],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/missing-you-missing-me-ch-07"
}