{
    "title": "Thorne Ch. 09",
    "pages": [
        "Note: Thanks to everyone for reading my stories and to Donalde who looked for those pesky name changes and beta read for me. \n\n*\n\nWilliam hung up with mixed feelings. On one hand, he had saved most of his family, but on the other hand, Harry was going to die. That he wasn't going to be the one to kill him brought little comfort. The next thing that he had to do before anything else was go to see his family. He warded his room and vanished to the cabin. He knew that something had happened as soon as he appeared in the living room. Everyone was there except for Harry.\n\n\"Where is he?\" William asked looking around. \"Where in the hell is he?\" he demanded when no one spoke.\n\n\"I tried to get him to stay,\" Nell said, \"but dad let him go.\"\n\n\"What were you thinking?\" William asked not quite believing what he was hearing.\n\n\"We didn't know if you were coming back or not,\" Albert said. \"For all we knew, you turned us over.\"\n\n\"Are you fucking serious?\" William asked. \"I'm trying to save your asses and you let him go? Did you forget that he's why we're in this mess to begin with? Did you forget that he's the reason for every mess that we've ever been in?\"\n\n\"Now wait a minute...\" Albert broke in.\n\n\"Shut up!\" William roared. \n\nEveryone stared at him. William rarely raised his voice and when he did, it meant that he was furious.\n\n\"First of all, I would not have turned you over! I have been working my ass off to save your lives! I was even trying to save the life of that psychopath!\"\n\n\"William,\" Mary said, \"what are you talking about?\"\n\n\"I'm done with Rufus Saunders,\" William replied. \"We should have never started with him. As insane as Harry is, he was right about one thing, Rufus is going to turn all of the species against each other. He's going to make him do our work for him. I talked to Ethan Sinclaire...\"\n\n\"You did what?\" Albert yelled. \"I told you that he would turn us over!\"\n\n\"Will you shut the fuck up and listen?\" William said as he glared at his father.\n\nHis second use of profanity had the desired effect. He cursed as rarely as he raised his voice. Albert sat down, but still glared at William.\n\n\"As I was saying, I talked to Ethan Sinclaire and Thorne Blackwell. Everyone is looking for us and it's only a matter of time before we're found. Both Ethan Sinclaire and Thorne Blackwell have given you a free pass to leave the state. You have twenty-four hours to get out and if you are spotted in California, even if it's one hundred years from now; you will be killed.\"\n\n\"What about Harry?\" Nell asked.\n\n\"There is nothing that I can do for him,\" William replied. \"Nadine, the woman that he used, turned and then was going to leave for dead lives. She has a mate who wants vengeance. He will never stop looking for Harry.\"\n\n\"So we just leave him?\" Mary asked.\n\n\"Mom,\" William said softly, \"Harry is looking for Nadine and they are looking for him. I'll try to find him and convince him to leave, but in the meantime you all must leave.\"\n\n\"Traitor,\" Albert said under his breath. \"Harry was right about something else. You're going to try to save that bitch.\"\n\nWilliam ignored him and continued to talk.\n\n\"I strongly suggest that you leave as soon as possible and that you don't come back. If you choose to stay I won't be able to protect you. I hope that you've all done what I suggested in the past and found a place that no one knows about including each other and saved plenty of money. You can regroup later, but for now you have to separate.\"\n\n\"What are you going to do?\" Mary asked.\n\n\"What do you think he's going to do?\" Albert sneered. \"He's going to get himself killed over that hunter bitch and leave Harry to die.\"\n\n\"I will be fine,\" William said reassuringly. \n\n\"Maybe we should stay and help you find Harry,\" Nell said ignoring her father's glare.\n\n\"Thank you, but you all need to go while you can,\" William replied. \"Get out of here as soon as the sun starts going down.\"\n\nAlbert sat in his chair fuming as William led the family in the way that he should have done. He realized that both Mary and Nell were right in saying that he was angry at William for taking over the family. They were also right in saying that his anger was the reason that he fought William even though he knew that he was right.\n\nIn fact, he had just begun thinking about getting his family out of the hunter business when Harry killed the girl behind Thorne's club. His mistake had been that he really had no plan in place even though he implied that he did. He was going to use the vacation to plan and possibly slip away with his family.\n\n\"Damn you Harry!\" Albert thought to himself as he half listened to William talk.\n\nBy the time William was done, he had all of them convinced to leave.\n\n\"Just remember, you can never return to California. If you do, you will die. Keep your eyes and ears open no matter where you go. If you get even a whiff of a Sinclaire or Blackwell, leave or lay low. And whatever you do, don't get mixed up with the hunters again.\"\n\nWilliam vanished from the cabin in the mountains to the Palm Springs condo. He wasn't surprised to find it empty although there was evidence that Harry had been there. He was too late- not that it would have made a difference even if Harry had been there. He decided not to take the time to look for him; Harry's fate had been sealed. He left the condo and went back to his room. There was nothing to do but wait.\n\n***\n\nOlivia lay awake thinking about her decision. She knew beyond a shadow of a doubt that her father would never agree to any compromises no matter how reasonable they were. The idea that she was going to be a part of his death sickened her, but what was she to do? Her father would have her killed as soon as she was spotted. \n\nThe questions about her mother's death burned in her mind. She had to know one way or another if he had anything to do with it. She knew what her gut was saying, but she had to hear it from him. Her thoughts went back to her father's impending death. Would it be merciful or would he be tortured as he and others had tortured so many both vampire and human.\n\nShe sat up as a realization hit her and began to yell for help. Benita who was still on duty rushed in to see what the ruckus was about.\n\n\"Listen,\" Olivia said as soon as Benita came rushing in, \"if you know of any humans that are helping you, they need to be warned! He'll kill anyone that he suspects of being a vampire or aiding them! You've got to...\"\n\n\"Slow down,\" Benita said. \"Start at the beginning and tell me what you're talking about.\"\n\nOlivia took a deep breath and started over.\n\n\"My father will kill anyone who is suspected of being a vampire. If he suspects that they're helping you, he'll torture them for information and then kill them. You've got to warn anyone that's helping you! They need to leave their homes and go somewhere safe!\"\n\nBenita hesitated for a moment and then took her phone out of her pocket. It hadn't occurred to her that their human allies hadn't been warned.\n\n\"Thorne... no... she's fine, but she just brought up a very valid point. Our human allies are in danger... it has? I'll tell her.\"\n\nOlivia anxiously listened to Benita's end of the conversation breathing a sigh of relief when Benita didn't seem more alarmed.\n\n\"Well,\" Benita said with a smile, \"it's been taken care of. As soon as you were spotted, a warning was issued. Most if not all of our human allies have left the city.\"\n\n\"That's good, but you don't understand,\" Olivia said. \"My father will go after anyone who even remotely looks like they're helping you. By you, I mean vampires. If he sees a human talking to a vampire, he'll automatically assume that they're helping you. He will have them tortured even though they don't know anything.\"\n\nNow Benita was alarmed. She took her phone out again and called Thorne back. She talked to him for a few seconds and then handed the phone to Olivia.\n\n\"What have you decided?\" he asked.\n\n\"You're going to kill him with or without my help,\" Olivia replied. \"But I would like the chance to try to reason with him.\"\n\n\"We expected as much,\" Thorne replied. \n\n\"I'm going to help you,\" Olivia said after a few seconds of silence. \"I won't kill him...\"\n\n\"Nor would we expect you to,\" Thorne broke in. \"What we need you for is far more important than that.\"\n\n\"To take over for my father,\" Olivia said. \"I get it. I have a question... maybe a favor to ask.\"\n\n\"I'm listening,\" Thorne replied intrigued. Up until now, Olivia hadn't asked for anything. She hadn't even asked that her father be given a quick and merciful death.\n\n\"There is one of my crew that I want spared.\"\n\n\"Which one would that be?\" Thorne asked.\n\n\"His name is William,\" Olivia replied. \"Of all of them he was the one that I trusted the most.\"\n\n\"What is he to you that you're asking that his life be spared?\" Thorne asked.\n\nThat was a question that surprised her although it shouldn't have. It was also a question that she didn't have the answer to.\n\n\"Does it matter?\" Olivia asked. \"I haven't asked for anything and I'm going to betray my father for you...\"\n\n\"Not for me,\" Thorne corrected. \"For yourself and thousands of others. You know what he is and what he plans to do to you and thousands of others. In regards to William, we've already spoken.\"\n\n\"Where is he?\" Olivia asked.\n\n\"At the moment, I don't know,\" Thorne replied. \"I can tell you that he is in no danger from us. He also asked about you. He seems very concerned about your safety. If I didn't know any better...\"\n\n\"So you'll spare him?\" Olivia asked.\n\n\"He is safe,\" Thorne replied. \"All of the teams out looking for your father and his crews are aware that he is not to be touched.\"\n\n\"Thank you,\" Olivia said relieved but choosing not to examine the reasons why.\n\n\"I would suggest that you call your father and talk to him now,\" Thorne advised. I'll call you back within the hour.\"\n\n****\n\nRufus was getting ready to lay down when his cell phone rang. He looked at the caller ID, but didn't recognize the number. Out of curiosity, he answered it.\n\n\"Daddy?\"\n\n\"Olivia? Where are you?\" Rufus asked.\n\n\"I'm at the same place and before you ask, I don't know where it is,\" Olivia replied.\n\n\"Are you still untouched?\"\n\n\"They haven't hurt me,\" Olivia said. \"Dad, what really happened with mom? Did you set her up like you set me up?\"\n\nThat wasn't how she had intended to start the conversation, but she had to know.\n\n\"Why don't we talk about how we're going to get you out of there?\" Rufus asked avoiding the question. \"Did you see anything? Any landmarks?\"\n\n\"You set her up didn't you? You had Harry kill her and then you used her death to keep the war going. That's why you're going to have me killed too isn't it?\"\n\nHis silence was her answer.\n\n\"I'm calling to make a proposition,\" Olivia said swallowing the lump in her throat. \"Give me control of the organization and walk away. Go someplace far away and stay out of trouble. If you don't, you will be killed on sight.\"\n\n\"Who will kill me? You?\" Rufus asked laughing. \"You never wanted to be the head of the organization. All you want is to be left alone to your fucking daydreams of being someone else. That's why I chose Caleb as my successor and your husband. You're useless as a leader and a hunter but you can make plenty of little hunters- something that your mother was incapable of doing.\"\n\nOlivia was hurt and shocked by how little her father thought of her and her mother. They had been nothing more than pawns in his war.\n\n\"You're right,\" Olivia said, \"I can't kill you. After all, you're still my father as much as I wish that it weren't so.\"\n\nRufus listened to Olivia not caring for the confident and authorative way in which she was speaking to him. He was beginning to realize that he had been wrong about her. He hadn't destroyed her strength, it was only buried.\n\n\"Are you working with them now?\" he hissed angrily, \"Are you a traitor?\"\n\n\"You can call it whatever you want,\" Olivia replied, \"But that doesn't change your options or the fact that this war has to end. You can either walk away or you can stay and die. This war should have ended a long time ago and you know it. You've used the deaths of others to keep it going when the attitudes about the war began to change. In keeping the war going, you've let a group of beings far more dangerous than the ones that we're fighting grow in numbers.\"\n\n\"Lies!\" Rufus raged. \"There are no such things as the rogue! All of them and anything that isn't human fits under that category and they all need to be destroyed like the rabid animals they are! Just because they haven't fucked you or turned you don't mean that they're not animals!\"\n\n\"Dad, the only animal is you and those that believe as you do,\" Olivia said softly. \"You have killed innocent people just because you think that they're vampire or have helped them in some way. You killed mom for your own goals and you were going to kill me for the same reason. What are you going to do? Are you going to walk away or are you going to stay and die?\"\n\n\"I will not walk away until every nonhuman being is destroyed and I will watch you die with them,\" Rufus said his tone firm.\n\n\"Goodbye dad,\" Olivia said and hung up.\n\nShe handed the phone back to Benita, cried and then asked her to call Thorne.\n\n\"I tried... but he is so filled with hate that he wouldn't listen.\"\n\n\"Olivia, believe it or not; I'm sorry,\" Thorne said. \"I will convey to all of the groups that his death is to be quick and merciful.\"\n\n\"Can you guarantee that it will happen like that?\" Olivia asked.\n\n\"No, I can't,\" Thorne replied not telling her that William would probably be the one to kill her father. News like that needed to come from him. \n\n\"Will you call me when it's done?\"\n\n\"Of course,\" Thorne replied genuinely feeling for her. \"Olivia, we all appreciate how hard this has to be for you...\"\n\n\"No you don't,\" Olivia interrupted. \"You have no idea about what I'm feeling. Just keep your word about William and my father,\" she said and hung up.\n\nShe handed the phone to Benita, walked away and into the bathroom shutting the door behind her. Once inside she began to sob. By morning, her father would be dead and she would be the head of the hunter organization, a position that she didn't want. She sat on the floor in of the toilet and began to vomit. Along with the vomit went all of her dreams of a normal life. She would never be that kindergarten teacher or the PTA mom. The hunter organization was now her life. She had no choice in the matter. If she didn't step up, someone like her father would. That thought brought thoughts about Caleb. What would happen to him? As soon as she asked herself the question, she knew the answer- he would die too. She tried to feel sorry about it, but couldn't. Caleb wasn't much different than her father was. He was only more educated.\n\n\"Olivia?\" Benita called into the bathroom, \"Are you alright?\"\n\nOlivia hesitated. The genuine concern in Benita's voice caught her by surprise. Other than her mother and William, no one had expressed true concern for her. She stood up, flushed the toilet and washed her face before answering.\n\n\"I'll be alright,\" she called out. \"I just need a few more minutes.\"\n\nThe few minutes turned into half an hour as she grappled with her new role. Thoughts of where William might fit into that life crept in unbidden. What surprised her was that the thought of him was calming. She whispered a fervent prayer that he was safe and not in the hands of her father and Caleb.\n\nBenita was waiting for her when she came out of the bathroom.\n\n\"I brought you something to eat and drink,\" she said. \"I'm sure that you aren't hungry, but you should try to eat something.\"\n\n\"Thanks... is there any way that I can get a change of clothes?\" Olivia asked.\n\n\"I'll work on it,\" Benita said. \"Is there anything else that you need?\"\n\n\"More toiletries,\" Olivia replied. \"How much longer will you be here?\"\n\n\"As long as you need me to be,\" Benita replied. \n\n\"What about your mate? Don't you need to go home and see him?\"\n\n\"My mate is a big boy and I mean that literally and figuratively,\" Benita said with a smile. \"He'll be fine without me. Are you wondering about the way in which you're being treated?\"\n\n\"This is nothing like I was told,\" Olivia replied after thinking about it. \"You have shown me more kindness and compassion than my own father.\"\n\n\"Olivia, have a seat,\" Benita said. When Olivia was sitting, Benita sat down across from her and looked at her. \"Olivia, you know as well as I do that there are fanatics on both sides of this crazy --assed war. It's because of these fanatics that the war continues. I'm sure that you've already thought about this but I'm going to say it anyway. Your life is in danger from the fanatics on both sides and will be for a long time to come. Had you been captured by anyone other than us, you would have been either turned or killed as soon as they caught you. My point is this; you need to start surrounding yourself with those that you can trust.\"\n\nWhen Benita said that, Olivia thought about William.\n\n\"We're in for hard times and those who you think are friends may not be. The other thing is this. When I first met you, I saw a very insecure and frightened hunter. Part of that was because this isn't the life that you wanted, but part of it is because you've been undermined at every turn by your father. Tonight as I listened to you talking to your father, I heard something that I'm sure that he heard too. I heard strength and confidence. I believe that you can help end this needless fighting and if you will have me, I would like to offer the services of me and my mate.\"\n\nOlivia was speechless at Benita's offer. She conceded that Benita was right about the fanatics, but a hunter and a vampire working as a team? She thought about it and laughed. When she agreed to run the organization and sanctioned the death of her father, that's exactly what she had been doing and still was.\n\n\"Don't you want to talk to your mate about this?\" Olivia asked.\n\n\"My mate's name is Kenneth and no he will have no issue with it because we've already discussed it,\" Benita replied.\n\n\"I don't know what to say,\" Olivia said softly. \"Thank you.\"\n\n\"You're welcome... Kenneth will be here tonight. He and I will be your security team. After this is over, we'll need to select another vampire team for the nighttime and a wolf team for the daytime. I don't need to tell you that you can't go off alone...\"\n\n\"I understand,\" Olivia interrupted. \"I want you to tell me about your world,\" Olivia said changing the subject. \"I only know what my father told me.\"\n\n\"Didn't you talk to the vampires on your crew?\" Olivia asked.\n\n\"No,\" Olivia said with a shrug. \"My father told me that everything that vampires said was a lie so I never asked.\"\n\n\"Well let's get comfortable,\" Benita said. \"There's a lot to cover.\"\n\n****\n\nBarb didn't know what to do. If she was honest with herself, she didn't want to talk to her sisters or anyone else; but something that Gene said stuck with her.\n\n\"You need to give a little.\"\n\nBut how much? And was he right about her thinking that they wanted her to change completely? When she stopped to think about it, they had all told her that that's not what they wanted, but she hadn't believed them. Another part of her was jealous at the relationship that her sisters had with each other, but then again; she had distanced herself from them.\n\n\"Barb? Are you in there?\" Louise called in. \"We just want to make sure that you're alright.\"\n\nBarb battled with herself. Part of her believed that they were there to gloat, but part of her knew better. She was going to say \"come in,\" but \"go away\" came out instead. She was surprised when instead of knocking again, they moved away from the door.\n\n\"What did you expect?\" the voice in her head asked. \"That they would pound on the door demanding that you let them in? I fear that those days are long gone.\"",
        "\"Who are you?\" Barb asked. \"Are you the baby talking to me?\"\n\n\"Don't be silly,\" the voice replied and went silent.\n\n***\n\n\"Well, we tried,\" Juliette said as they walked away.\n\n\"I for one am tired of trying,\" Kevyn said. \"I mean how many ways can we tell her that we care? I'm here for her and the baby, but I'm tired of being figuratively bitch slapped.\"\n\n\"What are you saying?\" Juliette asked.\n\n\"She's saying that it's Barb's turn to make the next move,\" Louise said. \"I happen to agree with her. We've made every attempt to let her know that we love her; the ball is in her court. I'm going back to the room, I'm sure that the meeting is over by now.\"\n\nThe sisters parted ways with hugs and agreed to get together with Katrina and Rachel once the men left.\n\n***\n\n\"How is she?\" Nathan asked when Louise got back to the room.\n\n\"Alright I guess; we didn't get to talk to her.\"\n\nNathan didn't say anything. There was nothing to say and he didn't want to spend the day talking about his stubborn sister in law.\n\n\"I brought a little of everything,\" he said holding a chair out for her.\n\n\"I see, but I'm not hungry,\" Louise replied. \"I'm too nervous to eat.\"\n\n\"Sweetheart, you have to eat,\" Nathan said kissing the top of her head and then fixing her plate.\n\n\"I know, but...\"\n\n\"No buts,\" Nathan interrupted. \"Eat at least half of it and then we'll take our vitamins.\"\n\nLouise grimaced. That was the only part of being pregnant that she wasn't going to miss. She ate half of the food on the plate and then took the prenatal vitamin.\n\n\"God that's horrible!\" she exclaimed.\n\n\"Yes I know,\" Nathan replied with a chuckle, \"but in a few months we won't be taking them. Are you sure that you can't eat any more?\"\n\n\"I'm sure... let's go to bed,\" Louise said as she stood up.\n\nNathan stood up and took her hand noticing how cold it was. She was scared and there was nothing that he could say that would change that. With a thought they were naked and his hands were on her belly. \n\n\"I will be back,\" he said rubbing it. \"I have two ladies to spoil.\"\n\n\"Nathan... just be careful. We need you.\"\n\nNathan picked Louise up, carried her to the bed and sat down with her in his lap. He nuzzled her neck with his nose and then kissed it smiling when she shivered. He held her securely in his lap with one arm around her while the other hand cupped her cheek and then moved down her body. He stopped at her breasts which were larger and more sensitive since the pregnancy. He tweaked a nipple between his thumb and forefinger as he kissed and then sucked on her neck.\n\n\"You smell good,\" he murmured against her neck when the scent of her arousal hit his nose and the moisture covered his erect member. He let his hand drift further down to rest on her stomach for just a moment and then continued down to her mound. Louise opened her legs in invitation moaning when Nathan pressed against her clit and slipped two long fingers inside of her. \"I think that I'm ready for dessert,\" he said and nipped her hard enough to draw blood that he lapped up like a cat as it trickled down her neck. Nathan turned so that Louise was lying on the bed and he was stretched out beside her.\n\n\"I am coming back to you and our baby,\" he said kissing her gently then with more insistence. \"We have a menu to plan for our restaurant and nurseries to decorate.\" He murmured against her lips. He kissed her again and moved to a breast taking a hard nipple into his mouth and gently chewed on it.\n\nLouise cried out and held Nathan's head tight against her breast urging him to suck harder and faster. She let out a small scream when Nathan began to circle her clit before actually touching it. She knew that he was going to make her come so that she would be soaked. After the orgasm, he would lick and suck at her nub until no more of the thick, clear fluid ran from her and she had come at least twice more. Then and only then would be pull her on top of him and slide into her.\n\nNathan didn't disappoint her. He teased and nibbled at her until she begged him to end it. At the end of the second orgasm, Louise climbed on top of him and eased down onto his erection. Both of them moaned and cried out and began to move against each other. Nathan pulled Louise down to him and kissed her, exchanging breaths with her as he slid in and out of her. He held her in place and did all of the work. He ground against her making sure to make contact with her clit. Louise began to cry as her orgasm began ending just as Nathan's started.\n\nAfterwards, Nathan held her tighter than he normally did. He wasn't afraid that he wasn't going to return, he knew that he would. Louise knew it too, but she was still afraid. His holding her so tightly seemed to help allay those fears. He knew that she had fallen asleep when he felt her breathing deepen and then slow. As he lay there, he wondered where to begin looking for Harry. Suddenly, Louise was wide awake and sitting up.\n\n\"Nathan, he's somewhere in the city.\"\n\n***\n\nNadine and Leon had just finished making love for the fourth time. She had made Leon promise several times not to do anything that would get him, Hans or Nathan killed.\n\n\"Dina, I promise!\" Leon said exasperated. After that promise every time she started to bring it up he silenced her with a kiss. Finally, she got it and stopped saying anything about it. Instead, she started talking about anything and everything that came to mind. Leon, recognizing it as nerves let her ramble. The closer the time came before he had to go, the more nervous Nadine became.\n\n\"Baby make sure that you don't sit here alone,\" he said.\n\n\"I won't,\" she replied. \"All of the women and children are going to wait together. I hope that Barb comes too.\"\n\n\"Me too,\" Leon agreed. \"Dina, do you understand why I have to do this?\"\n\n\"Yes, I do,\" Dina replied. \"This is who you are, but you can't expect me not to be afraid.\"\n\nShe started to say something else, but no sound came out. Her eyes widened in fear and her hold on Leon tightened.\n\n\"Dina? What's the matter?\" Leon asked. \"Come on baby talk to me,\" he insisted.\n\n\"Harry...\" was all that she managed to get out.\n\nOne thing became clear to Leon. Nadine, while having done well in her life had never dealt with the rape and its aftermath. He cursed himself for not seeing it sooner. After everything was over with, he would bring up the subject of her talking to either Katrina or Rachel.\n\n\"It's alright,\" he soothed. \"I won't let him anywhere near you.\"\n\nHe felt Nadine gain control of herself and settle.\n\n\"I'm alright, I promise,\" she said even as she snuggled closer absorbing his warmth.\n\nLeon however, wasn't entirely convinced and decided to bring up the idea of her talking to Katrina or Rachel sooner rather than later.\n\n\"Dina, have you ever talked to anyone about what happened to you?\"\n\n\"No and I don't need to,\" Nadine replied.\n\n\"I think that you're wrong about that,\" Leon replied. \"I think that maybe you need to talk to either Katrina or Rachel. They know and understand what you've been through. They can help you.\"\n\n\"I don't...\"\n\n\"Just think about it okay?\"\n\nNadine finally agreed to think about it, but she had no intentions of talking to anyone about what happened to her.\n\n\"Thank you,\" Leon said hoping that she would talk to one or both of the other women.\n\n****\n\nEthan, Katrina and Victoria quietly ate their dinner. Victoria was full of questions but wasn't sure that she should ask. She and Wanda had already agreed to stick together and to keep Celeste close. She also planned to go to the kitchen early while everyone was still there and make snacks for them. She was bound and determined that no one was going into the kitchen once the search teams left. She still had nightmares about the night that Veronica was taken. Whenever she thought about that night, she felt sick and nothing anyone said convinced her that it wasn't her fault. Even sessions with Mason had failed to relieve her of her guilt.\n\n\"What is it pumpkin?\" Katrina asked.\n\n\"Will people die?\"\n\n\"Victoria, come here,\" Ethan said. He understood what she was asking.\n\nWhen she reached him, he lifted her into his lap and kissed her cheek. He waited until she was settled with her head on his shoulder and hugged her.\n\n\"I won't lie to you and tell you that none of us will die or get hurt,\" he said. \"You're much too smart for that. What I will tell you is that all of us will do our best to comeback alive and unhurt.\"\n\n\"But papa, what if you don't come back? What will we do?\"\n\nEthan looked at Katrina who was wiping away tears.\n\n\"Sweetheart, I plan on coming back even if I have to crawl. If I don't come back, you and your mom will still be cared for. I will always be watching over you from wherever I am.\"\n\nVictoria sat trembling in Ethan's lap wishing that there was some way that she could help.\n\n\"You can help me by helping your mom,\" Ethan said answering her unspoken question. \"And when I come back, I'm going to be hungry. Maybe you and mom and make one of those breakfast casseroles while we're gone.\"\n\nVictoria didn't reply. She wasn't going to make anything until she saw him and the others were all in the house safe.\n\n****\n\nVarious versions of the same conversation were taking place throughout the house. Of the children, Celeste seemed to be the most affected. She clung to Hans not letting him out of her sight. It was then that Hans realized that Celeste knew exactly what he and the others were. Why the other two hadn't figured it out or asked questions, he didn't know.\n\n\"How long have you known?\" he asked her when they had a moment alone.\n\nCeleste cocked her head to the side and thought about her answer.\n\n\"Always,\" she finally said.\n\nHer answer surprised Hans, and he wanted to know why she didn't say anything.\n\n\"I'm not supposed to, it's a secret.\"\n\n\"What else do you know?\" Hans asked.\n\n\"That almost everyone is like you... Aunt Louise is too.\"\n\n\"Celeste, can you continue to keep your secret?\" Hans asked. \"Your mom and I plan to tell Victor and Wanda soon.\"\n\n\"Okay papa-too,\" Celeste replied without hesitation as she kissed his cheek.\n\nHans remembered Thorne calling Celeste a power house. He had no idea of how right he was.\n\n****\n\nThorne sat in his office waiting for Ethan. If things went as planned, they had a long hard road ahead of them. Things were going to get much worse before they got better. He knew that Benita and her mate Kenneth were going to offer their services to Olivia and he hoped that she accepted. The couple was amongst the best he had. Ethan would supply the second team of vampires as well as the second team of wolves. Once again he thought about the split between their families. Figuring out what really happened was on the list of his things to do as well as dealing with his own issues regarding his mother.\n\nHe hadn't spoken to her since he took Noel in although he knew that Noel spoke to her on a weekly basis. All he was concerned about was that she was safe and apparently she was. Noel had warned her to stay out of California and to make sure that she didn't go anywhere alone. As of yet, she didn't know that he was going to be a father. Noel couldn't have told her, if he had; she would have called by now and her and Barb would be like two peas in a pod. At some point, he was going to have to tell her, but not now. Like so many other things, it would have to wait. The other issue was Barb who he felt nothing for. He sincerely hoped that she didn't choose the mate option. Sex or no sex, he didn't want her. \n\n\"Fate is a bitch,\" he muttered to himself.\n\nEven though he didn't want Barb, he was excited about their son. Another thought hit him- what was he going to teach his son about women? That thought alone made him realize that he really did need to work on his issues. Thankfully the baby's aunts were what he considered to be good women. It was obvious that they loved their mates and really didn't care about money. Then the question was what he would tell the baby about his mother if Barb should decide to sign off on her parental rights. Of the options, that seemed to be the most likely choice. The baby, through Celeste had indicated that he knew that his mother neither loved nor wanted him. So maybe what he told him was a moot point. But still it hurt... he knew from firsthand experience.\n\nThorne fully expected to come back alive. Maybe injured, but alive. But if anything happened and he died, he hoped that she chose Leon and Nadine to raise the baby if anything did happen. He had tremendous respect for Leon and decided that he liked him. The baby would be loved by any and all of the Sinclaires and their mates, but there was something about Leon that drew him.\n\n\"Shit...\" he muttered. 'I'm going to have to make some changes.\"\n\nHe wasn't even sure of where to begin and realized that he might have to do the one thing that his father had always preached against- going to get professional help. In retrospect, that was exactly what Noel had needed and probably still did. No one could survive what he did and not be fucked up or at the very least have some residual effects. He could almost hear his father's voice.\n\n\"All that psychobabble shit is for the weak and the Blackwell's are not weak! We take care of our own problems without the help of strangers.\"\n\n\"Shit,\" he cursed again, but then told himself that it was for the baby. The idea of going to someone seemed to sit with him better when he thought of it in those terms. He didn't like it, but it had to be done.Eustace Matthew's name came to mind as did Mason Donahue's. \"I can't believe that I'm actually thinking about this,\" he said out loud.\n\n\"Thinking about what?\" Ethan asked as he walked into the office.\n\n\"Nothing,\" Thorne replied. \"Olivia is on board,\" he said changing the subject. \n\n\"Is she aware that her father will more than likely die?\" Ethan asked.\n\n\"She knows,\" Thorne replied. \"She made a last ditch effort to get him to walk away and as we expected, he refused.\"\n\n\"So he dies on sight,\" Ethan commented.\n\n\"Yes and in my opinion that's what needs to happen.\" Thorne replied.\n\n\"Any word from William?\"\n\n\"No and I don't expect to hear anything unless it's to tell us that he's killed Rufus,\" Thorne replied. \"Olivia mentioned him though. She wants his life spared.\"\n\n\"They're mates,\" Ethan said. \"She just hasn't accepted it yet.\"\n\n\"True, have you talked to Leon yet?\" Thorne asked.\n\n\"Not yet, but I don't think that it's going to be a problem as long as he gets Harry.\"\n\n\"Alright, let's go over the check list,\" Thorne said. \"All vampires have been warned away from humans. All teams have been warned that William is not to be touched and to call if Harry is spotted. Caleb and Rufus die on sight.\"\n\n\"Good, I've been going over my list of guards and have several mated pairs for Olivia to choose from. The same goes for the wolves.\"\n\n\"Grant and his mate have consented to be guards for her during the day,\" Thorne said. \"After this is over, I'll have them meet with her and she can decide for herself. Now about tonight...\"\n\n*****\n\n\"Rufus, why don't you wait here?\" Caleb asked. \"I can handle things...\"\n\n\"Do you think that I'm afraid?\" Rufus roared interrupting him.\n\n\"No, but ...\"\n\n\"Do you think that I'm afraid of my daughter?\"\n\n\"No, but Rufus,\" Caleb said, \"Going out there is a suicide mission. We need you alive and in one piece.\"\n\n\"Do you know what that ungrateful little bitch said to me?\" Rufus said angrily. \"She told me to walk away or stay and die...\"\n\n\"Maybe walking away isn't such a bad thing, we could regroup and...\"\n\n\"Are you working for them too?\" Rufus interrupted. His eyes blazed with anger and distrust as he stared at Caleb. His hand went to the small pistol that he kept on him in case of emergency. What constituted an emergency was getting cornered by vampires. The pistol was always with him even while he slept. \n\n\"Hold on,\" Caleb said seeing the hand move to the sidearm. \"You know better than that.\"\n\n\"Do I?\" Rufus asked. \n\n\"Yes you do,\" Caleb replied. \"I was just looking out for you. I need you around for questions and advice. If you want to come then fine...\"\n\n\"So now you're giving me permission?\" Rufus retorted hotly.\n\nCaleb belatedly saw that he was in a lose-lose position. No matter what he said, Rufus would turn it around. For the first time, he understood what the murmurings were about. Murmurings that he said nothing about because many of those doing the murmuring were his friends. One of them took his life in his hands and approached him.\n\n*\n\n\"Caleb, Rufus is off his ass crazy.\"\n\n\"Watch it Dave,\" Caleb warned.\n\nDave looked at him and shook his head.\n\n\"Is your head so far up his ass that you don't see what's happening here? He likes the war. It's become his life and he doesn't care about our lives or the lives of our families. It's why he pushes procreation.\"\n\n\"You're wrong,\" Caleb insisted. \"We need to rid the world of the...\"\n\n\"Bullshit!\" Dave cut in. \"You sound like a fucking groupie repeating what you're told! Open your eyes before it's too late! Rufus is paranoid and he won't think twice about using his weapons on any of us. And let me tell you something else, if you think that he's really going to hand over the reins to you, you're crazier than he is. He's still going to run things through you.\"\n\n*\n\nNow Caleb understood. Rufus was using him just as he had used Olivia. He also realized that Dave had been right. He looked at Rufus and for the first time, saw him as he really was- a maniac with his own agenda. He stepped back when he saw the pistol in Rufus's hand. \n\n\"Rufus listen to me,\" Caleb said his voice low. \"I am not one of the enemy. I am on your side. I would never do anything to hurt you or the organization. Now put the gun away and let's go kill some vamps.\"\n\n***\n\nWilliam stood back watching the exchange between Rufus and Caleb. Part of him wished that they would kill each other, but part of him wanted to be the one to kill them. He could see the tremor in Rufus's hand and heard the tremble in Caleb's voice.\n\n\"Do it,\" he thought to himself. If Rufus and Caleb killed each other it would simplify things in more ways than one. Not only would it send the hunters in disarray, he wouldn't have to tell Olivia that he killed her father.\n\nHe wondered if she was realizing what he had only begun to admit to himself-he and Olivia were mates. The next question was if she could and would accept it. He reminded himself that there were other issues at hand that took precedence over his and Olivia's possible future together. \n\nHis attention was drawn back to the two men, when he heard the soft click of the pistol's hammer being pulled back. Caleb was still trying to get Rufus to see reason when the gun either went off because of Rufus's shaking hands or because he deliberately pulled the trigger. There was a startled cry and then the sound of the heavy thud of a body hitting the floor. It would have been the perfect time to kill Rufus, but the room was immediately filled with hunters.\n\n\"What in the fuck happened?\" one of the guards asked obviously shocked.\n\nWilliam half expected Rufus to lie and was surprised when he didn't.\n\n\"He was a traitor!\" Rufus exclaimed. \"He was working with the other side...\"\n\n\"Bull shit!\" someone shouted.\" He wouldn't do that!\"\n\n\"Take note!\" Rufus said. \"This is what happens to traitors! Caleb was to be my son in law and successor and he betrayed not only me, but the organization. I will not be stepping down.\"\n\nThis announcement didn't surprise William. He wondered if Rufus ever really planned to let Caleb take over. He doubted it, but then anything was possible. He could feel the tension and anger in the air from the other hunters. For just a moment, he thought that they would take out their weapons and as one fire them. But they simply walked out of the room giving up the chance to be rid of a maniac. He watched as Rufus put his pistol away, looked at Caleb's body and then finished getting ready for the fight.",
        "\"You die tonight,\" William whispered and vanished to the kitchen so that he could eat and feed.\n\nHe opened the fridge to take out a unit of blood, stopped and looked at them closely. Something wasn't right about them. Then he realized that they had been tampered with. He almost laughed out loud. He knew that it had been Rufus thinking that he had finally come up with a poison that would kill vampires. What Rufus didn't know was that no matter what the substance was, it would be quickly metabolized before it could do any harm. It once again showed how illiterate Rufus was in regards to the vampire race.\n\nWilliam sensed Rufus watching him and decided to drink the blood. One, it might not taste right, but then it would give Rufus a false sense of security. He poured the blood into a glass, smelling it as he did so. He smelled nothing out of the ordinary and put the glass in the microwave. He could feel Rufus's excitement as he took the warmed blood out of the microwave and downed it in one long drink. Deciding that he needed a bit more blood, William heated a second unit and quickly downed it. He turned to see Rufus watching him.\n\n\"Hungry huh?\" Rufus asked attempting to be interested but failing. William could see the excitement in his eyes.\n\nWilliam didn't reply, but glared at Rufus in such a way that Rufus's hand went to his pistol. Still staring at him, William raised the glass to his lips and drank it straight down. Without pause, William opened a third bag and poured it into the glass. For effect, he moved slowly. He couldn't wait to see the look of frustration of Rufus's face when he realized that he had failed again. He drank the third glass slowly and decided to have a fourth bag. It was going to be a long night and a little extra nourishment wasn't going to hurt anything. William almost laughed when he heard Rufus's heart rate rise in excitement.\n\n\"You can't get drunk on that stuff can you?\" Rufus asked seriously.\n\nAgain, William didn't reply but warmed up the blood and drank it. He rinsed out the glass and finally spoke.\n\n\"What are your plans?\"\n\nRufus blinked. He was remembering that Caleb was the one with the plan but he was dead. Now that he had calmed down, Rufus realized that he had made a huge mistake. He looked at William and walked away. Surely Caleb had made notes of some kind. \n\n\"Damn it!\" Rufus exclaimed as he looked through the desk and finally online.\n\n\"Is there something wrong?\" William asked from the doorway to the office.\n\n\"What do you want?\" Rufus snapped.\n\n\"Time is passing, what are your plans for Olivia's rescue? Do you know where she is?\"\n\n\"I don't have to tell you a damned thing,\" Rufus replied angrily. It was an attempt to cover the fact that he had no idea of what Caleb had planned nor did he have any idea of where Olivia was being held. The attempt to cover his ignorance failed and he knew it from the smirk on William's face.\n\n\"In other words, you have no idea of where she is and you have no plan,\" William said smugly. \"Caleb had the plan, but you killed him before you found out what it was. How many of your hunters will you sacrifice to continue a war that you cannot win? You have dissension in your ranks. Many of the men here were friends of your late second in command...\"\n\n\"Shut the fuck up!\" Rufus screamed.\n\n\"I think that I understand what is happening,\" William continued. \"You chose Caleb because he has many friends that will follow him. You were going to lead through him. What? Are you surprised that I am able to think beyond my next feeding? A fool could see what was happening. And what about Olivia? Is she going to be one of your acceptable losses or an offering for the cause?\"\n\nHe knew that he was dangerously close to giving how he felt about Olivia away, but he didn't care.\n\n\"I also happen to know why you have so many other species working for you. You're hoping that we'll do your dirty work for you and kill each other off. I do have to give credit where credit is due,\" William said as he leaned back against the kitchen counter. \"Harry pointed it out. I didn't want to believe it at first, but it's true. Do you know what your problem is? You don't listen. You should have listened to Caleb... by the way, thank you for killing him for me.\"\n\nRufus's eyes narrowed as he raised the pistol and aimed it at William. \n\n\"Go ahead, shoot and see what happens,\" William taunted. \"I should also tell you that whatever you put in the blood-it did nothing except to give it a slightly sour taste.\"\n\n\"You know where she is don't you?\" Rufus asked ignoring the comment about the blood.\n\n\"No I don't,\" William replied, \"but what I do know is that she's hell of a lot safer where she is than she is with you. Who was going to kill her? You or were you going to have that coward Caleb do it?\"\n\n\"What's going on in here?\" a voice boomed from behind Rufus.\n\n\"Nothing,\" Rufus said smiling coldly at William and lowered the pistol. \"Nothing at all. Are the men assembled?\"\n\n\"They're all here,\" the hunter said giving William a suspicious glance. \"The other crews are in place.\"\n\n\"Good I'll be in shortly,\" Rufus said his eyes never leaving William's face.\n\nWhen they were alone, Rufus grinned at William. It wasn't a pleasant grin. It was a grin that promised that he would be dead before the night was over.\n\n****\n\nHarry stayed in the shadows following the crews that were all human. He wanted to decimate them, but at the moment, they weren't important. There would be time enough for that later. The important thing was finding Nadine. He had heard that a maker could find his creation if he concentrated enough. He had never taken the time to find out if it was really true. It wasn't until they arrived in L.A. that he had seriously begun thinking about finding her.\n\n\"No time like the present,\" he murmured and softly said Nadine's name. At first there was nothing so he said it again. \"Nadine, where are you, you murdering bitch?\" His heart pounded when he thought he felt something. Encouraged, he said it again but added, \"I'm coming for you and whoever the son of a bitch that you're mated to is.\" This time there was no mistake. He was gratified when he felt a cold blast of terror that was followed by something else that made him frown. The feeling was there and then gone before he could grasp it.\n\nHe followed the hunters for a short while and then reluctantly let them be. As he walked, he thought about everything that he was going to do to Nadine while her mate watched. He hadn't given much thought as to how he was going to capture them and counted on her fear and the mate's rage to help him. Then he stopped dead in his tracks. Hans. He had forgotten about him. He had no doubt that Hans would be somewhere nearby. If that were the case, there would be no way in which to take all of them.\n\n\"Shit,\" he cursed. As much as he wanted Nadine, he wasn't willing to die for it and Hans would kill him. What he needed was his family behind him to even the odds, but that wasn't going to happen. William was out of the question and if they were smart, the others were long gone. He began to wonder about his decision to stay. He now knew that he could reach out to Nadine and eventually with practice he'd be able to locate her. The idea of tormenting Nadine from afar held a certain appeal for him. By extension he would be tormenting her mate and Hans. The more he thought about it, the more he liked it. He had more than enough money to last him and centuries and in which to follow through with his plan.\n\nSuddenly William's suggestion that they all leave made sense. Harry also realized that in a roundabout way; William had helped him. He chuckled out loud as he imagined what William's reaction would be if he knew that he had inadvertently helped him in his revenge against Nadine. As he vanished, he blew Nadine an imaginary kiss and murmured something into the warm night air.\n\n****\n\nNadine was getting dressed when Harry's first attempt at reaching her occurred. It felt almost like a light brushing across her mind. She felt a sense of foreboding that she didn't understand. The second time it happened, she broke out in a cold sweat. Her body began to tremble as what she knew had to be Harry's touch grew firmer. She looked around to be sure that Leon wasn't in the room before she let herself cry. She hadn't thought Harry smart enough or patient enough to try to contact her as he just had. She wondered if he knew that he could now find her. A few minutes later, along with the touch were words.\n\n\"I will see you again; enjoy your life for as long as I let you live.\"\n\nThen he was gone.\n\n\"Dina?\" Leon called from the bathroom. \"What just happened?\"\n\nShe started to say nothing, but Leon stopped her.\n\n\"And don't you try to lie to me.\"\n\nSeeing that she had no choice, Nadine told him about the feelings that she had experienced.\n\n\"What else?\" Leon pressed.\n\nWhen she told him about what the voice said, Leon was livid with rage. He picked up the phone, called Hans, Nathan and finally Ethan. He had the longest conversation with Ethan.\n\n\"I know that I said that I wanted to be the one to kill the bastard, but he's up for grabs. I want him dead and I don't care who does it.\"\n\nAfter he hung up, Leon wondered if he could reach Harry in the way that he had reached Nadine. Before he tried, he decided to talk to Louise.\n\n\"I was just going to call Nadine,\" Louise said when she answered the phone. \"Is she alright?\"\n\n\"She's scared although she's trying not to show it,\" Leon replied. \"I gather that you sensed him too.\"\n\n\"Yes, but Leon; he's leaving.\"\n\n\"But he isn't going to stay away for long. Lou, he can talk to her,\" Leon said. \"He all but threatened her. My question to you is this; do you think that I can talk to him in the same way?\"\n\n\"I don't know,\" Louise replied after a long pause. \"I can sense and even see them, but I've never been able to talk to a vampire. That's Kevyn's thing. Have you tried reaching out to him?\"\n\n\"No but I'm going to. I was hoping for some pointers.\"\n\n\"I would suggest that you talk to Kevyn first. My feeling is that it's a gift that you have or you don't, but Leon be careful.\"\n\nA few minutes later, Leon was talking to Kevyn while a very anxious Nadine listened. She didn't want him to reach out to Harry but as with the hunt, she knew that it would be pointless to try to stop him. Kevyn reiterated what Louise said.\n\n\"It's something that I was born with I guess. The only way to know for sure is to try it and see what happens. One thing though, he may not know where she is so make sure that you don't inadvertently give out any clues.\"\n\n\"Leon,\" Nadine said when he hung up.\n\n\"Don't try to talk me out of it,\" Leon said. \"I know what he's up to. Now that he knows that he can reach you, he's going to make our lives hell. This ends tonight and I don't care who does it.\"\n\nNadine could only nod her head. It was going to be a long night.\n\n****\n\nThe men, including Victor met in the living room. Ethan and Thorne stood side by side as allies and explained the plan.\n\n\"There is one change,\" Ethan said. \"If any of you spot Harry, kill him. Don't waste time by calling Leon, Hans or Nathan. He has figured out that he can contact Nadine and it's only a matter of time before he learns that he can actually find her. Leon will give a description before we go. In regards to William who was also a member of Olivia's team- he is to not to be harmed in any way. Thorne and I have agreed to give his family with the exception of Harry twenty-four hours to leave town. If they are spotted, let them be unless it's obvious that they're still working with Rufus.\"\n\n\"Why the free pass?\" Joseph asked.\n\n\"William saved the life of one of ours,\" Ethan replied. \"He contacted us through Travis- the one that he saved. Travis read his hands and vouches for him.\"\n\n\"There's another reason,\" Thorne added. \"Olivia asked that he be spared as a favor to her. But more importantly, William may be the one to kill Rufus. If he can do it before the night is over, the hunters will disband for now and that will give us time to get Olivia into place as the new head of the hunter organization.\"\n\n\"What about her father?\" Martin asked.\n\n\"He dies,\" Ethan replied. \"Olivia spoke to him and gave him the option of walking away and he refused. We need to find him before another group does. We promised Olivia that we would give him a quick death...\"\n\n\"That won't happen if one of the other groups finds him first,\" Nathan replied. \"If the group from the east side of the city finds him first, he'll be tortured and turned only to be tortured some more.\"\n\n\"True, but there are other groups as bad,\" Joseph said. \n\n\"The important thing here is that we all come back in one piece as well as honor our word to Olivia as much as we can,\" Ethan said.\n\nEthan felt his phone vibrate in his pocket, took it out and looked at the caller ID.\n\n\"William, what's happening? When? Yes she is still safe. Call when you can.\"\n\n\"What happened?\" Thorne asked.\n\n\"Rufus killed his successor,\" Ethan replied. \"He accused him of being a traitor and killed him before finding out what the plan for tonight is.\"\n\n\"That's good news for us,\" Thorne commented. \"Alright, go spend a few minutes with your mates and be back here in ten minutes.\"\n\nThorne stayed where he was for another minute before deciding to go see Barb and to comfort the baby.\n\n****\n\nBarb paced the room trying to figure out who was talking to her if not the baby. Between the voice and Gene she had been hearing some hard truths that she still wasn't ready to admit to. That was the reason that she turned Kevyn and the others away. To her to have let them in was to admit that she had been to some degree wrong.\n\n\"What will it take?\" the voice asked startling her. \"You are on the verge of living alone for all time. Even your child does not want you. Do you understand what that means? A child loves unconditionally, but you have already lost that love. Your family loves you, but you continue to turn them away. You will have your money, but who will you share it with? The humans have a saying- be careful of what you wish for. I would encourage you to heed that advice.\"\n\n\"Who or what are you?\" Barb asked not sure that she really wanted to know.\n\n\"I am who you have deliberately ignored from the time that you could talk,\" the voice replied. \"I am who you ignored when you tried to make your family give you more than they were able to. I am who could have saved you much pain, anger and sadness had you taken the time to listen to me and not concentrated on your own needs.\"\n\n\"Are you saying that you're my conscience?\" Barb asked out loud.\n\n\"I am many things,\" the voice replied.\n\n\"What kind of answer is that?\" Barb asked irritably.\n\n\"It means that what I am changes with whatever is happening,\" the voice replied. \"For instance, let's think about that prom dress. Part of you felt guilty for the way in which you acted did you not? That was me speaking to you and me that you subsequently ignored. The same goes for your ex-husband. When you lied about giving him a child,that was me speaking to you. In those cases I was as you call it, your conscience. Let's move forward to the night that you went to the club. Something told you not to go but you did. Even as you stood in line, something was telling you to leave, but you stayed. When your family came for you, you knew that you should have left with them but your greed led you to ignore what you knew to be true. In those cases I was your instinct.\"\n\n\"What are you now?\" Barb snapped. \"My advisor?\"\n\n\"I suppose you can think of me as such,\" the voice replied. \"I am also the one who can help you salvage your relationship with your family and child if you so wish it. But more importantly, I can help you salvage your relationship with yourself.\"\n\n\"There's nothing to fix!\" Barb retorted.\n\nThe voice sighed and then spoke again.\n\n\"There will come a time when even I will grow weary of you and my patience is supposed to be infinite. There will come a time when you will no longer hear me. That day is rapidly approaching.\"\n\n\"Oh just great! My so called conscience bails on me too!\" Barb exclaimed.\n\n\"Unfuckingbelievable,\" the voice said. \"Have you not been listening? Even after all that I have told you, you continue to think of only yourself and your needs. I understand now. You want a whipping post. Your only interest is blaming others for your choices. You don't want to make amends with your family. You don't want to find a way to accept and love the child that you carry nor do you truly want a mate. You only care for yourself. I do have to wonder where this attitude came from. Your parents were kind and loving people. I know what you say-abuse, but you and I know that its bullshit. It's just an excuse that you use so that you can treat others as you please.\"\n\n\"I was abused...\"\n\n\"Again, I repeat,\" the voice said. \"It is utter bullshit! I was there remember? Mark my words Barbara Yancy Simpson... your time grows short as does my patience.\"\n\nBefore Barb could say anything, the voice was gone.\n\nAdrianna watched from the small den that adjoined the bedroom. \"Just give a little,\" she murmured. When she saw Barb do what she had done for her entire life, Adrianna shrugged and went back to her laptop. Her thesis was due in a little over two months.\n\nBarb shakily sat on the bed. It felt as if the conversation with herself had taken more than an hour instead of the fifteen minutes that had passed. She wondered if she was losing her mind and if she had a psychiatric condition. Schizophrenia topped the list. Thorne screwing with her came in second, the baby came in third.\n\nAfter thinking about it, Barb came to the conclusion that none of the three options were true which meant that she really had heard and carried on a conversation with the voice. Whether the voice was all that it claimed to be was another thing altogether, but deep down she knew that it hadn't lied to her about what it was.\n\nShe still maintained that she couldn't change into the nice person that her sisters and brothers were. She wasn't even sure that she wanted to. As far as the baby was concerned, she hadn't changed her mind on that either. She knew that her sisters were hoping that once she had him and saw him that she would feel an overwhelming amount of love for him. But she knew better. She was who she was and part of that did not include a child.\n\n\"But can you at least admit to your part in his conception?\" the voice asked and then faded.\n\nBarb was going to reply when Thorne walked in.\n\n\"We're leaving in ten minutes,\" he said. \"I want to spend a few moments with our son. I'm sure that he is frightened.\"\n\nBarb bit back a sarcastic remark and lay down on the bed. She looked down at her stomach and frowned. Unless she was imagining things, it had grown. The barely noticeable bump was now very noticeable.\n\n\"Vampire babies grow quickly in the womb although they are carried for a longer time than human babies,\" Thorne explained. \"Didn't Gretchen tell you this?\"\n\nBarb thought back. She vaguely remembered something being mentioned the rate of growth, but she hadn't cared so she didn't listen. Instead of admitting that she hadn't listened to half of what Gretchen told her, she snipped.\n\n\"Of course I remember! I just forgot.\"\n\nThorne gave her a cool grin telling her that he knew better. When she was settled on the bed, he placed his hands on her stomach and began to massage it as he spoke in low, soft tones.\n\n\"I will return so try not to worry or be frightened,\" he said as he continued to rub. \"If by some very small chance I do not return, you will be with those who will love you as if you were born to them. When I return, I have many things that I have to change if I am to be a good father to you and I will be a good father. Rest easy; I love you.\" ",
        "Barb watched fascinated and jealously as Thorne then bent down and kissed her stomach. He lingered for a few more seconds, stood up and then spoke to her.\n\n\"I expect this to be over by morning. After things settle down, we'll talk again.\"\n\n\"I won't be your mate if that's what your wondering,\" Barb said her tone curt.\n\n\"I wasn't wondering about that,\" Thorne replied his tone just as curt. \"But I suspected as much. I wanted to talk about the future of our child and what part in it that future you wanted to play if any.\"\n\nWhen he saw Barb's surprised expression, he continued.\n\n\"I have always been honest about my feelings toward you. I have also admitted that part of the reason that we're together because of the choices I made. Just as I won't deny your family access to him, I won't deny you if you choose to be a part of his life. I have to go, but think about this... think about your part in this.\"\n\n\"This isn'....\"\n\nBut Thorne was gone. He already knew what she was going to say.\n\n*****\n\nThe streets were empty except for the hunters and their prey. The few humans that were out quickly found cover when they saw the two factions roaming the streets. Every so often, a vampire or wolves who hadn't heard the warnings were caught unawares. Half of those were killed; the other half either escaped or was rescued.\n\nEthan and Thorne sniffed the air, but neither made any comment. The tension was thick, almost palpable. \n\n\"Are you ready to do this?\" Ethan asked.\n\n\"It has to be done,\" Thorne replied. \"This makes me think of our fathers. I can still remember seeing them talking together about how best to protect us. I guess it's come full circle.\"\n\n\"I suppose it has,\" Ethan agreed. \"Good luck and be safe,\" Ethan added extending his hand.\n\n\"You too,\" Thorne replied taking Ethan's hand and shaking it. It occurred to him that he liked Ethan.\n\n***\n\nNoel stood back watching the two vampires who just several weeks ago were enemies. A thought began to niggle on the back of his mind, but it wasn't clear enough that he could get a grasp on it. As soon as he tried to force it, he felt the beginnings of a headache.\n\n\"Not time yet,\" he murmured and went his post. On his way, he made a check on where the women and children were. They had already congregated in the living room. The only person missing was Barb. He stopped to look at the faces and saw the fear. He wished that he could say something to allay it, but he couldn't think of anything.\n\nHe passed Joseph who was on his way to the roof and then Martin who was on his way to the front of the house. He greeted each of them with a nod and took his place in the back. While he kept watch, he began to plan his future. He definitely was moving away as soon as the mess with Rufus Saunders was over. The question was where.\n\nHe heard a sound behind him and whirled around relieved that it was only Victor.\n\n\"What are you doing here?\" Noel asked not unkindly.\n\n\"They're all taking girl stuff,\" Victor replied. \"It's boring.\"\n\nNoel couldn't help but laugh.\n\n\"I can understand that, what would you like to talk about?\"\n\n\"Jets,\" Victor replied without hesitation.\n\n\"I'll make a deal with you,\" Noel said. \"You can stay, but as soon as I tell you to go help the women and children, you go.\"\n\n\"Deal!\" Victor replied extending his hand.\n\nThe first two hours was quiet. By the end of it, Noel knew more about model jets than he cared to; but he enjoyed talking to Victor and loved his enthusiasm. At the end of the third hour, Noel tensed.\n\n\"Victor, go back and get the others ready to leave,\" Noel said his eyes glued to the darkness.\n\n\"Whose here?\" Victor asked forgetting his promise. \n\n\"I don't know, but go now!\"\n\nVictor took off at a run leaving Noel alone scanning the darkness. \n\n\"Relax,\" a voice said. \"It's just me.\"\n\nJoseph appeared in front of him with a grim smile on his face. \n\n\"I'm just making rounds on the property,\" he said. \"Sorry if I startled you, but good reflexes.\"\n\n\"Did you see anything?\" Noel asked.\n\n\"No and it's quiet out front too,\" Joseph replied. \"I'm going to head back now, but give a shout if you see or hear anything suspicious.\"\n\nJoseph vanished leaving Noel alone with his thoughts about where he would move to. Europe he decided. He had been there to visit, but he had never lived there. His excitement grew as he began to make concrete plans to leave states. He wouldn't live in one of the family homes, he would buy his own place. He thought about the eyes in the portrait and as with the memories, he decided that when the time was right, they would find each other no matter where in the world they were.\n\n\"Is it alright now?\" Victor asked.\n\n\"It was Joseph making rounds,\" Noel replied. \"Is everyone alright?\"\n\n\"They're ok.., Uncle Martin checked on them. They're back to talking about girl stuff. Can I ask you something?\"\n\nWhen Noel gave his permission, Victor hesitated.\n\n\"What's really happening? I know that it's more than one person that we're hiding from.\"\n\n\"As much as I would like to explain everything to you, I can't,\" Noel replied. \"That has to come from your parents. But what I can tell you is that I won't let anything happen to you or anyone in your family. Now, may I ask you a question?\"\n\n\"Sure,\" Victor replied.\n\n\"Why haven't you designed your own model plane? I saw your sketches-they're good.\"\n\nVictor blushed at the compliment but had no real answer other than he hadn't seriously considered it.\n\n\"Will you help me?\" Victor asked. \"You're a real artist.\"\n\n\"But so are you,\" Noel countered. \"There are many different kinds of art. I could never hope to design a plane, but I would be more than happy to help.\"\n\n\"Yes!\" Victor exclaimed happily.\n\n\"But it will have to wait until this is over,\" Noel said smiling. \"You'd better get back to the others.\"\n\nVictor didn't argue. He was already designing his model plane in his head.\n\n****\n\n\"You really should be with your sisters,\" Adrianna said. \"You might feel better and maybe Katrina and Rachel can help answer any questions that you have.\"\n\nBarb didn't reply, but changed her clothes. Anything was better than sitting in the room with only Adrianna as company. When she tried to zip up her jeans, she groaned. She had no choice but to wear one of the maternity outfits that Louise had given her. She had to admit that Louise had good taste and that she actually liked the colors of the outfits. The pale yellow top looked nice with the maternity jeans and felt comfortable.\n\nAll chatter stopped when Barb walked in with Olivia. Louise was the first to greet her and then the others.\n\n\"We're glad that you came,\" Juliette said hugging her.\n\n\"Well,\" Barb said dryly, \"it beats sitting in my room with Adrianna.\"\n\n\"We're still glad that you're here no matter the reason,\" Louise said taking her hand. \"That's a good color for you,\" she added noticing that Barb was wearing one of the maternity outfits.\n\n\"I had nothing else to wear,\" Barb replied instead of saying thank you. \n\nShe ignored the little twinge of guilt that she felt and sat down. She settled in her seat and prepared to be bored. In spite of herself, she grew interested in the conversation. She just didn't get it. Both Katrina and Rachel married their rapist and had children with them. Kevyn married a rapist and Louise was married to a child of rape. She looked around to see where the children were and spoke up when she saw that they were on the other side of the room.\n\n\"Explain to me how you married men that hurt you.\"\n\n\"There is no easy explanation,\" Rachel replied. \"Martin and I were meant to be together even before the rape occurred. It took a lot of time for me to know and accept that...\"\n\n\"But he hurt you! And then my sister marries someone who hurt other women.\"\n\n\"Barb,\" Katrina said softly. \"It's a hard thing to explain and even harder to understand. I won't tell you that I still don't get angry, because I do. I'm also not going to sit here and justify what they did because it doesn't change anything and it was wrong no matter the reason that it happened. All I can say is that they owned up to what they did and are trying to help others. They are now the men and vampires that they were meant to be.\n\n\"Why aren't they in prison?\" Barb asked.\n\n\"In the human world they would be,\" Rachel explained. \"In this world-the vampire world rape isn't illegal. That's something that we're working to change but as in the human world, change happens very slowly if not slower. Vampires as I'm sure you've seen are slow to change the familiar. In the meantime, we're doing all that we can to stop not just rape, but other violent crimes as well. I agree with Katrina- Martin and Ethan have owned their past and are now the men and vampires that they were meant to be. Like her I still have my moments and I always will.\"\n\nThe words \"owning up to what they did\" caught Barb's attention. That seemed to be a recurring theme with everyone who talked to her. Thinking that the subject was closed, the conversation went from the rapes to adjusting to life as a mate of a vampire. Barb stopped listening. She was Thorne's mate in name only and that was as far as it was going to go. As the discussion continued, she looked over at Louise who was radiant. Her small hand rested on her stomach and every so often rubbed it.\n\nBarb jumped when she felt a hand on her stomach and then relaxed when she realized that it was Celeste. Barb looked down at Celeste and could see her lips moving. After a few minutes, Celeste smiled and moved away from Barb without speaking. Barb wanted to know what transpired between her niece and the baby but was too afraid to ask. Celeste still scared and freaked her out.\n\nShe looked over at Nadine remembering how she had treated her when she was a housekeeper at the hotel. How was she supposed to know that the woman was a card carrying member of Mensa? \n\n\"Looks can be deceiving can't they?\" the voice whispered. \"Look at the vampire that was to be your mate.\"\n\n\"Shut up!\" Barb hissed under her breath.\n\nShe looked up to see Louise watching her and quickly looked away. She didn't want anyone to know what was going on inside of her head. The baby talking to Celeste was already too much. \n\n\"Do you think that the guys are alright?\" Juliette was asking nervously.\n\n\"You would know if something happened to Hans,\" Rachel replied. \"That's part of the connection that we were talking about. All of us have the capability to reach our mates telepathically although I wouldn't recommend trying it tonight- we don't want to distract them.\"\n\nJuliette nodded and blinked back tears. When Celeste climbed into her lap, Juliette held her so tight that the girl squirmed. Celeste whispered something in Juliette's ear and Juliette relaxed, but only slightly. As Barb watched, she realized that she hadn't even thought about Leon and he was her brother. A small trickle of reality began to trickle into a small crack that she didn't know was there.\n\nHer next thought was that she hadn't given Thorne a second thought since he talked to her before leaving. Even as she thought about him now, it was in reference to the baby. She wanted him back in one piece because he would take the baby off of her hands. If he died, the possibility that the others would change their minds about taking him was a very real possibility. \n\n\"So selfish,\" the voice whispered.\n\nLike she had done so many times before, Barb ignored the voice and turned her attention back to the group. The conversation had changed to Katrina and Rachel's work.\n\n\"We're always looking for volunteers at the fundraisers and at the children's homes,\" Katrina said.\n\n\"I'm swamped with classes,\" Kevyn said, \"but I'll do whatever I can to help.\"\n\n\"Me too,\" Louise and Juliette chimed in.\n\nBarb tuned them out again and let her mind wander. She daydreamed about where she was going to live after the baby was born. Going back to Pittsburgh was at the top of the list. After thinking about it, she decided that maybe that wasn't a good idea. She had too many friends who would cling to her because she had money. She heard the voice laugh, it's disbelief clear and ignored it. She needed to go somewhere where no one knew her. The only thing that she was sure of was that she wasn't going to stay in California any longer than she had to. \n\n\"What about your child?\" the voice whispered. \"Do you plan to stay out of his life?\"\n\n\"Shut up!\" Barb said not realizing that she had spoken out loud until it was too late.\n\nShe looked around to see everyone staring at her. Of all the eyes looking at her, only Celeste's had a knowing look in them. Barb met Celeste's eyes and inwardly cringed. Celeste more than made her nervous, she frightened her. It reinforced the thought that she had to leave the state as soon as possible.\n\nShe was angry that she was so afraid of a six year old and struggled not to react as she normally would have- with sarcasm and a sharp tongue. One, she knew that none of the adults would tolerate it and two; Victoria Sinclaire scared her almost as much as Celeste did.\n\n\"Barb, are you alright?\" Kevyn asked concerned. \"Do we need to call Gretchen?\"\n\n\"No,\" Barb replied with a dry mouth. \"I'm fine. I need a drink of water.\" \n\nShe stood up to go to the kitchen and suddenly Victoria was blocking her way. \n\n\"Not the kitchen,\" Victoria said in a tense whisper. \"You can't go into the kitchen.\"\n\nUp until this point, Veronica and Vanessa had remained silent. They were sitting in the back working on their laptops. Veronica was the first to reach her.\n\n\"Victoria honey, it's alright,\" Veronica said softly as she knelt in front of her. \"Noel is in the kitchen, Uncle Martin is in the front and Uncle Joseph is on the roof...\"\n\n\"Don't let her go into the kitchen,\" Victoria said sobbing as she threw her arms around Veronica's neck.\n\n\"Alright, we won't let her go into the kitchen, okay? Calm down,\" Veronica said stroking Victoria's back. \"No one is going to go into the kitchen.\"\n\n\"Pumpkin,\" Katrina said as she knelt beside the trembling girl. \"We're all safe and no one is going to take anyone away.\"\n\nVictoria released Veronica, threw herself into Katrina's arms and allowed herself to be carried away. Veronica stood up, looked at Barb and then walked away making it clear that she hadn't forgotten that Barb had made a pass at Rik.\n\n\"Strange kid,\" Barb muttered and continued on the kitchen.\n\nNoel turned around when he heard her enter and then looked back toward the property. He didn't have anything to say to his sister in law, at least nothing nice so he kept his mouth shut. Then he remembered the baby. \n\n\"How are you feeling?\" he asked glancing back at her.\n\n\"Are you asking about me or the baby?\" Barb retorted.\n\n\"Both of you,\" Noel replied. \"Just because I don't like you doesn't mean that I'm not concerned about your welfare.\"\n\n\"I don't care too much for you either,\" Barb replied. \"What grown man lets his brother support him?\"\n\n\"Is that what you think?\" Noel asked.\n\n\"That's exactly what I think,\" Barb replied. \n\nNoel laughed and shook his head, but didn't say anything to defend himself.\n\n\"Aren't you going to say anything?\" Barb asked.\n\n\"No I'm not,\" Noel replied. \"It's none of your business for one and for two you seem to think that you know it all. Last of all, I don't have to explain to you why I'm living with my brother. I would think that you have more important things to think about instead of why I'm living with Thorne.\"\n\n\"What did he tell you?\" Barb asked sure that Thorne had told Noel about the options that he presented to her.\n\n\"Nothing but I know my brother,\" Noel replied. \"Your question just told me that you haven't learned much and you don't know as much as you think you do. Thorne is a very private person. He doesn't kiss and tell as it were. You should also know by now that Thorne is not one for petty games and he pulls no punches.\"\n\nNoel's cell phone rang interrupting Barb's reply.\n\n\"Thorne?\"\n\n\"How are things there?\" Thorne asked.\n\n\"Quiet-what about out there?\"\n\n\"Busy, but so far the only casualties are on the hunter's side. I just wanted to check in. I'll call again later.\"\n\nWhen Noel hung up, he wasn't surprised to see that Barb was gone.\n\n****\n\nOlivia paced. Benita and Kenneth had given up on calming her and she refused to be compelled to sleep. She had met Grant and his mate Calinda and accepted them as part of her security detail. The other vampire couple, Hugh and Jackie was due in the next night and would meet with Olivia. The other wolf couple, Milo and Natasja would be in by morning to meet with her.\n\nShe wanted to ask Benita about the vampire couple and Grant about the wolf couple but refrained. She didn't want any preconceived ideas. She would do what Benita encouraged her to do- trust her instincts. On the plus side, none of the couples knew each other except by reputation. Her thoughts went from the meeting with the couples to her father. Was he still alive or did he take her advice and leave? Her heart raced when she thought about her role in his demise.\n\nIt didn't occur to her to change her mind about his death-it was a necessity if there was ever going to be peace. Her mind raced with all of the possible scenarios of his death-none of them pleasant. Thoughts of her father's pending death triggered thoughts about William. She could only hope that he came out of it unscathed.\n\nSuddenly, she wanted William to kill her father if he had to die. William had no love for him, but he wouldn't torture him nor would he turn him. Also knowing William, it wouldn't be an out and out murder. He would give her father a chance to defend himself thus giving him a degree of dignity. Olivia was coming to believe that it was more than her father deserved.\n\n\"Can you get me a laptop?\" She asked. \"I need to do something to occupy my mind.\"\n\n\"I'll get mine,\" Kenneth said as he stood up. \"What else do you need?\"\n\n\"For this to be over,\" Olivia replied.\n\n\"Olivia,\" Benita said when they were alone, \"what is William to you that you asked that he be spared?\"\n\n\"Nothing- he warned me about Harry and stayed with me at the club until he had to leave.\"\n\n\"Correct me if I'm wrong,\" Benita said, \"but it seems that William is more to you than someone who just warned you.\"\n\n\"What are you saying?\" Olivia asked.\n\n\"I'm just making an observation,\" Benita replied with a small smile.\n\n\"Here's the laptop,\" Kenneth said as walked in completely unaware that he had interrupted something.\n\nOlivia, grateful for the interruption took the laptop and sat at the table. Moments later, she was typing.\n\n****\n\nThorne appeared behind his club, took a quick look around and vanished. He was surprised that it wasn't burned to the ground. He touched base with Ethan and continued his patrol along with three other vampires. One was from his security firm; the other two were from Ethan's. Ethan's crew was made up of one of his own security team and two from Thorne's. It was a token of trust on both sides.\n\n\"Have you heard from William yet?\" Thorne asked during one of the check-ins.\n\n\"No and things are still quiet at the house. So far no one has spotted either Harry or Rufus. So far we've captured three hunter crews before any of the more radical vampire groups got them.\"\n\n\"Good,\" Thorne replied. \"I wish that I could say that we did as well. We've found an entire team of hunters drained dry. Just to be sure we decapitated them. Ethan, I don't need to tell you that we need to find Rufus sooner rather than later. At some point he's going to realize that he's better off leaving and we may never find him again.\"\n\n\"I know,\" Ethan replied. \"It's beginning to look as if William is our only real chance of getting rid of him.\"\n\nThorne didn't say anything, but he agreed and silently wished William luck and Godspeed.\n\n****",
        "Harry was full of himself. He wondered why he hadn't realized sooner that he could touch Nadine telepathically. Had he realized that, the others wouldn't have had to die. The only thing that really concerned him was the presence that he felt when he touched Nadine. He couldn't tell if it was male or female only that it was powerful. That should have given him pause, but it didn't. He was focused on the knowledge that he now had unlimited access to Nadine. He wondered if he could make her relive the assaults. Instead of leaving as he planned, he decided to try. He looked around and assessed his surroundings. Sensing no one, he closed his eyes and concentrated on Nadine.\n\n****\n\nNadine had actually managed to relax and was having a good time- as good as could be expected anyway. The only issue had been Victoria's reaction to Barb going to the kitchen. As she listened to Katrina and Rachel talk about how they had managed to not only survive brutal rapes but married their rapist, she realized that Leon was right. These women could help her deal with what happened to her.\n\nShe had just made up her mind to talk to them when she felt Harry in her head. Then she felt his hands on her skin. She jumped so hard that she tumbled out of the chair. She could hear herself screaming \"no! No!\" just as she had back then only this time, someone helped her. \n\nShe heard her name being called and then hands on her. There was a voice whispering in her ear for her to breathe. Louise. \n\n\"He can't hurt you, you're with us,\" Louise said. \"I'm with you.\"\n\nBut it felt real. Nadine struggled to do as Louise told her. She tried to take a deep breath but all that came out was a sob. \n\n\"Dina?\" she heard inside of her head and sobbed in relief. \"Baby are you alright?\"\n\nShe could only nod. She didn't trust herself to speak. She took a deep breath to calm her nerves and was finally able to talk.\n\n\"I... I'm ok.\"\n\n\"He was in your head again wasn't he?\" Leon asked. \"The sick son of a bitch!\" he said not giving her a chance to respond. \"Don't worry baby, this ends tonight.\"\n\nA few minutes later, Louise knew the general vicinity where Harry was hiding. A couple of minutes after that, she knew exactly where he was. She could feel Nathan in the back of her mind and knew that he was angry. In her mind, she had done the right thing. She and the baby were both fine and Nadine and Leon could be rid of Harry. \n\n\"Nadine,\" she whispered, \"give this address to Leon. Harry is there but he won't be for long. He can feel me.\"\n\nNadine hesitated and then telepathically relayed the message to Leon.\n\n\"Got it,\" Leon said, \"now try to relax he won't come near you again.\"\n\nAs if to negate what Leon was saying, Nadine felt Harry's none to gentle touch on her face. She bit back a scream and steadied herself reminding her that Harry wasn't there and that he was toying with her. Then he was gone. Nadine sagged in relief and let the tears flow. Juliette and Kevyn helped both Nadine and Louise to their feet and lead them to chairs.\n\nBarb seeing what was happening when she came out of the kitchen went back, got a tray and put glasses of water and juices and took them back to the living room.\n\n\"Here's something to drink,\" she said lowering the tray so that Louise could take a glass. She then took the tray to Nadine who took a glass of water and thanked her.\n\n\"Thanks Barb,\" Louise said after she finished her glass of juice.\n\n\"You're welcome,\" Barb replied. \"I'm going to bed, keep me posted.\"\n\nWhen she got to her room, she realized that she hadn't asked what happened or if Louise was alright. She hadn't even asked about Louise's baby. She started to go back and changed her mind. She would ask later.\n\n*****\n\nWilliam was on high alert. Even though Caleb was dead, Rufus was doubly dangerous because he had been challenged and he was acting impulsively. He reminded William of Hitler in the way that he disregarded the advice and observations of his crew leaders just as Hitler had ignored the advice of his generals. Word about Caleb had spread like wildfire. William could see it in their eyes. If Rufus's goal was to reestablish control, he had done that. He had also by refusing to listen, ensured the needless deaths of many of his men.\n\nWilliam said nothing. He supposed that some of the hunters weren't necessarily bad people, but for now; all of them with the exception of Olivia was the enemy. He wondered which of the hunters would be the first to try to assassinate Rufus. He looked at the men surrounding Rufus and decided that it would be none of them. \n\nWhile it was obvious that they hated Rufus, it was equally as obvious that they were afraid of him. William had to give Rufus credit. He was smart enough to change out his personal guard after he killed Caleb. He surrounded himself with men who would do as he said without question no matter how they felt about him. William also wondered if push came to shove if any of them would do anything to prevent Rufus's death.\n\nHe didn't think so. Especially if they had someone- him to take the blame for it. William shrugged as he realized that he could conceivably die. It didn't matter as long as Olivia was safe and as long as she stayed with the Blackwell/Sinclaire factions; she would be.\n\nHe took another moment to think about his family hoping that they took advantage of the opportunity that he had obtained for them. Harry he knew was a lost cause. He had been a lost cause even before they had been turned by a coven of vampires who caught them while they were trying to escape to the north. The vampirism had only made his insanity more visible. William inwardly sighed and redirected his complete attention to what was going on around him. By morning, not only would Rufus Saunders be dead; so would Harry. It bothered him that he didn't really feel sad about it.\n\nWhen they left the house, William hung back and waited for his opportunity. If it didn't present itself, he would create one. Whenever he could, he tried to help someone caught out on the street. It didn't matter what species they were-they were at a disadvantage. There were a few times that he couldn't do anything except watch. To do otherwise would have tipped his hand too much. Rufus was already suspicious of him which is what he wanted.\n\nWilliam felt Rufus looking at him as if he had been reading his thoughts. William looked back at him and gave him a cold smile. He almost laughed at Rufus's startled expression. Rufus had expected him to be afraid especially with so many hunters around. William stared at Rufus until Rufus turned away under the guise of giving an order.\n\n\"Soon,\" William thought to himself as he watched Rufus walk away.\n\n****\n\nHarry was having a good time. He was having such a good time that he lost track of time and abandoned his plan to leave. He was like a child playing with a new toy. He first became aware that something wasn't quite right when Nadine stopped reacting to him in fear. The next thing to alert him was that the other presence in her mind was stronger than he had originally thought. So strong in fact that he could give it a sex-female. He wondered how that could be. It didn't occur to him that the other presence could track him to his exact location. How could she? They hadn't shared blood. Nadine however was another matter. If he could find her, then she could find him. That realization made him wonder why she hadn't done it.\n\n\"Panic,\" he said with satisfaction.\n\nHe looked around him and realized that he had been in the same spot for much longer than was wise. It was time to go except- he couldn't move. \n\n\"Hello Harry,\" Leon said from behind him.\n\nHarry stopped struggling and waited for Leon to come to him. His eyes widened when he saw Leon. Leon was taller than him by several inches and outweighed him by more than fifty pounds but- he was the older of the two of them. He could tell that Leon wasn't very old as a vampire- less than a year at least and that was to his advantage.\n\n\"Nice trick,\" Harry said with a smile. \"You must be the mate to MY Nadine.\"\n\nLeon recognized the statement as a goad and didn't react the way that Harry hoped that he would.\n\n\"You really are as stupid as Nadine said you are,\" Leon replied. \"You could have been long gone, but you stayed. That is a mistake that will cost you your life.\"\n\nThe smile left Harry's face and was replaced by a smirk.\n\n\"Are you going to kill me?\" Harry asked. \"My guess is that you've never killed anyone. What makes you so sure that you can kill someone now?\"\n\n\"Because of Nadine,\" Leon replied. \"You hurt her and you're still hurting her. I may feel guilty about killing you, but I'll deal with it.\"\n\n\"You are newborn,\" Harry said with a derisive laugh. \"How do you plan to kill me? Let's make a deal shall we? Release me and I'll let you go. Release Nadine to me, she is rightfully mine and I'll let you live.\"\n\nMuch to Harry's surprise, Leon burst out into a full bellied laugh and he didn't like being laughed at.\n\n\"Nadine didn't tell me that you were a comedian. That's probably one of the funniest things that I ever heard. The answer is no. I would die before I let you anywhere near her and that includes mentally. So let's get this over with.\"\n\nSuddenly Harry was able to move. He looked around and extended his senses. Surely the new vampire hadn't come alone. He was right; he sensed two others not far away. He didn't recognize the scent of either of them, but he could tell that one of them was old; much older than he was. He wondered who they were and who this new vampire was that he had such an old one with him. One of them had to be his maker. It was the only thing that made sense.\n\n\"So you brought friends,\" Harry drawled hoping that Leon would slip up and reveal who they were.\n\n\"I wasn't stupid enough to come alone,\" Leon replied. \"But don't worry. They won't interfere unless I can no longer defend myself.\"\n\n\"Hmmm, I would like to meet who it is that I will be killing after you,\" Harry said.\n\n\"Dude, seriously-do you think that I was born yesterday?\" Leon asked with a chuckle. \"You're fishing for information. It doesn't matter who they are, the fight is between you and me.\"\n\nHarry was becoming unnerved. He didn't like the confidence that Leon was exhibiting. It made him nervous that Leon wasn't afraid of him.\n\n\"Do you understand that once you're dead there will be nothing that will keep me from finding and fucking your mate?\" Harry asked trying to goad Leon into attacking before he was ready.\n\n\"What I understand is this,\" Leon replied. \"Even if you manage to kill me, Nadine will never go with you. She would kill herself first. I also know this, even if I die; you die too. My unseen friends will ensure that. So what are we going to do? Time's passing by and I have things to do.\"\n\nInstead of Leon acting rashly, Harry did. He charged Leon thinking that he had the element of surprise on his side. When Harry reached him, Leon vanished and appeared behind him. Harry whirled around and bellowed in anger. There was one thing that he hated even more than being laughed at- it was being made a fool of and that's what the new vampire was doing. Instead of taking the opportunity to vanish, Harry charged again. This time, Leon didn't move. He stood with his hands balled into fists at his side and waited. When Harry reached him, he raised his hands and hit him square in the chest. It didn't take him long to realize how he was going to destroy Harry. He was going to let him do all of the work.\n\nHarry stumbled backwards and landed on his ass. He shook his head and jumped back to his feet.\n\n\"Not bad newborn,\" he said and before Leon realized it; Harry was behind him with his hands around his neck. He felt Nathan move toward them and waved him away. He used his greater height and weight to his advantage and reached behind him. He had just got his hands behind him when he felt warmth running down his shirt. Harry was trying to decapitate him.\n\n\"Shit!\" Leon swore as pain ripped through him. Once again he felt Nathan move and he waved him back. He wasn't anywhere near defenseless or dead yet. He ignored the pain and grabbed Harry by reaching back and wrapping his arms around him and squeezing as hard as he could. Startled, Harry loosened his hold around Leon's neck. Leon took advantage of the release and twisted so that he was now facing Harry.\n\n\"This ends now...\" was all he managed to get out before he felt an excruciating pain in his chest.\n\n\"I agree with you,\" Harry said as he pushed the blade of the knife deeper. \"It hurts like a bitch doesn't it? That's how it felt when that bitch buried my own knife in me. I can promise you that when I get my hands on her... I'll fuck her silly and then she'll feel the pain that I did and still do.\"\n\nLeon felt himself weakening as the blood poured from his neck and chest. The last conscious thought that he had was to Hans and Nathan.\n\n\"Kill the sick mother fucker.\"\n\n*****\n\nWilliam was still watching Rufus and planning his next move when he felt Harry die. A small part of him mourned, but a bigger part of him was relieved. He wondered who it was that killed him and decided that it really didn't matter. Even from where he was he felt his family's pain. He had no doubts that his father thought that he had turned Harry in. He couldn't think about that now- he had to rid the world of Rufus Saunders.\n\n\"I'm sorry Olivia,\" he thought to himself as he watched Rufus strutting around like a peacock even though he had received word that several of his crews had been either killed or captured. William listened with disbelief as Rufus called for more teams from as far away as Arizona and New Mexico. He no longer had the luxury of waiting for the right time. He had to kill Rufus before those teams left their respective states.\n\nHe slowly made his way closer to Rufus and was within striking distance when someone stopped him.\n\n\"Where do you think you're going fanger?\"\n\n\"Nowhere, I only wish to hear better,\" William replied.\n\n\"I thought that you guys had that supersonic hearing and all that shit,\" the hunter replied.\n\nWhen William didn't reply, the man continued talking.\n\n\"Well? What about it? Do you have supersonic hearing and x-ray vision like superman? Can you fly?\"\n\nWilliam backed up realizing that as afraid of Rufus as these men were, he had been wrong in thinking that they would allow any harm to come to him. He would have to kill Rufus without giving him a chance to defend himself. He waited until it was almost morning when the hunters would be exhausted from the hunt. When no one was watching, he vanished and ended up behind Rufus. With one strong swipe, Rufus's head flew off his shoulders and hit the ground in the midst of a group of hunters tiredly trading stories of their night.\n\nAt first no one moved. They looked at the severed head in shock and then pandemonium broke loose. They looked around them and didn't see anyone. William stood back and watched as the accusations flew and wondered how long it would be before his name came up.\n\n\"A damned vampire did this!\" someone finally shouted out. \"And I know who! It was that fanger William! He was trying to get close to Rufus earlier and I stopped him.\"\n\n\"Where is he?\" someone asked. \n\n\"I saw him a little while ago, he was back behind that tree,\" someone replied.\n\n\"Who's our leader now?\" someone else piped up.\n\nThat one question silenced everyone.\n\n\"Caleb is dead and now so is Rufus, so now what do we do?\" the same person asked.\n\nWilliam waited to hear the decision. He had to know if someone else would step up to the plate.\n\n\"I don't know about you,\" the same speaker said, \"but I'm taking my fat ass home- you do what you want.\"\n\nOne by one the others agreed.\n\n\"Hey, don't you think we'd better call the others?\" a hunter asked.\n\nThe hunter who had stopped William agreed.\n\n\"I'm thinking that they'll want to leave too,\" he said as he began to punch in numbers into the phone. \n\nTwenty minutes later, the ordered reinforcements had been cancelled.\n\n\"Stay home, we'll call you when we get back.\"\n\nWilliam breathed a sigh of relief and vanished.\n\n****\n\nEthan and his crew found and destroyed three more crews who refused to surrender before receiving the call from William. The next crew that they found was given the news.\n\n\"Your leader is dead as is his successor. I am giving you two options, you leave with your lives or you die here fighting.\"\n\n\"Liar!\" a hunter called out. \n\n\"I don't lie,\" Ethan replied mildly. \"Are you willing to die for a man that's already dead? Think about it, he sent you out here to die. He killed the only man who knew what the plan was and then he sacrificed you. How many of you have died? Do you even know? I do-the latest count was seventy of you. It's probably more by now...\"\n\n\"Oh fuck!\" a voice whispered. \"I just got a text message,\" he said in a louder voice. \"Rufus is dead... his head was cut off... they think that the vampire that was part of Olivia's crew did it.\"\n\n\"What's it going to be gentlemen?\" Ethan asked.\n\nOne by one the hunters turned away giving Ethan his answer. At the last minute, one of the hunters turned, weapon in hand and fired. Ethan ducked just as the wooden bullet grazed his scalp. Because the wound was minor, it began to heal immediately. He heard a whimper of pain and looked behind him. The vampire from his security team had been hit in the eye leaving the socket empty. Before the shooter knew what was happening, arms were around him; but they weren't the arms of his brethren. They stood silently watching as the life was squeezed out of their friend and comrade.\n\n\"That was so unnecessary,\" Ethan said quietly. \"No one had to die. Now get out of here before I change my mind.\"\n\nEthan pressed a clean handkerchief against the empty eye socket and vanished to the living room of the house. All conversation stopped when they saw him. All of the women breathed a sigh of relief when they saw that the fallen vampire wasn't one of their mates.\n\n\"Take care of him,\" Ethan said laying the vampire on the couch, \"I've got to go but it's almost over.\"\n\nHe gave Katrina and the girls a quick kiss and was gone. Vanessa and Veronica took over and began to issue orders wondering how many others had been hurt.\n\n****\n\nHarry yelped when he was yanked away from Leon and tossed to the ground. One of the vampires he recognized from seeing his picture on the internet-Nathan Sinclaire. He didn't have time to wonder how Nadine knew vampires as wealthy and well known as the Sinclaires because the other vampire was on him with fangs bared and eyes blazing.\n\n\"I want you to know who is going to kill you,\" Hans said. \"I am the one who found Nadine after you brutalized and turned her.\"\n\nHarry's mind reeled. He hadn't believed William when he said that they had almost been killed by another vampire. Even when he saw Nell's wounds he didn't believe them. He thought that they really hadn't looked for Nadine and the wounds had been administered by either William or their father.\n\n\"I wish that I had looked for you, but you're here now. Do you wish to say anything?\"\n\nIt wasn't until then that Harry truly understood that these were his last moments on earth. Oddly he wasn't sorry. He stopped struggling and relaxed telling himself that there was no point in fighting it. At the last moment, he began to fight. He wasn't going to die like this! To do so would mean that the bitch had finally succeeded in she had tried to do before and he couldn't --no he wouldn't allow that to happen.\n\nHans was glad that Harry was fighting back. He didn't want to kill a man that was ready to give up so easily. He would have done it, but he wouldn't have liked it. With one hand around Harry's neck, Hans reached down and gave a hard jab into Harry's chest. For just a moment, Harry stopped struggling. This wasn't what he was expecting. The pain was excruciating and took his breath away. It increased as Hans reached in and pulled out Harry's still beating heart.",
        "\"This is for my son and daughter,\" Hans said and squeezed.\n\nAfter the heart was no more than a mass of flesh, Hans removed Harry's head. There was now no chance that he would come back again. With a thought, Hans cleaned his hands and his clothes and went over to Nathan.\n\n\"How is he?\" \n\n\"Alive, but he's hurt pretty badly. Harry just missed his heart,\" Nathan replied. \"We need to get him to the house. You go ahead and prepare Nadine; I'll be right behind you.\"\n\nHans took one last look around and vanished to the house. He was sure that Nadine already knew and was frantic. It was much more than worry. She was in full panic mode and trying to leave the house. She had managed to break away from Kevyn when Hans appeared before her.\n\n\"Where is he?\" Nadine screamed when she saw Hans. \"Is he dead?\"\n\n\"No sweetheart, you would know if he were,\" Hans replied taking her into his arms. \"He's hurt but he's alive. Nathan is bringing him now. He needs blood.\"\n\nNathan appeared carrying Leon. Nadine tore herself away from Hans and ran over to Nathan. \n\n\"Leon?\"\n\nLeon slowly opened his eyes and focused on Nadine's face.\n\n\"Hey baby... we got him. The son of a bitch is dead. He can't hurt you or anyone else again.\"\n\n\"Nadine,\" Louise said from beside her, \"We need to feed him so that he'll heal.\"\n\nNadine hung on to Leon's hand as Nathan laid him on a sofa and opened his shirt. The bleeding had already stopped as the wound was healing from the inside out. It had really been a close call. While they waited for the first unit of blood, Nathan bit into his wrist and put it to Leon's lips. He had already given him some blood before he brought him to the house. Leon was already starting to heal by the time they arrived. It would take some time, but he would completely heal.\n\nNadine took the blood when Katrina handed it to her. Nathan moved aside so that she could feed the blood to Leon who was half asleep.\n\n\"Not yet,\" Nadine crooned. \"You have to drink this first.\"\n\n\"He's dead,\" Leon replied sleepily. \"Hans killed him. You're safe.\"\n\n\"Shush now and drink,\" Nadine said as tears ran down her face. \n\nWhen the unit of blood was gone, Hans carried Leon up to their room and put him on the bed.\n\n\"Let him sleep for an hour or so and then wake him up. He needs another unit of blood. Nadine, Leon did well. As much as he wanted to be the one to kill Harry, he stepped aside when he realized that it wasn't going to happen. Your safety took precedence over his pride. The fates chose well for you.\"\n\n\"Thank you papa,\" Nadine said hugging Hans.\n\n\"You're welcome, but we have to go help Ethan and Thorne. Keep feeding him blood every hour or so and he'll be fine.\"\n\n\"Do you really have to go back? Ethan said that it was almost over.\"\n\n\"Yes sweetheart, we do. Not all of the hunters are going to turn tail and run. I'll be back I promise, but I need to talk to Juliette and the children before I leave.\"\n\n****\n\nJuliette threw herself into Hans's arms crying in relief. Now that she knew that Leon was going to be alright, her concern switched to Hans.\n\n\"Are you alright?\" she asked running her hands up and down his arms.\n\n\"I'm fine,\" he assured her as he pulled her into his arms for a kiss. \"I'm unhurt. Where are the children?\"\n\nAs soon as Ethan appeared with the guard, Rachel had gathered the children and took them to the library. Things were frightening enough without them having to see the injured as they came in. As she read to them, she wondered what the casualties were for their side. She was almost afraid to know.\n\nCeleste was the first to see Hans when he walked into the library. She dropped the book that she was looking at and ran to him calling the name that she used for him.\n\n\"Papa-too!\"\n\nHans scooped her up into his arms, kissed her cheek and then hugged her. Victor and Wanda wrapped their arms around his waist and hugged him as tight as they could. They were beginning to understand that things weren't as they appeared and that there was something very different about their step-father and the others.\n\n\"I came to see you before I left again,\" Hans said as he sat Celeste on her feet. He kissed Wanda and then Victor on the cheek and then hugged them. \"I know that you are very frightened, but don't be. It will be over soon and we can go back home.\"\n\nVictor and Wanda each took one of Celeste's hands and watched Hans walk away. Of the three of them, only Celeste knew for certain that Hans was coming back.\n\n*\n\nOnce Leon was settled, Nathan pulled Louise aside and hugged her. He was as angry with her as he was proud.\n\n\"Nathan, I had to do something! I couldn't just sit by and watch as Nadine suffered!\"\n\n\"I know sweetheart but you could have led him back here,\" Nathan replied. \n\n\"He would have eventually found us anyway,\" Louise countered. \"My reaching out to him prevented that didn't it? He's dead isn't he?\"\n\nNathan didn't say anything, she was right.\n\n\"Alright,\" he said after a moment's silence. \"You're right but that doesn't mean that I have to like that you put yourself in harm's way like that. Are you and the baby alright?\"\n\n\"We're fine. I'm tired but I'm fine. Is what Ethan said true? Is it almost over?\"\n\n\"In a manner yes,\" Nathan replied. \"But in many ways it's just beginning.\"\n\nThey talked for a few more minutes before parting with a kiss and a promise of spending two days in bed as soon as they could. \n\n\"I miss you,\" Nathan said hugging Louise again.\n\n\"I miss you too, don't worry about us; we'll be fine. Just make sure that you come back in one piece.\"\n\n****\n\nBarb went back to the group when Adrianna told her about Leon. She stood back and watched as the women of the group gather around Nadine and offered her comfort. She wanted to move closer but didn't. She felt like she was watching a movie in which she played no part.\n\n\"That's because you wrote yourself out of the script,\" the voice said. \"But you could write yourself back in. You could be a part of that no matter what happens between you and your mate. You could still be a part of your son's life... don't humans do that all of the time?\"\n\nBarb didn't answer and the voice went silent content that it had made its point. Still Barb didn't move. When she was sure that Leon was alright, she went back to her room to think. A headache had settled right behind her eyes bringing tears to them. The headache was rapidly growing in intensity and if she didn't so something soon it would be out of control.\n\n\"Headache?\" Adrianna asked. \n\n\"Yeah-migraine,\" Barb replied feeling slightly nauseated.\n\n\"You're stressed-it isn't good for the baby. Lie down on the bed and let me see if I can help,\" Adrianna said.\n\nBarb hesitated wanting to say that she didn't need help but the pain was becoming blinding. She didn't see where she had much choice. She lay on the bed and closed her eyes belatedly realizing that she hadn't asked about any of the men. She tensed waiting for the voice to speak; relaxing as much as she could when it didn't. She was getting to the point where she hated its effeminate voice- she had decided that the voice was most definitely male.\n\nShe felt a cool hand on her temples that began a slow, firm but gentle massage. The nausea was the first thing to go and then finally as the migraine began to ebb; Barb fell asleep. \n\n*****\n\nThorne was receiving casualty reports. While the news wasn't great, it wasn't horrible either. There had been several injuries most of them non-fatal. There had been five deaths, three wolves and two vampires. Four wolves and one vampire were missing in action and were being searched for. Thorne hoped to find them alive and unhurt, but he had his doubts.\n\nHis crew alone had destroyed four crews of hunters and were zeroing in on a fifth when Ethan called him with the news of Rufus.\n\n\"What's your casualty count?\" Thorne asked.\n\n\"As of now, three dead, seven injured-of those four are serious and two missing. We're looking for them now.\"\n\n\"I have casualties as well,\" Thorne replied. \"This could have been much worse. Where's William?\"\n\n\"Safe, I told him to go back to the house where he found Travis. He should be safe there.\"\n\nEthan told Thorne that he had been giving the hunter groups that they came across the option of leaving peacefully or to stay and die.\n\n\"Good,\" Thorne replied. \"I'll start doing the same thing. I'll let the other groups know too.\"\n\n\"I think that I got most of them,\" Ethan said. \"I haven't been able to reach the Bakersfield and the Phoenix groups.\"\n\n\"I'll try too, between the two of us we'll reach them. I was thinking about Olivia. I think that we should deliver the news about her father in person.\"\n\n\"Agreed,\" Ethan said. \"I would also like to suggest that we take Louise with us. If I'm not mistaken, Olivia and she seemed to share a bond of sorts.\"\n\n\"Good Idea, I'll see you at the house in a few hours,\" Thorne said and hung up.\n\nThe rest of the night was spent looking for the missing in action and the crew of hunters that hadn't been given the choice of walking away or death. All of them chose to walk away. Some of them swore that they would be back, but most of them had had enough. Of the missing all but three had been found alive. Both Ethan and Thorne dreaded going to the mates of these fallen to tell them the news although they already knew.\n\nThe sending off ceremonies for all of the dead would take place as soon as possible. Vampire and wolf alike would be equally honored and their families would be taken care of for the rest of their lives. That wouldn't mean much compared to the loss of a mate, but it was the best that could be done.\n\nBy dawn the last of the hunters had left the area. The feeling of tension that had been in the air for days were gone replaced by a feeling of sadness. All of the vampire and wolf crews had been sent home after a final sweep of the area.\n\nThorne and Ethan appeared in the house in different locations. Ethan outside of his and Katrina's bedroom- he still had to give her warning when he was going to come in and Thorne in his office. Katrina opened the door before Ethan had a chance to call out.\n\n\"Is it over?\" she asked reaching for him.\n\n\"For now- where are the twins and Victoria?\" Ethan asked.\n\n\"The girls are with Rik and Luc and Victoria is with Wanda and Celeste waiting for Hans, Nathan and Patrick to come back.\"\n\n\"They're not back?\" Ethan asked. \"They should have been back by now...\"\n\nEthan's phone vibrated in his pocket. He breathed a sigh of relief when he saw that it was Nathan.\n\n\"Where are you?\" he asked.\n\n\"Doing a final sweep around our homes,\" Nathan replied. \"We're headed back. Has anyone told you about Leon yet?\"\n\n\"I just got here,\" Ethan replied. \"Is he alright?\"\n\n\"I'll tell you what happened later, but he's going to be fine. Harry won't be a problem anymore-Hans killed him. I gather that Rufus is dead?\"\n\n\"Yes, William killed him,\" Ethan said. He had one arm wrapped around Katrina and wanted the call to end so that he could greet her properly and then see his girls. \"We'll talk more when you get back. For now I have a mate and children to greet.\"\n\n***\n\nThorne sat at his desk for several minutes before going to see Barb. He knew that she was half hoping that he wouldn't come back. The only reason why she wanted him to live was because she was afraid that she would be left with the baby. He pushed aside his anger and thought about the baby. The child was feeling enough anger as it was and didn't need to feel it from him. By the time he reached Barb's room, he had made a decision.\n\nHe tapped on the door and walked in. Barb was awake and looking at something on her laptop. She looked up at him but didn't speak. The expression on her face said it all. Thorne ignored it and approached the bed.\n\n\"I would like to speak with our son.\"\n\nBarb sat the laptop on the bed and sat back. She said nothing as Thorne sat on the bed beside her and touched her belly.\n\n\"I am back as I have promised so rest easy.\"\n\nBarb listened to the tenderness in Thorne's voice and felt a pang of... the voice inside of her sighed in frustration but remained silent. Thorne sat with his hands on Barb's stomach for several more minutes before standing up.\n\n\"I must leave for a while,\" Thorne said. \"Olivia needs to be told of the death of her father. Once things have settled, we'll talk.\"\n\n\"What's there to talk about?\" Barb asked. \"I get it-you don't want me and that's fine...\"\n\n\"I don't want to talk about this now,\" Thorne cut in. \"People have died and their loved ones must be told. There is a sendoff service to be planned- our issues can and will wait.\"\n\nHe walked out content that the baby was calmed and turned his attention to other business. On the way out of the bedroom he ran into Noel.\n\n\"Where are you going?\" Thorne asked surprised. Noel usually stayed in his room only coming out for meetings or when he was needed.\n\n\"I came to see Leon,\" Noel replied. \"He was injured fighting Harry but he's on the mend.\"\n\n\"Good, I'll stop in,\" Thorne said.\n\n\"Thorne-it was good to see you and Ethan working together. It reminded me of father and Steven Sinclaire in the old days.\"\n\n\"I would be lying if I said that it didn't feel good,\" Thorne said with a small smile, \"but there are still issues that need to be discussed. But as I just told Barb about our issues, the issues with the Sinclaires will have to wait.\"\n\nAfter he stopped in to see Leon, Thorne went back to his office and began making phone calls. By the time he was finished, Ethan was in his office.\n\n\"I talked to Nathan; he'll be here in a minute with Louise so that we can talk to Olivia. After that we can begin to make our rounds to the families of the fallen.\"\n\n\"I have the feeling that we're going to be making more of these visits in the future,\" Thorne said his expression grim.\n\n****\n\nWilliam passed the time by helping Travis polish the silverware. He wanted to call for updates but knew that he would have to wait until closer to morning. He wondered if Olivia knew that her father was dead and what her reaction would be when she found out that he had been the one to kill him. He also wondered if she had begun to think about him as a man and not one of her crew.\n\n\"What's swirling around your head?\" Travis asked. \"I've polished half of my pile and you're still working on the same piece.\"\n\n\"Gr... Travis, do you think that it's possible for a woman to forgive the man who killed her father?\"\n\nTravis hesitated for several minutes before replying.\n\n\"Son, I've never had a mate so I'm not the one to ask about the affairs of the heart. However, I do know about forgiveness. I see it every time I see Mr. Ethan with his family. Mr. Ethan's mate forgave him after he hurt her in a way that no one- male or female should be hurt. The same goes for Mr. Martin and his mate. It took time but the forgiveness came. It wasn't easy and from time to time I still see the effects of what happened, but they love each other. So the answer to your question is yes. It's possible that your young lady will forgive you.\"\n\nWilliam felt better after hearing the answer to his question. He knew about the Sinclaires- who didn't? But to know that there was the possibility that Olivia could forgive him even if she didn't accept him as her mate took a load off his mind.\n\nFinally he decided that he could call Ethan and ask for an update. He closed his eyes in thanks when he heard that the hunters had left the area.\n\n\"William, I also have to tell you that Harry is dead.\"\n\n\"I know, I felt it when he ceased to exist,\" William replied. \"Did he hurt anyone?\"\n\n\"He didn't kill anyone that we're aware of but he seriously injured Nadine's mate.\"\n\n\"Will he live?\" William asked.\n\n\"He'll live,\" Ethan replied. \"We're on our way to tell Olivia about her father.\"\n\n\"I want to tell her,\" William said. \"I was the one who killed him and I need to be the one who tells her. I'm sure that you'll be busy talking with the families of the fallen so please allow me to do this.\"\n\nEthan gave William the address and wished him luck.\n\n*****\n\nOlivia's anxiety level was through the roof. Had her father gotten away? Had he changed his mind and walked away as she wanted him to? No she thought to herself, he wouldn't have walked away. That meant one thing- he was dead. As much as she disliked him, he was still her father and she hoped that he hadn't suffered.\n\n\"Someone's here,\" Kenneth said standing up. \"Olivia you stay here with Benita and do as you're told.\"\n\nKenneth seemed to be gone for a long time but when he came back, he was followed by William. Olivia didn't know how to react. The woman part of her wanted to run to him and hug him, but the hunter part of her wouldn't allow it. It wasn't that long ago that he had been a part of her crew. It wasn't that long ago that she began to consciously change her ideas and feelings about vampires and other non-human beings. The safest thing to do was to greet him as she always had.\n\n\"Hello William.\"\n\n\"Olivia, I am so glad that you're safe... There is something that I need to tell you...\"\n\n\"Where's everyone else?\" Olivia asked not ready to hear about her father.\n\n\"Harry is dead and I don't know where the others are. I managed to get twenty four hours for them to get out of town. Whether they took advantage of it I don't know. Olivia...\"\n\n\"My father... he didn't leave did he?\"\n\nHere it was... time to tell the truth.\n\n\"No, I killed him after he killed Caleb,\" William replied. \"He was going to kill you and I couldn't allow that. He was going to have the entire nonhuman species kill each other while he watched and then he was going to finish us off. Even if that weren't the case, knowing that he was going to harm you was reason enough for me to want him dead. I hope that you will someday forgive me.\"\n\n\"Did he suffer?\"\n\n\"No... I wouldn't do that to you. I made it quick and as merciful as I could given the circumstances. But Olivia, given what's happening, you're still in danger. The hunters will split into different factions. Some will support you and some won't. There will be assassinations plots from both sides against your life. I see that both Thorne and Ethan have provided security for you- that is good, but I would also like to offer my services to you as well.\"\n\nOlivia wanted to tell William that she was grateful that he was the one who killed her father but the words wouldn't come. She wanted to accept him as part of her security team, but she couldn't say that either.\n\nWhen she didn't answer, William nodded his head in understanding.\n\n\"If you need me, Thorne and Ethan both know where to reach me.\"\n\nJust as he was about to vanish, Olivia stopped him.\n\n\"Wait.\"\n\n******\n\n\"So now what?\" the king asked the queen as he stroked her hand. \n\n\"We watch and wait,\" she replied. \"This is far from over, but we've got a reprieve. It's going to take some time for the dust to settle.\"\n\n\"Agreed,\" the king replied taking her hand into his. \"How much time do you think we have?\"\n\n\"A while... a couple of years maybe longer... the hunters have to reorganize and so do the vampires that aren't going to go along with the Sinclaire/Blackwell plan which by the way I happen to like. In the meantime, we'll make a few plans of our own. Maybe we can do something so that no more people die.\"\n\n\"But you know that it's going to happen,\" the king said gently. \"People are going to die on both sides- that's the way of war.\"\n\n\"I know that but in the meantime the rogues increase in number in spite of our best efforts,\" she replied. \"But I have a good feeling about Miss. Olivia Saunders.\"\n\n\"All of us do,\" the king replied. \"We just need to find a way to help keep her safe without tipping our hand. They're going to be hyper vigilant especially after the last few weeks.\"\n\n\"True, but there is one among them who is a powerful seer, actually two of them but the one is too young to make use of,\" the queen replied. \"But at any rate, they've handled things and have things under control.\"",
        "They talked until late afternoon and went to bed. There was nothing else to be decided at that point in time.\n\n*****\n\nThe next evening, all of the homes were searched and deemed safe to return to. Martin and his family were the first to leave after Rachel set up a time with the other women to meet. Hans and Juliette and their kids were next followed by Ethan, Katrina and Victoria who was already texting Wanda. Leon, Nadine and the twins and their mates left shortly after them leaving Louise and Nathan last. The wounded had already been taken either to their homes or to a place where they would be cared for. Louise wanted to talk to Barb before they left to make sure that she knew about the meetings with Rachel.\n\n\"I know that this whole thing has been really hard on you and I hope that you come to the meetings.\"\n\n\"Maybe... we'll see,\" Barb replied.\n\n\"Barb,\" Louise said taking her hand and holding on to it when Barb tried to pull away. \"There is no reason for you to go through whatever it is that you and Thorne are going through alone. There's no need for you to go through this pregnancy alone. We're here for you if you'll let us in. It has very little to do with wanting you to change- you are who you are but it has everything to do with family. Like it or not, we are family and that family now includes Noel, Thorne and their family as well. All we want is to get along as a family should-think about it.\"\n\nLouise released Barb's hand and stood to leave.\n\n\"Oh... we're getting together to decorate the nurseries and to go shopping if you want to come-is it okay to call you with the date and time?\"\n\nBarb felt the voice holding its breath as she thought about her response. She could feel it willing her to say yes. After a long pause; she replied.\n\n\"Sure, but I make no promises that I'll be there.\"\n\nBarb expected the voice to say something, but it didn't. She could have sworn that she felt it smile-that's if it was possible for a voice to smile.\n\n******\n\nThorne sat at his desk staring at the phone. He knew that his mother was home because Noel had spoken with her not more than twenty minutes before. Instead of calling her, he picked up the phone, looked at it and put it back down. He wasn't any more ready to make the second call than he was the one to his mother. The only thing that made him pick it up again was the thought of his son. If he wanted to be a good father, he had to make that call.\n\nHe silenced his father's voice telling him that psychiatry and therapy were for the weak and dialed Eustace Matthew's number. "
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire",
        "black woman",
        "white man",
        "hunters",
        "drama",
        "supernatural romance",
        "supernatural drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/thorne-ch-09"
}