{
    "title": "Major League Advice",
    "pages": [
        "\"Mr. Beckett? Do you have a minute, sir?\"\n\nThe minor league manager had been staring out the window for a good ten minutes, and his players had all noticed. So had the two assistant coaches. One of them mentioned it to the other and suggested they go see what was wrong.\n\n\"Nope. Not goin' in there,\" his fellow assistant said. \"He'll work it out.\"\n\n\"I hope so. Whatever it is is effecting the team, so he needs to pull out of it ASAP.\"\n\nAJ Reddy, with the initials standing for Anson James, was 25 and the starting centerfielder for the Springfield Cardinals, a Double-A (often 'AA'), minor league baseball team located in Springfield, Missouri, a city of around 165,000 people. \n\nHe'd been there for three years having arrived right out of college. He'd been good enough to skip the lower levels of the minor league system and made the starting lineup his first year. The smart money was on him moving up to Triple-A in a year or two, but that hadn't happened. And with the end of that third year just six weeks away, it was obvious it wasn't going to happen before the end of the season.\n\nIn fact, when he was honest with himself, AJ knew it wasn't ever going to happen. And that meant his lifelong dream of playing major league baseball, wouldn't either. \n\nThat was the bad news. The good news was he had a college degree. The other bad news was the degree was in psychology, and there weren't a lot of jobs for people with a BA in that major.\n\n\"Yeah, sure. Come in, AJ,\" the manager said.\n\nSam Beckett was 43 years old, and he'd also been toiling away in the minors both as a player for several years and now as a manager for eight long years. He, too, had played AA ball, but unlike AJ, he got a shot at AAA and spent two years with the Tacoma Rainiers out in Washington State. But thanks to an ACL tear in his left knee, his dream had died, too. And now he was wondering if there was any hope he'd ever move beyond AA ball, but that wasn't what was eating at him. At least not everything that was eating at him.\n\n\"Mind if I close the door?\" AJ asked after all the other players were gone.\n\n\"It's your call,\" the older man said.\n\nThe outfielder shut it then asked if he could sit down.\n\n\"Help yourself,\" Beckett said, nodding to the chair.\n\n\"Sir? At the risk or incurring your wrath, it's pretty obvious something's bothering you. I know I'm just a 25-year old kid to you, but if you feel like talking, I'm not a bad listener.\"\n\nHis manager smiled then said, \"Right. Doctor Reddy. That's what the other guys call you, isn't it?\"\n\n\"Yes, sir. That's right. I mean it's right in the sense that's what they say. I'm obviously no doctor, though.\"\n\n\"Well, Doc, I'm at the point where I'm ready to listen to just about anyone.\"\n\nThe older man smiled then said, \"Even a 25-year old kid.\"\n\nAJ smiled back then said, \"Would it have anything to do with feeling trapped at the AA level and thinking that might be some kind of life sentence?\"\n\nThe manager laughed then told him, \"No. I've pretty much made my peace with that. Sure, I still hope I'll get a shot at coaching AAA one day, but after this many years, it seems pretty unlikely.\"\n\n\"Again, it's none of my business, but you know I don't talk outta school, so if there's something else and if you feel like talking about it...\"\n\nThe manager looked right at him and realized that was true. AJ Reddy was a talented ball player and also one of the most unusual young kids he'd ever met. Intellectually speaking, Reddy was quite possibly the smartest young man he'd ever coached. He was a good ball player with sound fundamentals, but Beckett knew the first year he'd never play major league ball. He was probably good enough to play AAA, but not good enough to produce any real numbers even at that level, and that's what the game was all about.\n\nLike most men, Beckett had no idea which other men were considered handsome because he didn't look at men that way. But he'd heard enough times from women, like his wife, Laura, that AJ was a real 'hottie' to know it must be true. And above all else, he knew AJ's word was his bond.\n\nSo while Sam Beckett was pretty sure AJ would never get the call, either, he was more like the younger brother he'd never had although he'd never tell the kid that. Shoot, he was nearly young enough to be his son. And the thought of kids brought him back to reality and why he'd been so despondent lately.\n\n\"You know Laura, right?\" Beckett said without any further prompting.\n\n\"Of course. We all do. You have the team over the first day of Spring training every year,\" AJ said in regard to Beckett's still very attractive wife.\n\n\"Well, I uh, I moved out a couple of days ago.\"\n\n\"Wow. I'm sorry to hear that,\" AJ told him sincerely.\n\n\"Thanks. Anyway, she just turned 40, and she's been wantin' a kid for as long as I can remember. I always assumed I'd be moving up, and that I'd always be on the road, you know, so I kept telling her 'later'. As it turns out, 'later' means now...or never.\"\n\n\"Mind if I ask where you're staying?\"\n\n\"My little sister just moved here maybe three weeks ago. Nice girl. She lost her husband a couple of years ago and moved back in with our folks. But if you knew our parents, you'd understand why that can't be a longterm solution.\"\n\nBeckett smiled as though AJ understood. He didn't, but he smiled back anyway.\n\n\"So now I'm wrestling with the thought of becoming a father at 43. Hell, I'll be 44 by the time she had it if we were to, you know, start working on that right away.\"\n\nAJ knew to tread lightly, but he felt like his advice was being sought, so he gave it his best shot.\n\n\"I'm no psychologist, sir. I'm also not a marriage counselor. Hell, I'm not even married so you're getting free advice.\"\n\nAJ paused for effect then said with a smile, \"And you get what you pay for.\"\n\nOne of the assistant couches peeked through the small window in the door and the manager gruffly waved him off.\n\n\"Go ahead. It can't be worse than this feeling of paralysis. I swear, I have no idea what to do.\"\n\n\"All right. Here goes.\"\n\nAJ sat up, cleared his throat then said, \"I know you still love your wife.\"\n\n\"Hell yeah,\" Beckett said immediately.\n\n\"And I know you know marriage is a partnership and all partnerships require give and take. Nobody gets everything they want while each person is supposed to get some of what they need.\"\n\nBeckett looked away because AJ had already drilled down to the heart of the matter, and the older man didn't really want to hear it said out loud. But AJ said it anyway.\n\n\"For all the years you've been married, Laura's put her dreams on hold for you so you could follow yours. Now I have no way of knowing if you even want kids, but clearly she does. And based on what you've told me this isn't some new thing she just sprang on you.\"\n\nWell aware of who he was talking to, AJ paused again to give his boss the opportunity to shut him up. When he didn't he finished his thought.\n\n\"Everyone's heard the term 'biological clock'. Women are the ones who seem to use the term, and it only makes sense, because unlike men who can um...sire a child at any age...they lose the ability to have children somewhere after the age of 40. Sure, there are exceptions with women having a kid in their sixties, but that's not the point. So it seems to me that Laura's biological clock is likely going off like a jackhammer in her head, and that's making her feel desperate. And since she still loves you, you're the only game in town, so to speak, to make having a baby possible, and that means the desperation is being pushed your way in the form of an ultimatum.\"\n\nBeckett let out a long sigh then said, \"I know. I know. And as much as I hate to admit it, you're right.\"\n\nHe looked right at AJ then said, \"Not that you're right. Admitting that is easy. It's the consequence of your being right that's causing me so much grief.\"\n\n\"To use another sports metaphor, it appears the ball's in your court, sir.\"\n\nSam Beckett drew a deep breath then exhaled loudly.\n\n\"I just don't need this right now, you know?\" Beckett said as he looked away.\n\n\"Okay, but how much longer can Laura wait until you think the time is right?\" AJ asked as carefully as he could.\n\nThe assistant coach came back, and this time he knocked on the door.\n\n\"Unless you need something else, sir, I'm done,\" AJ said as he stood up.\n\n\"Nah. That's enough for now,\" Beckett said in a way that let it sound like he'd called the kid in for a pep talk.\n\n\"Well, um...thank you, sir,\" AJ said as he side-stepped the pitching coach.\n\nThe Cardinals schedule showed two away games then back to Springfield for a three-game home stand which meant five days in town. They split the away games winning the first and losing the second then returned home and won the first of three.\n\nAfter that first game which was on a Sunday morning, Beckett asked AJ to step into his office.\n\n\"Listen. I uh, I talked with the wife when we got back in town yesterday and kinda told her what you said.\"\n\nThe young centerfielder didn't speak, he just stood there and listened.\n\n\"Anyway, she agreed to come over to Elise's place tonight for dinner and...\"\n\n\"Elise?\" \n\n\"Sorry. My baby sister. The one that moved here recently.\"\n\n\"I assumed so, but you've reminded me several times what assume makes of 'u' and 'me',\" AJ said as tactfully as he could.\n\nBeckett smiled then continued.\n\n\"Laura liked what I told her. Which was what you told me. And she agreed to have dinner with me but only if you'd agree to show up. So I was wondering if maybe you'd...\"\n\n\"Sure. What time and where?\" AJ said before Beckett could finish.\n\nThe manager grinned, and AJ couldn't remember the last time he'd seen his manager smile like that. He smiled fairly often but not like that.\n\nBeckett grabbed a yellow sticky then jotted down the address and handed it to AJ.\n\n\"Six o'clock. I suggested a barbecue, but Laura said she wanted a sit-down meal, so we'll be staying inside.\"\n\n\"Got it. I'll see you then.\"\n\nAJ turned to leave when Beckett said, \"Kid?\"\n\nHe turned back around and waited.\n\n\"Thanks. Seriously. Thank you.\"\n\n\"I just hope this works.\"\n\nUnlike their major league counterparts, minor league players made very little money. The top players in AAA ball made less than $2,500 a month along with a per diem for meals. Guys like AJ made less than two grand, and only during the months they were playing, and usually got a sack lunch on the bus ride to whatever town they were playing. Everything else they paid for themselves.\n\nBecause the money was so bad, most minor leaguers had full-time jobs during the offseason and some had part-time work during the season. A couple of his teammates were married and one of them had a kid, and money was always an issue and put a lot of strain on them.\n\nAJ felt pretty sure he could find a decent job when the time came to hang up his spikes, but so far, he'd spent the off season back home in the Seattle area with his parents. He worked full time but didn't have the expenses of room and board even though he regularly offered to pay. His parents were unbelievably proud of their only child and would have no part in taking his money. \n\nHe was sensitive about being 'one of those kids' people talked about who still lived at home in their parents' basement, but until he had a real job, this was a practical necessity. He had his own room, so there wasn't a basement involved, but it was the same room he'd lived in growing up, and that was still a sore spot with him.\n\nThe truth was he really liked Springfield. The cost of living was phenomenally high all around the Seattle area and the traffic was insane. If he could say...teach high school...in a town like this, that'd provide enough income to let him get his own place, and maybe, one of these days, settle down and start a family of his own.\n\nHe'd done a ton of dating in college which was mostly hooking up, and while he was only 25, he was getting pretty sick and tired of living with a roommate during the baseball season and staying at his mom and dad's during the rest of the year. Teaching wasn't his first choice, but he had a college degree, so it was at least a possibility.\n\n\"So where you goin'?\" his roommate, the team's second baseman and all-around jokester, asked when AJ came out wearing a decent pair of jeans and an actual shirt with buttons on it.\"\n\nThere was no chance he'd betray the manager's confidence, but he also wouldn't lie to his roommate. He would, however, say less than the whole truth and hope there wouldn't be any follow-on questions.\n\n\"Oh, um...Beckett's got a younger sister who just moved to town, and his wife asked him to find someone to drag along to have dinner at her place.\"\n\n\"And you drew the short straw? Sucks to be you, dude. I mean, if she looks anything like Beckett, you better take two bags with you.\"\n\nAJ had heard the 'two bag' joke so many times it was way beyond not funny. But he laughed anyway then said, \"Yeah, good idea.\"\n\nAs he started to leave his roommate said, \"Hey, wait. Beckett's like a million years old, so even a younger sister's gotta be like...old. Really old.\"\n\n\"Yeah, well, just count your blessings, bro. You could be the lucky stiff having dinner with her.\"\n\n\"Oh, no. Hell no!\" the 23-year old said. \"Uh-uh. Ain't happening. Anything over 19 and homey ain't hittin' that. You know what I'm sayin'?\"\n\nAJ laughed politely, told him did, then headed out.\n\nAs he drove his rapidly-aging-but-still-reliable 2014 Nissan Altima to the address Beckett had provided, AJ found himself hoping this would be a quick meet and greet followed by a short dinner, and find him back in his room before 9pm. \n\nWhen he thought about his roommate's comment with regard to Beckett's age and the age of his sister, all he could do was hope she was at least a nice person. He had no expectations she'd be 'hot' or even attractive. But she was his boss's sister, and he really did like Laura Beckett, so it was the least he could do especially considering this wasn't a even a fix up let alone a date.\n\nHe checked the address again just to be sure when he pulled up to the curb and knew he was at the right place. Seeing the 'Beckett-mobile' was all the confirmation he really needed to be sure, and it was already in the driveway. What wasn't there was the car Laura drove, so now AJ was concerned she might not show up at all, leaving him with hope he might be able to turn around and go home.\n\n\"It's just a couple of hours of one night,\" AJ told himself as he walked up the driveway.\n\nHe went to ring the doorbell when Laura opened the door, startling him.\n\n\"AJ! It's so good to see you!\" she said, hugging him before he could even say 'hello'.\n\n\"Laura. It's great to see you, too,\" he told her when she released him.\n\n\"Come in. Come in. I want to introduce you to Sam's sister,\" she said in perky, upbeat voice.\n\nHe started following her inside when she stopped then said, \"I can't thank you enough for talking to Sam. He's...he's been so different. And in a really good way.\"\n\nShe turned to face him again then smiled.\n\n\"He came over after the game and we talked for a couple of hours. And I mean we really talked. I actually feel hopeful, AJ, and I can't help but think this change is due to you.\"\n\nAJ only wanted to tell her he hadn't told her husband anything new, but before he could say a word, she threw her arms around him again and told him 'thank you' one more time.\n\n\"There he is!\" Sam boomed just as his wife was letting go.\n\nHe stuck out his hand for AJ to shake.\n\n\"Good evening, sir,\" the younger man said as they shook. \n\n\"Come on in. I want to introduce you to someone.\"\n\nLaura didn't mention she was planning on doing that, and more importantly, it didn't seem to matter. Evidently, she and her husband had had a very productive talk of some kind, and whatever animosity had come between them was gone.\n\nAJ didn't say anything again. He just followed his manager into the kitchen and steeled himself for a middle-aged woman who was twice his size. To say he was surprised when he walked in and saw her would be the understatement of the year.\n\n\"AJ? This is my little sister, Elise. Elise? This is my centerfielder, AJ Reddy.\"\n\nShe smiled and said something, but AJ didn't hear a word. The woman standing in front of him was clearly older than he was, but she looked a lot closer to his age than her brother's. \n\nHe started at the top and scanned his way down quickly taking in the details he was still struggling to make sense of. The first was\u2014Elise wasn't overweight. At all. In fact, she had an amazing body he made sure not to look at too long.\n\nThen there was her hair. Hair that was nearly black. Not just dark like coffee, but more...raven colored. It was pulled back in a ponytail, but it was obviously soft and beautiful, and although he couldn't be sure, it looked to be at least shoulder length. Her face was a classic heart shape on which either long or short hair looked beautiful, just one more positive feature on this very attractive woman. \n\nHair that black almost demanded either brown or blue eyes, but hers were green. Not hazel but green. Bright emerald green eyes that caught his eye. Only 2% of the world's population had green eyes, and it was by far the rarest color.\n\nElise smiled at him revealing two rows of perfectly straight, very white teeth. Having worn braces as a kid, AJ couldn't help but think her teeth were as perfect as his thanks to a very talented orthodontist somewhere along the way. Regardless, her smile was amazing and framed by two very soft, full lips.\n\n\"Cat got your tongue?\" his manager asked.\n\nAJ shook his head slightly then realized what was going on.\n\n\"It's a pleasure to meet you, Elise,\" he finally said.\n\n\"You, too, AJ. Sam hasn't stopped talking about you,\" she told him. \"Or Laura.\"\n\n\"Don't believe a word she says, kid,\" Beckett told him. His words said one thing, but the smile on his face told him something else.\n\n\"I don't know, sir. I'm pretty good at assessing people early on, and I'd say your sister seems pretty honest,\" he replied to his manager while looking at Elise who was smiling back.\n\n\"Sam tells me you're the team psychiatrist,\" Elise said, still smiling brightly.\n\n\"Now that one is easy,\" AJ said with a laugh. \"I'm no one's psychiatrist.\"\n\n\"No, but damn near everyone on the team comes to him with their problems,\" Sam said. \"And sometimes even older guys who aren't on the team.\"\n\nHe, too, was smiling, and AJ was now very interested in finding out what had changed so quickly between him and his wife.\n\n\"So what you're saying is AJ's the male version of Evan Rachel Wood in the movie Little Secrets,\" Elise suggested causing all three other heads to turn her way.\n\n\"Oh...well, it would appear I'm the only one who's seen it. She's a preteen girl in the movie who...never mind.\"\n\nEveryone laughed before Laura said, \"I don't know about AJ being a male version of someone, but he very well could be a male model.\"\n\nAJ expected Sam to stop smiling immediately and possibly make some kind of nasty remark. Instead he just kept on smiling.\n\n\"I won't argue with that,\" Elise said to her sister without taking her eyes off the tall, handsome baseball player.\n\nAJ was an even six feet and weighed a solid 185. Like most baseball players, he was in the weight room three days a week. Long gone were the days when only football players lifted weights. Now, virtually all athletes from swimmers to bicyclists did some kind of resistance training. AJ's home run and RBI totals weren't great, but without the extra muscle he'd likely never have even been drafted.\n\nLike Elise, he had very dark hair, it just wasn't black. Elise's eyes were a deep green while AJ's were a bright blue. Both of them had perfect smiles and the kind of lips that were considered very kissable. So while AJ might not agree with the male model comment, he was well aware he was considered a good looking guy.",
        "He played off the compliment with a smile and waited for someone to let him know what they'd be doing. In the meantime, he caught as many glances\u2014some rather furtive\u2014at Elise, as he now knew he wouldn't be spending the evening with his previously-imagined middle-aged housewife. \n\nAnd that's when he remembered Sam telling him her husband had passed away. That, in turn, caused him to stop thinking what he'd been thinking and see her in an entirely different way; one that was built on a healthy dose of genuine sympathy for her loss.\n\n\"Hey, kid? You want a beer?\" Sam said causing AJ to momentarily stop focusing on the older man's surprisingly attractive sister.\n\n\"Um...no thanks. I think I'll pass.\"\n\n\"Well, I'm gonna have one,\" he announced before opening the refrigerator and helping himself.\n\n\"Just one, though, okay, honey?\" Laura said sweetly.\n\n\"Oh, right. Yeah, don't won't to take any chances, do we?\" he replied. \"If fact...\"\n\nSam opened the door again and put the beer back inside causing his wife to smile even more. When he walked over beside her, AJ noticed how she put her hand in his, but there was no way he was mentioning that. At least right there and then.\n\nAJ also noticed that Elise was as quiet as Sam was boisterous. He clearly wasn't a psychiatrist, but he did know the older sibling often tended to be quieter than the younger, at least in most cases. Then again, there were exceptions to every rule, and it could also be there were other siblings he didn't know about. Whatever the reason, he very much liked the fact that she wasn't loud or outspoken, a trait in women that turned him off in a big way.\n\nOne more thing he noticed was that something smelled very good. Like most athletes, AJ was continually hungry, and this was no exception.\n\n\"Well, dinner's almost ready,\" Elise said, \"so could you maybe find out what everyone wants to drink, Sam?\"\n\n\"I can handle that,\" he said in a voice AJ hadn't heard before. \n\nIt was his voice to be sure, but the tone was so upbeat, it just seemed strange hearing it come out of that mouth. It was so upbeat, it was almost...playful.\n\nEveryone decided to have a glass of iced tea as Elise pulled a roast out of the oven. It had been cooked with all kinds of vegetables around it to let them soak in the juices of the meat, and AJ's mouth was watering just looking at it. That plus the smell was enough to cause what a former teammate had called a 'foodgasm'. \n\n\"Okay, everyone find a seat,\" Elise said politely. \n\n\"Let me you give you hand,\" Laura told her as the guys sat down at the table.\n\nOnce everyone had food on their plate the 'coach' took the first bite and said as he chewed, \"Oh, my God! Can my little sister cook or what?\"\n\nAJ took a modest bite, too, although what he really wanted to do was take one about three times that size and inhale it. As the flavor hit his taste buds they exploded in ecstasy.\n\n\"Oh, wow! This is good!\" he agreed.\n\n\"Thank you. Both of you,\" Elise said. \"I'm glad you like it.\"\n\nSam was shoveling in another bite, and with a mouth full of food said, \"Like? This is incredible!\"\n\n\"It really is wonderful,\" Laura told her.\n\nThey ate quietly for a few seconds before Sam said, \"Elise is renting this place for three months. You know, so she can find out if this is somewhere she'd like to live.\"\n\nAJ glanced around then said, \"It's really nice. Did it come furnished by any chance or are these your things?\"\n\n\"Oh, no. It was furnished. My stuff is still in storage back home,\" she explained.\n\n\"Mom and Dad were...\" Sam began. \n\nHe stopped, smiled, then said, \"No...Dad...was driving her crazy.\"\n\n\"He can be a challenge,\" his sister said, obviously being polite.\n\n\"Our dad's old school and even worse, he's a damn know it all.\"\n\n\"Sam,\" Laura said as she looked at AJ with an 'I'm sorry because my husband is, too' look.\n\n\"Well, it's the truth, baby. We all know it.\"\n\n\"AJ doesn't need to hear that,\" she told her husband.\n\n\"Okay, but he's probably curious why Elise would just pack up and move all the way out here.\"\n\nNot wanting to say anything, AJ took another bite and busied himself with chewing and savoring the delicious tastes exploding on his pallet.\n\n\"My baby sis lost her husband a while back, and like I said, she moved back in with the folks. I wouldn't have lasted a week, but she made it nearly two years. I say she deserves a medal.\"\n\n\"Daddy's just set in his ways,\" Elise said just as politely as Sam spoke bluntly. \n\nAJ rightly assumed her comment was most likely in defense of her father even if her brother's accusations were accurate.\n\n\"So anyway, she's been out here nearly three weeks. Oh, and she already found a job.\"\n\n\"That's great,\" AJ said not sure what else to say.\n\nShe went to say something, but Sam cut her off.\n\n\"She went online before she even moved here and applied for several city jobs. Right after she moved in, she got called to interview with two of them and ended up taking a job in accounting. So she's been there a whole four days now.\"\n\nAgain, Elise went to speak, but Sam kept going.\n\n\"She's a smart girl. Got a degree in accounting, so it makes perfect sense.\"\n\nElise waited to make sure her brother was finished before saying, \"I haven't used it in quite a while, though. When Jeff, my husband, and I got married six years ago, he had a pretty good job so I quit working and stayed home with hopes of maybe starting a family.\"\n\nLaura reached over and put her hand on Elise's for support. Both women wanted children more than anything in the world, and it just hadn't happened for Jeff and Elise while Sam had kept postponing having them.\n\n\"And then there was the accident, and well, it...I guess it just wasn't meant to be.\"\n\n\"Well, you're still young and you're freakin' gorgeous, sis,\" Sam said in his typical 'I'm in charge' voice.\n\n\"At 38 it doesn't exactly feel like that,\" Elise said quietly before taking a small bite.\n\n\"Sam's right, honey. There's still time. And he's also right about you being beautiful.\"\n\n\"What do you think, kid? Isn't my sister a hottie?\"\n\nLaura shot visual daggers at her husband who noticed.\n\n\"What? I'm just making conversation here. And she is beautiful.\"\n\n\"I...I agree. She's a very attractive woman,\" AJ said trying to avoid stepping on a landmine by saying the wrong thing.\n\n\"Thank you, AJ. And thank you for not saying, 'For an older woman'.\"\n\n\"He wouldn't say something like that,\" Laura told her. \"AJ is as polite as he is handsome.\"\n\nElise surprised him when she asked AJ, \"I know you travel a lot, but is there anyone special in your life?\"\n\n\"No. Not really. I am on the road quite a, and I spend the off season with um...my parents...back in the Seattle area.\"\n\nThe irony wasn't lost on anyone after all the 'Dad' comments.\n\n\"I've never been out there. I hear it's really beautiful,\" Elise replied.\n\n\"It's the only thing I ever knew until I got drafted and came out here. I suppose it's a little too dark and dreary for some people, and it does rain quite a bit. Not as much as people seem to think, but the gray skies can get a little depressing if you're not used to it.\"\n\n\"We're from a small town in rural Idaho, so was my only real experience other than that was going to college in Boise. I went back home after graduating and that's where I met Jeff when he moved to town after getting out of the Navy.\"\n\nStill the outsider, AJ only acknowledged the comment but didn't ask for details.\n\n\"Can I get you anything else, AJ?\" Elise asked a moment later.\n\n\"No, thank you. This really is delicious.\"\n\n\"There's chocolate cake for dessert,\" she told him with a smile.\n\n\"This one has a sweet tooth that won't quit,\" Laura informed AJ while giving her husband the eye.\n\n\"Hey! Hold on there. My stomach's still flat,\" he said proudly as he banged his gut. \n\nIt wasn't exactly flat, but for a man in his early 40's, Sam was still in decent shape.\n\n\"I wasn't complaining, sweetheart,\" Laura told him, that look in her eyes back again.\n\nElise cut her brother a huge piece of cake then asked AJ how much he'd like. He wanted at least that much but told her about half that amount would be fine. She and Laura each had a very thin slice on their plates as they waited for the coffee to finish brewing.\n\n\"So...the wife and I have a little announcement,\" Sam...announced.\n\nLaura and Elise were both smiling which told AJ they knew.\n\n\"Oh?\" he said as Elise got up to get the coffee pot.\n\n\"Yeah. As it turns out, your little...pep talk...inspired me\u2014Doc.\"\n\nAJ raised his eyebrows but didn't speak as Elise poured his first.\n\n\"Yes, indeed. I called Laura right after the game today and asked if we could talk.\"\n\nHe looked at his wife then kept going.\n\n\"Even though we spoke after I got back in town and agreed to come over here for dinner, Laura told me there wasn't really anything to talk about unless I'd changed my mind.\"\n\n\"Ah,\" AJ said, still waiting for the big news.\n\n\"So, anyway, we got together today and we talked.\"\n\nHe smiled at his wife then said, \"I mean, we really talked.\"\n\nHe looked around the table then let the cat out of the bag.\n\n\"Yeah, we uh, we decided to um, you know...\"\n\nAs the confirmation to what he expected to hear came, AJ was acutely aware of how much someone else sitting across from him had also wanted a baby, and as happy as he was for the newly-reunited couple, he felt terrible for her.\n\nBut before he could say anything\u2014to anyone\u2014Elise said, \"I am just thrilled for you both!\"\n\nAJ didn't know her well enough to be sure she was okay, but she seemed genuinely happy for them.\n\n\"That's really great, boss,\" AJ told him.\n\n\"I'm very happy for you,\" he then said to Laura.\n\n\"Well, we have you to thank for that, AJ. I can't tell you how happy I was when Sam told me about your...chat.\"\n\n\"Chat? Honey, men don't...chat. They talk. They bullsh...BS. They...well, they don't...chat.\"\n\nLaura laughed politely then continued talking.\n\n\"I've been after this man for years with no luck. Then you come along and in what? Ten minutes? Maybe less? You get him to change his mind just like that! That's what I call\u2014major league advice!\"\n\nSam reached over and slapped his centerfielder on the shoulder then said, \"Stop being so modest, kid. Take a little credit.\"\n\n\"No. I...I didn't do anything. I think I may have just helped Mr. Beckett realize this is what he wanted all along.\"\n\nLaura looked at Elise who started to smirk before she laughed then said, \"Oh, no. My brother is the most stubborn, pig-headed man I know.\"\n\nShe paused then said, \"Well, maybe the second most stubborn, pig-headed...\"\n\nSam roared at the implication that he was more like their father the he was willing to admit, and Laura was also laughing and smiling, so AJ joined in because it was one of those things where you couldn't help yourself.\n\n\"So anyway, Laura's letting me move back in and we'll be uh, you know, working on...\"\n\n\"Sam Beckett!\" Laura said cutting him off at the knees. \"Don't you dare say another word!\"\n\nThe Cardinal's manager smiled a goofy smile then said, \"Anyway, we're both um...very happy.\"\n\n\"And I'm happy for both of you!\" Elise said before standing up and asking if she could take anyone's plate or get them some more cake.\n\nShe could tell AJ wanted another piece so before he could finish saying, \"No, thank you,\" she smiled at him and said, \"I'll cut you another slice, AJ.\"\n\nOnce they were finished with dessert, Sam suggested the 'men folk' go sit down while the ladies cleared the table.\n\n\"I uh, I should really give them a hand,\" AJ said knowing he was risking a tongue lashing for being a 'girl' or some such thing.\n\n\"How do we clone you?\" Laura said. \"And how do we transfer some of that into the big lunk standing next to you?\"\n\n\"Hey! I help out around the house,\" Sam said defensively.\n\nElise made a snorting sound that made Laura laugh.\n\n\"See! I'm not the only one who knows the truth,\" his wife said.\n\n\"Yeah. Whatever,\" Sam said. \"So...you comin' with me?\"\n\nLaura nodded to tell him to go with her husband and Elise said, \"We're fine, AJ. Thank you for offering, though. That was very kind.\"\n\n\"I told you,\" AJ heard Laura say to Elise as he followed his manager to the living room. \"Cute and sweet! If he was a little older he'd be perfect for you.\"\n\nElise didn't reply or if she did AJ didn't hear her, but that comment made him remember her saying she was 38. Intellectually, that made sense considering her brother was 43. But it didn't make sense at all when in he thought about it in terms of her utterly soft, clear, wrinkle-free skin and what appeared to be a very tight, very fit body underneath what she was wearing. And she was wearing a sleeveless pink blouse and a pair of white shorts thus showing enough of that body to indicate his assessment was correct.\n\nThe post-dinner conversation didn't last long, and it didn't take a genius to figure out why. The lovebirds were more than ready to get home and start working on their latest 'project'.\n\nThere were hugs between family members then an awkward moment in which AJ wasn't sure what was appropriate so he only smiled and thanked Elise. She neither hugged him nor offered her hand, but she did tell him what a pleasure it was to meet him.\n\nSam and Laura were out the door and holding hands on the way to their car when Elise said, \"I'm really glad you came to dinner, AJ. I've met a few people at work, but you're the first real guest I've had over\u2014not counting my brother or sister in law, of course.\"\n\n\"It was my pleasure,\" he told her. \"You're a very cook, by the way.\"\n\n\"I don't get much chance anymore but thank you.\"\n\nShe hesitated then added, \"Being single and all.\"\n\nJust as he was about to go AJ asked a question.\n\n\"What movie did you mention earlier? Something about my role as 'team shrink' evidently reminded you of it.\"\n\nElise laughed then said, \"Right! Yes, well, about that. It's not only a chick flick, it's a movie for teen girls. I was in college when it came out and, considering how many times I've re-watched it, I guess you could say I kind of loved it.\"\n\nShe paused again, winced a little as though she was apologizing for something, then told him, \"I kind of still do.\"\n\n\"What's it about?\" he asked.\n\nElise was suddenly very animated.\n\n\"Well, the star, Emily, is this plucky preteen who sets a booth up in her yard every Wednesday where her even younger neighborhood kids line up for advice. She charges them a nominal fee of a quarter or fifty cents then promises to never tell anyone anything they tell her in confidence. But then she meets this really cute boy who keeps trying to wheedle some private information out of her. Eventually she caves then hates herself for betraying a secret. Anyway...she's kind of like the neighborhood psychiatrist.\"\n\n\"I'll have to Google it sometime and find out a little more,\" he said. \n\n\"I uh, I actually have it. Here. Inside,\" Elise told him. \"Not that you'd want to watch it, of course. I mean, it's so not a guy movie.\"\n\n\"This isn't gonna come out right, but I'm not exactly thrilled to go hang out with my roommate so if you're serious about...\"\n\n\"Wait. You'd actually sit and watch it with me?\" Elise said, a smile on her face that revealed just how pretty she was.\n\n\"I uh, I wouldn't mind at least checking it out. I can't promise I'll stay and watch the whole thing, but if you're not tired of me yet, then, yeah. Sure.\"\n\n\"Come back in!\" she said excitedly. \"I can't tell you how much I hate sitting here alone every night. I've started going to bed at 10 o'clock just to shorten the nights. Normally, I never lay down before midnight.\"\n\n\"I'll watch it on one condition,\" AJ said.\n\n\"Name it!\" \n\n\"You can't ever tell anyone, okay? Ever.\"\n\nElise laughed a happy laugh then crossed her heart and promised.\n\n\"But you will have to pay me a quarter to keep your secret,\" she said, referencing the 'psychiatrist' in the movie.\n\n\"A quarter's about all I can afford. You do know I'm a minor-league baseball player, right?\"\n\nElise laughed again and stepped aside to let him back in.\n\n\"I can pop some popcorn if you'd like,\" she told him as she led him to the living room where the TV and DVD player were located.\n\n\"I never turn down free food,\" he told her with a smile.\n\nShe quickly found the disk, popped it in, then told him she'd be right back while the DVD player did its thing.\n\n\"Unless of course the first few seconds scare you away,\" she said with a laugh that trailed off as she moved further toward the kitchen.\n\n\"Oh, a horror movie, huh?\" he called out to her.\n\n\"You might think that after you see how lame it is. But to me, that's a big part of its charm,\" Elise called back.\n\nThe screen came to life so AJ sat there and watched previews of other movies that had been released many years ago while Elise microwaved a bag of Orville Redenbacher's best.\n\nThree minutes later, she came out holding a large, shiny silver bowl filled to the brim then sat it next to AJ's right leg before plopping down on the other side of it.\n\nThe next preview on the DVD caused them both to laugh.\n\n\"Oh, my gosh! I remember this movie so well,\" Elise said. \"I was in high school when it came out.\"\n\n\"Hmmm,\" AJ mused.\n\n\"What?\" she asked as she popped a first piece into her mouth.\n\n\"Oh, I guess I was just thinking about when I saw it, and I believe I was maybe...\"\n\nElise looked over at him and was smiling as she waited.\n\n\"In...kindergarten of maybe first grade.\"\n\n\"Oh, my goodness! Seriously?\" she said, her eyes open in disbelief in not shock.\n\n\"I believe that's pretty close,\" he told her. \n\nAs she turned away, Elise was playfully shaking her head.\n\n\"I'm almost afraid to ask what you're thinking,\" AJ said.\n\n\"No. It's not like that, AJ. I guess it just surprised me, you know? I've really enjoyed talking to you tonight, and I think maybe I still see myself\u2014or at least it feels like internally\u2014I'm still your age. I guess I was a little surprised when I realized I'm not.\"\n\n\"It's funny you mention that, because I specifically remember thinking you look a lot closer to my age than your brother's.\"\n\n\"Ha! That's so sweet. It's ridiculous but sweet,\" she told him, secretly loving the compliment.\n\n\"No, I'm serious. If you hadn't said your age, I'd have never guessed it. Not even close,\" he told her.\n\n\"Well, you just made my day!\" Elise said before pointing at the screen. \n\n\"Oh! The movies's starting. Now that girl right there is Evan Rachel Wood\u2014Emily in the movie. And she's the...\"\n\nElise was the perfect narrator. She talked just enough and at the right time to help him understand who was who and what was going on, but not so much it was annoying.\n\nEven so, this was quite possibly the worst movie AJ had ever sat through. And yet, whenever he managed to set aside his tough, masculine persona, he found himself smiling and even laughing a time or two. The best part of it, though, was looking over and watching Elise laugh. She was clearly beautiful, and although he didn't really know her, AJ was pretty sure she was a genuinely happy person who, in spite of her tragic loss, enjoyed life's little pleasures.\n\nWhen the DVD ended, Elise turned to AJ and said, \"Thank you for being such a good sport.\"\n\n\"It...wasn't terrible,\" he replied.\n\nElise laughed and once again, AJ was taken with her beauty. He wasn't consciously thinking of her as a potential mate or even a hook up. She was, after all, his manager's sister and, although he still found it hard to believe, thirteen years older than him. But that didn't change the fact that she was a very beautiful woman.\n\n\"Yeah, it's not the kind of movie many guys would ever watch let alone sit through entirely. But if I kept you out of your apartment for an hour or two, that's not all bad, is it?\" Elise asked, the smile still there.\n\n\"No, it isn't,\" AJ said immediately. \"Don't get me wrong. My roommate's a decent guy. It's just that he's...a guy. And a very funny guy, at that.\"",
        "Elise laughed then asked why he didn't date more after telling him how pleasant it had been spending time with him.\n\n\"I understand not wanting to get married. After all, you're still very young and focused on getting called up to the majors, but surely you don't have any trouble getting dates.\"\n\n\"I go out occasionally,\" he told her. \"I've just always felt like I needed to be 100% focused on baseball, you know?\"\n\nHe paused for a moment then said, \"As far as getting called up, I'd be beyond thrilled if our AAA club asked for me,\" he replied.\n\n\"How do you feel about your chances? I know how tough that is, at least based on what Sam tells me.\"\n\n\"Oh, he's right about that. The numbers and the percentages are heavily stacked against you. Just getting to Double-A is tough. Moving up to Triple-A is incredibly hard, and the odds of getting to the majors is infinitesimally small, and making the team even smaller.\"\n\nElise smiled then said, \"Well, I hope that call comes. But I will say it's obvious you're a well educated guy, so if it doesn't, I'm sure you'll be just fine.\"\n\nAJ laughed then asked her if she thought being smart was a plus.\n\n\"Of course. Smart is very sexy,\" she said without hesitation.\n\nHe laughed again then said, \"Tell that to my teammates. I typically use street language so they won't think I'm some kind of bookish snob. I mean, I'm not some pompous assh... Sorry...guy.\"\n\nElise laughed as he continued.\n\n\"But I do have a reasonably good vocabulary, and sometimes it would be nice to be able to talk to someone who didn't drop the F-bomb in every other sentence.\"\n\n\"Yeah, when you get an all-male anything, that's what invariably happens. It doesn't bother me at all, and sometimes the occasional, well-place swear word can say more than a long, well-written paragraph of prose.\"\n\nAJ laughed again.\n\n\"You're pretty amazing, Elise.\"\n\n\"Oh. Well, thank you, AJ. And...same to you.\"\n\n\"And you're easy to talk to.\"\n\nShe started to thank him when he said, \"And...even easier to look at.\"\n\nShe stopped smiling and looked down at the floor causing AJ to think he'd just crossed a line.\n\n\"Elise. I'm sorry. I didn't mean that in any kind of disrespectful way, and I definitely wasn't hitting on you or anything, so please don't...\"\n\nShe looked back up at him and before he finished his thought said, \"I didn't take it like that at all. I guess it was just another case of me thinking\u2014internally\u2014I'm still closer to 25 than...\"\n\nIt took her a few seconds to say it, but she did get the word out.\n\n\"Forty.\"\n\nThe way she said it made AJ uncomfortable, and feeling for once anyway, like he didn't really know what to say. So he said the first thing that came to his mind.\n\n\"Do you have any other favorite movies? Maybe one a guy like me might actually willingly choose to watch?\"\n\nThe way he said it caused Elise to perk up and smile.\n\n\"Oh, gosh. There are a ton of them! I think I watched more movies in the last couple of years than in the rest of my life\u2014my very long life\u2014-combined.\"\n\nAJ laughed politely at her age comment then said, \"Do you like the National Treasure movies?\"\n\n\"With Nicholas Cage? Are you kidding? I love those!\" she said enthusiastically. \"Does that mean you do, too?\"\n\n\"Well, yeah. I'm kind of an action-movie guy, so yeah, I really like both of those. You know, the treasure hunter thing mixed in with the actual stuff like seeing the Declaration of Independence in the Library of Congress.\"\n\n\"And stealing it!\" Elise replied. \"And Diane Kruger is so pretty. Don't you think?\"\n\nAJ didn't want to admit she was one of the primary reasons he enjoyed watching them, and for the first time, he realized she was an older woman for whom he'd secretly had a thing.\n\n\"Yeah. I agree. She's a very pretty woman.\"\n\nHe hesitated for the slightest of moments then added, \"Too.\"\n\nElise kind of cocked her head then asked AJ a question.\n\n\"Okay. Did my brother put you up to this?\"\n\n\"Up to what?\"\n\n\"Oh, come on. I very much appreciate the kind things you've said, but I'm, well, I'm...her age. Diane Kruger.\"\n\n\"Um, no. I think she's in her early 40's, and no, your brother didn't put me up to anything.\"\n\nHe smiled then said, \"In fact, I kind of had the sneaking suspicion you'd be a, well, that you'd look...very different than you do.\"\n\n\"I'm almost afraid to ask what you thought I looked like, so I won't ask, but I am grateful to know Sam is isn't twisting your arm to be so nice to me. He won't admit it, but he worries about me, and I wouldn't put it past him to ask the nicest-looking guy on the team to make me feel good.\"\n\nNow AJ tilted his head a little, smiled, then asked, \"Is it working?\"\n\nElise laughed playfully and said, \"Yes. It's working quite nicely.\"\n\n\"Nice enough to maybe get you to watch another movie with me?\" he asked.\n\nThe smile faded again as Elise replied.\n\n\"That depends. Are you asking me as someone who enjoys watching movies or...something else?\"\n\n\"I do like watching movies,\" he admitted, the smile glued to his face.\n\n\"But that's all, right?\"\n\n\"Sure. If that's all you want it to be.\"\n\n\"Well, that's...that's all it really could be...right?\" \n\nThe way she said it made it as much of a question as a statement, and AJ was wondering if there was any chance she might possibly consider it more than two people who enjoy movies watching one together.\n\n\"I...I'm not sure,\" he said rather quietly. \"Maybe we could watch the original movie then see if there's a...sequel...somewhere.\"\n\nElise understood the subtle context of what he was saying. Yes, there was an actual sequel called National Treasure: Book of Secrets, but it was obvious he was referring to something more between the two of them.\n\n\"I...I don't have either of them. Here. At the house,\" she told him.\n\n\"No worries. I have them both. I bring maybe a hundred DVDs with me and rarely watch one, but I do have them.\"\n\nWhen she didn't reply, AJ said, \"I uh, I could bring the first one over and watch it with you.\"\n\n\"As friends, right?\" she asked again, her voice not very convincing.\n\n\"Sure. As friends,\" he replied. \"Okay. Um...how about Tuesday? We have a night game tomorrow and another one on Wednesday, but Tuesday works for me.\"\n\n\"Um...okay,\" Elise said very quietly. \"That sounds nice.\"\n\n\"Yes, it does,\" AJ agreed. \n\nHe stood there not sure what else to say so he tried smiling again before saying, \"Well, I uh, I should probably be going.\"\n\nBoth of them felt the slow-growing romantic tension building between them, and when AJ mentioned leaving, it drained away almost instantaneously.\n\n\"Oh, sure. Yes. Your roommate is probably wondering where you are,\" she said with a smile.\n\nAJ laughed then told her, \"I don't think so. He's probably hoping I died in a fiery crash so he can have the room all to himself.\"\n\nEven though Elise laughed, AJ felt terrible.\n\n\"Elise. I am so sorry! That was just...it was totally insensitive, and I had no right to be so glib about something so...\"\n\n\"Don't be,\" she said, cutting him off but not in any rude way. \"Yes, I lost my husband, but that doesn't mean you have to walk on eggshells when you're around me, okay?\"\n\nHe stood there and although he tried not to stare, he couldn't help himself.\n\n\"I uh, I...I like being around you,\" he said very quietly after several seconds of silence.\n\nElise responded but not to his comment.\n\n\"I could make dinner again or you could just come over and watch the movie.\"\n\n\"Oh. I uh, I don't want to put you out.\"\n\n\"I enjoy cooking. I actually liked having Sam here so I had someone to cook for. And as abrasive as he can be at times, it was really nice having someone here to talk to even though it was all baseball, all the time,\" she said with a smile.\n\n\"Yeah, it's kind of been his whole life, huh?\" AJ said.\n\n\"Right. And who knows? Maybe that'll change now,\" Elise said in a way that sounded like she wished it would.\n\n\"It gets in your blood or something, you know?\"\n\n\"I've never experienced it first-hand, but I've watched my big brother devote his whole life to it, so I think I understand.\"\n\n\"Maybe your brother is realizing there are things more important than baseball.\"\n\n\"I want Sam to be happy, but one thing I do know first-hand is what it's like to want a baby so bad you can taste it. So if he's ready to be a father, I can't think of anything that would make Laura happier.\"\n\nWhen AJ didn't speak, Elise realized he was staring at her. It made her feel strange, but yet it wasn't strange in a bad way.\n\n\"AJ?\" she said quietly hoping to 'break the spell' he seemed to be under.\n\n\"Oh. What's that?\" he said.\n\nElise smiled then told him, \"Nothing. Just rambling.\"\n\n\"And I said I was going a few minutes ago, and all I've done is take up more of your time.\"\n\nShe wasn't sure whether she was just being polite, or if there was something more to it, but she found herself saying rather sweetly, \"I don't mind at all.\"\n\nNot sure what exactly that meant, AJ left well enough alone and nodded toward the front door.\n\n\"I guess I'll see you on Tuesday then.\"\n\n\"Yes. I'll be looking forward to it,\" she told him, the smile still there. \"And not to badger you, but should I plan on making dinner?\"\n\n\"Oh. Right. Um, I mean if you really don't mind...sure.\"\n\n\"I don't mind,\" she told him just as sweetly as before.\n\n\"All right. Well, I'll uh, I'll see you then,\" he said as he turned toward the door.\n\nElise walked him out and thanked him again for staying.\n\n\"Are you kidding? You made this amazing meal and you're thanking me?\" he said in a playful way. \"I'm the one who's thankful.\"\n\n\"All right,\" she said. \"You take care. And good luck tomorrow.\"\n\n\"You do the same, and thank you,\" he told her before stepping off the porch.\n\nShe waited until he got to his car then waved. AJ waved back so she turned to go inside when he called her name.\n\n\"Yes?\"\n\n\"I...I was wondering. If you're not busy tomorrow evening, would you maybe want to come watch the game?\"\n\nElise wasn't much of a sports fan, and that went especially for baseball. But she'd had such a nice time that she told him she'd at least think about it.\n\n\"Okay. Maybe I'll see you there.\"\n\n\"Maybe,\" she said before smiling one more time then going inside.\n\nThey had a team meeting two hours before the game, and AJ Reddy was the only person in the room who understood why the team's manager was in such a good mood.\n\nAfter going over the lineup and the starting pitcher, Sam Beckett said he wanted to take a minute and thank everyone for all their hard work over the entire season so far. He spent a couple of minutes pointing out some of the highlights of the year and actually complimented several players as he recounted those moments of glory.\n\nAfter he left, AJ's roommate said, \"Da fuck?\" as he sat there shaking his head.\n\n\"What?\" AJ replied.\n\n\"Beckett. It's like the pod people done came, you know, and snatched his nasty ass and replaced it with a clone. You know, a clone that's all nice and shit.\"\n\nAJ laughed then said, \"Just be thankful, okay? I mean, that's better than being torn a new one, right?\"\n\nHis roommate chuckled then said, \"Yeah. You got that right!\" before getting ready to start pre-game batting practice.\n\nThe game started at 7:30, and AJ found himself looking around every few minutes hoping to see a raven-haired beauty somewhere near the home team's dugout. But by the time the National Anthem finished, and the home plate umpire hollered, \"Play ball!\" Elise was nowhere to be found.\n\nBy the bottom of the fourth inning, he'd given up looking. He was the number six hitter in the lineup, and after flying out during his first at bat, he was up again with a 2-2 count. The pitcher had fed him three breaking balls in a row, and AJ was banking on heat. \n\nHe tapped his cleats, took a practice swing then got ready. The pitcher wound up and as he delivered, a female voice hollered out, \"Come on, AJ!\"\n\nNormally, he tuned the small-to-modest crowds out. But something told him that was her voice, and as he cocked his body for the fastball he knew was coming, the pitcher threw a huge-breaking curveball. The distraction was enough to cause him to be ahead of the pitch, and when he saw the spin telling him it was a curve, all he could do was chop at it.\n\n\"Strike three!\" the umpire hollered. \n\n\"You need to trade that axe in for a bat, bro\" the opposing team's catcher told him.\n\nAs he got close to the dugout, he saw her. Right above it. Standing there smiling at him.\n\n\"I did that, didn't I?\" she kind of yelled down at him as she winced.\n\nHe smiled back, handed the bat to the bat boy, then said, \"Totally worth it.\"\n\nElise smiled but said, \"Sorry!\"\n\nHe set his helmet down then looked up at her.\n\n\"I'm really glad you came,\" he told her.\n\n\"I wasn't going to, but you know how I feel about sitting home alone.\"\n\n\"Um...I think that was kind of positive,\" he told her.\n\nElise laughed then said, \"It didn't come out right, but yes, it was supposed to be positive.\"\n\nSam had been talking with one of the players and only then realized the voice he was hearing but not really hearing was his sister's.\n\nHe stood up then looked up behind him and saw her.\n\n\"Whoa! My little sister is at a ball game? Seriously?\"\n\n\"Yes. She is. And it's not that big a deal,\" she told him.\n\nSam glanced over and noticed AJ was standing up and then it hit him.\n\n\"Oh. Hold on here. Did you...\" he said to Elise before turning to AJ, \"come here to see one of my players?\"\n\n\"Maybe,\" she said rather coyly.\n\n\"Uh-huh. Okay. Now I get it.\"\n\n\"No! It's not like that,\" she told him before looking at AJ whose arms were now crossed.\n\n\"Gee, thanks!\" AJ told her.\n\n\"I uh, I think I'm just gonna sit down and watch the game now,\" Elise told them both as she smiled at each of them in turn.\n\nSam walked over to AJ while still looking at his sister then asked, \"What happened Sunday? After we left.\"\n\n\"Nothing,\" AJ quickly said.\n\n\"Nothing. Nothing at all. Uh-huh. And my sister, who hates baseball, suddenly shows up at a game because...nothing happened. Have I got that about right?\"\n\n\"Well, I did ask her about that movie she mentioned no one had heard of.\"\n\n\"And?\"\n\n\"And, well, I kind of stayed and watched it with her.\"\n\n\"Ah! Suddenly it all makes sense,\" the manager said as he continued staring at his sister.\n\nThe entire team was now looking because they'd never once seen Sam Beckett lose focus during a game. Ever. And yet he was standing there with a player, looking up into the crowd, just shootin' the shit like there wasn't a game.\n\n\"No, really. It's not like that. We really did just watch the movie. A very lame movie.\"\n\n\"AJ?\" Beckett began, calling Reddy by his 'name' for the first time ever. \"You need to understand something about my sister. She' not impressed by money or flashy clothes or fast cars. But if you're nice to her, if you really take the time to show her you're interested in the things she's interested in\u2014that impresses her.\"\n\n\"I know you're talking about me!\" Elise called out. She couldn't hear a word they were saying, but their body language and constant looks her way told her they were.\n\n\"You and I need to talk, little sis,\" Sam told her, a smile on his face.\n\nWith that, he went back inside the dugout where every eye was on him until he looked at one of his players. His, and then every other eye simultaneously looked away.\n\n\"What the hell's goin' on here?\" he bellowed.\n\n\"That's what we all be askin',\" AJ's roommate said loudly enough to be heard.\n\nThere was a loud-but-brief chuckle that ended with another stare.\n\n\"Okay. Let's go! Back out on the field,\" Beckett hollered when the batter after AJ struck out, too.\n\nHe grabbed his glove then started jogging toward the outfield. He couldn't resist looking over his shoulder, and when he did, Elise raised her right hand a little and waved while smiling at him.\n\nAJ was still halfway turned around and tipped his hat. When he did, something happened that hadn't ever happened before. He completely forgot about the third base bag and caught the edge of it with a cleat. He didn't go down, but he stumbled clumsily before recovering, and then when it hit him that he didn't even care, he laughed loudly.\n\nThe left fielder trotted over to him and asked if he was okay.\n\n\"Yeah. I am. In fact, I think I'm...great.\"\n\nHe got a puzzled look from his teammate, but once he knew AJ was okay, he jogged out to his position leaving AJ standing in center smiling happily.\n\nThe rest of the game flew by for him as he felt like he was living in some sort of dreamy haze. He knew he was playing baseball, but for the first time since he ever set foot on a sandlot field, he didn't really care about the game. He singled in the 8th inning and scored a run, but all that mattered to him was seeing one particular fan smile at him when he trotted to the dugout after crossing home plate.\n\nHe'd stopped smiling by the time he got out of the shower, but only because Sam had torn them a collective new one after losing the game 3-2. Even the ass chewing seemed less threatening to him, and when he walked out of the locker room, the smile was back.\n\n\"Hey! I'm a little surprised to see you here,\" he told Elise, who was standing outside waiting for him.\n\n\"You can't possibly be as surprised as me,\" she replied, a smile on her face.\n\n\"So...you're not a minor-league groupie who does this all the time?\" AJ teased.\n\n\"Hardly. In fact, other than waiting for Sam a few times over the years, I've never done this.\"\n\n\"Then I'm honored,\" AJ told her. \n\nHe tried to make it sound playful, but because it was heartfelt, it came across that way loud and clear.\n\nWhen Elise didn't respond, AJ asked her a question.\n\n\"To what do I owe this great pleasure?\"\n\n\"I...I'm not really sure,\" she told him. \"Maybe I enjoyed your company more than I thought.\"\n\nAJ was standing right in front of her, and the way she said it, coupled with the way she was looking at him, told him she had feelings for him. He had no idea what that meant, but he knew there was a connection of some kind.\n\n\"Whatever the reason might be, I'm really glad you're here,\" he told her sincerely.\n\nWhen Elise spoke, it was obvious she was nervous.\n\n\"I...I was wondering if you might like to maybe go...I don't know...somewhere...\"\n\nAJ smiled and said, \"Yes. If it's with you, the answer is 'yes'.\"\n\n\"Oh. Okay,\" Elise said as the nervousness faded. \"I sat there through the whole game trying to decide where to ask you to go, and then when I went to do the asking, I had no idea what to say.\"\n\n\"That's okay,\" AJ told her. \"After I noticed you were here tonight, I was trying to work up the nerve to ask you to go somewhere with me. I mean, the next time I saw you.\"\n\nElise laughed a nervous laugh then said, \"You just had no idea it would be right after the game, huh?\"\n\n\"No,\" AJ said. \"But I'm really glad it was.\"\n\n\"Yeah. Me, too,\" she told him. \"I...I haven't asked a guy out since the Sadie Hawkins dance in the 8th grade. Even so, I didn't expect to be so nervous.\"\n\n\"Oh, so...did you just ask me out?\" AJ asked as though it was some big surprise.\n\n\"Um...I was hoping to, but I didn't quite get to the 'where' part.\"\n\nAJ inched closer, smiled, then said a little more quietly, \"That's not the important part.\"\n\n\"Are you hungry?\" Elise asked, unable to hold his stare and hoping to get to the 'where'.\n\n\"Always. Are you?\"\n\n\"Yes. Honestly? I was so nervous I couldn't eat.\"\n\n\"Seriously?\"\n\n\"Yes, seriously!\" she said feigning being indignant. \n\n\"May I ask why?\"\n\n\"I...I guess I was afraid you'd say 'no' and that you'd do so because I'm, you know...\"\n\n\"So beautiful?\" he suggested.\n\nElise laughed another nervous laugh that was filled with relief.\n\n\"Thank you, AJ, but you know why.\"\n\n\"If you mean the age difference, I could tease you about it, but the truth is I felt pretty sure you'd shoot me down were I to ask you out for that very reason, so, yes, I understand.\"",
        "\"It's not like it's...a date, right?\" she said very quickly.\n\n\"No. Of course not. It's just two people who enjoy each other's company having a bite to eat.\n\n\"Exactly!\" she said. \n\nAJ moved even closer then looked down at her right hand before slowly moving his left toward it. He softly touched it with one finger and when Elise touched his he gently took it.\n\n\"But it...could be a date...couldn't it?\" he asked as he looked into her eyes.\n\nHers darted back and forth between his as her heart began to beat quickly.\n\n\"I...I suppose it could be,\" she replied very quietly. \"If, let's say, both of us wanted it to be.\"\n\nAJ moved even closer until they were face to face just inches apart.\n\n\"I'd like that,\" he told her. \"Very much.\"\n\n\"Then...I wouldn't object to calling it that,\" Elise replied as AJ leaned his head even closer.\n\n\"So would you object to me...kissing you?\"\n\nBefore she could answer their lips met in a soft, gentle first kiss that lasted less than a second.\n\n\"No,\" she whispered as it ended.\n\nAJ smiled then asked her where she'd like to go.\n\n\"Have you been to City Butcher and Barbecue?\"\n\n\"Just once. But I'd love to go again.\"\n\n\"Yeah?\" she replied with a happy smile.\n\n\"Yes.\"\n\n\"But you have to let me pay since I'm the one who asked,\" she told him.\n\n\"My male pride is screaming at me to tell you 'no way' but my empty wallet is saying, 'Be quiet'.\"\n\n\"Listen to your wallet, okay? Elise said with a happy smile.\n\n\"Can I at least drive?\" he asked.\n\n\"My car is parked here at the stadium,\" she told him then added, \"but yes, you can drive.\"\n\nThey were still very close together when AJ said, \"Your eyes are like emeralds. They're absolutely...mesmerizing.\"\n\n\"And yours are the bluest blue I've ever seen,\" she told him, not caring she felt like she was back in the 8th grade saying things that sounded downright hokey.\n\nAJ smiled then took her hand and suggested they head out.\n\nDuring dinner, the conversation started with more movies then branched out to music and books. At some point, Elise mentioned living alone, and the inevitable came out.\n\n\"Do you mind me asking how...what happened to your husband?\"\n\n\"No. I don't mind. I'm finally at a point where I can talk about it without getting emotional,\" she replied.\n\n\"Jeff was an electrician. He learned the trade in the Navy, and he also made a good friend who was from my hometown on one of the ships he served on. When his time was up, he had no real idea where he wanted to go, and his friend, Tom, suggested he come stay with him and check out life in small-town Idaho.\"\n\n\"I take it he liked it well enough to stay?\" AJ offered.\n\nElise smiled as she answered.\n\n\"Yes. He got hired by the only electric company in town and we met when he came to do a job for my parents. He was very handsome, but not exactly...well spoken. You might say he was a little rough around the edges. But he came back a few days later and asked me out, and I reluctantly said 'yes'. It didn't take long for me to realize that underneath that edgy exterior was a wonderful person with a heart of gold.\"\n\nAJ wanted to say something, but there was nothing to say, so he sat and listened.\n\n\"Anyway, we dated for a year before he asked me to marry him, and I couldn't wait to say 'yes',\" Elise told him. \"We married the following summer and got our own place. The owner of the company took Jeff on as a partner which allowed me not to have to work, and things were pretty amazing. Until...\"\n\nAJ thought Elise was on the verge of crying, but she held it together.\n\n\"They were working on a job together one morning. It was a new hardware store, and Jeff's partner thought he told him 'okay' when he was asked if Jeff was ready for the power to be turned back on. Evidently, he'd hollered, 'hold on' but it sounded like 'okay' and...\"\n\n\"My God. I'm so sorry,\" AJ told her.\n\n\"Thank you. Me, too. But Jeff's partner was so distraught he ended up selling the business and I know he's never forgiven himself. I told him at the funeral and then a couple of years later when I saw him again it wasn't his fault. He thanked me for saying that, but told me he didn't see it that way. 'I'm the one who flipped the switch,' he told me both times.\"\n\n\"I can't imagine how he must feel,\" AJ said quietly.\n\n\"I agree. Losing Jeff was awful, but to feel like you were the person who killed him would be...unimaginable.\"\n\n\"That was two years ago, right?\" he asked very tactfully.\n\n\"Two years, three months, and...\"\n\nShe thought for a moment then said, \"Six days.\"\n\n\"I wish I had more to offer than 'I'm sorry',\" AJ told her.\n\n\"It's hard to know what to say. No one can bring a person back, so 'I'm sorry' is more than enough, AJ.\"\n\nElise smiled then very politely said, \"Could we maybe talk about something else?\"\n\n\"Sure. Of course.\"\n\nThen AJ smiled and said, \"Just not about baseball, okay?\"\n\n\"You won't have to twist my arm,\" Elise told him with a polite laugh. \"I don't hate it, but I don't like it much at all.\"\n\nThey discussed her job for a bit then Elise asked him if he'd thought about what he might do if 'the call' never came.\n\n\"The call. You know, this year is the first time I've ever allowed myself to even consider that possibility. Ball players are incredibly superstitious, and until a couple of months ago, I believed that just thinking about it was bad joo-joo.\"\n\n\"Bad joo-joo?\" Elise asked, a puzzled look on her face.\n\nAJ laughed then explained.\n\n\"Sure. It means luck. Or rather bad luck.\"\n\n\"Oh, okay!\" she said now laughing herself. \"I've never heard Sam say that.\"\n\nWhen it got quiet again, AJ got a little more serious.\n\n\"But to get back to your question, the answer is I'm not sure. Teaching school always jumps out at me, but I have no idea if I'd even like it.\"\n\nElise nodded in understanding then said, \"I never even considered it because I don't want to deal with the nasty remarks and the attitude. But if that part didn't get under a person's skin, I can see the appeal. Heaven knows we need all the good teachers we can get.\"\n\n\"I agree. I'm just not convinced I'd be one of them.\"\n\n\"Anything else out there beckoning you?\" she asked.\n\n\"Yeah, I think so,\" AJ replied with a smile.\n\n\"And?\" Elise asked.\n\n\"It's not so much a job as it is a lifestyle change.\"\n\nShe started laughing and AJ asked what was so funny.\n\n\"I don't know. I guess I was just trying to imagine you literally changing your lifestyle.\"\n\n\"Oh, okay. As in coming out as gay or something?\" he said with a smile.\n\n\"Sorry. I'm not usually one to think like that, but for some reason it struck me as funny. I promise to be good from now on.\"\n\n\"Just not too good, right?\" AJ teased, the implication rather obvious.\n\nElise laughed again then told him, \"I haven't had this nice a time since...\"\n\nHer voice trailed off as she finished the sentence.\n\n\"Since Jeff was alive.\"\n\n\"For what it's worth, this is the best time I've had since, well, maybe back when I was in college.\"\n\nElise looked at him for a moment then said, \"When I first met you, it never even crossed my mind we might, you know, enjoy spending time together.\"\n\n\"Same here. I have to admit I was rather...taken with you. You're obviously beautiful. I just never expected you to take me seriously.\"\n\n\"Because of your age or because you play minor-league baseball?\" she asked with a cheerful smile.\n\n\"Both?\" AJ replied. \"I couldn't help but think someone looking for stability in a relationship would ever consider me someone worth investing time in, then when you add in how attractive you are, it seemed pretty obvious that would be a bridge too far.\"\n\n\"A Bridge Too Far. I also enjoyed that movie and I've always loved the meaning behind the title.\"\n\n\"I watched the trailer for it once but haven't seen the movie. I can't remember who first used the phrase on me, but I had no idea what it meant so I checked it out as soon as I had some time. So yes, it's a great phrase with a lot of meaning.\"\n\nElise smiled as she looked at him.\n\n\"Did you really think I was 'a bridge too far'?\"\n\n\"I did,\" he told her. \n\n\"Well, I have to admit I've never dated or been in a relationship or however one might describe it, with someone younger than me. Not even a year younger. But I'm um...old enough...to know what I value, and hopefully wise enough to recognize it when I see it, regardless of the age of the person exhibiting it. With 'it' being that which I value.\"\n\nElise tilted her head, smiled, then said, \"I hope that made sense, because now that I've said it, I think I may have even confused myself.\"\n\nAJ laughed quietly then told her, \"I understood. And although I've never...what you just said...anyone older than myself\u2014not even a year older\u2014I hope I'm at least smart enough to know when I see someone...amazing.\"\n\n\"Thank you, AJ. And thank you for saying so many kind things. That's something else I value very much.\"\n\nHe reached across the table for her hand, and when he did, Elise moved it from her lap to let him take it. It was small and soft and felt so right in his.\n\n\"I don't have a real job, so for the moment, I don't even have a real future. At least not financially speaking. But I do have a belief in things like commitment, respect, honesty, and family. So whether this...what? Mutual attraction or maybe admiration between us lasts, I love that I can make you smile or feel good.\"\n\nElise smiled but didn't speak as tears were welling up in her eyes.\n\n\"I love when you smile,\" he said quietly.\n\nShe used her free hand to pick up the napkin on her lap and dab her eyes.\n\n\"I love that you can make me smile,\" she told him as she set the napkin down.\n\nOnce again, she smiled happily then said, \"For the record, I'm not impressed my money and things. What I do care about are the things you just mentioned. I got a little teary-eyed when you listed several of the things I value the most with commitment being very near the top.\"\n\nAJ smiled back then said, \"I've never been married, but it's obvious it takes a lot of work, and if two people aren't committed, I don't see how it works. Not just to each other but committed to the idea of staying committed.\"\n\n\"Oh, my gosh! That is exactly how I feel. I...I can't believe you just said that.\"\n\nAJ broke eye contact causing Elise to ask if everything was okay.\n\n\"Oh, sure. I guess I just feel a little hypocritical.\"\n\n\"How so?\"\n\n\"I'm sitting here telling you I believe in commitment, but I'm also giving serious thought to giving up my commitment to baseball.\"\n\n\"But that's not the same thing,\" Elise told him. \"You're committed to a higher goal. You're committed to an overall...higher trajectory. Pursuing baseball is just a part of your overall life strategy, right?\"\n\nAJ thought for a moment then said, \"I don't think I've ever thought of it in those terms before, but yes, I would say that's correct. Or at least I hope it's true in my case. And when it comes to baseball, it's a brute fact that very few minor-league players ever get 'the call' so not having a backup plan seems rather...irresponsible.\"\n\n\"I get the feeling you don't give yourself enough credit,\" Elise told him in the kindest way possible.\n\n\"I think I'm a fairly confident guy,\" he said in his defense even though he didn't feel attacked.\n\n\"You are. And that's something I admire. I find cocky, arrogant men insufferable so matter what else they have going for them. A guy could be...as handsome as you are...and fabulously wealthy, but if we was a smug, self-centered narcissist, I wouldn't give him the time of day.\"\n\nAJ smiled then asked a question.\n\n\"How about a modestly-confident, very poor, much-younger guy with no certain future?\"\n\nElise smiled happily then said, \"Um...yeah. I think I'd be willing to give a guy like that a chance. Assuming he could make me smile and laugh.\"\n\n\"Just to be sure, you did tell me I make you laugh, right?\"\n\nElise smiled then said, \"I believe my exact words were 'I love that you can make me smile', but okay. That's close enough.\"\n\nThey sat there quietly staring at one another for several seconds before AJ said, \"We should probably finish eating, don't you think?\"\n\nHe slowly let go of her hand, and Elise withdrew it just as slowly as she said, \"Yes. That sounds like a good idea.\"\n\nThey made small talk as they ate and as they drove back to the stadium. Just before they pulled into the parking lot, AJ surprised Elise by asking if the city was still hiring.\n\n\"Oh. Um, yes. There are quite a few openings, as a matter of fact.\"\n\n\"Hmmm. Maybe I'll take a look one of these days,\" AJ told her as he pulled up next to her car.\n\n\"I know the website pretty well. I'd be happy to help you navigate through it,\" Elise told him.\n\n\"I'd like that,\" AJ said.\n\n\"I know it's getting late, but we could take look if you'd like. Back at my house,\" she said rather quietly.\n\n\"I...I don't want to keep you up,\" he said just before remembering what she'd told him before about rarely going to bed before midnight.\n\n\"You won't be,\" she said sweetly. \"And I'd enjoy the company.\"\n\n\"All right. If you're sure, I'll follow you.\"\n\n\"I'm sure,\" she told him with a smile as she leaned over and kissed him. \"See you there?\"\n\n\"You will,\" he told her.\n\nHe jumped out and ran around to get her door, something else that made her smile.\n\n\"Thank you,\" she said as he helped her stand up.\n\n\"I just wanted to kiss you again,\" he told her as they stood face to face.\n\nElise slid her arms around his neck and accepted his kiss, and after a second or two, the tip of his tongue.\n\n\"Mmmm,\" she moaned softly just as the kiss ended. \"That was very nice.\"\n\n\"I agree,\" AJ told her.\n\n\"Um...so...I'll um, see you at my place then.\"\n\n\"Uh-huh. You will,\" he told her as he let her go.\n\nHe closed her door then moved away so she could get by. He also watched her get into her own car, and as he walked around the front to get back into his, realized he was very hard. So hard he had to make a quick adjustment to be able to sit down.\n\n\"What the hell...\" he said to himself as he watched her drive away.\n\nHe'd only recently met her, and now he couldn't stop thinking about her. But the feelings he was having were unlike any he'd had for any woman before. In the past, it was all about the next move to get her into bed, but with Elise, it was more about just being with her. Just being near her and talking to her. And as the 'swelling' slowly subsided, he realized the feelings he was having were very real in every way.\n\nAJ had no way of knowing Elise was experiencing a very similar reaction herself as she became very aware of the wetness between her legs and the reason for it. She, too, told herself she barely knew this incredibly handsome, much-younger man who had made such a positive impression on her, but that paled in comparison with the emotions she was feeling as a result of spending time with him. And, of course, kissing him.\n\nIt was impossible to call it 'love' but it was also clearly more than some kind of infantile infatuation. Yes, he was downright gorgeous, and while she hadn't made love with a man since Jeff was alive, she still wouldn't sleep with him were he not more than just physically attractive to her. That she found him so much more than that was, in her briefly-considered opinion, the reason for her body's reaction to his kiss.\n\nBy the time she pulled into her driveway, things were back to normal in a physiological sense, but as she waited for him to pull in behind her, Elise couldn't help but wonder if her life would ever be the same again. Perhaps she was overthinking or even 'over feeling' it, but she couldn't help wondering.\n\nShe got out and waited for him, and when he got out of his car, the way he looked at her told her they would not. Then when he walked up to her and kissed her again, she silently prayed they never would.\n\n\"Okay, so translate that into English for me,\" AJ said after reading the second confusing job description on the city's website.\n\nElise laughed then said, \"I know. It's crazy. They can't just come out and say what you'll be doing. It has to be couched in this hard-to-understand code that requires translation. I had a very different idea of what I'd be doing before I interviewed based on the job description than I did after talking to the people I ended up working for.\"\n\nAfter a half-dozen or so other attempts, AJ started deciphering the code.\n\n\"Okay. I get it. 'Responsible for rapid decision making in a dynamically-changing atmosphere' means you'll be busy doing stuff.\"\n\nElise laughed loudly and said in a pretty decent British accent, \"By jove, I think you've got it, old chap!\"\n\nAJ spun the swivel chair around and said as seriously as he could, \"Hey. Who you callin' 'old'?\"\n\nElise played along and said, \"Jolly right! Pot calls kettle black, eh?\"\n\nWhen AJ smiled she laughed. When she did he reached over and pulled her onto his lap. After a brief yelp, she put her arms around him and looked into his eyes.\n\nContinuing the improv she quietly asked, \"So...what now, guv'nuh?\"\n\n\"I'm terrible at accents,\" he told her.\n\nHis voice got more serious as he said, \"But I'm not bad at...kissing.\"\n\nElise smiled then said, \"Jolly right you are,\" before lowering her lips to his.\n\nThis kiss got passionate very quickly, and AJ felt the same 'issue' arising as before. Elise felt it, too, and moaned softly. As the kiss got deeper and more passionate, she slowly ground her tight bum into his lap causing AJ to groan.\n\nWhen she came up for air, Elise said, \"Is there anything else you're as good at as kissing?\"\n\nAJ pulled her close and kissed her again then said, \"I've been told I have other talents.\"\n\n\"Oh? Such as?\" she asked, the smile on her face as happy as he'd ever seen.\n\n\"I...I'd have to um...show you,\" he told her very seriously. \n\n\"I see,\" she replied. \"Well, I do enjoy learning and...exploring...so...\"\n\nBefore she could finish, AJ put his arm under her legs and stood up as though she was weightless.\n\n\"Just tell me where you'd like to do your exploring,\" he said with a smile.\n\nElise still had her arms around his neck as she replied.\n\n\"Down the hall and to your left.\"\n\nHer hands and fingers were trembling as she undid each button on his shirt.\n\n\"I...I haven't done any...exploring...since my husband,\" she said very quietly as she worked her way down his shirt.\n\n\"Then we'll explore very slowly,\" AJ told her.\n\n\"Slow is nice,\" she said with a very sweet smile.\n\nBut as she unbuckled his belt then unbuttoned the top button on his pants, she surprised herself by saying, \"But I also like...hard.\"\n\nAs his pants fell to the floor, she leaned over and bit his ear then said, \"Very hard.\"\n\nElise reached for him inside his boxers and moaned loudly when she found what she wanted.\n\n\"Mmmm. That's also very hard,\" she whispered as she pulled the shorts down.\n\nHoping he wasn't misreading her cues, AJ nearly tore her blouse off, and when Elise not only didn't object but gasped with pleasure, he continued until she was completely undressed then roughly pushed her back on the bed.\n\nAgain, she not only didn't complain, she pulled him on top of her then bit his ear again and said, \"I really do like it rough. Is that okay?\"\n\nAJ didn't answer. He'd been with women who enjoyed it 'rough' and by the time he was finished, Elise had cum twice and was gasping for breath.\n\nAs she lay in his arms with hers around him she said, \"I am going to be so sore tomorrow, but it is so going to be worth it!\"\n\n\"Was that rough enough?\" he asked, knowing he'd given her everything he had and maybe a little more.\n\n\"It was...a nice start,\" she said, trying not to smile.\n\n\"Nice start? Are you kidding me?\" AJ said rolling her over so fast it made her yelp again then laugh even harder.\n\n\"Maybe a little,\" she happily teased. \"Why don't we try that again and I'll let you know for sure, okay?\"",
        "Two things came out of Round Two. AJ learned that Elise not only enjoyed, but actually seemed to need to have something done he'd never been asked to do before. She absolutely loved having her nipples bitten. Not playfully, but like everything else...hard. Really hard. \n\nThe second thing was after they finished, AJ had a new nickname.\n\n\"My human jackhammer,\" she said with a happy smile. \"Now that's what I'm talkin' about!\"\n\n\"You're full of surprises, Elise,\" he told her a couple of minutes later.\n\nNow wondering if she'd revealed too much about herself too fast, she asked, \"Was that a turn off for you?\"\n\nThe concern in her voice was obvious, and before AJ could reply, she sat up and said, \"I felt so close to you that I wanted to be completely honest about what I like, but if I misread things and blew it, I'm...\"\n\nAJ pulled her close and said, \"It doesn't matter to me what you like. All I need to know is how to make you happy, okay?\"\n\n\"So...you don't think I'm...weird?\" she asked, the concern still there.\n\n\"Weird? Why would I think that?\"\n\n\"I don't know. Maybe you like girls who like...sweet and careful.\"\n\nHe turned on his side then looked into her beautiful eyes and said, \"I like...you. And as long as you like sex I don't care what kind it is. Lovemaking is just one more way to connect with the person you love and one more way to meet their needs. So soft, hard, sweet or sour, I'm your guy.\"\n\nElise smiled then began to tear up again.\n\n\"Hey. What's going on?\" AJ asked.\n\n\"Sorry. I'm...such a girl.\"\n\n\"I'm glad,\" he said in that 'if you weren't I wouldn't be here' way.\n\n\"No. It's just that from the first time we talked, you've done nothing but make me feel special and...and beautiful. And...now this.\"\n\n\"Elise. You are special and beautiful.\"\n\n\"I took such a big risk opening up to you, and you could have really hurt me.\"\n\nHe smiled at the play on words she hadn't got.\n\n\"What?\" she asked before 'hurt me' hit her.\n\nShe pushed him playfully then said, \"Okay. Touch\u00e9. You got me there.\"\n\n\"I believe I got you somewhere else, too,\" he teased causing her to laugh.\n\nHe was now on top of her and looking into her eyes.\n\n\"AJ? When you said, a moment ago, about connecting with the person you love, you meant that generically, right?\"\n\nHer eyes were moving rapidly between his, and he knew this wasn't the time for more humor.\n\n\"Mostly,\" he said quietly as he brushed her hair away from her very pretty face.\n\n\"Mostly?\"\n\n\"Uh-huh. But a part of it was meant specifically for us. You and me. Together.\"\n\nElise smiled again then said very quietly, \"I love the sound of that.\"\n\n\"Yeah, it has a very nice ring to it, huh?\"\n\n\"Yes. Yes, it does,\" she said as she felt him growing hard again.\n\n\"Mmmm. Now I know why some older women like younger men,\" she said with a bright, happy smile.\n\nAJ laughed then said, trying to sound southern, \"Ma'am? I hear tell you got some equipment in need of some jackhammerin'. Is that correct?\"\n\nElise laughed loudly and happily then said in her best Scarlett O'Hara voice, \"Why, suh. I do believe you ahh cuh-rect!\" just before he entered her hard and fast causing her to gasp with delight.\n\nElise didn't ask AJ to stay, but she didn't need to as he fell asleep with her in his arms somewhere around two in the morning. He didn't have to be anywhere until after noon, so that wasn't an issue.\n\nElise woke up first and when she felt his warm body next to hers she smiled and draped her arm over it. Then when she realized how badly she hurt and where the pain was coming from and why, she smiled again knowing she could relish the feeling each time she moved or took a step as long as it lasted. Each step being a sweet reminder of the way this handsome younger man had met every need she'd ever had and then some.\n\nShe lay there watching him sleep and for the first time thought to herself, \"You're falling in love with him.\"\n\nShe tried telling herself she wasn't, but she was buying it because she knew she was. Job or no job, she was indeed falling in love with this 25-year old baseball player who knew his time on the field was numbered. But after having lost the love of her life; a man who'd made decent money, Elise knew that money most definitely did not buy happiness. And after just these relatively few hours she'd spent with AJ, she knew that being with with him did make her happy and that she wanted more of it.\n\nHe felt her arm and woke up and stretched before rolling over to face her.\n\n\"Hi,\" he said.\n\n\"Good morning,\" she told him before kissing him. \"You hungry?\"\n\n\"Always,\" he replied.\n\n\"Did you sleep okay?\"\n\n\"Oh, yeah,\" AJ said as he twirled her hair around one of his fingers.\n\n\"Me, too,\" she said sweetly. \"Come on, I'll make breakfast for us.\"\n\nFour pancakes and four scrambled eggs later, AJ was full and sipping a cup of coffee with this beautiful woman he'd made love to\u2014several times\u2014just hours ago.\n\n\"I'm not so much to look at early in the morning, am I?\" she said before taking a sip of coffee.\n\n\"You're even more beautiful with your hair all messy and wearing just my shirt,\" he told her.\n\nHis words were sincere, but it was just a simple line. And yet those words touched Elise more deeply than anything he'd yet said to her.\n\n\"You make me feel beautiful,\" she told him again.\n\n\"You are,\" AJ replied. \n\nHe looked down at the empty plate in front of him then said, \"And you can cook. Man, you can cook!\"\n\n\"It's just pancakes and eggs,\" she replied, loving the compliment.\n\n\"Yeah. And last night was just...sex,\" he said with a warm smile.\n\n\"Did you really enjoy it?\" she asked, still needing to be reassured.\n\nHe slid his chair next to her then said, \"I enjoyed breakfast. But I loved being with you.\"\n\n\"Even with all my...proclivities?\"\n\nAJ put an arm around her then tried the southern accent again, \"Don't go usin' all them ten-dolluh words on me, mah dee-uh. Ah'm just a simple man, you know.\"\n\nElise laughed happily, leaned over and kissed him then said, \"I love you so much,\" before she realized what she'd even said.\n\nShe recoiled in near horror then said, \"AJ. I...I have no idea why I said that. I only meant...\"\n\nHe pulled her onto his lap then said, \"Don't apologize.\n\nMore quietly he said, \"Unless, of course, you didn't mean it at all.\"\n\nElise was looking into his eyes again as she said, \"I didn't mean to say it, but I'm pretty sure I may have meant it. It...wasn't supposed to come out. It just sort of...did.\"\n\nHer eyes were desperately searching for his approval as the same fears she'd had last night welled up in her for revealing too much too fast\u2014unintentionally or not.\n\n\"I'm pretty sure I hope you did mean it,\" AJ told her quietly before putting a hand at the back of her neck and pulling her close to kiss her again.\n\nWhen the kiss ended, Elise didn't pull away. She just put both arms around him and held him. Neither of them knew how long she sat there, but neither of them cared, as they both wanted that moment to last forever. \n\nThe moment when, for the first time, they both knew. Neither of them used that little four-letter word again until the season was over, but both of them knew.\n\nAnd later that week, Sam and Laura knew, too.\n\nWhen Sam asked Laura to invite his sister over for dinner the following weekend, she was only slightly surprised when Elise asked if she could bring a 'Plus One'. \n\n\"Would that be a handsome young baseball player?\" her sister in law asked.\n\nLaura told her husband what his sister had said, and told her her immediately, \"She's in love with that kid.\"\n\nLaura didn't argue the point, and when she watched the way Elise and AJ related to one another at their house, she was pretty sure her husband was correct. There was no overt display of affection in front of them, but Laura saw fingers brushing, little touches here and there, and the most revealing thing was the way they looked at one another. After they left, she told her husband she thought he was right.\n\nTwo weeks before the end of the season, Sam got a call from the athletic director at Missouri State University in Springfield, asking if he had any interest in possibly coaching at the college level.\n\nTaken by surprise and completely shocked and trying not to sound too excited, Sam agreed to an interview, but didn't tell Laura, as he didn't want to dash her hopes in the event he got turned down. Things had been going incredibly well for them, and they were working very hard (and very often) on having a baby. So added stress was the last thing she needed.\n\nHe was earning $45,000 a year managing the Cardinals, so when the University offered him $55,000 and the opportunity to start the day after the minor league season started, he jumped at the offer.\n\nAJ had also continued looking at the city's job postings, and also set up an interview for one called a 'workforce development specialist'. The listing said the person hired would 'provide workforce development job functions to include the coordination of assigned program activities, which may include career counseling, youth services and case management.'\n\nHe had no reason to think he'd get hired, but he couldn't see how at least getting his toes wet via an interview could hurt, so he submitted a resume online and got a call back two days later.\n\nThe man in charge of 'workforce development' for the city was a huge Cardinals fan and after seeing the degree in psychology, he told his assistant to set up an interview.\n\nThe one and only suit AJ owned was dated but clean, and he'd managed to find a way to sneak out for a couple of hours without Elise getting suspicious. They weren't living together, but they may as well have been, as AJ spent nearly every free moment he had at her place, to include every night he was in town.\n\nSam had been offered the job, but still hadn't told Laura when the season ended. Coincidentally, she'd just gotten some incredible news of her own that very day. Rather than share it with her husband, she waited for the end-of-season party they always had at their home the next day before the ball players went their separate ways for the off season.\n\nThe party raged until a little after midnight when Sam told everyone it was time to start winding down which meant 'go home'.\n\nThere were handshakes and hugs and lots of backslapping between players, coaches, and Laura Beckett, as well, before the last player said goodnight. He wouldn't be returning the following year, so he told Sam 'goodbye' and thanked him for everything over the two years he'd been there.\n\nAnd with that it was suddenly very quiet when Sam suggested they all go inside.\n\n\"I'll get the mess cleaned up tomorrow,\" he assured his wife who assured him that was the last thing she was concerned about.\n\nElise sat next to AJ on the couch and held hands with him as her brother said, \"I uh, I've got an announcement to make.\"\n\n\"Wait. You know?\" Laura said, her face showing a look that said she was crestfallen.\n\n\"Know? Know what?\" Sam said with a shake of his head.\n\n\"Wait. You don't know?\" Laura said, now even more confused.\n\n\"Honey, what are you talking about?\" her husband asked even as he sensed what was going on.\n\n\"No. You go ahead, sweetheart,\" she told him.\n\n\"No way. Not after that. You go first,\" Sam said.\n\nLaura moved closer to him then took his hand.\n\nShe looked over at AJ and Elise then up at her husband and said, \"Well, yesterday, I found out that you're going to be a father.\"\n\nNone of them had ever seen Sam Beckett cry before, but tears filled his eyes as he picked his wife up and spun her around.\n\n\"Hey! I'm gonna be a father!\" he called out.\n\nSuddenly, he stopped then very gently set Laura down.\n\n\"Oh, geez. Honey, are you okay? Did I hurt you? Is the baby okay?\" he asked in rapid-fire fashion.\n\n\"You idiot!\" Laura said playfully. \"You're not going to hurt the baby!\"\n\n\"You sure?\" he asked just to be sure.\n\n\"She's fine, Sam!\" Elise called, as tears streamed down her face, too.\n\nShe got up, pulled AJ with her, then went to hug her sister-in-law and then her brother.\n\n\"Congratulations to you both!\" Elise said as the women hugged and cried.\n\nAJ hugged Laura then went to shake his manager's hand but got pulled in for a bear hug.\n\n\"Wow! What's wrong with my brother?\" Elise teased as he let her boyfriend go.\n\n\"And what's his big announcement?\" Laura asked.\n\n\"Oh, right!\" Sam said. \"Well, I do indeed have some big news. Not that big, but pretty big.\"\n\nHe asked everyone to sit down then said, \"I uh, I've been offered a new job.\"\n\n\"What?\" Laura asked immediately. \"Sam. Baseball is your whole life.\"\n\nHe smiled at her then said, \"No. You are my whole life.\"\n\nHe looked down at her tummy then said, \"And our baby.\"\n\nMore tears followed before the big reveal.\n\n\"So it's still baseball, but it's more money. Quite a bit more money. Enough to maybe turn a bedroom into a nursery.\"\n\nLaura jumped up and hugged him and told him how happy she was for him as did AJ and Elise.\n\nOnce things got calm, AJ said, \"I uh. I've got one of my own.\"\n\nElise's head snapped his way causing AJ to smile.\n\n\"Yeah. I had an interview of my own a couple of week's ago.\"\n\n\"You...you did?\" Elise asked as AJ just smiled.\n\n\"I did. And you are now looking at the city's newest workforce development specialist.\"\n\n\"AJ. Seriously?\" Elise said, her excitement growing.\n\n\"Seriously. I start next week.\"\n\n\"Oh, my God! AJ! I...I'm so happy for you, and...I'm so proud of you!\" Elise said as she threw her arms around him.\n\nHis former manager and his now-pregnant wife also congratulated the former player, and just as Sam was about to say, \"This calls for a celebration!\" AJ said he had one more announcement to make.\n\nHe took Elise's hand and sat her down on the couch then smiled at her.\n\n\"It's actually more of a question than an announcement,\" AJ said.\n\nAs he began to get down on one knee, Elise's hands began trembling as Laura gasped, standing just a few feet behind him.\n\n\"No. AJ. What are you...\"\n\nHer hands were covering her mouth and shaking like leaves as he produced a small box then opened it up.\n\n\"Elise? I love you more than anything on earth. And if you love me, too, then...\"\n\n\"OF COURSE I LOVE YOU AND YES I WILL MARRY YOU!\" she screamed at the top of her lungs as her feet started banging the floor for joy.\n\nAJ turned around and said to Sam and Laura, \"I think that was a 'yes'.\"\n\nThere were tears in both Sam's and Laura's eyes again as AJ turned around and slid the very modest diamond ring onto his new fianc\u00e9's hand. \n\nElise couldn't speak, but she was holding her left hand out while covering her face with her right as tears streamed down her cheeks.\n\n\"I love you, Elise,\" AJ said as he bent down to get her to look at him.\n\nHer face was a mess, but never more beautiful as she choked out those same words to the man she loved.\n\n\"I...love...you...too!\" she said one word at a time.\n\nAJ helped her stand up then held her as she cried tears of joy.\n\nSam brought Laura over and the four of them stood there hugging and crying and congratulating one another.\n\nThe father to be and the former minor=league player started their jobs within a week of each other while Laura and Elise began planning for the upcoming wedding and new arrival. In their 'spare time' they slowing began moving Elise's things from the rental house to the one she and her handsome fianc\u00e9 were buying with what was left of the money Elise had from Jeff's life insurance serving as the downpayment.\n\nThe April wedding was small but elegant with AJ's parents footing most of the bill. Elise's parents were in no condition financially to do so, while his mom and dad were, and they were thrilled to help their only child who would be staying in Springfield, a city they planned to visit often in the future.\n\nLaura gave birth to Ryan Samuel Beckett the following month. Their baby boy was a healthy 8 pounds 2 ounces of screaming Beckett, and his father put a baseball in his tiny hand within an hour of his being handed to him for the first time.\n\nAJ and Elise were there with them, and Elise said, \"Is this a good time share some more good news?\"\n\nLaura and Sam had been cooing non-stop, but fell silent as they turned to look at the beautiful Mrs. Reddy. Even Ryan stopped crying and that was a first.\n\n\"Well, as it turns out, AJ and I will be having a baby ourselves in about seven more months,\" Elise said with a happy smile on her face.\n\nSam looked down at Ryan and said, \"Did you hear that, buddy? You're gonna have a teammate in a few months!\"\n\n\"Or maybe a cheerleader,\" Elise reminded her brother. \n\n\"Right!\" Sam explained. \"The Florida Marlins have the Mermaids now so...yeah!\"\n\n\"Hey, as long as he\u2014or she\u2014is healthy, I won't care what our baby does,\" AJ said as he stood there with his arm around his beautiful wife.\n\n\"Here, here!\" Sam said as he continued to dote on the son he now loved more than anything. Well, except for maybe his beautiful mother.\n\nHe stopped doting just long enough to look at everyone and say, \"You know what? None of this would be happening if someone hadn't walked into my office one day and offered me some advice.\"\n\nAJ smiled at him as he pulled his wife close.\n\n\"That was some good advice, AJ. Laura was right. That was\u2014major league advice.\"\n\nThere was some happy laughter before he handed his son back to his wife as AJ and Elise gathered around her bed so they could also dote on little Ryan while dreaming of the day in the not-so-distant future when they, too, would have a child of their own."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "older woman",
        "younger man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/major-league-advice"
}