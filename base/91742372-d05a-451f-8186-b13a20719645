{
    "title": "The Cherry Poppers Ch. 20",
    "pages": [
        "Jason woke on Tuesday with some mild satisfaction. He had come back from his dinner out with Jillian and gone right to work on his studies. He worked nonstop until eleven and accomplished a lot. A few more nights of this level of studying and he felt he would do well on exams. He had never missed a class and took good notes, so most things were coming back to him quickly. \n\nHe arrived a little early for his science class to see Kira and Tessa beforehand, but still wasn't sure what he was going to tell them. He brought the tickets with him to give to them but really wanted to go too. He thought about getting two more tickets and seeing if Beth wanted to go with the two girls, but decided that was probably not a good idea. Still racking his brain for a solution, he spotted Kira and Tessa waiting for him outside the classroom. \n\n\"Hey, you two,\" Jason said approaching.\n\n\"Hi, Jason,\" they responded in sync.\n\nKira looked great with her long blonde hair nicely brushed and halfway down her back. Tessa looked good too and a quick glance at her breasts reminded him of those incredible cone shaped orbs. 'Good god, he was a lucky guy, like Chad said, to have so many attractive ladies to fuck,' he realized. He was even turning down offers, like with Jillian. He smiled at what Chad would say if he knew Jason was turning down sex.\n\n\"You look to be in a good mood,\" Kira remarked.\n\n\"Just looking good,\" Tessa added with a cute little smile and slightly lecherous smirk. \n\nShe sure was less timid around him these days. 'I guess knowing someone intimately has that affect,' Jason mused.\n\n\"Yeah, I'm feeling pretty good, if I can just get a few more good days of studying for finals in like I did last night,\" Jason intoned, suddenly a bit more serious. \n\n\"Definitely,\" Kira agreed. \"We studied last night too, when we weren't talking about Friday with you, that is.\"\n\n\"Well, girls, I need to discuss that with you. I have two tickets and we can get more. But, I have a planned date for Friday already. I'd really like to go to the game with you guys though.\"\n\n\"Oh, geez,\" Tessa lamented.\n\n\"Darn, Jason! We were so looking forward to going with you again,\" Kira fretted.\n\nAs Jason glanced between their concerned faces, he wished for a solution. Did he dare ask Beth to go? No, that wouldn't work. Besides, he was sure these two hotties were thinking about more than just the game. They were thinking another round of incredible M\u00e9nage-a-trios afterwards. 'Good god, how could he possibly miss out on that,' he contemplated, despite the alternative was also sex with fabulous Beth. The gorgeous redhead, that loved him, and he wanted to be with too. She was his supposed girlfriend. \n\n\"Here ... you guys take these tickets. At least you'll be able to go if we can't figure anything else out.\"\n\n\"But, we have no way to get there. Tessa and I don't have a car.\"\n\nJason realized she was right. That was a problem for them too. Maybe asking Beth to go was the only real answer. He needed to think more about it. The bell sounded and they agreed to talk more on Thursday before the next class. \n\nHe was sitting with Tessa and Kira in science class now. At the conclusion of the class and before goodbyes, Jason thanked them for looking after Jillian. They said it was nothing and they did like her. \n\nJason had a few minutes before his next class which wasn't far from the science class, so he walked outside the building to use his cell to call Stephanie. He owed her another return call.\n\n\"Hey, Jason,\" Stephanie said, answering on the third ring.\n\n\"Hi, Stef. How you doing? How's Pam too?\"\n\n\"We're both fine but missing you. What are you doing later?\"\n\n\"Studying and I really have to. I'm way behind lately.\"\n\n\"Dare! Pam and I wanted to make you happy,\" Stephanie explained with a giggle.\n\n\"I'd love to but I promised myself I would knuckle down this week before finals.\"\n\n\"Okay, but we miss you. Also, we have lined up your next conquests.\"\n\n\"You have? Who are they?\"\n\n\"Brooke and Marnie. They're not roommates but you can use our room.\"\n\n\"How did you arrange this? They just want me to have sex with them?\"\n\n\"Well, not like that exactly.\"\n\n\"Are they okay?\"\n\n\"What do you mean?\" Stephanie said jokingly. \"They have pussies and they're virgins. What more do you care about?\"\n\n\"You know. Are they okay? I mean, are they attractive and not blimps?\"\n\n\"Getting picky?\" Stef mused. \n\n\"No, just high standards like Pam and you.\"\n\n\"Touch\u00e9, Jason. Okay, they're not Pam and I but they're not bad either.\"\n\n\"Like Tiffany and Susan?\" \n\n\"Yeah, like that. Brooke, you might like better. She has great tits. Not as good as mine, but nice.\"\n\n\"Nobody's are as good as yours,\" Jason praised.\n\n\"Flattery will get you everywhere, stud. Marnie is a little mousey looking but passable. She is slim with a very tight ass.\"\n\n\"Okay, sounds like it could work.\"\n\n\"What's the matter? Afraid your equipment won't work if they're unattractive?\" Stef chided.\n\n\"Something like that,\" Jason agreed with a chuckle. \"But how did you arrange this?\"\n\n\"It was easy really. Pam and I sometimes eat dinner with them. We sang your praises, said you were gorgeous, and that you're a great fucker. Pam told them about your magnificent cock too. We worked them until we thought they were going to orgasm right there on the spot. They must be horny as hell because they couldn't get enough descriptions of you and the sex.\"\n\n\"Really, wow!\"\n\n\"Yeah, they're primed for you. We told them how gentle you were the first time and I think that sold them. Neither one is very experienced at sex. Sort of like Pam and I at first. They're ready to learn though. Anxious even.\"\n\n\"Great.\"\n\n\"The only question is when?\"\n\n\"I might be able to do it Saturday night,\" Jason offered.\n\n\"There's only one bad thing with setting you up like this,\" Stephanie said.\n\n\"What's that?\"\n\n\"Pam and I don't get any time with you.\"\n\n\"Hey, I might have a plan for you two,\" Jason thought out loud. \"Chad is available Saturday night. Why don't Pam and you come over here and fuck his brains out while I'm in your room with the virgins?\"\n\n\"Well, Chad's not you, especially in the dick department, but he's still cute. Let me talk with Pam but I think she'll go for it. Will there be any other guys there too possibly?\"\n\n\"You want me to invite a few and set up another gangbang?\"\n\n\"Why not? I'm sure Pam will go along and do as I tell her.\"\n\n\"Good, let me see what I can set up.\"\n\n\"Great.\"\n\nJason barely made it to class on time. The call had lasted a lot longer than he planned. He ran into Claire along the way but only had time to say hi. She was looking good and reminded Jason of what a great fuck she had been. That time with Caitlin and Claire had been hot. The time with Claire and Kim was even hotter.\n\nThe rest of Tuesday and Wednesday were uneventful but good for getting caught up. Jason got in plenty of studying after practice each day. He was getting to like Brad and they had some good work outs together. He wasn't working at the infirmary now that swimming started and double sessions. Once they got into the season, he could return to work on hours he wasn't in school or swimming. His new schedule for next semester gave him Monday, Wednesday, and Friday afternoons free to work if there was no swim meet. \n\nHe wasn't needed at work this week anyway. This was Doctor Jenny Whitfield's last week working with Dr. Amanda Clark, so they had two people there as well. After this, he would be on his own with Dr. Clark. He hoped that went half as good as his relationship with Dr. Jenny had gone. He needed to make it over there to see her before she left. She had chosen to go to Hawaii after her retirement for two weeks. He wanted to get two cupcakes, like she did, and go see her Thursday or Friday. \n\nOn Thursday, as Jason walked to class, he came back to thoughts of trying to work out Friday's game. He hadn't done a thing about it since Tuesday and he was supposed to meet with Kira and Tessa soon to finalize plans. He decided to just open up to Beth and called her on his cell. She answered on the second ring.\n\n\"Hi, Jason.\"\n\n\"Hi, Beth. How're you doing?\"\n\n\"Fine, I'm walking to class in the education building.\"\n\n\"Yeah, me too. I'm going to Moyer Hall for economics and then to earth science class.\"\n\n\"Have you been studying?\" Beth asked.\n\n\"Yeah, making progress too. You?\"\n\n\"Definitely. I'm making excellent progress and Haden helped me with my math class. She is such a whiz at that stuff.\"\n\n\"We still on for Friday?\"\n\n\"Of course. I wouldn't be planning anything else.\"\n\n\"Well, how would you like to go see the Trenton Thunder in the playoffs?\"\n\n\"I love baseball, you know that.\"\n\n\"There's one thing though. I have two other friends that want to go.\"\n\n\"Frat brothers?\"\n\n\"No, two girls from my earth sciences class. I've taken them to several games already. They're baseball nuts and dying to go to this playoff game.\"\n\n\"I see ...\"\n\n\"Beth, I can just give them the two tickets I have and you and I can do something else or even go separately. Would you like that more?\"\n\n\"What do you want?\"\n\n\"Well, there's another problem with not taking them and that is they don't have a way there. Neither has a car. I haven't talked with them yet to see if they were able to get a ride from someone else.\"\n\n\"I see ...\"\n\n\"I can tell you'd rather not,\" Jason exclaimed.\n\n\"I was hoping to have you to myself. It seems we see each other so little as it is. Is that the way you want it?\"\n\n\"No, of course not! I've been thinking about seeing you again all week,\" Jason proclaimed.\n\n\"Did you see your tutoring student on Sunday?\" Beth asked.\n\n\"Yes.\"\n\n\"Are you having sex with any of these women as well? These two baseball buddies or the Spanish student?\"\n\nJason wished now he had never decided to open up to Beth. This was rapidly heading in the wrong direction and now he was stuck. Should he lie to her to protect what they had together, but that in itself would break any kind of trust between them. He was in deep now with no immediate way out he could see.\n\n\"Well ... you're pausing is telling,\" Beth added before he could think of a response.\n\n\"It's just that I'm not used to discussing my sex life like this,\" Jason answered but wished he had it back immediately. 'Fuck.'\n\n\"Oh, so you can't tell me the truth about what is going on in your sex life?\" Beth pressed.\n\n\"Good god, Beth, please!\" Jason pleaded.\n\n\"Jason, I'm at class now. I have to go. Bye.\"\n\nThe line went dead in Jason's ear. \"Fuck,\" he shouted aloud this time and drew several hard stares. \"Damn it!\"\n\nJason walked in silence the rest of the way to class. He was in a foul mood now. Beth was pissed and he wasn't even sure she wanted to see him anymore. He was kicking himself for being so stupid thinking she might be okay with going to the game with Tessa and Kira. He had thought the idea bad from the beginning and should have gone with his first impression. 'Now, what the fuck am I going to do,' Jason lamented.\n\nHe had a hard time concentrating on what the teacher was saying. That wasn't good since he was telling the class about aspects of the upcoming exam. Of all his classes this semester, economics had been the hardest for him. He tried hard to put other thoughts aside and listen, but it wasn't easy. Thoughts of Beth kept invading his mind.\n\nTessa and Kira were waiting for him, as usual, outside of earth sciences. His mind was racing with what to tell them as he neared. They spotted him coming and their smiles hinted they were still looking forward to the game. \n\n\"Hi, ladies,\" Jason said, but somewhat somberly, giving a good indication of his mood.\n\n\"What's the matter?\" Kira asked as Tessa said, \"Hi.\"\n\n\"I stupidly asked Beth to go with us tomorrow to the game,\" Jason said.\n\n\"I take it she didn't react well?\" Kira asked.\n\n\"She asked if I was having sex with you two.\"\n\n\"Oh, geez,\" Tessa replied.\n\n\"What did you tell her?\" Kira questioned.\n\n\"I didn't, but my slowness in responding gave it away.\"\n\n\"Oh, boy,\" Kira responded.\n\n\"Gosh ... what happened then?\" Tessa queried.\n\n\"She said she had to go and hung up on me.\"\n\n\"That's not good,\" Kira said.\n\n\"Yeah... I'm screwed with her.\"\n\n\"Was she your official girlfriend?\" Tessa asked a little surprised he had one.\n\n\"We were pretty much to that point.\"\n\n\"Sorry, we might have caused this,\" Kira offered.\n\n\"It's not your fault. I never should have asked her.\"\n\n\"What now?\" Tessa asked.\n\n\"Well, I'm going to try to call her again and see if she's calmed down. Otherwise, I'm not sure,\" Jason proclaimed.\n\nThe bell rang as they talked. The two girls were sadly looking at Jason's face and he glanced between them. \n\n\"Jason, whatever you decide is okay with us. We're just sorry for you that this happened because you were trying to include us,\" Kira said.\n\n\"Yeah,\" Tessa agreed as they walked to their seats.\n\n\"Did you find a ride?\"\n\n\"No, everyone we know in the dorm with a car is busy Friday,\" Kira answered.\n\n\"You ladies keep the tickets. I'll either be going with you or find some way to help you get there.\"\n\n\"Okay,\" they agreed.\n\nAfter class, Jason had some time before his afternoon class, so he hurried to try to meet Beth if she headed back to her dorm. He was waiting there, outside the dorm, when he noticed Haden approaching. \n\n\"Hi, Haden,\" Jason greeted her.\n\n\"Hi, Jason. Waiting for Beth?\"\n\n\"Yeah, I was hoping to catch her coming back from class.\"\n\n\"You should. We usually meet back at the room on Thursday and go get lunch together,\" Haden stated.\n\n\"Oh, good,\" Jason replied but not very enthused.\n\n\"Something wrong?\" Haden asked.\n\n\"You could say that,\" Jason offered and explained what happened.\n\n\"Oh, my,\" Haden said when he finished. \"She likes you, you know. She was so looking forward to your date. I can see her being upset about sharing you, especially with two other women.\"\n\n\"Yeah, I know,\" Jason agreed.\n\n\"I'll try, for your sake, to make her see your point of view, but it'll be tough,\" Haden stated.\n\nJason looked at Haden with concern but he couldn't help noticing her gorgeous blue eyes either. He had noticed them several times before. They were the kind of sparking eyes that made you notice them. Haden was not a beautiful girl, almost plain, but her blue eyes and pretty brunette hair were her best features. Her body was slender but hard to judge its potential with her bulky clothes. The one thing Haden did display was a keen intellect. That was intriguing to Jason but he tried to clear his thoughts about Haden and focus on Beth. The fact that he knew Haden was a virgin haunted him despite his trying hard to suppress it. This contest had indeed changed him.\n\n\"Thanks, Haden. I know she values your opinion,\" Jason claimed.\n\n\"Maybe not when it comes to men,\" Haden quipped, \"but I'll try.\"\n\n\"Are you still seeing Mike?\"\n\n\"Only once since we doubled,\" Haden said, \"and that seems like a while ago. I'm afraid I can figure out many things, any kind of problem, but not men.\"\n\n\"We're really not that complicated,\" Jason explained.\n\n\"Yeah, I know the sex stuff is all you think of. But doesn't romance matter anymore?\"\n\n\"I'm afraid I'm a poor one to ask that of as you can see. I used to think so, but I've become a lot less sure in the past year.\"\n\n\"Why is that?\" Haden asked.\n\n\"It's a long story. Maybe we can discuss it some time,\" Jason offered.\n\nThey both noticed Beth coming towards the dorm. She wasn't smiling as she neared. \n\n\"I'd like to hear about that,\" Haden stated and she left to go inside with her books.\n\n\"Hi, Beth.\"\n\n\"I'm sorry I hung up on you like that,\" Beth said. \"That wasn't right, but I did have to go.\"\n\n\"Oh, that's okay. I'm sorry I even brought up the idea of ...\"\n\n\"No, I've been thinking about it, my response that is. I have to apologize. I know you had a life before we started going out. I can't expect that to go away now that we are.\"\n\nJason was immensely relieved the way this was starting out. He had expected Beth to rip him up and down. He couldn't actually believe she was the one apologizing.\n\n\"I did know them before,\" Jason agreed, \"but still, I have to be cognizant of your feelings too.\"\n\n\"If you're still offering, I'd go to the game with you all.\"\n\n\"You would?\"\n\n\"Sure. It was rude of me to want you all to myself.\"\n\n\"Believe me, babe. It's you I want to be with,\" Jason proclaimed.\n\n\"I believe you.\"\n\nThey kissed right there in front of the dorm with several women and other couples going by. One girl that knew Beth even joked, \"Get a room, girl,\" as their kissing didn't stop. \n\nThey broke the kiss giggling and both were relieved to be over, for the moment, their first spat. They smiled at each other and held hands. Unfortunately, as much as they put on a good face, both were inwardly nervous that this wasn't the last. Beth kissed him once more and they parted after Jason told her what time he would pick her up the next day.\n\nJason was on cloud nine as he keyed his cell to call Kira. He explained the turn of events and Kira was glad for him that all had worked out. They finalized the plans for the next day and Jason hung up. He walked back to the frat for lunch as he called Stephanie too. As soon as he dialed the number, he had regrets. Here he was not ten minutes later, already arranging another sex session, and not with Beth. He almost hung up but Stef picked up before he could.\n\n\"Jason.\"\n\n\"Hey, Stef,\" Jason said, and it came out a little less excited than he intended due to his other thoughts of Beth.\n\n\"What's up?\" Stef asked with concern.\n\n\"Just calling to say I spoke with Chad. He's definitely up for it and I'm sure I can get some other guys too. Is eight o'clock Saturday good for you?\"\n\n\"I hope. Marnie is acting like she's going to back out but we'll work on her. Brooke is encouraging her to join in too as she is a little afraid to go it alone.\"\n\n\"Let me know.\"\n\n\"Go ahead and arrange it. We'll be ready with at least Brooke for you.\"\n\n\"Okay.\"\n\n\"I still wish you were around for us,\" Stef claimed. \"Pam too.\"\n\n\"Hey, why don't you guys just stay the night with Chad? That way I might be there with you Sunday morning.\"\n\n\"Good idea. I'll tell Pam.\"\n\nThey said goodbyes and Jason went into the frat for lunch. He ate quickly and even got in a little study time before his last class. Just before Jason entered his class, he spotted Sheila. She saw him too. They had about two minutes before the bell and stopped to talk.\n\nHi, Jason,\" Sheila said, smiling warmly. \n\nFor some strange reason that beautiful smile reminded Jason he had yet to log Sheila's name into the Cherry Poppers contest log book as his thirteenth. \"Hi, Sheila.\"\n\n\"I was hoping to hear from you sometime this week,\" Sheila stated.\n\n\"Sorry. I've been up to my eyeballs studying for finals. Haven't you?\"\n\n\"Yeah, me too.\"\n\n\"How's the Spanish coming?\"\n\n\"Good, thanks to you, but I could still use a few more pointers before the exam,\" Sheila acknowledged with another beautiful smile.\n\n\"How about Sunday again?\"\n\n\"Am I your girl, Sunday?\" Sheila asked with a mischievous grin.\n\n\"Something like that,\" Jason agreed.\n\n\"I'd rather be your girl, Friday.\"\n\n\"I wouldn't mind that either but I take several people to baseball games on Friday's,\" Jason stated.\n\n\"I love baseball.\"\n\n\"Not this time, babe. I've already got a car full, but I'll think of you for next time.\"\n\n\"Promises, promises,\" Sheila chided.\n\nThey agreed upon a time for Sunday and parted. Jason just made it into class as the bell sounded and the teacher gave him another look. He got seated just before the bell stopped ringing. Many of the people in class were watching him which made him a little uncomfortable. After he was seated he noticed two girls by the windows that were looking at him and talking in hushed tones. He had noticed them before. They were somewhat cute but their bodies were hidden under layers of clothes with it getting colder. ",
        "After class, Jason looked over at the two girls again. They were packing up their stuff and ready to leave. He met them at the front on purpose and said hello.\n\n\"You guys like my tardiness?\" Jason asked.\n\n\"Ms. Ward is funny the way she scolds you,\" the closest one to him said.\n\nHer hair was blonde while the other was a brunette. They both were pretty thin. Jason couldn't tell but neither looked to have much of a body. The brunette looked Italian and her nose was a little big for her face. The other had a better nose but her complexion was in need of work. \n\n\"I think she is getting pretty mad with me just beating the bell,\" Jason agreed.\n\n\"I'd say so,\" the Italian one stated.\n\n\"Yeah, she appears tired of waiting on you to take your seat,\" the blonde chimed in.\n\n\"I guess I better show up early a few times or she is going to grade my final especially hard,\" Jason concluded.\n\n\"It might be a good idea,\" the blonde agreed.\n\n\"You're screwed already,\" the brunette added with a giggle. \n\n'She must be the feisty one,' Jason thought.\n\n\"Maybe I am ... I'm, Jason,\" he stated as they entered the bustling hallway.\n\nShaking hands with the girls, they replied. \"Connie,\" said the Italian looking one.\n\n\"Sophie,\" offered the blonde. \n\n\"She's Northern Italian,\" Connie added, \"I'm Sicilian.\"\n\n\"You two roommates?\" Jason asked. \n\n\"Yeah,\" Connie said.\n\nShe had dark brown eyes Jason noticed. They seemed to pull you in like black holes. 'Nice,' Jason thought. She was fairly attractive from the front where her nose was less obtrusive. Her profile was not as good. Sophie's eyes were blue as you would expect with her blonde hair. Her face was long and thin with a large mouth. When she smiled though, she looked cute. \n\n\"Well, nice meeting you,\" Jason proclaimed.\n\n\"You too,\" Sophie said. \n\n\"What dorm are you in?\" Connie asked, seemingly not ready to let him go so soon. \n\n\"I'm in a frat, Theta Chi,\" Jason informed.\n\n\"Oh, you a sophomore?\" Sophie probed.\n\n\"Yes, you two freshmen?\"\n\n\"Is it that obvious?\" Connie asked.\n\n\"No, not really. Just a guess.\"\n\n\"Education majors,\" Sophie intoned.\n\n\"Psych,\" Jason offered. \"Sorry, but I have to run to swim practice.\"\n\n\"Oh, you're on the swim team?\" Connie questioned.\n\n\"Yeah. You'll have to come to a meet some time.\"\n\n\"We'd like that,\" Connie replied before Sophie could.\n\n\"Good, nice to meet you both,\" Jason said parting. \n\nHe hurried to swim practice. It was common now for Brad and Jason to work out together and their relationship was great, even though the competition between them was intense. Jason swam really well and beat Brad by several lengths. They joked about it as they showered afterwards. Jason ran into Beth outside the locker room after practice. He was with Brad but they parted as Jason stopped to talk with Beth. Brad gave him a look like, 'Wow, dude.'\n\nBeth noticed and her eyes followed Brad as he walked away. \"Freshman,\" she asked, turning back to smile at him.\n\n\"Yes.\"\n\n\"Competition?\"\n\n\"How'd you guess?\"\n\n\"That's the way they do things around here. I had to work with and train a freshman this year too,\" Beth declared.\n\n\"Interesting,\" Jason agreed.\n\n\"Well, have fun,\" Beth proposed. \"I'm looking forward to the game tomorrow.\"\n\n\"Me too,\" Jason affirmed.\n\n\"Just one thing, Jason. Who're you planning on sleeping with afterwards, them or me?\" Beth asked smiling, but didn't wait for a reply and walked off waving over her shoulder.\n\nJason hadn't yet thought that whole thing through. Of course, he wanted to be with Beth but the two roommates, Tessa and Kira, were a wonderful handful. He was deep in thought about her parting statement as he walked to the frat. He needed to get his car, find a bakery, and pick up cupcakes. Today was his only chance to say goodbye to Dr. Jenny.\n\nJason knew Dr. Jenny's cupcakes had come from some special bakery that was recommended to her by her sister, but he didn't think the place he stopped at was bad either. He had just made it in the door before they closed and bought the last three cupcakes. They looked good and according to the salesgirl they were. He juggled the bakery box now as he reached for the infirmary door. He was trying hard not to drop the card he had too and the helium balloon that said, \"We'll Miss You.\"\n\n\"Here, let me help you, Jason,\" someone said a little behind him.\n\nJason turned to see Casey from Kira's dorm. \"Oh, hi ... great ... thanks.\"\n\n\"Am I here in time for a party?\"\n\n\"Just a small one. Dr. Jenny's last day is tomorrow. Dr. Amanda Clark is our new infirmary doctor. This is my little goodbye party to Dr. Jenny.\"\n\n\"Nice of you.\"\n\n\"What brings you here, a cold?\n\n\"No, nothing like that. Just a ... oh, woman thing. \n\n\"Oh, okay.\"\n\n\"You haven't taken me up on my offer yet,\" Casey said grinning.\n\n\"Been a bit busy,\" Jason affirmed.\n\n\"Well, too bad. I told you anywhere, anytime,\" Casey claimed holding the door for him. \n\n\"I remember,\" Jason declared.\n\nDr. Jenny was sitting at her outer desk as they entered. She spotted him and immediately stood. Dr. Amanda Clark's office door was close, meaning she was probably with a patient.\n\n\"Jason!\" Dr. Jenny exclaimed.\n\n\"Hi, Dr. Jenny. I couldn't let you go without us sharing one last cupcake,\" Jason said.\n\n\"Oh, you're always so sweet. I'm glad just to see you before I leave. You didn't have to go to all this trouble though.\"\n\n\"No problem at all.\"\n\n\"Who is this?\" Dr. Jenny asked, thinking Casey was with Jason.\n\n\"Oh, this is Casey. We just ran into each other outside. She was coming here to see Dr. Amanda.\"\n\n\"Oh, I thought you two were together... sorry. Dr. Amanda will be right with you, dear,\" Dr. Jenny said taking Jason's arm and leading him to the desk as Casey sat down.\n\n\"These are for you,\" Jason said as Dr. Jenny sat behind the desk.\n\n\"Oh thanks, Jason, but you really shouldn't have,\" she said even though she was smiling.\n\nDr. Jenny read the card first and then laughed at the balloon. Next, she opened the cupcakes and praised the looks of them. Jason and she selected one and left one for Dr. Amanda. Jason apologized to Casey for leaving her out, but she wasn't expected to be included in the celebration. He used a plastic knife to give her part of his cupcake anyway. \n\nAs Jason and Dr. Jenny were laughing and talking about her pending Hawaii trip, Dr. Amanda came out with a cute looking tall blonde. Jason and she exchanged glances as Dr. Amanda continued to give the girl instructions on how to take some medicine. She had a prescription in her hand which she handed to the girl. Jason and the blonde stole one more look, before the girl thanked the doctor, and headed out the door. Casey had to wait while they quickly retrieved her file. Jason got it for Dr. Jenny so she could continue eating her cupcake. He was done. Casey's last name he learned from her was Crandall. He also caught the name of the blonde on the card Dr. Clark handed to Dr. Jenny. Sierra Sanderson was her name. He tucked that one away for future reference. \n\nAs he pulled the card for Casey Crandall and asterisk over her birthday was plain to see. It surprised Jason given the forwardness of Casey and her love of blowjobs. He realized, however, she won't be the first girl to use oral sex to stay a virgin. He handed the card quickly to Dr. Amanda hoping she didn't notice his surprised expression. \n\nCasey followed Dr. Amanda into the back office as Dr. Jenny and Jason resumed their friendly banter. Jason loved this older woman and it showed. She too, had grown very fond of Jason and they both confessed to missing the other. Dr. Jenny claimed she would stop in from time to time. It was at that point, she let Jason in on a little secret. \n\n\"She's going to computerize the card files,\" Dr. Jenny whispered to Jason. \"She got the money from the administration to buy a computer and it arrives next week.\"\n\n\"Oh, boy,\" Jason exclaimed softly. \"That will be a lot of work converting everything, especially when the system works fine as it is now.\"\n\n\"I know, so get ready for that when you return to work soon. She might even temporarily hire some help to enter everything.\"\n\n\"Interesting,\" Jason replied. \n\nHe was thinking of what other changes were in store too. Mark, his big brother, had been right. The new doctor was changing the procedures and if the asterisks went away, so did their verification process for qualifying virgins. This was not good. He still had a lot of virgins to go to reach his goal of twenty. He had seven more virgins to be exact. He knew of several like Jillian and now Casey, but he would have to check his notes to see if he knew enough to make it. Besides, it would be tougher to get to twenty if he had to go after specific people versus all virgin girls at the school that had asterisks. \n\nJason was kissing Dr. Jenny on the cheek goodbye, when the door opened to the back office. Dr. Amanda and Casey emerged shaking hands and saying goodbyes as well. Casey walked by and gave Jason a wink. He smiled back but then Dr. Amanda asked what was going on with the party. They gave her the cupcake as Casey left. They talked briefly about the following week when double sessions of practice would be over and Jason would return to work three afternoons per week. \n\nHe finally said his goodbyes to Dr. Jenny and Dr. Amanda and walked out. To his surprise, Casey was standing outside waiting for him. \n\n\"I thought I'd hang around to walk back with you,\" she said. \"It's getting dark.\"\n\n\"Oh, but I have my car over there,\" Jason said, pointing to the Camry.\n\n\"Oh,\" Casey responded in a sad way.\n\n\"Hey, look, want to get a burger or something?\" Jason asked.\n\n\"Sure,\" Casey beamed.\n\nJason led her to his car but not before quickly checking her out. He remembered she was cute and blonde. He also remembered her nice sized tits, and in the cooling night air could make out her nipples poking through her sweater. He helped her into the passenger seat before going around to start the car. \n\n\"You want a burger or something different?\"\n\n\"Anything is fine.\"\n\n\"You like Thai food?\"\n\n\"Never had any,\" Casey claimed.\n\n\"It's a lot like Chinese only they make it spicy with curry.\"\n\n\"Oh, sounds good.\"\n\n\"Where you from?\" Jason asked.\n\n\"Delaware,\" Casey said. \"Rehoboth Beach.\"\n\n\"I've been there once. It was nice as I recall.\"\n\n\"Where you from?\"\n\n\"Here in New Jersey. Up north more.\"\n\n\"So you're used to going to the shore,\" Casey joked, versus the beach.\n\n\"Definitely.\"\n\nThe rest of the conversation with Casey was a little awkward. She didn't appear to be a great conversationalist. Jason was also surprised that now that they were together and alone, she seemed far more timid than that night in the bathroom of the dorm. He carried the conversation through dinner with talk about swimming and the frat. \n\nCasey seemed comfortable with Jason doing all the talking. She joined in with questions, showing interest, and continuing the conversation. They had a good time and climbed back into Jason's car after the meal.\n\n\"Thanks, Jason. Thai is really good.\"\n\n\"Glad you liked it,\" Jason responded.\n\n\"Where're we going now?\"\n\n\"What do you mean? I was heading back.\"\n\n\"Oh.\"\n\n\"Something wrong?\"\n\n\"No, just I was sure you wanted something more,\" Casey said, acting disappointed.\n\n\"You mean, anywhere, anytime?\"\n\n\"Something like that.\"\n\nJason thought for a minute before answering. This girl either loved sucking dick or she had some other issues. He wasn't sure. At times she seemed shy and vulnerable. At other times, she was ready to fellate a guy at a moment's notice. Jason had covered social deviance in one of his classes and wondered if Casey displayed signs of past abuse or sexual submissiveness. \n\n\"I know a place we can go to park,\" Jason offered, referring to the airfield.\n\n\"Okay,\" Casey said, as if accepting of her fate.\n\nJason drove to Mercer County airport and he was so deep in thought he hardly realized they were driving in silence. It took them fifteen minutes to get there and Jason was relieved to see that no one else was there. He pulled to a stop at one end of the lot.\n\n\"I like this place because it's fun to watch the planes come in. You like airplanes?\"\n\n\"They're okay,\" Casey said quietly.\n\n\"Something wrong?\" Jason asked.\n\n\"No, everything is fine,\" Casey said and she unbuckled her seatbelt and got to her knees.\n\n\"Wait,\" Jason said.\n\n\"What?\"\n\n\"I thought we'd at least watch the planes a while.\"\n\n\"Oh, okay,\" Casey said on her knees on the seat, as she was prepared to lean over into his lap.\n\n\"Casey, can I ask you something?\"\n\n\"Sure.\"\n\n\"You seem quick to blow me, almost like you feel obligated.\"\n\n\"You mean you don't want me to?\"\n\n\"No... I mean... well, it's just that you act like it's your duty or something.\"\n\n\"Don't you like it?\"\n\n\"Of course, what guy doesn't? It's just that I want you to enjoy it too.\"\n\n\"I do.\"\n\n\"Well, I thought you did, but it's just sometimes you act resigned to the fact you have to. Did something happen in your past that made you feel obligated to do this?\"\n\n\"Jason... I can't... don't concern yourself with my past.\"\n\n\"I'd like to help.\"\n\n\"You're helping just by being my friend. I don't mind sucking you if it means you'll continue to see me.\"\n\n\"Casey, I'd spend time with you without you blowing me.\"\n\n\"Really?\"\n\n\"Why won't you believe that?\"\n\n\"It's just that guys in high school dumped me as soon as I told them I won't fuck. I'm Catholic and Daddy insists I'm a virgin when I marry.\" \n\n\"How would Daddy know?\"\n\n\"Believe me. He'll know,\" Casey exclaimed.\n\n\"Okay... but those guys were asses for dumping you for not going all the way, especially since you were willing to take care of them.\"\n\n\"Thanks.\"\n\n\"It's true. You don't have to blow me if you don't want to.\"\n\n\"But I do like it and I'd do it for you gladly if you'd let me too.\"\n\n\"Let's get in the back. I want to show you some other things too.\"\n\n\"What do you mean?\" Casey asked with concern.\n\n\"Just come on.\"\n\nThey climbed into the back seat. Jason looked into her nervous eyes as soon as they were seated.\n\n\"Kiss me,\" Jason said.\n\nCasey seemed surprised, but she did and Jason kissed her back passionately. Before too long they were kissing ardently and Casey was getting into it. She was very responsive as Jason kissed her. \n\nEventually, Jason stopped and praised Casey's kissing. \"You're a good kisser.\"\n\n\"I am?\"\n\n\"Definitely,\" Jason affirmed.\n\n\"Thanks. You too,\" Casey said with a smile.\n\nThey resumed kissing but this time Jason moved his hands over her breasts. Casey moaned into their kiss but didn't stop him. Even when Jason pulled her sweater up, she let him. He peeled it off her shoulders to display her ample breasts. Jason kneaded them through her bra until the nipples were erect and poking the flimsy bra material out. \n\n\"Ahh,\" Casey moaned as they continued kissing. \n\nJason's hands freed the hooks on the back of her bra and pulled her bra towards him. He glanced down and in the dim light from the floods of the airfield he could make out her excellent breasts. His hands immediately went to them as she unbuttoned his shirt too.\n\n\"They're beautiful,\" Jason claimed.\n\n\"They are?\"\n\n\"Absolutely, as are you,\" Jason professed.\n\n\"Jason ... I have to tell you something.\"\n\n\"What?\"\n\n\"I was at the infirmary today for a follow up visit. I'm on the pill now.\"\n\n\"Why did you do that if you're trying to remain...\"\n\n\"I didn't care anymore. I want to do it. I don't care what Daddy says.\"\n\n\"Casey... you should do it only if you want to but not to defy...\"\n\n\"I want to, Jason. I'm tired of being an outcast.\"\n\n\"You really feel like an outcast just because you won't ...\"\n\n\"I want a boyfriend like other girls. Would you be with Kira and Tessa if they weren't fucking you?\" Casey queried.\n\n\"Yes.\"\n\n\"Well, you're not like other guys then. Guys want a girl that fucks.\"\n\n\"Not all guys.\"\n\n\"My experience has been they do. I tried sucking my way to happiness but it didn't work. I'm ready to fuck my way to happiness.\"\n\n\"Casey ... that's nuts you don't have to ...\"\n\n\"I want you to be the first too, Jason. You've been my only friend here. I want you to do it to me,\" Casey said, tugging on his belt and opening his pants. \n\n\"Casey ... I couldn't ... \"\n\n\"You don't like me?\"\n\n\"No it's not that, it's just that ...\"\n\n\"You fucked Kira and Tessa. They told me you did. They said you have a gentle touch with women the first time. Please, Jason, fuck me now!\" Casey begged.\n\n\"This isn't right! It shouldn't be so forced,\" Jason claimed.\n\n\"I didn't mean to force you,\" Casey said pouting and hurt.\n\n\"No ... no ... it's just that I don't think you really want to. You're just doing it because you feel like you have to.\"\n\n\"No ... I'm ready,\" Casey avowed, trying to push his pants down and free his cock.\n\n\"Are you sure?\"\n\n\"Definitely! Please. It's what I want to do.\"\n\n\"Casey ...\"\n\n\"Here ... I'll get you hard if you're not,\" Casey said pushing him back.\n\n\"No... no...,\" Jason said resisting. \"You lie back and let me start.\"\n\nCasey reluctantly leaned back. Jason waited a second to collect himself after that crazy discussion. Just as Casey's questioning eyes told him he better do something, he did. He leaned forward and kissed her. He kissed her repeatedly, until she moaned. He played with her tits and nipples. She had marvelous tits. This woman had so much to offer he couldn't believe others had treated her so poorly in the past. Something told him the father was the root cause. \n\nJason eventually broke their kisses to pull her pants down. Casey helped him, even when he took her panties off. She was surprised though, when instead of moving his cock to fuck her, he moved his head between her legs. She watched intently as he kissed her soft inner thighs. Jason looked up at her and smiled. He wanted to break the intensity with which she wanted to make love. He wanted it to be less urgent and more deliberate. \n\n\"What're you doing?\" Casey finally asked.\n\n\"I'm going to lick your pussy. Hasn't anyone done this for you before?\"\n\n\"Ahh ... I ahh ... not someone ... no.\"\n\n\"Just lay back and enjoy,\" Jason said injected.\n\nCasey didn't and continued to watch him. She watched him kiss her thighs again and focus in on her pussy. She had not trimmed her pussy, Jason noticed, and he took in her excited scent. He kissed into her core as his fingers parted her slit. He sucked one of her inner lips into his mouth and heard Casey growl and fall back against the seat.\n\n\"Oh, god,\" she muttered.\n\nJason concentrated on giving her the best he could. He sucked on her inner lips and probed with a finger at the entrance to her pussy. It soon became obvious; she wasn't lying about being a virgin. Her pussy was tight and intact. His tongue moved down to tease the protected opening and Casey's hands tried to tangle in his short hair. She groaned as he wiggled his tongue at her core. \n\n\"Mmmm,\" Casey moaned. \n\nJason ran his tongue from her protected hole to the sides of her clit hood. He teased around that before using his fingers to unsheathe her clit. When his tongue touched against it Casey groaned loudly. Her fingers squeezed his head and pressed his face to her cunt. Jason used the tip of his tongue like a serpent to abuse the hyper-sensitive bud.\n\n\"Oh, fuck!\" Casey howled. \"Jason ...\"\n\nJason teased around her clit to not over stimulate the sensitive organ. Occasionally, he'd go back to it and driver her nuts. A few swipes and he'd back off. Casey's hips were bucking off the seat and her hands increased their pressure on his head. \n\n\"Oh, god,\" Casey gasped. \"So good ...\"\n\nJason latched his lips onto the sides of her inner pussy and sucked. His fingers squeezed her hood and the combination was like gas to a fire. Casey began to buck and tremble. Her legs were tight as bowstrings as Jason feasted on her sex. Casey hadn't felt anything as good since coming to college. She had played with her clit before but nothing could compare to the intense bliss Jason was causing in her pussy. ",
        "\"Jason,\" Casey screamed, as the first waves of orgasmic pleasure burst upon her like fireworks. \n\n\"Oh, yes! Yes! Yes!\" she cried.\n\nJason continued his assault until he felt her stop trembling and fall back to the car seat. He looked up past her beautiful tits to see the calm, serene look on her face. He rose up on his arms and moved over her. The reaction she had to his eating her had his cock rock hard and poking through the slot in his boxers. His seminal fluid leaked out and coated the head. It left a snail trail up her left leg as he moved and pushed his underwear off. \n\nHe kissed her heaving breasts and tinkled a nipple with his tongue as Casey lay with her eyes close. Jason watched her face for signs of life. Eventually, she opened her eyes and looked down at him as he switched between nipples. He smiled at her as she weakly smiled back.\n\n\"Like that?\" Jason asked knowingly.\n\n\"Oh, god. I loved it,\" Casey effused.\n\n\"It gets better,\" Jason expressed.\n\n\"How?\" Casey wanted to know, catching him off guard.\n\n\"Well, actually ... with me in you,\" Jason permitted. \n\n\"Do it then,\" Casey affirmed.\n\n\"But, Casey ... I was only responding to your question. I didn't mean we ...\"\n\n\"Please, Jason. Just do it. I want to. Fuck my father!\" Casey declared.\n\n\"You sure ...\"\n\n\"Yes! Do it! Please,\" Casey insisted.\n\nJason wanted to tell her this was wrong, not the way for her to lose her virginity, but he didn't. The desire he had to fuck her at that moment was too strong. Besides, she was another virgin for his taking and he couldn't turn that down, now could he. This was another cherry to pop. This would be notch number fourteen to his belt. His mind raced with the conflicting messages but meantime he moved his cockhead into the gash of her sex. He found the guarded entrance to her tunnel and positioned himself for the all too familiar assault. He fought off the good angels of his mind in favor of the demons as he shoved hard forward.\n\n\"Augh,\" cried Casey, as the pain choked off the reaction in her throat. \n\nJason tore through her hymen before she could even realize what happened. His cockhead was a third of the way inside her before she knew what happened. \n\n\"Oh, fuck! Ow! Oh, shit ... damn ...\"\n\nJason didn't move. He let Casey get used to the intruder in her belly. He kissed her face and down the side of her neck. She smelled sweet, like strawberries and cream. He whispered to her as he planted soft kisses on her skin.\n\n\"Let the pain go. Just relax and it will pass. It will in a moment.\"\n\n\"Oh, god, that fuckin' hurt,\" Casey complained with a little sob. \n\n\"It's over now. The good part starts from here.\"\n\nThey lay relaxed together for several more moments until Casey felt the pain turn to a dull ache. Jason started again, ultra slow, and moved almost in perceptively. Casey hung with him, but nervously, and with some pain as he moved. Jason went very slowly and soon Casey's body showed signs of relaxing and responding.\n\n\"How's it feel now?\" Jason asked.\n\n\"It's getting better.\"\n\n\"Just wait.\"\n\n\"Okay.\"\n\nFor the next few minutes Jason slowly increased his depth and speed. Casey gave him signs of encouragement so he answered those with a little more depth and movement. In a few minutes, Casey had her hands on his sides and encouraged him to drive deeper into her and faster. Jason still increased the speed marginally to let her build to the ultimate crescendo. Casey loved the feeling of fullness in her tight pussy. \n\n\"Oh, Jason. You feel so good inside me,\" Casey moaned.\n\n\"Wait,\" Jason moaned, feeling her tight pussy gripping his highly aroused cock.\n\nFor another ten minutes, Jason worked her to a fever pitch. He rested at times, almost as much for him now as for her. He didn't want to cum inside her too soon. He had to get her off first. It was extremely important to him that she cum either before or with him. \n\nJason's big cock stretched Casey's cunt unbelievably now. Her pussy was wet and taking all but a few inches of his length. Jason fucked her harder now and could tell she would climax soon. He managed to hold off until he felt her peaking. \n\n\"Oh, god! Ahh ... Ungh ... wonderful, so wonderful ...\"\n\nJason started pounding Casey with all he had but remained careful not to go too deep. Casey urged him on right up until she exploded like a Roman candle. \n\n\"Fuck,\" she howled, as bursts of pleasure rocketed through her.\n\n\"Fuck,\" Jason answered back as he felt his tight balls begin to pulse and discharge.\n\nCasey was moaning in the throes of her first cock induced orgasm when she felt the searing heat of Jason's boiling seed as it exited his tightly clenched cock inside her. It seemed to scald her insides deliciously as she felt the incredible pulses of sperm shooting into her. Her own orgasmic peak seemed to last forever and with intensity she hadn't known possible. Her mind was in total confusion as she enjoyed the blissful sensations while trying to remember the moment. \n\nThey clung to each other for long minutes afterwards. Jason's cock had long since stopped spurting off inside her. He eventually pulled back and his cum slick cock slipped from Casey like a giant new boat from its protective slip. Immediately upon exiting, the copious amounts of cum he had deposited in her vagina, saved up since Sunday, began to leak out in a steady stream soaking Jason's car seat. \n\nJason held his weight on his arms as he stayed over Casey. She'd had her eyes closed for the last few minutes and Jason waited patiently for them to open. Soon they did and she looked up into his smiling face. \n\n\"Did you enjoy it?\"\n\n\"Oh, god, that was wonderful,\" Casey said. \"I never dreamed it would be that good.\"\n\n\"Glad you liked it,\" Jason replied.\n\n\"Tessa and Kira were right. You are an amazing first time lover.\"\n\n\"Thanks, but it's the material I have to work with that helps the most,\" Jason said complimentary.\n\n\"Oh, I was good material?\" Casey queried jokingly.\n\n\"Excellent,\" Jason responded. He leaned down to kiss a still erect nipple. \n\nThe warmth had gone out of the car and suddenly they both noticed the cold. Jason handed Casey her clothes back and grabbed his own. They dressed quickly and moved back into the front seats. Jason fired up the Camry as much for warmth as to get back to campus. As they were leaving, headlights from an approaching car made them both nervous. It turned out to be just another car seeking to park like they had."
    ],
    "authorname": "BlewWater69",
    "tags": [
        "female virgin",
        "college sex",
        "frats",
        "her first time"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/the-cherry-poppers-ch-20"
}