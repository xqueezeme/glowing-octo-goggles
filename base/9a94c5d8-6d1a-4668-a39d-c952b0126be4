{
    "title": "Monica Meets a Cumslut",
    "pages": [
        "The semi-true story of how eating a creampie won me the girl.\n\nI took my time with Monica, watching her face as I slid in and out of her in long, lazy strokes. Guys like me don't get second chances with women like Monica. She was out of my league. Petite, pretty, and proper, I don't think most guys would even try to make time with her. I had seen it happen, guys who lost the ability to speak as soon as she turned on her perfect smile and batted her baby blues at them. I had seen the opposite, too. The guys who weren't afraid to make time with her. Guys so into themselves, they figured they deserved a woman like Monica.\n\n\"Faster,\" she whimpered, pressing up against me.\n\n\"No,\" I told her, maintaining my leisurely pace. \n\nMonica bit her button lip and gave me that look; eyebrows raised and her eyes wide open. I watched a mix of frustration, pleading, and passion taking turns on her face. \"Please?\" she asked, her voice ragged with a need I wasn't going to fulfill. You see, that's the key of being with a woman like Monica when you're an average looking guy like me, you have to give her something different, something that wouldn't occur to other guys. \"I'm so close.\"\n\n\"Me too,\" I told her, bending my face closer to hers, brusher her lips with mine, but pulling away before the touch of our lips turned into a kiss. It wasn't time. Not yet. I reached between our bodies, grabbed my prick as I pulled out, and I tapped it against her pussy. \"Tell me you want it.\"\n\n\"I do.\"\n\n\"Tell me you need it.\"\n\n\"Dammit, just fuck me. Please?\"\n\nClose enough. I rubbed my prick against her clit a few times before putting the head of my cock back inside her pussy. Just the tip. My cock throbbed against her opening, as if it could finish the stroke on its own if it throbbed enough. \n\n\"Stop it,\" she giggled. She wrapped her legs around my ass and tried to pull me inside of her. Instead, she pulled herself around my prick. Tiny and athletic, she managed the move three more times before giving up. \"You're a dick.\"\n\n\"I'm a proud dick owner,\" I said. Her tight ass fell back to the bed and I filled her again, just like before, with a slow, teasing stroke. She should be able to feel how my prick throbbed as I slid it inside of her, each inch inward being announced with another involuntary twitch. Damn I was close, too close. If she didn't get off soon, I would be forced to change my technique.\n\n\"So close,\" she purred.\n\n\"Come for me.\"\n\n\"Harder.\"\n\n\"Come for me.\"\n\n\"Faster.\"\n\n\"Come for me,\" I repeated a third time, pressing inside of her as deep as I could. I rubbed our pubic bones together, squishing her clit against my body and I felt her pussy clutching at my prick. I squirmed, repeating my command another time and she was unable to resist. Gasping, she came as my hard-on throbbed in counterpoint to her orgasm. That was good, but it wasn't what would push things over the top. It wasn't what would make being with me different, unique, and special. I managed three more long, slow strokes as I rode out her orgasm.\n\n\"Oh yes,\" she cried. \"Fuck yeah!\" I waited for her to calm down, to regain her composure following the heat of her orgasm. \"What about you?\" she asked, bucking up against me again.\n\n\"You want me to come, too?\"\n\n\"Yes,\" Monica said, looking up at me as if I had just asked one of the world's stupidest questions.\n\n\"You want me to come inside of you?\"\n\n\"It's okay, I get that shot.\"\n\nI wasn't worried about getting her pregnant. Girls like her don't fuck guys like me unless they have a fool proof birth control plan. I kept my stroking at the same pace. \"I'm going to come inside of you,\" I told her, ignoring her answers to my questions. My questions were rhetorical, but she wouldn't have a reason to know that. It didn't matter. I knew and that was enough. \"I'm going to come inside your pussy.\"\n\n\"Yes,\" she moaned. I couldn't tell if she moaning for real or just playing along with the moment. It didn't matter.\n\n\"And then I'm going to go down on you.\"\n\n\"Excuse me?\"\n\nIf she had been doing the fucking, I think she would have lost her stroke. Instead, I was still in control. \"You heard me. I'm going to come inside your pussy and then I'm going to eat you until you have another orgasm.\"\n\n\"After you... you know.\" Her surprised, wide, blue eyes searched my plain brown ones, looking for the joke that wasn't there.\n\n\"After I come inside you. Say it, Monica. Tell me to come inside of you.\"\n\n\"Do it,\" she said. Was she playing along or did she mean it?\n\n\"And then I'm going to eat it. I'm going to eat your wet, used pussy.\"\n\n\"Do it,\" she moaned again and the look in her eyes changed as her eyebrows lowered a notch. Such a subtle change between looking surprised and looking wild. Her eyes still traveled across my face, but she looked more determined. \n\n\"Tell me to eat you.\"\n\n\"Come first,\" she insisted and knew she got it. \n\nI pulled out. Not all the way out, but mostly out of her. I left the tip of my prick inside of her and jerked off. She stared between our bodies, watching me working my prick, watching my hand stroking the exposed length and I came. As I did, my prick jerked, jumped, and throbbed as I released my load inside the opening of her pussy. I had forgotten to tease her with my big finish, kissing her after I ate her, but whatever. I'm not perfect.\n\n\"Eat me,\" she gasped.\n\nI moved quickly, slipping down my bed, between her legs, and pushing her legs upwards towards her chest. She curled easily and I right before I buried my tongue against her pussy, I saw the white, creamy goo of my orgasm and her froth at the opening of her sex. I pressed my tongue against the lips of her womanhood, pushing my tongue inside, and licking her. She gasped again, sounding surprised instead of turned on, but I ignored it. \n\n\"Oh-my-God!\" she shrieked, sounding like a disapproving Valley girl. I ignored that, too. I kept licking and lapping at her puffy, shaved sex. I sucked on her labia, caressed the excited nub of her clit, and tongue fucked her as deeply as I could. I had gone down on her earlier, before we started fucking, but this was different. This was me eating her cream pie. This was as much for me as it was for her. Hell, it was MORE for me than her, but it thrilled her, too. Monica came again and I rode her orgasm out with my tongue pressed against her pussy. As her extended moment of passion passed, I released her legs, allowing her body to uncurl. That's when I moved over her again. I put a hand behind her head, losing my fingers in the tight curls of her blonde hair and pulling her face towards me. \"No,\" she said, though she didn't fight me. I held her face next to mine.\n\n\"Kiss me,\" I said, our lips close enough together that I could feel her breath and the heat from her body.\n\n\"No,\" she repeated.\n\n\"Yes,\" I said, waiting for it, waiting for the tiny nudge backwards that never came. When it didn't, I knew she wanted it. \"Kiss me,\" I repeated, urging her close enough for our lips to touch and she did the rest. She pressed her lips against me and I swear her tongue pressed into my mouth before I ever pressed my tongue into hers.\n\nMonica reached for my prick, clutching and squeezing it, as if checking to make sure I was still hard. I was and I knew what she wanted. I allowed her to guide me inside of her again as we kissed. I was still inside of her when our kiss ended. \"You're a freak,\" she said, a bemused grin on her face.\n\n\"Tell me you didn't like it.\"\n\n\"Shut up and fuck me.\" And I did, believing I owned that pussy in a way no man had yet to accomplish. I gave her the fuck she had expected the first time, the fuck she had thought she wanted. I fucked like a fucking machine, stroking harder and faster than before. When she got close to her orgasm, she looked up at me with a desperate look. \"Tell me you'll do it again.\"\n\n\"Promise,\" I said and I enjoyed the thrill of her orgasm, proud and pleased that I could be part of it.\n\nAgain, her moment arrived, owned her body with waves of pleasure, and released her. Though she was weak from her orgasm, she wasn't spent. \"Are you going to do it?\"\n\n\"Do what?\"\n\n\"What you did before.\"\n\n\"What did I do?\"\n\n\"Don't be like that. Just do it, please?\"\n\n\"I'm going to come on your tits.\"\n\n\"Why?\"\n\n\"Because you want me to lick them clean.\"\n\n\"Really?\"\n\n\"Yes,\" I said, pulling out of her. I straddled her flat, narrow stomach. I bent over, holding myself up with one hand on my headboard. With my right hand, I started stroking my hard, wet prick. Looking down at her, I saw how she was staring my cock and my hand doing all the work. She did looked up at my face, just once, but otherwise, her eyes stayed on me jerking off. She pressed her tits together. That was enough for me. I came, spraying my load against her nipples and the curves of her tits. I squeezed out one more droplet, wiping it on her before I started licking her tits. I lapped up a streak of semen, kissed her, and went back for another until her tits were wet from my tongue, but clean of my orgasm.\n\n\"You're right, that was hot,\" she purred as I laid next to her. \n\n\"You're hot,\" I told her, kissing her bare shoulder.\n\n\"Oh, stop it.\" I didn't press it. What made Monica special to me was how she could be hot and relatively oblivious to the fact at the same time. \"You're the only person who treats me like a person,\" she said, rubbing my bare thigh. Okay, maybe she did know but was annoyed by it.\n\n\"Guess we'll find out how much that matters.\"\n\n\"Why?\"\n\n\"You'll see.\"\n\nWe didn't spend the night together. I didn't expect us to, either. I drove her home. She gave me a nice kiss goodnight, a passionate kiss that suggested our one night could be more. I wasn't prepared to believe it, but the next day at work gave me some hope. She was in the backroom as I walked in.\n\n\"You know you rocked my world last night,\" she said.\n\n\"Sort of what I do,\" I said, giving her an casual grin.\n\n\"Don't be like that.\"\n\n\"Like how?\"\n\n\"Dismissive. You really did.\"\n\nI looked at her for a long moment. Was she serious? \"Prove it.\"\n\n\"How?\"\n\n\"Kiss me.\" She did and it was as passionate as our good-night kiss had been. Had I really gotten to her? She grabbed the front of my pants as we kissed. \n\n\"I want this.\"\n\n\"Take off your bra,\" I said.\n\n\"What?\"\n\n\"You heard me. Take off your bra. You won't need it today.\"\n\n\"But I have to work.\"\n\n\"Without your bra. I'm a freak, remember? If you want to be with me, then it's by my rules.\"\n\n\"You don't think I'll do it.\"\n\n\"You're right,\" I said, pulling her close to me for another kiss. I ran my hand between our bodies, caressing one of her fine breasts. \"You liked it when I licked my come off of these, didn't you?\"\n\n\"Stop it,\" she said, a playful grin on her face. She blushed a bit as she admitted. \"And yes, I did. And yes, you're a freak.\"\n\n\"If I remember, that's what I promised you.\"\n\n\"I want this again,\" she said, rubbing the front of my pants again. Looking over her head, I saw Tim walking towards the backroom door. I didn't want him to see us together. When I pulled away, she looked up at me, tracked my gaze, and looked over her shoulder. \"He's a dick,\" she whispered.\n\n\"I know,\" I said, stepping past Monica and pushing the door open right before Tim reached it. He nearly walked into the edge. Behind me, I heard a giggle. \"Hey Tim,\" I said, flashing him a big smile.\n\n\"You're almost late.\"\n\n\"Hm, what I'm hearing you say is, 'Hi, welcome to work. Thanks for being on time.'\"\n\n\"Clock in, we need you.\"\n\n\"You're welcome,\" I said, heading to the cash register to clock in. I was two minutes early. Perfect timing. I started helping customers while Tim lingered in the backroom with Monica. I could guess the deal. He wanted her and was convinced she should want him. Why not? Tim was a good looking guy, in great shape, and it would only be a matter of time before his daddy turned the company over to him. Monica could do worse than Tim, if she could deal with him being a dick.\n\nTim returned to the floor first. I pointed an older woman in his direction, \"Tim will be more than happy to help you,\" I told her. A few minutes later, Monica arrived back on the floor, too. I noticed she wasn't wearing a bra anymore, but I didn't comment on it. However, I did enjoy the guys choosing her lane and how they stared at her perky breasts and obvious nipples. \n\nDuring a lull in customers, she moved close to me. \"Have you even noticed?\"\n\n\"That you're slut? I sort of love it.\"\n\n\"Stop it or I'll put it back on again.\"\n\n\"No you won't,\" I told her, smiling. \"You like me seeing you like that.\"\n\n\"Can we get together after work tonight?\"\n\n\"Yes,\" I told her, unwilling to pass up a second chance with her. \n\nWe made love that night, exactly as we had the night before. I didn't change a thing. I knew better. I understood why she was in my bed for the second night in the row. She wanted to see if last night was a fluke. She didn't want different, not yet. She wanted the same and wanted to see if she would have the same reactions. She did. Wait. No, that's a partial lie. She had a better time than last night. Why? Because this time, she knew what to expect. When I started fucking her, slow and easy like last night, she stared into my eyes. \"Just a little faster?\" she asked and I went slower. \"Stop it. You're killing me.\"\n\n\"No, I'm pleasing you,\" I said, giving her a tiny peck on the lips.\n\n\"You're teasing.\"\n\n\"We'll see,\" I said, moving in for a second kiss that I didn't give her. Instead, like last night, I brushed my lips against hers and pulled away before the kiss could begin. I wanted her needy. I wanted every fiber of her being waiting for the orgasm she believed I could give her. She tried to fuck me. She begged me to go faster, harder, and deeper. I kept my rhythm, making her wait until her body couldn't wait any longer. She came faster than last night. Then I jerked off inside of her before going down on her. She came again from my tongue, came again when I returned to fucking her, and came again after I sprayed my orgasm on her tits. I helped that last orgasm. It was the only change I made from last night, but I think it was an important one. As I licked my orgasm from her chest, feeding her a taste of my cumcoated tongue after each lap, I fingered her. Afterwards, sweaty and sated, we laid side-by-side again.\n\n\"You want to know something funny?\" she asked, staring up at my ceiling. I waited for it. \"I don't like how a guy tastes. You know, when he has an orgasm. I don't swallow. I won't even let him come close to making me swallow.\"\n\n\"Why is that funny?\"\n\n\"Because I can taste you when you kiss me and I like that. Is that weird?\"\n\n\"You'll swallow for me.\"\n\n\"No, I won't.\"\n\n\"Yes, you will,\" I replied as flatly as she had done. \n\n\"Maybe. Once. Just to see,\" she said and when I laughed, she shot me a disapproving glare. \"Why are you laughing?\"\n\n\"You won't believe me.\"\n\n\"Try me anyway.\"\n\n\"No,\" I insisted and I meant it. Her pleas would fall on ears as deaf as when she begged me to go faster, harder, or deeper. Either she heard the finality in my voice or gave up and I don't think she gave up. Monica wasn't the type to give up on anything. \n\n\"Why do you do it?\"\n\nI knew what she was asking. Why did I go down on her after having an orgasm inside of her or lick her tits after coating them with my orgasm. What I didn't know was how to answer her. I gave her a choice of answers. \"I can tell you the mostly true reason that will make you feel good or the real reason that will make you think I'm a freak.\"\n\n\"I want both.\"\n\nI smiled. I should have known better. \"Because I knew if I was different, you would be back for more.\"\n\n\"And what's the real reason?\" she asked, able to guess which one I had given her first.\n\n\"Because I'm a cumslut.\"\n\n\"What's that mean? Are you gay?\"\n\n\"I don't think so. I just like a used woman. Doesn't matter if I used them or not.\"\n\n\"You're right, that is weird.\" She didn't flinch or climb out of bed or suddenly find an imaginary reason for why she had to go home. I didn't push things. We laid together, naked bodies still touching, for a long time before she asked, \"Does it matter who uses her first?\"\n\n\"No.\"\n\n\"Liar.\"\n\n\"What if he's really big? Or really good in bed?\"\n\n\"Or better looking than me?\" I added.\n\n\"What if?\" she asked, her hand finding my prick and squeezing it. I got hard again. \n\n\"Try me.\"\n\n\"I want to try something different, first,\" she said and she went down on me. I'll give her credit, for a woman who says she doesn't swallow, it didn't show. She sucked me well and mightily. I let it happen. It would be my third orgasm of the night. It wouldn't be as copious as my first two, but that wasn't the point. She wanted to taste me, right from the tap as it was. It didn't take long and she swallowed. \"Not bad,\" she reported.\n\n\"Kiss me,\" I said and she felt a different kind of kiss from me, a hungry kiss. I gave her the kind of soulful kiss desperate men give to women. I didn't care. I loved that her mouth had just been around my cock. I love that she had just swallowed. I fell a tiny bit in love with her, though I knew it could never be. Girls like Monica might hook up with guys like me, but that's all I am or ever would be, a hook-up. \n\n\"Next time, I promise not to swallow first.\"\n\nI moaned, wishing my flesh could allow the next time to happen on the spot. It couldn't and didn't. Maybe that's why she spent the night, I don't know. I wanted to think it was. We worked that day. After we woke up, I made offered her breakfast. Monica declined, asked to take a shower and said she would wait until I finished taking one, too. I didn't think she would wait, but she did. My hair was still wet when she pushed me back down on my bed. I wasn't sure what she had in mind, so I went with it, appreciating it when she returned to sucking my dick. She didn't stop. I came and she kissed right afterwards. As she had promised, she hadn't swallowed first. I put my hand behind her neck and kept her lips against mine until I was sure there was nothing left to share.\n\n\"You are a cumslut,\" she told me, before giving me another kiss and left me naked on my bed. \"See you at work.\"\n\nWork was a small sandwich shop whose name you would recognize the moment I said it. I won't say it. Tim's dad owned six of the little shops around the area. I don't know why Monica worked there. She was too cute to work someplace like that. She deserved better, but she did it just the same. My shift started an hour before hers did. When she arrived to work, I noticed she wasn't wearing a bra again. So did Tim and most of the male customers. Only Tim felt the need to point it out, but at least he was discrete and only mentioned it to me.\n\n\"I have a date tonight,\" Monica told me as our shifts were winding down. Tim was in the backroom doing paperwork and the store was empty. I nodded. What was I supposed to say? I didn't think we were dating because she hooked up with me twice. \"What are you doing tonight?\"\n\n\"The polite answer or the truthful one?\" I offered. This time I wasn't surprised when she asked for both. \"Just hanging out,\" I said with a shrug. She waited for the real answer. I glanced over my shoulder to make sure no one but her would hear. \"Jerking off to the memory of the last two nights.\"\n\n\"That's sort of sad sounding.\"\n\n\"Nah, it's going to be fun. I come every time I do it myself.\"\n\nShe giggled. \"Are you going to eat it, too?\"\n\nI took another glance around. \"Cumslut, remember?\"\n\n\"What if I get lucky tonight?\"\n\n\"You won't be the lucky one.\"\n\n\"You know what I mean.\"\n\nI stopped what I was doing and stared at her for a long moment, confused. \"Who's the guy?\"\n\n\"Gary.\"\n\nI knew Gary, she had been dating him for a couple months. I don't know how serious they were. That was hard to measure, because women like Monica always seem to be in a serious relationship. I still wasn't sure why she went home with me two nights ago. I know why she said (because I'm the only person who treats her like a person). I wasn't immune to her beauty. I was more impressed that she worked in a sub shop and wasn't above doing to nastiest jobs. I used to tease her that she liked it nasty, wanted it nasty, and I guess that teasing was what got her in my bed. I had promised her two things, that I would give the kinds of orgasms women dream about having and that I would be nasty. I didn't know if I had managed the first of those two, but I know I had mastered the last one. ",
        "\"He's nice. Pretty,\" I offered.\n\n\"Stuck on himself pretty,\" she added. \"I think he uses more product on his hair than I do.\"\n\n\"You don't need product.\"\n\n\"Everyone needs product,\" she assured me, making me realize I never used any. \"Anyway, I know he's going to get lucky.\"\n\n\"Does he usually?\"\n\n\"Yeah, he's okay. Not great.\"\n\n\"Like me?\" I joked. She smiled, but didn't laugh. Instead, she looked away for a moment before her blue eyes landing back on my brown ones.\n\n\"Can I see you afterwards?\" \n\nI watched her blush and I understood why. \"So he's not that good.\"\n\n\"He's different. Average.\" A frown crossed her face as she searched for a better word. \"Usual. Does that make sense?\"\n\n\"I'll be naked and hard.\" It was a warning, not a promise.\n\n\"I'll be, um, used.\"\n\n\"I'm one of those things now,\" I said and I laughed when she looked down at my apron. \n\n\"Did you even notice that I forgot my bra today?\"\n\n\"Really?\"\n\nMonica smiled. \"I know Tim did. He wouldn't stop staring.\"\n\n\"Tim's an asshole.\"\n\n\"Stop it or I'll fall in like with you.\"\n\n\"Too late,\" I said. I meant, for me, but I don't think that's how it sounded. I was falling desperately in like with her and that was dangerous. I was a strange, new toy for her, nothing more. I knew my place. Like I said, girls like her don't date guys like me. Not in public. Not where anyone else might see. I knew better.\n\nI watched Pretty Boy Gary picking up Monica from work. He pulled her close, hanging her on his arm like a trophy to sport, telling the world; This is my girlfriend. She's hotter than you. I don't deserve less. She introduced us. I shook his hand, smiling at him. It was easy to do. After his date was over, mine would be beginning. Monica smiled before she kissed Gary and then looked to see my reaction. I smiled back. \"Have fun, you two.\"\n\nI went home to my apartment, wishing I had gotten a better idea of what they were planning on doing that night. Were they going to out to eat? To a movie? Maybe dancing? What did the beautiful people do when they were together? Something public, I'm sure. It would be important for as many people as possible to see them together, to see how pretty the person was they were with, before they would wind things up early so they could fuck. See, that's the thing a lot of guys don't appreciate, pretty girls like to fuck, too. Their problem is, most of them don't know how to do it. Most of them have never been with a man who knows how to fuck well. \n\nI wandered around my apartment, too wired up to settle down. My dick was hard. I got naked. After all, I had promised Monica would be naked. Naked and hard. I might as well get that way now. Just to mix things up for her, I shaved my balls. Hell, I shaved more than balls, I shaved everything down there. At least it gave me something to do while I was waiting. \n\nI don't mean to sell myself short as I tell my story. I'm not butt ugly. I'm tall, a bit too skinny, and I lack that perfect, button nose that all the beautiful people have. I don't know why, but I got the big nose. Not \"look at the funny man\" big, but too big for my face. I've been told I have a kind smile. I don't know what kind of smile that is, but I think it has more to do with my plain brown eyes. There's warmth to my face when I smile. \n\nHere's something most people don't know about me, I've got money. I'm not rich, but I'm good. I have some stocks that pay pretty well and I live well within my means. I don't drive an expensive or flashy car. I don't wear designer clothes. I do, however, have nice furniture in my apartment. Furniture is something you keep, so I splurged on leather everything in the living room. I have a big TV and a nice stereo. All the pieces of my bedroom suite match and in the bathroom, the towels are extra fluffy. I work where I do because it makes life easier between dividend checks. I don't have to budget as tightly. I was popular in school, but not \"cool kid\" popular. I'm not athletic. \n\nI date average women. On a scale from one to ten, where Monica easily scores being a nine, I date sevens. I've gone out with a couple sixes, because they were nice or funny or extra friendly, but I tend to stay away from the eights. They try too hard. I don't need that. It's why I like Monica. She was the first nine or better I had ever gotten to know and she was nice. Down to Earth as they say, which I guess just means she knew she was pretty without having to show off. \n\nAt ten, Monica sent me a text, \"We're heading to his place now.\" My swollen cock begged for attention I wouldn't give it. At eleven thirty, she sent me another text, \"He's taking me back to my car.\" At eleven forty-five, she called me. \"Still up?\"\n\n\"Up, naked, and waiting,\" I assured her.\n\n\"You were right, by the way.\"\n\n\"About?\"\n\n\"I swallowed.\"\n\n\"And liked it.\"\n\n\"Mostly. You want to know why I did it?\" I told her I did. \"Because I was thinking about you. Does that make me a bad person?\"\n\n\"A very bad person. Oh, and since you're on your way to see me, you're now a slut, too.\"\n\n\"Fuck,\" she said, but I could hear the cheerfulness in her voice as she said it. Pretty girls don't worry about being sluts. They are better than that and the world knows it. \"I made him do me twice,\" she whispered, as if embarrassed to admit it.\n\n\"Drive faster,\" I said, glad I lived close to the store.\n\nI greeted Monica at the door, naked and hard (as promised). She seemed taken aback by how I opened the door wide for her. I didn't care. Her eyes slipped immediately to my cock and balls. \n\n\"You shaved.\"\n\n\"Got bored,\" I said with a shrug. She touched me, caressing my new nakedness. I pushed the door shut behind her, working off her clothes while she was distracted me. She had changed for her date into a tight, tiny black dress with a matching black panty and bra set. I kept her panties in place before scooping her up in my arms and carrying her to my bedroom. She giggled, letting go of my neck when I threw her in a heap on my bed. \n\n\"I want to suck this,\" she said, trying again to grab at my hard cock. \n\n\"Me first,\" I said, pulling her panties off her shapely thighs. The crotch of her panties clung wetly to her pussy. I could see the dark wet spot on them. \n\n\"This is so sick,\" she said, but she didn't stop me. I stared at her bare pussy for a moment before I pressed my tongue against her. She looked used. I saw the mix of him and her. \"He didn't want to do me twice, but I made him. I told I would never suck his dick again if he didn't do me twice.\"\n\n\"Really?\"\n\nShe nodded.\n\n\"Fuck I'm hard,\" I moaned, worried about laying face down on my bed and trapping my needful prick against my body and the comforter. I was on a hair trigger. Would that be too much for me? I took the chance. Pressing my mouth against her pussy, I started eating her. I tasted her and him. She smelled like sex, raw and primal. I rubbed my nose through her slit, inhaling the scent between licks. I wanted to taste all of her at once and I didn't stop after her orgasm. I didn't stop until she made me. \n\n\"Fill me,\" she moaned.\n\n\"I won't last.\"\n\n\"I don't want you to.\"\n\nI climbed on top of her, pushing my hard, swollen prick deep inside of her. She gasped. I kissed her and came. I had lasted exactly half a dozen strokes. I started to pull out so I could replace my cock with my tongue.\n\n\"Wait,\" she said, pushing me off of her. She used to be a cheerleader. Monica is strong, stronger than I think most people realize. She pushed and used her momentum to push me on my back. Moving quickly, she straddled my face, pressing her pussy against my mouth. My cum poured from her pussy into my mouth. As she squirmed against me, I felt her lips around my cock. It occurred to me we were doing the same thing. We were both tasting her, me, and I guess him, too. I came again. She did, too. And then she kissed me. Like that morning, she had yet to swallow. Unlike this morning, I didn't just take back my cumshot, I shared it with her, sliding it back into her mouth, too, until we both got some.\n\nWe were panting by the time our kiss was over. I was spent for the moment, but I could tell she wanted more. Her nipples were twin pebbles riding high on her chest. Her pussy was wet from me, my mouth, and the multiple orgasms I had cleaned from inside of her; but I knew she was wet from her own need, too. I fingered her pussy, rubbing her clit and sucking on her tits until she cried out with one more orgasm.\n\nI laid next to her, watching her chest heave as she sucked in deep breaths. \"You're scary,\" she sighed when she recovered enough to speak.\n\n\"Why?\" I asked, kissing her bare shoulder.\n\n\"Because I can like this too much,\" she said, turning her head and giving me a tired smile. \n\n\"Spend the night.\"\n\n\"I can't.\" She stretched and I marveled at how fine her body looked. \n\n\"Okay,\" I said, stroking her hair. A moment later, she fell asleep. \n\nI held on to her while she slept, daring to dream without closing my eyes, because even fools are allowed to dream even if I knew better. Like I said before, girls like her don't date guys like me. When the fling ended, there would be a couple awkward days at work. She would ask Tim to change her schedule so we didn't work together as often. When we did, she would be friendly, but that fake-friendly. I would get to see more of Gary. She would make sure he either gave her a ride to work or pick her up from work whenever our schedule overlapped. I would become the weird guy, the creeper, though I would never do anything to earn that title. But it would give her distance. It was an easy future to predict and I hated myself for being able to see it so well.\n\nI don't remember sleeping, but I remember waking up to feel her still pressed against my body. I stroked her hair again and she woke with a sleepy smile. \"Tell me I didn't spend the night,\" she said, though she knew better.\n\n\"I didn't want to wake you.\"\n\n\"Your bed is better than mine or... It's good, you know?\"\n\nI could fill in the blank and I appreciated her not using Gary's name. \"I can make breakfast.\"\n\n\"Just coffee. Okay if I take a shower?\"\n\nI used the bathroom in the hall for my morning piss while she used the master bath. I pulled on a pair of shorts and left a t-shirt on the bed for her. She was wearing it when she came out to the kitchen and joined me at the breakfast bar. \"I love your towels,\" she said. I mumbled a word of thanks. \"You're an interesting guy. Gar-\" She caught herself. \"He still has posters on his bedroom walls.\"\n\n\"Can I ask you a 'none-of-my-damn-business' question?\" \n\n\"Let me guess, why do I go out with him?\"\n\n\"Close. Do you have fun with him?\"\n\nSipping her coffee, she thought about it. \"I have fun around him, but not so much with him. It's like, if we don't go somewhere and do something with other people, I don't want to be around him. It's different. I have fun with you. Even at work, I have fun when you're there.\"\n\n\"Why do you work there?\"\n\n\"I have to work somewhere, might as well be there.\" She shrugged. \"What about you?\"\n\n\"Pick up hot chicks,\" I said, making her laugh. She put her hand on my thigh, ran it up my leg, and reached inside my shorts.\n\n\"I like that you shaved for me.\"\n\nI will do anything for you I wanted to say, but knew better. \"Just trying to keep things fun.\"\n\n\"Last night makes me a slut, doesn't it?\" Her fingers wrapped around my hardening prick.\n\n\"You say that as if it's a bad thing.\" She laughed again. \"Besides, what does it make me?\"\n\n\"We already know what you are, a cumslut.\" My cock throbbed in her hand. \"Oh, you like that?\" she asked, looking at the lump in my baggy shorts. She gave me a couple more squeezes before pulling her hand away. \"I'm supposed to see him today.\"\n\n\"Okay,\" I said. What else could I say?\n\n\"This afternoon. He and his friends are going to the game tonight.\"\n\n\"You're not going?\"\n\n\"I hate sports.\"\n\n\"We could do something tonight.\"\n\nMonica looked at my crotch again, her hand following her gaze. She caressed me through my shorts. \"Let me guess what.\"\n\n\"We could do dinner or a movie or something,\" I offered.\n\n\"Before or after?\"\n\n\"During?\" I joked. Again, she laughed. She pulled her hand away from my crotch to sip her coffee. When she put her coffee down, her hand went back to the front of my shorts.\n\n\"You're bigger than him.\"\n\n\"Doesn't mean I'm better.\"\n\n\"No, but you are.\" She kept her hand on the front of my shorts, but turned her blue eyes back up to my plain brown ones. \"It really doesn't bother you that I'm going to see him this afternoon?\"\n\n\"Did it bother me last night?\"\n\n\"You're weird.\"\n\n\"You're right,\" I said and I kissed her. But when my hand cupped her breast, she pulled away. \n\n\"I don't want to be a slut.\"\n\n\"I won't tell if you don't,\" I said, kissing her again.\n\n\"If I see Gary this afternoon, we're going to fuck. More than once.\"\n\n\"Okay,\" I said, nuzzling her neck, my fingers finding a nipple and caressing it until it was firm. It didn't take much to make it that way. I put my hand over hers. It was a protective move. She already knew I was hard, I just didn't want her to pull her hand away.\n\n\"And then what? I come running over here to see you so you can eat me?\"\n\n\"Sounds like a good plan to me,\" I said with another kiss on her neck.\n\n\"Maybe I should fuck all of his friends before I come over here,\" she suggested. My cock ached as it throbbed. \"Would you like that? Would you like me to be filled from half a dozen horny guys?\"\n\n\"Up to you,\" I offered, unsure what else to say. My mind had jumped forward in time, imaging her doing what she had suggested. It was difficult to think in the moment. \n\n\"What is wrong with you?\" she asked, her hand leaving my prick. She pulled back. \"What if these guys are bigger than you?\"\n\n\"Or better lovers,\" I said, already knowing the risk. I've always known the risk of my kink. \"Or better looking. Or funnier.\" \n\n\"Yeah, okay,\" she said, her eyes moving back and forth from the throbbing tent inside my shorts to my eyes a couple of times as if she wasn't sure where she should look for her answers. \"That doesn't bother you?\"\n\nI left one hand on her knee. I didn't want to lose contact with her, even if she wasn't touching me anymore, even if she had pulled away from my more intimate caress of her body. Her eyes had settled on mine, though I distracted her when my hard prick insisted on a touch. I clutched myself. I was so fucking hard. Her eyes flickered down, but immediately returned to mine. When she pushed my hand off her knee, I traded hands on my prick, freeing up my other hand to sip my coffee. I felt manic, out of control, and pure. I had never lied to Monica, not since our first day working together. I'm not sure when I had a chance to lie to her, either. What was there to lie about at work? It was until she visited my bed that I had a reason or opportunity to lie to her. I could have played it straight with her. I didn't have to go down on her after I came inside of her. I didn't have to reveal my kink as a cumslut. \n\nI'm not going to give myself credit for thinking I did it to be honest with her. I guess that was part of it. But in truth, I did it to be different. I know I'm made different. I know my kink isn't normal. I don't care. I'm a freak and in an effort to shock and surprise her, I allowed her inside. It had worked, sort of. It had brought her back to my bedroom for more and that was the best I could hope for. I didn't expect more, not matter how much I wanted it. I confused and confounded her. I was strange and different; maybe risky and dangerous, I don't know. I had already seen the end of our relationship while she slept in my arms. I was always destined to be an odd fling she would never be able to talk about. Fuck it. Fuck her, Gary, and everyone else in the world. To borrow from the great sage, Popeye, I am what I am.\n\nI didn't need to think through any of that while I sipped my coffee. I already knew it. All that was left to do was going out in a blaze of glory. That's why I held my cock, why I stroked it. I was hard. She had made me that way and I wasn't going to deny it. Fuck it if she didn't understand it or appreciate it. Hopping off my breakfast bar stool, I pushed off my shorts, exposing my hard, throbbing prick to answer her question. \"Does it look as if it bothers me?\" I asked, caressing the length of my shaft.\n\n\"It's weird,\" she said, looking at my dick.\n\n\"And probably wrong,\" I agreed, still stroking myself. \"And it makes me hard as fuck.\"\n\n\"As I can see,\" she said with a bemused grin. \"Can you put your shorts back on?\"\n\n\"I could, but I don't want to.\"\n\n\"Fine, stay naked. I like the view.\" Her words came out in short little chops.\n\n\"I like showing it to you,\" I said, taking the same tone.\n\n\"Dammit, I'm being serious,\" she said. \"What's wrong with you?\" As her eyes searched mine, her hand found my balls. She fondled them, but kept her eyes on mine. It was as surreal as it sounds. Were we arguing or talking or I don't know what? She borrowed a move from me by sipping her coffee while her eyes never left my face. \n\nI clutched the hand she hand against my balls, still stroking my hard-on with my right hand. She pulled her hand out, but then laid it on top of my hand. It was such an odd moment. I tugged on my prick a few more moments, wondering if I wanted to get off and decided against it. I stopped, sitting back down on my tall stool. My cock ached and throbbed, but I ignored it. When I stroked a stray strand of blonde hair from her forehead, she didn't pull away from my touch. \n\n\"You wanted me last night, didn't you?\" I asked. She nodded. \"Even when you were with Gary, you were thinking about me, weren't you?\" Another nod. \"Even when he was fucking you, you were thinking about how I was going to greet you. You were wondering if I was really naked and hard and waiting for you, right?\" Yet another nod. \"And how did I welcome you when you showed up at my door?\"\n\n\"Like a wild man,\" she admitted, a tiny smile on her face.\n\n\"And it was hot, wasn't it?\"\n\n\"Yes.\"\n\n\"Really hot?\"\n\n\"Yes.\"\n\n\"For me too.\"\n\n\"But why?\"\n\n\"Because you came home to me. Gary doesn't matter to me. Keep seeing him. Date a hundred Garys, I don't care, not if I still want to come home to me.\"\n\n\"But he fucked me. Well, not at first. First, I sucked him off. And then later, he fucked me.\"\n\n\"Twice,\" I added.\n\n\"I know, I was there.\"\n\n\"And I was here, naked and hard, waiting for you.\"\n\n\"And shaving,\" she pointed out.\n\n\"And shaving,\" I agreed, smiling. \"For you.\"\n\nShe took a sip of her coffee before telling me, \"Gary's not very good in bed. He's sort of lazy and selfish.\"\n\n\"But he's fun to look at, isn't he?\"\n\nMonica shrugged. \"I used to think so, but there are lots of good looking guys out there. Doesn't mean he's not a jerk, too.\"\n\n\"Then why do you date him?\"\n\n\"I don't know. Because I like the parties?\"\n\n\"Slut.\"\n\n\"Wow,\" she said, blinking hard at the word. \"Wow,\" she repeated, looking past me. \"Wow,\" she said once more as she worked it through. \"You think?\"\n\n\"I'm sorry. That was mean. You have fun with his friends, your friends.\"\n\n\"It's still true,\" she said in a small, faraway voice. Her coffee cup was empty. I had to walk around the breakfast bar to refill hers and mine. My hard-on led the way for me. I stayed on the far side of the breakfast bar. \"Was I a slut last night, too?\"\n\n\"You're asking me?\" I laughed. \"I think you were perfect last night. Did you have fun fucking him last night?\"\n\n\"I was really horny for him to do it.\" She tried to sip her coffee, slurped it, and set it back down. \"No, that's a lie. I was horny for him to do it so I could come over here. But it did make doing him more fun. Is that wrong?\"\n\n\"Do you mean, does that bother me?\" I asked. She nodded. \"No. I don't care. I want you to have fun. Did he make you orgasm?\"",
        "\"Not like you did.\"\n\n\"But you did have an orgasm with him?\"\n\n\"Two of them.\"\n\n\"And still, you came to see me.\" I walked back around the breakfast bar. Her eyes tracked me, looking again at my hard-on until I sat down and her eyes worked their way back to mine.\n\n\"I knew I had better ones waiting for me.\" She touched my knee.\n\n\"You always will, if you want.\"\n\n\"Is that what you want?\"\n\n\"I want you to be happy. I want you to have fun. I want to see you laugh and smile and have as many orgasms as you want. Good ones. Really good ones.\"\n\n\"Like the kind I have with you.\"\n\n\"I hope so.\"\n\n\"What if it changes? What if I find someone else who can do me better?\"\n\nI shrugged. \"I'd die a little, but okay.\" I don't know why, but her question dulled my thrill.\n\n\"You know, in French, that's what they call an orgasm; a little death. La petite mort.\" \n\nI nodded. I did know that, but it wasn't how I meant it. \n\n\"You know you kill me, right?\" she asked, smiling. When her hand caressed my prick, I regained the bit of a thrill I had lost. \"What if I don't fuck Gary today? What if I break-up with him instead? Would you still want me?\"\n\n\"Please,\" I said, smiling at her foolish question. \"I can't help but want you. I've always wanted you.\"\n\n\"Because I'm pretty?\"\n\n\"Because you're you. Pretty turns my head, but not my heart.\"\n\nWhat she said next surprised me. \"Gary hates when I talk about you.\"\n\n\"When do you talk about me?\"\n\n\"All the time, because you make me laugh and you're nice. I'm always telling him about something funny you said at work. He said I should ask Tim to change my schedule, so I don't work with you so much.\"\n\n\"But you almost always work with me.\"\n\n\"Yeah, I might have gotten it twisted when I put in my schedule request,\" she said. \"I might have told Tim you were my ride or something like that.\"\n\nI didn't know what to say. I stared at her, probably wearing a goofy grin, but at a loss for words. \n\n\"When do you work?\" she asked.\n\n\"I open,\" I reminded her, glancing at the clock. \n\n\"Can I come over when you get off?\"\n\nWe stared at each other for a beat as the double entendres of her words sunk in and then we both started laughing. She stood and so did I. I needed a shower and had to leave if I wanted to get to work on time. Still smiling from laughing, Monica cupped my sex in her hand, at least as much of it as she could fit. \n\n\"Can you do something for me?\" she asked, pulling off my t-shirt. I nodded. She turned around, leaning against my breakfast bar. Over her shoulder, she asked, \"Can you just put it inside of me. I don't want you to get off, I just want to know you were there first today.\" Smiling, I nodded. I pressed against her, inside of her, filling her with my hard-on. I didn't thrust back and forth, I was too close to an orgasm that I knew she didn't want me to have yet. Reaching around her body, I wormed a finger against her clit, caressing her clit with one hand while my other caressed her breasts.\n\n\"Are you going to fuck him?\" I asked, my lips right next to her ear.\n\n\"Yes,\" she said, her voice a soft sigh.\n\n\"More than once?\"\n\n\"If you want.\"\n\n\"I do,\" I said, fighting hard to hold back. Could she feel the way I was throbbing inside of her?\n\n\"And I want you to come with him. Twice.\"\n\n\"Maybe,\" she gasped, pushing backwards against me and squirming.\n\n\"Twice,\" I insisted.\n\n\"Yes,\" she moaned and I felt her pussy clutching rhythmically around my hard prick. Was she saying yes to my instructions or yes to how I was making her feel? Did it matter? I didn't care. I pulled out of her before it was too late for me. She turned, looking down to admire how hard I was. \"You're so close, aren't you?\" she asked, her voice a gentle post-orgasmic purr. \n\n\"So close.\"\n\n\"Good thing you wear an apron at work.\" When she caressed me, a droplet of clear precum oozed from the tip of my prick. She scooped it up on her finger and fed it to me. \"I might have to suck him at least once, too.\" I kissed her deeply, wishing we could do more. She pushed me away. \"You're going to be late. Go take a shower and I'm going to do the walk of shame.\" She crossed to her black dress, pulled it on, and smiled. \"Later,\" she said.\n\nWork was a blur. I'm sure I didn't stay hard the entire time I was at work, but it felt like I did. I know I didn't stay completely hard, because sometimes I would notice how I was hard again. It was like sleeping with Monica last night. I don't know when I slept, I only knew when I woke up to find her still pressed against me. I know I worked like a wildman, on top of everything, all day. I didn't want anything to slow me down when it came time to leave at four.\n\nI raced home. I didn't know Monica (or Gary's) schedule. He was going to the game that night. The game started at 7:35. How early would he want to get there? How soon could she get away? I stripped naked again, ready for her, tortured in the most delicious of ways until there was a knock on my door. I made sure it was Monica before I swung open the door.\n\n\"Nice,\" she said, looking at my hard-on. She was wearing a strapless sundress and when the light hit it just right, I saw she was wearing panties, too. \n\n\"It's been like this all day,\" I confessed.\n\nMonica pulled off her sundress, dropping it to the floor by the door. \"We need to do something about that.\"\n\n\"Did you fuck him?\" I asked, leading her to the couch. The bedroom was too far away for me.\n\n\"Twice,\" she said, smiling proudly as she sat on the couch. \"Does it show?\" Between her legs, I could see the wet stain on her panties. I pressed my mouth against her panties, making them wetter. It didn't last. It couldn't. I tugged them off of her and any more words were lost to her passionate cries as I licked her used, salty pussy. She tasted so fucking good! I cupped her ass, pressing her sex against my mouth as I licked, sucked, and cleaned her. Her first orgasm happened as soon as my tongue touched her clit. Her second one arrived a few minutes later. Her third happened when I replaced my mouth with my prick. Her fourth happened when I reversed the order, going down on her to clean my own cumshot from her pussy. Her fifth one occurred when I shoved my still hard dick back inside of her. She wrapped her legs around my ass, holding me deep inside of her as we kissed. I loved that she wanted to kiss me. I pressed against her, ready to help her find another orgasm, but she stopped me.\n\n\"Just stay like this a minute,\" she said, holding my ass and keeping me pressed inside of her. \"I like how this feels and I have something to tell you.\"\n\nI nodded. I like how it felt, too.\n\n\"I broke up with Gary today.\"\n\n\"Before or after you had sex with him?\"\n\n\"A little of both?\" She told me how they started to have sex, because that's what he wanted to do. \"I knew it before I saw him. He wanted to get off a couple times before he went to the game.\" She shrugged, pressed her heels tighter against me, and squirmed before she went on with her story. \"I wanted to do it, too. Not for him or me, well, sort of for me. I wanted to do it for you and me, doesn't that make sense?\" I nodded. \"But that's how I knew I didn't want to do it for him and I had to break-up with him.\"\n\n\"But you did it?\"\n\n\"Yeah. I told him I wanted to talk. He said talking couldn't wait and we did it. It wasn't really good.\" She looked down and to the side. \"I didn't get off. He thinks I did, but I didn't. I know I was supposed to, but it really wasn't that good and he didn't last very long.\"\n\n\"He didn't go down on you?\"\n\n\"He hardly ever does.\"\n\n\"Did you go down on him?\"\n\n\"I tried, but he just wanted to fuck.\"\n\n\"Idiot.\"\n\n\"It's what we usually do. I did him, or more correctly, I let him do me. It didn't take that long.\" She smirked, but then caught herself. Looking me in the eyes, she asked, \"Is it wrong that I got most excited when he came?\"\n\n\"Not for me.\"\n\nShe kissed me and squirmed against me again. \"This makes it hard to tell the story.\"\n\n\"No, this makes the story better.\"\n\n\"I can feel you twitch.\"\n\n\"Good. Tell me the rest.\"\n\n\"I was sort of mean. When he was done, I asked him if he would go down on me.\" She smiled. \"You can guess how that went over.\" I nodded, laughed, and waited for her. \"Then I asked him what he thought about the idea of seeing other people and he got real belligerent. He was like 'What this isn't good enough for you?' and 'You really want to give all this up?'\"\n\n\"What did you say?\"\n\nShe giggled. \"I started rubbing his prick, getting him hard again, and I told him the truth, 'I still want this. Can't we maybe do both?' And he got real weird. 'You want this? I'll give this to you. One more time, the last time.' And then we fucked again.\" She bit her bottom lip as she searched my eyes. I slipped in and out of her a couple of times, just half strokes, but it was enough. \"It was the best fuck he ever gave me.\"\n\n\"Oh yeah,\" I said, pressing deeper inside of her, my cock pounding. \"How good?\"\n\n\"So good,\" she said, grinding against me. I started working in and out as she talked. \"He fucked me so hard, angry like. And he kept telling me, 'Is this what you want?' And I kept telling him, 'Yes!' Because it was what I wanted, but not for him.\"\n\n\"But for me, right?\" I asked.\n\nMonica nodded. \"For you and your tongue, so you could eat me, eat him... like you did... and I kept thinking about how he was getting seconds and didn't know it and that felt good, too... I wish you came inside of me this morning... I'm glad you didn't... he didn't deserve that.\" I kept fucking her until our fucking became too much of a distraction. She tried to tell her story, but it was choppy, just pieces. \"He came inside of me... He fucked me so hard... I came... I came from him fucking me... I'm... I'm... I'm coming!\"\n\nI rode out her orgasm, her sixth from me if you're keeping count and her seventh of the day. I was too far gone to hold back, but that didn't mean I couldn't have some fun with it. I pulled most of the way out of her and jerked off with just the tip of my prick inside her. It felt like my signature move. She watched between us.\n\n\"Do it, baby,\" she said, rubbing my face. \"Do it.\" And I did. I came inside of her and I finished what I had started, which added to her orgasm count for the day by two before I was done. \"Oh fuck,\" she sighed between giving my wet, sloppy face kisses. \"I've never done that before.\" More kisses. \"I never came so close like that.\" More kisses until she said, \"Let me taste you.\" I stood and she gave the rest of her kisses to my wet prick. Still stroking me, she gazed up at me and I saw a new look in her eyes. It was somewhere between wonder and astonishment. \"You know you've ruined me.\"\n\n\"That was always my plan,\" I said and we laughed and kissed away the next hour before heading to my bedroom.\n\nNow the real disclaimer: This has been a work of fiction. Any resemblance to real peoople, living or dead, is coincidental."
    ],
    "authorname": "BuckyDuckman",
    "tags": [
        "creampie",
        "cream pie",
        "cumslut",
        "cum",
        "cumplay",
        "cumshot",
        "cum eating",
        "cum fetish",
        "shaving",
        "shaving cock"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/monica-meets-a-cumslut"
}