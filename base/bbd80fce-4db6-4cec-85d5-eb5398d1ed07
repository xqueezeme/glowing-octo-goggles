{
    "title": "Shadowrunner",
    "pages": [
        "I know, I know! This one took a while. I apologize for the wait. I went through a couple periods of 'That sounds fantastic...now what?' while writing this. I'm sorry, but I'm not one of those amazing people who can write a story a day. I'm your average college student who's trying her hardest to finish this for you. Forgive me.\n\n*\n\nA gentle tickle flowed across her hip, making her body stir. She groaned into her pillow, rolling over to avoid the sensation. The tickling persisted, following the curves of her body until it slid under her belly. There, it traveled down, finally slipping between her thighs. It slid between her legs, now turning its attention to her sex. A soft tingle slid across the lips of her pussy, working hard to wake her up.\n\nIt worked. The stimulation of her body brought her quickly out of her sleep. Groaning, Claire's eyes fluttered open as she came around, her mouth twisting into a grimace against the soft pillow. Irritation had begun to settle into her mind. That tickle had interrupted a fantastic dream, which meant she was in no mood to play games.\n\nDamn it. And right when Alexander Skarsg\u00e5rd was about to make out with me.\n\nIt took her a moment to realize the tickling that had teased her awake was really the expertly driven fingers of a hand. That hand continued to tease the edges of her sex, slowly feeding the fire in her belly.\n\nShe groaned, melting into the soft touch. She loosened her body, letting the hand sink further down between her legs. Its fingers teased her body, slipping into her well-worked pussy and gently stroking her clit. She closed her eyes and rolled her head back, moaning at the sweet feel of such delicious torture.\n\n\"Silthos?\" she whispered through the growing haze of lust in her mind.\n\nA gentle kiss on her neck drew her farther out of her dreamy state. \"How'd you guess?\"\n\nShe giggled. \"Don't know. Guess I'm just good like that.\"\n\nHis fingers sunk deeper into her body, making her squirm.\n\nAnother kiss seared the flesh of her throat. \"You're better than you give yourself credit for.\"\n\nShe moaned when his fingers twisted inside her, clutching a handful of sheets and twisting against him. She leaned her head back, giving him more access to her neck. Silthos took advantage of her openness, pressing his lips against her throat and sucking on the tender skin. Her hips bucked against his hand, forcing his fingers even deeper. Slowly, he began to pulse them in and out of her body, his thumb massaging her clit in slow circles.\n\nHis free hand pressed against her stomach, pulling her flush to his body. She could feel the strong weight of his cock pressing against the curve of her ass, something that sparked a new fireball of lust in her belly. His teasing was wonderful, but her body craved more. It begged for the feel of his mouth, the warmth of his flesh, the pounding of his hips. Her pussy clenched hopelessly, begging her to ask for more.\n\n\"That's enough,\" she groaned into her pillow. \"Wake up Thaltos and Darrow.\"\n\nHot breath tickled her ear. \"You're ready for me, then?\"\n\n\"Yes,\" she whispered breathlessly.\n\nHe laughed in her ear, pumping his fingers faster. \"In a moment. I'll let you finish first.\"\n\nHe pumped his fingers faster and deeper, making her shiver and squeeze her legs tight around his hand. She buried her face in her pillow, her hands gripping the sheets so hard her knuckles ached. Her body, though appreciating the attention it was receiving, still begged for more. Her skin was on fire, a blaze that would take one hell of an orgasm to put out. His fingers simply wouldn't do.\n\n\"Please stop. No more teasing, please.\"\n\n\"Are you sure? I can keep this up for days.\" He kissed her neck, his warm breath tickling her shoulder.\n\n\"Silthos!\" She groaned into her pillow.\n\n\"Very well. As you wish, my dear.\"\n\nMercifully, his fingers withdrew from her body, relieving the burning in her belly. Now empty, her body quivered in anticipation. More than just delicious teasing was to come. All she had to do was wait.\n\nShe felt the bed shift as Silthos slipped out of bed, heard his soft footsteps as he made his way to one of the other beds.\n\n\"Darrow,' he whispered. \"Darrow, wake up!\"\n\nA groaning sound, then a deep growl. \"It's three in the morning! What is it?\"\n\nUh oh. Somebody doesn't like having their beauty sleep disturbed.\n\nShe giggled at the thought. Of all of them, Darrow was by far the grumpiest, even on his good days. She hated to imagine what he'd be like with no sleep.\n\n\"Claire's ready for me,\" Silthos responded quietly.\n\nA heartbeat later, Darrow had thrown back the blankets of his bed and bounded onto the floor. \"You don't say? Well, that certainly changes things.\"\n\n\"Can you rouse her a bit while I get Thaltos up?\" She heard Silthos move around to the opposite bed.<br> \"My pleasure,\" Darrow purred.<br> The bed dipped slightly as her new lover sat down beside her. His fingers began to stroke her back, dragging lightly up and down her spine. She giggled at the sensation and writhed under his touch. The bed dipped again as he leaned over, swiping his long tongue along her shoulder and up her neck.\n\n\"Wake up, Claire.\" His deep, rumbling voice made her tremble.\n\nShe giggled, squirming under his fingers. \"Good morning.\"\n\n\"Silthos has something special planned for you,\" he hummed in her ear.\n\nShe moaned as his touch became firmer. \"Does it involve chocolate syrup or a striptease?\"\n\nDarrow laughed. \"Not quite that, but it will be just as entertaining.\"\n\n\"It had better be,\" she scolded. \"All this time I'd been imagining being teased by topless women while the three of you dance d around in jester costumes and poured honey over me.\"\n\nHe threw back his head, roaring in laughter. \"Such an imagination on you!\" He leaned closer, licking her neck again. \"We'll be sure to make good use of it.\"\n\n\"Good. I expect a group a strippers here by tomorrow,\" she teased.\n\n\"Careful, Silthos,\" Darrow warned. \"I think she's starting to get curious.\"\n\nSilthos' laughter resounded from the bed beside her. \"I hope so. It'd be boring if she had no sense of adventure.\"\n\nDarrow shifted on the bed, removing his fingers from her skin. His warm hand tapped her on the ass, beckoning her to rise. \"Come on, you. Time for Silthos to have his turn.\"\n\nClaire pushed herself up and sat on the bed, rolling her neck and stretching her arms to wake herself up. She looked over at Silthos and Thaltos, who had now finally climbed out of bed. The old demon smiled down at her, a mixture of anticipation and relaxation in his eyes.\n\n\"I hear Silthos woke you up in the most wonderful way.\" His eyes shined, reflecting his own deviant thoughts.\n\nShe shrugged innocently. \"He was just teasing.\" She shot Silthos a withering glare.\n\nHe smiled back at her and bowed his head. \"Forgive my inability to finish you off.\"\n\nShe giggled and crooked a finger at him. \"Get over here and make it up to me.\"\n\nHe grinned. \"Yes, ma'am.\" Quicker than lightening, he rushed over to the bed, peering down at her with fiery eyes.\n\nExpecting to be ravaged, Claire slowly leaned back onto the bedding, spreading her legs wide so he had easy access. Still smiling, Silthos shook his head slowly. She looked up at him with a giant question mark on her face. He twirled one finger, a signal for her to roll over. Claire hesitated a moment, unsure of where the situation was heading. Silthos twisted his finger again, putting a sense of urgency into the spin.\n\nShe nodded and rolled over, feeling the softness of the sheets tickle her belly. Silthos' large hands gripped her hips and pulled them backwards, lifting them up until she knelt on the bed with her chest pressing against the bed.\n\nShe scoffed at herself for being so foolish. After watching his brethren go so easy on her with the most basic moves, Silthos surely felt the need to spice things up a bit. And what better way to do that than to force her into a position she'd never tried.\n\nHe stepped forward, his cock pressing against the warm flesh of her thigh. She whimpered and shifted her hips, trying to find the angle that would force him in.\n\nHe growled low in his throat. \"Don't do that.\"\n\nShe held completely still, afraid for the first time that she'd upset him. \"What?\"\n\n\"Move your hips like that. I'll never be able to control myself if you keep that up.\"\n\nShe sighed in relief. He wasn't upset, just warning that her motion had made him hot enough to almost break control. She paused, a sly smile creeping onto her face. After weeks of being teased and tormented by the three of them, here was her chance to tease back. They'd brought her to the brink and left her hanging on by a thread so many times. She should have the chance to reciprocate the gesture.\n\nTaking a deep breath and closing her eyes, Claire began to sway her hips back and forth, following the slow rhythm of her heartbeat. Her fingers gripped the sheets, holding on in case he really did snap.\n\nIt took barely three seconds before Silthos growled again. His hands hardened their grip on her hips, his fingers drilling into her flesh just enough to make her wince. She knew the pain was accidental, that he didn't mean to hurt her, so she continued her rhythmic dance.\n\n\"Damn it, woman,\" he growled. \"You're going to make me lose my mind.\"\n\nShe smiled to herself, pleased to know she had the power to drive him insane. Taking a risk, she amped up the tempo slightly, rocking her hips faster and with more force. His groans of frustration made her smile grow. She had him exactly where she wanted him: weak in the knees and completely under her spell.\n\nWith a growl of defeat, Silthos locked his arms in place, preventing her from moving. With a single well-placed thrust of his hips, he drove his cock straight into her body, burying it deep inside the walls of her pussy.\n\nClaire buried her face into the sheets, groaning in pleasure. Thank god! She'd been waiting almost an hour for this, nearly screaming in agony from his teasing. Now, finally, she could get some relief.\n\n\"Curse you and your teasing. I was hoping this would be a slow, easy working. But no. You had to dance and make me lose control.\" He leaned forward and placed a hot kiss between her shoulder blades. \"Damn you.\"\n\nShe moaned into the bedding. \"Sorry.\"\n\nHe pulled back and thrust forward, dragging a low groan from her throat. \"Sorry isn't going to cover it. You'll have to think of another way to apologize.\"\n\nAnother thrust made her squirm against the sheets. \"Will a blow job do?\"\n\n\"I'll accept that.\" Silthos copied her ploy, ratcheting up the speed of his trusts just a little. \"Only because I know how good you are.\"\n\nShe smiled in spite of the rising waves of pleasure. He knew exactly how good she was. She'd given him one the first day she'd come down here and he'd raved about it for days. Giving him another good suck should make him forgive her teasing.\n\nSilthos kept his rhythm steady, making sure she got the most out of every thrust. He lifted her hips an inch, helping to drive his cock along the inner wall of her pussy, riding her sweet spot with an expert touch.\n\nFor her part, Claire gifted him with a litany of soft moans and sweet requests for more. He obliged willingly, bucking his hips faster and harder to meet her demands. Her hands twisted in the sheets, her moans growing louder and more frantic with every thrust and push of his body. Her thoughts became a cluttered mess as the pleasure he fed her with began to take over.\n\nHe tapped one check of her ass with his palm. \"How are you doing?\"\n\nShe swallowed slowly, trying to focus her mind enough to form a response.\n\n\"Claire?\"\n\n\"More,\" she managed to whisper.\n\nHe laughed and thrust faster, lifting her hips another inch. She bucked against him, startled by the bolt of lightening that raced down her spine. He was on the fast track to making her explode, and she clung to the bedding to keep from launching off into oblivion.\n\n\"Oh, yes!\" she cried. \"Right there. That's perfect!\"\n\n\"As you wish.\" His playful demeanor had returned, as did his determination. He planted his feet onto the stone floor, holing himself steady as he brought her higher and higher.\n\nHer breathing hitched as her body prepared to detonate. She closed her eyes and concentrated on the movements of his body and the beautiful precision that he was hammering her with. Another minute and she'd be gone. All Silthos had to do was keep he pressure steady.\n\n\"Thaltos,\" he groaned. \"I need to know if I can let loose.\"\n\n\"Well,\" the old demon started, \"since this will technically mean that each of us will have had their fair chance at her, I suppose...\"\n\n\"Just tell me!\" Silthos roared.\n\n\"Aright, alright. Yes, you can come inside her.\" She heard Thaltos' soft laughter at his friend's impatience.\n\n\"Thank god,\" he whispered. \"Hold on, Claire. This might be something you'll need to get use to.\"\n\nShe groaned and held onto the sheets, waiting for her own climax to come. Her body was on fire. A few more seconds and she'd have the relief she so desperately needed. He pounded her mercilessly, never losing sight of their mutual goal.\n\nOne final thrust and she was lost. Burying her face in the blankets, she screamed out her pleasure. Fire roared though her body, searing every nerve and fiber of her being. Her sex pulse as lightening ripped up her spine, delivering one final blast of delight before her body gave out. Behind her, Silthos roared out his own climax, bucking his hips hard against her body. Warm rivers or his demon seed flooded her body, filling her tiny frame until it flowed down her thighs.\n\nSilthos collapsed above her, his hands falling inches away from her head to support his own weight. Panting, he leaned forward and kissed her neck, his hot breath spilling down her back.\n\n\"You alright?\" he asked\n\nShe rolled her head to the side, catching her breath and regaining control of her heartbeat. \"God, you're good at that.\"\n\nHe purred in her ear and nuzzled his cheek against her neck. \"I'm glad to know you approve.\"\n\nShe relaxed against him, pressing her neck harder to his cheek. \"Do you want your blowjob now or later?\"\n\n\"Mmmm, a tempting question. Should I wait until your strength has returned to better serve my needs? Or should I collect my payment now?\" One hand slid down her back to cup her ass cheek, massaging it with his palm. \"Decisions, decisions.\"\n\nShe whimpered at his touch, now calmed and utterly compliant. Whatever he chose, she'd be more than happy to go along. He'd proven himself as worthy of a lover as Thaltos or Darrow. If he wanted his prize now, he'd earned it.\n\nAnother kiss on her neck brought her out of her daze. \"I think I'll let you rest for a bit. Let's get some food in you first before you start devouring me.\"\n\n\"Fair enough,\" she murmured.\n\nSlowly, Silthos managed to push himself up away from her body, giving her more room to breathe. He pulled his hips back, sliding himself free of her body. His absence made her whimper, the walls of her pussy clenching around his cock to keep him from leaving. He stroked her back, a silent indication that he wasn't leaving for good.\n\nSighing, she relaxed her body and set him free. He stood and stroked his fingers along her spine, caressing her softly as she recovered from her implosion.\n\n\"Darrow, can you bring her something to eat?\" He sat down beside her, continuing his soft massage.\n\n\"Way ahead of you.\"\n\nDarrow was already at her side of her bed, kneeling down in front of her and grinning into her face. In his hands were a goblet of wine, her usual plate of beef-covered rice and another plate heaped high with slices of roasted veal. He placed the plates beside her on the bed, picked up a slice of veal and held it to her mouth.\n\n\"I thought, since you're being particularly adventurous today, that you might want to try something new,\" he chimed.\n\nShe smiled at him, leaning forward to take a bite of the meat. Smoke and paprika filled her mouth, making her moan from the flavor.\n\n\"Is something wrong?\" His smiled dropped for an instant.\n\nShe shook her head swallowing the food. \"It's delicious.\"\n\nHe smiled returned. \"Good.\" He fed her another bite.\n\n\"Who makes all this?\" she asked quietly.\n\nDarrow smiled knowingly. \"It may surprise you to know that we do have jobs here beyond collecting and corrupting souls. Some clean, some patrol the halls. A bit like your world, only here.\"\n\nShe nodded. \"That does surprise me a bit.\"\n\nHe jerked his head toward Silthos. \"Someone in this group spent some time in the kitchens.\"\n\nShe turned her head to look at Silthos, an expression of complete surprise on her face. He simply smiled proudly and lifted his chin an inch.\n\n\"Do you still work there?\" She cocked her head.\n\nSilthos shrugged. \"We don't really have to. The only real job we have is soul gathering. It's just something to occupy the time.\"\n\n\"I see.\" She peered over his shoulder, her gaze finding Thaltos. \"Did you work somewhere?\"\n\nThe old demon smiled and nodded. \"It was only for century or two, but I rather enjoyed my post as a secondary judge.\"\n\nHer brows lifted. \"What did you do there?\"\n\n\"I worked in the Salonthi, deciding if a soul was sent here unjustly.\" He shrugged again. \"Every once in a while, there's a mix-up in the paperwork and a soul is sent here by accident. I was one of the judges that either denied their claim or agreed with them and sent them on their way.\"<br> She smiled, taking another bite of veal.\n\nThaltos smiled maliciously. \"However, Darrow here had one of the more, shall I say, interesting jobs for his character.\"\n\nShe turned to look at Darrow. \"You did?\"\n\nThe young demon glared at Thaltos. \"Don't you dare!\"\n\n\"What? What did you do?\"\n\n\"Damn you, old man.\" He sighed and hung his head. \"Sadly, I was head of the finance department for a few decades.\"\n\nClaire stared at him with a mix of shock and confusion. \"The...finance department?\"\n\nHe snorted. \"It's not exactly what you think. No money's exchanged there. It's used to keep track and regulate any deals we make here.\"\n\nShe paused for a moment. \"So it's a bit like Wall Street. They keep track and regulate all the international trades that happen back on Earth.\"\n\nHe shot her a wicked smile. \"A bit. But our devilish ways don't come close to the evil that happens behind those doors.\"\n\nShe giggled and leaned in to kiss him. \"Be nice.\"\n\n\"Well then,\" Thaltos took a seat on the small bed. \"Now that we're all awake, what should we do?\"\n\n\"Don't know. The lockdown's still in effect, so we can't go anywhere or do anything,\" Silthos muttered.\n\nClaire reached over and rested a hand on his thigh, running her fingers lightly along his flesh to get his attention. \"Don't worry. I still owe you for teasing you like that, so we can kill a few minutes.\" She added a sly smile for effect.\n\nHe stared down at her hungrily. \"Yes, you do.\"\n\n\"Easy now,\" Darrow growled. \"I still have plans for her myself.\"\n\n\"Oh?\" She eyes him curiously. \"And just what did you have planned for me?\"\n\nHe smiled at her viciously. \"Oh, such vile, despicable things, my dear.\"\n\nShe giggled at him, reaching out a hand to cup his face. It had taken a few days, but Claire had learned that Darrow's evil smile and sinister growls were simply his way of expressing desire for her. Nothing he had ever done was meant as an attack or offense. He simply wasn't soft or emotionally stable enough to say it to her face.\n\n\"Silthos,\" she turned to face him. \"I think it's only fair that Darrow has a shot at me now. You've already had your chance, and you're the first one to come inside me. I think you're done for a while.\"\n\nHis face dropped. Claire knew he understood her reasoning, though the thought of having to share her after such an explosive encounter certainly didn't make him grin like a fool. Begrudgingly, he nodded and scooted away an inch.",
        "Growling in triumph, Darrow shot to his feet, nearly knocking over the plates of food. \"Come here, Girl!\"\n\nFaster than lightening, his hands lashed out and gripped her hips, spinning her around and rolling her onto her back. She cried out in surprise, then laughed as he moved around the bed to face her. Gripping her ankles, he hauled her hips off the bed, raising her body until only her shoulders remained on the bed. He hooked her ankles over his shoulders, his hands sliding sown to grip her slender hips. With one strong thrust, he buried his cock deep inside her.\n\nClaire arched her back, biting her lip as a fresh wave of pleasure whirled through her. The new feelings of ease and acceptance startled her a bit. She'd changed so much since her first day. Where she once was a scared, frightened little girl who knew nothing of Hell or her own sexuality, she was now a strong, proud woman who held a freedom and knowledge that could shake the world. She didn't care which demon had his way with her. She didn't mind that others stared at her body or touched her skin. All she cared about was staying with her lovers and being happy with them.\n\nDarrow's hands slid under her back, lifting her body completely off the bed. She dangled in his grip, tossing her head back and he tested his grip on her. Satisfied, Darrow pulled back and thrust in again, the new angle making sparks of fire bolt up her spine.\n\n\"Hold on, little girl,\" he growled. \"I'm about to break you in half.\"\n\n* * *\n\n\"Selfish, lazy, goddamned motherfucker!\" Tarrin raged quietly to himself as he sat in the dark, cavernous hallway that he had claimed as his own. \"A girl like that...doesn't deserve her at all.\" He sat there in the shadows, surrounded by cold and buried in his own jealousy.\n\nDarrow's new prize was incredible. Young, virile, with hair the color of chestnut and warm grey eyes that silently invited him in. Her body was slender and warm, enticing him with every twist of her hips and swish of her hair. The taste of her flesh had nearly knocked him unconscious when he had his first tried to claim her of her. So delicious, so inviting...The thought of her nearly drove him mad. How Darrow and his hoard had managed to claim something so beautiful as that had stumped him.\n\nTheir attempt at thwarting his plan had been a clever one: claim her virginity before he could. Tarrin shrugged to himself, scoffing at their quick maneuver. It was a small setback, nothing that would ultimately divert him from his course. He would just have to find another way to tempt her to him. A shiny bauble, a low whisper in her ear... something to catch her attention enough to drive her away from them. The girl was far from foolish -- and, unfortunately, extremely loyal - but he guessed that even she could be tempted away with the right bait.\n\nStill, he felt a small twinge of pity for his new obsession. No doubt she knew the effect she had on himself and other demons. It wasn't her fault that she smelled so incredible or that her looks were so captivating. The poor thing had been blessed and cursed with a beauty that would have demons hunting her for centuries. It was only by luck that his old friend had managed to wrangle her.\n\nHis fury boiled under his skin. He'd watched from the shadows as groups of other hellions eyed her with interest. They knew what he knew: the girl was a gem in a world of gravel. None of them were worthy of that woman's' beauty and charm. Even as a human, she outranked them all. How dare they eye the prize that was so rightfully his! He should crush them all, show them who truly deserved her.\n\nAnother thought sent a shiver down his spine. The mist had its eye on her as well, a death knell for her spirit if there ever was one. That vicious cloud would break her in half, making her into a mindless servant to fulfill whatever demented desires it had. It would corrupt her easily, despite her strength and determination. It could find her easily as well. No doubt it knew her owners, where they hid her and how they would fight for her. Around them she was an easy target, despite Darrow's infamous resilience and possessiveness.\n\nDespite the horrid possibilities, there was a glimmer of hope. The mist could not claim her itself. Banned from moving beyond the walls for eternity, there was no way it could possibly catch her without help. It would need was a vessel, something it could control and use as a tool to capture the girl.\n\nHis resolve hardened. He must get her away from Darrow and the others, must find somewhere to hide her where the mist could not reach. Not an easy task since the damned clouds knew nearly every stone that surrounded the castle itself. But the mist knew nothing of the hallways and corridors inside the walls surrounding the marsh. It knew even less of his hiding places and the secret pathways he used to maneuver around. Kept inside one of his chambers, she should be safe until the lockdown ended.\n\nTarrin moved quickly, flitting through the pools of dark shadows until he came to the main corridor. He pressed himself against the wall, remaining in shadow as groups of guards passed by. Her room was a few doors down the hall. Hopefully she and her companions -- he grimaced at the word -- would be asleep. Having to capture her while Darrow was awake was not his idea of a good rescue.\n\nHe slipped past the guards, moving silently as he slid from one pool of darkness to the next. He stopped at the shadow beside her door. The guards had passed, and it would be another ten minutes before the support group came. Plenty of time to take the girl and hide her. He stepped forward, preparing to slip inside while the coast was clear.\n\nA soft sound, like the quiet hiss of a snake, stopped him in his tracks. A sound unmistakable to the ears of any demon. He didn't need to look over his shoulder to know the danger. He'd know the mist needed someone to use as a puppet in order to claim the girl; he hadn't guessed it would have picked him.\n\n\"Damn you,\" he whispered.\n\nQuicker than lightening, a tendril of silvery mist speared up from the swamp and looped tightly around his ankle. Crying out, Tarrin dug his claws into the rock to anchor himself. The mist was strong, though, and slowly pulled him back towards the wall, his fingers leaving behind deep gouges in the floor.\n\n\"Come,\" a thin, whispery voice echoed through his mind. \"I need you. The girl is very precious indeed. I need you to gather her and bring her back. The two of us can share her after she's broken.\"\n\n\"LIAR!\" he roared. \"You share nothing. You can only steal and devour!\"\n\n\"We can share this one,\" the voice cooed. \"She's gifted, beautiful, and delectable. You've watched her from afar as I have. You've even had the chance to taste her, a delicacy I have yet to know. We can both devour her endlessly. All you need is to capture her and bring her back.\"\n\n\"No! I know you too well, damned fog! You'll break her then kill me!\" With a colossal effort, he managed to pull himself forward an inch, then another, slowly gaining the upper hand. \"The farther away she is, the safer she is from you!\"\n\nThe voice hissed loudly, infuriated at his impudence. \"Very well, then. If I cannot have your help, then I will have your mind.\"\n\nWith a final tug, the strand of silver jerked him back, pulling him over the wall and into the feather-soft pool of mist below.\n\n* * *\n\nClaire sat at the end seat of the table, chewing mindlessly on a slice of beef. She stared out the small window Thaltos had carved earlier, watching as rolls of silvery mist swirled around the barren trees of the marsh. Her lovers were at the other end of the table, lost in conversation. Claire ignored their presence, her eyes still staring unfocused out the window. Her mind had been spinning about the mist and her close call for days, though she still couldn't help but admire the beauty hidden within the danger.\n\nThe silver clouds seemed to watch her, gazing at her with a ravenous intensity. A shiver raced up her spine and she twitched instinctively. She scooted her chair back an inch, trying to put a bit more distance between herself and the window.\n\n\"What's up with you?\" Silthos' finger brushed the length of her spine. \"You're staring out that window like you've seen a UFO.\"\n\nClaire inhaled sharply, snapped out of her trance. \"Nothing. Just watching the people.\"\n\nHe moved his chair beside hers, taking a seat next to her. \"It's more than that. Ever since that strand of mist...ah, I see.\"\n\nShe looked up at him, trying to hide her fear. \"See what?\"\n\nSilthos stared out the window as well, his eyes narrowed in concentration. \"Well then... you do have a reason to worry.\"\n\nShe swallowed sharply. \"Really? It's that dangerous?\"\n\nHe nodded slowly. \"For most people, the mist is relatively harmless unless they fall in. Otherwise; it stays on its own side of the walls and keeps watch over the souls of the marsh.\" He paused, his features hardening. \"But for it to actively lash out and try to drag you in... that's not a good thing.\"\n\n\"Why not? I understand it's dangerous, but what does it mean when it attacks someone?\" She set her plate down on the table and turned to face him.\n\n\"It means the mist likes you, and not in the normal, let's-be-best-friends way. It wants you for some reason. I'm not sure why, but it can't be just because you're the new girl. There's something about you it find interesting, which means it might come after you again if you're not careful.\" His twilight eyes slid to her, a mixture of fear and apology in their fiery depths.\n\nHer own eyes widened. \"You mean it could chase me down?\"\n\n\"Not exactly. The mist itself is forbidden -- unable, really -- to cross the walls of the fortress. So if you stay on this side, you should be safe from getting pulled in. But, if it can capture another being, it's possible the mist could seep into their mind and use their body to maneuver around here without any restrictions.\"\n\nShe shivered slightly. \"So all it needs is for some wayward creature to come too close and it has a body to capture me.\"\n\nSilthos hesitated for a moment, then sighed. \"Well...yes. If it could capture a physical body, the mist could use a type of mind control to move them around.\"\n\n\"Would that person know what was going on? Could they fight back?\" Her gut twisted into a knot, dreading the answer.\n\n\"Unfortunately not. Once under that damned mist's spell, a person no longer has control of anything they do. The best guess we have is that the mist puts the person's mind into a state of deep sleep so their body is still useable.\"\n\n\"How do you know all this?\" She stopped, her heart plunging to her feet. \"This has happened before, hasn't it?\"\n\nSilthos hung his head. \"Only once. That time it wasn't motivated by the desire for a person, but for vengeance against the Salonthi.\"\n\n\"What happened?\" Her eyes grew wider as the seconds passed.\n\n\"The mist is known to have a vicious territorial attitude towards the souls it watches. The Salonthi is an appeals board for souls sent here by accident. Back when this happened, the mist was closer to the buildings, practically seeping onto the hallways and into rooms. It was allowed to do this as long as it never tried to capture any creature outside the marsh. There was a moment where a soul that had spent years in the mist was granted a reprieve and was released. The mist took over the body of a guard and used it to storm the Capitoris building.\"\n\n\"The poor man.\" Pity stewed in her heart, mixing with the anger she felt towards such a manipulative being. \"What happened to him?\"\n\n\"Originally, officials thought he'd gone rogue and ordered his death. But when they saw that the weapons they were using damaged his body but never slowed him down, the realized the guard wasn't in control and changed the order to a simple capture. A few good spells later, the guard was released from the mist's influence and was cleared of any charges they would have given him. The mist was pushed back into the marsh and more spells were set up to keep it from coming through the walls.\"\n\n\"So it's behind the walls because it went berserk. Well, I suppose that's a fair reason to keep it back.\" She pulled her legs to her chest, wrapping her arms around her knees. If the mist was capable of tearing through Hell just because one soul was released...she shuddered to think what it could do to her small body.\n\n\"Hey.\" Silthos' strong arm wrapped around her shoulders, pulling her close to his chest. \"You're acting like we'd ever allow that damn cloud to get you. Trust me, all three of us would fight tooth and nail to keep you safe.\"\n\nClaire smiled and inched closer to him, pressing her cheek against the warm flesh of his chest. Here, she felt safe and warm, protected on all sides by three intimidating hellions who would rather die than let her go. She sighed and closed her eyes, letting her fear of the mist slip from her mind. She was secure here, and there was nothing to be frightened of as long as Silthos and the others were near by.\n\nThe harsh grind of a chair moving across the floor snapped her awake. She looked over her should to see Darrow standing at attention facing the pool of shadow that acted as their door. His eyes were focused, narrowing in anger and suspicion.\n\n\"What?\" Thaltos stood to join his partner. \"What is it?\"\n\n\"Something's coming.\" His voice was low, deadly. \"And it's not a guard.\"\n\nThaltos' stare turned cold as well. \"What do you feel?\"\n\nDarrow's eyes narrowed as a low growl rumbled in his throat. \"Silthos, shield Claire. Whatever's out there, it's not here to say hello.\"\n\nSilthos nodded and stood, scooping her up in his arms and stepping back to the far wall. His grip on her tightened, a signal to her that he was fully prepared to race out of the room with her if things got too rough. She wrapped her arms around his neck and held on tight, pressing her face into his shoulder.\n\n\"It's coming closer!\" Darrow warned.\n\nPeering over Silthos' shoulder, Claire noticed she could stare out the window down to the marsh. The mist seemed more animated, almost joyful. It twisted and twirled, lashing thing tendrils around in a frenzied dance of enthusiasm. As if it was excited about something...\n\nHer eyes widened as her heart hit the floor. Acting on instinct and fear, Claire whipped around to stare at her guardians. \"Darrow! The mist!\"<br> \"Shit!\" Darrow threw the chair across the room, taking an offensive stance. \"What the hell has it used?\" He stopped, frozen in place, a look of pure shock and fury on his face. \"Fuck.\"\n\n\"What?\" Thaltos looked worriedly at his friend.\n\nDarrow's face contorted into a mask of pure hatred. \"Tarrin.\"\n\nThaltos sighed to himself. \"I see. So it's using someone who knows what to look for and where she is. Clever thing.\"\n\nThe shadows that lined the walls began to shift, signaling the arrival of an intruder. Claire clung to Silthos' shoulders, fear twisting deep in her gut.\n\nFinally, the mass of blackness stopped squirming and parted to allow the newcomer in. Tarrin stepped though, his hulking form slipping away from the soft tendrils of shadow. His posture had changed since she'd last seen him. His shoulders hunched, his head hung low, the spines of his back and shoulders still sharp but lacking any ferocity. Even his breathing seemed to slow down, coming out in harsh puffs as his body struggled to inhale.\n\nHis eyes were the most shocking change. Once a deep blood red, they had turned a sickly pure white. Those orbs, absent of any color whatsoever, made her shiver. Those were the eyes of a lifeless being, a creature that had lost its soul completely. He stared at nothing, saw nothing, his mind and body completely hollow from the mist.\n\n\"Holy fuck,\" Silthos whispered.\n\n\"Tarrin,\" Darrow groaned. \"What happened to you?\"\n\nTarrin remained silent, only the sound of his breathing confirming he was still alive. His massive head turned towards her, his lifeless eyes gleaming in the light of the hoops of fire. She shivered again, knowing his intent even before he moved.  \n\nDarrow sidestepped to move in front of Silthos, his enormous form now a barrier between them and his lifeless former friend. He set his footing, preparing himself for the fight that they all knew was coming. Thaltos copied Darrow, becoming yet another barrier to Tarrin.\n\nThe huge demon growled low, his lips pulling back to bare sharp teeth. He stepped forward, his hollow eyes narrowing in anger and concentration. Claire could almost see the gears turning in his head, watching the movements in his mind as if she were watching a movie.\n\nStep to the right...fake left...dodge attack from Darrow and counter with a strike to the gut...holy shit.\n\nClaire was momentarily stunned. In all her life, she'd never been able to see into another's mind. She'd never really wanted to know what others were thinking, so she left the fantasies of telepathy and mind control to the exiles of her school. Her heart raced from panic, her mind gawking at the idea of invading another's most private actions, even if it was Tarrin...\n\nShe paused, feeling around the new mind for any sign of emotion or sensation. She found nothing, not one passionate idea or heart-felt belief. Her feeling of invasiveness decreased steadily as she searched deeper. These weren't Tarrin's ideas at all. His mind had fallen into emptiness once the sinister clouds claimed his body. What she was reading were the thoughts and plans of the mist itself.\n\nRealization slammed into her. That was why the mist wanted her so desperately. It had known, long before her own mind caught on, about her ability to decipher its enigmatic ways. For centuries, it had remained silent about any plans or intentions it may have held; its mindless, soulless form immune to any type of demonic interpretation. Now, with her around, its secrets could be voiced to millions.\n\nClaire's resolve hardened. She would never allow that disgusting mist to capture her, let alone harm the three people who loved and cared for her. Swallowing her fear, she focused her mind to search for its next plan of attack, determined to protect her lovers even at the cost of her own sanity.\n\n\"Darrow! He's going right and dodging to the left!\" she called out.\n\nHe peered over his shoulder at her, confusion marring his features. \"How the fuck-\"\n\nShe shook her head. \"It's in his head! Just trust me!\"\n\nAt that moment, Tarrin rushed forward and slid right. Darrow, now prepared for his attack, stepped in front of him and delivered a crushing blow to the intruder's face.\n\nYes! It worked!\n\nTarrin stumbled back, roaring in rage. He cupped his face in his hands, his eyes narrowing in anger. Both he and the mist that controlled him hadn't expected to be countered so easily. His blank eyes scanned the room, searing for anything that could have led Darrow to guess his attack. Finding nothing, he roared again and braced for another assault.\n\n\"Claire...\" Silthos whispered in her ear.\n\nShe inhaled deeply, cleansing her mind. \"I don't know how or why, but I can and I will. Let me focus.\"\n\nShe silenced the flurry of emotions in her head, regaining control of her mind and reaching into Tarrin's head once more. Anger, along with confusion, whirled through his mind. Still, she could catch glimpses of his next move, making a small smile slip onto Claire's face. They might actually have a chance to win this.\n\n\"He's moving left! Thaltos, left!\"\n\nAgain, her lover was able to dodge and counter his attack, stunning the spell-bound Tarrin a second time. His opponent stumbled back again, his eyes against scanning the room for the source of their information. His pale eyes settled on her, narrowing as he realized their informant. He growled again, the intensity of his anger now focused solely on her.",
        "Shit.\n\nPanic raced into her mind. He'd figured out she was their access into his mind, and he clearly wasn't too happy about that. Terrified, Claire tried to focus her out mind again to find his path, but his thoughts had gone blank. Rage and desire had rendered his thought process useless. He was running on pure instinct now, which left her blind to his intentions.\n\n\"Claire where's he going!\" Darrow called out.\n\nShe shook her head. \"I don't know. He's pissed, so he's lost all control of his mind.\"\n\n\"Damn it.\" Thaltos growled. \"Silthos, prepare to move her out of the way. If she can't hear his thoughts, we're fighting blind on this one.\"\n\n\"Trust me, she's not going anywhere with that thing,\" Silthos growled.\n\nClaire lay in his arms, clinging to him out of sheer terror. Without the knowledge of where Tarrin was going to move, they were practically open targets. Acting on instinct in a last-ditch effort to help her lovers, Claire closed her eyes and imagined herself as the mist. She imagined, if she knew her plans had been discovered and began to act on pure rage, how she would react. How she would move, where she would go, what she would attack first...\n\n\"Darrow! Move! I think it's going after you!\" Claire cried out to him, hoping she'd guessed correctly.\n\nLuck was with her. Tarrin charged at Darrow, lunging at him just late enough to give her lover time to dodge and deal another blow to his shoulders. Another roar of rage signaled Tarrin's immediate turn toward Silthos, a move she hadn't expected. Silthos began to back up, his eyes always searching for an escape route. Thaltos rushed forward, anticipating Tarrin's next attack, but moved too late. The mindless demon raced towards Silthos, turning his body sideways to deliver a devastating blow with his spiked shoulder.\n\nClaire was knocked from his grasp, tumbling to the ground and landing near the window. Dazed but still aware, she struggled to her feet to watch the ensuing fight. Tarrin was still fighting the others, but curiously made no move towards her. She was out of the protective arms of her lover, yet his focus remained elsewhere. Why wouldn't he...\n\nShe stopped, understanding the complicated plan that had been set in motion. The mist was only using Tarrin as a distraction. It had no intention of using him to collect her or kill her here and now. All it needed was her away from her lovers and near the window.\n\nAs if on cue, a soft hiss whispered behind her. A chill ran up her spine as her stomach turned to cement. She knew what was coming; she'd seen her fate in Tarrin's mind the instant before it went blank. She inhaled deeply, never resigning to her fate but questioning what move she could make that might change the future. There was nothing she could do or say that might change the mist's plans or break Tarrin from his spell.\n\nA sense of melancholy settled over Claire as her mind's eye watched the threads of mist creep through the window and inch closer to her. All this fighting and bloodshed was over her. Nothing more than jealous desire and a lust for power and control. A wave of despair and self-loathing rushed into her veins, rendering her immobile. Perhaps, if she just went into the mist willingly, this whole escapade would end and her lovers would be safe.\n\nA crushing blow thrown to Darrow knocked her out of her pity party. Tarrin had dealt a rough uppercut to her lover's jaw, knocking him backwards and leaving sprawled across the floor. A thin trickle of blood dripped from his mouth as he pushed himself up. He shook his head to clear it, still stunned from the blow.\n\nThe sight of her most passionate lover being pummeled to the ground sent a new wave of emotion through Claire. Anger, hot and heavy, roared through her veins. Her resolve hardened once again, this time turning to steel. She would change her fate if she could, making any move necessary if it mean those she cared for remained safe. She whipped her head around, searching for something to assist her demons. Spying a heavy brass candlestick that burned fiercely on the table, Claire rushed over and gripped the thick hunk of metal in her hands, the gears in her mind spinning so fast sparks nearly shot from her ears.\n\nWeapon in hand, she turned and raced back over to the window. Thin strands of silvery mist seeped in from the small cut-out in the wall, sliding across the floor towards Darrow. The stands crawled toward him hungrily, small snakes inching towards their stunned prey.\n\n\"No! You can't have him!\" she cried out. \"He's mine!\"\n\nThe tendrils were only inches away from Darrow now, their small squeals of excitement making her skin crawl. Darrow's own ebony eyes widened as they crawled closer, a mix of fear and fury in his eyes.\n\nStopping just short of the tendrils, Claire raised the heavy candlestick above her head and took aim.\n\nIf the mist controls Tarrin, then wounding the mist should slow him down.\n\n\"I said he's mine!\"\n\nWith every ounce of strength in her body, Claire brought the head of the candlestick down on the nearest tendril of mist. It screeched in pain, whipping around and lashing wildly into the air. The other strands instantly pulled away from Darrow, retreating to the edges of the wall to nurse the wound she'd caused.\n\nOut of the corner of her eye, Claire watched as Tarrin's movements slowed. Unharmed by her attack, he was nonetheless clearly affected by the mist's momentary distraction. He stood completely still, his eyes no longer angry and focused. Silthos and Thaltos took advantage of the opportunity and charged at the stunned demon, knocking him to the floor.\n\nClaire lifted the heavy piece of brass again and raced over to Darrow. \"It's not getting you,\" she growled through clenched teeth. \"I won't let it have you!\"\n\nRenewed by her own fury, Darrow hauled himself to his feet, taking a defensive stance beside her. \"And your plan would be?\"\n\n\"I can't read it, but the mist is what's controlling Tarrin. If we can would it, we should be able to drive it back and gain the upper hand in the fight.\" Her eyes scanned each tendril of silver, waiting for one of them to move.\n\n\"Then I'll stay and help-\"\n\n\"No!' she barked. She could sense the mist healing itself, knowing that Tarrin had recovered from his own hit and was beginning to fight again. \"Help Silthos and Thaltos. They need you more than I do.\"\n\nShe felt his smile before seeing it: a soft, warm, proud smile creeping onto his lips. He was proud of her, proud of how she had changed. No longer a frail, frightened young woman, Claire had become something of a warrior herself. Willing and able to defend those she cared about even at the cost of injury.\n\nDarrow stepped away, carefully inserting himself into the melee behind her. Claire stayed put, gripping the heavy candlestick tightly as she prepared herself for the mist to retaliate. It never moved, staying close to the wall and hiding within the small patches of shadow. The tiny threads of mist squirmed restlessly, as if planning a new route for escape.\n\nShe could almost feel the anger and unease pulsing off the small worm-like creatures. The mist was unused to having its plans thwarted by any demon, much lass a young human girl. It raged silently at her, furious that she could both anticipate its movements and do it harm. It must capture her if it was to win, but she was by no means an easy catch. With her ability to see its plans, Claire held the advantage in the fight, something the mist despised.\n\nBehind her, Darrow and the others had finally gained the upper hand against Tarrin, pinning him to the ground as he struggled fiercely. A smile cracked onto her lips, a move that sent a wave of furious screams from the tendrils of mist. Her joy at her lovers being able to subdue its puppet didn't sit well with the mist.\n\nOne thin tendril lashed out at her, screeching in rage. Claire swung at the strand, smacking it away and sending it scampering back to the wall. Another crawled towards her, sliding silently across the floor in hopes that she wouldn't notice its silent move. She did, unfortunately, and Claire stuck at that strand as well. The mist curled against the wall, infuriated that its prey was fighting back. It had expected her to be paralyzed by fear and make herself an easy target. Instead, she retaliated and risked her own life to protect her lovers.\n\nDamn girl. I'll break her soon enough.\n\nDefeated and enraged, the mist began its slow retreat. The thin tendrils crawled slowly up the wall, slipping back through the window into the murky pit from whence they were born. The tips still whirled and lashed at her, silent in their fury but all too eager to show it. The last few inches of silver slipped through the window, leaving silence in their wake.\n\nClaire stayed still for a moment, refusing to follow until she was sure they were gone. She'd seen far too many B-rated horror films where the heroine follows her adversary the moment it disappeared only to be capture once she ventured too close. Claire had learned from those oh-so-talented actresses not to fall for that trap. Instead, she inched closer, taking one step at a time, giving herself enough room to maneuver should they come screeching out at her again.\n\nTaking a deep breath, she peered over the edge of the window, staring down into the marsh. The mist remained below, slowly swirling around itself with flashes of crimson and black. It shrieked the moment it noticed her presence, pulling back from the wall below and slipping away into the darkness of the marsh. The scream reminded her of a furious battle cry, a warrior vowing revenge for a humiliating defeat.\n\nClaire smiled to herself and stepped back from the window. Pride overflowed in her veins, mixing with the relief and exhaustion already settling in. Happy but still wary , she turned to watch her three lovers as the last of their own fight finally ended. With the mist gone, Tarrin's mind and body had been released. He lay in a crumpled heap on the floor, completely unconscious. Thaltos, Darrow and Silthos stood around him, panting from the struggle.\n\nThrowing her hands up, Claire's smile returned in full force. \"We won!\"\n\n\"For now,\" Thaltos' voice was steady, unchanged by the outcome of the fight. \"The mist is not accustomed to losing anything, least of all a fight. It will be back eventually, with more power and fury than before.\"\n\nTossing the candlestick aside, she walked casually over to the group of demons. Reaching up, she looped her arms around Thaltos' neck, pressing her chest to his back and her cheek to his neck. \"We won this time. We've show that disgusting cloud we're nothing to be laughed at. Be happy, please?\"\n\nHe smiled in spite of the truth and turned his head to kiss her. She returned his kiss passionately, finding warmth and security in his touch. Despite knowing the mist would be back to claim her, Claire felt safe and protected here. For now, she could relax.\n\n\"So, what do with do with sleeping beauty?\" Silthos gently nudged the unconscious Tarrin with his foot.\n\nShe pulled away from Thaltos, looking down at the sleeping demon. \"I suppose we turn him into the Counsil.\"\n\n\"You sure?\" He looked at her worriedly.\n\nClaire shrugged, staring pityingly at Tarrin. \"What else could we do with him? We can't leave him here. Once he wakes up, who knows what he'll do?\"\n\nDarrow sighed. \"She's right. There's no point in keeping him here. We'll call the guards and have them haul him out.\" He paused, his eyes focused yet pained. \"I guess...I suppose we could put in a small good word for him. After all this, he doesn't deserve execution just yet.\"\n\nClaire stared at him, thunderstruck. The entire time she'd know Darrow, all he'd ever done for Tarrin was rant about how he'd been screwed over by a former friend he now wished dead. For him to have a change of heart like this was stunning. Although, she reasoned, friendships that ran as deep as Darrow and Tarrin's don't die easily.\n\nThere must be some remainder of the friendship still in his mind. Pissed as he is, I'm not sure I could condemn my best friend after watching them suffer like that.\n\nShe sighed and let go of Thaltos, crossing her arms over her chest. \"Fine. Should we wait until he wakes up to let him down easy?\"\n\n\"Probably not,\" Silthos reasoned. \"He'll just come out of his nap swinging. It's best that we alert the guards now.\"\n\nShe nodded, turning to Thaltos. \"I think Darrow and I can handle him. Could you go grab the guards and tell them what happened?\"\n\nThe enormous demon smiled down at her and bowed his head. \"My pleasure.\"\n\nShe reached out and gripped his arm gently. \"Thaltos, tell them everything. We cant have them throwing Tarrin under the bus when he wasn't in control.\"\n\nHis smile never wavered. \"They'll know every detail.\"\n\n\"Good.\" She stood on her tiptoes and leaned in, attempting a second kiss.\n\n\"Darrow...\" Tarrin's raspy voice broke through her veil of happiness.\n\nClaire turned to see the same blood red eyes staring fearfully at her feet. One clawed had pointed at the wall behind her.\n\n\"Darrow, watch your girl. She's-\"\n\nAn ear-shattering hiss flooded the room. An instant too late, Claire felt an icy chill wrap around her ankle and pull her to the ground. It pulled her across the floor at a frightening speed, jerking her to the side seconds before she would have smashed into pieces of furniture.\n\n\"Thaltos!\" She screamed and clawed at the floor, trying to slow her flight.\n\n\"Claire!\" Darrow's roar of fear and rage nearly shattered her heart. He knew now what Thaltos had known all along: the mist had come back and was hell-bent on claiming its prize. Darrow nearly knocked Silthos over as he lunged for her, the rage and fear melding into one ear-spilling roar.\n\nI'm going to lose them.\n\nThat thought alone broke her heart. She sobbed quietly, dreading her fate and apologizing for her pain she'd caused them. Tears welled in Claire's eyes as the mist dragged her closer to the window, tears of despair as she was pulled away from the three people who honestly cared for her and fought for her.\n\nDarrow's clawed hand reached out to grasp hers, his thick fingers wrapping tightly around her wrist. Seizing the opportunity, Claire grabbed his wrist and held on, a tiny flicker of hope starting to burn in her heart.\n\nShe looked fearfully into his coal-black eyes. \"Don't let go.\"\n\nHis gaze hardened. \"Never.\"\n\nShe sobbed again. \"I don't want to leave you.\"\n\n\"You're not going anywhere,\" he growled. \"I won't allow that.\"\n\nA strained smile flashed across her face. Of all of them, Darrow would be the last to give her up. He'd fight tooth and nail for her life, even if that meant sacrificing his own. He loved her as much as she loved him.\n\nA thin strand of mist lashed out, slicing the back of Darrow's hand wide open. He winced but kept his grip on her, never letting the pain overtake his need to protect her. Another strand whipped out, followed by a third, all three slicing and lashing his hands, hoping to break his grip.\n\nThaltos and Silthos rushed over to their friend's side, each grabbing hold of her hand. They held onto her, the added strength of two demons holding her steady against the grip of the mist. The tiny flame of hope in her heart grew a bit. They could save her, haul her back into the room and keep her safe. They could wipe away this nightmare from her memory and replace it with thoughts of love and passion. One more pull and they could do all of it.\n\nThe tiny flicker of optimism died almost instantly. Another handful of tendrils whipped out from the window, some wrapping around her ankles to pull harder, others lashing the hands of her lovers to break their grip. The threads cut deep, releasing rivers of ink-black blood that flowed onto her hands. The blood slicked their skin, making gripping their hands difficult, and Claire began to slide backwards, aided by the ceaseless pull of the mist.\n\nIn that moment, she saw her fate and her life flash through her mind. Regardless of their efforts, her lovers' grip would break eventually, sending her tumbling down into the murky haze below. If, by some incredible stroke of luck, their grasp held, the mist would drag them down with her.\n\nHeartbroken and defeated, Claire decided to spare her lovers the fate she was slowly being pulled towards. She would let them go, save them from the awful plans the mist had in mind. She loved them too much to let them suffer like that. They would weep for her, yes, but they would recover and find another that wouldn't cause them so much pain and heartache. Tears streaming down her cheeks, she loosened her grip a bit, letting her hands slide through theirs an inch.\n\nDarrow's eyes widened in panic. \"Claire!\"\n\nShe looked back at him, sorrow and apology in her eyes. \"Don't forget me.\"\n\n\"No!\" he roared. \"Don't you dare!\"\n\n\"I love you, all of you,\" she whispered. \"Stay safe for me.\"\n\nWith one final smile, Claire released her hands, sliding free of her three lovers. The mist seized the opportunity, jerking her sharply back and hauling her through the window. Time moved slowly as she watched all three demons race to the window. They cried out her name, looks of horror and shame upon their faces. She smiled softly, knowing she'd saved them from an eternity of pain and despair in the clouds of mist.\n\nStay safe for me.\n\nShe finally fell into the soft, cool swirls of the mist below her, feeling the icy coldness sink into her skin. Her fingers went numb first, then her arms and her legs. The mind grew foggy and unfocused as she inhaled a final breath of clean air. The grief-stricken faces of the three demons she'd come to love faded from view as her world shifted to black. She sank down, swallowed into the folds of grey and cobalt, finally separated from her lovers completely.\n\nSilence followed, followed by a screech of triumph emitted from the thick swirls of silvery blue mist.\n\nIf you cried during the last part, don't feel embarrassed. I started tearing up while writing it. Don't worry, though. This is only chapter 7. There is still much more of the story to tell.\n\nStay tuned... \"Demonbreaker\""
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "demon"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/shadowrunner"
}