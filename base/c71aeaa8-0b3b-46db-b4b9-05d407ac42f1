{
    "title": "Hard Landing Ch. 03",
    "pages": [
        "*** This series was awarded Best Lesbian Story, as well as Most Literary/Genre Transcending Story in the . Thank you to all who voted. ***\n\nWelcome friend, to Chapter Three. If you haven't read Chapters One and Two, you'll be lost. I mean, really lost. Friends don't let friends be lost.\n\nAs usual, I've updated the Spotify playlist found in the contact tab of my author page with the songs from this chapter. There's a lot of additions this time around. Please enjoy and leave a comment if you care to, or follow my playlist on Spotify.\n\n~~ Rehoboth Beach, Delaware ~~\n\nJILL\n\nWhen we pulled into Rehoboth we checked into our Air-BnB for the night. It was a simple three-bedroom house several blocks off of the beach, with a single bathroom. We were only here the one night and leaving early in the morning, so simple was fine. Two of the rooms had queen beds and the third had two sets of bunk beds.\n\nMost of the group wanted to go to the boardwalk to play carnival games and shop in the tourist traps, but since Jo and I hadn't eaten on the ferry, we both wanted dinner.\n\n\"We're flying out of formation, Doran,\" Jo told me as we headed off towards a group of restaurants at the end of the boardwalk. Perfect, I thought to myself. She made what she called 'a command decision' that we were going to the fancy raw bar.\n\n\"I'm not sure this place is in my budget for this trip,\" I said, eyeing the menu. After we were seated.\n\n\"Don't worry about it, it's on me,\" she said, \"I eat so much crap when I'm on base or deployed, I like to eat well when I'm on leave. That's why I wasn't down for hot dogs from a transit ferry snack bar this afternoon.\"\n\nWhen Jo said she liked to eat well, she wasn't kidding. She ordered drinks. I had white wine and she ordered some kind of special reserve bourbon for herself, \"One ice cube only, please\" and kept the waiter running all night to keep us topped off. A half-dozen raw oysters for appetizers, which I'd never tried before.\n\n\"A dash of hot sauce on the top is just what you need,\" she said, feeding one to me right off the shell. We each ordered a giant seafood entree.\n\nThe entire night was so strange. In some ways it was the best first date I'd ever had. Our conversation was so comfortable, it was like old friends catching each other up. She kept feeding me things from her plate, saying, \"You have to try this!\" and her gestures toward me seemed familiar and intimate.\n\nBut in other ways... it didn't seem like a date at all. She kept calling me \"Doran\" all night, which was really throwing me. Anytime the conversation veered towards families or dating histories, either hers or mine, she would smoothly change the subject. She was thrilled to listen to me talk about my art, and I showed her dozens of photos of my work, but getting too personal seemed out of her comfort zone.\n\nWe had dessert, Jo ordering three different ones insisting we needed to try them all. I blanched when I caught a glimpse of the bill as Jo was paying. Afterwards we walked together back to the Air-Bnb, laughing and holding each other up against the effects of gravity and alcohol.\n\n\"Well Doran, that was a fun night,\" she said coming out of the bathroom with her damp toothbrush in hand. We'd beaten the rest of the gang back to the house. \"I'd stay up and talk more, but I didn't sleep last night and I have had all the whiskeys,\" she said with a slight slur in her voice. \"Unconsciousness is inimitable. Wait, no, inevitable.\"\n\nShe was wearing a skintight pair of black boxer briefs and a loose, grey men's tank top with ARMY printed on the front, which was way too big for her. It showed an awful lot of skin through the armholes and I struggled to keep my eyes on her face as she spoke.\n\n\"I'm headed that way too, as soon as I brush my teeth,\" I said.\n\n\"Alright, see you in the morning, I'm not waiting up,\" she said through a yawn.\n\nBy the time I got myself ready and crept into the bunkroom, she was out cold on one of the bottom bunks lying on top of the sheets, one hand across her stomach. The blinds were half open and stripes of moonlight were streaming across the middle of her body, illuminating her chest as it slowly rose and fell. I took the opposite bottom bunk and got under the covers.\n\nI lay on my side, watching her for what seemed like forever. After a while, she made a snuffling noise and rolled onto her side towards me. The tank top slipped off her shoulder and exposed the tops of her breasts to me. I stifled a sound and continued to watch her. Even her chest seemed muscled.\n\nAs slowly as I could manage, I pulled up my t-shirt and inched my fingers down into the front of my underwear. I was wet, and I somehow managed not to gasp as I slid my finger over my clit. I knew I would be able to come in less than a minute... which is why it was probably both a good thing and incredibly frustrating to hear the rest of the guys coming into the house, clearly headed straight for bed.\n\nI debated trying to finish quickly, hoping I might be able to stay quiet. But that decision was taken out of my hands, so to speak, when the door creaked open. I closed my eyes and pretended to be asleep.\n\n<br >\"'Night,\" Jack said over his shoulder at the rest of the gang as he came into the bunkroom. After letting his eyes adjust to the dim moonlight, he looked at both of us in the bottom bunks and muttered, \"Well, crap.\" Then he kicked off his shoes, and climbed the ladder into the bunk above mine, shaking the entire bed as he did. I don't think he noticed Jo's state of undress. Or if he did, he had the good manners not to stare. Unlike myself, I thought.\n\nSleep came quickly for Jack. I heard his light snores start soon.\n\nSleep evaded me for a long time.\n\nThe next morning, I woke to find Jo gone, her bed neatly made. Jack was still asleep in the bunk above me. I got up, pulled on some shorts and went out into the kitchen. I could see Sara was out on the front porch with a cup of coffee, so I got myself one from the steaming pot in the kitchen and joined her.\n\n\"You guys have fun on the boardwalk?\" I asked.\n\n\"We did! How about you? Did y-o-o-o-u-u-u have fun?\" she asked, waggling her eyebrows at me.\n\n\"Stop it Sara. I'm trying to be good with Jo. Besides I think she's out of my league anyway. She's like a badass, soldier-woman, rock-star and I'm just a nerdy, computer geek, art chick,\" I said.\n\nJust then Jo turned the corner a few streets down and came jogging toward us at a clip I doubt I'd be able to manage for more than a block. She was wearing a pair of black nylon running shorts, a matching sports bra and some kind of huge running watch. She was covered in sweat and she slowed as she approached the house.\n\n\"Got to get your five miles every day ladies,\" she said, breathing only a little hard and clicking a control on her watch. As she walked past us into the house, she slapped me on the shoulder hard enough that I jumped. She said, \"Glad to see you aren't down for the count with a hangover, Doran.\" As she opened the door and headed inside, I turned and followed her with my eyes. I turned back to find myself totally busted by Sara.\n\n\"S-u-u-u-r-e you're trying to be good,\" she teased me, then stopped smiling. \"Remember Jill. Careful there,\" she said.\n\nI turned back to the street and sipped my coffee, blushing.\n\nThe rest of the day was much like the first day in Cape May. We packed up the bus, got to Rehoboth's festival at ten, set up and the band started their show at noon. Jo had checked out the crowd and felt the band could stick to the normal nineties fare they preferred. She had them kick off their set with One Thing Leads To Another by The Fixx.\n\nWhen I crept in front of the stage to deliver water, I got another 'foot-bump' from Jo while she was jamming to In A Big Country. Apparently, the foot-bump was our thing.\n\nWe were packed up and on the road by three in the afternoon with Jack behind the wheel. Jo was practically bouncing off the walls after the show. She kept trying to goad Steve into a pull-up contest on the handrails running along the ceiling of the bus. Steve had the good sense not to accept her challenge, but apparently Larry did not.\n\nI was absolutely dumbfounded, watching as she easily paced Larry on every one of his pull-ups, talking trash to him the whole time.\n\n\"C'mon Lawrence, watch your form, back straight! Remember, they don't count if your head doesn't bump the roof!\" she said as she slowly and deliberately followed Larry back up on rep sixteen.\n\n\"Jesus Christ!\" he grunted as he fell off the bar.\n\nJo grinned and just hung there from the ceiling. \"C'mon little bro, I'll let you jump in and take up his count. I won't even rest. Let's go!\"\n\n\"Babe, you gonna let your big sis embarrass you like this?\" Sara was laughing at Steve.\n\nSteve groaned and got off the couch, \"Fine, but I'm not betting you anything!\" He jumped up and grabbed the bar.\n\nHe managed ten with Jo mirroring him, then dropped off as well. Jo laughed with delight, did a couple more to rub it in then looked over at me.\n\n\"What about you, Doran? How many you got in you?\"\n\n\"That would be none, thanks,\" I laughed.\n\n\"Johns? Alvarez? Ready to go, ladies?\" Receiving nothing but rueful shakes of heads from Sara and Suzanne, Jo dropped off the bar and stretched her arms.\n\nJack called back from the driver's seat, \"You're just lucky I'm driving Jo!\"\n\nJo grinned ferociously and said, \"No worries, Vance. We'll go when you pull us into OC.\"\n\n\"Damn it!\" Jack joked back.\n\n~~ Ocean City, Maryland ~~\n\nJILL\n\nJo hadn't been lying, our house in Ocean City was truly amazing. It had five bedrooms, three bathrooms and a panoramic view of the ocean from the living areas. A deck was outside the living room with a pool and steps down from the deck right onto the sand of the beach. Out in the sand in front of the house there were four Adirondack chairs and six or seven sections of a huge log cut into stools arranged in a circle around a big fire pit. The house was separated from the water by about a hundred yards of sand.\n\nEveryone had their own bedroom this time, with Steve and Sara, and Suzanne and Larry upstairs and the rest of us on the back part of the house away from the ocean. By the time I got my stuff in my room, and wandered out to the living area the guys were in the kitchen joking around. I saw that Sara, Jo and Suzanne were already sitting in the chairs on the beach watching the ocean so I walked out to join them.\n\n\"Now were living, Doran,\" Jo said and indicated a chair next to her. She had pulled them out of the circle to face the ocean in a line.\n\n\"I can't believe this is like two hours from D.C. and I've never been here,\" I said.\n\n\"Yeah, this is a great beach. I hope the waves die down some tomorrow though,\" Sara said. \"I read that a tropical storm went up the coast off-shore this week and that's why it's so rough.\"\n\nWe sat discussing what we wanted to do with our free time the next few days while we watched the few surfers out braving the waves, which were breaking about six or seven feet high along the shore. Sara wanted to go to shopping, Jo told us about a go-kart place down towards the boardwalk that had ten or eleven different tracks, while Suzanne talked about finding a spa to get a pedicure.\n\nI looked down the beach to the right and saw an empty lifeguard tower several hundred yards away with a big red flag on it.\n\n\"What does the red flag mean?\" I asked, pointing down the beach.\n\n\"It means go in the water at your own risk. The lifeguards aren't on duty after five, so we missed them by half an hour,\" Suzanne said.\n\n\"Tomorrow's show at Secrets is going to be really fun you guys,\" Jo told Sara and me, \"They have a stage directly on the beach on the intercostal waterway side. Everyone gets to dance on the sand.\"\n\nSuzanne nodded in agreement. \"Playing on the big stage there is the closest we get to a full-blown arena show experience.\"\n\n\"That sounds cool. You guys will have to do some long solos so Steve can come down and dance with me,\" Sara said.\n\n\"Ha ha. No one dances to a ten-minute guitar solo,\" Jo replied. \"Besides, I'm not Emerson, Lake and Palmer.\"\n\n\"Who?\" asked Sara.\n\n\"Oh my god I'm old,\" Jo grumped and slumped back in her chair. Then she took on a serious look. \"But what we should really be talking about Johns, is when are you going to make an honest man of my brother. You know, stop living in sin and marry him?\"\n\nSara froze and stared wordlessly back at Jo who burst into laughter.\n\n\"Oh my GOD did you bite hard on that!\" Suzanne said, laughing as well. She exchanged a high-five with Jo.\n\nSara flushed and grinned. \"I suppose I did. It's not MY job to ask HIM you know!\"\n\nJo continued joking with Sara, \"C'mon Johns, we're all liberated women. We don't have to stand for the hidebound traditions of the patriarchy, we can...\" she stopped suddenly and sat bolt upright.\n\n\"What's...\" I started to say but Jo was up and moving faster than I could believe. She had swept off her hat and sunglasses and was sprinting towards the water.\n\n\"Call 9-1-1 and get sea rescue out here!\" She shouted over her shoulder as she accelerated away from us towards the shore.\n\nThe three of us sat frozen for a split-second, then Sara jumped up and ran towards the house yelling, \"I'll get a phone!\" as Suzanne and I sprang to our feet.\n\nWe started running after Jo, but she was easily pulling away from us. She swept past a group of surfers taking a break in the sand at the high tide line, who had their surfboards planted tails first in the beach. Jo barely slowed as she grabbed one of the boards out of the sand and ran into the surf with it as the owner yelled, \"Hey, what the fuck?\" and jumped up to go after her.\n\nJo hesitated a split second to time a six-foot breaker, then dove under the curl of it with the surfboard held out in front of her like a spear. She submerged under the wave, and as it crashed down I saw her come up on the board on the far side of the wave and start to paddle furiously.\n\nThat was when I noticed there was a person bobbing out in the ocean about a hundred yards out past the breakers, way past most of the other surfers. And they were struggling. A red and white surfboard bobbed on the tops of the waves, but it was about thirty yards to the swimmer's left, and was being carried further away from them.\n\nJo was paddling furiously, while Suzanne and I watched helplessly from the edge of the water, the group of surfers gathered around us. The guy protesting about Jo stealing his board had stopped complaining immediately as soon as they had figured out what was going on. I heard his friend murmur, \"I don't know if she's going to make it in time, I think he's about to go under.\" Jo was closing the gap fast.\n\nThe person went under. They came back up, then went down again. Then came up again for a moment and as they started down once more, Jo arrived and coasted to a stop next to them. We watched her slide off to one side of the board, reach across it, grab him by the shoulder of the wet suit and haul him up onto the board. Everyone gave audible noises of relief. It looked like a boy as best as I could tell from the distance, maybe in his mid-teens.\n\nJo steadied the kid on the board and began stroking back to the beach with her left hand, while holding onto the board with her right. It was very slow going. In fact, she wasn't making any progress at all. She was having to hold the kid on the board, and looked like she couldn't get much momentum as the waves battered them around.\n\nJust then Steve and Larry arrived with Sara right on their heels and Jack following some distance behind, talking into his phone. \"What's going on, where's Jo?\" Steve shouted as he got to the shore.\n\nSuzanne pointed out to sea. \"She's out there! That guy was in trouble! She got him on the board, but it looks like it's too rough for her to pull him in!\"\n\n\"Goddamn it!\" Steve swore and kicked off his shoes while tearing off his shirt. Two of the surfers unfroze and ran up to grab their boards. Steve was ready to run into the surf when Larry grabbed his arm. \"Wait, Steve look!\" and pointed.\n\nA red beach patrol Sea-Doo was approaching fast, roaring up from the south, with a ten-foot long yellow float towed behind it bouncing over the waves. The driver was scanning the shoreline, trying to find the location the call had come from. We all started waving and jumping up and down until we got his attention as he zoomed in towards the shore, then we started yelling and pointing out towards Jo. If anything, I thought she and the kid were further out now.\n\nThe lifeguard stood up on his Sea-Doo, and then spotted them. He sat down and gunned the engine and was out to them in seconds. Jo helped the kid onto the float, and then pulled herself up onto it. Painfully, it looked like.\n\nThe driver carefully headed back into shore, as I heard ambulance sirens approaching in the distance. The Sea-Doo approached the beach and the driver paused, looking for a break in the crashing waves. He waited for an opening then gunned it though the breakers, running the craft right up onto the beach. Jo, who had been lying on top of the kid holding him onto the float, rolled off to land with a splat on her back in the wet sand, chest heaving, the surf rolling up to her waist. I rushed in with Steve to help her.\n\nAs we both reached for an arm she yelled, \"Don't! Don't pull, I hurt my shoulder.\" She rolled over and got up to one knee, holding her right arm tight against her body with her left hand while we helped her stand up.\n\nThe kid was still on the float, being tended to by the beach patrol driver. He had blood streaming down his face from a cut in the middle of an egg-sized lump on his forehead.\n\nSteve held Jo carefully, helping her remain upright. She was clearly drained.\n\nSteve pulled back and looked at his sister with concern. \"You okay, sis?\"\n\nJo took a few more deep breaths. \"Yeah, I think so.\" She gently rotated her shoulder and hissed in pain. \"I don't think I tore anything, just wrenched it really bad it going through the first wave and then I had to grit my teeth and paddle.\" She looked over at the kid. \"I saw him wipeout. His board hit him in the head, and I guess his tether broke or came loose because I saw the board shoot away from him. I knew he was fucked.\"\n\n\"Jesus Jo, thank god you were here,\" Steve said and gently hugged her.\n\nThen he pulled away again, grinned and said, \"You know you can't count this towards your record, right?\"\n\n\"Shut up, little brother,\" Jo said, but not unkindly.\n\nShe looked at the rest of us and said, \"I don't know about you guys, but I need dinner, an ice pack and a drink, not necessarily in that order\"\n\nJO\n\nJo sucked in air through her teeth as she shrugged painfully, trying to get the ice pack taped to her shoulder to settle into a more comfortable position. After her ocean adventure, Suzanne had helped her get her wet clothes off, shower and change into dry short and a t-shirt. They had ordered a couple of pizzas from Dough Rollers and had a quiet evening sitting around the living room of the beach house. Everyone seemed a little stunned by the events of the day.\n\n\"Hey Larry, can you freshen this up for me?\" Jo asked, clinking the ice in her empty glass. The boys had made a supply run to pick up the pizza and some ice packs and ace bandages. Jo had handed Steve some bills and asked him to pick up a bottle of Gentleman Jack, Limited Edition, \"The big size!\" She was currently holding out her glass with her left hand so Larry could give her a refill.",
        "\"Sure thing, Jo. You going to be ok tomorrow?\" he said pouring her a couple of fingers of bourbon.\n\n\"Not sure, I'll pull out a guitar in the morning and try to play and we'll just have to see,\" said Jo.\n\nJack walked over and stood in front her.\n\n\"What?\" Jo asked looking up at him.\n\nJack stood silent for a moment then said solemnly, \"Jo, today reminded us all that life is uncertain. We have to live every day like it could be our last.\"\n\n\"Yeah?\" said Jo warily, and then took a slow sip of her drink.\n\n\"So,\" Jack continued, \"I just wanted to say... from the bottom of my heart... I'm ready for our pull-up contest.\"\n\nJo snorted into her drink, then choked, then started cursing while everyone else laughed.\n\n\"God damn it Vance! This whiskey is too good to be going up my nose like that! Fuck, that burns!\"\n\nAfter the laughter died, Steve said, \"If you can't go tomorrow, we can just do the trio thing. It's not like we don't do it on the regular when you're out being a soldier.\"\n\n\"I hope that's not the case,\" Jo said wincing. \"I love playing Secrets. But I should hit the rack soon. I'm wiped out from that little swim and my shoulder is killing me.\"\n\n\"Um, I might be able to help,\" Blue Girl said tentatively.\n\n\"Help with what?\" Jo asked.\n\nSara was nodding. \"Jo, you should let Jill work on your shoulder. She's a miracle worker. She helped me out when I pulled a calf muscle in a 5k last year. She's amazing.\"\n\nBlue looked a little embarrassed, \"I sort of trained briefly as a massage therapist in college. I'm not certified or anything, but I know the basics and I can see if I can loosen up your shoulder if you want.\"\n\n\"Well, I'd shrug, but it would probably make me cry.\" Steve rolled his eyes at her and she grinned. \"So, I'll just say, 'why not?' Where do you want to do it?\" said Jo.\n\n\"Probably with you lying down, so let's go in your room. If I do a good job I'll put you to sleep, especially after the day you've had.\"\n\nEveryone said their goodnights and made their way to their rooms. Blue and Jo's were right next to each other.\n\n\"Let me see what I can find to work with. You go get yourself ready for bed and I'll be there in a second,\" said Blue, and walked into the jack-and-jill bathroom separating Jo's bedroom from hers while pulling her hair into the thick braid she favored for casual moments. Jo soon heard her rummaging through the cabinets.\n\nA few seconds later, Blue, carrying a large beach towel, came into Jo's room to find her sitting on the edge of the bed in the same clothes.\n\n\"Are you going to sleep in that?\" Blue asked.\n\n\"No,\" said Jo. \"I'm not sure I can actually get myself undressed,\" she said sheepishly.\n\n\"Oh! Okay, let me help. What do you want to sleep in?\"\n\n\"Underwear is fine tonight I guess. Here, I guess I can get my shorts off myself. I just think I need help with my t-shirt,\" Jo said as she stood and unbuttoned her cut-offs with her left hand.\n\nBlue turned her eyes away as Jo slid her shorts down, and said, \"Here, let me put this down.\" She spread out the towel onto the bed. \"I couldn't find any good lotion but there was an old bottle of baby oil under the sink. It'll be messy, but it'll work.\" She unwrapped the ace bandages holding the ice pack to Jo's shoulder.\n\n\"Now, you hold up your left arm and I'll get the shirt up over it and then your head. That way we won't have to lift your right arm,\" Blue said, moving behind Jo. She was able to get Jo's shirt off without hurting her shoulder too badly. Jo lay down on the towel in just a plain grey sports bra and matching boy shorts.\n\nJo tried to relax as Blue sat cross-legged on the bed next to her. She poured a tiny bit of the baby oil in her hands and started working it into Jo's shoulder. Her movements were slow and firm, feeling out the muscles in the joint.\n\nAfter a few minutes, Jo asked her, \"So you 'sort of' trained to do this, huh? Feels pretty good.\"\n\n\"I'm glad. Yeah after I came out to my parents and we, um, parted ways, I started looking for a way to pay for college on my own. I thought maybe I could train as a massage therapist and work my way through school like that.\"\n\n\"So, what happened?\"\n\n\"Well, I started doing the math and it was going to take me over a year to get certified and would cost me more than what a semester of college was going to cost, which I should have figured out before I started. But, young and dumb, you know?\" Blue told her. \"Also, the people who would come into the school for $10 massages from the students, were... Let's just say after the second dirty old man groped me, I figured waitressing was a better bet for me, so I quit after two months.\"\n\n\"Ew,\" said Jo, making a face.\n\n\"Exactly, ew. A lot of hairy backs too,\" replied Blue and she shuddered. \"Hey is this one of your favorite running bras? I'm going to need more oil and there's no way I don't stain this.\"\n\n\"No worries,\" said Jo. \"In fact, see my bag over there?\" She looked over at an Army cammo backpack sitting in the corner. \"Get in the front pocket.\"\n\nBlue wiped her hands on the towel under Jo, got up and opened the pocket and said, \"What am I looking for?\"\n\n\"I have a pair of medical scissors in there,\" Jo said. \"Grab 'em.\"\n\n\"Uh, do you mean this?\" Blue exclaimed, holding up a huge black Leatherman tool.\n\n\"No, smaller and silver.\" Blue pulled out a heavy pair of scissors. \"Yeah, that's them,\" said Jo. \"Everyone who works on a medevac chopper has three or four pair of those stashed in pockets all over the place.\"\n\nBlue brought them back to the bed. \"Now what?\" she asked.\n\n\"Just cut it off me. This is an old bra, so I don't care about it and the thought of trying to take it off makes my shoulder hurt worse.\"\n\n\"Um, okay...\" Blue muttered. She sounded nervous.\n\n\"Don't worry, you won't hurt me,\" Jo said, although she didn't think that was why Blue was nervous.\n\nBlue carefully cut both shoulder straps, then up the middle along Jo's back and carefully laid the sides on the bed. Jo lifted up slightly and Blue pulled the scraps of the bra out from under Jo, tossed the fabric in the corner and set the scissors on the nightstand. She poured more of the oil directly onto Jo's back and began working it in around her shoulder, working in silence for several long minutes. Christ that feels good, Jo thought to herself.\n\nAfter a while, she noticed Blue was leaning over her back more than needed for working on her shoulder and Jo chuckled. \"Trying to figure out my tat?\" she asked.\n\n\"Yeah, I am. What is that?\" Blue Girl asked her.\n\nJo's tattoo was on her upper back directly between her shoulder blades. On the left side were seven black two-inch long silhouettes of different shaped helicopters stacked one atop the other, with the noses of them pointing towards her spine. On the right side of her spine, lining up with each shape, was a short string of letters and numbers.\n\n\"Those are all the different models of helicopters I've flown, with the tail number for the first bird in each model that I flew in the command seat.\"\n\nBlue Girl traced the shapes with her finger. \"That's pretty cool. So, tell me what they all are.\"\n\nJo suppressed a shiver at the finger sliding over her back. \"Okay, start at the bottom. The first one is a Hughes MD-500. That was dad's first bird for his company, the one he taught Steve and I to fly on. He still has it, it's the one he uses for power line work. The next one up is a Bell-47.\" She could feel Blue move her finger up and trace the next shape.\n\n\"It looks like a bug or a dragonfly,\" Blue said.\n\n\"It's a really old model, from before Vietnam even,\" Jo said. \"Dad got it at an auction of Army surplus stuff. It wasn't flyable when he bought it and he had to drive it from Texas to Virginia on a trailer. Steve and I helped him restore it. It took us more than three years.\"\n\nBlue slid her finger to the next one and Jo suppressed a sigh. \"Then there's a Bell 207 Ranger. That was the first passenger bird my dad got for his company. I got to fly it a bit in high school. The next two are a Bell TH-67 Creek, and then a Bell OH-58 Kiowa. Those are what you fly through the different levels of the flight-training program in the Army. Second to last is a Bell-427. That's what Steve flies now for our passenger business. We have three of them.\"\n\n\"And this top one?\" Blue asked her.\n\n\"That's the Sikorsky Blackhawk, what I fly now. It's the UH-60M.\"\n\n\"All those numbers. Do they mean anything?\" asked Blue.\n\n\"UH-60 is the just the designator for the Blackhawk, and the 'M' is the variant. The M is a newer model, we have glass displays instead of dials and all kinds of electronics.\"\n\n\"Is it complicated to fly?\" Blue asked.\n\n\"I guess one way to answer that would be that if my dad's Bell-47 was the Wright Brother's plane, his MD-500 would be a Lear jet and the Blackhawk would be the space shuttle.\"\n\n\"Wow,\" said Blue, sounding impressed. She went back to Jo's shoulder. \"I'm going to manipulate the joint a little. Try to relax and let me do all the work.\" She gently lifted Jo's arm and slowly rotated it back and forth. \"Well, I'm not a doctor or physical therapist, but the movement feels okay and you don't seem to be having as much pain now.\"\n\n\"It's definitely feeling better. Johns was right, you're good at this.\" Jo sighed, and closed her eyes. She felt Blue Girl swing a leg over her body and settle her weight onto Jo's butt. She started working her hands over the muscles in Jo's back.\n\n\"My shoulder bone is connected to my back bones?\"\n\n\"No. Well, yes actually. But you know, as long as we're here, I told you I'd try to put you to sleep. You saved that kid's life today, you deserve some special treatment,\" said Blue. She worked over to the other shoulder and then slowly down Jo's back. \"So, what did Steve mean when he said you couldn't add today to your record? What record was he talking about?\" Blue asked.\n\n\"Uh... well...\" Jo sounded hesitant. \"It's not a thing. I mean, it's a thing, but I don't talk about it. I mean, other people talk about it. Steve likes to talk about it. I don't.\"\n\n\"Oh, come on, now you have to tell me,\" Blue insisted. \"Tell me or I'll turn this into tickling!\" She lightly ran her fingertips over Jo's ribs.\n\n\"Ack, no! I hate being tickled, okay, okay!\n\nShe paused for a long time, long enough that Blue gently poked a finger in her side. Jo flinched. \"Okay... okay,\" she said again. She sounded embarrassed. \"So, it was my second tour in Afghanistan and my first tour as PIC, we were really in the shit back then.\"\n\n\"What's a PIC?\" Blue asked.\n\n\"Sorry, pilot-in-charge. Basically, it means the aircraft commander. There are two pilots, but one is the boss. In 2011 we had almost a hundred thousand guys on the ground. My unit was flying all day and night, picking up wounded, flying to the combat hospitals, refueling, grabbing a sandwich and going back out.\"\n\nBlue had resumed gently massaging her back. Jesus her hands are like magic, Jo thought.\n\n\"Anyway, I've never flown as many flight hours as I did that tour. I got almost eleven hundred just that year alone. Some of the aircrews started keeping track of how many rescues under fire each aircrew in our squadron had.\"\n\n\"What does that mean, 'rescues under fire'?\" Blue asked.\n\n\"It meant med-evac'ed a casualty, and were taking enemy fire while on the ground or while landing or taking off. It was a pretty morbid game actually. At first, we just took everyone's word for it, but after a while it got serious and no one would count it unless you had at least one bullet hole somewhere on your bird for your crew chief to patch.\"\n\n\"Jesus...\" Blue muttered.\n\n\"Yeah, we talked to him a lot that year,\" Jo said wryly. \"Anyways, when we came back I was at the top of the leaderboard. I had sixty-seven. It's not like I was trying to win or anything. It's luck of the draw. Or bad luck of the draw. However you want to look at it. My crew chief didn't give a fuck about that record. He was only concerned with counting the holes he had to patch up on my bird. I think I got to over a hundred and fifty or so that year. Anyway, as far as I know my unit record still stands. Of course, we don't have nearly that many troops in-country now.\"\n\n\"Jesus,\" Blue said again. \"Don't you get scared? Getting shot at like that?\" Blue sounded subdued.\n\n\"Not really. Your training takes over when you're in it. I mean the only scary bit for me is when you're orbiting the area getting ready to make the approach. The ground forces are giving you a sitrep and\u2014\"\n\n\"Sitrep?\" interrupted Blue.\n\n\"Sorry, situation report. Man, you really can't talk about Army stuff without using a shit-ton of incomprehensible jargon, I forget everyone else has no idea what I'm talking about,\" Jo said.\n\n\"It's okay,\" Blue said, \"I'm learning. Go on.\"\n\n\"Anyway, the ground forces are reporting on how heavy the action is near the LZ, sorry, landing zone, if they are being fired on, where it's coming from, how many casualties you're going in to pick up, how serious their injuries are, what's the wind direction and speed. You're scanning the terrain, evaluating the approach, watching hilltops for muzzle flashes. Sometimes you're listening to how desperate the guy on the ground sounds over the radio.\"\n\nShe continued, \"It's the aircraft commander's final call on whether to go in or abort. You can abort your landing if you feel it's too hot to get in and out safely. The only times I really got scared was when I was deciding on a go/no-go call. My fear was always over the choice between taking my aircrew into the soup and maybe losing one or all of my crew versus not being able to get our guys out who were wounded and needed evac. But once we make the go/no-go call, and started lining up the approach, I just go into pilot mode and everything else goes away.\"\n\nBlue had worked her way down to Jo's lower back now. \"Did you ever lose anyone on your crew?\"\n\n\"Not killed,\" Jo said quietly. \"I had a number of my guys catch a round. Some superficial, some... not. One of my door gunners that year in 2011 caught one through the chest. The round missed the strike plate in his vest somehow. I got him to the hospital at the FOB in time for them to stabilize him and airlift him to Bagram and he pulled through. He got a medical retirement.\"\n\nThey both fell into silence, Blue gently working Jo's muscles. After a while she moved to sit cross-legged on the bed next to Jo's legs. She gently bent Jo's right leg at the knee and started working on her foot.\n\nJo groaned. \"Can I pay you to come to Afghanistan and do this to me every day?\"\n\nBlue chuckled. \"I'll do this every time you save someone's life, deal?\"\n\n\"Sold,\" Jo sighed.\n\nBlue worked up Jo's legs, and slid up and straddled Jo's right calf, while digging her thumbs into Jo's hip. When Blue slid the fingers of her hand underneath the side of the hip where her leg met her body and pressed her thumb into a knot in her hip, Jo moaned and whispered \"God, Blue Girl, that feels so good...\"\n\n\"What did you say?\" Blue's hands stopped moving.\n\nJo stiffened and opened her eyes. She hadn't realized she'd actually spoken. \"Uh, nothing...\"\n\n\"You called me Blue Girl,\" she said.\n\nJo could feel herself face heating up. She stammered, \"Uh, s-sorry. I'm sorry. I didn't mean to say that out loud. It's just... it's... what I've been calling you in my head. Sorry.\"\n\nBlue paused a moment longer, then said, \"I like it,\" as she resumed slowly working Jo's hip. Jo moaned again. \"I like it a lot. It's better than 'Doran' for sure.\"\n\nJo slowly relaxed again as Blue returned to working on her. \"You're hitting the edge of the envelope Collins,\" her Little Voice told her, but she chose to ignore it.\n\nThe silence deepened between them as Blue worked on Jo's thigh, broken only by the appreciative sighs Jo was making. Blue approached the curve of Jo's behind, and backed off. Then approached and backed off again, working slowly. Her fingers continued to brush the edge of the fabric of Jo's underwear where her legs started to curve up into her buttocks. Jo sensed Blue was considering her next move.\n\n\"If you're stopping because of me... please don't... stop that is,\" Jo said softly. Blue's next stroke up her leg went under the edge of her briefs and she started to knead her fingers into the muscles of Jo's behind. Jo slightly arched her hips off the bed.\n\nBlue continued working her magic. A couple of times the elastic of Jo's underwear caught on the ring Blue wore on her index finger and snapped faintly. After the third time it happened, Jo turned her head to look back at Blue.\n\n\"What?\" Blue asked her.\n\nJo reached over to the nightstand, picked up the scissors and held them out to her, looking into her eyes.\n\n\"What are you doing Collins?\" Little Voice asked.\n\nShut it, Jo thought back.\n\nBlue stared back at her for a moment. \"Are you sure?\" she whispered.\n\n\"Aren't you?\" Jo replied.\n\nBlue took the scissors out of Jo's hand. Jo laid her head back down, and sighed as Blue cut up the sides of her briefs on one side of her hips, and then the other. The fabric clung briefly in between Jo's legs as Blue pulled them out from under her. The crotch was visibly damp.\n\nBlue tossed the scrap after the sports bra, replaced the scissors on the nightstand, then her hands found their way back to Jo and started working on the muscles again, the edges of her fingers sliding through the cleft of her ass.\n\nJo was not quite writhing, but neither was she lying still as Blue slid her hands over Jo's body. Her hips kept rising to meet Blue's motions. Blue kept stroking and massaging her for... it seemed like forever.\n\nThen she felt Blue's hand under her knee, slowly but firmly sliding it up the bed, spreading her leg out and exposing her to the cool air of the bedroom. Blue slid her right hand underneath Jo, gently cupping her sex. Jo was drenched and Blue's fingers easily parted her lips. She moaned loudly as Blue's fingers slid over her clit.\n\nJo started rocking her hips against Blue's hand, making small sounds. Blue hadn't stopped kneading the muscles in her ass with her left hand. After a moment, she turned her right hand over and slid two of her fingers into Jo like she was made of liquid. Jo bit down hard on the pillow under her face.\n\nBlue started rhythmically curling her fingertips on Jo's g-spot. It took almost no time for her to approach her orgasm, but Blue sensed it and stopped moving her fingers, pressing down on the sensitive area and holding still as Jo whimpered and receded from the edge. Blue started curling her fingers again, once more bringing Jo to the edge, then paused, then started again.\n\n\"Jesus, Blue, you're going to kill me,\" Jo whispered as her body quivered, demanding release.\n\nBlue brought her to the brink once more, held her there and said, \"Call me that again.\"\n\n\"Blue Girl,\" Jo whispered. Blue slowly, deliberately stroked her and then stopped.\n\n\"Say it again,\" Blue said, lightly curling her fingers.\n\n\"Please... Blue, please,\" Jo begged.\n\nBlue took her left hand off Jo's ass and reached under her to rub her clit. She leaned down and whispered in Jo's ear, \"Who am I?\"\n\n\"Blue Girl!\" Jo said, her voice full of need.\n\nBlue sped up the fingers stroking Jo's g-spot. Jo jerked, then tensed, and held her breath for several long seconds... then her orgasm crashed over her like the wave she'd dove through that afternoon. Her whole body started quivering, then shaking violently, and then every muscle in her body froze as she reached down and grabbed the wrist of Blue's hand on her clit in a vice-like grip, gasping frantically.\n\nBlue kept moving her other hand, stroking Jo through her orgasm until finally her body started to unclench.\n\n\"Holy shit,\" gasped Jo. \"Holy shit... that was... Blue Girl, that was amazing.\" As she started to turn over and reach for her, Blue gently but firmly put a hand on her back holding her down on her stomach. Jo stopped and looked over her shoulder at Blue, confused.",
        "\"But I want\u2014\" Jo started but was interrupted by Blue.\n\n\"Nope. Tonight, it's all about you. You stay there.\" She started working on Jo's lower back again, working on the tension that had built back up during her orgasm. Jo could feel the wetness on Blue's hands and knew it came from herself, rather than oil.\n\n\"Seriously?\" asked Jo, \"You're going to do that to me and then not let me get my hands on you?\"\n\n\"Seriously,\" said Blue \"I said I was going to relax you and put you to sleep and that's what we're doing.\" She moved up and straddled Jo's waist and started working on her neck and shoulder again. Jo could feel the heat from between Blue's legs on her lower back. She briefly felt Blue's right hand leave her skin. She heard a quiet smacking sound and she guessed Blue had just tasted the juices off of her fingers.\n\n\"This is crazy,\" Jo said and relaxed under Blue's hands. \"You have the aircraft, I guess,\" she murmured.\n\nIt turned out Blue was completely serious. She continued her ministrations, turning Jo into a puddle. Between her exertions in the ocean that afternoon, and coming down off of the climax Blue had just given her, she was soon drifting off.\n\nShe was vaguely aware of Blue reaching over her to turn off the lamp on the nightstand and pulling the sheet up to cover her naked body.\n\n\"Good night,\" Blue whispered in her ear. She paused to smell Jo's hair and then kissed her gently on the cheek. Then she got up and walked back through the jack-and-jill bathroom to her own bed.\n\n\"You may be in trouble Collins,\" Little Voice said.\n\nShe couldn't argue, she thought, as sleep claimed her.\n\nJILL\n\nI woke to delicious thoughts of what I'd done to Jo last night. Rolling over onto my back and staring at the ceiling, I allowed myself a few moments to revel in the memory of her body under my hands. There was no doubt that I had never been with a woman (or a man!) with a body like hers. Touching her had been... exhilarating.\n\nI wondered how much trouble I was stepping in, though. Sara was right, I really wasn't a one-night-stand kind of girl. And she said Jo could be a player. And yet I made a move on her. And she was going back to the Army after this trip. And she was so...interesting. And sexy. And I could totally see myself falling hard for her. And. And. And.\n\nStill, I had told Sara (and myself) that I wanted to hook up with someone on the tour, kind of a moving-on experience from my ex-girlfriend Laura. I hadn't thought I would have done anything quite like last night though. It was one of the reasons I hadn't let Jo do anything with me last night and hadn't stayed the night in her bed.\n\nFinally, I sat up and threw the covers back. As my feet touched the floor, I noticed a post-in note stuck to the lampshade on my bedside table with the word \"KITCHEN\" written on it in black Sharpie.\n\nI knew we weren't going to head to Secrets to set up for tonight's show until late in the afternoon, so I pulled on one of the bathing suits I had brought. It was a simple navy blue one piece, and I threw on a pair of shorts and a t-shirt over it.\n\nOut in the living area, no one else seemed to be up yet. I found two empty coffee mugs next to a fresh pot of coffee with another post-it note that said \"FILL THESE -- BEACH.\" I snorted. One of the mugs already had a helping of sugar in the bottom. I filled the mugs, added cream and sugar to the empty one I assumed was for me, and took them out on the deck.\n\nIt was a glorious morning, pleasantly warm, yet not too hot as the sun was only an hour up from the horizon. I looked around and didn't see anyone from our group, so I went down the steps from the deck to the sand and started walking out towards the water.\n\nI stopped at the high tide line sipping at my coffee, the events from yesterday running through my head. I could still see the big gouge in the sand where Jo had snatched up the surfboard before she had plunged into the waves. I looked at the surf, then back at the chairs in front of the beach house, then back out at the waves. I couldn't for the life of me figure out how Jo had even seen that kid wipeout from back there. And she had reacted so fast. She was out of her chair before I could say a word. When I'd told Sara, I thought Jo was a badass woman, I think I had undersold it.\n\nI sat down on the sand, and put the other coffee mug on the sand next to me. I could get used to the beach. It wasn't quite hot enough yet for swimming, so there were few people out, just some joggers and an old man with a metal detector. I was sitting with my eyes closed listening to the crash of the waves when I heard Jo's voice say, \"You're not still asleep, are you Blue Girl?\"\n\nI shivered at hearing that name from her lips, and opened my eyes to see her standing on the sand in front of me, dressed in the same running outfit as the day before, but barefoot. \"Hey. How's your shoulder? Should you be running with it?\"\n\nShe picked up the other coffee mug from the sand and plopped down next to me. \"It feels a little tender but still way better than last night, for which I have you to thank. I think I should be fine to play tonight.\" She took a sip of her coffee as she checked her running watch. \"Ten-minute miles today, I was taking it easy just to be safe.\"\n\n\"But my shoulder isn't all I have to thank you for last night, right Blue?\" she said, turning and looking at me. \"I was surprised you left.\"\n\n\"Yeah, about that...\" I said.\n\n\"It's ok. You don't have to explain,\" she said.\n\n\"No, I want to,\" I said. \"I don't... I'm not...\"\n\n\"You're not a one-night stand girl?\" she finished for me.\n\n\"Yes. No. I don't know. Listen, I had a really bad breakup a while ago, but I'm ready to be over it. I mean, I am over it. I told Sara I was going to try and find someone just for make-outs on the trip, but I wasn't thinking it would be full-blown sex. I was thinking it would be some rando in a beach town, we'd make out at a show and I'd never see them again. I wasn't thinking it could be Steve's sister. And I wasn't thinking...\" I stopped.\n\n\"Wasn't thinking what, Blue?\" she asked.\n\n\"God, I like it when you call me that. I wasn't thinking it would be someone I've connected with so strongly, so fast. I'm not saying I've fallen for you or something!\" I rushed out as I saw apprehension cross her face. \"I'm just saying... well, I don't know if you feel it too, but I think there is a... something between us that could go somewhere. And I'm not sure if it's a something you might be interested in exploring. Or not. But if not, I don't know if I could just jump in bed with you for one night and then blow it off forever. And if you are interested, I know you have to go back to the Army and you said you're deploying again soon and I don't even know what that would mean. And also I realize this is all really stupid for me to be saying after what I did to you last night, but all this is the reason I was scared to let you touch me and why I went back to my bed and had to make myself come three times before I could fall asleep, and please would you interrupt me or something, I can't stop running my stupid mouth.\"\n\nShe just stared at me.\n\n\"Ok, that was a lot. I'm being dumb. It was a lot. We've known each other for two days. I'm sorry, can we forget I said anything? I'm gonna go.\" I started to get up, but she grasped my elbow and kept me from rising.\n\n\"Blue,\" she sighed, \"You're not being dumb. Listen, I don't talk about my mom. Like ever. I haven't spoken about her to anyone but dad and Steve for probably five years. Then you and I talk over a beer for five minutes and I'm spilling my guts about music nights, and how it's because of mom that I'm so close to Steve, and mom this, and mom that.\"\n\nShe looked away, out to the ocean and sipped her coffee.\n\n\"So, no, you aren't crazy, I felt a click too. I can... I can tell you things, and I'm not sure why.\"\n\nMy heart was drumming in my chest.\n\n\"But I want to be up front. I don't go on deployment with attachments. Ever. It's a hard rule for me. When I'm over there, I have to be focused or people could die. And I like you and I'd be interested, but...\" she trailed off. I just waited. She was staring at the ocean, not looking at me.\n\nEventually she said, \"You're trying to be straight with me, so I'll be straight with you. I'm the worst at relationships, Blue. I mean, really the worst. I haven't dated anyone longer than a few months in the last eight years. And even the ones that lasted months, it was just fucking. Or worse, it was just fucking for me, even when it wasn't for them. But I really like you. And if I weren't deploying and you didn't live in D.C. and I didn't live in North Carolina...\" she trailed of again.\n\n\"Ok. I mean, I understand all that,\" I said softly.\n\n\"So, I'm telling you that if, after hearing how I'm the literal worst person to date, you want to just hang out and be gal-pals for the trip, I understand and I'm in. Because I'd like not to hurt you. Or, if you want to have a make-out partner for the trip, hands above the clothes high-school style, I'm down for that. If you want to have a torrid affair for two weeks and let me do to you every night what you did to me last night, then kiss me goodbye at the train station, I'm there. If you want to be my email pal while I'm overseas, I don't mind having someone to stay in touch with.\"\n\nShe finally turned and looked at me, staring unblinking into my eyes. \"But I promise you this Blue, whatever happens between us, it'll end when I leave to go back to Bragg. It has to. I can't do it otherwise. So, I leave it entirely up to you what you want to do.\"\n\nWe said nothing for a while, just listening to the waves rolling up on to the sand in front of us. Then I said, \"That might be the most honest anyone's ever been with me.\"\n\nShe rubbed her neck. \"I'll be more honest, if we hadn't clicked so hard, it's not out of the question I'd have just said whatever I needed to get you in bed then left anyway.\" She looked embarrassed. \"I'm not kidding when I say I'm the absolute worst person to date.\"\n\n\"Well... why don't we just start with the gal-pals option and see if maybe we progress to the make-outs later. I think we've already proven we're good at just having fun together, and this trip's supposed to be fun, right?\"\n\n\"And last night?\" She grinned at me.\n\nI turned red. \"Last night... I guess we'll just chalk up that extremely out of character event to me rewarding you for your heroic actions on this here beach yesterday.\"\n\nShe set down her coffee mug in the sand, stood up and brushed off her shorts then held out her hand. \"Deal, Blue Girl.\"\n\nI took her hand and smiled up at her and said, \"Deal.\"\n\n\"So, let's start with the having of the fun right now!\" she exclaimed. She easily pulled me up to my feet and in one motion bent down, threw me over her shoulder and turned around and ran into the ocean.\n\n\"Eep!\" I screamed, laughing as she dunked us both into the waves. \"Oh my God, it's so cold!\"\n\n~~ Secrets Ocean Bar, Ocean City, Maryland ~~\n\nJILL\n\nI was impressed by Secrets. This was going to be a different show for The Rotors than I was used to. The club was on the beach, but on the intercostal side of the barrier island that was Ocean City, so there were no crashing waves, just lapping ripples. There were literally tables in the water so you could stand hip deep while having drinks. The stage was a real permanent stage too, with a huge light array hanging over it. Jack was like a kid on Christmas morning with all the controls and effects he would have to play with for the show.\n\nSteve was pumped up too. \"This venue is the closest we come to playing like real rock stars. We're going to play a lot of stuff we might not play for a normal show,\" he told Sara and me.\n\n\"I'm going to have to work up a rough set list ahead of time tonight so Jack'll know what's coming,\" Jo said. \"Any requests?\"\n\n\"I'd like to do my Pink song tonight,\" said Suzanne.\n\n\"Sold,\" said Jo. She looked over and made finger guns at me. \"First song's for you tonight Blue, since you fixed up my shoulder so I can rock. I have one in mind I think you'll like.\" She went over to talk to Jack about a set list.\n\n\"Blue?\" Sara mouthed at me, arching an eyebrow. I shook my head at her and mouthed, \"Later.\"\n\nSecrets had taken a couple of boxes of t-shirts from us and had their staff selling them at the souvenir counter, so Sara and I were going to be able to just enjoy the show. I joined Jo in her traditional Corona with two limes before the show at the bar, then the band got ready to take the stage right as the sun was settling below the horizon.\n\nSara asked me \"So what's this 'Blue' thing?\"\n\n\"Apparently she'd been calling me 'Blue Girl' in her head and it just slipped out last night. I told her I liked it better than Doran, and she's been calling me that all day. I'm happy to let her.\"\n\n\"And what were you doing when this 'just slipped out'?\" she asked.\n\n\"Sara, I was working on her shoulder last night for like an hour and a half. You know how good I am at that. It's perfectly innocent.\"\n\n\"Mm-hmm.\" She didn't seem convinced. \"She said the first song is for you tonight. What do you think it'll be?\"\n\n\"I don't know. I told her Friday night that she could play the entire set list from the Captain Marvel movie and I'd be thrilled so maybe something from that.\"\n\nThe crowd cheered as the house lights dimmed. Normally the band just walked out, said hello and started playing. Tonight, I could see them coming out and taking their places on the darkened stage.\n\nJack's voice rang out over the PA system, startling me as he intoned, \"Ladies and gentlemen, The Rotors.\"\n\nThe stage lights lit up over Jo, the overhead lights entirely blue, throwing ghostly shadows over her. She was in her jeans, high tops and Rotors cap again. Tonight, she had on another sleeveless t-shirt, this one all black, with a yellow lightning bolt down the front. Ms. Marvel style, before Carol got promoted, she'd told me. Her white hat fairly glowed in the blue light and the bill bathed her entire face in shadow, making her look slightly ethereal.\n\nThe hollow notes of Nirvana rolled out over the crowd, who started whooping. After the first bar, the lights over Suzanne and Larry lit up and the drums and bass joined in, then a blue spotlight illuminated Steve at his mic and he was rasping to the crowd.\n\nCome, as you are, as you were, as I w-a-a-a-n-t you to be.\n\nAs a friend, as a friend, as a k-n-o-o-o-w-n enemy.\n\nSara leaned over to me. \"Woo-boy, Steve wasn't kidding. They look like rock stars,\" she gushed.\n\nI just nodded. We had a space pretty close to the stage. I couldn't make out most of Jo's face under the shadows from the bill of her hat, but I felt certain she was staring at me most of the song. She had a clear plastic cylinder on the pinkie of her left hand, and she used it as a slide for the solo, coaxing the notes out. They totally did look like rock stars.\n\nAfter the first song, Jack brought up more lights, so the crowd could more easily see the band, and I could see Jo's face. She winked at me when she caught my eye, and plucked at the Ms. Marvel lightning bolt on her shirt. Then Larry gave a violent roll on his snare and Jo started the jangling opening chords to Come Down, by Toad the Wet Sprocket. This was going to be a good night.\n\nAn hour and a half later, Sara and I joined Jack and the band backstage for their set break. I had a bucket of Corona's ready, having decided that it was going to be my regular role every show. Refreshment girl to the rescue.\n\nSara was being extra flirty with Steve, holding his arm as they talked.\n\n\"I think Sara is excited about having a big, strong rock and roll boyfriend,\" I teased.\n\nShe didn't even blush, just said \"Hell yeah, my man is hawt tonight!\"\n\n\"Oh, then I think Sara needs to see what Steve can really do!\" Jo said, grinning. She turned to Jack and said, \"We're opening the second set with Candlebox.\"\n\n\"Wait, really? Shit, come on Jo,\" Steve said. \"I haven't done that in years.\"\n\n\"Steve did this performance at a show we did years back that had panties flying off all the coeds. This'll be worth it.\" Jo was snickering. \"But Steve, I want the full effort on this,\" she said pointing at him. \"Don't phone it in. Your girl will be right there watching.\"\n\nSara was clearly into whatever was coming, running her fingers through Steve's hair, so he grinned at Sara.\n\n\"Alright, you're getting the full Steve Collins babe.\" He turned to Suzanne. \"You'll probably need to do one or two songs after this so my throat can recover.\"\n\nLarry cocked an eyebrow at him. \"You're just going to sing a song, right dude?\" earning a big laugh from everyone.\n\nThe band came back on stage much the same way they started the first set, under the blue lights. This time, Jo and Suzanne started in the back, flanking Larry's drum kit while Steve was up front by himself. Jo started picking out a slow, haunting, echoing intro on her guitar. After the second bar, Steve came in on the vocal as a white spotlight hit him.\n\nNow maybe I didn't mean to treat you bad, but I did it anyway\n\nSuzanne started a deep, simple bass line while Larry came in behind her in a slow rhythm.\n\nSteve grasped the mic in both hands, his Les Paul hanging untouched from its strap around him. He sang with his eyes closed, with more feeling than usual. Jo slowly walked up to her pedals as he sang, and when the chorus came she ramped up her distortion. The chords took on an urgent tone and Steve's voice changed. He poured emotion into the mic, the words coming loud, wild and raw.\n\nNow maybe I didn't mean to treat you oh so bad, but I did it anyway!\n\nNow maybe some would say you're left with what you had, but you couldn't share the pain!<br >Oh, No, no, n-o-o-o-o!\n\nHe went back to his soulful voice for the next stanza, glancing out at Sara then closing his eyes again, still cradling the mic with both hands.\n\nWhen he reached the end of the chorus the second time around, I expected Jo to solo, but she just kept up the rhythm and to both my and Sara's surprise, Steve grabbed up his Les Paul and went into an emotional, rocking solo, coming out from the mic to the edge of the stage. His technique was markedly different from Jo's. Jo wore her guitar high, above her waist, and her movements were energetic, but precise, like a technician or a surgeon. Steve slung his low, almost below his belt and played wildly, with a lot of body motion, like he was in a fight with his guitar. He wandered away from the mic, to the edge of the stage, and knelt on one knee holding his guitar out from his body, looking out at Sara as if he was playing just for her.\n\nComing out of the solo, he skipped back to the mic and kept hammering the chords with Jo, the guitars and Steve's raw voice thundering out across the water behind the crowd as he closed out the song.\n\nBut you left me far behind!\n\nLeft me far behind!\n\nLeft me far behi-yi-yi-yind!\n\nAs the song ended and the crowd gave the band a huge round of applause, Sara looked flushed. She turned to me and dramatically flapped both hands waving air at her face and said in an affected southern drawl \"Why I do declare, I need to take my man to bed right now.\" I laughed and hugged her.\n\n\"You've got a keeper there, girl,\" I agreed.\n\nTrue to his prediction, Steve looked a little drained after all the emotion he'd poured into the song, so Suzanne sang one of her favorites, Don't Let Me Get Me, by Pink. Her performance was over the top as well. The entire band was feeling it tonight.\n\n~~ Ocean City Beach House ~~\n\nBack at the beach house, Sara unceremoniously dragged Steve up to their room the second we walked in the door.",
        "\"I guess we won't be seeing them again tonight,\" Larry said with a chuckle.\n\n\"Anyone want to hit that dive bar down the block?\" Jack asked.\n\n\"Not us,\" Suzanne said. \"Early show on the boardwalk tomorrow. I think we'll hit the hay too, although maybe not as hard as Steve and Sara.\"\n\n\"Yeah, I'll pass Jack. Tomorrow night is the beach jam, so I don't think I want to do any boozing tonight,\" Jo said.\n\n\"Suit yourselves!\" he said on the way out the door, leaving Jo and me alone in the living room.\n\nI looked around. \"This keeps happening.\" I smiled at her.\n\n\"Yes, it does,\" she said. \"Are you going to head to bed too?\"\n\n\"I don't know, what did you have in mind?\"\n\n\"We could hit the pool. Or walk down the beach. I always like beaches in the dark,\" she suggested.\n\n\"I could do a walk.\"\n\nWe left our shoes on the deck and headed north along the beach back towards Delaware. There were fewer lights that direction, and we walked in companionable silence up the shore.\n\n\"That was a great show tonight,\" I said after a while, \"Nothing like one of your bar shows, it was really like a rock concert.\"\n\n\"Yeah, Secrets is always the highlight of the tour. We won't do anything quite like that the rest of the way. Sometimes I think we should start in the Outer Banks and head this way so we can finish here instead of having this show as one of the first ones.\"\n\n\"I like your shows no matter where they are. Although, seeing Steve perform like that tonight was an eye opener.\"\n\n\"Yeah, my little brother can bring it.\"\n\nWe walked a bit further before deciding to turn back.\n\n\"I hope I didn't have too much of a freak-out this morning,\" I said, after a while.\n\n\"You didn't. I hope I'm not too much of a shitty, philandering wench for you.\"\n\n\"You know, I wish you wouldn't talk about yourself like that. Maybe you just haven't found the right person, or you had a right person but it was the wrong time of your life.\"\n\n\"For eight years?\" she scoffed. \"It's fine. I know I'm a mile of bad road.\"\n\n\"Ok, so tell me about this rule you have, no attachments, when you go overseas,\" I asked her.\n\n\"Oh Blue, that's a minefield. \"I'm not sure you and I are there yet.\"\n\n\"Okay. Sorry.\" We walked another hundred yards, and then she sighed.\n\n\"I had a girlfriend, Amy, when I went over in 2011. When I came back I was so happy to have made it through the year without getting shot down or something. When I got back I was...well, let's just say I was going to propose to her, even though it wasn't legal in North Carolina for a few more years. The proposal went...badly. And we broke up.\n\n\"A year later, and I was getting ready to go back again, and she came back wanting to get back together right before we deployed.\" She stopped walking \"Christ, I don't understand why I end up telling you this shit, I haven't talked about this in forever.\"\n\nI took her hand in mine, and pulled her along with me. I said, \"You don't have to tell me anything you don't want to. But you sound like you've had some stuff on your chest for a long time without anyone to offload it to. If nothing else, I can do that for you.\"\n\nShe was silent for a long while then said, \"When I went back over after we got back together, it was maybe my worst tour. I spent all my free time writing email after email, trying to get all the time on video chat with Amy that I could. I was worried if I didn't make the maximum effort to stay close to her while I was over there, that it would end up like the first time. In the meanwhile, I was making all kinds of mistakes.\"\n\n\"Mistakes like what?\" I asked.\n\n\"Just sloppy mistakes. The worst was when I was trying to get to a platoon that needed an emergency ex-fil, and I flared my bird too late and made a hard landing. Busted the undercarriage of my Blackhawk and it was out of service for a week. My crew chief was so pissed at me. I guess I can't say any mistake I made caused any deaths or injuries, but it's really a miracle that's the case.\"\n\n\"Ok, so you made mistakes, but you just said no one died and you came home, right?\"\n\n\"Right, but that was just luck,\" she said and then pulled her hand away from me. Her tone turned bitter. \"And then when I got back, Amy had been fucking around on me the entire year. With a guy. When I came back I thought we were moving in together, but instead she told me to my face about her banging some dude.\"\n\n\"Jesus,\" I said.\n\n\"Yeah. So now, I'm not ever going to take a chance that some woman is going to make a fool of me while I'm over there screwing up because I'm pining away for her. If I were some supply sergeant or something, that'd be one thing. But every time I'm up there I'm responsible for a dozen people or more in the back of my bird. And that's more important.\"\n\nI just looked at her.\n\n\"What?\" she snapped.\n\n\"You've lived with this a long time, and you've known me for a weekend. I'm not sure you're in a place to appreciate anything I tell you,\" I said.\n\nShe softened, but just a degree. \"Sorry, I know I get salty when I'm like this. So, tell me what you were thinking. Please.\"\n\n\"I think two things. The first is, by your own rules you're condemning yourself to living alone as least as long as you're in the Army. You could always get deployed while you're serving and if you have to break up with anyone you're dating any time you leave, then you can never, ever have a relationship that will last, as long as you're still in. That's... Jo, that's a lonely life.\"\n\nShe didn't say anything, waiting for me to continue.\n\n\"You know that though. It's your life, your call, and you're the one who has to do what is right for yourself, but that sounds like you're choosing to be shut off from finding someone who could make you happy.\"\n\nShe huffed and squared her shoulders. \"I know, I think about that fact a lot. So, second?\"\n\n\"What?\" I said\n\n\"You said two things. What's the second?\"\n\n\"Oh, the second is that I think your main problem was you got involved with someone who was obviously a psycho, crazy, bitch lady.\"\n\nShe snorted, then started giggling, then stepped in and wrapped me in a tight hug.\n\n\"I mean, that's just my opinion,\" I said hugging her back. The top of her head was against my cheek and I could smell her hair. She had a clean, fresh soap smell.\n\n\"Thanks Blue. I appreciate it.\" She pulled back. \"Maintaining this morning's earlier honesty though, this talk isn't some big breakthrough for me. I meant what I said. At the end of this trip, I'm out. I'm not ready to throw eight years of this rule out the window yet.\"\n\n\"I wouldn't expect otherwise,\" I said.\n\nI reached out for her hand again and she let me take it. So, I reached out the other, and took that one too. Her hands weren't soft like any woman's I'd ever held. She had callouses on every finger, from playing guitar I supposed. But her hands were just... strong, as she gripped my fingers. She looked at me, and the dim lights from across the beach glittered in her eyes. I leaned my head down and she lifted her chin as I stepped nearer and we kissed. Her lips were as soft as her fingers were rough. I leaned into it, my mouth parting. I couldn't tell whose tongue reached out first, but we were both eager. The waves were crashing next to us as time stretched out. Finally, she pulled away from me, as I leaned toward her, trying not to let her break the kiss.\n\n\"Wow,\" I said, my eyes still closed.\n\n\"Um... yes. Wow. That was... nice.\"\n\n\"Yes, nice.\" I opened my eyes.\n\nWe got back to the house, and found no one up and around.\n\n\"I really enjoyed our walk,\" I said.\n\n\"Me too, thanks for not getting too bent out of shape when I get snappy.\"\n\n\"Listen,\" I said, \"That kiss out there was... something. And I wouldn't mind a little more of it. Can we maybe just move to the... what did you say this morning? Make-outs high school style? Hands above the clothes?\"\n\nShe laughed. \"Anything you want, Blue Girl.\"\n\n\"Let's go get ready for bed. I'll be there in a minute.\"\n\nI changed into my yoga pants and Bitch Planet shirt (the softest shirt I owned) and I went through the jack-and-jill bathroom to find Jo under her sheet. I came to her as she held up the sheet for me to slip under it. I turned out the lamp as I did. Before the room plunged into darkness, I noticed she was wearing another pair of her skintight boy shorts, this time in turquoise blue, and another grey Army t-shirt. She rolled over on top of me and I felt her bare leg between mine.\n\n\"Hey, Blue,\" she whispered, rubbing the tip of her nose against mine, her breath on my lips.\n\n\"Hi.\"\n\nWe kissed again. It was an order of magnitude sexier for her to be kissing me while I lay under her, her body lying on top of mine instead of standing on the beach. I wrapped my arms around her and slid one hand up into her hair. That hair. It was so thick for being so short. In contrast to her normal powerful demeanor, either playing guitar on stage or defeating all the boys in chin-ups, her mouth was so gentle on mine. We kissed for what seemed like hours. After a while, I pulled away from her panting.\n\nShe said, \"Yeah, I know, hands above the clothes is going to get hard if we keep going.\"\n\nI laughed. \"Mind reader.\"\n\nShe slid off me, rolled me away from her and curled up against my back, embracing me from behind.\n\nI sighed. \"I could get used to this.\"\n\nShe nibbled my earlobe and I shrieked \"Eep!\"\n\n\"Sorry!\" she said, \"I didn't think you'd be that sensitive. I'm sorry!\"\n\n\"It's ok, I just wasn't expecting it. I actually really like that.\"\n\n\"You do, huh?\" she said, and slowly, more deliberately returned to my ear, licking it and then down my neck a little. I started breathing heavily. \"Oh yes, you really do,\" she whispered.\n\nI debated with myself for a moment, and then said, \"Ok, you've told me some of your secrets...\" I grasped her hand, which was wrapped around my front and brought it up to press her fingertips to a spot where my neck met my shoulder. \"Here...\" I said with a rasp.\n\n\"Here?\" She leaned a little further down and lightly kissed me in the spot I'd indicated then licked it.\n\nI gasped, then said, \"Bite me.\"\n\n\"What?\" she pulled back, a bit surprised.\n\n\"Bite me! Right there, Jo!\"\n\nShe leaned her head back down, licked the spot again, and then I felt her sharp teeth on my neck. Not hard enough to break the skin but hard enough for what I needed. I smothered a yell, as my hips started bucking, thrusting my butt back into Jo's groin. I trembled and moaned.\n\n\"Jesus Christ, did you just come?\"\n\n\"Yesssssssssssss.\" I hissed, my body still jerking.\n\nShe bent her head to nibble and lick at that spot, as I rode my orgasm until I stopped trembling.\n\nAfter I came down and slumped back into her arms, she nuzzled my hair and whispered in my ear, \"That was the hottest fucking thing I've ever seen.\"\n\n\"Thanks,\" I panted. \"I usually don't tell girlfriends about that until like date ten.\"\n\nShe laughed, and slid her hand under my shirt to caress my stomach. I reached down and held her hand to keep it from going higher then pulled her other arm under my head and snuggled into her, getting comfy.\n\n\"Oh, so that's all tonight?\" she asked amused.\n\n\"Yep. You paid me back for last night, now we're going to cuddle and sleep. High school style.\"\n\n\"Ok Blue, your aircraft.\"\n\nIt was the second time she'd said that to me and I wanted to ask her what it meant, but I was already falling asleep.\n\n~~ The Beach Jam, Ocean City Beach House ~~\n\nJO\n\nThe next day's concert wasn't a giant event, just an hour-long show down on the boardwalk under the shadow of the Pepsi Ferris wheel. They did mostly classic rock again for the more conservative touristy crowd. Steve led off with Boston's More Than a Feeling but they had to throw in one of their favorites to end the show, Better Than Ezra's Good.\n\nIt was so hot during the show on the boardwalk, when the gang walked into the beach house mid-afternoon, Jo walked straight out to the deck, dropped her phone on a chair, said with a strangely affected voice, \"Jesus H Christ, we must be a mile from the sun!\" and then just walked straight off the edge into the deep end of the pool, fully clothed.\n\nWhen she came up sputtering and treading water Blue asked her from the edge of the pool, \"What was that voice?\"\n\n\"Tom Hanks, Volunteers,\" Steve said walking up behind her. \"Our dad made us watch that like ten times growing up.\" Then Steve did a flip off the side into the pool next to Jo, splashing Blue.\n\n\"Seriously Steve?\" Blue said, holding up her dripping arms.\n\n\"Seriously!\" Larry yelled, jumping past her into a giant cannonball, soaking Blue further, followed quickly by Jack.\n\n\"Are you kidding me?\" Jill said, looking down at her dress, turning dark with water.\n\n\"In for a penny, in for a pound Jill!\" Suzanne yelled from behind her, and then wrapped her up and jumped into the pool with her, with Sara close behind as the rest of the group cheered from the water.\n\nThat evening, after a dinner of burgers at the Longboard Caf\u00e9, Jack and Larry started building a bonfire in the fire pit out on the beach while Jo and Steve brought a few instrument cases out to the sand. Jill, Sara and Suzanne filled an ice chest with beers, a couple of liquor bottles and ice and some snacks and wheeled everything out as the sun was setting.\n\n\"Who's leading off this year?\" asked Jo.\n\n\"Me!\" said Jack, he reached over and Steve handed him an acoustic guitar.\n\nThey had two guitars, plus Suzanne's acoustic bass. Larry had his drum between his knees \"It's a djembe, not a bongo, you philistine!\" he had yelled at Jo when he was unpacking his instrument. Jo had even pulled out a mandolin to pick along.\n\nJack lead off with Crowded House's Something So Strong, a song they had never done together as a band. Jo lived for this. Every member of the band tried to bring three of four songs each tour that they'd never done together. Someone would lead off, and the others would join in on the jam as soon as they could pick up the chord progression and everyone would sing, sometimes on just the chorus, or the whole song if they knew the words.\n\nSuzanne took the next turn, doing the Talking Head's Psycho Killer, slapping out a truly epic bass line on her acoustic while trying out her David Byrne impersonation.\n\nThey got rowdier and drunker as the evening went on. Random passers-by on the beach occasionally stopped to listen, and sometime even sing a few songs with the band before moving on. Sara gave it her all on a rendition of Sheryl Crow's Soak Up the Sun, which she'd apparently rehearsed with Steve before the tour.\n\nFinally, after a few times around the circle, Jo looked over at Blue Girl. \"What about it Blue? What'd you bring for us tonight?\" Blue girl looked momentarily terrified, but Jo could see her steel herself and square her shoulders.\n\n\"Well, I can't play guitar. Does anyone know American Pie?\n\n\"You're kidding? That's a great one, I know it!\" Steve reached over and took the guitar Jo had been playing. Jo picked up her mandolin, figured she could pick along a bit as she figured it out. She was pretty impressed Blue had picked such a classic sing-along.\n\nSteve settled the guitar on his knee and nodded at Blue, who looked over and caught Jo's eye as she started singing.\n\nA long long time ago, in a galaxy far away\n\nNaboo was under an attack\n\nAnd I thought me and Qui-Gon Jinn, Could talk the Federation into<br >Maybe cutting them a little s-l-a-a-a-c-k...\n\nJo, Steve, Suzanne and Larry were looking at each other confused, but Jack got the joke immediately. He started laughing and trying to pick up on the chords from Steve as Larry provided the rhythm. When Blue got to the chorus, Jack sang loudly along with her.\n\nOh, my, my, this here Anakin guy\n\nMay be Vader someday later, now he's just a small fry\n\nAnd he left his home and kissed his mommy goodbye\n\nSayin' \"Soon I'm gonna be a Jedi. Soon I'm gonna be a Jedi.\"\n\nBy the time the chorus had come around the first time, Jo had figured out that Blue was doing the Weird Al take on the song. God damn, I love this. It's so on brand for her. Took guts, she thought. She has a great voice too.\n\nBy the end of the song, the entire group was belting out the chorus with Blue,\n\nSayin', \"Soon I'm gonna be a Jed-i-i-i-i-i!\"\n\nAnd then the entire group dissolved into laughter, Jack leaning over to Blue hollering, \"Give me the highest of fives!\" with his hand up.\n\n\"I just want to go over and kiss her face right now,\" Jo thought. Maybe later tonight. \"That was great Blue, you've been holding out on us,\" she said. \"How about you go again, what else you got?\"\n\n\"Uh...I hadn't planned past that. Let me think. Can you do Game of Love on an acoustic?\"\n\n\"Wow, that's a tough one, Santana on an acoustic,\" said Jo, trading her mandolin with Steve for the guitar he'd used on Blue's first offering.\n\n\"Jack, gimme,\" Steve said reaching out for the other acoustic. \"I got the chords if you can pull the solos Jo.\"\n\nJo lead off with some picking while Steve strummed in the chords and Blue jumped in with both feet.\n\nIt just takes a little bit of this, a little bit of that.\n\nIt started with a kiss, now we're up to bat.\n\nA little bit of laughs, a little bit of pain.\n\nI'm telling you my babe, It's all in the game of loooooove.\n\nShe was looking Jo right in the eyes as she sang the lyrics, almost like she was challenging her.\n\nYou roll me, control me, console me, p-l-e-e-e-a-s-e hold me\n\nJo sucked in a breath and looked away. \"I'm telling you Collins, you're in the soup here,\" Little Voice said.\n\nAfter midnight the singing had tapered off and the group sat around relaxing, empty beer bottles littering the fire pit.\n\nJack was bent over one of the guitars, drunkenly picking a random tune.\n\n\"This was even more fun than I'd imagined,\" Sara said. She was curled up in Steve's lap in one of the Adirondack chairs.\n\n\"I know, right?\" said Larry. He was sitting on the sand leaning back against Suzanne, who was massaging his hand as he held it back over his shoulder.\n\nBlue was slumped back in a chair. She looked either really tired or slightly drunk to Jo who was softly strumming her mandolin.\n\nBlue started a little then sat up. She looked over at Jo and asked her \"I sang lead on like three or four songs tonight but you didn't have to sing at all. What's up with that?\"\n\nJo stiffened like she'd been slapped, but managed not to say anything.\n\nLarry and Suzanne looked at each other and Steve started sitting up. \"Uh, maybe it's time for bed,\" he said, looking worriedly over at Jo.\n\nJack raised his head and slurred a bit as he said \"Oh you know, Jo hasn't sung since that one time...\"\n\n\"Vance!\" Jo's voice was sharp with warning. Jack seemed oblivious.\n\n\"...you know when she sang to Amy in front of the whole bar and then Amy didn't say yes but they broke up instead?\"\n\nJo was out of her chair almost as fast as when she had saved the surfer the day before. She dropped the mandolin into the sand, took three strides across the circle and jerked the guitar out of Jack's hands.\n\n\"Jack, you giant, drunken COCK!\" she yelled, put her foot in the middle of Jack's chest and shoved. Jack flew off his log stool and landed on his back in the sand. Blue stood up, along with everyone else, but Jo had vanished like a wraith into the night out toward the ocean.\n\n\"Jesus, Jack, think before you drink man,\" Larry said helping him up.\n\n\"Oh my god! Oh my god, I forgot! I totally forgot!\" Blue seemed like she was about to panic.\n\nSteve sighed. \"It's ok Jill. She'll just need to burn off steam. She'll come back, just let her stew. It doesn't do any good to talk to her about it, she's been totally unreasonable about this for years. Let's clean up and head in.\"",
        "They started picking up instruments and bottles. Jill waited until everyone had their backs turned to her and then slipped out into the darkness.\n\nSuzanne noticed first. \"Jill's gone.\" She looked back at Steve and Larry. \"Holy crap, is she going to go stick her head in the lion's mouth?\"\n\nJo was standing at the high tide line about three miles north of the beach house, softly playing the guitar she'd grabbed out of Jack's hands. She'd actually walked from Maryland to Delaware. Technically she was in Fenwick Island now. After getting this far, she'd decided walking wasn't calming her down so she'd stopped and started to play. She'd been working on getting a new song down lately but couldn't seem to get it quite right. Stories of the Painted Desert was a mournful song, plaintive and seemed perfect for the moment, as she sent the notes out over the waves, like she was serenading dolphins or some shit.\n\nShe couldn't believe Vance had been drunk enough to blurt that out. And in front of Blue Girl! Jo wanted to think of herself as having a fountain of self-confidence, but sometimes she felt it was mostly a front she put on for others. Right now, she couldn't imagine facing Blue again tonight. Or tomorrow. Or any of the other band members. Or lying in bed curled around Blue with her face in Blue's neck. She finished the song, unsatisfied, and started it over again. Goddamn it.\n\nAs she finished the song the second time through, behind her she heard, \"That was lovely.\" She spun around.\n\nBlue Girl was standing there about ten feet away, her eyes glassy with tears. Jo gaped and swiveled her head back towards the beach house. \"She followed you all the way up here?\" asked Little Voice, \"We're in Delaware.\"\n\n\"What are you doing here?\" Jo said, sharper than she intended. Blue flinched a little, but didn't retreat.\n\n\"I came to apologize. I'm so sorry Jo.\"\n\n\"You don't need to apologize, Jack does. This is my bullshit hang-up anyway.\" Jo turned back to the waves.\n\nBlue walked around in front of her. Jo looked down at the sand. She didn't want to meet Blue's eyes.\n\n\"All that's true, but it's also true that I knew it was a painful subject. You couldn't have made that clearer to me on Friday, and I forgot and blew it and I had a part in making you feel bad and ruined your beach jam and I'm so, so sorry Jo.\"\n\nJo said nothing.\n\n\"Jo. Jo, look at me.\" Jo finally forced her eyes up. \"You never have to explain this to me. You never have to explain anything to me that you don't want to. And you never have to sing for me. I didn't want to hurt you. I'm sorry.\"\n\nJo exhaled loudly. \"I mean, it's not like you didn't hear him. I wrote a love song to propose to Amy while I was deployed. And say whatever you want about my music skills I am a shitty songwriter. I played it for Amy our first show back, and it was terrible and she laughed. Laughed right at me. Right in front of the whole bar. And afterwards told me what a dumb song it was. And we had a huge fight and we broke up. And then she came back and then she cheated on me for a year. And I haven't sung since.\"\n\nBlue was just watching her, a tear rolling down one cheek.\n\n\"God dammit why do I tell you these things?!\" Jo yelled. \"What are you doing to me?!\"\n\nBlue just looked at her.\n\n\"What are you doing to me?\" Jo whispered again. \"I don't talk about this shit. I don't talk about mom. I don't talk about Amy. I don't talk about all my rules, or what a terrible dater I am or all this shit you manage to make me talk about just by standing there. What is this? What do you want from me Doran?\" She could tell that using Blue's last name had cut her. Blue flinched again, but she still didn't retreat.\n\n\"Jo, I don't want anything from you that you don't want to give me. I just don't want to hurt you. I know you're a big, strong Army girl and maybe everyone back at the house seems to have bought into you being the invulnerable Carol Danvers super hero of our little universe. But I can see that you've had enough hurt for a lifetime. And I was a part of hurting you again tonight, and I just needed to say I was sorry.\"\n\nJo stood mute, looking at her.\n\n\"I will tell you that you could have sung I'm a Little Tea Pot for me and I'd have been thrilled. Singing to your girl, in front of everyone like that? That's the most romantic gesture I could imagine ever happening to me and that story firmly cements the fact that Amy was a psycho, crazy bitch lady.\"\n\nJo laughed, then choked on it.\n\n\"Now, if you want to be left alone and keep playing for Nemo and his friends, I'll understand and I'll see you tomorrow. Or, if you'd like to come back with me, I'll hold you and stroke your hair until you go to sleep, if you need it. But it's up to you. I'm not pushing you one way or the other.\"\n\nShe stood calmly, waiting for Jo.\n\n\"I still don't understand how you're doing this to me Blue,\" she whispered.\n\n\"I have no idea either Jo. I just need you to make a go/no-go call for me now,\" Blue answered and held out her hand.\n\nJo hesitated a moment longer, then took her hand. They started walking back to Maryland together.\n\nTo be continued..."
    ],
    "authorname": "BrokenSpokes",
    "tags": [
        "gay romance",
        "heartbreak",
        "lesbian",
        "lesbian romance",
        "romance",
        "lesbian sex",
        "romantic"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/hard-landing-ch-03"
}