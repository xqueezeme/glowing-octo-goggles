{
    "title": "One Night 02 - Twelve to Two",
    "pages": [
        "12:00 AM\n\nMy Rolex read midnight as I dashed out of the hotel room, Maria's hand gripped tightly in mine while I practically pulled her along behind me.\n\nThe curvaceous 22-year-old still wore the slinky red dress that she'd slid out of and tossed aside less than an hour before, but was luckily the kind of woman who thought ahead. In her purse she'd had a pair of flats to replace her high heels, and now an out-of-place pair of Converse shoes hit the floor one after the other as she hurried in my wake.\n\nAs we ran for the elevator, thoughts raced through my mind like they had been for the last 10 minutes. I was neither Bourne nor Bond, but I was glad I'd seen enough action films to give me an idea of what might be coming next. This is nothing like a movie, a tiny voice in my head told me. Very soon, you are going to die. There is nothing you can do about it. And it was all over a fucking misunderstanding.\n\nThe hallway was expensively carpeted in a lush red material \u2014 I could feel my feet sinking into it ever so slightly with every stride \u2014 and the wall to my right was entirely glass. The view looking out over the City from this height was breathtaking, and only available in a few luxury high rise towers like the Palace One \u2014 the hotel I was currently hell-bent on escaping. Most nights I would have savored the beautiful skyline, the shining lights and contrasting darkness. But most nights I didn't have a contract out on my life from one of the most dangerous Mob bosses in the city for the crime of kidnapping and sleeping with his daughter. Tonight, the glow of the city lights looked ominous, scaring me like search lights beaming into the sky would frighten an escaping convict.\n\nOverprotective father, huh? I grumbled silently as we dashed up to the elevators and I hit the \"Down\" button five or six more times than was strictly necessary. I was remembering how Maria had originally explained to me the fact that she'd been accompanied by bodyguards into the club where I'd met her. Homicidal father, more like. \n\nDing. The elevator doors slid open, just as I realized that if this were a movie the bad guys would be waiting inside with weapons at the ready. Their machine guns would fill me as full of holes as Swiss cheese and I'd fall to the ground in slow motion as Maria screamed and covered her face with her hands.\n\nI flinched sideways, an involuntary gasp escaping as I yanked Maria out of the line of fire.\n\nThe elevator was empty.\n\nMaria gulped, then put a hand on my arm. \"It's alright, Jason,\" she murmured. \"We're still safe... For now.\"\n\n\"Thanks...\" I muttered sarcastically, then scowled at myself as she flinched. \"Sorry,\" I said, sliding an arm around her shoulders.\n\nThe gorgeous brunette looked up at me, her lips full and begging to be kissed. My eyes sharpened and I could practically taste her tongue, feel her round breasts beneath my hands and her hardening nipples against my palms. Her hair would tangle in my fingers as I pulled her head back and kissed down her throat, down the valley of cleavage and \u2014\n\nI wrenched my eyes away from her fantastic figure and met her gaze. Her lust for me was still flowing strong through her body, simply masked by the stress and fear of the moment, and with my ability I had unintentionally picked up on it.\n\nFocus, man. I ordered myself sternly. Your gift is the only advantage you have. It was a small one, I knew, but my only chance at surviving the night would be to find Maria's father \u2014 the notorious Antonio San Luca \u2014 and use my ability to make him call off the hit.\n\nIt was going to be a long night.\n\nAs the elevator swiftly dropped away beneath our feet, I tried to slow down and catch up to my racing thoughts. Maria was silent beside me, her face tight with worry. Calling her father had done nothing \u2014 he either didn't believe that she'd come with me of her own free will or didn't care \u2014 so it appeared that familial diplomacy was a dead end. Sticking one hand into my pocket and searching around, I tried to run through my assets.\n\nMoney. The slim leather wallet I carried had several hundred dollars in cash as well as several credit and debit cards.\n\nCar. The key fob to my sleek Jaguar F-Type was smooth and rounded under my fingers.\n\nHostage. I winced mentally as my eyes flickered over to Maria once again. I snarled internally and brushed aside the unworthy thought. I might not be much of a gentleman, but I wasn't going to turn this girl into some sort of bargaining chip.\n\nAlright, I thought. You have a mode of transportation and a couple of benjamins. What're your liabilities?\n\nMy mind, trying to spiral out of control, grasped at the question as a way to maintain sanity. Good. I'd long ago realized that, while complex and incredibly useful, the brain is really just a super sophisticated question and answer machine. If I fed it the right questions, I might have a chance at surviving the night. If I let it run down the rails out of control, I might not make it beyond the hotel lobby. So, when I asked my brain to analyze the scenario, reason cut into the silent, animalistic buzz of fear and started to reassert dominance.\n\nLiabilities. Alright... Luckily, I was used to high-tension circumstances. Dating, pick-up and life-coaching all necessitate an ability to stay cool under pressure, and as the number one coach in the City I dealt with more pressure than anyone. Then again, I'd never had a mob boss order men with guns to kill me on sight. I shook my head and snapped back to reality. Focus, dammit.\n\nI don't know who's coming after us. I silently ticked off items as I ran through the list. I don't know how or when or where. And I don't know where Antonio San Luca is... A sudden chill shot through me. What if he isn't even in the City? There was a simple answer for that question. There would be no way for me to get to him and change his mind before one of his hit squads caught up with me. My brain, the sophisticated Q&amp;A box, gave me my answer with ruthless simplicity. Then I'm dead.\n\n\"Maria?\" I asked, my throat felt dry so I think I might have had just the slightest rasp in my voice.\n\n\"Yes?\" Maria asked quietly, watching the illuminated number above the elevator door flip down towards L for lobby.\n\n\"Is your father in town?\"\n\n\"He is,\" she confirmed, and I breathed the tiniest sigh of relief.\n\nThank God.\n\n\"But I still think that if I take you there he's going to kill you...\" her voice was flat with dread as she trailed off into silence.\n\n25. 24. 23... I watched the numbers, too, and waited several moments before answering.\n\n\"Well,\" I finally told her. \"It's not like I have much choice.\"\n\nShe swallowed and nodded, worry breaking out over her face again. She opened her mouth, and I sensed that she was about to start apologizing.\n\nI held up a finger. \"Ah ah,\" I hushed her swiftly. I smiled courageously. Funny how making sure someone else doesn't panic helps you keep from panicking, I noticed. \"None of that.\"\n\nThe gorgeous woman froze with her mouth open, then nodded. Without really trying, I felt her emotions shift, a respect growing for me that I found oddly satisfying. \"Where are we going?\" she asked instead.\n\nHow the hell should I know?! I wanted to demand, but I took a deep breath and said, \"Step one is getting out of this building. You said your father knew where to send people to find us. How?\"\n\nMaria shook her head, tossing her thick brown hair over her shoulder as she started to respond, then her eyes widened and she grabbed in purse for her cell phone. She held it up.\n\nI understood. \"Must've bugged your phone, huh?\" I said with a snort, somehow finding the time to make light of the situation. Controlling, homicidal... my mental monologue trailed off as one half of my brain \u2014 maybe the half that didn't get most of its ideas from my cock \u2014 glared at the other half. And you thought it was a good idea to sleep with this man's daughter? The second hemisphere of my brain shrugged shamelessly. I didn't know that, at the time.\n\n\"Focus,\" I growled, making Maria flinch beside me. Instinctively, I wrapped an arm comfortingly around her waist. She leaned into me, her scent drifting seductively over me. I forced myself not to look into her mind or brush up against her emotions as she did, but it didn't take someone with my ability to sense that she was still incredibly horny from earlier.\n\nGod, I thought. If we weren't running for our lives this woman could go on for hours. I felt a steady trickle of blood begin to wend its way down my body to the swelling length between my legs. Damn that's hot... Before I could refocus myself, the elevator reached the ground floor.\n\nDing.\n\nI was not ready for what happened next.\n\n12:10 AM\n\nI heard the shots before I saw the results. I've fired guns before and I've learned that they are loud, shameless weapons that make no effort to hide their presence. The group of half a dozen men storming the front of the Palace One luxury hotel were equally shameless. I could make out their bulky figures beyond several large potted plants and lobby furniture and through the large glass doors at the front of the building. Nothing about their entrance was subtle as exquisite sculptures and paintings were torn to shreds and the men ruthlessly sprayed the lobby with gunfire.\n\nLuckily, the elevator was at right angles to the front door, so Maria and I were out of the line of fire. The concierge and welcome desks weren't so lucky. There were spatters of red on the walls behind both, and I felt a sudden surge of nausea as I realized that whoever had been working there had been shot.\n\nI tried to swear but it came out as a strangled \"Gak!\" and I slammed my palm over and over into the \"Close Doors\" button until the elevator slid shut with agonizing slowness. As it did, I saw the men \u2014 dressed in dark, military-style fatigues \u2014 advance into their own kill zone through the shattered glass doors.\n\n\"We have to get out of here!\" I gasped, my chest heaving as adrenaline suddenly pumped through my body. My voice was unnaturally loud, and I could still hear the loud pop-pop-pop of machine gun fire ringing in my ears.\n\nMaria nodded, her face pale. I think she had seen the bloodstained walls, too.\n\nI reached out to jab another button on the elevator console and the contraption began to descend.\n\n\"G3?\" Maria asked, checking the glowing circle I'd just pressed.\n\n\"Third level of the underground garage,\" I replied quickly. I fished around in my pocket and pulled out my key fob, gripping it in my hand at the ready. \"We're going to run to my car, hop in and get the fuck out of here. Once we do that we can figure out where we're heading next.\"\n\nMaria nodded, closing her eyes and taking a deep breath.\n\nDespite the tension and overwhelming dread I was feeling, I couldn't help but notice as the motion drew attention to her busty chest, her round breasts straining against the tight red dress. Unable to stop myself, I let my eyes wander. The smooth, bronze skin at her throat was begging for my mouth and I felt my jaw tighten as I traced her athletic figure with my gaze. I felt a low growl of desire vibrate in my throat, and Maria's dark eyes fluttered open.\n\nShe looked at me through her long lashes, and I knew that her body ached for my hands. She shuddered briefly and her features tightened, but she shook her head. \"We need to...\" she trailed off as she seemed to lose her train of thought, then tightened her slim fingers into fists. \"To get out of here.\"\n\nShe's right, logical Jason agreed emphatically. Adrenaline-pumped, horny, hormone-driven Jason tried to ignore him, but then restrained himself.\n\nThe 22-year-old gasped softly as I got my emotions back under control and took a steadying breath. I frowned at myself. I must have been unintentionally broadcasting my lust onto her as well. Keep it together, man, I ordered. That's the only way you're going to stay alive.\n\nI turned to face the elevator doors, trying to ignore the sexy young woman next to me. I was surprised, then, when I suddenly felt her hand intertwine with mine. She squeezed once and I turned to look at her.\n\nMaria's face was set and determined but also playful. \"We'll get out of this,\" she told me firmly. \"And then...\" she winked at me and her voice dropped into a sultry purr. \"I'm all yours, Master...\"\n\nDing. We'd arrived.\n\nI was stunned for several full seconds as the doors slid open. Incredible, logical Jason thought as Maria cautiously stepped out of elevator before me. Fifteen minutes into life-or-death cat and mouse and she's gotten herself under control enough to flirt with you. I remembered my original assessment of Maria's physical appearance \u2014 goddess tier. As I learned more and more about the woman behind the body I realized I may have to put her in a category all her own. Shaking my head bemusedly, I followed Maria out of the elevator and into the darkened underground garage.\n\nEscape first, I ordered my brain. Sex thoughts later.\n\nThe garage was dimly lit, but what light there was seemed almost to sparkle as it bounced off the metallic bodies of cars of all types and descriptions. There was only one common denominator \u2014 they were all expensive as hell. I ignored the Lamborghinis, Ferraris and Teslas as I tried to remember where I'd parked. We hustled past several rows before I spotted my silver sports car and veered right, grabbing Maria by the elbow. At the same time I let my senses extend beyond myself in an attempt to pick up on any surface thoughts or emotions nearby. It might not work, but if I could pick up on something I might get some warning before \u2014\n\nA dark figure stepped from the shadows at the back of the parking space, coming off the wall with all the languid grace of a predator. As it did, I suddenly slammed into a mental wall of force. I practically staggered. Whoever this person was, they were laser-focused, single-minded and ruthlessly loyal to their mission. Anything behind that wall of determination was hidden to me.\n\n\"Chiara...\" Maria gasped.\n\nAs I regained some of my equilibrium, I realized that the figure before me was a woman dressed in some sort of black, tight-fitting body armor. A tactical harness was strapped to her torso and, glinting in the light of the overhead bulbs, I could see I could see that she carried a blade in each hand. In her right hand, which was angled away from me, she held a long, black-bladed sword and in the left a shorter knife that bent inward partway down the blade...\n\nA kukri? I swallowed, then coughed nervously as the woman put a combat boot on the hood of my car and leaned over her knee, eyeing me and Maria with a cool, collected focus. I felt a tingle of fear run down my back. Maybe, given more time, I could have made a better first impression, but in the moment the only words I could squeeze through my tightening throat were, \"Um... What's with the swords?\"\n\nThe woman laughed softly. She tossed back her long, dark hair and as she did I noticed her body for the first time. The figure-hugging body armor left very little to the imagination. She was built like an athlete with long, muscular legs and the toned physique of a martial artist or dancer. When she spoke, the woman's voice was throaty and unconsciously seductive in the most dangerous way. Her eyes flashed and I noticed the curve of her full lips as she said, \"Antonio ordered that the man who'd laid hands on his little girl should be dealt with... elegantly...\" The woman's darkly tanned face could have been replicated from the sculpted statue of a Greek goddess. \"Guns are anything but elegant.\"\n\nI flashed back to the carnage and destruction upstairs. I mean, she has a point, hormone Jason agreed, eyeing the curve of her breasts outlined by the dark suit. Logical Jason just screamed at me to run.\n\n\"Chiara,\" Maria said, stepping forward and raising her hands peacefully. \"Listen to me. This is all a misunderstanding...\"\n\nThe woman cast a look Maria's way that was almost sympathetic, but her beautiful face was stony. My invisible senses picked up a ping of regret from beneath her shield of grit, but her loyalty never wavered.\n\n\"Jason is a safe guy,\" the beautiful 22-year-old continued. \"He didn't know who I was when we met and everything that happened after was \u2014\" I heard Maria stumble and sensed the visceral surge of arousal that shot through her body as she recalled the previous hour, \"um... totally consensual.\"\n\nChiara sighed and blinked once, then shot a sentence or two at Maria in Italian. Maria responded quickly, and I could tell from her pinched features that Chiara was having none of it.\n\nShe's hot though, hormone Jason thought dreamily, and I realized that I was going to be getting no help from that quarter. So instead I took a deep breath and focused, ignoring the musical Italian voices that shot words back and forth faster than the ball in a professional tennis rally. I'd never tried this before. I was going to have to stop the Mob-hired ninja woman from cutting me up into fresh sushi.\n\nMy abilities were usually limited to subtle manipulations or surges of emotion. Earlier in the night, back when there hadn't been gun-toting thugs or sexy, sword-wielding assassins coming to kill me, I'd used my strange skill to change a woman's mind. She had been about to reject my client Mark but I'd convinced her that she wanted to give him a chance instead.\n\nThe difference was that that woman had been primed and made ready by the circumstances. She was out for a night on the town and receptive to meeting new men and having a good time. Plus, what I'd done with her was my job. I was experienced at it. I'd been helping guys to get a chance with beautiful women for years. Not once in that time had I been forced to stop someone from killing me.\n\nIn my experience, it's one thing to give someone a mental nudge. That's just a matter of deflecting their focus and emotions a little off of their current course and in a more desirable direction. It's a totally different animal to try and change their mind. That's more akin to reversing the direction of an avalanche. The only time in my life that I'd tried to use my strange talent to defend myself was when I was twelve. That hadn't gone so well. The school bully had ended up giving me a couple solid whacks in the stomach and when I tried to get him to stop my brain had exploded with so much pain that I'd blacked out for several seconds and woken up with my face on the asphalt. I'd had skull-splitting headaches for a week. That was when I'd begged my parents and gotten into martial arts. And it was also one of the reasons that, until I'd turned 18, I hadn't used my talent for more than simply reading people's emotions.\n\nStill... I eyed the woman's stance and the way she held her weapons \u2014 comfortably and with obvious experience. With this woman, if I move the wrong way then I'm dead. Headaches will be the least of my worries.The female assassin could probably kill me in less than six seconds if I didn't stop her. And it looked like her patience with Maria was growing thin. So, without giving myself another chance to second-guess it, I clenched my jaw and threw myself into the gorgeous assassin's mind.\n\n12:15 AM\n\nMy physical senses blacked out as I sank into Chiara Santoro's thoughts. Everything I could see or hear with my physical body was muted, like it was bouncing down to me through a long tunnel.",
        "I was suddenly aware of the fact that I had somehow learned the woman's full name. It was a strange feeling \u2014 not like trying to learn something for the first time but like recalling a fact so obvious that I'd always known it. But I didn't have time to analyze my situation.\n\nIn the past, what I'd done had been mostly instinct \u2014 sinking into someone's psyche and plucking at their emotions or subconscious thoughts like a harpist to change their tune as I'd pleased. Now, I had to consciously move into her mind with intent. I needed to overwrite her orders to kill me and replace them with something else, something... safer.\n\nThink, man. I had no idea what was happening beyond the confines of my own head, but I had to act fast. From past experience, I knew that I was essentially sitting outside of time \u2014 thoughts moved so quickly that when I immersed myself this deeply in them what felt like minutes to me was maybe a few seconds for everyone else. Still, those few seconds could end with me receiving the pointy end of a sword through the chest, and I wasn't eager to experience that particular sensation.\n\nHow does this woman operate? I asked myself. How do you win her over? I concentrated as I pushed into her mind, ignoring the sudden pounding in my temples as I forced myself to seek a solution. Then, I halted abruptly. The wall of discipline that I'd run into earlier was still there, and I felt a chill run through me. It was a chill spasm of fear. I might be about to die. No one I'd ever encountered before had this kind of focus. Well, maybe one man, but he was most definitely an exception to the rule. Chiara's discipline was incredible and unwavering. Imagine a massive wall of concrete built of determination, will power and focus on a singular goal. That's what I found myself up against as I tried to move past the assassin's surface level thoughts and deeper into her mind. I simply couldn't \u2014 and if I couldn't get in I couldn't save myself. End of story.\n\nThen, strangely, as I looked closer I realized that the wall wasn't impenetrable. At certain points what appeared to be rock-solid conviction now showed weaknesses, places where the concrete walls were softer than before. I focused for a moment, and realized what they were \u2014 Maria's words having an impact on the woman as my young lover tried to convince the assassin to stay her hand. Maria's words weren't enough on their own, but they gave me the opening I needed.\n\nThank you, I whispered silently, and dove at the nearest weak point, focusing my own will into a narrow-pointed battering ram. I poured my fear into the attack, using it to give me strength as I powered into Chiara's determination to fulfill her objective.\n\nThere was a second of a resistance. Then, the section of wall bent under my assault and popped like a bubble, sending me tumbling through. The pain in my head seemed to double as I breached the assassin's subconscious defenses, but I forced myself to ignore it. Instead I immersed myself in the mind of the Mob's hired killer.\n\nThe human mind is a kaleidoscope of thoughts, sensations, sights, smells, sounds and emotions \u2014 thousands of them every second. I felt as though I were being bathed in the brightly flashing lights of a hundred different dance clubs as each refraction of Chiara's kaleidoscope bounced past my mental senses. I felt myself physically wince. What I was seeing and feeling was a hundred times more powerful than anything I'd experienced before when I'd reached into the mind of another person. In the past, I'd never done much more than reach out and tweak a thought or feeling. What I was going to try now was on an entirely new magnitude of difficulty.\n\nAs I desperately searched for a way to save myself, I found myself latching onto tidbits of Chiara's personality. They drifted through the maelstrom of information and as they brushed past I learned more and more about the woman.\n\nChiara wasn't just some mercenary, I realized. She was Antonio's friend and confidante as well. But before the current of consciousness could drag me away with a stream of flowing mental data, I forced myself to focus.\n\nChiara is driven by loyalty, I thought. Loyalty to Antonio San Luca, to her contract and to herself. Once she decides to do something, it's nearly impossible to sway her from the path. I took the mental equivalent of a deep breath. My only option was laid bare before me. I had to create in Chiara a loyalty to me that was stronger than any of those previous ties... And I had no idea how to do it.\n\nBut before I could second guess myself, I dove into Chiara's mind and let myself go. I let the flow of sensations, thoughts and feelings carry me deeper into the woman's psyche. There was no light, but things seemed to grow darker as I drifted along. The current of information that carried me grew weaker as numerous small streams branched off, feeding the data to different parts of her mind, brain and identity. I didn't let myself follow them, instead sticking to the main river of thought until I found myself in a small, empty place that seemed...\n\nRight. I'm not sure how I knew, but something told me that this was the spot for me to do my work. I paused for a moment, wondering what exactly to do. Then, I realized that everything here was made of thoughts and intentions anyway.\n\nIt doesn't matter what I do, I thought. What matters is what I think I do. With that epiphany, I went to work.\n\nLoyalty stemmed from friendship and respect, so I used those as my building blocks. I planted a seed. Then, I made it grow. In bare seconds, I nurtured to maturity emotions that usually took months or years to foster. For a moment, I was almost afraid of my own power. Then, everything clicked into place and I didn't feel afraid anymore. I didn't feel anything. I just knew, somehow, that I'd done it.\n\nMy eyes fluttered open as I slid out of Chiara's mind. The thousands of sensations, thoughts and feelings that I had sensed rushing through the woman's brain were suddenly gone and in their place I was slammed by the tidal wave of my own incoming data stream. In a split second, all of the input that my body had been ignoring rushed through my consciousness. I physically staggered a step back, instinctively raising my hands to defend myself. Then, after a single excruciating instant there was a sudden clarity.\n\nEverything blinked back into focus. First, I registered sound, a scream \u2014 Maria's voice beside me. Then, I registered an image \u2014 the dark-haired Chiara charging me with vicious speed, sword and knife in each hand raised to attack. And finally, another sound in the periphery of my consciousness...\n\nDing.\n\nI spent a fraction of a second wondering why on earth the elevator door would be opening behind us. Then, the crew of men we'd left in the Palace One lobby opened fire.\n\n12:17 AM\n\nI saw the instant Chiara's loyalty changed. Confusion flashed across her face, then her eyes flickered over my shoulder and a mask of determination fixed itself across her features instead. She was still not certain exactly what was going on \u2014 nor was I, to be quite clear \u2014 but the more relevant threat needed to be dealt with first. Blades still in hand, she bounded forward and lowered her shoulders, tackling Maria and me to the floor together.\n\nMy body hit the concrete as a spray of bullets ricocheted off the walls around us, missiles buzzing like angry hornets. My skull exploded with pain as I smacked down gracelessly and the rush of blood through my head pounded with earsplitting intensity. I gasped for breath as my vision flickered red, only now, apparently, paying the price for my deep dive into Chiara's unconscious. Maria cried out in surprise as she hit the floor. I realized she had probably expected the assassin to kill me rather than saving both of us.\n\nAs Maria and I lay sprawled on the floor, stunned, the second gorgeous Italian woman somersaulted to her feet and rushed our attackers. Groaning, I flopped over onto my stomach to watch. If any one of those men got past Chiara then Maria and I would have to beat a hasty retreat.\n\nI needn't have worried. There were six men, each one a powerfully-built specimen in dark blue military fatigues with a gun in his hands and a large, straight-bladed knife at his hip. Not one of them touched Chiara.\n\nThe woman moved like quicksilver, her attack fluid, swift and deadly. The first man went down with a grunt, the assassin's sword thrust deep into his stomach as she slid under the chest-high blaze of gunfire, her body armor throwing up sparks as she skidded across the concrete. The rest of our assailants didn't even have time to leave the elevator as the black-bladed sword spattered blood across the wood-paneled walls and plush carpeting on the interior. In the enclosed space, their numbers worked against them and in a dozen seconds of frantic movement and shouts of pain Chiara cooly executed the remaining soldiers.\n\nThere was a thud as the last body hit the floor and then Chiara turned back to face us. Maria had risen to her hands and knees and stared in horror at the carnage.\n\nI didn't have the energy to be shocked at the bloodshed. I could barely even see straight. My head hurt. It felt like my skull was being used as an anvil by a bunch of medieval metalworkers. Or maybe someone was pounding red hot nails into my brain, that would explain it.\n\n\"Freelancers,\" Chiara spoke, her voice clipped and precise as she cooly wiped the bloody blade clean on one of the corpses and sheathed it. She stalked over to me before reaching down and grabbing my hand. \"Antonio put a price on your head that guaranteed most major players in the City will be on their way to find you.\" She hauled me to my feet with very little visible effort, muscles bunching in her legs and arms.\n\nI swayed on my feet, blinking dazedly. I tried to open my mouth to speak, but suddenly all the blood rushed to my head and I collapsed. There was no warning. My legs simply gave out beneath me and my vision faded into darkness until there was just a tiny window far away through which I could watch as Maria and Chiara hauled me through the darkened parking garage.\n\nMy head lolled to one side and I saw my silver Jaguar was finished, its flanks pockmarked with bullet holes and its windows shattered. Ouch, I internally winced.\n\nI felt myself sliding into the backseat of a black car, Maria getting in after me so my head rested in her lap. Her thighs made for a nice pillow, and I felt myself falling down into sleep as the engine rumbled to life and we rolled out of the parking garage. I was dimly aware of police sirens in the distance as we joined the flow of traffic away from the Palace One hotel.\n\n12:45 AM\n\nWhat felt like mere seconds later, my eyes opened as I felt us come to a stop. My vision was a little better, but my head still felt like it had been split by an angry lumberjack. The women were speaking in hushed Italian as they grabbed me under the arms and hauled me to my feet. I was unsteady as they practically dragged me into an alley between two tall, dark buildings and then into a shadowy doorway.\n\nChiara punched a code into the keypad on the handle and then shoved the door open. As I passed through the entryway I saw that the door was thick steel, heavy and secure-looking. Then I was in a bedroom and being laid out. My shirt was removed and the two women were bending over me, rolling me this way and that as they tried to figure out why my body had gone limp as a rag doll. They were speaking in English again, perhaps for my benefit, but the words were coming from far away.\n\n\"\u2014should be fine!\" Chiara's voice was a frustrated snarl. \"No physical injury except for a few bruises. Doesn't seem like he has a concussion. I can't tell what's wrong.\"\n\nMaria's tone was soothing, but worried. \"Go see what you can find out about my father's plan. I'll stay here with him and keep trying to get him up.\"\n\nThe older woman said nothing but she left, closing the door behind her. Suddenly, something clicked into place. A rush of adrenaline shot through me and I sat up, momentarily ignoring the spike of pain in my cranium.\n\nMaria gasped as I gripped her hand tightly. \"Chiara is your father's favorite assassin,\" I managed to get out through a throat that felt like it was coated in sandpaper. \"The one you said was coming for me!\"\n\nThe beautiful young woman nodded, her eyebrows coming together for a moment. \"Yes,\" she murmured. \"And I still don't know why she hasn't followed her orders to kill you.\" She put a hand on my chest and pushed me gently down into the bed.\n\nI know why, I replied silently, but then immediately second-guessed the thought. Do I even, though? I worried. I honestly had no idea what I had done inside of Chiara's mind. Everything had been instinctual. It was as if my brain had gone into survival mode and done what was necessary to save me, kind of like when mothers lift trucks off of their injured children. But explaining everything to Maria felt like too much energy. So instead I just let myself wonder what would happen now that I had a crime lord's pet assassin on my leash.\n\nThe rush of thoughts that threatened to invade my head flipped a switch, and I suddenly winced and sighed out a gasp of pain. The pounding in my head returned in all its fury, but at the same time I heard something strange \u2014 it was a moan that some far corner of my mind identified as a sound of female pleasure. My eyes flicked to Maria.\n\nThe busty brunette had a hand to her chest, breasts rising and falling as her tongue darted out to wet her lips. Her eyes were wide and I saw that her pupils were dilated and her cheeks were flushed. As I watched, the 22-year-old glanced over her shoulder at the closed door where Chiara had just departed. Before I could say anything, she climbed onto the bed, straddling my legs and letting her body slide sinuously over mine as she sensuously crawled up the mattress toward me.\n\nI felt the smooth red materials of her dress dragging over my skin, tingling and giving me goosebumps. \"Maria,\" I started to say. \"What are you\u2014?\" but before I could finish she lunged forward and grasped my head in her hands, pressing her palms hard to my temples and capturing my words in her sweet, soft mouth.\n\nI groaned and involuntary deepened the kiss, reaching up and placing my hands on her back, pulling her pliant young body down against mine. Her round breasts moulded themselves against my bare chest and I could feel her hard nipples pressing through the thin fabric. She moaned again, one hand sliding down my body and between my legs. Weakened as I was, I was unable to resist as she slowly began to tease me with her fingers, gently massaging and toying with my slowly-growing length.\n\nI groaned suddenly as I felt a rush of blood leave my head and travel south, swelling my shaft under her skilled hands. Then, inexplicably, I realized that some of my pain had gone with it. My skull no longer had two dozen fiery nails stuck in it, just a baker's dozen. What? I wanted to know what was going on, but at the same time I didn't want any of this to stop.\n\nMaria obviously didn't either. She pulled back from the kiss and sat up suddenly, her hourglass body suddenly silhouetted above me. Then, in a single motion, she grabbed the hem of her dress and pulled the thing over her head. It was a move I'd seen before, back in my hotel room, but somehow I was even more desperate for her body now than I had been less than two hours before.\n\nThe young woman's eyes were burning with wanton desire as she gazed down at me, her dark hair tumbling down over her shoulders and framing her entrancing features. She looked almost mad with lust, her lips parted as she stared down at me.\n\nThe situation was so surreal that I almost demanded of her what was going on, but I suddenly noticed something in the corner of my consciousness. A tiny parcel of my mind had reached out without my noticing and latched onto Maria's psyche. As I watched, it pulsed and shot another jolt of lust through the woman's body. Before I could wonder at my ability manifesting itself outside my conscious control, Maria bent down and kissed me again.\n\nI could almost feel the pent-up need in her body as she undulated on top of me, grinding her hips against mine and teasing my rapidly-hardening cock. Even as she did, I could feel the pain melting away from my head, the splitting headache fading as my body surged with matching arousal. I didn't question it, instead, I growled and wrapped my fingers in her hair, pulling her mouth hard against mine.\n\nGood, a primal part of me snarled triumphantly. This is how things should be. Another pulse of power from that unattended part of my consciousness into Maria and I felt the woman stiffen then relax, almost as though a miniature climax had electrified her senses.\n\nMaria pulled back once more and stared down at me with eyes that were practically glazed-over with desire. \"We're safe now...\" she murmured, leaning down to kiss my neck.\n\nI shivered at the soft touch of her lips.\n\n\"And I'm ready to serve you... Master...\" The young woman's voice was a seductive purr that shot a spike of lust straight down my body and into my cock. My shaft stiffened as another pint of blood flowed down below, and I felt my thoughts crystalizing as the pain faded even further into the distance. I wanted to wonder what was going on, why my pain was going away, but through the fog of lust I stopped caring. All that mattered was what was happening right now.\n\nMaria trailed kisses down my body, her lips caressing my chest and down my stomach until she reached my belt. Then, flashing me a single, fiery glance, she practically ripped the belt away and unzipped my dark slacks. Her hands dove beneath the fabric, freeing my rock hard length. Without a second's hesitation, she bent her head and swallowed me whole.\n\nMy head tipped back and I groaned as a spasm of pleasure rippled through me. Her soft, plush lips wrapped around my girth as her tongue gently flickered around the broad helm of my prick. As I raised my eyelids to watch, her cheeks hollowed lewdly and I could see the bulge of my shaft as she swallowed me completely. I felt myself hit the back of her throat and then the sensation of her throat relaxing and allowing me full access. I raised my hips slightly, my sizable length sheathing itself completely in her volcanically hot and willing mouth.\n\n\"Oh fuck...\" I groaned, gasping as the gorgeous goddess slowly pulled back, her pink lips massaging my length as she went. Her dark brown eyes darted up to meet mine and I saw they were sex-glazed and totally devoted. I shivered at the feeling of raw power that surged through me.\n\nMaria began to bob up and down on my cock, impaling her mouth on my length with moans of wanton enthusiasm. I felt every vibration shudder through me, the sensation indescribably erotic. The woman's heavy breasts brushed against my thighs as she moved, and I saw one hand dart between her legs to begin playing with her own clit. The other hand wrapped around my cock and began to jack me off, her mouth changing focus to suck solely on the sensitive tip. I felt her tongue swirl around the head and then grunted as she sucked hard, begging me to fill her with my cum. My balls began to feel heavy, tightening as I grew more and more turned on.\n\n\"What the fuck?!\" The sound of a voice startled me out of the moment. My head turned so fast I nearly got whiplash. Standing in the now-open doorway was Chiara, a gun in her hand. She had stripped out of her black body armor and now wore a pair of dark yoga pants and a dark tee shirt that tented at her sizable breasts. Her eyes darted from my face to Maria and back, they were wide and obviously shocked. \"I heard noises and I came run\u2014\"",
        "I didn't even let the woman finish her sentence. With the barest effort, I flicked out a spear of thought and penetrated her subconscious defenses. The second time it was easy, like returning home after a short vacation, all I had to do was use my key. The bolt of lust struck home and I saw the woman's body tremble on impact.\n\n\"Ohmygod...\" Chiara groaned as her eyes rolled back and she fell to her knees, the gun dropping from nerveless fingers. Her breath came in gasps, her round tits rising and falling rapidly as she clenched her thighs together and shuddered with pleasure.\n\nMy powers surged higher. I felt stronger than I ever had, my mind as hard as steel and my focus like a laser.\n\nMaria had never slowed with her ministrations. I wasn't sure she'd even noticed Chiara's entrance. I touched the part of my mind latched onto hers and followed the thread of connection until I reached her mind.\n\nHer lust hit me like a train. Her mind was blanked out but for the need, her only desire to pleasure me and be pleasured in return, to use her body to serve my every wanton desire. I reached down and let my fingers trace the smooth skin of her cheek before grasping her chin and raising her head. Her mouth came free of my cock with a wet pop and she stared up at me, her brown eyes glazed and her mind empty.\n\n\"Yes, Master?\" she moaned, panting with lust.\n\nThe title pinged pleasure down my spine and somehow made me even harder in her hand. \"Turn around,\" I growled. \"On all fours like a good little slut.\"\n\nI saw the shiver of arousal that shocked her body as my words struck home.\n\n\"Yes Master...\" she murmured, obeying instantly. She spun around, arching her back and presenting her round, firm ass up for my inspection.\n\nWithout an ounce of pain left in my body, I raised myself up and knelt behind her on one knee, letting my hands reach out and massaging the twin hemispheres of muscular ass before me. Maria groaned and pushed back against me, begging me silently to use her as I wished.\n\nI shot a glance over to Chiara and saw the assassin shaking her head, her eyes beginning to clear as she tried to assess her surroundings. I focused for a brief moment, then grinned. The power was all in my hands. This was going to be fun.\n\nLetting my instincts take over, I used myself as a conduit and forged a link between the three of us. On some level of thought, we were now connected \u2014 Maria to me and me to Chiara, a chain of sensation and pleasure. Then, I growled with desire and slid inside of Maria's dripping wet pussy.\n\nAs I did, I heard Chiara gasp. The assassin's eyes widened with shock as she felt a thrill of electric bliss rush over her. I grinned as I pulled back and thrusted again, mirroring Maria's pleasure into myself through our link and back out into Chiara's body. It was as if I was fucking both women at once, Maria physically and Chiara on a level of mere thought.\n\nMaria groaned as I pounded inside of her again, speeding up and gripping her firmly by the waist. She rocked back into me as I spread her entrance wide open with my girth, her tight tunnel squeezing me tight as her supple young body begged for me to take her over and over and over. Her inner walls stretched around me and I filled her to the brim, bottoming out so that I felt my cock push up against her deepest depths.\n\n\"Oh fuck meeee!\" she groaned, dropping her head as pleasure rippled through her body, clenching her muscles and tightening her pussy deliciously tight around my pounding length.\n\nAn identical cry of heightening ecstasy came from Chiara. A glance confirmed that the woman was now on her hands and knees, one hand buried between her toned thighs as she slid her fingers in and out of herself in time with my rhythmic thrusts.\n\nThat's a good girl, I thought, and I saw the woman's eyes flash with surprise as she sensed my thought through our connection. I wasn't sure how, but I was aware of everything. It all slotted into place for the first time in my life, and I felt as natural using my inborn ability as I did breathing or blinking. Now cum for me, I ordered, and Chiara came.\n\nHer body seized up all at once and then released, gripping her fingers as they mercilessly thrusted in and out of her dripping slit. Her orgasm was powerful, and without knowing how I somehow knew that she had been sexually repressed for some time. I grinned. I was her first release in a while. Good, thought the primal part of me that by some means knew exactly what was going on. Now she belongs to you... I didn't have time to puzzle out that riddle, though, because the sensations of my body were howling through me like gale force winds.\n\nI didn't slow my rhythm, my thick cock parting Maria's willing body until my hips smacked against her rippling ass with every thrust. I slid into her over and over in time to the gasping mantra that she moaned over and over.\n\n\"Yes Master, yes Master, yes Master...\"\n\nThen, I felt the tidal wave building up inside of both of my lovers, Chiara's even sooner than mine or Maria's. I sensed that the disciplined, focused and determined assassin had done her best to ignore her bodily desires for a long time, but now everything was rising to the surface. Her first orgasm was still shuddering through her body as I allowed myself to tap into her mind and nudge her right over the edge. But even with my strange ability to sense Chiara's mind and body, I wasn't expecting what came next.\n\nA tsunami of pleasure crashed over the dark-haired goddess's body, her entire figure shuddering as she cried out. The sensations were so powerful that they snapped my mental connection with the woman like a flooding river snapping a suspension bridge and I watched with primal glee as muscles rippled in a series of contractions. She collapsed to the floor, a single wordless moan trailing off as her brain overloaded and she suddenly went limp. Every few seconds, she twitched, her body overloaded with pleasure sensations.\n\nThen I felt Maria's skin quiver beneath my hands and she, too, was over. Her murmured mantra was cut off as she gasped and came, her body undulating as I continued to mercilessly pound her hot, wet tunnel. Her body gripped me like a glove, milking me and begging me to finish, to reach my own climax. So as I thrust into her one more time, I let myself go.\n\nMy balls tightened and I felt my cock grow even harder for a single instant before a powerful orgasm tore through me. I came like a fire hose, sticky white spunk painting the inner wall's of Maria's pussy like a debauched work of art. My every muscle trembled but instead of feeling tired I felt energized, rejuvenated. As I pulled back from the 22-year-old's limp, post-orgasmic form, I took a deep breath. An uncontrollable grin split my features as I laid myself back gently against the pillows.\n\nI sighed, lacing my fingers behind my head. Oh yeah... hormone Jason groaned with satisfaction. That's exactly right. I closed my eyes and drifted for a moment, savoring the power that coursed through me. Slowly, it dimmed, my mind contracting back into itself until my perceptions were once again confined to the insides of my own head. The stillness I felt there was comforting, alone with my own thoughts once more.\n\nSeveral minutes later, I raised my head. Logical Jason started to reassert control and my eyes widened as I sat up. What the hell...? The questions I'd been repressing for almost an hour poured back into my head, but I forced myself to shut them up and run a diagnostic scan on my own body. My head was fine. Whatever had set off that massive, splitting headache the first time I'd invaded Chiara's mind was gone. In fact, I felt like I'd just had two or three double espresso's. I was wired and ready to go, but my heartbeat was slow, calm.\n\nI looked around. Maria was slowly beginning to stir, moaning happily as she stretched and enjoyed the sensations of bliss still warming her body. Chiara, too, was starting to move, her lips working like she was trying to get up the strength to make a pleasured sound of her own. I rubbed my hands over my face, feeling the rough skin of my palms as I tried to figure out what to do. Glancing around, I saw a digital clock on the bedside table.\n\n1:50 AM\n\nI took a deep breath.\n\nI was at an unknown location in a safe house owned by an assassin who, less than an hour ago, had been tasked with killing me. I had an entire city of mercenaries, thugs and hitmen doing their best to track me down. A whole new range of my abilities had just started manifesting without my control. And I had a crime lord's daughter and a fucking ninja warrior on their backs in my bedroom, both of them practically passed out and panting after the best orgasms of their lives.\n\nFor a moment, I felt tired. Not physically, but emotionally. I just wanted something to make sense. Then, I sighed again and swung my feet over the side of the bed. I stood up with a groan of protest as my muscles recognized the strenuous fucking I'd just given my pair of sex goddesses.\n\nNo time to rest, I thought. Then, for the first time in hours, I smiled slowly as I realized something. In spite of my situation, my odds of survival had just improved drastically. This night is just a game of chess, I told myself. And now it's my move.\n\n***\n\nDid you enjoy Twelve to Two? Do you want to know what happens to Jason Quinn as he dodges bullets and grows a harem of gorgeous, subservient women? My goal is to keep serving up Mind Control stories that aren't simply variations on the same clich\u00e9s, but I won't know if I'm doing a good job unless you tell me. So if this crusade is something you find to your liking please let me know in the comments! And to keep up to date with my stories as soon as they're published, you can follow me here on Literotica, Twitter, Patreon or any of my other platforms.\n\nThank you so much for reading, and please leave a comment or vote if you're so inclined. Your comments are my oxygen, so please let me know your thoughts. Even just a simple, \"This was great!\" makes my day. "
    ],
    "authorname": "JCBeleren",
    "tags": [
        "thriller",
        "blow job",
        "male dominant",
        "magic",
        "brunette",
        "action",
        "hypnosis",
        "seduction",
        "big breasts",
        "female submissive"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/one-night-02-twelve-to-two"
}