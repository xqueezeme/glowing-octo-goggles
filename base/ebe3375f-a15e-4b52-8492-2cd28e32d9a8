{
    "title": "Shadows in the Moonlight",
    "pages": [
        "Author's notes:\n\nFrequent readers of my work know that much of it tends to fall within two primary genres. Still, once in a while, I do like to venture onto the road not commonly taken and throw a curve. So please take note of the category this story has been posted to and be forewarned. Still, even if it isn't your normal cup of tea, I do hope that you might read it anyway.\n\nAlthough ratings are nice, nothing beats a comment or two about what you liked or disliked about a story. Please take a moment to leave one. Thank you.\n\n*\n\nJune 1977\n\n\"Lovely, isn't she?\" a voice from behind Josh asked, startling the blond haired twenty year old. \n\nMesmerized by the young woman in the portrait, Josh hadn't heard anyone come up behind him. He turned and found, only a few feet behind him, an attractive Hispanic woman in her early thirties. Tall, maybe an inch or so more than his own five six, she had short, jet black hair cut just above her neckline and wore a low cut, sleeveless blue dress that drew attention to a compact bust. Her skin was deeply tanned, as if she'd just spent a week at the beach, and Josh also couldn't help but notice that she wasn't wearing a bra, her pert nipples pressing tightly against the thin material of her outfit.\n\n\"Excuse me?\" Josh asked.\n\n\"The young woman in the painting -- she's quite lovely, isn't she?\" the new arrival repeated. \"I assume you thought so as well, since you've been staring at her for almost ten minutes.\"\n\nAs if that hadn't been true, Josh glanced back at the painting, acting as if he was viewing it for the first time. It was a side view of a young woman about his age, with fair skin and brown hair done up in an elaborate style. Standing near the edge of a river bank with thick foliage in the background, the brunette wore a light colored dress dotted with an indistinguishable pattern, a garment that hung low enough around her body to expose both her right breast and the small of her back. It had caught Josh's attention as he walked past, her beauty compelling him to stop and take a better look. \n\n\"I guess she is,\" Josh finally agreed as he turned back to the woman behind him, trying to downplay his attraction to the semi-nude portrait. \n\n\"Do you think that, when she posed for that painting, the young woman had any thought that, over fifty years later, people would still be admiring her beauty?\" the woman in blue asked. \n\n\"Fifty years?\" Josh repeated, momentarily confused. \n\nStepping up beside him, the dark haired woman pointed to a small metal plate situated under the bottom of the frame. On it appeared the title of the painting, the artist and the year of the work, which read 1919.\n\n\"A small bit of immortality,\" the older woman said with a smile, \"or at least a chance to influence young hearts beyond her time.\"\n\n\"I guess so,\" Josh replied, feeling slightly embarrassed by the thoughts he'd been having about a woman now probably older than his grandmother.\n\n\"I love that the artist thought to leave at least something to the viewer's imagination, don't you?\" she asked. \"A bit of mystery for a potential lover to discover on their own.\"\n\nJosh looked again at the portrait and realized that she was right. It wouldn't have been half as captivating if she was totally nude. It was what you couldn't see that was the real attraction. \n\n\"Oh, let me introduce myself,\" the woman said as she realized that she hadn't done so. \"I'm Anya Martinez.\"\n\n\"Josh, Josh Miller,\" the younger man replied automatically.\n\n\"Well, it's nice to meet you, Josh Miller,\" Anya said with an inviting smile. \"I don't think I've ever seen you at one of Randolph's revelries before.\"\n\n\"Who?\" Josh asked, a puzzled expression on his face.\n\n\"Randolph Cabot, your host,\" Anya stated, an equally bewildered look on her own face. \"Don't you know whose party you're at?\"\n\n\"Honestly, not really,\" Josh admitted. \"Oh, I know he's a Broadway producer or something like that, but that's about it.\"\n\nHer expression now reflecting a bit of skepticism, Anya took a closer look at the young man. She hadn't thought much of it initially, but, in just a pair of slacks and a buttoned shirt, he did seem a bit underdressed for the occasion. \n\n\"Did you come here with someone?\" Anya asked, considering the idea that he was someone's date, adding to herself that he was certainly cute enough to be someone's boytoy. \n\n'No,\" Josh replied, quickly adding, once he saw the way she was looking at him, \"I guess I should explain.\"\n\n\"Maybe you should,\" Anya agreed, recalling someone saying that there had been a few recent robberies in the area -- two of which had occurred during parties. \n\n\"My uncle owns Ricci's Pastries and I sometimes make deliveries for him on weekends,\" he said, pulling a half dozen business cards from his shirt pocket, having only realized now that he'd forgotten to leave them by the dessert trays. \"I ...\"\n\n\"A food delivery, this late?\" Anya interrupted him, confirming with a glance at a nearby clock that it was almost a quarter to ten.\n\n\"As I was saying,\" Josh continued, ignoring the interruption. \"My uncle was just closing up shop when he got a call asking if we could deliver a second order because, the caller said, more people had shown up at the party than had been expected. They didn't care what we brought, but they needed it now. So, we just boxed up what we had left and that was it.\"\n\nTaking one of the cards and looking at it, Anya recalled that she herself had noted earlier that more people than usual seemed to have showed up for the party. Still, that didn't explain what the young man was doing out here admiring the artwork. Josh seemed to anticipate that question as he finished his explanation. \n\n\"After I made the delivery, I was about to head home to Brooklyn, when the gentleman who signed for it suggested that I hang around and get myself something to eat,\" he said. \"I hadn't had dinner, so I figured, why not?\"\n\n\"A tall, slender middle aged man, slightly balding with a beard?\" Anya asked.\n\n\"Yeah, that was him,\" Josh confirmed, her change in expression telling him that he'd just described Randolph Cabot. \n\n\"I'm sorry for being so suspicious,\" Anya apologized. \"I ...\"\n\n\"That's okay,\" Josh smiled, knowing that he was a bit out of place. \n\nWhat Josh didn't realize was that, even if he was no longer viewed with skepticism, he was still an object of curiosity in Anya's eyes. She wondered if the gregarious producer might have had an ulterior motive in inviting the young man to stay. It certainly wouldn't be the first time, she told herself, having observed several such occurrences herself. But then, after considering the thought for a few moments, she discarded it. Cute as Josh was, he really wasn't Randolph's type and besides, why take a chance on an unknown quality when the house was filled with affable guests, many eager to share his company? Anya, however, loved the challenge of unknown qualities. \n\n\"So, have you been enjoying yourself?\" Anya asked, changing the subject. \n\n\"Well, it's been interesting,\" Josh said diplomatically. \"The crowd here is certainly different than where I normally spend Friday nights.\"\n\n\"Oh, and where would you usually spend a Friday night?\" Anya inquired. \n\n\"My friends and I like to go to a disco in Bay Ridge,\" Josh answered. \"You might've heard of it, 2001 Odyssey, it's pretty popular.\"\n\n\"Named after the movie?\" Anya inquired, the Stanley Kubrick film having long been a favorite of hers. \n\n\"I don't know, maybe,\" Josh replied, having seen the movie even if he hadn't understood it. \"You know, they filmed a movie at Odyssey; some friends and I even got to be extras in it. It starred that guy from 'Welcome Back Kotter' and it's supposed to come out later this year. I don't what they're going to call it, but it was awesome.\"\n\n\"I'm sure it was,\" Anya replied, seeing that the young man was really excited by the fact that he got to be part of the scenery in a film no one would probably ever remember. \n\n\"Did you ever watch the show?\" Josh inquired. \"It takes place in a Brooklyn school.\"\n\n\"I'm afraid I'm not much of a television person,\" Anya admitted. She had heard the name of the show, but had never watched it. \n\nNor had she ever heard of the disco Josh mentioned. As popular as it might've been in Brooklyn, it was still in Brooklyn, and as far as most Manhattanites were concerned, it might as well have been Outer Mongolia. Now, if he was talking about that new place up on West 54th Street that had opened a few months ago, then she would've been impressed. \n\n\"Since you're out here in the hall admiring the artwork, instead of the main hall with just about everyone else, I assume you didn't find anyone in there that struck your fancy?\" Anya asked, again shifting the subject.\n\n\"Well, I know some of them are probably your friends, but I thought most of them were the most boring people that I ever met,\" Josh replied. \"All they seemed to be interested in was who was appearing in what show and what auditioning might be coming up.\"\n\n\"Of course, what did you expect?\" Anya laughed. \"After all, this is, basically an industry party. If Manufacturers Hanover had an office party, don't you think most of the guests would be talking about banking?\" \n\n\"I guess so,\" Josh agreed after thinking about it.\n\n\"You have to understand, most of the people that come to these little gatherings come to be seen, not to make new friends,\" Anya expanded. \"There are only so many roles per season, and it can get pretty cutthroat come audition time.\"\n\n\"Then why are you out here with me, instead of out there being seen?\" Josh inquired. \n\n\"I said most, not all, and even then, that really only applies to the talent,\" Anya said, explaining that her contribution to the industry was backstage.\n\n\"Oh, I thought you might be an actress,\" Josh noted. \"You're certainly pretty enough.\"\n\n\"Why thank you kind, sir,\" Anya said with a smile and a fake southern accent. \"In a way, I sometimes am an actress of sorts, but I much prefer being behind the curtain than in front of it.\"\n\nJosh was about to ask Anya what it was that she did when she cut him off again. \n\n\"Did you ever get something to eat?\" she asked, recalling what he'd said before. \n\n\"No, I never got around to it,\" Josh replied, adding that he'd spent his time exploring and listening to the people around him.\n\n\"I see,\" Anya replied. \"I asked because I'm suddenly feeling a bit hungry myself,\" she explained. \n\nJosh wrongly assumed that was Anya's polite way of excusing herself from the conversation. So he said that it had been nice to meet her and was about to move off when she corrected his impression.\n\n\"Where are you going?\" she said.\n\n\"I thought you wanted to go get something to eat,\" Josh said.\n\n\"I do, but that doesn't mean that I don't still want to talk to you,\" she smiled. \"You might not realize it, but not being part of the industry makes you possibly the most interesting person here tonight. What do you say I get us both a little plate of snacks and we can find a better place to chat?\"\n\nJosh thought that was a great idea and patiently waited by the portrait while Anya excused herself for a few minutes. When she returned, not only did she have a small tray of delicacies in one hand, but two flutes and a half full bottle of champagne in the other. \n\n\"I assume you're old enough to drink,\" she said as she handed him the glasses and bottle, \"not that I'm going to tell anyone if you're not.\" \n\n\"I'm twenty,\" Josh said as he accepted it.\n\n\"Oh, I remember twenty,\" Anya mused, a mischievous smile filling her face. \"Of course I was a much different person back then.\" \n\n\"Everyone changes as they get older, don't they?\" Josh noted.\n\n\"Some more than others,\" Anya again smiled. \"Oh, by the way, in case you're curious, I'm thirty-four.\"\n\n\"You're kidding,\" Josh reacted, surprise in his tone.\n\n\"How old did you think I was?\" Anya inquired.\n\n\"Twenty-six, maybe twenty-seven,\" he said.\n\n\"Now I'm definitely not letting you go,\" she laughed as, taking a better hold of the large platter in her hand, she motioned for Josh to follow her. \n\nShe led him down the hall, further away from the party, then up a back flight of stairs that led to the second floor. A second hallway followed, leading to a pair of French doors that opened onto a small terrace. There Josh saw a pair of padded chairs and a small table, nestled among a small forest of potted plants. Through small gaps in the greenery, the lights of midtown could just about be made out.\n\n\"Wow, this is amazing,\" Josh said as he laid the bottle and glasses on the table. \"Are you sure Mr. Cabot won't mind that we're up here?\"\n\n\"He won't if we don't tell him,\" Anya replied as she set the tray on the table. \"Now, why don't you pour us some of that champagne?\" \n\nAs Josh proceeded to do so, Anya seated herself in one of the two chairs, reaching out for one of the drinks once both glasses were full. She took a small sip and smiled.\n\n\"I'll say one thing about Randolph Cabot: when he throws a party, it's first class all the way,\" she said as she laid the glass back on the table.\n\nJosh also took a taste of his drink but other than thinking it did taste good, he had no way of judging the quality of it, his palate being more accustomed to beer than champagne. Still, he had seen the bill for the delivery that he'd made earlier and it hadn't been cheap. His uncle had nearly doubled the cost of everything and Mr. Cabot hadn't even given it more than a glance before signing it. \n\n\"Now, where were we?\" Anya asked as she took an hors d'oeuvre off the tray and popped it into her mouth. \n\n\"I was about to ask what it was that you did backstage?\" Josh said, remembered that he'd never gotten to ask. \n\n\"I'm a costume designer,\" Anya replied.\n\n\"I'm not totally sure what that is,\" Josh said. \n\nAnya took a few minutes to explain, after which Josh said it sounded like an interesting job. \n\n\"Oh it is, and I love it,\" she replied before asking what he did when he wasn't working for the catering service. \n\n\"Well, I've been taking a few college classes, but I'm really not sure what it is that I want to do yet,\" he replied.\n\n\"Few people are at your age,\" Anya offered. \n\n\"Did you?\" Josh asked.\n\n\"Since I was ten,\" she smiled.\n\nShe then proceeded to ask Josh a bit about his personal life, surprised to find that he didn't have a girlfriend. He replied that he did date often, but hadn't yet met anyone that he could see himself with long term.\n\n\"Well, there's no rush for that,\" Anya said. \"The important thing at this point in your life is that you enjoy it. Actually, that's the important thing at any point in your life.\" \n\nHaving been asked about his social life, Josh felt justified in asking Anya about hers. Like Josh, she replied, she dated when the mood struck her, but had not found 'the one' yet. Until then, she was just enjoying life as it unfolded. \n\n\"Besides, it takes an uncommon man to handle a woman like me,\" she concluded, before again reaching for her drink after having had another tidbit.\n\nEven having only just met the woman across from him, Josh had no doubt that was true. \n\nThey moved on to other topics, alternating questions back and forth long after both the snack tray and champagne glasses had been emptied. Josh learned a great deal about how a Broadway show was produced, finding it more complicated than he imagined. He'd once taken a drama course in high school and acted in a few plays, but none of them had been anything like what Anya described. \n\n\"Have you ever thought about being an actor, as a career I mean?\" Anya asked. \"You're certainly cute enough.\"\n\n\"Not really,\" Josh answered, a grin filling his face at the compliment. \"I mean, I enjoyed doing it, but making a career out of it seemed as much a matter of luck than talent.\"\n\n\"That's often true,\" Anya offered. \"What is it that they say? For every actor starring on Broadway, there's a thousand waiting on tables.\"\n\nJosh nodded his head, having heard at least a variation of that. \n\n\"Oh my goodness, look at the time,\" Anya said as she happened to glance at her watch. \"We've been talking for nearly two hours.\"\n\n\"It didn't seem like half that long,\" Josh remarked.\n\n\"Well, good company makes time fly by,\" Anya smiled, \"and you've been excellent company.\"\n\nJosh grinned, thinking that it'd been a long time since he'd just talked to someone. Of course the fact that Anya was also an attractive older woman didn't hurt either. Josh would've been lying if he didn't admit to having imagined how Anya might look if she had been the woman in the painting he'd been admiring earlier. \n\n\"Having said that,\" Anya continued, a noticeable disappointment now appearing in her voice, \"I'm sorry to say that I'm going to have to throw a damper on our fun. I came here with a friend and she wanted to leave by midnight. In fact, she's probably already looking for me.\"\n\n'I guess it was too good to last,' Josh thought as he said that he understood, adding that he'd probably overstayed his welcome anyway. \n\nAs Anya got up from her seat, she impulsively leaned over and kissed Josh on the cheek, saying again how nice it had been to meet him. \n\n\"You made what I expected to be a very drab evening anything but,\" she smiled, her hand resting on his shoulder for a long moment before turning away and heading back through the double doors. \n\nJosh stayed on the terrace another ten minutes or so, admiring the view. He wondered if he should bring down the now empty bottle and the glasses, then decided against it. Doing so might only invite unwanted questions about what he'd been doing upstairs. \n\nReaching the front entrance, Josh discovered that quite a number of guests seemed to have also decided to leave with the new day. A small crowd filled the vestibule as people made their goodbyes. \n\n-=-=-=-=-\n\nWith no one of his own to say goodbye to of his own, Josh managed to slip through the melee with little difficulty and work his way down the outside staircase of the town house to the street below. Heading for the side alley where he'd parked his small van when making the delivery, he'd gotten about a hundred feet away when he heard a now familiar voice.\n\n\"You're fuckin' kidding me,\" he heard Anya say to one of the other attendees in a voice loud enough to carry.\n\nCurious as to what was going on, Josh reversed direction and walked back towards the bottom of the staircase. \n\n\"I'm sorry, Anya, I didn't know Constance was your ride home,\" Josh heard a man he didn't know say. \"All I knew was that she was in no condition to drive, so I put her in a cab and sent her on her way. She didn't even mention your name.\"\n\n\"I guess it's too much to hope you took her car keys, if she was that drunk,\" Anya said, thinking that if he had, she could drive Constance's car herself.\n\n\"I figured she'd need her keys to get into her apartment,\" the man, whose name Josh later learned was Archie, said. \"Again, I didn't know that the two of you came together and besides, I thought you'd already left.\"\n\n\"I was up on the terrace,\" Anya said.\n\nArchie gave her a 'how was I supposed to know' gesture and then walked away, wiping his hands of the situation. \n\n\"Is there something wrong?\" Josh asked as he stepped up to Anya once she was alone.\n\nAnya was surprised to again see Josh, but quickly explained what had happened, filling in the gaps between what Josh had already overheard. \n\n\"It's going to be a bitch getting a cab this time of night,\" she noted as she concluded her narrative, \"and I fuckin' hate taking the subway at any time.\" \n\n\"Where do you live?\" Josh asked, something that hadn't come up during their conversation, other than a general comment that she lived here in Manhattan.\n\n\"Christopher and Hudson,\" Anya replied, \"down in the West Village.\" \n\nJosh was only marginally familiar with Manhattan, having been working in the city for just a few months, but did know where the West Village was. He thought about it for a few seconds, then quickly came to a decision. ",
        "\"I was planning to take the West Side Highway down to the Battery Tunnel,\" Josh said. \"That goes right past the West Village. It'd be no trouble to drop you off.\"\n\n\"Are you sure it wouldn't be too much out of your way?\" Anya asked, her voice reflecting both a sense of gratitude and a reluctance to impose. \n\n\"Not at all,\" Josh insisted, his own tone firm. \"A ten minute detour, fifteen at the most.\"\n\n\"Well, I am a bit underdressed for the subway,\" Anya grinned as she glanced down at her outfit, \"so I guess my answer is yes.\" \n\n\"Great,\" Josh said. \"Is there anyone you need to say goodbye to before we leave?\"\n\n\"No, we're good to go,\" she responded, slipping her arm through his as she gave him a warm smile of appreciation. \n\n-=-=-=-=-\n\nTraffic turned out to be heavier than Josh expected, so they didn't reach the West Village until shortly after one. Once there, however, Josh was gifted with an extraordinary bit of luck as, just as he turned onto the block Anya had directed him to, a car pulled out of a parking spot only a few doors away from the multi-family that she lived in. His original intention had been to simply pull in front of a hydrant and let her out. \n\n\"Well, here we are,\" Josh said as he shifted into park and turned off the engine.\n\n\"I really appreciate this,\" Anya said, again expressing her gratitude.\n\n\"It was the least I could do, since you only missed your ride because you were keeping me entertained,\" Josh said as he turned toward her. \n\n\"I don't see it that way, but I'm grateful either way,\" Anya replied.\n\nNot knowing what else to say, Josh merely smiled again.\n\nAnya turned to her right and started to reach for the door handle, only to abruptly pause. Withdrawing her hand, she turned back to Josh, a look of deliberation flashing across her face. The younger man was curious as to what might be going through her head, but thought it imprudent to ask. He did, however, think that her not having left yet was an encouraging sign. \n\n\"I know it's late,\" Anya finally said, \"but, seeing as you found a parking spot, I was wondering if you'd like to come in for a cup of coffee or something?\"\n\n'Or something,' were the key words that Josh's mind focused on, considering the myriad possibilities those two words might encompass in the few moments before he said that he'd love to. \n\n-=-=-=-=-\n\nAnya lived on the second floor of the three story building, in a small, three room apartment in the rear of the landing. It wasn't much, she said as she opened the door and let Josh in, but it served her needs.\n\n\"I hope you don't mind Mr. Coffee,\" Anya asked as she stepped over to the tiny kitchenette and took two coffee mugs from the overhead cabinet. \"I know some people still swear it doesn't taste as good as coffee made in a percolator, but I find it so much more convenient.\"\n\n\"Mr. Coffee is fine,\" Josh replied, thinking that his father was one of those people, even seven years after the automatic coffee makers had come on the market. \n\nAs the machine had already been set up for the morning, all Anya had to do was turn it on. Then, after telling Josh to make himself at home, she excused herself to change into something more comfortable.\n\nAlmost ten minutes passed as Josh sat on the couch and waited, long enough for the coffee maker to complete its task and shut off. He wondered if he should pour the coffee into the cups, but then decided to give her a little more time. A few minutes really wouldn't make a lot of difference in the coffee, he reasoned, but it would allow himself to wallow in the fantasy of why she had actually invited him up. \n\nIt would of course, be more than nice if his imaginings proved true, he thought, even as he acknowledged the unlikelihood of it. Things like that only happened in those adult paperbacks you found in the back of the candy store or in those movies they ran in some of those rundown theatres up in Times Square. \n\nOr so he told himself, right up until the moment Anya stepped out of the bedroom wearing nothing but a short nightdress and a pair of black panties, clearly visible through the thin material of the sleeping gown. As she walked toward him, it was clear the material of the gown was even thinner than the dress she had exchanged it for, because not only could he still see her nipples but now her full areolas as well. \n\nOnce Anya sat down next to him, he couldn't help but stare at her mounds, especially since it was apparent that she wanted him to do so. Long seconds passed until, not knowing what else to say, Josh pointed out that the coffee was done.\n\n\"Oh, is it?\" Anya asked as she moved closer to him, allowing a fragrant scent that hadn't been there before to fill the dwindling gap. \"Tell me the truth, Josh: when I asked you to come up, you were really hoping for more than coffee, weren't you?\"\n\n\"Yes,\" he admitted after a short pause, his voice low.\n\n\"Good,\" Anya smiled, \"because I'd have been greatly disappointed if you weren't.\"\n\nWith that, she laid a hand on his lap, her fingers coming to rest against the bulge found there. She gently squeezed his hardness, smiling even more as Josh reacted to her touch.\n\nJosh wasn't a virgin, and hadn't been since high school. In the interval since, he'd been with enough girls to feel fairly confident about his sexual prowess. Still, for some reason, he suddenly felt like the awkward teen that had traded virginities with Tina Gavin the night of the Prom. Was it, he asked himself, because Anya was older and more experienced, or was it something else? \n\n\"You've been with a woman before, haven't you?\" he heard Anya ask as she reached around to the back of his head and ran her fingers through his hair.\n\n\"I've been with girls,\" Josh replied, thinking that by stating the distinction it might alleviate his unexpected nervousness.\n\n\"Ah, so you think there's a difference between being with them and being with me?\" Anya asked as she brought her hand around and stroked the side of his face.\n\n\"Yes,\" Josh replied, again in a low voice.\n\n\"Baby, you have no idea how true that is,\" Anya laughed, before asking, \"Tell me, do you have an adventurous spirit?\"\n\n\"I think so,\" he answered, his tone more like normal as he began to feel more confident.\n\n\"We shall see,\" Anya grinned as she suddenly again slipped her hands to the back of his head and, pulling his toward her, kissed him hard on the lips. \n\n-=-=-=-=-\n\n'God, can she kiss,' Josh thought as he felt Anya's tongue swirl against his own, even as she took hold of his hand and placed it against one of her breasts.\n\nUnlike most of his friends, Josh had always preferred small breasts, in fact, both of his serious girlfriends had been no more than 32Bs From the familiar way Anya's mound fitted into his palm, he guessed her to be about the same size. His fingertips rubbed against her nipple, causing it to grow hard with his touch, even as their lips again met. \n\n\"Do you like my little titties?\" Anya asked once their mouths parted.\n\n\"I like them a lot,\" Josh replied.\n\n\"Then let's give you a better look at them,\" she offered as, grabbing the sides of her gown, she pulled it up and over her head, tossing it aside once it was clear.\n\nThe thin garment had barely hit the floor before Anya again wrapped her hand around the back of his head and pulled it down against her breast, slipping her now erect nipple between her lips. Filled with excitement at the unexpected turn of events, Josh eagerly drew the thick nub into his mouth, rubbing his tongue hard across it. \n\nThere was a sexual aggressiveness in Anya that Josh found incredibly exciting. Not to say that the girls he'd been with before had been wallflowers, but almost without exception each had insisted that they weren't that kind of girl, usually just before proving the opposite. The exception was Debbie Wachowski, who'd suck your cock in the back of the car if you so much as sprung for pizza and a coke and didn't really care who knew it. \n\nJosh continued to enthusiastically suck on her breast, duplicating his efforts on its twin in due course. His fervor spurred on by soft moans of delight from Anya, he again worked his way back up to her mouth, where another round of tongue hockey ensued, throughout which each of them eagerly used their hands to explore the other's body. Josh ran his hands down the length of Anya's back, soon reaching the cheeks of her ass, which he grasped firmly, the warmth of her flesh evident even though the opaque material. \n\nAnya ran her fingers down across his chest, tickling him through his shirt as her hand dropped lower and lower until it came to rest against his crotch. There, pressed against a cock already grown hard, she took Josh's measure, judging its length and girth until a smile appeared on her face. \n\nShe rubbed her hand back and forth a few more times, putting a smile on Josh's face as well. Then, after sharing one last kiss, Anya slipped off the couch and down onto the floor. Filling the void between his legs, she proceeded to eagerly undo his belt and the slacks that it held in place, tugging on the sides of the latter until she was able to pull both them and the simple white briefs beneath down to just past his knees. Once she did so, his no longer restrained cock popped up forcefully, standing erect on its own merit. \n\nAnya took a moment to admire Josh's manhood, pleased to see that it lived up to the appraisal she'd made with her hand. Six inches in length, and a third that in width, it was perfect for her needs. She pressed the tips of two fingers against the underside of its crown, then ran them down along its length until they reached the underside of his balls. Then, wrapping her entire hand around the base, she guided the now exposed treasure toward her waiting mouth.\n\n\"Oh God,\" Josh gasped loudly as the warm wetness of her mouth engulfed his manhood, sending a surge of delight rippling across his body.\n\nJosh was no stranger to blow jobs, having had his share of them from girls in the neighborhood, yet, it didn't take long for him to realize that this one was going to be different. He didn't know if it was simply because Anya was older, and presumably more experienced, but she certainly put Debbie Wachowski's celebrated skills to shame, and with it her claim that Brooklyn girls did it better. Still, that wasn't something to ponder now as Josh leaned his head against the back of the couch, content to just relax and enjoy Anya's attention.\n\nAnd enjoy it he did as, watching Anya's head bob up and down on his hardness, Josh felt a wave of lightheadedness wash over him, a pleasing fog that made it all seem almost surreal. But it was very real, he reminded himself, because no dream had ever made him feel so good. \n\nIt didn't take Josh long to feel a familiar sensation building in his loins, although, truth be told, his cock was so sensitive that it rarely took long, and he knew that it wouldn't be much longer before that growing pressure would erupt with explosive results. Experience had taught Josh that most girls didn't like having a guy come in their mouths, Debbie being the notable exception, so he thought it only proper that he warn Anya that he was about to climax, to give her a chance to back away from the impending eruption. \n\nOnce he'd done so, however, she didn't seem to have heard, or at least she didn't seem to react to the warning. In fact, if anything, she now seemed to be going even faster, bringing him even quicker to the edge as his cock became just a blur as it slid in and out of her mouth.\n\nJosh wondered for a second if he should warn her again, but barely a breath later it was already too late. His body abruptly stiffened and, as a resounding wave of ecstasy ripped across him as his cock exploded in climactic fury, sending the first streams of whiteness into Anya's mouth, impacting against the back of her throat, there to be quickly swallowed, making room for a second just behind it. \n\nThe third and final burst came too quickly behind the second, proving more than Anya could contain, and small parts of it spilled out of the corner of her mouth. Still, not even that gave her pause as she continued to suck on his cock until Josh had no more to give. Only then did she let his now shrinking manhood slide out of her mouth, rising back to her feet as it did so and taking a few steps back as well.\n\nJosh watched in amazement as Anya casually reached up with extended fingers and, using them to wipe away a smudge of white on her cheek, slipped them into her mouth where she licked them clean. \n\n\"Hmm, tasty,\" Anya smiled as she withdrew her fingers, again running the tips of them along her lips. \n\nShe paused for a long moment, her hand dropping down from her mouth to the small valley between her breasts. There she again hesitated, taking a few seconds to caress each of her nipples before resuming its descent. Reaching her panties, she brushed her hand across its width as a wanton expression appeared on her face.\n\n\"Think you might like to reciprocate?\" she said, her voice tinged with sexual longing. \n\nJosh was never really a fan of cunnilingus, but that wasn't to say that he ever shied away from going down on a girl -- especially if she'd already done the same for him. Fair was fair, he believed, especially if he hoped to put something more substantial than his tongue in there. He started to get up off the couch, only to have Anya hold up her hand, prompting him to pause.\n\n\"But before you do, there's something that you need to know,\" Anya said, increasing the distance between the two of them by taking a few steps back. \n\nConfused as to what she was talking about, Josh nevertheless watched intently as the dark haired woman reached down and undid the small clasp on the side of her panties. She held the now loose garment in place with her hand for a few seconds, then let it go, allowing it to fall to the floor.\n\nJosh's eyes followed the motion of the dark cloth for a second, then rebounded to focus on what it had concealed. At first, he didn't believe what he was seeing, thinking it had to be a joke of some kind. But then, his look of disbelief morphed into one of shock as he realized that it was indeed all too real. \n\nThere, dangling between Anya's legs, was a hairless cock and balls, almost equal in size to his own. Josh opened his mouth to say something, but the words wouldn't come. Finally, on his third try, he managed to stammer out a semi-coherent \"What?\"\n\n\"I told you earlier that it took an uncommon man to handle a woman like me,\" Anya said, taking a pause for a breath before asking, \"Are you that man?\" \n\n\"You're a ...\" Josh continued, only to still find difficulty finding the words. \n\n\"A woman with a little something extra,\" Anya said, completing the sentence in her own words. \n\n'Little?' Josh repeated in his mind, thinking that was hardly the word he would've chosen, especially as he watched Anya reverse her rearward steps, causing her cock to loom even larger in his view. \n\nHow could he have not noticed it before, he asked himself, then realized that, up to now, his focus had been on her face and breasts. If he happened to glance elsewhere, he only saw what he expected to see. \n\n\"So, what do you think?\" Anya asked, an inviting smile on her face.\n\n\"What do I think?\" Josh repeated, his voice finally fully back. \"I don't know what to think.\"\n\n\"Well, how about we start with the fact that you're still here,\" Anya pointed out. \"That you haven't already raced for the door, or even pulled up your pants.\"\n\nJosh reflexively glanced down as if to confirm what she'd said, only to discover something even more startling. Not only was his cock still hanging out, it was actually showing signs of renewed life -- as if he was being turned on by the unexpected development. Something that Anya could hardly fail to notice. \n\n\"I can imagine what's going through your head at this moment, and I'm willing to bet that the question you're least likely to be asking yourself is -- why haven't you left,\" she went on. \"The answer to that is actually quite simple: your curiosity won't let you.\"\n\nJosh didn't reply.\n\n\"Oh, I know that being interested in the idea of sucking cock isn't something that you'd ever admit to any of your friends,\" Anya said, \"but you can't tell me that the thought hasn't crossed your mind a time or two, even if you immediately told yourself afterward that it would never happen.\"\n\nJosh almost imagined Anya was reading his mind, or at least his fantasies. There had indeed been times that he wondered what a girl felt when she sucked his cock, a curiosity as Anya put it. And she was also right in saying that he would just as quickly assure himself that he could never do that with another guy. But that was the point: Anya wasn't another guy, and despite what was hanging between her legs he couldn't think of her as one. All he saw when he looked at her was a beautiful woman, one with, as she had put it, something extra. \n\nAnya could tell that Josh was mulling over her words and was willing to give him more time to sort it out. She really hadn't planned to wind up here with Josh, however interesting she'd found him, but fate seemed to have other plans. Normally, the men she was with knew about her uniqueness beforehand or at the very least, she would tell them before anything really happened. She almost did that with Josh, right after he'd accepted her invitation to come up, but something had stayed her hand. She just had a feeling that this was the way to go.\n\n\"So, lover,\" Anya finally asked, her use of the term drawing attention to what they'd already shared, \"what's it going to be? Do you stay or do you go?\"\n\nHis reply was barely audible and she had to ask him a second time. Much louder and clearer in its repetition, it brought a pleasing smile to Anya's face. \n\n-=-=-=-=-\n\nRemarking that it might be a good idea if he also got naked, Anya changed places with Josh on the couch and watched with keen interest as the younger man did just that. His body was well defined, not muscle bound, with only a light scattering of body hair. She asked him to turn slowly around, giving her a chance to admire both the front and back view. \n\n\"Hmm, good enough to eat,\" she remarked, adding with a soft laugh, \"but I already did that, didn't I?\" \n\nJosh was unsure if she'd meant that as a hint, but that was how he took it, moving into the same spot in front of the couch that Anya had previously occupied. His face only inches from her hard, hairless cock, he took a very long moment to study it, then, closing his eyes, he leaned forward and closed his mouth around it, taking in nearly half of it.\n\nHe started slowly, moving it back and forth between his lips, stroking it with his tongue. As he became more confident in what he was doing, Josh realized that it really didn't feel much different than the first time he'd gone down on a girl. In fact, Connie Jordan, who he dated after Tina, had an abnormally large clitoris, one that really did resemble a tiny cock. If he could suck on that, he told himself, then he could also this. \n\nTaking more of Anya's length, Josh became aware of a soft moaning from above him, a sign that he was clearly doing something right. He turned his eyes upward and saw Anya leaning against the back of the couch, her eyes closed and one of her hands gently stroking her breasts. Encouraged, the young man turned his attention back to the task at hand.\n\nHe began stroking the underside of her balls, even as he continued to use his tongue similarly against the sides of her shaft. The feel of her skin against his fingers was familiar, yet at, the same time, different. The longer he sucked on her cock, the less forbidden it became, until it finally seemed almost natural. \n\nUp until this point, Anya had been content to let Josh set his own pace, but that was about to change as she took on a more active role. Leaning forward, she laid both of her hands on the back of his head and began to pump her cock in and out of his mouth. A move that took Josh by surprise, but one he quickly adjusted to. In fact, having her take control brought a different kind of excitement, one that quickly took things to a whole new level. ",
        "Josh soon realized that he was no longer the one in charge as Anya fucked his virgin mouth with increasing speed, plunging her hardness all the way to the back of his throat. He'd heard the term 'face-fucking' but had never really understood it until this moment. With him still on his knees, Anya rose from the couch and began to jerk her entire body as she moved ever faster.\n\nA broad smile filled Anya's face, as much from the confirmation that she had been right about Josh as from the pleasures his mouth was bringing her. In a saner world, sex without regard to gender would be the norm, but that not being the case, most people never got the chance to experience all that the freedom to openly follow your desires could bring. At this moment, however, the world beyond the four walls of her apartment didn't exist, and nothing that happened within them was real. They were but shadows in the moonlight, free to be whatever they wanted until banished by the light of dawn.\n\n'I'm really doing this,' Josh thought as he felt Anya's cock again slide deep into the recesses of his mouth, the hardness of her flesh filling him.\n\nThe key, he reminded himself, was to just do it and not dwell on what he was doing. In his own way, he too was following the same line of reasoning as Anya -- shut out the world beyond and just enjoy the here and now. \n\nHis technique, he knew, was crude but was improving as he went, drawing on what he remembered of every girl who'd done this to him. The list wasn't that long, but it had been distinguished, at least from his perspective. His own cock was now as hard as the one in his mouth, causing him to reach down with a free hand and softly stroke it as well. \n\nTime seemed to slow as he continued to suck heartily, his lips sliding across her soft skin even as his tongue swirled up and down her length. His heart was racing and tiny tremors danced across his chest, raising his level of excitement to a new high -- at least the highest it had ever been while pleasuring someone else. \n\n\"Think you could handle it somewhere else?\" Josh heard Anya ask.\n\nIt took a long moment for him to realize what she was asking. Once he did, though, Josh was stunned to find that, rather than filling him with trepidation, the prospect filled him with even greater arousal. \n\nA few years back, during his senior year in high school, a friend had lent him an already battered copy of a book called 'The Rape of the A*P*E*', with the acronym standing for American Puritan Ethic. A humorous history of sex in America, the book had contained a quote that read -- \"Every man should be fucked at least once in his life so that he knew what it felt like to be penetrated.\"\n\nThe closest he had ever come to that was when Donna Petrocelli had slipped two fingers up his ass while giving him head. The sudden intrusion had indeed startled him, but he had to say, his climax had been extraordinary. \n\n\"Yes,\" Josh simply said, lifting his head off Anya's cock.\n\n-=-=-=-=-\n\nPleased with his reply, Anya took Josh by the hand and led him into the bedroom, instructing him to get up on all fours on her bed. She then moved over to a small night table, from which she removed a small, unlabeled jar. She coated her fingers with a generous amount of the clear greasy gel in the container, then applied it between the cheeks of Josh's ass, pressing first one, then two and finally three fingers inside of him, working both her fingers and the cool mixture back and forth.\n\n\"Hmm, it seems that you really like this,\" Anya remarked as she noted Josh's reaction to being penetrated. \"That's good, because now it's time for the main event.\"\n\nLooking back over his shoulder, Josh watched with increasing anticipation as, after removing her fingers, she again dipped them into the jar and applied the slippery balm across the crown of her cock, and then down along its sides. Now fully erect after his oral ministrations, Anya's cock was indeed almost a mirror of Josh's in size and appearance. \n\nAfter using a small towel to wipe off her hands, Anya climbed onto the bed behind Josh and positioned her cock between his ass cheeks, its head resting against that most forbidden of barriers. She gently eased forward, just enough to force it open and slip her crown past the folds.\n\nJosh let out a loud gasp as he felt the edge of her hardness move inside him. There was a brief pain, but one that was matched by a surge of excitement that almost canceled it out. Anya asked if he was okay and, once he said that he was, she pressed forward again, this time continuing until half of her was inside him. \n\nAgain she paused, asked if he wanted her to go on, and upon his consent, completed her entry, filling him with her full length. There she waited to let him get used to it, sliding back once he had, moving forward once more once until she had again reached the halfway point.\n\n\"Now I'm going to go a little faster,\" she said as she began to pick up speed, soon establishing a rhythm, one that grew in strength with each passing motion. \n\nThe quote from that book echoed in Josh's mind, forever searing this moment in his memory. Never again would he enter a woman with anything but respect for what she was feeling. For now, however, it was enough to just relax and enjoy it. \n\n\"God, you're tight,\" Anya commented as she began to slide back and forth with increasing ease, as resistance gave way to acceptance and pain was supplemented by pleasure. \n\nIt wasn't long before she was really fucking him, her balls slamming against his ass as she drove deep inside his ass. His head buried against one of the pillows, Josh pressed his body back to meet her forward thrusts, her hands squeezing his cheeks with each new penetration. \n\nReaching down between his legs, Josh took hold of his own cock and began to massage it, trying to time the motions of his hand with those of Anya's body. A warm, growing wave of satisfaction washed across his naked form as he felt an orgasm building inside him, one also echoed in the woman joined to him. Climaxes that would soon reach their zenith.\n\nGripping his ass tightly, Anya pressed forward one more time, driving her cock deep within him just as it exploded with all of the force her long abstinence could provide. She continued to pump her hardness in and out of him until there was no more to give. \n\nJosh's cock erupted mere moments after Anya's, sending his climax in a different direction as it impacted against the sheets of her bed. The force of his climax had been even greater than that time with Donna. \n\nAnya dropped on the bed next to Josh, pulling him to her, their mouths meeting forcefully as she pressed her body against his. They held each other tight, long after the oscillating waves of desire had calmed. Nearly a quarter hour would pass before, now covered in their mutual sweet and orgasmic aftermath, they untangled themselves. \n\n-=-=-=-=-\n\nA cleansing shower followed, one that had to be repeated with the breaking dawn as, between the two showers, Anya had taken Josh inside of her as well. The orgasms from that encounter proved just as satisfying.\n\nThe morning sun had washed away the last of the night's shadows as Josh climbed back into his van. He glanced up at the building before slipping the key into the ignition, trying to imagine that Anya was looking down at him at the same time. The last few hours had certainly contained a unique experience, one that he was unsure would ever be repeated. Still, even though it only existed in memory, it would forever be part of him and would, in the future, never let him ignore life's opportunities. \n\n\"Not a bad night at all,\" he said to the empty air as he put the van in gear and pressed down on the gas pedal.\n\nEND"
    ],
    "authorname": "Ann Douglas",
    "tags": [
        "transgender",
        "first time"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/shadows-in-the-moonlight"
}