{
    "title": "The Link Pt. 02: The Hunted",
    "pages": [
        "Author's Note: This story was edited by RPGer. I can't thank him enough for all the time he put into it. Hopefully, my errors have been minimized. If you haven't read 'The Link,' then you might be a little lost. \n\n<p align=\"center\">Chapter 1 - Teegan</p>\n\nI am human, mostly. At least, that's what I've been told. I don't always feel human. Then again, what high schooler does? My friend Samantha tells me she doesn't feel normal either, and she came into the world the old-fashioned way. Maybe I would feel more normal if I had a date for the prom. \n\nOld Town, Maine is where I've lived most of my life. I don't remember my early childhood, which I'm told was fairly exciting. My mom tells me I was a happy baby, and Dad fondly calls me Stinky from time to time. Not sure how that's supposed to make me feel. Mom always scolds him and forgives him in the same breath. \n\nI was born with a gift, or so they call it. Uncle Hank calls it my power. I've never given it a name and usually find it more of a nuisance. It circulates in my mind, hemmed in by barriers I have built so that it doesn't leach out at the simplest touch. Consciously, I can keep it stable and inside. Others find it amazing, though I have yet to see any great benefits. I guess it's like being a rock star. You play all that wonderful music, but barely hear it yourself because the amplifiers have ruined your ears.\n\nThe world is filled with music only I can hear. It's not really a sound as the ears know it, more a bombardment of waves that moves into and through me. I know them to be people, but the din is overwhelming and useless. I've learned to filter it out of my life, ignoring what I don't understand and letting it pass untouched, or unthought of. Some of the rhythms I know well and don't ignore, though I can if I choose. \n\nMy younger brother Zane thinks it's a power. Of course, he thinks Uncle Hank is always right about everything. I'm sure it has something to do with the gifts Uncle Hank brings during his visits. I bonded with Zane when he was still in my mother's womb. My dad told me it was the most amazing thing he had ever felt, but of course, I was too young to remember. I keep wondering if I peaked at a year-old and it's all downhill from there. \n\nBonding is a lot like recognizing a voice. In the midst of the cacophony, I can find those I know well. The better I know them, the easier they are to find and the harder they are to block. Everyone has their unique set of rhythms. By touching someone new, I can, if I choose, synchronize my music with theirs. The waves are more pronounced when I touch, allowing me to easily separate them from the noise. Uncle Hank thinks touching increases the resonance. I just know it allows me to single them out from a world of noise. \n\nI don't synchronize with others. My family are the voices I know best and I prefer to keep it that way. Mom requires a shift in style, more of a twangy country beat. Zane's music is quicker with a slight staccato pattern. Dad hardly takes any effort. Our emanations are nearly the same, bonding with him is as easy as breathing. He's like a cozy blanket over my mind when we flow together. It's like I was designed for him. Designed is a good word for what I am. \n\n\"Come on, Teegs,\" Zane begged, \"Mom said I can go if you drive me.\" Zane had shortened my name from Teegan to Teegs when he was two. I hated that some of my friends had latched onto it as well. Zane had friends he wanted to meet at the mall in Bangor. Of course, that meant I would have to hang out until he was done. I would have said no, but I could feel how much he wanted it. No matter what barriers I build, my family could always leak through when I lost concentration. Truly a nuisance.\n\n\"You'll owe me,\" I said. I might as well have given him a million dollars. His joy surged into me. Okay, it wasn't all a nuisance. I could probably parley that joy into him doing some of my chores. I watched his blond hair bouncing as he ran upstairs to get ready. It was a strange cut, buzzed short around his ears and neck, but longer at the top so that it could be parted down the middle. \n\n\"Someone must have said yes,\" my Mom said as she rounded the corner from the kitchen. She always worked from home when we had a holiday from school. Not that we needed an adult, it was just a habit that she had continued from when we were younger. \n\n\"No secrets in this house,\" I said, letting it become a nuisance again. Mom leaned down as she passed and kissed my forehead. At the same time, I felt her love mixed with a little pride. I wanted to hate the intrusion, but it felt good. I really needed to graduate and head out on my own. I needed the distance to find who I am without the constant intrusions. \n\n\"I'm glad you look out for him,\" Mom said. \"He always 'does' before he thinks. With you around, he thinks more.\" \n\n\"That's how I spend my time,\" I complained, \"thinking.\" Mom stopped and turned back toward me. She had been growing her hair longer. Not as long as mine, but past her shoulders. I think she was dying it darker, trying to fight off some gray. \n\n\"Do I hear a little self-pity?\" Mom asked. Her smile disarmed my next complaint. She rounded the couch and sat down next to me. I wasn't prepared for a mother-daughter talk, but I did want to complain. \n\n\"Zane's got more plans than I do,\" I said, \"more friends, more things to do. I have nothing. Maybe I'll become a hermit, or join a convent.\"\n\n\"Giving up at eighteen,\" my mother teased. Her hand wrapped around my shoulder and pulled me close. \n\n\"It's not funny,\" I said, sending my disgust when I should have kept it to myself, \"I'll be one of those cat ladies you see on the news.\" I was older than my birth certificate. My birthday was moved two and a half months forward from my actual birth. We were in hiding, and the date change helped keep my identity hidden. Something about making database queries less effective. \n\n\"Still no date?\" Mom asked. I felt her sympathy and was happy it didn't contain pity. Pity would have made me angry and I didn't want to be mad. I wanted to be sad. \n\n\"I'll be the only one without a date,\" I sighed, \"destined to the prom-loser table.\" I felt a burst of love from Dad. He was out of town on business and my sadness leaked. He could be a million miles away, and I would feel him. I concentrated and blocked his link. He was ruining a perfectly good bout of misery. I didn't want to be content with my lot in life; I wanted more.\n\n\"There's still plenty of time,\" Mom said, \"you could always ask someone yourself.\" I rolled my eyes. \n\n\"Women don't ask men,\" I said, \"it would just confirm I'm desperate. Look at the loner begging for a date.\" I over did the waving of my arms, but I was exasperated. \n\n\"Your father would have never asked me,\" Mom said. \"Some men need a little prodding. There's nothing wrong with a woman asking a man in this day and age.\" It was easy for her to say. She had the love of her life. Parents always pretended that things were easy after their lives were settled. Mine was unsettled and there was no way I could ask a guy to the prom. \n\n\"Yeah, I guess,\" I lied. \"It's just that it's supposed to work the other way.\" Samantha turned down one guy and then accepted Gene's request. She had an overflow, making me feel ugly and unwanted. I was happy for her, of course. Sort of. It would be better all around if some guy would just ask. \n\n\"If life were perfect, we wouldn't have had to change our name and hide here in Maine,\" Mom said, \"There's always something that throws a wrench in the works. It's how we deal with those things that defines us.\" I didn't roll my eyes. I wanted to, but I knew it would insult her. She had no idea how bad it felt to be unwanted. Well, unwanted by people outside of my family. I feel nearly invisible to my peers. \n\n\"Samantha has a date,\" I complained. \"How can I show up without a date?\"\n\n\"You've cut off your father,\" Mom interrupted. Her smile was forgiving, \"This is really bothering you.\" \n\n\"He makes me forget that I'm unwanted,\" I admitted. \n\n\"You're far from unwanted,\" Mom said, pulling me tighter, \"I'm sure if you asked someone, they would jump at the chance. There are probably a bunch of boys trying to work up the courage to ask you.\" I collapsed into her embrace. \n\n\"Then why don't they?\" I said, my eyes welling up. \n\n\"Their fear is no less than yours,\" Mom whispered, stroking the back of my hair. \"The idea that you would tell them 'no' is a crushing weight.\"\n\n\"Two boys have asked Samantha,\" I countered. \n\n\"She's not as smart as you,\" Mom continued. \"Boys fear what an intelligent girl might say. Males have a problem not being superior. They don't always recognize that we're just people on the inside.\" \n\n\"Are you telling me to act stupid?\" I asked. Mom chuckled and kissed my forehead. I liked the laugh, it was soft and meant to counter my statement. I curled in closer, something I hadn't done in a few years. I could feel how much Mom liked it. \n\n\"Never be what you're not,\" Mom said softly. \"There's a man out there waiting to meet you. You may not find him tomorrow, next week, or in a year. Just trust me that he's out there feeling empty, and waiting for you to fill up his life. When you find him, you have to have the courage to tell him so.\"\n\n\"What if he doesn't want a freak?\" I said. The thought came so quickly I didn't have a chance to hold it back. For many years, my so called power had eaten at me. I was unique in the world, destined to float through it as an anomaly. Alone.\n\n\"My sweet girl,\" Mom said, her eyes now as wet as mine, \"you are not and never will be a freak. You have more love than anyone. There's someone out there; you just need to find him and flatten his tires.\" I half cried, half laughed at her words. Dad had told us about my late Grandmother's tale of meeting her husband, my grandfather. A delivery man whose tires she secretly slashed to get him to stay awhile. \n\n\"You want me to play dirty,\" I said, my smile creeping toward my teary eyes. \n\n\"Absolutely,\" Mom said, wiping her eyes, \"Men can be idiots when it comes to women. They learn quickly enough with our help. Your father was no different.\"\n\n\"There aren't many men like Daddy,\" I sighed. \n\n\"No,\" Mom said, smiling about things I didn't want to know, \"but there is someone out there who will someday hold your heart more tightly than your father.\" I liked the idea of finding someone I could love and be loved by. I had been kissed a few times and found it enjoyable. Nothing like those heart-pounding experiences I had read about. Certainly nothing like the passion I had seen in the movies. Maybe I should have let it go beyond kissing. I was sure I was missing something.\n\n\"Are you two done?\" Zane called from the top of the stairs. I blushed and wiped my eyes. It sucks when I forget to shut him out of my moods. I knew he wanted to get going, with his friends waiting and an exciting life to pursue. \n\n\"Yes,\" I shouted back. Mom kissed my forehead again and let me go. Her smile was as important as her kiss. Nothing was solved, yet I felt a little better. It was good to know that men were stupid. Somehow, it was important to know they were my equal. \n\n<p align=\"center\">*****</p>\n\n\"If I tell you something, you promise not to get mad?\" Zane asked me as he buckled his seatbelt. I looked over as I pushed the start button. He had on his I've-done-something-I-regret face. The same one he had on when Dad made him tell me he was the one who spilled ink on my American Girl doll's dress in the fifth grade. \n\n\"No,\" I said and meant it. I pulled the car out of the driveway. \n\n\"I heard what you said to Mom,\" Zane said anyway, then his voice went to a whisper, \"then I felt it.\"\n\n\"So what,\" I nearly yelled, \"like you never have issues. You should mind your own damn business.\"\n\n\"You know I can't,\" Zane said, \"it's not like I can stop it.\" My bond to my family had become an all or nothing thing. Any feelings beyond normal were broadcast loudly.\n\n\"Sorry.\"\n\n\"It's my fault,\" Zane said as he looked at his feet. I felt his shame and regret. \n\n\"What,\" I said, trying to remember to look at the road, \"that I'm too weird to be dated?\" \n\n\"No,\" Zane stuttered, \"I mean yes, but not because you're weird.\"\n\n\"What are you babbling about?\"\n\n\"Mason Crawford asked me about you,\" Zane said.\n\n\"He's a jerk,\" I said quickly. Mason was only interested in Mason. He broke into the school once to have a look at an upcoming math test. Everyone knew he did it, but he blamed it on Levi Patterson, a freshman, who had helped him. Levi was immediately expelled and ended up in a private school. \n\n\"He's not the first one to ask,\" Zane admitted. \n\n\"Ask what?\" \n\n\"About you,\" Zane hedged. \n\n\"What about me?\"\n\n\"Guys ask me about you,\" Zane replied. \"They think I control your social calendar or something.\" \n\n\"Ask what?\" I repeated, looking at Zane.\n\n\"The road,\" Zane said quickly, pointing forward. I looked back and straightened the car. I took a deep breath and repeated my question again.\n\n\"They want to know things,\" Zane said, \"like if you're with anyone. I don't like how they say it, so I sort of brush them off.\"\n\n\"What did you say?\" I asked, wondering if I should be angry. \n\n\"Mason asked if you had a date for the prom,\" Zane said, then he looked out the passenger window and mumbled something I didn't understand. I could feel Zane's apprehension. It was ink all over my doll's dress again. \n\n\"Zane?\"\n\n\"I told him you had a date,\" Zane said. \n\n\"So what?\" I said, \"he's a jerk.\" \n\n\"It kind of got around school,\" Zane said. He gritted his teeth and looked back at me. \n\n\"That he asked about me?\"\n\n\"That you already have a date,\" Zane admitted. Anger, mixed with relief, filled me quickly. Anger that I was dateless due to my brother, relief because it wasn't that I was a social outcast. \"The road!\" Zane shouted. \n\nMy eyes refocused, and I pulled the car back across the centerline and into my lane. A million feelings ran through me, and I lost concentration. I felt my father's feelings intermingle with my own stabilizing my train of thought. The anger lessened. \n\n\"The thought of Mason even talking to you...\" Zane said, \"well, I wanted to hit him.\" I took a deep breath and concentrated on my driving. \n\n\"He'd kill you,\" I said. Mason was the star running back for the football team. One of the reasons the school didn't look too deep into the break-in. \n\n\"I lied,\" Zane admitted. \"I didn't think it would go any further. They shouldn't be asking me about you.\" I could feel the contradiction in his mind. He wanted to undo it, and yet do it again. Whatever problems we had, Zane and I were brother and sister. Closer than most due to my power. \n\n\"Next time,\" I said as calmly as I could, \"tell me when crap like that happens.\" \n\n\"Sorry.\"\n\n\"Who did you say I was going with?\" I asked. \n\n\"Some college guy,\" Zane replied, \"he's a lot bigger than Mason.\" I had to laugh. My brother was protecting me as best he could, and now I had an imaginary Frankenstein-like boyfriend. \"I didn't want him to think he had a chance,\" Zane added in his defense. \n\n\"He never did,\" I said when my breath returned, \"and thank you.\"\n\n\"You're not mad?\"\n\n\"Furious,\" I said, \"and grateful.\" How could I hold it against him? I couldn't, not with my father's strength in me. I did need a date for the prom, but I needed a faithful brother more. \n\n\"You know that Mom doesn't like you blocking Dad,\" Zane said almost offhandedly. He had felt me letting Dad in again. \n\n\"She's never said anything to me,\" I said, \"I only do it when I want to feel only me. It's hard sometimes, being with everyone.\" \n\n\"Mom likes to feel Dad,\" Zane said with a stupid smile. \"When you block him, you block her from him.\"\n\n\"Gross,\" I said, imagining what he was implying. \n\n\"Yep,\" Zane laughed, \"better you than me.\" I couldn't imagine how others would feel about my family. Zane grew up with it from before day-one. He knew no other way. Dad and Mom had taken it on of their free will. I wondered what kind of family I could have. Would it be true love or some type of bonded slavery? I often wondered if I was the reason Mom and Dad were Mom and Dad. \n\n<p align=\"center\">Chapter 2 - Teegan</p>\n\n\"Two hours,\" I reminded Zane as I pulled up in front of Dick's Sporting Goods. The mall wasn't worth two hours of browsing, but if I walked slowly enough, I could chew up the time. \n\n\"Three,\" Zane negotiated as he unbuckled. \n\n\"Two or you're walking home,\" I insisted. He smiled, knowing I wouldn't live up to the threat. \n\n\"I'll call you in two,\" Zane said, and quickly left before I could solidify the time. He would call me in two hours and attempt to pad the clock. I sighed and drove to the other side of the mall to park next to Macy's. Their shoe department had some boots I had been eyeing. If they were on sale, it might make the trip worthwhile. No way Mom would turn me down if I'm driving Zane around.\n\nThe store was empty of customers as I made my way to the shoe department. It was nice to roam the aisles without having to dodge strollers and bags. I found the boots quickly, brown leather with a brass buckle holding barely useful leather straps secure above the ankle. It was a tall boot that would look great with my skirts. I liked the lines and the way it would shape my calf. The $260 price tag was more than Mom would swallow, at least not without a birthday or Christmas. \n\n\"Those would look so good on you,\" I heard from behind me. I recognized the voice as Samantha's and turned with a smile. \n\n\"They would, wouldn't they?\" I agreed. Samantha nodded. I held my smile even though her hand was entwined with Gene's. I was disappointed she wasn't alone. I hated my jealousy. \"Hi, Gene.\"\n\n\"Hi, Teegs,\" Gene said as he pushed some of his auburn hair out of his eyes with his free hand. He had one of those chiseled faces I wasn't sure was handsome. I knew he wasn't ugly, or average, it was just that something wasn't quite right with the symmetry. \n\n\"A little over my budget right now,\" I added, putting the boot back on the display table. \"You two doing some shopping?\"\n\n\"Just hanging out,\" Samantha smiled. Gene looked strangely at her like he didn't understand. I could see Samantha squeeze his hand hard. His face went quiet, and he left it alone.\n\n\"Prom dress?\" I asked. Samantha didn't want to remind me that I was without a date. \n\n\"Tux,\" Samantha replied almost sadly. I loved her and hated her in the same thought. It wasn't pity in her tone; it was regret. \"You shopping for boots?\" she asked, trying to change the subject. \n\n\"NO, chauffeur,\" I replied, \"Zane is running around here somewhere.\"\n\n\"Doesn't he have his license yet?\" Gene asked. He let go of Samantha's hand, strangely making me feel a little better. \n\n\"Another five months,\" I answered shaking my head, \"We'll have to share the car then, so I'm not sure I'm looking forward to it.\" \n\n\"Look,\" Gene said, \"we don't know what we're doing. If you got some time, maybe you could help out.\" His eyes were honest though Samantha looked hesitant. \"I could use another opinion,\" Gene added as he looked at Samantha, then back at me. I wasn't sure if I wanted to get involved in Gene's tux. Being the third wheel wasn't appealing. \n\n\"You've always had better taste than me,\" Samantha said. \"We could use the help.\" There was an honest pleading in her voice. I had two hours to kill.\n\n\"Are you sure I wouldn't be in the way?\" \n\n\"Not if you know anything about tuxes,\" Gene said. \n\n\"Please,\" Samantha said. She smiled and looked at me in a way only I would understand. It wasn't the get-lost look; it was her please-come-with-me face.\n\n\"Well,\" I said, \"I'm not sure I know what's fashionable, but I can veto the dogs.\" Gene smiled and nodded his head. Samantha grabbed my hand and pulled me down the aisle. At least I wasn't going to wallow in self-pity all day. ",
        "We spent the walk to the formal store discussing Mr. Prichard's pre-calc test. Everyone was in agreement that it was way too difficult, and contained problems we'd never discussed in class. Mr. Prichard was a math geek and thought the world loved it as much as he did. He always wore a bow tie and began the day with 'Ladies and gentlemen, welcome to the world of numbers.' 'Welcome to hell,' most of us would think. \n\n\"He'll have to curve,\" Gene said, more trying to convince himself than us. Gene's parents forced him into AP classes. He had always struggled to keep his head above water. \n\n\"There's always someone that wrecks the curve,\" Samantha said, then turned her head. \"Isn't that right Caleb?\" I turned to find Caleb McGuire following about five steps behind us. His face turned ten shades of red as he fumbled for a response. Scholastically, Caleb was brilliant. Socially, he lacked a strong presence. I could tell that Samantha calling him out hurt him almost physically. \n\n\"I screwed up the extra credit problem,\" Caleb said defensively. His raven hair was hanging sloppily over his ears, almost like he was in the midst of trying to grow it long. The part on the left side was askew with windblown strands crisscrossing over it. \n\n\"Did you screw up the curve?\" Gene asked ominously. I was surprised when Caleb didn't flinch. I didn't know him well, but I figured he would be fearful around someone as tall as Gene. Caleb played violin in the school orchestra. Gene; basketball and track. \n\n\"Probably,\" Caleb replied strongly, \"I can't dunk a ball, so I ace tests.\" I was surprised at his stance. It wasn't threatening, but it was wall-like. He wasn't going to back down at Gene's words. Caleb was my size, around a head shorter than Gene. \n\n\"Touch\u00e9,\" Gene laughed. Caleb relaxed and smiled. I heard Samantha let out a breath. She hadn't been sure of how Gene would react. \"You know anything about tuxes?\" Gene asked. \n\n\"About as much as dunking a ball,\" Caleb admitted. \n\n\"Well,\" Samantha said, \"you can join us anyway. Save you the trouble of following us around.\"\n\n\"I wasn't following,\" Caleb defended himself. His face was going red again. \n\n\"Come,\" I said, \"keep me company. I don't want to feel like the third wheel.\" Caleb wasn't really in my circle of friends, but his backbone impressed me and I wanted Samantha to stop teasing him. I don't think he could hold his own against a woman. He brightened immediately and agreed. I felt his smile was more than it should have been. We were only going tux shopping. \n\n\"So,\" Gene said when the four of us were mobile again, \"when are we going to meet this college guy? I hear he plays for Notre Dame.\" It was my turn to blush. \n\n\"What are you talking about?\" Samantha asked. She looked to Gene, then to me in confusion. I sighed. \n\n\"I heard Teegan's date goes to Notre Dame,\" Gene replied to Samantha. Samantha looked at me, probably wondering why I never told her. \n\n\"I heard he's the backup left tackle,\" Caleb added. \n\n\"There's no college guy,\" I said, \"Zane made it up and it got around.\" Weirdly, Caleb smiled again. I turned away from him, not understanding why he found my datelessness humorous. \n\n\"Why would he do that?\" Samantha asked.\n\n\"Mason Crawford asked him if I had a date for the prom,\" I replied. \n\n\"He's a jerk,\" Samantha said. I nodded. \n\n\"Zane didn't know what to do, so he made up a guy bigger than Mason,\" I said. Gene laughed, and Samantha slugged him in the shoulder. \n\n\"Why didn't you tell me?\" Samantha demanded of Gene. \n\n\"You guys are like best friends,\" Gene defended himself, \"I thought I was the last to know.\" Samantha turned to me. \n\n\"I just found out on the ride over,\" I said, shrugging my shoulders. \n\n\"That's why no one's asked you to the prom,\" Samantha said, moving closer to me. \"God! I was beginning to think all the guys were just stupid.\" \n\n\"I can dump this violent woman,\" Gene said as he rubbed his arm where Samantha had hit him, \"and escort you to the prom.\" Samantha went still facing me, away from Gene. I could see the smile on her face, but Gene only saw the stillness. \n\n\"I'm joking, Sam,\" Gene pleaded. Samantha turned and showed him her smile. For a second, I thought they were going to do some mushy public display. Instead, he held out his hand, and she took it. I guessed that's how they forgave the little things. \n\n\"Store's just around the corner,\" Caleb said, pointing the way. He still had that strange smirk on his face. It was slightly uncomfortable, but we followed his lead anyway. \n\nWe were all busy looking at the manikins, trying to envision the displayed tuxes on Gene. All of the attendants seemed to be busy at the moment. Samantha didn't seem pleased with any she was seeing, and Gene looked completely out of place. I was able to nix a few of the styles, but was indeterminate about the rest. \n\n\"What color is your dress?\" Caleb asked out of the blue. His eyes moved to Samantha, who looked surprised at his question. \n\n\"Off white,\" Samantha replied, \"I think they called it champagne.\" Caleb nodded and walked farther down an aisle as if the information had meaning. He was busy along a rack as the rest of us tried not to look stupid. I hadn't realized how many styles there were. Samantha was busy pointing out certain looks and Gene dutifully shrugged his shoulders. \n\n\"Here,\" Caleb said, handing a set of hangers filled with clothes to Gene. I was again struck by the confidence he showed. I've been going to school with him for years, and never knew he had an individual thought. Of course, I had never spent any time with him before. Gene shrugged and took the clothes into the dressing room. \n\n\"I thought you didn't know anything about tuxes,\" I pointed out quietly to Caleb. Samantha was three racks over, still mesmerized by the number of choices. \n\n\"I know everything there is to know about dunking a ball,\" Caleb whispered, \"I'm just not tall enough to do it.\" I covered my mouth and held back a laugh. Again he surprised me. Orchestra nerd with a sense of humor. \n\n\"Where are you going after you graduate?\" I asked, shifting closer. His humor had shrunk my personal space. Caleb was becoming one of those surprising people you wouldn't mind knowing better. \n\n\"Not sure,\" Caleb said, moving a step away under the guise of examining a tux further down the rack. \"I've been accepted to MIT, but my parents want me to go to Stanford.\" My eyes widened. I didn't know he was that smart. I didn't think anyone at our school went to those types of schools. \n\n\"Wow,\" Was all I could say. Caleb shrugged. \n\n\"I would prefer Northwestern,\" Caleb sighed. \"I love the violin more than math, and they have a killer program.\" He looked at me, and I saw sadness in his eyes. \"My parents only see dollar signs.\"\n\n\"Have you told them?\" I asked, more interested than someone who barely knew him should be. \n\n\"Yep,\" Caleb replied, nodding. I could see his parents dislike of the idea on his face. I didn't like the resignation. \n\n\"You know,\" I said, lightening my tone, \"I don't think I have ever heard you play. I mean, I've heard the orchestra, but never just you.\" \n\n\"I'm playing on Saturday,\" Caleb said, \"I've been invited by the Smooth Gliders.\" He looked at me with apprehension. \"Well, their sax player, at least.\" \n\n\"You mean for money?\" I asked. I didn't know he was that good. \n\n\"Not this time,\" Caleb smiled, \"though I have done weddings and things.\" He was proud of his music. I could hear it in his voice. \n\n\"So, like, you just jam with them or something?\" \n\n\"Sort of,\" Caleb replied, turning toward me, \"Tom, the sax player, was a speaker at a music workshop I attended last year. He played something that really got to me.\" He smiled deeply. \"You know, when a song just sort of grabs you?\" I nodded knowing exactly what he meant. \"Well, it was a work in progress, and Tom and I improvised on it instead of eating lunch.\" Caleb chuckled as he remembered. \"It was like I knew where the tune was headed. Violin and sax are a really odd pair, but it worked. We've been trading emails every since.\"\n\n\"You're going to play it for an audience?\"\n\n\"Sure,\" Caleb said, \"music is for ears. The more, the better.\" I couldn't imagine getting on stage and performing for a crowd. Again, his confidence impressed me. \"It's just a side piece, nothing headliner, but it will be fun to play with a professional.\" \n\n\"Wow,\" I said again. I had Caleb sorted beneath me on the social scale. Now I wondered if it was me below him. High school was ending, and the normal sorting was quickly disintegrating. \n\n\"If you'd like to hear,\" Caleb said, his voice weakening as he spoke, \"I can get you a seat.\" \n\n\"Sure,\" I agreed, \"I can promise at least one standing ovation.\" It had been a long time since my words had made someone outside my family happy. His face lit up, and he stood taller. \n\n\"Okay,\" Caleb said, \"give me your number and I'll text the information when I get home.\" I was giving him my number when Gene walked out of the changing room. \n\n\"Damn,\" Samantha said too loudly. Gene's eyebrows raised at her word. He turned into a three paneled mirror. \n\n\"Damn,\" Gene repeated. He looked beyond handsome, even if the pants did need altering. It was a black two button jacket cut short at the hip. A shocking white shirt with point collars was held firm by a champagne bow tie. Between the shirt and jacket was a champagne four button vest. I don't think Gene ever looked so good.\n\n\"You, my man,\" Gene said to Caleb, \"are my new best friend.\" \n\n\"It looks really good,\" I said. \"Maybe you should dump Samantha.\" \n\n\"Shut your eyes girl,\" Samantha said, moving toward Gene quickly. \"This one is mine.\" It was the first time I had ever seen Gene's cheeks color. \"We are going to look so good together,\" Samantha continued as she brushed her hands along the jacket. Her happiness was contagious. I found a true smile for her as my idiotic jealousy finally took a backseat.\n\n\"I feel like 007,\" Gene said smiling. \n\n\"Get the pocket silk to match,\" Caleb said, moving forward. \n\n\"The what?\" Gene asked. \n\n\"Handkerchief,\" Caleb clarified, \"it sticks out of your pocket. You know, like 007.\" Gene laughed as Samantha nodded in agreement. It was another hour before Gene was measured and his tux, with pocket silk, was on order for the prom. Caleb left in the middle of it. I could sense that he thought he was pushing his welcome into our group. I didn't want him to feel uncomfortable, so I didn't dissuade him. I only reminded him to text me the details of his concert. \n\n\"You made a date with the math geek?\" Samantha asked with surprise. \n\n\"Don't call him that,\" I said quickly. Maybe too quickly. \n\n\"Sorry.\"\n\n\"It's not a date,\" I clarified. \"He's playing in a real band, so I told him I'd come and support him.\" \n\n\"Well, he does have that Beatles hair thing going on,\" Samantha laughed. \n\n\"Stop it,\" I said and laughed with her. It was true. \n\n\"The man has good taste in clothes,\" Gene said, sliding up next to us. \n\n\"He does have that,\" Samantha said, grabbing Gene's hand. \"I thought he didn't know anything about tuxes.\"\n\n\"About as much as he knows about dunking basketballs,\" I said, hiding my smile. \n\n\"Well, I owe him,\" Gene said. \"At least, I won't look like a dweeb at the prom.\"\n\n\"You'll be with me,\" Samantha bragged. \"That alone will remove any dweebiness.\" I laughed louder than I should have. \n\nLike clockwork, Zane called at the appointed time and begged another hour from me. I was in a good mood, so I acquiesced. It was nice to feel Mom and Dad's flash of approval at Zane's happiness. Sometimes, it wasn't a nuisance. \n\n<p align=\"center\">Chapter 3 - Caleb</p>\n\nI got myself out of there as quickly as I could. For once in my life, I didn't overstay my welcome. Gene Haverston himself called me his new best friend. I knew he meant it in jest, but it was a good thing to hear him say out loud. People like him usually didn't give people like me the time of day. Maybe, we're all just getting older. \n\nI made Teegan Fuller smile. That, above all else, was my greatest victory. That, and she didn't have a date for prom. I had trouble not grinning like a fool as I made my way to my car. I actually talked with her and she was coming to see me perform. It was like a dream come true. My mother had told me that my senior year would be the best. I never believed her, since the previous years were misery compounded. I always thought people were stupid, and I a fool when I tried to lower myself to their level. Today, I found out people weren't stupid. They just thought differently, and I was the fool for not accepting it. \n\nFate. That is the only word I could put to the events of the day. I had thought the dentist appointment the day before a chore, and instead, it was a blessing. The waiting room was backed up, and I read that old copy of GQ out of boredom. I never thought an article on tuxes would be of any importance in my life. I never even envisioned going to the prom. \n\nI made a joke and Teegan laughed. I was almost an idiot and corrected the implied tux expertise, but something stopped me. Something told me to let her laugh. To let her enjoy herself. I couldn't believe how good it made me feel to hear her laugh with me. \n\nAbout two blocks away from the mall, an insistent tone broke into my thoughts. I had forgotten to buckle my seatbelt. I laughed. Teegan was filling my mind, and everything else was blotted out. I almost told her twice. Twice, I held my tongue. Now she was coming to hear me play. I was so happy I kept my mouth shut. \n\nI drove the whole way home with the seat belt warning going off. No desire to follow the rules, I turned up the radio and let the music drown out the warning. For the day, I was a rebel, taking chances and acting smooth. \n\n\"Did you pick up socks?\" My mom asked as I entered the house. \n\n\"Nope,\" I replied. I accomplished nothing I set out to do. I accomplished everything I desired to do. I walked over to the couch and returned the forty dollars Mom had given me. The lost expression on her face pleased me. I couldn't remember the last time I didn't do what was expected. \n\n\"What are you going to do without socks?\" \n\n\"Go barefoot,\" I replied and headed quickly to my room. I was bolder. I couldn't believe I stood up to Gene in the mall. It was no different than any other comment I had taken meekly in the past. This time, Teegan was there. The first time she had been watching me. I thought for sure he was going to punch me. Instead, he laughed, and we were somehow more equal. Teegan did that. \n\nI knew I hadn't mastered anything yet. I was no social expert. It was the main reason I left them when I did, before I could make some fatal error. For years, I have looked at Teegan from afar. Her perfection had befuddled me. Most people never saw it. The way she moved, the way she looked at people, the way her voice sang so differently than anyone else's. Everything about her was special. \n\nThere was only one entity that knew my obsession. Such a bad word, obsession. I never stalked her. There is just something about her that clutters my thoughts. I only had one 'B' on a test this year. Only one, and I knew the cause. I had bumped into Teegan on the way out of class, and we traded a quick sorry. Silly as it was, all I could think of during the test was her arm touching mine. \n\nI set the alarm on my phone for three hours. I didn't want to send out the concert information too quickly. My desire must always be kept at a distance from Teegan. If she didn't feel the same, then I certainly didn't want her to be weirded out. My obsession had sanity. It would be two-way or no-way. A little fear began to creep over my thoughts. I was about to find out if it was two-way. If it was one-way, I was sure my heart would suffer irreparable damage. \n\nMy diary was hidden well. My parents didn't even know it existed. I pulled the grate off the floor's central-air outflow. I reached in and pulled out my book of secrets. For the last three years, I had kept a journal of my life in the book, barely missing a day. A lot of it was mundane, but most concerned a girl of impeccable perfection. The book was the one entity that knew my secrets. \n\nI opened to the first blank page and wrote the date. I wasn't sure how to start. I turned back to previous days and looked at the entries. Teegan sightings mixed with other events of the day. I went back further, where I began to describe what I felt about her. The words were silly and accurate. I went to the first page and read the first entry: \n\nI saw her today. I don't have the courage to speak with her, so the outcome may not be as I wish. It's confusing. No other girl affects me this way. I can see the beauty in other girls, desire their contact, but Teegan Fuller is singularly special. She has a spell on me. \n\nClosing the book, I thought on what I'd written. All those years and only now had I spoken more than one word to her. It was time to find out the truth and stop my childish ways. \n\nMy mother was a little surprised when I opened the flue to the fireplace. I wadded up some newspaper and stuffed it under the grate. \n\n\"A little warm for a fire,\" Mom said. She had only ever seen the rational me. I knew she wouldn't stop me, but I could still hear the concern. \n\n\"It's necessary,\" I said as I placed the diary on top of the grate. I pulled a match from the tinderbox and struck it. \n\n\"What are you burning?\" Mom asked, sitting up with surprise. \n\n\"My diary,\" I replied. The flames quickly claimed the newspaper and the book began to burn. I sat on the rock ledge that stuck out of the front of the fireplace. The flames first turned a strange blue as the cover caught fire, then they went bright orange. \n\n\"What's wrong?\" My mother asked, moving toward me. The socks were only the tip of the iceberg. Now I was doing something else strange that confused her. \n\n\"I'm in love,\" I told her. \"This weekend, I find out if it's for real.\" I felt my mom's hand on my shoulder. \n\n\"What if it isn't?\" Mom asked. \n\n\"Then I'm lost,\" I said, \"and have to start over.\" \n\n<p align=\"center\">Chapter 4 - Teegan</p>\n\n\"There he is,\" Gene announced in the hallway. He was looking at Caleb walking toward his locker. Caleb looked shocked at the acknowledgment. I wished I could have toned down Gene before he spoke, so Caleb didn't look so spooked. Gene bowed ridiculously in the middle of the hall, in front of half the school. \"The maestro of fashion approaches,\" Gene announced loudly. Our little group turned toward Caleb and saw his face color. \n\n\"Come on bro,\" Gene waved Caleb forward, \"I've been telling these guys about your hidden talents. They think I'm nuts, but we'll find out who the stud is on prom night.\" Samantha laughed, and there were smiles all around. Hesitantly, Caleb came forward, his eyes mostly on mine so I steadied them with a smile. \n\n\"You're still playing on Saturday?\" I asked clearly. I wanted everyone to know that he was welcome and that it was more than just a tux selection. \n\n\"Playing what?\" Amanda asked. The discussion went into Caleb fielding questions about his Saturday night gig. Though he tried to downplay it, as far as we were concerned, playing professional meant rockstar. Suddenly, Caleb had the respect of my friends. I had no idea why it pleased me so much. There was something about him that just shouted friendship. I could see, without any link, his happiness at being included. I loved his sly humor, though I suspected half of it was unintentional. \n\n\"No, I swear,\" Gene said, \"we were lost, and this guy just grabbed me a 007 outfit that looked perfect. I mean, I looked all Daniel Craig, ready to save the world.\" Everyone broke into laughter, and it was directed fondly toward Caleb. I could swear he became taller as Gene spoke. I wondered if he had ever had someone friend him publicly.",
        "\"Who are you taking to the prom?\" Amanda asked Caleb. I knew Amanda just wanted to let everyone know that Trent Peterson had asked her and needed an excuse to bring it up. I wished I could take her question back for her. Caleb was having trouble coming up with a response. The redness in his face the way his eyes drifted to the ground. He wasn't ready for full frontal asshole questions that were spouted without thought. I was surprised when he raised his eyes and looked directly at Amanda. \n\n\"I haven't asked anyone yet,\" Caleb said, \"I have someone in mind, and, to be honest, I'm still working up the courage.\" His eyes were steady, almost daring her to comment. \n\n\"Damn, man,\" Gene jumped in, \"time is running short. Like anyone is going to say no to you.\" Gene moved over and put his arm around Caleb's shoulder. \"If she crushes your heart, then she's not worth your trouble.\" Everyone laughed. The last drop of my jealousy of Samantha dissipated in Gene's charm. I could have kissed him for claiming Caleb as his de facto brother. \n\n\"You should just ask,\" I said. I didn't want Caleb to end up without a date, like me. There was something about him, an intensity that I had never seen before. He didn't deserve to be alone. Everyone agreed, with some pointing out unique ways of popping the question. I could see that Caleb was getting overwhelmed. Lucky for him, the morning bell rang, and we had to get to our classes. \n\n<p align=\"center\">*****</p>\n\n\"102?\" Gene exclaimed as Caleb entered the lunchroom. I watched Caleb's face fill with color as he pretended it wasn't directed to him. \"How in hell does anyone get a 102 on one of Prichard's tests?\" \n\n\"Shh,\" I said, trying to quiet Gene down. He never was one for keeping his opinions to himself. \n\n\"Mr. Haverston!\" Mr. Sampson called from the corner of the room. \"Language!\" Mr. Sampson was an assistant principal and the self-ordained lunchroom monitor. No one liked him much, but when he spoke, everyone listened. Gene rolled his eyes and waved Caleb over. I made room for Caleb by sliding my chair over. He sat down next to me. \n\n\"I got partial credit on the bonus problem,\" Caleb said. \"Sorry,\" he added, ashamed of screwing up the curve. \n\n\"You're now officially the smartest person I know,\" Gene said. \"I wish I had half your brains.\"\n\n\"I just study a lot,\" Caleb said.\n\n\"I studied my ass off and only got a 71,\" Gene said, shaking his head. \"You understand this crap better than I do.\"\n\n\"Maybe, because he doesn't think it's crap,\" I said. Caleb and I shared a quick smile. \n\n\"Well, Ms. 86,\" Gene countered, \"not all of us love math.\" Samantha joined us with a tray containing a piece of pepperoni pizza and a carton of milk. \n\n\"Hi Gene, Teegan,\" Samantha said, then looked at Caleb, \"Einstein.\" \n\n\"Leave him be,\" I chuckled, \"he's not going to blow a test just to up our grades.\" \n\n\"I wouldn't,\" Gene said. \"I'd ride my brain right over the top of all of you.\" Samantha laughed. I think Gene thought she was laughing at him by his expression. \n\n\"I'm not trying to win or anything,\" Caleb said. \"The problems just click, like music. I just know what needs to come next. I like the flow of it.\" Caleb pulled out a sandwich and soda from his backpack. \n\n\"So, teach me,\" Gene said, biting into his sandwich. Caleb looked up in surprise. Gene's eyebrows raised as if he had asked a question that required an answer. \n\n\"What?\" Caleb floundered. Gene smiled as he finished chewing.\n\n\"I'm barely holding a C in Prichard's class,\" Gene said, \"not exactly scholarship material. Basketball will only get me so far. I could use some help on the next test.\"\n\n\"I don't know if I could teach it,\" Caleb admitted. \n\n\"I suck,\" Gene laughed, \"you got nothing to lose.\" \n\n\"Study group?\" Samantha suggested, looking at me. I nodded, and that strange smile appeared on Caleb's face. I could have sworn it was for me, the way his eyes drifted toward mine. There was an honesty to the smile, but it lacked confidence. That's what made it look so odd. \n\n\"Sure,\" Caleb answered Samantha. There was no hesitancy in his answer, only in his eyes. I had a strange desire to push his unruly hair behind his ear. He needed it cut, maybe, shaped a bit to strengthen his features. I blinked and looked away, wondering why I was so worried about his appearance. \n\n\"Cool,\" Gene nodded before taking another bite of his sandwich. We decided to meet on Tuesday nights at Gene's house. Prichard always had a quiz on Wednesday, so it seemed a good test for the study group. Both Caleb and Gene had a long walk to gym next period, so they took off and left Samantha and me alone for a few minutes. \n\n\"Be careful,\" Samantha said, \"he likes you.\" \n\n\"Who?\"\n\n\"Einstein,\" Samantha replied, jerking her eyes to the back of Gene and Caleb leaving. \n\n\"As a friend, maybe,\" I laughed. \"We've barely spoken in all the years we've been at school. If it wasn't for the mall, I doubt we'd even know each other existed.\"\n\n\"Oh, he knows you exist,\" Samantha said, with a smile. \"Aren't you seeing him on Saturday?\" \n\n\"Look, he's going to be on stage,\" I defended myself, \"I'm going to be a friendly face. Just support. Besides, I listened to some of the Smooth Gliders stuff on YouTube. They're pretty good, and I don't turn down free concerts.\" \n\n\"I think you have a math geek date,\" Samantha laughed.\n\n\"God!\" I said standing, \"you'd think I'd get a little support from a friend.\" My anger flared for no good reason. I knew Samantha was joking, but I let it feel more like an insult. Would it be so bad if it was a date? I didn't even know if I thought it was an insult to Caleb or me. \n\n\"Sorry,\" Samantha said, all her humor gone. \"I was just playing.\" She came around the table and gave me a hug. My anger dissipated. \n\n\"No public displays!\" Mr. Sampson shouted. \n\n\"Yeah,\" Samantha said as she rolled her eyes, \"like we're going all lesbo in the lunchroom.\" We broke the embrace in the midst of chuckles from the few surrounding students who heard Samantha. \n\n\"My office, Ms. Bennett,\" Mr. Sampson said, pointing the way. He had heard it as well. I gave Samantha a sympathetic look as she followed Mr. Sampson. I knew she was in for a dry lecture on politically incorrect language and insubordination. Nothing would come of it, but boredom. Mr. Sampson is all bark. \n\n<p align=\"center\">Chapter 5 - Teegan</p>\n\n\"You're driving to Bangor by yourself? On a Saturday night?\" Mom asked. I could hear the disapproval in her voice. \n\n\"I'm 18,\" I countered. I didn't expect blowback on my decision to go. \n\n\"I know.\" Mom smiled. \"It doesn't mean you can risk your life and my heart.\" I gave her a stern look. \"I'd feel a lot better if someone went with you. And who is this Caleb McGuire?\"\n\n\"Just a friend,\" I said, trying not to get angry. She didn't trust my judgment.\n\n\"You must like him to travel all that way,\" Mom pointed out. \n\n\"He's a friend,\" I insisted, \"I'm just there for support.\" It came out sharper than I expected. I took a breath, \"You don't trust me.\"\n\n\"It's not a question of trust,\" Mom said. \"More a question of experience. There's a lot of drunks on the road on Saturday nights. Not to mention the alcohol that will likely be there.\"\n\n\"You know I don't drink,\" I almost yelled. Some of my anger leaked, and I knew she felt it. I received surprised regret back. \n\n\"I'm thinking, Teegan,\" Mom almost growled, \"I haven't said no.\" I bit down and blocked out everyone. I hated when bad feelings flowed with my words. She sighed. \"Now you're even angrier.\"\n\n\"I promised him I'd be there,\" I said. \"How am I supposed to tell him I can't go now.\"\n\n\"I didn't say you couldn't,\" Mom said strongly. \n\n\"You're leaning that way. I can hear it in your voice.\"\n\n\"I'm thinking about it,\" Mom said. \"You're not helping your case.\" \n\n\"You're just pissed because I cut off Dad,\" I spat. \n\n\"Yes,\" Mom admitted, \"Is that my penalty for being a mother?\" \n\n\"For being an oppressive mother,\" I said and turned away. I had no idea why she would even consider saying no. I thought I was only letting her know where I was going to be. Maybe I should keep future destinations private. I left her there in the kitchen and went to my room. For emphasis, I slammed the door. Hadn't I just driven Zane to the mall. There should be more give for all that my family takes. \n\nI sat heavily on the bed and texted Samantha. It's hard to put anger into a text. Summing it up in a concise statement is a difficult task.\n\nMom is being a jerk about Saturday >:( \n\n-You're surprised\n\nDoesn't trust me \n\n-Mine won't cut the cord either\n\nWhat do I tell Caleb\n\n-She said no\n\nShe will - I can tell\n\n-He'll understand\n\nNo he won't - I promised\n\n-Sorry\n\nSamantha was wrong. Caleb will take it personally. A new friend ditches him at his first request. I wondered if he would even believe me. I knew my mom's tone and figured she had already decided no and was looking for a way to make it sound reasonable. I hate when parents decide, then come up with the reason why. \n\nI pumped some music into my ear buds and closed my eyes. I had to think of a way to make it up to Caleb, so he didn't think I was some jerk. Mom didn't say no yet, so there was still a small chance, infinitesimal as it was. Maybe, I could just go anyway. It's not like I wasn't old enough to make my own decisions. I drifted off to sleep no wiser about my dilemma. \n\nA knock on the door broke through the music. I sat up and heard my name when I removed the earbuds. It was Dad. \n\n\"Your home,\" I said stupidly when I opened the door. He wasn't supposed to be home until tomorrow. His job often had him traveling to different construction sites. \n\n\"Teegan,\" Dad said without my normal hello smile, \"why is your mom is crying?\" The disapproval in his eyes hurt more than anything I could have imagined. I wanted her as angry as I was, not crying. \n\n\"She...I,\" I fumbled, \"we kind of had an argument.\" I took a step back into my room and looked at the floor. Dad followed me in and pulled me into his arms. \n\n\"I missed you,\" Dad whispered. I hugged him back, happy we weren't arguing as well. \"Go make up with your mother,\" he added, releasing me. \n\n\"But she doesn't trust me,\" I said, trying to sound sane. \n\n\"I trust you,\" Dad said, \"I trust that you will apologize for using your bond as a weapon.\"\n\n\"I blocked,\" I said. \"It's my mind, and I can do what I want with it.\" \n\n\"Yes,\" Dad said, \"but doing it rudely against your mother is cruel.\" \n\n\"You're taking her side,\" I said. \n\n\"Always,\" Dad said as he turned to leave, \"only because she's always on your side.\" I felt five years old again. Now I was angry at myself and Mom. \n\nI watched Dad leave. He was more right than I wanted. He always yelled so quietly. Sometimes, I would prefer irrationality so I could vent. I thought about staying in my room and making Mom come to me. Maybe, she wouldn't come until tomorrow morning, and all my anger would be wasted.\n\nIf I go to Mom now, I concede defeat. If I don't go, I prove that I am a child. Dad makes every argument twice as hard. I sighed. The argument was over the moment he came home. I opened my mind and let my family in. \n\nDad flooded me with love, further weakening my resolve. I could almost feel him smile, though it was a proud one, not a victory lap. It was so hard to be angry when we shared. \n\nMom's love was close behind. It was wrapped in a cloak of forgiveness that defused the rest of my anger. I returned my love with the inevitable apology. My mother's apology surprised me. \n\nI found them both in the family room. Dad was lounged on the couch with Mom curled into him. \n\n\"I'm sorry.\" I said it weakly, trying to mean it, but not loudly.\n\n\"So am I,\" Mom said clearly. Her smile coaxed out mine. \n\n\"Now, what's this Saturday thing?\" Dad asked. Calmly, I explained about Caleb and my promise to see him play. I dropped my eyes and stated why I thought I was more than old enough to go alone to Bangor on Saturday night. For some reason, it was hard to look at Mom while I made my case. \n\n\"It scares me, Sam,\" Mom said. I looked up and saw the apprehension in her eyes. I couldn't help the love that leaked from me, nor block the same from her. It was fear, not mistrust that made her second guess my going. \"She'll be all alone if anything happens.\"\n\n\"I agree,\" Dad said, \"women shouldn't travel alone at night in the city. Especially to a concert venue.\" I felt my heart drop. He meant to stop me too. \n\n\"You travel alone all the time,\" I said meekly, motioning to Mom. It was a lousy argument, and I knew it. I was running out of debate material. Anger was no longer an option. \n\n\"Sweetie, I would never go to a bar or concert alone,\" Mom smiled warmly, \"your Dad takes me.\"\n\n\"Sounds like you need someone to go with you,\" Dad said. \n\n\"I'm not sure I can get another ticket,\" I said. \n\n\"Call him,\" Dad continued, \"if he can't get another, maybe your mom and I can drive you, and we'll find a place close by to grab some dinner.\" Mom squeezed him and smiled. I could feel the relief in her. I'm sure the embarrassment of my parents driving leaked right back at them. It didn't seem to bother either of them. \n\n\"I'm going to grow up someday,\" I added, trying one last attempt. \n\n\"Not this weekend, Stinky,\" Dad chuckled. Mom slapped his shoulder for being so crude. Her smile was too soft to make the chastisement meaningful. I rolled my eyes and pulled out my phone. I prayed I could get another ticket, maybe talk Samantha into going. \n\n\"The show's sold out, but you can ride with me,\" Caleb offered excitedly. I paused trying to figure out an answer. The night was becoming more and more like a date, and I wasn't sure Caleb understood it wasn't. He sounded too enthusiastic. \"You'll get there a few hours early and have to put up with a few practice sessions, but it should be fun,\" he added when I didn't respond.\n\n\"Caleb says I can go with him,\" I told my parents, hoping they would know how to answer. Caleb overheard the question and waited patiently. \n\n\"I'd like to meet him,\" Mom said, obviously hedging her bet. \"Have him come by for lunch before you two leave.\" My mind went blank. Not the answer I was looking for, but I was committed. \n\n\"Did you hear that?\" I asked into the phone. I should have made the call privately and given myself more leeway. \n\n\"Ah...yeah,\" Caleb replied. I was so relieved to hear his awkward response. He may not want this to be date-like either.\n\n\"So?\"\n\n\"Ah...sure,\" Caleb agreed hesitantly. \"We'd have to leave around two, though.\" I relayed his reply, and my mother did the unthinkable. \n\n\"Good,\" Mom said, \"have him come by around noon. We can all have a leisurely lunch.\" I stopped breathing thinking of a two-hour lunch with Caleb and my parents. I was too old for this type of oversight. What was going to be an evening of friendly support had turned into a small nightmare. We're all going to be staring at each other in silence for two painful hours. \n\n\"Ah...noon?\" I asked, hoping he'd reconsider. \n\n\"Okay,\" Caleb responded after a brief pause. I was sure he was sweating it as I was. It was a small consolation knowing we both expected to be miserable. I could only hope the concert was good enough to make up for the cost. \n\n\"Alright,\" I committed, \"I'll see you on Saturday, Caleb.\"\n\n\"See you Saturday, Teegan,\" Caleb said with what sounded like fear. I disconnected, and my father's smile grew to something bordering on victorious. \n\n\"Happy?\" I asked. \n\n\"Yes,\" Dad replied, \"I like meeting the men who are taking my daughter out.\"\n\n\"It's not a date!\" I said much louder than necessary. Mom smiled at my reaction. \"Aggh,\" I added as I turned and left them to have a chuckle at my expense. I would have blocked them both, but Dad was swamping me with love and security. A damn drug I wasn't sure I wanted to live without. \n\n<p align=\"center\">Chapter 6 - Sam</p>\n\n\"Good morning, Cindy,\" I said, surprising our receptionist. Chadwick construction was a fairly large firm but had a small office staff. Most of the workers were in the field. I swam in both pools. \n\n\"Sam!\" Cindy said with a pleasant smile, \"We weren't expecting you until tomorrow.\"\n\n\"Unfortunately, we ran into some problems,\" I said seriously, then smiled back. \"Fortunately, it allowed me to surprise Natalie last night.\"\n\n\"Having a happy wife has to be better than a happy boss,\" Cindy joked. I noticed she changed her hair again. About twice a year she did something dramatic to it. This time, it was cut short, almost boyish, and dyed a deep brown. It made her look a little athletic although I knew strenuous activity wasn't on her agenda. \n\n\"Why will I be unhappy?\" Jerry asked, walking in behind me. He leaned over the receptionist counter. \"You can always get a new wife; bosses sign the paycheck.\" He was in his gray suit, the one he wore when he wanted to impress someone. That someone was never me. \n\n\"I had to delay the Pinckney project,\" I replied, \"probably another three months.\" Jerry waved me into his office with a grunt. \"Nice hair,\" I complimented Cindy quietly, though I liked the last style better. The lie was worth her smile. I followed Jerry. \n\nJerry signaled for me to sit in one of the chairs in front of his desk as he went to the credenza to start the coffee pot. There was always a fresh pitcher of water next to the coffee maker. I suspected it was Cindy's duty. Probably why she'll have the job forever. \n\n\"Why am I eating $150,000?\" Jerry asked. He didn't look at me as he continued prepping the pot with filter and coffee. Delays in a project of Pinckney's size were about $50,000 a month. It was planned for, so most of Jerry's words were bluster. \n\n\"Carbon content was too high,\" I sighed. \"I had to reject the steel.\" I am the materials expert for Chadwick construction. It took five years to get the engineering degree and to this day, I am still surprised that anyone trusts me to handle the task. I had Teegan to thank. The events that she unknowingly triggered as a baby steered me into the life I know today. \n\n\"The building had better have fallen, or I'll have your ass,\" Jerry said as he poured the water. \n\n\"It wouldn't have handled the lateral stresses we planned for,\" I clarified. \"Earthquake or high winds would have weakened it greatly. I refused to sign off though Alloy Partners was pushing hard.\" \n\n\"Screw them,\" Jerry said as he moved to his desk. \"I want you at the mill when the new bars come off the line. Let's test them there so that we can shorten any further delay.\"\n\n\"I just got back home, Jerry,\" I complained.\n\n\"Yeah, I know. Happy wife and all,\" Jerry said as he shifted some papers around on his desk. \"How is the family?\" \n\n\"Fine,\" I said, then sensed a trap, \"but they won't be if I'm always on the road.\" Jerry laughed. I guess he was going to use my 'fine' against me. \n\n\"How about you do a quick back and forth early next week? One night?\" Jerry asked with eyebrows raised. \n\n\"I could do one night,\" I replied. \n\n\"Good, I don't trust Alloy Partners as far as I can throw them,\" Jerry continued. \"You look over the New York project?\"\n\n\"Briefly,\" I answered, \"I'll take a better look this morning. What I did see looks good. No glaring red flags.\" \n\n\"I'll want you at the kickoff meeting on the tenth,\" Jerry ordered. \n\n\"No problem.\"\n\n\"Sanders is taking the lead, and I don't want another screw up like last time,\" Jerry said, making a fist and knocking on the desk. \"Let him know that he can call you if he runs into a problem, okay?\"\n\n\"Sure.\" We spent a few moments talking about Cindy's new hairstyle. Jerry wanted to bet that the next one would be a mohawk. He had a way of thinking all of his employees were younger brothers and sisters. Sometimes his comments bordered on rude, but when is anyone ever nice to a younger sibling. He never meant anything by it. ",
        "We parted company so that Jerry could prepare for a meeting with prospective clients. They were the reason for the gray suit. I moved to my office, about half the size of Jerry's. That I had an office at all was a small miracle. I smiled when I remembered Rose, Natalie's mother. She had always seen me sitting in an office like this and had faith I would achieve it. A giant leap from hauling pot for a meager living. \n\nI moved Natalie's picture from the middle of the desk to the corner. I always, before leaving my office, move her picture to the center to remind me of why I work. Even today that woman earns more than me, but I am no longer a slouch. It's petty of me to think I still need to earn her love, but it's there, and I have long admitted it to myself. I smiled at her image, remembering how sexy she was last night. Absence does make the heart grow fonder. It also spices up the bedroom and proves we are still young at heart. \n\nI pulled my phone from my pocket and found Hank's number. The government was a small nuisance, but this time, they might be helpful. I felt a little guilt when I hit connect. It didn't feel wholly right to spy on Teagan even if it was in my power, but a father should always use what's at his disposal to protect his children. \n\n\"Morning, Hank,\" I said when he answered. \n\n\"Morning, Sam. Something up?\"\n\n\"Well, nothing earth shattering. Teegan's got a date,\" I chuckled. \n\n\"She's dated before,\" Hank said, \"nothing strange for her age. In fact, I would say she's a little behind the curve. Something, I find more than surprising.\" I let my anger at the thought that Teegan was less than average on the desirability chart pass. It wasn't what Hank intended when he spoke. \n\n\"This time, she's lying to herself,\" I said. \"She's adamant it's not a date, yet she fought with Natalie about not being able to go. Cut us all off when she didn't get her way.\"\n\n\"She's done that before,\" Hank pointed out. \n\n\"She did it in anger this time,\" I clarified, \"to punish Natalie, I believe.\" \n\n\"Did it work?\" Hank asked. \n\n\"Not in the way she expected,\" I replied, \"I had to play peacemaker, and she relented, but we gave a little as well.\"\n\n\"She is 18,\" Hank said. \"Can't expect her not to have a mind of her own. I'm just surprised she hasn't used her power more.\"\n\n\"It's not as strong as it was,\" I explained. \"It never was as powerful for her as it was for me. Then again, we haven't needed it. That time she broke her arm, what was it, six years ago, that was the last time I ever accessed her bond like before.\" I had to chuckle, \"Damn thing hurt like hell, and she was sitting under the tree crying for me. Now it's nothing but shared feelings, though they are kind of nice.\"\n\n\"You know I'm coming out there in a couple of weeks,\" Hank said, \"Is there another reason for the call?\"\n\n\"I'd like the military to look into this non-date of hers,\" I said. \"If I'm right, and she has feelings for him, they should be as interested as I am.\" Hank laughed. \n\n\"You want the US Government to check up on your daughter's date?\"\n\n\"We've been good,\" I said, trying to keep the humor out of my voice. \"They can work for us for once.\"\n\n\"You do know their interest has waned,\" Hanks said, once his breathing had returned. He found the situation especially humorous. \"I'll see what I can do, but be warned, they're beginning to think she's harmless and not the weapon they expected.\"\n\n\"She is harmless,\" I said, \"we both know that. She hasn't bonded with anyone new in years. If her life continues at its current pace, I doubt she ever will again.\"\n\n\"We'll just keep that to ourselves right now,\" Hank said, \"There are still crazies out there, and the military has been invaluable at keeping your family hidden. It may just be that there's been no need for her abilities. I've always suspected it's more of a survival response.\"\n\n\"I think she's just getting older,\" I said, \"and her brain is no longer free to galavant where it will. It's been cluttered with experiences.\"\n\n\"Maybe,\" Hank conditionally agreed. I could tell he wasn't telling me everything. He never did, and we kept some things from him as well. I suspect the military was even more in the dark. \"What is this guy's name?\"\n\n\"Caleb McGuire,\" I replied, \"from here in town. I never met him before. Some new friend outside of her normal acquaintances.\"\n\n\"It's a total misuse of government assets,\" Hank laughed, \"but I'll see what I can do.\" \n\n\"I just want to make sure he's not an ax murderer or something,\" I said. \n\n\"Just make sure Teegan never finds out,\" Hank said. \"It won't go well for you if she discovers the breach of trust.\"\n\n\"Well, I'd rather have her hate me than date a crook,\" I said. \n\n\"What if Rose had felt that way?\" Hank said as he stifled a laugh. \n\n\"I thought you were on my side.\" \n\n\"I'm on Teegan's side,\" Hank chuckled, \"then Natalie's and Zane's. You're fourth or so down the list.\" \n\n\"Okay, then do it for Teegan,\" I said.\n\n\"Of course,\" Hank replied with additional humor. \"By the way, I got one of those mini-drones for Zane. I hope Natalie won't think it's too much.\" \n\n\"Hell, I don't care if she does,\" I said excitedly. \"I was eyeing one of those at the mall last Christmas. We'll have a lot of fun with it. I'm sure Zane will find all sorts of ways to cause trouble.\" I had been trying to think of a way to push one of them through Natalie's wall of no-more-frivolous-things in the house. \n\n\"Good,\" Hank said, \"I've always wanted to give one a go. Zane's a good excuse.\" Hank had the same problem as I did. Women were too practical sometimes. \"I'll call you if I find out anything about Caleb.\" \n\n\"Thanks,\" I added before we ended the call. I knew it was risky not to accept Teegan's judgment, but I was a father. We use all the tools we have to secure the welfare of their children. At least, I hoped I wasn't an aberration. \n\n<p align=\"center\">Chapter 7 - Teegan</p>\n\n\"Grandma's coming around 11,\" Mom shouted from the kitchen. My breath caught at the thought. Was this lunch or an interrogation? I couldn't remember the last time we all had Saturday lunch together. This wasn't supposed to be a special event. I moved to the kitchen.\n\n\"Grandma?\" \n\n\"She wants to meet him too,\" Mom said as she continued to toss the salad in a bowl. I didn't know how to stop the boulder running down the hill. It had all gotten blown out of proportion. Mom was making a feast and Dad was cleaning up the yard. It was like they were trying to make a good impression. They never went this far for any of my other friends. \n\n\"You're not planning on embarrassing me, are you?\" I pleaded. \n\n\"He's just joining us for a family lunch,\" Mom said with a smile, \"and we'll act like it happens all the time.\"\n\n\"I'm not dating the guy,\" I argued. \"Why did you call Grandma?\"\n\n\"This is the price you have to pay,\" Mom chuckled, \"for having a family that loves you.\" She looked me up and down and added, \"Is that what you're planning to wear?\" Jeans and a cotton pullover were what I normally wore. I looked down at myself and saw nothing worth changing. \n\n\"It's a concert,\" I insisted, \"not a date.\"\n\n\"I just thought you'd want to get more dressed up to go downtown,\" Mom commented as she covered the salad bowl with plastic wrap and put it in the fridge. \"You have those nice skirts. The black one you wore to Grandma's birthday looks so cute on you.\" \n\n\"I'm not trying for cute,\" I sighed. I was suddenly self-conscious of my appearance. Mom had a way of confusing my mind with her suggestions. I pushed the thought away and filled it with my stubbornness. Changing now would be a defeat. I almost blocked the family, then thought better of it. \"Mom?\"\n\n\"Yes?\"\n\n\"Please don't make this more than it is,\" I pleaded. I was worried that Caleb would run for the hills from my insane family. This was becoming the worst favor I had ever done for anyone. I had to stop volunteering for things. \n\n\"A friend's coming over for lunch,\" Mom said as she opened the oven to see how the macaroni casserole was doing. \"Nothing more and nothing less.\" I rolled my eyes. Normally, we're lucky to have cold cuts for lunch. I left her there with her crazed meal plans and moved to the family room and plopped myself on the couch next to Zane.\n\n\"Mom overdoing it?\" Zane asked. He thought it was funny. \n\n\"He's just a friend,\" I stated strongly. \n\n\"They like him,\" Zane said. I looked at him with some confusion. \"Mom and Dad,\" he clarified. \"I heard them talking last night. They think he's son-in-law material.\"\n\n\"They've never even met him,\" I said with some surprise. Zane shrugged. He wasn't playing with me. I could usually tell when he spoke the truth. Anger leaked from me which raised Zane's eyebrows. \n\n\"It won't be that bad,\" Zane said. \n\n\"It's not a date!\" I announced as I stood. I moved as both Mom and Dad tried to comfort me from afar. I was out the door and moving directly toward Dad. There were no directions necessary with him. With the bond active, we always knew where each of us was. \n\n\"How do you know Caleb?\" I demanded as Dad raked some of last year's leaves out of the shrubbery. \n\n\"What are you so angry about?\" Dad asked, ignoring my question. He kept raking, so I put up my walls, blocking our music from merging. This time, I shut out the world. He stopped raking and turned to me. \n\n\"I was concerned,\" Dad said calmly, \"so I checked up on him.\"\n\n\"And now you and Mom think you found me a future husband,\" I said loud enough for the neighbors to hear. Dad dropped the rake and opened his arms. I stood firm for a few moments, then the stress of it got to me. I opened my mind and entered his arms. Both Mom and Dad filled me with love. I wanted my anger again. \n\n\"I'm sorry,\" Dad said sincerely and hugged me closer. \n\n\"You shouldn't have checked on him,\" I said. \"He's just a friend. You should trust me.\" \n\n\"I don't always think straight when I worry about you,\" Dad whispered. \"You're right; I shouldn't have checked. I can't promise I won't be stupid again, though.\" How I hated liking the security blanket of his arms and the one he forged in my mind. I was too old to need it so badly. \n\n\"He's just a friend,\" I said, then the tears started. The stress of the coming lunch overwhelmed me, and the sanctuary of Dad's arms made me lose it. \n\n\"I'm sorry,\" Dad kept repeating softly as he let me cry on his shoulder. I needed to get away from all of this. I needed a life of my own. Graduation couldn't come soon enough. \n\nIt took a moment before I trusted my voice again. I wiped my eyes and straightened up, out of Dad's arms. I could see his eyes weren't dry either. He knew and felt that he had hurt me. Now I felt bad that I hurt him as well. The link was such a nuisance.  \n\n\"I admit,' Dad confessed, \"we got a little excited. He has a full-ride to MIT. They don't give those to just anyone.\" I looked at his eyes, the way they looked all puppy dog desperate for my future. I couldn't help myself, I laughed. \n\n\"I'm not marrying him,\" I said between chuckles. \n\n\"We just wanted to make a good impression,\" Dad said with a smile. \n\n\"You're going to scare him away,\" I said. \"He's a nice guy out of his comfort zone. I'm just making sure he has a friend at the concert.\" \n\n\"Okay, okay,\" Dad capitulated, \"we'll tone it down a bit.\" I hugged him hard before I headed back into the house. I was no less apprehensive about lunch, but at least Dad understood me better. Hopefully, he'd talk with Mom before Caleb ran for the hills. Damn, a full-ride he said.\n\nWarning - Parents going overboard \n\nI texted Caleb in hopes of him not flipping out when he got here. My family is a bit strange, but they are mine, and from what I understood I chose them. \n\nMine thought I should wear a suit\n\nLOL, Mom was pushing a skirt \n\nThere was no response to that so I began to wonder if he thought I should dress up for the concert. I wished Mom never put the idea in my head. \n\nJeans OK?\n\nHope so, that's what I'm wearing\n\nThe relief was overwhelming. I don't think I would have been comfortable in a skirt. On a date, maybe, but not at a casual concert with a friend. Mom might be disappointed, but she didn't understand that comfort was fashion today. I went upstairs and changed into a brighter shirt. My other one was a little dowdy. \n\n\"There's my favorite granddaughter,\" Grandma said as she saw me walking down the stairs. I moved into her arms and suffered a kiss on my cheek. She is exactly what anyone would envision a grandmother to be. Gray curls and an unending smile. A little shorter than me, but seemed to have more energy. It was like she was trying to cram more life into the end of her years, making up for some lack of it in the beginning. \n\n\"Hi, Grandma,\" I returned. \n\n\"MeMaw!\" Zane shouted from the top of the stairs. Grandma smiled and waved him into her arms. Though she was getting on in years, she still worked full time at the library. She enjoyed reading to the preschoolers and greeting the town as they passed through. Zane always acted younger around her, and it cost him extra kisses. His cheek had little red marks from her lipstick. I wiped mine, thinking I bore the same scars. \n\n\"Hello, Mother,\" Dad said, coming when he heard Zane's yell. Dad received a kiss as well, though the hug was less mushy. \n\n\"Sammy, where's Natalie?\" Grandma asked.\n\n\"In the kitchen,\" Dad replied, \"getting everything ready.\" Grandma grabbed my hand and pulled me along toward the kitchen. I always felt ten years old in her presence. She was our main babysitter growing up. Zane and I spent as much time with her as we did with Mom and Dad. Before kindergarten, she even lived with us, giving Dad time to go to school and Mom to work. She made a mean toasted cheese, one of the few things I would eat back then. \n\n\"Natalie,\" Grandma exclaimed when we entered the kitchen.\n\n\"Hi, Mary,\" Mom said warmly as she lifted the casserole out of the oven. \"I'm glad you could make it.\"\n\n\"I wouldn't miss this for the world,\" Grandma said turning to me, \"Your first real date.\"\n\n\"It's not a date!\" I said in unison with Mom. Grandma pursed her lips in surprise. \"And it wouldn't be my first if it was,\" I added a little quieter. I've had a couple of dates and even one second date. It wasn't my fault that they were boring. \n\n\"He's just a friend,\" Mom took up my cause. \"Caleb McGuire is playing with a real band in the city. Teegan is going to support him. It will be his first time in front of an audience.\" There was some awfully suspicious eye contact between Grandma and Mom. It was almost like they didn't believe me. \n\n\"Not the first time,\" I said, defending Caleb. It's not like he was afraid or anything. \"He's played at weddings and things. Also with the orchestra at school.\"\n\n\"Has he?\" Grandma prompted. \"What instrument does he play?\"\n\n\"Violin,\" I answered. \"This will be the first time that I've heard him play outside of the orchestra. One the guys in the band, the saxophonist, asked him to play on stage. I have no idea how he can just get up in front of all those people.\"\n\n\"He must have a lot of confidence,\" Grandma continued. \"It will be nice to have a friend in the audience.\"\n\n\"Yeah,\" I agreed, \"that's what I thought when he asked.\"\n\n\"So he asked you?\" Grandma inquired. Mom stopped pulling plates out of the cupboard and waited for my response. \n\n\"It's not a date,\" I sighed, rolling my eyes, \"He's just a friend and we were talking. I mentioned I've never heard him play, and he offered a ticket.\" \n\n\"He's very smart,\" Mom added. Then she returned to pulling plates when I scowled. \n\n\"Is he?\" Grandma continued. \n\n\"Yes,\" I said, not wanting to add to the interrogation with a long answer. \n\n\"Scholarship to MIT,\" Mom said when I was silent for too long. \n\n\"Oh, you mean REALLY smart,\" Grandma chuckled. She saw the look on my face and lost her smile. \"We're just teasing,\" she said, then pulled me into another hug. \"We'll treat him like a friend, no worries.\"\n\n\"Thank you, Grandma,\" I said honestly. She figured it out quicker than Mom and Dad. Though my bond with her isn't as strong as the rest of the family, it was still warm and comfortable. I let my appreciation leak and received her love in return. \n\n\"Sax and violin,\" Grandma pointed out, \"I don't think I've ever heard those two together.\" The conversation thankfully drifted away from the date issue and became pleasant. Grandma and I helped Mom set the table as we discussed how music had changed over the years. I was surprised to hear about some of the concerts Grandma had gone to when she was young. I got the sense that she embraced the 60's with gusto. At least, they sounded like fond memories. \n\nCaleb arrived at noon. I watched him straighten his clothes three times and bend down to look in the side view mirror on his car to correct his hair. He was terrified, but he came forward nonetheless. Somehow, his reaction eased my fear. I couldn't bear to watch him struggle to ring the doorbell, so I went outside to greet him on the front walk. \n\n\"Hi,\" I said as brightly as I could. Caleb slowed and smiled. I could see it was the right idea to meet him out front. A little ice breaker before my family crashed down on him.\n\n\"Hi,\" Caleb returned, \"it's noon.\" I smiled at Mr. Obvious. I could almost see him shaking. \n\n\"Nervous?\" I asked. \n\n\"Yes,\" he answered while shaking his head no. I stopped his approach and let him catch his collective breath.\n\n\"About lunch or the concert?\" I asked calmly. Why did I enjoy the fact that he was nervous? It was comforting in some way and totally inappropriate to extract pleasure from it. \n\n\"Lunch,\" Caleb replied, and dropped his eyes. I ceased enjoying it. Now he was embarrassed. I wanted the confident Caleb of a few days ago. I did something I didn't expect, I took his hand in mine, blocking his song, therefore, the link before it began. \n\n\"You don't need to impress anyone,\" I told Caleb. \"I want to see you play, and my parents want to know who to hunt down if I don't return. Nothing more.\" Caleb laughed at the last part and held my hand firmly, with more courage. \n\n\"I was afraid of an interrogation,\" Caleb admitted, his smile returning.\n\n\"Oh, there will be that,\" I chuckled. \"There's just no way to fail. I'm the only judge who counts.\" His eyes sharpened, and he seemed taller. I was strangely proud of myself. \"Come on in and we'll see if we can't escape early.\" I tried to retract my hand as I turned. Gently, he kept it in his as we started toward the door. I was slightly uncomfortable with how comfortable it was. It felt better than I expected, almost as if they were molded to be together.\n\n\"It can't be worse than a math test,\" Caleb joked. I laughed and felt better that his confidence was somewhat restored. I swung our joined hands together as we climbed the porch steps. We didn't let go of each other until we walked through the door. \n\n\"Caleb, these are my parents and my Grandma,\" I introduced him. \n\n\"Mr. Fuller, \" Caleb said strongly, holding out his hand, \"Thank you for inviting me for lunch.\" He had hidden all his apprehension and was standing tall when my Dad shook his hand. \n\n\"Call me Sam, Caleb,\" Dad said, seemingly more interested in him than me. Mom and Grandma both insisted on a hug which added more color to Caleb's cheeks. \n\n\"Hey, Caleb,\" Zane said from the couch, barely looking up. He was working on a game on his tablet. \n\n\"Hi, Zane,\" Caleb returned. For a second I feared we were all going to sit in the family room to talk, but Mom wasn't going to make us suffer through that much. \n\n\"Lunch is ready,\" Mom said. \"Zane, put up the game and join us.\" Zane gave a grunt as he put the tablet down and moved slowly. We all moved into the dining room where Mom sat Caleb next to Dad and me next to Caleb. Mom sat across from Caleb with Grandma next to her. Zane shrugged his shoulders and sat across the table from Dad, normally Mom's seat. I'm sure Caleb felt surrounded, but it didn't show. ",
        "\"So,\" Dad started as the food began to be passed around, \"what are your plans for after graduation, Caleb?\" Dad already knew, but at least it was an easy question. \n\n\"College mostly,\" Caleb responded, \"not sure what I'll study yet. I like mathematics and engineering sounds appealing. My violin is still my favorite, but I guess I can do that no matter where I go.\" \n\n\"Music and math are closely related,\" Mom jumped in. \"At least that's what I hear anyway.\"\n\n\"They are Mrs. Fuller,\" Caleb agreed. \"Math is more finite, but sound waves are beautiful formulas and adhere to strict rules. Both disciplines enhance each other. Math supplies the rules and music the infinite ways to apply them.\" I was staring at him as his mind worked. I could hear his love of music in the words. I was sitting next to someone who understood his future, unlike me. \n\n\"Sounds like you want to be a violinist,\" Grandma said, moving salad to her bowl. \n\n\"It's difficult to make a living as a musician,\" Caleb said. It was his parents' voice in the words. \"It's better if I study something more practical.\" Both Dad and Mom nodded in agreement. I wondered what happened to the 'do what makes you happy' speech they always gave me. I wanted to jump up and tell Caleb to do just that. If it wouldn't have embarrassed him, I would have. \n\n\"Something to be said for happiness as well,\" Grandma chimed in. I smiled at her. Let's see Mom and Dad contradict her. \n\n\"If you're miserable, what's the point of all the money,\" I added to Grandma's statement. \n\n\"And who says you'll be a broke musician,\" Grandma continued, smiling at me. \"Plenty of them do very well for themselves.\" Caleb filled his mouth with mac and cheese so he could stall any response. I think he was telling my parents what they wanted to hear and didn't want to contradict it. \n\n\"Music is a big risk,\" Dad said offhandedly. \"Now engineering guarantees you and your family security.\" I gritted my teeth when Dad mentioned family. \n\n\"Income makes life a lot easier,\" Mom agreed. \"It gives you choices you wouldn't otherwise have.\" Grandma was looking at the two as if they were new people. \n\n\"Income is nice,\" Grandma agreed, \"happiness is better.\" She quickly put food in her mouth to stall any questions that might come her way. I wanted to kiss her. \n\n\"Music does make him happy,\" I added. Caleb grinned at me with a mouth full of food. \n\n\"Where are you thinking of going,\" Dad asked Caleb. I could swear Caleb swallowed without chewing. \n\n\"MIT has accepted me,\" Caleb said after he wiped his mouth with his napkin, \"but I'm waiting for Stanford to respond. My father met my mother there.\" \n\n\"Both are wonderful schools,\" Mom pointed out. \n\n\"They certainly are,\" Dad agreed. \"Either would be a feather in your cap.\" Feather in your cap? What was wrong with Dad? He never cared what school anyone went to. He always said it is what you do with your life that's important, not how you got there. \n\n\"It's not where he wants to go,\" I blurted out. I realized too late that it was Caleb's decision whether to mention that. Grandma raised her eyebrows. \n\n\"Northwestern has an excellent string program,\" Caleb said, covering my words, \"I met the head of the music department last year, and I really liked it. They eat and breathe music there.\"\n\n\"That sounds like a wonderful program,\" Grandma chimed in. \n\n\"It is,\" Caleb said. Then he proceeded to list the features of the program and everything he liked about it. He knew the names of the violin teachers, who currently held first-chair, and even a description of the dorm rooms. If you didn't know his desire before, you knew once he had slowed down and realized he was monopolizing the conversation. \n\n\"He likes his music,\" I summarized. \n\n\"Passion is important in any art,\" Grandma said. \"You certainly don't lack for that.\" Mom and Dad were both silent during Caleb's description. I think they were disappointed.\n\n\"Do you intend to pursue your violin?\" Dad asked. He was looking down at this plate, pushing his fork around the food, as if the answer didn't matter. \n\n\"Both MIT and Stanford have an orchestra,\" Caleb replied, \"I'll minor in music and still get to play.\" He shrugged his shoulders, seemingly content with his lot. Dad brightened.\n\n\"The best of both worlds,\" Mom said. I lost my concentration and let some anger leak. It wasn't strong, just enough that Mom and Dad felt confused. I couldn't believe they would encourage Caleb to pursue something that didn't have his full heart. \n\n\"I'd do the music,\" Zane jumped in, \"though it would be an electric guitar.\" He did a little air guitar with his fork and bobbed his head. Grandma laughed and the conversation began to change. It was lead by Grandma who steered it to the bands of her generation. A small war between generations ensued about whose music was the best. The older you are, the more you are convinced that the new music has no heart. Zane, Caleb, and I teamed up to inform the ancient ones of how childish their music was. I have to say it was a much better conversation than Caleb's future life choices. \n\nWhat surprised me as the meal wound down, was how relaxed Caleb had become. He was stiff as a board when we first sat down. Now, his face held a smile, and he conversed with confidence. He even slipped in a well-timed pun which brought the table a few moments of laughter. There is something about bringing a friend home and finding my family likes him as well. It validated my choice, made me feel a little stronger. \n\nJust before Caleb and I left, Grandma pulled me to the side, away from prying ears. \n\n\"I like him,\" Grandma said with a smile that said more than her words.\n\n\"So do I,\" I agreed, \"as a friend.\" I didn't want her to get any ideas about where the relationship was heading. I wasn't going to attend MIT and Caleb was barely in my social circle. \n\n\"Well, if you're not interested,\" Grandma said, \"maybe you can put in a good word for me.\" I laughed at how she said it. She sounded forty years younger, and her eyes looked serious. She hugged me and whispered in my ear, \"It's okay to like him. He likes you.\" I held her next to me, sharing the love I felt for her. She was always so aggressive with her feelings. Dad had told me once, that she was trying to make up for ignoring life for many years. I wasn't sure what that meant, but I could feel it in her.  \n\n\"I'm not ready,\" I whispered back. It was the truth. I doubted Caleb was the one for me. He was too damn smart and on the fast track while I was still waiting at the red light. I wasn't ready for anyone.\n\n<p align=\"center\">Chapter 8 - Caleb</p>\n\nWhat I thought would be hell was almost enjoyable. Teegan's family was not what I expected. Her mom and dad weren't as judgemental as I had envisioned. Her grandmother was the greatest surprise. I could only describe her as a flower child from the sixties. She didn't dress the part, but her desire for free will and happiness was contagious. In fact, the only fault I could find was her strange love of Bob Dylan. I always found his music too dark and raspy. \"The words were the key,\" she had told me. For her sake, I would try his music one more time. Maybe there was something I was missing.\n\nMrs. Fuller insisted I come by again in the future. I could tell the request embarrassed Teegan, so I hesitantly agreed. It was a light promise anyway, meant at the time, but rarely enforced by either party. Strangely, I think I had made better inroads with Teegan's family than I had with Teegan herself. She was friendly enough. There was just no strong connection beyond the hand-holding that steadied me in the beginning. \n\nI hated that Teegan saw my fear when I first arrived. Driving around the block four times before I finally committed had done little to lower my heartbeat. Her hand did wonders, and I didn't want to let go. It was done in friendship, at least on her side. When she first took it, I had an incredible desire to kiss her. It would have been the wrong time, and she probably would have sent me packing. \n\nThe family test was over. I was probably the only one grading it, but I gave myself a 'B.' Teegan didn't seem to disagree, her smile was real enough as we climbed into my car. \n\n\"Was it as horrible as you thought?\" Teegan asked as she buckled into the front seat. \n\n\"Actually,\" I said, making sure my smile accented the words, \"it was nice. I like your family.\" Teegan laughed unexpectedly. \n\n\"I think they liked you better than me,\" Teegan joked. I started the car, pleased with her humor. It wasn't true, but it was good to know that they liked me.\n\nWe traveled with few words. My brain was seizing up on discussion topics beyond school. After we had discussed the study group coming up, I turned on some music to fill the void. Teegan was comfortable with the silence. Asking her to the prom was the only thing in my head, and I was at a loss on how to bring it up. I knew we needed more conversation. Going to the prom together would require that we could hold a conversation. I decided to be honest, which was probably stupid. \n\n\"I can't think of anything to say,\" I said, looking ahead down the road. At least my eyes had something to do. \n\n\"Do you think we need to talk?\" Teegan asked. \n\n\"Yes,\" I replied, \"the silence seems wrong.\" I began to wish I had stuck with the silence. \n\n\"Maybe, I don't want to talk with you,\" Teegan said. I looked over in shock. She wore a large smile that went all the way to her eyes. I looked back to the road feeling my lips curling. \n\n\"You had me for a second,\" I admitted. Why did I enjoy her playing with me? \n\n\"You're easy to tease,\" Teegan said nicely. \"You'll get better with practice.\" I looked over to find that smile aimed at me again. There was pride in it. \n\n\"You plan on teaching me?\" I asked. \n\n\"Every chance I get,\" Teegan laughed. \"Your cheeks blush, and you get a panicked look on your face. It shouldn't be fun, but it is.\"\n\n\"I guess you're right,\" I said, attempting humor, \"it's hard for me to understand the weaker minds.\" I looked over and found her looking away, her hand near her eyes. I looked back at the road in a panic. \"I...I'm sorry,\" I stammered, \"I was trying to be funny.\" I couldn't believe I started this conversation. I looked back to find her trying to stifle a laugh.\n\n\"You're way too easy,\" Teegan said. This time, I laughed. \n\n\"I am driving, you know,\" I pointed out. \"You're one heart attack away from a hospital bed.\"\n\n\"Are you threatening me?\"\n\n\"Absolutely,\" I replied. \"This is a tease-at-your-own-risk zone.\" I loved the way she smiled. I wished it were more for me than the humor. \n\nTeegan did something I would have trouble duplicating. She changed the conversation without it feeling weird. We moved into movies and harmless gossip. It was effortless for her. Once done, it was easy to build off what she had started. I played with steering the conversation and she flowed along with me. After a while, I forgot that I was trying to talk and just talked. Time flew by and we arrived at the club before I had a chance to ask her to the prom. \n\n\"So this is where you're going to play,\" Teegan said as we walked toward the front door. It was a small venue called 'Tangerines.' It had an orange awning over a double glass front door. Probably an old factory, it had a solid brick facade with alcoves where windows once resided. On each side of the entrance stood bars as thick as my arm that ran from the sidewalk and curved into the side of the building. Mounted along the bars were small orange ball lights as if tangerines grew on vines. It must be impressive at night. \n\n\"This is it,\" I agreed. \"I hope you're not too bored while we practice. The start is still a few hours off.\"\n\n\"I'll be fine,\" Teegan said with a smile. I could see some excitement in her eyes. She was enjoying the idea of the concert. I hoped the reality was as satisfying as the dream. Politely, I got to the door first and opened it for her. I received a timid 'thank you' with an equally timid smile. I maneuvered myself and my violin case in behind her. Our eyes needed time to adjust to the darkened lighting inside.\n\n\"Caleb!\" was shouted from across the room. I smiled, recognizing Tom's voice. Without thinking, I took Teegan's hand in mine and swerved between the many tables toward the voice. I could feel her hand adjusting in mine, settling in like the last time. As we neared, our vision improved and I saw Tom and the rest of the band sitting at a table right in front of the small stage, just to left of an equally small dance floor. I reluctantly released Teegan's hand when we neared. It wasn't until we arrived that I realized we were being followed. \n\n\"They're with us Matt,\" Tom said. I turned around to see a rather large black man dressed all in black, his shirt sporting the Tangerines logo. He smiled which turned his ominous presence into a friendly one. \n\n\"Walk away from the front for just a second,\" Matt said, \"and the whole world sneaks in.\" He moved closer. \"You two have ID?\"\n\n\"Yes,\" Teegan answered, unfazed by the man's size, \"but we're not 21. I just came to see Caleb play.\" I liked how she smiled at me when she said it. \n\n\"Not a problem,\" Matt said. \"I just have to put white bands on your wrists. Got to stay legal.\" It took him a moment to fix the bands around our wrists. We received a quick lecture about being thrown out if we were seen with alcohol or attempting to acquire it. \"That small bar over there,\" Matt said as he pointed off to the side, next to the restroom sign, \"is alcohol-free. That's where you go for drinks and snacks. No white bands are allowed at the main bar, only red bands.\" He pointed to the other side of the room where a bar stretched along almost the entire wall.\n\n\"I think we have it,\" I said. Teegan nodded in agreement.\n\n\"Good,\" Matt said, \"then you two have fun. It's a great night for a date.\" He turned away before I had a chance to correct him. Teegan smirked at me. At least, she wasn't opposed to Matt thinking it was a date. I shrugged my shoulders and let him go unaware. If Teegan didn't mind, neither did I. \n\nTom introduced his band. The drummer Alfred had hair and beard like ZZ Top. A Native American beaded band was wrapped tight around his beard at his waist. I guessed it was to keep it out of the drums. The lead guitarist, Zachary, was tall like Gene, but bald and skinny. When he smiled, there wasn't a tooth hidden. He reminded me of an Igor-like character. The bass guitarist was heavy like Tom. Not fat, just carrying extra weight that announced a lack of exercise. Unlike Tom, Ray had all the color in his hair, a bright red that curled naturally. Tom's was a silver gray that fit his face well. \n\n\"This is Teegan,\" I said, as we were all making the rounds shaking hands. \n\n\"Hi,\" Teegan said excitedly. She was impressed with meeting the band. I was impressed with myself, bringing her here the first time we were alone together. Normally, I would have fumbled through a cheap dinner and a movie. Of course, then it would have been a date. This was infinitely safer. \n\n\"Caleb,\" Tom said with surprise in his voice, \"you didn't tell me she was a stunner.\" Teegan lit up and my face heated. I tried to remember what I told Tom on the phone about her. I was so excited that Teegan was coming, I might have said more than I intended. \"When he asked about a ticket for a friend, I never thought it was a woman. I must say, you brighten this place up like the sun.\"\n\n\"Stop flirting, old man.\" Teegan and I turned to see an older woman, contemporary to Tom, dressed in jeans with her hands on her hips. She had a smile on her face that contradicted her tone. Her eyes were younger than the crows feet at the edges of them. Her hair was laid long in blond waves whose color also defied her years. Tom laughed and walked around us. \n\n\"Caleb, Teegan, this is the most beautiful ball and chain in the world,\" Tom announced. \"Wendy, my wife and flirt detector.\" He wrapped his hands around her waist and kissed her cheek. \n\n\"Nice to meet you, Wendy,\" I said. Teegan followed suit and we pulled up a few more chairs around the table. Wendy sat next to Teegan, and they started chatting as Tom and I started talking about the song we were going to do. The rest of the band was curious about the tune; Alfred even offered some percussion. The song would fail with drums, but I didn't need to decline. Tom was adamant that only he and I would perform it. \n\n\"You want to practice a bit?\" Tom asked. \"We can nail down the timing.\" It was a question, but I knew the only answer was yes. It's why I had come early.\n\n\"Hell, yes,\" I replied. I looked to Teegan, \"You going to be alright for a bit?\"\n\n\"Sure,\" Teegan replied. \n\n\"About two blocks down,\" Wendy interjected, \"there's an old merchant district. It's got some unique stores. Why don't you and I go window shopping while these guys practice?\"\n\n\"Absolutely,\" Teegan answered. She stood up with Wendy, and they said their goodbyes, promising to be back before the concert began. Tom and the band got up and collected their drinks to bring on stage. I waited a moment longer, watching the ladies leave. Both pairs of jeans wove between the tables as they headed toward the door. Teegan was a hair shorter and had a much better figure. From what I could tell, Wendy was sweet. Teegan was sweeter. \n\n\"Eyes off the asses,\" Tom said. Zachary started laughing. I tore my eyes away and headed on stage with my violin case. It certainly was a sexy ass. \n\n<p align=\"center\">Chapter 9 - Teegan</p>\n\nWendy was exactly what I needed. I was afraid I was going to be sitting alone, twiddling my thumbs during practice. It's not that I wouldn't have. Sitting for that long was going to dent my ass and with no one to talk to, it may have felt longer than two hours. Wendy seemed practiced with it all and desired my company as well. I liked her sense of strong independence. She didn't ask Tom's leave and Tom didn't question her leaving. I could tell they were a couple, but they weren't glued at the hip. I only just met her and already I admired her. \n\n\"I'm glad you came,\" Wendy said as we left the club. \"Tom will start playing, and the world disappears. It's like I don't exist until the music stops.\"\n\n\"It looks like he loves you,\" I commented. The way his hands moved around her waist and the soft kiss. It had meaning. \n\n\"When he's not playing,\" Wendy said with a chuckle. \"Music is his mistress, and she's a demanding bitch.\" I laughed, surprised she thought me old enough for such language. Usually, adults toned it down in front of me. I was pleased she saw me worthy. \"Isn't Caleb the same way?\"\n\n\"I don't know,\" I replied, slightly blushing. \"I just met him. We're not dating or anything.\" Wendy laughed as she signaled we were going to take a right at the corner. \n\n\"Did you tell him you're not dating?\" \n\n\"Not in words,\" I replied. \"He knows I'm just here as a friend, to hear him play.\"\n\n\"Well, don't break his heart too hard,\" Wendy continued as we rounded the corner. \"Tom tells me he's a nice boy. If Tom likes him, I like him.\"\n\n\"Were not dating,\" I repeated, forcing a fake chuckle. \"How can I break his heart if we haven't even been on a date?\"\n\n\"Get some glasses, girl,\" Wendy said, pulling me close as we walked. \"That boy couldn't keep his eyes off you. If he were Superman, you'd have holes in your butt right now.\" She sighed and released me, \"I remember when Tom looked at me that way. I miss the new eyes.\" \n\n\"We're not dating,\" I said again. I was staring straight ahead trying to remember how Caleb looked at me. There were some out of place smiles, but I didn't remember any undo attention. Wendy laughed again. \n\n\"So you like him,\" Wendy surmised. \n\n\"I didn't say that.\" \n\n\"No,\" Wendy agreed, \"nor did you say 'He's not my type' or 'Not in this lifetime.' \" She was right. I didn't discount the possibility. ",
        "\"He's going to MIT,\" I said, thinking out loud. \"Full-ride.\"\n\n\"Damn,\" Wendy said with surprise, \"brains and music. And you must admit, he didn't exactly hit the ugly trees.\" \n\n\"He needs to cut his hair,\" I said without thinking. \n\n\"That's the artist,\" Wendy said. She chuckled, \"If you told him to shave it off, he would.\"\n\n\"He would not!\" \n\n\"Today he would,\" Wendy said. \"Men loose all judgment when they are in love.\"\n\n\"He's not in love!\"\n\n\"If you say so,\" Wendy said, pointing down the block. \"I've wanted to look in that antique store there. You mind?\"\n\n\"No,\" I replied, \"I'm not as smart as he his.\"\n\n\"Let's cross here,\" Wendy said, seeing that the traffic was clear. \"What's that got to do with it?\"\n\n\"I have no musical talent,\" I added. \n\n\"Like I do,\" Wendy laughed. \"Did I tell you that Tom arrested me once?\"\n\n\"What?\" I asked, \"Like a citizens arrest.\"\n\n\"No, no,\" Wendy continued. \"He was a cop a lifetime ago. A bartender got a little fresh with me and - well - let's just say the bartender was claiming assault, and Tom was the cop that showed up.\" I tried to stifle my laugh and failed. Wendy found it amusing. \"It took him two minutes to realize that the asshole deserved the beer in his face, but he threatened to arrest me anyway. He had the same eyes for me that Caleb has for you. I was halfway to the police station before I finally agreed to a date with him.\"\n\n\"That's illegal,\" I pointed out. \n\n\"It was lovely,\" Wendy said. Her smile was huge. \"He wasn't the best looking man. Not the most articulate or even romantic. He simply saw something in me and desired it beyond reason.\" Wendy looked at me. \"Nothing else mattered after that. Three dates later and I wanted him naked more than anything.\" I covered my mouth with my hand. Wendy enjoyed shocking me. \"Love doesn't have any rules.\" \n\n\"He risked his job for you,\" I said, enjoying the romance. \n\n\"Not really,\" Wendy corrected me. \"He had already put in his notice.\" She opened the door for me at the antique store. The place smelled of musty wood.\n\n\"Still, he risked a lot,\" I said, trying to preserve the romance. \n\n\"Oh, look at that rolltop,\" Wendy said, pointing at an old desk with a bunch of little nooks. We started walking over. \"Tom had some kind of religious experience. An epiphany if you like. I guess I was part of it. He started playing his sax and never looked back.\"\n\n\"You can't put a monitor on this,\" I said absently, looking at the desk. \n\n\"Nope,\" Wendy said smiling, \"this is pre-email furniture.\" I had to admit it looked kind of cool with all its cubby holes. She ran her hand along the curved edge as if it were silk. \"Imagine writing a letter and waiting a week or so for a response.\" \n\n\"Texting is faster,\" I said. \n\n\"Yes,\" Wendy sighed. \n\n\"So,\" I said, \"Tom turned over his life for you.\" Wendy laughed. \n\n\"I think I did most of the turning,\" Wendy said. \"He was on a path of discovery and just knew I would like to ride along. I became the pseudo-manager, and the rest is history. It's a good life, though. We're happy and unlike some musicians, he doesn't stray.\"\n\n\"I like these,\" I said, pointing out some oval end tables. They were stained dark but had floral inlays that were done in a much lighter wood. I ran my fingers along it and couldn't feel the edges of the inlays. \n\n\"Those are nice,\" Wendy agreed. \"They don't make furniture like they used too. It's so utilitarian now.\" \n\n\"IKEA.\"\n\n\"Exactly,\" Wendy said. We roamed the store admiring the craftsmanship. Some of the things were simply old and probably ugly when they were built. I had to admit that I did like when the maker put in the extra effort, carving designs into the wood. Unlike today's furniture, I could tell it was a labor of pride, not profit. We exited the store pleased with what we saw. \n\n\"Do you buy a lot of antiques?\" I asked. \n\n\"No, not really,\" Wendy replied. \"We're on the road as much as we're at home. Maybe someday I'll start a collection.\"\n\nWe ambled through a few more stores. Held our noses at a candle store and made faces at an art store. The paintings were of average quality but had astronomical prices. They did have a nice picture of a little girl sitting on the edge of a lake. The artist gave her an aura that looked like it was generating wind away from her. The flower and trees all had a subtle bend like they were opposed magnetically from the girl. I found it almost called to me. At $1,500, I wasn't going to answer in this lifetime. \n\nWendy insisted that she buy me a cup of coffee at Carmen's Coffee. It was a small shop with only five tables. I ordered a cup of candy bar, a double chocolate chip frappuccino. Wendy went for caffeine. I was never a strong fan of coffee, but chocolate held a place of honor on my tongue. \n\n\"Did you always know what you wanted?\" I asked. It was a question that I couldn't ask Mom or Dad. Mom always seemed to know, and Dad just flowed through life like it was a gift. Grandma would have given me some weird answer I would have only half understood. Wendy had no ties to me and could tell me the truth. \n\n\"Oh, God no,\" Wendy replied, \"when I was your age, I was confused as shit.\" She sipped her coffee, oblivious to her swearing. I wanted the freedom she seemed to extrude. \n\n\"I don't even have choices,\" I admitted, \"I have no idea what I want. I have decisions coming up and 'I don't know' is the only answer I have.\" I felt the oppressive weight of the future shift a little as I shared my apprehension. It wasn't any lighter. Maybe, talking about it made me stronger.\n\n\"Good,\" Wendy said, smiling. \"I'm glad I wasn't the only one.\" \n\n\"It's scary,\" I admitted.\n\n\"Don't worry so much,\" Wendy said. \"Make whatever choice seems best at the time. Something will come along and steer you on your path. I can see it in you.\" \n\n\"I'm not as happy as I think I should be,\" I continued. \"I look around at people like you and everyone is content. I feel like I'm left out of it all.\" Wendy put down her cup. I could almost see the pity in her eyes. I wanted desperately to take back what I just said. I didn't want to ruin my time with her. \n\n\"I was where you were,\" Wendy said. My whole body sighed at her words. She understood. \"I have no less apprehension or misfortune than you do. What I do have is someone to share it with.\" She looked away for a moment, then looked back. \"I can only tell you that problems get less. Less important, less worrisome, and less insurmountable. You find someone to share it with, and the less is lessened even more.\" She chuckled and lifted her cup back up. \"That didn't make any sense, did it?\"\n\n\"All the sense in the world,\" I said. I knew exactly what she was saying. It was a relief to know I wasn't alone in my fear of the future. It was also nice to know that the worry gets less worrisome. \n\n\"Sometimes, I envy your youth,\" Wendy said. \"Other times, I relish my wisdom. Age makes the body weaker, but the mind stronger.\" She sighed. \"Then again, to have my ass look like yours again: I would trade some wisdom for that.\" We shared a good laugh. I needed it, and she enjoyed it. At that moment, I would have traded my ass for some wisdom. \n\n<p align=\"center\">Chapter 10 - Teegan</p>\n\nWe returned to a very crowded Tangerine. It pleased Wendy to see the number of people who paid to see the concert. We had to wait in line at the front door to get in. I guess we could have gone right to the front, but it seemed rude to cut. The line wasn't that long, and it gave us time to people watch. \n\n\"They must like the Smooth Gliders,\" I said to Wendy. \n\n\"We won't fill a colosseum, but we'll never starve,\" Wendy replied. \"We're in talks with PBS. That will send album sales through the roof if it pans out.\"\n\n\"I thought that's old people music,\" I said without thinking. \n\n\"Usually,\" Wendy said with a smile, \"it's great music played by old musicians. Young people don't donate to PBS.\"\n\n\"Sorry,\" I said, \"I didn't mean...\"\n\n\"No worries,\" Wendy interrupted, \"you have an ass, I have wisdom.\" She made me laugh. For some reason, I felt the need to link my hands behind my back and cover my butt. I was happy she laughed with me. \n\n\"Hello, Matt,\" I said when we finally made it inside. I flashed my wristband, and he smiled at me, glad that I remembered his name. \n\n\"Where's your boyfriend?\" he asked. I let it go since I would probably never see him again. \n\n\"Practicing,\" I said, \"or waiting for me.\" He waved us in with a kind nod. I felt special being recognized by the bouncer. It's my first club, and the bouncer knew me. I'm in the in-crowd.\n\nWe moved through the tables, some with no seats, and made our way to the front. Wendy grabbed my hand and drove point. I followed with a large smile on my face. I could feel the excitement building. From the bits of conversation I could pick up, there were people here who followed the band around the country. I had never heard of the Smooth Gliders before, but they obviously had some groupies. \n\nOur table was waiting for us, complete with a reserved sign. I knew I had a ticket, but didn't realize it was front row. \n\n\"We have the best seats in every dive,\" Wendy shouted above the din. I smiled as she dragged me to the table. 'We' meant the significant others of the performers. It wasn't a date, but I was Caleb's guest. Right then, I was a special guest, and I couldn't be more impressed. \n\nCaleb met us at the table. He was so pleased when he saw us I thought his smile would break his face. He must have spent his time explaining why the best table in the house was saved with only one person sitting at it. He said something to me, and I nodded, having no idea what it was over the din. I followed his hand signals and sat next to him. \n\n\"I thought you'd be backstage,\" I said, leaning into his ear. \n\n\"Tom will call me up at intermission,\" Caleb said, his breath tickling my ear. Unless we wanted to shout, talking directly into ears was the only way to communicate. There were simply too many people in the club. \"I got a pitcher of raspberry lemonade,\" he continued, pointing at the pink colored juice in the center of the table. \"Is that okay?\"\n\nI leaned into his ear and voiced my approval. A shiver ran down Caleb's body that made me smile. I guessed my breath tickled him as well. Caleb began pouring me a glass while I leaned over to Wendy and asked her if she wanted some. I half understood the lack-of-vodka decline. I smiled, knowing enough not to pour her a glass. \n\nCaleb handed me a glass. I took a sip and thanked him by moving lips to form the words. He smiled, so I knew he understood. I thought back to the discussion I had with Wendy and decided it was a good time to find out things. It wasn't like we could have an argument with all the noise. \n\n\"Do you think this is a date?\" I asked into Caleb's ear. His head moved away quickly, and he looked into my eyes. I saw a mixture of fear and wonder. Maybe I had made a mistake. Maybe I should have asked after he played. Confidence came over him, and he leaned to my ear. \n\n\"No, but I want it to be,\" Caleb said clearly. Wendy was mostly right. A million thoughts ran through my mind. I could end it now, crush him before he went on stage. That seemed a non-starter. I didn't want to crush him. I didn't want him to think I was for or against the idea. For the life of me, I couldn't figure out what I wanted or why I asked. I blinked my eyes and tried to make the best decision I could at the given time. I kissed his cheek. \n\nCaleb beamed a smile that encompassed his entire face. Thankfully, he didn't kiss me back, which would have confused me even more. I had no idea why I kissed him. He paid me a compliment in his own way, and I returned one. It was better than any words I could put together. It only took a second, and Wendy was right, he certainly hadn't hit any ugly trees. In fact, he looked pretty handsome with that smile meant for me. \n\n\"Now you've done it,\" Wendy said into my other ear. I could see the laughter in her eyes. I was about to comment when the MC came out to announce the band. We all turned, and I avoided things I really couldn't explain. The band would give me time to think. \n\nI was enthralled with the energy that exploded when the band came out. They obviously had a strong following, and now I was part of it. I couldn't help standing and screaming with everyone else as they took the stage. The echo of the crowd drowned out every other sound and helped pump the excitement. Wendy steadied me when my jumping got out of hand. Caleb smiled and moved next to me. I smiled and nodded at whatever he said into my ear. It was easier than trying to get him to repeat it. \n\nEverything began to simmer down when Tom lifted the strap of his sax over his head and approached a microphone mounted in front of the band. The size of his smile showed how much he appreciated the applause. It looked like he'd have trouble forming words. \n\n\"Thank you!\" Tom shouted, then repeated it with his hands up to get everyone to quiet down. \"We really appreciate being back in Bangor!\" That caused another round of screaming applause. I looked around and figured there was only room for a few hundred people, but it sounded like thousands. He waited for the crowd to quiet again. \n\n\"Wendy,\" Tom said loudly, \"I love you.\" The crowd went nuts again, and I looked at Wendy who was blowing a kiss to the stage. Tom lifted the sax to his lips, raised his hand. The crowd quieted quickly. The hand dropped, the drums and bass guitar kicked in, and Tom followed with a deep sax that sounded more like lead vocals than an instrument. \n\n\"That's my song,\" Wendy said happily in my ear. \n\n\"What's it called?\" I asked. \n\n\"Wendy, I Love You,\" Wendy replied. I looked at her and could see that she loved him just as much. Her eyes were glued to the stage as Tom emptied his heart into the sax. It was a fusion of blues and rock n roll. When the lead guitar joined, something beautiful happened. I could feel the music flowing through me, almost like the bond, but infinitely less serious. There was laughter and fun in the arrangement, the drums accenting and laying out the road that others followed. There was no way I could sit back down, not with my foot moving of its own accord. \n\nSoon the small dance floor filled with gyrating bodies. Caleb grabbed my hand and found a little opening next to our table. We danced, if you could call it that. I was doing more laughing, and trying to keep up with his weak attempts at synchronizing his hips with the music. I could see his expression change at my response. There was no way I was going to let his ego ruin the energy the band produced. I moved closer and put my hands on his hips. I smiled as I guided his movements into something a little more in beat. He hesitantly placed his hands on my waist, and we moved together. This time, when I smiled, he knew it for the happiness it was. He stopped thinking and started dancing. \n\nOnce we started moving smoothly, I released Caleb's hips and he my waist. His smile mirrored mine as we let loose in a dance of our own design. Everyone was bumping into everyone else, but our eyes were on each other as the song moved our bodies. I could no longer deny that I enjoyed being with Caleb. I tried to hide it from myself; some mental security barrier had held me back. I enjoyed his eyes on mine. The relationship probably wouldn't work, but right then, with the music smoothing the road, I was having fun. It felt like a date.\n\nThe next few songs were as original as the first. Sometimes the guitar would take the lead, other times the sax. The instrumentation was unique and pleasing, my mind wanting more every time a song ended. We had to sit down, so we didn't start sweating too much and to give others some room on the floor. \n\n\"I've never heard anything like it,\" I said into Wendy's ear. \n\n\"They do have a sweet sound,\" Wendy fired back. Caleb refilled my glass, and I mouthed him a thank you. Time passed quickly as the band transitioned between songs. They looked like they were having as much fun as the spectators, playing errant cords between songs, and laughing about things we could only guess at. After a fairly long set, Tom returned to the microphone.\n\n\"The band is going to take a break to wet their whistles and take care of some bladder concerns,\" Tom said. The crowd laughed at the weak humor. \"I will remain for a quick duet.\" He waved Caleb onto the stage. \"I was working on a tune I couldn't quite get right. Something was missing. Caleb McGuire, who's joining me on stage, intuitively filled in the blanks. I promised him some limelight so that we could show you all something different.\" There was some weak applause as Caleb mounted the stage. \n\nCaleb moved behind the drums and retrieved his violin. There was no hesitancy in his movements. His confidence was unwavering, and he looked like he was having fun if his smile was any indication. He spent some time tuning his violin, playing some quiet notes and twisting the pegs until he was happy. \n\n\"Are you about ready?\" Tom said with an exaggerated sigh. Caleb smiled and answered with his bow, a dying-cat like tone directed at Tom. The crowd loved the theatrics. \"Okay,\" Tom said, holding his hands over his ears. \"This is a work in progress folks and not something you're used to. I hope you enjoy it.\" \n\nTom started with a mellow tone that drifted like the wind, barely shifting his notes. I heard something I recognized in it, but I couldn't grasp at the memory. I was leaning forward, taxing my brain when the violin entered. This wasn't the wild ride of the songs before. It was a smooth melodic tune that entwined the layers of the two instruments perfectly. The entire crowd went silent with a palpable awe as the song relaxed and swayed. I knew I had heard it somewhere, more so as the violin echoed the sax then took roads of its own. \n\nThe more they played, the more I felt I knew the music intimately. Tom claimed it was original, but I had felt it before. When Caleb went into a particularly long drawn out note, it hit me. I closed my eyes as they began to well up. The music was me. It was the audio version of my bond, close to my Dad's, but distinctly mine. My breathing quickened as I tried to understand how it was coming from the instruments. It was my private music, something I had thought I never shared. \n\nSome barriers collapsed in my confusion. Dad, Mom, and Zane lent me strength, all of them not understanding, but sensing my need. I took a deep breath as the song intimately exposed all that I was to the world. I felt naked as if they were reading my diary out loud. \n\n\"Are you alright?\" Wendy whispered in my ear. I shook my head, and she scooted her chair closer. Dad was flooding me with love and concern, the only thing that allowed me to not completely break down. The music flowed into me, syncing with and igniting my bond. I had never known it to be so strong. More internal walls were dropping as I felt Wendy's arm around my shoulders, pulling me closer. Mental walls I didn't even know I had erected shattered. Wendy grabbed my hand in concern. Without thinking, I joined her music to mine.\n\nA rush of Wendy's breath flew past my ear. Her comforting movements ceased as she felt everything I was, trade with everything of her. Confusion left as the bond strengthened. The music was beautiful, not harmful. The future, so frightening before, was merely a challenge that could be easily conquered. I opened my eyes and looked toward the stage. I could feel Wendy's love for Tom beaming through me. Her apprehensions faded with mine as I watched Caleb confidently sing my song on his violin. I could feel the crowd's minds enjoying the music. I wiped my wet eyes. The whole world was so beautiful. \n\nThe music ended, and Wendy released my hand. Reality rushed back, and I turned to her. Her eyes were wide, and her smile threatened to tear her skin. I hadn't bonded with anyone new in years. I didn't know it could be so strong. There were subconscious barricades I hadn't understood before, that I could now control. They had seemed a solid part of me before, a demarcation that couldn't be crossed. They were now nothing more than doors I could open and close at will. ",
        "\"I thought you were a myth,\" Wendy said, leaning forward into my ear. The crowd was on their feet, a standing ovation for my song. I didn't understand her reference, but let it go. I knew intimately that she was a good person and meant nothing by it. Standing, I found Caleb's eyes searching for me. I smiled and cheered as I promised I would. The immense pride in seeing him up there was not expected. I turned back to Wendy.\n\n\"He looks so handsome on stage,\" I said. She approved of Caleb, that much I knew. \n\n\"It's okay to like him,\" Wendy said, \"the future's not written.\" I smiled at her, and we hugged as if we'd been friends for eternity. The bond had broken through all the weirdness that usually took time to dissolve. I took a deep breath and reestablished my mental walls. Sharing was a wonderful thing, but I didn't want to do it with the world. \n\n\"Thank you!\" Tom said into the microphone. \"We're glad you enjoyed it. I've been trying to get that tune out for 18 years. It took a talented violinist to make it work.\" He pointed to Caleb and the crowd gave Caleb another round of applause. \"I suspect this isn't the last time you see Caleb McGuire on a stage.\" More cheers. I was beaming, but nowhere near as much as Caleb was. It was obvious how he wanted to spend his life.\n\n\"We're taking a break. The Smooth Gliders will be back on stage in about an hour,\" Tom said. With that, he and Caleb began exiting the stage. \n\n\"I kind of lost control,\" I whispered into Wendy's ear. \"Caleb doesn't know. To tell the truth, no one is supposed to know.\" She looked like she knew exactly what I was talking about. \n\n\"Tom already knows you,\" Wendy said. I looked at her in confusion. \"He met you once before. I always thought he was making you up.\" I squinted my eyes and tried to comprehend what she was saying. She leaned closer, \"You're Stinky,\" she added with a laugh. \n\n<p align=\"center\">Chapter 11 - Sam</p>\n\n\"What the hell was that?\" I asked Natalie as I lowered the newspaper. Natalie was looking over some contract that she shouldn't be touching on the weekend. She always spent the weekend looking over her associate's work, making sure it was okay before adding her name. It always meant less us time. I had gotten used to it, but it didn't mean I liked it. \n\n\"I haven't felt her like that since she was a baby,\" Natalie said. She dropped her work on the table and looked up at me. \"You don't think she bonded with that boy?\" \n\n\"I don't think so?\" I replied, \"Someone else maybe. It was so strong, like she hit the afterburners or something.\" Natalie chuckled and gave me that look that said I was going to be warm tonight. \n\n\"You don't like me working weekends,\" Natalie said. I had told her as much before, in a nice offhanded way. It was greedy of me to demand so much time. \"I saw what you want,\" she added as she got up from the chair and moved toward the couch. \n\n\"Bad girl,\" I said with a smile, \"you haven't cheated in years.\" Natalie took the paper from my hands and tossed it haphazardly onto the coffee table. \n\n\"It's been so long since I've seen inside you,\" Natalie continued. \"You still see me naked in your mind.\" I took her hand and pulled her onto the couch and into my arms. \n\n\"You shouldn't be messing in a man's mind,\" I chastised, putting my hand behind her neck and caressing behind her ear with my thumb. She leaned into my hand and curled her body closer to mine. \"Besides, you already know I love you.\" I pulled her lips to mine and felt that special impassioned tingle that came when our desires were moving at the same speed. Her lips parted, and the kiss left lovely and entered into a luxurious passion. \n\n\"Minor in the room!\" Zane shouted as he came down the stairs. Natalie laughed as she broke the kiss. A thought flashed through my mind, something about being childless. It disappeared as quickly as it came. \"Is it okay if I spend the night at Rick's? He picked up a bunch of horror films, and he's having people over.\"\n\n\"Text us when you get there,\" I said, mentally scooting him out the door. Natalie smacked my shoulder and stood up. Her sweet smile softened the blow. \n\n\"You have to drive him,\" Natalie said, \"it's already dark out.\" I sighed and thought again of being childless. This time, the thought lingered for a tenth of a second. I stood, and she wrapped her hands around my neck and kissed my cheek.\n\n\"I'll be here waiting,\" Natalie whispered in my ear. The breath tickled my ear, as she let go slowly. I loved the way her eyes looked at me. They were her young eyes, the ones that only I was allowed to see. \n\n\"You packed?\" I asked Zane quickly. The drive was only ten minutes, but I could do it in five if I broke a few laws. \n\n\"Yep,\" Zane said, holding up his backpack. I smiled. \n\n\"And what if we had said no?\"\n\n\"You're predictable,\" Zane replied, shrugging his shoulders. \"You only say no when I've been a pain in the ass.\" \n\n\"Now I want to say no just to be spontaneous,\" Natalie joked. \n\n\"Mom!\"\n\n\"Go, go,\" Natalie said sweetly. \"I want you home in time for dinner tomorrow. You have that history test to study for tomorrow night.\" I grabbed my keys and practically shoved my son out the door. \n\n<p align=\"center\">*****</p>\n\n\"What did Teegan do?\" Zane asked once we were on the road. There was a lot of curiosity in his voice. \n\n\"You felt that?\"\n\n\"I think the world felt that,\" Zane replied. \"I didn't know it worked that way. I mean, I feel you guys and know when you're pissed and stuff, but it was different this time.\" I could feel my face heating up as I wondered how much he felt. Natalie saw things only she should see, and we certainly didn't want to share those things with our children.\n\n\"What did you feel?\" I asked carefully. \n\n\"I felt more of me,\" Zane answered. \"It was like I was able to rethink things without any worries, I guess.\" I smiled, relieved that he didn't inadvertently walk into my x-rated thoughts of his mother. \n\n\"She hasn't done that since you were a baby,\" I answered honestly. \"We all thought it had faded away. Obviously, it hasn't. She was able to turn it off quickly enough.\"\n\n\"Is it wrong to like it?\" Zane asked. \n\n\"No,\" I said after thinking a moment, \"though I wouldn't depend on feeling it again. It's been over 15 years since I felt it the last time.\"\n\n\"Dad, who is she?\"\n\n\"Your sister,\" I replied. I looked over expecting to see fear in his eyes. There wasn't any, just curiosity. \n\n\"I know that,\" Zane said, \"I mean, I want to know the things you're not telling me.\" Though we hadn't told Teegan everything, she was aware of the fake birth certificate and some of how she came into the world. Zane, we had left more in the dark. It was the first time he expressed a desire to know. \n\n\"I think I've waited too long to tell you,\" I said. \"Now, it's Teegan's right to tell you, not mine or your mother's.\" It was a type of cop-out, but I felt it had some correctness to it. Teegan was a young woman now, and it was her history. \n\n\"She's told me some,\" Zane admitted. That surprised me. \"I know she's adopted, and like her power, no one else can know.\"\n\n\"Then you know a lot,\" I said. \"She is our family and always will be,\" I added in case he thought she was less for not being tied by blood. \n\n\"Dad,\" Zane sighed. I could hear the eye roll in his voice. \"I'm not trying to get rid of her. I'm just trying to figure things out. She'll always be my sister and knowing stuff won't change that.\" He was getting older before my eyes. It wasn't the first time he could sense my subtlety and answer my unasked questions. \n\n\"You're right,\" I said, \"I just didn't want you thinking we loved her less because she's adopted.\" \n\n\"Like I don't feel it every day,\" Zane said with the same eye roll tone. I had to laugh, more at myself than him. Of course, he knew how much we loved each other. No one in the family could escape that. I really had to stop thinking that everything needed to be explained to him. He was coming into his own mind and didn't always need my conclusions. \n\n\"Sorry,\" I said, \"you've grown up while I wasn't looking.\" \n\n\"Remember that when I'm 16,\" Zane said. \"I was thinking a Corvette for my birthday.\" The seriousness of the conversation faded from there. I explained to him that it would be a cold day in hell when he had a 'Vette before me. He reminded me that air conditioning had come a long way. I liked the bit of bonding the drive provided us. When he entered high school, hanging out with his friends suddenly became more important than spending time with his dad. It was rare to have a conversation that spanned more than a few words. I realized I missed it. \n\n\"Thanks,\" Zane said as he exited the car. I reminded him about being home by dinner, which he half-heard as he hustled to Rick's door. Our time was over, and friends once again reigned supreme. \n\nI was at a stoplight when I felt Teegan's love explode into me again. More powerful than I had ever felt her before. Whatever triggered it, I welcomed it with open arms. I sent back all I had to her, a father's love untainted by reservations. The night was magnificent. Life's problems sorted themselves into neat solvable chunks. In the middle of it, I found Natalie and our loved mixed in a dance of our making. The link broke, my smile didn't. \n\nWhen I returned home, I was surprised to find most of the lights out. The one at the top of the stairs was on, so I followed it like a beacon. A lamp in the master bedroom led me there. I called out for Natalie.\n\n\"In here,\" I heard from the bathroom. I walked into flickering candlelight lightly bouncing in the mirror over the sinks. Our rarely used tub was filled with water, and the most beautiful woman in the world was half submerged. \n\n\"No bubbles,\" I said with feigned disappointment. I was removing my shirt, and kicking off my shoes as I spoke. \n\n\"I saw what was in your mind,\" Natalie said softly. Her breasts bobbed softly in the water. \"It made me feel young again. You still find me sexy.\" \n\n\"Oh,\" I said as I went to work on my belt, \"if you only knew.\" \n\n\"I do know,\" Natalie said with a soft laugh. There is an attitude that makes a woman sexy. It's not the visible parts as much as the aura of desire they can project. I had been married to the woman in the tub for 17 years, and she could still get me going with only a look. \"Don't fall,\" she added when I almost tripped stepping out of my pants. \n\n\"Someone likes the bath idea,\" Natalie said, looking between my legs. I chuckled as I stepped into the bath. I felt twenty years younger, about to do something illicit with a new girlfriend. It had been a long time since we had been adventurous. Natalie scooted to the front of the tub and directed me to sit in the back. The water was warm, just on the cool side of hot. I sank in, and she slipped between my legs with her back to me. \n\nNatalie tilted her head back and kissed me with the same passion I felt on the couch. She rose up, the water sloshing, and guided me between her legs. I tossed all the foreplay I was planning to the wayside as she sank onto me with a moan. \n\n\"That's better,\" Natalie sighed, smiling into my lips. \"It took you forever to get back here.\" I could feel her shifting, making me comfortable inside of her. It was so sensual; I began to worry I would lose it like I was twenty years younger as well. I ran my hand up her tummy, pulling her back into my chest and allowing my hands to roam her breasts. \n\n\"Next time I'll break a few more laws,\" I whispered. Our lips joined again as Natalie twisted herself to make it possible. I straightened her out and pulled her head to my shoulder. My lips nibbled on her earlobe as she began to move her hips. We somehow found a smooth rhythm that suited the confines of the tub. Natalie floated above with her back arched into me, controlling most of the movement. My hands roamed her overly excited body, triggering very sexy twitches. I moved my lips to her neck, and she started losing her rhythm. \n\n\"I love you,\" I said as I felt Natalie begin to stiffen. I used my hips to drive myself deeper, and she shifted, causing me to find places inside her that made us both twitch. I felt the tingle start in my loins, and a moan escaped my lips. Natalie matched my sounds, and her hips began to shake. Together, we found our private heaven.\n\nNatalie started laughing when we returned to earth. I was still deeply inside her, feeling the laugh as much as hearing it. \n\n\"And what's so funny?\" \n\n\"The expression on your face when you walked into the bathroom,\" Natalie replied. \"You looked like a ten-year-old at Christmas.\" I shifted her around so I could kiss her. \n\n\"In my defense,\" I responded, \"you looked so damn sexy.\" The candles were flickering in her eyes enhancing the way she studied at me. \n\n\"I can't believe you still see me that way,\" Natalie said, \"I'm getting saggy and wrinkly in all the wrong places.\" I couldn't believe she had lost confidence in her beauty. I would always see her as she was when we first met. Imperfections can't survive loving eyes. \n\n\"You have to know I'll never see anything but beauty when I look at you,\" I said. I loved how she could laugh and kiss me at the same time. Somewhere along the line, I had failed to reinforce my love for her. I guess raising kids had a tendency to shove intimacy aside for practicality. I kissed my wife back, making sure she knew my love still had the aggression it did when we were younger. Never would I let her forget it again. \n\nTeegan had no idea what she re-awoke in us when she found her full power. We'll never tell her, but will be eternally grateful all the same. \n\n<p align=\"center\">Chapter 12 - Teegan</p>\n\n\"You can't tell Caleb,\" I emphasized to Wendy. \n\n\"He wouldn't believe me anyway,\" Wendy said in a calming tone. Caleb and Tom were getting swamped as they exited the stage. The crowd had enjoyed the song and wanted to meet the musicians. \n\n\"How did they know that song?\" I asked. \n\n\"Tom said he heard it from you,\" Wendy laughed. \"He spent years trying to duplicate it. I thought It was just his creative side, which has always been a little bonkers.\"\n\n\"But he said Caleb finished it,\" I pointed out. \"I've never bonded with him.\" I looked at Wendy who still wore a mask of extreme happiness for all the world to see. \"What?\" \n\n\"He really loves me,\" Wendy said. It took a moment for what she said to sink in. \n\n\"Tom?\"\n\n\"Yes,\" Wendy replied, her smile glued in place. \"You showed me how he sees me.\" She pointed to the men as they neared. Tom was the first to break through the crowd and Wendy nearly tackled him. For a moment, I thought she was going to rip his clothes off then and there. \n\n\"What did you think?\" Caleb asked. I looked away from the kissing couple, blushing a little for the both of them. I was grateful that things passed through me without my knowledge. I certainly didn't need visions of desires not meant for me. \n\n\"How did you finish that song?\" I asked.\n\n\"You didn't like it?\" The look in his eyes was almost painful. I couldn't believe my rudeness. He had no idea what the song was to me. \n\n\"No,\" I replied quickly, \"I mean yes. I liked it a lot. It's beautiful.\" I waited until his smile returned. \"It must have been difficult to develop your part of it. There's so much complexity to it.\" \n\n\"That's the weird thing,\" Caleb said, \"it just flowed out of me. Tom says it happens sometimes.\" He shrugged his shoulders. \"Don't know if it will ever happen again.\"\n\n\"Of course it will, \" I said, adding a friendly smile. \"You've got talent, and everyone here knows it.\" Caleb's smile grew, which made me feel better than it should have. \"You looked really good on stage.\"\n\n\"I had a few butterflies,\" Caleb admitted. \"When the music started, they just disappeared. I have to say, it was a lot of fun up there.\" We were briefly interrupted while some new fans expressed their congratulations to Caleb. I liked how he moved closer to me, making sure I wasn't shoved out of the way and remained part of the conversation. \n\nIt took another ten minutes for the place to settle down enough that Tom and Caleb could sit down. It was still noisy, but not so much that a conversation couldn't be held. We talked about Caleb's first experience on stage for a paying audience. Tom kept looking at me warmly, and I began to realize that Wendy must have told him who I was. When Caleb excused himself to use the restroom, Tom immediately moved next to me. \n\n\"Stinky?\" Tom said with a huge smile. I think I blushed. \n\n\"Teegan, now,\" I replied. He put his hand on the table in front of me and curiosity filled his eyes. There was no need for him to make a request, and if I hadn't placed my hand atop his, I don't think he would have taken it badly. I knew there were people who had kept my family and me safe when I was a baby. Tom was obviously one of them. I dropped all my walls and synced my music with his. \n\nThe world became a thing of beauty as our minds moved together. I was pleased to feel the happiness emanating from Mom and Dad. Something had brought them closer, cementing them together, stronger than I had felt in the past. It wasn't that they were ever drifting apart, just now it felt fresher, more alive. My choices, the ones I needed to make, felt trivial and obvious. My apprehension disappeared into a cloud I could easily blow to the side. \n\nI saw myself, a baby in my father's arms, riding in the trunk of a police car. Tom's car. I saw Tom roll down the windows as a scent wafted from the trunk. It was a ghastly smell, a mixture of sewer and death. Still my father held me tight in loving arms. I knew then, he would never stop loving me and would shield me from all harm. Unbidden, my love exploded into Dad. It flew back with equal force, wrapping me in his security. I broke the link when my smile threatened to tear my face. \n\n\"Damn,\" Tom said, \"you're more powerful than I remember. Still the most beautiful music in the world.\" I fell into his arms, and he hugged me back. \n\n\"Thank you,\" I whispered. It wasn't just for saving me so many years ago. It was more for the song that broke down the walls I hadn't realized existed. \n\n\"Do you remember me?\" Tom asked with surprise. \n\n\"I do now,\" I replied. He didn't know what I saw. The linking, even at it's most powerful levels, wasn't completely two-way. We saw what we wanted to see, or what we needed to see and feel. \"For the first time, I understand why Dad calls me Stinky,\" I added. We broke apart in laughter which did as much for our friendship as the link had. \n\n\"Caleb doesn't know about the bonding,\" I told Tom. \"No one's supposed to know. We're still kind of in hiding.\" \n\n\"How can he not know?\" Tom asked. \"I saw you holding his hand.\"\n\n\"I usually block the bonding,\" I answered. \"The song you two played opened me up and I accidently bonded with Wendy.\" Wendy smiled at me as she circled her arm around Tom. I had inflamed something in her. Tom turned and kissed her in response to the arm. I almost felt in the way. \n\n\"I'm confused,\" Tom said, \"Caleb finishing the song suddenly made sense when Wendy told me who you were. Now, you tell me you never bonded with him.\"\n\n\"I didn't even know him when you two first met,\" I said. \"We only became friends about a week ago.\"\n\n\"Maybe it's fate,\" Tom said with a sly smile. \"He's a good kid, you could do worse.\"\n\n\"Stop it!\" Wendy interjected for me. \"She'll make her own decisions in her own time.\" I liked having an older sister, even if it was just for the night. Tom nodded and dropped his weak attempt at matchmaking. \n\n\"Tell me,\" Tom asked, \"Sam and Natalie? Are they together?\" He became hesitant at the end, wondering if he had intruded into something that should be left alone. \n\n\"Mom and Dad,\" I nodded with a forgiving smile. \"I also have a brother who's a freshman.\" Tom laughed. I let the curiosity show with raised eyebrows. ",
        "\"Your mom,\" Tom explained, \"kind of flirted with me to get you all out of a jam. The first time I bonded with you, I saw how she saw your father. Mind you, it was before your father thought he had a chance. I knew she had eyes for only one man. I'm just happy it worked out.\" \n\n\"She flirted with you?\" I asked, my curiosity piqued. Wendy was just as curious. Tom filled in the blanks on how things had progressed. I enjoyed his description of Rose, the grandmother I was too young to remember. Dad and Mom mentioned her from time to time, but I had no reference, at least none I could remember. Pictures do little to give context. \n\nCaleb came back and ended our conversation. I could see he had spent some time cleaning up and combing his hair. His breath smelled of mint which made me smile. He was primping for me. For some reason, I was suddenly concerned about my appearance as well. I excused myself to use the restroom as well. \n\nThe second set that the Smooth Gliders played was as enjoyable as the first. Caleb brought me out on the dance floor again, this time with confidence. I was slightly perturbed with the attention some of the women were giving him. I guess it was due to his stage presence. The looks weren't disguised, and it was obvious he was with me. Insulting was the only word I could come up with to describe it. Some of them were old enough to be his mother for God's sake. \n\nIgnoring the crowd allowed me to have more fun. Caleb's brief stint on the stage had given him a more relaxed attitude. Or maybe it was that we were getting to know each other better. He laughed more easily and my attempts at teasing him were faltering into his knowing smile. I really liked spending time with confident Caleb. \n\nThe concert ended around 11:00. The Smooth Gliders played 'Life on Easy Street' as their encore song. It was a jazzy tune that had a melody that wanted to stick in my head. Sometimes rhythms fit well in my mind and tried to dig in. This one wanted to make a permanent home. Luckily, we stuck around, as the place emptied, for some coffee and conversation. Good back and forth could always clear my head. \n\n\"Where are you two going next?\" I asked Wendy and Tom. \n\n\"Columbus, Ohio,\" Wendy answered with an exaggerated groan.\n\n\"She's not impressed with Ohio,\" Tom laughed, pulling Wendy close. \n\n\"Where's home?\" \n\n\"We have a house in Sedona, Arizona,\" Wendy sighed, \"but we're only there six months out of the year. The start of the tour is fun. It's the last month that seems to drag. Living out of a suitcase gets old.\" \n\n\"The life of success,\" Tom summarized. \n\n\"I hear you're going to MIT,\" Wendy mentioned to Caleb. \n\n\"That's the plan,\" Caleb sighed. \"The life of success.\" \n\n\"I thought you have a full-ride scholarship,\" Wendy continued. \n\n\"I do,\" Caleb nodded, \"and my parents want me to go to their alma mater, Stanford. In truth, I would prefer something different. Making music is so much more appealing than math and engineering.\" \n\n\"Parents don't see it that way?\" Tom asked. I nodded, not waiting for the answer. \n\n\"They think music is too risky,\" Caleb replied, shrugging. \"I guess they don't want me moving back in with them if I fail.\" Wendy chuckled at how he said it. \n\n\"I think they're wrong,\" I said. Not sure why I decided to put my two-cents in, but I did it anyway. It was a shame that anyone would pursue a career they didn't desire. \n\n\"They're not wrong,\" Tom jumped in. \"Music is a risky business, and you need to be prepared to work some crappy jobs when you start out.\" It surprised me that Tom was siding with Caleb's parents. I expected something more from an artist.\n\n\"What about happiness?\" I said, stronger than I intended. \n\n\"There is that,\" Tom said with a little laughter.\n\n\"I owe them enough to try their way,\" Caleb said without much conviction.\n\n\"It's easier for an engineer to be a musician than a musician to be an engineer,\" Wendy added. I didn't expect that from Wendy. I felt outnumbered by the very people who I expected to support the artistic point of view.\n\n\"Is there some age where all adults lose the ability to dream?\" I said with more than a little disdain. \n\n\"No,\" Tom replied with a smile, \"If I had to do it again, I would have never been a cop.\"\n\n\"You were a cop?\" Caleb asked. Tom nodded. \n\n\"Over ten years.\"\n\n\"And you just gave it up and started playing?\" Caleb continued. \n\n\"Yep,\" Tom said then smiled at me, \"when a dream smacked me in the face. I liked being a cop, but I love being on stage.\"\n\n\"Then why are you encouraging him to go to MIT?\" I asked befuddled. \n\n\"Because music will send him its way all by itself,\" Tom replied. \"I can't sell a dream, it must be desired. MIT is reality, and a damn good one.\" I guess he had a point. Would it be any better if everyone pushed him into music? Maybe not, but I could feel his love of music and I'd only known him a short while. \n\n\"MIT doesn't end my music,\" Caleb agreed, \"it just slows it down for other work.\" He looked at me like I was the one who needed to be convinced. \n\n\"I like you on stage,\" I said without thinking. The thought of him buried in books wasn't nearly as enchanting as seeing his confidence bloom under the spotlights. Caleb gave me a mysterious smile, then his face flushed, and he looked down at his hands. \n\n\"I think you have your first groupee, Caleb,\" Wendy said with humor. I gave her a glare that only made her smile more. \n\n\"More than one,\" I corrected, \"there were other women checking him out on the dance floor.\"\n\n\"The stage makes everyone a stud,\" Tom said proudly, \"especially the talented ones.\" The conversation moved on to less controversial topics. Caleb was interested in Tom's law enforcement career. I could almost smell the testosterone as Tom explained his most exciting arrests and Caleb asked for clarification on the number of bullets fired and punches thrown. It turned out that Tom only pulled his pistol out once, and the suspect hit the ground shaking before the safety was even disengaged. He did have a few tussles with some drunks which seemed to feed Caleb's masculine story needs. Wendy and I shared some eye rolls during it all. \n\nCaleb excused himself to the bathroom before the drive home. The lemonade was taking its toll. \n\n\"It is so good to see you again,\" Tom said, once Caleb was out of sight. \"You've grown into such a beautiful woman. It's so hard to connect you with the baby I once knew.\"\n\n\"I'm just glad you're not a myth,\" Wendy said. \"All these years I thought you were nothing but a dream. Thought I might have to put him in a home one of these days.\" She added, tilting her head toward Tom. \n\n\"Why haven't you bonded with Caleb?\" Tom asked. \"It's obvious he likes you, and if I'm not mistaken, you don't hate him.\" \n\n\"He's going to MIT,\" I reasoned. \"I'm not. It wouldn't work even if I were willing to force him to like me.\" Tom's eyes narrowed. \n\n\"What do you mean by force?\"\n\n\"The bond does something to people,\" I replied. \"Normally, I hide it away, or I'd have my own groupees. I don't need robots as friends.\" Tom laughed, and Wendy covered her mouth to stifle her own. \n\n\"What's so funny?\"\n\n\"I liked you before you bonded with me,\" Wendy said. \"I don't like you anymore or less because of it. I did enjoy what you showed me, and maybe that gave you a few more points, but if you were a bitch, the bond wouldn't make me like you.\" That wasn't what I expected to hear. \n\n\"You're a sweet girl with a lovely skill,\" Tom added, \"I can see why Caleb likes you, and I know why I do. The thing you do is just a bonus, not some glue that links me to you.\"\n\n\"How would you know?\" I asked, suddenly fearful that even they didn't understand what I was doing to them. \n\n\"We're going to Columbus,\" Tom answered. \n\n\"Yech,\" Wendy interjected a comment on the destination again.\n\n\"If we were so tied to you, why would we continue with our lives? Why did I leave you so long ago when your Mom and Dad would have welcomed the help?\" Tom asked. He leaned forward with fatherly eyes. \n\n\"I...I don't know,\" I replied. \n\n\"You show us wonderful things,\" Wendy added. \"There's no script or force involved.\" \n\n\"But you quit being a cop,\" I said, trying to figure things out. \n\n\"I wanted to play music,\" Tom said nodding. \"You showed me why I wasn't truly happy. You didn't supply a plan. That was already in my head. For once, I could think without all the negative crap that usually fills my mind.\"\n\n\"I don't know,\" I admitted. \"I don't trust what I can do. It even fools me sometimes, screwing up my normal thoughts.\" \n\n\"Are you sure your normal thoughts aren't the ones screwed up?\" Wendy asked. I remembered our conversation about the future. I also remembered the power of my bond with Wendy, and then Tom. Things were clearer, but I didn't trust them. As soon as the bond dropped, I let the thoughts fade away like dreams. \n\n\"Ready to go?\" Caleb asked. He had snuck up behind me and made me jump. Wendy smiled in such a way that I understood he hadn't overheard anything discussed. I nodded and rose. There were hugs and handshakes as we said our goodbyes.\n\n\"Let him like you,\" Wendy whispered as she gave me a hug. I could feel how much she meant it. She didn't understand my fear about what the bond could do to a relationship. Turn it from real to phony in a heartbeat. \n\n\"You've got my email,\" Tom said to Caleb. \"I expect you to keep me updated on what's happening in your life. Next time our paths cross, I expect to jam again.\" Caleb agreed, pleased that Tom wanted to continue the partnership. I could see him thinking about being in the spotlight again. \n\n\"I'm so glad to have met you,\" Tom said with gusto. I tried to shake his hand but received a bear hug instead. It was hard not to smile when he wrapped me so lovingly. \n\nCaleb waited patiently for Tom to let go, then surprised me by holding out his hand. I surprised myself by taking it. It was more comfortable than before. \n\n<p align=\"center\">Chapter 13 - Caleb</p>\n\nTeegan's hand was in mine. I meant it more as a friendly gesture and now it was all I could think of. Her skin was so soft, and the way she wrapped her fingers lightly around my palm sent shivers that were hard to suppress. There was a warmth that seemed to increase as it climbed my wrists and spread to my arm. I became self-conscious about my arm's movements, not wanting to drag her along and not wanting to be a limp noodle. \n\n\"You looked so confident up there like it's where you belong,\" Teegan said. She pulled me closer and our shoulders glanced against each other. I looked into her smile. She was so calm even though we were so close. \"I have no idea how you can do something like that. There were so many people here.\" She lifted both our hands up, broadly pointing around the area. \n\n\"Music gives me confidence,\" I said. It was the truth. I liked how she let our hands swing together, unworried about how they moved. \"As soon as I started playing, it no longer mattered how many people were here.\"\n\n\"I'm glad I came,\" Teegan continued. She squeezed my hand to emphasize her words. \"Next time you should invite others, let everyone see how good you are.\" The compliment was nice. Inviting others seemed drastic. I didn't want to share Teegan, at least not until I got to know her better. \n\n\"Did you and Wendy have fun shopping?\" I asked, more to keep the conversation going than any real interest. \n\n\"We did more talking than shopping,\" Teegan said. \"She's fun to talk with. Doesn't talk down to you if you know what I mean.\" I nodded, not fully understanding. I didn't have a lot of adult friends beyond teachers. I guess Tom treated me like an equal, mostly because of a shared love of music. \n\n\"You sure seemed to bond with her quickly,\" I said. Teegan went stiff for some reason and looked away. \"She must have liked you as well,\" I added, wondering what I said. Teegan's eyes found mine again, and she smiled. \n\n\"We got along pretty well,\" Teegan agreed. \n\n\"Tom liked you too,\" I continued. \"You make a good first impression. I usually have to give a second or third before people get used to me.\"\n\n\"Bull,\" Teegan snickered. \"Don't sell yourself short. You were brilliant at the tuxedo place, and it was our first impression. You just need to put yourself out there, get on stage more often.\" I had to chuckle, and Teegan gave me a look. \n\n\"Confession,\" I said, making it sound more like a question. \n\n\"What?\"\n\n\"I was waiting at the dentist's office the day before,\" I said shrugging my shoulders, \"I read an article about tuxes in the waiting room.\" Teegan began to laugh. \"I was bored. Had no idea it would come in handy.\" She pulled me even closer as her laughter began to shake her arm. It was such a joy to make her smile. \n\n\"Well, you fooled us all,\" Teegan said. I had to drop her hand to open the door. She surprised me by reaching out for it once we had exited the club. \"Gene thinks you're a superhero who's been hiding in a mild-mannered disguise.\"\n\n\"He's a lot nicer than I thought he would be,\" I admitted. \n\n\"He's kind of over the top,\" Teegan said, \"but you won't find anyone more loyal.\" The wide sidewalk allowed us to be farther apart, our hands swinging as one. It almost felt as if Teegan was making them dance. \"Gene's looking forward to the study group. He's worried about losing his basketball scholarship to grades.\"\n\n\"I don't know if I'm a good teacher,\" I said, worried that Gene expected too much. I felt Teegan's hand strengthen and squeeze mine.\n\n\"Don't go all noodly,\" Teegan said. Her eyes were smiling at me. \"You'll do just fine. He has nowhere to go but up.\" I chuckled. She was right. I might not get him to make an 'A', but moving to a 'B' wasn't insurmountable. \"You flip-flop a lot,\" she added. \n\n\"What do you mean?\"\n\n\"One minute, you're in charge, like when you were on stage,\" Teegan said. \"The next you lose confidence in yourself.\" I almost pulled my hand back, but she held it firmly. I had to look away from her eyes and chose the sidewalk as the new target. I was terrified at being seen as weak. She stopped and pulled me to a halt as well. \"I'm sorry,\" she said warmly. \n\n\"For what?\"\n\n\"I'm analyzing you, and have no right to,\" Teegan replied. \"I'm not very together myself.\" \n\n\"I'm afraid to disappoint people,\" I admitted. \"My parents, friends, you. It doesn't matter how small it is, the thought of failing people freaks me out.\" I don't think I realized it before. Teegan had drawn the truth out of me and it wasn't nearly as painful I thought it would be. I prayed she didn't see it as a weakness. \n\n\"Wow,\" Teegan said, \"I wish I knew myself that well.\" She started us walking again and this time, her eyes were on the sidewalk. She was still gripping my hand, so I figured she was thinking, not re-thinking. \"Caleb?\"\n\n\"Yes.\"\n\n\"I give you permission to disappoint me,\" Teegan said. I was more than surprised by her statement. She looked up with that enchanting smile. \"I'll let you know when it happens and I pre-forgive you. Though I will require the same in return.\" I wanted to kiss her. I didn't because something wasn't right and I didn't want to use up my forgiveness yet. \n\n\"I can do that,\" I agreed. \n\n\"See,\" Teegan said, \"we mastered friendship. Now were both allowed to screw up and not lose each other.\" I was ecstatic and devastated. Teegan looked ahead and swung our hands like we were kindergarteners. I wanted more than a friendship. Attempting anything more tonight was out of the question. It was like peanut butter sandwich without the jelly. I couldn't turn it down, but the sweetness was missing. \n\nI made sure I opened the car door for Teegan. It was a little old fashioned, but I wanted to hint to her that I wanted more than friendship without saying the words. She smiled and climbed in. I closed the door and gritted my teeth when she couldn't see it. My goal of asking her to the prom was ruined by her friendship declaration. I might wreck what little had been gained if I pushed my luck too hard.\n\n\"Who are you taking to the prom?\" Teegan asked once we were moving. \n\n\"No one\" I replied, looking at Teegan instead of the road. Her words kept catching me off guard. She smiled and pointed down the road. I turned my eyes back to their duty and returned her smile. \n\n\"I thought you were going to ask someone?\" \n\n\"That didn't work out,\" I said. She probably thought the person said no. I wasn't going to clarify.\n\n\"Don't you want to go?\" \n\n\"Not sure who else to ask,\" I lied. \n\n\"No one's asked me either,\" Teegan said. \"This might sound strange, but what if we go together. It would just be as friends. I don't want to miss our senior prom and you shouldn't either.\"\n\n\"Okay,\" I said, staring down the road but not really seeing it. It was like a distorted dream; half nightmare, half heaven. \n\n\"Good,\" Teegan said with excitement. \"I'll have to find a dress. There was one I had my eye on and hopefully it's still there. You know how you find clothes that are just perfect, but have nowhere to wear them?\" We spent the rest of the ride talking about dresses, tuxes, and Teegan's insistence that she would pay for her own corsage. She didn't want me to be responsible, after all who would do that to a friend. I almost ended it, spouting something about not wanting to be just a friend, but then I wouldn't be going to the prom with her. Somehow, I had lost control of the night's plan and had no idea how to get it back. \n\nTeegan stopped me from getting out of the car and opening her door. She hugged me and again thanked me for the concert. We promised to call each other to coordinate prom night. I watched her walk up the stairs to her porch, my headlights showing the way. She waved and disappeared inside. It was then I let out the breath I was holding. I drove home in a daze. \n\n\"How did it go?\" My mom asked as I entered the door. \n\n\"We're going to the prom together,\" I answered as I walked up the stairs to my room. \n\n\"That's good, isn't it?\"\n\n\"I have no idea,\" I replied. I moved quickly to avoid any more explanations. It was better than not going to the prom with Teegan. It wasn't as good as I hoped it would be. Any move I made could be construed as an assault on our friendship. I felt my disappointment climb.\n\n\"Caleb,\" my mom called from the bottom of the stairs, \"talk to me.\" I could hear the concern in her voice. I didn't want pity. I wanted to be strong and confident, so I turned and hit her where it hurt. \n\n\"I've decided not to go to MIT or Stanford,\" I said clearly, \"I'm pursuing my music.\" The shock on my mom's face somehow made me feel better. Good, now both of us were confused. \n\n<p align=\"center\">Chapter 14 - Teegan</p>\n\nThe outside lights were on, but only one lamp was lit in the family room. Mom and Dad were practically sitting in the dark with glasses of wine in their hands. Both were dressed in robes and Mom had her legs curled under her as she leaned into Dad's arms. They were always affectionate with each other, but it had been a long time since I had seen them so comfortably close.\n\n\"Ahh, hi?\" I said, thinking I had disturbed something. Thoughts of the prom drifted away. \n\n\"Have fun tonight?\" Mom asked. The smile on her face was strong, as if she had a secret that only she and Dad knew. \n\n\"Sure,\" I said, furrowing my brow. \n\n\"Sit,\" Dad said, pointing at the recliner. \"We want to hear all about it.\" I moved to the seat and sank in uncomfortably. It wasn't a good chair for an interrogation, no support for sitting upright. Dad's smile was warm as well. I couldn't remember ever seeing them so relaxed. \n\n\"Uncle Hank is coming tomorrow,\" Mom said. \"He felt you in Portland and booked the next flight.\" I had never linked remotely with Hank before. I didn't think I knew his song well enough. I guess I was louder than I expected. \n\n\"Was all that for Caleb?\" Dad asked. I blushed at the insinuation I saw in his eyes. I just met Caleb and had only been on half a date. Who did they think they raised? "
    ],
    "authorname": "DreamCloud",
    "tags": [
        "romance",
        "scifi",
        "link",
        "bond",
        "teegan",
        "mind link",
        "dna",
        "future"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-link-pt-02-the-hunted"
}