{
    "title": "The Sultanah Ch. 05",
    "pages": [
        "Dear Reader, thank you so much for reading this story. It has taken nearly a year of my writing life to get the whole thing finished. This is Chapter 5 of 14 chapters and the total is over 250,000 words. It is my Dirk Diggler/Jack Horner act of hubris: my attempt to write an erotic adventure story that pulls you in with a story you want to read, even when there isn't any sex going on (though there is a lot of sex. Crazy, weird, fun sex). It is the most ambitious piece of erotic fiction I have ever attempted. So I hope you enjoy it.\n\nWith that said, this book is not for everyone. It will be too long for many people (no shame in that, it is a big time investment). Some of the sex scenes are intense and include themes like hermaphroditism, non-consensual activity, incest, etc. For some people, that will likely be the appeal. In fact, while this story is definitely not for everyone, I think for a select group of people this story will essentially have everything you could ever ask for. So if that is you, congratulations, you found that thing you have been searching for. You can skip ahead to the sex and I won't be offended, but I think this story is more than the sum of its parts. If you read this whole story, you will not be disappointed. \n\nIn Chapter 1, our main character, Princess Varis, finds that her father has died and that, by virtue of the fact that she is a hermaphrodite and can father a child, she is now the Sultanah. In Chapter 2, Varis unearthed a conspiracy to destroy her Empire led by Rahip, the Cardinal of the \"New Religion\" and later she received her coronation. In Chapter 3, Varis humiliated the New Religion and raised the morale of her besieged people. In Chapter 4, Varis lifted the siege through a daring midnight raid.\n\nSome recurring characters you might want by name are Varis (the Sultanah and narrator), Cin (the head priestess of Gunes), Arkadas (Varis' friend and servant), Kardes (Varis' older sister), Nislani (Varis' younger sister), Rahip (a Cardinal of the 'new religion'), Duke Hain (an important lord opposing Varis), Lord Sadik (a minor lord who has spoken in support of Varis); King Sican (the leader of Dusman, a rival kingdom), Prince Lider (Sican's son); King K\u00f6yl\u00fc (the leader of Temsilci, a rival kingdom); Agiz and Got (Subordinate Sun Priestesses); Saygili (Varis' guard); Soyguncu (a pickpocket and spy for Varis). Further, Gunes is the name of the Sun God, Tanri is the name of the 'new god.' The city where the story is set is \u015eehir in the country of \u00dclke and the Empire of B\u00fct\u00fcn D\u00fcnya. If you need more...reread the earlier chapters.\n\nPlease, please, please, please, please tell me what you think after you read this. I put an embarrassing amount of work into this and I want to know what you think. Especially if it is good things.\n\n*****\n\nPart III: Consolidation\n\nChapter 5: The Privileges of a Sultanah\n\n\"Humph?\" A voice next to me asked as I carefully rolled over on the bed. I winced and placed my hand on Arkadas' shoulder.\n\n\"Don't get up, it is not yet sunrise,\" I said and I listened as she sunk back down into sleep. She had been sleeping in my bed with me for the last two months, ever since I had lifted King Sican's siege of \u015eehir and I had found her to be a very light sleeper. Other than that, I had found her to be an excellent partner. I had been in great need of...comfort of late and Arkadas had been very willing to provide. I smiled as I got up out of bed and thought of her and the experiences we had shared together in that room.\n\nIt was the very darkest part of the night, but a lantern was hung on the far wall. I no longer considered this portion of the palace to be my father's quarters and I felt extremely comfortable as I crossed the room in the low light. It was slightly chilly in the cool night air. Probably more so because I had recently taken to sleeping naked. With Arkadas, there was no longer any need to hide my true self and as I walked across my massive room, a gentle breeze from the open window hardened my nipples and caressed my limp cock. I shivered and headed to my privy. My cock bounced gently as I moved and I felt strange with the freedom of that motion. \n\nI paused briefly and gazed out the window. The moon was low in the sky and the sun would soon be rising over \u015eehir. And over \u00dclke and B\u00fct\u00fcn D\u00fcnya. They all still existed, for what they were worth. From the window I could not make out the vast plain that sat before the city gates, but I knew it was there. I also knew that no enemy troops were encamped there. None had been present for nearly two months.\n\nMy plan had worked even better than anticipated. All of the enemies grain stores had been destroyed and most of their cattle. Beyond that, hundreds of soldiers had been maimed and killed by fire and thundering animals. This was only a small fraction of the enemy force, but the symbolic effect was greater. King Sican and the soldiers of Dusman had been unable to harm the city of \u015eehir after my ascension and now I had inflicted a wound on them.\n\nKing Sican had known that he could not maintain his position in front of my walls. His soldiers, low of morale after the fiasco of the fire, would not be willing to wait for weeks while more food was procured. Besides, he had to know that the victory would strengthen the resolve of the imperial citizenry and solidify my place on the throne. By the afternoon following my triumphant arrival in the city, King Sican's standard was no longer hanging over enemy headquarters. He had returned to Dusman with many of the lords. Prince Lider's flag flew in his stead. The young prince was tasked with maintaining order while the troops were re-organized, fed with what little meat remained, and marched away from the gates of the city. My people had staged three days of celebrations in my honor to celebrate the lifting of the siege and the deliverance of the city.\n\nOf course, while the siege was won, the war was hardly over. King Sican had declared total war on the Empire and I was not in any position to simply forgive that action. Besides, Dusman had not given up dream of adding \u015eehir to the nation's holdings. King Sican could not push forward now, but he was already plotting and planning for a new way to take the city. He no longer had surprise and he had exhausted much of his yearly income in that loss, but he was far from helpless. He was still massively wealthy and cunning. I knew he would be back soon and all of my gains could be for naught.\n\nIn fact, he hadn't even really left. The massive army made up of mostly conscripts from Dusman no longer stood on the plain before my city. But the professional soldiers from King Sican's army had not dissolved. They were a tiny fraction of the total force, but they were paid and had access to food. They needed less of it. They could not hope to maintain a siege or even face my small army in a pitched battle. But they were largely mounted and they could strike quickly and disappear before my soldiers could retaliate. Farmers who had left \u015eehir after the siege and returned to their hamlets, traders traveling in caravans, and even fishermen on boats found themselves harassed by hostile knights. In short, Dusman continued to bring the war to my people and I was largely powerless to stop them.\n\nThe most obvious result of the raids was a continued shortage of food in the city. While starvation was no longer likely and caravans periodically arrived in the city, it was not enough. One in five traders who attempted to reach the city was captured. This led to shortages and also higher pay for traders, who had to brave Dusman's swords. As a result, food was extremely expensive. Most people ate catfish and bread just twice a day. Even in the palace, food was scarcer than it had been in my father's day.\n\nDespite this hardship, I was pleasantly surprised to find that the people bore me no ill will. They were hungrier and a bit poorer than they would have liked, but they adored me. As I had hoped, I had received all of the credit for the raising of the siege. The people of the city spoke about me in hushed tones, as if describing an avenging Goddess who had come down from the heavens to defeat the Empire's enemies. No one dared openly speak against me. There was no longer any doubt, at least among the people, that I was the legitimate ruler of \u00dclke and B\u00fct\u00fcn D\u00fcnya. If I asked anything of the people, they would give it to me. A half empty stomach was a fair price to pay for such a leader. This was real power.\n\nWhile the people suffered greatly and with impressive fortitude, the same could not be said of the Peers. They suffered marginally and many complained gravely. They had slightly less food than they might otherwise have, they had slightly less money. Many had holdings outside of the city that were targeted by raiders from Dusman. They blamed me and looked back fondly on my father's time. They seemed not to recognize that their prosperity had grown in times of peace and that the later years of my father's reign did not include a war for the survival of the Empire.\n\nBut I suppose I should be clearer. It was not that all of my Peers were against me. The Loyalists celebrated with the people and saw my victory as vindication of my placement on the throne. Some may have even subscribed to the notion of divine intervention that was favored by the people. The number of Loyalists had actually grown, as respect for my rule grew. Those who had once been undecided by leaned towards acceptance now came fully within my sphere of influence.\n\nNo, it was the Collaborationist party that complained most loudly. They had been shocked and appalled when I had driven the enemy from our doorstep without so much as a single soldier by my side. They had sat in silent, impotent rage as the people, and many fellow Peers, flocked to my side. Those who had hoped ultimately for my defeat were bitterly disappointed. Somewhat strangely, the ranks of the Collaborationists were growing as well. With the threat of conquest seemingly shrinking, many Peers who had once been on the fence began to side with my adversaries. They had no love for Dusman, but they did not like following a \"mere girl.\" What was more; many who hoped that I would be weak and easily pliable were disappointed to find that I had some capacity for the position. These men found themselves easily slipping into the waiting arms of Duke Hain and the others who meant to clip my wings. The end result was that the Peers were more divided than ever and those who followed me were still outnumbered by my enemies. Only my popularity with the people kept the Collaborationists in check.\n\nAll of these various challenges required my attention. I had found that without the singular trial provided by the siege, my focus was not nearly as sharp in the weeks that followed. I felt the need to solve all of the problems at once. As I padded slowly to the privy in the dark, my tasks for the upcoming day popped up in my mind and filled me with a nervous energy I knew would sap any remaining will to sleep.\n\nFirst, I had a meeting with my Peers early in the morning. These meetings had grown much less frequent after the lifting of siege, but I still tried to make time once every two weeks. That day we were to discuss efforts to increase the size and professionalism of the military. I wanted a standing army of at least 20,000 crack troops. Loyalists were willing to back new tax increases, particularly for the Peers, to bolster this effort. The Collaborationists planned to block this method in the name of economic distress, though I suspected they liked keeping me weak. When I relied primarily on the retinues of the Peers for the Empire's soldiers, I was more easily controlled. I anticipated the meeting would end in a stalemate.\n\nAfter that, I had an engagement to meet Cin, Agiz, and Got to discuss recent changes on the religious front. Thousands of people had seen the end of the siege as a sign from heaven. Tanri had been almost completely abandoned within the city and people were flocking to Gunes, my protector. Cin and her priestesses were overwhelmed, though delighted, by the turn of events. We were to discuss the induction of new priestesses to serve the people and the refurbishment of the ancient Temple of Gunes to accommodate the new converts.\n\nFollowing that I had a meeting with my entire Inner Council to discuss food in the city. Several merchants would be in the palace to describe locations where ambushes usually occurred. Soyguncu, who had been scouting outside the city for more easily defended trade routes, would also be present. It was absolutely essential that I get some manner of control over food prices. \n\nI wondered for a moment if Arkadas would attend. She was still considered a member of the Inner Council and her seat was still available, but it seemed that she rarely participated in meetings. That was not a negative. She had rarely felt comfortable at the meetings and consciously chose not to add any comments. Now that we had a new...understanding about one another it seemed like she no longer felt the need to be near me at all times. She knew that I was not going to leave her. Still, on an issue like food scarcity her compassion and insight might be useful. As I thought this, I turned back and looked over my shoulder at the bed where my friend and lover still slept.\n\nI felt icy fingers clutch at my insides and my I took in a sharp breath, even before I could fully understand what was happening before me. Arkadas lay in the bed where I had left her. Her face looked serene and relaxed while he arms and legs were splayed out under the covered, taking up most of the bed. But on either side of the bed were black figures. For a moment in the dark I could barely make them out. But I could see they were men, short but powerfully built. They were wearing tight black clothing and even their faces were covered. They were standing on either side of the bed, leaning over Arkadas. They must've arrived in the moments after I left the bed. \n\nI felt my heart rise into my chest. My hair was standing up on end and my palms felt sweaty. I sensed my breath coming more quickly and I was careful to control the volume. Instinctively, I rose up onto my toes so that when I moved, I was nearly silent. I wanted to turn and run, but I wanted more to get next to Arkadas. I was terrified of what was about to befall here. Who were these men? Why were they in my room?\n\nThe men leaned over carefully and looked at Arkadas. They then looked up at one another and one of the men shrugged. I moved closer to the men. I had no real idea of what I was going to do. I was completely naked and had no way to force these men from my room. \n\nI was only about fifteen feet away from the men, their backs to me, when suddenly they struck. They did not speak; they simply both knew they were going to act. One man jumped up onto Arkadas chest. He straddled her breasts and his hands instantly found their way to her mouth. The other man jumped on Arkadas legs, sitting on her knees and placing his hands on her hips, forcing her down.\n\nArkadas woke instantly and there was the barest hint of a yelp before the man on her chest was able to render her completely silent. Arkadas thrashed wildly on the bed, shuffling the covers and arching her back. But then men seemed to know what they were doing and they held her down firmly. I had to resist the urge to run toward her and throw myself on her attackers. I was outnumbered and would easily be subdued by the powerful men. I wanted to call to Saygili and the other guards out in the hall, but was afraid of what would happen in the instant after I acted. My nerves grew more unbearable and I found it hard to stand.\n\n\"She don't look like no person from \u00dclke that I ever seen,\" one man hissed at the other, once there was no need to worry about waking Arkadas. The one speaking was the man on Arkadas knees.\n\n\"What the fuck are you talking about, just do it!\" the other man said.\n\n\"Look at her skin and her hair?\" the first man responded, \"She looks like girls I seen in So\u011fuk, up North. She don't look like no Sultanah.\" I felt my air catch in my throat. Of course these men were here for me. I had no idea what I had been thinking. I was so concerned about Arkadas that the absurdity of attacking a slave had never occurred to me. These men were here to do something to me. They had not expected a female lover in the Sultanah's bed and now they figured that Arkadas was me. I felt adrenaline coursing through my body; I would not let anything happen to Arkadas for my sake.\n\nThe man on Arkadas chest seemed annoyed by \"Royal families intermarry; maybe this one takes after her great grandma from Suck Cock...\"\n\n\"So\u011fuk,\" the other corrected.\n\n\"Whatever, just do it!\"\n\n\"Can't you do your half first?\" the man on Arkadas knees asked, \"Put her out of her misery...\"\n\n\"We got paid to cut her cock off and shove it down her throat, that is how she is supposed to die. I am only slitting her throat to make sure the work is complete. Now fucking move before a guard comes in,\" the man said. I felt my head grow light. I looked down briefly between my breasts and looked at my cock. Cut it off...\n\nI watched as the first man reached into his pocket and pulled out a knife. It was a long hunting utensil and it shone in the pale moonlight. The man started to shuffle through the sheets, trying to pull them away from Arkadas body. Arkadas continued to thrash on the bed, her task made easier now by the fact that the man had to ease up on her knees. The man on Arkadas chest slapped her hard one time across the face and she briefly became still. The man on her knees was now able to pull away the sheets. The lower half of Arkadas body now lay exposed on the bed, her legs spread slightly.\n\n\"Katil,\" he said, giving a common name of Surgun, \"this isn't right...\"\n\n\"Just do it!\" the man on Arkadas chest said.\n\n\"I can't!\"\n\n\"Just fucking do it!\"\n\n\"She don't have a cock. She just got a pretty pink cunny,\" the man said incredulously, \"It was all just a lie!\" He slumped back slightly. The man on Arkadas chest tried to lean back slightly to get a look. In order to do so, he moved some pressure off of her face. Arkadas chose that exact moment to flail one last time, with all her might. Her chest rocked and her arms slapped. Most importantly, her knee rose slightly. It pounded into the man on her knee's hand. Her kneecap collided with the handle of the of the man's knife. Unprepared for the impact, the man's grip was broken and the knife went sailing through the air and clattered onto the floor.\n\n\"Bitch!\" both men said at once and quickly wrestled Arkadas back down onto the bed.\n\n\"Fine, I'll just slit her fucking throat,\" Katil said. But I was barely listening. I was already sprinting across the floor on my tiptoes, racing towards the knife. I held my breath as I ran and I tried to remain as quiet as possible. The blade of the knife was shining in the low moonlight as the man wrestled to once again subdue Arkadas. \n\nIn a matter of moments I had crossed the distance to the knife. I reached down and grabbed the handle of the blade as quickly as I could. For a moment, the knife skittered onto the ground as I tried to get control. The man on Arkadas legs must've heard, at that moment I saw his head raise and turn slightly toward me. I wrapped my fingers around the knife.\n\n\"Saygili!\" I screamed at the top of my lungs. At the same moment I swung the knife. The man on Arkadas legs opened his mouth to speak, his eyes wide with disbelief at my sudden appearance. Before the slightest sound was able to escape his lips, the knife slammed hard into the side of his head. It pierced his temple and instantly entered his brain. His mouth dropped open and his eyes remained wide. He remained silent.\n\nI did not have time to think about him. While he was still sitting upright on Arkadas legs, I felt a sudden weight crash into my side. I could smell the thick stench of body odor and alcohol on the force knocking me over. I knew it was the other assassin. The knife slipped form my hand and remained buried in the first assassin's head.",
        "I crashed hard onto my back on the marble floor. I felt all of the wind go out of me and my head swim. Every inch of my body screamed out with pain and I coughed uncontrollable. I lay flat on my back. The remaining assassin now straddled my hips and I felt his dirty black pants scratching at my stomach and my cock. He had one hand flat on the ground next to my head and the other was rising in an arc above my head.\n\n\"So there you are you bitch, cock and all!\" the man roared as his arm began to swing down. I realized what he was doing. My right hand was pinned against my side by but I lift my left hand. I tried to grab the man's wrist, to stop the fall of his blade, which was aimed at my chest. I miscalculated the distance. His blade continued to fall and my palm was in no position to catch his wrist. \n\nBut I was successful in defending myself. I felt a sudden sharp pain followed by a powerful punch. The pain was incomprehensible; it was so intense that I was almost unable to feel it. Instead, I saw it. The assassin's blade had pushed through the center of my palm. I could see the thin blade poking out of the back of my hand, the blade just a few short inches from my breast. Blood was pouring from my hand.\n\n\"Gunes help me!\" I moaned, \"fuck!\" The shock was wearing off quickly and I could feel pain rising in my palm. All of my fingers felt completely powerless and my entire left arm felt like it was on fire.\n\n\"Fucking bitch, give it up! No time for ritual, just the deed!\" the assassin screamed at my face, spit flecking off his moldering teeth. He wrenched the knife quickly out my hand. The pain tripled and I closed my eyes and bit my lip. My hand flopped back worthlessly onto my chest. I could feel the blood dripping down my breasts and ribs. \n\nI opened my eyes again and looked up at the assassin. He was once again lifting the knife. I had no hands to defend myself now. The adrenaline rush I had been moving on faded from me now. The room seemed to grow darker. I was no longer reacting without thought. I looked at the man sitting on top of me. My bowels became watery and my heart felt like it stopped. I was about to die. This man would plunge his knife into my heart or my brain and I would cease to exist. I didn't have time to think of all of the political, familial, and social ramifications of my death. I just knew I, the person, Varis, was going to die. I felt tears rise in the corner of my eyes.\n\n\"Who sent you? Why are you doing this to me?\" I choked out quickly. The man's hand froze for a moment.\n\n\"I don't owe you answers bitch!\" he said.\n\n\"You take my life, you owe me an answer,\" I said, my voice sounding more pleading than defiant. Perhaps it was because I was young and beautiful, or because I was naked and pitiful. But the man paused a moment longer.\n\n\"The rightful ruler of the Empire, the strongest male descended of the Hanedan Dynasty sends me. Lo...\" the man began to say a name. But at that instant he voice was stopped. I felt a spray of liquid against my face, hot and oily. The man was looking down at me, confused. The knife dropped harmlessly from his hand. It was only then that I noticed the spearpoint sticking through the man's throat. He let out a strange croaking sound and fell to the side. Saygili stood behind him, looking down at me with terror and confusion in his eyes.\n\n\"Sultanah!?\" he said nervously, \"are you alright?\" I was too confused to answer and my eyes went out of focus.\n\n* * * * *\n\nA short time later I stormed into the throne room. The room was packed with the various lords. More had arrived in recent weeks with the lifting of the siege. Men who had managed to flee had come back to take their rightful place in the planning of the war. There were almost too many lords; we would soon have to more to the Kongre - the parliament building, to accommodate everyone.\n\nOf course, logistical issues for future meetings with the Peers were hardly on my mind. My entire body felt like it was on fire. That fire seemed to emanate from my aching left hand. When I had awakened a few minutes earlier, I had found Cin sitting next to me on the floor in my chambers, carefully cleaning and wrapping my wound. She had used all the powers of her craft and explained that the knife had slid between, rather than through, bones. The dressing was skillfully done and the prayers to Gunes seemed quite effective, but the pain remained as I approached my throne. \n\n\"All rise for...\" a herald began.\n\n\"Enough!\" I said loudly, cutting him off. I saw heads of several Peers look up in surprise. I slight murmur went through the crowd. I didn't care. I was in no mood for ceremony. As I climbed the stairs to the top of the throne, I thought briefly about how I had made it there.\n\nWhen I had awakened from my faint, my assassins had already been drug from the room. Blood had already been cleaned and my body was slightly damp with water and wrapped in a blanket. Cin had already ordered the assassins heads to be cleaved from their bodies and displayed on the palace. I did not countermand the order. In fact, I ordered that their cocks be severed and stuffed in each other's mouths for good measure. Let anyone and everyone know that I knew what had happened.\n\nI spoke briefly with Saygili. He felt intensely guilty that men had managed to enter my room. He had offered his resignation and even his life. I had been too dazed to even consider it. Before I regained my composure, Cin had determined that the men had climbed through the window on the balcony side of my room. That meant that the guards below, and not Saygili in the hallway, were at fault. Further, he had rushed in at the slightest hint of danger and saved my life. He seemed relieved when I declined to take his job or his life. In fact, I thanked him and told him to conduct an investigation. \n\nIt was then I noticed Arkadas was not present, Cin quickly explained that she was being taken to her own quarters to recuperate, but that she was unharmed. From the moment I had awakened on the floor, I had been in a sort of confused daze. For some reason, the news regarding Arkadas drew me back out of it. I felt my cheeks growing hot and my heart begin to thump irregularly. A white, hot flash of anger had burst into my skull. Arkadas was alive. But that had been no sure thing just a few minute earlier. I did not even want to consider how close I had come to leaving the world. Someone had broken into my home, presumably the safest place in the castle. They had questioned my authority, gazed upon my naked form, threatened my life and the life of one that I loved, and I had no idea who had done it. Or why such a heinous act had been considered.\n\n\"You must rest now Sultanah,\" Cin said. She looked visibly shaken as she put on the last of the bandage around my hand. I felt more than a little angry at Cin. Apparently, Gunes had not bothered to tell her about the attempt on my life. \"I will inform the lords that you will not be available for the meeting...\"\n\n\"No!\" I said forcefully. My voice did not quaver and I felt none of the human weakness I had experienced when the assassins dagger had been lifted above my head. I was not just Varis, I was the Sultanah. This disrespect demanded retribution, \"I will not cower because my enemies desire that I cower. I allowed myself to believe that the end of the siege meant that I was out of danger. But I sleep on top of a wasps nest. I must remain ever vigilant.\"\n\nWith those words I stood quickly, letting the blanker fall from my body. Only Cin and I remained in the room, guards and others having been shuffled out quickly. I dressed quickly while Cin tried to convince me to rest. She did not plead, but she came as close as I imagined was possible for one with her level of poise. I had barely listened to what the priestess had to say. Instead, I quickly prepared myself and walked quickly to the throne room.\n\nNow I had reached the top of my throne and was looking out over my Peers. The anger that had welled inside of me had not subsided. In fact, it had risen to new heights during the walk. Cin had walked behind me as I traveled and attempted to calm me. I had ignored her. As I sat now, I saw that she had quietly slipped into the throne room behind me and was standing in the corner, looking at me nervously. I knew she wanted to remonstrate with me further, but it would no longer be proper. She needed to protect my dignity here.\n\n\"Peers,\" I began calmly and I watched as the various lords looked at me intently, \"as I lay in my bed this night an attempt was made on my life,\" I said calmly, my lips pinching as I spat out each word. Murmurs of surprise filled the room and I saw Peers turning and speaking to one another. Some of them looked absolutely terrified, others shocked, and a disturbing number appeared disappointed. I raised my hand and the men became silent.\n\n\"I killed one of my would-be assassins with my own hands. The other was slain by my faithful guard, Saygili. I will be nominating him for the position of Constable of \u015eehir in recognition of his service.\" There was some tentative applause for Saygili and a lot of confusion in the room. No one knew what to think. This was not the way I normally conducting business and the situation was exceedingly strange. The Peers were uncertain. My heart was hammering and my mouth was dry, but I knew what I wanted to say. To Hell with their expectations.\n\n\"His first task in that role will be to hunt down the men who attempted to take my life and ensure that they face the same justice that befell their incompetent assassins!\" I called out. \"Whether that person is King Sican\" Then I dropped my voice lower and leaned forward slightly, \"or someone in this room.\" I let my voice hang in the air. I stared out at my Peers. Many squirmed uneasily. They had been prepared for a mundane, perhaps even pleasant meeting. They were unprepared to feel my wrath. And they did not like the accusation of treachery. But I felt it warranted.\n\nI suspected that the assassin's pay master was in the room. I did not fault Saygili for killing the assassin when he did. But I regretted I could not hear the full name of the assassins paymaster before he fell. The assassin had only uttered \"Lo...\" I assumed that he was beginning to refer to a \"Lord.\" He would not have referred to King Sican or any of my other rivals as a Lord. All of the men in this room could claim some Hanedan blood, so there was no telling who believed he had the greatest claim to my throne. But I suspected them all. This suspicion had stoked my anger and led me, hot, into the throne room.\n\n\"I offer no reward for information regarding the assassins. I do not want you sharpening knives and settling old scores with wild speculation. Just know that if I determine the identity of my attacker and learn that any man, though innocent of that crime, was aware of the killer, that I will offer equal punishment. Death to all traitors,\" I said. Several men cheered this sentiment, but far more looked uncomfortable. They glanced at their mates with suspicion. I wondered if I was unintentionally (and unnecessarily) dividing my nobles against themselves in a time of war. I began to wonder if rushing into the room angry had been a strong strategic move. My anger cooled slightly and I had a strange feeling of wondering what I was doing.\n\n\"Do you have any leads on the identity of this person?\" One lord, Kat\u0131lmak, asked. I knew this lord to be a Loyalist. I suspected he was merely trying to help in the apprehension of the attempted murderer. But his words triggered a realization. I recognized the possible trap in answering. Casting suspicion in any way could be dangerous. It could implicate an innocent man. Or it could drive a guilty man to even more desperate action. If the assassin felt he had nothing left to lose, could I ever sleep soundly again? I felt my anger flagging further. I began to wonder what I was doing in this seat and addressing these men in such circumstances. An assassination attempt showed me to be weak. My reaction to it was showing me to be weaker. I had not shown my wrath, I was showing my fear.\n\n\"The Sultanah,\" Cin suddenly spoke, before I had a chance to respond, \"cannot answer specifics. The guards may wish to withhold information for future interrogations. I can say that the Sultanah has already seen herself several clues that point outside these walls. She suspects firmly that someone connected with King Sican is, in some way, involved. She brings this matter to your attention only to gain your valuable aid.\" She said and looked up at me. Clearly, Cin had sensed the same dangers I had discovered. I had come into the room angry and allowed possibly damaging information loose. I had also caused discord amongst the nobles.\n\n\"Yes, Cin is correct,\" I said quickly, \"I apologize if my words indicated something different. It has been a stressful time. I thank you all sincerely for attending the meeting and appreciate your many fervent prayers for my safety, which were surely answered last night.\" I felt the last of my anger draining from me now. It was replaced by worry. If my attacker was in the room, he knew that he had nearly succeeded, that I suspected the nobles, and that I was shaken. Even if my assassin was not present, it was possible his spies were. In venting my anger, I had allowed too much to slip. I needed to control myself. Perhaps Cin had foretold this eventuality, perhaps that was why she had tried to stop me. Whatever ill will I felt towards her dissipated now.\n\n\"This meeting will be rescheduled for another day. The Sultanah must attend to other, pressing matters. She apologizes for any inconvenience in your unnecessary attendance,\" Cin said. The Peers rose at this announcement, saluted me, and then made there was from the chamber. I heard them whispering strangely to one another as they left, but could not discern the content of their speech.\n\nAfter several minutes, the throne room doors closed and the room was empty saved for Cin and me. I hung my head in my hands and let out a low groan. I had committed a grievous error. And had nearly made a graver one. I looked down at Cin and shook my head.\n\n\"How goes the search for a wife?\" I asked after a few moments. If Cin was surprised by this question, she hid it well. I suppose the logic followed clearly. Now that my anger had subsided, I was able to rationally consider the events of the day. I had nearly been murdered. If I had died, the dynasty would have collapsed. My Empire's situation was exceptionally perilous.\n\n\"The second group of messengers are returning sporadically,\" she explained. After the siege was lifted, I had sent out more messengers, seeking a dynastic match. Rather than limit ourselves, as we had been forced to do during the siege, we had send messengers everywhere. Well, everywhere where we were not at war. That included sending additional messengers to states we had already appealed. This was because Cin's prediction had come true and many of our initial messengers had been captured and killed. \n\n\"And?\" I asked hopefully, but not really feeling it.\n\n\"As of yet, no luck,\" she said, \"Most, though not all, of the responses are respectful. But no King or even Duke has yet offered his daughter as your wife.\"\n\n\"Have we heard back from Venedik?\" I asked hopefully, \"They are ruled by a Doge, not a King. He is elected rather than ordained to his throne. Perhaps he will be flattered that a Sultanah desires his daughter.\"\n\n\"We have not heard yet,\" Cin said, but she did not sound optimistic. It was looking increasingly unlikely that I would ever find a wife. Therefore, I needed to live a long life. My actions that day had made a long life slightly less likely. I needed to be more cautious in the future.\n\n\"I apologize Cin,\" I said, \"You provided wise counsel and I ignored it.\"\n\n\"My Lady, you were pushed to the edge. Anyone could make that mistake. We mitigated as well as can be expected. So long as we do no follow it with additional mistakes, the memory should fade quickly in the minds of your Peers. A minor oversight.\" She said, but I could tell she was simply trying to limit my anxiety.\n\n\"I must go back to my chambers and consider how to correct this. I must make a plan and put it in motion...\" I began.\n\n\"Sultanah,\" Cin said, interrupting me gently, \"Might I make a suggestion?\" I sat up straight in my chair. After foolishly ignoring Cin earlier, I was even more determined now to take her sage advice.\n\n\"Many men want the seat upon which you sit,\" she stated flatly. I snorted and nodded.\n\n\"I am quite aware,\" I said, looking at the throne and shaking my head.\n\n\"Why?\" Cin asked. I knitted my brow.\n\n\"I...\" I began, but Cin cut me off again.\n\n\"Is it to make plans? To face danger? To weigh each word against the other? To be constantly on edge? Is this what men desire?\" she asked. I was confused by where she was going I shrugged my shoulders.\n\n\"They want my power,\" I asked more than stated.\n\n\"Yes power. But not only power. Power gives birth to two unequal children. One is responsibility. You know this well. But the other is privilege,\" She explained.\n\n\"Cin, I do not follow your meaning...\" I responded.\n\n\"I believe that you focused too intently on the responsibilities of your power. This is partially because of the exigencies of your ascension, partially because of your temperament, and partially because of my prodding,\" she explained. She walked closer to me, placing her foot on the first step of the throne and looked up at me, \"You were quick to anger today, not that you weren't provoked. But you have been notably in control of yourself since you took the throne. I believe you have been pushed too hard, grappled too firmly with responsibility. You are dealing with wars and sieges. Diplomacy and marriage. Food and water. Enemies within and without. You sleep little and worry often. It drove you to make a mistake. Perhaps an opportunity to...indulge in the privileges of power will calm you and set you on a more even keel.\"\n\n\"Cin, I do not understand what you are saying. We must get to work,\" I stated. This was no time for riddles. I had to protect myself.\n\n\"If you trust me...follow me,\" Cin said and she headed for the door.\n\n* * * * *\n\nHalf an hour minutes later we were standing in a corridor deep in the bowels of the palace that I had never been to before. There were no windows so deep and the gray stones in the narrow passage looked orange in the flickering torchlight. Cin had silently rebuffed all of my questions as we had wended our way downstairs and through narrow passages for a long period of time. She would only sporadically state that I should continue to follow her. Eventually, I had grown quiet, focusing only on ensuring that my feet fell safely as well climbed down narrow, spiraling staircases and crouched over in low passages.\n\nFinally, Cin came to a stop in a spot directly in the middle of the narrow, dark corridor in which we had been walking for several minutes. She looked around with a satisfied gaze. I stopped as well and tried to follow the direction of her eyes. After a few moments, I grew confused.\n\n\"Why have we stopped?\" I asked.\n\n\"We have arrived,\" she responded. I took the opportunity to look around again and saw nothing of interest.\n\n\"This is just a spot in the middle of a dank corridor. It has nothing to do with privilege that I can see. Other than the Sultanah's privilege to explore all parts of her palace, including the most boring and unpleasant areas.\" Cin laughed and smiled at me indulgently.\n\n\"Fine, no more games then,\" she said, \"You will soon be eating your words,\" she said. With that, Cin reached forward and grabbed the base of one of the torches lighting the corridor. She gave it a gentle tug, pulling down gently. It seemed to move as if on a hinge. I heard a low rumbling sound and braced myself against the wall, wondering what Cin's magic had accessed. I noticed that the wall in front of me was shaking. Suddenly, a spot in the wall seemed to fall apart at the seams. The wall...moved backwards! And I saw brightly light pouring out from the sudden hole in the wall. I shielded my eyes from the bright light.",
        "\"Go inside Sultanah, it belongs to you,\" Cin said enigmatically. I felt nervous and wondered what possible necromancy could have produced this collapsing wall and this sudden burst of light. But Cin looked at me pacifically and nodded. I had followed her because I trusted her, and I would continue to do so. I stepped through the now-opened wall.\n\nOnce I passed inside my eyes rapidly began to adjust. I found that it was not nearly as bright as I had believed it be, it was simply much brighter than the dank corridor that I had exited. Once on the far side of the wall, my eyes were instantly drawn to the ceiling, the source of the light. And I stood, agape. The ceiling was very high, over sixty feet above the spot where I stood. But more impressive was that somehow...the ceiling was water. The light that passed through the water ceiling seemed to move gently, casting waving lines around the entire room that I had entered. The room had a strange, bluish tinge from the light.\n\nAfter a few moments of absolute wonder, I realized that I recognized the ceiling. Well, not as a ceiling. I realized that it was the massive Fountain of Ce\u015fme which sat in one of the more beautiful courtyards in the castle. It had a distinctive ovular shape that was identical to the roof above me. I was under the fountain. I then gathered that the ceiling itself was not water, but instead some strong, transparent glass. The water sat above the glass and no one looking from above could see through it. But the light filtered through and illuminated the massive cavern below.\n\nAfter recognizing that feature, I found my eyes falling down from the ceiling. The room was supported in dozens of places by massive columns of polished red stone. The walls were made of a similar red stone. There were many ornate tapestries hanging from the walls and the entire room smelled of rosewater and herbs. Finally, my eyes had adjusted completely to the strange, underwater light and the shock of the room and I found myself looking forward. It was then that I instantly recognized my location, even if I had never been there before.\n\n\"Welcome to your harem,\" Cin said to my left. The room before me was a massive feast for the eyes. There was a large, shallow pool in the middle of the chamber with several ornate fountains. All of the fixtures and stones were plated in gold and polished silver. Around the pool were sumptuous chairs and couches. These were covered with fine blankets and thick, comfortable pillows. Fresh flowers, herbs, and other pleasant flora were set in urns and pots in tasteful areas throughout the room. Several more fountains were interspersed throughout the area but these ran red with wine. The floors were a stunning white marble color that seemed too pure to be real.\n\nBut these delights paled in comparison to the true feature of the harem. Dozens of women were in the room. I knew the total harem contained far more, but that most would be in their quarters at any given time. Only a fraction were kept in this area in case the Sultan (or, I suppose, the Sultanah) decided on a whim to take his pleasure. But if these women were but a fraction of my bounty, I doubted my senses could handle the whole.\n\nThese women looked relaxed and comfortable in the large, open space. There were women moving languidly in the pool, women curled up on chairs, woman lounging across couches, and other women stood by fountains sipping wine slowly from elegant glasses. The women varied wildly in appearance. Some looked as though they were born in \u015eehir, with dark hair, voluptuous builds, and dark features. Others looked like they were from the lands where Arkadas' people lived, with light blonde curls or long, straight red tresses. Still other women were even more exotic. Some of the women were tall, nearly as tall and lithe as Cin. Others were shorter and had large breasts and round bottoms. The women were in various stages of undress. Some, those in the fountain mainly, were completely naked and the water beaded on their skin. Others wore skirts with no tops, or loose fitting robes that largely exposed their bodies. The only constant was that the women were uniformly beautiful, though each in a completely different way.\n\nI spent a few moments just gazing at the harem quietly, watching the women speak with one another, smile, and play in the water. They moved indolently, comfortably, and seductively. I was dumbfounded by the scene. The beautiful women, the decadent smells, the gentle sound of water tinkling and women laughing...It felt like I was transported to a different world. Finally, when I recognized that this place was real, I turned to Cin. She was smiling happily at my surprise.\n\n\"I never imagined this was here,\" I said, not sure what else to say. It was true that I knew a harem existed. But I never really thought about it or where it would be located. To think I had walked above it hundreds of times during my life, with no knowledge whatsoever. Cin reached over and took my hand.\n\n\"Only the leader of the Empire may know of the location of the harem, as it is the personal property of the crown. The Priestesses of Gunes also guard the secret so that the location of the harem may be passed down from father to son...or daughter, when a new Sultan is crowned. I should have brought you sooner, but the opportunity had no yet arisen,\" Cin explained carefully. I once again glanced back at the women.\n\nI watched as a tall blonde woman with milky white skin and a gentle smattering of freckles across her nose carefully pulled her loose dress up over her head and let it fall in a pile on the floor. Her breasts stood up tall on her chest and her pink nipples appeared hard in the cool air of the chamber. Her stomach was flat and her legs looked slim and taut. Her body was clean of hair and the small, pink slit of her cunny was now exposed to the room. She seemed not to notice. Instead, she smiled at another woman in the fountain and dove into the water, coming up shortly thereafter, her hair glistening with water, her breasts floating slightly.\n\n\"How many of them are there?\"\n\n\"There are always exactly 111 women in this room at all times. They are here for a few hours and then return to their chambers and are replaced by their sisters. At last census count there were over 3,000 women in total. Some were born into the harem, raised in the chambers, and added to the active members when they reached 18. Most were taken as prisoners during wars, purchased from slavers, or sold by their own hand to pay off their families' debts.\" I could not imagine another couple thousand women, just as beautiful as these sleeping or eating just a few yards away underground. I was amazed that I had ever seen my father, that he did not spend all his time here. Suddenly, that thought gave me an unpleasant thought.\n\n\"Had my father ever...\" I asked, not sure how to complete my thought. I waved my arm out at the women and shrugged. Cin laughed.\n\n\"Your mother was a...somewhat jealous woman. She forbade your father from visiting the harem (though he did it anyway). When she died he stopped attending in her honor. It has been more than 16 years since your father last entered the harem. Most of the women present during his day have retired (though not all). The vast majority have been added to the harem during those years, in anticipation of a future visit. To that end, most of the women are, strictly speaking, virgins. Though they have used many apparatuses and tools and therefore are well-trained...\"\n\n\"Well-trained?\" I asked.\n\n\"Oh yes, trained in the sensual arts from their 18th birthdays or when they are added to the harem if older. They must be going absolutely mad, waiting for an opportunity to finally display their well-honed arts. The training, after all, is very rigorous and these women take pride in their abilities. Several hours of training each day, under the tutelage of the Pezevenk...\"\n\n\"Who?\" I interrupted again.\n\n\"The most senior active member of the harem, the woman who has been in the harem longest and the one who is to retire next. She instructs the younger women on the mysteries of sexuality. Though, she is assisted in that task by several of the other veteran members.\"\n\n\"What do they learned?\" I asked, spellbound. Cin smiled at me coyly and squeezed my hand.\n\n\"Many of the women who enter this room ask the same question. I am told that the Pezevenk tells them what I tell you now: Would it not be better to learn from experience?\" she asked. And with that she started to walk into the room. The women, who had clearly noticed our presence but had dutifully ignored us, now turned all at once and faced us.\n\n\"Welcome, Sultanah Varis I, to your harem,\" A silky voice called out. As she spoke, the heads of all of the women dropped in a respectful bow. My eyes instantly flew to the source of the noise. \n\nA single women kept her head up and she was smiling at me. When my eyes met hers, she bowed quickly. She was a slightly older woman, though by no means old. She appeared to be in her mid-forties. But a lifetime of training and care for her body gave her a more youthful appearance. Only a few strands of gray in her long black hair and shallow crow's feet near her eyes gave her away. She was completely naked but stood before me without shame. The woman had large, nearly black eyes, a small nose, and generous lips. Her skin was an olive color, similar to my own. She was around 5'8 and had a thin, slender frame. Her breasts were small, but stood up high on her chest. Her nipples were small and erect. She had a flat stomach but some lines that indicated she had borne a child. Her pubic hair was removed, and she had a tight pink slit between her thighs. Her legs were slender and long, her feet very small. She was a spectacularly beautiful woman.\n\n\"Sultanah, please meet your Pezevenk, Tutuklu of \u015eehir,\" Cin said, indicating towards the gorgeous woman, \"I leave you in her charge. I will be in the passage waiting. Please take your time; I will wait as long as necessary. It is time for my prayers.\" Before I had a chance to say anything, Cin turned and rapidly left the room. I watched her walk away, my only connection to the outside world. When she returned to the passageway and closed the wall up behind her, I turned back to Tutuklu, who was still standing and waiting for me. She had a serene smile on her face appeared to have an infinite well of patience.\n\n\"Welcome,\" she repeated, \"May I make a suggestion?\" she added quickly. \n\n\"Of... course. Speak freely,\" I said. It was hard to maintain my imperial dignity in this place.\n\n\"Your harem will remain respectfully silent, as they have long been trained, for whatever time you desire. But, it may be more comfortable for you...and for the ladies, if you order them to be at their ease,\" she said. It was only then that I looked around the room. The light still danced beautifully on the walls, but all other movement was still ceased. The women still had their heads bowed in obedience to me. I felt an incredible wave of power: any man on Earth would envy me this room, this level of control. I felt a chill run down my spine. But I shook it off, this feeling was unseemly.\n\n\"Oh yes, I hadn't noticed. I am sorry,\" I said, feeling a bit embarrassed but then regretted my apology. It was not proper before these women, \"At ease,\" I said. The women raised their heads and it was like they had become unfrozen in time. They instantly went back to the tasks they had been performing before. They took no actual notice of me, respecting my prerogative to choose when and with whom I would interact.\n\n\"You need never apologize to us. If you willed us to stand without moving until our stomachs were empty and our knees collapsed it would be our honor,\" Tutuklu said solemnly. Such was her skill that I believed she was telling the truth. I looked back at her and nodded as the feeling of power returned to me, in a slightly more controlled manner. \n\nAs I considered Tutuklu's words, I recognized that my isolated spot next to Tutuklu was rapidly being invaded. Not that I was swarmed, but the women moved freely around me, their bodies elegantly glided around the chamber. As they brushed near me I could sense their eyes surreptitiously slipping over me. I figured that they were well-trained because while I was sure they were looking at their new Sultanah primarily out of curiosity, most of them managed to place a hint of repressed desire in their gazes. I did my best not to stare at any of the women, to maintain my power with an aloof attitude. But this was the only thing that I could manage. Now, so close, I could smell the scent of their skin and feel the ripples of their movement. I stood in the midst of the overwhelming femininity and soaked it in.\n\n\"We are very glad you have chosen to join us this day,\" Tutuklu continued, \"It has been far too long since we have been visited by the Sultan. We had heard rumors from the priestesses who bring us our food that the new Sultan, or Sultanah, was a beautiful woman and that it would be a pleasure to serve her. I see that the reports were incorrect only in that they failed to capture the depth of your beauty.\" I felt myself blushing at the compliment. It should have felt transparent and forced, but Tutuklu's smoky voice sold it as authentic.\n\n\"Thank you...\" I said. Not sure if I should return the compliment. But Tutuklu kept speaking in a manner that felt fluid rather than impertinent. It was clear why she was in charge.\n\n\"How may we serve you this day?\" she asked with a sultry smile. I knew enough about this place to know that, as the Sultanah, I could ask for anything I wanted. Food, wine, pleasures of the flesh. These things belonged to me. But I was still shocked by the beauty of this place. Just a few hours earlier I had literally been under attack. Now I was in a place designed for relaxation and it felt somewhat unnatural. I thought of Arkadas and wondered how she was doing. I felt a slight pain in my hand despite Cin's competent, perhaps mystical, efforts. Tutuklu, having been trained for decades in the art of pleasure and ease, evidently sensed my discomfort. \n\nShe tossed her head to the side seductively and her long hair tumbled over her shoulder. She smiled at me sweetly. \"Would you like for me to make a suggestion? The girls are very excited you are here, I am sure I know how best to...use their talents. Of course, if you ever disagree with any of my choices, all that is required is the slightest hint of a word and your wish shall be granted,\" She suggested. She spoke in such a soothing, relaxing manner that it felt wrong to deny her. Further, despite my various concerns, I was extremely curious. These women were beautiful and they belonged to me. Tutuklu was so gorgeous; I wanted desperately to do anything she suggested.\n\n\"Yes, that would be lovely,\" I said, trying to act as though I maintained composure. Tutuklu winked at me as though we were sharing a secret. Then she turned slightly (her surprisingly pert breasts bouncing as she moved), clapped her hands twice, and whistled. Seamlessly, two naked young women seemed to drip fully formed out of the mass of the crowd and stood on either side of me. I had never noticed either of them before, but that was not because of any lack of appeal on their parts. One of the women was short and voluptuous with brown hair, gray eyes, a long nose, and large, full, soft breasts. The other was slightly taller with pale skin, blonde hair, blue eyes, and small breasts. I assumed I had not seen them because Tutuklu had not willed me to see them. They bowed slowly, their eyes lowered deferentially, and took my arms.\n\n\"Good morning Sultanah,\" they said in unison, both had youthful, girlish voices but they spoke with great dignity. I nodded to them. Each took me by an arm and began to walk, pulling me forward without seeming to pull me. Their skin felt incredibly smooth against my arms and they smelled lovely, like roses with something more...animal just below the surface. They did not speak further, but walked in long, delicate strides. I did not even really pay attention to where I was going, I felt like I was floating with them. Eventually, we came to a stop. We were standing just a few feet away from the central fountain. A large, luxurious couch was directly next to us. It was a very long sofa, the back rising high, the arms extending only about half of its length, and the foot stretching out for several feet.\n\n\"May we disrobe you?\" The blonde girl asked sweetly. I looked down at my long red robe. I knew what was underneath. An exposed secret, the source of my worldly power and shame. But, for the first time, I did not worry about it. The harem was highly trained, they knew better than to be shocked by my appearance. In fact, they had likely been specifically briefed on the...unique aspects of my anatomy. Or I suppose I should just say cock. I could be as free with my body as the other women here. Freer, in fact, because I could take it wherever I desired. It felt oddly liberating and I felt myself breathing a little easier.\n\n\"Yes,\" I said and then made it an order, \"Disrobe me now.\" The women did not waste a moment. I quickly felt their hands about me, pulling at fabric and loosening the various knots that held my robe in place. Their hands moved so carefully and quickly that the various pieces of fabric seemed to disintegrate. Before I knew it, my robes had been removed and had been discreetly taken away. I did not even see where they were taken, they would be returned to me when I needed them. Only the bandage on my injured hand remained, but I found I barely noticed. It no longer hurt. I forgot about my clothing entirely, I was completely naked in the midst of the harem. My clothing had been loose and the morning had been...eventful, so I had not bothered to secure my cock. Now it was hanging limply between my legs. I saw that both of my attendants were looking at it briefly. They did not stare, but they did not bother to hide their gaze.\n\n\"The rumors are true,\" one said. For a moment I felt disappointed. It was not that they sounded disgusted, but that they had failed to ignore my cock entirely. \n\n\"Your body is beautiful as we had been told. So perfectly proportioned, voluptuous. And perfectly designed so that we might give you pleasure,\" the other said, as she spoke she ran her tongue along her upper lip and the other girl moved her hand slowly across her breasts, moaning slightly. I did not speak, but instead nodded. I felt the tension leaving my body. Better than ignoring my body, the harem seemed to want (or were capable of persuasively pretending they wanted) my body. \n\nThe two women turned me now towards the couch. Tutuklu had apparently shadowed our movements, though I had not heard or noticed her. She must've moved quickly because she had slipped into the couch while I had been getting undressed. She lay luxuriantly on the cushions, her hair fanned out across the pillows and her breasts. Her nipples sticking up between the strands of her black locks. My breath caught in my throat as I saw her legs were spread wide with once hooked up over one arm of the couch. This position had managed to pull her lips apart, exposing the soft, pink flesh of her cunny. I saw her cunny glistening in the wavy light of the room and felt aroused by her desire (or amazing ability to feign desire). My heart was hammering and I felt the blood rushing to my face. I had never seen any woman of any age look more alluring. She was a vision of sensuality \n\n\"Come place the back of your head here, I will give you a massage,\" Tutuklu said softly and gestured languidly toward her cunny. I no longer thought about what I was doing or why. I had felt the immense erotic authority of this place and I was willing to allow myself to slip under its spell. I walked over to the couch, led by my attendants, and climbed up on top of it. My knees sank into the plush fabric and my hands rubbed against soft pillows. ",
        "I moved closer to Tutuklu's body, crawling on my hands and knees. I felt my cock and my breasts swinging as I moved. In a matter of moments I was kneeling over Tutuklu's cunny and looking up at her. She smiled entirely with her eyes and nodded slowly. I looked down at her cunny, I saw the flesh of her lips and the warm flesh inside of her. I could smell her perfume with the slight scent of her sex underneath of it. My lips pursed and knew that I had to pull my gaze or I would be drawn in immediately. \n\nI turned around quickly, planting my bottom on the soft fabric of the couch. I stretched my legs out on the silky material, letting the couch hug me closer. I had never felt anything so comfortably, my palace bed feeling like stones and glass shards by comparison. I felt a gentle sigh escape unbidden. Then I gently lowered my head down between Tutuklu's legs. Eventually I felt the soft press of her cunny lips as they pressed into the back of my head. She felt warm and soft and I felt her body tremble slightly as I touched her. Her legs quivered slightly on either side of my head. I felt her sit up slightly, pushing my head up a bit so that my eyes were facing forward, toward the pool. In another moment, Tutuklu's fingers reached my temple and she began to gently rub.\n\n\"Oh Gunes!\" I moaned almost immediately and I closed my eyes. Tutuklu hands were soft but incredibly firm. Her fingers seemed preternaturally intelligent. It was as if they knew the exact spot to touch on the side of my head to reach the tense spots inside of my body, and to dissolve that tension into pleasure. For several minutes, I just let her rub my head expertly as I sank deeper into the couch and into her lap. The heat of her body and the scent of her cunny grew more intense, seeming to draw me deeper into my relaxing state. I moaned occasionally, unable to control myself.\n\n\"I am glad this pleases you Sultanah. Above all, we seek to heighten the pleasure of touch. But I encourage you to open your eyes to treat your other senses,\" she said. It took some effort, but I managed finally to allow my eyelids to pull apart. Tutuklu continued to rub my temples with easy skill. Once again it took me a second to adjust to the new light. But then the room once again came into focus. \n\nI found that as my vision came into focus, there was a dark blur directly in front of me on the edge of the pool, just a foot or so from my outstretched feet. The blur began to return to focus, surrounded by a halo of light. In the water, just beyond the edge, I found that two women were standing. After a moment I realized that these two women were my previous travel companions, the tall blonde and the short brunette. \n\nBut these were not merely standing in the water. Their sides were facing toward me and the two women were facing toward one another. Actually, that would say far too little. They were not facing toward one another, they were pressed against one another. Their hip bones were locked tightly together and the breasts of the taller woman sat gently on top of the breasts of the shorter woman. The shorter woman's larger breasts were squeezed tightly against the stomach of her companion. Both women had their arms wrapped around one another and moved caressingly against their partner's back in gently, brushing movements. Their faces were turned toward one another, the taller blonde woman looking slightly down and the shorter brunette looking slightly up. Not exactly looking, their eyes were closed. Their lips were pressed together and they were kissing each other passionately. Their mouths opened often and they licked at each other's lips and deeply explored each other's mouths. As they kissed the blonde woman's hand moved down along her lover's back and squeezed gently on her round bottom.\n\n\"I did not think you would want to miss the show. These women are giving each other pleasure in order to give you pleasure. If you are displeased, you need only speak and they will stop without complaint,\" Tutuklu said calmly behind me. I settled more comfortably in her lap and she continued to rub my head as I watched.\n\n\"They are lovely,\" I responded, it sounded as though they were in a dream. My eyes seemed unable to blink, I could not resist the urge to look at them.\n\n\"I am glad they please you,\" she said. I heard her snap her fingers twice, but I was not paying attention. My eyes returned to the lovers. The snap was apparently not for these two women, as they continued their actions without abating. If anything, they grew more passionate, either to entice me or because they felt real pleasure in their shared touch. \n\nWhatever the cause of their desire, I was mesmerized by the scene. Both women were stunning and I found that a kind of voyeuristic pleasure in their stunning display. I had seen people make love in the past in the great rooms of the castle, but this was different. But this was not furtive, clandestine, or tinged with shame as those actions had been. These women were perfectly formed and seemed to take pride in their exhibition. Their command of their sensuality was empowering. The brunette moaned loudly into her lover's mouth and then licked deeply into it, tasting her lover's tongue. The blonde's other hand slid up the side of the brunette's body slowly and then gently rubbed the side of her lover's massive breast, eliciting a sigh from the brunette. The Brunette then lifted her left leg and snaked it around her lover's thigh, thereby pressing her cunny against the blonde's knee. Her body was trembling.\n\nAs I watched this hypnotic, erotic play I suddenly became aware of a new sensation. I felt a gentle pressure against each of my nipples. A soft warmth and playful rubbing. Clearly someone's palms were pressed against my nipples, circling slowly and just barely grazing my skin. I squirmed slightly on the couch, but not from discomfort. The teasing feeling was pleasurable. For a moment, I figured that Tutuklu had reached over my shoulders to rub my breasts. But I had not noticed her moving. In fact, I could still feel her fingers on my temples, rubbing gently. \n\nI managed to pull my gaze from the lovers in the fountain and looked on either side of me. Two more woman had crawled onto the massive sofa. They looked quite young, possibly only 18 years old. Both were wearing long skirts but no tops, their breasts exposed. The one on my left was very small, around 5'1 and with very small breasts. Her long brown hair was pulled up in pig tails. Her skin was lighter than my own, but not pale. Her body was somewhat plump and youthful but her eyes seemed mature. Her dainty hands were on my large left breast, rubbing it gently. On the right was an equally beautiful girl. She was around 5'7 and very slender. Despite her thin frame she had very large breasts with large, brownish nipples. Like her counterpart she had long brown hair in pig tails and mature gray eyes. Her hips were narrow and she seemed wispy and delicate. Her hands moved in unison with her partner. They rubbed my breasts expertly, and their motions seemed to shadow those of Tutuklu's on my temples. \n\nThe girl on my right look down briefly at my cock, before her eyes once again returned to gazing at my breast. I followed the motion of her eyes. I looked down between the canyons of my breasts and across flat, olive stomach, over my bellybutton, to the area between my legs. My cock was still soft, lying limp against my left thigh. I was surprised at first that it was not erect, but I supposed that the shock to my senses had been too great. But even as I stared at it, I saw it twitch slightly and I felt my blood coursing in my veins. I moaned slightly at the sensation.\n\n\"Ooh, the Sultanah is pleased!\" One of the pigtailed girls at my sides said in a sing-song fashion. I saw that both girls were smiling and felt like blushing. Instead I looked up. The Blonde and Brunette in the pool were still kissing passionately. The Brunette was grinding her cunny on the Blonde's knee, while the Blonde played in the Brunette's hair.\n\n\"Not pleased enough,\" Tutuklu said with an authoritarian air, clearly taking on the role of Pezevenk. For a moment I felt her fingers moved from my temple and I could feel her body shifting slightly underneath of me (incidentally, I heard the Brunette moan loudly at the same moment and felt my cock twitch again). I saw the heads of the two pigtailed girls move in a jerking fashion toward one another, over my body. For a moment I thought they had both slipped forward, but then I felt Tutuklu's hands return to my temples, I realized that she had shoved them down.\n\nIf they minded her aggressive action, they paid no mind. In fact, the girl on my right smiled devilishly. Their faces were now just a few inches above my body and their hands were pressed more firmly into my breasts as they kept their balance. But as they readjusted, I felt their fingers slip easily off my breasts, tickling my nipples gently as they moved. I could see both pigtailed girls had their heads bowed but their eyes were up, looking directly at one another. I watched as they slowly began to move their heads down slowly, in unison with their eyes remaining locked. They both titled their heads down slightly, and opened their mouths. I gasped quietly as their mouths moved the last few inches separating their bodies from mine. I shivered as I watched my erect, reddish brown nipples disappear into their mouths at exactly the same instant. \n\nTheir mouths were wide enough to engulf both of my areolas as their lips felt hot against the skin of my breast. I could feel my nipples growing harder in their mouths and I squirmed slightly on the couch. Tutuklu rubbed my temples more forcefully, soothing me. But the pigtailed girls seemed not to notice my agony at their teasing. They kept their mouths locked over my nipples, applying only the slightest pressure by sucking. I stared longingly at the smooth skin of their cheeks and smelled their sweet, elusive fragrance. I needed more, the teasing was so awful!\n\nWithout word, they both dropped their tongue down toward my body. They moved in unison, though I could not imagine how they had coordinated their actions. But I didn't really care about that. I felt the soft, slippery wetness of their tongues as they pressed down against my hard nipples. The wet, rough feeling of the taste buds felt magical against the sensitive skin of my breasts. I could hear them moaning slightly as they tasted the sale of my skin. Their chins sank into the soft, heavy flesh of my breasts and their licking became more intense.\n\nTheir tongues moved around my nipple, as their mouths continued suck gently. I could hear the slurping sound of their saliva in their mouths as they tasted me. I noticed then that their hands hand returned to my body. While their lips remained locked around my nipples, their heads found my breasts, my ribs, and even my stomach. They caressed me gently, their four hands moving together as if controlled by one mind. Everywhere their hands touched, I felt goosebumps rise on my flesh.\n\nI groaned then and lolled my head back into Tutuklu's lap. She continued to rub my temples slowly as I looked behind me, up through her pert breasts. She smiled at me gently, but did not speak. She looked more beautiful than ever and I was shocked to find that her simple massage seemed to be adding to the sensations I felt. But those sensations could not be ignored for long and I turned my head forward once again. \n\nBriefly, the two pigtailed girls moved their heads apart slowly and I could see my cock between them. My cock was much harder than it had been just a few seconds before, having lifted up off of my thighs. My balls felt heavy and the hung down low over my cunny. As I was thinking about this, both of the pigtailed girls, in unison, nibbled my nipples. There was no pain but the sensation but it surprised me and I felt my body jerk. My cock jerked as well, and I could feel that it was now erect. I saw the pigtailed girls smile around my nipples, but they continued to suck on me. \n\nAs their tongues returned to my nipples, I tried to take in the sensations I was experiencing. I could hear the slurp of the girl's tongues (and the slight splash of water in the pool from the Blonde and the Brunette). I could feel the hot, slippery pressure of tongues against my nipples and the sensation of six hands massaging my body. It gave every inch of me a tingling, magical sensation. My cock was straining hard against my arousal and my legs felt weak. The air was now heavily suffused with smell of arousal. I could tell that some of it was my own, but that was not the only source. The musky, sensual scent of cunny filled the air, overpowering the sage and clean smells that the room was designed to emanate. I breathed it in deeply, savoring the way it felt as it slipped over the back of my tongue.\n\n\"Ahhh, Gunes!\" I heard a voice say, interrupting my reverie. For a moment, I thought that the comment had slipped, unbidden, from my lips. But my eyes flashed up, following the sound better than my ears. I looked over the heads of the pigtailed girls and saw the Blonde and The Brunette. I had nearly forgotten them, I had been so focused on the sensations I was experiencing. \n\nBut I was exceedingly glad I turned back now. While my attention had been turned, the Blonde and the Brunette had apparently moved. The blonde was now on her hands and knees in the shallow water on the edge of the pool. She was, apparently, the one who had called out to the Sun God in her ecstasy. She was facing away from me. The Brunette was kneeling in the water to the left of the Blonde, facing towards me. She had her right arm draped across the Blonde's lower back. \n\nThe Brunette's hands were sunk deep into the flesh of the Blonde's ass and she was pulling the cheeks apart. The tiny, pink kiss of the Blonde's anus was partially exposed to the room, facing directly toward me. I say partially, because the Brunette was blocking some of the view. In fact, she was leaning over towards the blonde. The Brunette's right breast was pressed against her own hand and the flesh of the Blonde's thigh. Her head was slightly higher than the Blonde's hips and her hair cascaded around her lover's waist. The Brunette's head was bent down and her tongue was out. I watched as it licked languidly across the Blonde's exposed anus, pressing gently into the crinkled folds of her flesh. The Brunette had a hungry, near ravenous look in her eye as her rigid tongue probed at the Blonde's anus, and then became soft and supple to lap at it. The Blonde was trembling at the touch and seemed to lose balance each time the Brunette's tongue returned to her body. \n\n\"The Head Priestess intimated that this show might please you,\" Tutuklu whispered into my ear. I jumped slightly. I had been so enthralled by what I was watching that I had nearly forgot she was there. For a moment, I did not know how to respond, I was too jumbled. Finally, I managed to nod slightly. I thought of Cin and wondered what other notions she knew I would enjoy, that I did not even really know myself. Because I could not deny I enjoyed the view. The women's bodies, fused together but somehow draped on top of one another, seemed to be the embodiment of sensuality. I felt that even from the distance I could feel the heat of their bodies and taste the salt of their skin. And the act they were performing, so repulsive in the abstract, seem so delectable when actually viewed. These women were breaking a taboo, doing something that any of my subjects would think was a wrong and disgusting, but they were doing it to provide me with pleasure. The more restricted the act, the lovelier it became in my eyes. I could barely stand the joy I felt in watching them.\n\nAnd I continued to watch them. The Brunette seemed to be warming to her task. She shook her hair out of her face and seemed to press more deeply into the Blonde's body. I watched as her pink tongue slipped from her mouth and caressed the Blonde's anus more rapidly than before. I heard her sucking, pulling her own saliva off of the Blonde's body and drinking it down. I watched as she tried to plunge her rigid tongue into the Blonde's ass. She was nearly crazed, as though she wanted to taste all of her lover's body at all times. \n\nBut it wasn't just her tongue, the Brunette had slipped her left had between the Blonde's legs. As the Brunette's tongue popped inside of the Blonde's anus, her fingers slipped up stealthily to the Blonde's now-dripping cunny. At first, the Brunette just barely mad contact, her fingers just grazing the Blonde's clean-shaven cunny lips. The Blonde trembled and moaned at the Brunette's rough tongue and gentle fingers. But as the Brunette grew more and more excited by her task, her fingers grew more insistent. I watched as The Brunette's hand slipped higher and higher between the blonde's legs. I saw the Brunette's fingers press more directly on the Blonde's cunny lips. Finally, I could just barely tell as the Brunette's fingers found the blonde clitoris. The Blonde moaned loudly and arched her back. This forced her ass backwards, shoving it into the Brunette's face, driving the tongue even deeper in the Blonde's anus. This seemed to be more than the blonde could handle. Her left had shot up out of the water and found her own breast. I watched as her fingers sunk into her flesh and her body began to shake.\n\nThe vision was so mesmerizing, the women so beautiful, and the sights and smells so authentic, that I could focus on nothing else. Clearly these women were enjoying their tryst, even if it was ostensibly for my entertainment. I felt my body reacting to their actions. I felt like I could not sit still, like I was about to explode with anticipation. I didn't know what I needed, but I knew I needed something. The thought crossed my mind to get up, and to join the women in the water. Maybe...\n\nBut just as this thought was entering my mind I felt like warm, soothing water had been poured all over my body. I felt my eyes roll back in my head and I moaned loudly, not even sure what had caused the reaction. I threw my head back and felt the sensation rushing over me. For a moment, I felt completely blank, unable to tell where my senses were being activated. Finally, I looked forward once again. Then I saw the source of my new, overwhelming experience.\n\nWithout gaining my attention, the two pigtailed girls had, apparently, stopped suckling on my breasts and rubbing my body. I had not even felt them leave, I was so enthralled by what I was watching in the pool. They had moved noiselessly down my body on the couch. They were body leaning over me now, their breasts just barely grazing my thighs (I could feel that tickling sensation now). \n\nBut more shockingly, and the source of my sudden rush of pleasure, was that both of the girls were now leaning in towards my erect, throbbing cock. They had tilted their heads gently to the side. Both had their pressed their lips against my shaft in a delicious kiss. Their mouths were wrapped around my cock such that their lips met around my shaft. I could feel their tongues rotating and rolling against my hard, hot flesh. They moved their mouths in unison, up and down the length of my cock, slathering it in their saliva. I could hear them moaning in their throats and I could feel the vibrations this imparted on my cock. Their pigtails draped down over my stomach and thighs, tickling me as their mouths moved up and down, sucking and licking on my cock. They never actually reached the tip of my cock, stopping when they reached the sleeved ridge around the mushroom-like dome.\n\n\"Gunes be merciful,\" I managed to moan. The tension I had been feeling grew even more intense. The delicious pressure and warmth of the girls' tongues on my cock seemed to be rising something inside of me. I felt my legs tighten and my hands felt powerless. As I watched the girls' mouths slip over my cock, I noticed that my nipples were still hard and glistening with saliva. My breasts were shaking from my trembling body. Without conscious thought, my two hands rose quickly from my sides and dropped down on top of my breasts. I felt a palm on top of each of my nipples and I squeezed the flesh around them. My fingers sunk into my generous body and I felt tension rising higher inside of me. My palms (including my bandages) massaged my nipples gently and I moved my hands in the steady rhythm set by the pigtailed girls. We moved together for a long while, my moaning growing more insistent as their tongue became more rigid and more expert in their touch.",
        "Finally, I needed something more. Without warning (even to me), my hips started to rise of their own accord. I felt an antsy, squirming feeling all over my body as the tension continued to grow. I needed to move, to do something to lessen it. As I thrust my hips up, I felt my cock slip more rapidly between the lips of the pigtailed women. I let out a gasp, the feeling being so strange. My hips dropped, and my cock slipped back down between their lips. \n\nThe pigtailed girls seemed to grasp what I had done before I understood myself. They kept their lips wrapped around my shaft but did not move at all. For a moment, I grew frustrated, wanting to feel their tongues on me again. Then, once again, my hips answered the call, pushing up between their lips, and the dropping back down. As my cock slipped between their lips, the pigtailed girls licked and sucked on my shaft, encouraging me forward. I did not hesitate further. I could not have controlled my hips if I had tried. As soon as my ass reached the couch it bounced back up, thrusting between the hungry mouths of the pigtailed girls. I could see the tip of my cock glistening with arousal as it jerked between them. I started pumping my cock faster and faster between them, thrusting harder and harder. I could feel my large, full balls slapping against their chins as I pistoned between them.\n\nI could feel the tension rises inside of me. My chest felt tight and my breaths were coming in ragged gasps. My breasts were shaking wildly against my palms as I bounced and I could hear Tutuklu moaning gently as I writhed against her cunny. My thrusts were becoming more and more forceful. I felt like my cock was trying to jump out of my skin. I pulled my hips down very far, sinking into the couch. The tip of my cock slipped down between the pigtailed girls' lips (and I felt their tongues slipping across it). I groaned loudly, teasing myself for just half a moment. Then, I started to thrust my hips up with more force than ever before, I felt my cock pressing up between the girls' lips.\n\nBut then something strange happened. As my shaft was moving up between their lips, the pigtailed girls leaned back. Their lips slipped off of my shaft and they sat back down on either side of me. I was confused and somewhat angered by their movement, I had been expecting to feel my body sliding between theirs. Regardless, my hips had been thrust so hard that I couldn't simply stop. My ass was completely off the couch, my feet planted in the fabric, thrusting up.\n\nThen, to my considerable astonishment, I felt a silky wetness on the tip of my cock. It was a heavenly feeling and I groaned loudly. I felt a swirling hotness against the tip of my cock as my hips thrust to their apex. My eyes, which had been looking at the pigtailed girl to my left in anger and bewilderment, shifted immediately to determine what was happening. As my gaze found its place between my legs, I was shocked to see a woman, kneeling on the bottom of the couch between my spread legs. \n\nShe was absolutely gorgeous; a slim build with small breasts and a round ass. Her skin was a deep, beautiful bronze-black and her hair was cropped very closely to her head. Her eyes were very large, brown, and shaped like almonds. They looked particularly bright and alluring when contrasted with her complexion. But the most remarkable thing about her was that the tip of my cock was buried in her mouth. I had not noticed her arrival in the excitement. Apparently, when the pigtailed girls had slipped back away from my cock, this short-haired woman had slipped onto the sofa and caught my cock in her mouth.\n\nMy hips were already lifted to their apex at this point and my legs were shaking. The short-haired woman winked at me devilishly and swirled her tongue around, prodding at my foreskin. I could not bear my own weight any longer. My hips rapidly collapsed underneath of me and my ass fell towards the couch. With incredible deftness, the short-haired woman kept pace with my fall, maintaining my cock's position in her mouth. I felt my body settle on the couch and I let out a groan. But the short-haired woman, amazingly, continued to drop. Her ass stuck up high in the air and her head dropped. Without the slightly problem, her head made its way toward my lap. I watched as my cock disappeared into her mouth and throat, I felt her nose in my bell and her chin pressing into my testicles. I nearly screamed in ecstasy.\n\nThe inside of the short-haired woman's mouth felt divine. Her eyes were closed and she was sort of moaning around my cock, sending delicious vibrations throughout my entire body. Her tongue was pressed firmly against the bottom of my shaft, feeling wet and hot. She moved it around slightly, massaging my skin and covering me in her saliva. Her whole mouth felt like dripping fire and her lips squeezed tightly around my shaft. I groaned loudly and shook on the bed.\n\nThe two girls with pigtails were no longer licking my cock, but they were not simply watching me. I did not see them move, or even really notice. I had my eyes focused intently on the thick, warm lips of the short-haired woman in front of me, my cock engulfed entirely within her mouth. But the pig-tailed girls were moving. After a few moments I felt a simultaneous cool wetness against each of my nipples. I didn't need to look, I knew the pigtailed girls were once again on their knees at my side, gently suckling my nipples. I arched my back and moaned as the sensation sunk in. Now the pigtailed girls were humming also, sending vibrations down my nipples and soothing my entire body.\n\nI don't know how long we stayed that way, though it must not have been too long. But the intensity of the sensation was so great that it felt like it existed outside time. It felt like it last both forever and for an instant. My nipples were erect and sensitive in the soft, pink mouths of the pigtailed girls. They were sucking gently, pulling my flesh into their mouths and flicking my nipples gently with their tongues. My cock was still buried in the short-haired woman's mouth, her eyes were closed. It seemed she could breathe through her nose or simply didn't need to breathe, she kept me entirely inside of her the whole time. Her throat contracted around me and her tongue swirled against my skin so that while her head never seemed to move, there were constant waves of pleasurable touch up and down the length of my shaft. I felt completely frozen with desire, sprawled on the sofa and just accepting the pleasure.\n\nRegardless of the amount of time, it quickly became apparent that my body could not resist much longer. I had been teased and aroused for so long that there would be no stopping me. Each lap of the short-haired woman's tongue sent me closer and closer to the ultimate pleasure. I felt my breath growing more rapid, I felt my heart hammering more fiercely in my chest, and I felt my toes curling as my muscles contracted. I felt myself gasping, I could feel the pressure building and then...\n\nI felt the trailing tip of the short-haired woman's tongue as it began to slip slowly up the shaft of my cock. I looked down at her, my eyes opening. Slowly, I saw the length of my hard shaft slipping inch by inch out of her mouth. My olive skin looked slightly red and enflamed as it slipped between the woman's soft, brown lips. Her eyes were open now and she looked at me seductively out of the tops of her eyes as she slipped my cock form her mouth. I groaned pitifully as the impending climax faded slightly. As my cock slipped out of her mouth, my skin felt cool from the wetness in the exposed air. \n\nThe short-haired woman stopped just as the tip of my cock remained in her mouth. She swirled her tongue around on the tip, probing my foreskin with her tongue briefly. I shook on the bed and she smiled beautifully. Finally, she pulled the last of my cock from her mouth, leaving her lips pressed against the tip in a gentle kiss. My cock glistened with her saliva and was twitching slightly. I still felt intensely aroused as the pigtailed girls had continued to suck on my nipples. \n\nThe short-haired woman continued to kiss my cock, by I noticed she was allowing her lips to slide down. I felt her kiss slowly move off of the tip of my cock. Her lips slipped down the shaft of my cock, peppering kisses against the throbbing vein on the underside. She moved slowly, savoring her kisses and moaning slightly. Down each side of my cock she moved, giving attention to every section. After a few moments, I felt her lips press softly against my balls. \n\nI groaned. My balls ached from excitement and the slightest touch had given me a wonderful kind of pain. My balls felt heavy, throbbing against the opening of my cunny. I heard the short-haired woman giggle slightly. I could only see the top of her head now as she had slipped down low, her knees apparently on the floor at the foot of the sofa. I felt her fingers reach up and delicately clasp one of my balls. I felt my hips thrust, but there was no longer anything present to give it resistance, so my frustration just increased. The short hair woman lead forward and I could feel her hot breath against my balls. I knew she opened her mouth and after a moment I nearly screamed as I felt her warm tongue sink into the soft flesh of my scrotum. I felt her tongue grow soft and flat as she began to lap at my balls gently. She placed enough pressure against them to give me that beautiful, painful feeling, but no more. She pushed her nose into my scrotum while her tongue continued to work. Every place her tongue traveled felt wet and hot, even as she left.\n\nI was more than content now to just watch the short-haired girl gently licking and sucking on my testicles. But after a moment, I felt a slight pressure on my shoulders and neck. After a moment, I realized that Tutuklu was pushing me up slightly. I didn't know what she was doing, but following her lead had been divine so far, so I kept going. I sat forward slightly and then Tutuklu reach over my shoulders and pull me back. When she pulled me back I felt my head rest on a soft pillow. Tutuklu must have placed it in her lap when she had pushed me up. Regardless, I was now sitting at a slightly more forward-facing manner and I could see more clearly out over the head of the short-hair woman playing with my balls.\n\nAnd what did I see! I had nearly forgotten about the Blonde and the Brunette in the pool before me. I had been so focused on my short-haired companion. But my new position, drew my attention back to the girls in the pool. The Blonde was now standing a few feet farther out in the pool with her legs spread wide. The Brunette was sitting in the water between the Blonde's legs. The Brunette's head was turned up and she had her lips pressed against the Blonde's cunny. I could see her tongue working in and out of the Blonde's lower lips. At the same time, the Brunette's hand was reaching up, also between the Blonde's legs. Her thumb had found the Blonde's clitoris and was stroking it in slow, even motions in time with the movement of her tongue. Occasionally, the Brunette's tongue would snake up slightly, finding the Blonde's clitoris and licking it to keep it wet. The Blonde's eyes were closed as the Brunette played with her cunny. Both of the Blonde's hands were up at her own breasts, squeezing them gently playing with her nipples. She moaned loudly while the Blonde manipulated her body.\n\nThe vision they presented was undoubtedly alluring. But I would be lying if I said that I managed to keep my eyes on them for long. While looking up, I had caught movement out of the corner of my eye. As a result, I found myself gazing about the large chamber for the first time since I had sat down on the sofa. I was more than a little surprised by what I saw.\n\nAll over the chamber, the harem had thrown off the affected aloofness that had characterized their movements since I first entered the chamber. My eyes widened as I saw women, all over the room, consumed by fiery passions. Some of the women were sitting on the floor by themselves, facing me. Their fingers were flying over their cunnies playing with their clitorises or slipping their fingers deep inside their bodies. Their free hands grabbed at their own nude breasts and were pressed into their own mouths, sucking gently.\n\nStill more women had paired up together. I saw many pair lying on the marble floors of the chamber, their bodies looped together in a perfect wheel of pleasure; each woman with her her head between the legs of the other, lapping gently. Other women sat on their asses on the cold marble, their legs spread, while their partner lay on their stomachs between their legs, licking them gently. Other pairs sat side by side, their legs overlapping, their arms crossed, and their clitorises and cunny's manipulated by mutual touch. Some of these pairs pushed deeper, their fingers pressing deeply into each other's bodies.\n\nA few women had grouped together in even larger groups. In one spot in the middle of the pool I saw no fewer than six women together. They were a barely differentiated, pulsing mass of legs, arms, breasts, faces, asses, and cunnies. I saw fingers and even fists entering bodies, I saw tongues lapping at skin, and I saw lips pressed firmly to lips. These masses seemed to writhe as one. I wondered how long this had been going on, how long they had been engaged but I had failed to notice because of my own encounters. I lacked the mental capacity at that time to think about it deeply.\n\nIt was more than just these sights also. The room was filled with the sounds of women engaged in pleasure. I could hear deep moaning, wistful sighs, and high-pitched screams cascading through the air. Their sounds of bodies moving together created a deep undercurrent to these irregular screams. More than the sound, the air seemed suffused with smells. The gentle, floral smell I had first encountered upon arrival was completely masked now. The room felt hotter and wetter and the primal scent hung heavy in the air. I felt my body reacting to this sudden feast for the senses. Watching the beautiful women pleasure themselves and others while the beautiful women sucked on my nipples and my balls seemed to infuse my every atom with energy.\n\nBut then, after just a few minutes of watching my harem, something seemed to block my view. It just sort of glided in front of my eyes. Before I even had a chance to figure out what it was, I felt a slight pressure on the tip of my cock. My eyes still adjusting, I felt the pressure build on my cock. I felt a warm tightness wrap around the tip of my cock and then slip easily (but tightly) down over the rest of it. Finally, I realized what had blocked my vision, someone had come from out of my eye line and straddled my waist. My cock had just slipped inside of a tight, inviting cunny. I felt my backbone turn to butter and I lolled my head to the side, feeling the realization ripple through body. \n\nBut I kept my eyes forward, trying to figure out who it was. I saw large, pert breasts covered slightly by long, beautiful dark hair. I saw a well formed chin and a sensual mouth. I saw bright eyes and a knowingly look. I saw Tutuklu! She smiled down at me, arching her back and forcing more of my hard cock into her tight cunny. She let out a sigh.\n\n\"Oh Sultanah, it feels so wonderful,\" she moaned. She leaned forward slightly now and I felt her hands land on my breasts, her palms against my nipples (I hadn't even realized the pigtailed girls had gone). Tutuklu's own breasts shook alluringly in my face. \n\nBut it was now that I felt her skin against my breast that I realized what I was feeling and seeing was impossible. I turned back and looked over my shoulder, where Tutuklu was supposed to be. But instead, I saw pillows, nothing more. I looked to my sides where I could still feel Tutuklu's legs against my sides. But now I found the pigtailed girls, their arms pressed against my sides, keeping me from noticing that Tutuklu was gone. Somehow, she had slipped out from behind me when I was distracted. Now she had slipped on top of me. I felt my mind whirring.\n\nI turned back towards her and I noticed once again the intensity of her touch. Her back was arched, pressing her breasts almost into my face and slipping my cock deep inside of her body. She felt so tight and she rocked her hips in a perfect, unknowable rhythm. The inside of her body was slick, but firm, holding me tightly and squeezing my cock. Tutuklu's hands were squeezing gently on my breasts as she rocked. I could still fill the short-haired woman's tongue on my balls as Tutuklu rocked on top of me. \n\nTutuklu now leaned forward, putting more pressure on my chest. Her long hair cascaded over top over my face, encircling us both in tickling embrace. Tutuklu was smiling. Her body continued to rock on top of me as she leaned and I felt the familiar tension rising inside of me again.\n\n\"Oh Sultanah,\" she moaned, running her tongue along her lips, \"It is my right and pleasure as the Pezevenk to accept the first of a new Sultanah's seed on behalf of the harem. Please let me have it!\" she moaned. I wanted nothing more in that moment than to lean forward and kiss Tutuklu's plump limps. But it would not be appropriate. Tutuklu seemed, again, to sense my desire. She leaned forward still further, and pressed her lips against my cheek.\n\nIn leaning over to kiss me, Tutuklu's ass had pressed down more firmly into my laps. She seemed to squeeze me with her cunny; her body seemed to ripple around mine. She had only been on top of me for a few moments, but I had been teased for so long and her body was so expert that as her lips lifted off of me, I felt the tension rising to a fever pitch. Tutuklu leaned over towards my ear.\n\n\"Give me your seed Sultanah, do not hold it a further second,\" she whispered in a sultry voice. I felt the vibrations of her voice shaking in my ear. That little vibration seemed to click perfectly into place. Into the feeling of Tutuklu's cunny wrapped around my cock, into the feel of her hands on my breasts, the feel of someone's tongue on my balls, the smell of arousal in the room, the sound of flesh and desire lying heavy in the air. \n\nI felt all of the muscles in my body tighten. My hands shot up and grasped at Tutuklu's thin waist, my fingers sinking into her skin. I felt my mouth open as if to scream, but no words came out, only a soft croaking noise. My eyes slammed shut and my toes curled. I felt the sound of her whisper pull all of these sensations together and they worked as one to push me right over the edge, past the point of tension. Release, sweet release from the teasing, delicious agony of the harem. And briefly, release from the pressures of my position and the tension I had felt all morning as a result of my attack. Release from that pressure and a swelling of pleasure, as the joy and sensuality that filled the chamber seemed to fill me up, to replace my anxiety. I felt my cock bulging inside of Tutuklu's warm cunny, stretching her tightness slightly and filling her with my seed. My balls seizes against the short-haired woman's face. I let out a low, whimpering breath as the intense, soothing pleasure of my climax began to subside.\n\nI collapsed back onto the sofa, feeling all of my joints and muscles completely relax. Tutuklu moaned and seemed to whisper a near-silent appreciation for my seed. But she moved quickly. She lifted herself up quickly off of my body. I groaned as I felt my cock slipping from her body and out into the cool air. As Tutuklu lifted from my cock, I felt warmth pouring out of her and onto my cock and stomach. I looked down and saw that my seed had overwhelmed her tight cunny and she was dripping it out of her and onto my body. She did not seem to notice or at least she did not allow it to stop her. She threw her leg up over my hips and stood slightly to the side of me.",
        "As soon as she moved away, I felt sudden burst of new sensations. Like a pack of ravenous wolves, the pig-tailed girls and the short-haired woman had waited until the right moment to strike. Now that my body was clear, they moved at once. My balls fell from the short-haired woman's mouth and her hand shot up quickly, wrapping around the sensitive shaft of my cock. At the same time, the two pigtailed girls sat up quickly and leaned down towards my belly. At the same instant, all three women began to lick. The short-haired woman sucked at the tip of cock (making me squirm in lovely agony) while the other two placed their tongue on my stomach. They were all finding my seed, I could hear them slurping at it and I could feel their tongues against the parts of my skin that contained it. It had dripped out of Tutuklu and they wanted it badly. I could hear them moaning with joy and see their bodies shivering as they tasted at my juices.\n\nBut I also heard a slight splash. While I enjoyed the feeling of the women cleaning my body with my tongue, I followed the sound of the splash with my eyes. Tutuklu had waded out into the pool directly in front of the sofa. The Blonde and the Brunette were both on their knees now before her. They looked up at her expectantly. I watched her ass shake as she walked languidly through the water. Finally, she turned and faced me. I saw her smiling at me and she spread her legs slightly, placing her hands on her hips. Her cunny was still full of my juices and as she spread her legs, I watched as it began to drip out of her body, running in a small torrent down her leg. The Blonde and the Brunette noticed as well. They immediately dove for her legs. I watched as their tongues found her flesh and I could hear them moaning with pleasure as they tasted my seed. The Blonde and the Brunette ran their tongues desperately over Tutuklu's body and fought playfully with one another for a slight taste. \n\nFor a few moments, Tutuklu and I remained frozen in our spots, staring at each other across the distance. I could feel tongue probing at me and sucking on me (slower now, as they had swallowed down most of my cum and I could see the Blonde and the Brunette fighting for the taste of me. As the seed became rarer, I watched the girls move off in other directions, finding other girls in the room. Rippling like a stone thrown into a pond. I watched as they kissed these girls deeply and I saw my seed spilling into their mouths. I saw the eyes around the room grow wide with excitement at the taste of my seed mixed with the saliva of the other women. Some women seemed to like it so much that they spread my seed back and forth for several seconds, fighting to savor the flavor as long as possible, playing with their breasts as they did so. In fact, some women kissed and swapped my seed for so long that they were essentially forced to share by others, pulled to the ground and kissed passionately. Women of the harem were fighting gain just the slightest hint of the flavor of my seed.\n\nTutuklu looked absolutely content, like she had never wanted anything more than to feel my seed in her cunny, like she had achieved a life-long goal. I can't describe the feeling I had as I watched and felt these women, falling all over themselves to make me feel like they desired me. But it felt a lot like power. And for the first time, that did not feel like a burden.\n\n* * * * * *\n\n\"Have you finished your devotions?\" I asked quietly as the door to the chamber opened and I saw Cin, crouched in the darkened hallway praying. She did not squint as she turned to face me, as though her eyes were already adjusted to the blind of light. She was smiling slightly, and looked totally at ease waiting.\n\n\"Have you?\" she responded, raising her eyebrows.\n\n\"Yes,\" replied, \"the harem finished...cleaning me a few moments ago,\" I said and looked over my shoulder. It looked as though nothing had changed since the door to the harem had first been opened. Once again the harem was going about their business as though nothing had happened. Walking, drinking, and swimming without noticing anything around them. Those who had needed to be cleaning were swimming languidly in the water. Only Tutuklu was not engaged in the farce. She was standing to my side, slightly behind me, looking at Cin.\n\n\"Are you sure we cannot interest you in further enjoyments?\" Tutuklu asked and I turned to look at her. Her cheeks were somewhat flushed and she looked more beautiful than she had when I first arrived. It seemed she enjoyed my visit. In fact, when the harem had first completed the ritual of sharing my seed, she had offered many additional experiences. For a moment, I had nearly agreed. I wanted to try everything and anything any member of the harem might even being to suggest. But after a moment, I had made the difficult decision to resist. Tutuklu and the harem appeared slightly disappointed but never dared to question my prerogatives. Instead, she had immediately set girls to work collecting my clothes and dressing me again quickly.\n\n\"No, thank you,\" I said, \"I would love to stay. But I must get back to business, Tutuklu. But I assure you this time has helped. My mind feels much clearer than it did just a short time ago.\" I said, telling the truth. I let out a deep breath and it felt like I was using new lungs. Everything felt considerably calmer.\n\n\"It was our pleasure to serve,\" Tutuklu said and she bowed her head. She then turned and walked back into the room and I made my way out into the dark corridor. The door closed behind me. Once it was completely closed, Cin smiled at me conspiratorially.\n\n\"Did you enjoy yourself?\" she asked and winked. I smiled but did not directly reply. It was a superfluous question, I was sure she could tell simply by my bearing that I had enjoyed myself immensely. In fact, I was already plotting how I would manage to get back to this place, to do this again. Cin nodded knowingly and then she gestured toward the darkened hallway. We turned and started walking through the corridor. \n\nI moved in front while Cin walked just behind me. I could remember the route we took and moved briskly. At first, I found my mind floating back to the harem, wondering what they were doing. Wondering what they would do the next time I came. It felt a smile on my face and let it rest there.\n\nThe path in front of me started to wind its way back up toward the ground floor. I had been so enchanted by my memories of the harem that I had hardly paid attention to the gentle rise of the floor. I stubbed my toe hard against the incline and began to pitch forward. I let out a little yell and threw my hand out to the side to balance myself against the wall. I caught myself, but as I did so I felt white hot pain.\n\nI regained my feet and immediately pulled my hand away from the wall. I held up my hand, only then remembering. I looked at the bandage on my hand, I could see a red spot in the middle of it. I had re-opened the wound that Cin had so meticulously cleaned and dressed. The throbbing pain had returned, perhaps worse now because I had aggravated it. All thoughts of the harem quickly slipped from my mind. I thought back to the morning. Just a few minutes ago, that had seemed like a different lifetime. Now it felt like it had just happened. I clutched my hand to my chest and shook my head.\n\n\"How is Arkadas?\" I asked. I was ashamed of myself. I had so easily forgotten all of the troubles I had left on the surface. I had not thought of Arkadas at all while I was with the harem. Perhaps worse, I had not been thinking about the assassination attempt or my Empire. I had left it all behind. But that was a luxury I didn't have. A heavy feel returned to the pit of my stomach. I didn't know it had been there before, just realizing it now after my brief respite.\n\n\"We shall see,\" she said and I began to speak again. But if Tutuklu could anticipate my sexual anxieties, then Cin could anticipate my political anxieties. She quickly addressed me as though she had been reading my mind. \"And we shall see about all of your concerns in due time. But that is not the issue now. All will wait on you, as you are the Sultanah. Bask in this pleasure a moment longer,\" she said. I was surprised by this, it was Cin who often kept me focused. Was this some kind of test?\n\n\"No. I am powerful, but I don't control everything. The world will not wait on me,\" I said and started walking again, more carefully, up the path. Cin reached forward and grabbed my wrist. Her palm felt hot on my flesh. I turned and looked at her and her eyes were like fire.\n\n\"What you say is, generally, wise. It is good that you recognize the limits of your power. Your father had to lose a war to learn his bounds. But you fail to recognize all of your limitations, and not merely the political. You cannot lead with righteousness if you are losing your head,\" Cin said. I thought back to my meeting with the Peers earlier in the morning, allowing the \n\n\"I know that,\" I said.\n\n\"It is deeper than you think,\" Cin said, releasing my wrist now, \"The position of Sultanah is a lonely one. It entails stresses and concerns that most people cannot imagine. It is a role that many desire, but few can truly master. And one cannot master the office of Sultanah without constant attention and focus. And, Sultanah Varis, you cannot maintain constant attention and focus on your tasks if you do not love them.\"\n\n\"Love dealing with the Peers?\" I snorted and Cin quickly nodded her head.\n\n\"Yes. Not for their sake, but for the sake of your people you must love the interplay of the politics. And you must love every other aspect of being Sultanah, so that you can devote your everything to it. Your people deserve it. And Gunes deserves it. And that is why it is important to realize that not all aspects of being Sultanah are a chore. You need not work to love everything. A wise Sultanah know that a trip to the harem on occasion is not an indulgence. It is a necessary to relax the mind and body and to give you pleasure so that you can then love the more difficult aspects of your reign. It provides you with joy that you will then you to lead your people.\"\n\nI saw the light in Cin's eyes grow dimmer in the dark as she finished speaking. I felt the impact of her words. I could feel the wisdom in her explanation and I felt some of the guilt that accompanied my trip to the harem subside. I did not forget Arkadas, or the Peers, or the marauders, or the food, or my lack of allies, but I allowed myself to think of the harem as well. I thought back to what Tutuklu and the others had done, masking movements to make the whole appear more perfect.\n\n\"I had never thought of it that way,\" I said finally and Cin shrugged nonchalantly as though I would have figured it out on my own at some point. The throbbing in my hand become less intense and I started to work my way back up the path again. \"I do feel more in control now. I was ready to leave when we went to the harem, to get away. But it feels right to return now, to get to work. I guess that is what you meant.\"\n\n\"Do not forget this lesson Sultanah,\" Cin said seriously behind me, \"if there is anything else that I might do to protect your strength and manage your sanity you must not hesitate. Good management of the realm demands it.\" I had never thought of that either. All I need to is ask, as something could be mine. Just as it had once been for my father. I smiled a little, not really sure that I needed anything now. But suddenly, a small burst of inspiration hit.\n\n\"Well, actually,\" I said, and I made a brief suggestion.\n\n\"Consider it done,\" Cin said. And we made our way back to the world and to the sea of troubles with lighter hearts.\n\nEnd Chapter 5\n\n*****\n\nNote: I honestly write so that I can hear the comments you all give. So please just tell me what you think. Even if it is just a sentence or two (though I always prefer more). Consider that your payment for a free story. And if you like this, I beg you to read my other stories and comment on them too. I know who my loyal readers are and I really appreciate you. Thanks!\n\nYKN\n\nP.S. I do one edit of my work and I try to be thorough. But I figure when it comes to handing out free erotica, you all would be better served getting it fast (if a little rough), than waiting for me to polish it like I was getting paid for my work. Especially on a massive project like this, it took a year to write and could take longer to edit. So, in short, I know there are some errors and I don't really care that much. Don't complain about the soundtrack in your porno, don't sweat the typos in your erotica. Thanks.\n\nYKN"
    ],
    "authorname": "YKN4949",
    "tags": [
        "epic",
        "medieval",
        "oral",
        "analingus",
        "group",
        "harem",
        "control",
        "orgy",
        "shemale on female",
        "tranny on female"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sultanah-ch-05"
}