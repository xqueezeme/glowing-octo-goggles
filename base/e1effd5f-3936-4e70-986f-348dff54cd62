{
    "title": "The Perverted Poet Society",
    "pages": [
        "There was no reason to be there. It was just handy and I really needed a drink. The place was small and I noticed the fire rating: 120 people. I hoped the guy wasn't trying to make a living.\n\nI was in a suit, something I wore maybe three times a year. It was a pretty nice suit because one of my customers was the same size, he had to wear them and I told him once he really looked good in them. He had to upgrade every year, to, as he put it \"Keep up with the pretty petty people.\" I asked him if he meant pretty, petty people and he grinned.\n\n\"No, I said it right. They're all as nice looking as money can buy, and the rich, especially the super-rich, can be as petty as third graders squabbling over a kickball.\"\n\nHe went on to tell me he put up with their whining because they made him rich. \"You'd be amazed at what you can put up with for the right amount of money.\"\n\nEvery time he upgraded, he'd give me a couple of old suits. \"Keep what you want; give the rest away. I write them off as a business expense anyway.\"\n\nThe upshot of that was I owned about half a dozen really nice suits, along with shirts, ties, and shoes. If I had to dress up, I could look really professional. The suit was to meet one of his asshole clients. The guy was worth twenty mil, and he tried to nickel and dime me. I told him I didn't think I could fit him into my schedule for six months and he got huffy.\n\n\"Drop somebody.\"\n\n\"That's not good business.\"\n\n\"Do you know who I am?\"\n\nBy now he had pissed me off. \"Some entitled asshole? I'm sorry Mr. Jeffreys, after reviewing my schedule I won't be able to do business with you. Best of luck finding someone else.\" He was still ranting as I got into my truck.\n\nI was on the phone to all my friends in my line of work as I drove away, warning them. Mr. Jeffreys was about to discover there was a dearth of carpenters in this city.\n\nThe drink was excellent and I complimented the bartender.\n\n\"Thanks. I pride myself in giving a good pour.\"\n\n\"I wasn't referencing the alcohol, but the way it was blended. It has exactly the right balance. May I have just one more?\"\n\nShe served it with a flourish and I revised my initial assessment. The place was very elegant. Understated, was the word that came to mind.\n\nI noticed people as they filtered in. Mr. Jeffreys insisted we meet on his schedule, so it was just after eight. One woman sat beside me and smiled. \"Are you here for the poetry?\"\n\n\"Sorry, no. I just stopped in for a quick drink.\"\n\nShe eyed my suit and grinned. \"You should stay, maybe slum a little. Some nights are quite good. Others, well, I apologize in advance.\"\n\nI started to tell her this place was several cuts above what I usually frequented when the lights went on over a little stage. A guy fumbled with the microphone for a few minutes before he declared it ready. The crowd was mixed, a lot of what looked like college students, a few middle-aged professionals, judging by their dress, and a good few retirees. They all seemed to know each other and the banter flowed.\n\nThe MC stepped up to the mike. \"Good evening! It's nice to see all of you! For those who may not be familiar with our system, let me explain. We are primarily interested in original poetry, but we allow those who want to read a piece from others that have meaning to them. Remember, it takes a lot of courage to stand up here and basically bare your soul, so be polite. And if you're new, and you feel the urge, tell the bartender or waitress, and we'll find a spot for you. Enjoy.\"\n\nA young woman got up. She had to be in her teens and she fumbled the first poem, then found her cadence, shutting her eyes and letting the words roll off her tongue. Her last poem, about the death of a pet, moved many to tears. The applause was much more than polite when she was finished.\n\nThe ones who followed were a mixed bag. Some needed to seriously consider another hobby; others definitely needed a wider audience. My new friend got up and I felt the temperature rise in the room. She recited a poem I later found was called 'epic,' after the sagas of peoples before the written word. It was about love found, love lost, the lyrical joy of falling in love replaced by the raging sorrow of love lost, before ending on a hopeful note of love still to come.\n\nTears were in her eyes when she finished, and the applause rocked the room. She smiled and did a little head bob, before walking away from the spotlight. She came up later for a drink and I noticed it was coffee. I had seen more than a few cups so I asked the bartender and she grinned. \"This is primarily a coffee shop. I'm a better barista than bartender. Usually, poetry night is the only time we serve alcohol in any quantity. \"\n\nI immediately switched over to coffee with just a little cream. She just smiled and called me a Neanderthal as she turned. It was really, really good coffee. I'd never noticed the place before, even though I passed it often in my travels. When I found out they opened at six, I knew my coffeemaker would last me forever because it would rarely be used.\n\nI turned to the woman as she waited for her coffee. \"May I buy this cup as a thank you for your words? It was one of the most moving things I've ever heard. It brought out a lot of emotions, and there at the end I wanted to beat the shit out of whoever hurt you.\"\n\nI realized what I said and turned red, but before I could apologize, she touched my arm and smiled. \"Thank you for your kind words, and truth be told, at the end of that relationship I really wished I had someone around who could beat the shit out of him.\"\n\nInstead of going back to her table, she stayed. I enjoyed the conversation and just before she left, she asked me a question. \"I'm sure this is not what you were expecting when you came in. Did it impress you enough to come back?\"\n\nI stood when she did. \"Probably. It beats sitting at home alone or going to a bar. Are you a regular?\"\n\n\"Almost every Thursday night. Are you by chance a poet?\"\n\nI laughed. \"Hardly. I'm famous among my friends for corrupting nursery rhymes, but that's about it.\"\n\n\"Tell me one.\"\n\nI had to think for a minute, wanting one that was semi-clean. \"Jack kissed Jill and it was such a thrill they took it even farther. They lay down and fooled around and now they've got a daughter.\"\n\nI figured I had insulted her until she giggled. She was still giggling when she went back to her table. It wasn't until I was halfway home that I realized we hadn't exchanged names.\n\n*****\n\nThursday night found me back again. I got there early and was drinking coffee when she arrived. When she saw me, she came straight to me. \"Hello, Handsome Stranger. I'm happy to see you again.\"\n\n\"Hello, Woman of Exotic Beauty. You know, it would save a lot of time if you'd just call me Jack.\"\n\nHer lyrical giggle came back. I could listen to her just do that into a microphone. \"And you may call me Jill. Get it?\"\n\nJack and Jill. I got it. She insisted I sit at her table. There were three more women and a man there. The man did not look happy to see me. I found they were all middle school teachers. Jill taught English, like that was a surprise. Two taught math, another history, and the man was a gym teacher and football coach. None were married, and I got the feeling as the night went by that Mr. Physical Education had hit on all of them. Jill even moved a little closer to me at one point and I saw his frown.\n\nShe was the prettiest of the bunch, and the others were almost as attractive. I couldn't remember teachers looking like that when I was in middle school. The youngest teacher I had was forty-five, and the gym teacher was so out of shape that he got winded blowing his whistle. At least this guy had a little definition.\n\nThe poetry started, and we sat and let the words wash over us. Again, it was a mixed bag. One guy was pretty bad until he switched from his stuff to a litany of seventeenth-century poems about love. He really shined at that. Jill got up and did a short poem, about the resilience of hope against adversity that was both moving and on point. The night was about over when she whispered something to the MC.\n\n\"Ladies, gentlemen, it has come to my attention we have a satirist here tonight, a man who can turn even nursery rhymes into adult content. He's not expecting this, but Jack, will you give us a couple? It'll be a great counterpoint to the night and maybe everyone can leave with a smile.\"\n\nJill was grinning as she pulled me up. \"Yes, I ambushed you. If you do a couple, I would be very grateful.\"\n\n\"It'll cost you a kiss. Not on the cheek either. I'm not expecting tongue, but if you kiss as well as I think you do, it will still be outstanding.\"\n\nShe went several shades of red because almost everybody heard me. They applauded and cheered when she nodded her head yes.\n\nI just stood for a few seconds, gathering courage. I did the Jack and Jill bit first, then went through a few more. Little Miss Muffet had them laughing hard, and I was on a roll so I thought I'd throw in a limerick or two.\n\n\"There was a girl from Nantucket, whose favorite expression was f....\"\n\nThe MC grabbed the mic. \"That's all we have time for tonight. Thank all of you for coming and participating, especially Jack. We'll never quite look at a nursery rhyme the same again. Good night.\"\n\nThe lights came up and some stood to leave when the chant began. \"Kiss, kiss, kiss...\"\n\nJill grinned and grabbed my head to pull me down to her level. The kiss was unexpectedly hot and I lost myself in it for a few seconds. I didn't realize my eyes were closed until I felt her tongue swipe against my teeth. Then my eyes flew open and she stood back smiling.\n\n\"There you go.\"\n\n\"Pick somebody you want gone and he'll disappear, for another kiss.\"\n\nHer eyes flicked towards the gym teacher, who stood glowering at us. I leaned in and whispered. \"I'll do him for free. Pick someone worth it.\"\n\nThe giggle came back as her friends dragged her away. I found myself looking up poetry and reading everything I could. I researched nursery rhymes for new material.\n\nJill always gave me a kiss on the cheek when she got there, and a small one on the mouth goodbye. The math teacher kissed my cheek once and her eyes tightened. Maybe there was a little something there.\n\nThat was when I got an opportunity of a lifetime. I was doing work for the man who gave me the suits, and he was complaining to his wife. \"I hate to let these tickets go. We may never get the chance to see her again. Why don't you take your sister?\"\n\n\"Because when your business trip was booked, we decided to spend a weekend at the spa. It's too expensive to pass on.\"\n\n\"She's the future of poetry in America. How often do you think one would get the chance to say I saw Amanda Gorman when she was young?\"\n\nI knew who Amanda Gorman was. We all heard her at the inauguration a couple of years ago. It was an uplifting experience in some very troubling times.\n\nI caught him as I was preparing to leave. \"Mr. Hastings, can I ask a favor?\"\n\nHe looked at me quizzically. In the three years I'd worked for him I'd never asked for anything, He had to almost force me to take the suits, at first.\n\n\"If I can help you, I will.\"\n\n\"Can I buy those tickets from you? I know a poet and she would really like to see Miss Gorman.\"\n\n\"This poet, is she special to you?\"\n\n\"I'd like her to be.\"\n\n\"Well, Son, these tickets will earn you a lot of brownie points. You can have them. They didn't cost me anything, and it would make me happy to think someone who truly appreciates it could use them.\"\n\nI was so happy I couldn't form words. He clapped me on the shoulder. \"Tell me how it goes.\"\n\nThen he gave me another suit to wear for the occasion.\n\n*****\n\nThe event was in three weeks' time. That Thursday as she kissed my cheek, she noticed my nervous grin. We'd known each other for five weeks, but had never been on a date.\n\n\"What?\"\n\n\"I have something to ask you.\"\n\nShe grabbed my hand. \"Ask me at the table.\"\n\n\"No. I'd rather do it here.\"\n\nHer smile kind of faded. \"What is it?\"\n\n\"I got these tickets to an event, and you're the reason why. It would be a great honor if you would accompany me.\"\n\n\"What kind of event?\"\n\n\"A reading and conversation with a noted poet.\"\n\n\"Who?\"\n\n\"Amanda Gorman.\"\n\nFor a minute I thought she was going to faint. \"Seriously? You know this has been sold out for eight months.\"\n\n\"Seriously. I got them from a friend of mine who couldn't go because of business. I told him about you and he gave me the tickets.\"\n\nHer scream shook the rafters. Everyone turned to see what was going on. What was going on was Jill dancing, crying, and kissing me every once in a while. When what caused her celebration went round the room there was a lot of congratulations and a few hard stares, especially from Mr. Physically Fit. I just grinned.\n\nI don't think she let go of my hand the rest of the night, almost dragging me up on stage with her. When it came time to leave, she smiled. \"I sent the others ahead. You need to know where to pick me up, so you're taking me home.\"\n\nI was a little worried about my vehicle, a twelve-year-old Sport Trac, but she smiled when she saw it. It was the last year they made them, and I got a really good bargain when I bought it. I kept it looking like it just rolled off the showroom floor.\n\n\"My uncle had one of these. I always said I would get one when I grew up, but reality made me purchase a little jellybean of a car. It's a good vehicle, but it can't hold a candle to this. It made me sad when they decided not to make them anymore.\"\n\n\"They thought about bringing it back, but decided to concentrate on the new Ranger and Bronco designs. They're nice vehicles, but not in the same league with this.\"\n\nShe shared an apartment with another teacher and she didn't invite me in. I still got enough kisses to steam the windows before she got out.\n\n*****\n\nI showed her a photo of the suit Mr. Hastings had given me, surprised it was a tuxedo.\n\n\"This is a formal event. I needed a tux.\"\n\nAfter I showed it to Jill, she shopped for two weeks straight before she found the \"perfect dress.\" It fit her petite frame like a glove and the four-inch heels made her closer to my height. The event was all inclusive, including a buffet and wine reception after the readings.\n\nThe poet appeared. She had matured in the two-plus years since the inauguration, but she wore it well, giving her a \"stateliness\" that was plain to see. By now a past master at the meet and greet portion of the night, she was especially gracious when I told her Jill was a pretty good poet in her own right.\n\nJill blushed to her roots and told Miss Gorman it was just a hobby, explaining the Thursday night poetry readings at the club. She smiled, saying she remembered her college days when she did much the same thing. She was whisked away by her handlers and we didn't see her until she did the reading and answered questions. The light buffet was very nice. I tasted foods I couldn't even pronounce, and had certainly never eaten. I tired caviar for the first time and was not impressed. The escargot was excellent, though. I drank one glass of wine and stuck to water after that.\n\nJill drank enough to make her a little giggly, and I was not happy with the attention she was getting. One guy thought he was being discreet, but after his hand brushed her butt the second time, I was ready. When he went south, I grabbed his hand, forcing the fingers back.\n\n\"You like this hand, asshole? Because if you try touching her ass again, I'm going to break every finger on it. Twice. It'll be quite a while before you try to grope another woman. We communicating here?\"\n\nI said it in a soft hiss, and his eye went wide when he saw my expression. He nodded like a bobble=head doll and when I turned him loose, he suddenly remembered someone he wanted to talk with all the way across the hall. I turned to see a woman his age with a smirk on her face.\n\nThat quickly turned to anger. \"I can assure you the lesson you just taught my husband will stay with him because I intend to reinforce it from time to time. I hope you and your wife have a pleasant evening.\"\n\nWith that, she stalked across the room. Her husband looked like a trapped rat, his eyes darting around for a way out. She didn't scream at him, but whatever she said to him in a whisper made him turn pale. He didn't get out of arm's reach of her the rest of the night. He may as well have worn a leash.\n\nJill finally figured out it wasn't me touching her, and she went kind of pale and started apologizing. I gave her a peck on the lips and she locked down on my hand, not letting go until we were in our vehicle.\n\n*****\n\nTwo days later she called me, bubbling over. \"Guess what?\"\n\n\"You've decided you can't live without me and are about to pledge your eternal love?\"\n\nThere was a little silence. \"That'll be later. No, Amanda Gorman called and asked a favor.\"\n\n\"What did she ask for?\"\n\n\"I'll tell you tonight. Come pick me up early tonight. We have to stop somewhere on the way to the club. Lo... see you tonight.\"\n\nThat put a grin on my face for the rest of the day. Mr. Hastings asked and I told him about the night, minus the bottom gropes. He sighed. \"I really wanted to see her, but I liked seeing my bank account grow more. I landed a whale that week, so it was worth it.\"\n\nI had no idea what he did or what he was even talking about, but I knew he was very successful. I finished the restoration of his staircase, reproducing the rotted spindles on the lathe I had in my workshop. He'd bought an old Sears kit house from 1912, mostly because his wife demanded it. It was one of the biggest they offered, a two-story monster. I think he said it cost three thousand dollars at the time, and that was a fortune. His wife was the one who fell in love with it, even though it needed major work. I'd been at it off and on for two years and wasn't anywhere close to being done.\n\nI was a carpenter, specializing in restorative work. I can repair or remake just about everything wooden or plaster, so I was in high demand. I charged seventy dollars an hour, twenty dollars higher than the norm for a regular carpenter, and I had to turn down work. I firmly believed that compared to most other trades, carpenters were woefully undervalued. That was why there were so few entering the field. That was going to bite a lot of people in the next twenty years.\n\nJill had no idea what I did, only that I owned my own company and was fairly successful. I made just under 200,000 the previous year, before taxes. I was single, and thanks to my dad, fairly cautious with my money. My investment portfolio already rivaled many of those in their fifties, and was only getting fatter. It was my plan to emulate my father and retire at 50, hopefully without bad knees.\n\nI picked Jill up early and we drove to the most exclusive hotel in town. Jill sent a text, and minutes later someone appeared beside the vehicle. Jill got out and hugged this person before they both got into the truck. The slight woman pulled her hoodie back and Jill grinned at my expression.\n\nIt was Angela Gorman! Frustrated with the rigid structure of her life, she decided to take a few days off and spend it any way she wished, and what she wished for was a night with ordinary people who loved poetry just for the sake of poetry. She was going to the club with us.\n\nMost average people didn't know who she was or would recognize her on the streets. Jill just introduced her as a friend in town for the night, and they welcomed her with open arms. I was amused when the gym rat tried to impress her, and she instinctively moved closer to me. Jill saw what was going on, glared at the guy, then got up and put Angela between us.\n\nThe readings started. I begged Jill to recite the first poem I'd ever heard her do, the saga of love. It was an eighteen-minute piece, and when it was over the applause was just as loud as the first time. Then she surprised everyone by asking her friend Angie to recite something. Miss Gorman got up and did a few new ones that weren't published yet, to great acclaim. I thought the night was over when the crowd started clamoring for Naughty Nursery Rhymes and I was almost shoved onstage. I did the Jack and Jill one, and a few I hadn't done yet.",
        "\"Jack be nimble, Jack be quick, Jack jumped over the candlestick.\n\nMy oh my he should have jumped higher, good God Almighty, great balls of fire.\n\nThey were still giggling when I launched into the next one.\n\n\"Old Mother Hubbard went to the cupboard to fetch her poor dog a bone\n\nWhen she bent over Rover took over and gave her one of his own.\"\n\nI rolled into another one.\n\nLittle Jack Horner was off in a corner, eating Miss Christmas Pie.\n\nHe stuck in a thumb that caused her to come and thought I'm a lucky guy.\"\n\nThere were screams of laughter as I left the stage and Jill was grinning. Amanda was looking at me like I had two heads. \"I read my nieces those rhymes. It's gonna be a while before I can keep a straight face when I do.\"\n\nThis led us into a discussion about nursery rhymes and fairy tales, and how they were often about serious things disguised as a chlid's rhyme. Four and Twenty Blackbirds was about pirates and hangings, Little Jack Horner was based on greed and betrayal at a royal level. Jill, it seems, knew none of that and listened to us spellbound. We were saddened when closing time came around.\n\nShe hugged us both when she got back to her hotel, and we walked her to her room. I didn't know it, but she had a very popular blog and a million or better Twitter followers, and when she mentioned her friends, poet Jill Parker and her husband Jack showing her a good time while she was in our town, we were floored. When she suggested people come the club to hear us, especially my 'Naughty Nursery Rhymes,\" the place was packed for a month.\n\nWe did one week before deciding to let it blow over, and stayed away from the place.\n\nJill and I were an \"item\" by then. We'd go on about two dates a week. She asked to see my place a few weeks later and I brought her home, grinning as she explored the two-bedroom cottage, touching what she thought were antiques and gushing over the stained-glass accents on the windows. Her eyes widened when she saw my bedroom, the massive four poster bed my father had built for me almost overwhelming the room.\n\nWithout warning she got a running start and belly flopped onto it, bouncing instead of sinking into the double thick mattress with pillow toppers and giggling like mad. \"I love it!\"\n\n\"So do I. And it's firmer than it looks and feels. If you were beside me, despite the difference in our height and weight, it wouldn't pull you in. I'd have to use my arms for that.\"\n\nHer eyes grew huge and I thought I'd made a mistake until she grinned. \"I don't believe that. You'll have to prove it to me. Come here.\"\n\nShe patted the bed and I kicked my shoes off, beside her in an instant. We lay facing each other for a second before I pulled her gently to me. She snuggled instantly, kissing my neck as I stroked her hair and back.\n\nShe moved up until she was over me. \"I hope we get to the point that I spend a lot of time on this bed, without clothes and snuggled to you as we drift off to sleep after a bout of love making. It won't be tonight, but I really want to cuddle. I trust you, Honey, but I'm getting over a really, really bad relationship and I'm a little nervous. Can you do that for me?\"\n\nFor answer I pulled up a playlist on my phone: soft songs, some in languages I couldn't understand but really loved. It was my sleep program. I synched it to the speakers in the house and it seemed to waft over us from everywhere. I dimmed the lights until you could barely see and laid back down.\n\nShe was in my arms instantly. We shared our most intimate kisses in our relationship, our tongues exploring and remembering. By this time, she was on top of me and lay her head on my chest. I ran my fingers through her hair gently, and a few minutes later I heard her breathing change and knew she was asleep. I tried to wake her but she snuggled tighter.\n\nI let her sleep for a little while and eased out from under her, gently pulling the covers back. Jill was wearing a lightweight summer dress and it had ridden up, showing a pair of lavender bikini panties that just barely covered an outstanding bottom. I tried and failed miserably not to look as I slipped her sandals off, then covered her gently. Easing into my side, she was against me in a second, snuggling until every inch that could be was melded to me. I went to sleep feeling her breath on my cheek.\n\n*****\n\nI woke to see sunshine streaming in. She was still against me, but sometime during the night her dress had bunched up and I had my hand on a very nice feeling rump. I tried to pull back and she giggled, letting me know she was awake. \"That hand is just fine where it is. I think it spent the night there, and my butt liked it.\"\n\nShe was pressed against me hard enough to feel my erection, and I was afraid to move as she ground against me. She slid up on my chest and we spent a few moments kissing. She pulled back when my hand started wandering.\n\n\"None of that, Mister. I want breakfast. You can start it while I shower. Do you have an extra toothbrush?\"\n\n\"There's a four-pack under the sink. They were on sale. What would you like?\"\n\n\"First I'd like a shirt to wear after the shower while the wrinkles in my dress relax. After that, whatever you have is fine.\"\n\nShe grabbed a company tee out of a drawer and dashed into the bathroom. I got up and used the half bath, splashing my face and wishing I could get to my toothbrush. Going into the kitchen I got out my waffle maker and started my batter, getting eggs ready to scramble, and starting the sausage on low.\n\nI could hear her singing as she showered and it sounded very domestic, which gave me a good feeling. The eggs were scrambled, the sausage almost done and I was pouring the first set of waffles into the maker when she came into the kitchen. My shirt never looked that good on me. It hung to just above her knees and I could make out the hard little points of her nipples. I tried not to look.\n\nShe grinned and gave me a kiss on the cheek before plopping down at the table. \"Coffee. Now.\" Then she giggled.\n\n\"You pamper me this time and I'll do you next. I make excellent crepes. Now feed me.\"\n\nI watched as she destroyed three waffles and a plate of eggs. She told me she didn't eat a lot of meat, and just nibbled on one piece of sausage. After she was stuffed, she talked about how good the eggs were.\n\n\"Free-range chickens. I get them at the Farmer's Market, as well as most of my food. I'm a local businessman and I'm a firm believer in shopping local. Besides, it almost just as cheap and I know where my food comes from. I was gonna go today but...\"\n\n\"Ooh! I'd love to go! Hurry, take me home so I can change!\"\n\nWe left the dishes, something that irritated me normally, but I'd take her smile over a clean plate anytime. She yelled for me to wait as she dove out of the car once we go to her apartment, impressing me with her speed as she came back out, wearing tight little shorts and a cute top. Her hair was held back by a scrunchie (I know because she told me) and the curls were going everywhere.\n\n*****\n\nThe Market was in full swing by the time we got there. I think she talked to every vendor there, putting vegetables into the basket I carried, promising me a home-cooked meal. I grinned when she met Vickie, the woman who sold me eggs. She was a throwback to another generation when the term 'free spirit' was in vogue. She had on a vintage dress that flattered her figure and a matching scarf, holding her almost waist-length red hair back.\n\nShe was in her forties, but you had to look close to tell. I'd met her before I knew about the market, helping a friend of mine build her an \"arts and crafts\" chicken house. It was some of my best work, including gables with gingerbread trim.\n\nIt cost far more than any return on eggs she'd get, but her husband was very rich and he indulged her hobby. He had another hobby, watching his wife being serviced by younger men, two and three at a time, if possible.\n\nWhen they offered, I abstained, which disappointed her greatly, and she vowed to seduce me eventually. She tried hard and it was very tempting, but there are just some lines I would not cross. Finally, she decided to be my friend and champion, touting me to her rich friends. I'd gotten several very lucrative jobs because of it.\n\nAs a thank you, I got my friend to help me precut everything and while she was at the market, we put up a custom shed to hold her gardening tools. It looked just like an old-time outhouse, right down to the crescent moon on the door. I read about it somewhere and looked them up. Her husband grinned and let her discover it on her own, filming it. She let out a scream and then examined it in detail, insisting he film her sitting on the fake seat, which was in reality a chest for her smaller tools.\n\nThey posted it on her vlog and it was one of her highest rated ones. People even started sending her videos of their own versions, and some were quite creative.\n\nVickie looked at Jill, then me, and sighed. \"Damn, there went any chance I was ever gonna have. Who's your honey, Honey?\"\n\nI introduced them and they seemed in no hurry, so I wandered over to a table that held birdhouses: very elaborate, intricate birdhouses. I admired the workmanship and detail when the little girl behind the table started talking. \"Hi, Mister! Wanna buy a bird house? Daddy makes them and we sell them for, for what again, Daddy?\"\n\nA guy who looked a little old to be having a daughter that young finished with the customer and grinned at her. \"Ari, Honey, it's for the Hillary House, remember?\"\n\nHe reached out and I shook his hand. \"Dave Waxman. This little bundle of energy is my daughter, Ari. We come here once a month, which is about as long as it takes me to build enough to sell, and the money goes to a shelter for women and children in bad situations.\"\n\n\"That's admirable. These are excellent. Your eye for detail is quite good.\"\n\n\"You work with wood?\"\n\nI gave him my card. He took it and smiled. \"I've heard of you. I own an old house myself, and it's a constant struggle to keep it up and looking original. Right now, I need to replace some gingerbread but can't find anything in that particular pattern.\"\n\nHe showed me a picture. \"You'll have a hard time finding that. If you do, it'll be original and cost you a fortune. Your best bet would to find someone like me to build the replacements.\"\n\n\"Could you do it?\"\n\n\"Not right now. I'm buried for at least the next five months. If you can wait until it turns cold, things calm down and I could do it then. Give me your email, and I'll send you links to other guys I know who can handle this sort of thing. Any one of them would do a good job for you or I wouldn't recommend them.\"\n\nJill had come over by then and the little girl had her in a serious discussion as she showed her the birdhouses. She looked over at me and smiled. \"Ari says this one would be perfect for our backyard, maybe by the fence. It kind of looks like our house. What do you think?\"\n\n\"I think Ari is a pretty smart girl, as well as being a good salesperson. We'll take it and put it up after lunch, unless you'd rather have another?\"\n\nI was still trying to come to the implications of her saying 'our house' as I paid. Mr. Waxman grinned. He glanced at Ari as she helped Jill box the birdhouse, leaning in a little closer.\n\n\"Thanks for buying that one. It's been overlooked twice because of the price. I have a personal stake in this. Ari and her big sister aren't mine by birth. They were both in a situation like the one Hillary House deals with. God gave me two beautiful daughters, so I do what I can to help someone else find theirs. It literally saved my marriage.\"\n\nI thought that was a story worth listening to sometime. He held up the card. \"I can wait. I'll give you a call in October.\"\n\nWe put the birdhouse and the vegetables in the back seat. Jill was a little quiet on the way back to the house. I made her walk around with me until she declared a spot perfect for the birdhouse. By then, she was smiling and went in to make the lunch she promised me while I got out the tools necessary to install the house.\n\nI was under strict orders not to do it by myself, so I went in, washed up, and asked what I could do to help. Apparently, a man offering to help was outside of her experience but soon she had me wrapping corn to put into the oven. We'd stopped at a market, a real butcher's market, not a chain store, and I thought I was going to have to drag her out. She and the butcher would still be talking if I had stood still. She chose four really nice pork chops, two chicken breasts and deboned thighs, and a pack of homemade pork sausage.\n\nWhile I was outside, she had rubbed the chops, and we grilled them on the patio while she brought out the sides. It seemed she was as good around a kitchen as she was around words. We ate too much and ended up asleep on the couch for an hour when the heat drove us in.\n\nI woke up on the couch and she was on top of me. Maybe this could become a habit. I eased her off gently, and she popped one eye open. \"I was perfectly fine where I was.\"\n\n\"Yes, you were, but the tea is telling me it needs to be recycled. I'll be right back.\"\n\nShe was up by the time I got back, taking her turn with the bathroom, giving me a kiss and a grin when she got back. \"Let's go put up the birdhouse.\"\n\nJill discovered my anal-retentive side, especially where wood was concerned. I wouldn't let go until the house was exactly level. How did I know when it was level? Easy. I used my two-foot level, lining it up until all the bubbles were dead center. She didn't know whether to admire my attention to detail or find a therapist.\n\n\"I wish I could be here to see a family move in.\"\n\n\"It's pretty late in the nesting season, Honey. We may not get residents this year.\" She smiled slightly when I said 'honey' and 'we.'\n\nIn the end, I bought one of the next-gen trail cams, one that linked to your phone. I set it for her phone and two weeks later she nearly blew my eardrums out when she called. \"We got bluebirds!\"\n\n\"Well good for us. Coming over?\"\n\n\"I'm already here. Dinner in an hour. You be on time, Buster. I mean it.\"\n\nShe had fixed me a meal and I got wrapped up with a fussy customer, trying to finish a project before I left. It put me two hours late coming home and she was PISSED! She also wasn't there, my food was in the trash can, and I didn't see her until poetry night. I took her hand and calmy apologized, saying it was thoughtles of me not to call. Then I made her tear up.\n\n\"It'll probably happen again, Honey. I promise I'll call from now on. So, no more storming off, okay? Besides it'll be kind of hard to storm off when you live there.\"\n\nIt caught me by surprise when it came out and I tried to backtrack. Jill let me stutter for a minute before stopping me with a kiss. \"I heard what you said. You can't take it back and I think we need to discuss it at greater length soon. Now come on, I have a new poem I want you to hear.\"\n\nThe poem was about the power of love, especially at the beginning of a relationship. It was emotionally moving, as most of her stuff was, and she looked at no one but me as she recited it.\n\nWe had become intimate a week before. I'd like to describe it, but I couldn't do it justice. She was about as perfect as a young, 26-year-old woman could be. Soft in the right spots, firm where she should be, responsive, passive one second and demanding the next. She was self-conscious about her breasts, because she could really fill out a bra, but I thought they were perfect. Absolutely perfect. When she confessed her insecurities to me, I made her smile when I told her I was going to compose a poem in honor of her boobs. \"Knowing you, it will be sick and disgusting. I can't wait to hear it.\"\n\nI thought about that for a while. I'd said it in jest but now it was a challenge. I was working on it.\n\nWe went to my house after the readings, and she wanted to snuggle instead of play. She laid until I thought she was asleep, then she raised her head off my chest. \"You really think we should live together?\"\n\nI wanted more than just living together, but instinct told me I should go slow. \"You know I do. We need to get to know each other, see where the triggers and the hot spots are, then learn to deescalate and share. I won't beat around the bush, I'm interested in a permanent relationship, but willing to go at your pace. If it looks like it won't work, I'd rather we look each other in the eye and part with dignity and respect. I warn you now, I'll do everything in my power to make sure it never comes to that.\"\n\nShe lay back down for a few minutes before popping back up. \"Saturday. We'll need your truck. The apartment is rented and I have to make sure to pay my share until my roommate can replace me. One load will suffice, maybe two.\"\n\nThen she started kissing me, and I had a feeling the snuggle part of the evening was over.\n\n*****\n\nTwo weeks after we moved her in her math teacher friend called and asked if I'd have coffee with her, at Starbucks rather than the club. She asked me not to tell Jill until after I had talked to her. I was a little uncomfortable about that, but she promised to call Jill from the coffe-shop as soon as the conversation was over, to let her know what she'd done and how reluctant I was to do it.\n\nCindy was sitting, fidgeting with her cup when I arrived. She let the silence stretch for a second before speaking. \"Jill is going to kill me for telling you this, but you need to know it. She was engaged before you two met. They had been parted for about nine months when she started going out with you. She'd dated a couple of guys once or twice, maybe a month beore you met, but they went nowhere. You, you're different. You make her laugh, something we hadn't heard a lot of from her, and she smiles a lot more.\n\n\"The parting was not... amicable. In fact, it was intense and bitter, ending with him beating the hell out of her and trying to rape her. Fortunately, the screams were so loud the neighbors called the cops. He'd knocked her out, but she woke up and immediately started screaming again. He was punching her in the mouth when the cops broke down the door. He was arrested for domestic abuse, aggravated assault and given 48 hours in jail, standard for a case like that. Then he was charged and had to bond out, which took another two days. There was a shiny new restraining order waiting for him, and his lawyer told him whatever he did, do not violate it.\n\n\"He immediately violated it, first by calling her all times of the night and day, then stalking her. She got fed up, took the recordings she'd made, with short videos of him following her, and they arrested him again, raising his bail three times over the original. The man was from a wealthy family and his father tried to get her to drop the charges, indirectly offering her money and hinting how close he was to the head of the school board. She sent him away.\n\n\"The next week she got a call wanting her to appear before the school board, to answer claims against her. She showed up, played the recorded conversation before they could speak, and told them in harsh terms he was off limits, and if anything happened to her career, even if it couldn't be traced, she was getting a lawyer and playing the tape on the evening news. Then she walked out.\n\n\"He didn't go to jail, but was ordered into anger management and counseling, and he had to pay her medical bills and her counseling. He also had to pay her fifteen thousand dollars, or rather Daddy did. She has two dental implants and that's where the tiny scar on her bottom lip came from.\n\n\"Jill thought it was over until he came out from behind a car in the parking lot of the club after poetry night. I can still hear her screams. He was drunk and drugged up or he would have never done anything so stupid. Bad for him. Mr. Marks, you know, the old guy with the oriental wife? He owns a dojo and is one of three people in the U.S. to hold the advanced degree he has. That 68-year-old man kicked his ass. He was out when the police arrived and Mr. Marks was gone. He never saw who kicked his ass and everyone in the parking lot seemed to be suffering from memory loss when they were interviewed.",
        "\"Her ex violated probation, Jill had the bruises on her wrists and arms documented, and off he went. Even Daddy's money couldn't save him, even if he was inclined to help him. I hope someone made him their bitch and beats the hell out of him on a regular basis.\"\n\nShe stopped for breath and a sip of her drink. \"So, there it is. Jill's going to be really pissed at me but you needed to know, because she will not speak of it to anyone, except her counselor. I'd really like to see you guys make it; she deserves to be happy.\"\n\nWhat could I say? I thanked her, kissed her on the cheek and left. Jill was late getting home that night. Almost two hours. I thought about giving her hell, but her face stopped me. \"I know Cindy told you! Even though she had no right, I'm glad she did. Now it's out in the open and maybe it'll make you understand why I get withdrawn and moody. I just got out of an emergency session with my counselor. She wants me to bring you along next session. Will you go? I...\"\n\nShe was babbling, from fear and nervous energy. I pulled her into my arms and gave her a kiss. It seemed to be just the ticket to calming her down, but she still bounced around until we went to bed. I knew instinctively she didn't need love making. She needed love reaffirmation, so I cuddled her, stroking her body and hair. She lay rigid for about twenty minutes before she relaxed, crawled on top of me, and went to sleep. It was a good thing she wasn't a heavy woman.\n\nI went with her to two sessions before she told me I didn't need to come back. Her therapist called me, telling me what a positive effect I was having on her, and whatever I was doing, keep doing it.\n\n\"I'm not doing anything but loving her.\"\n\n\"And that is exactly what she's been needing. Keep it up. When you get around to getting married, I expect an invitation.\"\n\nI promised with a solemn voice that I would try my best. She was laughing when she hung up.\n\nWe were regulars at the Farmer's Market now, and whenever Mr. Waxman was there with her daughter, Jill made sure we bought a birdhouse. We didn't need any more, but when she found out about the charity he was supporting, she had to help. She usually gave them away to her friends and posted a note at the club. Soon, he couldn't build them fast enough.\n\nI was in a builder's association, mostly guys at my level, although there were one or two big contractors. It started it out as a way of networking, but then one of the builders dragged most of us into helping with Habitat for Humanity. Usually, once a month we'd spend a Saturday helping someone who needed it, and it was amazing how much you could get done if a lot of it was prefabbed before we got there. Jill insisted in coming along, so I got her a tool belt and a hardhat. The hardhat was pink, and she giggled when she saw it. She started out just making sure the materials were handy for the workers, but by the third time, she was hammering nails with the rough carpenters. We had to watch her with the nail guns, because if it needed three nails, she'd shoot six.\n\nThen she came to me with an idea. She and I were going to build an art deco playhouse and donate it to Hillary House. It would be raffled off and they would keep the proceeds. I thought it was a great idea and talked to Dave, Mr. Waxman, and he was very happy with the idea, and almost begged to help. The builder's association got in on it and by Halloween it was done. We may have gotten carried away. Two hundred square feet, cedar shingles, small porch, gingerbread on the eaves, and the windows had a stained-glass accent, fake because it was appliques, but very nice looking. It was wired and had hardwood floors. So yeah, carried away.\n\nWe tried to calculate how much it would cost if someone asked for one. Not counting labor, the material along ran over five grand, and since labor was roughly half the price of most projects, it was a ten thousand dollar playhouse. Some kid was going to be very, very lucky.\n\nWhen we finished it, we got Dave's little girl to stress test it and she was almost overcome the first time she saw it. She rambled around inside before coming out and sitting in the child sized rocker on the front porch. She had tears in her eyes as she looked at her father and I knew his project time was about to be limited. I told him we'd help when the time came.\n\nAri was nine, and Dave told me he and his wife had gotten her when she was four, so they were all she could ever remember. We met his other daughter, surprised she was so much older. She was 23, had just graduated from college, and worked for his wife, a CEO of a good-sized branch of her company. Looking at her, I realized what a stunner Ari would be. I think Jill got a little jealous, because she stuck to me like glue every time she was around.\n\n*****\n\nJill almost never had nightmares by then. We were so synched now we couldn't stay in the bed if one of us got up. No matter what time, and I had to get up really early on occasion depending on travel time, she was always up before I left.\n\nWe always kissed each other before going off for work and I never knew how much it meant to her until she thought I missed it. I was up at four, she was sleeping so well I didn't want to wake her, so I brushed her lips and left.\n\nShe was one seriously pissed off female when she called me at six. \"You left without kissing me! Why didn't you wake me?\"\n\n\"Because there was no need for you to get up three hours early on a work day. And I did kiss you, you were still asleep.\"\n\nThat mollified her a bit. \"All right. In the future, it doesn't count if I don't know about it. I could care less what time it is, you don't wake me for a kiss, you'll be very, very sorry.\"\n\n\"Noted. I'll just kiss you twice as much when I get home as an apology. Gotta go. Be home late tonight.\"\n\n\"Call me when you're on the way home, that way dinner will still be fresh when you get here. Love you.\"\n\nHearing those words meant a lot to me. They were hard for her to say, after her last experience. Of course, I was saying it to her for a while before she said it back. \"Love you, too, Babe.\"\n\nI looked at the jewelry box I had hidden in the toolbox of my truck. She never went into it and it was the safest place. \"Soon,\" I thought, as I pulled out my power tools.\n\nI was replacing some gingerbread on an old Federal style house, gingerbread I had to fabricate because the pattern wasn't commercially available any longer. I got the paint company I used to match the composition and color and it blended in well with the original. The homeowners were very happy with the project, then asked me if I could replaster the dining room ceiling. The pattern was pretty intricate and had deteriorated in several places, mostly above the sideboard, the result of too many hot dishes steaming it over the years. I told them I could, gave them the estimate, and said it would be about two months because I was so far behind. They agreed instantly, which pleased me, because I liked inside jobs in cold weather.\n\nThere was a very nice meal waiting for me when I got home. We caught each other up on our day, and she told me Dave had called. We'd printed a thousand tickets at five dollars apiece and they were all sold and people were asking if there were still some available. The charity decided to print up another thousand. If they sold them all it would be enough to keep the house going for almost a year, maybe even branch out and lease another. He said it was heartbreaking to turn desperate women and children away because they were full. The charity would try to place them with others, but they usually operated at maximum capacity, as well. I hoped they all sold. The association was already talking about the style we would build next year. There was even talk about building an adult \"tiny house,\" which had gotten very popular in recent years. It seemed an interesting project and I was sure it would be debated at the next several meetings, but my instinct told me we'd be doing it. The proceeds off that would probably keep two houses going for a year.\n\nJill talked about how much Ari's parents loved her and it was the opening I was looking for.\n\n\"Do you think you'll ever want kids?\"\n\nShe got really quiet for a minute, and I figured I'd done something wrong. Then she snuggled tighter. \"I want children. Two, sex is not important. If it's two girls we... er I will love them just as much as if they were boys. How about you?\"\n\n\"I want children and how many doesn't matter, one or five, it wouldn't make any difference. Let me get just a little more specific here. I want you to have our children. I don't think it's possible to love you any more, but kids change things, and I think before we get ahead of ourselves we need to get married. So, Jill Parker, love of my life, mother to our future children, will you marry me?\"\n\nShe let out a little sigh and passed out. Not what I was expecting. I took advantage of the situation and slipped the ring on her finger. She woke with a start and sat up. \"I must have dozed off, honey. I had the strangest dream...\"\n\nThen she looked down and saw the ring. If we would have had close neighbors, they would probably have called the cops because the scream was so loud. When she finally calmed down and quit snuffling, I reminded her she had never really answered me.\n\nShe grinned. \"I'll think about it.\"\n\n\"Well then, give me back the ring, and when you say yes, I'll give it back.\"\n\nShe covered her ring finger with her other hand. \"Try to take it off. It will be really hard for you to make a living with broken fingers. I've thought about it long enough. Yes, Honey, I 'll marry you. Just so you know, the only way you'll ever get out of this marriage is when the 'death do us part' option happens, so you're stuck with me for the next forty or fifty years.\"\n\n\"I guess I can put up with you that long, if I have to.\"\n\nHer head jerked up and she saw my smile. She smiled back. \"Just to clarify, you do. Get ready for the road ahead, my love. We'll probably need a couple more bedrooms in the not so distance future. I do not want to leave this house. It's the first place I've felt at home in quite a few years, and our yard is big enough for the sandboxes, swing sets, and playhouses that will be coming.\"\n\nShe didn't wave the ring around, but at lunch the next day, the kids in the cafeteria were surprised by a scream. Jill's friend noticed the ring and let out a shriek. Word spread through the school like wildfire and she had lots of stories to tell when she got home. We hadn't been to the club for a while, but she insisted we go the next Thursday. There were a lot of hugs, partly from seeing her again, partly from our news.\n\nShe surprised everyone by getting on stage and reciting an epic poem about love that put moisture in a lot of eyes. The club had a habit of recording the better poets, and I got a copy of that night. I posted it on YouTube and was surprised at the reception. It went from a few hundred hits in three days to over ten thousand in a month. Jill didn't know about it until one of her friends congratulated her on the new channel.\n\nShe was a little pissed at me for doing it without her permission, but got over it, especially when people begged for more in the comment section. I built her a shed and set it up as a recording studio. Sometimes she would sit on the sofa we'd put there, and sometimes she would stand at a little podium. I insisted she recite the very first one I ever heard her do, her epic saga on love. It was her fourth episode, and when Amanda Gorman commented on it, it exploded. I had no idea poetry was so popular. She was getting on average 75,000 hits an episode, and it was climbing.\n\nThen again, there weren't a lot of platforms out there for poets. There were groups on the internet, but not a lot of what Jill was doing.\n\nAmanda showed up unexpectedly, and instead of poetry they sat on the sofa and talked about the craft, and any other subject they could think of, for almost an hour. With her permission, I got an expert to come in and chop it into three segments. They averaged over a quarter of a million hits each.\n\nShe brought in guests, friends from the club mostly, to do a reading or two. Then she got comments wondering why she didn't let her husband do his Naughty Nursery Rhymes. It got to the point that every other broadcast had me doing a couple at the very end. Her popularity swelled. Our friends gave me a hard time about being a star and I would just grin. \"Jill's the star. I'm just comic relief from time to time.\"\n\nThe guy I called in asked how much we were making off YouTube. I told him we had no idea what he was talking about.\n\nThat got to him, and after a quick tutorial on the value of a successful channel, he set it up to where they could do two short advertisements an episode. Jill's eyes almost bugged out when she got the first payment. It was more than she was making as a teacher.\n\nShe spent the whole next segment thanking her subscribers, then announced a new feature, Once every six weeks, she would feature a new poem, sent in and read by a viewer. That got so popular we had to launch a whole new channel.\n\nThen people started sending in really rough satires of poems, limericks, and nursery rhymes. Some were disgusting, some were hilarious, and most were somewhere in the middle. That led to yet another channel that we named the Perverted Poets Society, that I hosted. It was a once-a-month post because it usually took us that long to wade through the offerings and pick out the ones fit to air.\n\nWe didn't let it consume us. I still had my business, and she still taught, and we had no interest in giving up our careers. The friend I'd called in to help me set things up became a partner, filming and editing so we didn't have to tie up any more of our time.\n\nHe talked me into letting him film me working, and the response was so great that Josh set up another channel, where I talked about restoration and carpentry in general once a month.\n\nWe managed to get married while all this was going on. Dad really liked her, and Mom, who only had boys, embraced her like the daughter she never had. Her parents approved of me, and when I had her father over, we went into my shop and I talked him through building a birdhouse. He had no experience at all in working with his hands. His parents were professionals, accountants, and he was a high-level manager in a manufacturing company. He was so proud when he was done, you'd have thought he built the Taj Mahal.\n\nHer mother was a dentist, and as she walked through our house, I could almost see her making notes. They were thinking about buying some vacation property and building a cabin or simple house. They told me part of marrying their daughter included being the contractor when it came time to build. I grinned and told them I'd give them the family discount, which meant free. They retaliated by telling me I'd never have a dental bill for the rest of my life.\n\nI got to noticing Jill spending time in the shop with my father and asked her about it.\n\n\"He's teaching me how to use the wood lathe. I've been fascinated with it ever since I watched you turn spindles for a staircase. You're not mad, are you?\"\n\n\"No. Dad's a good teacher. Just be careful.\"\n\nOurs was what writers call a straight-line romance. We went from strangers to friends to lovers to spouses without any drama at all.\n\nExcept...\n\nFor some reason, Jackson, the P.E. teacher, got it in his head I'd stolen Jill from him. We noticed how surly he'd become and it got so bad we wouldn't sit with him anymore. That only added fuel to the fire. When the other teachers in their clique moved away from him, something snapped. He got so erratic at school the principal called him in and warned him to tone it down. Jill never told me and held it in for as long as she could. She realized later how much of a mistake that was when he flipped out one night and grabbed her as she went to our car. She immediately flashed back to her ex and started screaming. I was late coming out when I got distracted by a friend asking for a recommendation for a plumber. I was giving him names when Sarah came in screaming for me to get to the parking lot.\n\nI was out like a shot, just in time to see him try to drag her to his car. Two women were beating him with purses and another friend was on the ground, knocked out.\n\nI didn't think. I acted like an alpha silverback when someone was trying to steal his mate. I tried to kill him. When you work construction, especially when you work mostly alone, you develop some pretty good muscles. I tried to use every one of them. He was drunk and I was in a rage, so he didn't come off too well. I broke his nose. I knocked out three teeth.\n\nStill, he had kept himself in shape and he managed a couple of pretty good blows. I had a black eye and a sore rib the next day.\n\nI woke up in my bed the next day. He woke up handcuffed to a hospital bed. They had to tase me to get me to stop beating him.\n\nHe got charged with assault, attempted kidnapping, drunk and disorderly and resisting arrest. His blood alcohol was .12, and they found a substance in his blood they hadn't identified right away. It turned out to be fentanyl, one of the most dangerous drugs in existence. One dose could have killed him. That explained his erratic behavior.\n\nI was charged with simple assault, but it was dropped as part of his plea bargain. He was convicted on three cases of assault and resisting arrest and possessing illegal substances. They dropped the kidnapping charge in exchange for my charges being dismissed.\n\nThe school board found out and he was quietly let go. He lost his certificate when the drug charges came to light and could never teach again. He got into a program and landed a job as a personal trainer, and when his probation was up, he moved out of state.\n\nJill had to go back into therapy for six months. Then one day I noticed a change. She smiled more and seemed a lot happier. We hadn't been to Thursday night poetry in a while, and she suddenly wanted to go.\n\nShe flinched a little in the parking lot when we passed the spot where he grabbed her. I asked her if she'd like to leave, and she smiled. \"No. It's just asphalt. It has no responsibility for the assholes who have walked on it.\"\n\nOur, mostly her, old friends spent a lot of time hugging her. At the very end of the night, she got on stage. \"I have a short poem, dedicated to my husband.\"\n\nShe stood for a minute as everyone waited. Then she shocked us all by doing a variation on a nursery rhyme.\n\nJack and Jill went up the hill to the place where they found love\n\nThey didn't tarry, they chose to marry, and thanked their God above.\n\nWhat once was two will soon be three, with our daughter on the way.\n\nThe first of three, a must for me, if he lets me have my say.\n\nThere was a silence after she stopped, and you could see her tears in the spotlight. \"That's right, Honey. I'm ten weeks along. Congratulations, Daddy.\"\n\nThe place erupted. I suddenly understood why she wasn't drinking. I was on the stage before I thought, picking her up and showering her with kisses. She put the whole thing in her next broadcast. It got three hundred thousand views in the first two weeks.\n\n*****\n\nEpilogue:\n\nI was working for my old friend again, repairing some wainscotting in his kitchen. He and his wife were having a conversation that had my ears perked up.\n\n\"She's the hottest thing on YouTube. We're not the only publishing company after her, but she's very private. No one knows where she broadcasts from and there's no way past her comment section to get a message to her. It's driving the publishing trade crazy. On top of that, she knows Amanda Gorman, but Amanda refuses to talk about her.\"\n\nI finished the repair, looking at it with a critical eye. Making new parts wasn't that hard for me. Matching the stain exactly is where it got tricky. I could detect no variation and was pleased. So were the customers when I showed it to them.",
        "While Mrs. Hastings was in their office writing the check, I asked Mr. Hastings what he did.\n\nHe seemed surprised. \"I'm a publisher. I work for Simon and Shuster. Why would you ask?\"\n\n\"Just wondering. I heard you talking about a poet a few minutes ago.\"\n\nHe sighed. \"I was, Jill Parker. She's like a ghost, and no one can find her.\"\n\n\"Probably because her name is Jill Montgomery now.\"\n\nThe look on his face was priceless. \"You know her?\"\n\n\"Fairly well. Tell me, who do you make my checks out to?\n\n\"Jack Montgomery... wait, are you related to her?\"\n\n\"Only in the sense that I had the name before she did.\"\n\n\"SHE'S YOUR WIFE? WHY DIDN'T YOU SAY SOMETHING?\"\n\nHis wife came out to see what the yelling was about.\n\nI shrugged. \"It never came up in conversation.\"\n\nHis wife had caught up and suddenly smiled. \"So, if she's your wife, that makes you the Naughty Nursery Rhyme Guy.\"\n\n\"Please don't spread that around.\"\n\nHe begged and pleaded, and I talked Jill into meeting him. They wanted to offer her a two-book deal. One immediately, on what she already had, and one in 18 months for new stuff. It was a ridiculous amount of money, so she took it, with reservations. She would never make what a good novelist could because it was basically a niche market, but it was still a pretty good chunk of change.\n\n\"I won't give up teaching. It's what I trained for my whole life and it's what I love. If you have book tours and signings as part of your deal, then it's off. I will agree to a limited number during school holidays, and I'm off all summer. I'll give up half of that. Not negotiable.\"\n\nHe went back and talked to his company and they agreed to her terms. When her book came out, it got a lot of really good reviews and I never knew poetry paid so well. Amanda Gorman praised it publicly, and sales soared. During the summer she went with her on a four-week speaking tour, to packed houses. Jill told me later she felt like a warmup act to someone like Beyonce, but she still got a lot of attention. She told me it surprised her that so many people knew she was married to the Naughty Nursery Rhymes guy. Mr. Hastings hinted about a book of them but I said no. I was a carpenter and that was enough.\n\nBy the fall, she was back in the classroom like nothing had happened. Our club became famous as the home of Jill Montgomery, and the place was always packed. Every once in a while, we'd show up and word would spread.\n\nYears later, after four successful books, I asked her what her greatest accomplishment was.\n\n\"Marrying you and having our daughters.\"\n\nThat right, daughters: three to be precise.\n\n\"How odd, that's exactly what I say when people ask me.\"\n\nShe snuggled to me and whispered in my ear. \"You know, it's not too late. Wanna try for a boy this time?\"\n\nTHE END\n\nMany thanks to the Special Iguanas for the contribution of some of the nursery rhymes. You should have seen the ones I didn't include. I don't know whether to be impressed or disturbed. Edited by Randi, of course. Thanks for reading.\n\nQ"
    ],
    "authorname": "qhml1",
    "tags": [],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-perverted-poet-society"
}