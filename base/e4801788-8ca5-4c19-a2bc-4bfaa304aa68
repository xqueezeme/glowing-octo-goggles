{
    "title": "A Ring Named Ezzie Pt. 05",
    "pages": [
        "I just got the email saying I passed my Real Estate license test I took yesterday, and I am driving up to meet Ron in his North Shore office.\n\nIt's a bit of a ride for me, but it will be well worth it. I arrive and he is thrilled to see me. I know Ron is looking forward to buying Ray's place.\n\nRon gives me paperwork to review and sign. I sit and start reading it. He wants about half the commission for BS things like Office Fee, Desk Fee, Advertising.\n\nI cross out Office & Desk Fee and initial it. I change the Advertising Fee from a percentage to a flat $5,000 fee, and initial it.\n\nAfter I read and sign the rest I go to his office. \"Ezzie, please have him agree to my changes, and think it's well worth it to get Ray's place.\"\n\n\"Done Ben.\" Ezzie says.\n\nI point out my revisions. \"Done and done.\" Says Ron as he initials the changes.\n\nHe takes the employment contract and makes a copy of it for me. He then sits me down and goes over some basics.\n\nAfter about 30 minutes of review he asks me. \"Are you ready for your first listing?\"\n\n\"Absolutely.\"\n\nHe hands me a listing for a house. It has the breakdown of how many rooms, how big etc. He then hands me the contact. \"We want 5% on this with a 90dy exclusive. 4% for 120.\"\n\n\"Ezzie, something seems off. What is Ron thinking?\"\n\n\"This is a difficult customer. He knows they will want a 3% max. He wants to see how you handle it.\"\n\n\"Thank you, Ezzie.\"\n\n\"Ron I get the feeling you are throwing me to the wolves, but I will see your bet and raise you.\" I say.\n\nRon laughs. \"Like you bet Ray, you want to bet me?\"\n\n\"Yup. I will get this signed and sold within two weeks, and you don't get the Advertising Fee for this list and my next. I miss the mark and the Advertising Fee on all my listings will be 1%. On one to two million that's a lot more than $5,000.\" I say.\n\nI don't even need Ezzie. Ron sticks his hand out to shake. \"Deal!\" He says.\n\nHe gives me two company Oxford shirts, and sends me on my way. He already had an appointment set for 2pm.\n\nI pull up to the address and it's a very nice house. It should easily get 1.5 million. I talk to Ezzie. \"Ezzie, I really need your help here. Please let me know what she is thinking as we talk.\"\n\n\"Of course Ben.\" She says.\n\nI ring the bell....holy shit it's Natalie from the local morning news. It's Natalie Bell. I have loved looking at her tits in her tight dresses and shirts for years.\n\nI introduce myself. \"I am Ben from Gold Star Realty. Ron couldn't make it and asked me to come talk to you about listing your house.\"\n\n\"No Ben didn't want to make it, because he knows I don't want to pay his higher commission.\" She replies.\n\nOh boy this will be fun. \"Ezzie lets start calming her a bit. Have her realize she should take it easy on me. I am not Ron after all.\"\n\n\"Done.\"\n\nNatalie extends her hand. \"I am sorry Ben. It's been a bad day. Please come in. Let's talk.\"\n\nI step in. \"Thank you Natalie.\" I look around the foyer. \"I bet the sunshine in the morning just glitters off the chandelier.\"\n\n\"It certainly does Ben.\" She says.\n\nEzzie speaks up. \"She thinks you are blowing smoke up her ass.\"\n\nI get an evil idea. Let's get Natalie worked up. \"Ezzie, make Natalie imagine me licking her ass instead of blowing smoke up it.\"\n\nBefore Ezzie can reply Natalie is clearing her throat.\n\n\"She likes the thought of it, Ben.\"\n\n\"Ezzie, does she like anal sex?\"\n\n\"She does Ben.\"\n\nI laugh in my head. Ezzie in a moment change her thoughts to me fingering her ass, and a moment or so after that to me fucking her ass.\"\n\n\"Ok Ben.\" Ezzie says.\n\nLet's see how well Natalie can negotiate when she is turned on. A moment or two later she is blushing a tad and her nipples are hard. She is definitely enjoying her thoughts.\n\nI move onto the details of the house and the listing. She explains her husband used to handle all this, she isn't used to having to do it. (It was a bit of a public divorce. He cheated on her and then started talking publicly to get her to cave, but she held her ground.)\n\nI promise her I will hold her hand through it all. \"Ezzie, have her imagine my hands doing more than just holding hers.\"\n\n\"Done Ben. She has a very vivid imagination.\" Ezzie says.\n\nNatalie clears her throat again. \"Ben, are you warm? Would you like some water?\"\n\n\"That would be nice, thank you.\" I say.\n\nShe is getting the water when Ezzie tells me. \"Ben she is imagining fucking you on the couch. She is rationalizing having sex with you. She hasn't had sex since before her divorce. She is thinking in her head she needs this. She deserves this.\"\n\nHoly crap she is raring to go. When I was thinking of Real Estate, I never thought about having sex, especially not with a mature sexy news anchor.\n\nI lay out the offer at 5%. I don't want 4%. That costs me $15,000.\n\n\"I think the commission is on the high side, Ben.\" Natalie says.\n\n\"Ezzie, please have her think what I say next is all sexual in nature. Have her think fucking me a couple of times is worth the 5%. Then have her come over and sit in my lap to kiss me. To seal the deal.\" I say.\n\n\"Natalie, I plan on giving you my close personal attention. I will hold your hand each step of the way. I will take care of any and all issues that come up. I will leave you very satisfied I promise you\" I tell her.\n\nNatalie walks over to me with lust in her eyes. She sits in my lap with her yoga pants, and wiggles her ass against me. \"Ben, you promise me your personal touch and attention, and the listing is yours at 5%.\"\n\nShe holds my face in her hands and kisses me hard. She breaks the kiss. \"Ben, I need some personal attention Now.\"\n\nI reach under her shirt and rub her nipples through her thin bra. She just moans. I pinch her nipples a little hard and she gasps. I nuzzle her neck.\n\n\"Take me to your bedroom and I will show you how personal my touch can be.\" I say.\n\n\"Oh God.\" She moans as she gets up off my lap, takes my hand and leads me upstairs to her bedroom.\n\nI stand beside her bed holding her in my arms as I kiss her. I reach down and pull her shirt up and over her head. I kiss her again and as I hold her I unclip her bra and slide it off her shoulders.\n\nAs her bra hits the floor I start pinching and pulling on her nipples. She moans as I tease her nipples and is having trouble unbuttoning my shirt.\n\nI step back and finish taking off my shirt. I kiss her again and drop to my knees in front of her. I grab the waistband of her pants and panties and pull them halfway down her thighs.\n\nI push my face forward into her pussy, kissing and licking the top of her pussy. Her pants are still around her thighs and I am not letting her move her legs to step out of them.\n\n\"Oh God. Please let me kick my pants off.\" She begs.\n\nI smile. \"You want to take your pants off? Take off mine.\" I say as I stand up, and kick off my shoes.\n\nNatalie doesn't hesitate. She unbuttons my pants, pulls them down and finally off my ankles.\n\nShe looks up at me and smiles as she sinks her mouth down on my hardon. Her face pushes right against me. \"Oh god!\" I gasp out. The head of my dick goes right in her throat and I can feel it squeezing me.\n\nShe pulls back off me, and starts jerking my drool covered dick. \"I have no gag reflex. Do you like that?\" She asks.\n\nI gasp out. \"Fuck Yeah!\"\n\nNatalie laughs. She pushes back down onto me and gurgles as she pushes me back and forth in and out of her throat.\n\nGod this is good, but I want her ass. \"Ezzie will she let me fuck her ass?\"\n\n\"Ben, she wants you to.\" Says Ezzie.\n\n\"Does she have lube?\"\n\n\"Top nightstand drawer.\"\n\nI pull Natalie up, and push her on the bed on her back. I reach for the nightstand and take the lube. I push her legs back with one arm and put a lubed finger up her ass.\n\nNatalie gasps at the sudden fingering. I wiggle it in and out. Pull it out, lube two fingers and push both in her ass. \"Oh Fuck! It's been a long time since I had something in my ass.\"\n\nI keep pushing my lubed fingers in and out. \"I am about to end that dry spell and fuck that amazing ass.\" I tell her as I pull my fingers out and lube my dick.\n\nI nudge my head in and just push once it's in. \"Oh wow.\" She yells out. \"Jesus, that feels big! Please just hold it inside me for a minute.\" She pleads as she holds her hand flat against me.\n\nI hold still for a moment, and then start fucking her ass harder and harder. I am slamming into her ass and she is just grunting as I do. Her fingers reach down and play with her clit.\n\nI can't believe she is taking this. I am fucking her ass harder then I ever fucked Karen or Beth's.\n\nI am beyond the point of no return. Just a few more strokes and I explode in her ass. Just as I push in one last time with a loud grunt, Natalie groans and her ass contracts around me as she orgasms.\n\nI pull out and push her legs onto the bed and kind of step over her on the edge of bed to half lay, half flop onto the bed beside her.\n\n\"Oh god.\" She moans. \"That was a good ass fucking. Man, I needed that.\" She says as she rolls over to face me. \"Oh god you are still hard.\"\n\nShe starts climbing onto me. At first she just straddles me and grinds her pussy against me and moans. After a moment she reaches down with her fingers. She pushes me up, as she pulls back, and pushes forward again.\n\nGod her pussy is wet. I slip right in. I don't know if this is right but I would swear Natalie's pussy is softer than Karen's. It certainly isn't as tight, and maybe that's it. Maybe her muscles aren't as tight so it feels softer? I don't know and I don't care. She feels really nice grinding and riding me.\n\nI reach up and play with her nipples. I start to pull her to me. She bends over so her boobs are hanging in my face. I use my hand to guide one boob at a time into my mouth sucking and licking on her nipples. I trap one between my teeth and pull on it. She moans and runs her hand through my hair. Oh she likes it a little rough.\n\nI let her ride me like this and take control. She alternates grinding her clit against me. Sitting up and rocking back and forth. Leaning forward with her tits in my face, and bouncing up and down on me.\n\nShe is rocking on me as she starts panting. At first I am not sure if she is just running out of steam. The pants become moan. The moans become. \"Fuck. Fuck. Fuck. FFUUCCKKK MMMEEE!\"\n\nI can feel her juices all over my hips. Wow, she got wet. First she slumps forward onto my chest. She then just a moment later tumbles off to the side.\n\nI am laying there watching my hardon move slightly with my pulse. Fuck I am not ready to stop.\n\nI roll over and put her legs up on my shoulders and slip back into her. God I am right. Slipping into her slowly you can really feel it. Her pussy is so velvety soft. I love the tight feeling too, but this is very nice.\n\nI start a nice steady fucking. With her legs up on me, I am rubbing inside her just right. Her pussy is softly rubbing me just right, as I bottom out my head slides along the velvety softness.\n\nEvery push in I rub against her soft flesh. It keeps pushing me closer and closer to cumming. Until that familiar feeling takes over. There is no stopping now. Now I just need to keep fucking her and cum in her pussy.\n\nI start grunting and groaning. Louder and louder until I push deep into her and stay there as I groan and cum inside her.\n\nShe tenses as I shoot my cum inside her. I sigh in relief and pull out of her. Nat's legs fall off to each side of me and I half collapse on my knees between them.\n\nI can feel Ezzie's enjoyment. I smile and think. \"Ezzie, are you ok?\"\n\n\"Oh yeah. I am good.\" She says sounding very relaxed.\n\n\"So I think my personal attention at the signing of the contract, at any open house, and at closing is well worth the 5%.\" I tell Natalie\n\nShe smiles at me. \"Where's the contract. I will sign it.\"\n\nI hop off the bed and run downstairs naked. I come back with the contract and a pen. Natalie is cinching her robe closed.\n\n\"Oh no no no Natalie. I have a very hard and fast rule I will not break.\" I say.\n\nShe stares at me for a moment unsure what I am about to say. \"When I am signing a contract with a sexy news anchor the document must be signed in the nude.\" I tell her.\n\nShe opens her robe and drops it off her shoulders. She stands there naked. Her thighs wet and sticky I am sure with a combination of our cum. \"Better?\" She asks.\n\n\"Much.\" I say as I put the contract down on her dresser for her to sign. She finishes signing and I spank her ass a little harder than I meant to.\n\nAt first she she yelps, but then wiggles her ass and lets out a long. \"MMMMmmmmnnnnnnn.\"\n\nWell look at that. Ms Natalie Bell has a real kinky side I think. I turn her to face me. \"Do you like getting spanked Nat?\"\n\nShe blushes and looks down at the floor. \"Ezzie, does she like it?\"\n\n\"She does Ben. She is remembering a time she was restrained to the bed and spanked raw and then fucked by her husband.\" Ezzie tells me.\n\n\"Does she still have the restraints, Ezzie.\"\n\n\"In a box in the closet Ben.\"\n\n\"Natalie, look at me. When I get a signed offer for you we are going to celebrate. I am going to tie you to the bed, spank you until you beg me to stop, and then I am fucking you.\" I say.\n\nI grab my pants and start pulling them on. Right now I have a contract to turn in, and an open house to schedule for Sunday.\n\n\"Be prepared before the open house to blow me until I cum in your mouth.\" I tell her as I button my shirt.\n\nShe smiles at me. \"Sounds like fun.\"\n\nI slip on my shoes, grab the paperwork and walk out. I get in my car and drive to the office smiling, as I see a $75,000 commission check for me.\n\nI walk up to Ron's desk and drop the contract on his desk folded over to show the signature.\n\n\"No Fucking Way!\" He flips through it. \"At 5%! No Fucking Way!\" Ron says.\n\n\"What can I say, Ron. I am a people person.\"\n\n\"Kid, I never thought you'd do it. I was all prepared to give you a pep talk to keep trying. No matter what sales job you have you will get told No, a lot.\" He tells me. \"Now prepare yourself to search for the perfect buyer. Sometimes it's like a needle in a haystack.\"\n\n\"Wanna bet?\" I ask.\n\nHe laughs. \"Nope. I learned that lesson.\"\n\nI am driving home and I call Karen. She screams into the phone when I tell her I got my first listing. \"We have to celebrate.\" She says excitedly. \"No wait, Crap, I have to work.\"\n\nI promise to stop by for a coffee and a kiss. Later that day towards the end of the work day Mr B calls me and asks me if I could come to the shop to look over the books tomorrow.\n\nI can't say no to him. I think it's going to be a busy week for me. I get home and Mom is happy I got my license and I have such a good summer job.\n\nMy Dad is concerned I am turning focus away from the finance future I was thinking of. I assure him it is a means to an end. It's nice money to help me get my future going.\n\nI head to the mall after dinner to see Karen. She sees me and comes running from behind the counter to give me a big hug and kiss. \"I am so proud of you. Getting your license, and first house to sell.\"\n\nI lean down a bit and kiss her softly. \"Thank you Karen.\"\n\nShe pouts a little. \"I feel like I have barely seen you since we came back from the cabin. Between my work and you studying.\"\n\n\"I know.\" I say as I hug her. \"How about after work we get an appetizer and a drink?\"\n\nShe smiles up at me. \"Sounds nice.\"\n\nShe has her car so I arrange to meet her at a local spot, and I leave so she can get back to work. I have time to kill so I start to walk around the mall.\n\nI get an email from my new Gold Star work email. It's from Natalie. She got distracted earlier and forgot to ask me about finding a new condo. Jesus I never thought of that either. She lists two different buildings she would like to buy in.\n\nI sit on a bench and look them up. They are both expensive buildings with doormen, concierge service etc.\n\nI look up listings in them. Oh shit. These are million dollar condos. The commission would be split between me and the listing broker but that's still another $25,000!! That's going to be $100,000 from helping Natalie sell her old place and buy a new one. Fuck Yeah!\n\nAfter I help Mr B in the morning I need to take a ride and check these buildings out.\n\nIt's about time to meet Karen. I head for my car and drive to the restaurant. I sit at the bar and have a beer.\n\nKaren surprises me as she sits next to me. She gives me a bit of an evil eye. \"So you would rather see my Dad tomorrow rather than me?\"\n\n\"Huh...what?\" I say. I am confused.\n\nEzzie enlightens me. \"Karen wanted to have you come over in the morning and have sex.\"\n\n\"Oh god. It's Wednesday. Your Mom volunteers. Oh Fuck.\" I moan.\n\nKaren kisses my cheek and whispers to me. \"Nope. No fucking for you tomorrow.\"\n\nShe sits back and smiles at me as the bartender comes over. We order more drinks and a few apps and just talk until closing time.\n\nI walk her to her car and kiss her Goodnight.\n\nI get up the next morning and put on Mr B's polo with jeans and boots. I put my Gold Star shirt, pants and shoes in the backseat.\n\nI arrive at Mr B's shop. He sees me dressed like him, he smiles and nods his approval. He sets me up at his desk so I have access to his PC and the spreadsheets I need, and puts a few folders on the desk.\n\n\"These are the supplier contracts.\" He says as he taps the folders. \"Can I ask you to look at these too?\"\n\n\"Sure Mr B. I can do that.\" Ugh it's going to be a long morning.\n\n\"I have to head out to a job site. If you need me, call me.\" He says.\n\n\"Ok. Sounds good.\" I say.\n\nMr B turns and walks out. A moment or two later I hear the outside door close. I dig in and start reviewing first his invoices to his customers.\n\nAbout an hour later I get a text from Karen.\n\nKaren - Are you alone? Can you talk?\n\nME - Yes and Yes\n\nNot a moment later I get a FaceTime from her. I answer it, and I notice she has the focus up close on her face.\n\n\"Good Morning.\" She says.\n\n\"Good morning.\"\n\n\"So you are alone?\" She asks.\n\n\"Yeah you Dad left me here to go to a job site.\"\n\n\"Good!\" She says as she pulls the phone back. She is naked on her bed. \"I had a really nice dream last night, and this morning I woke up horny.\"\n\nI watch as she runs her hands over her nipples. \"You should have been doing this, but no. You had to help my Dad.\"\n\n\"Karen, I....\" I start to say.\n\n\"Ssshhh. No talking. You just watch.\" She reaches down beside her, and picks up a purple vibrator. She pushes it in her mouth and pushes it in and out a few times. As she pulls it out she smiles at the phone. \"I have to make sure it's good and wet.\"\n\nOh Fuck! She reaches down and starts to rub it on her pussy. I see something light up on it, and can hear it humming as it vibrates. Karen softly moans as it comes to life.\n\nThe phone drops and I am staring at her thigh. I can hear the toy humming along, and Karen yells. \"Hold on Ben.\"\n\nThe view gets jumbled, and then settles down. I see her hand pull away from the camera and I am left looking between her legs at her wet pussy lips and the toy on the bed.\n\n\"Do you like the view, Ben?\" She asks.\n\n\"Oh wow. You are mean.\" I say.\n\nShe picks up the toy and rubs it over her clit. The humming gets muted as she presses it against her. I hear Karen's voice. \"Oh that's nice.\"\n\n\"Karen, you know there are cameras in this office right now, and all I can do is watch don't you.\" I say.\n\nI hear her giggle. \"I do. Unless you want to risk my Dad seeing you jerk off?\"\n\n\"I hate you.\"\n\nShe laughs. \"No you don't. You Love Me. You are just upset. All you can do is watch.\"\n\nShe takes the toy and pushes it halfway in with a deep moan. \"God Ben, this should be you.\" She starts fucking herself with the toy. The humming getting louder and softer as it slides in and out. \"Ben I will admit you can't vibrate like this, but I love the feel of you inside me.\"",
        "She now has it all the way in her and I realize what the big nubby hump on the end is for. As she holds it all the way in, the humped end hits her clit.\n\nShe alternates fucking herself, and shoving it all the way in to grind the hump against her clit.\n\nShe is getting lost in the pleasure. She stops talking and just starts moaning. I am noticing she jumps her hips a little as she fucks herself, and her core muscles contract a little like she were sucking on her stomach when she grinds it against her clit.\n\nShe shoves the toy in and holds it. Her stomach shivers and she grunts out. \"GGGAAHHHH!\"\n\nHer whole body relaxes. She pulls the toy out, and drops it on the bed. I get treated to a sexy view. Her pussy lips are shiny and wet. They are slightly parted, allowing me a view of her dark pink lips inside her until the view is obscured by darkness. Little by little as she lays back recovering from her orgasm her lips close.\n\nHer hand reaches for the phone and picks it up. She focuses back on her face. She has a content look on her face. \"So did you like the show?\" She asks with a big smile on her face.\n\n\"I certainly did. I would really like to see it in person.\"\n\n\"I bet you would.\" She giggles. \"Now next time my Dad asks you to do something?\"\n\n\"I will definitely make sure We have no plans.\" I quickly answer.\n\n\"Now I have to go shower and run an errand before work.\" She smiles at me. \"At least I got to scratch my itch.\" She kisses the screen. \"I Love You.\" And clicks it off.\n\nI drop the phone on the desk. FUCK. One 5-10min phone call and I am as horny as can be. FUCK.\n\nI finish with the software review. It's obvious Mr B has been doing a decent job keeping track of stuff, but he is barely beyond actual paper.\n\nI need to get him setup with a cloud based all in one software. That will take some looking into. I need a change of scenery. I prop open the door and grab my other clothes from the car. I get changed, take the folders off the desk to review later, and hop in my car to check out the two condo buildings.\n\nI go to the first building and I don't like it. It's layout and just general feel, feels older. The second building looks much nicer. A little more open, and kept very shiny and clean.\n\nThe concierge is a middle aged guy. As I approach him I ask Ezzie to be sure he answers me honestly, and make sure he offers me any information I may not know or mention.\n\nI ask him about the building, how it's run, and the condo association. He has nothing bad to say and he has been here 10 years.\n\nI ask him about the two units for sale. He suggests one over the other since it's the nicer of the two, but then he gives me a real nice piece of information.\n\nThe Warrens on the top floor are getting ready to move and sell the condo. While there is no penthouse, the top floor has only 4 units. They are the largest condos in the building, and the Warren's has the best view. Best part is he doesn't think they have a realtor yet.\n\nThirty seconds later I am in the elevator. I get to the top floor and knock on the door. An older gentleman answers the door.\n\nI introduce myself. I let him know the concierge George thought I should talk to him. \"Ezzie, please let me know what he is thinking.\"\n\n\"He is a little weary of you Ben.\"\n\n\"Ezzie, I don't want to worry the old guy. Please calm him down.\"\n\n\"Done.\"\n\n\"Mr Warren, George sent me up here because he knows you are looking to move and sell your unit. I have a very motivated buyer that would love to move into this building. He thought it would be a perfect fit.\"\n\n\"Well to be honest young man my wife hates open houses. We were going to list it after we moved out.\" He says.\n\nNo no no no. \"Ezzie, please have him answer me honestly and agree to list it when I offer.\"\n\n\"I understand sir, can I ask two simple questions, and then if you want me to I will leave.\" He doesn't interrupt so I continue \"How much were you hoping to sell your condo for?\"\n\n\"I was thinking $750,000.\" He answers me.\n\n\"Mr Warren would you be willing to let just one person look at your condo if I could get you 1.2 million?\"\n\nHis eyes light up a little. He waves his hand. \"Come in Ben. Let's talk.\"\n\nNot 10 minutes later with Ezzie's help. I have Mr & Mrs Warren agreeing to one showing before they move. If Natalie doesn't like it. I can list it, but not until they are moved out.\n\nI step away onto the balcony to call Natalie. I tell her of my find, when is the earliest she can come see it. She is in the area and can be here in 15min.\n\nI mute the phone and ask Mr & Mrs Warren if this is ok. They need to run a quick errand so they grab their coats and walk out.\n\nTen minutes later there is a knock at the door. I open it to Natalie. Her eyes are wide open. \"How did you find a top floor unit?\" She asks.\n\n\"It's all in that Personal Treatment?\" I say. As I wave my hand to invite her in. We walk around and she Loves it. Two big bedrooms, floor to ceiling windows in the main living area, a very large deck and a beautiful view.\n\nWe are out on the deck talking. She is thrilled with the 1.2 million, but will make it 1.3 if we can close the same day as her house so she can move in.\n\nNatalie stands right in front of me and looks up while grabbing my dick. \"How long are they gone for?\" She asks.\n\n\"Not long they said a quick errand.\" I say a little disappointed thinking I could have fucked away some of my hormones from Karen's show earlier.\n\nNatalie drops in front of me and pulls down my pants. \"This Thank you blowjob will have to be quick then.\" She says as she shoves me right back into her throat, and bobs up and down so I her throat is constantly rubbing my head as I fuck in and out of it.\n\nFUCK!! This is amazing. The best part is I didn't have Ezzie do a thing to Natalie today. This is all her.\n\nI hate to admit I last at best 3-4 minutes. I hold Natalie by the back of the head, and push myself as deep into her throat as I can go and I cum. I hold her tight as I cum, until she starts hitting my leg.\n\nI let her head go and she pulls off my coughing. She coughs some cum up onto her hand and looks up at me. With tears in her eyes. She shakes her head with a small smile. \"I have to breathe sometimes, you know.\"\n\nShe stands up, and smiles at me. \"Put yourself away while I freshen up.\" She walks thru the slider while I stand there pulling up my pants. Fuck this woman is crazy...I like it\n\nAfter she freshens up I arrange to go to Natalie's tonight and have her sign the offer, whichever they accept. I sit patiently waiting about 15 minutes when The Warren's come home.\n\nI explain the offer Natalie made. They jump at the 1.3 to move earlier. Mr Warren says if need be they can sleep in a hotel for a week. I arrange with them to return shortly with a contract to sign.\n\nI go to the office and Ron is there. I tell him the deal I just made. \"Holy Shit! You go getter. I knew you had it in you!\"\n\nI sit down at a desk and start writing up the contracts and offers. The contract to list The Warrens place for 1.3 million. An offer from Natalie to buy the Warrens condo, and finally for Sundays open house a few offers to buy Natalie's house for the 1.5 million with no names etc on them for the potential buyer.\n\nI shake my head in disbelief. By the end of August I will have made $140,000. \"Thank you Ezzie.\" I think.\n\n\"You are very welcome Ben.\"\n\nMy first stop is back to The Warren's. I get their signatures where needed and promise to leave copies later with the concierge. They plan on going out to dinner to celebrate the sale.\n\nThen it's on to Natalie's. She wants to fool around after signing everything. I want to get home, and I still have to swing back to The Warren's to drop off a copy of the contract.\n\n\"Ezzie, make her understand I have had a long day. I want to go home.\"\n\nAs Ezzie says \"Done.\"\n\nNatalie's face changes. \"I understand Ben. It's a work night for me. I need to be in bed early anyway.\"\n\n\"Ezzie, please listen to her and tell me what she thinks.\"\n\nI hold Natalie against the wall with one hand and nuzzle her neck. \"Natalie, tell me your wildest fantasy.\"\n\n\"What. No.\" She says.\n\nI nuzzle her neck harder. She gets firm for a minute \"Go easy! I can not go on air with a hickie.\"\n\n\"Tell me your dirtiest fantasy. Is it a threesome, with another man or maybe a woman. Have you had sex with a woman?\"\n\n\"Ben, she will never say it but she wants to be tied to her bed and have you and a few other young men ravage her.\" Ezzie tells me.\n\n\"Natalie, make no plans for Sunday after the open house. After you sign and accept an offer I know you will get. I am going to have my way with you.\" I tell her.\n\nNatalie reaches for my collar and pulls me down to her. She kisses me a little hard and says to me. \"Then by all means go get some sleep so you have plenty of energy Sunday.\"\n\nI am just a couple of blocks away passing a public park area. I notice a bunch of guys playing basketball as I drive by. I get a Great idea.\n\nI pull in the out driveway and pull over to the basketball court, and park. Six guys playing 3 on 3, shirts and skins. They are all in decent shape.\n\n\"Ezzie if I asked you too could you make all six guys show up at Natalie's after the open house say 6pm, have them have their way with her until they were satisfied, but treat her with respect too? I want no drama or bull shit. They come over, have fun, but never remember what happened. Like the minute they leave the house, they forget. They need to never remember it. Oh and Jesus, no pictures, videos or cell phone usage at all, condoms are a must. They can cum on her, in her mouth or in the condom.\" I ask. \"Is that too much?\"\n\n\"Not at all Ben. It would help if I were closer.\" She says.\n\n\"Closer I can do, but don't do anything until I give you the go ahead.\" I tell her. I get out of the car and start asking them about a basketball league in the area. I tell them I am moving in.\n\nThey seem like ok guys. No one is a flaming asshole that I can tell. I thank them for the information and start to turn to walk away. \"Do it, Ezzie. Oh and no jerking off Saturday or Sunday. Let's make sure they have plenty of cum for Sunday.\"\n\nFor Ezzie it seems like an eternity, but in reality it's probably ten seconds. \"It's done Ben. They will be there at 6pm Sunday.\"\n\n\"Thank you Ezzie.\"\n\nI park illegally in front of the entrance to the condo. The doorman gives me a dirty look, but recognizes me. I hold up an envelope. \"I give this to George and I leave.\" I say as I rush past him.\n\nGeorge takes the envelope, looks at me with his hand out. \"Ezzie is he looking for a tip?\"\n\n\"Ben the realtor he usually gives a heads up to about people selling gives him $500.\" She says.\n\nI take George's hand in mine to shake it. \"George, when the deal closes I will give you an envelope with $1000, and any future tips that end in a sale another $1000 each.\"\n\nI can see his eyes light up, but I take no chances. \"Ezzie, make him call me every time he has a tip about someone wanting to sell their condo.\"\n\n\"All set Ben.\"\n\nAs I let George's hand go. \"I will be back with your envelope at the end of August George.\"\n\nHe smiles. \"I look forward to it.\"\n\nI am driving home, and I see the folders from Mr B. Ugh more work to do. I need to stop by the shop. Worse yet I am on the other side of the city with rush hour traffic. Fuck!\n\nI make the courtesy call to Mom. Sorry Mom. I won't be home for dinner as planned. My ride that should have been about an hour, turns into an hour and a half plus. Worse yet, when I get to the shop it's all locked up. I knew I should have just stopped at the house.\n\nI pull into the driveway behind a strange car. I get out and see Uncle Ray talking with Mr B. Fuck I really don't want to do this now, but I have Mr B here to help.\n\n\"Ok Ezzie here is how I want this to go. Mr B is the voice of reason. If Ray gets excited Mr B will tell him to listen to me. Mr B will then agree it's a good idea to sell. If Ray wants another cabin on the lake, great. If he wants it anywhere else he will let me be his realtor to make the commission. Finally Ray will start to see maybe I am not a bad guy after all.\"\n\nBefore I can finish the joke in my head, do you need to take notes.\n\nEzzie says \"They are all set Ben. HA Take notes!\"\n\nI smile as I walk down the driveway. \"Thank you Ezzie.\"\n\n\"Mr B, Uncle Ray how goes it?\" I ask.\n\n\"Oh look it's Mr Smartie Pants.\" Says Ray.\n\nMr B gets a little stern with him. \"Ray, I think this young man is smarter than the two of us put together. And your favorite niece loves him so knock it off.\"\n\nWow, thanks Mr B, I think.\n\n\"Aaww he knows I am just busting his balls.\" Says Ray. He then looks at my shirt. \"Oh don't say it kid. You work for the prick in the cabin beside mine.\"\n\n\"He figured if I somehow talked you out of the cabin for the 4th I would be good at selling houses.\" I say.\n\n\"Oh Fuck.\" Rays moans.\n\n\"Don't get too down Ray, he told me he wants to make you one more offer.\" I say.\n\n\"I don't want the bastard's money.\" Ray says.\n\nI start to say. \"He is offering you $450K.\"\n\nAs Mr B tries to tell Ray to hear me out, when they both turn and look at me.\n\n\"How much?\" Asks Ray.\n\nI smile. I may not have needed Ezzie anyway. \"You heard me right Uncle Ray. $450,000. I looked it up. It's a whole lot more than it's worth. And don't get mad, because it's public record. I know you have no lien or loan on it. $450 can buy a Really nice new place.\"\n\nHoly crap! Ray is actually considering it. \"Uncle Ray, the offer is good as long as you close before the first day of fall. That is September 23rd this year.\" I add.\n\nMr B looks at Ray. \"That would get you a nice place on Lake Edda. You always said you wanted a place there.\"\n\n\"So this year's Labor Day.....no I don't have my cabin that weekend.\" Says Ray.\n\nI get an attack of my conscience. FUCK! \"Uncle Ray, if this is going to be the last Labor Day you are up there. I will waive my rights to the cabin that weekend so you can throw a final party.\"\n\nMr B gives me a big smile. He steps over between the two of us, puts his hands on our shoulders. \"What do you say guys? Shall we try this again from the beginning and try to be nice to each other. Ben, this is my brother, Karen's Uncle Ray. Ray, this is Karen's boyfriend Ben.\"\n\nRay puts his hand out. \"Nice to meet you kid...I mean Ben.\"\n\nI reach out to shake his hand. He doesn't try to crush my hand this time. \"Nice to meet you too, Uncle Ray.\"\n\nJust then Karen comes walking down the driveway. She grabs her uncle from behind in a hug. I can see she is saying something but can't hear.\n\n\"Ezzie, what is she saying?\"\n\n\"She is just saying Thank You, and Ray is saying Your Welcome.\"\n\nWhat the fuck I will take it and see how it goes.\n\nRay looks at me. \"On the water kid, 3 bedrooms minimum.\"\n\n\"I will get you some listings, and get the paperwork to you. We will figure it out Uncle Ray.\" I promise him.\n\n\"Good now why don't you come help us move some tools into my truck.\" Says Ray.\n\nMr B looks at me. \"Ray, he is in a white shirt and khakis. He is not helping with this greasy stuff. You kids head inside, I will be in for dinner. Ben leave your keys so I can move your car to let Ray out.\"\n\nI walk over to Mr B and hold his hand for a second as I hand him my keys. \"Thank you.\" Is all I say.\n\nHis look softens for just a moment. \"Go on, you two get in the house.\" Karen takes me by the hand. As we walk in. \"So fess up. You are here to see my Dad aren't you?\"\n\n\"Well yes, but I really wanted to see you too. It's been a long crazy day.\" I tell her.\n\nShe gives me a huge smile. \"I know just what you need.\"\n\nI look at her with my brows up. \"I don't think so.\" She says. \"At least not with my Mom, Dad and Uncle Ray in the house.\"\n\nWe walk in the house and Mrs B is putting away take out menus. She tells me more than asks me. \"You're staying for dinner, Ben. I saw you pull in the driveway. I ordered extra.\"\n\n\"Yes ma'am.\" I say.\n\nKaren lets go of my hand. \"Go sit on the sofa. I will be right there\n\nAgain my answer is. \"Yes ma'am.\"\n\nKaren comes in and hands me a bottle of beer. I take it and smile. Karen then moves me to the center cushion and turns me sideways. She reaches around me and starts unbuttoning my shirt.\n\n\"Karen?\" I say quietly.\n\nShe puts her chin on my shoulder. \"Shut up and let me do my thing. You have had a long day and I am giving you a back rub. I think I can control myself if you take your shirt off.\"\n\nI unbutton the rest and she pulls it off me. I moan and half close my eyes as she works. She is amazing at this. After a few minutes I hear something so I open my eyes. In the reflection in the window, I see Mr & Mrs B watching us.\n\n\"Ezzie, what are they saying?\"\n\n\"Mr B is sad and happy saying he is losing his little girl. Mrs B is just happy telling him. Honey, you already lost her.\" Ezzie tells me.\n\nI see Mrs B pull Mr B by the arm back into the kitchen in the reflection.\n\nI keep telling Karen about my day. I get to the part about The Warren's and their condo and Karen screeches. \"You got another one!\"\n\nShe wraps her arms around me and hugs me tight. Mr & Mrs B run in the room. Mrs B asks. \"Karen what are you yelling about?\"\n\nShe looks to her parents. \"He got another one.\" Karen says excitedly.\n\nMrs B looks at me and Karen. She holds up her hand to stop anyone from talking. She points at me. \"You put on your shirt, and come join us in the kitchen. You can explain it all while we wait for the take out.\"\n\nSo I start telling the story of meeting Ron, getting my license, my first listing that led to the second etc. I can see Mr B's eyebrows go up. He just did the math in his head. I look directly at him. \"Yes sir by the last week or so in August. I will have gotten about $140K in commissions.\"\n\nMrs B gasps and smiles. \"Oh my god Ben. I am so happy for you.\" She comes over and gives me a tight Mom hug.\n\nA few minutes later a small feast arrives. A very large salad, pizzas and pasta. We all dig in. After dinner Mr B grabs two beers, and grabs the folders from work. \"My accountant and I have work to discuss. We will be on the deck.\" He smiles at Mrs B and kisses her on the forehead. Oh ok I guess I am going to the deck for work.\n\n\"No you aren't Ben.\" Says Ezzie.\n\n\"I'm not?\"\n\n\"No Mr B wants to talk to you about your future and your intentions with Karen.\" She says.\n\nGULP! Crap I really wasn't prepared for this talk. Mr B walks to the chairs on the lawn away from any open slider or windows. Oh Fuck!\n\nHe sits in a chair by the fire pit and flips the folders on the ground. They land with a loud slap. Why did that so loud to me? Jesus I am freaking out.\n\n\"Just breathe Ben. Mr B isn't upset at you. He just wants to talk.\" She tells me.\n\nOh fuck. Oh fuck. I take the beer and take a swig. I try to direct the conversation to work. \"Sorry I didn't get to review those folders yet Mr B. I will do it tonight. Do you want to talk about your accounting records tonight?\"\n\nHe pulls out two of the mini cigars he likes. They are like half sized. \"Smoke with me.\" He says as he hands me one. He hands me one of the new electronic lighters, after he lights his. He watches me light it. \"That's it. Now suck on it with a big breath.\"\n\nI do and start hacking and coughing. Mr B laughs. \"Not into your lungs, but at least now you have an excuse for being white as a ghost.\"\n\nI just look at Mr B, and I see a rare warm smile. \"Ben, what are your plans for the future?\"\n\n\"Well.. um.. I go back to school in September.\" I say.\n\nHe raises his eyebrows at me. \"Not what I am asking about Ben.\"\n\n\"Well after I graduate I am hoping to get a job at an investment firm.\" I say.\n\nHe holds up his hand to stop me. \"Ben take a drink.\"\n\nI do as instructed. \"Now take a deep breath.\" He says. I do that.\n\n\"Now, you are a smart young man. You are nervous as hell, but you know what I am asking you. Please answer my question, Ben.\"",
        "\"I promise you sir. I was going to ask you when I was ready.\" I say.\n\nHe smiles at me. \"I know Ben, but I don't want this to be a rehearsed talk. I know that is throwing you off your game right now. So sit back, breathe and just talk to me.\"\n\nHe looks at me and smiles. \"What are your intentions with Karen? You know, the young woman you have grown up with and are best friends with.\"\n\n\"I want to ask her to marry me sir. With your permission that is.\" I say.\n\n\"The big question is when Ben? You are both still in school. You need to concentrate on that.\" Mr B says.\n\n\"I know sir. I was thinking maybe Christmas break. My last semester is going to be easy. Fall will be hard for Karen, but then like me she made her last semester easy so if she were distracted a little bit it shouldn't hurt her GPA.\"\n\nMr B takes a drink and a smoke and stares up into the sky. \"Ok so a different question. What are your plans for your new found wealth?\"\n\n\"Sir, I showed you my bank account a few weeks ago. You know I don't blow my money. I am a saver. Maybe a nicer car after I graduate, and well a nice ring. That's all I have thought of buying. I was thinking of investing about half of it.\" I say.\n\nHe picks up the folders and opens one and leans towards me. Quietly he says. \"Someone is on the deck. No talk of this to Karen before Christmas break, and you have my blessing.\" Now in a louder voice. \"Look at the breaks carefully on these Ben. I think we need to renegotiate them. Let me know what you think by the end of the week. Take a look at this one now though and I will get us another beer.\"\n\nHe gets up. \"Oh look, my two favorite ladies.\"\n\nI hear Karen. \"Daddy, I will get the beers if we can come join you.\"\n\n\"Baby girl nothing would make me happier.\" He turns and pulls a chair next to him.\n\nMrs B sits next to him and stares at the two of us. \"Put those stinky things out.\" I quickly toss mine in the fire pit. Mr B takes one more big puff and tosses his in. Mrs B smiles at him as she holds his hand.\n\nBefore I know it Karen is back with three beers and a small single wine bottle for her Mom. Karen pulls a chair up next to me. I drop the folders back on the ground and she holds my hand.\n\nEveryone is quiet for a moment and smiling. \"Ezzie, what is everyone thinking?\"\n\n\"Mrs B knows what Mr B talked to you about. He told her he was going to do it when Karen was giving you a back rub. She also knows both of them approve of you asking. Karen is pretty sure her Dad was grilling you. She doesn't know the topic is his blessing to marry her. She thinks it's about Uncle Ray's cabin\" Says Ezzie.\n\n\"Ezzie do you think Mr or Mrs B will say anything to Karen?\"\n\n\"They are not thinking about it, no Ben. Mr B is wondering if he should host a big New Year's Eve party. He is wondering if you will ask her by then.\"\n\nI squeeze Karen's hand and rub my fingers softly across it. She smiles up at me. \"Ezzie, can you do me a small favor? Could you give Mr B just a little tweak?\"\n\n\"What's a little tweak, Ben?\"\n\n\"Have him just know I will ask her by then and have him plan a New Years Eve party.\"\n\n\"A small tweak is done Ben.\"\n\n\"Thanks Ezzie.\" I put my head back and exhale a deep breath. For the first time since we stepped outside I feel myself relax.\n\nMrs B finishes her wine and looks at Mr B. \"Are you two boys though talking business?\"\n\nMr B looks at me. \"Are we done talking tonight Ben?\"\n\n\"Ah yes sir. I will review these contracts and we can sit down and discuss it all.\" I say.\n\n\"Good.\" Says Mrs B. \"I need your help in the house.\" She says to Mr B.\n\n\"Yes dear.\" He sighs. As he gets up and they walk in the house.\n\n\"Let me guess Ezzie. Mrs B is already grilling him for information isn't she?\"\n\n\"Oh yes. She can't wait to tell your Mother.\" Ezzie says.\n\nI slip and actually say out loud. \"Oh god. My parents.\"\n\nKaren looks at me concerned. \"What about them? What's wrong?\"\n\nI think fast. \"Karen, I don't want your Mom telling my Mom about the Real Estate. I haven't had a chance to tell them. You know how our Mother's are. Mom will know before I get home.\"\n\nI hop up and head to the house. Mr & Mrs B are still in the kitchen talking. Karen is right behind me. \"Um Mr & Mrs B, I haven't been home yet to tell my Mom or Dad anything we talked about tonight. Please let me be the one to tell them. Mrs B, Please don't tell my Mom.\"\n\nMrs B gives me a big smile. \"I won't tell a soul Ben. Why don't you head home and tell them all the news, so your Mom and I can talk tonight.\"\n\nKaren walks me out to the car. She is walking beside me. She looks up at me and smiles. \"Would you like to do another FaceTime tonight?\"\n\n\"You want to torture me again tonight?\"\n\n\"Me torture you? No never! Maybe I want to watch you torture yourself while I torture you.\" She gives me a semi shy smile.\n\n\"Really? Huh, it could be fun, but I want to hear you say it Karen. What do you want to watch?\"\n\nShe stands in front of me, and looks up at me. \"I want to watch you jerk off while you watch me play with myself.\"\n\nI lean down and kiss her. \"I guess we are FaceTiming later.\" I hop in my car and drive home.\n\nI get home and Mom and Dad are in the livingroom. I sit down and start to tell them about the real estate stuff that fell into place after looking at Mr B's stuff.\n\nMy Mom is in shock I think. My Dad is shaking his head. \"This from the kid that wanted the summer off. What do you plan on doing with the money?\" He asks, concerned.\n\n\"I was going to invest about half, put some away for taxes I will owe, maybe get a better car once I graduate and well one other thing.\"\n\nMy Dad looks at me. \"What's the one other thing?\"\n\nI turn to my Mom. \"Mr B and I were talking alone by the fire pit. He was asking me some questions about my future that I had been thinking about.\"\n\nI can't finish. My Mom screams and jumps up, she pulls me out of my seat and hugs me tight. \"Oh Benjamin, I am so happy for you.\"\n\nI look up and my Dad is standing beside us. He can't hug me because Mom won't let me go so he rubs my back. He puts his hand on Mom's shoulder. \"Honey, let the boy breathe.\"\n\nShe lets me go, and looks at me. \"Did you ask her yet?\"\n\n\"No Mom! You can't say anything!\" I say louder than I mean to.\n\nDad pats my shoulder. \"We won't son. When are you thinking about doing it?\"\n\n\"After I graduate. On Christmas break.\"\n\nDad pulls me into a hug and pats my back. \"I am happy for you Ben.\"\n\n\"Thanks Dad.\"\n\nMom has tears in her eyes. I open up my arms for her to hug me. She puts her head on my shoulder. \"You know these are happy tears right?\"\n\nI laugh with a tear in mine. \"I know Mom.\"\n\nMom looks up. In a rare occurrence she refers to Mrs B to me by her first name. \"Jen knew before your own Mother?\"\n\nI smile. \"Sorry Mom, Mr B sort of cornered me.\"\n\nDad laughs. \"Yeah he would.\"\n\nMom just hugs me. \"Oh my baby boy is going to marry his childhood sweetheart.\"\n\n\"I have to call Jen.\" She catches herself this time. \"I mean Mrs B.... Oh screw it, you know her name.\"\n\n\"No Mom you can't. Karen is home. You two will be screaming and crying.\" I beg.\n\nMoms eyes go wide. \"What? I have to!\" She wipes my eyes. \"Splash some water on your face and go take Karen out for an ice cream.\"\n\n\"An ice cream? Really Mom?\"\n\n\"Benjamin Please.\" She begs\n\nI sigh. I take out my phone and call Karen. \"I feel bad that I left quick. Can I come take you out for an ice cream? I want to see you.\" I tell her.\n\nI can hear the smile in her voice. \"Yes.\"\n\n\"Great, I will be right over.\"\n\nI hug my Mom. \"I need 20 minutes Mom. No calling before then.\"\n\nMy Dad hugs me as I let Mom go. \"I am really happy for you Benjamin, and don't worry. I will lock her in the basement if I have to.\"\n\n\"Thanks Dad.\" And I head back out the door.\n\nI head out and pull in the driveway at Karen's house. I don't even have the door closed, and Karen is running up to me and hugging me. \"I am so happy you called.\" She says as she hugs me. \"Ezzie did her parents say something? Did she overhear something?\"\n\n\"No Ben. She is just very happy for you today with your news, and didn't want you to go earlier. She is very happy you are back even if it's just for an ice cream.\" Ezzie tells me.\n\nGreat, now I am getting paranoid because my girlfriend loves me. I think as I hug her. After a moment I walk her around the car and close the car door for her. Off to the river walk we go to get ice cream and take a walk while our Mothers scream and cry over the phone with each other.\n\nThe walk is nice. Just walking and holding hands. She tells me about a problem at work. I just basically listen and nod.\n\nThen she tells me Beth has a blind date this weekend. A coworker set her up with a friend of her brother. \"Good for her I hope they hit it off. She deserves someone.\"\n\nShe looks at me and smiles. \"What? I ask.\n\n\"If they hit it off that may mean no Labor Day fun.\" She says.\n\nOff the cuff I say. \"Maybe the couples will just swap then.\"\n\nKaren's face shows a little surprise. \"Ezzie, what is Karen thinking.\"\n\n\"She is a little surprised. She never thought of that. She is unsure.\" Ezzie says.\n\n\"Ezzie have her imagine having me watch her have sex with a guy and get excited like I got excited earlier.\" I ask Ezzie.\n\n\"Done.\"\n\nKaren gets a shy look on her face. \"You would like to watch me with another guy?\"\n\n\"Not any guy no, but if we both liked him.\" I turn her to me and stop for a minute. \"Did I like watching you this morning?\"\n\nShe blushes and nods her head yes. \"Did I like watching you and Beth?\"\n\nKaren smiles. \"Oh yes.\"\n\n\"Karen, did you like watching me with Beth?\"\n\nShe smiles at me. \"I did.\"\n\n\"So what's wrong with me wanting to watch you?\" I ask.\n\n\"I just never thought of another guy after you said you didn't want Joe to touch me.\" She says.\n\n\"Karen, I know Joe and his history. I wouldn't let you give him a handjob with oven gloves on.\"\n\nShe laughs. \"Eeeeeeww.\"\n\nI bend down and kiss her forehead. \"Just something to think about.\" I tug at her hand and we continue walking.\n\nA few days later the open house goes as planned. I have Ezzie scanning everyone that comes in. Out of the four hours, three people come in who are honestly interested, and can afford it.\n\nI ask Ezzie to change that interest to they want to place an offer. Each time someone does I tell them there has been a lot of interest in the house.\n\nThe first offer is the best at $1,750,000. Jesus, Ezzie is going to help me make a killing, and the best part is most of the time it's just her giving someone a nudge.\n\nIt's 5pm and the open house is over. I lock up the house and head up to her bedroom. I search the obvious places. Nightstand, under bed & in the closet. In the nightstand are two rather impressive vibrators, but the closest is where I find the good stuff. Padded leather restraints, straps, a leather padded paddle, a flogger and a hood/mask. The mask has an opening for the mouth only and a ring that snaps in place to hold her mouth open.\n\nOh shit she is kinky. I put the mask, ring and restraints on the bed. I loop a strap on each corner of the bed, and as I am walking back downstairs Natalie is unlocking the front door.\n\nShe walks in and asks. \"How did it go?\"\n\nI smile at her. \"You know the rules. You must be naked to discuss business.\"\n\nShe looks at me. \"Are you going to fuck me?\"\n\n\"I am going to give you a fucking you won't soon forget.\" I answer.\n\n\"Really.\" She says as she pulls the shoulder straps off her sundress and lets it drop to the floor. She removes her bra and is now naked. She had no panties on. \"Well then I guess I should get naked.\"\n\nI sit in the recliner and pat my lap. I reach between her legs and rub her clit as I hand her the offer with my other hand. I am being rather rough on her. She stops reading as she closes her eyes and rolls her head back.\n\n\"Open your eyes and read the offer or I stop.\" I tell her.\n\n\"Are you trying to Dominate me?\" She asks looking at me.\n\nI stop rubbing her. \"Let's see. I told you to strip to simply talk to me, and you did so I am going to say yes.\"\n\n\"Fuck.\" She moans as she starts reading again. I start rubbing her again. She is moaning as she reads when she perks up. \"You got 1.75?\" She drops the offer and kisses me.\n\nI break the kiss and hold up a pen. \"If you want to get the fucking of your life sign it.\"\n\nShe hops off my lap. Leans down to a coffee table to sign it. She stays bent over and wiggles her ass. \"I signed it.\"\n\nI stand up and slap her ass. She yelps but doesn't move. \"I left an outfit on your bed I want you to wear. Go upstairs and put it on. Once it's on I will fuck you.\"\n\nShe looks at me. \"Yes sir.\" She says with a smile and she heads upstairs.\n\n\"Ezzie, when she sees what is on her bed tell me what she thinks.\"\n\nNot thirty seconds later. \"Ben, she is very nervous. She is nervous about being restrained. She is surrendering all control to you if she does. She would be very vulnerable.\"\n\n\"Is she putting them on Ezzie?\"\n\n\"She is staring at them. She is nervous and excited.\"\n\n\"Ezzie, give her a push. Make her excitement win out. Let her be nervous, but make her put it on.\"\n\n\"She is putting them on Ben.\" Ezzie says.\n\nI give her a few minutes and walk up the stairs. She is sitting on the bed with the hood on, the ring on her mouth and a cuff on each wrist and ankle.\n\nI start talking as I strip. It's 5:20pm. I have her to myself for 40 minutes before her surprise shows up.\n\n\"You are a kinky bitch aren't you?\" She tries to say something but can't with the ring in her mouth. \"Nod yes or no.\"\n\nShe nods no. I stop taking off my pants and grab her wrist and bend her over the bed. I spank each ass cheek with my bare hand. She yelps out in pain and surprise.\n\n\"Natalie, I found your box in your closet. If it was something you did for your Ex you would have thrown it out when you got divorced. I think you like it.\"\n\nI stand her up, spin her around. \"Knees.\" I say as I push down on her shoulders. She puts her hands out to hold my hard on. \"No hands. I want to see what it's like to fuck your mouth like this.\"\n\nNatalie moans. I step back and finish removing my clothes. I step back up and hold her head as my dick goes in her open mouth.\n\nI have to admit. This is cool. I miss not having a woman's lips wrapped around me, but this is different. It's a bit of a power trip, fucking in and out of her mouth. She can't close her mouth or resist. As I fuck her mouth she winds up backed up against the bed and now she really can't move her head.\n\nI am nice though. I remember her comment about breathing so every 30-60 seconds I pull totally out. For her to suck on a deep breath. Her chin and boobs are covered in drool.\n\nI need to stop to avoid cumming too soon. I look at the clock and realize I have about 20 minutes before her guests arrive.\n\nI pull out and she gasps for breath. I stand her up and push her on the bed. I take her wrists and pull them behind her back and clip them together. Her face and shoulders are flat on the bed. I back her up to the edge and rub my dick between her push lips.\n\n\"You are Soaked Natalie.\" I spank her ass. She yelps and moans with the ring in her mouth. \"You like this.\" I push in rather hard. She moans, grunts and drools on the bed spread.\n\nHe soft pussy feels so nice as I hold her hips and fuck her. I start having images of Karen tied down and restrained. I wonder if she would like that. I keep plowing away, when I feel that familiar tingle. I keep getting closer and closer to cumming.\n\nI pull out at damn near the last minute. I pull her shoulder over so her head is at the side of the bed and push in her mouth. Two strokes in her mouth with her tongue flicking under me and I cum. She gags some, and some drools out. I push her onto her back to keep her from rolling off the bed.\n\n\"Ezzie is she enjoying this? I want to be sure.\"\n\n\"Yes Ben. She is definitely enjoying it. She is hoping you tie her down.\" Ezzie says.\n\n\"Ezzie, if she is in any real pain or discomfort I want you to tell me and make everyone stop ok.\"\n\n\"Yes Ben.\"\n\nI reach out and unsnap the ring, pull it out, and unclip her wrists. Natalie starts moving and rolling her jaw. I half shove her, and half roll her into the middle of the bed.\n\nAs I grab her wrist and pull her arm up. \"Don't get used to it. The ring goes back in once you are tied down.\" I move around and clip her other wrist down. I pull her body down so her arms are snug, and I clip her ankles. I have to shorten the ankle straps to get her legs pulled tight.\n\nI just have her tight when the doorbell rings. \"Oh my god Ben let me up.\" She gasps.\n\nI push the ring back in her mouth. As I snap it in. \"SSShhhh. It's ok. I invited some guests for you to entertain. I promised you the fucking you won't soon forget.\" I step away pinching and pulling her nipple up and letting in pop loose as my hand pulled away. Natalie just moans.\n\nI walk downstairs and open the door. All six of them are there. \"Gentlemen, come on in.\" I say as I open the door. They walk in and look around. \"Don't worry guys, she is upstairs waiting for you. I told her she is going to be entertaining some friends. Just ground rules. Condoms are a must. Cum on her or in her mouth, and well that's pretty much it.\"\n\n\"Fuck!\" The tallest guys moans.\n\nAnother guy with a scruffy beard asks. \"Can we go upstairs?\"\n\n\"Of course, have at her, just no fighting who is first.\" I say.\n\n\"No problem.\" Tall guy says. \"We drew straws, and I won.\" He says with a smile.\"\n\nI head upstairs and they follow me. I walk in the room and Natalie moans and pulls on the restraints when she hears multiple people. All the guys see her and a chorus of \"Wows. Oh shit. and Fuck Me\". Are said by all of them.\n\nI may have said no phones for them, but I am recording this. I pull out my phone, and start recording.\n\nTall guy is wasting no time. His tee shirt is off, and he is dropping his shorts. As he drops his shorts he pulls a whole bunch of condoms out of his pocket all attached in a long strip. He rips one off, and climbs on the bed. He starts rubbing her pussy. Natalie instantly moans. \"Fuck she is really wet.\" Says tall guy. He rolls on the rubber and pushes right in her.\n\nSecond place winner, Mr Thick is heading for her mouth. I can't believe it, but he can't fit that easily in the ring. Holy shit this guy is wide. \"The gag has got to go.\" He says as he unsnaps it and pulls it off. Natalie is obviously trying to move her jaw a bit after having the ring in it. Mr Thick watches her do that for about thirty seconds when he pushes forward.\n\nNatalie opens her mouth up, and you can hear her surprise at his size as she \"Umphs and moans.\" As her mouth stretches around him. As I move around the bed recording I notice now all the guys are naked and slowly jerking, awaiting their turn.\n\nAfter a while Tall guy tells Mr Thick to switch. Tall guy is first to cum in her mouth. He has her head rolled to the side at an angle and is being a bit rough face fucking her. She just moans around him and takes it.\n\nThat is until Mr Thick starts to push onto her pussy. Then she starts some serious moaning, that turns to loud grunts almost every time we fucks into her.\n\nTall guy pulls his dock mat of the way out of Natalie's mouth. He grunts and pushes in on last time and you can hear Natalie gagging and gulping as she swallows his cum.\n\nThis is how the next two hours go. At some point her legs were untied but her arms remain restrained. She has swallowed a bunch of cum but has a lot on her face and boobs too. All the guys took a second turn, and those rounds were hard long rounds. She was grunting and groaning a lot the whole time.\n\nAt no time did Ezzie ever warn me that it was too much for Natalie. I have walked the guys out and locked the door. I come back and unclip her arms. Natalie barely moves. I take a few good pictures of her laying there covered in cum. I have never seen a pussy so red and abused looking.",
        "Just to be sure I ask Ezzie. \"Ezzie is Natalie ok?\"\n\n\"Yes Ben. She is exhausted, overwhelmed and sore, but she enjoyed it all. She is about to fall asleep.\" Ezzie says.\n\n\"Ezzie can you still influence her if she does?\" I ask.\n\n\"Yes Ben.\"\n\n\"Good. So here is what I would like you to do. Have Natalie forget she Ever had sex with me. When she thinks of me, selling this house, or buying the condo she will think I was the Best agent she ever worked with. She will think I am cute and she will remember us fucking as a fantasy. She will recommend me, and sing my praises anytime the subject of her moving etc comes up. When she wakes up she will remember meeting a young man at the supermarket and inviting him to her house. He then called his friends over.\" I tell Ezzie.\n\n\"All done Ben.\"\n\nI grab my things and leave with Natalie covered in cum asleep in her bed.\n\nThe next week Ray is excited to go see two houses up for sale on Lake Eda, about 45 minutes further up north than his current cabin. We plan to go up Friday. Both Ray & Mr B are excited to go, and have taken the day off. Karen wants to come and make a day of it. Ray & Mr B are going to stay Friday night at Ray's cabin and fish for the weekend. So Karen and I drive up behind them in my car.\n\nWe get up there and the first cabin we go to is cheaper but in rough shape. The second cabin is listed at $425,000, and is worth every penny. Almost all of the first floor is an open floor plan except the left side that is the staircase headed upstairs, a small room currently used as an office and a bathroom. Upstairs the master bedroom takes up almost the entire right half of the house with the left broken up into 2 bedrooms front & rear. It's a nice yard with a little bit of a slope. It has a nice deck off the back. The shore is a beautiful sandy shore, and it has a small dock.\n\nRay is like a little kid. He wants it. He wants to offer the asking price. He won't consider offering less. If I could get a sit down with the buyers I could lower the price with Ezzie. But to be honest. He is basically horse trading right now. He has no mortgage for his cabin and won't for this so it doesn't bother me.\n\nI came prepared with fill in the blank offers for both properties. I walk down to the shore and call Ron. I tell him Ray found a new place, and is ready to sell. He needs Ron's money to close. Ron tells me to get him the sale price, and he will have a certified check for the purchase price, and a check for the balance for Ray tomorrow on Saturday if he can come to the office and sign the paperwork.\n\nI tell Ray the news. \"Aw, we were going to go fishing.\"\n\nMr B pats his shoulder. \"Ray, sign the papers. There will be plenty of weekends to fish.\"\n\nMy next call is then to the listing broker. I tell him I have a cash offer for the asking price. His attitude perks up with that. He asks for time to call the seller and confirm.\n\nMr B suggests he buy us all lunch. We are walking back to the cars and Karen walks up to Ray. \"Or my favorite uncle that is getting a nicer cabin on a nicer lake, plus some could buy us lunch.\"\n\nRay looks at me, and then Karen. He pulls her tight against them as they walk. \"It's a good thing I like you.\"\n\nShe snuggles against him. \"Aww you love me and you know it.\"\n\nWe get to the cars, and Ray walks Karen to his car and opens the passenger door. \"Hop in niece. We haven't talked in a long time. Your Dad can go with his accountant.\"\n\n\"Ezzie, what is Ray thinking?\" I ask.\n\n\"He wants to talk to Karen about you and see how serious she is.\"\n\nOh fuck! \"Ezzie did Mr B tell Ray about our conversation about me marrying Karen?\"\n\n\"No Ben. He has talked to No one but Mrs B.\" Says Ezzie.\n\nRay, what are you up to I think.\n\nEzzie replies. \"Ben, I don't think he is up to anything. I think he is just curious how serious Karen is about you.\"\n\nI sigh. \"Thank you Ezzie.\"\n\nWe get in the car and start to follow Ray & Karen. Mr B looks at me. \"Ben, I can see the worry on your face. Mrs B and I told no one. Well outside of her and your Mom screaming and crying on the phone that night. I certainly didn't tell Ray.\"\n\nI try to relax. \" I didn't think you did, it's just odd.\"\n\n\"Ben, he has loved her since she was a baby. He would hold her and rock her to sleep if he was over. He would have tea parties with her as a little girl. I know he has been a little gruff with you, but he loves my little girl. They have a special bond. I think he will ease up once he realizes how serious she is. It will be ok I promise you.\" He says.\n\n\"I trust you Mr B....\" I start to say but, when his hand lands on my shoulder.\n\n\"Then trust me Ben. Take a breath and relax.\" He says.\n\nI blow out a breath. \"Yes sir.\"\n\nAbout 20 minutes later Ray pulls into a restaurant parking lot. We all get out and Karen gets out and walks around to give Ray a big hug. She turns and comes to me and hugs me. I notice her eyes are red. Mr B smiles at me, \"Come on Ray, let's get a table.\" He and Ray walk in leaving me holding Karen.\n\nI rub her back. \"Sweetie, are you ok?\"\n\nShe sniffles. \"Uncle Ray wanted to know how serious we were. Am I sure this isn't just a friendship getting a little romantic over the summer. I yelled at him for saying that.\"\n\nI pull her back against me and hold her. \"It's ok Sweetie. I have you.\"\n\nShe looks back up at me. \"I told him I want to marry you. He then got real soft. He looked at me for a moment. Then with teary eyes and said Ok then. He then just softly held my hand until we got here.\"\n\nHalfway through lunch I get a call. I step away. Since we are cash and want a fast closing the selling broker offers $10,000 back at closing for Ray to throw out what he doesn't want. The owner is deceased and the family doesn't want to, or have time to do it so quick.\n\nI explain the offer to Ray and he jumps at it. To be honest the furniture is nicer than what he currently has. I call Ron and arrange for me and Ray to meet him at the office to sign papers on his cabin.\n\nRon is good with Ray the next day. Everything is signed and Ray has the certified check to buy the new place with, and an extra $25,000 for his troubles.\n\nRay has the next two weeks to clear out anything he wants from the old place. Ron plans on demolishing both cabins. He doesn't care what Ray leaves behind. As soon as Ray is out, he already has a demo crew ready to go.\n\nRay makes a few trips with a pickup, and has anything he wants out of the old, and is in the new place two weeks before Labor Day.\n\nRay plans on christening the new place with a Labor Day party.\n\nThe next week goes smoothly. Beth & Karen start planning to meet at a Six Flags about 2 hours away. Beth wants us to meet the new boyfriend. It's the weekend after I close on Natalie's house and condo. I decide since I have given up the cabin for Labor Day. I want to make it a weekend away. While Karen and I are talking I look up hotels. I find a nice one nearby the park and book two rooms.\n\nI look at her. I just made it a two night weekend for us. Now you are going to wear the special lingerie I bought you and haven't seen. Karen hugs me tight. \"I love you.\" She says as she hugs me.\n\nShe picks up the phone and calls Beth. The two of them start squealing. \"OK. Wait a minute.\" Says Karen. She holds the phone out and a moment later a FaceTime call comes in. I see Beth sitting next to a guy.\n\nI hear Beth's voice. \"Hi Guys!\" She says very excitedly. \"Ben & Karen, I want you to meet BJ.\"\n\nI waive, smile and say Hi. The girls start giggling. \"What the hell is so funny you two?\" They laugh again until Karen speaks up. \"Beth found her Ben too. BJ is Benjamin James.\"\n\nBJ raises his hand. \"Guilty. I am a Jr so growing up Dad was Ben and I became BJ, and it stuck.\"\n\n\"Good to meet you BJ.\" I say. I start to then explain the hotel I booked. I can see BJ isn't all that comfortable having me pay for it, but insists he buy us all dinner Friday night. He also mentions with a work thing he got passes so no need to buy tickets.\n\nRays closing happened last week it was a nice little check of $10,625. This morning I woke up to find the checks for Natalie's closing cleared.\n\nI am looking at my bank balance. I am speechless. $87,500 for selling Natalie's place. $65,000 for the Warren's. $10,265 for Ray's cabin, plus what I had already saved. I am a few hundred shy of $175,000. HOLY SHIT!!\n\nMy Mom screaming my name from her room wakes me up if you will. I go running into her room. The local morning show is on with Natalie. My Mother is super excited. \"Listen! Listen!\" She says as she rewinds.\n\nNatalie's co-host is asking her how packing is going for her move. They are obviously killing time at the end of the show. Natalie goes on to say it was so easy to sell her old place and find a new one Thanks to Ben at Gold Star. If any viewers need a realtor they should call or email me, and she says my Gold Star email on the air. I was the best realtor she has ever used in her life. She keeps going but my phone rings.\n\nI run back to my room for my phone. It's Ron. He is laughing to kill himself. \"I don't know what you did for Natalie kid, but this is pure gold. I couldn't have made a commercial that good.\"\n\n\"Ron, I didn't ask her to do that.\" I tell him.\n\n\"That's the best part Ben. I can't believe not only did she name you, but gave out your email too. Be prepared to get bombed on emails.\" Says Ron.\n\n\"Oh shit.\" I mutter.\n\nRon laughs. \"That about sums it up. If you get anything that looks promising, talk to me before calling anyone back. You are going to get a lot of crap too. We want to make sure you work the right stuff.\"\n\n\"Ok Ron I will call you Monday.\" I say.\n\nI hang up and my Mom is hugging me. \"I am so proud of you.\"\n\nMy phone rings again. It's Karen. My Mom gives me a goofy smile. \"Well answer it and talk to her.\" She says as she walks out of the room.\n\n\"OH MY GOD BEN DID YOU SEE NATALIE BELL ON TV?\" she basically screams into the phone.\n\nI laugh. \"Yes my Mom had the same reaction, and Ron has already called me.\"\n\nKaren keeps going, talking fast and loud. \"Karen. Karen. KAREN!\" I finally have to raise my voice.\n\n\"I am sorry. I am just so excited. What Ben?\" She asks.\n\n\"Karen, I have to pack, and shower so I can pick you up as planned. We have a really long drive ahead of us. Can we be excited then?\" I ask.\n\n\"I suppose.\" She laughs. \"I love you.\"\n\n\"I love you too. See you soon.\" I say.\n\nI hang up and head to the shower. A short while later we are on the road. About an hour into the trip is the standard restroom stop for Karen.\n\nWe get back on the highway and Karen starts rubbing my thigh. \"So are you looking forward to this weekend?\"\n\nI turn and look at her. \"I am looking forward to finally seeing you in the mystery lingerie.\"\n\nShe squeezes my thigh. \"You know I love the way you look at me when I am in something sexy for you.\"\n\n\"I can't help it sometimes. I see you in lingerie or a string bikini and I just want to take you.\" I say.\n\n\"I like making you look at me like that.\" She says as she unbuckles her seatbelt and reaches into the backseat.\n\nI reach out and pat her ass. \"What are you doing?\"\n\nI was going to do this in the hotel, but..\". She giggles. \"At the hotel you could join me. In the car all you can do is watch.\" She sits back down. She holds up a vibrator. \"I bought a new toy to put on a show for you. It cost a few bucks, but it does everything. It vibrates, thrusts and gets warm.\" She hits a button and it starts flashing. She puts it down and peels off her shorts and panties. She slumps in the seat and spreads her legs. She picks up the toy. \"Oh wow.\" She says as she touches it to my arm.\n\nHoly crap that's warm. She takes it and starts to rub it on her pussy. I take a hand from the wheel and reach for her thigh. She pushes my hand away. \"Nope. Both hands on the wheel or I stop.\"\n\n\"Oh come on.\" I whine. \"You want to tease me again?\"\n\nKaren smiles. \"I like getting you worked up. It works me up. I want you to watch me.\"\n\nFuck I wish I had a new car that would drive itself on the highway. I look at the road and hear a buzzing. I look back and the toy is vibrating against her clit. Her pussy is wet and she is softly moaning as she rubs it against her clit.\n\nShe looks up at me. \"I haven't used this yet. I wanted to have you watch me for the first time.\" She giggles as I swerve a bit. \"Watch the road. Don't get us in an accident.\"\n\nShe rubs it up and down her lips and then pushes it in. \"Oh wow. This is nice.\" She slowly pushes it in and out about a third of the way. She then pushes the final button. The tone of the toy changes and she yelps.\n\n\"Oh wow. Oh god. Oohh that's nice.\" She pushes it in a little deeper.\n\nOh shit this is so unfair. I see an old rest area. I cut across two lanes to get to it and pull in. I pull to the furthest spot and park.\n\nKaren gives me a smile. \"I knew I could get you to pull over.\"\n\nI get out and open her door. I pull her out and push her over so her hands are on the seat, yank my shorts down and push myself into her wet pussy. I hold onto her hips and fuck her hard. She is gasping as I fuck her. \"This is what you get for teasing me.\"\n\nShe looks over her shoulder with an innocent look. \"Was I a bad girl teasing you.\"\n\nI think of Natalie's paddle. I reach down and spank Karen's ass cheek. She yelps again. \"I am going to get spanked now for being a tease?\"\n\nWhere is this coming from. \"Ezzie, does Karen like me spanking her?\"\n\n\"She doesn't want you to hurt her, but she is liking it.\"\n\n\"Right now no. Maybe back at the hotel I will put you over my knee and spank you. Right now I am fucking you and cumming in you.\" I say\n\nShe looks back over her shoulder at me. \"Please, not in me.\"\n\nI get a tad distracted from my fucking. I don't want to have a conversation. \"Why not?\" I ask.\n\nShe reaches back and holds my hand. \"Please Ben. There are no wipes in the car. I will be sitting in a mess.\"\n\nI smile. \"I kind of like the idea of that. My cum staying inside you.\"\n\nShe holds my hand tight. \"I do to Ben, just not for an hour-long car ride.\"\n\nI fuck her a little harder. \"I will give you a choice of punishments. I cum inside you and you sit in a mess, or I cum in your mouth and I spank you at the hotel?\"\n\nShe gives me a big smile. \"Tell me when to turn around.\"\n\nGod just hearing her say that got me closer to cumming. I have a good hold on her hips. I am fucking into her hard, and pulling her to me. Our body's are slapping together and she is gasping and moaning as I fuck her. I am watching her ass cheeks ripple as I slam into her, and I think of fucking her ass after spanking her.\n\nThat's it. I am done. \"Karen.\" I grunt out as I spin her around by her hips. Her ass lands on the edge of the car seat, and I pull her head forward. She opens up and sucks my head in her mouth and just moans. She is just holding me in her mouth. I start to fuck her mouth a bit. I take about 30 seconds of this while holding her head. I groan and cum in her mouth. Four good hard shots. She takes it all and moans.\n\nI lean against the roof of the car as Karen pops her mouth off me to kiss and lick me as I relax. She pulls up my pants and tucks me in.\n\nI crouch down and kiss her. We kiss passionately for a moment. I break the kiss and stare into her eyes. \"I Love You!\"\n\nShe hugs me. \"I Love You too.\"\n\nI softly whisper in her ear. \"I am still spanking you later at the hotel.\"\n\nShe kisses my neck. \"I can't wait.\"\n\nI lift her legs, swing them back into the car and close the door. I walk around and get in the car. I sit back and sigh. \"Now I know why they make self-driving cars.\" I say.\n\nWe both laugh as I pull back on the highway. Karen hasn't moved since I closed the door on her. She is half curled up on the seat relaxing with her shorts still on the floor.\n\nHer FaceTime rings and she answers it without thinking. It's Beth. I hear Beth laugh. \"Karen, you have no pants on.\"\n\nKaren tilts the camera up and laughs. \"Sorry. We pulled over at a rest stop.\" Karen says, still laughing.\n\nI hear BJ's voice. \"Oh god TMI!\"\n\nI yell back. \"You're just jealous!\"\n\nHe laughs \"Maybe a little.\"\n\nThe girls chat a bit more and then end the call. We are both set to arrive per GPS within 5 minutes of each other.\n\nAbout 30 minutes later FaceTime rings again. Karen answers it and starts laughing. \"You go girl.\" She yells.\n\nI glance at the screen. I see Beth's bare legs and hips. I smile and shake my head. The girls chat again for about 5 minutes, and hang up again.\n\nAs we near the exit Karen finally reaches down and puts on her shorts. We walk in and check into the two rooms since they are both under my name. We collect both sets of keys and head up to the rooms.\n\nThey are two identical rooms and there is an adjoining door to go from room to room. We take the bags into the room. I scoop up Karen from behind and drop her on the bed. She screams out in surprise as I fall on top of her. We roll on the bed hugging and kissing.\n\nShe winds up sitting up on top of me. I reach up under her shirt, I push her bra up and play with her nipples. She smiles at me and softly moans, holding her hands over mine.\n\nShe reaches down and pulls her shirt off. She reaches behind her and unhooks her bra letting it fall off to the side. I nudge her down my legs and sit up with my arms wrapped around her. She runs her fingers through my hair as I bend down and suck on one, and then the other nipple. Back and forth I go licking, sucking and biting her nipples.\n\nShe has her head bent down as she moans and kisses the top of my head. I roll her off me and roll on top of her. She lands face down and I hold her there. I rub her shoulders and back. I then start at the nape of her neck and kiss my way down her back to her shorts. I pull the shorts over her bum and down her thighs.\n\nI start kissing and nibbling on her ass cheeks. This makes her Yelp when I nip a little hard, and then giggle. Until I spread her cheeks and lick her asshole. \"Oh Ben.\" She sighs\n\nAnd then there is a knock on the door. Fuck! I hop up off the bed. I turn and watch Karen pull up her shorts and put on her bra and shirt.\n\nI have to wait just a moment. I open the door and Beth grabs me in a hug. She smiles at me. \"Ben meet my Ben, BJ.\"\n\nI reach out and shake his hand. As Beth slips by me to hug Karen I hand him his key and point next door. I step out and help him drag the bags in.\n\nWe are in the room and I point to the adjoining door. I open his, and look at him. \"I don't know if this is a good thing for them or a bad thing for us?\"\n\n\"Only time will tell.\" He laughs.\n\nI knock on the door in my room. Karen answers smiling. \"Honey, you are home.\"\n\nShe walks past me and hugs BJ. \"Hey?\"\n\nBeth says. \"Oh poor baby.\" And hugs me.\n\nThe girls swap places. I look at BJ. \"We are in so much trouble.\"\n\n\"I think so.\" He sighs.\n\nBJ and I sit on the small sofa and arm chair as the girls jump on the bed together sitting side by side. We talk for a while. BJ doesn't seem like a bad guy. He graduated last May, and turned an internship into a full time financial analyst for a large brokerage firm. So we can talk shop easily enough. At one point I see him just staring at Beth as she talks.\n\n\"Ezzie, what is he thinking?\" I ask.\n\n\"He is wondering how he got so lucky. His last girlfriend was money money money. Spend money on her, or give money to her. Beth has never asked him for a dime or even hinted at it. He thinks she is beautiful.\" Says Ezzie.\n\n\"Good to know. Thank you Ezzie.\"\n\nBeth jumps up and runs into the other room. \"One minute.\" She says.\n\nI look at BJ and he seems clueless. Beth comes back flashing a bottle of flavored booze. The girls start laughing. \"Oh my god No!\" Laughs Karen.\n\nBJ and I are still clueless. \"What is so funny about the booze?\"\n\n\"We got so drunk on a larger bottle of this stuff one night. We stayed up all night drinking and singing with the radio.\" Beth says as she walks to Karen opening the bottle.",
        "Karen takes the bottle. \"Screw it.\" She says before taking a real big swig. Beth takes it back and does the same thing.\n\nBJ looks at me. \"Remember your question about good or bad earlier?\"\n\nI smile at him. \"Yup.\"\n\n\"I am thinking both right now.\" He says. Now it's our turn to laugh.\n\nKaren looks over. \"Do you two think it's a good idea to laugh at us and risk being shut off for the weekend?\"\n\nBJ and I stop laughing. That just makes us all laugh. We finally decide to get semi dressed, (nice shorts and a polo) for the dinner reservations BJ made.\n\nHe has a pickup with a full backseat. He drives with the girls in back. It's a nicer bar and grill type place. Options are limited in the general area. We sit on the lounge side and the women immediately pick up the drink menu.\n\nDinner is great. Lots of drinks and food. The girls split a desert and by the time we leave they are both very happy from all the booze.\n\nWe get back to the room and the girls take another swig from the bottle they opened earlier. They seem to look at each other and then nod. Karen grabs her overnight bag, and they head for BJ & Beth's room. Karen looks at us. \"You two sit over there.\" She points to the couch area. \"We have a surprise we want to show you. Don't move.\" They walk in the other room.\n\nBJ looks at me confused. \"Ezzie I won't ask, but am I going to like this surprise?\"\n\n\"Oh I am sure you will Ben.\" She says.\n\nOk I can wait a moment. A moment turns into about three and then the door opens. The two of them step into the room in damn near sheer white lace babydolls, with tiny white thongs under them.\n\n\"Wow!\" Is all BJ or I can say. They are gorgeous.\n\nBoth women spin and model the lingerie for us and come over and sit on our laps. I wrap my arm around Karen and pull her into a kiss.\n\nKaren breaks the kiss and looks at Beth. They exchange a look. I start to speak, but Karen puts her finger to my lips. \"Ssshhh.\" She says and she looks at Beth.\n\nBeth looks at BJ. \"Remember last week I told you how Karen and Ben helped cheer me up over the 4th?\"\n\n\"Yeah.\" He answers.\n\n\"I was honest with you. I told you she wanted to cheer me up. She and I had sex, and we had a threesome with Ben.\" She says.\n\nBJ looks over and sees my face. \"We are good Ben.\" He says as he turns to Beth. \"Yes Honey I remember I got really turned on and we rolled over and did it again.\"\n\nBeth giggles. \"Yes we did. Karen said something to me that weekend that stuck in my head. It was so kind and thoughtful. She told me she knew I was in a funk and needed a man. She wanted to help me by sharing Ben.\"\n\nBJ looks over again. I just try to give him an innocent smile.\n\nBeth continues. \"Now I want to help Karen.\"\n\nI look at Karen. Help Karen? What does she need help with? \"Ezzie, What's going on here?\"\n\n\"Karen is about to tell you Ben.\" Says Ezzie.\n\n\"Now Karen needs a man and I want to share you with her.\" Beth says.\n\nKaren keeps her finger on my lips for me to be quiet. I am totally confused. \"Ben, you know Beth and I are like sisters. We tell each other everything. I kind of told Beth when we talked about a threesome with a guy. She suggested maybe instead we swap boyfriends for a night and watch one another.\"\n\nI sit there dumbfounded. I can't even form the words. \"Ezzie, does Karen want to do this, or is she doing it for me?\"\n\n\"Both Ben. She loves you and will try anything for you, but Beth made her look at it differently. Karen really enjoyed watching you and Beth together. Until Beth asked her if she enjoyed watching you and Beth she didn't fully understand you wanting to watch her. Now she is very nervous and excited.\" Ezzie says.\n\n\"Ezzie please make sure Karen knows I love her like I have never loved a woman before.\"\n\nKaren hugs me tight and whispers in my ear. \"You know I love you, right?\"\n\n\"Karen I swear my heart skipped a beat hearing you say that.\" I say. She just hugs me tighter to her.\n\nBeth stands up and pulls Karen to her feet. Beth looks at the two of us guys. We are both sitting here dumb struck. \"You two think about it.\" Beth pulls Karen into a passionate kiss. They stand there kissing over and over again so all you hear is constant smooching. Karen reaches down to squeeze Beth's ass cheeks and Beth runs her hands over Karen's tits.\n\nThey break the kiss and They both look at us. \"You guys look overdressed.\" Karen says.\n\nBJ and I look at each other, smile and shrug. \"What the hell.\" He says.\n\n\"Why not.\" I say. We both get up and pull off our shirts and shorts.\n\nBeth has a huge grin. \"Sit down boys.\" Beth looks at Karen. \"Sweetie you are just a little overdressed?\"\n\nBeth crouches in front of Karen and pulls down her tiny thong. She lifts up the hem of Karen's baby doll and kisses Karen's pussy. She stands up and kisses Karen. \"Do you like the way you taste?\" Beth asks.\n\nOh I know Karen doesn't think her own juices taste good. Ezzie told me that the first time I went down on her.\n\n\"Eh. It's me.\" Karen smiles at me. \"I know Ben loves it.\"\n\nI speak up. \"I sure do. I could eat you for Breakfast, Lunch & Dinner.\"\n\nBeth looks at Karen. \"Don't move.\" She says with an attitude. Beth crouches back down and gets another taste.\n\nBeth steps over, climbs onto BJ's lap and gives him a deep kiss. She breaks the kiss and stands up. \"How do you think Karen tastes?\"\n\nBJ licks his lips. \"Very tasty.\"\n\nBeth stands back in front of Karen. \"You are out voted 3 to 1. You taste delicious.\"\n\nKaren hugs Beth. She then couches down like Beth did and pulls down Beth's thong. Karen does Beth one better. She grabs Beth's ass and holds Beth to her as she kisses and licks her pussy. Beth moans and holds Karen's head to her.\n\nI hear BJ beside me just mutter \"Oh shit.\"\n\nBeth is getting worked up fast, and Karen stands up. \"Oh you tease.\" Beth sighs.\n\nKaren walks to BJ. She stares at me and mouths to me. \"I Love You!\"\n\nShe sits in BJ's lap and kisses him. She stands up. Smiles at him and asks. \"How does Beth taste?\"\n\n\"You both have the sweetest tasting nectar I have ever tasted.\" He says.\n\nBeth walks up behind Karen and wraps her arms around her holding and teasing Karen's nipples. Beth leans over and whispers in Karen's ear. Karen looks at me. I can tell she is a tick nervous.\n\n\"Ezzie, is everything ok with Karen?\"\n\n\"Beth is asking her if she wants to blow BJ while Beth blows you. Karen is a little nervous to take that last step. She wants to do it, but is afraid there is a part of you that doesn't want her doing it. She is remembering what you said to her about Joe.\" Ezzie says.\n\n\"Ezzie, are you sure she is ok doing this? She isn't feeling like she has to or pressured?\"\n\n\"No Ben she isn't.\"\n\n\"Ezzie, please make Karen understands I love her. How much she turns me on, and how excited I am to watch her.\"\n\nI can see Karen's look change. She turns to Beth and smiles as she twists back and kisses Beth again. Karen takes Beth's hands in hers and pulls them away from her nipples. She pulls Beth to the side and nudges her towards me.\n\nI watch as if in slow motion Karen kneels between BJs legs. She kisses his thighs and stomach. She looks up and sees me watching her. While looking at me she reaches out and wraps her hand around BJ's hardon.\n\nI hate to say I am comparing, but for the first time I am really looking at his dick. If I had to call it he might be a tick longer, but I am a tick thicker. He has that average looking flared head where mine is more sloped like to tip of a rocket.\n\nShe strokes him up and down a few times as we just look at each other. She then bends down and takes him in her mouth keeping eye contact with me the whole time. Oh good god this is hot.\n\nI suddenly realize I am watching Karen. BJ is staring down at Karen. I turn and look. Beth is between my legs, just rubbing my thighs. I never realized it. \"Enjoying the show?\" She asks.\n\nI just nod. \"Good.\" She turns to BJ and whistles softly. He looks up and is a tad embarrassed. Beth giggles. \"Is Karen giving you a good bj, BJ?\"\n\nHe sighs. \"Yes she is. You ladies are both very talented.\"\n\n\"Do you want to watch me blow Ben?\" Beth asks as she is now stroking me.\n\nAs Karen makes some extra slurping sound, BJ sighs again. \"Yes I want to watch you.\"\n\nBeth smiles at BJ as she holds me at the base in her hand, and points me towards her mouth. She opens her mouth wide and sticks her tongue out. She lays my dick on her tongue and slides me into her mouth.\n\nI swear my eyes cross as she sucks me in. I hear Karen's voice and look over to her. She is smiling at me and stroking BJ. \"Does that feel good Ben? Is Beth doing a good job?\"\n\n\"God you are both so good at it.\" I say.\n\nBJ adds. \"Yes they are.\"\n\nKaren looks at BJ. \"You are so sweet.\" She bends down and sucks him back into her mouth.\n\nI sit back and enjoy having Beth blow me and watching Karen. I want more. \"BJ, I don't know about you, but I want the fuck one of these beautiful ladies.\"\n\nHe laughs. \"I was thinking the same thing. I was wondering how to say it.\"\n\nKaren stands up and reaches to pull Beth up. With a big smile she says to Beth. \"I guess our mouths weren't good enough for them.\"\n\nBeth takes Karen's hand and walks her over to the bed. Beth pulls off her baby doll and climbs on the bed. \"I don't know why Karen. I love your mouth.\"\n\n\"I love yours too.\" Says Karen as she pulls her baby doll off and follows Beth onto the bed. As she crawls over Beth to 69. \"Let's show them how much we love each other's mouths.\"\n\nAs Karen lowers her hips for Beth to lick her, Karen is already licking Beth's clit. Ben and I get up to get a closer view of the show.\n\nI kneel on the floor close to Karen's head. BJ goes to the other side of the bed near Beth. Karen smiles at me. \"Hi Honey!\"\n\n\"Hi.\" Is all I can say as I am watching her.\n\n\"Are you having fun?\" Karen asks.\n\n\"God you are sexy.\" I say\n\nKaren giggles between licks. \"Is that because....Lick... you watched me blow another man... Lick..., or because I am going down on a woman as we speak? Lick.\n\n\"Yes.\" I say with a smile.\n\n\"Would you like another big surprise?\" Karen asks.\n\nWhat? There is more? Really? I nod my head yes. Karen looks over at the backpack that again has the toys and lube in it. She looks at me and smiles as she softly whispers. \"Get me the lube.\"\n\nI smile and reach behind me. I pull out the lube. Karen holds out two fingers to me. I squeeze some lube onto them. \"Spread her ass.\" She whispers.\n\nI reach out and pull her cheeks apart. I watch as she pushes two fingers into Beth's ass. Beth gasps. \"Karen?\" Karen ignores Beth and pushes her fingers into the second knuckle. Beth moans out. \"Why are you fingering my bum Karen?\"\n\nI hear BJ. \"Really.\" He comes around and sees Karen's fingers slipping in and out of Beth's ass.\n\nKaren is looking up at both of us watching. \"Because you said you wanted to try it.\"\n\nBeth starts. \"I never said I wanted.....\" she stops for a moment. \"Oh no Karen. I didn't mean now.\"\n\n\"This is all your idea to help me do something for Ben. Now I want to do something for you.\" Karen says as she looks at BJ and I. \"Boys Beth told me she was curious what it would feel like to have a man in her vagina and bum at the same time.\"\n\nOh shit. Really? Oh wow.\n\nBJ walks back to Beth's face. \"You really want to try that?\" I can hear Beth's response, but I hear BJ. \"Of course we will be slow and easy. Right Ben?\"\n\nI rub Beth's thigh. \"Oh course.\"\n\nKaren rolls off Beth. She crawls up the bed, and pats it beside her. \"Ben lay next to me.\" I stretch out as instructed. \"Beth climb on Ben. Let BJ watch as you fuck another man.\"\n\nBeth looks at her with an odd face. \"Ezzie, does Beth really want this?\"\n\n\"She is very curious, but very nervous.\" Says Ezzie.\n\n\"Ezzie let her remain nervous, but let her curiosity win out. Have her come get on top of me.\"\n\nBefore Ezzie can tell me she did it Beth is straddling me. Karen holds and guides me into Beth. I feel Beth's tight heat envelope me, and I moan.\n\nKaren sits up and moves down the bed. I hear Beth moan just a fraction of a second before I feel Karen's fingers in Beth's ass.\n\nI pull Beth down into a hug. I whisper in her neck. \"Ssshhh. It's all right. I promise we will be very gentle.\" I can feel her heart hammering in her chest. I just hold her to me and rub her back. I try to relax her. \"So two couples go out to dinner. The women get a little drunk. Guess what happens next?\"\n\nShe giggles a little nervously. \"Shut up you dummy.\"\n\nI rub her back softly as Karen's fingers slide in and out. I talk to Beth softly. \"You know I like BJ. He seems like a nice guy. I guess he recognized your beauty inside and out too?\"\n\n\"That's the problem. Your inside me, Karen's fingers are inside me and in a minute BJ and you will be inside me. It's about to get real crowded inside me.\" Beth moans.\n\nJust then I feel Karen's fingers pull out. I can feel Beth's anxiety notch up. I hear Karen talking to BJ. \"Yes, she told me. We tell each other everything. Nice and slow, in fact slower than the first time you put it in her bum.\"\n\nBeth's breath catches and I feel something pop in her. I am guessing he stopped after his head popped in. BJ talks to Beth. \"Honey, are you ok?\"\n\nBeth moans. \"Push in a little more.\"\n\nI feel the something move and I realize it's BJ pushing in. Beth gasps out again and BJ stops. \"Oh my god. I am so full. So stretched. Oh wow.\"\n\nShe isn't complaining. I am guessing BJ thought the same thing. I feel him pull out a little and push back in. Next thing I know Karen is beside me and Beth. \"Honey, are you ok?\" Karen asks.\n\nBeth finally picks up her face from my neck. \"Oh my god Karen. It's fffuuullllll.\"\n\nBJ must have pushed all the way in. I feel him pull back out and back in. Beth's eyes go wide. Still looking at Karen. \"Oh god you so have to try this. I have never felt so full. I keep saying full. I don't know what else to say.\"\n\nI try giving Beth little humps up. She turns and looks at me. \"Oh yeah. That's nice.\"\n\nBJ and I look at each other and try to match offsetting strokes. It's somewhat successful. We try that for a little bit. Beth has put her head back down against me softly and grunting as we go. Until Karen pushes her hand between me and Beth. I can feel her rubbing Beth's clit.\n\nBeth starts panting and trying hump between us. She grunts/moans and orgasms collapsing on me. I can't feel her spasm a little but not much. I am not sure if it's because she has two dicks in her or if it was just a little orgasm. \"I can't. I can't.\" She pants. \"Please BJ.\"\n\nI feel BJ pull out, and Beth rolls off me. She lands on the bed smiling and holding a hand on her ass and pussy. BJ looks at me and points to Beth. I get up so he can lay beside her.\n\nI can hear them softly talking to each other. I grab Karen and kiss her. \"I Love You.\" I say.\n\nShe smiles and pulls me in for another kiss without answering me. After we kiss I just hold her to me for a moment until Beth speaks up. \"Karen, I need your help.\"\n\nKaren looks at Beth. \"Sure Honey, what?\"\n\nBeth smiles. \"I need a little bit, and BJ hasn't cum yet. Climb aboard and finish what you started with your mouth.\"\n\nKaren's eyes are a little wide. I smile at her. \"She isn't wrong.\" I say as I slap her ass. \"Get over there.\"\n\nKaren smiles as she climbs on the bed. Beth is holding BJs hard on straight up in the air. Karen moves herself over it and sits with a sigh and moan.\n\nBJ moans out. \"Oh wow.\" Karen starts rocking back and forth. Beth grabs her thigh. \"BJ likes me bouncing on him. Bounce on him Karen. Let me watch you make him cum.\"\n\nKaren groans as she starts bouncing up and down. Jesus this is hotter than I thought it would be. After a few minutes Karen's legs need a rest. She drops down and starts rocking on BJ.\n\nBeth pulls Karen down to BJ so her tits are in his face. \"BJ, she likes her nipples played with hard. She likes it harder than me.\"\n\nHis mouth clamps down on one of Karen's nipples, and she lets out a deep moan. Beth is directing all the action. She hops up and crawls down the bed. She points at the lube and motions me to give it to her.\n\nShe lubes two fingers and pushes them into Karen's ass. \"OH Fuck!\" Groans Karen. She looks back at Beth. \"Oh no.\"\n\n\"Oh yes Honey.\" She giggles. \"I did it now you have to. You know you like it rough. You told me you let Ben fuck your ass hard. Well these two fine young men need to cum, and they are both cumming in you.\"\n\nKaren drops her head in defeat. Beth it's pushing her fingers in and out of Karen's ass as she waves me forward. She squeezes lubes into Karen's partially open asshole, lubes up my hard on and lines me up. I get the head in with a moan out of Karen, when Beth shoves on the small of my back forcing me all the way into Karen.\n\nKaren yells out \"FUCK!\" and looks back. Beth smiles. \"Come on. You know you like it. That was just a surprise.\"\n\nKaren glares at Beth. \"I hate you.\"\n\nBeth giggles. \"No you don't, you love me.\" Beth slaps my ass. \"Come on Ben. She told me you really gave it to her one time, and she felt it the next day. Fuck that ass.\"\n\nI look up at Karen. She smiles at me and nods. I pull back about halfway and push back in. Karen moans into BJs neck. She is bent over on him like Beth was on me. I push back in, and I feel BJ moving inside Karen. We are trying to set up a rhythm. I am going a little harder on Karen. I know she likes it a little rougher sometimes.\n\nBeth crawls up alongside Karen and BJ. \"Do you like it Karen? Isn't it really full like I told you?\"\n\n\"Oh god. Just shut up and let them fuck me.\" She moans.\n\nBeth reaches between BJ and Karen to rub her clit with one hand, and with the other she rubs BJ's balls. Beth starts talking to BJ. \"Come on Baby. Fuck Karen. Cum inside of her. Fill her with your cum and I will let you watch while I lick it out of her.\"\n\nThat's all BJ needed. A few strokes later he is grunting and cumming in Karen. Between that and Beth's fingers on her clit, Karen orgasms and moans. I can feel Karen's ass squeeze me as she cums. \"Please.\" Karen moans. \"Cum for me Honey. Cum in my ass please.\" She begs. \"Please I can't stay like this.\"\n\nI hold her hips push in a little harder, once, twice...AAAHHHH. I cum in her ass. No sooner do I finish cumming and Beth is beside me pushing on my chest. \"You heard my girl. Out you go.\" Beth pushes me back onto the bed and I pop out Karen's ass. She holds Karen's hips and rolls her off BJ. Karen lays back and Beth speaks up to BJ. \"Are you watching me?\"\n\nBeth pushes her face into Karen and starts licking her clean. Karen just lays back and moans. I don't think Karen could have taken Beth trying to make her cum. She was putting on a show for BJ. After that we sort of couple back up. I lay there holding Karen, and BJ holding Beth. After a while BJ and Beth head back to their room for the night. I spoon against Karen and pull the covers over us. We are both asleep in no time.\n\nThe next day is a lot of fun. We are all ok with each other and what happened last night. Today we are just having fun. We enjoy the rides, eat too much junk, take pictures of ourselves, buy the photos they take on the ride, and we spend a ton of time in the wave pool. Before we know it the sun is getting low, it's getting late and we are all hungry.\n\nWe stop at a busy place for a burger and drinks. We get back to the hotel, and we all agree we are tired. We are going to retreat to our own rooms, and we will meet for breakfast in the AM.\n\nKaren and I are getting ready for bed. I see her take a bag with her in the bathroom, but don't put two and two together until Karen steps out of the bathroom. \"Oh Wow!\" Is all I manage to get out. Karen is in a lilac, long gown type lingerie. It loops around her neck. The straps form a small bra cup that flows down to her waist as two seperate pieces showing cleavage almost to her belly button. It flares out a little more than halfway down the stomach to form the skirt. It's a long silky gown bottom that is slit all the way up to her hips.",
        "I get up and walk to her. \"You look beautiful!\" I bend down and give her a loving kiss. \"Is this the one from the mall you have been hiding from me?\" She just nods her head yes. \"My god it's gorgeous! You are gorgeous!\"\n\nKaren puts her hand behind my head and pulls me down and kisses me. \"Take me to bed and make love to me.\" She says so softly.\n\nWithout a thought I pull Ezzie off my finger. I grab Karen's \"wrong\" hand and slip it on her middle finger. \"For tonight you are mine and I am yours.\" I say.\n\nHer eyes get teary and she pulls me down to kiss me again. She pulls back and grabs my tee shirt trying to pull it over my head. I bend over and she pulls it off. She puts her hand on my chest and starts backing me up to the bed. When I get to it she crouches down and pulls my shorts down. She holds my shorts and taps my leg for me to step out of them.\n\nShe pulls up the gown a bit so she can kneel in front of me. She runs her hands up my thighs. One hand rubs my balls softly, while the other strokes me. She looks up at me and holds my shaft as she licks from the bottom to the top. She kisses the head and then opens her mouth and sucks \u2153 of me in her mouth.\n\nThe entire time she is looking up at me. I can only describe what she is doing as making love to me with her mouth. It is soft and gentle, she is always licking, sucking, kissing or stroking me somehow. It has to be five minutes of this soft loving blowjob. I am hard as steel.\n\nI reach down and grab her wrist. I gently pull her up. I kiss her and whisper in her ear. \"My turn.\" I nudge her towards the bed. She pulls up her gown and lays back.\n\nI start at her knees. I kiss one side and then the other slowly moving up. I kiss all around her pussy. She softly moans and runs her fingers through my hair. I lick between her lips, but avoid her clit. She lets out a disappointing moan when I stop short of her clit a second time.\n\nI reach out and spread her lips open with my thumbs. Her lips are moist from me licking her, and her juices seeping out of her. I lick from the bottom, up and into her, then back out and finally licking her clit. Once I land on her clit I stay there kissing, licking and sucking on her as gently as she was with me.\n\nWhen I hit the right spot her hips jerk just a tad. Her soft moaning changes to soft pleasing. \"Please. Please.\"\n\nI kiss her soft skin above her pussy. \"Please what Karen?\"\n\nHer hands push on my head. \"Please don't stop.\"\n\nI smile and let myself be pushed back down. She holds my head when I get to her clit. I don't need Ezzie telling me what she wants. I get a little firmer as I lick and suck on her clit.\n\nHer panting gets louder and faster. Her hands go from holding my head to stretched out gripping the sheets in her fists. I lick and lick until her hands go back to my head pulling me tight to her and then pushing me away as she cums. She almost yells out as she orgasms and then lays there panting. She looks at me and holds her arms out. I crawl up next to her and she snuggles against me.\n\nI just lay there holding her until I feel her hand reach out for my hard on. I smile and look at her. \"Can I help you?\" I ask.\n\n\"Oh I think I know where this belongs.\" She says as she starts to move. She climbs over me again lifting her gown. She sits on my lap and reaches under the gown. She lines me up and sits down on me.\n\nGod she feels nice. I look down and see nothing but bunched up silk. I reach out for the bunched up material on each side and pull it up. \"You look beautiful in this, but I want it Off you.\"\n\nShe smiles and takes the gown and pulls it up and off. She drops down onto me with her hands braced on my chest and her boobs hanging down. \"Is this better?\" She asks, smiling at me.\n\nI pull her down to me with my hand on the back of her neck. We kiss softly and passionately as Karen continues to ride me, grinding and humping back and forth.\n\nI break the kiss after a minute or so and pull her forward so I can suck and bite on her nipples. She moans as I suck the first nipple into my mouth, and gasps out in surprise as I bite down a little on it.\n\nShe moans and sighs as she holds my head to her chest. Her humping starts coming a little harder and faster. I lay my head back and grab a nipple in each hand. I twist and pull and she jumps and moans faster and louder.\n\n\"Karen look at me.\" I tell her. She opens her eyes and looks at me. \"I want to watch you cum. I want to watch the pleasure roll across your beautiful face. I want to feel you squeeze me as you orgasm. I want to feel your heart beating in your chest as I play with your nipples.\"\n\nShe is right there. She keeps watching me as she grinds against me getting closer and closer. She gasps and groans loudly one last time and falls against me. I can feel small shivers as she lays against me and inside her. I hold her and rub her back as she calms down.\n\nHer head is on my shoulder. \"I love you.\" She sighs.\n\n\"I love you too.\"\n\nShe props herself up a bit. \"No, I mean like I love you more than I have ever loved someone before. Like I want a ring like this.\" She holds up Ezzie, and looks at it. \"Well maybe something shinier on my other hand.\"\n\nOh god. Just when I need Ezzie the most to push this thought out of Karen's mind, but no I put her on Karen to enjoy our sex.\n\nI try to sidestep. \"Honey, we can't get married while we are in school.\" I say.\n\n\"I know that, but I want to be yours. I want you to be mine. I want everyone to know I love you and you love me.\" She almost sighs.\n\nI hold her face in mine. God even all disheveled after sex she is still the most beautiful woman I have ever seen. \"Karen, I can't ask you to marry me while I am in school.\"\n\nKaren looks at me strangely. Then she smiles. \"You said while you are in school not us.\"\n\n\"I meant us.\"\n\n\"No, no you didn't. You don't slip like that. And you haven't said a word about asking my Dad. Oh my God you did! When you came over with the work stuff and you two went out to the fire pit! You talked to him didn't you? Aaaahhhhh!\" She screams and hugs me.\n\nMy mind is spinning. How did she put that all together? EZZIE!!!\n\nI roll Karen over and get on top of her. \"Karen, slow down. I never said any of that.\"\n\n\"I'm right, aren't I? I just had a feeling.\" Her eyes start tearing up. \"Yes Ben yes. A thousand times yes.\" She hugs me tight to her. \"I promise I won't say a word to anyone. I LOVE YOU. I LOVE YOU.\" She keeps repeating as she kisses my neck.\n\nI give up. I pull back from Karen. I put my finger to her lips. \"Ssshhh. Relax.\" I say. She takes a deep breath. \"I didn't talk to your Dad. He talked to me at the fire pit.\" Her eyes go wide. \"When you were giving me a massage on the couch. I saw your parents watching us in the reflection in the window. Your Mom had a big smile on her face, and she pulled your Dad back into the kitchen by the arm. Your Dad kinda grilled me to the point where I admitted I was going to ask him for your hand.\"\n\nShe surprises me and hugs me tight again. I pull back again. \"Karen, I promised him not until Christmas break. He will kill me. You can not say a word.\"\n\nShe quickly. \"I won't say a word to anyone.\"\n\n\"Not even to Beth.\" Her face drops. \"Karen, one wrong word or slip up and he will know. Besides him being mad, I wouldn't want to disappoint him.\"\n\nShe smiles at me. \"Ok.\"\n\nI lay down beside her, and we just hold each other. After a moment she smiles at me. \"You know what would make this night perfect?\" She asks.\n\n\"No what.\"\n\n\"Going to sleep with your cum inside me.\" She says with a smile.\n\n\"I like the way you think.\" I say.\n\nShe starts getting up onto her hands and knees. \"I thought you might.\" She wiggles her ass in the air. I kneel between her legs and hump against her. I was planning to grind against her, but instead I slipped right in.\n\nI moan as I fall into her warm wet pussy. She starts humping back. I start slow lazy strokes. She bangs back harder. Karen puts her head and shoulders down on the bed. \"No Ben. I want to remember this night. The night I said yes to you, and you took me for yours. I want it hard and no stopping until your cum is inside me.\"\n\nWhere did I get this girl? I loved making love to her earlier, but wow she turns me on like this. I grab her hips and start fucking her harder.\n\nNow she is egging me on. Grunting and moaning. Telling me she wants to feel me cum inside her. As it seeps out she wants to rub it into her skin.\n\nI reach down and wipe my thumb in her juices and pussy it in her ass. She groans. She reaches back and holds my thumb.\"I can't. Not two nights in a row.\" I pull my thumb out of her bum. \"Did you like fucking me last night with BJ?\" She asks.\n\n\"I did. Did you like it?\" I ask.\n\n\"It was wild. I felt like a stuffed Turkey, but I loved the orgasm.\" She says. \"Maybe sometime we will try a toy with you in my bum.\"\n\nJesus I get an image in my head of Karen in a doggie position using a dildo on her pussy and me fucking her ass. Karen grunts as I fuck her a little harder. \"Oh, someone likes that idea. You like the idea of watching me don't you? Oh I know you do. Imagine Beth fucking me with a dildo.\"\n\nAll these different images in my head. I pull her to me and push in hard. My orgasm comes out of nowhere. I cum and cum in her pussy.\n\nI fall against her panting. She rocks her hips and rolls me off her. She spoons against me and hugs my arm to her. \"Hold me.\" She says.\n\nI see Ezzie on her top hand near my wrist. \"My lucky ring is too big for you.\" I reach down and slide it off her finger and onto mine.\n\nShe wraps her arms back tight around me, and over the next few minutes her breathing evens out and she is asleep. No sooner do I get the ring on. I can feel Ezzie's remorse.\n\nIn my head I do my best Ricky calling out to Lucy. \"Ezzie, we need to talk.\"\n\n\"Ben, I am sorry. I was caught up in her emotions, and my mind was swirling from her orgasm. She Loves you so much. She started thinking about getting married. Then you two were talking. I am not used to having to keep things quiet. I didn't tell her, but she felt it from me. I am so sorry. Please don't be mad. I know you were trying to be nice to me, and it was amazing. I am sorry Ben.\" Ezzie pleads in my mind.\n\n\"Ezzie, Ezzie slow down. It's ok, calm down. I want to say breathe, but well you don't.\"\n\n\"I am sorry Ben.\"\n\nEzzie stop. That's an order. Reach out to me. Feel me. Am I mad at you?\n\n\"No, but I...\"\n\n\"Ezzie Stop!\" I say rather firmly. \"I put you on her finger knowing she would feel you. She heard you moan before. I just didn't think it through. Please stop apologizing Ezzie.\"\n\n\"I am sorry.....I mean ok yes I will.\"\n\nI laugh in my head. \"Thank you Ezzie.\"\n\n\"Ezzie I almost hate to ask this, but I don't want Karen slipping. Can you make it so Karen can't talk to anyone, but me about what was said tonight in regards to me asking her to marry me.\"\n\n\"Ben, you asked me to warn you about messing with Karen.\" Ezzie says.\n\n\"I know Ezzie, but Mr B would be so mad, and the mad I can take. I don't want him disappointed in me.\" I say. \"Please do it.\"\n\n\"It's done Ben.\" Ezzie says.\n\nI spoon a little tighter into Karen, but sleep does not come easy to me. I can't help but agonize over asking Ezzie to do that to Karen. What's the saying? \"The road to hell is paved with good intentions.\""
    ],
    "authorname": "ao1701e",
    "tags": [
        "swinging",
        "anal",
        "dp",
        "anal sex"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/a-ring-named-ezzie-pt-05"
}