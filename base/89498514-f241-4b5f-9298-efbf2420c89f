{
    "title": "Eva Pt. 14",
    "pages": [
        "To my readers: Years will pass in this chapter. One thing I will give away, Eva and Jon will always remain faithful to each other. Never worry about anything like cheating or swapping with this couple. They're not built for it. Might there be temptation? I don't know yet. Let's find out.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nEva and I were very subdued the next morning at home. Not only were we exhausted from the lack of sleep, but we were trying to figure out who the hell on our staff could betray our students this way. That was our prime concern. Not our reputations. Not the school itself, though that was second. Our students always came first, our 'other' family. And even if it was just one young woman who was assaulted, all our students were victims. If they were made to feel unsafe in any way, they were victims of this predator. \n\nWhile we got breakfast on the table for Connor and Rachel, we talked quietly, speculating about who it could be. Eva shared a couple of names and then I did the same. But they were shots in the dark. In truth, we couldn't believe anyone who worked there could do such a terrible thing. We'd come to trust every member of the staff, from the janitors and groundskeepers to the teachers and office workers and our three assistant principals. It was almost inconceivable to us that we had a monster working with us, working with a smile every day.\n\nWe had a quick talk with Connor, since he was then in the 7th grade, in our school, and he knew the teachers. We warned him that there were going to be rumors about one teacher during the day, some of the things said would be true and others would be false. We also reinforced with him that whoever was in trouble for whatever reason, they should be given at least the benefit of the doubt, that until someone was convicted or pled guilty to a crime, they were considered innocent. That didn't mean we had to keep letting them work at school. It was a mental tightrope we had to teach him to walk.\n\nWe went to work as usual, and already there was a buzz going around the school, among the students and among the staff. Speculation was rampant about who did what. Word was already out about Jackie Allen. She was going to have a very tough time coming back, even after Eva and I spoke to the rest of the students. She probably would have to change schools, which was upsetting to think about.\n\nThen by 8:15, when homerooms started for 15 minutes before classes started at 8:30, we knew who was being looked at, the only staff member not in school that morning: Thomas Horan, a talented, popular math teacher. No sign of him, no call to say he'd be out sick that day. Mrs. Cole tried calling his house and there was no answer, not from his wife, who we knew stayed home raising their children. If he was out sick, we would have gotten a call. We had our answer.\n\nEva and I sat in her office and it felt like a funereal atmosphere. We discussed how we needed to react to this awful problem, to reassure our students and parents and even our staff. The police needed to be thorough without starting a witch hunt. We needed to start having meetings as soon as possible with all groups. And that included an emergency meeting with the board.\n\nFirst were the students. We held a number of small assemblies the first two days to let students know we felt we let them down and we wanted to do better. We didn't name any names, but we addressed the issues and tried to kill the crazier of the rumors that were going around. And we passed around our home number so any student who needed to talk to us in confidence over any issue. It would probably be abused or misused by some, but we decided we needed to be as available as possible then.\n\nThen we had a staff meeting where we let them know that despite the possible actions of one person, the rest of them had our full confidence and support and we encouraged them to let us know about any potential problems they were aware of. We promised no coverups and that after the wellbeing of the students, they were the next priority.\n\nThen the toughest meetings. We had to meet with our board that Thursday night, two weeks earlier than previously planned, then we scheduled an open house style meeting with any parents that wanted to attend on Saturday. Before we went to the board meeting, we got word that Horan was arrested and formally charged with three counts of statutory rape. So that made it possible to talk openly about who was responsible. He had been hired ten years before, under the principal before Lenny. We weren't responsible for his being on the staff. But we felt responsible for anything he did while we were in charge.\n\nWe called Jackie's house before the meeting to see how she was doing. Thankfully, she sounded better than when we saw her on Monday, and we were also relieved to hear she wasn't pregnant. Then she asked when she could come back to school. \n\nEva told her \"Jackie, you're welcome whenever you're ready. We'd love to have you back. But maybe you should talk to your parents about how they feel about you coming back and perhaps you should talk to a therapist. We want you back, but we care most about your health, physical and mental.\"\n\nWe made an appointment to meet the family Saturday morning before the open house.\n\nThe board meeting was the most contentious we had with them during our entire tenure with the school. Obviously, the nine members, all alumni and a few who had kids in the school, were extremely unhappy. They couldn't blame us for having him on staff, and we had hired a company to do background checks on all future hires, something that should have been done a long time before. God knows they investigated the hell out of us before we were hired. But for the most part we took their hard statements. It was inevitable the press would hear about this and it would be terrible for the school to have a sex scandal like this out in public. Eva and I had a solution.\n\nI got up towards the end of the meeting, pulling two letters from my jacket pocket. \"We think it would be the best thing for the students and for the school if we resigned our positions, effective as soon you can appoint our replacements. While we didn't hire Mr. Horan, we believe we need to do this for the good of the school and the students.\" Eva got up and we went to leave the room before Katherine Waterson, called for us to stop.\n\n\"Eva, Jon...don't assume we're automatically accepting these letters. Give us a few days. We'll give you a final answer on Sunday afternoon. Meet us here at 2, please.\" We agreed and went home, our hearts heavy.\n\nWhen we got home, the home we realized we'd likely soon have to vacate, we sat in the library, our favorite room, and we cried. It seemed very unlikely they'd reject our resignations under the circumstances. Someone had to be sacrificed to the wolves. We had no idea where we'd go or what we'd do. Thankfully, we had time to figure it out; due to smart investments, we were worth over a million dollars by then. But we had kids to provide a stable environment for and we had Connor's Bar Mitzvah in five months. We had to stay locally until then; it was too late to get a new temple that could give us the same date and a new catering hall for the reception. Invitations were printed already. Friends and family made plans to come to town for the weekend. It wasn't fair to him to screw up something he worked so hard on for three years.\n\nFriday evening I spoke to Cammy and told her what had been going on all week, and she nearly blew her head off. \"Are you crazy, Jon? You and Eva? You've talked to the police, to the board of directors and you're planning to talk to the girls family and then all the parents without your lawyer? You've got to be kidding me!\"\n\n\"Cammy, we just want to get past this. We feel responsible, there might be other girls out there he abused, and we're doing this so the school and the kids can move on.\"\n\n\"You shouldn't say ANYTHING to anyone without your lawyer. That's me! Jon, the family can sue you personally. Anything you say could be used against you. Please let me come with you to the meetings tomorrow? You need protection, dammit.\"\n\nI understood what she was saying. She was acting like a first rate lawyer as well as a loving sister. \"Cammy, I appreciate this. I really do. If it comes to a lawsuit, of course we'll talk to you. But we care about these kids and the staff. We don't want them to feel like we're covering our ass. We've given our resignations for as soon as we can be replaced, we'll have to stay here and rent a place until after Connor's Bar Mitzvah, and then we'll figure it out from there. Right now, we're too upset to think about what comes next for us.\"\n\n\"Jon, you could stay here with Eric and me. We have the room. You took me in when I needed a new home. Please stay with us. Hell, we're barely here as it is with our work schedules. And I could see my niece and nephew all the time.\"\n\n\"Don't you think you should talk this over with Eric first? I love you for offering, Cammy, but we wouldn't want to take over your house.\"\n\n\"I'll talk to my husband. Don't sweat it. He adores me and he loves your kids. Don't rent some apartment. Please, stay with us.\" She was talking from her heart. It meant a lot to her.\n\n\"We'll see. It will take some time to find our replacements. You talk to Eric, then we'll worry about it. And sis...thanks, with all my heart.\"\n\n\"I still wish you'd let me come along. You should have told me about this Monday before you talked to the police.\"\n\nAfter the call I told Eva we had a place to stay if we wanted. \"I love her for offering, Jon, but we can't do that, not with two children. We'd be taking over their house. It's not reasonable for them.\"\n\n\"She was pretty insistent. And she's furious we won't let her sit in on the meetings tomorrow. She damn near bit my head off for meeting the cops without her. I told her we wanted to protect the kids and the school first and foremost.\"\n\nWe sat on the foot of the bed and looked around. So many wonderful memories in just a few short years. Eva cried against my chest and I held her and comforted her. \"Honestly, Bear, I thought we'd have many more years here. I even thought we might work here until we retired in another thirty years. Maybe that was foolish. But I'm not ready to leave here. Not nearly ready.\"\n\nShe continued crying and I joined her. I wasn't ready to leave the school, the people or the home and life we had. As Eva said, not nearly ready. \n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nThe next morning we met the Allen family at a local diner for breakfast. Cammy and Eric came by to stay with the kids for a few hours while we took our lumps all around. We expected to be pummeled, verbally.\n\nNeither Eva nor I were feeling hungry; we hadn't had much appetite all week long. Thankfully Jackie looked fairly well and she hugged us both before sitting down. Her parents were more reserved but were civil towards us, shaking our hands. Eva and I just ordered toasted bagels with eggs to eat something, while the Allens all had full breakfasts, including scrapple (a Pennsylvania-Maryland thing, like a pork scraps loaf, nasty as far as we were concerned). We talked politely during the meal. Eva and I apologized for the ordeal Jackie had to go through. \n\nJackie, who had been terrified of her parent's finding out, was doing well because her parents weren't upset with her at all. They understood she was a victim of a predator and not responsible for what happened to her. Eva and I were relieved to hear that; it would help Jackie heal easier. Then they told us they weren't suing the school or us, that it wouldn't solve anything and would only hurt the other students and the school, which they were both alumni of. So we lucked out there. We told them the things we were doing to improve things, such as giving all students our home number and we were suggesting the board hire a couple of full time psychologists for any student who needed the help.\n\nEva said \"Jackie, we wish we could take this away from you. We can promise you won't be hurt again by any teacher. While we'd love to have you back, some of the other kids might be a little cruel. It's how they are sometimes. We think you're a smart and special young woman, and we don't want you to be hurt by anyone else. Maybe one of the other schools in the area, Radnor or Strafford, could give you a new start.\"\n\nJackie, sipping her tea, asked \"Mrs. G, do you think they won't hear about this at the other schools nearby?\"\n\nEva shook her head. \"No, I guess it will be known.\"\n\n\"Then I'd rather stay at Wayne Day with my friends and with you and Mr. G, in case I need someone I trust to talk to.\"\n\nEva and I looked at each other uncomfortably. \"Jackie,\" I said, \"Mrs. Grossman and I have turned in our resignations to the board of directors, effective as soon as they can replace us. We won't be there any more, probably after Christmas break, maybe a little longer.\"\n\n\"No! You can't leave! I don't want to stay if you're both not there!\" Jackie was crying softly and her mother held her.\n\n\"Jackie, I don't think we can stay\" Eva said, her voice filled with sadness. \"We love being here, we love working with you young people, we're very happy here. But we're responsible for what happens in the school and we let you down. We should have protected you.\"\n\nJackie was crying and her mother took her out to their car while her father stayed a couple of minutes to talk to us. \"Mr., Mrs. Grossman. Could you change your mind about leaving? I know, despite what happened to my daughter, the kids think the world of both of you.\" He wasn't just asking because it was what his daughter wanted; he was asking as someone who believed we belonged there. \n\n\"I don't think we can, Mr. Allen. We didn't hurt her, but we didn't exactly protect her either. When we moved here, we hired a couple of girls to babysit our son, who was ten at the time, while we got ready for the first day of school. When we went to pay them, they tried to tell us it was too much, but we insisted. We told them that when you're watching over someone's children, you're trusted with those people's most valued possessions. Not that Jackie or any child is an actual possession. We said that more than their money or their homes or anything else, people's children mean more to them than anything in the world. We broke your trust in us, Mr. Allen. We're both terribly sorry.\" I offered my hand and he shook it firmly.\n\nHe insisted on picking up the check and before he left with his family, Mr. Allen said \"You think this happened because of you somehow? We know that bastard was hired long before you both came here. He groomed her, made her feel special. He set his sights on my daughter, and if I could get five minutes alone in a room with him... but that's not how justice works. And if you two quit, and you leave these kids, kids who adore you, you're not doing justice to my daughter. You're letting her down and every other kid who's come to trust you the last four years. I still trust you, so does my wife and so does my daughter, most important of all. And if anyone has a problem with that, I'll be glad to point out how stupid they are.\" He left and Eva and I sat down for a few minutes and cried again. Both of us. We really didn't want to leave.\n\nThe parents meeting was not nearly as bitter as we expected. Most parents were supportive of us, though a few were upset and threatened to remove their children from school if we didn't resign. We announced we had offered our resignations and there were a LOT more voices telling us to stay as opposed to those who wanted us to leave. Two hours later, we left feeling even more dejected. We wanted to stay more than anything. But we couldn't.\n\nCammy and Eric stayed with us all day, trying to pick up our spirits. We played with our kids, playing music and games. Eric went out and picked up veal parmigiana dinners for everyone (with a slice of pizza for Rachel). Despite the support from my sister and her husband, a very good man, Eva and I were feeling down in the dumps. \n\nAbout 7 that night, we started hearing all these sounds of cars out near the schools. There were no functions planned for that night and we wondered what the heck was going on. Eva and I went up to the second floor and looked out a window overlooking the front of the house, where we could easily see over to the school building. In the parking lot, next to the thirty foot Christmas tree and the large Menorah set up for Chanukah, dozens and dozens of cars were parked and more kept coming up the school driveway. We could also see a lot of people walking along the field leading to our house and a big crowd was forming in front. Hundreds of people were coming right in front of our home. They lit candles when they stopped and soon there were hundreds of candles with hundreds of people, students and parents.\n\n\"Oh my god, Bear\" Eva said, a tear down her cheek. She wasn't the only one as I held her around the waist.\n\n\"We have to go down there, Angel.\" We went down, put Rachel in her winter coat and Connor got in his and the six of us went out in front of the house to see all these amazing people. \n\nThere wasn't anything said at first. I had my daughter on my shoulders and Eva and Cammy held Connor from behind him. Eric held Cammy and we were all crying. Then a few voices started singing Stevie Wonder's song Please Don't Go and soon almost everyone was singing to us.\n\nRachel tugged my ear a little and asked me \"Daddy, who are these people?\"\n\nI pulled her down and kissed her cheek. \"Our family, sweetheart. They're all part of our family. Remember that.\"\n\nThen Jackie and a Senior boy, Richard Stevenson, stepped forward and he said, as loud as he could, \"Mr. and Mrs. G, Connor, Rachel, we students of Wayne Day Upper School implore you to please change you mind and stay as our principals. We all pretty much know what happened here, and we feel as bad as you do. But it's not your fault. We all need you, including Jackie. We need you here. So please stay.\" Short and simple. He wasn't the most eloquent speaker but he got to the point.\n\nWe were speechless, trying hard not to openly bawl in front of our students. It wasn't working. Even Connor was dripping tears. Rachel could sense something special was going on and she pushed her face into my shoulder and cried, though I don't know if she understood what she was crying about.\n\nCammy, crying herself, spoke for us. \"Most of you know me, or know of me. I'm Mr. Grossman's sister, Camilla and I want to tell you I don't know how many times my brother and sister-in-law have told me how much they love being here and love all of you. And I know how loved they feel by all of you. Thank you all for your love and concern. I'm sure Mr. and Mrs. Grossman will try to do their best for you. Like they always have.\"\n\nThe families stayed a little while longer before they started to drift back to their cars. A few came over to us to make a personal appeal and we thanked them, noncommittally. When everyone left, we went back in and warmed up by the fire. We got Rachel into bed and Eva made hot chocolate for Connor while I made drinks for the adults. Connor went to use his telescope- \"A half hour!\" I told him- and the four of us sat sipping our drinks and listening to music. \n\nEric said \"This is some school you've got here. I've never heard of students and parents so attached to a principal. You both must be doing something very right here. You really shouldn't leave if you can avoid it.\"\n\n\"I think that's becoming more and more apparent, Eric\" I responded, wondering if we could rescind our resignations. I could see Eva was thinking the same thing.\n\nLater on that night, as we got ready for bed, we were able to talk about it privately. Eva said \"These kids...they never cease to amaze me. I really would love to stay, Bear. I feel like we belong here. But if they want us to leave, we have to leave. We turned in our letters.\"",
        "\"I'm sure we could rescind them. But I think that would create an acrimonious situation that would never entirely go away for the next six years. We have to stand by our letters and see what happens. They said tomorrow, so we'll see at 2.\" Cammy said she'd watch the Rachel for an hour or so for us and Connor was going to the football game; we doubted this would take longer than an hour. Firings are usually quick and painful.\n\nEva and I held each other and, despite the sadness we felt, being so close to my wife got my juices flowing. We hadn't been loving all week long and I was missing her. No matter what, I still loved and desired my wife. So I figured I'd try and see how she felt.\n\nMy right hand touched her back, up near her neck and I heard her sigh and felt her warm breath on my neck. When I slid my hand further down to her mid back, Eva softly said \"That's so nice, Bear.\" She kissed my ear and whispered \"Are you sure you want to? We don't have to do this tonight.\"\n\nI pulled back a little and kissed her warm, tender lips. \"Yes we do. We need to stay alive inside and not let this kill who we are to each other. I love you so much, my Angel. Whatever happens tomorrow, that will never, ever change. Now I want to make love to my wife. Are you up to it?\"\n\nEva brushed my hair back on my head, the way she loved to do since we met all those years ago. \"I can't deny my sweet Bear. I can't deny how I feel inside. I love you too, sweetheart. With all my heart.\" We kissed, over and over, building our heat and lust. Love we already had, in abundance. \n\nI rolled on my back and my love got on top of me, rubbing her body on mine. Our kisses got hotter as all our worries faded away, at least for the moment. I slipped my hand under her top and teased her breast, rolling her nipple between my fingers, making her moan in my mouth. She teased m ear with her manicured nail, making me shudder beneath her. \"You're so incredibly sexy\" I moaned. \"I could never want anyone else.\"\n\n\"I'm going to hold you to that for a very long time. Neither could I...except Sly\" Eva teased me. I nibbled her shoulder as she reached into my underwear and toyed with my cock until I was steel hard. Then my briefs came off followed by her panties and we were joined in magnificent bliss. Eva flexed her hips forward and back, putting incredible pressure on my cock as I sucked her eraser shaped nipples, left then right. Her head was back, her eyes closed. My wife was the very essence of beauty as her climax exploded inside her. \"Cum, my sweet, sexy Bear. Please cum for me.\" I was ready and I just let loose, a stream of my seed that filled her with warmth, more wonderful than the sun. We kept kissing for minutes more, tender loving kisses. Our bodies were sticking together and we didn't care. Being close together like that was worth any discomfort.\n\n\"Sly? You'd still kick me aside for him?\" I asked with a knowing smile.\n\n\"Well...Sly ten years ago. Now? No fucking way.\" She planted a long, deep sexy kiss on me and her tongue traced my lips. We giggled for the first time in almost a week, and for that night at least, all was right in our world. \n\nSunday we were resigned to whatever was going to happen. We expected to have our resignations accepted but just maybe, we'd get to stay. If we had to kiss a little ass, we'd do it. A little.\n\nWe were dressed casually and Cammy came over at 1, giving us some cheering up. Connor was out with a friends family at an Eagles game. I was supposed to go as well, but I had this to deal with. \n\nEva and I looked at each other and held hands, ready for our fate. Just as we were about leave, there was a knock on the door. We looked at each other questioningly before we went to answer. \"Hello, I'm sorry we kind of blindsided you like this\" Mrs. Waterson said, pleasant as a Spring day, \"but we have a function to attend at 2:30. Do you mind if we come in? This won't take long.\" She had two other members with her. \n\n\"Sure, come on in\" Eva said as she looked at me as if something insane was going on. \"We wish you had called; I could have had coffee or tea set out for you.\"\n\nMr. Greene said \"No, please we'll be quick.\" We all sat down and Cammy, on her own, joined us. She clearly wanted us to have our lawyer nearby, just in case. \n\nMrs. Waterson got right to the point. She took out our letters from her Louis Vuitton handbag and tore them in half and then half again. \"Your resignations are rejected. Honestly, we weren't sure what to do about this. On the one hand, as you said, it happened under your supervision and the usual way to deal with such things is to have those in charge resign. Not that we believed you to be truly responsible. Mr. Horan...he's an evil man. Anyways, that's normally how things are handled. \n\nMr. Greene added \"We held a meeting last night at my home. By then we'd already gotten a lot of feedback from parents, asking us to keep you on. They respect you both, your dedication to their children and their education. But even more, you're dedication to them as young adults. Between the nine of us, we must have gotten a dozen calls each. More, even. All in support of you. Parents told us if we let you leave, they'd be pulling their children out of school. The children really are happy here.\"\n\nThen, Mr. King, who had been silent to that point, added \"After that, we heard from Mr. and Mrs. Allen, who strongly supported you. He's a very influential member of the community. And then finally, we heard about what happened here last night. You had over four hundred people here last night, or so we heard. More wanted to come, but there wasn't enough room in the parking lot. As it was there was a big traffic jam along Lincoln Highway (the main road outside the school property). So we were already leaning to tearing up those letters, but after all that happened yesterday, there really was no choice. We had a vote and it was 9-0, unanimous. We called you family, as you've called us and the students and parents, and that how everyone feels. Sometimes bad things happen in families. They don't disband; they stick together and fight. We're going to lose a few, maybe a half dozen or so. But those few are vastly outnumbered by the people who support you. So we're asking you both, Eva, Jon. Please stay. Please stay at Wayne Day.\" They all had earnest looks on their faces. All three of them. \n\nEva and I didn't have to talk it over. We looked and nodded briefly. \"We'd be honored to stay\" I announced with a huge smile. \"We didn't want to leave the place our whole family has come to think of as home\" I said on both our behalves. \"We love the town and the city beyond, not something these two New Yorkers ever would have thought possible. We love the school and staff. But most of all, we love those young people as if they were our own.\" Just then, as if on cue, Rachel came running in and jumped into my arms. \n\n\"Speaking of our own\" Eva said, smiling as everyone saw me kiss my sweet girl, who was singing Our House by CSN&Y. It was one of her favorites. \"She loves living here too, and she can't wait to go to first grade in two years. Right here at the Lower school.\"\n\nMrs. Waterson said \"We hope you're all here long enough for her to graduate the Upper school when the time comes. Maybe longer. One more thing: Next Fall semester, start looking for ten children for scholarship positions for the following year. So a year and a half from now, you can start that program. Full ride, with uniforms included. And we want to look into building an annex to add a total of another sixty students. We'll need more classroom space to do that and keep a comfortable ratio of staff to students. Thank you both for staying. This school wouldn't be the same without you.\" Then they said goodbye and went on to whatever their plans were for the day.\n\nCammy, who had been silent during the meeting, broke the ice. \"How about that. In almost any other situation, either you'd have been gone, or they would have had you grovel to stay. Instead, they kind of bowed to you. Those parents and students must really love you.\"\n\n\"They do, Cammy\" Eva said. \"But the other thing was by keeping us and not making a big deal, since there aren't many parents demanding we be fired, the story will die down fast, aside from when Tom Horan has a court date or if he goes on trial. I get the feeling he'll get a pretty good plea bargain so this story can go away soon. No one wants this to be a big deal. Including the Allen's. I'll make sure I see Jackie once a week at least for informal therapy, we'll hire those two full time therapists, and we're getting our scholarship program started. We'll do it their way and in exchange we'll get what we want done. But most important is to keep protecting Jackie and the students in general. I hope that bastard Horan does real time in prison.\"\n\nRachel then asked, in her sweetest voice, \"Mommy, what's a bastard?\" The three of us started laughing; we'd forgotten our three year old sponge was in the room.\n\n\"Never you mind, Rachel Hannah. You don't need to know that for now. When you're older we'll talk about it.\"\n\n\"Yeah, like when you're sixteen\" I said with a chuckle. We weathered the storm, the worst storm we experienced in our time at Wayne Day Upper School. There would be problems from year to year but this was far and away the worst we dealt with.\n\nFour months later Horan, a broken man by then (his wife took their kids and disappeared with them so he'd never see them again) pled guilty to one count of child abuse and got seven years in prison. I'm not usually a harsh or punitive person, but I thought he got off easy. The Allen family had to agree, so it was up to them and they went along. Jackie got better, with some help from Eva and by the end of her Senior year, she had a boyfriend (we heard things about our students, mostly things that made us happy) and was headed for Penn State in the fall. That was the most important aspect of the entire problem, Jackie's recovery.\n\nChanukah turned out to be a very happy one for our family. We celebrated by going to the Poconos with Cammy and Eric and Eva's family, her parents, her brothers and their significant others (Walt was engaged) and Will's six month old daughter, Penelope. We all took ski lessons and my kids had an amazing time. We'd be taking them back for more.\n\nDuring the Spring semester we reached out to some public school principals we had met at a couple of conferences over the years and spoke to them about any students they could think of that might thrive in a different atmosphere. Some of the public schools were hopelessly broken, but others were run by good people who had a lack of resources and the challenge of some staff indifference and students who could achieve in the right surroundings. We were looking for children who'd be entering seventh or eighth grade a year later, so we talked primarily to grade school principals. They promised to look into it.\n\nFebruary 17, 1995. Our fifteenth wedding anniversary. Conveniently, it was a Friday that year. The office staff somehow knew it, which then got around to the teachers and various maintenance staff, and of course the students. All day people were stopping by to wish us a Happy Anniversary, and there was even a small cake with two candles from the office. A very chocolaty cake. Yum. \n\nThat night we went with Cammy and Eric for dinner while one of our sitters watched the kids. We met Larry and Patty, Mark and Susan and Paul and Cathy, the other couples we met through Larry and Patty. We were drinking a bit too much and we got kind of boisterous. A lot of fun with great people. \n\nWhen we got home after 1, after we sent Tanya (the sitter) home with a nice tip, we checked on our kids. Rachel was out like a light, but Connor was watching television in bed. Eva sat down on the side and kissed his head. \"Hi, big fella. How was your night?\" She was brushing his hair with her fingers like always.\n\n\"It was all right. Mom, Dad, I don't need a sitter anymore. I'm old enough to watch over Rachel. I feel like a little kid when you hire a sitter.\" I looked over at Eva and shrugged my shoulders. I saw his point. I was about the same age when I started watching over Cammy when our parents went out. And there were no cell phones back then.\n\nShe said \"Do you mind if your father and I talk about that before we make a decision? It's a pretty big step in your life.\"\n\n\"Mom, I'm being Bar Mitzvah in three months. Everyone says that it's the passage into being a man. A man can look over his little sister for a few hours. And a man doesn't need a sitter of his own.\"\n\nI chuckled to myself. He had valid points. The tradition of the Bar Mitzvah as a passage into manhood was ancient, going back to a time when a 13 year old was actually considered old enough to marry and have a family within the larger overall family. Things had changes quite a bit since then, but it wasn't like he would be expected to look after Rachel for a week. He was a good kid, honest and caring. He loved his sister and she loved him back. \n\n\"Let your mom and I talk it over, ok, Champ? We'll make a fair decision, I promise\" I told him from the doorway.\n\n\"OK, fair enough.\" He yawned and Eva kissed his head and tucked him in. Man or not, she was his mother.\n\nWe went downstairs to the library to sit and talk. She sat across my lap, her stocking covered legs sticking out, covered in black hosiery and black pumps. Eva kicked off her shoes and flexed her toes. Her cocktail dress clung to her curves perfectly. We were both in much better shape since we started playing tennis a few times a week. We looked better and felt sexier. I caressed her legs, covered in clingy nylon. \"He's growing up, Angel. He's almost thirteen now. And I was watching Cammy when I was his age. Didn't you watch your brothers by then?\"\n\n\"They were twins. It was a lot more work, and they loved to torture me. I think I was fourteen the first time. And they made my life hellish.\" She rested her head between my shoulder and my neck. Her long brown hair was draped over my shoulder and back, and it felt so comforting having her there like that. \"Fifteen years married, Bear. Almost sixteen together. Where has it gone?\"\n\n\"Damned if I know, Angel. What I do know is it's almost all been better than anything I ever dreamed of. You're more beautiful, more loving and caring, a better wife and mother than anyone I ever fantasized about. I feel like life with you has been the million to one shot in the lottery.\" I kissed Eva and her soft lips made me feel all mushy inside, like the first time we ever kissed. \"I love you now, I loved you then, and I'll love you forever.\"\n\nShe brushed my hair, like she did Connor's a short time before, like she'd been doing to me for almost sixteen years. Eva kissed my nose before my lips. \"Bear, there were times before we met that I thought I'd never meet anyone. It's hard getting to eighteen and never being asked on a date. Steven didn't count. I knew he had a thing for me, but it was our parents doing. Nobody ever noticed me. Until you. You saw me that day. And I almost drove you away. I tried to tell you not to sit with me at first. Thank god I changed my mind.\" She kissed me with a lingering hot kiss. \"Thank god. I love you, sweetheart. More than I can ever tell you. Thank you for the best fifteen years imaginable. The best part was knowing that when we did have our troubles, and when we will have our troubles in the future, I have you to help me and you have me to help you. We can get through anything together.\"\n\nWe sat a few more minutes before I said \"I would love to make love to you right here, but there's no door on this room. If one of the kids comes down here...\"\n\n\"Too bad. This rug looks like it would be so much fun to play on. But you're right. So we'll go upstairs and have a great time together and the next time we're alone here we will remember to get a little wicked here, in the library. Maybe on the rug. Maybe on the couch.\" A sweet kiss.\n\n\"Maybe on both\" I said, nibbling on her earlobe. \"Then the next time the kitchen...\"\n\n\"The world is full of possibilities, Bear. Not just sexual possibilities. So many things.\" Another loving kiss. \"Now take me upstairs. Tonight is definitely a sexual possibility.\" I grabbed Eva's shoes and followed her upstairs as she deliberately wiggled her ass in front of me as she slowly climbed. I was transfixed on that wiggle. I loved it sixteen years ago (almost) and I loved it that night. I loved everything about Eva. \n\nWe had a great time. A little quiet in deference to our kids. And a week later, we were alone in the house and we 'christened' the library. That was a great time too.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nThat May 27th was Connor's Bar Mitzvah. The night before, we had a party at the house for our family (Cammy and Eric, Eva's parents and brothers and their broods, Aunt Annette and Uncle Phil and the kids, plus some friends). Platters of cold cuts and salads. Fun and casual. The next morning was the ceremony in temple and after that would be the reception for 140 people at a local banquet hall. This was just for the people most special to us. \n\nThe males all shared stories about our own Bar Mitzvah's. Mine was interesting. Being a January baby, mine was January 19, 1974 and the night before, there was a major ice storm in New York. I woke up 5 in the morning and heard my mother crying in the kitchen as she said to my father \"No one's going to come! The roads are impassable\" and so on. Thankfully we lived just a few blocks from the temple and we walked over before services started. And I slipped on the ice a block away, flat on my ass. My mom of course cried as dad and Cammy helped me to stand without slipping themselves. T\n\nThen, when we got there, there weren't enough men at first to start (Jewish services need ten males over 13, what's called a Minyan, to pray) and the Christian janitor couldn't get there to turn on the heat and lights in the temple (Jews aren't supposed to do any work or use anything mechanical on the Sabbath if they're observant), so the rabbi had to drag some poor non-Jew off the street to turn on the lights and heat so we could get started. And in the end all but one couple made it to the service to watch me read my Haftorah. By noon the sun was out and it was in the 50s and all the ice melted. It was a pretty great day, and pretty good memory.\n\nWhen our guests left and we got Rachel and Conner into bed early, Eva and I talked a long time, cried a little about how our son was a young man now, how Rachel was growing to be so smart and talented. We may not have been believers, but we felt blessed by whatever force was in the universe. \n\nWe got up early and got the our kids up while Eva helped Rachel get cleaned up, then we got washed and dressed before serving a light breakfast, then Eva got Rachel dressed in a lovely blue dress we got for her. We all had new clothes for the occasion, Connor a new dark grey suit with a funky tie, I got a pinstripe navy suit with a conservative tie but the true beauty was my wife. She found a tan two piece, with the skirt to her knees and matching jacket with a cream shell and nude hose with tan leather shoes. Her suit cost more than the other three of us put together, but when she put it on, my wife was the most stunning woman I'd ever seen. (OK, I'm biased but I don't care.) \n\nWe gave Connor s hand made yarmulke and tallit (a shawl men wore, with with blue stripes and silver threads), traditional gifts for the young man, and then I gave Eva a small gift wrapped box. \"What is this, Jon?\" she asked with a suspicious smile.\n\n\"A little something for the best mother in the world from the most appreciative husband. I love you so much. Thank you for doing an amazing job raising our children.\" I kissed her cheek.",
        "\"Jon, it takes two to raise our kids. You did your share and then some.\"\n\n\"Just open it before it explodes already.\"\n\nEva opened it and gasped when she saw the matching diamond stud earrings. \"For you, my darling. I'm so in love with you.\"\n\nShe put them on and Eva looked like a million dollars. Two million. I got a hug and a light kiss. \"I didn't get you anything, Bear!\"\n\n\"Yes you did. The greatest gifts you could have ever given me. Those two wonderful children. There's nothing better in the world.\"\n\nWe hugged but didn't kiss so as not to ruin her makeup. \"Just you wait until tonight. You're going to think you're a teenager again. So don't you drink too much this afternoon.\"\n\nConnor was a star that morning, getting his entire reading and prayers, all in Hebrew, perfect, as Eva and I held hands in the front row of the congregation, beaming with pride. He carried the Torah through the congregation as members 'kissed' the sacred scroll, an honor for the Bar Mitzvah boy/man. Rachel got a little fidgety about halfway through and various friends took turns with her outside the sanctuary to keep her busy without her disturbing the service and ceremony.\n\nAfter the ceremony it was time to party. Everyone headed over to a local catering hall and Connor had a great day. He loved to dance, not like me when I was his age, dancing with girls from his class, dancing a slow one with his mom and then a few with his Aunt Cammy. We sat with our closest friends as well as Cammy and Eric, we had a few people from school, and everyone kept handing our son envelopes. He liked that a lot. \n\nI danced with my wife, I dance with my sister, and I even danced with my daughter. That was particularly cute and fun. She stood on my feet as I shuffled us around the floor. Daddy's girl all the way. \n\nThen I danced once with Phyllis and we had a brief talk. \"Jon, I just want to tell you how proud we are of Connor, how he's become a real man. And I want to thank you with all my heart. Through those terrible times after you and Eva met, you held it all together, even stepping up for your sister when she needed you. You never fell apart, you were the best husband for my daughter. You're as much a son to me as Walt and Will are. Harold and I adore you.\" She kissed my cheek and held me close.\n\nIt was my turn then. \"Phyllis, you and Harold made me feel welcome right from that first night. And since my parents passed you've been like surrogate parents to me. And Cammy too. You always included her as a member of the family.\"\n\n\"Of course. We're one big Jewish family, aren't we?\" She smiled warmly and we finished our dance. \n\nEva and I talked a little during one dance. I held my wife like she was my life, which she was. \"We've come a long way since that first night at Marco's and Poet's Corner. Remember when we danced for the first time?\"\n\n\"How could I forget? I remember thinking that our date, our very first date, was the best night of my life to that point. I never expected to have so much fun. Even more, I was swept off my feet. Before you picked me up, I figured I was ready to kiss you goodnight, nothing more. Then you kissed me on the dance floor and I wanted to keep kissing you. You suggested we go someplace to park and 'talk', and I said something like 'all you want to do is talk? I was hoping for more.' Something like that. I wasn't ready to sleep with you that night, but I was close. So close, Jon. I was so hot when I got home. I know you\", she lowered her voice to be sure no one heard her, \"jerked off when you got home. I could tell how frustrated you were. I was just as hot. I couldn't wait to do something about it, and I thought about you all the time. It took a whole two minutes\" Eva laughed at the memory.\n\nI grinned at her. My wife was still full of surprises. \"I know you masturbated when we were young; we had frank talks about it way back when. I had no idea I turned you on so much right from the start. I was your stud muffin\" I said laughing loud. \n\n\"Yes you were. Jon, we were so young then. And look at us now. Two great kids, one of whom is on the verge of manhood. Great jobs with responsibilities I doubt either of us could imagine at the time. And I'm as much in love with you as I was back then. More so. I can't imagine my life without you.\"\n\nThe song ended and while everyone applauded the band I leaned next to Eva and softly whispered in her ear. \"You don't have to. I'm not going anywhere without you. We're in this forever. We have so many great things to look forward to. \"Rachel's Bat Mitzvah in ten years. Her Sweet Sixteen. Graduations. College, Marriages. Grandchildren\" I grinned at her and she laughed with me. The future was wide open for us.\n\nWe invited a few people back to the house after the party and we loosened our ties and kicked off our shoes as some light snacks and soft drinks were served (we didn't want anyone driving home drunk). It was more casual and we all were able to just laugh and relax until people went home. Eva got Rachel undressed and into bed and Connor thanked his mother and I for a great time. We thanked him for doing a great job.\n\nThat night, after we cleaned up a bit and after Eva's parents went to bed, we got undressed and cleaned up. I figured we'd just talk about our day, and how proud we were of our son. That would have been fine with me. But Eva had other things in mind. \n\nShe came out of the bathroom in my favorite black babydoll nightie, lacy and frilly and barely down over her ass. And her new earrings. \"Mr. Grossman, you don't think I forgot what I promised you this morning, do you? I said I was going to make you feel like a teenager again, and that's what I'm going to do.\"\n\nAs much as I appreciated what Eva was doing, it had been a very long day for both of us. \"Honey, I love you and you look ravishing. But we don't have to do this tonight. We can just enjoy hugging each other tonight.\"\n\n\"Why? Don't you have the energy for me? Don't I turn you on?\" She licked her lips, coated with gloss and a trace of saliva. \n\n\"Damn right you turn me on. Ok, if that's what you want...\" I moved from lying on my back and lunged forward and grabbed her arm as she giggled like a young girl.\n\n\"Do I have to get my daddy to save me?\" she teased. \"Maybe he can defend my virtue.\"\n\n\"Ha! I got that a long time ago!\" We laughed as we rolled around the bed, my hard dick pressing into her tummy in my shorts as we kissed and laughed and frolicked. I had my hands down the back of her panties and my mouth on her neck and tits, going wildly at her. Her hands were down the back of my boxers, digging her nails into my ass and nibbling on my throat as I moaned. \n\n\"I want to suck your delicious dick, dirty Bear. Stand by the side of the bed for me\" Eva said breathlessly. Her color was pinkish, like she had a fever. She was hot all right, but she was perfectly healthy. \n\n\"Who am I to argue?\" I responded as I got up quickly by the side of the bed. Eva crawled on her hands and knees around the bed until she was face to face, so to speak, with my crotch. \n\n\"Lose 'em. Come on, time's wasting\" Eva snarled, her tongue slithering in and out of her mouth. I dropped my drawers and my hard cock waved in front of her, stiff as a brick. I stroked it a few times before she licked around the crown, making me tilt my head back in a low moan. \"Yummy.\" Eva took me in, staying on all fours, pumping her head along my shaft as she sucked as if she loved it. Maybe because she did. Eva had always enjoyed giving me head, like I did for her. \n\nEva released my cock and bent her head to the side a little so she could give my balls a tongue bath while my member left a wet trail on her cheek. I clutched my cock, stroking steady right in front of her eyes while her tongue danced on my heavy testes. I bit my lower lip to keep from making too much noise, even though my in-laws were down the hall by our kids rooms. I was so aroused I was worried about yelling from blissful enjoyment. My fingers from my right hand went through her long, wavy locks, tugging slightly as she went back to sucking gleefully on my dick.\n\n\"Don't you dare make me cum, Devil\" I warned. \"It's late and I want to fuck your molten pussy before we're done tonight.\" Eva looked up at me, mirth in her eyes, as she kept blowing me like I was her favorite treat. \n\n\"Well, if you really insist...don't leave me hanging, Bear!\" She turned around so her knees were on the edge of the mattress and her ass curved back towards me. She shook it playfully and I gave her a small spank. Eva giggled, seeking fun and a little dirty play as I slapped her cheeks once more. Her legs spread wider, an obvious invitation for me to fuck her. But I wanted to play with her as well. \n\n\"Face forward\" I said with a tone of an order and, with a soft laugh she kept her eyes forward.\n\n\"Come on, Bear! Play with meeee\" my wife whined. I chuckled at her mood; this was as bawdy as we'd been in months. \n\n\"Oh, I'm going to play, all right\" I grunted as I dropped behind Eva and I gripped her cheeks in my hands, pulling them apart and opening her gash. She was wet, all right, and fragrant and her scent hit my pleasure centers in my mind. Then I poked out my tongue and tasted the beads of moisture attached to her lips and fine hairs. She shuddered and gasped; she hadn't expected me to use my mouth. \n\n\"You naughty Bear\" Eva groaned as her lower body shook. \"You have the most wicked tongue!\"\n\nI took a long series of licks, scooping up as much of her gooey cream as I could from her pussy. \"How would you know? Mine is the only tongue you've ever experienced. Or are you stepping out on me, Devil?\" I licked up and down her crease from her anus to her clit, up and down along her pussy and then swirling in her ass. Eva was using one hand to push hard on her tits, tweaking her nipples as she wailed softly. \n\n\"I'd never cheat on my wicked Bear. I just know top quality when I find it. And baby, you're the best!\"\n\n\"You're so sweet, Angel. In more ways than one.\" I buried my face against her pussy, eating with gusto, like a great meal in a casual setting. My nose and mouth were all over her thick lips and my fingers were digging into the fleshy cheeks of her full ass. Eva kept pulling on her nipples as she forced her ass and pussy back in my face, fucking my tongue and nose. Her juices were dripping freely down my chin onto the sheets, filling the room with the delightful smell of great sex. I kept stroking my cock to keep myself raging hard. Then my lusty love ground back hard onto my face as she buried her own face in a couple of pillows and she came hard enough to make the bed shake. Her climax lasted a couple of minutes before she just collapsed onto the bed, breathing like she just finished a full set of tennis.\n\n\"You're such a good, very bad bear\" Eva gasped, a sexy smile on her lips. \"Come next to me, sweetheart. Hold me a couple of minutes before you put that luscious cock to good use again.\"\n\n\"You make it impossible to say no to you, my wonderful wifey.\" I got behind her on the bed, my stiffy poking against her rump. kissed the back of her neck and shoulders, and she reached over her shoulder to hold my head while she turned hers to kiss me.\n\n\"It's late, Bear. You need to take me now, before I fall asleep. I don't want to do that to you, not after the wonderful day we've had. I want to share our most wonderful feelings together before we pass out.\" She lifted her right leg, her upper leg, pulled her panties to the side, and invited me to enjoin her. I kissed her neck, up by her new earring, as I let my cock find its way into into her incredibly warm and tight pussy. Eva immediately clamped down all around my penis and held me inside her. \"Flex yourself, Bear. I think we'll cum very quickly tonight, and it will be a beautiful experience.\"\n\n\"Anything you wish tonight, my Angel. I could never deny the woman who gave us our amazing children.\" We moved in unison, I touched her all over from her thighs to her tummy, from her face to her breasts. Eva kept moaning with every slight motion and I sucked on her ears, being careful of her earrings. She brought her upper leg back and hooked it over my hip and I rubbed her clit in a circular motion. That brought her to the brink and then over the top. Eva turned her head as far as possible to lock her lips with mine to stifle her expression of her orgasm. Then she whispered while she stared in my face, those beautiful eyes and that warm smile lighting her face. \n\n\"You need to cum too, my love. In me, on me...wherever you want. Be loving, be kinky. Tell me what you want.\" She kissed me as we rocked back and forth.\n\n\"Just pull my cock out and jerk me on your tummy\" I croaked, full of a desperate desire to cum. Eva slid up a little, freeing my cock momentarily before her hand found me and pumped my wet rod furiously while whispering all sorts of filthy words at me. My wife, a school principal, could make a 20 year sailor blush. My balls tightened soon enough and I sprayed her body from her pubic hair to her breasts with a thick, creamy load of my love. We kissed as if we would never be able to kiss again as my climax subsided. Then we settled down and enjoyed feeling close to each other for a while. \n\nI held onto her from behind, kissing Eva on her shoulder while I touched her again, differently from a few minutes before, the way you touch your lover after making love to her. Affectionate, the way we touched for years, since our first date. We didn't touch each other so sensuously that night, but there was affection in our first kisses back then that almost matched the affection we still shared sixteen years later. \n\n\"I think I loved you the night of our first date\" I said softly. \"We just had that chemistry, didn't we?\"\n\n\"Funny, I remember you once said you knew it on our second or third date, sweetheart. Are you trying to rewrite our history?\" She was tickling my arms as they wrapped around her midsection.\n\n\"I reserve the right to adjust my memories of our life together.\" I kissed her playfully and we both chuckled as weariness caught up to us. \"This was a great day, Angel. Thanks to you.\"\n\n\"Oh no. We're a team, Bear. We're in this life together. Good times and bad. I couldn't do any of this without you. And you need me just as much. We get through things as one.\"\n\nShe turned to face me, my cum dripping into the sheets from her body. To hell with that tonight, we thought. It was no big deal. What we were talking about, connecting about, was so much more important. \"You're right, honey. Like you always are. Well, most of the time.\" I kissed her nose and we laughed again for the last time that night. I reached over and shut the light and the dark covered us. \"Good night, my Angel. I love you.\"\n\n\"Good night, Bear. I love you too. And thank you too. This was a great day.\" We were both out cold minutes later.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nSchool ended a month later, thankfully much better than we thought six months earlier. During the Summer we used the beach house a lot and took a family vacation to Quebec, Montreal, Toronto, Ottawa and finally Niagara Falls. It was a long drive, most of it by me, but we had fun and that's what counted. \n\nAnother year, we got a little older, the kids grew bigger, the school continued to thrive with Eva and I helping with the fundraising. And we interviewed almost forty eleven and twelve year olds for the initial scholarship program, with ten spots available. It was terribly hard winnowing down those thirty eight to ten, knowing that the other twenty eight would be disappointed. But we agreed to ten for the first year, plus ground was broken to expand our building to add on six more classrooms and a new indoor pool for both schools. It was a lot of work added on to our regular workload but it got done, somehow. \n\nRachel started kindergarten the following September, Connor was in the ninth grade and we integrated ten new students into our Wayne Day family. I wish I could say it was an easy adjustment, but I don't think any of you would believe that. They were ten middle to lower income young people mixed into a pool of ninety kids from wealthy families. Some of the new kids were black and there were racial issues. It was a huge adjustment for everyone, and Eva and I worked like hell to help the group of ten fit in. Eight lasted all the way through graduation six years later. Two didn't. We would have loved to have all ten make it but we did our best. And it was successful enough for the program to continue as a permanent thing.\n\nA few big things happened during the Summer of 1997. First the bad news. Cammy and Eric separated and eventually got divorced. It was very painful for her, and Eva and I spent as much time with her as we could, inviting her to the beach house most weekends and just offering our love and support as much as we could. She still loved Eric but he was pushing her to have children and she wasn't sure she wanted to be a mother. She was on track to be only the third female partner in her firms history and she decided that was what she wanted in life. \n\nAt the beginning of August we took the kids to Israel for three weeks. It was brutally hot during summer but it was an amazing trip. Neither Eva nor I had ever been there before so it was as fascinating for us as it was for Connor and even Rachel, now four years old, had a good time. We looked up two cousins of Eva's that she never met before. We traveled from the grotto's on the border by Lebanon (beautiful, but a tense place to visit), down through Haifa and Netanya to Tel Aviv and then Jerusalem. Connor and I went to the men's section of the Western Wall (women had a separate section), we did some shopping in the souks of the Old City, and we spent time in the devastating memorial to the victims of the Holocaust at Yad Vashem. It was upsetting for all of us, especially for Rachel. I held her in my arms for a long time after we left. She needed comforting. We all did. It's a powerful experience whether you're Jewish or not.\n\nbb   \n\nWhen we got home, a week before school started, Connor laid an unexpected bombshell on Eva and I. One night as Eva and I were folding laundry from the trip, he sat down with us in the family room. \"Mom, Dad, I think I know where I want to go to college.\" That got our attention; he was only fourteen, with four years to go. \n\n\"All right, Connor. So, tell us what you're thinking\" I asked him.\n\n\"I'm pretty sure I want to go to the Naval Academy. I want to be a nuclear engineer and serve on submarines.\" He looked so damn earnest about it.\n\nIt was far from what Eva and I expected to hear. Honestly, I don't know what we expected to hear. Certainly not that. We never heard him talk about it before in any context. We knew he loved science and physics, but we also knew he was into astronomy, and you can't exactly see the sky from inside a sub.\n\n\"Connie,\" Eva asked, her voice full of shock, \"where did this come from? You've never told us anything about being interested in submarines, or serving in the Navy. This is really out of left field for your father and I.\"\n\n\"I've been reading about Annapolis for a few months. It's one of the best schools for a nuclear engineering career or any engineering career. And I've been reading up about the requirements. I'm a good athlete, I'm smart and have the grades to prove it. I go to a tough school academically speaking. It won't cost you anything; in fact, I'd draw a salary while serving as a Midshipman.\"\n\n\"Son, don't worry about money for college. Your mother and I can afford to send you to any school you can get into, and you will probably be able to get into any school you want. There are great science and engineering schools all over the country. MIT, Cal Tech, Georgia Tech, Purdue, Virginia Tech...others as well. You go to Annapolis, you have to give back at least five years of your life to the Navy. There's a lot of great things about going to the service academies but I don't understand this. You love astronomy. If you get into submarines, you'll be inside those boats for sixty days without seeing the sky. What about your interest in astronomy? You could be an astrophysicist.\"",
        "\"We don't want to discourage you if you really want this, Connie\" Eva added. \"It just took us by surprise. I didn't even know you read up about this.\"\n\n\"I do love astronomy, but that's a hobby. I could pick it up when I get out of the Navy, or on my time off. But I'm fascinated with physics and with the idea of becoming a Naval officer. I really think I want to do this. I don't know if I'd want to make it my entire career as a twenty or thirty year man but the five is no problem.\" \n\nEva said \"Connor, by then you'll be eighteen and it will be your life to do as you see fit. Whatever decision you make about where to go to school, what career you choose to pursue, when you fall in love with someone...your father and I will support you all the way. If you think you'll be happy at the Naval Academy, then you should start preparing for it now. We've had students apply and attend the various service academies before and one thing we can tell you, the competition is brutal. They get thousands of applicants every year for just a few hundred slots. So if this is what you want, you have to start prepping now.\"\n\nI added \"And we should make appointments to visit there and meet with some Midshipmen as well as some of the officers who teach there. Four years can go by very fast. At least it's only about two hours away by car. So you look into what we have to do and we'll do our share to help you.\" In fact, it wasn't what Eva and I wanted for him, but if he wanted it, we'd support him. Most parents would worry about the danger involved with a military career for their child. Yet at the same time, I'd be proud of him if he chose that path.\n\nThat night, Eva was very quiet as she spread her moisturizer over her body. Not angry. But she was upset. I stood behind her at her vanity, put my hands on her shoulders and looked at her through the reflection on her mirror. I could see the worry on her face. \"Angel, let's talk about this.\"\n\n\"Ok, let's talk, Jon. Where did he even get this idea? He must have read some of your books on military history. How else could he have gotten exposed to this?\" I had a number of books in our library on the military and warfare, including a biography of Hyman Rickover, the driving force behind the US nuclear Navy. \n\n\"I assume that he read some of my books. I don't restrict him from reading any of my books. You know that and you've never objected. How else would he find the things that interest him? Besides, he could get hurt going to any school anywhere. Working as an engineer on a work site. Life is risk, honey. We really can't shield him from much these days. Sex and violence are all around us. And it will get worse as Rachel gets older too. There's stuff on the computer...let's just say I'm glad we have the child blocks on it.\"\n\n\"I don't even want to think about that right now. And it has nothing to do with Connor joining the Navy. That's what we're talking about.\"\n\n\"All right. As I told him, he'll be eighteen by the time he's a 'plebe'...\"\n\n\"A what?\" Eva asked, confused.\n\n\"A plebe. That's what they call the incoming class over the summer before classes start. It's called Plebe Summer, it's a time of low level hazing, designed to get the new class ready for the rigors of entering the military life. The upperclassmen break them down and then help build them up. Connor would have read about it in one of my books. It's rough and a few drop out before classes ever start.\"\n\nEva looked horrified. There were a decent number of women attending the academies every year by then, but the mother in her was appalled by the prospect when she heard the word 'hazing'. I tried to explain it's not like fraternities, where a few young men died every year in their version of hazing, mostly from alcohol poisoning. There was no alcohol allowed, period, in the military academies. Connor would survive this and it would even toughen him up. Eva didn't want to hear it.\n\nFor the only the second time, she went to sleep angry at me. No kiss goodnight, no 'I love you'. Silence as she turned out her lamp. I'd have to weather Hurricane Eva.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nIt didn't last long. We sat down the next day and we both apologized, not for our different opinions about Connor and Annapolis, but for going to bed without pushing our problem aside. We had vowed never to do that when we got married, and except for one other occasion, we never had. We agreed to disagree about this. Besides, there was not much we could do. Our son was going to make his own decision about this. We had to let him live his own life.\n\nCammy joined us Labor Day weekend at the beach house. Connor, being the gentleman he was, always gave her his bedroom when she joined us, doing the same for Eva's parents when they were there. He took the fold out couch. \n\nWe were sitting on the beach on our blankets, a hot and humid day, when I finally got my sister alone to talk. She had avoided telling me what happened with her and Eric all summer long. It was time we had it out together.\n\n\"You never talked to me when you and Eric decided to separate. All I know about that was that he wants kids and suddenly you don't.\" I looked at her with a hard look. \"I always thought you wanted to be a mother.\" She sighed and took off her sunglasses to look me in the eyes. Then she told her story.\n\n\"Eric and I talked about having kids when we got engaged. I wanted children then, I was sure of it. We agreed, three years to get established and I'd take a break to have a child and then three or four years later, I'd do it again. But during those three years, I realized how much I love my job. It's a lot of hours for a junior associate, but I love the work. And then they gave me my first chance to litigate a case in court. Remember? I knocked it out of the park, and I knew this was what I was meant to do. Plus Gene Reynolds, one of the senior partners, took me to lunch and told me I was on track to be a partner some day. Taking maternity time would have screwed that up. That's how it is in these old time law firms. Move up or get out of the way. So my priorities changed.\" My sister was looking down, leaking tears. I held her hand as I let her continue. \"It wasn't fair to Eric. He knew what he wanted from the start. It was me who changed the nature of our contract. We fought a number of times and I ended up offering him his freedom to meet someone who could give him what he wants. We're not angry at each other. In six or eight months we'll be divorced. I'm buying out the house from him. I hope he meets the right woman.\" Then she started crying like I hadn't seen her do since I became her guardian. I held her for a while, I don't know how long, until Eva came back from the water with Rachel to see what was happening.\n\nI gave her a look that let her know Cammy was ok. Eva figured out what we were talking about, just not the details. She knew I would fill her in later. I felt bad for my sister, and I was disappointed that I'd never get to be an uncle to her children like I was with Penelope (Will's daughter) and would be soon to Walt's son, due to be born in a few months with his wife Teri. It would have been special for Cammy to have a child. We had that incredible bond together. But she had to lead her life, just like Connor was planning to do. Her body, her life, her choice.\n\nThat November, at age 36, I had a minor 'trauma'. I was brushing my hair one morning, getting ready for work, when I saw...a few grey roots! Damn. \"Eva!\" I screamed and she rushed into the bathroom like I found a dead body on the floor. \n\n\"Jon, what the heck is wrong? You scared me half to death! I was trying to get breakfast on the table for the Rachel!\"\n\n\"Look! LOOK!\" I showed the small patch of silver towards the back of my head.\n\n\"What?\" She looked close and saw what I was pointing to. \"Is that all? A few grey roots? For gods sake, Jon! It's nothing!\" She turned to go back downstairs.\n\n\"Yeah? What if it had been you who found a few grey hairs on your head?\" I was following her downstairs. \n\n\"That's different. I'm a woman. We're supposed to be more vain about these things. Besides\" she said as she finished getting Rachel's breakfast, \"men look very handsome with some silver hair. It's very distinguished looking.\" Eva gave me a kiss as she handed me a toasted bagel.\n\n\"Yeah, well it just makes me feel old.\" I sat and ate with Rachel and Eva. Connor was already at school, lifting weights with a few others before classes began under one of the gym teachers supervision. \"What do you think, Princess?\" I asked my daughter. \"Do you think Daddy looks good with some grey hair, or do I look old?\"\n\nRachel, dear that she was, said \"You don't look that old, Daddy\", trying to make me feel young while actually making me feel like an old man. \n\n\"Not 'that old'? Do you want to give Daddy a kiss this morning?\" I said, lifting her out of her chair and into my arms. She giggled as she kissed my cheek and Eva smiled with us. I might have been getting old-er. But I still felt young enough.\n\nThat night, Eva made me feel even younger. She broke out a costume we saved for very special occasions. When we moved into the house, we found a few old boxes in the attic. In one were some old school uniforms, dating from at least twenty years before. One was an old cheerleader outfit and, since Eva was the same size as some of our female students, it fit her pretty well. Well enough to stay on for a few minutes anyways. She was wearing it when I got done saying goodnight to Connor.\n\n\"You still feel old, baby? You've got this naughty cheerleader craving your body right here, ready to jump your bones.\" She picked up the hem of the skirt and shook it around so it rose enough to flash a little of the Kelly green panties she wore, snug on her crotch. She deliberately bought them a size too small.\n\n\"Old? Who said anything about feeling old?\" I answered, my morning freak out forgotten, as I shimmied out of my jeans and my red polo shirt. When I was down to my briefs, I scooped Eva up in my arms and she yelped as I tossed her on the bed. \n\n\"Old, my ass\" she chuckled. \"An old man couldn't have picked me up like that. I bet you can still fuck like a young stud. Or maybe we should do something different tonight.\" Eva thought for a second while I held my dick through my briefs. \"Go sit in that chair\" she nodded her head towards a chair near the fireplace. \"Take your shorts off first.\" She had a sparkle in her eye that told me this was going to be a lot of fun. Something we hadn't done in a long, long time.\n\nI took them off and sat back in the chair, about ten feet away from where Eva was spread out on the bed, propped up on some pillows, with her legs spread and slightly bent. She was touching her tits, massaging them gently while I was gently fondling my cock. \"God, you are the sexiest woman in the world. I could watch you every night.\"\n\n\"But most nights I'd rather fuck you, my dirty Bear. But tonight I want us to tease each other. I love the way you look with your dick in your hand and those big, swollen balls hanging like that. You're so hot. And I can't even see your silver hairs from here.\" She was moaning now as she pulled the top of her outfit away from her tits. Then she licked her fingers and circled her thick nipples, letting them shine for me.\n\n\"Fuck, Angel, that looks so damn good. You still have great tits. Soft and firm still. I'm so fucking lucky.\"\n\n\"And you have such a nice ass. I wish I could see it from this position\" she said with raised eyebrows.\n\n\"Who am I to deny such a simple request\" I said as I got up and turned around, I grabbed the arms of the chair, and I shook my ass from side to side for Eva. She laughed and applauded, and even tried to whistle at my exhibition.\n\n\"Shake it, baby, shake it! Momma want's some sugar!\" It was fun in a way we hadn't played in a long time.\n\n\"Now it's your turn\" I said as I sat back down, my cock thick and stiff by then. \"Let's see some cheerleader ass!\" \n\n\"If that's what my Bear wants\" Eva laughed as she got on her hands and knees, showing how those tight panties held her cheeks and pulled up to show off her camel toe. She looked over at me and winked and my dick jumped in my hand. \"Come here\" she growled in a husky voice.\n\nI got up and went to her as if I was in a trance. Eva pulled off the top of her outfit but kept on the skirt and panties. She reached between her legs and I could see her forefinger rubbing up and down the crease of her pussy. \"Oh, fuck, I'm so damn hot knowing you're watching me. Keep on watching, horny Bear. Watch your little slut finger herself.\"\n\n\"Such a naughty girl. You like the way my dick looks as I stroke it for you, don't you? You love when my hot dick jerks in my hand for you. Look how purple it's getting.\" And it was; the head was dark as it filled with blood. Eva looked back and moaned, then she spread her legs wider and she buried her face on the mattress. Her ass was WIDE for me, delicious looking. I was throbbing hot and I needed to do what I needed to do. I got behind her and she could feel my weight shift the mattress. \n\n\"Do it to me, Bear. Fuck me, spank me. I'm so fucking hot for you.\" I pulled her panties to the side and she was slick and ready. I held her left hip and slid into her warm pussy like slipping into silky heaven. Then with my right hand I spanked her hard. Eva yelped and pushed back, grinding her soft, still lovely ass right in my groin.\n\n\"My wicked little Devil\" I grunted, pushing back into her cunt, making my cock twitch for her. Eva clawed at the sheets, twisting her head from side to side while I spanked her again, then again. At least four times, giving the exposed part of her ass a soft pink glow. I stopped it there; I didn't want to hurt her in any way. And I definitely didn't want her to be unable to sit down at work. That would lead to all sorts of speculation.\n\nInstead we kept fucking each other, much rougher than we had in over a year. Her pussy was gripping my cock but she was so wet it didn't keep me from moving easily in and out. And the sight of Eva with the skirt around her waist and the tight panties digging into her flesh...fuck, that was it for me. \"Eva, I'm cummingggg...\" I called out quieter than I would have liked.\n\n\"Fill me, Bear! Give me your warmth!\" When she felt the first splashes of my cum, it pushed her over her peak, and she joined me in one of the most intense orgasms we shared in quite a while. I fell on top of her, my dick still inside, slowly softening as she milked me for every drop. Eva turned around and held me as she kissed me over and over, and I kissed her right back. \n\n\"Thank you, Angel. That was just incredible. You really did remind me that I'm not old...yet. And you're still the sexiest woman I've ever met. And the most loving.\"\n\nShe snuggled closer in my arms, playing with my chest hair in her way that drove me a little bit crazy. \"You'd better not get old on me, Bear. We still have years and years to enjoy each other like this. I love you so much. So very much.\"\n\n\"Same here, honey. More than anything in the world, except our children. I love all three of you the same. And Cammy is right behind you.\"\n\n\"That's one of the things I love so much about you, Jon. You've always had so much love in your heart. Your big, kind, sweet heart.\"\n\nAnother night, another loving time together. We never got bored with each other. How could we? We adored each other.\n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nChanukah, Christmas, New Years all came and went. Eva and I took the kids and Cammy skiing for a week up in Vermont, then we stopped by Phyllis and Harold for a few days, which brought the whole family over for a post holiday party. Her parents were in their early sixties and were showing some signs of aging, not mentally, but they were slowing down a little. Still, Phyllis was a great cook and we had a great time seeing them.\n\nBack at home for the Spring semester, Connor was taking Driver's Ed and I was supplementing his lessons by taking him driving. It was a little nerve wracking at first, but he got the hang of it soon enough. He was now, approaching sixteen, as tall as I was, which meant he towered over his mother. He got his first girlfriend, a girl from his Temple Youth Group named Nancy, and they got kind of serious for a while, more serious than both Eva and I felt comfortable about. But kids have their first loves and he was destined to go through the good and the painful part of it when the broke up over the summer. But when he first started seeing her, it was time for father and son to have another talk.\n\nIt was a chilly day in February, with gunmetal grey skies. He and I went shopping at the King of Prussia mall for some gifts for Eva before her birthday, Valentines Day and our anniversary. February was always an expensive month. We took a break and sat in the food court, eating pizza (I never, in all my years in the area, got used to Philly style pizza) and the subject turned to Nancy.\n\n\"So, how's your relationship with Nancy going? You two get along well?\"\n\n\"Dad, I don't know if I want to talk about this with you. It's kind of personal.\"\n\n\"Of course it's personal. But fathers talk to their sons about this like mothers talk to daughters. When I met your mom, my dad had a talk with me. I was eighteen by then and she was my first...and only...love. And I was the same for her.\"\n\n\"Really? Neither of you loved anyone before you met?\"\n\n\"No. I dated a few girls for a couple of years, but none ever made me feel anything like I felt for your mom as soon as we started seeing each other. For us, it was real love almost from the very beginning. And what I want to say to you is you need to be careful. You're not yet sixteen and it can be confusing, mixing up love and lust. I'll be very honest with you, Connor. When I met your mom, I wasn't a virgin. I won't give you any details, and I sure as hell won't tell you anything about your mom, but I was older than you when I had my first time. As great as it felt, it was also confusing. Did I love her? Did I just like her?\"\n\n\"Well, I know you didn't love her. You told me mom was your first love.\"\n\n\"That's right, but at the time, it was hard to figure out. So the advice I'm going to give you is that I would hope you'll wait for your first time. You're still young and I know the pressures on teenagers. Sex isn't quite the mystery it was when I was your age, and even then, we knew things. But what you think you know and what you actually know are two different things. So try to wait until you're sure of your feelings, whether it's with Nancy or someone else. Sex is best when it's with someone you care deeply for. It can be beautiful. Just screwing around can leave you feeling kind of empty inside. It can feel good in the moment, but there's nothing there afterwards.\"\n\nHe looked a little uncomfortable, but he was appreciative that I was honest and not judgmental about the issue. \"Dad, um, we haven't...well, we've just kissed and stuff. I don't know how much more I want to tell you.\"\n\n\"Connor, you don't have to tell me anything you don't want to. I know we had talks about using condoms...when the time comes for you. When I was your age, we didn't have to worry about AIDS, although there were the old diseases like syphilis. But we all knew in the back of our minds a little penicillin could deal with it. It's not so simple these days.\" I held his hand across the table, father to son. \"Connor, please, whoever you date and fall in love with, please, always treat the lady with respect. Never force her into something she's uncomfortable with. Be the fine young man I know you are. You already make your mother and I proud, every single day. We love you and always will. And I know I've told you this a hundred times, but if you have any trouble or problems, anything at all, you can come to your mother and me. ALWAYS. Never be afraid to tell us. You and Rachel are the most important things, people, whatever, in our lives. We love you with all our hearts.\"",
        "\"I know, dad. I love you both too. And my squirt of a sister.\" He smiled with his perfect white teeth. He would have died for her if he had to. He felt about his sister like I felt about Cammy when we were young.\n\nWe finished our lunch, then finished our shopping. Eva did very well that year, like most, with her husband and her children getting her some nice clothing and a few pieces of jewelry. We figured she deserved it and then some.\n\nRachel, almost six by then, was a real champ on the piano. And she loved to sing with her father, even when I was singing to her, like when we tucked her into bed. I'd sing a lullaby and she'd join me like she was singing it to me. Her voice was sweet and true. We were going to need a voice coach for her as well as the piano teacher she saw twice a week. Thank goodness we kept growing our net worth to somewhere over two million by then. Even allowing for the taxes we had to pay on the house we lived in (a 'free' house is considered income by the IRS) we were still way ahead of the game. \n\nMay 17, 1998. Connor's sixteenth birthday and Rachel's sixth. Every birthday is important for your children, but when a teen becomes old enough to drive...that's a very special day. He may have been expecting a car as his gift; a lot of his friends at school got new cars when they turned sixteen. Eva and I could easily have afforded to buy him a car, brand new or a good used one. But it wasn't the way she and I were raised. My old Ford that I drove when Eva and I first met was bought with money I saved over the years. Her parents never bought her a car; she didn't own her own until we moved in together. We discussed it for over a month. We wanted him to understand responsibility, but, on the other hand, we put him in this environment of being around a wealthy social circle. So in the end we split the difference. We got him a good used car, a '94 black Thunderbird. It wasn't as fancy as the cars some of his friends got, but it was sporty and in excellent condition. And it was waiting for him when he got out of school, in the driveway of our home.\n\nConnor loved it, and I got a huge bearhug while Eva was lifted off the ground and kissed on both cheeks. Then Rachel gave him some CDs for the stereo that she 'bought' (with some help from mom).\n\nWe couldn't ignore Rachel; it was her day too. She wanted to learn to ice skate so we bought her a pair of skates (Connor promised to take her and teach her) and we also got her a few new outfits. She loved new clothes, just like her mother. That night we all went to a seafood restaurant owned by Larry and Patty, who joined us for dinner, as well as Aunt Cammy. She gave her nephew a set of BOSE speakers and a Nakamichi radio/CD player for the car. For Rachel she bought a small electric guitar and a speaker. Great gifts but Eva and I would be paying for the lessons for years to come. Oh well. They were both happy. \n\nThat summer we took a tour of the Naval Academy; Connor was an incoming senior and his desire to attend only grew more determined. Grades and test scores were not an issue, and he got a glowing recommendation from Senator Arlen Specter. During the visit he met with some second year Midshipmen as well as some of the officers and also enlisted personnel. He loved every second and, while it would never be our first choice for him, Eva and I came to grudgingly support him. Rachel loved the handsome men in their white uniforms, and they were charmed by her.\n\nThat summer we took what we expected would be our last family vacation together for a few years, assuming Connor would get into Annapolis. His summers would be very busy after classes were over. We rented a cabin on the coast of Maine. We went boating and fishing, we swam in ice cold water, we ate lobster most nights, built fires when the evenings got cool and we toured Acadia National Park. On the way home, we stopped for three days in Boston to see some of the sites. Eva and I didn't have a lot of opportunities to be alone until the hotel in Boston, but we all had a great time, and we all formed great memories of one of the last vacations the four of us took together for years to come. \n\nAnother year at school. Connor's senior year, Rachel in second grade. I got more grey hairs, creating a patch on the right side of my head. When Eva noticed hers, she started coloring her hair. It was a big deal to her. Things went mostly smoothly, and Connor sent in his full application the second week of January. \n\nThe next few weeks were tense in our home. Connor obviously wanted to be accepted, though, as a backup, he applied to MIT and Purdue. One way or another, he'd be leaving home come the end of summer. Eva clearly was hoping he'd be rejected by Annapolis, which caused the two of them to get into a few harsh arguments with me playing peacemaker. And it all upset poor Rachel. \n\nOne Saturday afternoon in February, just before Valentine's Day-Eva's birthday and our anniversary, Connor was with some friends and Cammy picked up Rachel for a 'girls day'. That gave Eva and I the day alone. We needed it, badly. We made it a date day. We went to brunch, did some shopping in town with some of our local merchants, had a light dinner and went to a local amateur theatre for a show. It was a mellow day, just what we needed and when we went home we were feeling amorous. Eva kept rubbing my thigh as I drove and when I brushed it away halfheartedly, she kept putting it back and chuckled as she saw I was getting hard in my pants.\n\n\"Just wait until the young'uns go to sleep later, lady. You'll be soorrryyy!\" I teased.\n\n\"Will I? Maybe what you're planning is just what I want. You think you can handle me tonight, big Bear?\"\n\n\"The day won't come where I can't handle what you've got, babe.\" We were chuckling as we pulled into our garage and got in the house. \n\nConnor came tearing down the stairs when he heard us get in. \"Mom, Dad, I did it! I got in! Naval Class of 2003! I report June 30!\" I never saw him so excited about anything. And I never saw Eva so crushed about anything. Forget our night of passion, now out of the question. My wife was hurting inside, which hurt me. She went upstairs by herself and closed our door. I knew she was crying. \n\nConnor lost some of his excitement, but he couldn't lose it all. This was what he wanted and I needed to be supportive. \"Hey, Connor, that's great. Really, I'm proud of you.\" I shook his hand, man to man. \"I hope it's everything you want it to be, son.\" Then I hugged him tight. My son was going to serve our country, something that made me proud, but there was no denying, even though the risks were fairly low, he was going to do something that had inherent dangers. I wouldn't be human if I wasn't worried.\n\nRachel , who was brought home by Cammy earlier, asked me to tuck her in. I picked her up (she was getting big!) and kissed her cheek. \"Tell you what, sweetie. How about we let your brother do it tonight? Mommy's not feeling well and she needs me.\" I looked at Connor and he gladly took his sister from me.\n\n\"Let's go, squirt. I'll read you a story.\" He teared up as he realized his days to be a big brother to Rachel were numbered. He carried her easily up the stairs and while he took care of her, I went to look in on Eva.\n\nShe had gotten comfortable, into the least sexy outfit imaginable, a long t-shirt that was huge around her slight frame. She was laying in bed on her side in a fetal position. I got out of my clothes and slipped in with her. \"What about Rachel?\" she asked simply. \n\n\"Connor is tucking her in. I think he realizes he won't be able to do that for her for much longer.\"\n\n\"Jon, does it make me a bad mother that I don't want him to go? A bad person?\"\n\n\"No, of course not, honey. You're worried about him, like most mothers would be. I'm worried about him too. But I know he has to do what his heart and mind are telling him to do. This is what he wants. He has to live the life he wants. We have to let him.\" I wrapped her in my arms and then I felt her arms around my lower back.\n\n\"You make me feel so safe, Bear. I'm less scared with you here. Please don't leave me.\"\n\nI kissed her head and said \"That's a silly thing to say. Why would I leave you? You're the love of my life, Angel. I'm never going anywhere else, unless you go with me. We're in this for the rest of our lives.\"\n\nEva kissed my chest, then my lips. We looked into each others eyes, unspoken thoughts passing between us, and the next thing I knew, our shirts were being pulled off and our underwear went down. Our kisses were those of starving people. starving for each other. This had nothing to do with our playful flirting earlier. This was about relieving some of the pain we both felt. \n\nWe went at each other like two creatures following our basest urges. I got her knees behind my elbows as I thrust hard into her needy body. I needed her just as bad as she needed me. Our bodies slapped together as we grunted and groaned. My balls slapped her ass with a slight crack on every thrust. \n\nThen Eva pushed my shoulders, her way of letting me know she wanted to be on top. I flipped on my back, bringing Eva around with me. Her hands were on my shoulders and her ass was bouncing hard as she rode me like a bull. I twisted her nipples, hard enough to make me whimper. She pushed down so her clit hit the base of my cock and she came, drawing it out as her body stiffened and her eyes went wide. Just the sight of her like that was enough to finish me off. My orgasm was almost as intense for me as hers was for her. \n\nEva fell next to me and almost immediately started crying as we came back to the reason why our feelings were so strong. I turned and caressed her back and kissed her head. \"I don't want Connor to join the Navy\" she cried softly. \"I don't, I'm sorry. I'm sorry if that makes me a bad mother or a bad American. I don't want him doing something dangerous.\" She sobbed into her pillow and I tried to comfort her as best as I could. I kept kissing her back and her head, everywhere I could, small gentle kisses. She had to get it out of her system.\n\nThe next day, Sunday, I woke up a little late for me, after 9, and Eva wasn't in bed. I used the bathroom, threw on my robe and went downstairs, where I found Eva and Connor in the kitchen, having what sounded like a heart to heart conversation, so I went into the family room where Rachel was watching television and having her egg and toast. \n\n\"Hey Princess, what ya doing?\" I said as I kissed the top of her head.\n\n\"Watching TV while Mom and Connor talk. Watch with me, Daddy.\" Children's programming was not exactly my favorite, but what man can resist such an invitation from his daughter? I sat down and put her on my lap.\n\nAbout twenty minutes later, Eva and Connor came into the room with their arms around each other. Eva was smiling, not the biggest smile I ever saw on her face, but a big improvement over the previous night's crying jag. \"Hey you two. Everything all right?\" I asked\n\n\"Better. Getting there\" Eva answered and Connor gave his mother a kiss on the head with a hug. \n\n\"I'm going to go for a run, Dad. Be back in an hour or so.\" \n\nEva sat down with Rachel and me. We held hands and Rachel bounced off me to get closer to the tv. I looked at my wife, still beautiful after all those years, To me she always would be beautiful, the most beautiful woman I knew. I kissed her and said \"So?\" \n\nEva laughed and said \"We're better. I still wish he wasn't going. But he told me how important this is to him. I understand his feelings, even if I don't like it. He's a heck of a young man.\"\n\n\"That he is. He has a heck of a mother, after all.\"\n\n\"His father's not too bad either, you know. Pretty awesome, actually. A sweet, cuddly Bear.\" We snuggled on the couch while Rachel watched her program and all was right with the world. We thought.\n\nThe phone rang a short time later, as we were fixing breakfast together. It was my Aunt Annette. We talked regularly but didn't see each other as much as I would have liked.\n\nAfter we said hello, she said \"Jon, maybe you should sit down. I have some news to tell you.\"\n\nI got a knot in my stomach, and breakfast was forgotten. \"All right, tell me please.\"\n\n\"I got a call from your parents friend Sandy. You know, Marvin's wife. I hate to tell you...your old friend Adrienne committed suicide a couple of days ago. She took an overdose of sleeping pills. I'm so sorry, Jon. They called me because they didn't know how to reach you.\"\n\nI couldn't answer. I sat down heavily in a kitchen chair, and Eva took the eggs off the stove and came to me when she saw the blank expression on my face. I hadn't seen Adrienne nor heard from her since Connor's bris. That was on me; we had moved to Wayne and I never called her to tell her. And then, when she needed someone, like her oldest friend, I wasn't there for her. I treated my oldest friend horribly. I abandoned her. And now she was dead. \n\n\"Jon, Jon? Are you there?\" My aunt kept trying to get me to respond but I couldn't get my mouth to work. I just handed the phone to Eva, who was filled in by my aunt. She gasped and then she cried while talking and she wrote down the details for the funeral. Then, after hanging up, she got in front of me and knelt to look me in the eyes.\n\n\"Jon, snap out of it. Come on babe. Get up, let's go upstairs. Rachel, I have to help Daddy upstairs. Connor should be back in a few minutes. Will you be all right by yourself for a little while?\"\n\n\"Sure, Mommy. What's wrong with Daddy?\" \n\n\"He got some bad news. Call me if you need me.\" She got me in our bedroom and had me sit in the side chair. I was feeling numb inside, still unable to process this terrible news except for feeling guilty. Guilty as hell.\n\n\"Jon, look at me, say something. Show me you hear and understand me.\"\n\n\"Eva, I hear you. I'm just...I'm feeling devastated inside. I walked away from her. She was my best friend at one time. I know she had problems, and it caused trouble for the three of us. I could never walk away from you, But I feel like I'm responsible somehow.\" And then it was my turn to cry, hard, inconsolable tears. Eva held me in her arms like I had for her the night before. She rocked me back and forth like she did for our children when they were hurt or sad about something. She hadn't needed to do it for me in a very long time, since my mom died, probably. But I needed her then, the most nurturing woman imaginable. \n\nConnor knocked on our door. \"Hey, is everything all right in there?\"\n\nEva answered him. \"We're fine, honey. Your dad got some very bad news while you were out. An old friend of his died.\" That was as much as he needed to know for the moment.\n\n\"OH! Dad, I'm sorry. Take your time. I'll look after Rachel. Just keep in mind I need to take a shower soon. But I'll keep her busy the rest of the day if you want.\" Our good hearted son. His presence would be sorely missed in the house.\n\n\"Thanks, Connor. I'll be all right. We'll be downstairs in a little while.\" Eva kept holding me, encouraging me to feel my grief. I was hurting deeply inside, in a way I couldn't even explain to my wife. \"When's the funeral?\" I asked simply.\n\n\"Tomorrow, at noon in Westchester. Sweetheart, I know you want to go, and I want to go with you. But we have that visit from the Commonwealth Department of Education tomorrow. One of us has to be there.\"\n\nShit, I forgot about that appointment. \"Then I'll go myself.\"\n\n\"Jon, it's over three hours each way. By the time the funeral is over and you visit at their home for a while...it's going to be exhausting for you. I don't want you driving home like that.\" She looked so worried for me. I touched her soft cheek and I then pulled her close to me. \n\n\"How about if I take Connor with me? He and I can talk, he can even do some of the drive home.\"\n\n\"He doesn't have any tests tomorrow. I just always worry about treating our own children differently than we would treat any other students.\"\n\n\"Do you think we wouldn't give an excused day to any other student in a similar circumstance? A funeral of someone important to the family?\" I was still in tears, my eyes red and rheumy. \"I really would like his company. And I want to tell him about Adrienne.\"\n\nEva nodded and she hugged me again. \"And he'll love the opportunity to drive your BMW. Another first.\" We shared a smile and a kiss before we went downstairs. I took Connor aside before he went to shower and I told him I needed his help the next day. We were going to the funeral of an old, dear friend. \n\nWe left the next morning a little after 8, and after fighting with the traffic going around Philly, we got into New Jersey and drove up the Turnpike with easy flowing traffic. We didn't talk a lot on the ride to Westchester, just some things about his life, things about what he needed to do and get before reporting to Annapolis (he didn't need much; the Navy would take care of that), and he told me we could come visit in mid August for Parents Weekend, towards the end of Plebe Summer. I had my reservations, but inside, I was incredibly proud of him. \n\nWe got to the funeral home a little early. I recognized some familiar faces, friends of my parents who were friends with Sandy and Marvin as well. I said hello, hugged some of them and introduced them to Connor. Then Sandy and Marvin got there and they looked so old. I had no idea how much of that was their natural aging and how much was the pain of the last few days. They just looked so much older than their approximately 60 years. \n\nWe took our place in the line of mourners to comfort the family. When Connor and I got to the front, Sandy threw her arms around me and cried hard, and I joined her. \"Come see me at the house after the burial\" she whispered. \"We should catch up, Jon. Where's Eva?\"\n\n\"She couldn't come. She had a meeting at work. We're the co-principals at a private school outside of Philadelphia. We've been there for nine years now. And this is Connor.\"\n\nMarvin shook our hands and of course they remarked on the last time they saw him when he was twelve days old. It was a nice moment during a terrible day.\n\nSeeing the casket, knowing Adrienne was in there, almost broke me down. Connor grabbed my hand when he sensed I was about to lose it. \"It's all right, Dad. Hold onto me. I've got you.\" Thank god I brought him with me. I would have been a wreck if I had gone alone. We got through the service and the internment before heading back to the house. \n\n\"Just for an hour or so, son. We just need to make an appearance.\"\n\n\"Dad, it ok. Take your time. I understand she was someone important to you.\" I gave him a grim smile as we went inside. \n\nPeople were all over the house. Sandy and Marvin sat on those uncomfortable cardboard boxes. There was a ton of food that some ate and others couldn't touch. When Sandy saw me, she got up and took me aside into a guest room and sat down with me.\n\n\"Jon, what happened to you and Adrienne? You were such good friends. She never told us what happened the night of her prom. And then, after you got married, you never spoke again.\"\n\n\"Sandy, I don't know if I can tell you about all that. It's personal, and it might be embarrassing to hear.\"\n\n\"You think I could be more upset than I already am? You think I could have my heart ache more than it does right now? Please, Jon. I need to understand. You were her best friend at one time.\" Her eyes pleaded with me.\n\nI ended up telling her most of the story, about how Adrienne reacted when she realized how deep Eva and I had fallen for each other, that she always held out hope for the two of us, I even told her about how she tried to seduce me the night of her prom. How it just made it so hard to be around her when I was completely in love with someone else.\n\nThen I asked her \"Sandy, what happened to Ade? Why did she do this?\" Sandy told me, after getting herself together, that Adrienne never was able to get herself going in life. Her relationship with Justin fell apart not long after I saw them at Connor's bris, she couldn't hold a job or a boyfriend. She saw life passing her by, even with therapy and medication. And the other night, she just ended it while her parents were out with friends. ",
        "It was like a knife in my gut. Someone I cared so much about for so long couldn't get her life together. She was a lost soul and I wasn't there for her in any way. The guilt washed over me in waves and I told Sandy I was so sorry I didn't do better to try to keep her in my life.\n\n\"Jon, you had a young family to raise, you had your own family problems with your father, then raising your sister. This isn't in any way your fault. Marvin and I will be carrying this for a long time to come, the rest of our lives,\" Sandy said through her painful tears, \"but I don't want you blaming yourself. I won't allow it. My daughter\" she started crying hard, \"my beautiful daughter, was always a soul in pain. Her doctor couldn't save her. We couldn't save her. It certainly isn't your fault. You had to take care of your family. No one can blame you for that. I just wish you could have brought Eva and...Rachel? Is that her name?\" \n\n\"Yes, Rachel. Would you like to see her picture?\" I brought out my wallet, where I had about a dozen pictures of my family in individual shots and a few with all four of us together. \n\n\"Jon, you have a beautiful family. Don't feel guilty or apologize for putting them first in your life. Mourn for Adrienne, but do not feel any guilt. Love your family and cherish them for every moment you have with them. Your parents would be so proud of you. I miss them terribly, especially right now. I wish your mother was here.\" We both were crying, but for me at least, it was a healing cry. Catharsis can be vitally important in healing. Sandy was a long way from that. But I felt better afterwards. \n\nConnor and I had a light bite to eat before we had to go at 4. We were going to hit traffic as it was. I called Eva on my cell phone and let her know we were on our way and would be home around 8. Hopefully. I gave Connor the keys to my Beemer, my 'baby', and I let him drive it for the first time. He broke into a big grin and I smiled back, a father-son moment. And on the way home, we talked about Adrienne. He got to know about my friend, someone who at one time was so incredibly important to me. I even told him a few things I never told his mother, like how we were 'boyfriend and girlfriend' when we met in pre-school when we were four. How we were each others first kiss, very chaste, how we talked about sex when we didn't know all that much. How we swore to be friends forever when we were nine.\n\n\"I broke that promise, Connor. Things happened with us after I met your mother that made staying friends difficult. I know I did what I had to, to raise you and still be a kind of parent to your aunt. But I feel very bad about it. Not as bad as I did last night. But I'll always feel sad that I wasn't there for her when she needed someone.\"\n\n\"Dad, what could you have done? We needed you, me and Rachel and Mom. You've been an amazing father. I know guys who barely talk to their fathers. Some of them come from broken homes, and some talk to their dads, but others never see theirs. Their dads pay the bills and that's it. I can't imagine you doing that. You took care of your family. You can't be there for everyone. It's not possible.\"\n\n\"You know, on the day of your bris, I also saw your grandfather, my father, for the last time. You know he had a lot of problems after my mother died. He couldn't stop drinking and I couldn't allow that around Cammy or you. It was a terrible choice, but I made it and I don't regret it. Because I had to protect my family, my sister, my wife and my son. And after he left the house, after I saw him for the last time, I picked you up, not even ten pounds yet, and I told you I would never, ever leave you. I'd be here for you for every day of my life. I know, a lot of the kids at school have absentee fathers, some of whom live with their families, but are not at all involved. They cheat on their wives, which to me is the same as cheating on your family. I would never do that. Of course, it helps that I'm still madly in love with your mother. I've never thought about another woman since we started dating. She's my world, as are you and Rachel. And my sister. You all make up my world. Your mom feels the same way. That's why she's been upset about you going into the Navy. You're a part of her world, Connor. If something happened to you, it would kill her inside. And me as well. But I understand this better than she does. So do me a favor. I know she's being supportive. But try to be extra nice to her the rest of the way until you report for Plebe Summer. She's trying for your sake.\"\n\nWe had an understanding. This little trip helped us, and it helped make things better all around at home. And that night, when Eva and I were alone, we had a talk about Adrienne and those little things I never told her about. She held my hands and just let me talk through. My wife, my beautiful, inside and out, wife, understood and just gave me love and affection. And a little later, when the night was black and I had asked her about the visit at school, we made love, very gentle, very warm and loving. It was a beautiful night and we closed the one last small gap in our lives. Years later, I still feel Adrienne's loss. But I almost always try to remember the good times, when we were children and teens, when we were each others best friend. \n\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n\nI hope you enjoyed this chapter. Your votes and comments are as always, greatly appreciated."
    ],
    "authorname": "Rabbitman55",
    "tags": [
        "relationships",
        "love",
        "romantic"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/eva-pt-14"
}