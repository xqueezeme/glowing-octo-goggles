{
    "title": "Felicity Ch. 15",
    "pages": [
        "My life changed as the result of a court ordered paternity test. Every guy that had attended a party at a fraternity house had been summoned but since I was not a member of the fraternity I was one of the last ones tested. I vaguely remembered attending the party but I did not remember getting laid. The party had taken place nearly a year before.\n\nI figured that whoever they were looking for it was not me.\n\nIt was me.\n\nThe photograph of the girl I had impregnated meant nothing to me and even though I conceded the validity of the test I could not remember having sex that night. I admitted to probably being very drunk.\n\nIt soon became a matter for lawyers. The girl's family seemed to think they had won the lottery. Whatever the child won in court they thought it would be theirs to share.\n\nWhen my Dad died Mom and I inherited a large amount of money. He had been a shrewd investor. As soon as the girl's family and lawyers learned that piece of information threats and accusations came flying in my direction.\n\nOur family lawyer hired a private investigator to check on the girl and her family and when it came into our hands Mom and I spent an evening poring over the report. We debated the details of the report at length but eventually came to the conclusion that the girl was a good and honest person that with one exception was born into a family of slime-balls. \n\nThe exception was the girl's older sister who was also her lawyer. She had put herself through school in spite of her family. She had been working since she was a sophomore in high school. \n\nThe mother of my child had been attempting to do the same thing. \n\nI had derailed her plans.\n\nMom's original thought was to fight the whole process to a standstill, she was positive I had fallen into a trap. She now conceded that a naive girl had simply been caught up in a situation well over her head and I had been too.\n\nThe next day Mom called the girls lawyer and asked her to join us for dinner that Wednesday night. She told her that our lawyer would not be present and that she wanted her to bring her sister and her new niece. It was to be an informal get together just so we got to know each other. To Mom's great surprise she readily agreed.\n\nThe next evening changed everything. The girl suing me for paternity was Miss Victoria Russell. She was small, maybe five two, one hundred pounds. She had dark hair and wore glasses. She was plain looking although a bit on the cute side. Her body was excellent.\n\nShe did look familiar but not sex partner familiar. We may have had a class together and may have been someone I nodded to in passing. She was very nervous and apprehensive.\n\nHer older sister, the lawyer, looked vaguely like Victoria was three inches taller, maybe as many as ten years older, no glasses, and a blonde. Her name was Fay. \n\nShe seemed to be quietly confident in a non-adversarial way. She had a genuinely friendly smile. Mom seemed to like her immediately and allowed some of her defensiveness to drain away.\n\nMy daughter was in a carrier and was all bundled up so I could not see her until she was taken out it. \n\nFay handed her to me without speaking and my world changed. \n\nAs soon as I had her in my arms I was a father madly in love with his baby daughter. \n\nFay and Mom saw that of course and the entire tone of our meeting changed.\n\nFay said, \"Everything I am going to say is off the record and I will deny we ever had this conservation or that I was ever here if I have to. My family wants to share in what they expect to be a large settlement. Vicky and I would prefer to keep the family out of it. \n\nI apologize for all of the veiled threats hurled at you; they have come from the family and my firm. None have come from Vicky or me.\n\nVicky has always known who the father was but thought the pregnancy was completely her fault and intended to raise the child by herself. Our mother thinks that fraternity people are rich people and wanted the money so demanded the discovery.\"\n\nMom asked Vicky, \"You knew who that father was all the time?\"\n\n\"Yes. He is in fact the only one I have had sex with in three years. I had seen him often and knew he was smart and polite. He does not remember but often he has held a door for me as I entered or left a building. We had a class together once but he would not remember me from that. There were over fifty people in that class. I admired him from a distance.\n\n\"At the frat party I was an easy conquest for him and I was sober. I do not drink. \n\nHe seemed to think I was gorgeous so I knew he was drunk. He had his choice of girls that night so I was very flattered that he was spending time with me. We laughed a lot. We played a video game and I beat him easily, he could barely handle the controllers.\n\nHe asked me what he owed me. I said a kiss. That kiss led to another and another until a couple interrupted us and asked to play the video game. We gave way to them and headed for a couch to continue our kissing but by then every part of the room had couples having sex. I decided to let him have me and took us to a small space between the back of a couch and a wall.\n\nI expected him to simply take me and brag about his easy conquest.\n\nI expected to brag about getting laid at a fraternity party to my girlfriends. \n\nNeither happened. \n\nHe made love to me; he made me feel like I was the most important girl in his life. He never hurried, he waited for me.\n\nHe made me faint. \n\nWhen I recovered he was gone. I dressed and went home.\"\n\n\"Do you remember any of that?' Mom asked me. \n\n\"A bit more now than I did before. I remember getting trounced in the video game and I remember the kiss. The only part I remembered before tonight was going to the couch with a glass of water to give to someone on the floor behind it. \n\nSince there was no one there I thought I was too drunk to think straight and I came back home. I am kind of glad I had not been hallucinating.\"\n\n\"You came back to find me?\" Vicky asked with surprise.\n\nI nodded yes as I gave her a closer look. I briefly closed my eyes and remembered the kisses. I had eaten them up.\n\nMom asked Vicky, \"When did you learn you were pregnant?\"\n\n\"Fay does not believe me but I knew before I stepped out of the back of the couch. One missed period later I got confirmation. I was on the pill but I was not very consistent in taking them. \n\nI am too plain even for horny college guys and most of my sex was with a nice toy Fay gave me when I started college,\" she said and immediately regretted it. \n\nShe blushed a deep red. \n\nI could see that Vicky could not believe she had said that. Fay was blushing too. Mom had a knowing smile on her lips.\n\nVicky stuttered a bit before she added; \"I can tell you that I was not a bit upset over the pregnancy.\n\nI kept the condition to myself until I began to show. My parents insisted I tell them who the father was but I told them I had been to a fraternity party and was too drunk to remember. They heard the word fraternity and they saw dollar signs.\n\nI knew you did not belong to the fraternity and did not expect them to summon you but apparently someone remembered you were there. Sorry.\"\n\n\"Thank you for trying,\" Mom said to Vicky. \"That was brave of you.\"\n\n\"I just wanted to cause the least amount of trouble,\" Vicky said. \n\n\"Life at home had been difficult at best; after my condition became obvious it became a living hell. Fay made a bit of room for me in her small condo and I have been spending most of each day there.\n\nShe was the only member of the family with me when the baby was born.\"\n\n\"Had I known I would have been there,\" I said.\n\nThree sets of female eyes looked at me in astonishment. \n\nI wanted Mom to understand so I gave her the baby to hold. She knew what was going to happen and was reluctant to hold my daughter, her granddaughter. \n\nA minute later she said, \"Had I known I would have been there too.\"\n\nI saw a tear slide down Vicky's cheek. \n\nFay was barely containing her own tears but managed to say, \"Vicky is dead set against my even bringing this up. In fact I had to promise her I would not call you and I was ecstatic when you called me. \n\nI have a proposal,\" Fay said.\n\n\"Fay don't,\" Vicky said.\n\nFay continued, \"The goal here is to do the best for the baby. Having her grow up in our family does not guarantee fair treatment or loving care. It did not for Vicky or me. \n\nThere is however one solution to the problem, a way to make sure your daughter gets every advantage we never had and keeps our family out of it for good.\"\n\nFay looked at me and said, \"Marry Vicky.\"\n\nMom and I were stunned by the idea. As we mulled it over in our heads Vicky scrambled to say to me, \"It does not need to be a real marriage, we do not have to live together or anything. Fay thinks that it would only need to last one year. We would then divorce and you would have to provide child support but it would be a lot less than you would have to pay on a court order now and you would know where the money was going.\"\n\nI looked at Vicky and saw that she was borderline terrified. I looked at Mom and saw conflicting emotions as she looked at me then looked at the baby in her arms. Fay however was confidently calm; she knew her plan was the best solution.\n\nI quickly found myself agreeing with Fay.\n\n\"What is my daughters name?\" I asked.\n\n\"Fay,\" Vicky answered.\n\n\"No it's not,\" said Fay\n\n\"Actually right now it is baby Russell. We have not filed the papers as they were missing a last name.\"\n\n\"Her name is Fay Marie Chapman.\" I said.\n\n\"Marie?\" Vicky asked.\n\n\"It's the name of the old woman that won't let go of our daughter.\"\n\n\"Fay Marie Chapman it is,\" Vicky said in confirmation.\n\nMom and Fay seemed to be on the verge of tears. \n\nI asked Vicky to join me in the kitchen since the best chance of eating supper was going to be if we served it ourselves.\n\n\"You two figure out how the wedding part is going to work,\" I said to Mom and Fay. \n\nI had already decided that I needed to have ready access to my daughter.\n\nFay had a big grin on her face. Mom had a worried smile but I could see she was not going to object to my decision. We had a deal.\n\nVicky and I served dinner on the kitchen table. The original plan was to eat in the formal dining room but that was for dining with strangers. Vicky assisted me the best she could although she was in a complete state of shock. I kissed her on the cheek and that seemed to help some but she was pretty much out of it all through dinner.\n\nMom only released Fay Marie to return her to her carrier as we ate. \n\nThe wedding plan was simple; we were going to elope to Vegas as soon as possible. Fay did not want her family or her firm to have an opportunity to gum up the works. Vicky was twenty years old but as a student living at home her parents held considerable clout. \n\nFay knew that if her parents put full pressure on Vicky she would do as they wanted.\n\nFay had a prenuptial agreement already drawn up. She confessed that after she had run a check on me she was confident that I would approve of her proposal. She though I was a good guy, (a real boy scout she said), and would probably maintain a relationship with my daughter even after Vicky and I divorced. It took her two minutes in my house to see that she was right.\n\nMom led Fay to the dining room and they went over the document as Vicky and I cleared the dishes before returning to the living room. \n\nAfter a few minutes Mom came to the living room and asked Vicky to stand up. As soon as Vicky did Mom hugged her. \n\nVicky seemed to hesitate but I soon saw her close her eyes and return Mom's hug. \n\nVicky needed that hug; she fought back tears.\n\nMom whispered something into Vicky's ear that may have been a question. Vicky did not say anything but her eyes widened and she blushed and that may have told Mom what she wanted to know. Mom kissed her cheek and hugged her again then without another word returned to the dining room.\n\nShortly after she rejoined Fay in the dining room we heard a squeal of delight from Fay and a loud kiss.\n\n\"I think they are getting along nicely,\" I said in a major understatement.\n\nVicky nodded with a smile and as she did a tear slid from an eye. Apparently our treatment of her had been completely opposite of what she had expected. \n\nMom called Harry, our family lawyer, and he came over in about thirty minutes. While he and Fay went over the papers with Mom in the formal dining room Vicky and I became better acquainted. \n\nI held my daughter in my arms and asked Vicky if my daughter was dating anyone, had any speeding tickets and so on. Talking to Vicky was easy; she enjoyed my outrageous statements and had the sense of humor to extend the jokes. \n\nShe told me that I needed to talk our daughter out of getting a tattoo on her butt.\n\nWe laughed at everything with a sense of relief as we felt the dark cloud over us acquire a silver lining. I now somewhat remembered that on the night of Fay Marries conception Vicky and I did laugh a lot, that we shared a droll sense of humor.\n\nWhen Mom returned to the living room Vicky and I saw a lipstick imprint of a kiss on her cheek and I asked her why Fay had kissed her.\n\n\"Because I am a fine looking old broad, why else?\" she said.\n\nVicky and I smiled and waited her out and Mom finally said, \"OK. Fay really liked some suggestions I made. That's all. Harry seemed to think they would be fine. \n\nFay kissed him too. Your sister is a pushover,\" Mom said to Vicky.\n\n\"Yes, I know. That is how I ended up invading her condo.\"\n\nWhen Mom began to kid us about proper fraternity party behavior she got Vicky to confess that she had wanted to kiss me long before the fraternity party. \n\nI was flattered.\n\nMom confiscated my daughter away from me. She did not ask, say please, nothing. She just took my baby out of my arms. My protest was cheerfully ignored. \n\nI could see we were going to have a running battle over Fay Marie.\n\nMom finally gave up control of baby Fay when she took coffee to the lawyers in the dining room. When she returned to the living room she said, \"The agreement is done, has apparently been for some time.\"\n\n\"When do we get to sign it?\" I asked her.\n\n\"As soon as they come out. \n\nVicky, your sister does not realize it yet but she is in the middle of a job interview. \n\nIt's hard to believe isn't it? Harry, our lawyer, was positive we would have dirty a war because your sister works for a company of shysters.\"\n\n\"Yes, she does,\" Vicky said. \"She is always complaining about them. She was very embarrassed by what they said about him.\"\n\n\"Well with any luck that is about to change. Harry obviously likes her.\"\n\nSuddenly Fay Marie let the world know that she was wet and hungry. Mom took Vicky and the baby to my sister's room and helped with the diaper change. \n\nIt had never occurred to me they might have wanted privacy so I had followed and watched the diaper change proceedings. \n\nI left the room when the breastfeeding began but quickly returned with my camera. I took a picture of Fay Marie at her mother's breast as Mom placed her head on Vicky's shoulder and watched with a radiant smile. \n\nIt would become my favorite photo of all time. \n\nMom burped her granddaughter.\n\nHarry and Fay were waiting for us in the living room when we returned and the legal papers where on the coffee table ready for us. Vicky and I were shown where to sign and we did so without as much as a glance at the details. \n\nI figured that if Harry was OK with it I was too. \n\nVicky figured that if Fay was OK with it she was too.\n\nFay and Harry each put the originals in their briefcases and copies on the table then the conversation immediately turned to how adorable my daughter was. \n\nHarry asked to hold her claiming her as his new client, which brought an immediate challenge from Fay.\n\nWe saw that her indignant reaction was a complete sham; her big smile gave it away. I saw that Harry was already one of her heroes.\n\nHarry gently said to Fay, \"No need to get uppity young lady. We are on the same side.\" Harry gave Mom a wink then formally introduced himself to Fay Marie as her back-up lawyer.\n\nFay did not catch the wink or the implication of Harry's remark but when Vicky saw the smile on Mom's face she got it and flew to her sister and gave her a big hug and kiss then gave Harry a big kiss on the cheek.\n\nAs Harry was leaving he told Fay that he would leave some papers for her at our house on Monday. He kissed Mom and Fay on the cheek and said goodnight. \n\nFay then turned to me and gave me a lung-squeezing hug as she said, \"I knew you would not disappoint us. I just knew it.\" She kissed me on the cheek then repeated the act with Mom except that the kiss for Mom was enthusiastic and on the lips.\n\nFay returned to the coffee table and pulled out a paper from her briefcase and placed it on the table. \n\nWhen Fay turned to look at us she saw three big smiles for her.\n\n\"What?\" she asked.\n\nFay was still clueless.\n\nMom asked her, \"What do you know about Harry's firm.\"\n\n\"Completely first rate, the most important firm in the city. I expected a war. My firm expected a war we could not outlast. They were hoping for an offer to settle. \n\nI was terrified.\n\nI am so shocked and so pleased at how well it went. Harry even pointed out some errors I had made that would have cost Vicky in the long run and showed me how to rephrase some passages to make them clearer. \n\nThanks again for your suggestions,\" Fay said to Mom and kissed her again, this time it was a soft kiss on the lips. \n\nIt apparently suddenly dawned on Fay that it was the second kiss on the lips she had given Mom in less than five minutes. Fay quickly became embarrassed at her boldness but before she had the chance to apologize Mom kissed her back.\n\nFay gave Mom a hug then continued, \"The entire negotiation took twenty minutes. Harry did not object to a thing. I was very flattered over that.\n\nDoing the changes you wanted took ten minutes and we had printed copies with our signatures in just over thirty minutes. We were just shooting the breeze the rest of the time.\"\n\n\"No you were not,\" Mom said. \"You were in a job interview. \n\nYou have been hired.\"\n\nFay was shaking as she sat on the couch, on the verge of tears. \"Oh no, I can't. It's out of my league,\" she sobbed.\n\nMom sat with Fay and hugged her. She said, \"That nice old man you just talked to is the shrewdest judge of character in the world. He is also the managing senior partner in the firm. If he thinks you will be an asset then you will be an asset. \n\nAnyway, for what you did tonight you are certainly going to be fired on Monday. Just think about how nice it is that you already have another job.\"\n\nMom helped a stunned Fay stand then led her to her bedroom as she caressed Fay's shoulder and back.\n\n\"You are apparently spending the night,\" I said to Vicky. Lets go back to my sisters bedroom, I will bring you something to wear in bed.\"\n\nAs we walked to my sister's room Vicky asked, \"Where is your sister?\"\n\n\"Married and living in Luxembourg. You will meet her Thanksgiving.\"\n\n\"She is coming home?\"\n\n\"No, we are going to Luxembourg. I will be right back with a t-shirt.\"\n\nI searched for my more comfortable t-shirts and brought her a couple.\n\n\"I don't have a passport,\" was the first thing she said when I returned.\n\n\"Then make sure Fay brings your birth certificate when she goes to your parents house next time. We will need it for the wedding anyway. \n\n\"Fay already has my birth certificate. She was convinced that you would accept her proposal and we would be married. \n\nI though you and your mom would get mad and throw us out. Fay is a lot better at reading people than I am.\"\n\n\"I am glad you came over. I did not expect to say yes to a marriage proposal tonight but as they say in one word, youneverknow.\"",
        "Vicky laughed at the old line as she handed my daughter to me.\n\n\"I guess Fay Marie will need a passport too now that I think about it,\" I said. \"Her birth certificate with her real name needs to be filed quickly. We are short on time on that but we can wait until we can have your married name on the passport.\"\n\n\"My married name. That sounds so weird. \n\nWould there be a toothbrush I can use?\"\n\n\"There should be a new one in her vanity drawer. You can take a shower if you want. Fay Marie and I will just lay here and make out for a while.\"\n\n\"Vicky giggled and said, \"Thanks, I think I will.\"\n\nI had a rough copy of the pre-nuptial agreement Fay had placed on the coffee table earlier and read it as Vicky took her shower. I smiled at the additions Mom had made in her handwriting during the negotiations with Fay. Mom lined out one item, the one that specified that the marriage would be dissolved in a year. \n\nMom was not going to give up her granddaughter without a fight, or so I thought at the time.\n\nFay Marie was sound asleep and draped over my chest when Vicky came out of the bathroom. My camera was still on the dresser so Vicky took a picture of us. \n\nThat would become her favorite picture ever.\n\nI tried not to stare at her body as it moved sensuously inside my much-too-large for her t-shirt.\n\nVicky said, \"We need to talk about the marriage thing. Fay does not have room for the baby and me. I will need some help in moving out of my parent's house. I will not be able to afford to live in this neighborhood but I will try to...... why are you laughing?\"\n\n\"Because Mom and Fay have all of that in writing,\" I said as I handed her the pre-nuptial rough draft. \n\n\"The agreement includes a clause that states that you would live here, so this is your bedroom. You are a full time college student whose education expenses will be covered through your masters degree.\"\n\n\"I get to go back to school?\" Vicky exclaimed with a sob. \"I live here? This is my bedroom?\" \n\nShe giggled past a tear and said, \"This room is as big as Fay's whole condo. This bed is bigger than her bedroom. That is the biggest bathroom and the best shower I have ever been in.\"\n\n\"Don't worry, it will feel like home soon. You have become a member of our family. It is very likely you will never set foot in your parents house again.\"\n\nI sat up and placed our daughter between pillows on the bed. As I started to leave the room Vicky made a move to hug me but stopped herself. \n\nSo I hugged her.\n\nShe whispered, \"I feel like I just landed in the middle of a fucking fairy tale.\"\n\n\"Hey, no fucking cussing in front of our child.\"\n\n\"Yes sir,\" she said as a big smile interrupted the path of another tear down her cheek. I extended our hug as I kissed the tear.\n\nI eventually released her from my arms. As I closed her door I reminded her that I was across the hallway if she needed anything.\n\nAs I got ready to go to bed more of my memory of her returned.\n\nOur hug had told me my body remembered her and remembered her well. \n\nIt had never been a fuck between us, which is probably why I did not remember her before, that and being drunk. I was trying to dredge up a memory of getting laid at a frat party.\n\nI should have been trying to remember someone I had made love with. \n\nI remembered being hurt when I went back to the back of the couch and there was no one there. \n\nI remembered spending weeks looking for someone but not knowing who or why.\n\nThere was a soft knock on my door as I was putting on my gym shorts before getting in bed. I opened my door and Vicky apologized and asked me to talk her through the pre-nuptial agreement. She thought she understood it but wanted confirmation. \n\nWe returned to her room and flopped down on her bed and discussed the agreement. She had everything figured out correctly and I began to wonder what she was concerned about so I asked her.\n\nAfter a deep breath Vicky said, \"Fay and or your Mom crossed out the part where we divorce after one year. \n\nI think they want us to have a real marriage. I want you to know I would never hold you to that. I know I am not what you expected your wife to be and I will never hold back your search for her. I am very happy just knowing you adore our daughter.\"\n\nI said, \"That is very nice of you and you can be assured you have the same privileges. However, I think any sign from either of us that there is someone else in our lives would likely awaken sleeping lawyers. \n\nI do not expect that waiting one year or more will be a burden for me. I have my most difficult classes coming up and you do too. Between school and Fay Marie we have more than enough to keep us distracted. I propose we do not worry about that part at all.\"\n\nVicky gave me a great smile and said, \"OK, deal. By the way I did not expect Fay to manage this, I was hoping for a quiet settlement and something like joint custody and free visiting rights for you. I never expected her marriage idea would work. \n\nWow, is my sister ever going to get fired. Her firm just lost a lot of money.\"\n\n\"I am pretty sure Harry saw that was going to happen and that is why he led her into job interview mode.\"\n\nWe were on our sides in her bed facing each other with Fay Marie sleeping between us. We were talking freely and easily. There were no legal entanglements between us. We were so at ease with each other that we fell asleep somewhere in mid conversation. \n\nI woke up briefly in the middle of the night and watched Vicky change and feed our daughter. When done she placed Fay Marie on my chest and went to the bathroom as I burped my daughter. By the time she returned my baby and I were already asleep.\n\nWhat had begun as the most threatening evening of my life had ended peacefully, happily.\n\nYouneverknow.\n\nWhen I at last awoke that Thursday morning the first thing I noticed was that I needed to get ready and go to class. The second thing I noticed was that the clock I was looking at was the one in my sister's room. By the time I made it across the hallway my head had put it together and I was wondering where Fay Marie and Vicky were.\n\nI took a quick shower, dressed and went to the kitchen for a quick breakfast. I saw a note for me on the refrigerator that said, \"We have gone shopping. Do not go to your afternoon class.\"\n\nI was a bit miffed that I would not get to see my daughter before class but I managed. \n\nI did not like to skip classes but the afternoon class was a lab that could be easily made up so I was fine with that. I expected that we had to make a court appearance or something.\n\nWhen I returned home I was still alone. I was just about to fall asleep on the sofa when Vicky and Mom burst into the house. I was handed the baby bag and my baby and told, \"Here, change her.\"\n\nI thought it had been a joke but they immediately walked out of the door and back into the car. \n\nFay Marie was getting very upset. I told her, \"Sweetheart, you have been placed into the arms of an incompetent. Be nice to me.\"\n\nFortunately I had followed the previous nights diaper change closely and I had an idea what to do. \n\nGetting her wet diaper off got Fay Marie into a better mood immediately. However I had just about ruined her mood by the time I had her new diaper on. \n\nAfter a few kisses and whispers of endearment she decided to forgive me and smiled.\n\nI held her in my arms as I related to her the improbable finish to our baseball team's season. She seemed surprised to hear our team was in an actual winning streak but I assured her it was true. As I began to recount their last win I realized I was not alone, Mom and Vicky had been listening in on us and were grinning ear to ear.\n\nThey snapped out of it and I quickly found myself packing a bag, our plane to Las Vegas was leaving in two hours.\n\n\"Is Fay coming with us?\" I asked.\n\n\"She is meeting us at the airport,\" Vicky said. \"She is filing Fay Marie's birth certificate.\"\n\n\"Why are we in a hurry?\" I asked Mom.\n\n\"Because the only time slot Fay could find at a non-cheesy wedding venue that was not already booked forever is tomorrow night at 8:30. We need to get your wedding license and certificate papers before then. We have until midnight tonight and most of tomorrow but you know I never expect anything to go smoothly.\"\n\nWhere are we staying?\"\n\n\"The Mirage. Vegas is full. according to Fay. A big convention of some kind. But we did get two rooms. You and Vicky keep your hands off each other for a change.\"\n\nVicky and I both blushed which pleased Mom immensely.\n\n\"Put this on,\" Mom said. \n\nIt was a baby sling pouch that was worn like a reverse backpack. \n\nMy daughter was going to be riding with me.\n\nFay Marie got us on the plane ahead of everyone else. Vicky sat with me, (and our baby), and Fay sat with Mom.\n\nIt was my first lesson in the complex logistics involved when traveling with a baby. We had a lot of stuff. I was glad the baby pouch allowed my hands to be free.\n\nMy daughter slept right through take-off and slept until we were almost two hours into our flight at which time she began to complain about something. \n\nI told Vicky I would take her for a diaper change but she pointed out that we had an empty seat between us and we could change her there. \n\nAfter I lifted the armrests and put down her changing pad we did just that, or I did with her supervision. \n\nVicky thought I had done well. So did the stewardess that had watched me intently. She patted my shoulder before she resumed her journey to the galley.\n\nVicky then got ready to breast feed as I handed our baby to her. Before she covered her bare breast I may have emitted a small sound. Vicky giggled as she leaned to me and asked me, \"What, are you hungry too?\"\n\n\"Famished,\" I said with a wolfish grin.\n\n\"Masher,\" she said with a grin.\n\nI looked across the aisle ready to protest my innocence but Mom and Fay were snoozing. \n\nI took my daughter and burped her while Vicky went to the restroom. Fay Marie was sound asleep and back in my pouch when Vicky returned.\n\nVicky closed her eyes and did some snoozing too. \n\nAfter a while she moved around in her seat to get more comfortable and ended up leaning on me with her head on my shoulders. I turned a bit towards her to make her more comfortable. \n\nBefore I closed my eyes I saw Mom was looking at us with a grin on her face. \n\nI do not know why I did so but I felt myself blush. \n\nI did not take a nap but I remained in place until the pilot announced we were on final approach.\n\nOur luggage was there by the time we made the long trek to the carousel and Mom got us a limo to the hotel. We made it to our rooms and Vicky and I were pleased to see a bassinet in the room. \n\nI was conflicted when I also saw two queen beds in the room.\n\nMom said we had ten minutes to get refreshed then we were going to the courthouse. It was just before three in the afternoon Vegas time.\n\nWe were dismayed at the number of people in line for marriage licenses but we stood in line for a lot less time than we had expected. Many of the people that appeared to be in line were family and friends of the couple applying for the license and the lady at the counter was very quick and efficient. Much to our surprise the lady only asked for our drivers license, and the fee. \n\nWe were back to our hotel well before five.We had over twenty-four hours with nothing to do. \n\nOf course, we were in Las Vegas. \n\nMom and Fay went directly to the casino while Vicky and I went to the ticket desk. I got us tickets to Mystere for that night and for the Blue Man Group for the night after our wedding. On our wedding night I thought I would take us dancing. It never occurred to me to ask Mom and Fay if they wanted to join us. \n\nVicky and I returned to our room and took the time to fill in some certificates that went along with the marriage license. One of them was going to be needed for Vicky's passport application and her new drivers license. \n\nWe gave Fay a bath and then took turns in the shower. We dressed and did our best to find Mom and Fay. We were about to give up when my phone rang, it was Mom.\n\n\"We are at Wynn's. I wanted to see Emeril's restaurant here but have not found it yet. If you two have not eaten already come join us.\"\n\n\"We are on our way,\" I said to her.\n\nIt is not at all difficult to find Wynn's and after perusing their floor plan we found the restaurant easily enough. Mom and I had been to all three of Emeril's restaurants in New Orleans but this one, called Table Ten, was a completely different experience. \"Modern chic,\" Mom called it.\n\nAfter glancing at the menu the first thing I said to Mom was, \"I hope you are buying.\"\n\n\"Yes I am,\" she said brightly.\n\nI learned that she was on her third drink of the day, Crown Royal on the rocks. I was happy to see that Fay was sipping wine, possibly the only responsible adult at the table. \n\nThe meal was terrific and apparently so was the ladies room. Vicky and Mom and Fay went there to among other things change Baby Fay's diaper and were stunned by its opulence. They pilfered a stack of monogrammed paper towels that were twice as big and ten times softer than any they had ever felt. Vicky told me our daughter was going to appreciate it when she felt them on her butt.\n\nMom asked my opinion of Table Ten and I said, \"Nice, different, but I still prefer the one on Tchoupitoulas.\"\n\nI asked Mom and Fay what their plans were for the three nights we were going to be there. \n\nMom said, \"We are touring the casinos and the hotels tonight. Fay has never been here and it has been five years since I was. Don't wait up for us. Tomorrow after the ceremony I thought we should all go dancing. The night after that Fay and I have a club to try out. It is only open on Saturday nights. Did you have anything in mind for us?\"\n\n\"Dancing tomorrow night. I am glad we think alike every once in a while. Vicky and I have a show tonight and another day after tomorrow,\" I said. \"That one is an early show so I was hoping you could baby-sit for us. \n\nIt is going to loud in there. We should be back before ten.\"\n\n\"That should be OK. We did not plan to go to the club until after ten. \n\n\"How can a club survive if it's open just once week?\" Vicky asked. \n\n\"We don't know,\" Fay answered. \"We assume there is something else going on in the building on weekdays.\"\n\n\"Oh, one important thing,\" Mom said. \"The three of us are spending most of tomorrow getting ourselves dolled up. You are babysitting. \n\nDon't panic, we will be in the hotel just one loud scream away. One of us will check up on you regularly.\"\n\nI breathed an incomplete sigh of relief. My daughter was a happy, calm baby but I was a green rookie. I knew that somewhere, sometime soon I was going to find myself in over my head. \n\nIt was then that it occurred to me that Mom was the only one of us with any experience at all. Vicky had six weeks of on-the-job training but I was sure there were hundreds of situations she had not faced. I was very glad that we would be under the same roof for a while.\n\n\"What show are you seeing tonight?\" Mom asked.\n\n\"Mystere and we better start that way. Thanks for dinner Mom.\"\n\nWe exchanged kisses and they headed for the casino as we headed for our show.\n\nWe left Wynn's and made it to Treasure Island, or T I as they call it now, in plenty of time. Vicky gave Fay a pre-emptive feeding then we ambled to our seats. \n\nOur hotel must have had its own stack of tickets because we got good seats for a sold out show just hours before the performance. I decided that I needed to do some math on my credit card to see how much of a premium I had paid. \n\nI did notice that someone had signed our tickets. Mom and Dad had stayed at the Mirage on each of their trips and I wondered if they still had VIP status. I was a junior so maybe?\n\nI loved Mystere and Vicky was enraptured by it. Watching her wonderment and hearing her laugh and gasp made whatever I paid for the tickets a bargain.\n\nAfter the show I got her a Mystere souvenir shirt. \n\nAs we walked back to the Mirage we held hands.\n\nWe were in our room before Fay Marie stirred again. I changed to gym shorts and a t-shirt while Vicky took care of our baby. I then rocked and talked to Fay Marie while Vicky changed. \n\nWhen she came out I had to whistle. She was wearing a long, silky, deep black nightgown with lots of folds. She looked stunning in it.\n\n\"I take it you like it. Your Mom bought it for me this morning.\n\nWow, I can't believe it was just this morning. \n\nIn fact everything in my suitcase and the suitcase itself she bought for me this morning. We owe her a lot of money.\"\n\n\"No problem,\" I said. \"She will take IOU's.\"\n\nWe put Fay in the bassinet and got in our separate beds. We watched the Vegas attractions channel for a while and Vicky concluded that we had no chance to see and do much in our short stay.\n\nOur bodies were still on central time and we were soon yawning. I turned the TV off and Vicky thanked me for taking her on the best date ever. We wished each other a good night and turned out our lamps. \n\nI debated whether I should have given her a goodnight kiss, it had been a fabulous date.\n\nThirty minutes later I was still trying to find a comfortable position.\n\n\"Can't sleep?\" Vicky asked.\n\n\"Oh, probably worried about tomorrow. Not the wedding, the babysitting. And you?\"\n\n\"I am not at all worried about your babysitting.\"\n\n\"The wedding then?\"\n\n\"Yeah, I guess. This is all too good to be true. My baby is going to get a father that adores her. I am about to get a mother-in-law that has shown me more affection in one day than my own mother has shown me in years. I'm afraid it is a dream.\"\n\nI got out of my bed and joined her in hers. I slid my arm around her waist and snuggled against her back. I kissed her shoulder and said, \"Then let us dream together.\"\n\nI felt her sobs. \n\nI caressed her shoulders. \n\nI kissed her hair. \n\nHer sobbing ebbed. \n\nShe snuggled to me.\n\nWe slept.\n\nWhen I woke up on my wedding day I was again alone. Vicky and Fay Marie were not in the room. It was the second time it had happened and I decided I did not like it that much. I reasoned that the person you went to bed with should still be there when you woke up.\n\nIt did occur to me that I had often wished for the opposite to be true.\n\nI concluded that Mom had decided to honor the superstitions regarding the bride and groom not seeing each other the day of the wedding. She apparently did not consider the event as just a business deal. \n\nMom called me as I finished getting dressed and told me to go eat breakfast, that I had about an hour before my first duty shift began. I ate at the buffet then returned to the room. Mom came over to the room about twenty minutes later and handed me the baby bag and the baby.\n\nShe said, \"Fay Marie just ate. You will only have entertainment and diaper duties for a while. At lunch either Fay or me will pick her up and she will go to lunch and you can too. Your long shift is this afternoon but you will have a break before you need to get dressed.\n\nThis is the address to the chapel, take a cab no later than 7:45 P.M.; we will already be at the chapel. We will have a limo at our disposal the rest of the night. Son, I love you. I am proud that you have no reservations about doing the right thing for your daughter.\"\n\nI hugged Mom and told her it was not a problem. I smiled to myself when I realized I was telling the truth.\n\nThe day went by easily enough. Fay Marie slept most of the morning and I only had one diaper change to perform. At about the time she became hungry Fay knocked on my door and took her away. I did not go to lunch but instead fussed with my suit and ironed my shirt for that evening. By the time Mom returned with my baby I was more than ready to get her back.\n\nI did a quick diaper change even though she did not need one then we went to see the concierge. I asked her about places were dinner and dancing were possible. She began to rattle off the usual attractions but I stopped her in mid spiel.",
        "I said, \"I need someplace where she would not get carded,\" and I pointed to Fay Marie.\n\nThe woman's demeanor changed from courteous hotel employee to friend almost immediately. Her name was Alice, about Mom's age and very pretty. She cooed at Fay as she asked me questions about her, to which I fortunately knew the answers. \n\nShe reached down into a counter cabinet and brought out her purse. She pulled out a bulging business card wallet but found the one she wanted quickly.\n\nShe said, \"This is out of the way, it is in fact at the edge of the desert. The food is terrific and they have a patio outside. At what time will you be going?\"\n\n\"About nine.\"\n\n\"Then ask to sit outside, the temperature will be nice by then and there are misters all around the deck. There will be less noise for her,\" she said as she smiled at Fay Marie. \n\n\"There is a small band that plays from around nine to around twelve. They play all kinds of music although I warn you that they are really bad men. My husband is the lead guitarist and my brother is the drummer. My nephew plays the keyboard. \n\nThe place closes at twelve-thirty, which is ridiculously early by Vegas standards but this is not a tourist place. In fact you are the first one in months I have sent there. Any man that will take his daughter dancing has my immediate affection.\"\n\nShe handed me the restaurants card and said, \"Don't worry if it seems that it takes forever before you get there, after you leave the lights behind it is just ten minutes away, less than thirty minutes total from here depending on traffic.\"\n\nI thanked her then said goodbye. I stopped two steps away then turned back to her and kissed her on the cheek. She grinned and blushed.\n\nFay Marie and I went for a hamburger then walked around the hotel for a while. Although I thought she did not yet have the ability to focus she seemed to be fascinated by the chandeliers. The sound of the slots seemed to make her nervous. \"Smart girl,\" I said to her. \"You are correct in fearing those things.\"\n\nI almost did not recognize Fay when she came to get the baby late that afternoon. Her longish mostly unkempt hair had been cut and highlighted. She wore make-up. I wondered what changes I would see in Vicky. \n\nAt seven-thirty I was stepping into a cab, a bit early but as it turned out a good thing, the traffic was horrendous. I got to the chapel at eight and watched as a wedding party filed out. An older man came to me and introduced himself, he told me that he would be conducting my ceremony and ushered me into the chapel.\n\nAfter giving me instructions on the choreography of the event he went to another room. Five minutes later he was back advising me that the ladies had opted to go ahead and start the ceremony. We just needed to give the photographer a couple of minutes and the witnesses a restroom break. In less than five minutes the music began and the four ladies marched in. Fay was holding her namesake as Mom accompanied Vicky down the aisle. They were holding hands.\n\nThere were no radical changes in Vicky's appearance that I could see, maybe some subtle changes in her hair and make-up. She looked gorgeous.\n\nAbout the time I started to worry about a ring for Vicky Mom handed it to me. We had matching wedding bands. A small blur of time later I was kissing my wife. It was not a cursory kiss from either of us; it was a true bride and groom kiss.\n\nVicky and I went outside as Mom and Fay and Fay Marie conducted some business. We held hands. We were in our limo on the way to dinner and dancing before our wedding was supposed to have started.\n\nThe place we were heading to was called Aunty El's and was just as Alice advertised, except that she had omitted one detail; she was the lead singer for the band. \n\nAfter dinner I waited for a ballad and asked Vicky to dance with me. I heard Alice dedicate her song to us. Vicky buried her face on my shoulder and trembled a bit.\n\nAs the song ended and we applauded Alice stepped down from the stage and kissed our cheeks. \"I better see you dancing with your daughter before the night is out or there will be hell to pay,\" she said to me.\n\nI said, \"The next ballad.\"\n\nMom and I danced to old-fashioned rock and roll; she and Fay danced to one of those country music line dances. When the next ballad began I picked up Fay Marie from the carrier and walked us to just inside the door between the patio and the dance floor and I danced with my daughter. \n\nAlice was beaming, so were Vicky, Fay, and Mom. Vicky was next to us as I danced with our daughter so I took Vicky's hand and urged her to me and as the song ended I was dancing with my wife and daughter.\n\nMom said that some of the applause was for us.\n\nNot long after that the band launched into a long rock instrumental number. Alice left the stage and came to our table and I introduced her to my family. \"This is my wife Vicky, my sister-in-law Fay, my Mom Marie, and you already met my dance partner Fay Marie,\"\n\n\"I wonder how she got her name,\" Alice said with a giggle. \n\nI brought a chair over for her as Mom and Fay thanked her for allowing us into the world of the real people. \n\nAlice laughed and welcomed us. \"How did you like the food?\" she asked.\n\n\"Terrific,\" I said. I even liked the green sauce on my steak.\"\n\n\"It is a special avocado sauce they make here.\" \n\n\"He put that sauce on my salad and it became the best salad ever,\" Vicky said. \"We have been dipping our fries in it. Do you think we could get the recipe?\"\n\n\"I doubt it. I have been begging for years and all I know is that there is lemon, not lime in the recipe. The silly old woman that owns this joint promised that she would leave the recipe for me in her will. I am trying not to kill her since she is my aunt.\"\n\nWe laughed at that line and had a very nice visit until Mom suddenly exclaimed, \"Alice Turnbull of The Fronds! I knew I recognized the voice.\"\n\n\"Wow, you must have been one of our seventeen fans. Thanks,\" Alice said.\n\nMom laughed and told Fay and Vicky, \"Her band was awesome, and they had a hit album with four songs that ran through my head all through my senior year in high school. Then they just vanished. What happened?\" Mom asked Alice.\n\nAlice said, \"Same old story. When we started the band I was the keyboardist's girl. He was the founder and leader of the band. Eighteen months later as we finished the album I was the guitarists pregnant wife. We were asked to leave the band so I became a teacher and my husband became an accountant. \n\nThis is our hometown, really, it is. We play now and then when some venue finds itself in need of a temporary act. My family talked us into appearing at their joint on weekends so we decided to do that for the free food. That plus it is fun for us.\n\nI was working at the hotel today because the real concierge is at his daughter's wedding. I do work at the Mirage and at T I part time during the summer.\"\n\n\"I want your autograph,\" Mom said.\n\n\"I don't give autographs,\" Alice said. \"Would my cell number be OK? I think we need to talk some more.\"\n\nMom looked at Alice in astonishment then gave out a squeal and hugged her tightly. Alice wrote down her cell number on the restaurant business card she had given me and then after giving Mom a wide grin, signed her name with a flourish. Mom kissed Alice's cheek.\n\n\"Alice your husband seems to be trying to get your attention,\" I said.\n\n\"Ooops, that is my intro. Glad to have met you'all. Seriously, call me,\" She said to Mom.\n\nAlice was soon belting out rock and roll and Mom drug me back out to the dance floor. I was soon in the middle of a three-woman tag team, as their defenseless victim. Mom, Fay and Vicky really did tag each other as they took the other's place as my dance partner. Fay and Mom had apparently given dibs on the ballads to Vicky. Slow dancing saved my life.\n\nWell before we were ready it was closing time. We met Alice's Aunt El, (the owner of the place), and her husband Mark as the band packed up. Eventually we said goodnight to Alice and rode our limo to the hotel. Moving towards the lights made our ride seem a lot shorter than moving away from them had.\n\nMom and Fay accompanied us to our room. As soon as I had the door open Fay went into the room with Fay Marie. Mom took the card key out of my hand, handed me a different card and closed the door behind her.\n\nVicky and I wandered to their room somewhat stunned. When we got there we found that the card would not work. We looked at the cardholder to make sure we had the right room and noticed we did not; the card was to a room several floors up.\n\nWhen we opened the door to our new room we found ourselves in a honeymoon suite. We had been given the opportunity to consummate the marriage. \n\nNo, we were being urged to consummate the marriage.\n\nVicky and I marveled at the room, the flowers, and the champagne. The view out the window was terrific. We moved a couple of chairs to it and sat there for a while just taking in the view.\n\nI knew Vicky did not drink so I did not open the champagne. I found soft drinks in the mini fridge and we drank them as we chatted about our day and our night while sitting in front of the window.\n\nWe knew we were stalling, each afraid that the other wanted no part of sex. The fact that we had already had sex and that was what had put us in that honeymoon suite in the first place never entered my mind.\n\nOne of us had to come to a decision. The only thing I had decided was that it was not going to be me. I was going to be happy even if all we did was stare out the window all night. Not my first choice, but it was not my choice.\n\nVicky stood and decided for us.\n\nVicky began to undress. I followed her lead. \n\nWe were down to our underwear before we realized we did not have any nightclothes. \n\nVicky took a deep breath and took off her bra and panties. \n\nShe was in bed before I snapped out of it and took off my boxers and joined her.\n\n\"We do not have to if you don't want to do it,\" she said.\n\n\"We dot not have to if you don't want to,\" I said.\n\nOur offers were just for the record; my cock was already sliding into her pussy. Her arms were wrapped around my neck and her lips were reaching for mine. We kissed softly, we kissed passionately, and we kissed as lovers.\n\n\"It was these kisses that got us into so much trouble,\" she said.\n\n\"I have a feeling they will continue to do so for a long time,\" I said as I continued kissing her. \n\nI started a slow gentle fuck. Vicky moaned her approval. \n\nI continued the kisses as she plunged into an orgasm. \n\nAs she recovered I began to kiss my way down her body. As I reached her breasts my dick slid out of her. I heard a conflicted moan as I tasted breast milk for the first time in over twenty years.\n\nVicky was soon purring and I was famished for her.\n\n\"Leave some for our daughter's breakfast,\" she said with a giggle.\n\nI kissed her nipples and resumed my trip down her body. I kissed every inch between her pussy mound and the inside of each knee. Within seconds of my lips third arrival at her pussy she had another orgasm. I rained kisses on her labia then resumed my trip back up. I bypassed her breasts and kissed her neck as her hands urged my cock into her pussy. \n\nI resumed the slow gentle fuck but that did not last long. We both needed an exclamation point to our night and careened towards release. She got there first with a long deep wail. I made it over the cliff with a deep groan, which was soon joined by a second wail from Vicky.\n\nWe panted to a stop and somehow found ourselves laughing, kissing, while trying to embrace each other into one.\n\nI slid off her and pulled her into my arms. Somewhere in mid-kiss we fell asleep. \n\nAbout two hours later I felt Vicky straddle my hips and slide my already hard dick into her pussy.\n\n\"Sorry, I did not mean to wake you. This wont take long,\" she said.\n\nShe was correct in that her first orgasm did not take long, nor her second one but her third one took a while. I managed to hold on until she gasped and shuddered to my groan. We fell asleep with her body draped over mine.\n\nEarly in the morning we awoke and followed each other to the bathroom. We watched each other piss and used the hotel's mouthwash then returned to bed.\n\n\"How long do we have before Fay Marie comes looking for breakfast?\" I asked.\n\n\"No long so we need to hurry a bit,\" she said as she lay on her back and urged me into her. I started long strokes at a quick pace that had us gasping on the edge in just a few minutes. \n\nMy orgasm was delicious and hers seemed to be too.\n\nOur orgasms were still ebbing when there was a knock at our door. \n\nVicky and I had just enough time to cover up before Mom came into the room with Fay Marie. She handed the baby to Vicky and left. \n\nShe had not said anything at all, but she did not need to, her broad smile told us she was very pleased with us.\n\nI spent most of the next hour kissing my daughter and my wife.\n\nFay Marie fell asleep and we placed her amid the numerous pillows.\n\nAs I was kissing my way around Vicky's body I found a spot near her lower ribs that appeared to be more sensitive than most, she was squirming and giggling. I had just started to exploit the spot when Vicky jumped out the bed to get away. In the middle of her laughter she said, \"Oh shit.\"\n\nI looked in the direction her eyes were looking and I said, \"Oh shit.\"\n\nOn the night table there were three condoms. Three unused still in their shiny wrappers condoms.\n\n\"How do you feel?\" I asked her.\n\n\"Normal,\" She answered. \"We will only need to wait a few days to find out. If you knocked me up again I will sue,\" she said then jumped on me and kissed me passionately.\n\n\"You can't sue me. I am your husband. I am supposed to knock you up.\" I countered with a deep kiss.\n\n\"Oh, that's right. Never mind then.\"\n\nShe allowed a deep sigh to escape her then said, \"In truth I would like to finish school and have a teaching job before I have another baby. I will be fine if we are pregnant already but please use the condoms until we get home and I get on the pill. I promise I will be very conscientious in taking them now, assuming you will continue to want me.\"\n\n\"You can count on my continuing to want you,\" I said.\n\n\"I have a confession to make. I am telling you because I do not want you to worry about hurting me.\"\n\nMy heart sank; she was about to tell me she was in love with someone else. She saw the hurt in my face.\n\n\"No, silly. I have been madly in love with you for two years. You now have a very loving, loyal, and faithful wife.\n\nWhat I wanted to do was to remind you that I would understand if you need other women. You will eventually want to find your real wife.\n\nI know you adore our daughter and I know you will treat me kindly. I do hope you will cross the hallway on a semi-reg...........\"\n\nI kissed her, partly to shut her up but mostly to shut me up. \n\nVicky had just handed me the upper hand in the relationship and I knew that anyone in my position should and would hold on to that advantage.\n\nIt did occur to me that she would soon figure it out anyway. \n\nMy Mom and her sister already knew. \n\n\"Maybe I should tell her?\" I thought\n\nMy dilemma was postponed when the phone rang. Mom wanted us to join them for brunch. Vicky and I dressed in our wedding clothes and I picked up the flowers and the still unopened bottle of champagne. Vicky picked up Fay Marie and we took the elevator down to our room. \n\nI was very happy to see Vicky scoop up the condoms and slide them into her purse before we left.\n\nMom and Vicky were already dressed and left as we got there. Mom told us to meet them at the Bellagio since they supposedly had the best brunch on the strip. Vicky and I undressed in each other's company and began to dress in shorts and t-shirts. Just as Vicky was sliding her panties on I gave her ass a quick nibble. I got slapped on my ass for my efforts, a fair exchange I thought.\n\nBefore we stepped out the door I gave her my best kiss. She gave me her best kiss. My hand went to her ass. Her hand went to mine. She felt my growing erection.\n\nShe groaned and said, \"Lets not give them anything else to talk about,\" and handed me the carry pack.\n\nI sighed, put Fay Marie in it and off we went.\n\nThe brunch at the Bellagio was exceptional, I could not conceive of anyone's being better. We stayed and watched the fountains dance and I took lots of pictures of the ladies. Vicky took several of Fay Marie and me and Mom took some of Vicky, Fay Marie and me. \n\nMom and Fay went off exploring the casinos while Vicky and I took in the sights. We toured M&M world, then made our way to the Venetian and the gondola ride. As we waited I got a good laugh when one of the living statues said hello to Vicky and startled her, she had thought it to be a real statue. She hit my shoulder for not warning her. I tried to convince a carabinieri that I was being assaulted but he just smiled.\n\nFay Marie slept through the incident so I had no witnesses.\n\nI did take Fay Marie out of her pouch when it came time for the photograph of us in the gondola. I kept her in my arms throughout the ride and many people waved at her. She was a star.\n\nI took pictures of the girls as they stood next to the likenesses of the Blue Man Group. I had assumed Vicky knew what they were but it turned out that she though it was a band that played the blues. She was in for a surprise that night.\n\nThe heat and the long walks eventually caught up to us and we returned to our room. After taking care of Fay Marie we took a nap . We slept about two hours.\n\nI was sticking my finger in my wife's pussy when the phone rang. Vicky answered and told Mom we were about to feed Fay Marie then get ready for our show. She could come get her in about thirty minutes. Somewhere in the middle of her sentence Vicky moaned. \n\nShe hung up the phone and said, \"Your Mom said to tell you to get your hands off me.\"\n\n\"Damn old woman. I guess I'll take a shower first,\" I said.\n\nBefore going into the shower I spent a considerable amount of time looking for the slacks and polo shirt I had planned to wear that night. I eventually found them hanging nicely in the closet.\n\nI was reminded that Mom had spent the night in my room.\n\nI took a picture of a naked Vicky with an equally naked Fay Marie at her breast. It turned out I did not really need that picture. For the rest of my life I just needed to close my eyes and see them just as they were that afternoon.\n\nI heard a knock on the door soon after I went into the shower, shortly after that I had company in the shower stall.\n\n\"Keep your hands to yourself or we will never make it to the show,\" Vicky said.\n\n\"Why do I have to keep my hands to myself when yours are on my dick?\"\n\n\"Your Mom did not tell me I had to keep my hands off you.\"\n\n\"Oh,\" I said. \"An oversight.\"\n\n\"Maybe, maybe not. It could be one of those \"girls rule\" things.\n\nMy cock was very hard and got harder as she lathered it with soap and began to masturbate me.\n\nShe said, \"You know, Fay asked me many times if I was in love with you. I did not answer her because I wasn't sure. Your mother asked me if I was in love with you that night at your house. Seeing you again told me I did love you.\" \n\nI did not answer her but she likely knew. \n\n\"But you are the first person to know for sure. I love you.\"\n\nI may have upset her for a fraction of a second when I took her hands off by dick but I just wanted her arms around me when I kissed her. I gave myself to her in that kiss but she still had no clue, or was denying the possibility to herself.\n\nShe swatted my ass and told me she needed the water a lot hotter than I had it and dared me to stay. I jumped out as she turned the handle to \"are you kidding me\" hot.\n\nI was dressed when she emerged. Before she put on her sundress she paused several times before her bra and panties were on. ",
        "I was being teased. \n\nI ignored her. \n\nUnfortunately my dick didn't and she was giggling as we left the room.\n\nOnce again I found us with very \"good\" seats. We were in the splash zone. Vicky's nervous laughter began as I handed her earplugs. It intensified when the plastic wrap shield was placed over us. We were in the third row. \n\nI had seen one of their shows on film but this was my first time to see them in person. It was as much fun as I had hoped. Vicky laughed and squealed and joined in the audience response. We managed to cover ourselves in time as the drums were pounded. \n\nShe loved the show.\n\nOn our way out she shook hands with one of the performers and I managed to capture in my camera the look of wonderment in her face as she did. \n\nI got her the t-shirt and she thanked me for getting her back to school wardrobe off to an excellent start.\n\nI could not think of another date that I could have taken to that show that would have enjoyed it as much she did. \n\nOr for that matter, enjoy Mystere as she did.\n\nOr the dancing. \n\nI was well aware of how much her enjoyment enhanced mine.\n\nI had the perfect date.\n\nAnd she was my wife.\n\nVicky and I were hurrying back to our hotel from our Blue Man Group show when we got a phone call from our babysitter. Mom said the three of them were at Aunty El's and for us to meet them there. She hung up before I had a chance to ask a question so Vicky and I headed to the hotel taxi stand and again headed for our favorite restaurant in Vegas.\n\nWe found Fay and Fay Marie at the same table we had occupied the night before. Fay handed Fay Marie to her sister and said, \"Here, I just changed her but she insists she is famished. Aunt El said to use her office just past the bar. Marie and Alice are there.\"\n\nThe waitress came to the table as Vicky left and I ordered for both of us, ratatouille with chicken breast for Vicky and a hamburger for me. I ordered extra fries and onion rings for both of us. I also asked for lots of avocado sauce on the side.\n\nI was famished and assumed she would be too.\n\nI had not asked her but I got the distinct impression that Vicky was mostly a vegetarian. She had eaten chicken breast at our house but at the buffets she had not picked up any meat except small portions of chicken or fish.\n\nFay told me that Mom and Alice had been on the phone to each other all day and that she and Mom had been at the restaurant with Alice since before eight. The three of them had already eaten supper.\n\nI saw Alice approach the stage and she waved at me when she saw me. About five minutes later Mom and Vicky joined us at the table. I asked Mom about their date to the Saturday only club and Mom said they would be going later.\n\nThe band began to play as our dinner arrived. Mom looked at us in awe as Vicky and I wolfed down our food.\n\n\"What have you two been doing to cause such a feeding frenzy?\" Mom asked.\n\nI knew the answer she was fishing for but I just said, \"We have not eaten since brunch.\"\n\nVicky and I were down to dipping fries in the avocado sauce when we saw Mom nod to Alice and stand up. Fay also stood and followed Mom to just inside the door as she urged us to follow her. \n\nWe heard Alice say, \"We are going to do a song we have not done in almost thirty years, I had in fact forgotten a few of the lyrics which is really embarrassing since I wrote them. A demented person insisted that I sing it for her and assured me she knew the lyrics I had forgotten. \n\nI finally agreed to do it but under one condition, that she sings it with me. Please welcome, as the kids say, my new BFF, Marie Chapman.\"\n\nVicky and I were too stunned to applaud but our applause was not needed, Fay filled in nicely for us.\n\nI knew Mom could sing, I had heard her do so all my life. Taking the stage to sing was something altogether different.\n\nThey were wonderful, their voices and cadence blended marvelously. The harmonizing at the end of the song was perfect. They got a standing ovation.\n\nMany ladies at the restaurant rushed to the stage and asked them if they were The Fronds. Mom announced that Alice and Mike were but that she was just their biggest fan in Texas. Alice and Mike were soon inundated by requests for songs from their album. \n\nAlice was giddy; she had truly believed that no one would remember their songs. She was especially pleased that most of the requests were for the other two songs she had written and the song she and Mike had written together, the song that eventually got them kicked off the band.\n\nWe hugged Mom when she joined us by the patio door but had to share her with her new fans. We heard Alice semi-promise the crowd that they may play another Fronds song later. She added that, \"It would help if somebody bought Marie a Crown on the rocks or two. She is the one that knows the lyrics.\"\n\nBy the time we made it back to our table there were three drinks waiting for Mom. I was proud of her when she only drank one.......at a time.\n\nAunt El herself brought Mom a notepad and a pen. \"Write down \"Steps\" first, it's my favorite.\"\n\nWe watched and listened as Mom sang it to herself. It is a song about a girl taking small steps towards love. I had heard Mom sing it often enough to know it too.\n\nWhen she showed it to me she asked me if she had it right.\n\nI told her that one line ended with together, not us.\n\nShe made her how-could-I get-that-wrong face then changed it.\n\nLater the band started to play \"a guy song\" and Alice soon joined us. She and Mom put their heads together and ran through \"Steps\" a couple of times. Twice Mom looked at me for guidance on phrasing and twice I told them they were perfect.\n\nAfter they thought they had it Alice asked Mom, \"You tortured this poor boy with my songs, didn't you?\"\n\n\"Oh, I did much worse than that. Did you know this was your Aunts favorite song?\"\n\n\"No, I did not. She listens to classical music.\"\n\n\"That is classical music,\" I said as I listened to Mike tear through \"Freebird.\" All three ladies rolled their eyes and I suspected Fay Marie was trying to do it too.\n\nBut hey, it's a guy thing.\n\nMike got a nice round of applause and Mom took the last swig of her last drink, though it was mostly water by then.\n\n\"Ready?\" Alice asked Mom.\n\nMom nodded and followed Alice to the stage while Fay, Vicky, Fay Marie and I posted ourselves just inside the door as before. The crowd received them with anticipation. \n\nAs Mom and Alice stepped onstage they were apparently confronted with a problem, I could see an animated conversation between Alice and the band. Mom came to me, took Fay Marie out of my arms and handed her to Vicky and pulled me towards the stage.\n\nMom said, \"Mike reminded Alice that he did not play on this song, that it was mostly keyboard and overdubbing. The kid at the keyboard was not born when the song became popular. You are going to help your mother become a star.\"\n\nI did play piano and I had accompanied Mom on the occasions when guests at our house had asked her to sing, which happened often. This song was the one she most often performed. I would not have a problem with it since the keyboard player of The Fronds never strayed from the simple path. I had suspected he simply wasn't very good. I had added a few flourishes.\n\nI started with a short prelude, showing off a little, then slid right into the opening chords of the song. The crowd recognized it and clapped. Alice and Mom had decided to begin the song in harmony, then take turns with the stanzas and end the song in harmony.\n\n\"Damn they are good,\" I thought as the crowd again surged to them. At least two ladies had tears in their eyes. Their applause lasted it seemed forever, long enough for me to return to the table and back to the fries. \n\nVicky gave me a breathtaking kiss and whispered to me, I can't believe I will be fucking a rock star tonight,\" and repeated her kiss.\n\nI was going to ask her, \"What rock star?\" but as soon as she put Fay Marie back into my arms she reached down and squeezed my cock.\n\nMom and Fay saw that last part and Mom commented, \"Oh sure, you two think you have something better to do than watch this old lady become a star. It's not like you wont have another opportunity to do who knows what to each other and that this is your only opportunity to see a legend born.\"\n\nFay took her cue and fluffed Mom's hair and pulled out the chair for her to sit.\n\n\"Thank you Agnes. It is Agnes isn't it?\"\n\n\"If it pleases your worship,\" Fay said before quickly kissing Mom on the lips.\n\nThat kiss was soon followed by a flyby kiss from Alice and a soft kiss on the cheek from Aunt El.\n\nAunt El passed a sheet of paper to Vicky and her eyes widened in surprise. She jumped up and gave Aunt El a hug and a kiss on the cheek. Vicky was beaming as she showed her prize, the recipe for the avocado sauce.\n\n\"You better hide that from Alice, your are not her aunt so she would probably kill you for it,\" Mom said.\n\nVicky and I defended our remaining fries and onion rings from an eager waitress and watched Mom enjoy the thanks of a string of fans that came by our table.\n\nSomebody noticed that it was well past closing time but most of the crowd was hanging around. As the band was packing up the crowd was pleading for something. Eventually we saw Alice come out and say to Mom, \"We have an encore. Tell your son to put down his underage girlfriend and follow you.\"\n\nI gave Fay Marie to Vicky and followed Mom to the stage. As I sat behind the keyboard Vicky and Fay Marie sat on the edge of the stage next to me. I played a little fantasy of the four Fronds songs I knew, while waiting for Mom and Alice to pick one. Their fans were standing around the stage and almost unanimously were asking for a song called \"Rose\" which was a song of best friends.\n\nI started the intro and I actually heard the mostly matronly ladies squeal. Alice and Mom shuddered and missed their cue, they seemed to be shaking. I went around and as soon as I saw them take a deep breath I gave them back their cue and they mesmerized everyone in the room. \n\nThey harmonized all the way through and I added to the refrain at the end to see if their fans would sing it with them, they did. I added one more then slowly faded us away. There was just scattered applause, hands were being used to wipe away tears and share hugs. Many just said, \"I love you.\"\n\nI moved out of the way and allowed the keyboardist to pack up his instrument. Vicky, Fay Marie and I moved to a table by the door and waited for the opportunity to say goodbye to Mom and Fay and Alice. I called for a cab.\n\nThe ladies eventually spotted us and came to our area. \n\nMom said, \"We may be here a while, we have lots of new friends to visit with. Thanks for helping us baby. I adore you.\"\n\nMom kissed and hugged me then said to Vicky, \"OK, you can have him back now,\" then kissed and hugged her.\n\nWe got kisses and hugs from Fay and Alice and were soon on the way back to our hotel. Our cab driver was a woman so Vicky took the opportunity to feed Fay Marie on the way. \n\nThat night we had our first wild jungle fuck. We were not fully undressed when it started and did not become fully nude until after it ended. \n\nIt never crossed our minds to use a condom.\n\nIt had been a long very full day and night and whatever energy we had left was expended in our fuck. We fell asleep within seconds of its conclusion. \n\nWhen I awoke the next morning Vicky was laying next to me propped up on her elbows. She gave me a soft kiss then said,\n\n\"I have interesting news, two good one bad. First good news is that we still have three perfectly good condoms left. Second good news is that we did not need them because I just started my period. That is also the bad news.\"\n\n\"Two out of three ain't bad,\" I said as I caressed her perfect ass over her panties.\n\nI got out of bed and brushed my teeth and peed. I found my gym shorts and put them on and rejoined Vicky in bed. I hugged her to me and we kissed softly, gently. I loved the feel of her bare tits on my bare chest and told her so. She told me her tits returned the sentiment.\n\nSuddenly the owner of the tits loudly let us know she had to have one and now!\n\nI began to pack but most of the time my eyes were on mother and daughter. I just could not conceive of anything being more beautiful. I kissed both often.\n\nAs soon as I had us packed we went down for breakfast at the cafe. I had put off calling Mom and Fay figuring that they had come in from the club around dawn and needed the sleep so I was surprised to find them there clutching cups of coffee.\n\nWe joined them and said good morning then ordered as soon as the waitress got to us. Vicky and I noticed that Mom and Fay were not completely with us and were mostly staring at their coffee.\n\nVicky asked them when they had gotten back from the club.\n\n\"About twenty minutes ago,\" replied Fay.\n\nVicky and I looked at each other and burst out laughing.\n\n\"Who do you two think you are, the young and the restless?\" \n\nI asked.\n\nMom gave me the finger then said to Fay, \"Lets go. We do not need to sit for this abuse.\"\n\n\"Have you packed yet?\" I asked.\n\n\"Yes, sort of. We are going to finish that now,\" Fay said.\n\n\"We need to wake up Alice soon anyway. She works at noon.\" Mom added.\n\nAs we kissed them we could smell alcohol and perfume all over them. We did not ask why Alice was asleep in their room.\n\nOur flight home was at three in the afternoon and check out was at twelve so that bit of timing was perfect. Unfortunately it was going to be night when we got back since going east was going to cost us two hours.\n\nAfter breakfast we had a couple of hours to kill so I took my ladies souvenir shopping and got them some more t-shirts and other useless stuff.\n\nVicky insisted that I buy our daughter a shirt that read, \"Shop Now, Ask for Dad's Forgiveness Later.\"\n\nI complained that it would set a bad precedent but it somehow ended up in our shopping bag. I consoled myself with the fact that it would be over a year before Fay Marie would be big enough to wear it.\n\nWe returned to the hotel a bit after eleven. I called Mom on the phone and asked her if she had called for our transportation to the airport. She said she had and that it would be out front at twelve. \n\nVicky fed Fay Marie and after that was accomplished I burped and I changed her while Vicky was in the bathroom. We called for help with our luggage and went to Mom's room.\n\nAs I prepared to knock on her door it opened and Alice came out. She hugged and kissed Vicky then me and as she walked away she said, \"Tell your mother we are too old for this shit.\"\n\nVicky giggled and said, \"He already did.\"\n\nMom and Fay were struggling with their bags until I said, \"Go on down, I'll get a porter.\"\n\nThey mumbled something and headed to the elevator. I did not trust them to get off on the right floor so I motioned to Vicky to follow them and went into their room. The first thing I noticed was the bottle of champagne that Vicky and I had received in the honeymoon suite. It was empty.\n\nI called for a porter and I was soon downstairs. As I expected they were at the concierge desk talking with Alice. Before I got to them I saw a limo driver holding a sign that read \"Chapman.\"\n\nI gathered up the ladies and we were soon on our way home.\n\nMom and Fay were asleep before the plane taxied away from the gate. They were not the only ones. \n\nVicky and I snuggled up together and spent most of the flight kissing each other and Fay Marie.\n\nWe made it home from the airport just fine although we were a bit concerned for Fay as she followed us to our house. She and Mom were still wiped put. The nearly four hours sleep they got on the plane had not been nearly enough.\n\nFay stayed in her car while saying goodbye to us thinking she needed to go home and be ready for work the next day. \n\nMom reminded her that she was going to work only to get fired so she may as well be as late as she wanted.\n\nWithout another word Fay got out of her car, groaned her way into the house and she and Mom staggered to Mom's bedroom. Two minutes later I went to her room to ask what they would like for supper but they were in their panties already sound asleep.\n\nVicky agreed that pizza would be perfect and I ordered two in case the sleeping beauties awoke. \n\nWe gathered our stuff and walked to the bedroom. I was surprised to see a bassinet and a changing table in the room.\n\nVicky explained, \"Oh, they were the first things we got when we went shopping last week. You were still in class when we brought them home. Your Mom also got some more stuff for us. We can pick them up tomorrow.\"\n\nWe unpacked and hung up our unused and new clothing in the closet. \n\nWe threw our dirty clothes into my suitcase. \n\nI showed Vicky the underwear Mom had snuck into my suitcase, silk with hearts on it. She admitted to have been witness to their purchase and their sneak placing into my bag.\n\nAs expected Vicky requested that I wear it for her. I reminded her that we had company coming.\n\nWe both had underwear we had not worn and we put them in the big chest of drawers, she in the top drawer, mine on the third drawer down. \n\nHer new suitcase was placed in a hallway closet.\n\nI went across the hallway and brought back a handful of gym shorts and t-shirts and put them in the fourth drawer down. Vicky and I undressed and I put on shorts and a t-shirt. \n\nShe went to the bathroom to change her panties then returned to the bedroom and put on her new M&M World t-shirt. It was green and reached down to her thighs.\n\nWe placed Fay Marie back in her carrier and went to the living room and waited for our supper's arrival. I embraced and kissed Vicky until we heard the doorbell.\n\nVicky and I ate our half veggie lovers, half meat lovers pizza in the kitchen as we laughed at ourselves for coming back home with twice as much stuff as we left with. Fay Marie looked at us as if she thought we were being silly.\n\nVicky and I kissed her and each other often.\n\nI wondered how long it would take before I stopped craving Vicky's kisses. \n\n\"It will never happen,\" my heart told my brain.\n\nWe cleaned up in the kitchen then Vicky took Fay Marie out of the carrier and kissed me. She took my hand and led me to the piano. \"Play something nice for us please\" she said.\n\nShe sat in the rocking chair by the piano, the chair Mom sat in when she watched me practice. Vicky propped Fay Marie up so she would be facing me. Two of the top three most beautiful women in the world were waiting for me to amuse them.\n\nVicky had the most radiant smile I had seen outside of Mom's face. \n\nShe knew my secret.\n\nI played Clair de Lune for my wife and daughter.\n\nMonday morning as I walked to my first class on campus I noticed that I felt older, more mature. I smiled as I said to myself. \"Well duh. You are a married man and a father now.\"\n\nI was still smiling as I entered the classroom. Some friends that knew what had happened the previous week expressed their shock at learning that the paternity inquiry had fingered me. One of the girls asked me what I was going to do.\n\nI answered, \"I already did,\" and showed off my wedding ring.\n\nOne of the guys, a popular and good-looking athlete said, \"You dumbass, you had the money to pay her off.\"\n\nHe had not noticed the grin on my face but the girls had. He immediately lost the ladies admiration and a lot of that was transferred to me. \n\nI showed the picture Mom had taken of Vicky, Fay Marie and me on my cell phone and the girls oohed and aahed over it. \n\nMy friend Marla said, \"This looks like a family. Oh, wait, it is a family,\" and giggled.\n\nIf that fact had not already completely attached itself to my brain before her remark made it so.\n\nWe were all a little late settling into the classroom, a business law class, and got a mild rebuke from the professor, Dr. Edith Bunker. She soon had us gasping for air as she ran through her lesson for the day and were very grateful when she dismissed us five minutes early.",
        "Then she looked at me and said, \"Mr. Chapman please see me in my office.\"\n\nBefore going out Marla ran to me and hugged me and said, \"Tell Vicky I am very happy for her and warn her that she will soon need a bridesmaid dress.\" She kissed me on the cheek then ran out. I did not know she knew Vicky. \n\nHell, last week I did not know Vicky.\n\nA loud \"Ahem\" interrupted my train of thought and I quickly followed Dr. Bunker to her office.\n\nShe said, \"Considering the news you got last week you seem chipper.\"\n\nI showed her my ring and my family picture, which prompted her to squeal and give me a fierce kiss on the lips.\n\n\"Why wasn't I invited?\" she demanded to know.\n\n\"That is a long story full of intrigue and subterfuge best told by Mom. Why don't you call her and invite yourself to dinner. You can meet my wife and daughter then.\"\n\nShe was already speed dialing when she said, \"I already know your wife. I am her advisor too.\"\n\n\"Damn,\" I thought. \"Everyone knew Vicky but me.\"\n\nDr. Bunker had been Mom's college roommate and had in fact been present at my birth and apparently had also been present at my conception. I knew she had definitely been there for my sisters conception. Mom had let that bit of history escape her lips when she and her best friend reminisced old times as they finished their second bottle of wine.\n\nThey had been intimate friends for thirty years. \n\nI knew Mom had shared her dread of my situation with her. \n\nFrom their phone conversation that morning I learned that the week before Dr. Bunker had told Mom what she knew about Vicky. Perhaps that was what led Mom to invite her for dinner.\n\nAfter she politely told my Mother to go screw herself and Mom responded with something that made her blush Dr. Bunker hung up and said, \"Friday is the last day to add and drop. Go by the Registrars office and get the papers for Vicky. When you get home tell her that she can resume all of the classes she dropped out of last spring if she is up to it. I suggest she cut that load in half since she is a rookie mother. I will talk to her too when I see her tonight. Oh, and ask for the name change forms while you are there.\"\n\nI knew Vicky was going to resume her college studies but had assumed it would be for the spring semester. \n\nI nodded and kissed Dr. Bunker, (Bubbles), then left her office. \n\nWhen I got the forms at the administration building I got two more cheek kisses from student aids, they knew and liked Vicky too. I began to wonder how I could have missed her.\n\nWhen I got home I found Mom, Vicky, and Fay Marie laughing at the itsy-bitsy spider. Vicky quickly stood and after a quick nod to Mom she grabbed my hand and took me to our bedroom. She swiftly got me naked and on my back on the bed .\n\nShe slid next to me and kissed my cock.\n\n\"Don't cum in my mouth please,\" she said as my cock disappeared past her lips. \n\nIt was not the most skillful blowjob I had ever gotten but it was the best I had ever been gifted with. \n\nI was being gloriously rewarded for something so I relaxed to enjoy it. That was a mistake because I was soon on the verge of erupting. I tapped Vicky on her shoulder as I grunted a warning and she slid my cock out of her mouth and masturbated me until I was empty. We were both covered with cum as she slid over my body to kiss my lips with love.\n\n\"I love you,\" she said.\n\nI did not see the point in keeping it to myself anymore so I kissed her softly and said, \"I love you.\"\n\nShe allowed a sigh to escape her before showering me with kisses. I hugged her tightly to me.\n\nSomewhere in there she began to giggle. \n\n\"We need a shower,\" she said.\n\nMy cum was now sticky and cold so we stepped into the bathroom together. \"You get in first,\" she said. \n\nI understood and turned away as she took her panties off and did what she needed to do. I knew that I had to cope with her periods too.\n\nAfter she joined me in the shower I gently caressed her pussy and asked when it would be available again.\n\n\"Thursday or Friday. Your Mom is taking me to her doctor Friday morning and I expect to be sore then but should be fine by Saturday. In the meantime you will be getting frequent treats like the one you just got. I take it you liked it.\"\n\n\"Loved it but I hope I last a bit longer next time.\"\n\n\"I was surprised you came so quickly. I know I am not that good.\"\n\n\"I was very horny for you when I came home and if you glance down you will see I still am.\"\n\nVicky giggled and began to slowly masturbate me as I kissed her and caressed her tits. Suddenly the bathroom door burst open and Mom announced, \"There is a very hungry young lady here demanding service. You two finish that later.\"\n\nVicky gave my cock a squeeze and told it, \"I'll get back to you soon.\"\n\nShe stepped out and a few minutes later, after I had taken care of my demanding cock, I stepped back into the bedroom wearing my Mirage robe. \n\nVicky was on the bed with her back to the headboard breast feeding our daughter. Mom was next to her grinning from ear to ear as she watched Fay Marie work her mother's nipple hard. Vicky was wearing only panties but she seemed to be at ease with Mom's close proximity.\n\nI saw Mom kiss Fay Marie then kiss Vicky. \n\nI saw Vicky cherish the kiss. \n\nI saw Mom slide her arm behind Vicky and hug her as she kissed her again. \n\nVicky leaned towards Mom and kissed her cheek. \n\nMom whispered something into Vicky's ear that made her cry.\n\nIt was a happy cry. \n\nI saw Mom snuggle Vicky to her and kiss the tears away.\n\nI hurried out of the room before they could see that the man in the family had tears in his eyes too.\n\nThat evening Dr. Bubbles steered Vicky into a schedule that had her classes at least two hours before or after mine. She had a full schedule but well under the twenty hours she had been attacking the previous spring. \n\nDr. Bubbles said that it was the best schedule all around since the baby's grandmother was likely the most incompetent grandmother in history.\n\nTheir comical wrestling match had Vicky laughing out loud. Their kiss to end the fight told Vicky everything she needed to know about their relationship.\n\nBefore she left for the night Dr. Bubbles hugged and kissed Vicky then devoured and groped Mom with her kiss. Devouring and groping kisses to me usually followed but that night the kiss was soft, loving. The long embrace was too. \n\nShe whispered, \"I love you. I am proud of you. I kick myself for not throwing the two of you together long ago. She will make you happy. I am confident that you will make her happy. Remind me to tell you the story of how your mother and father met.\"\n\nShe gave me another loving kiss and left after reminding Vicky that her first class was at eleven the next morning.\n\nMom and Bubbles shared a soft kiss at the door. \n\nVicky and Mom started a soft panic about her readiness for classes. Mom's was because they had not had a chance to go shopping for a school wardrobe. Vicky was worried about joining a class after it had been in session for three weeks. \n\nI reminded her that she had been in the same classes with the same professors for five weeks before she had to drop out, and that she in fact had not missed any classes.\n\nShe seemed to need to worry about something so she began to fret about books and supplies. Mom distracted her by asking what her usual school attire was. \n\nI took that opportunity to pick up her class schedule from the table and go to the computer in search of the required textbooks for each class and printed them out for me. \n\nThen I found the syllabus and the lecture schedule for her classes and printed that for Vicky.\n\nI figured Vicky still had all of that but thought it would be at her parents' house and none of us ever wanted Vicky to go back there, especially Vicky.\n\nThe next day after my eight o'clock class I rushed to the bookstore and bought her the four textbooks she would need then rushed home.\n\nVicky was putting on what appeared to be a new outfit. I kissed a tit before I clasped her bra for her then told her the textbooks she needed that day were on the coffee table along with a note taking pad, a pencil and a pen.\n\nI was rewarded with a glorious kiss and a crotch grope. I got another of each when I handed her my car keys.\n\n\"I have a parking sticker for the A lot. Try not to hit anything please,\" I said.\n\nIt was then that it occurred to me I might need to trade in my Solara for a Camry. Mom came to the rescue the following weekend when she bought Vicky a Highlander; she remembered how much stuff going out with a baby required. My Solara became our school and date car even though it acquired its own baby seat.\n\nI kissed Vicky and waved goodbye then went in search of my mother and daughter. They were on Mom's bed. Fay Marie was sound asleep but Mom was just resting. I took my shoes off and got in bed with them with Fay Marie between us.\n\nAfter I settled back I said, \"I love you Mom.\"\n\nShe got up on an elbow and leaned over the baby to plant a soft kiss on my lips. \"I love you son and I am very proud of you.\"\n\nShe settled back down on the bed and we relaxed for a while before I asked her, \"What did you say to Vicky last night that had her in tears?\"\n\n\"I told her I loved her and ordered her to call me Mom.\"\n\nI got up on an elbow and softly kissed Moms lips, cheeks, lips, nose, lips, and lips.\n\n\"Thanks,\" I said.\n\nAfter I settled back down Mom said, \"Bubbles loves her too. She even claimed that seducing Vicky has never been even in the back of her mind. Adopting her had been. She is so happy that Vicky is family now.\"\n\nI told Mom, \"I got kisses and hugs all morning from the girls that know Vicky. I am sure she is getting many kisses herself right now.\"\n\n\"I hope so. She had been living a nightmare. I do not understand how her parents could not see what a gem of a girl they had.\"\n\n\"I wonder if her parents are going to sue Fay\"\n\n\"Fay's old firm will not touch it. They are not about to challenge her new firm. When the sleaziest firm in town will not take that on they are up a creek.\"\n\n\"I wonder how Fay is doing.\"\n\n\"Hmm. Me too. I know she quit before she told them you and Vicky had married and that Harry expected her to be at her new office in his firm this morning. \n\nI will ask her to dinner Friday night. I think I will invite Bubbles too.\"\n\n\"Why you devious old woman. Tell me if Vicky and I will need a motel room.\"\n\nMom giggled at that statement and reached over to hold my hand.\n\nFay Marie napped for almost two hours. She did not wake up until Mom and I had finished lunch. I changed her diaper and played the piano for her amusement until Vicky returned.\n\nShe kissed Mom then whispered something in her ear. Mom nodded and Vicky again pulled me into the bedroom, pulled my shorts off and gave me another blowjob/handjob.\n\nI erupted all over myself and had not lasted much longer than I had the previous day. \n\nAfter Vicky had wiped up most of the cum with a towel she slowly put my cock back in her mouth. \n\nShe wanted to taste cum. \n\nThe face she made was not of disgust but of deliberation. \n\nI felt her tongue swirl around my cock. \n\nShe closed her eyes. \n\nWe heard a baby cry.\n\nShe left after throwing the towel at me and went to feed our child. \n\nLuckily even tough I had made a mess on myself none of it got on her new outfit.\n\nI wondered what I had done this time to merit that reward.\n\nI cleaned up and joined them in the kitchen. Mom was chopping up some herbs and Vicky was nursing Fay Marie.\n\n\"...and he showed them that picture of the three of us as the Bellagio fountains erupted you took on his cell phone.\"\n\nSomeone had related to Vicky how my previous day had begun.\n\nMom had seen me come into the kitchen, walked to me and gave me the exuberant kiss that always included a diving tongue. \n\nI was used to those and understood their meaning so I just enjoyed it.\n\nVicky had averted her eyes during Moms kiss and Mom noticed.\n\nShe knelt by Vicky and said, \"That was an I-am-so-proud-of -you I-cant'-stand-it kiss. You are getting your first one now.\"\n\nThat said Mom gave Vicky the most meaningful kiss a woman had ever given her. When Mom returned to the counter Vicky had tears in her eyes. So did Mom.\n\n\"One more thing son. Be advised that no matter how long you live you will never be loved any more than by the three women in this kitchen love you now.\"\n\nI managed to kiss all three and go to the living room before a tear slid down my cheek.\n\nTime passed. Remembered passages took their places in our memory.\n\nDuring her next period Vicky took my cum in her mouth and swallowed it. To let her know I understood the importance of her gift I kissed her with all my love. \n\nShe was proud of herself and told Mom even gushing over the ensuing kiss. Vicky got a proud-of-you kiss from Mom and I did too. Apparently the kiss I gave to Vicky had been very important. Full blowjobs became a steady part of our lovemaking.\n\nI was on the floor changing a diaper. Mom and Vicky were on the couch. I turned to them to say something and when I looked back at my daughter what I saw was her beautiful butt.\n\nMy incomprehension lasted about as long her mother's and grandma's astonishment did. \n\nFay Marie had rolled over for the first time. \n\nWe got every camera in the house ready to capture the moment again. \n\nIt was three days before she repeated the event and no cameras were handy.\n\nMom and Alice met somewhere every three or four weeks. Sometimes Mom would fly to Vegas; sometimes Alice came to see us. On each occasion they sang at a restaurant or club. They were good. \n\nDuring one of their shows an agent approached them. He was told that they were doing the gigs for fun and did not need an agent. He seemed to be very disappointed.\n\nHe did mention that somebody must own the rights to The Fronds songs. He suggested they get permission to sing the songs before whoever held the rights sued.\n\nI called my musician cousin Edie and asked her if she knew a lawyer that worked the music business. I wanted to know how you buy a song catalog.\n\nEdie said she did and that she and Allen used a cousin of his for their stuff.\n\n\"Allen? I asked.\n\n\"Oh, I thought it was common knowledge. Have your Mother call my mother. \n\nI will give Carly your number. She will get back to you soon. \n\nBy the way, why an I not on your preferred babysitters list?\"\n\n\"Consider yourself at the top of the list.\"\n\nThree weeks later Carly, Allen and Edie were at my house for dinner and talk. Before the evening ended a plan for my future began to take shape. \n\nMom had to frisk Edie before she left, she wanted to make sure she was not trying to sneak out with Fay Marie.\n\nFor Edie and Fay Marie it was love at first sight.\n\nFay Marie began to disappear from the places we had put her. It was time to baby-proof the house.\n\nShe shocked us by how quickly she went from crawling to walking to running through the house naked while laughing her head off.\n\nGood times.\n\nMom slowly but surely drifted from society icon towards grandma mode. Her extravagant parties became family parties, which included the few member of our own family and the many members of Allen's family. \n\nAllen's aunt Wendy and her best friend Janice formed a possibly un-holy alliance with Mom that often included Fay, Dr. Bubbles, and Alice when she was in town.\n\nVicky and I quickly decided that wherever they went and whatever they did we did not want to know.\n\nOn the morning of our first year anniversary Vicky and I were in the midst of a wild animal fuck when Mom popped her head into our bedroom and said, \"We have company. Come out as soon as you finish.\"\n\nOur visitors were our lawyers. They advised us that the \"No harm, no foul divorce clause\" of our nuptial agreement expired that day and we were required to state our intentions in that regard. \n\nMom, Vicky and I just burst out laughing.\n\n\"That's what we thought,\" Harry, our family lawyer said.\n\n\"Sign here and here\" Fay, Vicky's sister and lawyer said.\n\nWe signed under the word \"Declined\" and after the papers were put away Fay said to Mom, \"These two reek of sex. Can't you keep them under control? This is how they ended up in this unpleasant mess.\"\n\n\"Yes, I know. I do my best but they are such animals. By the way speaking of reeking, do you need to work the rest of the day?\"\n\nAs soon as Mom asked that, Harry, Fay's boss, stood and said his farewells.\n\nVicky and I took a quick shower then took Fay Marie to the park. When we left the house neither Mom nor Fay where available for us to say goodbye. \n\nWe did not search for them. \n\nLate that afternoon after leaving our daughter with Mom and Fay, Vicky and I boarded a plane for Las Vegas. Two nights at The Mirage had been Mom's anniversary present to us. \n\nThat night after dinner at Aunty Em's we returned to the honeymoon suite we had occupied a year before. We placed a chair by the room's window but this time we were in the same chair, naked, with my cock deeply imbedded in her pussy as she sat on my lap.\n\n\"Somehow this is a better view than the one we had back then even though it is the same room and the same window,\" I said.\n\nVicky said, \"We were terrified then. We now know just how lucky we were.\" \n\nWe held each other tightly as we enjoyed the view.\n\nI kissed her neck and shoulders and said, \"You know, I have apparently been in love with you all my life. Thanks for finding me.\"\n\nVicky looked at me with amazement. She saw that I meant what I had said and as she leaned over to kiss me one of her tears kissed my cheek. \n\nWe kissed softly and with love for a while but as was usually the case between us the kisses became increasingly passionate. \n\nMy cock and her pussy reached the limit of their patience and ordered us to the bed.\n\nCarly managed to locate the owner to the rights of The Fronds catalogue. The rights had passed from company to company and none of its owners knew who The Fronds were. They did not realize they owned it.\n\nI got it cheap.\n\nVicky and I graduated, me with an MBA and she Cum Laude with a teaching certificate.\n\nWe had visited the town of Felicity often and Fay Marie loved the beach and everyone in town. So did Vicky and Mom.\n\nI was determined to make Mom a star and bought a struggling music company. It did not take me long to see that studio time was costing me more than having my own building would.\n\nFelicity was re-inventing itself and the architects of its renaissance pointed out that my company could be located anywhere and showed me a lot in the middle of the new town that was available. I bought it and a year later we lived in Felicity.\n\nThat decision brought my lawyer Carly, her husband Jimmy, Allen and cousin Edie to Felicity with us.\n\nAllen became my music director and Edie oversaw the difficult singer.\n\nSoon that the artist which I did not want to keep when I purchased the defunct music company got me all my investment back.\n\nAnd her show made Alice and Marie stars."
    ],
    "authorname": "jjcolejr",
    "tags": [
        "romance novella",
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/felicity-ch-15"
}