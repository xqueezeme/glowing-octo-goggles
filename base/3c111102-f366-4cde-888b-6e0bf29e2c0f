{
    "title": "Second Chances Ch. 16",
    "pages": [
        "Chapter 16\n\nThe ride to Judge Hawthorne's house took nearly an hour. Sheriff Wilson chose to ride his horse beside the wagon, and he looked increasingly uneasy as they got closer to the judge's house. Still, he didn't try to sway the McKenzies from their purpose. He knew that would be a waste of his breath. He was just hoping he wouldn't get caught in the crossfire between them and the judge.\n\nBy the time they arrived, Brian was chilled from more than the frosty temperatures. Sarah had given him the cold shoulder during the entire trip. He wasn't sure why she was angry at him. He had done what he had to do to protect her. If anything, he should be angry with her for going into town after he had warned her against it!\n\nLiam set the break as Aidan lifted Naomi down from the wagon bed. Brian reached to help Sarah, but she gave him a cold stare.\n\n\"No, thank you,\" she said tersely.\n\nShe did allow Aidan to assist her, and Brian's brows lowered into a scowl. Once they had dealt with the small matter of a murder charge hanging over her head, he was going to have a stern talk with his angel!\n\nAidan and Naomi led the small procession to the front door, and he knocked loudly. The house was dark, the occupants obviously retired for the night. When no one answered after a brief wait, he knocked again, rattling the door with his fist.\n\n\"Alright, alright, I'm coming,\" came a muffled voice from inside. \"Hold your horses.\" The door was finally snatched open, and an elderly man in a thick robe glared down his nose, first at Aidan and then at the others. \"You'd better have a damn good reason for disturbing me at this hour!\" he growled. \"I was just going to bed when you started pounding on my door.\"\n\n\"I'm sorry Judge Hawthorne. I tried to tell them that we should wait...\" Sheriff Wilson began, in a whiny voice.\n\nAidan silenced him with one raised brow before turning back to face the judge. \"I realize it's a late hour, sir, but we have a problem, and we understand you are the man who can help us solve it.\"\n\n\"Well, couldn't this problem wait until the morning?\" the judge demanded gruffly.\n\n\"No sir,\" Aidan said firmly. \"We need to sort this out tonight, so I can take my family home. We need a few minutes of your time, and we need it now.\"\n\nThe judge studied the stubborn set of Aidan's jaw and then scanned the faces of his companions. With the exception of Sheriff Wilson, who was looking decidedly uncomfortable, the others all returned his stare with the same calm but determined expression. Judge Hawthorne heaved a resigned sigh and opened the door wide, waving them inside his home.\n\n\"Alright, alright,\" he grumbled impatiently, \"but hurry up and come inside. There's no sense letting my house get any colder while you dilly dally on my front porch.\" When they hesitated in the foyer, he ushered them into his study. \"Come in and take a seat.\"\n\nThe judge lit a lamp and turned the wick high, bathing the study in soft light. He muttered under his breath as he took a seat behind his massive desk and dug for his glasses in a drawer. Naomi and Sarah perched on the two chairs in front of his desk, with Brian and Aidan standing behind them. Liam and the sheriff remained standing near the door. The judge beetled his bushy brows above a stern frown and cleared his throat.\n\n\"Now, young man,\" he said, piercing Aidan with a stern frown. \"Tell me who you are and what this is about, and be quick about it for heaven's sake.\"\n\n\"Sir, I'm Aidan McKenzie, and these are my brothers, my wife and our friend, Sarah Martin,\" he said, indicating each of them with his hand. \"We believe there's been a mistake...\"\n\n\"We know there's been a mistake,\" Naomi corrected, cutting him off. \"Why, there's no way that Sarah...\"\n\n\"Sarah's not a murderer,\" Brian interrupted firmly. \"She's simply not capable of...\"\n\n\"Just a minute!\" The judge roared. When everyone was silent once more, he gave a satisfied humph. \"I can't understand a word you're saying if everybody talks at once. Now, one at a time.\"\n\nSarah cleared her throat to get his attention and met the judge's forbidding gaze unflinchingly. \"Sir, please allow me to speak for myself. I'm Sarah Martin, and I've been arrested for the murder of my former boss, Mr. Jared Henderson. I didn't murder him, sir, but I know who did.\"\n\n\"Young lady...\" the judge began, with a deepening frown.\n\nSarah was frustrated that the judge was going to brush her off, just as the sheriff had been doing all afternoon. She rushed on, anxious to convince him that she was not guilty of murder. \"Sir, honestly, I'm innocent. I know how it must look, because I've been a wanted woman for nearly two months. I would have come forward sooner, but I had an accident and lost my memory. I only found out today, when Sheriff Wilson arrested me, that I was wanted for murder. As soon as I saw Mr. Henderson's name on the wanted poster, my memory came back, and I remembered what had happened. I've been trying to explain to the sheriff, but he hasn't given me the chance. If you'll just listen, I can explain what happened.\"\n\nThroughout her speech, the judge had been trying to get a word in edgewise. When she finally finished, he sighed with relief. \"Young lady, do you mean to tell me that Sheriff Wilson has had you locked in jail all day for the murder of Mr. Henderson?\" When Sarah nodded with a puzzled frown, the judge glared at Sheriff Wilson. \"Ed, you are without a doubt the sorriest excuse for a sheriff I've ever met! I can't believe you put this poor young lady through such an ordeal.\"\n\nThe judge's statement was met by surprised gasps. Everyone turned to the sheriff, expecting that he would know why the judge had reacted as he had.\n\nSheriff Wilson's eyes bulged, and he quickly came forward, hands stretched out in appeal. \"What do you mean, Judge Hawthorne? I was only doing my job!\"\n\n\"If you were doing your job,\" the judge growled, \"you would know that Jared Henderson's wife was convicted for his murder two weeks ago, over in Salem!\"\n\n\"What?\" the sheriff squawked.\n\n\"You heard me, you idiot! Thank goodness Sheriff Dobbs was in charge of the investigation instead of you.\" the judge roared. He cleared his throat and looked back at Sarah. \"Dobbs knew from the start that something about the family's story didn't make any sense. Turns out Mrs. Henderson murdered her own husband. She found out he had been fooling around with the maids and flew into a jealous rage.\" Judge Hawthorne's face looked far less harsh as he smiled apologetically at Sarah. \"The Henderson's housekeeper told the sheriff what had happened to you, Miss Martin. She was convinced that you didn't murder Mr. Henderson. She said you were leaving your job at the Henderson's to return to your father's home, is that right?\"\n\n\"Yes,\" Sarah said with an eager nod. \"How did you know that?\"\n\n\"She went to Sheriff Dobbs and told him everything. She found out that Mr. Henderson had tried to,\" Judge Hawthorne cleared his throat nervously, clearly uncomfortable talking about such things in the presence of ladies, \"well, that he had tried to take advantage of you. She said she helped you pack your things the day you left.\"\n\n\"That's right,\" Sarah said, leaning forward in her excitement. \"Mrs. Baker was kind enough to pay me my wages out of the household funds. I went to Mr. Henderson's study, to turn in my notice, but when I got there, his door was slightly ajar. I heard him and his wife arguing, and I could see him sitting behind his desk. Mrs. Henderson was crying and screaming at him. She found out what he had done to me. She said she was tired of turning a blind eye to his affairs, and that she wouldn't stand for it anymore. Then Mr. Henderson leaned back in his chair, put his hands behind his head and laughed at her.\" Sarah shuddered, remembering that day. \"His voice was so cruel and mocking. He told her that what he did was none of her business. He said he would enjoy any woman he wanted, and there was nothing she could do about it. That's when...\"\n\nSarah clenched her eyes shut, and put a trembling hand to her throat. Brian squeezed her shoulders, leaning over to offer her comfort.\n\n\"What happened then, Sarah?\" Brian asked quietly.\n\nSarah drew in a shaky breath and opened her eyes to meet the judge's kindly gaze. \"Mrs. Henderson flew into a rage. She grabbed his letter opener off his desk and stabbed him in the chest. When I saw her do it, I must have screamed or something, because she whirled around and saw me. I was so frightened by the look in her eyes...she looked crazy, like a maniac. I ran, just as fast as I could. I didn't even think, I just ran.\"\n\nNaomi clasped Sarah's shaking hand in hers, and Sarah gave her a grateful smile. She took another deep breath before continuing.\n\n\"As I was running down the stairs, I could hear Mrs. Henderson yelling for someone to stop me. She was screaming that I had murdered her husband. I panicked. I had only been working there a few days. I didn't know whether anyone would believe me. The only thing I could think about was reaching my father. I knew he would help me. I snatched my suitcase that I had left in the foyer, and I ran until I could barely breathe.\"\n\nSarah took a steadying breath. \"I didn't have a horse, so I figured I would have to walk to Papa's house. I was walking along the road, and it was snowy and icy. I remember being afraid because I was already feeling tired and cold and I had a few more miles to go. I wasn't sure whether I could make it to Silverton, but there was no where to take shelter.\"\n\n\"Your father lives in Silverton?\" Brian said with surprise.\n\n\"Yes,\" Sarah said with a nod, \"he's a school teacher, and he had just taken a job there.\"\n\n\"That's only a few miles from our farm,\" Brian said thoughtfully.\n\nSarah turned back to face the judge, frowning as she remembered. \"I was walking along, when I heard horses approaching from behind. I saw a coach, and I panicked again, thinking that it was someone from the Henderson's coming for me. I started running, but I must have slipped on the icy road. The last thing I remember is tumbling down the hill...then, I woke up at the McKenzie farm and my memory was gone.\"\n\nThe judge raised his eyebrows and blew out a breath through pursed lips. \"That's some adventure you had, Miss Martin. And for the last two months, you've been hiding out at the McKenzie farm?\"\n\n\"I wasn't hiding out, sir,\" Sarah said, sending a brief glare at Brian. \"I didn't even know I was wanted for murder until today.\"\n\n\"Well, you're not wanted for murder any more, Miss Martin.\" The judge shot Sheriff Wilson an accusing frown. \"Ed, you should have known that the Henderson murder had already been solved. Didn't you receive a notice from Sheriff Dobbs?\"\n\nSheriff Wilson shuffled his feet, and his voice turned even whinier than before. \"Judge Hawthorne, I didn't get any notice, least not that I'm aware of.\"\n\nAidan snorted. \"It's probably among all those papers scattered on your office floor! Don't you go through your mail?\"\n\n\"Well, I'm a busy man, Mr. McKenzie,\" the sheriff said with a shrug. \"Sometimes I get a little behind in my paperwork.\"\n\n\"That's baloney,\" the judge spat. \"We all know how much time you waste yacking with the folks around here. If you spent half as much time doing your job as you do sitting on your ass, this whole unfortunate situation could have been avoided! You can be guaranteed that the town council is going to hear from me about this, and if I were you, I would start thinking about your future, because you're about to be out of a job.\"\n\n\"But, sir...\" the sheriff began.\n\n\"Not another word,\" said the judge, holding up a hand to halt his speech. \"I don't want to spend another minute of my time listening to your lame excuses. You know the way to the door!\"\n\nSheriff Wilson gulped and nodded, jamming his hat onto his head as he beat a hasty retreat. It was all the McKenzies could do not to laugh.\n\nThe judge gave a satisfied humph before turning back to Sarah. \"Miss Martin, I hope you will accept my apologies for you being so inconvenienced. If there is ever any way I can be of service to you in the future, you have only to ask, my dear.\"\n\nBrian cleared his throat and stepped forward. \"Sir, as a matter of fact, you could perform a service for us.\" He grasped Sarah's hand and lifted her to her feet beside him. \"We'd be obliged if you would marry us, sir.\"\n\nThe judge's eyebrows nearly disappeared into his hairline, as Sarah gaped at Brian. The others murmured with surprise and pleasure, but before anyone could say anything, Sarah closed her mouth with a snap and snatched her hand from Brian's. She shot him a glare before she turned to Judge Hawthorne.\n\n\"That won't be necessary, sir,\" Sarah told the judge, with a tight smile. \"I have no intention of marrying this man.\"\n\nIt was Brian's turn to stare at her with surprise. For one brief moment, his jaw dropped before he clamped his lips into a thin line of displeasure and he faced the judge. \"Sir, if you would excuse us for a moment. We'll be right back.\"\n\nWithout another word, he grasped Sarah's upper arm and towed her out into the foyer, closing the study door behind them. As soon as they were alone, he hauled her around to face him. The muscles in his jaw were twitching with anger, and he ground his words out through clenched teeth.\n\n\"What the hell is the matter with you? What do you mean you won't marry me?\"\n\nSarah wrenched her arm free from his grasp and tossed her head, returning his glare. \"You've been lying to me for weeks, Brian McKenzie! There's no way that I would trust you enough to marry you now, after what you've done.\"\n\n\"What I've done is protect you,\" he growled, stepping close until he was towering over her. \"I had everything under control until you went gallivanting into town without even talking to me first.\"\n\nSarah refused to be intimidated, and she rose on her tiptoes until she was nose to nose with him. \"What you've done is hide the truth from me! If you had only been honest with me from the beginning, I might have regained my memory weeks ago.\"\n\nShe went to brush past him, but Brian caught her around the waist. He pushed her backward, pinning her against the wall. He planted one strong arm on either side of her head and trapped her legs between his. His eyes were flashing green fire, and Sarah gulped from the sheer possessiveness in his gaze. His barbarian side was out in full force, and it was an effort for her not to quake. When he spoke, his voice was deep and hard, rumbling up from the depths of his chest.\n\n\"You're not leaving here until we're married,\" Brian said with deadly calm.\n\nHe held her gaze for a moment longer before kissing her long and thoroughly on the mouth. There was no gentleness in the kiss. It was clearly intended to demonstrate his claim over her. When he raised his head, his eyes flared with satisfaction when he saw her flushed cheeks and shallow breathing. He caught and held her wide eyed stare.\n\n\"You're going to march your little fanny right back in there and tell the judge that you are ready to become my wife,\" he growled. \"Is that understood?\"\n\nSarah's eyes narrowed into a stubborn glare, and they sparked with anger. \"I'm not going to do any such thing!\" She lowered her voice to a hissing whisper. \"You may think you can make me do anything you want by seducing me.\" Seeing him raise a mocking brow, she blushed but continued. \"That may be true in the bedroom, but it's not true everywhere else! I won't be bullied by you.\"\n\nBrian ground his teeth, the muscles twitching in his cheek. \"You are going to marry me,\" Brian averred. \"You're going to marry me tonight, and that's final.\" He surprised her by nibbling beneath her ear, tracing her delicate skin with his fiery tongue. \n\n\"Stop it,\" Sarah gasped, trying to shoo him away from her neck. \"That is not going to get you what you want, now let me go, or I'll scream.\"\n\n\"You're mine,\" Brian whispered, exploring the delicate line of her jaw. \"Deny it as much as you like, but you and I both know you're mine.\" He cupped one breast in his palm and kneaded it provocatively, rasping her nipple with his thumb. His caresses became increasingly blatant as Sarah became increasingly breathless. \"Do you seriously think,\" he growled, \"that I'm ever going to let you go?\"\n\n\"Brian, I want to be taken to my father's house,\" Sarah demanded.\n\nBrian began exploring the other side of her neck. \"I'll take you to see your father tomorrow. Tonight, we're getting married.\"\n\n\"Brian,\" she groaned, trying to push his hand away from her breast. \"I mean it. This isn't going to work.\"\n\n\"It's already working,\" Brian murmured, pinching her hardened nipple between his fingers.\n\nSarah struggled to cling to her wits. It would be so easy to give in to his persuasion, but her future happiness depended on him acknowledging her as his equal, and in this instance, she wasn't going to back down. She drew a deep breath and pressed insistently on his chest until he finally consented to meet her eye.\n\n\"Brian,\" she said firmly, \"you can throw me on the floor here and now if you decide to. I can't stop you, heaven knows. But then I still wouldn't marry you.\" Seeing that she had his full attention, she went on. \"If I can't trust you to be open and honest in our relationship, then I can never be happy as your wife. By lying to me and keeping me in the dark, you really hurt me. I've been trying so hard to remember my past, and all it took was one name to make it all come back. You could have spared me weeks of uncertainty!\"\n\nBrian heaved a deep sigh, rolling his eyes in irritation before locking gazes again. \"How was I supposed to know that seeing Jared Henderson's name would trigger your memory? All I knew was that you were wanted for murder and might be hanged. I couldn't let that happen!\"\n\n\"That still doesn't excuse you for lying to me,\" Sarah insisted. \"You could have at least been honest with me. For weeks now, I have been wondering why you wouldn't marry me. You gave me one lame excuse after another, when all the while you were hiding this from me! Didn't you think I had a right to know that I was wanted for murder?\"\n\nBrian raked a hand through his hair to keep from throttling her. \"Not if it meant scaring the wits out of you, no! I did what I had to do to protect you.\"\n\nSarah crossed her arms and glared at him. \"Well, in the process of trying to protect me, you betrayed my trust. The worst part is that I've been worried sick about you for weeks! You haven't been yourself, and I've been going out of my mind because I didn't know what was wrong or how to help you. How can I possibly marry you when you won't even let me share your worries or fears?\" She blinked back the tears that were prickling the backs of her eyes. \"Don't you know anything about me, Brian? I'm not some ninny without a backbone! You should have let me face this with you. You shouldn't have shut me out.\"\n\nSomething in her expression caused Brian to pause. Her eyes were full of pain, mixed in with her anger. The knowledge that he had betrayed her trust by not being honest with her nagged at him, prodding his conscience. He swallowed hard.\n\n\"You're right,\" he said quietly. \"I shouldn't have lied to you. Now will you forgive me and marry me?\"\n\nSarah blinked, surprised by his bald admission. \"Of course I forgive you, Brian.\" She cleared her throat, trying to resist the appeal of his green eyes. \"But I won't marry you unless I can be assured that you won't lie to me in the future. As your wife, I would expect to be your partner, to share in all your worries and fears, to share your life. I'm not just some weak female that you need to protect.\"\n\n\"You can't expect me not to protect you, Sarah. I will always do everything in my power to make sure no one hurts you.\" Brian cupped her jaw, running his thumb over her cheek. \"But I promise never to lie to you again.\"",
        "Sarah searched his eyes, remembering all the times he had fooled her and teased her. \"How can I believe you?\" she asked quietly. \"How do I know you won't do the same thing again the next time some crisis comes up?\"\n\nBrian made an impatient sound and clutched her hand in his. He opened the study door and towed her to the center of the room. With everyone's expectant eyes on him, he knelt before Sarah and placed a hand over his heart.\n\n\"Sarah Martin,\" he said firmly, \"I solemnly swear before all my family and Judge Hawthorne, and with God as my witness, that I will never lie to you again.\" Seeing Sarah's eyebrow raise in skepticism, he cleared his throat. \"At least not about anything important.\"\n\nThere was a long moment of expectant silence as everyone waited for Sarah's reply. She tried hard to keep her lips from twitching, but it was a useless endeavor. Seeing Brian kneeling humbly before her was simply too much. She finally gave in and favored him with a laughing smile.\n\n\"In that case, I would be happy to marry you.\"\n\nAidan and Liam whooped for joy and Naomi clapped her hands together delightedly. Brian rose to his feet and clasped Sarah's face between his hands, giving her a long, gentle kiss. Even the judge looked a little misty eyed. He blinked rapidly and cleared his throat, once again assuming his gruff persona.\n\n\"Alright then. If I'm going to perform this wedding, let's get to it. I want to go to bed!\"\n\n**********\n\nAidan pulled the wagon to a stop in front of Naomi's old cabin and grinned over his shoulder at Brian. \"Well, little brother, I think Liam would get a lot more sleep tonight if you and your lovely bride spent the night here. It's well stocked with firewood and provisions, so you two should be more than comfortable.\"\n\nBrian returned his grin, ignoring Liam's howl of laughter as he lifted Sarah down from the wagon bed. \"You read my mind, Aidan. Don't expect to see us for a few days.\"\n\nThe others laughed, and Sarah blushed. Aidan nodded his approval as he turned the horses toward home. His parting comment was thrown over his shoulder.\n\n\"The cabin's nothing special, but the mattress is delightful.\" Aidan grunted when Naomi gave him a sharp jab in the ribs with her elbow.\n\nBrian chuckled, watching the rest of his family disappear through the trees. He turned to his wife, squeezing an arm around her shoulders.\n\n\"Come on,\" he said with a wide grin.\n\nHe scooped her up and carried her inside, kicking the door closed behind them. The interior of the cabin was as black as pitch, and he set her to her feet. He fumbled around until he found a lantern and then lit a fire for them. Sarah watched him, feeling her heart swell with joy and love.\n\nWhen Brian had a roaring blaze going, he rose from his haunches and came to stand before her. He cupped her face in both hands and bent to kiss her. His lips were soft and gentle, plucking at her senses as he tasted her mouth. He raised his head and waited for her eyes to flutter open.\n\n\"I love you, my angel.\" Brian's face was etched with sincerity and commitment.\n\nSarah searched his eyes for a long moment and then smiled. \"I love you too.\"\n\nHe kissed her again while they began undressing each other. They worked their way to the bed, removing clothing as they went. By the time they reached it, they were both naked. The cabin was freezing, but neither of them noticed as they tumbled together onto the soft feather mattress. He lifted her on top of him and devoured her mouth. Their kisses were searching, hungry, eager. They were both breathless by the time Sarah rose onto her arms, straddling his hips.\n\n\"Brian,\" she said, as she struggled to keep a serious expression on her face.\n\nHe tucked her hair behind her ears, watching the corners of her mouth twitch. \"Yes, my angel.\"\n\n\"I was very naughty today,\" Sarah said, nibbling her bottom lip to stifle an impish smile. \"I shouldn't have gone into town without talking with you.\"\n\nBrian raised one dark brow, his dimples beginning to show beside his mouth. \"Hmmm, I meant to talk with you about that.\" Brian's grin deepened even further as she arched her hips, scalding the underside of his cock as she slowly rubbed its length with her wet pussy lips. His next words were slightly strained as she repeated the decadent caress. \"What do you have to say for yourself?\"\n\n\"I think it's time for me to make amends to you,\" Sarah grinned wickedly as she slid further back until she was straddling his ankles, \"with my mouth.\"\n\nShe met Brian's eye boldly as she gripped his cock in her hands. She traced each throbbing vein with her fingertips and gently massaged his aching balls. She paid special attention to the sensitive tip, stroking it lovingly as Brian groaned his appreciation. She raised one teasing brow and her eyes sparkled with mischief.\n\n\"I guess you've married a nasty little cocksucker.\"\n\nBrian couldn't help but laugh, but his chuckles ended with a groan of delight when she took him into the flaming recesses of her mouth. Her tongue was sinfully delightful as she stroked him, sucking and bobbing until she had taken him deep into her throat. With every delicious squeeze of her lips, she worshipped his cock, lavishing him with pleasure until he could barely breathe.\n\nHe enjoyed her efforts for as long as he could before lifting her head away from him. When she met his eye quizzically, he smiled.\n\n\"You're not the only one who was naughty, angel. I should never have lied to you.\"\n\nHe held her gaze as he urged her to turn around and straddle his shoulders, facing his cock. He lay on his back with his head between her thighs. Her eyes widened as she looked down at him. He was directly beneath her pussy.\n\n\"Go back to what you were doing darlin',\" Brian said with a wicked grin. \"I'll make my own apologies.\"\n\nAt his urging, Sarah bent over and took him into her mouth once again. She moaned when she felt his mouth on her pussy. He lapped her folds with his tongue, making sure to taste every inch of the soft, pink flesh before suckling her clit. Sarah felt overwhelmed by sensation. She was torn between the pleasure of making love to his cock and the ecstasy of his mouth on her pussy.\n\nWhen Brian stroked two fingers deep inside her, searching, finding and teasing her sweetest inner spot, Sarah couldn't hold out any longer. She released his cock and leaned her forehead against his thigh, screaming with delight as her orgasm rolled through her. Brian sucked in several ragged breaths, enjoying the sight of her quivering pussy splayed above him while he allowed his own urgency to recede. As soon as she was able to breathe, he drove her on to a new summit.\n\nBy the time Brian felt he had adequately atoned for his misbehavior, Sarah was trembling with both satisfaction and heightened need. He scrambled from beneath her, leaving her on hands and knees. He knelt behind her, stroking her hips and buttocks while he rubbed his cock teasingly along her clit. Sarah shuddered, releasing a desperate whimper.\n\nBrian planted his hands on the outside of hers, his back on top of hers. Sarah felt surrounded and defenseless. The contrast of her softness and vulnerability compared to the raw strength of his body engulfing hers made her shiver again. The feeling of surrender, the yielding of control, the absolute certainty that he would never harm her was intoxicating.\n\n\"You know, my angel,\" he said in a deep, rumbling growl near her ear, \"I'm afraid I have a habit of misbehaving. Are you prepared for a lifetime of receiving my apologies?\"\n\nSarah moaned as he harshly squeezed one nipple and nipped sharply on the curve of her neck where it met her shoulder. She looked sideways, managing to catch his eye, and she raised one challenging brow.\n\n\"Are you?\" she replied impudently. \"As you've said, I am a naughty angel. Do you think you can make me behave?\"\n\nBrian's grin was consummately wicked, and his breath was fiery hot against her neck. \"Who said I want you to behave?\"\n\nSarah gasped as he thrust his cock into the depths of her pussy, and they both gave a heartfelt groan as he bottomed out inside her. He gripped her breasts and possessed her just the way she liked it, hard and fast and deep. Each stroke was punctuated by a painful squeeze of her nipples until they were sore and aching.\n\nNeither Brian nor Sarah was in a hurry. They each held out for as long as possible, savoring the exquisite pleasure of their joining. When the sensations finally overwhelmed her, Sarah screamed, pressing her bottom tightly against her husband as he poured himself inside her with a shuddering groan. Her inner muscles clenched tightly around him, welcoming his seed. Brian relished every rippling contraction, as she milked him dry.\n\nWhen the last tremors faded, they collapsed onto the bed. Brian pulled a quilt over them, loving the feeling of holding his boneless wife snuggled in his arms. The clouds of uncertainty were banished. All he could see was an endless horizon of promise, for him and his naughty angel.\n\n********\n\nEpilogue - eighteen months later\n\nLiam was in no hurry to retire to his lonely bed, and he slowly unsaddled his horse and got it settled in its stall for the night. It was nearly midnight. Liam had spent a thoroughly enjoyable evening at Harvey's saloon appreciating the extensive talents of Rita, his favorite whore. She never failed to please him. She had the body of a temptress, and she knew how to use it. Still, he heaved a sigh, feeling somehow empty and dissatisfied after his night of carnal delights.\n\nLiam loved his brothers and was happy that they had each found their perfect mate. Aidan and Naomi had a beautiful son, Ian, who was nearly a year old. Brian and Sarah had celebrated the birth of their daughter, Leslie. Both couples were ridiculously happy. Liam was glad that his brothers were settled and content, but at times like this, he suffered pangs of envy.\n\nIn recent months, he had grown increasingly dissatisfied with his life as a bachelor. \n\nAn occasional night in the arms of a beautiful and lusty woman was hardly enough to satisfy Liam's restlessness. He longed for a woman of his own, someone to share his life with, someone to be his loving wife. So far, he hadn't found anyone that he wanted to fill that role.\n\nHe made his way to his empty cabin, lighting a lantern and carrying it to his bedroom. When he began to remove his coat, a crackling sound reminded him of the letter he had picked up from the post office. Liam fished it from his pocket and tossed it onto the bed, removing the rest of his clothes before settling in to read the letter from his mother. He had forgotten about it, having saved it until he had privacy to read its contents. He tore through the envelope and adjusted the lantern so that it provided sufficient light.\n\nJune 18, 1854\n\nMy Dearest Children,\n\nI hope this letter finds all of you well and happy. It is with a saddened heart that I write to inform you of your father's death. His health had been failing in recent months. He finally succumbed to a bout of pneumonia and died on the 16th of June.\n\nLiam swallowed a lump in his throat, blinking back tears as he read about the details of his father's funeral. The pain of his father's loss was nearly overwhelming. He continued to read.\n\nAnd now, my dear sons, I find that there isn't much to hold me here. Without your father, I am merely existing. You have invited us many times to come and join you there, in Oregon, your land of promise. Now that your father is gone, I have decided that I should accept your generous offer. I have begun making preparations to join you next year. The possibility of being reunited with my sons and meeting your wives and my grandchildren is my one remaining desire. I keep you all in my heart.\n\nWith all my love,\n\nMama\n\nLiam read the letter once more before folding it carefully and laying it on the bedside table. He stared unseeing at the ceiling as memories of his parents and his childhood home swam through his mind. In the morning, he would have to tell his brothers the sad news.\n\nLiam heaved a heavy sigh. He would go to fetch his mother from Kentucky. It made sense. He was the only one without a wife and child tying him down. He knew the journey, especially round trip, would be long and arduous, but he wouldn't leave his mother to find her own way. Perhaps the journey was just what he needed. Maybe it would ease his restlessness, distract him from his loneliness. One thing was certain, he needed a change.\n\n********\n\nAuthor's note: I hope you have enjoyed this story. For those of you who are wondering about Liam, you can find the rest of his story in \"Trailing Home\". As for me, I will write more stories soon, but for now...Spring is in the air!"
    ],
    "authorname": "haremgirl",
    "tags": [
        "drama"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/second-chances-ch-16"
}