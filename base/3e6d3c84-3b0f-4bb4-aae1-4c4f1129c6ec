{
    "title": "Frank and Elyse",
    "pages": [
        "Author's Notes:\n\n'Frank and Elyse' is a little experiment with perspective.\n\nFrom the comments I received after I first published this story that experiment went off the rails on a few occasions. I decided to make some adjustments where I thought they were most needed. I believe the end result is a smoother read.\n\nI hope you enjoy it.\n\nAll characters engaging in sexual relationships or activities are 18 years old or older.\n\n********\n\nChapter 1\n\nThe final moments of twenty-one years of marriage were disturbingly quiet, the only sound being the scratch of a pen across paper. Making it official, signing the death certificate for a promise of love and fidelity.\n\nFrank felt a stab of pain shoot through his chest as he set the pen down. These days he didn't think twice about that pain. Early on in the divorce he'd gone to his doctor who sent him out for all the tests. The results came back indicating he was healthy as a horse. The pain didn't have a physical cause. It was all in his head, his doctor helpfully suggested.\n\nNeither his physician nor his cardiologist could explain where the pain originated.\n\nBut Frank remembered when it began. To the second.\n\nHe slid the document to his lawyer as Frank's signature was the last one needed to make it final. Taking a deep cleansing breath, he looked up and across the table at the slim 39 year old blond woman sitting stiffly in her chair, arms crossed under the impressively large fake breasts he'd paid for. At her request he'd paid for a series of 'upgrades' over the years, though each time he'd tried to argue that he thought she was ravishingly beautiful as she was. She would not be swayed in her demands so she got what she wanted. Slowly but surely she became a different woman.\n\nToday, especially today, she bore no resemblance to the sweet smiling eighteen year old he'd fallen in love with and married.\n\nCold radiated from her beautiful blue eyes as she looked back at him with contempt, her overly plump lips turned down in a pouty frown.\n\n\"It's over,\" Frank said quietly.\n\nSomething flared in her eyes and she stood up quickly. He saw she was trembling. Was- was she frightened?\n\nThe gob of spit struck his left cheek then she spun on her high heels and stormed out of the meeting room, her long white blond hair bouncing perfectly over her shoulders. Her lawyer apologized quickly and rushed after his client.\n\nFrank's lawyer handed him a tissue which he used to clean his cheek.\n\n\"George, do you think I could have a moment alone?\"\n\n\"Sure Frank. I'll be in my office down the hall when you're ready.\"\n\n\"Thanks.\"\n\nHis lawyer left the room and Frank turned his chair to face out the window. The view of New York's skyline was pretty but he'd seen this view for over a year as he'd battled with his wife and her lawyer. He needed a change. A big one.\n\nFrank was retiring from his job and leaving the city. Hell, he was crossing the country to get away from everything that reminded him of her. He was going to find himself a nice little bungalow within walking distance of a beach and he thought he'd make an attempt at writing that novel he felt floating around in the back of his mind.\n\nHe looked back to the hallway where Stephanie had walked away as fast as her tight pencil skirt and four inch stiletto heels would allow. She'd taken to dressing very young as she desperately fought back the years. She certainly had the body for the outfit, what with the nip and tuck and lipo then the personal trainers- another pang went through his chest.\n\nThe amount of money Stephanie required for her pursuit of eternal youth was staggering. Her new sugar daddy was paying those bills now.\n\nHe'd have been willing to go to a marriage councillor but she wanted the divorce. She'd lined up a new husband. A rich one that looked the other way when she...\n\nFrank gave his head a shake. Stephanie was no longer his problem. He had to let it go. He had to get on with his life.\n\nLooking out over the glittering lights he took stock of his current situation. He was a forty year old male in excellent health. OK, maybe he was a little soft around the middle. For the last decade his job had him trapped at his desk. His morning workouts and weekend cycling trips weren't enough to completely combat the time he spent at his desk. His doctor had informed him he could stand to lose 15 pounds. Now he'd have time to dedicate to making his body hard and fit as it had once been.\n\nHe was now a divorc\u00e9. No kids. Not because he hadn't wanted them but his wife hadn't been able to carry a child to full term. Three miscarriages had been the limit he was able to endure as each time he'd almost lost her as well. He'd planned on getting a vasectomy but he discovered after the third miscarriage they'd removed her uterus to save her life. There'd been no point in the vasectomy after that.\n\nHe was 5' 8\" with broad shoulders, had a full head of black hair, silvering at his temples now courtesy of his ex, and he had all of his teeth. He'd been told he had a nice smile but he hadn't had a reason to show it for some time. With his square jaw and hawkish nose he knew he wasn't pretty like the men Stephanie preferred to fu- no... don't go there. He rubbed his chest and winced.\n\nHe'd been told by a few women in his office that he was 'a catch'. One had even expressed an interest in being the one to catch him when his divorce was finalized. He'd thanked them but he was in no emotional state to be thinking about getting into another relationship any time soon. Considering how destroyed he felt now, maybe ever.\n\nHe no longer had any ties to the city. They'd sold the Bed-Stuy townhouse and the cottage in Martha's Vineyard. They'd split the money on those. After months of hostile meetings and spiteful delays it turned out that she didn't want his money. She just wanted him to hurt. Now she was gone.\n\nHe stood up. It was time to move forward.\n\nHis partners were eager to buy him out at the company. George had the papers for him to sign in his office once the divorce was done so he'd have more than enough savings to retire and live very comfortably and then some. So that was what he was going to do.\n\nFrank looked at the ring he was unconsciously rolling on his finger. It was just a simple gold band. Signifying his undying love and fidelity to the woman who poisoned both. With a sigh he pulled it off and dropped it in the trash on his way out.\n\nChapter 2\n\n\"YOU'RE A FUCKING CUNT! YOU KNOW THAT? A COLD FUCKING BITCH!\"\n\nElyse quietly sat across the table from the screaming man. Her lawyer was telling him to lower his voice and his lawyer was tugging him back into his chair. That wasn't an easy thing to do considering how big Michael was. The 28 year old professional football player stood 6' 2\" and carried 230lbs on his big frame. Enraged he was a dangerous man. Elyse's black eye was visible proof that she knew personally how dangerous he could be. It had been the second and final time he'd raised his hand to her. Five years of marriage, mostly happy, now flushed down the drain because of his substance abuse and subsequent physical abuse. She'd tried to get him help for the first but he wasn't interested. Told her to fuck off and mind her own business in fact. When he began to get physically violent she knew she had to get out of their marriage. The police report on the second assault certainly helped expedite that.\n\nThe big man finally sat and glared at the divorce papers. He was paying for the abuse. A lump sum. Elyse had her own money and a good job so she didn't want the financial ties to him which alimony would bring. Her lawyer had convinced her to make the amount count so she did. The lawyer was getting his piece of the pie so he was the only one in the room with a smile on his face.\n\nThe threat of her pressing assault charges and the prenup they'd signed before they got married was making everything so much simpler.\n\nShe saw Michael doing that thing with his eyes he always did before he began an attempt at bargaining.\n\n\"Sign the papers. We're done,\" she ground out between her teeth.\n\nMichael's eyes snapped to hers and she saw them go cold. He picked up the pen and signed. Then he stood and left.\n\nHer lawyer picked up the document and followed Michael's lawyer out of the room with a nod to her. Elyse found herself sitting alone. She finally allowed herself to cry. She'd been terrified of her husband but she needed him to sign. Now she was free of him.\n\nWhen her tears stopped and her body finished shaking she composed herself as best she could and looked out the window at the twinkling lights of Los Angeles at dusk. It was pretty but she'd come to hate the city. It was Michael's home town and where his team was based. Everything about the city reminded her of him so she was leaving. She'd put her house up for sale and was expecting to get it sold before the weekend as offers were already coming in. She was looking at a little house in a pretty neighborhood in a small town further up the coast and would be putting an offer on it as soon as the money from the divorce came through. She'd already worked out the logistics of working remotely from there. Her office was delighted to be able to keep her as she made them good money.\n\nNot everyone supported her decision to leave. The group of ladies she hung out with at work unanimously said she was nuts and she'd be back within the year. Of course they'd also been keen for her to marry Michael.\n\nThey said she was too young at 32 to move to a town noted for its suitability for retirees. They didn't understand she'd had too many years of living as the wife of a sports celebrity. He was four years younger than her and in their five years his enthusiasm for clubbing, partying, sports banquets, and road trips never waned. She'd joined him on a couple of those road trips and vowed never again. She was done with that!\n\nShe stood and stretched feeling every one of the bruises Michael left on her body. His last attack had been surprisingly violent. He'd carelessly left his cell phone on his dresser which rang as she passed by. She picked up the phone as the caller id was displaying a photo he'd obviously taken of the young redhead swallowing his cock down to the base. The tattoo he wore on his clean shaven groin just above his junk was unmistakable. She'd carried the cell to him in their living room and confronted him with the evidence of his fling. She'd told him she'd had enough and wanted a divorce. She barely saw the first punch coming for her eye and the others came after she was down. She was lucky to survive. She called the police when she woke alone on the floor. They brought the ambulance. She hadn't been alone with Michael from that day on.\n\nShe left the meeting room and ducked into the ladies' room to see how much of a disaster she'd made of her make-up. She stood before the mirror and sighed. Taking in her straight white blonde hair hanging to her shoulders she wondered if she should get it cut. Michael liked it this length. She frowned. Fuck him, she also liked it this length so it was staying.\n\nShe looked at her pale green eyes and saw the swelling was noticeably reduced on her black eye. She had, what did her friends call them when they teased her? Oh yes, 'bedroom eyes'. It wasn't intentional on her part. Her heavy lidded eyes combined with the natural upturn on her full wide sensual lips had gotten her into more uncomfortable situations than she cared to admit. She'd taken to wearing a pair of glasses with non-prescription lenses for meetings with clients. This did a good job of preventing these unintended miscommunications.\n\nShe was diligent about going to the gym so her 5' 10\" body was reasonably fit. As Michael was a gym rat and had equipment at home she'd made good use of it. Her genes ensured she kept some of her curviness and unlike the bolt-ons that redhead slut on Michael's phone had been showing off, her large breasts were natural.\n\nEnough! He was the past. He could have all the sluts he wanted now. She had her own life to restart.\n\nAgain. It was divorce number two for her.\n\nShe fought off a resurgence of tears. She had such fucking awful taste in men! Always the jocks! Always the over confident, charming alpha men! Maybe it was because of her height that she was drawn to big men.\n\nDerrick Chance had been her first husband. Her first mistake. Granted she'd been an innocent eighteen year old when she married him. She'd been infatuated with the 6' 5\" professional basketball player. He was big, black and tremendously talented on the court and between the sheets. Her parents were mortified that their daughter, pure as the Nebraska snow of home, had shared her bed with one of 'his kind'. They'd quickly disowned her and she hadn't spoken with them since. They would have hated Michael as well she supposed.\n\nShe followed her new husband to Los Angeles as he'd signed a multiyear contract to play professionally. She learned a lot about what she liked and didn't during her three years with Derrick. He had a voracious appetite for sex and she discovered that she did too. However, the thing she liked least was Derrick's tendency to stuff his cock into any and every receptive hole when he was away from home. The availability of free pussy on the road was a temptation he made no effort to resist.\n\nShe walked away from that marriage wiser in many ways but terribly hurt by his cheating. Worse, he'd been the one to ask for the divorce as he said he didn't love her anymore.\n\nElyse had stayed away from the dating scene for three years and only met Michael when her frustrated coworkers dragged her to a bar after work. There'd been a party for a group of players from his football team there. He was immediately mesmerized by her looks and intrigued by her resistance. When so many women practically threw themselves at him it was the woman who pulled away that drew his attention. He'd wooed her successfully over the course of two months and discovered he'd struck the jackpot the first night they'd had sex. She was uninhibited, energetic, and knew what she wanted. His career was taking off and he wanted her along for the ride in more ways than one.\n\nAs Elyse stared at her sad reflection she recalled how he'd promised to be true to her. She'd let him know how her first marriage had ended and he'd assured her that wouldn't happen with him.\n\nShe dropped her head forward and closed her eyes. She allowed herself one final tear then she tugged her wedding band off. Leaving it on the counter she made her way outside to begin again.\n\nChapter 3\n\nThree weeks after he'd stepped out of his lawyer's office Frank stood watching a delivery truck pull away from his new home in Carmel-by-the-Sea, California, a beautiful small community of artists and writers. And the occasional nosy neighbor.\n\nWalking down the sidewalk towards him came one such neighbor. She lived two doors up the street from his place. He'd only been in his new home for about a week but already he'd had three visits from Beverly Stoddart. Her husband Rick had been driving them by on their way home the first time. She'd made him stop and she got out to say hello. Rick had simply waved at him from the car, drove into his driveway and went inside. The anti-social Stoddart. Beverly made up for her husband by being overly social.\n\n\"Good morning Beverly!\" he said smiling to the petite brunette. She had to be in her fifties but she seemed to take care of herself. She couldn't have been more than 5' 1\" and he'd almost mistaken her for a child when he'd first seen her due to her size. Her husband Rick looked his age and then some. Earlier in the week Frank had spotted him standing on his deck enjoying a cigar and the foul stench had drifted downhill to Frank's deck driving him inside.\n\n\"It's a lovely morning indeed Frank! What did you get?\" she asked peering at the large, plain cardboard boxes. Then she spotted the mattress in its plastic bag. \"A new bed? Didn't you bring any furniture with you?\"\n\n\"Yes, a new bed. I only brought my clothes and a few boxes of personal items. No furniture. That stuff sold with the house. Neither of us wanted any reminders,\" he said unconsciously crossing his arms.\n\nBeverly had already drawn out of him that he was recently divorced, he was from New York City, and he was retired. He was doing his best to keep her curiosity at bay for anything juicier.\n\n\"You poor dear!\" Beverly said as she patted his forearm. Then she left her hand resting on his arm.\n\nThat was something else about Beverly. She was a toucher. It made him a little uncomfortable that she seemed to need to touch him when she talked with him. He did his best to ignore it.\n\n\"I'll get stuff as I need it. I won't mind living in a minimalist way for a while. It's actually refreshing without all the clutter. The bed though, that I needed.\"\n\n\"Do you need any help getting all this inside? Why didn't the delivery people do it?\" Beverly said looking at the boxes and obviously itching to get inside his home.\n\n\"No, that's alright. I asked them to leave it here. I want to do this myself and I'd better get to it!\" he said as he gently pulled away from her grip with a smile.\n\nShe had a little frown on her face but she quickly covered it up with a smile.\n\nA moving van turned onto their street and made its way up the hill. Beverly and Frank both paused to look as the truck came to a stop across the street from his place.\n\n\"Oh! Our other new neighbor is arriving! How exciting! Having two homes right across from each other sold within days of each other! It's so nice to have new faces in the neighborhood!\" Beverly gushed.\n\nThe truck shut off its engine but no one got out as the owner hadn't arrived yet. Frank turned to the task of moving the bed parts inside. He had an assembly job to do.\n\nBeverly remained outside, saying she was keeping an eye on the boxes but really she was just waiting to see the new neighbor.\n\nThe day was warmer than usual and Frank was getting overheated from lifting all the awkward boxes (it really was a two person job) so he went to his bedroom and switched his shirt to a sleeveless tank top. He went back outside to get the mattress. Not surprisingly Beverly was talking with the delivery men.\n\nJust then a sporty little silver car pulled around the corner and came up the street to park in the driveway across from his. Curiosity got the better of him so he stopped to see who his new neighbor was.\n\nThe door opened and long slim legs unfolded themselves out onto the driveway. Next he saw the blond hair then she was standing next to the car looking back at him.\n\nFor just a second Frank swore it was Stephanie standing across the street scowling back at him. Shocked, it felt like a slap and he staggered back a step. His ankle caught on the mattress he was holding up and he lost his balance, falling backwards. Luckily he fell onto the mattress which went down with a loud thump.\n\nFrank could hear the delivery men laughing and his face burned with embarrassment. Lifting his head he scowled at them but that just made them laugh harder. He was still a little unnerved by the woman's resemblance to his ex so he struggled to his feet and carried the mattress inside. He shut the door behind him. He had an assembly job to do.\n\nChapter 4\n\nThe drive to Carmel had been truly lovely. Once she'd escaped the hellish traffic of LA that is. Elyse managed to calm down once she'd gotten to the relatively empty roads north of the sprawling city. She'd actually made up most of the lost time during the long drive up the coast. And no tickets!\n\nShe'd just visited the realtor's office and had her keys. As she drove through the quaint neighborhoods towards her new home she felt a thrill run through her body. She was home! Here was her new start!",
        "Of course she was still feeling a little sting of disappointment from not getting the house she'd fallen in love with. Some jerk had swooped in at the last minute with a bid she couldn't match and bought her dream home out from under her. The house across the street was almost as nice and she got a better deal on it as its lot was smaller. She put the extra money she saved on the house towards her new car. She loved the sporty little beast!\n\nNow that she was smiling again she turned onto her street and saw the moving truck had arrived and was waiting. As was a small grey-brown haired woman standing next to the truck and a dark haired man standing in front of the house that should have been hers! Her frustration resurfaced. Was he the jerk who stole her house?\n\nElyse pulled into her driveway and shut off the car. She took a deep breath and stepped out.\n\nThe first thing she noticed was that the man had broad shoulders and really nice arms. Then she saw he was looking at her with the strangest expression. It certainly wasn't a smile. What was that for?\n\nShe stifled a snort as he fell backwards onto a mattress he was carrying then hid her smile behind her hand as he stood stiffly and carried the awkward load inside. He didn't return.\n\n\"Hello! Are you the new home owner? I'm your neighbor from up the street. Beverly Stoddart,\" the brunette chirped happily with her hand out.\n\nElyse shook the hand and smiled at the woman. \"Elyse...\" As she said her name she realized she no longer wanted Michael's last name. She'd go back to her maiden name. \"Elyse Williams.\"\n\nOne of the movers walked over with a clipboard. \"Williams? It says here we're delivering for an Elyse Cabrella.\"\n\nElyse frowned. \"Yes, that's me. I'm having my name changed back to my maiden name but for now it's Cabrella.\"\n\n\"Oh! Your neighbor across the road, Frank Dunn, he's recently divorced as well!\" Beverly volunteered with a smile.\n\nElyse noticed Beverly still hadn't released her hand so she smiled and pulled it away.\n\n\"Can we get started?\" the mover asked.\n\n\"It was nice meeting you Beverly! I'd better help these men get to it. I'll talk to you later?\" Elyse asked.\n\n\"Guaranteed!\" Beverly grinned as she walked back towards her own home.\n\nElyse moved her car into the garage to free up the space for the moving van then walked to her front door and opened it. She walked inside and smiled to herself. It really was a nice home. She stood by the front window as the movers maneuvered the big van a little closer. Just beyond the truck was the home she should have been moving into.\n\nNo! She couldn't allow herself to think that way or she wouldn't enjoy her new home as she should.\n\nThe first boxes were coming in so she moved to direct them to the proper rooms. There was so much to do!\n\nChapter 5\n\nHe couldn't get over how advanced bicycles had become. The old clunker he'd left in New York was an anchor compared to the one he'd just bought.\n\nFrank stood in the bicycle shop waiting for the mechanic to bring out his brand new mountain bike. Actually it was more of a touring mountain bike as it had drop handlebars like a road bike. No heavy suspension junk, just a super light but strong frame and big 29 inch wheels... it looked like a tank but moved like a jaguar. This was just the first step in his body rehabilitation plan. The bike came with front and rear racks and he'd picked up some waterproof panniers for the rear rack so he could run errands with the bike. Once he'd built his fitness up sufficiently he planned on getting himself some front panniers, a tent, some other camping gear, and do a little bike touring. For now though he'd just get the bike and rebuild his endurance.\n\nNow he was glad he'd left his old mountain bike back in New York. It was too much of a hassle bringing it across the country anyway and he thought he deserved the upgrade. He also had a new helmet, gloves, shoes, short and long sleeve cycling jerseys, cycling shorts and tights, and rain gear. Oh! And a new lock and lights too. He'd dropped some serious money in this shop today but it was all for a good cause.\n\nHis new Jeep was parked outside complete with a bike rack. He'd needed a new car as he'd sold his sport sedan before heading for the west coast.\n\nHe'd slept wonderfully on his new bed last night. It hadn't taken him long to assemble it. The mattress was just right, not too firm and not too soft. Having the bed all to himself hadn't yet become something he enjoyed. It reminded him of too many hotels but he was hopeful that the empty feeling would fade.\n\nThe mechanic finally rolled his new ride out to him and he smiled in appreciation.\n\n\"Here you go. It's a sweet ride bro!\" the young tattooed man said with an envious look.\n\n\"Thanks! I can't wait to get it out on the trails!\" Frank grinned. He shook the mechanic's hand and took his purchases outside. The bags went into the back seat and the bike went onto the rack.\n\nThe drive home was fairly short which was great because it meant he'd be able to ride to the shop if he needed the bike tuned up or needed some extra gear. Generally, his car would stay in the garage as much as possible as he intended to use the bike for most travel in town.\n\nHe backed his Jeep into the driveway and got out to get his packages. He noticed his new neighbor's car pulling out of the drive and he turned to smile at her but caught the tail end of a disapproving look on her face as she drove past.\n\n\"Christ, just like Stephanie,\" he growled to himself as a chill ran down his spine. Well fine. He didn't have to be friends with everyone in the neighborhood. His goal was to write his novel which meant a lot of quiet time by himself so he didn't need the distractions anyway.\n\nHe carried his packages inside then moved his bike into the garage up onto hooks on the wall. Finally he moved the Jeep into the garage and locked the door.\n\nHe saw a white van parked in front of the house across the street. The truck was plastered with an ad for low cost internet.\n\n\"Excuse me! You know where the owner of this place is?\" a man with a clipboard called out to him from her driveway.\n\n\"Sorry, no idea. I saw her leaving just a little while ago,\" Frank called back.\n\nThe man shrugged and got back into his truck and drove away.\n\nFrank went inside and made himself a sandwich. The old fridge that came with the house was making an odd tinkling sound but it had lasted this long and he really didn't want to buy new appliances until he'd decided what he was going to do about the kitchen. It was really dated and he was probably going to have it gutted and redone. Carrying his lunch and his laptop out onto the deck he made himself comfortable and did a little research on what it might cost to redo the kitchen.\n\nFrank must have been outside for over an hour when he heard a voice calling his name. He stood up and looked over his privacy screen in the direction of Beverly's place. He could barely see her through all the vegetation between their homes but she perked up as she caught sight of him.\n\n\"There you are! I knocked on your front door but you didn't answer,\" she gently scolded him.\n\n\"Sorry, I was just having lunch on the deck.\"\n\n\"I'll be right there.\" Then she was gone.\n\nFrank sighed. He really wasn't feeling up to a visit but it looked like he wasn't being given a choice. He went inside with his laptop and walked to the front door. She knocked as he got to the door so he opened it up.\n\n\"Hi again! May I come in for a moment? I just wanted to ask you something,\" she said cheerfully.\n\nHe stood back and she walked in, her eyes darting everywhere and growing wider as she took in the absence of... everything. She peered up at his face in surprise.\n\n\"You weren't kidding about living in a minimalist way! You have nothing!\" she squeaked and her voice echoed in the empty living room.\n\nHe smiled and nodded. \"It feels good. For now I have a bed, a working fridge, stove, washer and dryer. Oh, and I have my Internet working so I have everything I need. What did you need to ask me?\"\n\n\"Right! I would like to invite you to dinner tonight to welcome you to the neighborhood,\" she said with a wide smile.\n\n\"Tonight?\"\n\n\"At 7pm sharp! You told me you're retired so you shouldn't have any excuses for not showing!\" she grinned as she placed her hand on his right bicep, giving it a little squeeze.\n\nFrank was once more feeling a little uncomfortable but the quickest way to get her out was to agree. \"Fine. I'll be there. Thanks!\"\n\n\"Excellent! Dinner attire is 'dressy casual',\" she said over her shoulder as she made her way back outside. She grinned back at him as she waved. He just returned her smile and closed the door.\n\nDressy casual. Right.\n\nHe headed to his bedroom. He had to see if he had anything that fit that description.\n\nChapter 6\n\n\"aaaAAAHHH!\"\n\nElyse woke with a scream and sat up gasping. She looked around at the unfamiliar surroundings then it all came back to her. Her new house. Her perspective was skewed because she was sleeping on her mattress on the floor. The night before she discovered she had no tools to assemble the frame. The movers disassembled the bed before loading it on the truck but they'd left before she noticed they hadn't reassembled it here.\n\nShe flopped back on the mattress and let her heart rate slow down. The last time she'd woken this close to the floor had been after Michael had beaten her. A shiver ran down her spine.\n\nShe'd been up so late the night before unpacking. She glanced at her flip alarm clock and it said 7:01AM. It was time to get her day started. She just had the weekend to get the essentials in place so she could begin working from home on Monday. The Internet service provider she'd contacted said they would hook up her service this afternoon between 1 and 4PM so she had to get most of her running around done in the morning.\n\nShe found her towels and bathroom supplies and took a quick invigorating shower. She slipped on her panties and bra, a casual top, yoga pants, short socks, and pulled on her hoodie and sneakers. She was ready to run her errands.\n\nAs she passed by the kitchen she glanced at the wall clock. It said 11:35AM! She rushed back to the bedroom and the clock still showed 7:01AM. It wasn't plugged in. She rushed back out to the kitchen and picked up her cell. 11:36AM. She'd slept in!\n\n\"FUCK!\" she yelled in frustration.\n\nShe had almost no time to get anything done! She'd have to scramble to get at least some of her tasks done and be back in time for her service window.\n\nShe grabbed her keys and locked up as she rushed outside and got her car out of the garage. She was going to need to get a garage door opener as having to close it manually was going to get tiresome pretty quickly. She glanced at the clock on her cell again. \"SHIT!\"\n\nAs she pulled out of her driveway her eyes were drawn to the Jeep parked across the road. Michael had a Jeep and went on and on about how awesome off-roading was. When he wasn't taking drugs and beating her up that is. Now she had that unpleasant reminder to look at every day. She pushed the unhappy thoughts from her head and drove up the street quickly to get to the post office. She'd have to put off getting groceries until after the service call.\n\nThe post office and the bank took longer than expected so she rushed back home and arrived with just fifteen minutes to spare before 1PM. She went inside and realized she hadn't eaten since breakfast the day before. She couldn't go out now and she didn't have any numbers to order delivery or internet service to look it up. Well, she would just have to wait until dinner. She went back to unpacking.\n\nA few minutes later she heard a knock on the front door. Finally, something was going her way today.\n\nShe answered expecting to see the installer but her brunette neighbor... Beverly, was standing there instead.\n\n\"Hi Elyse! I won't keep you as I'm sure you are busy with unpacking but I just wanted to invite you to dinner tonight to welcome you to the neighborhood!\"\n\n\"Oh, uh, that- that would be very nice! Thank you.\" Elyse said, surprised by the kind gesture.\n\nBeverly smiled and turned to leave, pointing to her house. \"Dinner's at 7PM. Attire is 'dressy casual',\" she finished with a smile.\n\n\"OK, see you then.\" Elyse responded with a puzzled expression. \"What a strange little woman,\" she thought to herself as she closed the door.\n\nShe immediately checked to see if the dress she had in mind needed ironing but it was in good shape. She went back to unpacking but she kept an ear open for the door.\n\nBy 3PM she was starting to get nervous they weren't going to show. She called the office and waited on an automated queue for twenty minutes before someone finally answered.\n\n\"DeltaComm Internet, how can I help you today?\" said a pleasant female voice.\n\n\"Hello, I'm having Internet installed at my home today and I was wondering when the installer was going to arrive.\" Elyse asked.\n\n\"Could I have your name and address please?\"\n\nElyse gave her the details and listened to the sound of a keyboard being pecked at.\n\n\"Yes, I see you have an appointment between 1 and 4PM. It's only 3PM so the installer should be there within the next hour. Due to the number of appointments we have and the unique situations each installation may incur we cannot give exact times for the appointments,\" the voice said with a bored tone. Elyse had obviously been categorized as a nuisance caller.\n\n\"I understand that. It's just rather critical that I get this work done today. Is there any way to contact the installer and confirm he is going to be able to get here today?\" she asked.\n\n\"I will put in a call and if there are any issues we will call you back.\" The line went dead.\n\nElyse stared at the phone in annoyance. How rude!\n\nFrustrated she went back to unpacking.\n\nBy 4PM the installer still hadn't arrived so she got back on the phone but was trapped on the automated queue for forty minutes.\n\nWhen a human voice finally answered she was more than a little upset.\n\n\"DeltaComm Internet, how may I help you today?\" This time the voice was male and already had the bored tone firmly in place.\n\n\"My installer never showed. I need my Internet service connected today!\" Elyse blurted.\n\n\"Could I have your name and address please.\"\n\nElyse gave him the details and again heard the click of keys.\n\n\"Ok, it says here that the installer knocked and no one answered,\" the voice accused.\n\n\"I was here from 1PM to 4PM and the only person who knocked in that time was a neighbor.\" Elyse ground out.\n\n\"I'm just telling you what it says in our system. The installer arrived, knocked, received no response and moved on to the next job.\"\n\n\"And I'm telling you that didn't happen because I was here. Can you send them back?\" Elyse asserted.\n\n\"All installers are currently doing other jobs and will be busy for the rest of the day. Looking at the calendar the earliest we could have an installer return to your home would be Wednesday-\"\n\n\"WEDNESDAY?!?\" Elyse cried out.\n\n\"Ma'am please don't yell at me. Do you want me to book the appointment for you for Wednesday between 1 and 4PM or not?\" the voice responded in a terse manner.\n\nElyse took some deep breaths to calm herself. She was going to have to call around to see if she could find anyone else to come earlier. In the meantime she'd have to book this appointment just in case she wasn't successful. \"Yes.\"\n\n\"OK, you are booked. Anything else we can do for you today?\"\n\n\"No.\"\n\n\"Thank you for your busine-\" The line went dead before he'd finished his words.\n\nElyse then realized she didn't have any means to look up other Internet providers.\n\n\"FUCK!!!\" she screamed in frustration.\n\nShe recalled she was going to dinner with Beverly. Maybe she had a phone book or better yet Internet access.\n\nTaking a few more deep breaths she calmed herself. She could go get some groceries now. Glancing at the clock she hoped the store was open late on Saturdays.\n\nFuck.\n\nChapter 7\n\nKnocking on Beverly and Rick's door just a little before 7PM, Frank took another quick glance at his 'dressy casual' outfit. A nice pair of dark grey slacks and a blue pinstripe dress shirt open at the collar with the sleeves rolled up his muscular forearms. Black loafers and a black leather belt completed the outfit. It was all he had that could be considered dressy casual.\n\nAfter a few moments the door was opened by Rick. Once more Frank was surprised to see how much older he appeared than Beverly. Rick was maybe a little shorter than him, thirty pounds heavier, and balding with just a ring of grey hair.\n\n\"Yes?\" the man said with a raspy voice.\n\n\"Good evening Rick.\"\n\n\"Do I know you?\" the man said peering at him.\n\n\"Frank Dunn. Your neighbor from two doors down. Beverly invited me to dinner?\" Frank explained but was beginning to feel uncomfortable due to the blank look on Rick's face.\n\n\"Oh for heaven's sake Rick, invite our guest in.\" Beverly's voice gasped from further down the hall. \"I told you about our dinner plans at breakfast!\"\n\nRick's eyebrows went up a little. \"Oh. Christ woman, you know I don't listen to half of what you say.\" He turned back to Frank. \"Well come on in. Seems we have dinner plans.\" He stopped when he saw Frank was carrying a bottle of wine and his face lit up. \"Is that for us?\"\n\nFrank smiled with a nod and handed him the bottle. \"I wasn't sure what was being served, if I should get a red or a white wine, so I got a bottle of ros\u00e9. I hope that's ok.\"\n\n\"It's very ok! It's French! Ooo la la!\" Rick said, practically chuckling. Beverly stuck her head out into the hallway and scowled at her husband who ignored her.\n\n\"Good evening Beverly,\" Frank said and her smile returned.\n\n\"Thank you very much for the wine Frank. You didn't have to.\"\n\n\"My parents taught me never to arrive for a dinner invitation empty handed.\"\n\n\"Well, bless their hearts!\" Rick grinned.\n\n\"Put that on the table and show Frank into the living room. Dinner will be in a few minutes.\" Beverly instructed her husband.\n\nRick pouted a little having to put the bottle down but he did as he was told.\n\nFrank just got seated when there was another knock on the door. Rick looked at him and he just looked back. Rick left the room and moments later arrived with another guest. Frank stood and felt a jolt pass through his body. White blond hair, knock out figure in a lovely flowered dress... and a frown on her lovely lips. He felt a familiar pain pass through his heart and he struggled to get his breathing started again. He unconsciously rubbed at his chest.\n\n\"Elyse! Welcome!\" Beverly said as she came down the hall to meet the woman at the entrance to the living room.\n\nFrank saw the woman was feeling about as uncomfortable as he was. This definitely felt like an ambush.\n\nRick was looking at their faces and picked up the clues pretty quickly. \"You two didn't know the other had been invited did you?\"\n\nFrank and Elyse both shook their heads. Rick scowled at his wife. \"And you wonder why you don't get invited out more by the neighborhood wives?\"\n\n\"What? I invited them over for dinner? What's the harm in that?\" Beverly barked at her husband but Frank saw Rick had struck a sensitive spot with his comment. He instinctively moved forward to defuse the situation.\n\n\"It's ok. It was just a surprise.\" He turned to the tall blond. That was one difference this woman had to Stephanie who was two inches shorter than him. Up close there were several other differences, each of which he was grateful for as the more she differed from his ex the better. He held out his hand. \"Hello, I'm Frank Dunn.\"\n\nHe saw the woman collect herself and take his hand in hers. \"Elyse Cabrella. I mean Elyse Williams. I'm changing it.\"\n\n\"Frank is also divorced but I suppose it is simpler for men who don't have to change their surnames.\" Beverly said. She was almost bubbly now that she'd been 'forgiven'. Rick was still glaring at her.",
        "Frank looked at Beverly and winced. Simpler? \"Divorce is anything but simple for anyone involved.\"\n\n\"Maybe I'll ask you for some pointers after dinner,\" Rick grumbled and moved into the living room.\n\n\"Of course, I meant no offence Frank!\" Beverly said and placed her hand on his arm again.\n\nHe just nodded and glanced at the blond. She was still looking uncomfortable. \"Shall we sit?\" That got a nod from her. They all moved into the living room and found seats. Rick had already claimed his favorite spot, an old leather Lazy Boy recliner, so Beverly sat on the couch next to Frank and Elyse sat in a lovely old high back chair facing the couch.\n\n\"Are you all unpacked yet?\" Beverly asked the woman.\n\n\"No, I have a ways to go,\" she said with a guarded smile.\n\n\"Frank arrived with only a few boxes and his clothes,\" Beverly offered and Frank nodded uncomfortably. He wasn't sure what kind of impression that fact made.\n\n\"As I was coming from the other side of the country the less I brought the simpler it was. It's like a new start for me too,\" he said and glanced at Elyse who was giving him a funny look. Time to go on the offensive. \"How about you? Where did you move from?\"\n\n\"Los Angeles. I still have a job there but I'll be working remotely... once I have my internet hooked up.\" Elyse told them.\n\n\"So, the installer didn't come back?\" Frank asked. He saw the blonde's pretty green eyes open wide as she stared at him.\n\n\"What do you mean 'come back'? He never showed for my scheduled appointment!\"\n\nFrank was a little taken aback as her voice was becoming rather sharp. \"The van arrived shortly after you drove out of your driveway this morning. He knocked but you obviously weren't there. He asked if I'd seen you and I told him you'd just left.\"\n\n\"WHY THE HELL DID YOU DO THAT?\" the woman barked. Her face was red and her eyes held so much pent up anger.\n\nFrank flashed back to the torture of dealing with his ex in the lawyer's conference room day after day and his hands began to shake. Suddenly he didn't really feel up to a social evening tonight. He stood up and faced Beverly who looked up at him in surprise.\n\n\"I'm sorry. Maybe this isn't such a good idea. I'll see myself out. Have a good evening.\" With that he strode from the room and stepped outside, closing the front door behind himself.\n\nHe felt the shakes building so he trotted back to his house and got inside before it got out of hand. He went into his bedroom and undressed. Then he dropped and began to do push ups. This helped him burn off the excess adrenaline. He didn't stop until his arms could no longer lift his body. He rolled over onto his back and stared at the ceiling.\n\nThis was the last present Stephanie ever gave him. A year of psychological abuse leading to this.\n\nAnd now he had a neighbor who could trigger it.\n\nGreat.\n\nChapter 8\n\nElyse watched Frank stand and say his goodnights as her burst of anger quickly drained away. She opened her mouth to stop him but he was gone. When her frayed nerves had finally exploded she'd seen him freeze in place. Except for his big hands. They were trembling. What had she done?\n\nHer afternoon had left her feeling more than a little frustrated. She'd picked up groceries once she found the store but the cashier was just back from her break and had just broken up with her boyfriend. She proceeded to have an emotional breakdown after Elyse put all her groceries onto the belt. It took thirty minutes to get through the checkout process as they were short staffed. She was almost home when she remembered she needed tools as well so she had no tools to assemble her bed.\n\nBy this point it was time to get ready for dinner at Beverly's so she took a quick shower and put on her favorite summer dress and sandals.\n\nEven the dress hadn't improved her outlook. Truthfully she was in no mood to attend the dinner but she'd already said she would and she didn't have Beverly's phone number to call and cancel. Besides she needed to borrow a phone book as well so this was a good opportunity.\n\nThen ambush and her nerves went on high alert. The news of missing the installer had been the final straw, pushing her beyond her control and she lashed out.\n\nNow she sat in the living room with two stunned strangers after hurting a man who had done her no real harm. She felt terrible!\n\n\"Oh my god, I'm sorry! It's been such an awful day. I didn't mean to snap at him like that.\" Elyse said to her hosts.\n\nBeverly and Rick just blinked back at her. She couldn't do this. Not tonight.\n\nShe stood. \"I'm sorry. We should reschedule this. I'm obviously not very good company at the moment. I'll let myself out.\" She turned and hastily made her way outside and walked back to her house. She stopped as she reached her driveway and looked across the street at Frank's home. An image of how his big strong hands had trembled flashed in her mind and she wondered what had happened to him. Something that had driven him across the country!\n\nShe felt terrible! She turned to cross the road but something stopped her. Her nerves were still too jittery. She'd probably say something else stupid. With a final sad look across the street she turned and went home.\n\nThen she realized she didn't get the phone book from Beverly.\n\nShit. What a perfect ending for the day.\n\nChapter 9\n\nWaking early was built into Frank's brain. He couldn't sleep in if he tried. He'd gotten used to it and used the extra time to work out.\n\nHe looked out the window and the morning was looking bright and clear. An excellent day to go for a ride. He ducked his head out the patio door to test the temperature and there was a bite to the air. He went back to the bedroom and pulled out his full length cycling tights, a long sleeve jersey and his windbreaker. The outfit made him look like he was dressing up as a superhero but it was damn comfortable.\n\nHe also brought along his panniers in case he found a place to buy some fresh vegetables. He went outside, locked up, and got his bike out of the garage. He put his helmet and gloves on, mounted the bags to the rear rack and set off downhill.\n\nThe roads were pretty quiet this early in the morning and he enjoyed the peaceful ride. It didn't take him long to reach the beach and he stopped for a while just to feel the ocean breeze. The bite was stronger here so he was glad he chose to cover up.\n\nOnce he'd had his fill he made his way up the hill away from the beach towards the shopping district. He kept his riding level pretty tame as this was just a shakedown ride for his new bike. So far it was living up to expectations and he was deeply impressed with the quality of the ride. Traffic picked up the closer he got to the main drag and he learned that the disc brakes worked very well when a senior citizen obliviously pulled out of a parking lot in front of him. The old man glared at him as he left the parking lot at a snail's pace.\n\nFrank decided he would do a little more exploring so he headed inland and came upon a dirt trail through the trees. That was fun so he rode as many of the trails as he could find.\n\nWhen he exited the path at a roadway he recognized where he was and knew there was a grocery store not far away. He rode along the road until he spotted the shopping complex. He parked and locked his bike and went inside with his panniers. He left his helmet on as this was the simplest way to carry it but he popped open the chinstrap. He got a few stares as he was wearing his cycling clothes but he just ignored the gawkers... after he confirmed nothing important was showing.\n\nHe loaded up on fresh fruit and vegetables then cashed out. Everything went into his two panniers and he realised he might want to pick up the front panniers for larger loads or pick up a trunk bag for the top of the rear rack. He was thrilled that this experiment was working so far but he still needed to get the loaded bags on the bike and all the way home. He had no idea how the bike would handle with the heavy bags in place. Only if the groceries, and he, survived the trip home could he truly call it a success.\n\nFrank was on his way out of the store when he spotted Beverly walking towards him with a concerned look on her face. Damn.\n\n\"Good morning Frank.\"\n\n\"Good morning Beverly,\" he replied.\n\n\"I'm so sorry dinner didn't work out last night. I never expected it to end like that,\" Beverly lamented, clinging to his arm.\n\nThey were blocking the entrance so he guided them over to where he'd parked his bike and he set down his bags.\n\n\"I'm sorry it turned out that way as well. We can reschedule for another night- not tonight,\" he asserted when it looked like Beverly was going to make the suggestion. \"Let's give it a few days. Did you have a nice dinner with Elyse after I left?\"\n\n\"Elyse was so apologetic after you went home. She was terribly upset so she left shortly after you did,\" Beverly pouted. \"I put your wine in the fridge to chill so we can have it at our next get together.\"\n\nFrank wondered just how much of that apology was for him and how much was just to let Elyse escape the dinner. He put that thought aside.\n\n\"OK, I'd better get these groceries home. Later in the week we can give dinner another try, ok?\" Frank said and she nodded with a smile.\n\n\"Don't you have a car?\" Beverly asked looking at his bicycle.\n\nHe smiled at her puzzled expression. \"Yes, but this is healthier. I get exercise as I run my errands.\"\n\n\"You look good in those tight pants!\" Beverly said with a grin and he smiled awkwardly at her. How was he supposed to respond to that?\n\nHe connected the bags to the rack and unlocked the bike. Once the bike was clear of the rack he swung his leg over and closed the straps on his helmet.\n\n\"You have a good day Beverly. I'll see you later!\" he said to the woman who just nodded and continued to watch him with that silly grin on her face. No, she was leering now. He sighed.\n\nHe rode back towards the main intersection out of the parking lot and paid close attention to the bike's handling but he didn't really notice any significant changes. Soon he was riding back towards his place and he was no longer conscious of the load he was bringing along. He rolled down the hill and his braking showed no differences either. He pulled into his driveway and got off of the bike. He tugged the panniers off then moved the bike into the garage and up onto its hooks. The helmet went onto its own hook and he ran his fingers through his hair so it wasn't flattened to his skull.\n\nAs he stepped out of the garage he came to a halt as Elyse was standing by his bags. He saw she was wearing yoga pants and a tight stretchy top under a loose hoodie left unzipped. The outfit accentuated her curves which he found more than a little distracting. Lovely green eyes were looking at him cautiously.\n\n\"Good morning,\" he said quietly. He locked the garage and turned back to look at her. Damn, she made him nervous!\n\n\"Good morning. I want to apologize for how I behaved last night. I'd had a very frustrating day and I lost my temper at you for no good reason. I'm so sorry. I hope you can forgive me.\" She was tipping her face down and looking at him from under her bangs. He felt a tremble go through his body. She was so damn beautiful!\n\nFrank felt himself beginning to tingle in a place that was not so well covered at the moment. He hadn't felt anything there in... a very long time. He struggled to understand why his body was betraying him at such an inappropriate time.\n\n\"Yes, of course. We all have bad days,\" he said, trying to hide his reaction to her. He pointed to the bags at her feet to indicate he needed to pick them up.\n\n\"Oh!\" She looked down and bent to lift the bags giving Frank an unexpected view of her cleavage. His face warmed up.\n\n\"Wow! These are heavy! What's in them?\" she asked lifting the full panniers.\n\nFrank accepted the bags from her hands and held them in front of his bike shorts as he was just beginning to show his reaction to her body. \"Groceries. I should get them into the fridge.\" When she made no move to leave he continued. \"Would- would you like to come in for a moment?\"\n\nShe smiled and he was momentarily stunned by it. He turned and walked to his front door and let them into his house.\n\n\"It's empty!\" she exclaimed.\n\nHe smiled and glanced at her look of surprise. \"Yes, as Beverly mentioned last night I brought almost nothing with me from New York.\"\n\nShe stood in the middle of the living room and looked around. \"It's such a lovely house,\" she sighed as he moved past towards the kitchen. She followed.\n\nFrank set the panniers down on the countertop and began pulling the contents out. She was watching and her eyes showed how surprised she was at how much he'd carried in them.\n\n\"Do you always ride your bicycle to get your groceries?\" she asked in wonder.\n\n\"Actually this was my first attempt and I believe it was a complete success! Nothing got crushed or damaged in any way.\" He opened the old fridge and loaded the crisper tray with the veggies and the fruit went on the shelf above that.\n\nWhen he looked back he caught her staring at his ass but she quickly turned away and walked over to the breakfast nook where he'd set up a cheap card table and four folding chairs. He swore her cheeks were showing a blush of her own.\n\n\"You know, I put a bid in on this house as well,\" she said quietly.\n\n\"We were bidding against each other?\" he asked in surprise.\n\nShe nodded as she looked out the windows to the deck.\n\n\"Sorry?\" he said carefully.\n\nShe shook her head and looked back at him with a smile. \"No, it's fine. You won fair and square. I admit I was upset at the time as I was eyeing this property for some time. Since I filed for divorce... a month ago.\n\nFrank couldn't suppress the snort of surprise that escaped. A month? He saw she was looking at him curiously.\n\n\"Sorry. My divorce process took over a year. It was... a very bad time.\" He looked down to avoid seeing her resemblance to his ex.\n\n\"May I ask you something?\" she asked quietly.\n\nHe glanced nervously at her. \"Sure.\"\n\n\"You... seem to have trouble looking at me. Why is that?\" she asked gently.\n\nFrank's face burned and his hands felt clammy. \"I'm sorry. It's just- you look a little like Stephanie. My ex. She... put me through hell in the past year.\" He really wanted to be someplace else at the moment.\n\n\"Oh my god! You moved across the country to avoid her and ended up across the street from someone who...\" Elyse's voice failed. \"I'll go.\"\n\nFrank turned to look directly into her eyes. He forced steel into his spine to hold himself in place. \"No! I mean, it's not your fault. It's an issue I have to deal with. I know you aren't her. The resemblance is superficial. Her blond hair was longer and wavy. Her eyes were blue, not a lovely shade of green and her lips were over inflated and... always sneering or frowning... unlike yours...\" Her shy smile once more filled his vision and he lost track of himself momentarily. He forced himself to turn away to get his control back. \"I really should get cleaned up.\"\n\n\"Of course. Before I go could I borrow your phone book? I have to look up Internet service providers to see if I can't get someone to do the installation today. It's critical I get a connection by tomorrow. My office expects me to work remotely.\"\n\n\"I never received a phone book. I don't think they print them anymore. It's all done online these days. If you want, you can connect to my network to do your research.\"\n\nHer brows crinkled in worry. \"I don't think that will work. Before I left my office the techs installed something called a VPN on my laptop. I don't even know what a VPN is but the way they explained it to me I think I have to use it from my own home Internet connection.\"\n\nHe nodded with a smile. \"I know a thing or two about VPN's. It means Virtual Private Network. It's a piece of software run on your laptop that sets up a secure connection between the laptop and a server at your office. You can use your laptop anywhere as the security of the connection is based on the software on your laptop.\"\n\n\"Oh! That actually makes sense to me! Do you work in IT?\" she asked.\n\n\"No but I traveled a lot and had to securely connect to my office from various places. I've used VPN's quite frequently. I'm retired now.\"\n\n\"Retired? How can you be retired? You're much too young!\" she exclaimed in surprise.\n\n\"I sold my shares in the company I created to my partners. So... now I'm retired,\" Frank said with a smile. \"Why don't you get your laptop and give me fifteen minutes to get cleaned up then come over to do your research. I can make us lunch. I was going to make a chicken caesar salad.\"\n\nOnce more she flashed her brilliant smile at him and nodded. His equilibrium took a hit each time she did that. His mind kept expecting her to scream vile accusations or belittling insults at him. When he got kindness instead he reeled in confusion. He braced himself against the counter and her eyes went to his hands.\n\n\"Are you ok?\" she asked gently.\n\nHe forced a smile out and nodded stiffly.\n\n\"She really did a number on you, didn't she?\" Elyse said compassionately, her eyes softening.\n\nFrank's eyes widened and he had to grit his teeth to contain the gasp as a huge wave of emotion, feeling strangely similar to relief, washed over him. \"Excuse me please,\" he croaked as he turned and walked down the hall towards his bedroom. He heard the front door closing as he walked into his master ensuite. He pulled off his cycling clothes and stepped in the shower. Tremors ran through his muscles as he turned his face up to the spray.\n\nHe allowed himself a few minutes of that and felt himself calming. Shampooing and soaping himself clean took only a few moments and he actually felt much better once he stepped from the shower. He toweled himself dry and put on some comfortable jeans and a polo shirt. He slipped his sandals on and went back out to the kitchen to prepare lunch.\n\nTwenty minutes later he came to the conclusion that Elyse wasn't coming back. He stepped outside and crossed the road to knock on her door. Moments later the door opened and she looked at him with concern in her eyes.\n\n\"Are you coming over to do that research and have lunch?\" he asked.\n\nShe bit her lip and his eyes were immediately drawn to the gesture. Damn.\n\n\"Are you sure it's ok?\" she asked.\n\n\"Yes! As I said, it's just something I need to deal with. I feel much better now. Thank you,\" he said with a smile.\n\n\"I'll get my laptop. One moment.\" She darted back to her kitchen and returned with the device in her hands. She locked up and they went back to his place.\n\nOnce they were inside he led her back to the kitchen and she sat at the card table. \"Your taste in furnishings is very... utilitarian,\" she said with a grin.\n\nHe smiled self-consciously. \"Yes, the table and chair set was cheap and temporary. I plan on redoing the kitchen from scratch so I didn't want to get any furniture until the room is done.\" He put two plastic bowls on the table with plastic cutlery and carried the large bowl of caesar salad to the table. He then brought three smaller bowls to the table. One contained freshly grilled chicken strips, the second had freshly sliced lemon wedges in it, and the last contained seasoned croutons.\n\n\"All I have to drink is water or wine,\" he said. He looked in the fridge again. \"The wine's a nice pinot grigio.\"\n\nElyse nodded. \"I'll have a glass of wine please.\"\n\nFrank got two glasses out of the cupboard and poured for both of them. He carried them to the table and Elyse's eyebrows went up. \"Not plastic?\" she teased.\n\n\"Never!\" he responded in mock outrage.\n\nHe took a seat across from her and they filled their bowls with the salad and added the chicken and croutons. Frank squeezed lemon juice on his salad as Elyse watched curiously then she did as well.",
        "\"What shall we toast?\" Elyse asked.\n\n\"How about to new beginnings?\" Frank suggested.\n\nHer smile was warm as she nodded and raised her glass. They sipped the chilled wine and it was delicious.\n\n\"Oh, that's really nice! Very light!\" she said and he could tell she meant it. He nodded and tucked into his lunch.\n\nThey ate in silence for a bit then she glanced over at her laptop. \"Do you think you could show me how the VPN thing works? If I can connect to the office today the IT department will see I was able to connect and that may relieve some of the pressure of getting a connection for Monday.\"\n\n\"Sure, no problem,\" he said.\n\n\"The salad is delicious!\"\n\n\"Well, it's difficult to make a bad salad if your ingredients are fresh,\" he stated.\n\n\"Did you grill the chicken?\" she asked\n\n\"Sliced and grilled,\" he admitted.\n\n\"You like to cook?\" she asked with raised eyebrows.\n\nHe cocked a brow and pinned her with his eyes. \"What makes you think I wouldn't?\"\n\nIt was her turn to blush. \"Sorry, I have to admit I got totally the wrong impression of you from day one.\"\n\nHe looked away and nodded. \"So did I... of you.\"\n\nShe lifted her glass once more and caught his eye. \"To new beginnings?\"\n\nHe nodded looking into her warm green eyes. \"Yes. I'd like to start over.\"\n\n\"Your Jeep, your bicycle, and your muscles all led me to believe you were some kind of jock,\" she confessed after she swallowed the sip of wine.\n\nHe snorted in amusement. \"No, I'm no athlete. I got the Jeep to help me get the bicycle to the start of remote trails. It will remain in the garage if my destination is reachable by bike or the stuff I am picking up can fit in my panniers. I love cycling for the exercise it gives me and the peace and grace of the movement. My muscles are just the result of perseverance and hard work. I don't enjoy working out but I know it's good for me so...\" He shrugged.\n\nHe glanced at her and frowned slightly. \"I'm sorry to admit I let your resemblance to my ex set my impression of who you were. As I said she was... difficult... over the past year and I seemed to catch you when you were frowning... or yelling.\" Elyse put her face in her hands. \"It reinforced the impression. I can see you aren't like her at all. I just have to undo what she's done to me. I ask for your patience while I work on that.\" She nodded to him and they returned to eating.\n\nWhen they were done Frank collected the dishes and put them by the sink. He'd do them while she was using the Internet.\n\n\"Let's work on that VPN connection,\" he suggested.\n\nShe nodded and brought her laptop over and flipped it open and on. Once it reached the desktop she turned it to Frank and he connected her to his wireless network.\n\n\"Now whenever you come over with your laptop it will automatically connect,\" he smiled as he turned the laptop back to her. \"This icon loads the VPN software. I've used this one before. Just double click on it.\"\n\nShe did and the application opened. \"You see this setting here? Your techs have already configured the connection. All you need to do is click on this and then click on the connect option. Go ahead.\"\n\nShe followed his instructions and a prompt jumped up on the screen asking for her password. He looked away as she typed it in. A few second later the prompt disappeared.\n\n\"What happened? Where did it go?\" Elyse blurted.\n\n\"It's still running. See the little icon at the bottom right? If you see that it means you have a good connection. If you open up your applications that access your office servers you should now be able to get to them.\"\n\nShe opened her office chat client and immediately received a message from the on-duty IT staffer acknowledging her successful connection.\n\n\"AH! It's working!\" she squeaked with glee and clapped her hands together.\n\n\"There you go. Simple, right?\" he grinned at her enthusiasm.\n\n\"Sure when you explain it. I must have asked the tech who installed it on my laptop to explain how it worked a half dozen times and each time it just sounded more and more technical and complicated!\"\n\n\"Yeah, that's how techs speak. I picked up enough tech talk to learn how to pick out the important bits,\" he nodded thoughtfully.\n\nElyse sent a quick note to the tech indicating she would be connecting the following day. He acknowledged her response.\n\nShe looked at Frank once more.\n\n\"To disconnect the VPN just right click on the little icon down there and choose disconnect. Then do it again and choose exit.\"\n\nShe did it and the icon disappeared. She grinned and clapped once more. \"Oh my god Frank! I can't tell you how nice it is to get help with this stuff from someone who doesn't just drown me in tech jargon.\"\n\nHe just shrugged and grinned. \"You still have an Internet connection so you can do your research for Internet providers with a browser. You ok from here? I'm going to go do the dishes.\"\n\n\"Yes, thanks!\" She popped open her browser and began.\n\n\"Would you like some more wine?\"\n\nShe looked at him with a happy grin and nodded quickly so he topped up her glass.\n\nFrank moved to the kitchen sink and began to fill it. His knees were wobbly from all the smiles she was hitting him with. He sipped at his wine hoping it would relax him in her presence.\n\nAs he worked he could hear the sound of her talking on her cell as she called the places she found online. He wasn't listening to the words but just the tone and inflection in her voice. She had a very warm and friendly manner and he let that sink into his brain as he held an image of her beautiful smiling face in his mind. He hoped that would help break the link to his memories of Stephanie.\n\nThe dishes done he glanced over at Elyse and saw she was deep in conversation with someone so he went out to the garage and grabbed his toolbox. He carried it back inside and pulled a tape measure from the box. He took some measurements of the walls in the living room and entered them into his notes app on his cell. He planned on painting this room and he'd need to know how much paint he'd need. Also drop cloths to protect the beautiful hardwood floors.\n\nHe heard footsteps behind him and looked to see Elyse walking into the living room with a frustrated look on her face.\n\n\"What's wrong?\"\n\nShe sighed. \"None of the service providers I called can get an installer to my place before Wednesday. I already have an appointment with the original company for Wednesday so I may as well stick with them. They had the best price for what I need anyway.\"\n\n\"If you want you can work from here until you get your connection. I mean, it's probably not as comfortable as your place with all your fancy comfortable chairs and proper height desks and stuff,\" he said in a teasing tone and drew a smile from her.\n\n\"I'd hate to impose on you,\" she said wincing but he saw she was relieved by his offer.\n\n\"It's no bother at all. When does your work day begin and end?\"\n\n\"I could be over at 8:30AM and leave by 4:30PM if that's ok.\"\n\n\"I'll give you a key. I may be out riding at that time in the morning,\" he replied.\n\nShe blinked in surprise. \"You'll give me a key?\"\n\nSuddenly Frank worried he may be sending her the wrong message. His face flushed and he back pedaled. \"You know, so you can let yourself in tomorrow if I'm out riding. No other reasons. No expectations,\" he blurted then closed and rubbed his eyes as the words sounded even more damning.\n\nHe heard a quiet snort and opened his eyes. She was smiling happily at him so he hadn't offended her. That was a relief!\n\n\"You're a very sweet man, Frank. I will borrow a key. Thank you.\"\n\nUnreasonably warmed by her words, he nodded and walked to his bedroom to get the spare key. He handed it to her when he got back out to the living room.\n\n\"What are you measuring?\" she asked as she added the key to her keychain.\n\n\"I'm going to repaint the living room as the walls are looking a little dingy. Something bright but neutral. Eggshell?\" he said looking critically at the room.\n\nElyse looked shyly at Frank. \"May I offer a suggestion?\"\n\nHe looked pleadingly at her. \"Please! I have very little design sense and this is the first home I've had to do by myself.\" Frank suddenly realized the scope of that task and felt completely inadequate to meet the challenge. \"Any help you could give me would be welcome.\" He saw her eyes light up at his request.\n\n\"Ok... well, I think this room needs a little warmth. It's a gathering place for friends and family. It deserves welcoming colors and fabrics. What's your style?\" she asked.\n\nFrank blinked at her. \"Style?\"\n\n\"Traditional, Country, Rustic, Casual, Transitional, or Contemporary?\" she said tilting her head as she looked at him. She seemed to be trying to get a read from him. \"Wait! You bought a bed, right? I need to see it!\" With that she hustled down the hall towards his bedroom.\n\nFrank froze in place. Following her into his bedroom just seemed to be a little too intimate. Moments later she returned and nodded to him.\n\n\"What made you pick that bed?\" she asked.\n\n\"It's very well made. Quality work and... I liked how it looked,\" he admitted.\n\n\"Good! You have excellent taste. It's what I would call Transitional. Somewhere between Traditional and Contemporary. Simple and sophisticated.\"\n\n\"That first part sounds like me,\" he said with a self-deprecating grin.\n\nShe gave him a fake stern look and assessed the room once more.\n\n\"Linen white.\"\n\n\"What's that?\"\n\n\"That's the color I'd paint these walls. It's light and warm but has a creaminess to it. I'd take it right from the front door to just outside the kitchen. Down the hallway as well. Not inside the kitchen, dining room, or the bedrooms though,\" she said as her eyes were focused on the image in her mind.\n\nFrank got his tape measure out and measured the remaining area he'd need to paint. \"Well, I know what I'm doing tomorrow,\" he grinned at her when he was done.\n\n\"Do you have dinner plans tonight?\" she asked.\n\n\"Uh, no.\"\n\n\"To thank you I'd like to take you out to dinner. I saw a lovely place on my drive up the coast. I made a reservation for 7PM, a table inside by the window so we'll get to enjoy the sunset.\" Elyse was looking at him hopefully and he couldn't help but smile and nod.\n\n\"Great! I'll pick you up at 6:30PM,\" she grinned and he returned it.\n\nShe looked at his tool box then back to him with another hopeful look. \"Could I borrow some tools so I can assemble my bed frame?\"\n\n\"Sure, as long as I get them back,\" he teased.\n\nShe flashed him another bright smile and he felt its impact through his body. When she turned to pick out the tools she needed he leaned back against the wall to brace himself.\n\nElyse turned to show him the tools she had in her hands. Just a few screwdrivers and a couple of adjustable wrenches. He nodded. \"Oh! My laptop.\" She turned back to walk to the kitchen.\n\n\"There's a plastic bag on the counter you can use to carry the tools,\" he suggested.\n\nShe stopped and put the tools in the bag then grabbed her laptop.\n\nHe walked her to the front door. \"What's the dress code for dinner?\"\n\n\"How did Beverly put it? Ah yes, dressy casual,\" she smiled as she shook her head. She looked back at Frank. \"Thank you so much for your help with the VPN, for loaning me the tools, and for that delicious lunch!\" she said beaming her lovely smile at him.\n\n\"You're most welcome!\" he replied as his cheeks burned. His brain was spinning but he did his best to remain calm. She hesitated then she was out the door.\n\nHe sighed as he closed the door. Aside from the shakes he hadn't felt this good... in a very long time.\n\nAs he returned to taking measurements he looked forward to dinner.\n\nChapter 10\n\nShe made quick work of assembling her bed frame now that she had tools to do it. After she lifted her mattress up onto the frame she sighed with relief as she hoped this would allow her to wake peacefully. This morning had been a repeat of the previous one. She woke disoriented and gasping in fright. Not a happy way to start the day.\n\nShe put Frank's tools back into the plastic bag and sat on the edge of the bed smiling to herself. While she could drive over to the hardware store to get her own tools, not having them gave her an excuse to visit her new neighbor. She caught herself grinning and gave her head a firm shake. It was a little too soon after her divorce to be having romantic thoughts. It was certainly too early for Frank who was going through some rather severe post-divorce trauma.\n\nShe frowned as she remembered his almost panicked look when he saw her standing in his driveway this morning. When she walked over to apologize she saw him lifting his bike up on the hooks in the garage and found herself admiring his physique in the skin tight cycling clothes. When he exited the garage he locked up when he saw her. Her guilt for yelling at him the previous night had come pouring back.\n\nHe'd been very gracious to accept her apology which surprised her as she'd expected him to be far more gruff and uptight about it. Michael was always resentful after being scolded.\n\nShe hadn't prepared for what to do after she apologized so when he invited her in to see the house she was delighted. She hadn't expected the house to be mostly empty. In her mind she'd pictured a lot of big and heavy furniture.\n\nThinking about it she was most surprised by how he kept her off balance with each new insight into his true character. Sure he looked strong and masculine like Michael, a man's man, but in reality he was a quiet, thoughtful man, comfortable with who he was. There'd been so much bullshit machismo with her ex-husbands she'd just come to expect it. Frank was... refreshingly different.\n\nShe stopped to think about that. He certainly wasn't as tall as her ex-husbands. He was a little shorter than her but she could tell he wasn't the least bit uptight about that.\n\nHe was clearly older than Derrick and Michael. Older than she was though she wasn't exactly sure of his age and she'd feel odd asking. Was it his age that made him seem... mature? Derrick took offence to every perceived slight and Michael was a sullen pouter when he didn't get his way.\n\nFrank seemed stable as a rock compared to her two exes.\n\nThen she recalled his reaction to her asking him why he wouldn't look at her. When he'd explained she felt awful! To travel that far to free himself of reminders only to be confronted with a look-alike living right across the road! And he'd obviously suffered some kind of abuse as his behavior with her indicated. When she'd gone home she didn't know what to do. The thought of being a source of torment for him was almost too much. She knew she had to be prepared to stay away from him to let him heal.\n\nBut he'd come looking for her.\n\nHe was facing his demons, so to speak, and getting on with his life the best he could. She was very impressed with his inner strength. She hoped she was dealing with her own as well as he was.\n\nHe had excellent taste in wine and the lunch he'd made was very yummy. He was an excellent teacher, when it came to technology at least, and wasn't afraid to ask for help when he needed it. Best of all the help he'd asked for was to decorate that lovely home. She'd dreamed of what she would do with it when she bought it, cried when she discovered she wouldn't get to live out that dream, and now he was giving her the opportunity to do it after all.\n\nShe was so looking forward to dinner. She leapt to her feet to go look for a nice dress to wear. Not that it was a date!\n\nHours later she'd finally settled on her off the shoulder knitted, ribbed grey dress which hugged her curves and ended slightly above mid-thigh. To tone down the amount of skin and cleavage she was showing up top she threw on a burgundy lace shawl. To complete the outfit she slipped her feet into some burgundy high heel pumps. Since he didn't seem to be offended by her height she'd enjoy the benefits it gave her. She quickly touched up her hair and make-up and realized it was almost 6:30PM.\n\nShe rushed to the front door and collected her clutch purse with her wallet and car keys. She stepped outside, locked up, pulled her car out of the garage, locked that and pulled out of her driveway and into Frank's.\n\nShe was already finding her garage door to be a nuisance. Adding a motorized opener would be number one on her list of home improvements!\n\nBefore she could undo her seatbelt Frank was standing next to the passenger door. She popped the lock and he let himself in, falling the last few inches to the seat with a thump.\n\n\"Geez!\" he exclaimed. He looked at her in surprise. \"This car is really low to the ground!\"\n\n\"It's a sports car, silly! Of course it is!\" she grinned. \"Buckle up!\"\n\nHe did and they got underway. He sat with his hands folded in his lap and his eyes a little wider than normal as she worked the gears smoothly to navigate their way quickly through the light traffic. Soon they were zipping along on the coastal highway.\n\n\"The car handles really well and it has excellent pickup!\" he said. \"I think I left my stomach back there on that last curve.\"\n\n\"Are you dissing my driving?\" she teased.\n\nHe held up his hands in surrender. \"No, no! You're an excellent driver!\"\n\nShe nodded with a hint of a smile on her lips, mollified by his praise.\n\nThey reached the restaurant minutes before their reservation and slipped into a spot someone was just vacating.\n\nFrank heaved himself up to his feet and out of the car. Closing his door he quickly walked around the car to open her door for her.\n\nShe smiled up at him and took his offered hand. Long toned legs stepped out onto the parking lot and he helped her rise from the seat. He suddenly found himself looking up into her eyes as her heels placed them a good four inches above his own.\n\nShe smiled cautiously at him, waiting for his reaction. He stepped back to take in her ensemble and she saw he was more than a little awestruck. She felt butterflies in her stomach and chided herself for reacting like this for just a dinner between friends. Neighbors.\n\n\"You- you look... exceptionally lovely!\" he managed to get out at last. Her eyes flashed with happiness at his words and she dipped her head in thanks as she scoped out his outfit.\n\nHe was wearing a navy blue sports jacket over a white, long sleeve dress shirt, open at the collar, tight black jeans and black leather shoes. She was thrilled with how powerful his chest, shoulders, and arms looked in the jacket.\n\n\"And you look very handsome,\" she replied drawing a smile from him.\n\nHe turned and offered his elbow and she blinked at him.\n\nHis face fell and he looked at her in embarrassment. \"Sorry, old habits die hard.\"\n\n\"No, you just took me by surprise. It's a really nice habit.\" Michael and Derrick never showed any understanding of proper etiquette. Michael would typically rest his hand on her hip or more often, her ass. She slipped her hand around his arm and rested it on his forearm, enjoying the feel of the strength there.\n\nThey made their way inside and more than a few eyes turned in their direction as the host led them through the dining area to their reserved table by the window. Elyse could almost hear their thoughts. Who was this powerful looking man with the statuesque blond on his arm? She chuckled to herself but just shook her head at Frank's curious gaze.\n\nHe held her chair out for her and she enjoyed his gentlemanly attentions. He sat across from her and made a visible effort to pull his eyes away from her to look at their view.\n\n\"You weren't kidding about the view this restaurant would have. Sunset should look pretty amazing from here,\" he blurted as he kept his eyes on the view.\n\nSuddenly Elyse felt distressed. Maybe she was reminding him of his wife again. Maybe he was hurting because of her!\n\n\"Am I causing you anxiety? Am I making it worse, you know, looking like your ex?\" she said, worried.",
        "His eyes snapped back to her. \"What? Oh! No! No, that's not it at all! It's... it's just that I feel like an awkward eighteen year old again. Trying not to look like or act like an uncultured boob in front of a beautiful woman.\"\n\n\"What?\" she blinked.\n\n\"Like I said, your resemblance to Stephanie is superficial. Close enough it seems to trigger... a reaction but it's just the same hair color and body shape.\" He paused to take in her beauty and he shook his head. \"When I first met her... so many years ago, I was completely smitten. I thought she was the loveliest creature to ever walk amongst us mortals and being so young myself I was completely tongue tied around her. I almost drove her away with my foot in my mouth all the time. When I finally got that under control I pursued her unmercifully until she agreed to date me.\" She saw Frank swallowing and his eyes dropped for a second then he looked back at her once more.\n\n\"Stephanie isn't even in your league. You're...\" She saw he was struggling to put into words what his eyes were so obviously telling her. She felt a thrill zing through her at the effect she had on him.\n\nHe pushed back suddenly. \"Now it's my turn to make you feel uncomfortable. I'm sorry!\" She saw his face flush with embarrassment.\n\nElyse reached across the table and seized his hand. He froze.\n\nPitching her voice so it only reached his ears she leaned forward. \"You're not making me feel uncomfortable! I'm very flattered! It's been some time since I've heard anyone say such nice things about me. A woman likes to hear the words from time to time.\" She smiled at him until she drew his smile back.\n\nThe waiter appeared and they admitted they hadn't looked at the menus yet. He informed them of the specials and said he would bring them water as he left.\n\nElyse realized she was still holding Frank's hand and his thumb was unconsciously stroking the back of hers. That felt so good but she realized it wasn't something friends, neighbors, would or should do. Begrudgingly she pulled her hand back.\n\nThey turned their attention to the menus and she found a pasta dish that sounded yummy.\n\n\"You found something?\" he asked.\n\n\"The pasta primavera sounds good!\" she replied. He took another look and closed his menu.\n\n\"It does. Shall we order wine?\" he asked.\n\n\"What would you recommend?\" she asked raising an eyebrow.\n\n\"Have you tasted any Italian Soave wines?\"\n\n\"No, I don't believe I have,\" she replied.\n\nHe picked up the wine list and scanned through the white wines until he found one that sounded promising. \"Would you care to try one?\"\n\nShe nodded with a grin and he looked for the waiter.\n\nThe man returned and they placed their orders, Frank requesting a bottle of an Italian Soave he spotted on the list.\n\nWhen they were alone again she looked at Frank and he seemed to be more relaxed now. Something he'd said earlier reminded her of a question she'd had about his age. Maybe there was a way to get an answer. She'd have to be willing to talk about her own life though. Then she realized she could... with him.\n\n\"I have a question but I'm not sure if you are comfortable talking about your marriage. You seemed to be earlier.\"\n\n\"Yes, it's fine.\"\n\nShe relaxed a little. \"You mentioned you were eighteen when you met Stephanie. How long were you married?\"\n\n\"Twenty one years,\" he said quietly.\n\nShe thought about that. That was a significant amount of time to invest in a relationship. She saw the sadness in his eyes. \"Are you still in love with her?\"\n\n\"What? No... no. She was clinically efficient in excising any trace of love for her from my heart,\" he said with a frown.\n\n\"I'm sorry for mentioning it. You just seemed sad.\"\n\n\"Well... I'm sad about losing what we had but it seems that died some time ago and I was just too busy working to notice.\" Frank sighed.\n\n\"So... you're thirty-nine?\" she asked.\n\nHe smiled at her and shook his head. \"Forty. It took a year of wooing to get her to marry me.\"\n\n\"Ah,\" she said with an embarrassed grin.\n\n\"You could have just asked me how old I am,\" he said.\n\n\"I wasn't sure if that would offend you,\" she said and bit her lip. His eyes locked onto the gesture then he pulled them away. He cleared his throat.\n\n\"No, I don't get offended by such things. I'm forty. A divorc\u00e9. I have no kids. I have no family for that matter.\"\n\n\"Since we are being open and honest, divulging our secret truths, I'm 32 and a double divorc\u00e9. I have no kids from either marriage and my family disowned me when I married my first husband who was black much to their horror. My second husband was of Italian descent so they probably would have hated him too.\" She held his eyes with hers but all she saw in them was compassion. He wasn't shocked or disgusted by her past.\n\n\"Being disowned must have been rough,\" he said.\n\nShe nodded. \"It was certainly eye opening. I have a little sister I haven't spoken to since that day. She was always too much under my mother's influence so it isn't surprising. But it is sad.\"\n\nThe waiter returned with the wine and poured for them.\n\nOnce he'd left Frank lifted his glass and she did as well. \"To new friends?\" he asked.\n\n\"Definitely, to new good friends!\" she grinned and he nodded as his eyes fluttered a little. They took a sip and she caught his eyes once more. \"May I ask you another question?\"\n\nHe hesitated then nodded.\n\n\"Why do your eyes do that when I smile at you?\" she asked gently.\n\nHe looked down at the table and seemed to take a deep breath.\n\n\"I'm sorry. I shouldn't press-\" she quickly added.\n\n\"No, it's alright.\" He lifted his face to look at her with a sad smile. \"It's just a reaction driven by the stuff my ex did to me during each and every meeting we had and there were many.\" He took another breath.\n\n\"I've... gotten used to... some pretty vicious verbal abuse from a pretty blond. So when a beautiful blond treats me to a smile and kind words my brain doesn't really know how to process that and... it takes a little holiday.\"\n\nElyse lifted a hand to cover her mouth as she looked at him in dismay.\n\n\"No, please don't hide your mouth from me. Those smiles are Heaven on Earth for my soul. My brain can twitch all it likes as long as I can keep seeing them!\" he pleaded quietly.\n\nShe dropped her hand to the table and was unable to stop her lips from flashing another smile at him.\n\n\"Oh my god you're charming!\" she growled playfully at him as her face heated up to keep pace with his.\n\nDinner arrived and saved them both from further embarrassment. It was a good choice and they both enjoyed their meals very much. Halfway through Elyse looked out the window and realized it was dark.\n\n\"Oh no!\"\n\nFrank looked up in worry. \"What is it?\"\n\nShe gave him a smirk. \"We missed the sunset!\"\n\nHis head whipped around and he barked out a laugh when he saw how dark it was. He looked back at her and shrugged. \"I knew I'd miss it.\"\n\n\"You knew you'd miss viewing the sunset?\" she said raising her eyebrows in surprise.\n\n\"There are far more dazzling sights to behold just across the table,\" he said as he returned to his salad with a small smile in the corners of his mouth.\n\nElyse felt her whole body respond to that last compliment. \"Did I mention you're a charmer?\"\n\nHe nodded without looking up. She could see his cheeks were red. He was still struggling against what his ex had done but he wasn't giving up. She took another drink of her wine and he topped up her glass. She was really enjoying the wine!\n\nThey ate the rest of their meals in companionable silence, each enjoying just being together with the occasional admiring glance.\n\nAs they finished Elyse was craving something sweet. She picked up the tiny dessert menu and cast her eyes up and down the short list. The cheesecake immediately jumped out at her.\n\n\"Mmmm! Cheesecake. I know what I'm having for dessert!\" she purred.\n\nHe chuckled and just shook his head to indicate he would pass.\n\nThe waiter arrived to collect their plates and Elyse ordered the sweet treat.\n\nA moment later he returned with a generous slice of cheesecake on a plate with two forks.\n\n\"If you think I'm sharing this you have another thing coming!\" she teased and he just shook his head with a grin.\n\nShe managed to get halfway through when she realized there was no way she could finish.\n\n\"Ok, maybe you can have one bite,\" she said pitifully.\n\n\"Sure. Just one,\" he agreed as he reached for the fork. She scooped another forkful and lifted it up towards him.\n\nShe saw him lock up again, his eyes darting between the fork and her, then he moved towards the fork slowly until his lips closed over it. He pulled back as she remained frozen, eyes locked on his mouth. He sat back, slowly relishing the taste of the dessert in his mouth until it was gone.\n\n\"That was good cheesecake,\" he said.\n\n\"Yes... it was,\" she said after she pulled the fork from her mouth. She realized she was feeling very warm all over. She looked over at the bottle and realized it was empty. \"How much wine did I drink?\"\n\n\"I think you may have had three glasses,\" he replied.\n\n\"And you?\"\n\n\"Just the one.\"\n\n\"Hmmm... do you know how to drive a stick home? Ah! I mean a stick shift!\" she blurted when her mind immediately flashed to an alternate meaning of her question.\n\nHe must have heard it as well as his face was a little red. \"Yes, I can drive your car. Not as well as you obviously but tonight it might be a good idea.\"\n\nShe signaled the waiter and asked for the check. While she waited she drank her glass of water as a preventative measure to head off tomorrow's dehydration headache.\n\n\"Are you sure you don't want me to pitch in for dinner?\" Frank asked.\n\n\"No! It's my treat!\" she insisted.\n\n\"Thank you for a lovely dinner!\" he said and she grinned at him. Woo! She was feeling the wine!\n\nShe paid the bill and Frank stood up to pull her chair back. He took her hand and helped her to her feet. She felt the room begin to tilt so she clung to his arm.\n\n\"The wine?\"\n\n\"The wine.\"\n\nThey headed for the exit but she stopped when they got to the front door. She looked at him a little desperately. \"Three glasses of wine and one big glass of water means I won't make it home. I should use the ladies room before we go.\"\n\n\"Sure, I'll wait here,\" he said.\n\nElyse carefully made her way into the bathroom and found an empty stall. She lifted her dress and slipped her silky g string downwards. Why had she chosen her sexy underwear for a dinner with a friend? She struggled to get them off and accidentally dropped them. They landed in a puddle on the bathroom floor near the toilet bowl. It was probably just mop water but she couldn't put them back on now! She stepped clear and finally sat to do her business. Her relief was enormous.\n\nWhen she was done she stood and took another look at her panties sitting in the puddle. She pulled her dress back down and used some tissue to grab a dry section of the waistband and carried the underwear to the trash can. She washed her hands and sighed, looking at herself in the mirror. He was being such a gentleman and here she was walking around with no panties. A little tingle went through her and she clamped down on it. Not the time or place.\n\nElyse walked back out to the front door and Frank held it open for her. When they got outside she wobbled a little on the driveway so he put an arm around her to help steady her walking. God that felt so good!\n\nThey got to the car on the passenger side and he looked at her.\n\n\"Yes?\" she said looking deeply into his eyes.\n\n\"Keys?\"\n\nShe blushed crimson. \"Sorry. Keyless entry.\" She gripped the door handle and the doors unlocked. He held the door for her and she got in. He closed her door and got in the driver's side once more plopping down onto the seat. She snorted in amusement.\n\n\"Sorry. Not used to how low this car is yet,\" he said smiling self-consciously.\n\nElyse watched him make himself familiar with the layout of the controls then he got them underway. She was impressed with how smoothly he worked the gears. She must have made a sound as he glanced over at her.\n\n\"My Jeep's a standard too.\"\n\n\"Ah!\" she sighed then giggled. She wasn't feeling drunk so much as just really relaxed. Frank made her feel safe. He was a careful driver too. She leaned back in her seat.\n\nShe felt a warm hand on her shoulder gently shaking her and heard her name. She opened her eyes and saw they were in her driveway.\n\n\"We're home? Already?\"\n\n\"You nodded off,\" Frank smiled.\n\n\"Mmmm!\" she purred as she stretched.\n\n\"Looks like its sleepy time for someone,\" he teased. \"Give me the key to the garage and I'll get your car inside,\" he said.\n\nShe fished them out of her clutch and he got out to open the garage. She watched him and felt a tingle beginning in her intimate places. She squirmed and rubbed her thighs together, remembering she wasn't wearing panties. She felt very naughty and began to giggle.\n\nFrank got back in and looked at her. \"What's funny?\"\n\nShe just looked at him and bit her lip as she shook her head. He got a strange look on his face then moved the car forward into the garage. He got out again and crossed to open her door. She needed his help to get out as her muscles were still relaxed from the wine and the sleep. So he held her against his chest as he closed her door.\n\nShe breathed in his clean, warm masculine scent and her whole body began to tingle. She wrapped her arms around him and hugged him tight. She felt him freeze then he was hugging her too.\n\nThen she felt something pressing back against her in a very nice way and she gasped. He pulled back.\n\n\"I think you'd better go inside and get some rest. You have work tomorrow,\" he said, his voice rumbling with suppressed need.\n\nShe gazed into his eyes and saw he was looking a little desperate. She nodded and they walked outside so he could close and lock the garage. He handed her the keys.\n\n\"Thank you for a truly lovely night! I'll see you tomorrow morning? Just let yourself in with your key. I'll likely be out riding and won't get back until sometime between 9 and 10AM.\"\n\nShe bit her lip, worried she'd hurt him. That must have shown in her eyes.\n\n\"It really was a perfect night. I think we'd both better head off to our own beds. As attracted to you as I obviously am we both know it's too soon,\" his voice trembled.\n\nElyse knew he was right. \"Good night Frank! I had a really nice time too! I'll see you in the morning.\"\n\nHe relaxed a little and smiled at her. He nodded and headed home. She unlocked her door and stepped inside. She turned back and saw he was waiting to make sure she got inside. He waved and went inside his own home.\n\nShe closed and locked her door and leaned back against it. Her whole body was tingling and aching for release. She walked down the hall to her bedroom and went into the ensuite to draw a bath. She dropped in some scented oils and lit a few candles around the room.\n\nAs the tub filled she went back out to the bedroom and undressed. Her outfit had been a huge success. Frank couldn't keep his eyes off of her. She sat on the bed and put her face in her hands. Was she really pursuing this man after just meeting him two days ago? Her body throbbed YES and she shook her head.\n\nIt was crazy! He wasn't even her type! Well, if her type was based on who she married at least. He wasn't taller than she was. He was eight years older than she was. He even said he wasn't an athlete though his body felt hard in all the right places.\n\nHer tingling spiked so she got up and entered the bathroom once more, turning off the lights on the way in. She tied her hair up into a bun to keep it dry then stepped into her tub and sighed as the hot water soothed her muscles. She sank into it until the water reached her chin.\n\nShe ran her fingers over her skin and imagined it was Frank touching her. A deep throb shook her body and she gasped. What was it about him that got her this worked up? He wasn't aggressive like Michael or absurdly self-confident like Derrick had been. His personality was almost a polar opposite to theirs yet she wanted him!\n\nHer fingers had reached the heat between her legs and she ran two fingers down the sides of her lower lips while her middle finger stroked directly across the sensitive flesh.\n\n\"Ohhhh fuck!\" she moaned. She was so sensitive!\n\nUp and down she stroked, slowly and firmly and her mouth dropped open as she gasped at how incredible it felt. Fuck! She was close already! She slipped her finger inside as her palm pressed down on her clit.\n\n\"Ah! Oh fuck! Ah! AH! AHHH! YES!\"\n\nElyse rubbed in tiny rapid circles and the pleasure washed over her, shaking her muscles and sending sparks dancing along her nerves. It wasn't a huge release but it had taken her by surprise with its intensity and the rapid build-up. Her mind floated in the afterglow as the heat of the bath relaxed her spent body. She missed sex.\n\nShe was really looking forward to seeing Frank again!\n\nChapter 11\n\nThe bicycle moved under him in perfect synchronicity, responding to his aggressive pedaling with a surge of speed as he danced on the pedals to accelerate himself up the hill at a rapid clip. He was breathing hard and his heart was pounding but he felt completely alive! In fact he felt better than he had in over a year!\n\nDinner the night before had been incredible! Or rather the company had made it that way. Elyse was... words failed him again. She was beautiful inside and out and his mind was reeling at the thought of being able to spend more time with her.\n\nBeing distracted while he was cycling wasn't such a good idea though so he did his best to keep his mind on the road and the occasional car he encountered. He didn't want to jeopardize his chances of getting back to see her.\n\nHe had his panniers with him again as he intended to pick up the ingredients for making chicken and chorizo paella. If she was interested in sharing dinner with him that is.\n\nHe rode a big loop around the town and ended up back at the grocery store once more. He was locking up his bike when he felt someone watching him. He turned and caught Beverly staring at his spandex covered ass.\n\n\"Good morning Beverly! Fancy bumping into you here again two days in a row!\" he said. He tried to ignore her blatant stare.\n\nShe jumped a little and smiled shakily at him. \"Good morning Frank! Yes, uh, I needed some ingredients for baking cookies for the church bake sale. You?\"\n\n\"I'm just getting some stuff to make dinner,\" he admitted.\n\n\"The offer to come over to our place is still open you know,\" she reminded him.\n\n\"I know. Why don't we schedule that for Thursday or Friday? Gives me some time to settle in. I'll ask Elyse when she's available and I'll let you know,\" he said with a smile.\n\n\"So you two have spoken since the... since the dinner party?\" Beverly asked curiously, her eyes lighting up.\n\n\"Yes. She dropped by yesterday to apologize and I let her use my Internet connection to look up Internet providers. She's going to stick with the one she has so I'm letting her work from my place until her connection is installed on Wednesday.\"\n\n\"That's... great! You two are hitting it off,\" the woman smiled but Frank got the impression that something was off. He really didn't want to dig too deep as he wanted to get on with his shopping so he could get home.\n\n\"Yeah. Well, I'd better get started. Have a good day!\" He'd noticed she was carrying bags so she was done her shopping. That eliminated one reason for her to follow him in.\n\n\"Ok, you have a good day as well. Looking forward to hearing from you!\" she blurted so he smiled and nodded as he entered the store.\n\nHe made his way quickly through the store and picked up the items he needed and paid for them. Into the panniers they went and he loaded them back onto his bike.\n\nThe ride back was quick and he put his bike back in the garage and locked it up. As he came around to the front door with his loaded panniers he saw Elyse standing in the open doorway and his breath caught in his chest. She was wearing a pale yellow button down blouse which was just a little tight across her generous breasts and cute green capris which just made her long legs seem even longer. She'd left a few buttons open to relieve the strain on her top and his eyes were drawn to her soft- whoa!",
        "He blinked and started breathing and moving forward again. He hadn't realized he'd come to a standstill as he gazed at her. Her eyes were twinkling with joy as she smiled at his appreciation.\n\n\"Good morning Frank!\"\n\n\"Good morning Elyse! Sleep well?\"\n\n\"So much better now that the mattress is off the floor! Thank you!\" she responded and stepped back to let him enter.\n\nHe kicked off his cycling shoes and made his way back to the kitchen, aware that she was taking a good look at his ass in the tight pants. He began to swell in the front so he moved up to the counter to hide his now obvious reaction to her. He spotted the bag of tools he'd loaned her on the counter as well.\n\n\"How are you finding working remotely?\" he asked.\n\n\"It's a little too quiet. I'm used to a group of ladies sitting around me gossiping all day. I tuned them out mostly but I guess I miss the sound of other people nearby. I hadn't thought of that.\"\n\nFrank was putting away the groceries and nodded as he recalled his own work experiences. \"I used to travel a lot for my job and spent way too many hours in hotels in cities all over the world connected to the office with my laptop. I did all of that alone. It is lonely.\"\n\nElyse went still and her eyes locked on his. \"So you were on the road a lot? Lonely? While you were away from home you never sought... companionship?\" she asked carefully. There was a tightness in her voice.\n\nHe looked deeply into her eyes and saw pain there. Ah.\n\n\"No. I couldn't and wouldn't. That's not who I am,\" Frank said quietly. \"Your exes?\"\n\nElyse nodded and dropped her eyes.\n\n\"Fools,\" he growled and quickly left the kitchen to put the panniers in the closet by the front door. He was trembling in anger at the thought of these two men hurting Elyse. It was nuts as he didn't know them at all and barely knew Elyse. He had to get control of himself. He took some deep breaths and ran his fingers through his hair.\n\n\"Are you ok?\"\n\nHe turned to see her concerned eyes gazing into his. His heart leapt into his throat. He cleared it.\n\n\"Yes, sorry. It just threw me a little to know they hurt you like that. I guess I'm just a little sensitive to the issue,\" he shrugged not looking at her.\n\n\"Did Stephanie-\"\n\n\"If you don't mind, I'm going to go take my shower now,\" he said with a weak smile and eased past her to make his way to his bedroom. He closed the door and stripped his sweaty bike clothes off. He stepped into the shower and stood under the hot water, feeling it loosen the tight muscles. He knew he was still running from the truth of what Stephanie had done. He knew he was partially responsible. He just truly hadn't faced it head on. She had beaten him verbally with it again and again but he was trying desperately to keep it from touching him. From touching the last and best memories of their marriage. Why he was fighting so hard to keep that he didn't know.\n\nHe washed his hair and body on autopilot as his mind was miles away. Finally, he stepped out and dried himself off.\n\nHe pulled on some underwear, socks, khakis and a comfortable short sleeve button down shirt. He picked up his laptop and left the bedroom, walking back to the kitchen to see Elyse typing away on her own laptop. She stopped when he arrived and faced him.\n\n\"I'm so sorry for asking such personal questions,\" she said contritely.\n\n\"No, it's fine. My apologies for being overly sensitive. I'll have to ask for your patience,\" he said quietly.\n\nShe nodded and gave him a small smile.\n\n\"Would you mind if I shared the table to do a little work of my own?\" he asked.\n\n\"Please! I'd welcome the company,\" she said with a smile.\n\nFrank got himself set up and checked up on some banking details his lawyer had contacted him about. He confirmed the latest deposits were going into his accounts and worked on a note back to the lawyer.\n\nOccasionally he would catch Elyse smiling at him but she'd quickly look away when he'd look over at her.\n\nHis curiosity buzzing he had to ask. \"Ok, what is it?\"\n\n\"Your laptop suits you,\" she said with a grin and he looked at the device in question. He didn't get what she was trying to point out.\n\nDue to the amount of traveling he'd done to some pretty rough places, he'd purchased a machine with an armored case. Military spec protection for the delicate electronics inside. Over those years the machine had taken a beating but continued to work dependably. He'd upgraded the guts several times but the outer shell showed its years of service in places. When he left his company the machine came with him.\n\nHe shook his head as he looked at her with a puzzled expression.\n\n\"Its wide screen is like your shoulders, the black rubber is dark like your hair, and the screen has two silver patches at the tips like your temples,\" she grinned.\n\nHe pulled the screen towards himself and sure enough there were two silver metal caps protecting the top corners of the screen under the rubber shell. He smiled at Elyse and shook his head as she grinned back at him. He finished off his message and shut down the laptop.\n\nLooking at the clock he saw it was approaching the lunch hour.\n\n\"Would you like some lunch? I was going to make a grilled cheese sandwich,\" he asked.\n\nHer smile turned into a grin. \"I haven't had a grilled cheese sandwich since I was a little kid! I'd love one!\"\n\nHe smiled back and nodded. He'd picked up sour dough bread and several bricks of good cheese at the grocers. He pulled a bottle of olive oil from the cupboard and a brick of unsalted butter from the fridge. Elyse got up from the card table and walked over to watch what he was doing.\n\nHe cut four generous slices of the sour dough from the loaf. He took a grater from a drawer and made three piles of grated cheese on a cutting board; Parmesan, Old Cheddar (orange) and Swiss Gruyere. Then he got a large frying pan from under the counter. The pan went on the stove on high heat. He buttered one side of each slice of bread while he waited for the pan to heat. He added a little olive oil to the pan and turned the heat down to medium after swirling the oil around. He added two slices of bread and sprinkled on the cheeses in thick layers, topping it with the other slices of bread, butter side up.\n\nThe smell of the butter melting and the cheese oozing out filled the room. He flipped the sandwiches over after four minutes to let the other side become golden and crispy as well. After another four minutes he scooped the sandwiches out of the pan onto the cutting board. He moved the pan to a back burner and shut off the stove. Frank then sliced the sandwiches diagonally to make two triangles and lifted them onto the plates.\n\n\"Would you like a glass of milk with your sandwich?\" he asked and she clapped with joy.\n\nHe poured two glasses and they moved to the card table.\n\n\"Oh my god this smells delicious! I was expecting sandwich bread, margarine and processed cheese slices!\" she gasped.\n\n\"That can taste good too but this...\" he took a bite and sighed with happiness, \"This is divine.\"\n\nElyse took her first bite and the cheese melted across her taste buds. When she finally allowed the food to be swallowed she looked at Frank with bliss. \"This is amazing!\"\n\n\"Comfort food,\" he agreed with a content smile.\n\nShe nodded as she had a mouthful of the wonderful sandwich. They didn't speak again until they'd both finished their lunch and washed it down with the cold, fresh milk.\n\n\"Frank, you're spoiling me.\"\n\n\"What?\"\n\n\"First the delicious chicken caesar salad now this! I would have just popped a slice of bread in a toaster and slathered peanut butter on it.\"\n\n\"That sounds tasty too,\" he replied.\n\n\"Please! It's not in the same league as the meals you've made! You're a genius in the kitchen!\" she said as she rubbed her happy tummy.\n\nHe smiled bashfully. \"Thank you but it's really been pretty simple stuff.\" He paused and looked at her. \"I have to go out this afternoon to pick up all the paint and supplies. I was thinking if you don't have plans for dinner I could make us a chicken and chorizo paella. If you don't have dinner plans already... that is,\" he finished, stumbling over his tongue.\n\n\"Paella? I don't think I've ever had that. I'd love to try it though. How about you bring it over to my place and we'll have dinner there,\" she suggested.\n\nHe allowed himself to relax a little. \"That would be perfect! Are you ok with dinner at 7:30PM? That would give me some time to get some painting done too. Eating at your place also means no smell of paint.\"\n\n\"Sounds like a plan!\" she grinned.\n\n\"Great!\" He stood up and collected her plate and glass. He proceeded to clean up the kitchen while she went back to work.\n\nWhen he was done he went out to his Jeep and drove over to the local hardware store. He picked up the supplies and waited for them to mix the paint for him, linen white. He also picked up white ceiling paint and white paint for the baseboards and the crown mouldings.\n\nWhen he got back he immediately began masking all of the baseboards and crown moulding so he could paint the ceilings and the walls in the areas he intended to do. Then he taped down the drop cloth in those areas as well.\n\nOccasionally Elyse would wander out of the kitchen to watch him work. When he'd catch her she'd grin and disappear back into the kitchen to do her own work.\n\nWhen he was done preparing the area he wandered back into the kitchen to get a glass of water and she looked up from her laptop. \"Sorry for being such a distraction from your work,\" he said.\n\n\"It's not your fault. I'd much rather be helping you than doing this,\" she sighed.\n\n\"What are you doing?\" he asked.\n\n\"I'm an editor. I'm editing a book for one of my company's authors. Unfortunately I find him incredibly dull. He has a following so he continues to get published. I'm the third editor to be assigned his work. Apparently you can only work with him for so long before a homicidal urge to throw him onto a bonfire made from his own books becomes overwhelming.\"\n\n\"Huh.\"\n\n\"What's that mean?\"\n\n\"You're an editor. That's great! I may need to pick your brain in a little while,\" he answered.\n\n\"Oh?\"\n\n\"One of my goals now that I'm retired is to finally sit down and write the novel I've been carrying around in my head for the last few decades. Maybe once I've written a few chapters I could ask you to take a look at them and tell me if I'm just wasting my time.\" He saw she was looking a little worried. \"You won't hurt my feelings if you tell me it stinks. I've never written a book before and I have no idea if I have the talent to do so. I'm not hinging any future life goals on my ability to get the book published. It's just something I thought I'd try.\"\n\n\"What kind of book is it?\" she asked.\n\n\"What would you call a story about a detective solving a case?\" he asked.\n\n\"Detective Fiction,\" she replied.\n\n\"Oh. Ok, it's one of those,\" he smiled sheepishly.\n\n\"Sure, I could take a look. Several authors I've worked with specialize in that genre so I have a pretty good idea of what sells and what doesn't,\" she agreed.\n\n\"Thank you in advance then. Listen, I'm going to start painting now. I'll do the ceilings first and I'll try to be careful and not drip any paint but be careful when you walk through,\" he said and she nodded.\n\nHe nodded in return and headed down to his bedroom. He needed to change out of his clothes and put on the painter's coverall he got at the hardware store. He stripped down to just his underwear as the coverall didn't breathe and would be hot. Once he got it on he realized it was a flimsy thing but at least it would keep the paint off of him. It was a little tight around his chest and arms.\n\nHe went back out to the front hall and began there. He had a step ladder to help him reach the ceiling with a paint brush to get the edges all the way around. He wouldn't have to get so close with the roller now. The ceiling paint was thick and didn't drip... much. He made quick work of the foyer ceiling with the roller.\n\nHe moved into the living room and once more made his way around the circumference of the room with a paint brush. Next came the roller work and he was making excellent progress when he suddenly spotted Elyse standing in the kitchen entrance watching him with a distracted but sexy smile on her face. He stopped and looked at her. She jumped and turned to go back into the kitchen but stumbled and bonked her forehead against the doorjamb.\n\n\"Owww!\" she winced with her eyes closed, rubbing the sore spot.\n\n\"You ok?\"\n\n\"Yeah, more embarrassed than hurt,\" she moaned.\n\n\"See what being distracted gets you?\" he grinned.\n\nShe pouted and disappeared back into the kitchen.\n\nHe focused on finishing the ceiling and got back into his groove.\n\nThe painter's coverall was so bloody hot he was sweating to death in it. Finally he couldn't take it any longer so he undid the buttons to the waist and pulled his arms out of the sleeves. He pushed it off his shoulders and used the sleeves to tie it around his waist. Now his sweaty torso was bare but at least the coverall wouldn't fall down.\n\nFeeling better he made his way back and forth across the ceiling slowly making his way closer to the kitchen. He began to hear the oddest sound as he pushed the roller back and forth in slow sweeps. He thought maybe the roller was beginning to jam as the sound seemed to get louder when he was stretched out or pulling back. He watched the roller carefully but it didn't seem to be binding at all.\n\nThen he stopped moving and the sound kept going. He turned his head because the sound was coming from the doorw-\n\nElyse was there, watching him with wide eyes. She was the source of the noises!\n\n\"What are you doing?\" he asked quietly.\n\nHer face flushed as she seemed to realize she was the one making the moaning noises. She grimaced and looked back at him in embarrassment. \"Sorry about that!\"\n\n\"No really, what were you doing?\"\n\n\"I- I think I was moaning,\"\n\n\"Yes, it sounded like a moan. The question is, why were you moaning while I was painting?\" he pressed.\n\nElyse ducked back into the kitchen. When she returned she had her laptop in her arms, clutched to her chest. \"My workday is over so I'm just going to head home. I'll expect you over for dinner a little after 7:30PM?\"\n\nHe nodded in confusion.\n\n\"Great! See you then! Looking forward to it!\" she said quickly, pausing to pass her eyes over his glistening chest muscles once more before she darted across the room and out the front door.\n\nFrank stared after her in puzzlement. What the hell happened?\n\nChapter 12\n\nLeaning back against the inside of her front door she thumped her forehead with her fist in frustration.\n\nShe'd been moaning! Out loud! God, how embarrassing!\n\nIt was bad enough that she kept finding herself standing in the kitchen doorway watching him work. Then he caught her and she banged her forehead on the doorway. Worse yet, when he was working topless she was unconsciously moaning as she watched him bunch and flex his sweaty muscles. She couldn't help it! It was so fucking sexy!\n\nShe closed her eyes and rested her head back against the door. She had to get moving or she'd dwell on this and end up curled into a little ball on the floor.\n\nIt was only 4:20PM and she had until 7:30PM. She should run some errands. She should pick up some dessert for after the paella. Maybe ice cream. Everyone likes ice cream, right?\n\nAnd wine! While she'd been distracted today she looked up a suitable wine companion for Frank's paella and read about a nice fruity ros\u00e9 from France. She wanted to find it in town.\n\nShe also wanted a garage door opener. Maybe she could find someone to install one for her.\n\nHer mind suddenly filled with an image of Frank wearing only a small pair of tight shorts up on a ladder installing the opener. His hard muscles were glistening with sweat and his eyes burned with his desire for her.\n\nSWAT!\n\nShe slapped her forehead to evict these devilish thoughts.\n\n\"Ooo!\" she moaned as her stinging face had taken too much self-abuse today.\n\nShe pushed off the door and moved to put her laptop away. She grabbed her hoodie and headed back out. She had errands to run.\n\nShe spent a few hours searching for the items in town and was back home by 6PM to get ready. The wine went in the fridge to chill, the ice cream went into the freezer to harden and she rushed down the hall to get freshened up herself.\n\nElyse showered, washed her hair, and shaved her legs. Then she shaved her intimate areas as well because... you never know.\n\nNext came the lotion to soften her skin. She used an unscented cream as perfumes gave her headaches. She was delighted that Frank wasn't a cologne user and seemed to use unscented personal hygiene products as well.\n\nHer hair was straight so she just used a brush and her hair dryer to dry and give it some body. She didn't like adding gels or sticky sprays on her hair as she preferred it to be silky smooth.\n\nA careful application of some eyeliner and eye shadow finished off with a lip gloss to moisturize and accentuate them. She got the impression from Frank that he appreciated a more natural look. She glanced at the time and saw she had to hurry. Lingerie and another off the shoulder knit dress, red this time and without the wrap. Red high heel pumps finished the outfit.\n\nThe doorbell rang and she jumped. With a final glance in her mirror she rushed down the hall to the front door and opened it to see Frank standing there with oven mitts on, holding a large cast iron frying pan with a lid on it. She watched his eyes widen and his lips curve into a smile as he gazed at her in appreciation. A tingle shot from her head to her toes.\n\n\"Frank! Please come in.\" She stepped back as he manoeuvred the pan in the door. He slipped off his loafers by the door and followed her into her kitchen to set the pan down on the stovetop.\n\n\"Do you want the element on?\" she asked.\n\n\"No, it's done. Ready to serve,\" he replied. He stopped to admire her outfit. \"You look breathtaking!\"\n\nShe was busy drinking in his masculinity with her eyes. He had on a black dress shirt, open at the collar under a grey, herringbone tweed jacket and dark slacks. His hair was still a little wet from the shower but that just accentuated the silver patches at his temples. She felt an almost tangible pull towards him.\n\n\"Right, so... do you have plates and a serving spoon?\" he asked as she stood there silently admiring him.\n\n\"Sorry, I was just- you look... dreamy,\" she sighed and he chuckled.\n\n\"I don't think I've ever been called that before. Thank you!\" he said more than a little self-consciously.\n\nShe finally got moving and put two plates on the counter and handed him a serving spoon. While he scooped out their portions she quickly set the table. Tablecloth, napkins, cutlery, wine glasses (empty) and water glasses (full). She glanced back at him and decided to add some candles. Once they were lit she moved back as he set the plates down. She collected the wine from the fridge and the wine cooler from the cabinet above the fridge.\n\n\"I picked up a bottle of wine. I read it goes well with paella. I hope you like it!\" she said.\n\n\"I hope you like the paella!\" he returned with a hopeful smile.\n\nHe held her chair again and she felt a secret thrill run through her. He sat across from her as she opened the wine and poured some into their glasses.\n\n\"Oh my god Frank, this smells and looks delicious!\" she gushed.\n\n\"It's one of my favourite recipes. I don't make it very often... actually I haven't made it in... some time, but I thought I'd like to share some with you.\"\n\nShe lifted her glass and chuckled. \"We seem to be toasting quite frequently.\"\n\nFrank looked at her in mock dismay. \"We forgot to make a toast with our glasses of milk at lunch!\"\n\nShe giggled at his silly look and raised her wine glass. \"To amazing food with amazing people!\""
    ],
    "authorname": "BurntRedstone",
    "tags": [
        "romance",
        "oral",
        "tit fuck",
        "mature",
        "romantic"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/frank-and-elyse"
}