{
    "title": "The Double Date That Didn't End Ch. 05",
    "pages": [
        "CHAPTER 5 - The \"What If\" Fantasy \n\n******** \nRIA \n******** \n\n\"What do you think they're talking about in there?\" I asked. \n\nShane didn't even hear me. He was sitting on the bed, staring off into space. Still naked from his recent shower with Tracy. I paced around the bedroom like an anxious kitten, unconsciously nibbling away at my manicure. \n\nFive minutes earlier, we'd all been groaning like wild animals, licking and sucking and kissing and coming one after the other in a haze of pleasure. We'd gone right up to the edge; done everything, except the ONE thing. The one thing that there'd be no way for us to un-do. \n\nThe one thing that, deep down, we all knew we wanted. \n\nFive hours from now-if all went to plan-Shane and I would finally be living out our longtime fantasies by having sex with our incredible best friends. But, in the meantime, I was just about ready to pull my hair out from all the anxiety. And I really like my hair. \n\nAfter all the excitement in the bathroom-Connor ejaculating all over my naked ass and Shane making a mess on Tracy's boobs-we'd retired to our separate rooms to dry and dress for dinner. \n\nShane finally noticed my frantic pacing. \n\n\"Are you okay?\" he asked. \"With everything that's happening, I mean.\" \n\n\"Why wouldn't I be?\" My voice sounded distant. \"Are you?\" \n\n\"Yeah,\" he answered, but there was hesitation in it. \n\nI blushed. \"I just... I just wish I knew what everyone was thinking, you know? I REALLY want this to happen, but I'm kind of-sort of-just a little bit totally scared shitless that somebody or everybody is gonna get their hearts broken tonight. I mean, fuck! Seeing you in the shower with my best friend...\" \n\n\"Well, what about you?\" Shane frowned, his voice rising. \"Connor was rubbing his cock all over you and you were getting off on it!\" \n\n\"So were you! You and Tracy were standing there watching us, touching and kissing and-and-\" \n\nShane gritted his teeth. I felt an odd tension in my stomach as he looked at me with those way-too-intense eyes of his. \n\n\"Are you mad at me?\" I asked. \n\n\"No! Sweetie, no, of course not. It's nothing like that. I'm not mad at anyone-what happened just now was like a million fantasies coming true all at once. I wanted it just as badly as you did.\" \n\nI let out a sigh of relief. \n\nShane continued: \"I'm just... seeing red right now, I don't know how else to say it. I'm fine with the idea of you fucking Connor-really I am-I just didn't ever think that I would get so turned on from WATCHING it.\" \n\nHe groaned in frustration, and I couldn't help but notice the way his penis was already starting to recover, just minutes after Tracy's soapy tit-fuck had blown his mind. This situation was nothing if not confusing. \n\n\"I know what you mean,\" I said quietly. \n\nShane shook his head, laughing at himself, \"It's crazy-what kind of guy gets aroused by watching his wife with another man?\" \n\n\"Honey, we ALL got aroused by what we were seeing. I can't even tell you how hot it was watching you come all over Tracy like that.\" \n\n\"I know! And the look on your face when Connor was...\" he trailed off. \"I guess just wasn't expecting it to be quite so intense. In all honesty it did get me kind of angry seeing Connor mauling you like that.\" \n\n\"Oh.\" \n\n\"But in like a good way. 'Good angry,' if that makes any sense.\" \n\nShane sighed in frustration. Instead of saying anything, I knelt down between his legs, gently wrapped my fingers around his thickening shaft, and planted a long, loving kiss on the crown. \n\n\"Are you sure you still want to go through with this?\" I asked. \"All the way?\" \n\n\"Absolutely,\" he sighed. \"Tonight it finally happens. No more role playing. No more wondering 'what if.' Tonight I want you to fuck my best friend, just like you've always dreamed.\" \n\nThen he rolled back his head and luxuriated in the feeling of my tongue stroking his cock back to life. \n\nAfter a few minutes, I reluctantly took my mouth off of him and whispered, \"I better stop. Tracy would never forgive me if I stole one of the orgasms you've been saving up for her all day.\" \n\n\"You're such a considerate friend,\" Shane laughed. \n\n\"I want you and her to enjoy yourselves to the fullest,\" I whispered. \"Go wild.\" \n\nSuddenly, we heard Connor and Tracy's footsteps approaching from the hallway. We quickly hopped into some casual clothes and opened the door to greet them. \n\n\"Hi,\" Tracy waved, nervous. She was dressed in a fuzzy white Christmas sweater, her hair up in a playful ponytail. Beside her, Connor had on his old faded bomber jacket and blue jeans. \n\nSeeing the two of them standing outside our bedroom, I was struck with a sudden case of d\u00e9j\u00e0 vu, but I couldn't quite figure out why... \n\nThen Shane solved it for me: \n\n\"Those are the same clothes you guys wore on our very first double date, three years ago.\" \n\nTracy blushed, \"Remember how we were talking about 'what if,' earlier? Well, when me and Connor were getting dressed just now, we realized that, totally randomly, we'd both brought the clothes from our first date with you guys-funny coincidence, huh?\" \n\nConnor locked eyes with me: \"And we got to thinking, what if it was like a sign or something? A sign that maybe tonight we could all finally give that big 'what if' the chance it deserves?\" \n\nA brief but heavy silence filled the space between us, then Connor asked, \"Ria, would you go out with me?\" \n\nI blinked, \"What?\" \n\n\"On a date,\" he explains. \"Just the two of us. Just for tonight. Like we were supposed to do, three years ago.\" \n\nI gulped, feeling a sudden weight on my chest as I answered, \"Yes, of course.\" \n\nConnor looked past me, to Shane, and asked, \"That okay with you, man?\" \n\nShane nodded, visibly holding his breath. \n\nTracy slipped past me into the room and sidled up next to my husband, whispering: \n\n\"If you're not doing anything tonight, maybe we could hang out?\" \n\nShane smirked at her. \"Would this 'hanging out' involve, like, a date?\" he asked. \n\n\"If you want it to.\" \n\n\"Are your friends Ria and Connor joining us?\" he asked playfully. \n\n\"Not tonight,\" she whispered. \n\nThe two of them were momentarily lost in each other's eyes, and I felt a brief swell of jealousy rise up when Shane took her hand in his. \n\n******** \n\nSHANE \n\n******** \n\nTracy looked absolutely adorable as we strolled through town together. Bright, happy, glowing with excitement-clinging to my arm like she needed it to stay upright. \n\nDinner had been a bust. The only place in town we could find that was still open on Christmas Eve was an extremely shady-looking Chinese restaurant that practically screamed \"food-poisoning.\" We didn't want to risk it. \n\nInstead, we hit up a gas station for some Funyons, a bag of beef jerky, and two cups of \"hot cocoa\" that honestly tasted more like chalk than chocolate. \n\nBut, while our Christmas Eve feast wasn't exactly what we'd been hoping for, Tracy and I still had a pretty awesome time just enjoying one another's company. We'd been close friends for all these years, yet we rarely spent time outside of work together, just the two of us. \n\nWe turned down one of the bigger residential streets, grinning at the preposterous amount of effort each home had dedicated to their holiday decorations: \n\nGigantic, hand-painted reindeer polluted the rooftops. Byzantine tracks for miniature locomotives wound around enormous winter landscapes in someone's yard. Man-sized robot nutcrackers marched in circles around a small gazebo. And the LIGHTS! Let's just say their electric bills for the month of December must have reached into the quadruple digits. \n\n\"How much time do you think it takes to set all this stuff up every year?\" Tracy laughed. \n\n\"Weeks, at least. Neighborhoods like this, I bet you it's like an arms race between all the men. Less about the embracing the holiday spirit and more about having the baddest motherfucking yard in town.\" \n\n\"Yeah, Freud would have a field day with these people.\" Tracy opened her eyes wide, pretending to be aroused by what she saw: \"Oh, Jimmy! Your Christmas decorations are so... BIG!\" \n\nWhen she turned to face me, Tracy's bright blonde hair caught the colors of the blinking lights: green, red, gold... \n\n\"You are so beautiful,\" I sighed. \n\nTracy placed her cute wool mittens on either side of my head-holding me steady as she brought her lips to mine. \n\n\"But, there's no mistletoe,\" I joked. \n\n\"We don't need it.\" \n\nOur kiss was a slow burn, going from warm and pleasant to hot and heavy-and when we finally broke apart there was a whimper in Tracy's voice. \n\n\"Do you think we'd still be together?\" she asked. \n\n\"You and Connor?\" \n\n\"No, I mean me and you. If things had plays out differently on that very first double date, way back when. Earlier today, you said you sometimes imagine a whole complicated fantasy version of your life, where you wound up with me instead of Ria. That whole 'What If' fantasy.\" \n\n\"Yeah,\" I blushed. \n\n\"What's it like?\" \n\n\"My fantasy?\" \n\n\"Yeah, the 'What If' fantasy. I want to know what you think a relationship with me would have been like. Are we madly in love? Are we married? Do we fuck like five times a day?\" \n\nI chuckled, \"Oh, at LEAST that much.\" \n\nShe took my hand, a playful smile on her face. \"I'm serious though. I want to know.\" \n\nI took a deep breath, suddenly self-conscious about the whole situation. Not two hours earlier, I'd been grinding my cock against Tracy's sexy naked body in the shower-and now here I was, feeling inexplicably shy. \n\n\"Come on,\" she pushed. \"We've been 'revealing' things to each other all day, haven't we?\" \n\n\"Okay,\" I sighed. I took her mittened hand in my own and we strolled side-by-side through the neighborhood. Some off-key carolers crooned in the distance. Snow crunched beneath our boots. And Tracy listened intently as I regaled her with the entire story of what might have been. \n\nMy 'what if' fantasy: \n\n\"Go back in time. Three years ago, tonight. I pick you up around this same time-around eight-and we head to the carnival to meet your friend Ria and some guy named Connor. You're dressed in those exact same clothes, with that exact same lipstick.\" \n\n\"You remember the lipstick I was wearing?\" Tracy asked. \n\nI smiled, \"I remember everything about that night. I remember being so nervous on the drive over to pick you up, that my hands were sweating. I remember being terrified that you'd notice that I'd screwed up shaving and one of my sideburns was a millimeter or so longer than the other. I remember the moment you sat down in the car beside me-happy as could be-and I thought, 'Man, I hit the jackpot. This girl IS Christmas. Bright green eyes and deep red lips. Cozy and jolly and sweet as dessert. Festive sweater, fuzzy mittens. A nice girl who definitely belongs on Santa's naughty list.\" \n\nTracy smirked at that last bit. \n\n\"Point is, I felt like the luckiest guy in the world that night.\" \n\n\"But you still chose to go home with Ria.\" \n\nI shrugged. \"In real life? Yeah. You and me-we weren't right for each other, Trace. That much was obvious from the moment I handed you a bouquet of flowers, and you reacted like I had just bought an engagement ring.\" \n\nTracy shrunk down a bit, embarrassed. \"I just get nervous when boys do things like that. I didn't mean to be ungrateful.\" \n\n\"You didn't do anything wrong. Me and Ria had a connection. You and Connor had a connection. The rest is history. BUT-\" \n\nI gave her another quick kiss on the lips. \n\n\"But we're not talking about real life, here, are we?\" \n\n\"Right.\" \n\n\"In my 'what if' fantasy, Ria and Connor don't even show up that first night. It's just you and me, having a blast, enjoying the carnival. Getting all snuggly as the night gets colder.\" \n\nTo illustrate my point, I wrapped an arm around Tracy's shoulders and pulled her in closer. \n\n\"And as we get closer to midnight; closer to Christmas, I'm already falling head-over-heels for you. Not the way I fell for Ria-both of us perfectly compatible and instantly connected and all that-no, when I fall for you it's the complete opposite. It's wild, like jumping off a cliff because I can't stand the thought of standing on solid ground anymore.\" \n\nShe blushed. \n\n\"And then midnight finally rolls around and we decide to take a ride on the tunnel of love.\" \n\nI lowered my voice, so that the passing carolers couldn't hear as I whispered: \n\n\"And as soon as that stupid swan boat starts moving, we've got our hands all over each other. You hop up on my lap and we start kissing, I start copping a feel beneath that sweater you've got on...\" \n\nI trailed off, pausing to take an appreciative glance at the way Tracy's luscious chest was straining against her Christmas sweater. \n\n\"Do we have sex in the tunnel?\" \n\n\"No way,\" I laughed. \"Way too cold and uncomfortable for a fantasy. No, we go straight back my car and we fuck in the parking lot.\" \n\n\"With the heater on full blast,\" she giggled. \n\n\"Of course, can't have us catching a hypothetical cold. Anyway, you hop up on my lap, and somehow we manage to struggle out of all our clothes-\" \n\n\"And then I rub my wet panties all over your face.\" \n\nI blinked, caught off-guard by her comment. \n\n\"Just trying to contribute,\" Tracy grinned wickedly. \n\n\"Oh, don't stop on my account.\" \n\n\"No, this is your story. I just wanted to throw that in there.\" \n\n\"Hey, by all means. You can throw your panties around any time you please, I won't complain.\" \n\n\"Anyway-\" \n\n\"Anyway, back to the story: We're both buck naked, rubbing up against each other and fogging up the windows. I recline the driver's seat and lay down, and then I roll you over so those gorgeous big tits of yours are pointing up at the ceiling for me to fondle and play with.\" \n\nTracy pointedly stuck out her chest towards me. \"You mean these tits?\" \n\nI started talking faster: \n\n\"My cock is sticking straight up between your legs, pressing against the length of your slit.\" \n\n\"Ooh, I like where this is going.'\" \n\n\"You're so fucking hot and so fucking wet-and your body is just drooling honey all over me. Before long, you've lubed up my cock so much that your body literally can't keep me out anymore-and every inch I've got to offer slips slowly up inside of you.\" \n\nTracy shivered, enjoying the mental image. I circled around behind her-my arms still tightly hugging the girl's curvy body. \n\n\"Then what happens?\" she whispered. \n\n\"Then we fuck as hard as we can, as fast as we can, and you come like fifty times before I pull out and blow my load all over your stomach.\" \n\nAs I spoke, I gave her both of her breasts a good firm squeeze. \n\n\"I think I'm gonna like this story,\" she panted. \"Tell me more.\" \n\nI playfully nipped at her ear. \"Maybe I should tell you in the car.\" \n\n******** \n\nRIA \n\n******** \n\n\"But it's closed,\" Connor frowned, staring up at the dark, abandoned ice rink on the outskirts of town. \n\n\"So what? Let's sneak in. It'll be fun!\" \n\n\"Sneak in?\" he looked uncertain. \n\n\"What, you can't break the rules anymore now that you're a cop?\" \n\n\"It's not that...\" \n\n\"Good, because I plan on breaking a lot of rules with you later tonight.\" \n\nHe grinned. \n\n\"I can't ice skate,\" he laughed. \n\n\"Really? Mister 'Varsity-letterman-every-sport-known-to-man' can't skate?\" \n\n\"Never even tried.\" \n\nI took his hand in mine. \"Me neither.\" \n\nSneaking into the rink wasn't too tough. It was outdoors and there was nobody around, so all we really had to do was climb over a little fence. Actually getting to the ice skates however, was a different story. They were locked up inside a cage, but Connor did a trick with one of my hairpins and managed to get it open. \n\n\"Where did you learn to do that?\" I asked. \n\n\"When I was a teenager I was kind of a piece of shit,\" he answered. \n\nI laughed, feigning outrage. \"You're telling me that my hunky policeman best friend has a secret criminal past?\" \n\n\"Technically, yes. Though I wouldn't call my teenage self a 'criminal' so much as an 'obnoxious little twat.'\" \n\n\"Fascinating. You were the Judd Nelson type, then?\" \n\n\"Pshh, I wish. How about you? You I bet you were like a Latina Molly Ringwald. Queen bee cheerleading captain and all that.\" \n\n\"I was more of a Michael Hall, actually. Four straight years of four-point-ohs, motherfucker!\" \n\n\"No way.\" \n\n\"Oh yeah. Nerd-queen late bloomer. Guys didn't even realize I had tits until I started working at Hooters in college. Tracy gave me a pretty serious makeover, god bless her.\" \n\n\"No cheerleading then?\" \n\n\"'Fraid not.\" \n\n\"Damn!\" he cursed. \"So much for my million zillion fantasies of you in a pleated miniskirt waving your pompoms.\" \n\n\"Hey, play your cards right and next Halloween I'll dress up as a cheerleader. A slutty cheerleader.\" \n\nConnor handed me a pair of skates in my size and we tiptoed out onto the ice rink-stumbling and staggering like a couple of toddlers learning to walk. Connor held onto the wall, I held onto Connor, and together we made a few awkward laps around the circumference. \n\n\"Okay, what do you say next time we really go for it?\" Connor asked. \"All the way around the rink, no holding onto the wall. First one across the finish line wins.\" \n\n\"Wins what?\" I asked. \n\n\"Respect?\" \n\n\"Lame. How about the loser has to do something. Like a dare. Anything the winner wants, no chickening out.\" \n\n\"Oh, you're gonna regret saying that,\" he teased. \n\n\"You're assuming one of us actually makes it all the way around without slipping on the ice and shattering our pelvis.\" \n\nLaughing, he and I took exaggerated starting positions for our little race, trying our best not to fall over before we'd even begun. \n\n\"Ready?\" Connor asked. \n\n\"Set!\" I answered. \n\n\"Go!\" we both shouted together, and took off as fast as we could go- \n\nWhich for me was probably about two miles per hour, if you factored in all the stumbling and slipping. \n\nConnor got a huge lead early on, but he built up so much momentum around the first turn that- \n\n\"Whoa!!\" \n\n-He lost control and hit the wall like a cannonball, cracking the wood on impact. \n\n\"Connor!\" \n\nHe lay motionless on his back. I hobbled across the ice towards him with all the speed I could muster- \n\nThen I tripped over my own dumb feet and landed knee-first on his crotch. \n\n\"Jesus Christ!\" he groaned, immediately pushing me aside. \n\n\"I'm so sorry, I-\" \n\n\"Breaking and entering, crashing into a wall, kneed in the balls... This is turning out to be about the sexiest date ever, isn't it?\" Connor joked. \n\nI was just glad that he was okay. Our laughter fogged up the cold night air all around us. \n\nWith Connor still lying down on the ice, I crawled on top of him and tenderly kissed his forehead. \n\n\"You're okay?\" \n\n\"Yeah, I'm okay. The wall got it worse than I did.\" He squeezed his muscular arms around me, holding my body to his. Face to face, our lips were close enough to touch. \"Looks like I lost the race, though. I'm gonna go ahead and say me falling on my ass constitutes a forfeit.\" \n\nI mussed up his short-cropped hair. \"Meaning you have to do anything I tell you to.\" \n\n\"That was the deal. What do you want from me?\" Connor asked, his hands gently squeezing at my buttocks. \n\n\"You'll see, soon enough,\" I whispered. \n\nWe kissed, and beneath me I felt Connor harden through his jeans. \n\n******** \n\nSHANE \n\n******** \n\nTracy's fingers teased their way down my zipper, finally freeing my cock to the chilly night air. She wasted no time, immediately gripping my naked shaft between her fingers and pumping me to full hardness. \n\nThen she dropped her mouth down to my lap and-and- \n\n\"Ohhh...\" I moaned. \n\nTracy took her lips off my cock just long enough to whisper, \"Keep telling the story.\" \n\nWe'd been making out in my car for god knows how long. Our passionate bouts of kissing and groping were periodically interrupted by me recounting for Tracy the many, MANY fantasies I'd had of her over the years. ",
        "\"Where was I?\" I panted. \n\n\"Ha-bo-reeb,\" she mumbled through the meat of my cock. \n\n\"Right, Halloween. You're-ahh! You're wearing that damnable little I Dream of Jeannie costume, with those see-through harem pants and that tight crop top.\" \n\n\"I remember that night,\" Tracy teased, releasing my cock once more. \"Two years ago. You were eye-fucking me like the whole time.\" \n\n\"Yeah, well, in the 'What If' fantasy, I do a whole lot more than just look at you. I rip that costume right off your body, tearing apart the lace and the silk-then I bend you over the sofa, slide aside the tiny pink panties you're wearing, and I fuck you right there at the party, in full view of everyone.\" \n\n\"Mmm, I would have liked that,\" she purred. \n\nHer fingers trailed up and down my wet shaft, and our eyes met in the darkness of the car. Tracy moaned slightly as she spoke: \"I wanted you so bad that night. I kept finding excuses to sit on your lap, just so I could feel how hard you were beneath me. If you had gone for it-tried to really fuck me-I might not have been able to resist, even with Connor and Ria right there with us.\" \n\nI groaned as she squeezed my shaft for emphasis. \n\nTracy blushed: \"I went home that night and fucked Connor like crazy, pretending it was you.\" \n\n\"Oh Jesus,\" I moaned. \n\n\"Honestly, I think that night was the reason I agreed to do that bachelor party strip tease thing for you, two months later.\" \n\nI reached up and squeezed Tracy's breasts through her sweater. \n\n\"Thank God for that, then. If that night had never happened, then this night might never have happened.\" \n\n\"Another 'what if?'\" \n\nTracy's huge eyes held mine as she asked, \"And how about you and me? Do we ever get married in the fantasy? Or is it always just sex? Always just friends?\" \n\nI looked right at her: \"You are so much more to me than 'just a friend,' Trace. I've had lots of friends in my life. Some of them have even been ridiculously beautiful women. But none of them have been you.\" \n\n\"Do we get married, then? In the fantasy, I mean.\" \n\n\"Pshh! As if my fantasy could ever be complete without the vision of you in a wedding dress. Or the vision of you stripping out of one.\" \n\n\"Ooh, tell me about our hypothetical wedding night,\" she grinned, moving her mouth back down towards my lap. \n\n\"My pleasure.\" \n\n\"You mean a lot to me, too Shane,\" she cooed, kissing her way up and down the length of my penis. \"Every inch of you.\" \n\n******** \n\nRIA \n\n******** \n\nI cuddled up against Connor's chest, using his body heat to stay warm as we both stared up at the stars. \n\nThe back of his truck wasn't exactly the most comfortable place on earth-cold, rough metal beneath a decidedly unpleasant layer of gravel-but at that moment there was nowhere I'd have rather been. \n\nIt felt so odd to be out on a date with someone other than my husband, almost like I'd woken up to find myself living on another planet; some parallel universe where nothing was quite the same. Like that weird episode of Star Trek where everyone had the goatees. \n\nConnor held me tight in his arms, and the steely scent of his cologne hit my nostrils. \n\n\"This is nice,\" I sighed. \"Peaceful.\" \n\nConnor laughed, \"'Peaceful' isn't exactly the word I would use to describe our day today. 'Sexy as hell,' maybe. 'Frustrating,' 'crazy,' 'confusing' - and let's not forget 'painful.'\" \n\nHe rubbed the lump that had formed on his elbow after his spectacular ice skating wipeout. \n\n\"Not that I'm complaining, mind you,\" he quickly added. \n\nI twisted around in his arms and kissed him gently on the cheek. \n\n\"You seem nervous,\" I said. \n\n\"I'm just hoping Shane doesn't hate me for touching you the way I did earlier tonight. And Tracy... she and I JUST got back together yesterday! What if the four of us all playing around like this screws that up?\" \n\n\"Tracy loves you, Connor. She's not gonna lose you a second time.\" \n\nHe sighed and looked at me with his sad, hungry puppy eyes. \"I want you so, so bad, Ria. So bad that it hurts to look at you sometimes. Like, actually, physically hurts.\" \n\n\"Blue balls?\" I teased. \n\nHe frowned. \"I'm being serious. And no, it's way worse than just 'blue balls.' It feels like I just took a punch to the stomach. My mouth gets all dry. My throat gets tight...\" \n\n\"Connor-\" \n\n\"Besides Tracy, you and Shane are the only family I've got. I don't want to be the guy who fucks up your marriage.\" \n\nI hugged him reassuringly. \"Shane already knows how I feel about you, Connor. Nobody's cheating, nobody's lying, and nobody's got their head buried in the sand. We're all scared, but honestly? The alternative scares me more.\" \n\n\"What do you mean, the alternative?\" \n\n\"I mean the alternative where you and I spend the rest of our lives pretending like there's nothing going on between us. Like I don't have to fight the urge to rip your clothes off your body every time you say hello. Like it's all just some harmless flirting and winking between two good friends. I'm terrified to think I might go my whole life, never...\" \n\nConnor swallowed, his mouth dry. \"Never what?\" \n\nIn reply, I slowly lowered my hand to his lap-felt the firm outline of his erection-and squeezed. \n\nSomething in Connor snapped. He kissed me hard on the mouth, pinning me beneath the weight of his muscular body. \n\nThe gravel in the truck bed scratched at my back, but I ignored it, grinding up against Connor. His strong hands snuck up beneath my shirt and squeezed firmly around my breasts, pinching my nipples through my bra. \n\nI gasped, reflexively throwing my head back from the sudden shot of intense pleasure. \n\n\"Ria...\" he moaned, pulling me even closer. I licked the side of his neck. \"I can't take it anymore. I need you. I need all of you!\" \n\nMy palm rubbed away at his crotch, through the fabric of his jeans. Connor's face looked almost pained from the sensation. \n\nLeaning in towards his ear, I whispered, \"I don't just want to be your friend anymore, Connor. I NEVER wanted to be just your friend. Not even a friend with 'benefits.' I want more, and-\" I kissed him again, fighting the ferocity of his tongue against mine. \"and I want it tonight.\" \n\nHe pulled away, not believing what he was hearing. \"You mean-?\" \n\n\"I mean take me back to the cabin right fucking now.\" \n\n... \n\nWe barely made it inside before we started attacking one another. I yanked off my shirt and jacket-threw them to the floor-and jumped into Connor's arms, topless except for my skimpy black bra. \n\nOur lips mashed together. My breasts crushed against his bomber jacket. My arms snaked around his neck, holding on like a python. \n\nYou couldn't have pried us apart with a crowbar. \n\nOnce he came to his senses, Connor's hands found my butt and refused to let go. \n\n\"Mmm! Upstairs! Now!\" I growled. \n\nCarrying me like I weighed nothing, my muscular lover raced up the staircase, ran into the guest bedroom, and threw me aggressively onto the king size mattress. \n\nWith shaking hands, Connor stripped off his clothes as fast as he could: jacket, boots, jeans- \n\nI bit my lip in anticipation as his underwear came into view, an enormous bulge stretching out the dark blue cotton. \n\nGod, he was big. I'm not a size queen or anything, but Connor had a DAMN nice cock, and the thought of it filling up my body sent an anxious shiver down my spine. \n\nI propped myself up on my elbows, thrusting out my chest-showing off the delicate lace bra my husband had bought me for my birthday. \n\nI didn't want to wear it, anymore. \n\n\"Suck on my tits,\" I commanded. \n\nConnor was happy to oblige. Leaping onto the bed, he violently yanked down the flimsy black bra straps and dropped his face into my naked cleavage. I moaned from the stimulation of my nipples dragging across Connor's handsome, chiseled features as he licked and suckled. \n\n\"Oh yeah...\" he groaned. \n\nWhile Connor feasted on my boobs, I wiggled out of my jeans-and his fingers immediately stabbed down beneath the waistband of my panties. Moaning, I clenched my fists around his shirt and stripped it off his torso-revealing that perfectly smooth, absurdly muscular chest. \n\nNo man should be allowed to look that sexy. \n\nMy hips writhed, out of control-smearing honey across Connor's entire hand. \n\nI was so wet, so hot, so ready, so desperate for Connor's gorgeous big cock... \n\nMy eyes flicked over to the bedside clock: \n\n11:43 \n\nHell and damnation! It still wasn't midnight?! \n\nFuck it, I thought. It was close enough. What difference did seventeen little minutes make, anyway? What harm could there possibly be? For all I knew, Shane hadn't been able to wait, either. What if he and Tracy were already off somewhere, screwing each other's brains out? \n\nBut no sooner did the thought cross my mind, then I knew it wasn't true. Shane was going to wait, and so was I. It didn't matter that it was only seventeen minutes-what mattered was that we'd made a promise to each other. \n\nThinking of my husband sobered me a little, just enough to catch my breath and figure out exactly how I was going to pass those final few minutes. \n\nI pulled away from Connor. \"On your back, stud,\" I grinned. \n\nHe obeyed, his erection pointing straight up through his briefs as he watched me. \n\nI made a show of sensually sliding off my drenched lace panties, then dangled them tantalizingly above Connor's face. With him distracted, I snuck out my other hand and gripped his shaft through the fabric of his underwear- \n\n\"Holy shit!\" he laughed. \n\nAfter a few teasing strokes, I carefully peeled off his briefs until his penis had sprung free, bobbing slightly. Then I lowered my wet panties the final few inches to his face and let him breathe in my scent. \n\nTeasing, I tugged my underwear down his chest, across his chiseled six pack-and the finally wrapped the skimpy bit of black lace around his shaft, squeezing it with my fingers. \n\nConnor scrunched his eyes shut in blissful agony, his breath coming short and fast. \n\nStill holding my panties, I pumped my hand up and down, playfully lubricating my lover's cock... \n\nOvercome with lust, he aggressively grabbed a handful of my hair and pulled my face down to his lap. \n\nI was momentarily stunned by his behavior, but the moment I felt Connor's naked hardness pressing against my mouth, I lost control as well. I stuffed as much cock as I could between my lips and moaned with gluttonous delight. The bulb of his head pressed up against the back of my throat and I actually felt his pulse against my tongue. \n\nNaughtily, I also noted the sweet taste of my own juices, coating his skin. \n\n\"Yeah, suck it,\" Connor commanded. \n\nI grinned, inwardly-Shane never talked like that in the bedroom, not even when he was role-playing as Connor. \n\nKeeping Connor's penis inside my mouth the entire time, I scooted myself around the bed 180 degrees, planted my knees on either side of my lover's head, and dropped my pussy down right on his mouth. \n\nConnor groaned in pleasure, immediately going to town with his tongue. \n\nI let his cock slip from my lips for an instant, glancing back over my shoulder to tease: \"Only if you suck it, too.\" \n\nThen I inhaled his shaft once again, and proceeded to give the best blowjob of my life: bobbing up and down, swirling my tongue around the tip, licking away at his testicles-I even managed to relax enough to take a good portion of him down my throat. \n\nMeanwhile, Connor was no slouch himself when it came to oral. He did this one thing-where he sucked my pussy lips into his mouth and rubbed his chin against my button- \n\n\"Oh, fuck...\" I moaned. \n\nI felt the familiar tidal wave approaching, and knew I wouldn't be able to keep this up much longer. Almost afraid of what I would see, I glanced back at the clock one last time: \n\n12:00. \n\n\"Yessss!!\" \n\nI impatiently climbed off of Connor. \n\n\"What is it?\" he asked, suddenly confused. \n\n\"It's Christmas.\" \n\nI allowed myself a brief moment to appreciate the way Connor's hunky body looked, stretched out naked across the bed beneath me... \n\nThen I swung my leg around and positioned my cunt directly above his slick erection. \n\nConnor's eyes practically bugged out of his head as he watched the tip of his cock glide teasingly back and forth across my entrance. \n\n\"Oh my God, Ria, are we really doing this?\" \n\nI reached down to pump his shaft a few times, luxuriating in the moment; in the realization of what was about to happen. \n\nIt was almost too much to bear. All the years of fantasies, all the flirting and role-playing, all the 'almosts' and 'what ifs' and 'could have beens' that had defined my relationship with Connor. We'd come so close to this moment, but never had the guts to take the plunge. To go all the way. To finally, once and for all, do what we'd always dreamed of doing. \n\nTo fuck. \n\n\"I need you, Connor,\" I whispered. \n\n\"Oh my god,\" he repeated. \"Oh my god, oh my god, oh my god...\" \n\nMy legs went limp and Connor's big, meaty clock slipped inside my body. \n\n\"Ahhh!!\" Connor roared, feeling my tight pussy clench around his shaft. \n\nI dropped my hands to his pectorals, supporting myself as I carefully took more and more of him inside of me. It felt like every ounce of my blood was boiling beneath the skin. \n\nIt was real! It had really happened, and there was no going back. \n\nFinally, my hips settled down onto my lover's body. I had taken every inch of him. My head slumped forward, limp. \n\n\"Oh, Connor,\" I sighed happily. \n\nHe sat up, bringing my face to his for a long, passionate kiss. \n\n\"I've wanted this for so long,\" he whispered. \n\nMy cheek fell against his chest, light-headed and out of breath. Connor caressed my bare back as we sat there for a few minutes, just kissing with him inside me. \n\n\"Are you alright?\" he asked at last. \n\nI nodded, then weakly answered, \"Better than alright. I'm perfect.\" \n\nConnor kissed me again and then, gently, he lifted my hips up, slid halfway out-then pulled me back down again and again. By the third stroke, my juices were gushing all over his lap. \n\n\"Mmm, fuck me,\" I groaned. \n\nConnor bounced me up and down, catching my swinging breasts between his lips. His strong fingers clamped around my ass and squeezed so hard it was almost painful. \n\nI gave him a naughty smile: \n\n\"I'm sorry I couldn't let you-Ahh!-do this to me earlier today-Oh!-when we were in the bathtub together-Mmm!-I know how bad you wanted to.\" \n\n\"You have no idea how badly I wanted to,\" he growled. \"You can't imagine how sexy you looked-on all fours, wet and soapy, waving your ass right in my face.\" \n\nMy pulse quickened. I pulled myself off of Connor's lap-feeling suddenly, horribly empty without him inside me-and crawled away from him across the bed. \n\n\"Did it look anything like... this?\" I asked, sticking my butt up in the air and waving it in his face. \n\nEyes blazing, Connor got up onto his knees and maneuvered behind me. He rubbed my ass cheeks with his cock, then eagerly pushed himself back inside my slit, filling me up once more. \n\n\"I'm sorry I made you wait so long,\" I purred. \"Shane and I promised we'd-Mmm!-hold out until midnight.\" \n\nConnor groaned. \"So then, he and Tracy-\" \n\n\"He and Tracy are just a few minutes behind us, lover. Before you know it, my husband will be fucking your girlfriend in the other bedroom-Oh!\" \n\nConnor aggressively drove his cock into me. \n\nMy own stuttering moans filled the room as Connor fucked me doggie style-his hips clapping loudly against my buttocks-faster and faster. \n\n\"Fuck yeah,\" he grunted. \n\nConnor was so powerful, so athletic, so utterly dominating in how he handled me. It rocked my world- \n\nThe front door opened downstairs. \n\nConnor froze at the sound, and he and I both realized that, in our mad scramble to get our clothes off, we'd left the bedroom door wide open. I heard the murmur of Shane and Tracy's voices, coming up the stairs... \n\n\"Do you want them to see us?\" Connor asked. \n\nI considered for a moment, then hopped off the bed and hurried over to shut the door. \"Maybe next time. Tonight, I just want YOU.\" \n\nConnor didn't wait for me to come back to bed. He stood and strode towards me across the room, looking like a naked Greek god, come to life. He pulled my tiny body to his tall, muscular frame-grinding his cock against my belly as his lips came crashing down to mine. \n\nThen he grabbed me around the waist and effortlessly lifted me into the air, until the smooth tip of his penis was perfectly positioned beneath my slit. \n\nI wrapped my arms around his neck and pretzeled my legs behind his back-and Connor lowered me down, impaling me on his cock. \n\n\"Ahh...\" I moaned, relieved to have him back inside me. \n\nAn instant later, I felt the bedroom wall against my back, and Connor was thrusting vigorously once again-this time standing up. \n\n\"You are such a stud,\" I smiled. \n\nBut Connor didn't smile back. He just stared at me with those desperately hungry eyes and began thrusting faster and harder. The strong hands supporting my bare buttocks got frisky, teasing fingertips across my anus. \n\n\"Connor...\" I whimpered, sensing a monster tidal wave of an orgasm approaching on the horizon. \n\nHe went for broke, slamming into me as hard as he could-every impact rattling my teeth. My fingers clawed at his muscular back, holding on for dear life. His lips tugged at my nipples- \n\n\"Yes! Yes! Yes!\" \n\nI went off the deep end, a stream of half-conscious horny words pouring out of me with his every thrust: \n\n\"Oh yeah! Fuck me you stud! Fill me up! Fuck my little pussy! I'm so wet for you, Connor! I'm so fucking wet! Harder! Harder! Aaah!!\" \n\nThe sound of my voice finally set Connor off. His face contorted in beautiful agony-his cock spasmed inside the deepest part of me- \n\nI screamed. That tidal wave of pleasure smashed down on me with all its force, and every muscle in my body went suddenly, blissfully, limp. Panting, Connor dropped me onto the bed and withdrew his sticky cock from my body. I fought to get air back in my lungs. \n\n\"That was...\" \n\n\"Yeah,\" he whispered. \n\nHe stretched out beside me on the bed, we looked into each other's eyes, and-still entirely out of breath-we kissed. \n\nThirty seconds later, Tracy started to moan. \n\n******** \n\nSHANE \n\n******** \n\nEarlier that night... \n\nI gripped the steering wheel with white knuckles. \n\nAfter three years of unconsummated tension, and an entire day of build-up, Tracy was on fire. Mid-blowjob, she dazedly muttered, \"Mmm, I could suck your cock forever,\" and I'm fairly sure she meant it. The look in her eyes brought me right to the edge-every nerve in my body screaming for me to just cut loose and blow my load in the girl's beautiful mouth. \n\nBut I didn't. Much as it pained me to do so, I pulled Tracy's loving red lips off my cock and zipped up my pants. \n\n\"Not just yet,\" I chided her. She whimpered in frustration. \n\nInstead, I pulled her onto my lap-the two of us passionately dry-humping as we kissed and moaned and whispered in each other's ears about all the naughty things that might have been. \n\n\"I can't believe we waited a whole year to do this,\" she panted. \"Giving you that lap dance last Christmas was like the most exciting thing I've ever done. Why didn't you ask for a repeat performance?\" \n\n\"I thought it was just a 'once in a lifetime' sort of a treat.\" \n\nTracy suddenly pulled away, levelling her gaze at me, \"And who the hell put THAT idea in your head?\" \n\n\"After the wedding, Connor came up to me and said-\" \n\n\"Connor?! He told me YOU said that.\" \n\n\"I said it? No, no, he came up to me and asked if-\" \n\n\"Exactly! He ASKED! He wasn't TELLING you it was once in a lifetime, he was ASKING you. He and I talked about it, and he was supposed to find out if you guys were interested in taking things further!\" ",
        "I blinked. \"I... I guess I misinterpreted.\" \n\n\"You 'misinterpreted?!'\" She turned red. \"Do you have any idea how much it messed with my head when you didn't want to fool around with me again after that night?\" \n\nI laughed, but Tracy didn't share my amusement. \"Trace, considering how much of our honeymoon was spent with Ria role-playing that she was you, I think it's safe to say that I wanted you VERY badly after that night.\" \n\n\"Then how come you waited a mothefucking year to make move?\" \n\n\"Because you and Connor broke up! It would have been weird!\" \n\n\"We only broke up because of you!\" she shouted. \n\nThe moment the words escaped her lips, Tracy immediately regretted at what she'd said, cupping a hand over her mouth and muttering, \"I'm sorry, I'm just horny and I don't know what I'm saying. Ignore me.\" \n\n\"Tracy, how am I supposed to ignore that? What do you mean you broke up because of me?\" \n\nShe frowned, \"I-I talked about you a lot, with Connor. About all the things I wanted to do with you. Mostly, it just turned him on-like foreplay-but...\" \n\n\"Oh Jesus,\" I sighed, feeling suddenly very awkward about what she was saying. \n\nTracy continued, \"But then Connor asked you if what had happened on Christmas Eve was gonna be a 'one time thing,' and you said yes.\" \n\nTears welled up in her eyes. \n\n\"But I kept talking about you. And he got angry-said that if he wasn't enough for me, then maybe we should just see other people. And then...\" She trailed off, tears welling up in her eyes. \n\nI took a deep breath. \"I had no idea.\" \n\n\"We're all so, so stupid,\" she sobbed. \"Last night, Connor admitted that the only reason he'd gotten so angry with me was because he was just as frustrated that Ria didn't want him, either.\" \n\n\"Tracy-\" \n\n\"And then he and I finally got back together after all those awful months-and the very next day, you and Ria suddenly want to jump our bones again? I'm so happy, and so horny, and so confused!\" \n\nShe impatiently mashed her lips to mine. Still crying, Tracy rubbed her crotch against me, and so help me, I was hard. \n\n\"I'm sorry,\" I whispered. \"I never meant to hurt you.\" \n\nShe finally got her breathing under control, and I kissed away the tears on her soft pale cheeks. I glanced down at my watch. It was already past midnight. \n\n\"How about I drive us back?\" I whispered. \"And you let me make it up to you?\" \n\n... \n\nAs soon as we walked inside the cabin, I noticed Ria's shirt and designer jacket strewn across the floor. A raucous din of urgent moans and energetic thumping echoed from upstairs. \n\nTracy grasped my hand, anxious. Our eyes met, and we both silently acknowledged: It's really happening. \n\n\"Take me to bed,\" Tracy whispered. \n\nHolding her by the hand, I led the voluptuous, golden haired beauty up the stairs- \n\nHalfway there, we heard the guest room door slam shut in a panic, and we both burst out laughing. It was a welcome break in the tension, but it only lasted a moment. Tracy and I tiptoed into the master bedroom and laid down fully-clothed on the glorious four poster antique bed. \n\n\"Tonight, you're all mine?\" Tracy asked hopefully. \n\n\"All yours. All night.\" \n\nOur lips met again-not rushing it this time, just really savoring the moment. Tracy's fingertips caressed my cheek. For a few minutes, we enjoyed the sweet, electric touch of each other's lips-contrasted against the outrageously pornographic noises our significant others were making in the next room over. Eventually our hands got restless-me reaching up beneath her sweater to fondle those incredible tits, her rubbing a palm across my erection. \n\nTeasingly, she sat up on my lap and peeled off her sweater, revealing a rather ordinary beige bra supporting the two most extra-ordinary breasts I'd ever seen. I cupped and squeezed them, unable to resist. \n\nMy hands flicked down her bra straps, reached for the thick cups- \n\n\"Ooh! I almost forgot!\" she exclaimed, hopping off of me. \"Wait right here!\" \n\nShe turned and walked out the door, unsnapping her bra as she went and letting it tumble to the floor. The sides of Tracy's luscious boobs bounced briefly into view before she disappeared out of sight and slipped into the bathroom. \n\nI groaned, impatient for her to return. I got up, pacing the room-until my eyes fell upon the black silk pajamas I'd worn earlier that afternoon. The ones that had gotten Tracy so adorably aroused when she'd brushed up against me. \n\nIt was time for a quick change of clothes, I decided. \n\nLuckily for me, the exact same thought had crossed Tracy's mind. When I saw what she was wearing, my cock throbbed so hard it hurt. \n\n\"You like it?\" she asked innocently. \n\nTracy had slipped into a pale blue nightie; a dainty, bell-shaped whiff of sheer mesh that draped like a veil over her ample curves and down past her hips-not quite covering the matching nylon panties she was wearing. \n\nThe mesh material was so utterly transparent that I could see every exquisite detail of her unsupported breasts as they bounced swayed upon her return to the bed. A pair of teeny tiny ribbons-loosely knotted above her shoulders-were all that kept the whole ensemble from sliding down to a puddle at her feet. \n\n\"My god...\" I sighed, drinking in the erotic vision before me. \n\nSmiling, Tracy threw herself onto the mattress, the impact jiggling her bosom quite nicely. \n\nI couldn't control my eyes, which ran a marathon around her generous curves. \"You look sexier right now than you've ever looked, in any of the countless thousands of fantasies I've had of you over the years.\" \n\n\"Even better than I looked in the shower this evening, with my big, soapy tits wrapped around your cock?\" \n\nI growled into another kiss. \"Even better,\" I insisted. \n\nShe seemed satisfied with my answer, and rewarded me by deliberately placing my hands atop her enormous bosom. I couldn't stop staring at that nightie: \n\n\"You brought this with you?\" I asked, suspicious. \n\n\"Yeah...\" \n\n\"But you didn't even know Connor was coming up this week.\" \n\nTracy blushed a deep crimson, and whispered, \"I bought it for you.\" \n\n\"For me?\" \n\nShe shrugged, self-conscious. \"I didn't think anything was actually going to happen, I just wanted to see that look on your face again when I wore it.\" \n\n\"What look?\" \n\n\"THIS look, silly,\" she laughed, pointing up at me. \"The same look you gave me last Christmas when I popped out of that box and started dancing for you. The look that makes me feel like the sexiest woman in the whole wide world.\" \n\nI crawled on top of her, enjoying the way her nearly naked body instinctively responded to the feel of my silk pajamas against her skin. Tracy arched her back, thrusting those full breasts up into my chest. I craned my neck down and licked her engorged nipples through the pale mesh fabric. \n\n\"You bastard,\" she grinned, cupping my butt with both her hands. \"You know what silk does to me.\" \n\nHer soft thighs embraced me on either side, rubbing up and down from my hips to my knees-slowly grinding my erect penis against her panties. \n\nIn the other room, we could hear my wife and Tracy's boyfriend both scream their way though a couple spine-shattering orgasms. \n\nTracy blushed. I placed a firm hand on her bare thigh and whispered, \"We can top that.\" \n\n\"I'm counting on it,\" she grinned. \n\nOur lips molded back together, tongues teasing. Hands roaming. Hips grinding. \n\nThen she pulled my face away and whispered, \"I have a confession to make.\" \n\n\"Oh yeah?\" \n\n\"Yeah. All these cross-ups between the four of us-all this swinging or swapping or whatever you want to call it-it was my idea.\" \n\n\"Don't be silly, we all wanted it.\" \n\n\"We all wanted it, but I'm the one who-Mmm!-made it happen!\" \n\nShe gave a jolt as my hand cupped the outside of her warm, wet panties. \n\n\"Last year, I-Ooh yes!-got so obsessed with the idea of fucking you that I-Unh!-I hatched this whole plan to get Connor together with Ria. I figured if the two of them had sex, then you and I could-Oh yes!\" \n\nI stroked a single finger across the outline of her pussy lips. \n\nTracy continued, \"I got the idea when Ria was out shopping for her bridal lingerie. I took one glance at how fucking hot she looked, and I knew that Connor wouldn't be able to control himself if he saw her like that.\" \n\n\"So you-?\" \n\n\"I filled Ria's head with a bunch nonsense about her needing to get a 'man's perspective.' Which meant putting on a show for Connor. I wanted to get them both so hot for each other that they crossed a line. Did something so naughty, they couldn't ignore what had happened. Then you and I would have an excuse to do the same. I even told Connor to start touching her...\" \n\nMy heart was pounding. I pulled aside Tracy's drenched panties and wiggled a finger inside her boiling hot cunt. \n\n\"You told Connor to touch my wife?\" I asked. \n\n\"Yes! Oh yes! I knew it was wrong, but I just couldn't help myself. I had to do something. We were all so fucking horny for each other, I knew it would only take a tiny push to get the ball rolling. And it almost worked! A week later, Ria asked me to strip for you.\" \n\nI shook my head in amusement, \"You did all that, just so you'd have an excuse to fool around with me?\" \n\nShe nodded. \n\nWith a wink, I collected the four long pillows from our bed and stripped the pillowcases off them. \n\n\"What are you doing?\" Tracy asked. \n\n\"You really do belong on Santa's naughty list,\" I joked. \n\nThen I pinned both her hands behind her head and, using the four pillow cases as makeshift rope, tied her wrists to the edge of the antique wooden bed. \n\nTracy but her lip, nervous. \"And are you gonna punish me for being naughty?\" \n\n\"Are you kidding? If it wasn't for you, none of this would have been possible. I'm gonna reward you, baby. I'm gonna give you everything you've been dreaming of.\" \n\n\"Ooh,\" she chuckled happily. \n\nThen I spread her legs apart, briefly caressing the sensitive flesh between her thighs-and tied her ankles to opposite sides of the bed, leaving Tracy bound spread-eagled and powerless. \n\nHer eyes flashed with arousal- \n\nThen I covered them up, stripping the black silk sash from my pajamas and tying it like a blindfold over her eyes. Tracy's whole body shivered in anticipation. \n\nMuch as I was tempted to dive mouth-first between her legs, I knew we'd both enjoy it more if I really took the time to bring her to a proper boil. I peeled the silk shirt off my back and, after permitting myself one more chance to gaze at her gorgeous, busty body, I touched that silk to her cheek. \n\nTracy sucked in an excited breath of air. \n\nI trailed the silk across her plump red lips and slender white throat, down to her collarbone, then slipped it beneath the neckline of her nightie and over the soft curve of her breast. \n\n\"Ahh,\" she panted, reflexively clenching the muscles of her thighs. \n\nGently-slowly-I teased the silk across her exposed nipples and leaned in to tickle the sensitive flesh with my breath. \n\n\"Oh you're killing me!\" she half moaned, half laughed. \"I'm already so fucking wet!\" \n\nShe really was. I could see the moisture seeping through her little panties, and the perfume of her arousal hit my nose. I teased the strip of silk down across her navel, just beneath the waistband of her underwear-then rubbed it back and forth across Tracy's sinfully bald public mound. \n\n\"Mmm,\" she moaned, grinning beneath the blindfold. \n\nI gave my beautiful lover a fleeting, one-second taste of the silk against her bare clit, then cruelly pulled it away to tease the supple nude flesh of her inner thighs. Her panties were soaked through completely. Droplets of honey poured down Tracy's legs, onto the bedsheets-the scent of her making me dizzy with desire... \n\nI couldn't resist. Leaning forward, I softly pressed the flat of my tongue against her sweet, dripping cunt and started licking. \n\n\"Oh god!\" she squealed, caught totally off-guard. I used my teeth to tug her delicate underwear down off her legs, then nibbled my way back up to her core-relishing the way her naked pussy kept drooling all over my face. Tracy's fabulous buttocks clenched again and again with every slow, delicious swipe of my tongue. \n\n\"Oh Shane,\" she moaned. \n\n\"You taste so good,\" I panted. \n\nMy hands snaked up beneath her nightie to grab onto those magnificent breasts. I twisted and tugged at the buds of her nipples, provoking a surprised shriek of ecstasy. \n\n\"Mmm! Yes! Oh god, yes! More!\" \n\nSensing that she was already heading towards an early climax, I backed my tongue off her cunt and moved it upwards, licking away at the silky smooth patch of skin where her public hair should have been. \n\n\"This is torture,\" she moaned. \"I wanna touch you, too!\" \n\nI pointedly ignored her, backing away off the bed. \n\n\"What are you doing? Where'd you go?\" she whimpered. \n\nI stripped myself naked, then circled around the bed, grinning at how Tracy twisted her blindfolded head back and forth to better hear what I was up to. \n\nI crawled over her horny, helpless body, then pressed the tip of my cock down onto Tracy's lips. \n\nShe yelped in surprise, but quickly went to work with bathing my shaft in happy kisses. A pearl of precum bubbled out from my tip, which I smeared around her mouth like lipgloss. \n\nTracy was all-to-happy to lick it off. \n\nThen, just as she was really getting into it, I pulled my cock away from her face and circled the bed once more, this time lining myself up between her widespread thighs- \n\n\"Holy shit,\" Tracy groaned, for the first time feeling the sensation of my bare penis pressing against the naked lips of her cunt. \n\nFinally, mercifully, I reached forward and lifted the blindfold from her brow. Tracy briefly met my eyes with her own, then dropped her gaze to where my out-of-control erection was poised to enter her willing body. \n\nShe bit down on her plump lower lip. The gossamer mesh of her barely-there nightie rippled from the the excitement of her breathing. \n\n\"Is this really... real?\" she asked. \n\nI stroked my cock back and forth around the outside of her cunt, coating it in Tracy's juices. \n\n\"Oh god!\" she moaned, throwing her head back in lustful frustration. \"Untie me!\" \n\nI held out for another minute, teasing her until it was absolutely unbearable-and then finally untied her wrists and ankles. \n\nTracy attacked me, pouncing like a hungry predator and swarming every inch of my body with desperate kisses. Her slick, swollen pussy rubbed against the length of my shaft-burning on contact-and her fingernails clawed at my my hair. Amidst the chaos, I slipped the shoulder straps off her nightie and let it drop around her waist-then smothered my face with her abundant cleavage and groaned. \n\nWe kissed-deeply and passionately-grabbing at every inch of sweaty, naked skin. Tracy's eyes welled up with emotion: \n\nThen I threw her down onto the bed and eagerly spread her legs apart with my thighs. Once again, the tip of my cock lined up perfectly with her entrance... \n\nWe'd endured three whole years of pent-up desire... \n\nOne hundred and fifty six weeks of fantasies... \n\nMore than a thousand days of non-stop lust... \n\nTracy's breath caught. Her heartbeat thundered. And then- \n\n\"Unh!\" she cried out, tears streaming freely down her face as I finally sheathed my entire penis inside the heat of her body. \n\nTracy whimpered. Her thighs clamped around my waist, drawing me deeper-and we both MOANED with pleasure. I withdrew slowly- \n\n\"Oh Shane,\" she panted. \n\nThen I slid back into her- \n\n\"Yes!\" she moaned. Tracy's hands grabbed at my hair, holding on possessively while she peppered my entire face with kisses. \n\n\"Tracy!\" I groaned, already thrusting into her with speed and passion. The flesh of my pelvis clapped loudly against hers. Our eyes locked together, blazing with desire- \n\nThen I ruthlessly brought down my lips and we screamed our pleasure into each other's mouths. \n\n\"Oh Shane! It's so good! Oh yes!\" \n\nI arched my back for better leverage, watching the way her huge tits shook with my every thrust. \n\nWe rolled over-her on top now-and my entire field of vision was filled with Tracy's wildly bouncing boobs. \n\n\"Fuck me! Fuck me!!\" she shouted, her voice rising to a high-pitched shriek. \"God, yes!\" \n\nMy hips hammered up into her, rattling the bed frame. Tracy collapsed forward, dropping her heavy bosom onto my chest as she clamped her teeth around my lower lip-drawing blood. \n\nThe shock of pain jolted me into action, and I rolled us both over again-spanking her ass hard in retaliation for the bite. Tracy yelped, but there was an obvious note of pleasure in it. Her eyes went crazy with lust, and her body writhed beneath mine-totally out of control. \n\n\"So good! So good! So go-o-o-o-d!\" \n\nMy whole world shrunk down, until it there was nothing else in it but Tracy: \n\nThe echo of her erotic, animal screaming. The view of her ample, shuddering breasts. And the grip of her exquisitely tight cunt. \n\nShe looked so fucking hot splayed out beneath me like that, I knew I wouldn't be able to hold back the volcanic eruption building throughout my body. \n\nShe tugged at her own nipples as I pistoned in and out. The girl's golden hair fell in a mess across her face, clinging to the light sweat on her brow. \n\n\"Shane, I'm so close! Oh god, I'm almost there!\" \n\n\"Me too!\" \n\n\"Unh! Unh! Oh GOD!!!\" \n\nThe volcano inside me became a raging, primal god. Tracy's voluptuous body spasmed beneath me, convulsing with cataclysmic shock waves of pleasure. She arched her back so hard I thought she'd break in half, and those mouth-watering tits swung up at my face- \n\n\"Aah!\" I wailed. Unable to hold myself back, I grabbed hold of her huge, naked boobs-squeezed- \n\nAnd that volcano inside me blew itself to pieces. My every muscle clenched like a fist as I poured myself into Tracy's still-climaxing body, over and over again. She clawed at the bedsheets, eyes scrunched shut tight beneath an unbearable avalanche of bliss. \n\nEver so slowly, the fog cleared. We floated back down to earth, two limp bodies entwined, our lips pressed reassuringly together. \n\n\"I love you,\" she moaned. \"I love you so much.\" \n\nMy cock was still hard inside of her. My vision blurred, and the room spun circles around me once more. \n\n\"I... Jesus, Tracy,\" I sighed. \"I love you, too.\" \n\nMy words sent a final, orgasmic aftershock through her body. \n\nI was still only half aware, but I knew that what we'd just said was absolutely true. Wonderfully, terribly, incredibly, horrifyingly true. I loved this girl, just as surely as I loved my own wife. \n\nWhatever that meant for the four of us, one thing was certain: \n\nThere was no going back. \n\nTo Be Continued..."
    ],
    "authorname": "bosombuddies",
    "tags": [
        "blonde",
        "big tits",
        "latina",
        "christmas",
        "xmas",
        "swinging",
        "swapping",
        "friends",
        "blow job"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-double-date-that-didnt-end-ch-05"
}