{
    "title": "Mr. Lucky",
    "pages": [
        "I feel I need to thank of_ones_own_volition for her time and hard work. For her to read and correct the crazy shit from my fermented brain, must have surely been painful. Thanx again\n\nLYG\n\n*\n\nI've always been told what a lucky son of a bitch I am, but I don't think so! I've lost at everything that I've ever done. If I buy a car, it's always a lemon. Every girl I've ever looked at has left me for another guy. I just can't catch a break. The only relationship I can hold onto is with a computer.\n\nWhen I was in high school, I was that guy. You know the one that had his underpants run up the flagpole about once a month. Yeah, I'm the one you shoved in his locker and left him there. I know you did it. Every goddamned dirty trick in the book was pulled on me. Hell, they could call that book my biography.\n\nCollege was about the same; a girl approached me one day about helping her with an English paper. As we talked, I felt a shadow fall over me. I thought for a second that the sun had gone down. No such luck because it turned out to be her 300-pound boyfriend. Yeah, he was some big name on the football team. He smiled at me and the lights went out. I woke up about a week later in the hospital.\n\nI hurt like hell, but at least I was alive... pretty lucky huh? I thought so to at the time. I got to lie around in bed all day and have pretty nurses fuss all over me. I got these really keen sponge baths, and they even woke me up to take a sleeping pill a couple of times, how considerate of them.\n\nOne morning while I was still sleeping, two big guys put me on a gurney and rolled me away. I woke up in time to see someone put a mask on my face. The next day I found my left testicle had been removed. 'Oh, just a little mix up,' the hospital said. My dad told me how lucky I was they didn't remove them both. Yeah, real fortunate.\n\nSome other guy was getting my sponge bath while I got his surgery.\n\nLife always has a way of getting a little payback. Anytime things were going well for me, Karma, or whatever you want to call it, would kick me in the nuts. In my case I guess I should say nut.\n\nAfter college, I had a good streak going for about 3 years. I got a great job in computers and bought a nice house. The money was great, so what's to worry about you say? That's what I thought too.\n\nMaybe all that bullshit is behind me and maybe I really am a lucky guy.\n\nLana started work in my department as a secretary. She wasn't particularly special but attractive her own way. After a few months of working together she asked me,\"Is there something wrong with me, Jim?\"\n\nThat's me, Jim. I won't tell you my real name. It's been changed for this story to hide my stupidity.\n\n\"I don't understand what you mean, Lana?\" I replied.\n\n\"I've worked with you for three months and you hardly talk to me,\" she continued.\n\n\"I'm sorry Lana, I didn't realize it, and I guess I don't socialize very well,\" I mumbled.\n\n\"Are you shy?\" she inquired.\n\n\"A little, I suppose.\"\n\n\"Do I scare you?\"\n\n\"Everybody scares me.\"\n\n\"What do you mean?\"\n\n\"It's a long story.\"\n\n\"Do you want to tell me?\"\n\n\"Lana, do you always ask so many questions?\"\n\n\"No, not always.\"\n\n\"I am starting to feel like I'm on the witness stand.\"\n\n\"I didn't mean for it to come out that way, I'm sorry.\"\n\n\"It's OK, Lana.\"\n\n\"Well, do you Jim?\"\n\n\"Do I what?\"\n\n\"Do you want to talk about it?\"\n\n\"Uh, not really.\"\n\n\"OK Jim, it's up to you.\"\n\nThis kept on for a couple more months. Lana seemed to ask me an awful lot of questions. I almost started to avoid her. From your perspective it might look like Lana is trying to hit on me. Me, I just kept looking over my shoulder. Something bad was going to happen, something real bad. The dark clouds were forming over my head and I knew it.\n\nOne morning she cornered me in the hallway.\n\n\"Jim, I have been trying to talk to you for months now. I finally see what's happening, and you're just too shy to ask me out.\"\n\n\"Lana, that's not it...\" She cut me off.\n\n\"If you won't ask me, then I'll just put an end to this silly crap.\"\n\nI thought for a moment, this might be the end to her chasing me.\n\n\"I want you to pick me up at Friday at 7pm and I won't take no for an answer.\" And she walked away. \"Shit,\" I thought, \"what do I do now?\"\n\nI surely didn't want to hurt her feelings, but what about me? My life is going well at this point, why fuck it up and tempt fate? Man what a lucky guy.\n\nDoom! That's the way I felt all week waiting for Friday. Any other man would be jumping for joy, but not me. I just had to suck it up and see what would happen.\n\nAs I approached her door at 7 o'clock, right on time, I felt a pain moving from my belly to my chest. Fear, that's what it was. I've had this feeling before but not this bad. I rang the bell and knew it was too late to run.\n\n\"Right on time, Jim,\" she said as she opened the door.\n\nMan, what a difference. This couldn't be the same girl. She was a total babe, true playboy material. What a difference a little make up and a sexy dress made. I tried to be cool, what would you do? Probably not what I did next: I clutched my stomach and threw up on her porch step. That was real smooth and sophisticated.\n\n\"Jim, what's wrong? Are you sick?\" She pulled me inside.\n\n\"No, I'll be OK.\"\n\nShe sat me on the sofa and went to the kitchen. My head was reeling, why did I come here? Oh shit, this feels like the worst day of my life, and I have experienced some bad days. She returned with a wet cloth. Lana straddled my legs facing me, and wiped my face with the cool cloth. It felt so good. I just sat there with my eyes closed relishing the cool feeling of the damp towel. She continued to dab the towel on my face and stroke my neck and face. Goddamn, it was really starting to get hot, I mean really fucking hot. Her other hand began to rub my chest. My pants were starting to get very uncomfortable, and I was getting hard. Lana was grinding on me now and I was sure I would pass out.\n\n\"Oh Jim, I think you're feeling better now. I know I am,\" she said with a wink.\n\n\"Lana, I'm sorry!\" I tried to get up.\n\nShe was not going to let that happen. She wrapped her arms around my neck and kissed me. Covering my mouth with hers so hard that I couldn't breathe, the rocking of her hips became faster. Our breathing was fast, and she shoved her tongue down my throat. My hands were on her perfect ass pulling us together faster and faster.\n\nLana was sucking on my neck, painfully so. I've felt a lot of pain in my life but none like this. She bit down hard and began to moan deep in her throat, like a lioness on her prey. \n\nShe suddenly let go and jumped off me. Not a word was spoken, and I stared at her in awe. Lana tore at my belt, like a child opening presents at Christmas time. My jeans and boxers were at my feet before I could say a word. Truly, nothing had ever happened to me like this. Her dress was over her head in one swift motion. She literally dove for me and had my cock in both her hands kissing the head. Her mouth covered the head as she stroked with her hands. She bent lower and took my ball in her mouth, tilting her head with a confused look in her eyes.\n\n\"I'll explain later,\" I groaned.\n\nMy rod seemed to be getting harder at every heartbeat. In one quick move she was on me sliding her panties to the side. Lana rode me hard, pushing in fast and pressing her clit against my shaft on the way out. Over and over she grunted as she fucked me. She was in control, and I could have been dead as long as my cock stayed hard. I was feeling like a human dildo. Her attack on my cock went on and on, as I was still getting harder, I felt like it was going to burst. Finally she moaned.\n\n\"I'm cumming Jim, I'm cumming. Cum with me now, Jimmy. Unh! Unh!\"\n\nWe were covered in sweat. She pounded back and forth and tensed, her eyes were closed, her face contorted in what looked like pain for about two minutes. Her wet pussy was gripping my shaft like a vise. She collapsed on me in a shivering mass. Her breathing was deep and exhausted. She fell asleep on top of me. You're probably thinking man what a lucky S.O.B. As if!\n\nLana woke in an hour or so, still perched upon my throbbing aching dick. We had fucked for over an hour, and my dick had been hard for over two. The pain was almost unbearable. Lana smiled at me and asked.\n\n\"Are you hard again already?\"\n\n\"Still!\" I said as I passed out in agony.\n\nMy eyes finally opened Monday around noon. I awoke to unfamiliar surroundings. The bright light made my eyes feel like they were full of sand, and I may have swallowed a few handfuls as well.\n\nTrying to get my bearings, a nurse entered the room. Shit, I'm in the hospital again? What the hell had happened, I couldn't remember a thing.\n\n\"Well, you're alive, aren't you?\" she said.\n\n\"I suppose so, but why am I here? What happened to me?\"\n\n\"Your girlfriend had to call 911. She told the paramedics you had fainted after, um, well... anyway, you've had emergency surgery, and the doctor will tell you more when he comes to see you later.\"\n\n\"Girlfriend? Oh my god, Lana. Surgery? Oh fuck, dear god please no.\" \n\nI lifted the sheet carefully and peered beneath it. My crotch was taped and bandaged. I must have flipped out. They had to sedate and restrain me.\n\nThe Doctor came to see me later that evening to explain what had happened. It seems that during my previous testicular surgery, some blood vessel and nerve damage had occurred. The problem hadn't surfaced earlier, but with the pressure and contractions of Lana's pussy, one of the blood vessels or arteries had acted like a one way valve and let the blood flow in but not out. That's why my dick seemed to get harder every minute. There was too much blood, and that pressure had caused the lack of sensitivity and pain. The Doctor told me the damage wasn't too severe but they had operated on me to correct the damage.\n\nThe good news was that he felt my sex organs would recover. The bad news was he wasn't sure of the outcome. With my condition that none of the doctors had seen before, they had tried some new techniques and added larger vessels for greater blood flow. He went on to tell me that the healing would take quite a while because of the massive amount of cutting and stitching they had done. Yeah, who's lucky now?\n\nThe next day, Lana came to see me. She looked like the Lana that I worked with, not the Lana that had tried to fuck me to death. She brought a few magazines and some candy. We talked a while and she kissed and hugged me.\n\n\"Jim, I bet you can't wait to get out of here? I'm going to take you home and care for you until you're on your feet again. I can hardly wait until you heal. I want to feel you inside me again so much,\" she cooed. \"You fucked me like an animal that night. No one has ever made me feel that way.\"\n\n\"I didn't fuck you, Lana.\"\n\n\"Then what would you call it?\"\n\n\"Lana, you fucked me.\"\n\n\"No Jim, you fucked me till I nearly passed out. Where did you learn to do that?\"\n\n\"I didn't learn that, Lana. I'm a virgin or at least I was last Friday.\"\n\n\"You have got to be joking? There's no way!\"\n\n\"It's true, I have never been with anyone but you.\"\n\nThe Doctor entered the room just then. He asked how I was and told me he wanted to look at my incisions to see how they were healing. Lana asked if it was all right to stay, the doc told her it was up to me. I agreed, so the doctor removed the bandages. I wasn't sure what to expect but it sure wasn't this. My dick looked like a black and blue bratwurst that had been in a fight with a sewing machine. The Doctor said, \"hmm,\" Lana turned away in horror and I passed out. What would you have done? What would you think if you found Frankendick between your legs? Oh my god. \n\nI woke a few minutes later to find the doc discussing my condition with Lana, as if I wasn't in the room. They talked about the healing time and the recovery and her pretty hair and where they were going to have dinner. I just didn't care so I went back to sleep.\n\nMy dad came to see me later that evening. He didn't bring mom so that way, we could talk. I'm sure lucky for that at least, that I didn't have to talk to my mom about my genitals. Dad and I chatted for a while and I explained what little I knew about the surgery.\n\n\"Well son, you're pretty fortunate, you still have your other testicle.\"\n\n\"Yeah dad, you're right, I feel real fortunate,\" I said, with as much sarcasm as possible.\n\n\"You rest up son, I'll come and see you soon and bring your mother next time. You know how much she worries.\"\n\n\"Sometimes I think she has every right to worry. Dad, why does this shit always have to happen to me?\"\n\n\"I don't know, someday things will change.\"\n\nWell, they didn't change that day. As the nurse with the big boobs was giving me a bath, I felt the first twinge in my mangled prick. Then the pain hit me like a freight train. As I started to swell, I was overcome by pain. I can't describe to you the feeling. It hurt so much all I could do was scream like a frightened little girl. It was decided, I was to be kept in a coma like state for a few weeks to let me heal. The doc felt we shouldn't risk another erection for fear of tearing out any more stitches.\n\nI was in a haze most of the time. I would dream sometimes, but the dreams were usually bad. Sometimes I would dream of Lana. I would dream of her kissing my Doctor. Other times he was fucking her in the bed next to me. I even dreamed of their wedding happening in my hospital room.\n\nWeeks later, I was brought out of my drug-induced stupor. My first thought was Lana. I really didn't expect to see her and I didn't. She had simply stopped coming by. My recovery was met with few complications, and I was released after a 5-week stay. I didn't try to contact her. She was never really my girlfriend. I just let her go.\n\nI was back to work the next week. Boy, had things changed around here. My first task was to go through all of my messages and emails. When I was about half way done, I found a memo to all employees concerning the retirement of my department supervisor. Shit, I had been in the hospital and now missed the chance for promotion. A few memos later, I found out whom I'd be working for. No! Anyone but that bitch, please dear God let this be a typo. Jill fucking Jennings... my luck was holding as always.\n\nGo to your encyclopedia and find the letter C on the outside. Open it up to the word 'cunt'. I bet you'll find Jill's picture. She is the nastiest person I have ever met. You know the type, mean and nasty with the personality of a cactus. She has absolutely no clue what we do here. And you guessed it; she's an absolute knockout. Long blonde hair, the face of an angel and a body just built for sex.\n\nShe also uses every one of those assets to further her career.\n\nI now felt like all the other bad times of my life added together didn't equal what it would be like working for Jill. Fuck me. And if all this wasn't bad enough, there she stood in my doorway.\n\n\"James, I want to see you in my office at 12 o'clock. We will go over what is expected of you then.\"\n\nGoddamn her, now I will have to miss lunch. That bitch did this on purpose. I won't go into details because frankly that meeting still pisses me off to think about it. Let's just say she talked and I listened. For three hours I listened. Exactly as I expected, I was to do all the work and she was to get the credit.\n\nAs I walked out of her office, I briefly considered quitting. I didn't know how I could work for her. In a short moment of clarity it came to me. This bitch was going to pay, and she would pay dearly for screwing with me. I didn't have a plan yet, but it would come to me soon enough.\n\nI did just enough to get by at work. I wouldn't bust my ass for her and she knew it, but she needed me. She needed me because without me, the financial models would have to be checked by hand. That would require 5 more people than we had, and take months longer. To go to the boss and tell him this would be suicide. She soon realized I had her ass over a barrel. She didn't dare treat me the way she treated the other geeks in the department.\n\nI went to my Doctor for a final check up. He took me off the anti-depressant medication and told me that Frankendick should be functional in a week or so when the meds wore off. He wasn't sure how well my erections would workout for me, but encouraged me to try to have sex or masturbate. This was all new to us so he gave me a sample of Viagra in case I couldn't perform properly and then he asked me to come back in a month.\n\nWell, the only woman I'd ever been with was gone, so my options were reduced by half. A week later I rented a few porno videos and went home for a test drive of my new and improved dick. I was apprehensive at first but to my surprise, I had a hard on in no time.\n\nI drank a few beers to relax and stroked my self for about 15 minutes. As I became more aroused, my dick seemed to grow. I might have been a little drunk, but my cock seemed a few inches longer. I hadn't felt this good for a long time. As I was soon to discover, the hornier I got the bigger my joint became. I tested it to the limit that night. My new best buddy sure got a workout.\n\nJill was becoming increasingly stressed at work. It was apparent that the pressure to complete projects with little help was wearing her down. The bitch deserved everything she got and more. After one particularly long day, I was leaving the office when I heard her crying at her desk. Just to rub a little salt in her wounds, I went to her office and stood in the doorway. She looked at me with tears running down her cheeks.\n\n\"What do you want?\" she spat at me.\n\n\"Not a goddamned thing,\" I smirked.\n\nI turned to leave. After I had taken a couple of steps, she called out to me, \"Jim.\" I stopped but didn't turn to face her. There was a moment of hesitation. \"I'm in trouble, I need help.\"\n\nA smile covered my face. This was it, now she had admitted she needed me. I had her by the short hairs and it was time for payback. Slowly I turned to her, and my smile now was more of an evil grin. I waited for her to speak.\n\n\"Please Jim, the board meets next week and they want me to make a presentation on the Benson account.\" She looked away, avoiding my eyes. \"You know I can't do it, don't you?\" I didn't speak. This was her problem. I wouldn't make it any easier for her.\n\n\"Jim, the whole department will look bad if I screw this up.\"\n\n\"No Jill, you're the boss. You're the one that will look stupid.\"\n\n\"Please Jim, could you help me?\"\n\n\"After the way you treated us, why would I do that?\"\n\n\"We might all lose our jobs if this goes badly.\"\n\n\"Oh come on Jill, this department was a team before you took over. The board is testing you not us. You're the one to take the fall if you fuck up, not us. Just grow up and admit it for once.\"\n\nShe knew I was right, you could see it in her eyes. But the question was would she admit it? Would she beg me to help her?\n\n\"Can't we talk about it?\"\n\n\"What is there to talk about, Jill? The way I see it, when you get fired, I will get your job. What could you possibly offer me to convince me to bail you out?\"\n\nJill could see it clearly now, but how far would she go to save her own ass? We'll see. I half expected her to throw me out of her office.\n\n\"What will it take Jim? I'll do anything. I really need my job.\"\n\n\"Anything?\" I asked.\n\n\"Anything,\" was her answer.\n\n\"I'll let you know my answer in the morning.\" I walked out. I was going to let her stew overnight. Let her be the one that really didn't want to come into work in the morning. I would sleep well that night, not her.\n\nI was at my desk the next day when she came to see me. This was going to go my way. I wanted to be in my office, so she wasn't sitting on her throne looking down on me. I asked her to close the door and sit down. I knew she was very anxious, so I let her speak first.",
        "\"Well, did you think about what I said?\"\n\n\"Yes Jill, I did. But I'm still not sure I would like to help you. When you said you would do anything, is that what you really meant?\"\n\n\"Yes Jim, anything is what I said.\"\n\n\"How can I trust you?\"\n\n\"Jim, I may be a lot of things, but I don't lie. I need this job.\"\n\n\"If you agree to all my terms, and I do mean all of them, then I will help you.\"\n\n\"Just tell me what to do.\"\n\n\"The first thing I want is for you to stop acting like such a cunt. Start treating us fairly and with respect. This is actually to your advantage, and you will find if you treat us right, we will work for you and not against you. Don't micro-manage, we know our jobs.\"\n\n\"Is that all?\"\n\n\"Oh no, it's not going to be that easy. Remember Jill, if I sit back and do nothing; you're the loser, not me. The next thing I want is for me, and is not negotiable.\" I let that part sink in for a minute. \"I want you, for one week. Anything I want, anywhere I want, for a full week.\"\n\nThe look on her face was priceless.\n\n\"You don't mean sexually, do you?!\"\n\n\"I mean anything I want, Jill.\"\n\n\"This is blackmail.\"\n\n\"Call it what you like, that's my price. The choice is up to you.\"\n\n\"I don't think I can do it.\" She was stunned.\n\n\"Your choice; now, if you don't mind, I have a lot of work to do,\" and I dismissed her.\n\nI'm sure she thought about firing me, but what would happen to her then? She didn't have many choices and I didn't care. She asked to see me after lunch. \n\n\"Jim, can't we discuss this? Is there something else I can do for you?\"\n\n\"No Jill, this is what I want. This is the price for my help.\"\n\n\"I could pay you... I have a little money saved,\" she pleaded.\n\n\"No, I don't want your money, I want you.\"\n\n\"When do I have to do it?\" she asked, resigned to do as I wished.\n\n\"You will come to my house Friday after you return from Denver. Bring what you will need for the week.\"\n\nI handed her an envelope with every thing she needed to look like a star at her meeting. She had caved in. I left her office as she sat in defeat. I bet you are wondering how my world was going to collapse around me now, the way my luck runs. You know it's funny but I didn't think about that at all, because I just didn't give a fuck what happened.\n\nThe next week at work was nice and calm with Jill out of the office. She called a few times to check in and ask a couple of questions about her slide show. Thursday, right before 5 o'clock, my phone rang and it was Jill.\n\n\"Jim, I'm sorry to bother you, but I just had to call. Thank so much for your help. Everything went perfectly and they were all very impressed.\"\n\n\"I'm glad you called Jill, I really am happy for you.\"\n\n\"I know Jim. That's why I called. Last week when you gave me the envelope I didn't trust you at first. When I reviewed the material, I realized how much effort you had put in and I felt ashamed for not trusting you. I don't think I would have done the same for you. I called to let you know how sorry I am for that and the way I have treated everyone in the office. Can you forgive me?\"\n\n\"Shit Jill, I never expected this, you sound almost human.\"\n\n\"I'm sorry Jim, and I haven't forgotten our deal. I'll see you Friday.\"\n\n\"Goodbye Jill.\"\n\n\"Goodbye Jim, see you soon.\"\n\nThings were not shaping up as I had seen them. Jill's attitude had changed. I thought about how I had planned to fuck her until she begged for mercy. I was sure she didn't want to go along quietly, but she seemed almost willing now. I was going to take her by force if necessary, but the way she sounded to me on the phone, it was as if she was looking forward to our meeting.\n\nThe next day when I arrived home, Jill was waiting for me. She walked up, and wrapped her arms around me.\n\n\"You're early Jill, I didn't expect you for a few more hours.\"\n\n\"Yeah, I caught an earlier flight. I just couldn't wait to see you, and thank you for what you did. Jim, could we go inside now? I need to talk to you for a few minutes and then I will be ready to repay my debt to you.\"\n\nShe took my right hand, and I carried her bag in the other. We went directly to the couch and sat down.\n\n\"Jim, this is will be difficult for me to do. Please let me get it over with before you ask any questions or interrupt.\"\n\n\"OK, if that's what you want.\"\n\n\"When you saw me crying in my office last week, I knew for sure I would be without a job by today. Even after you offered me a way out, I didn't trust you. You could have stuffed a bunch of bullshit into that envelope, and I wouldn't have known the difference. I checked the charts all weekend trying to figure it out but it was way over my head. All week long I was so confused, wondering how did I get into this position? After a lot of soul searching it finally dawned on me, it was my fault entirely. I had created my own mess.\"\n\nJill was nearly in tears. I went to the kitchen and poured some wine. She could probably use a drink. Hell, I knew I could, she was getting under my skin now and I didn't like it. She regained her composure as she sipped the wine. I still hadn't spoken when she continued.\n\n\"Jim, when I asked you to help me, you had every reason in the world to turn me down. But you didn't. The conditions you imposed shocked me at first but after much thought, I realized I really had treated everyone like shit, and I couldn't give myself any good reason to have done so. I know that I'll try my best in the future to respect people more. Jim, I truly apologize to you and will also express my sorrow to the entire staff.\"\n\nJill then asked for another glass of wine. When I returned, she went on.\n\n\"When you told me you wanted me for the week, I tried to come up with a way to get out of it. To be honest Jim, I was sure I could talk my way out of it. I thought I would pay you off or simply fire you, before I would actually do it. But by the time my meeting with the board was over, I came to the conclusion that you were acting in good faith as it were, and I had agreed to it after all. What I'm trying to say is that you could have easily screwed me over, but you didn't. You held up your end of the bargain, and I'll do the same. Jim, I'm here for you, anything you want, and I'm yours.\"\n\nWell shit, if this wasn't the fucking icing on the cake. I'd planned to fuck Jill to humiliate her. I was going to get my revenge on her for every single shitty deed she had pulled. Can you believe this shit? She had just apologized to me and would be a willing partner to whatever I wanted. Fuck, this isn't revenge now. It's consenting sex, and that wasn't what my plan was about. You probably think I'm out of my mind. I have an absolute babe sitting in front of me that is willing to give me herself without reservations, no-holds-barred, and I'm pissed off about it.\n\n\"Jill, could you just go now?\" I said as I slumped in my seat.\n\n\"Jim, what's wrong? I thought you wanted me. I'm here just as you asked.\"\n\n\"Goddamn it Jill, this it not what I asked for. I was going to take you, I was going to... never mind.\"\n\nI'm sure my face was turning red, I was boiling mad inside. Jill, without knowing it, had come up with a way to get out of our week together. Just my luck!\n\n\"I don't understand Jim? You can still take me. I'm yours. Do anything you want with me.\"\n\n\"That's the point exactly Jill, I was going to do things to you, not with you. I can't do that now that you're so willing, and being nice to me. Please just go away.\"\n\n\"What kind of things were you going to do to me?\"\n\n\"I was going to fuck you until your eyes bugged out. I was going to cum all over your face and hair. I was going to shove my dick so far up your ass that you could feel it in your throat.\"\n\n\"Ooh, that sounds like fun, Jim!\"\n\n\"I was going to eat you out until you begged me to stop. I would tie you down and twist your nipples until you cried with pain.\"\n\nI looked over to Jill, and she was rubbing her crotch with both hands now. Can you fucking believe this shit? I was explaining to this woman how I would basically rape her, and she was getting off on it. This is some real sick shit. If a busload of naked midgets ran into the room, I wouldn't be surprised now. This was definitely not what I had planned. Jill was on her knees in front of me now. Fuck, she was going to use me as Lana had. Like a wanker, I just sat and watched. \n\nJill tore my clothes off in seconds. I was now naked on the couch with only my black socks on. Do you have any idea how stupid I looked? She stood and did a slow grinding strip for me, first her dress, then her beautiful lacy wonder bra. She danced to her own music. Yeah, Frankendick was awake now, you can bet your ass on that. As she noticed my growing cock, she went wild like she had won the lottery.\n\n\"My god Jim, you are magnificent. Oh yes, we're going to have fun this week, I promise you.\"\n\nShe took my dick in her hand and pulled me to the bedroom. Jill jumped on the bed and rolled to her back. Her legs were together pointing to the ceiling. Peeling her panties off her luscious ass, I got my first glimpse of her hairless pussy. I shot my first load over her stockings and garter belt, right then. \n\n\"Did I do that?\" she giggled, in a little girl voice.\n\nTo her amazement, I didn't go soft. Actually, I grew bigger as she rubbed my cream over her beautiful ass and puffy pink gash.\n\n\"Hurry Jim please, I need to feel you inside me now,\" she begged.\n\nI didn't need any extra coaxing, and I was between her legs in a heartbeat. I bottomed out before I was in all the way. It didn't take me long to realize that this was going to be special. My dick was too long for Jill, but she didn't back down a bit. I was giving it to her as hard as I could and she asked for more.\n\n\"Oh god yes, yes, yes Jim, fuck me. Ooh, fuck me, fuck me hard. So, so good. Make me cum, do it Jim, ooh yeah baby, make me yours.\"\n\nAnd I did just that. I pounded her for an hour solid. Her first orgasm took a while, but by the time I let go, she was on a constant buzz. We were covered in sweat and cum and the bed was soaking wet.\n\nAfter she caught breath, she hopped off the bed and pulled me to the bathroom. We got in the shower, but curiously she didn't turn on the water.\n\n\"What are you doing, Jill?\"\n\n\"I want you to piss on me.\"\n\n\"What did you just say?\"\n\n\"Just do it, I want to be your dirty girl.\"\n\nJill was kneeling in front of me, beautiful and vulnerable, asking me to pee on her. No, I wouldn't have believed it either, if I hadn't been there. She held me and directed my stream all over tits and stomach. She then leaned back as far as she could and aimed the yellow spray at her pussy. With her free hand, she rapidly rubbed her clit, and soon she was shooting a large volume of urine back at me. Truthfully, I had never even considered doing anything as kinky as this. Suddenly this all became so ludicrous that I started to laugh. Soon we were both laughing so hard that I slipped and fell right on my ass, still in those freaking black socks, by the way. There we were in the tub covered in sweat, piss, and semen laughing our asses off. It struck me that I'd never had this much fun in my entire life.\n\nWell, the week of debauchery came to an end after 7 more days of sex and fun. I never did get revenge on Jill. I've got to tell you tough, I'm not sorry now. That week was the time of both of our lives, we had agreed. As I watched her walk out the door, I felt sadness. Jill turned and saw my face.\n\n\"You really didn't think I was going to let the best fuck of my life go that easy, did you? I'll be back in two hours with the rest of my stuff. Can you make room in your closet?\" Jill asked.\n\nDo you believe this shit? I was there, man, and I can't. So maybe my dad was right and my luck will change. Well, I married the bitch, so who's lucky now? "
    ],
    "authorname": "leapyearguy",
    "tags": [
        "revenge",
        "lucky",
        "hospital"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/mr-lucky-1"
}