{
    "title": "Shadow Dagger Ch. 20",
    "pages": [
        "With no further delay, after 1 year, 3 months, and 15 days, I present to you, the finale of Shadow Dagger.\n\n***\n\n\"Something's wrong,\" Ashford whispered, as he peered around the corner of the hallway. \"We're almost back to the entrance and we haven't seen anybody. Where are the servants? Where's that guide that led us here? Where are the guards?\"\n\n\"I don't know,\" Jon replied. He turned the corner and continued walking toward the entrance. He, too, sensed something amiss. He had a bad feeling that they were about to find out.\n\nThey turned the corner of another hallway and finally spied the entrance doors. \"Thank the God,\" Ashford breathed.\n\nJon held out his hand to stop Ashford. \"Be careful,\" he whispered. \"Be ready to use your magic at a moment's notice.\"\n\nAshford nodded and they continued toward the doors. Jon held his hand over his eyes as they emerged into the baking sunlight.\n\nThey walked straight into complete and utter chaos.\n\nScreams of pain and rage sounded through the city as warriors swarmed everyone Jon could see. He prepared to take hold of his magic but they didn't seem to be in danger yet.\n\n\"My God,\" Ashford whispered, as he took in the sight that greeted him.\n\nAcross the street, Jon saw two warriors grab what looked to be a normal citizen of Oasis by the arms. A third warrior plunged his sword straight through the man's chest. The warriors tossed the body aside and ran down another fleeing citizen.\n\n\"Chieftain!\"\n\nJon turned toward the voice. One of his new lieutenants was struggling through a mass of people to get to him. He casually swatted aside a sword and plunged his own sword in and out of the warrior's neck. He ran up the stairs to the palace and stopped before Jon.\n\n\"What is this?\" Jon demanded.\n\n\"Chieftain, when you went inside the tribesman of the Cheetah started attacking! And what's more, they had Magi with them!\" The man's eyes were wide with fear and shock. The fact that it was on the face of a Raves warrior was very unsettling.\n\nJon rubbed his chin. \"What's your name again?\"\n\n\"Telez,\" the man panted. He looked around at the carnage in the city and shook his head. \"I can't believe it. I can't...\"\n\n\"The goddess was a Magi,\" Jon told him, struck by a sudden moment of inspiration. The situation around him had provided him the perfect cover story. \"So are several of her people. The Cheetah wasn't the only tribe to attack, were they?\"\n\nTelez's mouth gaped in shock to hear that his goddess was a Magi. Then his eyes narrowed in anger and he spat to the side. \"No, Chieftain. After the Cheetah starting attacking, members of each tribe join them. We were almost overrun at the start by the sudden appearance of Magi in our midst.\"\n\n\"Almost overrun?\"\n\n\"Yes, Chieftain.\" Telez grimaced and spat to the side again. \"I'm not so proud to admit we would have been quickly put down if the Cheetah's own tribesman didn't turn against them.\"\n\nThat opened Jon's eyes in surprise. \"The tribesman who stared at us blankly when we walked in?\"\n\nTelez nodded. \"They ran into their houses when the fighting started. It wasn't until just a few minutes ago that they poured out of their houses, wielding weapons and screaming like demons. I still can't believe what I saw.\"\n\n\"A few minutes ago,\" Ashford whispered by Jon's ear. \"Just when the goddess died.\"\n\nJon nodded. \"What's our situation, Telez?\"\n\n\"We just about have them put down, Chieftain. They're falling back to the base of the cliff.\"\n\nJon gestured to the bodies on the ground nearby. \"Some of those bodies look like the tribesman you described as helping us out.\"\n\nTelez shifted uncomfortably. He glanced up at Jon's face and looked away quickly. \"The men may have gotten carried with the purge,\" Telez admitted.\n\nJon took a step toward him. He kept his voice cool and under control. \"I hope the men will soon come to their senses,\" Jon said quietly.\n\nTelez nodded quickly. \"Yes, Chieftain.\" He turned to leave but Jon grabbed his arm.\n\n\"The Magi have infiltrated Raves in preparation for this moment,\" Jon said. He let his anger enter his voice. \"They used me as a pawn to unite the tribesman so they could all be slaughtered at once.\"\n\n\"They infiltrated us?\" Telez repeated, shaking his head. \"Why?\"\n\nJust then, a group of warriors broke off from the fighting and charged up the stairs toward them. One man in front had silver eyes. He raised his hand and started weaving his fingers in the air.\n\nJon had no choice but to embrace his magic. If anybody saw him, he would just have to fight his way out of the city. Luckily, he was spared that as a sword suddenly burst out of the man's chest.\n\nJon saw more of his lieutenants swarm around the attacking group. They quickly put down every warrior among them.\n\n\"Chieftain!\" Several of them waived their swords in the air and roared their defiance.\n\n\"Gather all the lieutenants,\" Jon ordered Telez. \"Have them grab their horses and all of their supplies. And give the command to stop killing the tribesman.\"\n\n\"Yes, Chieftain,\" Telez answered. He jumped down the stairs and ran toward the group waiving their swords.\n\n\"What are you planning?\" Ashford asked, stepping up next to Jon.\n\n\"We need to get to Astuari as quickly as possible,\" Jon replied. He motioned Ashford to follow him. He hurried down the steps and sidestepped the bodies littering the street. \"I'm taking my lieutenants with me. Five hundred warriors will come in handy.\"\n\n\"That's going to take a while,\" Ashford said. \"We can't use magic to speed up the horses. Not even you could maintain that spell for long.\"\n\nJon stopped walking and turned toward Ashford. \"That's why I need you to go ahead of us.\"\n\nAshford sighed. \"I thought you were going to say that. Jon, we both know it's you that needs to go. I'm nowhere near as powerful as you. You won't make it in time with your lieutenants following.\"\n\nJon reached out and gripped Ashford's shoulder. \"The men would never follow you, Ashford. I have to lead them. I will push the horses as hard as I can. I will make it on time.\"\n\nAshford finally nodded and then smiled. \"Is there any message in particular you want me to deliver when I make it back?\"\n\nJon took his hand off Ashford's shoulder and looked away. The square around the palace was now eerily quiet. He could hear the sound of battle growing more distant.\n\n\"Just make sure Sophina knows what Reynar is planning to do,\" Jon said quietly. \"Hopefully, everything has gone smooth on her end. She should be waiting with Peron's mercenaries. And if Evelyn gives birth before I make it back, make sure she knows what she has to do.\"\n\nAshford stepped close to Jon and gripped his shoulder in turn. \"Is there anything else you want me to relay?\"\n\nJon turned to look at Ashford's face. He smiled. \"That's none of your business.\"\n\nAshford chuckled. \"Have it your way.\"\n\n\"You're my friend,\" Jon said suddenly, before Ashford turned away. \"I don't know if you know that or not. But you have become one of the first true friends I have had in many years.\"\n\nAshford blinked several times before turning his head. \"And you're my friend,\" he said, gruffly. \"For someone who has lost all of his friends recently...\"\n\n\"Say no more,\" Jon said. He grabbed Ashford's hand and squeezed. \"The God be with you, Ashford.\"\n\n\"And you, Jon.\"\n\nAshford squeezed Jon's shoulder one last time and walked away. He stopped suddenly and turned to look back at Jon. \"Don't tell Istas I left until long after I'm gone, okay?\"\n\nJon struggled not to grin. \"Sure,\" he said. He wasn't quite able to hold back the laugher in his voice.\n\nAshford mumbled under his breath and began walking away. Telez and the other lieutenants were riding toward them, leading Jon and Ashford's horses.\n\nJon would have given anything at that moment to know for certain that he would see Ashford again.\n\n***\n\nEvelyn sat quietly by the window in her bedroom and stared wistfully at the lazy blue sky. She wished she could be outside enjoying the beautiful weather. She patted her bulging stomach and sighed.\n\nIn less than a month's time, I went from barely a bump to a full blown pregnancy. What is this child?\n\nEvelyn shook her head. Nothing made sense anymore. She had barely started getting use to the idea that she was pregnant before swelling up over the past few weeks. The child seemed to be in an awful hurry to leave her womb.\n\nSomething's coming, Evelyn thought worriedly. Somehow, her child could sense it. She couldn't deny it anymore; her unborn child was aware of the outside world. It frightened her like nothing else ever had.\n\nAnd I can't even properly use magic anymore! This pregnancy has made that all but impossible. What am I to do if I'm attacked?\n\nA knock sounded lightly on the door. Evelyn was grateful to pull her attention away from her constant worries. \"Yes?\"\n\n\"It's Eve, Your Grace.\"\n\n\"Come in,\" Evelyn said excitedly. She had almost forgotten the assignment she had given her new handmaiden.\n\nEve stepped slowly into the room. She shut the door quietly behind her and dropped a quick curtsy. \"Do you have a moment, Your Grace?\" she asked shyly.\n\nEvelyn waved her over. \"Of course, child! Please, have a seat.\"\n\nEve approached warily and slowly sat down on the edge of her chair. She clasped her hands together on the table and looked up reverently at Evelyn. \"I've done as Your Grace requested.\"\n\nEvelyn leaned forward eagerly. \"What did you find out?\"\n\nEve opened her mouth and then hesitated. \"Your Grace, I...I don't understand why you wanted me to spy on your husband's activities. Surely, you could have asked the King himself?\"\n\n\"The King thinks I'm too delicate right now to burden with any information,\" Evelyn said quickly. The lie came easily to her. \"I'm not as weak as that, am I Eve?\"\n\nEve's eyes widened in surprise. \"Of course not, Your Grace! Your Grace is the strongest and most capable woman Astuari has ever known!\"\n\nEvelyn blushed slightly at the compliment. \"Please, Eve, when we're alone call me Evelyn. 'Your Grace' is too much of a mouthful.\"\n\nIt was Eve's turn to blush. \"If Your...you wish it, my lady.\"\n\nEvelyn smiled. \"Now, tell me what the King has been up to.\"\n\n\"Well, Your--Evelyn, sorry--the King has been meeting frequently with the Council. When he's not with them, he patrols the palace walls and speaks to the soldiers there. And when's he not there, he's usually in his study.\"\n\n\"That's it?\" Evelyn asked, not quite able to keep the disappointment out of her voice.\n\nEve nodded. \"Oh yes, my lady. He's a very busy man. Don't worry, though, I'm sure once the war with the Magi Victus is over he will have more time for you and the baby.\"\n\nEvelyn nodded absently. She smoothed the flowing robe over her stomach. Reynar had been able to supply her with a wardrobe that carefully kept her now large bump from casual notice. Just the thought that she would have to keep up the deception for several more months wearied her.\n\n\"Did you hear anything the King said?\" Evelyn asked hopefully.\n\nBut Eve shook her head. \"No, my lady. I'm not allowed to be in the Council meetings or on the palace walls. The only place I heard the King speak was in his study and that was just because I brought his lunch.\"\n\n\"You brought his lunch?\" Evelyn asked, perking up.\n\nEve smiled shyly. \"Yes, my lady. I stopped the servant he usually has bring up the food and told him that I will take it for him. I figured Your Grace would want me to try my best to know what the King is doing.\"\n\n\"Very clever, Eve! What did he say?\" Evelyn asked, her excitement rising once again.\n\n\"I'm sorry, my lady, but I didn't hear much,\" Eve said, hanging her head. \"He was talking to his manservant Sereph when I walked in. I heard something about a duty he has to perform. They stopped talking when I came in.\"\n\nEvelyn slumped back against her chair. She had been so sure Reynar was up to something. She knew her child was trying to tell her something; that was why she always felt uneasy around him. He was hiding something, she just knew it. At least, she thought she knew it. Maybe the unease was a side effect of this strange pregnancy.\n\n\"That's all?\" Evelyn asked absently. She shook her head and sighed. Maybe the pregnancy really was getting to her. Who knew what having a child like this did to its mother. There wasn't exactly a precedent for it.\n\n\"They just watched me the whole time I laid out the food,\" Eve said, sounding as despondent as Evelyn. \"Well, Sereph was writing away with his quill. Reynar just stood by his desk and watched me, like he was lost in thought. He just kept stroking this wooden box with his hand. It was very unsettling, my lady.\"\n\nEvelyn nodded, only half-listening to the words. She blinked suddenly and looked over at Eve. \"I'm sorry, what did you say about a box?\"\n\nEve looked taken aback by Evelyn's sudden interest. \"Nothing, my lady. I just got those bumps on my arms from the way he was looking at me, is all. He just stared at me and ran his hand over this box on his desk. I was happy to finally get out of there, my lady.\"\n\n\"I've never seen this box,\" Evelyn whispered. She shook her head. What was she thinking? She was looking for a mystery anywhere she could find it. There was nothing strange about a wooden box.\n\n\"Is Your--my lady, okay?\" Eve asked in concern.\n\nEvelyn brought her attention back to the present. \"I'm fine, Eve. I think this baby is making me empty-headed. Can you go downstairs and prepare a good lunch? Make yourself a plate, too.\"\n\n\"Of course, Your Grace,\" Eve said, reverting back to formality. She stood up and curtsied. \"Lunch will be brought up shortly.\"\n\nEvelyn waited until the door was closed before heaving herself out of the seat. She wished this pregnancy really would end soon. She walked gingerly toward the door and pulled it open.\n\nThe hallway outside was deserted. Reynar tried to have guards posted by her door but Evelyn didn't want to subject the poor men to that onerous duty. As a comprise, Reynar stationed guards at the entrance to this wing of the palace and rotated them periodically, so that they wouldn't get bored.\n\nEvelyn waddled down the hallway as fast as she could. It was good to finally get up and stretch her legs. The sudden blooming of her pregnancy had necessitated long hours spent alone in her chambers. The fewer people that saw her the better.\n\nIt took her ten minutes longer than usual to make her way to Reynar's personal study. Here, in this section of the palace, she found many guards.\n\n\"Is the King in his study?\" Evelyn asked one of the guards standing by the door to Reynar's study.\n\n\"No, Your Grace. The King is currently meeting with the Council.\"\n\n\"I think I'm going to wait for him here,\" Evelyn said. She attempted to open the door but the guard stepped in front of her.\n\n\"Your Grace, the King instructed me that nobody is allowed in his study when he is not in attendance.\"\n\nEvelyn arched her eyebrow and crossed her arms in front of her chest impatiently. \"Do you seriously think, soldier, that the King meant me? His wife and your queen?\"\n\nThe man looked down at her and struggled to find words. \"Your Grace...I...\"\n\n\"That's what I thought,\" Evelyn said. She pushed the guard aside and opened the door. The guard didn't stop her. Smiling, Evelyn shut the door firmly.\n\nShe looked around the study to make sure that it really was deserted. The door to the dinner room where she had first feasted with Reynar was closed. Assured that she was alone, Evelyn walked carefully over to Reynar's desk.\n\nShe instantly spotted the box that Eve had referred to. It seemed to be an ordinary, if old, piece of wood. It sat innocently on the corner of the desk. Evelyn ran her hand across it and discovered the hinges on the side. She checked the other side and found the latch. Smiling to herself, Evelyn began the lift the lid.\n\n\"Your Grace, what a surprise!\"\n\nEvelyn yelped and spun around. Reynar's manservant, Sereph, closed the dinner room door and walked over to her.\n\nEvelyn flushed guiltily when she saw Sereph's eyes flicker to the box. \"Sereph, I didn't know you were here.\"\n\nSereph smiled and bowed low. \"The King sent me back to fetch some documents. I took the liberty to clean up the King's breakfast while I was at it. What brings Your Grace here?\"\n\nEvelyn glanced aside and thought furiously. \"I...uh...just wanted to see if my husband was here.\"\n\n\"Indeed,\" Sereph said pleasantly. His eyes flashed to the box again. \"The King will be delighted to hear that. He's been most anxious to settle in with you, Your Grace.\"\n\n\"As have I,\" Evelyn said, though she was sure Sereph could hear the squeak in her voice. She decided there was no getting around what she was doing. \"When I didn't see him, I thought I would wait for him here. This box caught my eye.\"\n\n\"Was it the gaudy ornamentation that caught your eye?\" Sereph asked. For an instance, his smile seemed frozen on his face and his eyes flashed dangerously.\n\n\"N-no, of course not,\" Evelyn stammered. She took a step back. \"It just seemed out of place.\"\n\n\"Ah,\" Sereph said. He took a step closer to Evelyn. \"Curiosity got the better of you, I imagine.\"\n\n\"I guess so,\" Evelyn said. She swallowed. \"Any--any idea when the King will return?\"\n\nSereph glanced down at the box and ran his hand over the aged wood. \"The King won't be back for hours,\" Sereph said quietly, his eyes never leaving the box.\n\n\"Well, I suppose I will return to my chambers then,\" Evelyn said lightly. \n\nShe turned to leave when Sereph's arm shot out and grabbed her wrist. \"Surely, Your Grace would like to see what's in this box, yes?\"\n\n\"Sereph!\" Evelyn yelled, as she tried to pull her hand free. \"You're hurting me!\"\n\nEvelyn's stomach pinched suddenly. She winced in pain as Sereph snatched his hand off of her arm with a pained yelp. \"What in the nine hells was that?\" he demanded.\n\nEvelyn stumbled back and hit a chair. \"I-I don't know. Please, I want to go back to my chambers.\"\n\nSereph rubbed his hand and looked at Evelyn curiously. \"The time is almost here, Your Grace,\" he said. His voice almost sounded lustful. Then he smiled and nodded toward her stomach. \"For the birth, I mean.\"\n\n\"Yes, I suppose,\" Evelyn said. She moved away from the chair and backed further away. \"I will be leaving now.\"\n\n\"Good afternoon, Your Grace,\" Sereph said, his attention once again directed to the box on Reynar's desk. \"I will let the King know you were looking for him.\"\n\n\"Thank you,\" Evelyn whispered. She turned and pulled open the door.\n\nBefore this afternoon, she had had her doubts. But now she knew for certain; she should have never left Sophina to join with Reynar.\n\n***\n\n\"Marcus?\"\n\nSophina knocked once and slowly pushed the door open. \"Marcus?\" she called again.\n\nSilence. Sophina stepped carefully into the room and looked around. She breathed a sigh of relief when she spotted Marcus sitting in the chair by the bed. The book on the table next to him hadn't moved an inch since Sophina first brought it to him.\n\n\"Is everything alright?\"\n\nAgain, only silence answered her. She didn't know if Marcus was asleep or awake. She gripped her sword tight for reassurance and advanced further into the room. She doubted her sword could stop Marcus' spells, but the familiar feel of it comforted her.\n\n\"Are you awake?\" Sophina asked, trying once again to engage Marcus in conversation. The last week had been a complete failure for her. She didn't have the courage to spend any considerable amount of time trying to get Marcus to respond.\n\n\"I'll leave you alone, then,\" Sophina said, after several tense moments passed by. She turned to leave.\n\nI'll try again tomorrow. We still have time.\n\nThe thought no longer comforted her. She knew their time was almost up. Evelyn could give birth any day now.\n\n\"What do you want?\"\n\nMarcus' quiet voice stopped her cold in her tracks. She gripped her sword tighter and turned back around. \"I just wanted to talk.\"",
        "\"Speak.\"\n\nHis sentences were shorter than ever, but it was better than nothing. \"I just wanted to see how you're doing. Do you need anything?\"\n\nMarcus blinked. He looked up at her and cocked his head sideways, as though he had no idea who or what she was. \"When is this?\"\n\nThe question sent a shiver down her spine. She didn't know why, but Marcus was really scaring her right now. \"When is this? Do you mean what day?\"\n\nHe shook his head. He still regarded her with curiosity. \"Is it time to attack the gate yet? Have I already done that?\"\n\nSophina breathed out slowly and loosened the grip on her sword. \n\nThat poor man, he suffers for us. I wish this could be over already. I wish he could find peace.\n\nMarcus was starting to resemble the beggar he once was when Sophina first met him. His long brown hair was untidy and he had almost a month's worth of beard on his handsome face. His eyes, once as calm and blue as the ocean, were almost colorless and devoid of life.\n\n\"No, Marcus, we haven't attacked the gate yet. Are you--are you still okay with that plan? Will you still help us?\"\n\nHe seemed to have lost interest in her. His eyes slowly glanced away, as though bored. He looked around the small bedroom with a strange smile on his face.\n\n\"Not much longer now,\" he whispered.\n\n\"No, not much longer. Peron should be giving the signal any day now.\" Sophina tried to sound as cheerful as she could.\n\nMarcus' eyes swiveled back toward her. She felt her heart stutter in her chest. His movements were eerie, as though he wasn't used to moving his body. She tensed, ready at any sign to whip out her sword and defend herself.\n\nMarcus, however, just smiled that strange smile. \"You worry too much. Soon, there will be nothing to worry about. The world will go back to the way it was meant to be.\"\n\nThe words sounded comforting, but they only served to frighten Sophina more. \n\nThe way he said them...as though they have a different meaning.\n\n\"So...you'll be ready when the time comes?\" Sophina asked the question as she slowly backed towards the door. She wanted nothing more than to get out of the room.\n\n\"Will you?\" he asked her, the strange smile still on his lips.\n\nSophina gasped as she bumped into the wall. She cursed quietly for acting like such a coward, but that didn't stop her from hurriedly opening the door.\n\n\"Where's Jon?\"\n\nSophina paused. Marcus' voice sounded almost normal. She looked back at him. Her looked at her intently. She could see sweat beading on his forehead. His eyes...his eyes were a soft blue. Did his eyes really change colors?\n\n\"I don't know,\" she admitted. She rested her head against the doorframe and sighed. \"I don't know.\"\n\n\"He needs to hurry,\" Marcus said, his voice urgent.\n\n\"Yes...he does.\" Sophina never agreed with anything more in her life. She needed Jon; she needed her mentor. She was so very tired. She couldn't last much longer.\n\nShe shook her head against the doorframe as her mind raced. Where was Jon? What was taking him so long? Her thoughts were interrupted as she realized that she was staring at a stain on the floor, right by the doorframe. It looked to be a large, brown stain.\n\nHer gaze rose up the wall, following the trail of the stain. Her gaze alighted on the tea cup resting on the edge of the table next to the door. \n\nTea cup? What is...wait. Isn't this--\n\nA loud, grinding noise snapped her out of her thoughts. She knew that noise; it was the sound the false wall made when it slid across, revealing the door to Jon's hideout.\n\nSophina unsheathed her sword in one fluid movement and crouched into a fighting stance. \"Marcus, somebody's coming.\"\n\nShe glanced at him. He was currently studying the wall across from him. His eyes were almost colorless once again. Cursing, Sophina moved out into the hallway. She calmed her breathing and fell into her warrior trance. She took silent steps toward the living room.\n\nHer hand was slick with sweat but the leather on the handle of her sword absorbed it. She clenched her hand repeatedly to dry it. The leather squeaked quietly.\n\nShe stopped by the edge of the doorway leading into the living room. She could hear footsteps coming down the steps. Had somebody discovered this hideout? How? Not even their so-called allies knew about this place.\n\nRaynolt must have betrayed us! He probably followed me one night. I knew I shouldn't have trusted him!\n\nSophina knelt on the ground. She laid her sword on the ground and reached down to her boot and removed the dagger hidden there. She hefted the blade in her hand and cocked her arm back.\n\nThe figure stopped at the bottom of the stairs. The fireplace was the only source of light in the living room. All Sophina could see was a dark shadow. But she knew generally where the heart would be.\n\nShe tensed her arm and took one more moment to gauge the distance.\n\n\"Hello? Sophina? Marcus?\"\n\nSophina gasped as she let fly the dagger. She knew that voice. \"No!\"\n\nHer hand twisted at the last moment. She prayed with all of her heart that it was enough.\n\nThere came a clang of metal against stone and then a startled curse. \"What in the nine hells?\"\n\n\"Ashford!\"\n\nSophina stumbled across the living room, blinded by tears. She barely noticed a very startled looking Ashford before she threw her arms around him.\n\nShe laughed and cried and squeezed him tight. He was telling her something but she couldn't hear him. She didn't care. Her heart was lighter than it had been in ages.\n\n\"By the God, Sophina, calm down! I've just ridden three straight weeks! Give me a moment, okay? Shh, it's okay. It's me. It's me. Calm down. I'm here.\"\n\nSophina didn't want to let him go. In the end, she had to remind herself that she was a fierce warrior, not some weak-kneed princess. She stepped back and wiped her arm across her face.\n\n\"Sorry,\" she mumbled.\n\nAshford seized her shoulders with his hands and squeezed. She looked up into his smiling face and laughed. He laughed with her.\n\n\"The God knows how I've missed you! If I wasn't such a powerful, dashing warrior, I might cry with you.\"\n\nShe hiccupped and slapped his chest. \"You always did have an inflated opinion of yourself, Ashford,\" she said, mockingly.\n\n\"Dry you eyes and let me take a look at you,\" Ashford said happily. He stepped back and rubbed his chin.\n\n\"I must look like a sight,\" Sophina mumbled, embarrassed.\n\nAshford laughed. \"If by that you mean even more beautiful, then yes, you are a sight. I see you're still letting your hair grow. At least it's blonde again.\"\n\nSophina felt her hair self-consciously. It was almost down to her shoulders now. She hadn't had hair this long since she left her family's farm.\n\n\"I just kept it short because it was more practical, you know, as a soldier.\"\n\nAshford nodded. \"I like it. It suits you.\"\n\nShe smiled despite herself. \"What else do you see?\" she teased him.\n\nHis smile suddenly vanished. \"I see how tired you are,\" he said somberly. \"You look thinner, like you've been stretched out past your breaking point.\"\n\nShe sighed. \"I guess we have to trade stories now, huh?\"\n\nAshford nodded. \"Let's sit down.\"\n\nThey walked over to the chairs by the fire and settled in slowly. Ashford poured them both glasses of wine from the pitcher on the table. He handed Sophina her glass and then slumped back in his chair.\n\n\"You look tired, too,\" she noted. His hair was longer now than it was when he left and he had a good growth of bread on his face. His clothes were covered in dust and grime. He really must have ridden three weeks straight.\n\n\"You have no idea,\" he sighed. \"Sophina, what in the nine hells is going on? Why are there so many soldiers on the wall? I was fortunate to find a secluded spot where I could deactivate the runes and climb over. And then getting through the city took even more luck! Where did these soldiers come from?\"\n\n\"I don't even know where to begin,\" Sophina said, shaking her head. \"I--wait, where's Jon?\" she asked suddenly. She had been so happy to see Ashford that she didn't realize Jon wasn't with him. Sudden fear made her grip the arms of her chair hard.\n\n\"I guess I will go first,\" Ashford chuckled. \"Jon made me ride ahead to get here in time.\" Sophina sighed in relief and relaxed her body.\n\nAshford, however, suddenly bolted upright in his seat. The wine in his glass slopped over the rim and splashed against his clothes. \"Sophina, please tell me Evelyn hasn't given birth yet!\"\n\n\"No, no!\" she said hurriedly. \"Not yet. At least, there hasn't been any indication she has. We have spies watching the palace at all times.\"\n\nAshford slumped back into his seat and laughed weakly. \"Thank the God.\"\n\n\"She's suppose to give birth any day now, right?\"\n\n\"That's what Jon says,\" Ashford said, his eyes still closed. \"He said these pregnancies only take three months. God, has it already been three months? So much has happened.\"\n\n\"Same here,\" Sophina whispered. \"But I believe you said you will go first.\"\n\n\"We did it, Sophina. Jon united the tribes and forced a meeting with the goddess. That part went pretty smoothly.\"\n\n\"Then what took you two so long?\" she burst out, the question unable to stay quiet in her mind.\n\n\"I said it went smoothly, not easy,\" Ashford admonished her. \"We had to fight nearly every tribe. And then there was the sheer size of the desert. It's not easy moving so many people across such a distance.\"\n\n\"So Jon united all the tribes? He met the goddess?\" Sophina asked eagerly.\n\n\"Yeah,\" Ashford said slowly. \"Listen, Sophina, this goddess was more than we thought she was. She wasn't some keeper of Jocelyn's journal; she wasJocelyn.\"\n\nSophina blinked and stared at Ashford uncomprehendingly. \"Wait--what? She was Jocelyn? But--but that's impossible!\"\n\n\"That's what I thought. But Jon didn't kill her, remember?\" Ashford reminded her.\n\nSophina sat back in her chair. It was almost unbelievable. She remembered the story Jon told them. He hadn't killed her; he only banished her.\n\n\"By the God,\" she whispered, shaking her head. \"What happened?\"\n\n\"She was powerful, Sophina,\" Ashford said quietly. He was staring intently into the fireplace, as though still witnessing that moment. \"More powerful than Jon. She could have easily killed us.\"\n\n\"More powerful than Jon? But...how did you manage to get out of there?\"\n\n\"In the end, her pride was her undoing. She toyed with us, toyed with Jon. She wanted him to join her.\" Ashford snorted. \"As if Jon would suddenly decide to do that. So she decided to kill us. But she hadn't counted on one thing...\"\n\n\"What?\" Sophina demanded, when Ashford lapsed into silence.\n\nAshford smiled teasingly at her. Sophina swatted him across the arm and he laughed. \"Okay, okay. It was Jon's Shadow Dagger. Sophina, I killed her with the Shadow Dagger!\"\n\n\"But nobody but a Magi Victus can touch one!\" Sophina yelped. Was he still teasing her?\n\n\"What better way to keep a Magi from trying to take one? It was just a lie. Jon gave me his dagger before we met her and she turned her back on me. So I stabbed her.\"\n\n\"Quite a story,\" Sophina breathed. She knew that was a complete understatement. She had never heard a more unbelievable story in all her life. \"But...where's Jon?\"\n\nAshford put his glass of wine down on the table and leaned toward Sophina. \"He sent me ahead because he's bringing all the horsemen he can. And he wanted me to warn you. Sophina, we know now what Reynar's planning to do.\"\n\nSophina sat in stunned silence as Ashford finished his tale.\n\n***\n\nRaynolt grimaced as an arrow dissolved against his protection spell. Maybe I let my impatience get the better of me, he thought, as another arrow came streaking at him.\n\nRestlessness had overcome him. The meetings down in the sewer had become pointless. There was nothing they could do until Peron returned with his men. Not even the sudden appearance of Ashford Caulston was enough to satisfy him.\n\nThat man was too smug for an inferior, Raynolt thought, as he weaved a spell of lightning and shot it at the archer. The archer ducked behind the corner of a building. The lightning bolt shatter the stone where his face was at a moment before.\n\nAshford Caulston had taken it upon himself to become their de facto leader. Sophina Crews looked more than happy to hand the reigns to him. After learning about their current situation, Ashford didn't have any worthwhile information to add. Everything hinged on that damn Raves barbarian.\n\nStill, he was hiding something, Raynolt felt. Ashford and Sophina probably didn't think he noticed the subtle looks they would cast each other when the subject of Reynar came up. If Raynolt was a gambling man, he would gamble that Ashford knew what Reynar was up to.\n\nSo, after another pointless week of planning and bickering, Raynolt decided to accompany one of the patrols. He needed a good fight to get the frustration out of his system. Their attempts at thinning Reynar's numbers were pathetic, but at least some people were actually doing something.\n\nThe archer peaked around the corner again and shot another arrow. Why did the idiot insist on focusing on him? He knew his arrows couldn't do anything against his protection spell.\n\nUnfortunately, Raynolt's unit was too busy fighting a host of other soldiers. He joined a group of ten of Peron's men. They were what was left of the force he had with him in the city. \n\nHe brought no other Magi with him, as he was more than enough for simple soldiers. However, he couldn't cast a spell without the possibility of hitting his own men. He considered it for a moment anyways but decided he still needed an escort back, just in case.\n\nHe shot another bolt of lightning at the archer. Another large section of the building was blasted away. Bored, Raynolt scanned the rest of the fight, looking for stragglers.\n\nSuddenly, without warning, the opposing soldiers broke away from the fighting and sprinted into nearby alleys. Stupefied, Raynolt's men looked back at him.\n\nThey never saw the gigantic fireball that incinerated them. Raynolt gasped and hurriedly called up his 10th protection spell. He had been maintaining a 3rd Tier spell because it required very little energy.\n\nThe runes covered his body at the last possible moment. The gigantic fireball engulfed him and flew past him, exploding against the wall of a nearby building.\n\nRaynolt coughed out the smoke in his lungs and wiped his stinging eyes. He never did learn how to keep smoke away from him. He looked up and prepared a 10th Tier spell that would shoot out several arrows of fire.\n\nThree Magi materialized out of the shadows of a nearby alleyway. They stepped through the ash that had been Peron's men without a glance. Raynolt knew all three of those Magi. Two were unimportant 7th Tier Magi.\n\nThe last one was Lenard.\n\n\"You!\" Raynolt gasped.\n\nLenard smiled and the other two Magi chuckled. \"Seems like it's our lucky day,\" one of the 7th Tier Magi said. Raynolt couldn't place his name at the moment.\n\n\"The great Raynolt Teryus,\" the other one sneered. \"How I wished I would be in the group that captured you.\"\n\nLenard said nothing. Raynolt glared at him. \"If Reynar wanted me captured, he shouldn't have sent weaklings like you.\"\n\nThe Magi who had spoken first growled. He brushed the dark hair out of his eyes and gave Raynolt his best glare. \"Weaklings that nearly killed you, Raynolt. Remember that.\"\n\n\"Nearly,\" Raynolt sneered. \"Nearly counts for nothing in the game of life. Remember that, if you live long enough.\"\n\nThe other 7th Tier Magi, a short man with gray hair, held up his hand. \"Enough of this posturing. Lenard, as the highest ranking member here, the choice is yours. Dead or alive?\"\n\n\"Oh, most certainly alive,\" Lenard said. The tall red-headed man glanced at his companions. \"King Reynar would be greatly pleased if we brought this one in alive.\"\n\n\"Screw Reynar,\" the dark-haired Magi spat. \"We should bring him to Grand Master Sura. She will give us the proper reward.\"\n\n\"Assuming, of course, that you can bring me in,\" Raynolt said calmly. Three against one weren't good odds but Lenard was only 8th Tier. He was confident he could take all three.\n\n\"Oh, I'm sure we can,\" Lenard said quietly. And then he winked at Raynolt.\n\nRaynolt's jaw almost dropped. But he recovered himself in time to hide his surprise. \"Then let's begin,\" Raynolt said.\n\nHe finished the arrows of flame spell in his mind and stuck out his hand. The other two Magi had been prepared. They already sent runes of binding at him. Raynolt understood why Reynar sent these Magi out; their binding spells were of the 10th Tier.\n\nThe two spells combined would have been enough to bypass his protection spell to bind him. But they didn't count on Lenard turning to them and casting two counter-protection spells. The two Magi gasped in surprise when their protection spells suddenly faded.\n\nRaynolt's spell flashed on his palm. Several arrows of flame shot through each Magi repeatedly. Their bodies were hurled through the air and landed with a dull thud several yards away. Smoke slowly rose from the holes in their chests.\n\n\"Well played,\" Raynolt said. He bowed to Lenard in acknowledgment.\n\nLenard smiled. \"I've been hoping to run into you for a long time now. Tonight was my lucky night.\"\n\n\"What happened that night at the Emporium?\"\n\n\"Reynar's Magi found me and healed me. They assumed I took my wound fighting you. I...didn't correct them.\"\n\nRaynolt laughed. \"You were always very crafty, my dear Lenard.\"\n\n\"If you think that was crafty, wait until I tell you about my position with Reynar. He has taken me under his wing after my valiant attempt to stop you during the attack at the Emporium. I'm privy to some very important secrets.\"\n\n\"Is that right?\" Raynolt mused. He motioned Lenard to follow him. \"It wouldn't be good for you if another patrol wondered by and spotted us. Let's get back to the sewers before we're caught.\"\n\n\"The sewers?\" Lenard asked. \"That's where you've been hiding?\"\n\nRaynolt turned back toward Lenard. There was something strange in his voice. \"Yes, but don't get me started on that. It's insulting, but what can--\"\n\nThe world lurched beneath Raynolt's feet. It felt as though a giant stone had just smashed into his head. He stumbled to his knees and tried to orient himself. Another blow blasted his skull.\n\nThe stars were shining down at him in the clear night sky. They twinkled, as though winking mockingly at him. How he hated the stars.\n\nA shadow loomed over him. He blinked. The shadow was blocking his view of the hated stars. \"How rude,\" he mumbled.\n\n\"Thanks for everything, Raynolt,\" the shadow said, his voice painfully loud. Didn't he know that the stars had ears? He didn't need to shout. Raynolt's vision suddenly swam before his eyes. \n\nIt looked like runes were forming above him. But that wasn't right; the ancient language of creation couldn't suddenly appear in the air, could it? How could words and symbols materialize in thin air?\n\nThe language of God is in everything, a voice said in his head. He knew that voice.\n\n\"Master?\" he asked. His tutor had been the first one to show Raynolt how to write in the air.\n\n\"I am now,\" the shadow said. \n\nThe runes whirled and settled into place. Raynolt knew what those runes represented; those were the words to form air in the shape of a mallet. But wasn't he protected by a 10th Tier protection spell?\n\nThe mallet of air rushed toward him and Raynolt knew only darkness without stars.\n\nGood. I hate stars.\n\n***\n\n\"How much longer?\" Reynar asked.\n\nSereph looked down at his notes. \"According to various medical journals, I would say she's due any time now. Are you sure you don't want a midwife to examine her?\"\n\n\"No, I don't want a midwife to examine her!\" Reynar roared. \"I don't want another body on my hands!\"",
        "\"I don't know much about delivering babies,\" Sereph said, in that insufferable manner of his.\n\n\"So you want me to sacrifice another life to protect our secret, is that it?\"\n\n\"It's just a suggestion,\" Sereph said absently, as he studied his notes. \"What's one more sacrifice?\"\n\nReynar stared at his loyal manservant. Had he really know him at all? He had been too lenient for all these years. It was just another failing that plagued Reynar's soul. \"Are you really so callous toward life, Sereph?\"\n\n\"On the contrary, my liege, I treasure life. Why do you think I'm helping you do this? I believe in what we're doing. I believe taking this child's power will save the world. Don't you?\"\n\nReynar turned away and ran his hand through his hair. What did he believe? It was easy at first. The life of an unknown child against the world? It wasn't that hard of a decision. The mother and the child were just abstract concepts.\n\nBut now the mother had a face. A face Reynar loved. Which meant he loved the child, by extension. But if he continued ahead with his plan, he would lose them both. Was love worth sacrificing the world?\n\n\"My liege?\" Sereph asked.\n\nReynar shook his head. \"I don't know anymore, Sereph. We're doing this based on what a long-dead Magi told us to do. How can I believe anything that old woman told me? How do I know Jocelyn's journal is accurate?\"\n\n\"You have to keep your faith,\" Sereph implored him. \"You know what kind of man Jon Laurent is. You know he wants to bring back the War of the Gods. This child can't be allowed to live!\"\n\n\"Who are we to judge that?\"\n\n\"We are the loyal servants of the God!\" Sereph cried. His eyes blazed with his passion. \"You know the God had the True-born destroyed! That was why he forbade the Order of the 12 from mating with each other! Only their children were allowed to mate with each other. This child is an abomination, my liege.\"\n\n\"We don't know that,\" Reynar whispered, but even he could hear the doubt in his voice.\n\nSereph continued in a more gentle voice. \"My liege, I don't dismiss the burden this has placed on you. But we both know it has to be done. The child won't have died for nothing. We will use its power to stop Jon Laurent and to remake the world the way the God wants it.\"\n\nReynar sighed in defeat. \"You're right, Sereph. You're right.\" \n\nSereph had only reiterated the same things Reynar whispered to himself at night. He couldn't allow Jon Laurent to raise another false god. That's why everyone used the term 'The God,' instead of just 'God.'\n\nHe would do what had to be done.\n\nAn urgent knock came at the door. \"My liege!\"\n\nReynar strode quickly to the door and whipped it open. \"What is it?\"\n\n\"The Magi Lenard has returned,\" the guardsmen said excitedly. \"He has Raynolt Teryus in custody!\"\n\n\"Excellent!\" Reynar boomed. It was the first good news he had heard in a long time. \"Lead me to him.\"\n\n\"Right away, my liege!\"\n\nReynar matched the guardsmen's excited strides as he quickly took him down into the lower levels of the palace. Several Magi stationed in the palace glanced curiously at them as they passed.\n\n\"We captured Raynolt,\" Reynar would tell them. The Magi would burst into smiles and talk excitedly to each other.\n\nThe word must have spread quickly because the Magi Reynar passed on last few floors bowed low to him and gave him pleased smiles. Reynar couldn't help but smile back.\n\nGod, it feels good to actually smile again! Thank you, Raynolt. This was the first pleasurable thing you ever did for me.\n\nThe guard led him at last into the dungeon holding cells. Here in the palace, the holding cells were nothing like the dungeons in the city. These holding cells were quite large and quite clean.\n\nSeveral Magi were grouped around one such cell and were peering inside the room. They stepped back hurriedly when they heard Reynar approaching. Reynar approached the holding cell, his heart beating rapidly in excitement.\n\nLenard greeted him at the door. \"My liege, I ran into Raynolt on my patrol. I convinced him I was still on his side. He revealed the location of their hideout so I thought it prudent to knock him unconscious and bring him back here so you could interrogate him yourself.\"\n\n\"You did very well, Lenard,\" Reynar replied. \"I will see you promoted to the 9th Tier for this.\"\n\n\"Thank you, my liege.\" He bowed low. \"Raynolt is still unconscious. He did reveal, however, that he was hiding out in the sewers.\"\n\n\"The sewers,\" Reynar mused. \"We should've know. It was the only place we didn't check.\"\n\nReynar stepped passed Lenard and walked into the holding cell. Raynolt was sitting on a cot, his arms chained to the wall behind him. His head was slumped on his chest. Spells of binding were wrapped tight around his body.\n\n\"Wake him,\" Reynar commanded.\n\nA Magi hurried into the room. He laid a small but complex healing spell on Raynolt's head. It took several moments for Raynolt to come around. He blinked slowly and looked up at Reynar.\n\n\"What...\"\n\n\"Raynolt, I'm disappointed,\" Reynar said coldly. \"I told you the price of betraying me. And still you did it.\"\n\nRaynolt shook his head. His eyes cleared up and he finally took in his surroundings. He jerked several times at his chains but the binding spells held him tight. He looked up in fear at Reynar.\n\n\"What do you want?\" he hissed.\n\nReynar crouched down to be on eye level with Raynolt. \"How it must eat at you to know you've been outwitted.\"\n\nRaynolt glanced toward the doorway. \"You will pay,\" he growled.\n\n\"I'm terrified,\" came Lenard's lazy response.\n\nRaynolt turned his gaze back toward Reynar. \"How long has Lenard been spying for you?\"\n\nReynar smirked. \"For as long as you thought he was spying for you.\"\n\n\"And Morgana?\"\n\n\"She was yours,\" Reynar said somberly. \"We made it look like she was the spy but you're the one who chose to kill her.\"\n\nRaynolt closed his eyes and hung his head. But Reynar wasn't fooled. He knew this man cared nothing for the lives of others. He was most likely mourning the end of his plans for power.\n\n\"Do you know who you've hired?\" Raynolt asked quietly. \"There's a reason why Lenard makes such a good spy.\"\n\nReynar glanced over at Lenard. Lenard stared back calmly. Yes, Raynolt, I use whatever tool I can. I have no choice.\n\n\"He murdered his parents,\" Reynar replied. \"I know this.\"\n\nRaynolt opened his eyes and laughed. \"Murdered his parents? Yes, but that was just the start. I stopped by the village where his parents worked as magistrates. It was shortly after the War of the Desert. Do you know what I found there?\"\n\n\"Do tell,\" Reynar said.\n\nRaynolt shook his head. \"You obviously know. But hearing something is different from seeing something. He had the whole village enslaved. Women were raped in the middle of streets. Men were worked to exhaustion. And he was trying to raise his own army.\"\n\n\"And so you subdued him, and took him as your own,\" Reynar finished for him. \"You held a great secret over him. He would make the perfect tool to do your bidding.\"\n\n\"Then how? How did you steal him from me?\" Raynolt demanded. He was already on the verge of breaking. It wouldn't take much to get the information he needed.\n\n\"He came to me,\" Reynar said, shrugging. \"Do you think he enjoyed being under your boot? You will never understand why you can't take power, Raynolt. You don't care about anyone beneath you. You would build your foundation on crumbling ruins.\"\n\n\"I'll kill you,\" he threatened, but in a weak and fading voice. He knew he was beaten.\n\n\"Lenard tells me that your hideout is in the sewers. But the sewers are very extensive. I need to know where exactly to find your friends.\"\n\n\"Why should I betray them?\" Raynolt mumbled.\n\nReynar laughed. \"Betray them? You would have to care about them first to betray them! Tell me, Raynolt, and I won't kill you. You will be imprisoned but at least you would still be alive. There's always the chance you could break out.\"\n\n\"They're in the sewers near the west gate,\" Raynolt said in a defeated voice.\n\nReynar stood up and strode briskly toward the door. \"Watch him,\" he commanded Lenard.\n\n\"Are you really going to let him live?\"\n\nReynar stopped and looked back at Raynolt. He hung limply in his chains. He was the most pathetic thing Reynar had ever seen. \"Once I return, and his information was proven correct, kill him. He has plagued my plans for the last time.\"\n\nLenard smiled. \"As you command, my liege.\"\n\n***\n\nEvelyn stuffed the last of her dresses in the sack and closed it tight. She slung it over her shoulder and marched toward the door.\n\nThere's no looking back. I can do this. I can do this!\n\nShe didn't know how she would make it past the guards without being seen but she couldn't stay here any longer. Reynar was up to something and she didn't want to stick around to find out what.\n\nIf only I could use my magic, she thought desperately. The baby continued to churn inside her stomach, making it all but impossible for her to hold onto her magic. It was coming soon and she needed to be gone.\n\nShe reached the door to the hallway and pulled it open.\n\nSereph stood in the doorway. \"Good evening, Your Grace.\"\n\nEvelyn stumbled back. The sack slipped from her shoulder and landed on the floor. \"Sereph! What--what do you want?\"\n\nSereph entered the room and closed the door behind him. He glanced down at the bag on the floor and shook his head in disappointment. \"Evelyn, Evelyn, where do you think you're going?\"\n\n\"I...\" She didn't know what to say. He caught her and there was no lying her way out of it. \"I've decided I no longer belong here.\"\n\n\"Is that so?\" he asked, his eyebrow raised in surprise. \"King Reynar would be very disappointed to hear that.\"\n\nEvelyn felt her fear fade. Sereph's attitude only served to enrage her. She took a threatening step towards him. \"I know Reynar is up to something. So either get out of my way or I will make you get out the way. Your choice.\"\n\nHe backhanded her across the face. Evelyn gasped in shock and pain and wheeled backwards. \"Don't threaten me, Evelyn. Especially when you're just bluffing. I know you can't use your magic right now.\"\n\nEvelyn wiped the blood from her lip and stared furiously at him. \"How dare you strike your queen! Reynar will hear of this!\"\n\nSereph stepped closer to her. \"Reynar will be too busy to hear anything you have to say,\" he whispered, his voice deadly soft. \"Too busy claiming the power of your child as his own.\"\n\n\"No!\" Evelyn shouted, just as she hunched over in pain. Water splashed across the carpet.\n\n\"Speaking of which,\" Sereph purred, his eyes staring lustfully at the wet spot on the floor. \"So it begins.\"\n\n\"Noooo,\" Evelyn gasped, too weak to even shout. She fell back.\n\nSereph caught her in his arms and helped her to her bed. \"Stay here. I will go fetch the King.\"\n\nEvelyn shook her head but she was too weak to even move. The child was coming and there was nothing she could do to stop it.\n\n***\n\n\"How much longer?\" Ashford wondered aloud.\n\nSophina glanced at him and flashed him an irritated look. \"For the thousandth time, Ashford, I don't know when Peron is suppose to get back. When's Jon suppose to get here?\"\n\n\"I get your point,\" Ashford snapped. He hated waiting. He had gotten use to always being on the move with Jon. This past week back in Astuari had been torture. They needed to do something quick before it was too late.\n\n\"I've seen Evelyn,\" Sanje suddenly offered. \"On one of my patrols, I saw her sitting by the window in her bedroom. She was very large so she is still most definitely pregnant.\"\n\n\"That's something,\" Ashford mumbled. He glanced over at Sophina. \"Sorry for snapping at you.\"\n\nSophina waved his apology away. \"I'm right there with you, Ashford. The only difference is I've had to deal with this for three months.\" She smiled to take the sting out of the words.\n\nAshford returned her smile and went back to studying the city map. Peron was suppose to launch fire arrows into the sky by the west gate when he was ready. Ashford had studied the west gate himself and saw how well defended it was. He just hoped Marcus was up to the challenge.\n\n\"Where is that blasted Raynolt?\" Sophina suddenly demanded. \"I know he thinks these meetings are a waste of time but the least he could do is show up!\"\n\nSanje shook his head. \"I don't know. The last time I saw--\"\n\n\"Master Victus!\"\n\nSanje whirled toward the open doorway. A Magi Victus had come racing into the room. \"What is it?\"\n\n\"Fire arrows! In the sky by the west gate!\" he shouted excitedly.\n\nAshford clapped his hands and Sophina punched the air. \"Alright, time to put the plan into action!\" Sophina cried out happily. \"I need to go get Marcus. Ashford, take Sanje and prepare--\"\n\n\"Nobody is going anywhere,\" a deep voice echoed off the sewer walls.\n\nAshford embraced his magic but runes of binding already wrapped around him, Sophina, and Sanje. Magi poured into the small room and covered all the exits. Sophina struggled against the bonds and shouted incomprehensively.\n\nReynar strode into the center of the room. \"Hello, Ashford.\"\n\n***\n\nJon almost shouted in relief when the last turn of the road finally brought the city of Astuari into sight. \"We're here,\" he breathed.\n\nTelez growled next to him. \"Time for our revenge!\" The men all shouted at once and raised their swords.\n\nThey rode for a month straight with nothing but revenge to drive them. Jon feed that rage. He told them how Reynar had planted Magi all throughout the tribes for the day he finally decided to take over.\n\nThe fact that the goddess was a Magi was the final blow that allowed Jon to convince them to ride for Astuari to seek revenge. He pushed them hard and they responded. Now here they were, barely a month from Oasis and already at the gates of Astuari.\n\nI pray I'm not too late, Jon thought fervently. If the God really was kind, he still had time. They thundered down the road and made their way toward the west gate. At this time of night, the guards wouldn't expect what was coming.\n\nSuddenly, the sky lit up. Dozens of arrows trailing fire flew up into the air. The men behind him gasped and swore. Was the city under attack?\n\n\"I'm too late,\" Jon breathed. He slapped the reigns and his horse picked up even more speed.\n\nThey sped through a small village on the outskirts of the city. They were almost past the village when the road in front of them was suddenly blocked by a large line of horsemen.\n\n\"Halt, or we fire!\" came a shout that rang through the night.\n\nJon pulled up his horse hard. Rocks flew up as Jon and his men skidded to a halt. The night was too dark to reveal who the men were. Jon embraced his magic and kicked his horse into a small trot.\n\n\"Stay back,\" he warned his men. They grumbled but they listened to him.\n\n\"Who goes there?\" came another shout.\n\nJon pulled up several yards away. \"I am Jon d'Thelas san Ronar, Chieftain of the Desert Tribes of Raves.\"\n\nThe shadowy men in front of him were eerily silent. A figure in the front kicked his horse forward and rode toward him. Jon prepared a nasty spell just in case.\n\nThe moonlight revealed the rider as he stopped in front of Jon. He was a tall man whose skin nearly blended into the night. \"You're no Chieftain,\" the man growled.\n\n\"The five hundred men behind me would disagree with that,\" Jon said calmly. This man was obviously a warrior from Raves. But what was he doing out here?\n\nThe man jerked upright. \"Wait...are you Jon Laurent?\"\n\nJon cocked his head in surprise. \"Who's asking?\"\n\n\"Peron, Chieftain of the Tribe of the Desert Snake.\"\n\nJon cursed. \"What in the nine hells are you doing outside the city? Aren't you suppose to be inside helping Sophina Crews?\"\n\nThe man rode his horse right next to Jon. \"It is you! This appears to be a miraculous night, Astuarian.\"\n\n\"Again, why are you out here?\" Jon growled.\n\n\"Sophina sent me outside the city to gather all my men for an assault on the west gate.\"\n\nJon shook his head in confusion. What was going on? \"But why weren't your men inside the city already?\"\n\n\"You have missed much, Jon Laurent. Come, we already gave the signal. Join your men with mine and let's take this gate.\"\n\n\"Fill me in as we ride,\" Jon said. He turned around and signaled his men.\n\n\"As you wish,\" Peron replied.\n\n***\n\nThis wasn't good. Ashford could still use his magic but Sophina and Sanje were pinned with binding spells. Ashford would be killed by the time he got off a spell.\n\n\"No greeting for an old friend?\" Reynar asked.\n\n\"Damn you, Reynar,\" Ashford growled. \"Let Sophina go. She's not a part of this.\"\n\nReynar shook his head sadly. \"Yes she is, Ashford, because of you. Why did you betray me? Why join with Jon Laurent instead of me?\"\n\nMaybe I have a chance, Ashford thought desperately. Maybe I can reach Reynar!\n\n\"Reynar, listen to me. You have it wrong! Jon Laurent is trying to save this world, not destroy it! You were fooled by--\"\n\nReynar raised his hand and cut him off. He turned to the Magi crowding the room. \"Leave us. But keep the binding spells in place. And stay close.\"\n\nThe Magi bowed to his command and retreated from the room. Only Reynar remained in the room.\n\n\"How did he do it?\" Reynar asked. \"How did he convince you to turn against me?\"\n\n\"Just listen to me!\" Ashford pleaded. \"You were fooled, Reynar! The desert goddess is playing you! She's Jocelyn! That journal she gave you was nothing but lies!\"\n\n\"Lies, Ashford? Lies?\" He shook his head. \"That book taught me more magic than I thought possible. How was that lies?\"\n\n\"That's not--\"\n\n\"And is Evelyn not giving birth to a special child?\"\n\n\"Yes, but--\"\n\n\"And can't this child destroy us if it so wishes?\"\n\n\"Yes,\" Ashford growled. \"But you're not--\"\n\n\"Enough!\" Reynar shouted. \"You are blind, Ashford, to not see what Jon Laurent really is. He wishes to raise this child, doesn't he? To use its power?\"\n\n\"It's not like that!\" Ashford shouted.\n\n\"Please, listen to him!\" Sophina pleaded. \"You have it all wrong!\"\n\n\"I haven't heard you contradict me,\" Reynar said. \"Jon Laurent took enough of the truth to twist you around his finger.\"\n\n\"So what are you going to do to us?\" Ashford spat. He knew he could never reach Reynar. It was over.\n\n\"Take you into custody and give you fair trials,\" Reynar offered graciously.\n\n\"To the nine hells with you,\" Sophina growled.\n\n\"Just kill us now,\" Ashford said.\n\nReynar shook his head sadly. He turned toward Sanje. \"Is this what you wish, too?\"\n\nSanje said nothing. Reynar sighed and turned back toward Ashford. \"You were my friend, Ashford. Why? Why do this?\"\n\n\"To protect Astuari,\" Ashford said simply.\n\n\"And I'm not?\" Reynar growled. \"Have I ever, in our friendship, gave you any reason to doubt me?\"\n\n\"I know you think what you're doing is right,\" Ashford said slowly. And it was true. He couldn't really blame Reynar. He had been tricked by a very devious Magi. \"But you're wrong. We're not the ones who've been fooled.\"\n\n\"I guess we have to agree to disagree,\" Reynar said sadly.\n\n\"Are you ready to kill your last friend, Reynar? Was Christiana, Altus, and Braxus not enough? We sacrificed everything for you.\"\n\n\"They were necessary sacrifices,\" Reynar whispered, his eyes wide. He didn't sound very convinced.\n\nAshford could only shake his head sadly. \"Kill me, Reynar, and the last shield protecting you dies with me.\"\n\n\"I don't need that protection anymore,\" Reynar replied.\n\n\"No...I guess not. Just like you didn't need four friends who would sacrifice their lives for you. I guess they meant nothing.\"\n\n\"They meant everything!\" he roared. \"Don't you see? I have to protect Astuari! I have to honor the sacrifices all of you made! I must see this through!\"\n\nAshford knew what he had to do. It was almost as if Jon was here and was whispering in his ear.",
        "Remember everything I've taught you.\n\nThe spells formed in his mind. Jon had taught him much over the past three months. He taught him how to split his focus and form two spells at the same time.\n\nHe taught him about friendship and love and the necessary sacrifices it takes to protect the ones you love. Ashford glanced at Sophina and smiled.\n\n\"No,\" she whispered, her face horrified.\n\n\"Sophina, Sanje, when I give the signal, take off and grab Marcus. Clear the west gate. Save this world.\"\n\n\"Don't do anything stupid,\" Reynar warned him. His eyes glowed silver and runes began to form in front of him.\n\n\"No, Ashford!\" Sophina pleaded. \"Let him take us! We will still have a chance then!\"\n\n\"Listen to her,\" Reynar said. \"Come with me and I promise you will be treated fairly. Let us end this farce.\"\n\n\"Sanje,\" Ashford said, his eyes meeting the Magi Victus'. \"Protect her.\"\n\n\"No!\" Sophina cried.\n\nSanje held his gaze and nodded. \"The God be with you, Ashford Caulston.\"\n\n\"Don't make me kill you! Please!\" Reynar demanded.\n\n\"RUN!\" Ashford shouted.\n\n\"NO!\" Sophina screamed.\n\nThe two spells flew from Ashford's mind. One spell countered the binding spells on Sophina and Sanje. The other formed on the ceiling of the sewer. Cracks immediately appeared.\n\nReynar's spell of lightning tore through his chest and sent him flying hard into the wall behind him.\n\nThe ceiling above Reynar's head cracked and exploded, raining large chunks of cement over his head.\n\nAshford collapsed to his side. Through the falling debris, he saw Sanje pulling Sophina out of the room as everything came crashing down.\n\nGet here, Jon. Save them. Protect them.\n\nI love you all.\n\nAshford smiled as the world turned dark.\n\n***\n\n\"We have to go back!\" Sophina cried. She struggled against Sanje's iron grip.\n\n\"He's dead! We can't go back!\"\n\n\"NO! Don't say that! He needs our help!\" Sophina beat on his arms as he continued to drag her.\n\n\"Don't let his sacrifice be for nothing!\" Sanje commanded. \"Help me get us out of here!\"\n\nThe Magi poured into the hallway, eyes wide in confusion and fear. The rumbling of the crashing ceiling faded behind them.\n\nSophina snarled and pushed off Sanje. She whipped her sword out and charged the Magi. The Magi stumbled back and yelped in fear. Sophina slashed her sword in front of her and felt the runes on the blade cut the attempted spells.\n\nShe plunged her sword into the gut of one Magi. She kicked him off and pulled the sword out. The blade whistled through the air and slit the throat of the nearest Magi. Sanje flashed past her, his Shadow Dagger cutting and stabbing as he ran.\n\n\"Follow me!\" he yelled.\n\nRoaring in grief and defiance, Sophina slashed viciously in front of her as she pushed her way through the panicking Magi. Blood splattered her face and clothes. She felt several spells fly by her and smash into the walls.\n\nSanje reached out and grabbed her arm and pulled her through the throng of Magi. A lightning bolt flew at his face but he deflected it with his dagger.\n\nHe pushed Sophina in front of him and urged her on. Sophina threw one last desperate glance behind her. Ashford was truly gone.\n\nHe was dead.\n\nBlinded by tears, she ran blindly forward until Sanje tugged on her arm. \"This way,\" he shouted.\n\nThe Magi had fell behind but she could hear somebody shouting orders. They were regrouping.\n\nSanje led her through a small doorway. The room contained an access ladder that led up to the city streets. Sanje climbed up first and pulled Sophina out.\n\nSophina rolled on the ground and vomited. \"Ashford,\" she breathed.\n\nSanje picked her up. \"Come on, we don't have time to waste.\"\n\n\"Damn you,\" she hissed. But she followed his lead.\n\nHe ducked behind the corner of a building and looked around. He turned back toward her. \"Look, I need to go grab Raynolt's Magi. They were hiding in another part of the sewers. We need to attack the gate. Go and get your friend, Marcus. Hurry!\"\n\nSophina nodded and took off down another street. She was already in Beggar's Hell so Jon's hideout wasn't very far away. Luckily, she didn't spot any patrols as she made her way through the twisting streets and alleyways.\n\nShe breathed a sigh of relief when she spotted the crumbling ruin that hid Jon's hideout. She raced toward the ruins and the false wall. She activated the switch and waited impatiently as the wall slid sideways.\n\nShe nearly tripped down the stairs, she was in such a hurry. She raced through the living room and down the hallway. She reached Marcus' room and burst through the door.\n\n\"Marcus! It's time! We need to attack the gate!\"\n\nMarcus looked up at her. Thankfully, he looked alert. \"It's time?\"\n\n\"Yes! Hurry!\"\n\nMarcus nodded and stood up. \"It's time,\" he said softly.\n\nSophina tapped her foot impatiently as Marcus took his time walking toward her. \"Hurry!\" she urged him.\n\n\"Go,\" Marcus said. \"I will be right behind you.\"\n\nSophina barely paused to nod before she took off. She had to get to the west gate. Everything depended on them getting Peron's men in.\n\nOtherwise, Ashford's sacrifice would have been for naught.\n\n***\n\nJon's horse stamped its feet and breathed out its nose. Everything seemed to be holding its breath. The night, the men, the horses; everything.\n\n\"What's taking her so long?\" Peron wondered aloud.\n\nJon shook his head. Something was wrong. They waited patiently outside the gates but nothing could be heard behind them. No fighting or shouting.\n\n\"Maybe there's something wrong with Marcus,\" Jon mused, worriedly. \"You said he lost his mind temporarily?\"\n\nPeron nodded. He, too, looked worried. \"Yes, he hasn't been in his right me lately.\"\n\nIs the drug losing its effects? Is he still taking it? There was just too much Jon didn't know. He hated feeling this powerless.\n\n\"Maybe I should attack the gate,\" Jon said. He looked up and studied the gate. It was made of heavy iron but Jon could easily blow it open.\n\n\"No, you don't know who's behind the gate,\" Peron said. \"It's too risky. You might hurt Sophina.\"\n\n\"I know,\" Jon said. He hit his thigh with his fist. \"We need to do something.\"\n\n\"Do you hear that?\" Peron asked suddenly.\n\nJon did. He could hear shouting. \"It's begun.\"\n\n***\n\nSophina danced among the soldiers, her sword trailing lines of blood in her wake. She used her grief for Ashford to fuel his strikes. Her sword bit into steel and flesh alike. Swords shattered when met with her blade.\n\nIn a matter of moments, she stood shaking and breathing heavy, a group of soldiers dead at her feet. In the distance, by the wall, Sanje and his Magi Victus were battling a large squad of soldiers. Magi were battling Magi.\n\nAnd they were losing. The Magi Victus were being driven back. Raynolt's Magi were far outnumbered by Reynar's. And still Marcus hadn't shown up.\n\nI knew I should have dragged him here! Sophina thought angrily. Marcus hadn't been right in the head recently. He probably wandered off somewhere.\n\nShe scanned the battle, looking for small groups she could fight. She needed to fight. She needed to get this rage and pain out of her. But nobody was approaching her. They were all concentrated on the Magi Victus and the Magi.\n\n\"Step back,\" a voice said from behind her.\n\nSophina gasped and whirled around. Marcus was studying the fighting in front of him, a small frown on his face. \"Marcus! Please help us!\"\n\n\"I will,\" he said, softly.\n\nSophina almost sagged in relief. Marcus strode forward, completely unconcerned about the battle raging all around him. He stopped several yards from the gate and raised his hands.\n\nSeveral groups of soldiers broke off and charged him. They got within a few feet before falling to their knees, clutching their heads. Arrows hissed all around him and disintegrated into ash.\n\nThe fighting stopped. An eerie silence descended over the area, as though the world held still for what was about to happen.\n\n\"Marcus!\" Sophina suddenly screamed. \"Our men are over there, too!\"\n\nBut either Marcus couldn't hear her or didn't care. Flames suddenly licked the ground all around his feet as he began to weave his hands through the air. Sophina could see people scrambling to get away as the flames started to flow around Marcus.\n\nSophina held her arms over her eyes as the flames reached an intensity she had never seen before. They whirled around and around Marcus in a giant ball of fire.\n\nThe fire stopped suddenly, as though frozen in place. Sophina lowered her arms and stared confusedly at the inferno that had suddenly stopped spinning.\n\nThe ball shot forward toward the gate and the following concussion of sound and wind threw Sophina several yards back.\n\n***\n\n\"Well, well, well,\" Lenard said, as he crouched in front of Raynolt. \"Didn't think you would end up here, did you?\"\n\nRaynolt looked up at him, his eyes blazing with his fury. \"What did it take for you to betray me?\"\n\nLenard's face went still. \"To betray you? Gold. That's all it took.\"\n\n\"You could have ruled next to me,\" Raynolt spat. \"You could of have had an honored position in my new regime. That's what you wanted, wasn't it? That's why you enslaved your village?\"\n\n\"You're a fool,\" Lenard said. \"You were never going to seize power. I played you because you played me. You took me from my village and enslaved me.\"\n\n\"I would have given you power!\" Raynolt snarled. \"But now, I will have to take your life.\"\n\nLenard laughed. \"Even now! Even now you're still confident of your ascent to power. How deluded are you?\"\n\n\"My plans may not have always succeeded the way they were suppose to, but I still won,\" Raynolt reminded him. \"You should know better.\"\n\n\"Your plans only succeeded because of me!\" Lenard shot back. \"Do you really think I was just some 8th Tier lackey? Didn't you notice how I broke through your 10th Tier protection spell? I hid my strength, Raynolt! I was the perfect spy.\"\n\n\"You flatter yourself,\" Raynolt sneered. \"I didn't let you in on all of my plans. Truth be told, after the attack on the Emporium, I figured you to be a spy.\"\n\nLenard shook his head. \"You really are deluded, aren't you? Then why did you tell me the location of your hideout?\"\n\n\"It wasn't my hideout,\" Raynolt said quietly. \"I hate those damn sewers. No, I just wanted Reynar to get rid of Sophina for me. And to expose you as the spy.\"\n\n\"And your capture?\" Lenard asked, gesturing toward the chains. \"You planned for this, too?\"\n\n\"Do you really think that all the Magi loyal to me would join my side during the attack on the Emporium? You weren't the only spy I had, Lenard.\"\n\nLenard's eyes opened wide in shock as the binding spells faded from Raynolt. Raynolt smiled, his eyes glowing silver, and put his hand on Lenard's chest.\n\nLenard glanced fearfully at the doorway, at the Magi standing there. \"You're his?\" he asked.\n\n\"Always,\" Raynolt replied.\n\nLenard arched his back in pain and cried out as his ribs began to move violently within his body. Raynolt pressed his hand harder into his chest and finished the spell.\n\nLenard's ribs burst open, shredding his skin and flinging blood across the room. His intestines fell from the gaping wound in his chest and flopped onto the floor.\n\nRaynolt calmly wiped the blood from his sleeves and looked up at his Magi. \"Come, we need to get to the west gate. I have a deal that needs to be fulfilled.\"\n\n***\n\nJon nearly fell from his horse as the west gate suddenly exploded in a ball of raging fire. The wall cracked and exploded for several yards to either side of the gate, raining stone down on his horsemen.\n\n\"My God,\" Peron gasped. \"What was that?\"\n\n\"Marcus,\" Jon said grimly. He snapped his reigns. \"Ride! Ride for vengeance!\" The men behind him shouted. The thundering of horses' flew down the road and toward the ruined gate.\n\n***\n\nReynar groaned as a hand grabbed his arms and pulled him from the rubble. \"My liege?\" a desperate voice asked.\n\nReynar coughed up dust. \"Sereph?\"\n\n\"I'm here, my liege.\"\n\nReynar blinked the dust out of his eyes and sat up. He was sitting in the ruins of a sewer tunnel. Sereph was standing over him, looking concerned.\n\n\"What are you doing here, Sereph?\"\n\nSereph reached down and drew Reynar to his feet. \"Looking for you. I followed the noise of the destruction. What happened?\"\n\n\"Ashford...\" Reynar shook his head. \"How did he do that? He cast two spells at the same time. If I didn't have my protection spell...\"\n\n\"Ashford did this?\" Sereph asked in surprise. He gasped. \"The protection spell! It's gone! That means...he's dead.\"\n\nReynar glanced down. The protection spells that had protected him for so many years were gone. He suddenly felt vulnerable. \"Don't talk so loudly, Sereph. Nobody is supposed to know about you.\"\n\n\"You don't have to worry,\" Sereph replied. \"Everyone is fighting at the west gate right now.\"\n\n\"We have to get there!\" Reynar said suddenly.\n\n\"There's no time, my liege. Evelyn's giving birth. It might take several hours but you can't take that risk!\"\n\n\"Evelyn's giving birth?\" Reynar asked, in stunned disbelief. \"Now?\"\n\nSereph pulled on Reynar's arm. \"Come, my liege, it's time.\"\n\nReynar let Sereph pull him along. \"It's time,\" he repeated slowly. \"Dear God, it's time...\"\n\n***\n\nSophina groaned as she rolled over and sat up. The area around the gate was in chaos. Huge sections of the wall were simply missing. The gate itself was nothing more but a twisted lump of iron strewn about the courtyard.\n\nMarcus wasn't finished. He laughed as more sections of the wall suddenly shattered and rained down destruction on the people below it.\n\n\"Marcus! Stop!\" Sophina pleaded. She grabbed her sword and held it up in front of her. \"You're killing our men!\"\n\nMarcus didn't turn towards her. Instead, he waved his hand and picked up a groaning Magi. He floated the Magi towards him. \"Children,\" he said angrily. \"All I see are children before me. Why do they rebel against their superiors?\"\n\n\"Please,\" the Magi pleaded.\n\n\"I will teach you better,\" Marcus growled. He waved his hand again and the Magi shot toward a nearby building faster than an arrow. He cried out before his body shot through the concrete wall.\n\nBy now, dozens of groups of soldiers were trying desperately to flee through the rubble. Marcus laughed as he sent bolts of lightning at them from each fingertip. Each bolt of lightning found a soldier and nearly exploded their entire body.\n\n\"Stop,\" Sophina pleaded quietly. She took hesitant steps toward Marcus. If Ashford could sacrifice himself, then so could she. \"Marcus, stop.\"\n\nHe finally heard her. He turned toward her, his face annoyed. He waved his hand. Sophina blindly swung her sword in front of her. Marcus laughed as the sword flew from her fingertips and she jerked into the air.\n\n\"Do you wish to challenge me, mortal?\"\n\nIt hit Sophina suddenly. \n\nThat was the stain I saw in his bedroom! He stopped taking his medicine! He's been throwing it out! He's not safe!\n\n\"Marcus, please, stop this,\" she pleaded desperately. She felt the pressure around her squeeze her ribs.\n\n\"Nothing can stop me, child. No force on this earth is capable of stopping me.\"\n\nSophina cried out as the pressure intensified. She could barely breath. Where was the Marcus she knew? The man Jon so loved?\n\n\"Not...even...love?\" Sophina gasped. Her breath was coming harder and harder. She felt like she was on the breaking point.\n\nMarcus blinked. \"Love?\" He laughed. \"You don't even know what love is, child.\"\n\n\"MARCUS!\"\n\nMarcus' head whipped around. Sophina struggled to keep her eyes open. Horsemen were pouring through the gates. The man who yelled...she could see him in front. He looked furious, like Death itself.\n\nIt was Jon.\n\nSophina cried out as she was suddenly dropped. She looked up quickly and saw Marcus running with inhuman speed down a side street.\n\n\"Are you ok?\"\n\nThat voice, that beautiful voice. She looked up and saw cold blue eyes pinched in worry. \"Jon?\"\n\n\"I'm here, Sophina.\" He knelt down and ran his hand over her face. \"Are you hurt?\"\n\nInstead of answering, she grabbed his shirt and buried her head in his shoulder and wept. \"Ssh, it's ok,\" he whispered. \"Sophina, it's ok. I need to go after Marcus. Then we can catch up.\"\n\n\"No!\" she gasped, looking up at him. \"Jon...it's Ashford. He's dead. He died to save me.\"\n\nShe buried her head in his shoulder again. His arms tightened painfully around her. She held him tight and sobbed. \n\nShe could feel tears drop onto the top of her head.\n\n***\n\nReynar hurried into the room, Sereph right behind him. Evelyn was on the bed, panting and moaning.\n\n\"Evelyn? Are you ok?\" Reynar asked quickly. He rushed to her side.\n\n\"Get away from me!\" she shrieked furiously. \"Get away, murderer!\"\n\nReynar stared at her, stunned. \"What...I...don't know--\"\n\n\"He told me! He told me!\" Evelyn cried out, pointing at Sereph. \"You're going to steal my baby's power! You were just using me!\"\n\nReynar snarled and launched himself at Sereph. He tackled him to the floor and pinned him with his legs. \"Why?\" he shouted. He punched Sereph several times in the face.\n\nSereph took each punch calmly, even when his lips broke and his nose dripped blood. Reynar exhausted his anger and fear and rolled off of him. \"Why?\" he asked nobody in particular.\n\n\"She was going to find out sooner or later,\" Sereph said quietly.\n\nReynar stood up and walked to the bed. \"Now you know,\" he said quietly. He felt something in his heart tear loose.\n\n\"Yes I know!\" Evelyn snarled. She cried out in pain and clenched the blanket in her fists. Her face was beaded in sweat. \"Why? Why are you doing this?\"\n\nReynar sat down on the bed and looked away. \"Would you believe to save the world? Evelyn, your child is an abomination. It will turn on us one day, there's no doubt. But its power can help us right the world.\"\n\n\"Abomination?\" Evelyn gasped. \"But it has humanity...it isn't like those others...\"\n\n\"I said that to ease your worries,\" Reynar admitted. \"I'm so sorry, Evelyn. First you lost Daminus and now...now I'm going to take your baby away from you.\"\n\n\"You bastard,\" she moaned, as she clenched her teeth in pain. The contraction subsided. \"You murdering bastard. Take your excuses with you to the nine hells where you belong.\"\n\nReynar got off the bed and didn't turn to face her. His heart was too heavy to face her. \"I'm going to get the box,\" he told Sereph quietly.\n\n\"You're a good man,\" Sereph said fervently. \"Don't forget that.\"\n\nReynar sighed and shook his head. \"No, Sereph, I'm not.\" He turned and looked at Evelyn. She glared at him with hatred and burning eyes. \"I'm a monster.\"\n\n***\n\nJon held Sophina in his arms as they looked over the rubble that buried their friend. \"He was a good man,\" Jon said, brokenly.\n\nSophina hiccupped and said nothing. Her grief was beyond words. Jon wished he could weep with her but he had to be strong. It wasn't over yet.\n\n\"We need to prepare,\" he told her quietly.\n\nShe nodded, her eyes never leaving the rubble. \"After this is over, we will get him out of there and bury him properly?\"\n\nJon nodded. \"We will. Come, let's go plan.\"\n\nJon barely turned around to go back when Raynolt Teryus stepped in front of him. \"Jon Laurent,\" Raynolt said. \"I finally meet the man himself.\"\n\n\"Get out of my way,\" Jon told him, quietly. Sophina stiffened in his arms.\n\n\"I think you owe me something,\" Raynolt said. \"I did my part. My Magi helped even though I wasn't paid yet.\"\n\n\"Where were you?\" Sophina hissed. \"Where were you when Reynar discovered us and killed Ashford?\"\n\nRaynolt looked down at her coldly. \"What are you implying?\"\n\n\"You know what's she implying,\" Jon said.\n\nRaynolt growled. \"If I betrayed you, I wouldn't still be here, would I?\"\n\n\"I will see you dead,\" Sophina promised him.\n\nRaynolt sneered and turned back to Jon. \"My payment? Or me and my Magi won't help you attack the palace.\"",
        "Jon gently pried Sophina from his arms and stepped up close to Raynolt. \"If you think to betray me, then think again. You will beg for death before I'm through with you.\"\n\nRaynolt tried to sneer but it only came out as a frightened grimace. \"I will do my part,\" he snapped.\n\nJon nodded and walked over to his horse. He dug around in his saddlebags and took out the book he had written while riding through the desert.\n\n\"Here,\" Jon said, handing the book to Raynolt. \"The secrets of my magic.\"\n\n\"And the Shadow Dagger?\" Raynolt asked eagerly as he snatched the book from Jon.\n\n\"Everything,\" Jon promised. \"We attack at dawn.\"\n\n\"I'll be there,\" Raynolt said absently, as he stared down in awe at the book in his hands.\n\nJon walked back toward Sophina. \"Was that wise?\" Sophina asked quietly.\n\n\"He won't get much from it,\" Jon whispered back. \"The magic is too advanced for him and the secrets of the Shadow Dagger don't concern him. We got the better of this deal, believe me.\"\n\n\"Still, I don't trust him,\" Sophina said slowly.\n\n\"I don't either,\" Sanje said, stepping up to Jon.\n\nJon turned and stared at the Master Victus. He knew it would eventually come to this. \"Thank you for your help at the gate,\" Jon said. \"And for everything else you have done for Sophina.\"\n\n\"I didn't do it for her,\" he replied coldly. \"You and I need to talk. I made a promise.\"\n\n\"Later,\" Jon promised. \"There's a lot we need to do.\"\n\n\"Midnight,\" Sanje said, turning away. \"At our usual spot.\"\n\n\"What was that about?\" Sophina asked.\n\nJon shook his head. \"Let's not worry about that right now.\"\n\n\"Sophina!\" a happy voice roared.\n\nSophina groaned as Peron came jogging over to them. She gasped in surprise when he bent down and picked her up in his arms and swung her around. \"I'm so glad to see you alive!\"\n\n\"Um... me too,\" Sophina gasped, as he finally set her down. \"I suppose you already met Jon?\"\n\nPeron nodded. \"We met outside the gates. We didn't have to do much fighting there but I look forward to the dawn. I would be honored to fight by your side.\"\n\nJon grasped the man's forearm. \"I would, too. Have the men given you any trouble?\"\n\nPeron smiled and shook his head. \"No, surprisingly. I guess the betrayal at Oasis has changed their minds about a lot of things. They welcomed me back as their Chieftain. That is, if you're really sure you want to give up the title?\"\n\n\"I don't need it anymore,\" Jon replied. \"You're the true Chieftain. Lead them well tomorrow.\"\n\nPeron hesitated before turning away. \"These men follow me, Jon Laurent, but they want blood. And our entire army is marching here. I don't know if they will be satisfied with just Reynar's head.\"\n\n\"We will cross that bridge when we get there,\" Jon said. \"You know your role tomorrow?\"\n\nPeron pounded his chest in pride. \"We will whip these so-called soldiers of yours and keep their attention so you can slip around them. Don't worry about us.\"\n\n\"Thank you,\" Jon said, gripping Peron's shoulder. \"I owe you much.\"\n\nPeron smiled. \"I love the fight, Jon Laurent. You don't owe me anything else. Although...\"\n\n\"Yes?\" Jon asked hesitantly.\n\nPeron rubbed his chin and looked down at Sophina. \"A man fights better when he has a woman the night before. If Sophina would be willing...\"\n\n\"I don't think so!\" Sophina snarled.\n\n\"Well...\" Jon said.\n\n\"Jon!\" Sophina gasped. She elbowed him in the ribs. Jon groaned.\n\nPeron threw back his head and laughed. \"The God be with you, Jon Laurent! But I don't think even he can handle her!\"\n\nPeron continued to laugh as he turned away but Sophina stopped him. \"Peron...thank you, for making us laugh. We needed it.\"\n\nJon reached down and wiped away the tear that fell down her cheek. Peron's face grew serious. \"Anytime,\" he said somberly.\n\nJon held Sophina close and watched him walk away. \"I'm glad we found him,\" Jon said quietly.\n\n\"Me too,\" Sophina said, as she dug her head into his chest.\n\n\"Jon Laurent,\" a Magi Victus said, stepping to up to them. \"Master Sanje sent me to deliver a message. Evelyn Ventus was spotted in her room. She's gone into labor.\"\n\n\"Incredible timing,\" Sophina whispered in awe. She looked up at Jon. \"We attack at dawn. Will that be in time?\"\n\n\"It will have to be,\" Jon said, grimly. The timing really was incredible. Not for the first time, Jon thought that the God was still pulling strings. Did they really have a chance to pull this off?\n\n\"Jon,\" Sophina said softly, looking up at him. \"Everything's ready. Peron's men know what to do. Sanje and his Magi Victus are ready. Raynolt is bringing his Magi.\"\n\n\"What are you getting at?\"\n\n\"I need to talk to you in private,\" she whispered. \"At the hideout.\"\n\nJon sighed. He couldn't deny her, not after tonight. \"Okay, but it will have to be quick. I still need to deal with Marcus before it's too late.\"\n\nJon embraced his magic and hid them from view as they made their way through the streets. Sophina was oddly quiet and didn't say a word as they approached the hideout. It wasn't until they were safely downstairs that she spoke.\n\n\"I have something important to tell you,\" she said hesitantly.\n\nJon took a seat by the fire. \"Please, tell me. I still have much to do.\"\n\nShe nodded and perched on the edge of the chair. \"It's about something Marcus told me. It's about Sarah.\"\n\nJon twitched. \"What about her?\" he asked slowly. He had to take a deep breath. Even the name spoken aloud still made his heart ache.\n\n\"Well...he says she came to him after...after you banished her.\"\n\nJon perched on the edge of his seat, his heart in his throat. \"He didn't tell me this. What did she want?\"\n\nSophina glanced nervously at Jon and looked away. \"She...just wanted somebody to talk to, I guess.\" Sophina paused and took a deep breath. \"Jon, she never consummated the soul-bond with Berrick. She never slept with him.\"\n\nJon was standing but he didn't remember moving. He looked down at Sophina, his chest rapidly moving up and down. \"Don't!\" he warned her. \"Don't tell me this!\"\n\nSophina stood up and looked at him in pity. \"I'm sorry, but you need to know. Marcus asked me not to tell you but you need to know this. It's important.\"\n\n\"Lies!\" Jon barked. He turned away from her and paced the living room. \"Why would he lie like that? I saw her, Sophina! I saw both of them come out of his tent, half-dressed!\"\n\nSophina raised a placating hand towards him. \"She only lay with him, Jon! She couldn't deny the pull of the soul-bond but they never consummated it! She chose not to!\"\n\nJon fell to his knees. \"She...didn't betray me?\" He felt like his heart was hemorrhaging blood. No, not blood. Poison. The poison that had circulated through his veins for the past two thousand years.\n\nSophina knelt down beside him. \"No,\" she said gently. \"But knowing what Daminus and Evelyn had, can you imagine what that cost her? She still loved you, Jon. She sacrificed her life for yours.\"\n\n\"But why?\" Jon demanded, tears streaming down his face. \"Why didn't she tell me?\"\n\nSophina reached up and gently wiped the tears away. She, too, had tears swimming in her eyes. \"Because she felt like she betrayed you, anyways. She had a soul-bond with another man. She felt she deserved your banishment.\"\n\nJon collapsed into Sophina's arms. She held his head against her breast and whispered soothingly to him. Jon's mind was lost to the past. To the memories of his beloved Sarah. How her golden hair spread across his chest. How her eyes lit up every time she looked down at their son.\n\nJon wept until all the poison was out of his system. His memories, long locked away in his mind, threatened to sweep him away in their glorious beauty. But he was still here in the present. He was needed.\n\n\"Thank you,\" Jon whispered, as he pulled back from Sophina. \"You have no idea what you did for me. Thank you, from the bottom of my heart.\"\n\n\"It was my pleasure,\" she beamed. She wiped away her tears and smiled at him.\n\nJon stood up. \"I need to finish this. Sleep here and I will come get you when it's time.\"\n\n\"Jon,\" Sophina said quickly, standing up. She grabbed his hand. \"Please...stay with me tonight. Jon...I...I love you.\"\n\nJon closed his eyes and let the words wash over him. He opened them. \"Thank you, Sophina.\" He picked up her hand and kissed it. \"But I need to go.\"\n\nSophina's smile slipped away. \"That's it? Thank you?\"\n\nJon turned to go but Sophina yanked him back. \"What do you want from me?\" Jon asked angrily.\n\n\"Your love!\" she practically screamed. \"What can't you just say it?\"\n\n\"Sophina, it's been an emotional night for me,\" Jon began but she cut him off.\n\n\"Don't give me that excuse, Jon! You have no idea what I've been through these past few months! And now we lost Ashford and...and I...I feel lost...and hurt...\" She trailed off, fresh tears spilling down her cheeks.\n\n\"Sophina...\" Jon said. He was at a complete loss for words.\n\nSophina sobbed once but then held her back up straight. She looked fiercely into his eyes. \"If you don't love me, then just tell me. I can take it.\"\n\nShe looked like a faint breeze could tip her over. Jon knew the words to say but couldn't bring them out. He opened his mouth several times but nothing came out. What was wrong with him?\n\nHis heart nearly died as he saw the life drain from her eyes. Her shoulders slumped and she seemed to age several years. \"So be it,\" she said, and an old spark of her anger seemed to return to life. \"I don't need you!\"\n\nShe pushed past him. Something seem to break inside of him at that moment. He snarled and shot out his hand. He grabbed her arm hard and pulled her around.\n\n\"Ouch! Let me--\"\n\nShe was cut off by the force of Jon's lips. He could feel her surprise as he shoved her against the wall and devoured her lips with his. She overcame her shock quickly and eagerly darted her tongue inside of his mouth.\n\nJon wanted her with an urgency he couldn't explain. His hands were all over her body, wishing they were touching bare flesh and not grimy clothes. She moaned into his mouth as her hands raced across his body.\n\nJon leaned back and fumbled with the buttons on her coat. She reached down with shaky hands and helped him with the buttons. He tore off the last button and threw the coat aside.\n\nShe grabbed the bottom of his coat and started tugging it up. He raised his arms as she pulled it over the top of his head. He leaned back in and kissed her hard. The softness of her lips folded beneath the urgency of his kiss.\n\nHe reached his hands up and yanked aside the shirt she wore beneath the coat. The buttons popped off and flew across the room. He reached up eagerly and squeezed her nipples.\n\n\"Jon,\" she gasped, her head thrown back. \"Say it, please.\"\n\nJon dropped his hands from her nipples. She brought her head back down and opened her eyes. He looked into those shining eyes and let them pierce his heart. \"I love you,\" he whispered.\n\nShe closed her eyes and smiled. Another tear leaked out from beneath her eyelid. Jon leaned down and kissed the tear away, tasting the salty sweetness of it. He brought his lips down her cheek and back to her lips.\n\nShe grabbed the back of his head and kissed him hard. He dropped his hands down to her breeches and unlaced them. He kissed his way down her chest. Her hands were buried in his hair and she shuddered as he reached the top of her breeches.\n\nHe pulled them down slowly, kissing every area of flesh that was exposed. \"Jon,\" she gasped. \"I love you.\"\n\nHe pulled the breeches down to her boots. He grabbed each boot and pull them off one by one. He slid the breeches down and off her feet. He stood back up and kissed her.\n\nShe moaned into his mouth. Her hands roamed eagerly across the shirt on his chest and down to his breeches. Instead of pulling the shirt off like she did the coat, she dug her hands into his chest and ripped it off. She leaned down and kissed the muscles on his stomach.\n\nJon closed his eyes and enjoyed the sensations her lips were causing. She, too, pulled off his boots and took off his breeches. She gasped when his cock was exposed. He looked down and watched her grab it, a look of awe on her face.\n\n\"I've never seen one before,\" she whispered, looking up at him. She closed her eyes and kiss the tip of it. Jon moaned and closed his eyes.\n\nHe felt her stand up, her hand warm on his cock. \"Open your eyes,\" she said. He did. \"I've...I've never been with a man. Be gentle.\"\n\nJon leaned over and kissed her neck. She purred as he squatted down and kiss the left side of her neck, moved down to suck on each nipple, and kissed his way up to the other side of her neck.\n\nHe kissed her lips again as his hand trailed its way down her stomach. He felt her shudder against him as his fingers explored the wetness between her legs.\n\n\"Jon,\" she moaned by his ear.\n\nHe pressed her back up against the wall, his lips still engulfed in hers. He stepped between her legs and parted them with his knees. He took a hold of his cock and positioned it against her opening.\n\n\"Are you ready?\" he gasped.\n\nShe bit her lip and nodded. Jon squatted down and angled his cock upwards. He rose up as his cock slowly pressed up inside of her. She yelped and hugged his neck. He nearly stood up straight as his entire length filled inside of her.\n\n\"Slow,\" he whispered by her ear. He reached down and grabbed her thigh, picking it up for leverage.\n\n\"Slow,\" she repeated.\n\nHe thrust once, slowly. She grimaced but nodded for him to continue. He held on tight to her thigh and back as he thrust again. Again. She continued to grimace but kept nodding.\n\nHe thrust again, a little faster. This time he got a little moan. \"I love you,\" he whispered by her ear as he thrust again.\n\n\"I love you,\" she panted, her face no longer grimacing. Her eyes were closed and her mouth was slightly open.\n\nAgain and again Jon thrust. He picked up speed as Sophina continued to moan pleasurably. She even picked up both legs and wrapped them around his back. Jon held on to her ass as he continued to thrust inside of her.\n\n\"Jon, Jon, JON!\" she grunted by his ear. Jon's legs were trembling as he held her up against the wall. He felt his moment coming. From the way she was clenching his cock, hers was coming too.\n\nSophina suddenly arched her back and began shuddering uncontrollably. Jon cried out as he released his seed inside of her. He continued to hold her up as she slowly stop jerking. He pumped the last bit of seed inside of her and nearly collapsed. They fell together to the floor, next to the fire.\n\n\"I love you,\" she panted, her face shining with sweat. Her eyes were fluttering shut.\n\n\"I love you,\" he said, smiling as she drifted off to sleep. He prayed that he would always remember this moment.\n\n***\n\nSanje stood on top of the wall by the sea and looked out over the dark water. The sea spray was heavy with salt and nearly chilled him to the bone. He loved it. He loved the sound the sea made as it heaved itself against the rocks. He loved the smell of salt in the wind.\n\nBut he found no respite in the water this night. Jon Laurent haunted his every thought. When he saw him so casually hand over the secrets of the Magi Victus to Raynolt, he had to resist the urge to stab him in the back.\n\nHow dare he hand over their most precious secret! Sanje paced the wall furiously. He continued to wonder why he hadn't tried to kill him. He had made a promise, true, but what did promises count against betrayal? Still, something made him hesitate.\n\nMaybe he was just tired of being so suspicious all the time. Maybe Jon wasn't the monster he assumed him to be. It was time, perhaps, that he tried to have an open mind. Just give him one chance to explain himself.\n\n\"It's a nice night for a stroll by the ocean.\"\n\nSanje sighed. He had heard Raynolt approach but he hoped the man would turn away. \"What do you want, Raynolt? I thought you would be off enjoying your little book.\"\n\n\"Oh, I have plenty of time for that,\" he replied lightly. \"I skipped ahead to the parts about the Shadow Dagger. Fascinating stuff.\"\n\nSanje suppressed his irritation. He knew better than to let Raynolt know he got to him. \"Well, good for you. Now you know.\"\n\n\"Now I know,\" Raynolt repeated mockingly. \"Seems like you were right, after all. I can't do anything with that knowledge.\"\n\nSanje allowed himself a satisfied smile. \"I told you. Only Magi Victus can make use of a Shadow Dagger.\"\n\n\"Yes, of course.\" Raynolt walked up beside him and looked out over the water. \"I hate the smell of salt water,\" he said, conversationally.\n\nSanje smirked. \"Then I suggest you go prepare for the attack.\"\n\n\"I can't,\" he said, his voice softly rising over the ocean breeze. \"You have something I need.\"\n\nSanje turned toward him in alarm. At least, he tried to turn toward him. But his body was bound completely. Shocked, he looked down and saw the familiar runes covering his body.\n\n\"You've gotten too use to me,\" Raynolt said, turning toward him. \"You let your guard down.\"\n\n\"What is this?\" Sanje growled. \"What are you trying to prove?\"\n\nRaynolt stepped closed to him. \"What am I trying to prove?\" He appeared to think it over before answering. \"Lots of things, I suppose.\"\n\nHe showed Sanje his hand. Sanje watched, wide-eyed, as Raynolt slowly reached down to the sheath on his side. \"No,\" Sanje whispered, too stunned to even form words.\n\nRaynolt grasped the handle of the Shadow Dagger and removed it from the sheath. \"I'm trying to prove that I just won't die,\" he said, smiling. He held the dagger up to his face and studied it.\n\n\"Drop it,\" Sanje said, his voice almost shaking with fear. Drop my son! Get your filthy hands off of him!\n\n\"So intricate,\" Raynolt breathed, his eyes wide as he turned the blade in his hand. \"I can feel the power in here. That was nice of Jon to reveal that anyone can touch one of these.\"\n\n\"I'm going to kill you!\" Sanje rasped.\n\nRaynolt lowered the blade and stared at Sanje. \"It occurred to me that I may have to face Reynar tomorrow. I need extra protection when I do. And he will never suspect this.\"\n\n\"So do you think I will just let you walk away with it?\" He knew what Raynolt had to do. But was he capable of it? He just wanted his son back. He thrashed against his bonds and shouted and cursed.\n\nRaynolt watched him struggle with no expression on his face. He looked at the dagger in his hand and back at Sanje. \"You know, I always wondered, when the time came, would I be capable of killing my own son? And do you know what I figured out?\"\n\nThe razor-sharp blade slid between Sanje's ribs and up into his chest. \"I've already killed my wife, so why not my son?\" Raynolt whispered by his ear.\n\nSanje coughed blood and sagged against the bonds holding him in place. The spell disappeared and the dagger slid out of his side as he fell to the ground. \"Father,\" he whispered, as he coughed up more blood.\n\nHe felt Raynolt kneel over him. \"Thank you, for all you have done.\" He felt a hand caress his face. \"I will make a better world for all of us.\"\n\nSanje coughed again and rolled to his back. The stars shone down at him and the salt-tinged wind washed over him, filling his nostrils with its heavenly scent.\n\nIt was a good night to die.\n\n***\n\nJon watched the wall close behind him. He tried not to think whether he would see Sophina again. She looked so peaceful as she slept by the fire. He hated to leave.\n\nBut he had business to take care of. First, he had to meet with Sanje. And then he had to hunt down Marcus.\n\nMy brother...what am I going to do about you?\n\nHe feared that Marcus was already lost to him. He knew when the True-born went bad there was no reasoning with them. He tried several times in the past. If Marcus couldn't be reached, then he would have to...\n\nNo! Don't think like that, Jon. He can be reached. He can be saved. Just believe. Believe!\n\nHe forced Marcus out of his thoughts. He would concentrate on one thing at a time. The path to the wall where he usually met Sanje was nearby. Jon liked to conduct most of his business in Beggar's Hell.",
        "He easily avoided the night patrols and climbed up the seawall. Sanje would no doubt be waiting for him already. Best to get this business done and be gone. He didn't know what kind of state Marcus was in.\n\nJon knew something was wrong as soon as he started to walk down the wall. He could sense it in the subtle way the night whispered to him. He wasn't shocked when he spied a dark bundle on the top of the wall several yards away.\n\nHe approached cautiously but sensed no danger. There weren't any Magi anywhere nearby. His dagger would give him warning if there was. He knelt down by the form and shook his head when he recognized Sanje.\n\n\"This was bound to happen when you aligned yourself with Raynolt,\" Jon said sadly.\n\nSanje coughed weakly. Blood slowly dribbled past his chin. \"I...knew that.\"\n\n\"Then why?\"\n\n\"I had to do...what I must...to save the...Magi Victus.\" He coughed again, his breath rattling in his throat.\n\n\"I can't heal you,\" Jon said. For some reason, he was feeling pity for Sanje. \"Just another part of the curse. Only external magic can affect you.\"\n\n\"Don't care...about that. Listen to me...why do you hate...us?\"\n\n\"I don't hate you,\" Jon said quietly. \"I just think the Magi Victus lost their way.\"\n\n\"So did I,\" Sanje gasped. \"I tried...made deal with...Raynolt...to win our freedom.\"\n\n\"You had to know that was a losing battle,\" Jon replied.\n\n\"I...didn't have...your help,\" Sanje said, his voice growing softer.\n\nJon bowed his head. \"I...I didn't see clearly, Sanje. I just thought you were another cold-blooded killer who only cared about gold. I saw how you used Raynolt to secure your position and I despised you for it.\"\n\n\"Did...what I had to...\"\n\n\"You truly only cared about the Magi Victus?\" Pity reached Jon's voice. Sanje was so young. His face was pale and he looked scared.\n\n\"Just...wanted us...to be free...\" He coughed again, his eyes growing wide. He spit several times as he tried to breathe. \"Please...save us...please...\"\n\nJon reached out his hand and grasped Sanje's. He squeezed it tight. \"I will,\" he promised.\n\nSanje's body relaxed as he let out his last breath. A single tear rolled down the side of his face and his eyes stilled. The hand in Jon's grip relaxed and dropped to the ground.\n\nJon reached out and closed Sanje's eyes. He bent down and kissed his forehead. \"Be at peace, son,\" he prayed.\n\nJon stood up and said a spell. The wind howled in and lifted Sanje's body off the wall. Jon held on to the spell as Sanje's body was carried over the ocean. He released the spell and watched as Sanje's body splashed into the ocean.\n\nHe stood quietly on the wall and let the wind rush past him. The smell of the ocean was always so alive. He hoped Sanje would be at peace at there.\n\nJon turned away. He thought about how Sanje's Shadow Dagger was missing. He knew what that meant.\n\n\"Raynolt,\" Jon growled, and in his voice was death.\n\n***\n\nSophina stirred slowly and opened her eyes. She wasn't surprised that Jon wasn't next to her. She knew he would do what he had to. Just as she would.\n\nShe dressed quickly, sheathed the sword on her hip, and made her way outside. Thankfully, it was still dark out. She could tell that the dawn was almost here. She made her way to the nearest sewer entrance and climbed down.\n\nSomebody had marked on the walls with chalk what route to follow to come out by the palace. Sophina shook her head. Only Jon would go through that much trouble.\n\nI can't believe he loves me. It feels like a dream. The night before had truly been magical for her. She had never before experienced something as beautiful as that. And especially not with a man!\n\nMaybe it's not that Jon's a man. Maybe it's just because...well, because it's Jon.\n\nShe didn't know how to explain it to herself. All she knew was that she was in love and it didn't matter that Jon was a man or not. He was her love, simple as that.\n\nSorry Evelyn, Sophina thought, with a rueful shake of head. She recognized that the infatuation she had had for Evelyn was simply that; an infatuation. She now knew what love truly was. And it warmed her heart.\n\nAshford, I hope you don't think less of me for feeling this way right now.\n\nBut for some reason, she knew Ashford would be happy. He knew you had to embrace love when you had the chance and not give in to grief simply out of respect. He would want her to be happy.\n\nSophina reached her destination. The sewers ahead of her would crowded with Peron's men, Magi Victus, and Raynolt's Magi. Raynolt himself, for some reason, looked oddly pleased.\n\nSophina didn't let her disappointment show that Jon wasn't there. They would do without him. He would come when he was needed.\n\n\"Are we all here?\" she asked the room.\n\nAll eyes turned toward her. \"Sanje's not,\" one of the Magi Victus said.\n\nSophina tried not to let her worry show. Jon said he had to meet with Sanje. \"Well, I'm sure he will show up when the fighting starts.\"\n\nThe Magi Victus who spoke merely grunted and returned to his preparations. She turned toward Raynolt. \"Are you ready?\"\n\nRaynolt smirked. \"Oh, I'm ready. My men are ready, too. I say it's about time to depose of a king.\"\n\nSophina ignored this and turned toward Peron. \"Are your men ready?\"\n\nPeron smiled and winked at her. \"The men are ready to tear down the palace brick by brick.\"\n\n\"Well, let's try to avoid that,\" Sophina said lightly. Peron laughed.\n\n\"Where's Jon?\" he asked.\n\nSophina shrugged. \"He'll show up, don't worry.\" She turned her attention to the room at large. \"Okay, everyone, listen up. Remember the plan. Peron's men will engage the soldiers who pour through the breach in the wall surrounding the palace.\"\n\n\"The Magi Victus will accompany Peron's men and provide defense against the Magi's attacks. Raynolt and his Magi will accompany me as we make our way through the palace. Our goal is Evelyn's room on the tenth floor. She is giving birth as we speak.\"\n\n\"We must stop Reynar at all costs! He has done enough damage to this country! He has killed...too many people, many of whom were our friends.\" She bowed her head for a moment, the memory of Ashford choking her momentarily.\n\n\"This ends today. Before the sun has fully risen, there will be a new leader for this country. A strong leader. She will bring change. Her child will reshape this world and bring about peace. Reynar's reign ends today.\"\n\nThere was no raised fists and shouts of joy. Nobody rattled their weapons or beat their chests. Everyone knew what was at stake. They all nodded at her and finished their preparations.\n\nIt ends today, she thought fiercely. Her hand tightened painfully on the handle of her sword.\n\nFor you, Ashford. For you.\n\n***\n\nEvelyn groaned as another contraction made her convulse. She had never given birth before but she knew they weren't like this. She felt like she was giving birth to the God himself.\n\n\"Easy, easy,\" Reynar said soothingly. He wiped her forehead with a cloth and held her hand.\n\nHis touch revolted her but she couldn't do anything about it. The sick truth was that she needed him. This baby was too much for her. Besides, there was still a chance to change his mind.\n\n\"Reynar, please, don't do this,\" she panted. She tried to force all of her desperation into her voice.\n\nHe paused as he wiped her forehead. She forced open her eyes and looked into his own dark eyes. He must have seen the desperation in her eyes and heard it in her voice. He opened his mouth and hesitated.\n\n\"Don't listen to her, my liege,\" Sereph said, as he continued to peer beneath Evelyn's dress.\n\n\"Shut your mouth, snake!\" Evelyn hissed. Her stomach clenched painfully and she cried out.\n\nReynar resumed wiping her forehead. \"I'm sorry, Evelyn,\" he said, mournfully. \"I wish there was another way. I really do.\"\n\n\"Just wait,\" she pleaded. \"Just wait to see how the child turns out.\"\n\nReynar was already shaking his head. \"Like I told you, this child will be more powerful than any of us within a few years. I can't take that chance.\"\n\nEvelyn didn't know what else to say. She had been trying for hours to change his mind. Every time she thought she made progress, Sereph would remind Reynar why he was doing it.\n\n\"Who is that man?\" she gasped as another contraction hit her. How long was this going to last? \"Why do you listen to him?\"\n\n\"Because he's my brother,\" Reynar said, quietly.\n\n\"Reynar!\" Sereph snapped, his head popping up over her dress to stare angrily at him. \"That's enough!\"\n\n\"I don't care, Sereph! You tell me to be quiet one more time and I will end you! You got that?\"\n\nEvelyn gaped at them both as a deadly silence filled between them. Reynar stared hard at Sereph. Sereph growled under his breath and ducked back below Evelyn's dress.\n\n\"He's your brother?\" she gasped.\n\nReynar nodded as he gently wiped her forehead again. \"My mother wasn't the only price my father had to pay to end the first war against Raves. He had to sleep with the desert goddess so she could bear him a child.\"\n\n\"Your father slept with the desert goddess?\" Evelyn was so amazed that she didn't even feel the next contraction.\n\nReynar smiled. \"That's how I reacted when I found out. She raised Sereph until he was a young man and then sent him to me. I took him back with me after spending my year with the goddess.\"\n\n\"But why?\"\n\n\"She said I needed somebody in a secret position to watch over me and protect me. I thought I already had all the protection I needed but she insisted. Besides, he's my brother.\"\n\n\"That's why he looked familiar,\" Evelyn said. She remembered back to when she first saw him. She thought then that something looked familiar about him. \"Except for his light coloring, he looks a lot like you.\"\n\nHe squeezed her hand as another painful contraction hit her. Once she collapsed back to the bed, he continued. \"Yes, I was always amazed nobody picked up on that. But I guess people only see what they expect to see.\"\n\n\"He speaks poison into your ear,\" Evelyn whispered.\n\nReynar looked back at Sereph to make sure he wasn't listening. \"He speaks the truth,\" he whispered back. \"He has been my most loyal supporter.\"\n\n\"The goddess must have wanted to make sure you go through with it,\" Evelyn reasoned. \"So she must have planted him here.\"\n\nReynar stared at her, his face troubled. He opened his mouth to speak but was interrupted by a knock at the door. \"I said no interruptions!\" Reynar growled, as he made his way over to the door.\n\nHe opened the door and swung it shut behind him. Evelyn grimaced as a minor contraction went through her.\n\n\"It won't work,\" Sereph said suddenly. His face popped up over her dress, his eyes flashing dangerously. \"You can't turn him against me. I'm his brother. I'm blood.\"\n\n\"I will see you sent to the nine hells for this madness,\" she promised him.\n\nSereph smirked. \"You and your child won't live out the night.\" He disappeared back below her dress.\n\nEvelyn prayed. She prayed to the God and she prayed to Daminus. She prayed to whoever might be listening.\n\nPlease, save my child! Daminus, if you truly are a part of this child, then save us!\n\nReynar walked back into the room. He looked deeply troubled. \"They're attacking the palace,\" he told Sereph. Evelyn felt her heart lift with hope.\n\n\"Bad timing,\" Sereph growled. \"There's nothing we can do about it. The child is almost crowning. Soon you will have all the power you need to deal with them. For now, we have more than enough guards and Magi to handle them.\"\n\nHurry, Sophina! Please!\n\n***\n\nSophina grunted as the aftershocks of the explosion rattled her teeth. The wall of the palace couldn't withstand the force of their Magi, runes of protection or no. Predictably, as soon as the smoke cleared, soldiers were already pouring out of the hole.\n\n\"The God be with you, Peron,\" she prayed, as Peron's men clashed head on with the palace soldiers.\n\n\"While they're distracted,\" Raynolt said, gesturing to the wall in front of them. \"I already cast the spell on you.\"\n\nSophina couldn't help but shiver at that. Ignoring the feeling as best as she could, she put her hands on the wall and grunted in satisfaction as they stuck. She began to slowly climb hand over hand up the palace wall.\n\nShe and the rest of the Magi made it to the top of the wall without incident. Raynolt cast another spell and they all drifted down toward the ground as light as feathers. Sophina's boots touched down and she felt the spell lifted.\n\n\"This way,\" Raynolt said, pointing at the main door of the palace.\n\nAs soon as he spoke, the door swung open and more soldiers poured out. They seemed surprised to find themselves face to face with nearly seventy-five Magi. Raynolt and his men quickly washed aside the soldiers with various spells.\n\nSophina trailed behind Raynolt as they entered the palace. The entrance way was flanked by huge pillars and seemed to go on forever. As soon as they stepped in, a wall of fire covering the entire room flew at them.\n\n\"This is where it gets fun!\" Raynolt said, smiling.\n\n***\n\nReynar glanced at the door nervously as another huge explosion rocked the palace. The chandelier above them swung dangerously. \"This is not good,\" he said to Sereph.\n\n\"The baby is coming,\" he growled, as he worked furiously beneath Evelyn's dress. \"Only a few more minutes.\"\n\n\"They will kill you!\" Evelyn gasped, as she strained to push the baby out.\n\n\"They can try,\" Sereph said.\n\nReynar could only hold Evelyn's hand. He didn't know what to say. Her friends seemed so intent on getting to her. Could he really have been fooled? Could the goddess have planned all of this? For what purpose?\n\nPower. It was simple, really. The dagger he would use could be used by any magic user. Once it absorbed the essence of Evelyn's child, any Magi could wield it. But was he really being tricked?\n\n\"Get the dagger ready!\" Sereph said excitedly. \"The baby is coming!\"\n\n\"No!\" Evelyn gasped. She sat up, her face red with the strain, as she couldn't help but push. \"Reynar, please!\"\n\nReynar looked down at Sereph, at his brother. He looked up at Reynar, his eyes blazing with excitement. Why was his brother so excited? They were about to murder an innocent child.\n\n\"Sereph, did the goddess send you here to make sure I did this?\" Reynar asked.\n\nSereph glanced up sharply. \"No--what? No, of course not! Reynar, please, the baby's about to come. Grab the damn dagger!\"\n\nReynar let go of Evelyn's hand and picked up the box at his feet. Now that the time had arrived, he felt curiously calm. His hand didn't shake as he lifted the lid. He gripped the dagger tightly and pulled it out.\n\n\"Noooo!\" Evelyn howled as she saw the dagger. \"NOOOOO!\" she cried out, as she gave one last push.\n\n\"Here it comes!\" Sereph said, his hands busy beneath her dress.\n\nReynar looked down at the dagger and then looked at his brother. Why was he so excited?\n\n***\n\nSophina knew, deep in her gut, that they would be too late. The battle raging in the palace was taking too long. There were on the ninth floor but their group was already down to ten Magi.\n\n\"We've lost so many!\" Sophina gasped.\n\n\"Duck!\" Raynolt ordered, as a icicle the length of a spear flew at her. Sophina dropped to the floor. The icicle flew by and shattered against the wall.\n\nRaynolt moved away from the corner of the wall and sent a fireball down the hall. He ducked back and leaned against the wall, panting. The other Magi took turns peering around the corner to fire spells.\n\n\"How many are left?\" Sophina asked, as she got up.\n\n\"Three,\" Raynolt panted. \"And they're being really stubborn.\"\n\nSophina shook her head. It was taking too long. Evelyn needed them. They were just one more staircase away. \"I need to end this now! Cover me!\"\n\n\"What? No, what are you--\"\n\nShe heard Raynolt curse behind her as she took off down the hallway. The Magi taking cover behind the ruins of the palace wall popped out and gaped at her. One flung his hand at her.\n\nShe saw the arrow of flame coming at her and timed her swing perfectly. The fire died against her blade. The other two made throwing motions but she saw nothing. The air in front of her seemed to shimmer but then suddenly cleared.\n\nThank you, Raynolt, she thought, as she made up the ground between her and the three Magi. She dove head-first and rolled up back to her feet, her sword leading the way. She stuck it through the chest of one female Magi and quickly pulled it out.\n\nShe moved as fast as the wind, just like Jon taught her. She was on the other Magi before he could even blink. Her sword took his head off clean at the neck. She whirled to face the other Magi.\n\nThe last Magi, a woman with dark hair and eyes, cursed and shoved both arms out in front of her. Sophina spun around, her sword slicing randomly at the air. She might look ridiculous but it worked. The Magi's eyes widened in surprise.\n\nSophina cleared the distance between them with one jump and slashed down diagonally with her sword. The woman screamed as Sophina's sword cut her shoulder to hip.\n\n\"Unbelievable,\" Raynolt gasped, as he ran up behind her. The other Magi trailed behind him.\n\n\"The stairs!\" Sophina said, pointing with her sword. She ran toward them and took them two at a time. The stairs led to a landing between floors. She grabbed the post on the railing and used it to help her turn quickly up the other flight of stairs.\n\nShe stopped at the next landing and waited for the Magi to catch up. \"Which one is her room?\" she asked Raynolt.\n\nRaynolt had his hands on his knees as he tried to catch his breath. \"Maybe it's the one with all those Magi guarding it!\" he snapped.\n\nSophina ignored him and studied the hallway. She could see the door Raynolt referred to. It had ten Magi standing outside it, looking anxiously at the stairway where Sophina was hiding. They knew she was coming.\n\n\"We don't have time for this!\" she hissed angrily.\n\n\"We have to distract them,\" Raynolt said, as he peered around the corner to study the hallway. He turned to his Magi. \"Can you buy us time to get to the room?\"\n\nThey all nodded at him. \"We're with you all the way, Grand Master. We'll distract them enough.\"\n\nRaynolt turned back to Sophina. \"Is that good enough for you?\"\n\nSophina nodded. \"Let's do it.\"\n\n***\n\nJon leaned against the wall, exhausted. He had hunted Marcus throughout the night but couldn't find him. Dawn was peaking over the horizon and he thought he heard a loud explosion in the distance.\n\nSo it has started. He shook his head. What was he doing? Marcus obviously didn't want to be found. Sophina needed him. Evelyn needed him.\n\nWhat does your heart tell you? The thought seemed to come from the wind. He didn't know if he thought it or if it was a memory, but it was right all the same. He was needed elsewhere.\n\n\"Soon, Marcus, I promise,\" he whispered. He jumped to the next roof below and started to make his way back toward the palace.\n\nHe was halfway back when a huge explosion nearly knocked him off a roof. Startled, he looked back behind him.\n\nIs that smoke? It looks like it's coming from...the Emporium! Marcus!\n\nMarcus was apparently attacking the Emporium. His True-born mind must have decided to eliminate the Magi, as they tried to do back in the War of the Gods.\n\nJon hesitated. He was torn in two different directions. But which way should he go?\n\nWhat does your heart tell you?\n\nGrimacing, Jon continued on. He would help Sophina first. He just prayed Marcus didn't cause too much damage.\n\nWhy are there even Magi at the Emporium right now? Why aren't they at the palace?\n\n***\n\n\"Damn!\" Sophina cursed, as she ducked behind the corner. The lightning bolt nearly took her head off.\n\n\"So much for that plan,\" Raynolt growled, as he looked at the bodies of his Magi strewn across the floor.",
        "\"Reynar must have reserved the most powerful Magi for this floor!\" Sophina panted.\n\n\"I was wondering why there wasn't as much resistance as I thought there would be,\" Raynolt whispered. \"Still, even with those ten Magi over there, it doesn't seem like all the Magi are here.\"\n\n\"Never look a gift horse in the mouth,\" Sophina said. She peered around the corner. \"Is there nothing we can do about them?\"\n\n\"I'm almost out of energy,\" Raynolt gasped. \"Besides, several of those Magi are 10th Tier Magi.\"\n\n\"Evelyn,\" Sophina whispered, as she stared longingly at the door. \"I don't know what else--\"\n\nShe yelled in shock as the window at the end of the hallway exploded. The Magi yelled and then the ground beneath her shook. She heard the walls cracking and the sound of thunder.\n\n\"What in the nine hells?\" she gasped, looking at Raynolt. Raynolt looked as shocked as her.\n\nShe peered around the edge. Dust was still settling in the hallway. She thought she could make out a shadowy figure. Her heart skipped a beat as it began to dawn on her.\n\n\"What are you doing?\" Raynolt yelled as Sophina ran into the hallway.\n\nBut she knew what she was doing. \"Jon! Jon, is that you?\"\n\n\"Sophina! Oh, thank the God!\"\n\nShe ran into his arms and hugged him tight. \"I knew you would come for me.\"\n\n\"Always,\" he whispered.\n\n\"Did you kill all ten of them?\" Raynolt asked, his voice filled with awe.\n\nJon set Sophina down and nodded. \"I surprised them. Still, there were children compared to me and my dagger. Is that Evelyn's door?\"\n\n\"Yes!\" Sophina gasped, as she ran to it and pulled on the handle.\n\n\"Evelyn!\"\n\n***\n\n\"Here it is!\" Sereph yelled, holding up a baby covered in blood and fluids. \"Reynar, take it!\"\n\nReynar glanced at Evelyn. She had collapsed back against the bed and was moaning. Reynar reached out his hands reverently and took the child in his hands.\n\nIt was a girl. She already had blonde hair that curled tightly to her head. And the most remarkable thing of all, pale blue eyes stared up at him.\n\n\"Her eyes are already open,\" Reynar breathed in awe. \"She's not crying! Sereph, why isn't she crying?\"\n\nSereph cut the umbilical cord that was still attached to Evelyn and shook his head. \"I don't know, my liege. But hurry! Jon Laurent is almost here! Do it!\"\n\n\"My baby,\" Evelyn moaned suddenly. Reynar looked over at her. Her hand was shaking as she held it toward the child. \"Please...my baby.\"\n\nReynar looked down at the child and at the dagger in his other hand. She was small enough to fit in one hand. He cupped her gently and raised the dagger with the other hand. Still, the child stared up at him with those haunting blue eyes and made not a sound.\n\n\"By the God,\" Reynar whispered, his hand suddenly shaking. \"What am I doing?\"\n\n\"Doing what you must!\" Sereph urged him. \"Quickly, I hear them--\"\n\nThe room shook as some type of explosion rocked the hallway. Reynar stumbled and nearly dropped the child.\n\n\"They're here! Do it!\" Sereph pleaded.\n\n\"No...not my baby...\" Evelyn moaned.\n\nReynar raised the dagger once again. The baby still made no sound. She was covered in various fluids but she still looked so beautiful, especially those blue eyes. They stared innocently up at him.\n\n\"What am I?\" he whispered to the child.\n\nShe blinked and almost seemed to cock her head. What indeed was he? Was he a monster?\n\nThe door exploded open.\n\n***\n\n\"Evelyn!\" Sophina screamed.\n\nJon cursed as he jumped into the room and saw Reynar, his dagger hovering over the child. A man standing next to Reynar, his eyes burning silver, hissed and flung his hand out. Raynolt cried out as he entered the room, only to be blown to the side by a ball of fire.\n\nJon instantly wrapped the man in runes of binding. \"Try any more magic and I will kill you,\" he warned him.\n\nThe man snarled at him but didn't make any movements. Jon turned toward Sophina. \"Are you ok?\"\n\nShe nodded. \"I think Raynolt's dead, though. That spell took him right in the chest.\"\n\n\"Good,\" Jon growled. He pointed a finger at Reynar. \"Drop the dagger, Reynar.\"\n\nReynar, who still stared down at the child and seemed not to notice Jon's entrance, shook his head. \"What am I? Can I really kill this child?\"\n\n\"Sophina...please...stop him,\" Evelyn pleaded.\n\n\"Evelyn!\" Sophina cried, as she ran toward her.\n\n\"Help me up,\" Evelyn said, her voice grim. Evelyn put her arm around Sophina's shoulder and was hauled out of bed. Sophina walked her towards Jon.\n\nJon looked back at Reynar. \"Reynar, you still have a chance. Don't become that monster you fear. Give the child back to Evelyn.\"\n\n\"Don't listen to him, my liege!\" the man who was bound cried. \"He wants to destroy this world by letting that child live!\"\n\nReynar finally looked over at Jon. \"Jon Laurent,\" he said, as though dazed.\n\nJon nodded. \"Reynar Lobare...my descendant.\"\n\nReynar shook his head. Anger seemed to return some life to his face. \"Don't you taunt me with that. I know what you are.\"\n\n\"What am I?\" Jon asked quietly, as he slowly moved toward Reynar.\n\nReynar held out his dagger. \"Don't move! I will kill this child and take her power! You won't stand a chance against me then, Jon!\"\n\nJon held out his hands. \"You hold all of the power right now, Reynar. Just please listen to what I have to say.\"\n\n\"Lies!\" the bound man screamed. \"That's all he will tell you!\"\n\n\"Enough, Sereph!\" Reynar growled. He pointed at Jon with the dagger. \"Speak.\"\n\n\"I'm trying to help save this world, Reynar. And I know you want to, as well. Help yourself by helping me. Give Evelyn the child.\"\n\n\"Please, Reynar,\" Evelyn pleaded, her eyes filling with tears, as she sagged against Sophina. \"I've already lost Daminus.\"\n\nReynar stared at her, his eyes wide. \"Evelyn...I...\" He shook his head. \"No! How do I know I can trust you, Jon?\"\n\n\"I can stand here all day and tell you how you were fooled by Jocelyn, who was really the goddess you spoke to. I can tell you how she manipulated all of this so that she could seize that dagger from you and use it for herself.\"\n\nReynar shook his head. \"I can't believe that...I...I don't know what to believe.\"\n\n\"I know,\" Jon said, nodding. He moved ever so closer to Reynar. \"That's why I won't try to convince you. I will just say this; you wish to carry out the God's orders, yes?\"\n\n\"Of course,\" Reynar said. He looked down at the child in his hand and shook his head. He backed up a step. \"That's all I want.\"\n\nJon took another step closer to him. \"Reynar, forget about me and whether you can trust me. Think about what the God would want. Let me ask you one question, okay?\"\n\n\"Okay,\" Reynar said slowly. He raised the dagger in the air and poised it over the child. \"One last question, Jon. Then I do this.\"\n\n\"That's fair,\" Jon said, as he took another step closer. \"My question is this; would the God really want you to sacrifice a child? Search your heart and answer that question for me.\"\n\nTear's streaked down Reynar's face and dropped onto the child in his hands. The dagger wavered in the air. Jon took another step; he was almost by his side now.\n\n\"Don't listen to him, my liege!\" Sereph pleaded one last time.\n\nBut the damage was already done. Reynar's arm fell to his side and the dagger dropped to the floor. Jon rushed over and snatched the child from his hand.\n\n\"My baby!\" Evelyn cried as Jon placed the child in her arms. She bent over the child and began to weep.\n\nSophina looked over at Jon, her face beaming with pride. Jon smiled at her. It was over. It was finally over.\n\n\"Forgive me,\" Reynar cried. He was on his knees and was sobbing brokenly.\n\nJon walked over and knelt by him. He placed his hand on his shoulder. \"The God will forgive you,\" he whispered by his ear. \"If you can learn to forgive yourself. I had to learn that the hard way.\"\n\nJon stood up and walked back over to Sophina and Evelyn. \"Will you be okay watching her?\" Jon asked, nodding at Evelyn.\n\nSophina nodded and placed her hand on Evelyn's shoulder. \"No harm will come to her, I swear it.\"\n\n\"I need to stop Marcus,\" Jon said.\n\nSophina looked at him with pity. \"Do whatever it takes to end this,\" she said. She hugged him and kissed him on the lips. \"I will take care of everything here. I will have Reynar tell his men to stand down.\"\n\n\"Good,\" Jon said, nodding. \"I will meet you here tonight. I love you.\"\n\n\"I love you, too.\"\n\n***\n\nSophina smiled sadly as Jon disappeared out the door. She hoped he would be alright. She prayed that Marcus would make it back okay.\n\n\"So, you and Jon, huh?\" Evelyn asked, her eyes twinkling. The child was busy sucking at her tit.\n\n\"Yeah,\" Sophina said, looking down lovingly at the child. \"Evelyn, she's so beautiful.\"\n\nEvelyn beamed as she looked down at her daughter. \"I know,\" she said, her voice breaking up. \"She looks so like Daminus with her curly blonde hair and blue eyes.\"\n\n\"I can't believe this child will save the world,\" Sophina said.\n\n\"Sereph,\" a voice growled behind her. She grabbed her sword and whirled around. But it was Reynar, who was walking toward the bound Sereph with murder in his eyes.\n\n\"My liege...\" Sereph stammered.\n\n\"You lied to me,\" Reynar growled. \"The goddess sent you here to make sure I went through with this, didn't she?\"\n\nSereph shook his head frantically. \"No, my liege, I swear it! I just wanted to--\"\n\n\"Enough lies!\" Reynar roared. He backhanded Sereph viciously. \"Tell me the truth!\" Another vicious backhand.\n\n\"All right, you bastard!\" Sereph roared. \"Yeah, I did what my mother ordered me to do. So the joke's on you, Reynar!\"\n\n\"You betrayed me?\" Reynar gasped, sounding like a child who just had his favorite toy taken from him.\n\nSereph spat at him. \"Of course, you blind fool! Do you think I liked being your servant? I was just waiting for this moment! I was waiting for my mother to take--\"\n\nSereph never finished the sentence. Reynar stared coldly down at him as he grabbed his neck in one hand snapped it viciously to the side. The runes around Sereph must have faded because his lifeless body slumped to the side.\n\n\"I'm sorry,\" Sophina offered Reynar. She really did feel sorry for him, despite the anguish he had put them all through. He was a good man, just misguided.\n\nReynar nodded as he looked sadly down at the body. Sophina left him to his grief as she turned back to Evelyn and her child. \"So, any idea what you will name her?\"\n\nEvelyn smiled and looked up at Sophina. \"Actually, I was thinking of naming her--\"\n\n\"Aaah!\"\n\n***\n\nReynar stared down at the body of his brother and felt nothing. Perhaps there was nothing left in him to feel at all. He had been betrayed and made to look like a fool. Nothing made sense anymore, not in this life.\n\nHe knew there could be no forgiveness for the things he had done, thinking he had done the right thing. Jon may think there was forgiveness, but some things added up that damned the soul.\n\n\"I told you never to turn your back on me,\" a voice whispered by his ear. He wasn't totally shocked to feel a blade enter his back and pierce his heart.\n\n\"Aaah!\"\n\nHe felt his body suddenly stiffen as all the energy he possessed was leached out. Raynolt had stabbed him with the dagger he was going to use on the child. He wasn't going to die; his soul was to be bound in a dagger for all time.\n\nForgive me, Evelyn...\n\n***\n\nEvelyn nearly jumped out of her skin as she heard a moan of pain. She looked up and saw Raynolt standing behind Reynar. Reynar was jerking wildly.\n\n\"Raynolt!\" Sophina screamed. She unsheathed her sword. \"Let him go!\"\n\n\"As you wish,\" Raynolt cackled, as he shoved Reynar to the floor. Evelyn knew he was already dead.\n\n\"What did you do?\" Sophina demanded.\n\nRaynolt held up the Shadow Dagger; the blade was slick with blood and only the first two runes on the blade were lit up. \"What power! And this blade has so much more room for more!\"\n\nSophina moved in front of Evelyn. \"Stay behind me,\" she whispered.\n\nEvelyn took her breast out of the child's mouth. The baby immediately began to wail, the first sounds she had ever made. Evelyn tried to embrace her magic, but she was physically and mentally exhausted.\n\n\"Give me the child,\" Raynolt said, a mad gleam in his eyes. \"You have no idea what this power feels like! Give me the child, Evelyn, and I can make this world anything we want it to be!\"\n\n\"I'm going to send you to the nine hells!\" Sophina growled. She waved her sword in front of her. \"Care to test your new power against my sword?\"\n\n\"You are so ignorant,\" Raynolt said, shaking his head. \"I just don't hold raw power in my hand; I hold Reynar's knowledge! I know so much more magic now! Your sword is nothing against this.\"\n\n\"Then let's find out,\" Sophina said, grimly. \"Get ready to run, Evelyn,\" she whispered.\n\n\"No, I can't leave you,\" Evelyn whispered back. She tried desperately to embrace her magic again but nothing came. The child continued to wail in her arms.\n\n\"You have to!\" Sophina whispered fiercely. \"I swore to protect you! Now get ready!\"\n\n\"As you wish,\" Raynolt said, walking toward Sophina. He waved his hand and Sophina slashed wildly in front of her.\n\n\"Go!\" Sophina cried.\n\nEvelyn held the child tight in her arms and ran for the doorway.\n\n***\n\nSophina spared one glance at Evelyn before turning her attention back toward Raynolt. \"As much as I like playing with you, I really need to go after her,\" Raynolt said.\n\nSophina gasped in pain as a spell slipped past her sword and slammed her against the wall. She struggled to move but she was pinned by invisible runes.\n\n\"I never cared much for you,\" Raynolt said, walking up to her and twirling his dagger. He stopped in front of her.\n\n\"How did you survive that fireball?\" Sophina asked quickly, hoping to stall him.\n\n\"With this,\" he replied, reaching behind his back. He took out another Shadow Dagger. \"This one I got from Sanje. It allowed me that block that fireball but, at the same time, make it appear as though I got hit with it. It's useless now, of course.\"\n\n\"So you killed Sanje, is that it?\"\n\nRaynolt laughed. \"Are you trying to stall me? You know, I really don't want to taint my new dagger with your weak essence. So maybe Sanje's dagger isn't so useless after all.\"\n\nSophina cried out in shock as Raynolt thrust the dagger into her stomach. She clenched her teeth as pain radiated from her stomach. Raynolt stepped back and nodded. \"A mortal wound, but it won't kill you right away. Enjoy your last minutes. Goodbye, Sophina.\"\n\nShe wanted to scream at him, to delay him longer, but he was already gone and the pain was too much. She looked down at the dagger and tried to move her arms but she was still pinned by Raynolt's spell.\n\nShe could feel her life drain away as she hung limply against the wall.\n\nIs this how it ends? I always thought it would be on some battlefield. I never wanted to die, having failed Evelyn. Oh, please God, help me! Help me save Evelyn!\n\n***\n\nRaynolt laughed as he made his way down the hall. The power was invigorating! Who knew Reynar possessed such power! And the dagger could hold more, much more. He nearly salivated at the thought of harnessing the power of Evelyn's child.\n\nHe would not hesitate as Reynar did. Reynar lacked the courage to obtain godlike power. Raynolt did not. He would plunge this dagger into that child and steal her soul. Ultimate power would be his.\n\nThis world will change. Oh yes, this world will change. I will finally be able to make the changes I've always wanted. Mother, Father, would you be proud of me?\n\nHis parents had always been so proud of him. He remembered their beaming smiles as he became the youngest ever member of the 1st Tier of the Magi. They would understand. They would approve.\n\nNever again, Mother and Father, will parents have to die in a battle they had no business being a part of. There will be no more battles! Nobody will stand against me!\n\n\"Evelyn! Stop running! You know you can't outrun me, not in your condition!\" Raynolt cried out, as he descended the stairway.\n\nHe rounded the corner and spotted her at the end of the hallway. She was barely limping along as she used one hand on the wall for support. He laughed. \"Stop this, Evelyn! It's pointless!\"\n\nHe heard her cry out as she slumped against the wall and slid down into a sitting position, her child curled tightly to her chest. Raynolt didn't hurry as he calmly made his way down the hallway.\n\n\"Give me the child,\" he said, in his most charming voice. \"Give me the child and I will spare your life. Hell, you could even become my queen. What do you say?\"\n\nEvelyn looked up at him and spat. \"I would rather die.\"\n\n\"If that's the way you want it,\" Raynolt said, his good mood suddenly turned sour. He reached down with his dagger. \"Say goodbye to your mother, child.\"\n\nA flash of golden light. Rushing air. The impact of his body as it slams against the wall. Dizziness. Spots. Breath wheezing in his chest. The acrid taste of blood in the back of his throat.\n\nRaynolt shook his head and sound returned. He was slumped against the wall, opposite of Evelyn. She looked stunned as she stared down at the child in her arms.\n\n\"Damn child,\" Raynolt gasped, as he struggled to stand up. His ribs creaked alarmingly but he didn't seem to be in mortal danger. Still, it took him several minutes to stand up and limp over to Evelyn.\n\n\"No more surprises,\" Raynolt growled. He drew on the power of the dagger and prepare a particularly nasty spell. \n\n\"No, she's all done,\" Evelyn said quietly. \"At this age, she probably has energy for only one spell.\"\n\n\"A lot that did her,\" Raynolt spat. He wiped a trail of blood away from his eye. \"You're still going to die.\"\n\n\"It wasn't meant to kill you,\" Evelyn replied. She looked up at him. \"Just delay you.\"\n\n\"Delay me? What does that--\"\n\nA sword burst through his chest. Raynolt didn't even feel any pain. He just looked down in stunned disbelief at the sword that was protruding from his chest.\n\n\"Your spell wore off when you got knocked unconscious,\" Sophina Crews whispered by his ear. \"Now, just die already, you bastard!\"\n\nRaynolt obliged her.\n\n***\n\nEvelyn could only sigh in relief as Raynolt was kicked off Sophina's sword. \"Thank the God, Sophina. I thought he had--Sophina!\"\n\nEvelyn cried out as Sophina fell to the floor. She crawled over to her. Evelyn moaned when she saw the dagger sticking out of her stomach. \"No, no, no, Sophina!\"\n\n\"It's alright,\" Sophina said, softly. \"I got to save you.\"\n\nEvelyn held her baby in one arm and used her other arm to cradle Sophina's head. \"Sophina...I can't...I can't use my magic. I can't use my magic! I can't...\" She sobbed as the truth hit her.\n\nSophina's hand came up and rubbed her tears away. \"I was in love with you,\" she whispered. \"Did you know that?\"\n\nEvelyn nodded, her vision swimming in tears. She kissed Sophina's palm. \"I knew. I was flattered.\"\n\nSophina managed a weak laugh. \"I...always dreamed I would die protecting you. That's...how I wanted to go out. I can't believe...I got my wish.\"\n\n\"Don't say these things,\" Evelyn pleaded. \"You're going to be okay.\"\n\n\"Evelyn,\" Sophina suddenly gasped, her eyes opening wide. \"Tell Jon...tell him I love him...tell him don't be afraid...to love.\"\n\n\"I will,\" Evelyn promised. Several tears dripped off the edge of her nose. \"I will, Sophina.\"\n\nSophina's eyes stared sightlessly above her. \"Tell him...tell him...don't be afraid...tell him...\"\n\nEvelyn bowed her head over Sophina. There was nothing she could say. She felt one last, hot breath on her cheek and then nothing.\n\nThe child began to cry.\n\n***\n\nJon used his magic to enhance his speed as he jumped over rooftops. The sun was truly beginning to rise and still no signs of life could be seen. It seemed people knew better than to come out when they heard explosions.\n\nJust hang on, Marcus!\n\nHe jumped the last few buildings and landed with a dull thud in front of the Emporium. Smoke rose from the pile of ashes that was the entrance. He could hear screams coming from the courtyard.",
        "Jon raced inside and stopped. Magi bodies littered the ground all around him. And in the middle of all that carnage stood Marcus. He was standing in front of the Emporium and gesturing with his hands. Magi were flying out of windows and falling to the earth.\n\nMarcus was laughing. There were no hiding spots for Magi when a True-born came calling.\n\n\"Marcus!\" Jon screamed.\n\nMarcus twitched. He lowered his hands slowly and turned toward Jon. He cocked his head sideways to stare at him. The golden light dimmed from his eyes. His eyes were completely colorless.\n\n\"No, Marcus,\" Jon said softly. He had seen eyes like that far too often in another lifetime. He tightened his grip on the dagger.\n\n\"Have you come to witness the birth of a god?\" Marcus asked.\n\n\"There already was a birth today,\" Jon replied.\n\nMarcus scowled. \"Yes, that child. I will deal with it shortly. There is no room for another god in this world.\"\n\n\"You sound just like them,\" Jon said sadly. \"Just like the True-born we had to destroy.\"\n\nMarcus shrugged. \"They were weak. I am not. I was a chosen one of the God. An oracle. I will succeed where they failed.\"\n\n\"Then you will have to kill me,\" Jon said, as he raised his arms in the air.\n\nMarcus laughed. \"Do you think this pains me? I will finally be rid of you.\"\n\n\"Then do it,\" Jon said, seriously. He stuck his chest out. \"Kill me. Kill the only family you have. Kill the only person who ever loved you, who ever looked out for you. Kill your brother.\"\n\nMarcus growled. \"Your arrogance offends me, little child. You were not the world to me.\"\n\n\"You were to me,\" Jon said quietly. He lowered his arms. \"I wouldn't have made it this long without you. You sustain me, my brother. You and your faith. It carried me to this point. I love you. I love you.\"\n\nMarcus twitched his head sideways. \"Your petty mortal concerns do not affect me. I am above them. I am perfect.\"\n\nJon stepped closer to him. \"Then why do you hesitate? Kill me and be done with it. Claim this world for your own.\"\n\nGolden light filled Marcus' eyes. He pointed his finger at Jon. \"Do not tempt fate, mortal. I will be gracious and allow you to leave. Push me and you die.\"\n\nJon took another step further. \"I'm not leaving. And I don't care about death. I will gladly die if I have to live in a world without my brother. You kept the faith, Marcus. We have been led here, to this moment. Just keep it a little while longer.\"\n\nThe muscles in Marcus' face spasmed. He growled and took a threatening step toward Jon. \"Be gone from here! This is your last chance.\"\n\nJon stopped in front of Marcus. \"Okay, I will leave. Or you can kill me. Just tell me you love me. Just say those words and I will do whatever you want.\"\n\nMarcus visibly struggled to open his mouth. \"Jon...leave! Go! Before you die!\"\n\n\"I will die for you,\" Jon replied sadly. \"For you, I would gladly die. Before I do, just tell me you love me. If the words mean nothing, then just say them. I love you, Marcus. Do you love me?\"\n\nThe golden light intensified in Marcus' eyes. He stepped toward Jon and raised his hand. Jon closed his eyes and opened his arms.\n\n\"I'm ready,\" he whispered.\n\n\"I love you, you damn fool,\" Marcus rasped.\n\nJon opened his eyes and stared into Marcus' soft blue eyes. \"Welcome back.\"\n\n\"Not for much longer. I can't control it anymore, Jon. It's a struggle just to talk to you like this.\"\n\nJon felt fear clench his heart. \"What are you saying?\"\n\nMarcus smiled at him sadly. \"It has to end here, Jon. I have one more role to fulfill.\"\n\nJon shook his head. \"No! No more fulfilling the God's orders.\"\n\n\"I have to keep the faith, right Jon? I was told, when the time came, to ask you to make one more sacrifice. I tried to deny it, because I couldn't place that burden on you. But it's time. It has to be done.\"\n\nJon shook Marcus by the shoulders. \"No more sacrifices! Please, just come back with me. See Evelyn's new child! See the future we fought so hard for.\"\n\nMarcus smiled, though his eyes look strained. \"I don't have much time here, Jon. This needs to end now. You know that rune on the bottom of your Shadow Dagger? The one you never figured out?\"\n\n\"I don't care about that!\" Jon yelled, the fear squeezing his heart even more.\n\nMarcus laid his hand on Jon's shoulder. \"I can't hold it back any longer. Listen to me. The reason you've never been able to access the magic in your dagger isn't because it's your son's soul and not your own. It's because your dagger is incomplete.\"\n\nJon shook his head, trying to deny the sudden realization of what Marcus was talking about. The image of Reynar's dagger popped into his mind.\n\n\"No,\" Jon whispered, brokenly. He wished his heart would stop beating, stop feeling.\n\n\"Yes,\" Marcus replied, softly. \"Your dagger was meant to contain more power. My power, Jon. The rune on the bottom of the dagger is meant to contain my power.\"\n\n\"Why?\" Jon asked, his voice cracking. \"I don't want that power.\"\n\nMarcus winced and closed his eyes. When he opened them, they were pinched in pain. \"It's not permanent. The power will only last for a short while. Enough time to accomplish one task. To right one wrong.\"\n\n\"No,\" Jon said, shaking his head fiercely. \"I won't do it. I can't do it.\"\n\n\"There's no choice,\" Marcus replied. \"Hurry, Jon. I'm slipping and I won't come back again.\"\n\nJon looked up at him, pleading with his eyes. \"You said we always have a choice.\"\n\nMarcus grabbed Jon's hand, the hand that held the dagger. \"Not in this, big brother. I'm making the choice for you.\"\n\nAnd just like Jon's son did once before, Marcus forced the hand holding the dagger into his chest. Jon couldn't have stopped it. There was no stopping fate.\n\nMarcus held on tight to Jon's hand. Instead of blood, pure golden light poured out of the wound. The runes on the dagger lit up. The rune on the bottom of the handle glowed like the sun.\n\n\"I love you,\" Marcus said, as golden light surrounded him.\n\n\"I love you,\" Jon said, his heart breaking unbearably.\n\nMarcus continued to smile as golden light poured all around him. His smiling face disappeared in the fierce glow of the sun.\n\nJon closed his eyes and felt the power enter the dagger. He knew Marcus' body was gone, absorbed into the dagger.\n\nJon opened his eyes and golden light poured out. The power rushed through his veins like liquid gold. Marcus' essence entered his body and became one with him.\n\nIn that moment, Jon understood it all. Everything clicked into place. Everything made sense. The Order of the 12 and the God's power. The Order's disappearance. The War of the Gods. The creation of the Magi Victus. Jon's dagger. His sacrifices.\n\nHe saw each step of the God's plan and he comprehended. He knew each step was put into place on purpose. Marcus' power continued to rush through him and lifted him into another plane of existence.\n\nEverything around him was made up of golden runes, the language of creation. The clouds in the sky. The trees. The wind. The ground beneath his feet. This is how the True-born saw the world. Everything was connected. Everything was one. Everything was complete.\n\nKnowledge and understanding continued to flow through him. He basked in the power. He was a god. He saw. He knew. He understood.\n\nAnd with understanding, he knew what he was meant to do. He was to right a wrong. Reality itself was broken. It had been tampered with. The arrogance of that action nearly made him vomit. It was against the very fabric of nature!\n\nReality itself was made up of runes. It existed in everything. Jon couldn't point his finger to a specific place and say, \"There, that's where reality is warped.\" But he knew. He understood.\n\nThe understanding hadn't come from Marcus. It came from his son. His son's essence was also in the dagger. His son had been present when Jon's brethren banded together and warped reality. Warped it for their own sick purposes.\n\nThis is what they changed, a voice whispered in his head. And he saw. He saw how they childish thought to change reality. But in order to change it, he would need a focus. That's how they accomplished it.\n\nThey had used his own son's baby as the focus.\n\nHe saw it clearly in his mind. His son, Mathus, struggled to get away from his guards. Jon's brethren laughed as they placed Mathus' own baby son on a stone slab. His baby, a baby he had with his non-Magi wife. Mathus did want Jon couldn't do. He followed the god's will and married a non-Magi.\n\nThe Magi flowed their spell through the baby. They wanted to twist reality, to make it so that Magi could not reproduce with non-Magi. In their childish conceit, they thought to change that which the God made.\n\nThey didn't realize their mistake. But they were satisfied with the results. Babies born from that union were born wrong. They couldn't use magic. But Jon saw and understood. It was meant to happen. The Magi created their own enemies.\n\nBecause they used a male child as a focus, only male children could be born from the union of Magi and non-Magi. They didn't understand as Jon understood. How could they? They weren't gods.\n\nBut as awe-inspiring as this power was, he wasn't the God. This power wasn't enough to fix reality. It had taken twenty Magi of Jon's own generation to do it. And they did it wrong. He needed not only a focus, but power as well.\n\nWhat is power?\n\nJon didn't have to think about it. He knew. The God was power.\n\nYes. And where does this power come from?\n\nFrom their souls, Jon knew. This dagger held two souls. Magic was the soul. The soul was magic.\n\nAnd what are souls?\n\nJon knew. He understood.\n\nSouls were a part of the God. Every life was a piece of Him. He was in everything. He didn't give the Order of the 12 his power. He merely unlocked it for them, allowed them to access their own power.\n\nBecause they were pieces of Him.\n\nSo if souls are power, you can use that power. Where can you find souls?\n\nEverything had a purpose. Every step had been accounted for. Jon had never been alone. His mind jumped to the big stone structure beneath the sewers. He had been commanded to bring it there. To hang the daggers of deceased Magi Victus on it.\n\nHe never understood why. He just did as he was commanded. And now he understood.\n\nEverything has its place. Everything has a purpose.\n\nJon was linked to that stone. He held a shining Shadow Dagger in his hand. A dagger that had come from the same stone. Jon flowed into the magic and followed the trail back to the stone.\n\nHe felt it. The power. The stone held thousands of lives, pieces of souls willing sacrificed by men who wanted freedom. They were all there, waiting. Waiting for their chance. Jon knew what he had to do.\n\nThe spell formed in his mind. Jon released it and cried out. The power flowed through him, into the dagger, and into the stone. Jon was a conduit, a direction for the power to travel.\n\nThe spell was absorbed into the stone and released in throbbing waves. Out into reality. Jon continued to cry out as the power flowed through him, as the spell continued to cast out into reality, attempting to mend that which was broken.\n\nThe stone began to glow as the power reached it's apex. The daggers shone like miniature suns. Cracks began to appear as the spell continued to spit out into reality.\n\nJon cried out one more time and collapsed. The power stopped. The Shadow Dagger exploded in his hand. The stone beneath the sewers glowed bright white for one more moment and exploded.\n\nAnd Jon knew no more.\n\n*** \n\nThere were all there, in the formless dark. Sarah, Berrick, Mathus, Ashford, and Marcus.\n\n\"Am I dead?\" Jon asked. He wasn't afraid.\n\n\"You're not so easy to kill,\" Marcus replied, smiling.\n\n\"Did it work?\n\n\"Beautifully,\" Ashford said, a calm smile on his face. \"There will never again be Magi Victus.\"\n\n\"I'm sorry,\" Jon admitted, staring at each one of them in the face. \"You all lost your lives because of me.\"\n\nThey all smiled at him. Not one looked angry. They looked peaceful. \"You've changed so much,\" Sarah said, looking as beautiful as he remembered, her golden skin shining in the dark void.\n\n\"For the better,\" Berrick echoed her. He was as he remembered him; big, muscular, and with his blacksmith's apron still attached.\n\n\"I had help,\" Jon said. \"I didn't know I had so many people who loved me.\"\n\n\"Never forget that,\" Ashford said.\n\n\"Are you all really here? Am I really talking to your spirits? What are these dreams I have?\"\n\n\"What do you think?\" Sarah asked.\n\nJon floated in the dark and thought for a moment. \"I don't think it matters,\" he finally decided.\n\nThey all beamed at him. \"It's time to go,\" Marcus said. \"Reclaim your life, my brother. Don't be afraid to live it this time.\"\n\n\"We all love you so much,\" Sarah said, her smile easing the wounds on his heart.\n\n\"We will be together again,\" Berrick promised. \"Just remember everything you've learned. And just be happy.\"\n\n\"I will,\" Jon promised.\n\nThey slowly faded away, all smiling faces. And Jon felt content. He knew he wouldn't be haunted by old memories anymore.\n\nJon opened his eyes.\n\n***\n\nEvelyn sat by her bed and stared sadly at Sophina's body. She had a guardsmen bring her up and set her down on the bed. It was all she could do for her.\n\nBoots crunched on the floor. Evelyn looked up and felt fresh tears spill down her cheeks. \"I'm so sorry.\" The words sounded hollow but it was all she could give.\n\nJon approached the bed slowly. He stopped by her head and reached out a hand to brush the hair from her face. \"What happened?\" he asked, softly.\n\n\"Raynolt,\" Evelyn said, her voice deadened by grief. \"He was still alive. He killed Reynar with that dagger of his and stole his power. Sophina bought me some time to try to escape. He stabbed her. Then he caught up to me but Sophina snuck up behind him and killed him. I don't know how she did it, with a dagger in her stomach...\"\n\n\"She wouldn't let herself die, not when you were in danger,\" Jon said, his eyes never leaving her face. Evelyn couldn't bear to watch as he lovingly caressed her face. She turned away and hid her tears in her hands.\n\nSeveral minutes passed before the tears finally faded. Jon still stood over Sophina, his eyes still looking into her face. Evelyn remembered Sophina's last words.\n\n\"She wanted me to tell you that she loved you,\" she said, her grief threatening to overwhelm her again.\n\n\"I know,\" he whispered, his voice as numb as hers.\n\n\"And...and she said to don't be afraid to love. Don't be afraid to love, Jon. She almost demanded it of me.\"\n\nJon smiled, and a single tear dripped off his face. \"Leave it to Sophina to think about my wellbeing as she lay dying.\"\n\n\"Will you honor her request?\" Evelyn asked. For some reason, she desperately wanted Jon to not fall apart. She wanted Sophina's last wish to be fulfilled.\n\n\"She taught me that,\" he replied, finally meeting Evelyn's eyes. \"She taught me to love again. How can I deny her?\"\n\nEvelyn nearly gasped. All the times she had looked into Jon Laurent's eyes, they had been as cold and blue as a frozen lake. Now...now his eyes were blue like the ocean, as soft and as inviting as the gentle waves on a hot, summer day.\n\n\"I can see that,\" she whispered.\n\nIncredibly, Jon smiled at her. He really had changed. He bent down and kissed Sophina's forehead.\n\n\"I want to see your child,\" Jon asked, standing straight.\n\n\"Of course,\" Evelyn replied, popping up from her chair. \"I put her in the crib over here.\"\n\nJon followed her to the crib. Evelyn's breath caught in her throat as she looked over the crib. The baby was awake and was staring straight at Jon with her beautiful blue eyes.\n\n\"Incredible,\" Jon said, his voice filled with awe. \"What an incredible child.\"\n\n\"Yes, she is,\" Evelyn said, lovingly. She reached down and stroked the child's cheeks. \"She reminds me so much of Daminus.\"\n\n\"Have you given her a name yet?\"\n\nEvelyn hesitated. \"I was thinking...I would like to name her Sophina.\" Her throat constricted and she had to stop.\n\nShe looked over at Jon. He had closed his eyes. She was shocked to see tears escaping his eyelids. \"It's a good name,\" he said, his voice heavy with emotion.\n\nThey stood silently and watched Sophina for several minutes. Her eyes eventually closed and she drifted off to sleep. Evelyn felt her heart could burst at any moment, she loved her so.\n\n\"What do we do now?\" Evelyn asked finally. It was amazing to think that the world continued to exist, even with all this grief and anguish.\n\nJon turned away from the crib. \"What we must. The fighting has stopped, I see.\"\n\nEvelyn nodded. \"I had word sent that the King is dead. There's a lot of confusion right now, Jon. There are warriors from Raves right now in the palace. The guards are uneasy. The Magi are missing.\"\n\n\"I've already asked for Peron, the Chieftain of the Raves warriors, to be sent up here. We need to speak. The Magi have fled, Evelyn. Before the battle even started today, a large portion of them fled the palace back to the Emporium. They apparently sided with the Grand Master instead of Reynar.\"\n\n\"Sura,\" Evelyn cursed. \"She's not going to endorse my rule, is she?\"\n\n\"Probably not,\" Jon agreed. \"They were attacked at the Emporium but most of them survived. They have already fled the city. My guess is they will try to rally the people in other villages.\"\n\n\"War,\" Evelyn muttered, shaking her head. \"And I don't even have Magi of my own. All the Magi that came with Raynolt are dead or have fled.\"\n\n\"Not all,\" Jon said, and for some reason he was smiling. \"You will have a new crop of Magi to train. I fixed the curse, Evelyn. There will be no more Magi Victus anymore.\"\n\n\"No more...Magi Victus?\" Evelyn shook her head. \"What...how did you...?\"\n\n\"It doesn't matter,\" Jon said, evasively. \"Just know that it's over. No more Magi Victus. And the Magi Victus currently alive had their Shadow Dagger's broken. The portion of their souls contained in their daggers have rejoined with them. They can use magic now.\"\n\n\"Where are they now?\" Evelyn asked.\n\n\"I had them gather here in the palace,\" Jon replied. \"You will need to train them. They're shocked, but that will fade.\"\n\nA knock sounded on the door. The door opened and a tall, dark-skinned Raves warrior walked in. \"Jon,\" the man said, and, incredibly, he bowed low.\n\n\"Will they fight for her?\" Jon asked.\n\nPeron nodded. \"I've convinced them that our revenge is over and that this new queen will forge a new peace with us that will dwarf any agreement we've ever made with past kings and queens of Astuari.\"\n\n\"Are you okay with that?\" Jon asked, turning to Evelyn.\n\nEvelyn was confused as to what exactly was going on but she nodded. \"Yes, of course. They fought and died for us. They deserve whatever they want.\"\n\n\"Good,\" Jon said, turning back to Peron. \"You two have plenty of time to work out the details. And the rest of Raves?\"\n\nPeron shook his head. \"I don't know. When they arrive, I will explain the situation to them. With the current state of the city, they very well may decide to kill everyone and take over. They enmity between our people is that great.\"\n\nEvelyn gasped. \"There's an army marching toward us?\"\n\n\"I will handle it,\" Peron promised. \"There won't be a war.\"\n\n\"Sura's Magi will be bad enough,\" Evelyn muttered. \"What about you, Jon? What's your plans in all of this?\"\n\n\"I'm leaving,\" Jon replied. \"My mission isn't over yet.\"\n\n\"But...I thought we just saved the world!\" Evelyn said, dumbfounded.\n\n\"This was just the first step. A very important step, true, but only the beginning. Astuari isn't the world, Evelyn. But it begins here.\"\n\n\"Then where will you go? I had thought...that you might...\" She trailed off, unsure whether should could say anymore. It was too soon.\n\n\"Stay here and become your king?\" Jon guessed.\n\nEvelyn nearly blushed. \"Politically, of course. You're a very powerful figure, Jon. I could use you. Hell, I need you.\"",
        "Jon shook his head. \"My place isn't here. Duty calls me past the desert and across the mountains.\"\n\nIt was Peron's turn to gasp in shock. \"Jon, past the mountains? You're traveling to that place?\"\n\nJon nodded. \"I have...things I need to take care of. Loose ends to tie. I'm preparing the way for Sophina,\" he added, nodding at the crib.\n\n\"Sophina,\" Peron said, slowly. He bowed his head.\n\n\"Preparing the way?\" Evelyn asked.\n\n\"She is the beginning,\" Jon replied. \"She will start it and she will end it.\"\n\n\"What do I need to do?\" Evelyn asked anxiously.\n\nJon walked over to her and gripped her shoulder. He smiled. \"Just love her. Be the mother I know you to be. She will take care of the rest.\"\n\nEvelyn bowed her head. Jon leaned down and kissed the top of her head. \"Good luck, Evelyn,\" he whispered. \"And remember, let Magi mate with non-Magi. Fulfill the God's wishes.\"\n\n\"I will declare it so,\" Evelyn replied, solemnly.\n\nJon turned away and walked to Peron. \"Go see her, pay your respects,\" Jon told him, pointing at the bed.\n\nPeron bowed his head and walk slowly to the bed. He knelt on the floor and took Sophina's hand in his own. \n\nJon patted him on the shoulder and grabbed Sophina's sword from by the bed. He walked back to Evelyn. \"This belongs to your child now,\" Jon said, holding out the sword. \"It was always meant for her.\"\n\n\"Thank you,\" Evelyn said, as she took the sword from Jon. \"I will make sure she learns the history of this sword. Of the woman who wielded it.\"\n\nJon nodded gravely and turned to the crib. \"I have one last gift,\" he said. \"Ashford told me how to do this.\"\n\nHe bit his thumb until blood oozed out and lowered his hand into the crib. Evelyn gasped and leaned over to watch him. He quickly outlined a complex set of runes on Sophina's forehead.\n\n\"What are you--\"\n\nShe stared in awe as Jon muttered a spell under his breath. The blood on Sophina's forehead glowed for an instant and then seemed to sink into her skin. Her body was suddenly outlined in glowing runes of protection. Evelyn had never seen such a complex spell of protection.\n\n\"That's what Ashford did for Reynar,\" Evelyn breathed. She looked up at Jon. \"You just tied your life to hers. If she dies, you die as well.\"\n\n\"She will always be protected,\" Jon said. \"As long as I live, no harm will come to her.\"\n\nEvelyn hugged him. \"Thank you.\"\n\nHe hugged her briefly and then took a step back. He walked away and then stopped. Evelyn looked down in the crib and smiled. Things were going to get better.\n\nJon stood in the middle of the room and took a deep breath. He turned, smiled at Evelyn, and walked out the room.\n\nHe was gone.\n\nEvelyn went to crib and picked Sophina up. She opened her eyes and stared at Evelyn.\n\n\"You're the beginning,\" Evelyn whispered to her.\n\nSophina smiled.\n\nThe End.\n\n***\n\n***\n\n***\n\nWell, my friends, I hoped you like the finale of this tale. Please, leave feedback or send me an email. Let me know what you thought of the entire saga. Did I move you to any great emotion? Tears? Anger? Laughter? Did you hate this ending? Did I rip your hearts out?\n\nJust a quick notes on the deaths. I felt I had to stay true to my vision, as I originally planned before I even wrote the first chapter. It was hard, though, very hard. I almost didn't go through with it. But it was the natural arc the story had to take. I swear!\n\nI want to thank everyone who voted, left comments and emails, and just generally read my story. Thank you so much! And I would like to give a special shout out to JazCullen, who has been a great inspiration to me. Thank you! And maybe I will write that Nonhuman story ;)\n\nAs for Shadow Dagger, I have one small epilogue that should be posted 2 days after this. I want the last chapter to sink in for a while. The epilogue will give a nice hint to the sequel series I have planned. That series will have to wait, however. I want to write it completely first before posting. But I promise it will be even better!\n\nThank you once again for reading!"
    ],
    "authorname": "austin_erotica",
    "tags": [
        "shadow",
        "dagger",
        "magi",
        "sword"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/shadow-dagger-ch-20"
}