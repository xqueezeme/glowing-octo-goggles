{
    "title": "Ingrams & Assoc 4: Beneath the Surface Ch. 04",
    "pages": [
        "\"Hey Thomas!\" said April, brightly, putting down her magazine. \n\nI was naked but at that moment, I didn't give a damn. \n\n\"Where's Megan?\" I demanded. \n\n\"And a good morning to you too! Umm, Thomas, while I'm sure you've made Megan very happy with that,\" she said, pointing at my dick, \"I'd appreciate it if you put on some pants. There are things I have to tell you.\" \n\nI wasn't happy, but I went and put on some pants and a t-shirt and rejoined April in the sitting room. \n\n\"There. All better. Not so cold either,\" she grinned. I supposed she was making some joke about dicks shrinking in the cold, but I really wasn't that interested in humor right then. \n\n\"Where is she?\" I demanded, louder this time. \n\n\"OK, calm down. I know you grew close to her, but please, understand, she has a job to do, just like I have. Don't get too close to the fire Thomas. It's fine to warm your hands by it, but if you stick them in, you'll get burnt.\" \n\nShe paused to look at me. I could see genuine concern in her face, but I also really considered it to be None. Of. Her. Business. Whatever Megan was to me, it was to me, not her. \n\n\"Megan had to return to Boston. Well, she chose to return to Boston, actually. No one forced her. There's unfinished business there, and she's required to end it. You should be happy, because it's all coming to a head now. One way or another, things will be resolved, and you can go home.\" \n\n\"How?\" I said, flatly. \n\nApril looked away. \"I don't really know how much Megan told. We didn't get that long to chat. But know I can't tell you much, and more to the point, I don't know that much anyway. All I know is that she saw some people while she was working, and the FBI needs her to identify them.\" \n\n\"She could have done that over Skype,\" I said, hotly. \n\nApril shrugged. \"I don't know. I don't make a habit of telling the feds their business. They needed her, and in person. So she went. She said that if there was any chance of this all being sorted it out, the bad guys getting locked away, she was going to take it. If only for you.\" \n\nI nodded. It sounded like something Megan would do. I was still stiff and not happy - I get up after sleeping and find that the only woman who had ever been nice to me; the one who had stolen my heart; the one woman I'd ever love - had disappeared overnight. April could see it. \n\n\"Look, lets make the best of this, Thomas? I owe you as much as she does. I can be good company too. She just needs to get this done, OK?\" she said, softening her tone. \n\n\"Yeah, I know, it's just...\" I was frustrated and so I turned to the coffee maker in the room. At least April had already started it; there was fresh coffee in it. I tried a cup and strangely, it was terrific. \n\nApril noticed and smiled, \"I bring my own coffee. It's Jamaican Blue Mountain. Although anything is better than the crap they put in hotel rooms.\" \n\n\"So, planning on being here a while then?\" I said, probing. \n\nApril laughed - she did have a pretty smile when it was genuine. \"Good one, Thomas. I don't know. Best to be prepared you know? Like a good girl scout.\" \n\nI considered that, and said, \"I'm having trouble imaging you as a girl scout.\" \n\n\"Well, you go in there, take a shower, imagine me as a girl scout, and then get dressed, and we'll be on our way, OK? We need to move.\" \n\nI laughed. I would be indeed imagining someone as a girl scout while in the shower, but it wouldn't be April. \n\nWhen I was done in the shower, I was getting dressed, and pulling together what little I had to take with me, and I could hear April on the phone in the other room. \n\nShe was walking, and I could only get snatches of her side of the phone call. \n\n\"...smitten, obviously...Stockholm syndrome...classic transference...Are you sure about this, Megan? I mean seriously...he's a job...Yeah, I know. Yeah, him writing you music is very romantic, but still...They are doing what? Yeah... Yes, I agree...Oh ok, I won't touch. I won't be playing with your toys. No...don't worry.\" \n\nEven though I only heard bits of it from one end, the jist was pretty obvious. \n\nI made a production of opening the door and coming through, and April turned and saw me, smiled at me and pantomimed being on the phone. I nodded and did a final check of the room. \n\nWe hung out for three days, lazily making our way south east, towards Salt Lake City, of all places. Each night was another out of the way bed and breakfast - always with two rooms. April was way more prim and proper than Megan was. \n\nAnd she was fine company. She was no Megan, but then no one was Megan except Megan. April kept her distance -physically and emotionally - way more than Megan did, and just didn't have the same gregarious sense of humor that Megan did. April walked into a room and sized it up, looking at the people and where they were standing, and the ways out and all the rest of it. She positioned herself in the room where she could see everyone and had her back against a wall. \n\nMegan walked into a room and sized everyone up too, but to see who the fun ones were, and navigated herself towards them. \n\nApril was a secret agent and Megan was a stand up comedian. But both had wariness, a way of speaking by asking questions. But with Megan, you knew when she was not being serious. With April you were never quite sure. You could see how they made a good team. They had very complimentary attributes, that overlapped to a large extent but each was stronger at certain things than the other. \n\nStill, April was a beautiful woman, and did I bask in being her date when we went to eat? You bet I did. I just wished it was Megan instead. \n\nOn the third morning, when we were in a small town just south of Boise, I got up early, and played the violin, looking to recreate music I played the night before Megan left. Jace had actually reached out and sent me a copy of the video he'd taken on his phone, which I was eternally grateful for, because it gave me something to work with, but I just couldn't generate the same passion. I could play the notes, but it just didn't sound the same. \n\nAnd I was seriously starting to worry about what was going to happen at the end of all this. Megan had a job to do, and it was very important to her. And given what the job entailed, there was little chance of an ongoing relationship with her. Plus, I was a job - April had spelled that out, and she was quite correct. I wouldn't have been able to function knowing what she would be likely doing when she went off to work, so that was just not going to happen. The war between emotion and intellect was being waged again. I knew what I knew, but I felt what I felt. \n\nSo here I was, desperately in love with her. The first and only woman ever. How was I supposed to move on from this? She'd been gone three days and I missed her desperately. We'd spoken once on the phone, when she called to reassure me that she'd gotten back to Boston OK, and she was now working closely with the FBI. She didn't have long to talk, but it was just great to just hear her voice. \n\nIf I was this messed up when she'd been gone three days, and I KNEW I'd see her again soon, how was I going to react when this was all cleared up? When she and April and that Dermot guy rode off into the sunset? I mean, don't get me wrong, I was eternally grateful. She'd helped me deal with the nightmares of what I'd done to keep her and April alive, she'd helped me face and deal with the accident - teaching me the rejuvenating power of forgiveness, and she'd given me sexual experiences the like of which I dreamed could exist. She'd helped me see a little of America; introduced me to some interesting people; helped me to stretch my boundaries; I knew I would never be the same again. And that's awesome. More than awesome. But along the way I'd gone and done something really stupid and fallen in love with this woman. There. I'd said it. Oh, fuck. \n\nThe door to the patio of our small room opened and April came out. She was solemn, and held a cup of coffee in her hand. She reminded me of how this started, with Megan, in San Diego. \n\n\"Thomas, we need to talk. About several things,\" she said, seriously. \"The first priority should be this huge emotional feeling you have about about Megan.\" \n\nI just looked her, my bow and violin in hand. Was she telepathic or what? Was I that transparent. \n\nShe smirked and proved she was telepathic when she said, \"Yes, it's that obvious. You think you are in love with her, don't you?\" \n\nI put down the bow and violin and sat down. \"I...\" \n\n\"Yeah, I know. She's an easy girl to love. But, she told me that you have an idea of what she - what we - do for a living. And...how we do it. You've got to understand, there's no future in that relationship? I mean, I really don't want to be the wicked witch here, but I think someone needs to be the voice of reason.\" \n\nI stared at the violin in my hand, and then looked up at her, a tear on my cheek. \n\nShe looked at me, winced and sighed. \"Oh, you've got it bad, haven't you?' \n\n\"I'm so sorry, Thomas. But someone has to point this out. Whatever she feels for you, relationships with field agents never work out. Trust me, been there, done that.\" She muttered the latter bitterly, more to herself than to me. \n\n\"When we finally get back to Boston, I'm going to have a word with Dermot. We've screwed with you enough, and need to find a way to put this genie back in the bottle. It's no good doing other stuff for you if all we leave you with is a broken heart.\" \n\nI hadn't said more than one word yet, but I knew she was right. Intellect was going to win. Dammit. I was rooting so hard for emotion. \n\nShe sighed again. \"Which makes the next news even harder to tell you.\" \n\nMy head snapped. \"What?\" I demanded. \n\nApril rolled her lips over her teeth, trying to decide how to break it to me. \n\n\"Megan has been...taken. We still aren't sure how. She was with a couple of FBI agents and they were doing some tailing and identification, and, well, they lost her. We have not seen her two days. We didn't say anything because we just didn't know anything. But this morning, we got confirmation that they have her. We don't know where. Apparently, they want to know about...you. They still think you are the brains of the operation.\" \n\nIf I'd been standing, I'd have sunk into the chair. As it was, I sat harder. \n\n\"Fuck,\" I muttered. \n\n\"Yeah,\" empathized April. \"Right now, the FBI - and our guys - think you are safer out here. They are still looking for you, but they think you are in Boston, because Megan is. We think their getting her was dumb luck. She was seen and recognized by chance and they took advantage of the opportunity. That's what the smart money is thinking, anyway.\" \n\n\"What can we do?\" I asked, giving her a very worried look. \n\n\"Right now? Nothing. They will keep her alive right now because they want you. She's their only link to you, so they'll keep her...intact.\" \n\n\"They want me?\" \n\nShe shrugged. \"It sure seems that way from the chatter we heard on the last bug we have in their HQ. It's a union shop. But they won't keep her there. This is the Boston Irish Mob, they have places all over the city. If the FBI knew where she was, they'd have gone in guns-a-blazing by now. But they can't afford to make a mistake and storm the wrong place - that would end her life and destroy any ability they have to catch these scumbags.\" \n\nFuck. Fuck! Double Fuck! Well, there was only one thing to do. It was obvious. To me. \n\nI stood up and walked into the small 2 bedroom rental going straight to my room. \n\n\"What are you doing?\" asked April, following me in. \n\n\"I'm going back,\" I told her, flatly. I pulled out the violin case and put the violin away. Then I pulled out the suitcase and put in it the little amount of stuff I'd gotten out of it the night before. I was packed in less than two minutes. \n\nApril was alarmed. \"No, we can't do that. That's not good. If they get you, they don't need you.\" \n\nI turned and looked at April, giving her my implacable look. I think it was implacable. I hoped so. I have no real idea. \n\n\"April, I am going and I am not discussing it. How are you going to stop me? You going to use that martial arts training to make me stay? You going to hit me?'' \n\nApril was clearly uncomfortable with my direct question. \n\n\"Of course not. But the FBI...\" \n\n\"I don't give a shit what the FBI thinks. If they want me, they can have me. As a trade. Megan for me.\" \n\nApril was shocked. \"You can't do that. That's not right. You are only in this because of us...\" \n\n\"So? I am in this now. And so is Megan. And I'm going to get her out, one way or another. As you so correctly point out, there's no future for me with Megan anyway, so I've really got nothing to lose, have I?\" \n\nI was being cold as I said this and April was staring at me, open-mouthed. \n\n\"I just...\" started April and I picked up my bag. \n\n\"I'm going to the airport. You can do what you want.\" \n\nThe flight cost an arm and leg. Have you ever just gone to an airport and tried to buy a ticket for a flight, there and then? It's like they have a multiplier they put on a normal fair and apply that. The multiplier in this case was about 5x. And that was economy. God knows what business class would have been. There was no direct flight from Boise to Boston, so I had to connect in Denver. It took most of the day. \n\nAs it was, April came with me. I guess she kind of had to, since there was no point in her staying in Boise, or going on to Salt Lake City. As it was, she was able to use the corporate credit card for the extortionate airfare. She spent the whole drive to the airport on the phone with head office, trying to explain what we were doing. It was clear she was not happy with me. I didn't care. Not at all. \n\nAt one point she had made some comment on the phone and turned towards me and glared at me, and I just snapped. \n\n\"Hang up the fucking phone, April. Hang. It. Up.\" \n\nShe looked at me, carefully gauging me, the annoyance morphing into concern. She whispered, \"I'll call you back in a bit,\" into the phone and then ended the call. \n\n\"You know, for a fucking trick cyclist, you guys are fucking slow on the uptake. Yeah, I love her. You knew that. What did you fucking think I would do, given this news? Sit here and tremble and hope? I mean, for god's sake. You saw what I did when I barely knew you and her. You were there. If I did that for strangers, how could you think I'd do nothing for Megan now?\" \n\nShe took a deep breath and then said, calmly, \"Yes, I know. But decisions taken in stressful emotional situations like this are more often than not the wrong ones. You are making a knee jerk reaction. I don't want to see you get hurt for a situation we put you in. None of this is your fault. I just want you to be safe.\" \n\n\"Well, it's too fucking late.\" \n\nShe actually smiled then and said, \"We on a 'fucking' bender, are we?\" emphasizing the word 'fucking' and even I had to smile back. \n\n\"Yes, I fucking am,\" I replied, some of the annoyance bleeding away. \n\n\"Fine. Ok, well the FBI is going to be there to collect us in Boston. There is a fair chance we'll be recognized there, and they don't want to lose anyone else. Or everyone is fucked.\" \n\n\"Fine,\" I said, ending the conversation and staring out of the window. \n\nWe arrived back in Boston in the early evening, and it was surprisingly mild for the time of year. There were, as promised, FBI agents waiting for us at our gate. It was then that I began to get an inkling that there was not a wonderful relationship between the FBI and the Ingrams people. These guys were clearly pissed that they were on pick-up duty and I got a distinct sense that they were extremely unhappy about the whole situation. They were very careful to call us \"civilians\" and said\"this was a highly volatile situation that had spun beyond what the investigation called for, because of the intervention of civilians.\" \n\nApril didn't respond. Obviously she'd encountered this attitude before and she just let them vent. I decided to follow her lead, even though I was desperate for news on Megan. \n\nThey took us to the main FBI offices in Center Plaza, where we were given guest badges and escorted to the \"incident room\" where the action was. \n\nNo one gave us a second look. \n\nWhen we got into the incident room, with maps all over the walls, I stood there taking it in. A grizzled older guy with open collar and tie yanked down was standing talking to Dermot, in the corner. The older guy saw us come in and hustled over to us. \n\n\"Hello April. You must be Thomas?\" he said, sizing me up. I turned my attention to him, he was shorter than me, but then everyone was. He was solidly built, and wore a nicer suit than I expected. \"I'm Agent-in-Charge John Trubas. That's Special Agent Marcus and Special Agent Roman,\" he said, nodding at the two guys who'd brought us in. They had headed off to get coffee from a machine in the corner. \n\n\"So. You are the guy who took out three button men, eh?\" grunted Trubas. He was obviously not impressed. \n\nI shrugged. \n\n\"Well, that's three less scumbags on the street as far as I'm concerned, so good work. Don't make a habit of it, though.\" \n\nI tried smiling and, attempting humor, I said, \"Well, it takes a while for the methane to build up in that section.\" \n\nIt was clearly the wrong thing to have said, although looking back, I don't think there was anything I could have said that would have been right. \n\n\"Look Bub. I don't much like people who kill other people on my streets. Or under them, either. The only reason you aren't clapped in irons is that the douchebags you took out richly deserved it, and you have highly connected friends,\" he said fiercely, nodding at Dermot. \"So a little less of the jokes and perhaps a little more with the information.\" \n\nI had been rebuked, and I felt April take my hand next to me. It was nice to have some support. He was obviously even less impressed with me than he was with April, and from the way he'd greeted her, she wasn't going to make his Christmas card list either. \n\n\"What do you want to know?\" I asked, weakly. \n\n\"I dunno Bub. What do you know?\" he asked, staring at me. \n\n\"Well, umm, I, you see...\" I started to say. \n\n\"Yeah, I didn't think you knew jack shit,\" he cut me off. \"I just wanted to get a look at you, and see if you had any clue.\" \n\nHe nodded at the maps on the wall. There were six high-resolution satellite maps on the wall, with markers highlighted on each. All were different parts of the city. \n\n\"She's in one of those places, we are virtually certain. We just don't have a clue which one. We are watching all of them, but apart from normal comings and goings, we haven't seen anything. No large amounts of takeout food, or any of the things that indicate someone being held there. I just wondered if you might know where she is.\" \n\n\"Why don't you just storm all of them?\" I asked what I thought was an obvious question. \n\n\"Well, at this point, we don't really have much choice. It looks like will have to do exactly that. But we really don't want to. It's very high risk, with massive chance for unexpected results. It requires almost perfect organization. You have to hit them all at exactly the same time, and basically get through each house at the same time. If one takes longer to get into and has more resistance, they are on the phone to the other places. Plus, if we don't find her immediately, then they'll have enough time to get rid of her. Trust me, they'll have a plan to make her disappear at the drop of a hat. That'll make this entire investigation for nothing.\" \n\nThe frustration in his voice was tangible. \n\n\"I was against bringing your little band of hookers into this in the first place,\" he said, directly to Dermot's face, \"and now your little band of amateurs has really fucked things up. I'm very pissed, - we all are - but we have to clean up your mess now.\" ",
        "Dermot ignored this, turned to April and me and said, \"As you can tell dear, tensions are a bit high here. Hello Thomas, nice to see you again, although I wish it wasn't under these circumstances.\" \n\nI was staring at the maps on the walls, and realized he was talking to me. \"Oh yes, glad to see you too, Dermot.\" \n\n\"Get these idiots out of here Roman. And you...\"said agent Trubas, looking right at me, \"You go back to your little cave and you fucking stay there, right? There are people looking for you and if they find you, it'll go worse for you. If stick your head out and they don't take you apart, I will. We'll deal with this. You just stay out of our way. Before you go, take this...\" \n\nHe thrust out his card to me, and I took it. \n\n\"If you see anyone, or hear anything, you call ME, ok? I want to hear it.\" He put special emphasis on the word \"me\". \n\n\"But, I don't really want to hear from you at all unless you do see something. Capiche?\" \n\nHis attention was already focused back at the main table, with its documents strewn around, not at me. I'd been dismissed. \n\nI looked back to the maps, trying to memorize them, even as we were hustled out of the room. I knew how to find her, if only she remembered the story I had told her. And if she had access to a toilet. I just needed to get back to my tunnel apartment and start looking, and thanks to the FBI, I knew where to start. \n\nI didn't say anything to April. If I had, she'd have just told Dermot, and he'd have told the FBI and then they'd have gotten on my case, and I - and Megan - didn't need that. I just needed to work alone. I knew I could find her, if she remembered my story. I needed to do it. I even had a few ideas about what to do if I did find her. \n\nThe immediate problem though, was to get back to my little office/apartment in the tunnels, and not be seen doing so. From what the FBI had said, I had little doubt it was being watched. But, as with most things, the people watching it would not really be thinking about what it really entailed. The apartment was part of the tunnels. Tunnels. Which, by definition, led somewhere. \n\nAll I really had to do was get in the tunnels elsewhere, where no one was watching, and I could make my way to the apartment through those tunnels, and those watching above ground would have no idea I was there. I was assuming they hadn't actually stashed someone in the apartment itself, like they did in the movie 'Pulp Fiction'. I had to hope they hadn't. I had to get into the apartment - or at least the storage in the cabinets stashed outside - because that's where my portable SRI gas chromatograph machine was stored. And it was custom made - all the chromatograph machines made by SRI were custom, so its not like I could just stop by Best Buy and pick up another one. Plus, there were some other things stored in the storage room outside my apartment that I'd need. In all honestly, that's what the apartment really was meant to be - storage rooms for stuff used in the tunnels. It was only really converted to an apartment by my predecessor. But some of the rooms were still storage - for stuff the EPA uses, things I used in my work, and some storage of items that other people who occasionally used the tunnels required. The University of Boston for example. They constantly had gaggles of students in the tunnels, doing research of some sort or another. We'd given them one corner of a storage room to stash stuff they used frequently; stuff that was cumbersome to pull up and down the stairwells that led down to my little domain. And I would need some of that stuff, if my plan to find Megan worked. So either way, I needed access to my apartment. And I had to hope they hadn't left someone in there, because if they had...well, I had no idea what I'd do. \n\nBut first, I had to get there. I know I've given the impression that everything that happens around the Boston tunnel system is built around my little apartment, but that's not even close to the truth. I'm not the only employee that runs around in the tunnels - there are quite a few others, and they are based at various depot locations around the city. We have vans, stashed with equipment for us to go down into the tunnels - some are even portable labs. They have hazmat suits, little powered winches, generators for lighting, ladders, all the stuff you'd need to go and work in the tunnels. \n\nI didn't spend much time at these depots but I knew them and had a passing acquaintance with some of the people working at them. So off I went to the one nearest my place. I got April to drop me off, after she'd checked us into some safe house the FBI had set up for us. Far too dangerous for us to check into a hotel in Boston - they'd be looking for us there. When she asked what I had planned, I mentioned I needed to check into work, and this was the safest way to do it. I told her I'd make my own way to the safe house later - that I couldn't just sit around and wait for the FBI to maybe, perhaps, possibly do something. I needed something to do in the meantime, and maybe trumping around in the tunnels was that thing. It wasn't completely a lie either. I had learned something from Megan and April about telling a fiction based on fact. \n\nShe sat in the car, looking at me suspiciously. I could see her debating with herself about what to do and in the end she just shrugged and told me to be careful, and then drove off. \n\nI signed in to the local depot and then signed out a van - no one cared what I was doing there, or that I was on sabbatical. Only my boss knew that anyway, and no one at the office would even consider calling him. Why would they?. I made sure the van was equipped with sample taking equipment. I then drove it to a road junction that was close to where my apartment was, but still several streets away. No point in taking risks for the sake of it. \n\nI clambered out of the van, parked on the edge of the road, then put up my cones and work horses around the drain - I wasn't too worried, because it was a wide two lane road, and the manhole cover was in the middle of the junction, so it wasn't too hard for cars to go around it, and wouldn't disrupt the flow too much. I then levered up the manhole cover - which is harder than it sounds. Those things are heavy and designed to not come up unless you have the right tools. Once that was done, I put on a hazmat suit and clambered my way down. There was a handhold metal ladder built into the edge of the hole making it easy-ish to go down. \n\nIt took me about thirty minutes of swishing through the crap in the tunnels to get to my apartment, and while I was on my way, I couldn't help but notice the levels were slightly higher than they should be. There was a blockage somewhere and I knew that once this was over, I'd have to look into that. \n\nOnce I got to the apartment, I debated going in. I didn't actually need to - everything I needed was just outside in the storage rooms. And if I was quiet, even if there was someone waiting in my place, they would never know I was there. Deciding that discretion was the better part of valor, I did my best to be as quiet as possible. Luckily the locks on the door were combination locks, so keys weren't required. \n\nIt took me two trips to get what I needed - the chromatograph and the other stuff. The other stuff - tanks and the pump - were awkward to move through the tunnels, but I got it done. It took a couple of hours, but it was worth it. I was ready to start the search. \n\nI debated going back to the safe house for a shower, since even though I'd been wearing the hazmat suit, I was pretty sure I still stunk. Running around the sewers and carrying heavy stuff for two hours will do that. But then I decided not to. Megan was depending on me. I needed to see if I could figure out where she was as soon as possible. \n\nFor the next three hours, I drove around the city, stopping at drain entrances relatively close to each of the houses marked on the FBI maps, and taking samples, to see what I could find using my portable chromatograph. I made sure the manhole covers I chose were far enough away from the houses that I wouldn't be seen. This would give me the chance to move closer to the houses if I found anything. I would track it back, take other samples and be sure it was coming from one of those houses. I couldn't pinpoint the exact house, because the way drainage is set up, multiple houses share the same pipe, that leads to the larger pipe, that then combines to larger pipes and so on. Where I was looking, I couldn't really go deep into the tunnels because the pipes were too small, with radius of barely two feet. I could get in there, but I would have to be on one of the small-wheeled platforms we use to navigate those tunnels. No opportunity to turn around, and if there was a lot of shit in the tunnels, you were Shit Out Of Luck. That's tunnel humor. I know, not that funny. \n\nIt took me four stops before I hit paydirt. I found Ammonia Hydroxide in the samples. There's no reason why that should be there, and to be sure, I moved the van slightly closer to the row of houses, to confirm that the concentrations of Ammonia Hydroxide were getting higher, so I could be sure that what I was tracking really did come from those houses. It did. \n\nI was absolutely sure this was Megan. She had access to a toilet, and she was dumping whatever she could find - whatever she had access to - down it, so I could track the unusual compounds and locate her, exactly as I'd done in the story I told her, of the kid and the plant food mixed with other stuff. If I had to guess, I'd imagine the chemicals came from her makeup. \n\nI now knew were she was, with about 95% certainty. \n\nSo there I was, in the van, sitting over the manhole at the corner of Day Street and Kenney Street in Mission Hill, the fourth place the maps in the FBI office has said Megan might be held. It was one of the Boston outfit's known safe houses. The house itself was on Kenney Street, about four or five houses down. Nondescript three-story standalone, wedged in to the other houses on the street. Not a walk up - it wasn't terraced - but it might as well have been. \n\nSo what to do now? \n\nThat was indeed the question. The fact is, I had a plan. A crazy assed plan. \n\nI had mentioned to April the idea of giving myself up in exchange for Megan. But I'd thought about it on the plane home and decided not to do it. Not because I didn't want to - I'd do anything required to get Megan back alive, and if I had to die to do it, well, she was worth it and I knew I had no future with her anyway, so my personal future wasn't that great. It would be no great loss to anyone. It was more than worth it as a bargain, my life for hers. \n\nBut the reality was that if I tried to trade myself for her, they'd wind up having both of us. I would have no real ability to be sure they'd let her go, and even if they did, they'd try and grab her again instantly. She knew too much. And I had absolutely no doubt what would happen in that situation. Right now they thought I was the ringleader, and I've no doubt they weren't pressuring Megan too hard because they thought they knew what they needed to. Once they got me, they'd find out pretty soon I wasn't the boss - I had no illusions about my ability to withstand torture, and the fact is, I didn't have any facts or information to give them. I could try and make stuff up, but they'd soon find out it wasn't real. \n\nAnd then they'd start in on Megan and I couldn't bear that. Me giving myself up would just get us both killed. It was no solution, so came up with a different plan. \n\nHowever, I was also very aware that the FBI would be pissed to high heaven if I went ahead with it. They would expect me to just let them know and leave it to them. They probably wouldn't be thrilled about what I'd already done, and I was unsure about what they'd if I did let them know what I knew. The fact is, what I had was not conclusive. I mean, it was for me, but for them? The practical upshot of me letting them know would be that they'd shift most of their observation to the house on Kenney Street, but still look for corroborating evidence. \n\nAnd even if they did find it, their reaction would almost certainly be some kind of swat team breach. Flash bangs - yeah, I watched movies - lots of guys in body armor and automatic weapons and so on. Too dangerous. I wanted to save Megan, not have her wind up killed in a rescue attempt. \n\nMy plan was better. I could incapacitate almost everyone in the house, allowing me to enter it with very little resistance. The problem was, I ran the risk of overdosing people and possibly putting them in coma. Also, I couldn't just incapacitate just that house. I would have to basically put all the houses in the row to sleep. \n\nMy plan was this. I had, in my possession, several canisters of halogenated ether. If that doesn't sound like anything you've ever heard of, I'll put it in easier terms to understand. It's basically an air based anesthetic. Halogenated ether is basically the aerated form of a type of anesthetic (in this case, I think it was Sevoflurane. Not that it really matters). Or to put it most simply, it's a knockout gas. \n\nI only really have it because the University of Boston stores it in my storage cabinets. They use it in studies of animal infestations in the tunnels. When they decide to do a study, they come to me and ask where there might be an infestation - and honestly, they are all over the place. There are lots of places in the tunnels where it's warm, relatively dry and with access to enough of a food source that rats, bats and so on, set up home. I've not seen any alligators yet, but I'm sure it's only a matter of time. I've certainly found snakes in the tunnels, both domestic and exotic. \n\nSo they go, block up the exits, gas the critters, then go in and either tag them or do whatever they do with them for research purposes. \n\nBut the practical upshot of which is that I had a bunch of gas canisters of knock out gas that would work on humans as well as animals stored in my storage cupboards. \n\nThe issue now was how to introduce that to the house where Megan was being held. But I had a solution to that, too. \n\nThe fact is, we get blockages all the time in the tunnels. As I said, there are lots and lots of pipes of a diameter that we can't get internal access to. There's definitely ways to unblock them - steel snakes and rotors and so on. But most of those have physical limitations, in that a steel snake is only so long, and once it goes past a certain length, both the rigidity and the ability to actually break through a blockage is very limited. And sometimes the blockage is past that length. So our solution is to use a heavy-duty air compressor and increase the air pressure in the pipe to the point that the pressure will blow out the blockage. \n\nIt's actually pretty simple - we block up the pipe with sandbags, so it's airtight, poke an air pressure sensor through the bags, push the end of the compressor tube through the bags, and turn it on. Watch the air pressure go up, then, when it starts going down again, you know you've blown out the blockage. As I said, simple. \n\nNow we do that only down stream of houses. You don't do that going up stream, into the houses, for a couple of reasons. First, it's private property, and generally handled by private companies, like Roto Rooter, who have expertise in dealing with household plumbing. But the main reason is that what actually happens once the blockage is removed is that the air pressure blows forward and pushes the air through the u-bends of the toilets and sinks. The practical upshot of which is that whatever is in those u-bends (and often what's in the pipes, just sitting there) gets blown out of the toilets and sinks. It's messy, nasty, smells and not good business, obviously. No one wants their toilets erupting shit all over the place. It's very unappetizing. \n\nBut, in this case, it could work. The air pressure pipe has a small connector that allows me to attach the tanks of halogenated ether - which is actually how we get the gas into the area's we want to anesthetize the animals. So I would hook up the tanks to the pipes going into the houses, turn it on and hope to god I got the calculations of how much ether to mix with the air, to be sure I knock out everyone but not kill them. \n\nIt was a risk. The reality is that the toilets are going to explode with water / sewage everywhere, so it's not like the people in the houses weren't going to know something is up. I had to be sure that the amount of gas I added was correct, so they would be either completely out or very groggy before I entered the house. And then I had to contend with whatever was in the house. Plus, I had to take the risk that not everyone would be as impacted by the gas as each other. People in rooms away from the toilets and sinks - or behind doors - wouldn't get as much gas as those close to those rooms with sewage system access in them. To be sure, they'd be impacted, but it's entirely possible they would still be awake and cause me trouble. It doesn't take much to point a gun and fire it. \n\nAnd lastly, I would be impacting other houses in the row. I could get close enough to set up my little knock out plan so it would ONLY be this row of houses that were affected, but the reality is that several other houses would be effected. I'd be knocking out other people, and there were a lot of legal implications with that. \n\nIt was a plan full of risks. The best thing might really be to call the FBI and let them deal with it. I say 'best', but honestly, it probably wasn't. That's what I was telling myself, anyway. \n\nThe fact is, they had Megan now. And if the whole situation weren't sorted out, these guys would eventually realize that holding her was a bad idea. They'd do stuff to her, torture her, and eventually decide that holding her was too risky. They'd almost certainly realize that the FBI was sitting outside, observing them, and then they'd definitely \"dispose of\" Megan; she'd be too dangerous to have around. \n\nAnd how long was that? Was I prepared to just wait for the FBI to make up their mind? It wasn't lost on me that Megan had gotten grabbed while she was with two FBI guys who lost track of her, so I wasn't exactly brimming with confidence at their expertise. I had a plan I could put into operation now, not later. I could make this happen now, and with what I thought was a higher degree of chance of keeping her alive than any frontal assault. Sure, I wasn't that experienced -okay I wasn't experienced at all - in this kind of thing. But honestly, how experienced do you need to be in order to contrast attacking a house where most of the people in it were already knocked out, versus attacking a house full of people who were totally alert? \n\nI also knew that if I took this to the FBI, I'd be pushed out. They'd already expressed their opinion of me quite eloquently. \n\nThe only way forward as far as I could see, was for me to force the issue. Pump the gas in, then, as I was ready to go in and get Megan, call the FBI and let them know what was going on - that I was going in, regardless of what they wanted. \n\nI had no doubt that even if this came out with Megan intact and the bad guys incapacitated, I would end up in custody. But I was ok with that. Megan would be safe - that's all I cared about. \n\nThe thing is, I'd already decided what I was going to do. Really, all I was doing was justifying it. I needed to get in there and rescue Megan - Me. Not someone else. I needed to know it was done. \n\nSo here I was, making decisions I really had no business making. I was going in. And just before I did, I was going to call the FBI and let them know what I'd discovered, and what I was going to do. And then the chips would fall where they would.  ",
        "So that's what I did. \n\nIt took me about an hour to get everything set up. The van had several bags of slightly wet sand in them - wet sand molds to the places it's put, and dry sand doesn't, at least not as well - and I packed them in, around the 10 inch pipe that came off the main sewer I was working in. I'd put in a row of bags, then a pipe from the pump, and then a pressure sensor, then more bags on top, till the entire pipe was blocked. \n\nIt wasn't very pleasant work - normally when we do this kind of thing, we alert the houses up-wind of the work, so we don't get a ton of raw sewage being flushed down where we were working, but in this case, I didn't have that luxury. So, twice, I had to step aside as especially fragrant liquidized turds came swishing their way towards me. Such is the life of a water engineer in Boston. It's the shittiest job going, so they say. More sewer humor. Still not funny, I guess. \n\nThen it was Time. I'd done the best back-of-the-envelope calculations I could on the house's air capacity, and voraciousness of the ether I had (finally a benefit from the three excruciating years of Chemistry I had to take as part of my degree) in order to try and work out the amount of ether I should be dumping out. It worked out at two complete cylinders over half an hour. By then it should have propagated through the entire houses, and everyone would be feeling the effects. \n\nAt the end of the half hour, I turned off the pump, and spent ten minutes crossing my fingers, and hoping to god I'd got it right. \n\nThen I pulled out my phone and the card from Special Agent In Charge Trubas, and dialed the number. \n\nIt took three rings before he answered. \n\n\"Yeah?\" Such a fine phone manner, these FBI Agents. \n\n\"Agent Trubas. This is Thomas Avaline. Please, just listen for two minutes. Megan is being held at the house on Kenney Street. I'm 100% sure of that, for reasons I won't go into right now, because I don't have time to argue with you about it. I've further taken action. You can arrest me later. \n\n\"The house she's in has been liberally dosed with a sleeping gas agent. When you send guys in, ensure they leave doors open and breath through a mask of some kind. The air will clear relatively quickly, but right now, those inside will be somewhat incapacitated. I don't know to what degree, but if they aren't outright asleep, they will be extremely groggy and not able to react. Now I'm going in to the house now to get Megan out. I suggest you mobilize whatever forces you have on standby and follow me in.\" \n\nI could just make out Agent Trubas yelling, \"Goddamit Avaline, what the fuck...\" before I ended the call, put the phone in my pocket, took a deep breath and put on my facemask. \n\nWhat I'd said to Agent Trubas was true; the air in the house was loaded with Sevoflurane, although it would start clearing quickly. Halogenated ether doesn't hang around in air long, since it's heavier than pure air, so it would start liquefying and make droplets on the carpet the moment I stopped pumping it in to the house. \n\nEither way though, going in without a facemask was asking for trouble, so I had a basic mouth and nose mask, with very fine filter on it. I hadn't opted for the full on gas mask because they really tended to restrict vision, both in periphery and in clarity, since the mask tends to fog up and the plastic aren't great optics in the first place. \n\nI ran up to the back door, via the alleyway. I wanted to go in the back because if the FBI was at all alert, they may have people out the front who would stop me. I had a pipe in my hands, as a basic weapon. I hadn't considered a weapon at all, but at the last minute, I figured it would be a good idea. Just in case. And it was all I had. \n\nThe back door was locked, so I had to make a decision. In the end, it was no decision at all - I had to get inside - so I just kicked it in, offering prayers once again to a non existent god, that I'd not fucked up and wasn't about to run into several alert, pissed off and heavily armed henchmen. \n\nI was tense as I entered the back kitchen, and almost immediately ran into a stumbling-but-still-somewhat-alert thug. I had the element of surprise on my side, since I had been expecting him, and he wasn't expecting me. As his eyes were opening and he started fumbling at his pocket, I hit him in the head with the pipe. It wasn't subtle, but I wasn't in a very forgiving mood right then. He went down instantly. I didn't think I killed him, but for all I knew, I might have. I stopped very briefly to check and found him still breathing. I also checked his pocket and found a revolver in it. I felt far less bad about my actions after finding that. \n\nThe only thing that really mattered was Megan, and I'd do whatever I had to, to find her and get her out. \n\nOne thing I did think was \"it's definitely the right house\". I mean, I'd just gassed this house, run inside and brutally assaulted the first man I'd seen. If I'd been wrong - which wasn't something I'd even spent any time thinking about to be brutally honest - that would have been VERY BAD. I was very very glad I was right in terms of it being a house full of bad guys. It could have been very shitty if I was wrong, for everyone concerned. Maybe there was something to having experience in these situations. \n\nI moved through the house, looking for doors that were shut. It stood to reason that Megan would be in a locked up room, so I tried the handles on every door. If it moved, I moved on. There was no point in running into a room where there might be some somewhat alert mob enforcers inside. I was brave, but I was also running on adrenaline right now, and I wasn't sure how smart I was being. \n\nI stepped over four guys while wandering the house, who were totally out for the count, unlike the first guy I'd encountered. All guys in suits, with guns in harnesses strapped to their chests. Shoulder holsters were apparently de rigueur \n\nfor your well-dressed mobster these days. It was obvious that the closer people were to an outlet for the sewage system, the more impacted they were, as I had suspected. I did check two bathrooms on the ground floor and found shit all over the floor, and one with a guy collapsed in it. I could just imagine what they thought when the toilets erupted! \n\nI went up some stairs to the first floor, after clearing the ground floor, and hit pay dirt almost immediately. Just around the corner at the top of the stairs, there was a guy sitting - dozing - on a chair, outside a closed door. I was pretty sure this was where they were keeping Megan, so after checking to make sure the guy really was out, I tried the door. It proved locked, and so I took my pipe and smashed the shit out of the door handle. It was surprisingly noisy, given the silence in the house, and I kicked the door open. \n\nAnd there she was. She was awake, barely, but very out of it. Her eyes were opened but they were very glazed over. She was handcuffed to a pipe on the floor, and she had a nasty bruise on her forehead and cheek, burns up one arm, like people putting out cigarettes on her, but otherwise she looked unharmed. She did have a gag on her too. \n\nI ran in and crouched down, looking for a way to remove the handcuffs, and after checking her over perfunctorily, I realized that there was no way to get them off without the key. Almost certainly the key was in the pocket of Mr. Snorey by the door. So I stood up and turned to go search him, and almost fell over the guy standing behind me. \n\nHe was shorter than me, nasty suit jacket, thinning hair, that had been slicked back, and he was pissed. There was no question about it. And he wasn't even remotely out of it. He was very alert - eyes full of anger and vim, as they said in 1965. \n\nI just reacted. I swung the pipe at him - there was no question that he was anything but a bad guy and wanted to do me harm - but he was quick. He ducked and my momentum and the weight of the pipe swung the arm all the way around, missing him entirely, twisting my body round. \n\nThe asshole sprang up very fast, closing on me and suddenly I felt a thin cold pain in my side. It's hard to express, but it felt like cold fire. I looked down and his hand had the hilt of a knife in it, embedded in my side. \n\nWithout thinking I tried twisting back, so I was facing forward. My arm was up, holding the pipe, and my elbow smashed into the guys face. There was literally a crunch sound, as the tip of my elbow collided with his face, driven by the weight of the pipe swinging back. It was way more luck than skill; my long arms were just at the length were my elbow collided with his face, with maximum impact. \n\nThe guy dropped, instantly, and I just stood there, staring down at the knife in my side. Stupidly, I dropped the pipe and pulled the knife out. I now know that was the single worst thing I could have done - now the wound was open and would bleed, and it did exactly that. I was terrified that my lung had been pierced - my breathing was getting harder - and was debating what to do next when a sound in the door way made me look up. \n\nThere was another douchebag, in another ill-fitting suit snarling at me from the door. I noticed that, like the other one, he was fully awake and alert. I idly wondered where he'd been hiding and how he'd avoided the gas, and then I noticed the gun in his hand, on it's way up to point at me. \n\nThere was no way he was going to miss; it was point blank range. He was too far away for me to reach, and I wouldn't have tried anyway. I had to protect Megan. I jumped backwards, trying to land on top of her, so when he shot me, my body would take the bullet and protect her. I just had to hope I'd be able to absorb enough to keep her alive. It was a desperate move but all I had left. \n\nI landed facing up at him. The pain in my gut got exponentially worse, my breathing more and more labored, and through the haze of sudden agony, I saw the gun center on me. I just sat there, mesmerized, looking down the black hole at the end of it, and waited for the impact of the bullet. \n\nThere was a loud sound, incredibly loud in the confined space. There was blood, I could see it and feel it. I was surprised it didn't hurt more; I didn't feel the impact like I was expecting and then it just went black, and I dropped into that space were you just don't exist any more. \n\nI opened my eyes, groggily at first. They felt crusty. I had no idea where I was, or what had happened. I blearily imagined I must have a hangover, or something. \n\nI looked around the room, all sterile grey and white, machines on wheels and motel like furniture. My gaze stopped on April, curled up in the chair next to the bed I was on and I must have said something or made some noise because April looked up from the book she was reading, exclaimed some non English word and she jumped up, smiling like her face was about to fall off. \n\n\"You're awake!\" she said, unnecessarily. \"How do you feel? Are you in pain?\" \n\nI tried shifting in the bed and a stabbing pain occurred in my stomach, bringing with it instant recall of everything that had happened. The walkup, the gas, the steel pipe, finding Megan, being stabbed and... presumably shot? \n\nI grimaced at the pain, and April's happy smile instantly turned to a worried frown. \"I'm going to get a nurse. Don't go anywhere.\" \n\nAnd she was out of the room. I settled back, trying to find a position that didn't send spasms of pain through my gut. \n\nShe bustled back in almost immediately, with a starch white candy striper. \n\nThe nurse checked machine vitals, took my temperature with some new fangled thermometer that rolled over my forehead, and did other nursey things. \n\nEventually she grunted, and said, \"All within normal ranges. He's just come out of normal sleep. I'll get some oxytocin for the pain though.\" \n\nTwo minutes later she was back with a little paper cup, two tablets and a cup of water. Honestly, the water felt great against my parched lips. \n\nI swigged down the tablets, wincing at the on going pain. \n\n\"You'll still feel the wound,\" she said, looking down her glasses at me, \"but the pain will fade in about half an hour. Don't do any laughing, that'll make it worse. You are going to be fine though. The knife only nicked your intestine, and all the damage was repaired by the surgeon.\" \n\n\"What...\" I creaked, my voice coming out dry and cracking. \"What about...the bullet wound?\" I asked, my voice coming through stronger on the second attempt. \n\n\"Bullet wound?\" The nurse asked, sounding puzzled. She turned to April and asked, \"What's he talking about?\" \n\n\"I imagine he thinks he was shot. The situation where he got stabbed ended in a shoot out, and Thomas passed out in the middle of it. I can imagine he believes he was shot. Thomas,\" she said, directing the last to me, \"you are fine. That guy didn't shoot you. He was shot instead, do you remember?\" \n\nI creased up my forehead, trying to remember. There was the one guy I took out, then the other with the knife. I remembered feeling the cold as the knife went in, the sharp slicing pain. I remembered pushing the guy away, and pulling the knife out, being surprised at how much blood there was. I remembered the guy with the gun, staring down the barrel, the shot, a blood splat... \n\n\"Yeah, I think I do. The blood splat, that...wasn't me? It can't have been, can it?\" \n\n\"No, that was... sorry nurse, this is a bit gratuitous, but he needs to know... that was his head exploding. The FBI was right behind him and caught up with him right at the moment he was going to shoot you. That was his blood everywhere, not yours. I don't blame you at all for passing out. We are all just amazed you did what you did. You took out five houses of people with that gas, you know? The FBI is not amused. Thankfully, our boss managed to convince them not to file charges against you. \n\n\"Those guys? Right at the end of your little rescue mission? They'd come as reinforcements. The best we can tell, when everyone started getting woozy, someone in the house called for backup. The FBI got your call, and then watched this car screech to a halt in front of the building, and four guys jump out and run inside, and the agent on the scene just made the decision to go in, without waiting for swat backup. And he saved your life too, with a split second to spare.\" \n\nI sat there, absorbing everything. Then one thing jumped to my attention. \n\n\"Meg...\" \n\n\"She's fine,\" interrupted April. \"She's absolutely fine. Scared out of her wits, to be clear, but physically fine. Two scares, first for herself, then for you. She's tied up right now with the FBI, giving testimony. They still have to grab one man, at the top, and because of that she's in protective custody right now. But as soon as she's able she'll be in to see you. She's out of her mind worrying about you.\" \n\nApril's eyes twinkled. \n\n\"We've never seen this side of her before. You bring something out in her, Thomas.\" \n\nI closed my eyes rather than answer. To be honest, I was more than a little tired of April, and all the rest of the Ingrams people. As long as Megan was ok, I was ok. I knew our time had come to an end - Megan had a job to do, and I had a life to get back to. Not the same life - my life could never be the same now. I'd call it MD - Megan Domini, like Anno Domini. Maybe I'd try and find someone... Maybe get some of that surgery she had talked about, weeks ago. Do something better than skulk in the sewers of Boston. \n\nAnd as I thought about it, I drifted off... \n\nThe next time I woke up, April was gone and Dermot was sitting in the side chair. I just surfaced slowly, and blinked, and looked around, and he looked up at my motion, adjusting his bifocals and putting down his Ipad. \n\n\"Welcome back, Thomas,\" he smiled at me. \n\n\"How...long...?\" I croaked, my mouth totally dry. \n\n\"Oh, just a day. You should be sleeping normally now, so I've been told. Most of the drugs they gave you to force you to sleep should be almost flushed out by now.\" \n\nI just sat back. Even craning my neck at Dermot was too much. I was just tired. \n\nDermot removed his glasses and got up and came and sat on the edge of the bed, looking down at me, concernedly. \n\n\"Well, you be happy to know we've managed to head the FBI off at the pass. They are...aha...most unhappy with you. They had several charges ready to level at you, assault, terrorism charges, anything they thought they could make stick. Agent Trubas was very very upset about the whole thing. \n\n\"However, the fact is, you did force them into action, and you were 100% right that she was there, and frankly, from what I've been lead to believe, half the task force wants to string you up from the nearest lamp post, and the other half want to pin a medal on you. Well, Lad, way to make friends and influence people. Dale Carnegie would be quite proud.\" \n\nI laughed and then instantly stopped as the stabbing pain in my side hit me. I ended up groaning instead. \n\n\"Well, Thomas, you won't be charged with anything. Our boss does have some friends in high places, and we do owe you for, well, everything. I would say don't do anything else though. Don't even jay walk. Some of these agents would love the opportunity to bust you for something. Anything, in fact. I think all your free passes are used up, right now.\" \n\n\"Where's Megan?\" I croaked out, the most important question on my mind, craning my head again, even though it hurt. \n\n\"Ah, she's still in protective custody right now. The fact is, while the FBI found a lot of things in that house that point them at various things, they still haven't caught Mr. Big yet. Thomas, you may have taken out a house with sixteen people in it, and the FBI mopped up another twenty more, there are way more than thirty six people involved in the mob in Boston. \n\n\"But, what they did find in that house was more than enough to swear out warrants for quite a few people. They got most of them, but the top guy, he's gone in the wind. \n\nSince he's currently AWOL they want to keep Megan and you safe for the time being. Megan more so than you, since she can testify for them. You because...well, mainly because you have the ability to piss off the Boston Mob more than anyone they've ever encountered. There's actually a cop sitting outside. I got asked for ID before they let me in here, so they are serious about keeping you safe from...repercussions, shall we say. \n\n\"But what's interesting is that now it's that guy who's on the run and hiding, not you. The shoes on the other foot now, eh? And it's one thing to have the mob looking for you; it's quite another to have the FBI after you. So take some solace from that.\" \n\n\"Now, rest my friend. Get well. Things are progressing about as well as they possibly can. Megan is safe and you are going to be fine, with no blow back. Something I'm very grateful for, and you should be too.\" \n\nSo that's what I did. I leaned back and thought about the past few weeks, smiling the whole time. \n\nI was out of the hospital within a week. It's astounding how fast a belly wound heals. I was back in my little cave, and Mike Collins, my supervisor, stopped by to tell me to not to even think about going back into the tunnels until I was completely healed. At least two more weeks. \n\nSo I didn't. I lay around, watched the last season of Person of Interest, wondering the whole time what Megan would have thought of it. She never showed up, or called or emailed. I didn't spend time indulging myself over it - I wasn't going to be a victim again. She'd shown me a better way, and instead, I was just doing my best to be grateful for that which she had given me, instead of moping about how I was alone again. Without the one person who I would, quite literally, have died for. But, for the first time in my life, I felt real pride. I had had a relationship with a woman; I had moved people with music; I had learned to forgive; I had taken great risks for important things. Even though I was too tall. Even though I had scars; Even though I'd had a shitty life. Those things were just on the surface, but I could operate beneath the surface now. I had real depth. I was worthy. I had pride. I was a new man. And I owed it all to Megan. She had taught me to look beneath the veneer. This incredible woman had seen me for who I was, and that had liberated me to do the same. ",
        "But, I also knew she had a job to do. There were other people to be helped. Even if I burned with jealousy knowing how she'd 'help' them. Perspective was needed. \n\nSo at the end of the two weeks, when I could walk without too much pain, I went topside and made an appointment with the best plastic surgeon that I could find on Yelp. Megan and April had promised me that their little agency would pay for it, so fuck it, I was going to claim it. I deserved that. \n\nAnd then, after making the appointment, I returned to my little dank office/apartment and found Megan waiting for me. \n\nShe was just standing in the middle of the office. Not sitting, just standing, in a business suit. Her hair was up and she looked... well, frankly, she could have been wearing a burlap sack and she'd have looked stunning to me. \n\nI don't know how long she had been there, but I stopped in the doorway when I saw her. I just didn't know what to do or say. \n\nShe smiled tentatively at me and said, \"Hello Thomas. I'm glad you are up and about again.\" \n\nI opened my mouth and took a breath, then moved into the room and dumped my jacket on the office chair. I closed my mouth again, not trusting myself to speak. I think she was nervous, and I couldn't for the life of me figure out why. \n\nI burned to take her in my arms, but I knew the likes of her were not for me. She was out of my league. I knew my place. It was a better place than I had ever imagined being, thanks to her, but it was still on a different plane than hers. \n\nAnd then she said it. \n\n\"I'm sorry I haven't come before now. I had to... get something things sorted out. Arranged. Make sure the bad guys were put away. I couldn't put you in any more danger. Not again. You've saved me twice now, literally, and I couldn't ever make more trouble for you.\" \n\nI just stood in the room, trembling. \n\nShe waited for me to say something, and when I didn't, she bit her lip. \n\n\"Yeah, I can imagine,' she said, as though replying to something I had said. \"I know, it makes it look like I didn't care. I'm so sorry. But...there was something I had to take care of first.\" \n\n\"What?\" I asked, breaking my silence. \n\n\"I quit.\" \n\nThere was a beat and then I just exhaled heavily, sinking into the office chair. \"You did what?\" \n\n\"I quit Ingrams. I can't work there any more.\" \n\nI was shocked. \"But you love that job?\" \n\n\"Yes,\" she said, confidently \"I did. I still do.\" \n\n\"Then... why? Are there other people coming after you? What?\" I wanted to know. Anything that would make her give up that job had to be momentous. I knew now why she was here. She was here to say goodbye. \n\n\"I found something else I love even more. And I can't have both. It wouldn't be fair.\" \n\nI just stared at her. \n\n\"If you'll have me Thomas, I'm here to stay. I love you and I need you more than anything else. I have no idea what is next, but I want...no I need to do it with you. I mean, you save a girl twice - I sat there so desperately hoping you'd find me, while I was in that house. But I had faith you would. And you did. And you compose music for me. You are beautiful Thomas, inside. Just so beautiful. I never stood a chance.\" \n\nI couldn't even breathe. \n\nShe smiled at me, that wide, complete and totally dazzling smile, and the heavens sang, and I, unabashedly, broke down and cried, while I stood up and she came into my arms. My life changed forever, once more, at that exact moment. \n\nI had the surgery. Actually surgeries. It took three months, and three operations and some removal of bone and cartilage from my hip, but they did a fairly good job. At least it's not remotely as bad as it used to be. You can still see where it was, if you look, but I don't look like something from a bad horror movie any more. \n\nMegan held my hand the whole time. She was just never far away. I think she thought that if she was, I would think she had abandoned me. \n\nFor me, I just... couldn't believe it. She had chosen me over that career. I didn't know what to think about that. I mean, that's a big deal, right? Damned fucking straight! \n\nOf course, Ingrams was never going to let her go. Not totally. They created a new position, especially for her. She was the new Training Overseer. She traveled to find new recruits and evaluate them, and then put together a training package for each of them, to educate them and put them through their paces. No more fieldwork for her. I couldn't tell if she was happy or unhappy about that - all I knew is that she did her best to make me happy, and god knows, I tried to do the same for her.  \n\nWe were married four months after the surgeries were complete. The first field agent marriage Ingrams had ever had. Even the boss, Jessica, showed up. April was her maid of honor. I had no one on my side, besides my boss Mike and Jace, who swooped in a week before the wedding and insisted on taking me out on a bachelor party. And one other person showed up, completely unexpectedly. I didn't know what to think. I think I was pleased that Kyle Partridge showed up at my wedding; sometimes it's hard to sort through the feelings. But Megan helps me with that. \n\nSometimes I still have nightmares about what happened in the tunnels, and what happened in the walkup, but Megan is there to hold me when that happens. \n\nI know what Megan was and what she is now. I'm ok with it - I've been accepted by the Ingrams family, and honestly, that's more family than I think I could ever have hoped to have. I know other field agents look at us funny, because we are the relationship that worked. It is possible, and they take heart from that, so we work extra hard at making sure it continues to work. \n\nIt sure does so far. Especially at night. We moved from Boston to Washington, since that's where Ingrams is located. I moved positions and I'm now the main EPA water guy for Washington DC. I had to actually get a proper security clearance to get that job. We live in an apartment in the Watergate building, of all places. But we are happy. I know I am, any way, and I'm pretty sure Megan is. She keeps going on about Thomas Avaline the third. I'm not sure I'm quite ready for that, but never say never, eh?"
    ],
    "authorname": "jezzaz",
    "tags": [
        "romance",
        "love",
        "intrigue",
        "mob",
        "sewers"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/ingrams-and-assoc-4-beneath-the-surface-ch-04"
}