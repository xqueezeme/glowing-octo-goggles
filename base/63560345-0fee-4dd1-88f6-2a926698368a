{
    "title": "Family Issues Ch. 13",
    "pages": [
        "Author's Note: Any and all persons engaging in any sexual activity are at least eighteen years of age.\n\nFinally. Sorry it took so long, but this was the longest chapter and it took time to process. \n\nAs always, I need to thank, Stylus and Madison, my cool editors - for their endless patience, and great insights. \n\nJust a quick reminder. So far:\n\n1. The Big bang.\n\n2. The autotrophs began to drool. \n\n3. God, Adam and Eve and that awkward story with a talking snake.\n\n4. Lots of other stuff.\n\n5. Ginger who is a singer in Mike's (Kevin's best friend) band, hit on Kevin. It turns out she just wanted to use Kevin to get into a sorority. Kevin showed her the middle finger when Ginger started to trash Mike and called him a loser. \n\n6. Suzan Owens (the Syndicate's main money launderer) killed William Richardson (CEO of Richardson and Williams \u2013 I was totally not in focus when I invented the company name).\n\n7. The Syndicate killed Suzan Owens and Diana took her place as the Syndicate's money launderer.\n\n8. Helen went to jail for the murder. \n\n9. Kevin, who now lives with Nadine, asks Ginger to represent her, then went and confronted his biological father, Pastor Roy (the spiritual leader of a fanatic religious extremists called \u2013 Army of God), in jail. It turned out that the Army of God is responsible among other things, for the death of Helen's mother.\n\nOn with the story.\n\n$$$$$$$$$$\n\n\"What time did you leave the hotel?\"\n\n\"Eight p.m.\" Helen's voice was barely audible in the courtroom.\n\n\"Sorry? You need to speak up,\" Ginger said.\n\n\"Eight p.m.\"\n\nKevin swore under his breath. His Valkyrie had lost over ten pounds during her incarceration. Weren't they feeding her in jail?\n\n\"Are you certain?\"\n\n\"I knew William usually stays until eight-thirty, nine, sometimes. I kept an eye on my watch because I was terrified I might miss him.\"\n\n\"Ms. Anderson said in her testimony, she met you around eight p.m. when she punched her card going out.\"\n\n\"I used the parking lot elevator to the office, and I didn't see anyone. I arrived at the office at eight-thirty, not eight. Marianne is lying!\"\n\nGinger let that echo and sink. If she could discredit the emails and the orders signed by Helen, then it would be Marianne's word against Helen's. The jury should hear the words 'Marianne' and 'lying' as much as possible. \"So, you met no one.\"\n\n\"I went straight to William's office.\"\n\n\"Go on.\"\n\n\"I've found William in a pool of blood with his Ka-Bar stuck in his chest.\"\n\n\"Did you notice anyone else in the office?\"\n\n\"Maybe. I didn't check.\" Helen's alabaster visage was passive when she described a man whose life was ebbing away in a pool of blood. The jury, who didn't know her intimately, perceived a pale blond ice-queen. Aloof. She wore her mask like a second skin. Kevin had breached that wall long ago and wasn't fooled. Her lower lip twitched lightly. Her fingers clenched and flexed. William was dear to her, and his death had cut deep. \n\nHelen had dark circles under her eyes. His Valkyrie's shield and armor were cracked; her will to fight was broken. \n\n\"What happened then?\" Ginger said.\n\n\"I immediately began TCCC-CLS and called the emergency services.\"\n\nGinger danced an Indian victory jig in her mind. She didn't instruct Helen to use military terms; it came naturally and helped her steer the testimony in the right direction. \"For the sake of anyone unfamiliar with military acronyms, TCCC-CLS?\"\n\n\"Tactical Combat Casualty Care, Combat Life Saver. It's a course selected Marine Corps officers attend at Camp Pendleton, in Oceanside.\"\n\n\"What exactly do they teach you in that course?\"\n\n\"First responder care at injury point. Treating and evacuating a casualty.\"\n\n\"In William's case?\"\n\n\"He was still breathing, and he had a pulse. Severe bleeding was the obvious risk factor.\"\n\n\"TCCC is a procedure you follow from A to Z. Like an automated machine, right?\"\n\n\"A thinking machine that doesn't waste critical time on hesitation. TCCC reduced US army casualties by 67%.\"\n\n\"I know.\" Ginger gave a tender smile. \"I'm trying to establish the state of mind you were in. It wasn't the first time you'd had to use that skill.\"\n\n\"No.\"\n\n\"During your service, you were forced to use it several times.\"\n\n\"Unfortunately.\"\n\n\"I'd like to present a recording.\" Ginger pulled out a CD. \"Luckily the Marine Corps save its communication channels stream for years.\"\n\n\"Objection, Your Honor, irrelevant.\" Larry looked like someone who found half a cockroach in his salad. \n\n\"Your Honor.\" Ginger was a singer, dark mezzo-soprano. Her statements flowed like a song and were an ear balm to Larry's nasally objections. \"Mr. Durham, the security guard who responded to Ms. Anderson's call said in his testimony that Helen appeared calm and in control. Quoting his words in this court, 'Helen appeared calm. The opposite of what you'd expect a person stumbling on a murder scene.' The prosecution would have us believe she is a cold-blooded murderer, unaffected by gore. The defense will prove that my client was calm when she tried to save William's life\u2014\"\n\n\"Objection, Your Honor. Tried to save William's life?\"\n\n\"Let me rephrase. When Mr. Durham saw the defendant leaning over the victim. The defense would like to present a different explanation for the defendant's demeanor.\"\n\n\"Overruled.\"\n\nGinger took off her glasses and gave the judge a smile that could melt the ice-caps. She wore a navy black pencil dress to court. Professional without losing her long legs' effect. Kevin could swear that Judge Henley blushed. \n\nGinger turned back to Helen. \"In Husaybah, Iraq, your company was sent to clear an insurgents' headquarters, and your commander accidentally activated a booby-trap, right?\" \n\n\"An IED disguised inside a mattress.\"\n\nGinger inserted the CD into the court's device and pressed play. \n\nThe recording opened with a distinct, static chirping, followed by a few bleeps. A heavy machine gun burst in the distance, then quiet fell again. Suddenly, someone screamed in the background, begging for his mother to come and take him. \n\n\"Hitman Two-Two, this is Hitman Two-Three, come in. Over. We've got nine men hit. I repeat. We've got men wounded on the ground.\" Helen's throaty voice was easily recognizable above the channel's static hiss. \"Immediate evac, immediate evac, at point Alpha, Charlie, Charlie.\"\n\n\"Hitman Two-Three, this is Hitman Two-Two, say again. Nine men down?\" Compared to Helen's calm, the soldier responding sounded like a frightened teenager.\n\n\"Hitman Two-Two, we've hit an IED. Multiple casualties! Nine men down!\" Helen raised her voice, but there was no stress, just an attempt to focus the other guy. \"Immediate evac, immediate evac, at point Alpha, Charlie, Charlie.\"\n\n\"Hitman Two-Three, can you get to the Humvees?\"\n\n\"Negative. Negative. Hitman Two-Three\u2014\"\n\nGinger stopped the recording because Helen's face turned ashen. She breathed heavily, her fingers clenched around the stand's microphone. She was visibly shaking.\n\n\"Ms. Brion, do you need a recess?\" Judge Henley was alarmed by her reaction.\n\nHelen caught Ginger's eye, and her new lawyer shook her head quickly. She wanted to hit the iron when it was still hot.\n\n\"I'm okay. It's just...\"\n\n\"You were heavily injured in that incident?\" Ginger was in command again.\n\nHelen nodded.\n\n\"Please?\"\n\n\"Yes.\"\n\n\"You lost your left eye. Three operations and six months' recovery. You were diagnosed with PTSD three years ago, am I correct?\"\n\nHelen bit her lip and added a barely audible yes.\n\n\"And even though you were in terrible pain, you treated and saved the life of four marines. You kept your cool, notified the HQ, you remembered to call off an airstrike on your position, and you treated the injured. In fact, you received a Bronze Star for your conduct.\"\n\nHelen nodded.\n\n\"I'm sorry?\"\n\n\"Yes.\"\n\n\"I'm sorry, it's hard to hear\u2014\"\n\n\"Yes!\" Helen finally raised her tone. \"It's difficult for me...\" Her voice broke. \"I lost brothers. My soldiers, my commanding officer, I...\"\n\n\"It's understandable, Ms. Brion. No one can deny your pain. I deeply apologize for taking you back to that horrible day.\" Ginger waited for a little before she continued. \"But nobody should be surprised that you appeared calm when you treated William!\"\n\n\"That's what I've been trained to do.\"\n\nKevin felt like kissing Ginger. She'd instructed Helen to dump the ugly business suit and bought her a clean-cut black dress. While recounting her injury must have been emotionally overpowering, it left a deep impression on the jury. Helen was no longer an unfeeling alabaster statue. She was flesh and blood, hurting from her comrades' loss. A war hero. The fresh look and the testimony gave them a different perspective. They were finally fighting back.\n\nThe prosecutor sure looked like he was about to have a fit.\n\n\u2013-\n\n\"Ms. Brion, I hold in my hands,\" Larry waved the document, \"a daily maintenance and floor-polishing order issued for G&G Cleaning Service. The money was transferred in September, but the cleaning job never took place. G&G can't offer cleaning services, because they don't have a cleaning staff or any staff at all. G&G is a dummy company. An entity that exists only on paper. Do you recognize the signature?\"\n\nHelen took the document wrapped in plastic using two fingers, like she has just received a live snake. She stared at it before giving it back. \"It's mine, but it's a fake.\"\n\n\"Is it?\"\n\n\"I'm an analyst. The operations officer issues cleaning orders.\" \n\n\"But any vice president has the authority to issue such an order, not just the chief of operations.\"\n\n\"It wasn't me.\"\n\n\"And the email telling Miriam Anderson to launch Destiny Mall?\"\n\n\"Wasn't mine either. I opposed Destiny Mall from day one.\"\n\n\"How do you explain that this order, and hundreds like it to G&G and other dummy companies, plus the Destiny Mall email, were all sent from your office's email account?\"\n\n\"I... I didn't send those emails. Maybe the same person who forged my signature hacked into my account.\"\n\n\"Sure.\"\n\n\"Objection, Your Honor, argumentative,\" Ginger jumped.\n\n\"Sustained.\" Judge Henley gave Larry a warning glance.\n\n\"Ms. Brion,\" Larry didn't lose a beat,\" you have a strict password policy at Richardson and Williams. A password expires every three weeks, right?\"\n\n\"Yes.\"\n\n\"So you're saying that for several months someone repeatedly hacked your account, even though the FBI has found no evidence of intrusive hacking activity in your office?\"\n\n\"Objection, Your Honor. My colleague is badgering the witness. She is not a computer expert, and she said she didn't send those emails.\"\n\n\"Withdrawing the question.\" Larry went for his sourpuss smile that could make onions cry. \"Ms. Brion, on November the sixth, you didn't show up for a CEO monthly meeting. A meeting that launched Destiny Mall.\"\n\n\"Yes.\"\n\n\"Destiny Mall was an attempt to steal 700 million. It's a land fraud.\"\n\n\"I don't know the exact details.\" Helen glowered. \"I've been cut off from the outside world since November.\"\n\n\"Because the FBI decided you're a prime suspect in a fraud case.\"\n\n\"Objection, Your Honor.\" Ginger jumped, her face red at the dirty trick. \"The FBI didn't press any charges.\"\n\n\"Yet.\" Larry raised his hands palms forward. \"Sorry, sorry, bad phrasing. Tell me, Ms. Brion, how many CEO monthly meetings have you missed prior to November the sixth?\"\n\n\"None.\"\n\n\"What happened on November the sixth, then?\"\n\n\"I...\" Helen glanced at Kevin.\n\n\"Does Kevin know?\" Larry's grin got bigger as Helen flinched and blushed deeply. \n\n\"I was supposed to meet Kevin at the Comfort Inn near Lincoln Park.\"\n\n\"What for?\" Larry said.\n\n\"It's unimportant, and he didn't show up, anyway.\"\n\nKevin stared at her, rapidly blinking.\n\nThe prosecutor smirked. \"You need to synchronize your versions. Kevin didn't mention a hotel meeting in his police testimony.\"\n\n\"Objection, Your\u2014\"\n\n\"Let me rephrase. It doesn't really matter if Kevin supports your claim or not. You've told the police you came to the hotel at two-thirty p.m. Why did you miss the meeting at four p.m.? A meeting that was all about Destiny Mall. You claimed you had opposed Destiny Mall from its inception. How come you missed your chance to shoot it down? Why did you stay in the hotel until eight p.m. even though no one came to meet you?\"\n\n\"I fell asleep.\"\n\nThe room erupted with giggles that were hushed by the judge's gavel. \n\n\"So to sum it up. You, a vice president in a major company, who never missed a CEO meeting in her entire career. You had a meeting,\" Larry made air quotes, \"at a hotel with someone who has no clue what you're talking about. In your words, he didn't show up. So, instead of going to an important, decisive meeting, you took a six-hour nap in the middle of the day. Don't blame me if I find it a bit hard to believe.\"\n\nThere were more sniggers from around the room.\n\n\"I think I might have been drugged,\" Helen said.\n\nLarry rolled his eyes. \"I'd like to present a more reasonable alternative.\" He spoke tenderly, faking empathy for the poor idiot on the stand, tangled up in her childish lies. You were Destiny Mall project's advocator and initiator, but you didn't want your name associated with its launch. You knew it was a fraud that could bring the whole company down. That's why you didn't show up for the meeting. You only showed up after you've received an email from William, saying he wanted to cancel Destiny Mall.\" \n\n\"That's not true, I'd never\u2014\"\n\nLarry altered his tone and waved his blaming index finger in the air, accusing. \"You showed up with an intent to murder, and you followed through. Only you didn't take into account Marianne Anderson coming back to the office.\"\n\n\"I didn't murder anybody! I didn't write those emails! I did fall asleep! Why doesn't anyone believe me?\" Helen burst out in tears and buried her face in her hands. \n\n\"No further questions, Your Honor.\" \n\nOnly Ginger's firm hand on his shoulder prevented Kevin from launching himself at the prosecutor.\n\n\u2013-\n\n\"Why on earth did Helen say she was going to meet me in that hotel?\" \n\n\"She told me you texted her, Kev.\" Ginger's voice sounded muffled. \"She said you invited her to the hotel but never showed up.\"\n\n\"I never texted her.\"\n\n\"I know. The police let me check her mobile. Why do you think she said that?\" \n\n\"I don't know anymore.\" Kevin sighed. \"Maybe fear is making her invent stuff like that. Why do you sound like you're in a box?\"\n\n\"Because I'm on the toilet seat. My team-manager said I could work on Helen's case in my free time, but the day he catches me doing voluntary work at his expense, I'll have to clean out my desk.\"\n\n\"I don't want you to lose your job.\" \n\n\"Don't worry, and anyway I got this job because the company belongs to my sorority roomie's mother, and you got me into Alpha Pi Alpha. If they kick my ass, it evens out. Why does it sound like you're in a construction site?\" \n\nBehind him, a crane lifted a grand piano over the pool's dome. A porters' army, like a trail of ants wearing jumpsuits, were hauling the Astor mansion's interior onto trucks. Aleki, with Cecilia's directives, drove Nadine's ridiculously expensive sport-cars collection onto a car-carrying trailer. The activity had been droning since noon of the day before. \n\n\"Don't ask. I don't have answers, anyway. It's chaotic. Any good news, Ginger?\" \n\n\"I'm sorry. It's... I have a hard time getting Helen's cooperation. It's three hours' drive to jail, and she's... It's like she lost the will to fight. I can't help her if she's not helping me. She keeps asking about you, and I'm not allowed to say much.\"\n\n\"Jesus, she feels abandoned. Can you tell her I love her and that I'm getting her out?\"\n\n\"I'm not allowed to deliver her any messages. An FBI officer is watching over us all the time. I'll lose my license.\" \n\n\"Just tell her I said I love her, that can't be breaching the FBI\u2014\" \n\n\"Tell her you love who?\"\n\nKevin jumped two feet in the air. \n\nNadine glared at him behind his back, and he wondered how long she had been standing there.\n\nShe wore a sharp suit; her raven-black hair was tied in a tight bun. Tall, every button and line straight like a North Korean army parade. Her stance said 'don't mess with me,' and when she was in that mood, even Madam Hulk was skittish. Nadine's power resided in her beautiful eyes. People scurried to get out of the way when her smoky orbs fell on them. Now that menacing stare was focused on the only person who could make her heart flutter.\n\n\"You're talking to that pixie-cut blond, Helen's new lawyer?\"\n\nKevin nodded. \n\n\"You've made up your mind.\"\n\nKevin nodded slowly.\n\n\"And you didn't have the balls to come and tell me about it?\"\n\n\"Nadine, you don't own me. I'm not a Lace Boy.\"\n\n\"You're not that special either, Kevin. I've been gentle with you, but it can end right here, right now.\"\n\n\"I know.\"\n\n\"I can take what I want from you.\"\n\nHe shook his head. \"I'm so sorry, but you can't.\"\n\nShe closed the gap between them in a flash and grabbed his collar. \"You keep forgetting who you're talking to,\" she growled.\n\n\"No, I don't. I'm so sorry, Nadine.\"\n\n\"Stop apologizing!\" She released his collar. \n\n\"What you want from me can only be given, not taken. I'm so sorry that I can't give it to you. I love Helen. Please let me go quietly.\"\n\n\"The fuck I will,\" she snarled. \"This isn't some...\" She choked, but then straightened her back. Her black eyes were a dark storm. \"We're going, and you're coming with us.\" \n\n\"Nadine.\"\n\n\"One more fucking word out of your big fucking mouth, and I tell Cecilia she can ride your ass. You wouldn't be able to walk straight for a year.\" \n\n\"Thanks, very graphic.\"\n\nNadine placed her index finger under his nose, and Kevin was sure she meant to smack him, but then she turned around and strutted back into the house on stiff legs.\n\n\u2013\n\n\"The air in California is not healthy for us anymore.\"\n\n\"In what way?\"\n\n\"Hand me a wrench, Kev.\"\n\n\"Which one?\"\n\n\"Whatcha got?\" Brigitte chose two wrenches out of the set Kevin offered and tightened the screw on her Kawasaki Ninja beast. She revved the engine twice and winced because she didn't like the sound. \"Goddamn motherfucking piece of gook shit.\"\n\n\"Tell the other Hitler Youth I said hi.\"\n\n\"Kev, you know you don't need no sweet talking with me. I'll sleep with ya, just say when.\"\n\n\"You're not my type.\"\n\n\"I'm hot.\"\n\n\"You're also a racist bigot and a cold-blooded murderer.\"\n\nBrigitte shrugged. \"Nobody's perfect.\" \n\n\"And it's not the motor's fault. You trashed your Kawasaki last night on the lawn. Iman and I found you naked on the bathroom's floor. Totally shitfaced.\"\n\n\"It was you who dragged me to bed?\" \n\n\"Yep.\"\n\n\"Oh my god, you're such a pussy, Kevin. You could have had anal.\"\n\n\"Next time.\"\n\nThe saber-thin futanari hooked a voltmeter to her battery's positive and fired up the engine. \"Eleven thirty-seven, goddamn, it won't even charge properly.\" She spat. \"Anyway, I'm not a racist. I hate everyone equally. Niggers, Injuns, kikes, gooks, fairies, futas, Democrats, all of them. Except you, you purple-eyed freak, I'm crazy about you.\" \n\nIn the yard behind him, an Asian Lace Boys' group, carrying suitcases and dressed in miniskirts, crammed into a bus in a flurry of color and laughter. \n\n\"Why is everyone packing, Brigitte?\"\n\n\"Told you, you short-attention git. The air in California is not healthy for us anymore. What Suzan Owens did at Richardson and Williams has sent out too many ripples. We can't contain them all. It might take a month or two, but the FBI is sure to pay us a visit.\"\n\n\"I thought the Feds and cops were in your back pocket.\"\n\n\"Hand me the fuel injector synchronizer. Not every cop, you dumbass. Someone is bound to make a connection eventually, and we're not going to be here when it happens. Nadine sold the mansion a week ago. We're downsizing in the US. Moving our operation base. \"",
        "\"Where to?\"\n\n\"You're awfully curious.\"\n\n\"Brigitte, if I take a car and run away, will you chase me down and force me to come back?\"\n\nBrigitte stopped fiddling with the synchronizer and gave him a curious scan. \"What's going on, Kev?\"\n\n\"Nothing.\"\n\n\"Fuck that.\" She kicked the bike. \"50k worth of trash. I'll take the van with you and Nadine. Do you mind riding bitch?\" \n\n\"He's not riding with us.\" Nadine stepped out of the garage door, her hands on her hips. \n\n\"Where do you want him?\"\n\n\"Nowhere.\"\n\n\"Huh?\" \n\n\"He's not coming with us.\"\n\n\"Where is he going to?\"\n\n\"What the fuck do I care?\" Nadine raised her voice high enough for people around to take notice. \"I'm fed up with the whiny little bitch.\"\n\n\"What?\" Brigitte stared at her, bug-eyed. Aleki stopped the Bugatti he drove and watched with a smug grin.\n\n\"You heard me. The sooner I don't get to see your annoying baby face, the better. You've overstayed your welcome, Kevin.\" \n\n\"Wh-what?\"\n\nHer dark eyes shot lightning. \"Piss off, Kev.\"\n\n\"What?\"\n\n\"The gate is over there, you idiot.\" She pointed. \n\n\"Thanks,\" he mumbled and took off. Slowly at first, then he ran in case anyone changed their mind. \n\nBrigitte stared at his disappearing back. \"What just happened?\"\n\n\"Fuck off!\"\n\n\"He's still super-hot. Now that you're fed up and all that bullshit, what if I take him for a ride?\"\n\n\"What if I ride over you with a bus?\"\n\n\"You know, Nadine, under the scary mask, you're just a big softy.\"\n\n\"Shut the fuck up!\"\n\n\u2013-\n\nRain started pouring when he was one block away from the Astor mansion. People scurried indoors, and Kevin zigzagged from one shelter to the next. Soon he was drenched, so he fidgeted under a newsstand, waiting for the rain to weaken. He kept scanning the direction he'd come from in case anybody followed. \n\nTwo youngsters in raincoats, probably brothers, were up and about, hopping happily in the rivulets flowing along the sidewalk. A young brunette in a stylish raincoat watched over them under an umbrella and gave an apologetic smile to Kevin when the boys almost sprayed him with rainwater. \n\nThe younger kid stopped jumping and glanced up to her. \"Mom, when you're old and go to heaven, and then you'll be inside your mom's stomach, and you'll be born and be a kid again, you should jump with us in the puddles, okay? It's really fun.\"\n\n\"I will,\" she guffawed. \n\nKevin started sprinting again, skipping from shelter to shelter. His mother would never grow old, and he had always believed that she was watching over him from heaven; now he wasn't sure anymore. \n\nHe wasn't even slightly surprised when he spotted the woman waiting for him at the lonely bus stop. The rain hadn't touched her, but her face was wet.\n\nShe escaped a desert land, from a family who didn't accept her and her sister. She crawled up from the gutters and built her power on sheer will. She owned an illegal escort service and ran illegal wrestling matches. Hard criminals feared her; crime lords respected her. She taught Kevin the difference between sex and making love. She could make him crave her with a smile, but that wasn't enough anymore.\n\n\"Thought you'd take off without saying goodbye?\"\n\nHe attempted a hug, but she pushed him back.\n\n\"That show I gave back there...\"\n\n\"I know why you did it.\" Nadine had gained dangerous enemies over the years. The opportunity to hurt her through Kevin was too sweet to miss. Convincing people she didn't care for him that reduced the risk. \n\n\"Iman will be devastated,\" she said.\n\n\"I'll visit.\"\n\nShe shook her head. \"Not where we're going. This is really goodbye, Kev.\"\n\n\"Tell her... make sure she keeps on reading. She has amazing potential; she just needs someone to believe in her. Tell her, tell her I love her so much and that I'll never forget her.\"\n\n\"I will.\"\n\n\"I'm so sorry, Nadine.\"\n\nNadine caressed his cheek. \"You know, we could have been amazing together, you and me. I was willing to let it all go for you, Kev. The Lace Boys, and everything else. Just grab the money and find somewhere safe to live. You, me and Iman.\" \n\nHe didn't know what to say, so he went for a hug again. This time around she allowed him. Her body was warm, and her heart beat fast against his. \n\n\"But you love Helen, even though she cheated on you.\"\n\n\"I can't help it, Nadine.\"\n\n\"Except she didn't.\"\n\n\"Didn't what?\"\n\n\"Suzan wanted to keep her away from the meeting, so we texted her, pretending it was you. We invited her to that hotel and drugged her. Brigitte took those ugly pictures with Dima when Helen was asleep. Helen never used my Lace Boys; I lied. For all I know, she was a virgin when she met you.\"\n\n\"Why?\" He stepped back, his eyes round with shock.\n\n\"Why what?\"\n\n\"Why did you do it?\"\n\n\"I wanted you to hate her, Kev.\"\n\n\"Why?\"\n\n\"It didn't help, did it? I guess some people are just meant for each other.\" A lonely tear welled in the corner of her eye and went down her cheek.\n\n\"Don't!\" He choked. She was the villain, and still he felt like an asshole. \n\n\"Helen didn't murder William,\" Nadine wiped her tear. \"She's not a murderer. Suzan Owens stabbed him to death. Helen never worked for Suzan either, she never sent any emails. We made sure it looked like she did.\"\n\n\"We?\"\n\n\"The Syndicate had been working on Richardson and Williams for two years. Not just Suzan and her team. When you have a cake worth seven billion, everyone wants a bite. I supplied the Lace Boys; Brigitte and her team were the muscle. There were other organizations too. Suzan fucked everything up when she murdered William. The FBI was all over the place before we could get our hands on any big money. That's why the Syndicate had her executed; she pissed off a lot of people.\"\n\n\"But, but, why Helen?\"\n\nNadine's jaw hardened. \"It wasn't personal. We needed a patsy. Someone to take the blame for the missing money. We've never meant for it to be a murder trial. I still have no clue how Suzan managed to pin William's murder on Helen.\"\n\n\"Why Helen?\"\n\n\"She was perfect\u2014just think about it. High up in the chain of command but a clueless loner on the other hand. She had no one to back her up, no one to talk to. No family except for a cocaine-addicted sister who was easy to control.\" \n\nKevin remembered his last phone call to Helen and grabbed his head. She sounded like she didn't have a clue because she really didn't have a clue. How could he have been so viciously stupid? \"Nadine, if you go to the police and testify\u2014\"\n\n\"If I go to the police, I'll spend the rest of my life in prison. Iman won't survive without me. You 're on your own, Kev.\"\n\n\"Me? Helen's on her own. Everyone has betrayed her. She's all alone in that jail for something she didn't do, wondering why I treated her like a piece of crap.\"\n\n\"She's not on her own; she has you. Frankly, I'd trade places with her in a heartbeat. That's your bus.\"\n\nThe silver bus screeched to a stop. The driver opened the door and scanned the odd couple shivering in the pouring rain. \"Getting in?\" \n\nKevin started towards the door, then turned around. He grabbed Nadine and pulled her for a deep kiss, letting go of everything that was and could have been between them.\n\n\"Oh,\" the driver horse-laughed and honked the bus's horn. \"D'amour!\"\n\nNadine pushed Kevin back, half smiling, half tearful. \"Go now, before I change my mind.\"\n\n\"Goodbye, Nadine.\"\n\nShe nodded. \"Go save your Valkyrie.\"\n\n\u2013-\n\nSeagull, you fly across the horizon\n\nInto the misty morning sun\n\nNobody asked you where you are going\n\nNobody knows where you're from\n\nHelen hummed softly a seventies song her mother used to sing when she was five. The black and white bird gave her a nasty screech, then took off into the cold air. She chuckled and started another set of pushups.\n\nThe inmates called them Prison Gulls. They prospered on the jail's dumpsters, enjoying the dubious plenty of the chow hall leftovers. Most inmates hated them with a passion. They bombed their stinking white goo everywhere and left a mess that required warm water rinsing and heavy scrubbing to get off. Some inmates even went so far as trying to shoot them down with improvised projectiles. Helen loved them. They reminded her that there was a free world outside.\n\nEveryone followed the same yard schedule, men and futas. To a na\u00efve outsider, the yard was integrated human harmony, but it was only a mirage. Yard segregation was strictly enforced. Black power, white power, Norte\u00f1os power, Hispanic power, futa power. God forbid if you overstepped those invisible boundaries into another group's territory.\n\nHelen formed her own group on the basketball court's outskirts. Since the cell incident, people kept their distance like she carried the plague. Her cellmates said nothing, but she could feel the volcano bubbling under the dirty tiles. At night she feared retaliation and fought sleep until she dropped out, exhausted.\n\nAt least they stopped harassing her.\n\nThe air outside was laden with rain, yesterday's terrible sins, and men's sweat. A steady drizzle kept prickling her hair, like sky needles. She didn't mind, and anyway, there was no chance in hell that she was going to spend the precious yard hours indoors. She savored the pain as her muscles stretched, keeping one eye on the group of white inmates playing basketball. \n\nThey were futanari-hating white supremacists, not all of them by choice, but that was how it worked inside. Survival dictated you had to belong, or you were prey. The inmates called it GABOS. Game Ain't Based On Sympathy. \n\n\"Barbie.\"\n\nShe grunted and kept pushing her body, one hand on the asphalt, one hand behind her back. \"Hi, Aziz. Didn't know you were out of the infirmary.\"\n\n\"Released today.\" His eyes shone, and his dark curls clung wetly to his brow. \"I've got something to show you.\"\n\n\"What?\" She stiffened. Jail taught her everyone was guilty until proven dead. \n\n\"I, I've got a letter from your boyfriend.\"\n\n\"What?\" She jumped to her feet.\n\n\"Kevin O'Brien?\"\n\n\"What? You're lying!\"\n\n\"I have a send in-send out gig with a nurse, so...I thought that since you stood up for me, I should do something nice for you.\"\n\nHer heart hammered fast. \"You, you're bullshitting me. 'Cause that just one fucked-up cruel joke if you are.\"\n\nHe shook his head. \"I swear it on my mother's life.\"\n\n\"A, a letter? From Kevin?\"\n\n\"I don't have it on me, I didn't want Valerie to know I'm helping you. You know how she gets.\"\n\nHelen nodded fast.\n\n\"I've got it stashed behind the laundry room.\"\n\nShe almost hugged him, but he gave her a warning glance, and she kept her hands to herself.\n\n\"Let's go. Slowly, try to look casual; the COs are watching.\"\n\nIt was physically painful not to burst into a full sprint even under the correctional officers' suspicious scans. A letter from Kevin? Elation sent electricity charges that tickled her fingertips.\n\nA stretch of muddied black ground lay behind the laundry room. The air smelled of wet soil, sharp laundry detergents, and ripe tomatoes. The inmates made a half-hearted attempt to grow radishes and tomatoes in semi-straight flowerbeds. Empty and half-empty laundry carts were stacked against the red-clay brick wall.\n\n\"Where is the CO that watches over this spot?\" Helen said.\n\n\"Maybe he needed to see someone about a mule.\" Aziz wiped the sweat off his brow. \"Lucky for us. Stand guard near the corner while I get it out. Whistle if you see anyone.\"\n\nEager, she dashed to the building's corner, watching the yard, her back to her cellmate. \"Did you find it?\" She had to raise her voice to overcome the giant washing machines' hum coming from the room. \n\n\"Just a sec.\" His tone rose a notch. She might have sensed his anxiety, but her own excitement blocked her perception. The laundry room's hum intensified, and Helen realized that someone opened the door behind her. She turned. Too late. Powerful arms grabbed her in a nelson grip. Smelly breath touched her face, and strong slippery fingers locked behind her neck. Helen folded instinctively. Her right leg looped back and hooked her assailant's leg. She leaned and closed her hands around a thigh with a pus-infected heroin abscess. She lifted the leg in the air before she collapsed on her back, getting a satisfying scream from her attacker. The hands left her throat. \n\n\"Nice try, Barbie.\"\n\nSomeone kicked her in the gut as she tried to stand up, destroying her balance. Heavy hands locked around her neck. Her new attacker was massive and had the muscle power to match her own.\n\n\"Grab the bitch's hands!\" The harsh scent of garlic hit Helen, blocking her sense of smell. It was Valerie.\n\nAnother fist caught her chin. Her vision dimmed. The hands left her throat, and she collapsed forward, face in the warm mud.\n\nI am a real person. I inhabit this earth. I'm not a bitch or a Barbie. \n\nThey viciously yanked her back to her feet using her blond locks. The hands locked again around her neck.\n\nShe wiggled and tried the same backflip trick, but Daria grabbed her left hand, pulling her up as she leaned. Sofia came from her right and latched to her only free hand. Helen attempted a headbutt, but Valerie choked her windpipe, preventing her from making contact.\n\nLightning flashed across the sky.\n\n\"I'm gonna shank the bitch,\" Josephine screamed. She limped into Helen's line of sight. The heroin addict held a screwdriver with its edge honed to a point. \n\n\"Shut the fuck up!\" Valerie whizzed. Holding Helen down wasn't a walk in the park. \"Suzan Owens sends her regards, Barbie. Aziz, the syringe, now!\"\n\nHelen tried kicking Josephine between her legs. The young futa jumped out of reach and broke up manically. \"Not today, Barbie.\"\n\nHelen sank her teeth into the thick arm that choked her neck and poured every ounce of hate she had into the bite.\n\nValerie screamed but didn't let go; she tightened her grip, pulling Helen's forehead up. \"Stop struggling like a rabid dog! Aziz, the syringe! Now!\"\n\nHer eyesight was getting blurrier, and her hearing became dimmer. Aziz stepped forward, holding up a syringe full of dirty brownish liquid. She eased up the struggle, pretending, then kicked high, hitting Aziz's hand. The needle flew away, and the Lebanese guy scurried after it.\n\n\"Stop struggling, Barbie, it will soon be over,\" Valerie said in a soothing voice. \"You will just go to sleep. You won't feel a thing, I promise. Easier to let go. No reason to fight. The world doesn't want you. Your Kevin abandoned you. He's not writing letters or coming to save you. Just let it go.\"\n\nLet it go? She struggled feebly, her head locked in a vise. She was forced to stare up. A seagull somersaulted in the darkening sky above her. She wished she could fly with it to the big bed where a purple-eyed young man once held her and told her she was his everything.\n\nI'm so sorry, Kevin. She closed her eyes and gave it all she had.\n\nSuddenly the pressure eased off her tortured windpipe. Sofia let go of her arm, and Daria let go of the other. Without support, she fell forward, head in the mud, coughing. She rolled with little grace, trying to scramble out of harm's way.\n\nValerie writhed on the wet earth, clutching her private area. A tall inmate in a red jumper jail uniform head-butted Daria viciously. He used a laundry cart as a makeshift weapon to push Sofia away and then lifted the cart and slammed it down on the Dominican's head. Aziz was nowhere in sight.\n\nJosephine snuck up from Helen's savior's blind side and shanked his hip. The tall man grunted, surprised. He spun around, and the makeshift knife sunk to the hilt in his abdomen, darkening his red jumper. Josephine pulled up her weapon for another strike, but Helen was on her. The marine's fist caught the young addict by complete surprise. There was a sickening crunch, and Josephine collapsed to her knees. Her mouth stayed open, and she shrieked as she tried and failed to shut it. Her jaw was dislocated.\n\nBoth Daria and Sofia were up on their feet, but now they faced Helen, no longer surprised and aching to fight. It was over. The soldiers picked up their boss by her arms and limping, made a tactical retreat. Josephine, whimpering, followed them.\n\nHelen turned to her savior. The man was tall, in his early fifties. White, not carrying any White Supremacy gang colors. Not part of any groups she knew, though there were over three thousand inmates in Alexander. She didn't know them all.\n\n\"Are you okay?\" he said, then clutched his stomach. His blue eyes widened as dark blood flowed through his fingers. \"Damnation.\" He collapsed on his ass. \"I,\" he panted, \"I knew they were up to no good when I saw that snake taking you behind the laundry room.\"\n\nHelen nodded stupidly. \"Guard!\" She tried to push a scream out through her tortured throat and coughed. \"Help! Help over here!\"\n\n\"Listen, listen, Helen.\"\n\n\"Lie down. Help!\" She screamed. Helen sank to her knees in the dark mud and ripped his jumpsuit open. With sure steady movements she located the wounds. She turned him on his side and applied pressure with one hand, supporting him with her other hand. The earth felt warm against her skin.\n\nAnother lightning bolt jagged the sky. The gulls shrieked.\n\n\"Listen, listen, Helen.\"\n\n\"Don't talk, be still.\"\n\nA curious face peeked out from the laundry room's door. Another inmate.\n\n\"Help! Get help,\" Helen shouted at him. \"Quickly!\"\n\n\"Helen, listen.\" He grunted in pain. \"You can't go back into your cell, they'll try again. Someone paid to have you eliminated. You need to tell everything to the CO. Ask for protective custody.\"\n\n\"Stop talking!\"\n\n\"You got to demand PC!\"\n\n\"Okay, okay, I will. Just stay still.\" She breathed in deeply and then giggled, a little hysterical. Elation hit her because she had just escaped death by a miracle.\n\nHer guardian angel breathed fast. In and out. \"What's so funny?\" \n\n\"You're the second man with a knife wound they'll find me with. Probably gonna blame me for this too.\"\n\n\"I'm not dead yet,\" he grunted. \"I'll tell them exactly what happened.\"\n\n\"Hey, hey, stay with me.\" She snapped her fingers when he closed his eyes. \"What's your name?\"\n\n\"I'm Roy.\"\n\n\"Stay with me, Roy.\"\n\nHe gulped again, the pain made him wince. \"I'm so sorry, Helen.\"\n\n\"What for?\"\n\n\"For the horrible deed I've done to you. Your mother... I wish I could take it back.\"\n\n\"What horrible deed? You saved my life.\"\n\n\"It doesn't absolve my sins.\" He smiled, and there was a world of sadness in it. \"You're very beautiful.\"\n\nShe blinked, surprised. That was the last thing she expected to hear.\n\n\"And very brave. Everyone heard how you stepped up for that ungrateful snake Aziz, against those criminals.\"\n\n\"Okay, but please stop talking. Just be still.\"\n\n\"It's easy to see why he loves you so much.\"\n\n\"Who does?\"\n\n\"Kevin.\"\n\n\"What? What?\"\n\nHe sighed and closed his eyes.\n\n\"Hey, hey, Roy, stay with me. Stay with me.\"\n\n\"Not dead yet,\" he grumbled.\n\n\"How? Do, do you know Kevin?\"\n\n\"Not as much as I should have.\"\n\nSomeone opened the tap, and the drizzle turned into a shower. The fat drops splashed her striped uniform with mud. \"I, I don't think Kevin loves me anymore. He's angry with me, and I have no idea why.\"\n\n\"He said he loves you with every breath he takes.\"\n\n\"What?\" She stared at him, but he gave her a tired smile. His blue eyes were kind, reassuring. \"When, when did he say that?\"\n\n\"Two weeks ago, when he came to see me.\"\n\nThe world was spinning. Nothing made sense anymore. \"Kevin came to see you? Who? Who are you?\"\n\n\"Hey, we'll take it from here.\" Someone touched her shoulder. It was David, her block's guard. A paramedic gently took her hands off and started treating the wounded man. Helen slumped over on the muddy ground, just breathing, trying to make sense of what she has been told.\n\n\"Roy, what happened?\"\n\n\"The Dominican sisterhood tried to murder her, happened. I intervened and got stabbed. She needs to go into PC.\"",
        "\"Where the hell is Shaun? He was supposed to guard this spot.\"\n\nNo one answered.\n\nDavid spoke into his walkie-talkie, and five seconds later, the jail's alarm horns went off. More COs arrived huffing, carrying a gurney. They clustered around the wounded man, ignoring Helen.\n\nShe sat there in the pouring rain, splattered with black mud but feeling very clean. Absolved.\n\n\"Okay, on the count of three\u2014one, two, three.\" The guards lifted the gurney, David motioned for her to get up.\n\nThey trudged toward the main building, but then Roy reached out from the gurney and grabbed Helen's uniform. \"Helen, you got to tell Kevin what happened.\" He gulped.\n\n\"I will.\"\n\n\"Tell him he was right.\"\n\n\"About what?\"\n\n\"About everything.\"\n\nShe stared at him, her mouth gaping open.\n\n\"Tell him he was right about everything. Almost everything. Tell him that people can change, even the worst kind. You got to promise me.\"\n\nShe nodded.\n\n\"Please keep my son safe.\"\n\n\"I will, pastor.\"\n\n\"Swear!\"\n\n\"I swear.\"\n\n\u2013-\n\nMy dick's freezing. What are we waiting for?\" Mike lit a joint and offered it to Kevin. Kevin ground it out on a lamppost and gave it back.\n\n\"Hey!\" Mike hollered.\n\n\"I need you at the top of your game.\"\n\n\"I'm at the top when I'm feelin' breezy,\" Mike grumbled but didn't light another.\n\nThey hid from the rain under the Richardson and William's offices' awning, on 226 N. Clinton Street. The parking lot was empty, and the offices were dark, like a playground with no kids. Since the murder and the fraud investigation, the offices were closed.\n\n\"Why are we freezing our balls here instead of someplace with beer and trashed hotties?\"\n\n\"We're meeting someone. Her.\" Kevin pointed at a scooter that waited patiently behind the line of vehicles at the traffic light.\n\n\"Is that your grandma? Who rides a scooter and sits in traffic with the cars?\"\n\n\"It's Ginger.\"\n\nMike's eyes rounded to dinner-plate size.\n\n\"I knew you'd be thrilled.\"\n\n\"What do we need that backstabbing psycho-bitch for?\"\n\n\"She's Helen's lawyer.\"\n\n\"Lady Macbeth and the Wicked Witch of the West were busy?\"\n\nGinger pulled into the parking lot and lifted her pink helmet. Her blonde hair was peppered with rain, and she wore a short purple skirt with extra-tall boots to complete the effect. Ginger was a go-getter, always confident in a way that was the opposite of Helen. But as her heels clicked on the pavement, her steps faltered. Her sharp chin locked in half a surprise, half a snarl. She stood for a second, like a cat on the windowsill, hesitant before it commits. Kevin stared back at his friend. Mike's visage mirrored Ginger's.\n\n\"She's all I have,\" Kevin whispered. \"Promise you'll be nice.\"\n\n\"Cross my heart. Yo, Hitler, wazzup?\" Mike chirped. \"Who's scaring the crows from the crops if you're here?\"\n\n\"Choke!\" Ginger flipped him two middle fingers. She looked like she wished she had more arms to flip more fingers. \"What the fuck is Dopehead doing here, Kev?\"\n\n\"Baiting fake blondes.\" Mike showed his white teeth. \"You're the third.\"\n\n\"Me? I'm a fake? Oh, that's rich.\"\n\n\"See how she softens the 'TH' so you'd think she grew up in Manhattan? She's from the Bronx? Fake. Did you know her name used to be Jenny?\"\n\n\"Yeah, she told me. Will you effing stop it?\"\n\n\"She changed it because she thinks Ginger is more,\" Mike made air quotes, \"exotic.\"\n\n\"Stop it!\" Kevin raised his voice.\n\n\"Why? Let him, let him, Kev.\" Ginger struggled to put on a wide smile. \"Mike, apparently, has been hoarding a lot more than just weed. It's unhealthy to keep so much frustration locked up. We don't want zombie-head to explode.\"\n\n\"Zombies eat brains. You're safe, Hitler.\"\n\n\"On second thought, suffering is good for an artist like Mike. And he is an artist after all. Like Amy Winehouse minus the talent and the fame. \n\nIt was Mike's turn to show his middle finger.\n\n\"How is the band, Mikey? Still playing at your cousin's bar?\"\n\n\"Doing much better since we dumped your fat ass.\"\n\n\"Dumped?\" She faked a chortle. \"He begged me to stay, Kev.\"\n\n\"How is life in the fast lane, Jenny?\"\n\n\"Blow me.\"\n\n\"You a hot shit lawyer yet?\"\n\n\"At least I'm not living off my mom's salary like some loser we both know.\" \n\nMike gave a Bronx cheer. \"Danielle told me Kaplan and Decker only hired you because her mom is a senior partner. I know exactly what they let you be in charge of. Coffee.\"\n\n\"So fucking what? The difference between you and me, Mike, that in ten years I'd draw a 100-grand salary while you will still be playing in your cousin's shitty bar and slinging weed to baghead students.\"\n\n\"Considering your GPA is even lower than your IQ, I doubt if they'll advance you higher than an over-qualified barista.\"\n\nThat hit the spot, because Ginger raised her fist, Bronx style, not Manhattan style. Kevin jumped between them. \"Stop it, you two!\" he roared. \"Right now! Mike?\"\n\n\"What?\"\n\n\"What the fuck is wrong with you?\"\n\n\"He's a loser and an asshole.\" Ginger contributed her opinion.\n\n\"Bitch.\"\n\n\"Have fun with Britney Spears, Kevin.\" Ginger turned on her heels. \"I don't need this.\"\n\n\"Please don't go.\" Kevin grabbed her hand. \"I desperately need you.\"\n\n\"I know you do.\" Her tone softened. \"But what do we need him for?\"\n\n\"Because we're losing.\" Kevin tried hard not to cry. \"Because the woman I love is about to be sent to prison for life, and you and I are fresh out of ideas.\"\n\n\"I still don't see what we need him for.\"\n\n\"Mike is the smartest person I know.\"\n\n\"He's an idiot,\" Ginger said.\n\nMike snorted.\n\n\"An idiot who scored 180 on an IQ test,\" Kevin spoke fast before the winds of war blew again. \"He's a hacker. With your warrant, we can search the office's servers and maybe prove that the Syndicate hacked into Helen's account.\"\n\n\"The FBI specialists didn't find anything.\" Ginger twisted her mouth as she scanned Mike.\n\n\"Maybe they're hiding the truth? Brigitte told me they have the cops and the FBI in their back pocket. I once saw an FBI agent coming down from Diana's office.\"\n\n\"I doubt that if there was a breach it happened in the office.\" Mike ruffled his dreads. \"Helen worked from the penthouse through a VPN?\"\n\n\"All the time.\" Kevin nodded. \"See, that's why I needed you.\"\n\n\"Classic. Could have been guys pretending they're ISP service employees, a delivery guy, shit like that. Maybe someone broke in?\"\n\n\"There was this one time when we had static interference with the cables. I called the cable company, and they sent two dudes.\" Kevin glared up at the dark clouds and picked his brain, trying to remember anything suspicious about the technicians.\n\n\"Could be it,\" Mike said. \"Let's go, but we need to stop first at my cousin's shop and borrow equipment.\"\n\n\"Hey, hey.\" Ginger signaled a timeout. \"The penthouse is part of the FBI investigation, and I only have a search warrant for the office.\"\n\n\"Can you get one?\"\n\n\"In two or three weeks.\"\n\n\"Which we don't have.\" Kevin shook his head. \"I've still got a key.\"\n\n\"I can lose my license, Kevin.\"\n\n\"Then my buddy and I will go.\" Mike patted Kevin's back. \"And we'll call you, but we won't say where we are. That way you won't jeopardize your coffee-making future.\"\n\n\"Asshole.\"\n\n\u2013-\n\n\"Hey, Kev.\" Mike fiddled on his laptop and hooked up the equipment he'd borrowed from his cousin's electronics shop to Kevin's laptop. \"Did you know every USB has three sides? Not this side, not this side either, and 'Oh, it was this side after all.'\"\n\nMike always thought everything could be solved with a little humor. Kevin usually agreed, but not today.\n\n\"What the hell was that good for?\" Kevin said.\n\n\"What?\"\n\nKevin plonked himself down on Moody George and stared at his image in the black 70-inch TV screen. He barely recognized the person staring back. He felt stretched. Dry.\n\nThe modern living room was the Brion penthouse's pulsing heart, and now it had ceased. Moody George, a 13K vibrating massage chair, protruded in its midst. Kevin used to wait for Helen to go to the bathroom before conquering her seat, waiting eagerly to see her reaction when she came back. It never failed to make him laugh. She would make faces, and he would whistle, and she'd try to trick him off her throne. One time she flipped him over with the chair. Something broke, and since then Moody George had become manic depressive. It either hummed ineffectually, or it went into an aggressive vibration episode.\n\nHappy memories.\n\nKevin closed his eyes and took in a deep breath. The room smelled of the love he'd lost. Where was Helen now? Was she thinking of him? Did she love him still? She had reasons not to.\n\n\"You and Ginger were an item, right?\" he said. \"Before Samantha?\"\n\nMike snorted. \"For like ten minutes.\"\n\n\"You told me you thought you'd found your one and only.\"\n\n\"To make you feel better about Helen and those dirty pictures.\" Mike frowned as he played on the laptop, his fingers quick like a pianist playing a well-practiced piece. \"I thought was my one and only, and then she turned out to be...Hitler.\"\n\n\"I've never seen you like that. You were downright cruel.\" \n\n\"It rolled off her back. The bitch eats souls for breakfast.\"\n\n\"Dude.\"\n\n\"How come you're on her side?\"\n\n\"I'm on Helen's side.\"\n\n\"She walked all over your you to get into that fucking jet-set sorority. Plus everyone on campus thinks you're a cheap skank. That's on her.\" \n\n\"She's representing Helen. She's risking the job she worked so hard to get just to help me.\"\n\n\"Gotcha!\" Mike face lit up.\n\n\"What? What?\"\n\n\"Thattaway!\" Mike pointed at the hallway. Kevin followed him as he moved slowly, step by step, with the equipment at hand. They went past the bathroom and stopped at Kevin and Diana's bedroom. Mike sniffed like a hound dog, crawled into the room on hands and knees, looked under the bed, and pointed his equipment at the big empty closet.\n\n\"Well?\" Kevin said.\n\n\"Patience, my young padawan. Impatience leads to anxiousness, and anxiousness leads to premature ejaculations.\" Mike disassembled drawers, then searched the interior with his iPhone's flashlight. He reached inside and pulled a black box the size of a smartphone. \"Boom goes the dynamite!\" \n\n\"What the fuck is that?\"\n\n\"That's, my young apprentice, is an NBI5 military-grade key-logger. Well, this is the transmitter. It has a boyfriend. A small dongle in Helen's PC's USB port\u2014very hard to detect if you don't know what to search for. It records every keystroke Helen makes and every file she downloads. The dongle sends it to this device, which in turn uses either WiFi or another network to send the information periodically to another location for safekeeping. Those cable guys didn't just fix the TV.\"\n\nKevin shook his head. \"It wasn't them. This thing is a transmitter, right?\"\n\n\"So?\"\n\n\"It probably caused the interferences we had with the TV. That keylogger is the reason why we called the cable company in the first place.\"\n\n\"Who then?\" Mike attached the black spying box to his laptop's USB port and fiddled on the keyboard again.\n\n\"I always wondered what Diana traded with Nadine for my father's debt. Jesus.\" Kevin felt bile going up. \"That's Diana's closet, and she knows the WiFi password. I remember when we came back from Suzan Owen's mansion. Suzan gave her a mysterious box and a duffel bag.\"\n\n\"She sold her own flesh and blood?\"\n\n\"Down the river.\" Kevin gave a bitter snort. \"Jesus, she's so fucked up. I knew she hated Helen, but this? I...\" Kevin dialed. \"Hey, Ginger, we found the breach. They used a small spying device on Helen's desktop. That's how they hacked her passwords.\"\n\n\"The FBI got Helen's desktop,\" Ginger's voice sounded strained. She was still pissed, but she was trying to tone it down. Kevin decided he'd sit for a long one-on-one with Mike. \"They let me inspect it. There was no spying device.\"\n\n\"And there was no CCTV footage showing Helen leaving the hotel either. Do you still believe a word the FBI or the police tell you?\"\n\n\"That's good news, Kev.\"\n\n\"More good news over here,\" Mike waved. \"Your master criminals aren't too sharp with their security. The NBI5 sends the data via a direct connection it opens to an Elasticsearch cluster. The user and password are in a configuration file, not encrypted or anything.\"\n\n\"No fucking way.\"\n\n\"Yes, fucking way.\"\n\n\"Can we? Can you...?\"\n\n\"I'm already in.\"\n\n\"What's going on?\" Ginger cried.\n\n\"Mike just hacked into the Syndicate database.\"\n\n\"I didn't hear you say that.\"\n\n\"Let's see what they have on Kevin O'Brien.\" Mike fiddled on his laptop and seconds later his face lit up with a massive grin. \"What the hell is that? I think it's upside down.\" He flipped his laptop. \"Oh, no, it's this side up. Swank, bro.\"\n\n\"What?\"\n\nMike showed him the screen where Kevin starred in his debut BDSM film inside Sin's basement. \"Who's the Asian hottie and more importantly, do you have her number?\" \n\n\"Fuck!\"\n\n\"What's happening?\" Ginger said.\n\n\"Nothing!\" Kevin blurted. \"Try searching for Marianne Anderson. Let's dig dirt on the lying bitch.\"\n\n\"Nothing much, a few documents.\" Mike sniffed. \"There is Brian Dunn Real Estate Services mentioned a lot.\"\n\n\"Probably the next company they're going to rob,\" Ginger said.\n\nKevin surfed his laptop. \"Nope. According to Mr. Google, Brian Dunn filed for bankruptcy three years ago. Something about financial fraud.\"\n\n\"She's so going to be a defense witness!\" Ginger's voice picked up a notch, she had forgotten all about breaking the law. \"I'm gonna ride her ass so hard in court.\"\n\nKevin felt giddy. Hope was suddenly not a wishful thinking. \"What about Helen Brion?\"\n\n\"Just a sec.\" Mike's eyes crinkled at the corners. Kevin and Ginger's enthusiasm ignited his. \"I'll ask Lucene.\" \n\n\"Who's Lucene? One of your floozies?\" Ginger said.\n\n\"She's the Elasticsearch search engine, dummy. When God gave mankind brains, your ancestors must have been the control group.\"\n\n\"If you were half as smart as you think you are, Mike, you'd be twice as smart as you really are.\"\n\n\"You did the math on your own, Hitler? I'm impressed.\"\n\n\"Guys, we've got a bigger fish to fry. When we're done, you two can get a room.\"\n\n\"More like a doghouse for the bea\u2014\" Mike stopped when he saw the pain on Kevin's face. \"Okay then. Over twenty thousand documents on the Helen Brion search. They even have her military records. Narrow it down, Kev.\"\n\n\"Limit the dates to the sixth of November.\"\n\n\"Murder day. Okay. Good call. A single email message, and a link to a bunch of movie files on Amazon cloud. Downloading now. They're heavy.\"\n\nWhile they waited Kevin wrote on a piece of paper that Mike should ignore Ginger's provocations. \n\n\"First big file downloaded.\" Mike gave a thumbs-up. \"CCTV footage. Looks like a hotel lobby.\"\n\nKevin checked the video. \"That's the Comfort Inn's lobby.\"\n\n\"Right, right. The one near the university. Boom.\" Mike paused the footage. \"That's Helen going in.\"\n\nKevin nodded.\n\n\"And that's you, Kev. Who's the hot brunette?\"\n\nKevin shook his head. \"I wasn't there. Those are Brigitte and Dima.\" \n\n\"He sure looks like you from the back. Got your blond spikes.\"\n\n\"Ginger, we just hit the jackpot,\" Kevin said. \"This video could be just the thing we need.\"\n\n\"I hate to rain on your parade, Kev,\" Ginger sounded sincerely sad, \"but stolen footage is inadmissible.\"\n\nMike pantomimed blowing his head with an imaginary gun, and Kevin pantomimed that he should zip it.\n\n\"Maybe I can spin it somehow,\" Ginger said. \"Does it show Helen leaving the hotel?\"\n\n\"Not yet, still downloading. The email mentions the murder, Mike?\"\n\nMike went into his serious mode again. \"Nice. They tapped her phone.\"\n\n\"How can you tell?\"\n\n\"It's a message from S to M. Listen to this. 'Helen just texted William. She's onto everything. She mentioned names, including yours and mine. She knows about Destiny Mall. We might need D to contain Helen.'\" Mike ruffled his dreads. \"I'm guessing D is Diana, M is Marianne, and S is Suzan.\"\n\n\"Helen mentioned a message she sent to William on the sixth.\" Ginger sounded perplexed. \"But I've got both William's and Helen's smartphones from the police. There was no message on either.\"\n\n\"You got the phones from the same investigator who couldn't find any CCTV footage of her leaving the hotel?\" Kevin said.\n\n\"Yep.\"\n\n\"And you still think we can trust the police?\"\n\n\"Not anymore.\"\n\n\"Okay, but if Helen said she sent the message, why didn't you try to get it from the cell phone company? They keep texting history.\"\n\n\"I thought...Helen also said it was you who invited her to the hotel. I couldn't find that text message either.\"\n\n\"So you figured Helen was making shit up.\" Kevin tried to control the anger, but some of it slipped. Even if the phone company saved text messaging history, it surely had a time limit.\n\n\"Kev\u2014\"\n\n\"Be honest, Ginger. When I asked for your help. You thought she was guilty.\"\n\n\"It doesn't matter what I believed.\"\n\n\"It matters to me.\"\n\n\"I...I didn't know then what I know now.\" Her voice broke. \"I just, I just wanted to help, Kev, I felt so guilty about\u2014\"\n\n\"And the Oscar for being a calculating bitch goes to\u2014\" Mike made a drumroll with his fingers. \"Admit it, Jenny, you don't give a rat's ass about Kevin or Helen. Coffee-making lost its charm, and you're looking for a way out. You figured Helen's case would look hot on your CV.\"\n\n\"That's not true! I\u2014\" She choked.\n\n\"And that's what you get when you hire Hitler as your attorney, Kev.\"\n\n\"You're a massive jerk, Mike. I'm so glad I had the brains to kick your sorry ass.\"\n\n\"What was that? I don't speak selfish-bitch.\"\n\n\"Mother fucker!\"\n\n\"Cunt!\"\n\n\"Stooooop!\" Kevin roared at the top of his lungs.\n\nBoth Mike and Ginger went into awkward silence.\n\n\"You two have issues that are apparently more important than my girl going to prison for the rest of her life.\"\n\n\"Hey, bro, I didn't\u2014\"\n\n\"Shut the fuck up, Mike. I'm ending this now. Starting with you.\"\n\n\"Dude.\"\n\n\"Ginger dumped you and quit your band. So, she didn't think you're so hot. So fucking what? I've seen you dump dozens of girls. \n\n\"There's dumping, and there's dumping, Kev.\"\n\n\"Your ego is that fragile?\"\n\n\"She called me a loser. She humiliated me in front of the entire band.\"\n\nKevin switched to kindergarten teacher tone. \"Why did you call Mike a loser, Ginger?\"\n\n\"Cause he's twenty-five, and he sells weed, and he's so proud of his stupid dreads. And he's a player and a condescending prick. My GPA sucks? When is he going to finish his B.Sc.? When he's fifty?\"\n\nKevin gave a deep sigh. \"Yeah, he's childish, so fucking what?\"\n\n\"Bro.\"\n\n\"Mike, you're the older brother I've never had, but come on. You're partying into your Computer Science sixth year. It took me three years and a little to get to the finish line, and you're like ten times smarter. You should work for NASA. You could have been the next Bill Gates.\"\n\n\"I like to party; what the fuck's wrong with that? When the hell am I gonna party? When I'm fucking sixty, bald, and fucking breathing with an oxygen tank? And why am I even justifying myself? I don't fucking need to justify myself to either of you fucking idiots.\"\n\n\"See? Childish.\" Kevin could hear Ginger smirk over the phone.\n\n\"Still, that's no reason to humiliate him.\"\n\n\"He got what he deserved,\" Ginger said.\n\n\"Why?\"\n\nGinger kept her mouth shut.\n\n\"How about little honesty? You're both full of shit. Your turn, Ginger. What was the terrible thing Mike did?\" \n\n\"None of your fucking business, Kev.\"\n\n\"Come on, be a sport.\"\n\n\"Fuck off!\"\n\n\"Once Helen is out of jail, I'll be happy to. I need to understand why, Ginger.\"\n\n\"Because he's a lying cheat, and a futaphobe bigot,\" Ginger screamed. \"And I was just his futa-check.\"\n\nKevin took a few seconds to recover from the surprising outburst. When he spoke again, he dropped the condescending didactic tone. \"His, his what?\"",
        "\"Futa-check. Threesome, check. Skinny dipping, check. Sex on an airplane, check. Sex with a futa, check. That was me. He was my first. The guy I gave my... He was my first, and I was a check box on his list. He's a futaphobe. Once he marked the check box, he started sleeping around behind my back.\"\n\n\"Bullshit! Mike likes the girls, that's true. He's got the charm and the looks. But you know what else is true? He'd rather slice his nuts off before he'd cheat on a friend. As for him being a futaphobe, that's just stupid.\"\n\n\"He is.\"\n\n\"Mike is the kind of guy I can call at two a.m. and tell him I'm stuck in Alaska, and he won't ask any questions. He'd jump on a plane.\"\n\n\"If he's so great, then how come Samantha saw him getting to third base with that French skank from the cafeteria? Huh? Two days after he told me he loved me so he could get inside my pants.\" \n\n\"Samantha Carter?\"\n\n\"Yeah.\"\n\n\"She's the one who also told you he's a futaphobe?\"\n\n\"Yeah.\" Ginger didn't sound so sure.\n\n\"Are you aware that the lying bitch was his girlfriend for two months after you dumped him?\"\n\n\"She what, when?\"\n\n\"Maybe you'd like to call her and ask her why she lied?\"\n\n\"Oh.\"\n\n\"Yeah. Oh.\"\n\n\"See, Kev. I tried to tell her.\"\n\n\"Yeah, I bet you did. Calling her Hitler and what not. Jesus, you're both so stupid. Mike, Ginger is representing Helen even though her boss threatened to fire her ass. I know how much that job means to her. She took Helen's case even though she was certain she'd lose. And she's not stupid, she's a talented lawyer. You should come to see her in court. Ginger, Mike told me not so long ago, and I quote, 'Ginger, I was so into her. I thought I'd found my one and only.' I've never heard Mike talk about any girl like that. And you know what else? It's not about a GPA or IQ, or if you draw a 100K salary or 200K. It's the people you care about. You two idiots, take it from me, because four years ago I lost two people that were everything, and no salary or brains can cure the pain I have to live with. I'm sure as hell not willing to let it to happen for the third time. So please...\" He stared at Mike, daring him to say anything. Mike raised his hands, keeping his mouth zipped.\n\nFrom the phone came Ginger's laborious breathing. \"You really told Kevin I was your one and only, Mike?\"\n\n\" I also told him that it took me no time to figure out we're a bad match.\" \n\n\"Your one and only and a bad match?\"\n\n\"I'm Captain America, you're Hitler. Bad match.\"\n\n\"Oh, for fuck's sake. It's like talking to a brick wall.\" Kevin sighed. \"What about the CCTV files?\"\n\n\"Still downloading. It's gigs of footage.\"\n\n\"What do you mean your one and only?\" Ginger's voice lost its hostility entirely. \"Like with a ring, two kids, and a dog kind of thing?\"\n\n\"Bad match, Hitler. Get it into your thick skull. Bad. Match. Under 'bad match' in the dictionary there's a picture of you and me.\"\n\n\"Kevin, when Mike said his one and only, what did he look like?\"\n\n\"Sincere.\"\n\n\"Kev!\" Mike snarled.\n\n\"What, bro?\"\n\n\"You're not my friend anymore.\"\n\n\"Resignation denied. What about the files?\"\n\n\"They're\u2014Oh, fuck. I've been logged out.\"\n\n\"Log back in.\"\n\nMike shook his head. \"They're onto us. One of their users who always uploaded files started downloading stuff. I've set the alarm bells; they're not that clueless, apparently.\"\n\n\"Do they know who we are?\"\n\n\"I connected through a proxy, but they know where this user was installed. They might send someone to check.\"\n\n\"Fuck! I know who they'll send. Believe me, we don't want to be here when she arrives.\"\n\n\"I didn't get the footage.\"\n\n\"I have an idea.\"\n\n\"Why would you say something like that to Kevin?\" Ginger was unfazed by the imminent danger. \"You never told me you thought I was your one and only, Mike.\"\n\n\"I fucking hate you both.\"\n\n\u2013\n\n\"I was sitting at my desk, drinking coffee.\" Mr. Durham was a massively overweight man, one Hershey bar from obese. Black, bald, in his fifties. On the witness stand, he seemed like a shy child who wanted nothing more than to escape the situation back into his Fortnite game. \"Then I received the call from Ms. Anderson.\"\n\n\"What time was that?\" Ginger said.\n\n\"Around eight-thirty.\"\n\n\"What did she say?\"\n\n\"That she was hiding in her office and she saw Helen Brion stab William with a knife. That I should hurry. She sounded terrified.\"\n\n\"What happened then?\"\n\n\"Exactly what I said in my police testimony. I took the elevator up. It was faster than the stairs.\" He blushed. \"I saw Helen attacking William with a knife. I pointed my gun at her and told her to back off. She screamed back at me that she was trying to save him. A few seconds later, the paramedics came because Ms. Anderson alerted the emergency services. The police came a few minutes later.\"\n\n\"Wait, wait, let's go back a little. You saw Helen attacking William with a knife? What did she do? Did she stab him repeatedly?\"\n\n\"No.\"\n\n\"Then why did you say that she attacked him? Where were her hands?\"\n\nMr. Durham chewed his own tongue when he was nervous. Ginger found it very annoying, so she tried focusing on the hairs coming out of his ear. \"Uh... She held the hilt with one hand, and the other was, eh, on the blade.\"\n\n\"You can't stab someone with your hand on the blade. You'd cut your fingers.\"\n\n\"That's what she did.\"\n\n\"Where exactly did she touch the blade? Near the hilt?\"\n\n\"No, farther down.\"\n\n\"Where it entered the body\u2014she applied pressure where the knife entered the body.\"\n\n\"Yes.\"\n\nGinger nodded, smiling. \"Because that's how you treat a knife wound. On the field, you never take the knife out. She stabilized it with one hand and put pressure on the wound with the other, around the blade. That's how you stop someone from bleeding.\"\n\n\"Maybe she pretended to stop the bleeding because I pointed the gun at her?\"\n\n\"We don't deal in speculations regarding other people's thoughts in court. Just what you saw and your thoughts, Mr. Durham,\" Ginger said tenderly. \"You said in your testimony that the victim's shirt was torn. Did you mean it was ripped, or torn due to the stabbing?\"\n\n\"Ripped, like someone ripped it off.\"\n\n\"You mean, Helen ripped it?\"\n\n\"Probably.\"\n\n\"And didn't you find it odd that after stabbing someone Helen took the time to rip off his shirt? I mean, why bother doing that unless she wanted to search for more wounds? Because that's exactly what you should do at a knife wound scene.\"\n\n\"Ma'am, in the heat of the moment, I had little time to think. I acted on instinct.\"\n\n\"You mean you acted on Ms. Anderson's phone call.\"\n\nThe tongue chewing increased tenfold. \"I guess.\"\n\n\"Fair enough; no one judges you. You did the right thing.\" Ginger gave him her most reassuring smile. \"Helen's phone was on the ground, and she was talking with someone when you entered the office, correct?\"\n\n\"The emergency services.\"\n\n\"That couldn't have been a pretense. The defendant called them before you arrived on the scene.\"\n\n\"Yes.\"\n\n\"Now let's pretend that you came on the scene by mistake, without receiving Ms. Anderson's phone call first. Is it safe to assume you'd think Helen was trying to save William's life?\" \n\n\"Probably yes.\"\n\n\"No further questions your honor.\"\n\n\u2013-\n\n\"I didn't pressure him on purpose, even when he said he saw Helen attacking William.\" Ginger's hands shook as she rinsed her face in the cooler water for the third time. At court, she looked as fresh as the next beautiful weather girl, but every time she came out of the session, she breathed like she had just completed a marathon. \"I wanted Durham on my side. I didn't want to alienate him.\"\n\n\"You were brilliant back there,\" Kevin had his eyes on the stairs, which Helen was supposed to come up. The jail had made a blunder this morning, and she was late to court. It took several angry phone calls from Ginger to fix. \"I'm so glad I had the balls to call you.\"\n\n\"Really?\"\n\n\"You nailed it, Ginger. You gave the jury something to think about.\"\n\n\"Thanks. It means a lot.\"\n\nHe once thought like Mike, that Ginger was a calculating, confident, selfish bitch. The past year had taught him that nobody wears shades of either black or white. He eyed her carefully and saw a beautiful girl, fighting her own demons and insecurities.\n\n\"What's in the duffel bag, Kev?\"\n\n\"I've cooked stuff that Helen loves. She looked so thin last time, like they don't feed her. I thought you might slip it to her. Maybe. Please? I'll bribe whomever it takes.\"\n\n\"They'll never let me.\"\n\n\"It was worth a shot.\"\n\nGinger swiped more water. \"Fuck, I'm sweating like a hog.\"\n\n\"Nah, you look great. I like what you've done with your hair.\"\n\nShe gave a faint smile. \"I dyed back to my original ginger color. I'm done being a fake blond. That's the real me. Carrot-top Jenny from da Bronx.\"\n\n\"I'm sorry that things got so ugly between you two, but you shouldn't let Mike get under your skin.\"\n\n\"Mike is okay. I've hurt him more than I realized, and for something he didn't even do. We talked and... Fuck, okay, Mike is awesome.\" \n\nMike chose that moment to show his smiling mug. He strutted into the court's hallway swiveling his hips like a cat-walk model. \"Mike is ready to lock and load and testify the ass out of the jury. Whaddaya think about the costume, Kev?\"\n\nKevin stared at him, eyes wide and mouth open. Speechless.\n\nMike wore a suit. Jacket, grey trousers, white shirt, waistcoat, pocket square, and a soft blue tie. Nothing to write home about except that it was Mike. You wouldn't catch Mike in a suit even if you'd promised a threesome with Scarlett Johansen and Emma Stone. He wore fake glasses and had shaved for once. The most astounding alteration lay on top. His trademark, Mike's long dreads, were gone. Sheared. He wore a clean butch cut instead.\n\n\"Whaddya think?\"\n\n\"I like the straight un-wasted vibe. Brings out the dork in your eyes. Just one question.\"\n\n\"Shoot!\"\n\n\"Who the fuck are you?\"\n\n\"Funny. I'm doing it for Helen, so you like owe me favors for the rest of your life.\" Mike loosened his tie. \"Shoot, I feel like an idiot.\"\n\n\"But you look tight.\" Ginger danced forward and straightened his tie, then gave him a peck on his cheek. \"Wow, Mike, I'm speechless.\" \n\n\"Mike, may he rest in peace, was a cool cat.\" Mike made the sign of the cross. \"He used to play in a band that was all about social justice. This scarecrow is Michael. The douche who sold his soul to conservatism. Might as well join the Tea Party and start hash-tagging, was fun for me too.\" \n\n\"No one gives a crap about your soul.\" Ginger pulled Mike's tie and, in front of Kevin's astounded eyes, conquered his lips with a French kiss. Mike didn't resist. In fact, he locked his hands around her slender neck and pulled her for another long kiss when she was done.\n\n\"What the fuck?\" Kevin finally found his voice.\n\n\"What?\"\n\n\"What do you mean, what? I fell through a hole in reality, and I'm in a parallel universe. I just saw you guys kiss. You're...? You're back together!\"\n\n\"It makes it easier to fight.\"\n\n\"When did that happen? Wait, wait, time out, Mike. Every night this week you that didn't return to the dorms. You told me you were sleeping at some friend's place.\"\n\nGinger smiled like a cat caught with its paw dipped inside the fishbowl. \"He lied. He barely slept. Very little sleeping was involved.\"\n\n\"Gross.\"\n\nGinger sucked on her finger and cleaned the lipstick she'd left on Mike's face.\n\n\"What about your, 'We're a bad match' speech?\"\n\n\"Meh.\" Mike waved his hand in dismissal. \"Matching is overrated.\"\n\n\u2013-\n\n\"I've just received an email from you, Your Honor,\" Mike beamed.\n\nJudge Henley squinted his eyes. \"Really?\"\n\n\"Yep, I'll read it. People reflecting about our law system might think of TV shows like Suits, or Law & Order or Boston Legal. But actually, it's more like Lost.\"\n\nPeople sniggered, and even the judge cracked a smile. \"Very clever of me, and surprising, considering my Sent Items box is empty.\"\n\n\"Nonetheless.\" Mike showed him his laptop. \"Your Honor, I can make you send any email I want to, to any recipient I feel like. For example, I can make you send an email telling me to launch Destiny Mall, and you'll never be the wiser.\" \n\nMichael D'Angelo, the conservative security expert with an array of bombastic acronyms attached to his title (he took a test for Amazon AWS and several other lesser known companies a week before his testimony), and owner of M&GB Cyber Security (Ginger and Mike registered the company a few days earlier, M&GB stood for Mike & Ginger, Bullshit), gave brilliant testimony in court. He took the jury by the hand, explaining in simple terms how the NBI5 key-logger worked.\n\nHe brought his laptop to court. Using his natural style, charm, and wit, he demonstrated, with the device found in Helen's apartment, how to hack into the court's system. As a final stroke, he sent a fake email to himself from Judge Henley's account. The jury's male part was impressed. The female part wanted to adopt him; the younger ones wanted to have his kids.\n\nAll that was left was Larry's cross-examination.\n\n\"It's a bit confusing.\" Larry began pacing but then remembered that Judge Henley hated melodrama. \"My esteemed colleague received a search warrant for the defendant's apartment a few hours ago, and already you've managed to search it, find this, this...\"\n\n\"NBI5 key-logger.\" Mike had his half innocent, half rascal smile on. Girls loved it; boys, not so much.\n\n\"And so quickly concluded that it was used to hack the defendant's home PC.\"\n\n\"Was there a question?\" Mike said.\n\n\"I'm just a bit confused, Mr. D'Angelo.\"\n\n\"Does it happen a lot?\" Mike appeared genuinely interested. \"You, feeling confused?\"\n\nLarry didn't like cocky kids with an attitude. \"I've read the FBI reports. There is nothing about a dongle spying device thing on the defendant's computer.\"\n\n\"The NBI5 key-logger has two modules. The box I found in Helen's apartment, and a dongle, similar to the one I've attached to the court's PC. This particular key-logger is useless without its counterpart.\"\n\n\"But the FBI didn't find one on the defendant's home computer.\"\n\nMike turned his head in Helen's direction and winked, earning a grin.\n\n\"Please tell me why you're so certain Helen's PC had a spying module when the FBI found nothing.\"\n\nMike gave the prosecutor a blank stare. \"That's for the FBI to explain. It was there at some point. People buy expensive wiretapping equipment for one reason.\"\n\n\"There were other computers in that house.\"\n\n\"Kevin's laptop?\"\n\nLarry nodded. \"A possibility.\"\n\n\"You mean someone bought the NBI5 to spy on a computer science student?\"\n\n\"It's still a possibility.\"\n\nMike snorted. \"Maybe they needed help with calculus?\"\n\n\"It's\u2014\"\n\n\"Or maybe they wanted to know where you can pick up the hottest girls on campus? It's on the law school faculty's lawn, hands down, in case you were wondering.\" Mike beamed in Ginger's direction. She sent him a discreet air kiss when no one was watching.\n\n\"I wouldn't know,\" Larry said. \"Unlike you, when I was in law school I did this strange thing called studying.\"\n\n\"And I'd say I believe you excelled at it, only I'm under oath, so I can't.\"\n\nLarry reached a boiling point, which was good, because Mike's testimony had several holes. \"No further questions, Your Honor.\"\n\n\u2013-\n\n\"Ms. Anderson,\" Court Ginger reminded Kevin of a hawk. Focused and aimed. Dangerous. \"How long have you been a real estate analyst?\"\n\n\"Almost twenty years now.\"\n\n\"She was the senior analyst, but she's also fifteen years younger than you. Was it difficult working under her?\"\n\n\"Quite the contrary.\" Marianne's smile oozed confidence. If the Ginger hawk intimidated her, none of it surfaced. \"It makes me proud when one of us girls make it in this world, despite the prejudice that sadly still exists everywhere.\"\n\n\"Ms. Anderson, where were you employed before Richardson and Williams?\"\n\n\"Brian Dunn Real Estate Services.\"\n\n\"You weren't promoted to a senior analyst at Brian Dunn, right?\"\n\n\"No.\"\n\n\"Was it because of 'the prejudice that sadly still exists everywhere'?\" If Marianne hoped pressing Ginger's futanari sisterhood buttons might earn her points, then that strategy failed utterly.\n\n\"Brian Dunn filed for bankruptcy. I'd only been there for a year.\"\n\n\"I know. There was some sort of embezzlement claims. Someone from the inside stole the company's money and used the company to launder drug money. Sound familiar?\"\n\n\"There was an investigation, but no charges were pressed.\" Marianne suddenly looked like she wished she could be elsewhere.\n\n\"Ms. Anderson, where were you employed prior to Brian Dunn?\"\n\n\"Various real estate firms.\"\n\n\"I'll refresh your memory.\" Ginger zeroed in on the juicy rabbit and was waiting for the right moment. \"Colony Capital. You worked there for two years until the company died; bankruptcy again. A fraud investigation\u2014\"\n\n\"Objection, Your Honor, irrelevant.\" Larry looked like he was ready to burst into tears.\n\n\"Really?\" Judge Henley raised his eyebrows. \"You can't see how it's relevant?\"\n\n\"Thank you, your honor,\" Ginger dimpled. \"Colony Capital had its capital stolen.\"\n\n\"I had nothing to do with it!\" Marianne's voice cracked.\n\n\"But the police interrogated you. Why?\"\n\nMike poked Kevin's ribcage. \"Isn't she the hottest?\" he whispered. \"I can watch her bully people all day.\"\n\n\"You mean, Hitler?\"\n\n\"First time I heard her sing, I knew she was the one. She sounds like Adele.\"\n\n\"Last week you wanted to tar and feather her.\"\n\n\"That's so last week, Kev, get over it.\"\n\n\"You said she eats souls for breakfast.\n\n\"I'm a complex person, I'm an onion like Shrek. I have multiple layers.\"\n\n\"And they're all the same.\"\n\n\"Pretty much.\"\n\n\"Before Colony Capital, you worked for Jonathan Woodner Holdings.\" Ginger was in full swing. \"Another job terminated by your employer's bankruptcy. Before Woodner Holdings, you worked as an analyst for Kraft Real Estate Group. It didn't file for bankruptcy, but there was a fraud investigation. The owner claimed Mafiosi blackmailed his personnel and robbed the company.\" Ginger let the information torrent sink. \"Do you believe you're jinxed, Ms. Anderson? Or can you offer another explanation why every company you've worked for during the past six years was investigated for blackmail and theft through dummy corporations?\"\n\n\"Objection, argumentative.\"\n\n\"I withdraw the question.\" Ginger held out printouts which she gave the jury and Marianne. \"Presenting exhibit 76C, a text message I obtained from the victim's mobile service provider. The text was sent from the defendant's phone on November the sixth. I'll read it now.\" Ginger paused, waiting for a second for the whispering to die down. 'William, our company is under attack. It may sound imaginary, but criminal elements have planted employees in our firm. They plan to steal and have already stolen funds using dummy corporations. Destiny Mall is a land fraud, it's a fake project. We must prevent its launch at the meeting today.' The defendant continues and lists the people she suspects are part of the conspiracy. Among them, the missing board member, Suzan Owens, and the current CFO, also missing, Alan Mason. Now, Ms. Anderson, can you explain why your name is on that list?\"\n\n\"Who knows what goes inside a criminal mind?\" Marianne smirked. \"Helen needed to shift the blame, so she tried to blindside William.\"\n\n\"And failed. William was on to her plans, so Helen murdered him?\"\n\n\"Obviously.\"\n\n\"That night, according to your testimony, you saw him yell at her in his office.\"\n\n\"I stand by that testimony.\"\n\nGinger lowered her voice and smiled sweetly. \"Because he didn't buy into her wild accusations?\"\n\n\"Obviously.\"\n\n\"Well, on the victim's desk, on the night of the murder, the police found five letters of dismissal. Please observe exhibits 54a to 54e. Dismissal letters, effective immediately, for every person mentioned in the defendant's text message, including Ms. Marianne Anderson. There's one name missing from the stack. Can you guess which one, Ms. Anderson?\"",
        "Marianne glared at her.\n\n\"It's Helen Brion's. Please explain, if William, as you said, didn't buy into Helen's claims and figured she was the person stealing his money, how come he fired everyone except her?\"\n\n\u2013-\n\n\"Mr. O'Brien,\" Ginger said.\n\nKevin stared across the courtroom at Helen.\n\nBut as for the cowardly, the faithless, the detestable, as for murderers, the sexually immoral, sorcerers, idolaters, and all liars, their portion will be in the lake that burns with fire and sulfur, which is the second death.\n\nHis biological father, Pastor Roy, loved to quote Revelation. It placed murderers and liars in the same afterlife boat, and Kevin was about to tell the lie of a lifetime. \n\n\"Mr. O'Brien.\" Ginger snapped her fingers. She strongly objected to his plan, saying he could end in jail for his stunt. It took two days to convince her he was doing it with or without her consent.\n\nEveryone lied, and their lies painted Helen as something she wasn't. Why couldn't he lie too?\n\nThe mythical northern Valkyries chose those among the slain who were Valhalla material. Kevin's Valkyrie was life, not death. He gazed across the courtroom, and their eyes met. Helen's lower lip trembled, but when he caught her eye, a sudden smile curved up her cherry lips. He would go to the gates of hell for this woman, so jail was no biggie.\n\n\"Mr. O'Brien, I hold in my hands a CCTV image taken from the Comfort Inn's lobby on the sixth. Do you recognize this person?\" The footage they downloaded from the Syndicate's database showed Dima and Brigitte from the back. Dima had Kevin's height and slim physique, and the Russian Lace Boy shared his blond spikes. The lie was plausible if one could only observe Dima from the back.\n\n\"That's me.\"\n\n\"Are you sure?\"\n\n\"It's me in that picture. I came to see Helen. Like she said, I scheduled the meeting.\"\n\n\"But Helen said you never showed up.\"\n\n\"I come from a very religious family, ma'am. I grew up inside a deeply conservative region. I was taught that being intimate with a futanari is a grave sin. We simply don't do things like that, and straying makes you a pariah. A gay couple in my hometown was shot by religious fanatics. Everyone heard about the Army of God trial three years ago. That's where I'm from.\" Kevin took a deep breath. \"Helen lied. She wanted to protect me, even at her own expense.\"\n\n\"I see. So, you and the defendant spent your day together in the hotel room?\" \n\n\"Yes.\"\n\n\"What time did Helen leave?\"\n\n\"Eight, just like she said.\"\n\n\"But Ms. Anderson says she met Helen at the office at eight.\"\n\n\"Marianne is lying. It's a half an hour drive from the Comfort Inn to the office.\"\n\n\u2013-\n\n\"Are you seriously trying to convince me that you and the defendant were lovers?\"\n\n\"I'm not trying to convince you of anything. I'm telling the truth.\"\n\nLarry regarded Helen, then tried to outstare Kevin. As the day progressed and Ginger chipped away at the prosecution's arguments, the public prosecutor seemed to slowly deflate, like a balloon with an air-leak. Kevin's lie poured color back into his cheeks.\n\n\"So you're saying that you and the woman who extorted you became a couple? That you suffered some sort of Stockholm Syndrome?\"\n\n\"She never extorted me\u2014\"\n\n\"We've already been there. She forced you into a relationship with her sister, but now you're saying that it wasn't enough? She wanted you for herself?\"\n\n\"Will you let me explain, please? Because it feels like you're trying to put words in my mouth instead of asking me questions.\"\n\n\"Go right ahead.\"\n\nGinger told Kevin that Larry's father was a retired attorney with an almost legendary reputation. Public prosecutor, despite the Hollywoodish halo, was the least-paying job a law-school graduate could land. Perhaps, just like Kevin, Larry was struggling to find his own path under his father's shadow. Perhaps everyone did.\n\n\"Helen never forced me to do anything. She had no idea I couldn't afford to pay my debt, and I was too embarrassed to share my family issues with a stranger. She told me she never even considered I'd take the deal. Helen only offered it to patch things up with her sister. Once I took the deal, she regretted offering it. It was a rough start between us, I won't deny it. But time went by. We lived together in the same apartment. And, and...and it happened.\"\n\nLarry turned to the jury, opening his hands. \"Just happened?\"\n\n\"Helen is warm, shy, generous, and she has a gentle soul, and I couldn't help falling for her.\"\n\n\"Did the defendant or someone in her name force you to say those words?\"\n\n\"What? No!\"\n\n\"Mr. O'Brien, the defendant is behind bars.\" Larry tried a different approach, changing his tone to what he believed was parentally supportive. \"I know she can be manipulative, but she cannot harm you, not anymore. Did the defendant force you to meet her in the hotel so she'd have an alibi? And let me remind you, son, you're under oath.\"\n\nSon? Kevin had more than enough fathers. He gazed beyond Larry, and his eyes found the love of his life again. \"You're seriously asking me this?\"\n\n\"Your Honor, please instruct the witness to answer the question.\"\n\n\"You think I've invented my love for her?\"\n\n\"Did you?\"\n\n\"You're saying she's behind bars, and she can't touch me, and all I can think of is that she's behind bars, and I can't touch her. That I'm about to lose her forever. You're aiming your guns at her, but you only need a single bullet to kill us both. Because if you convict Helen for something she didn't do, then you can close this whole show for all I care. Everything. This place, the city, the stars, the moon, the sun, and the ocean. You can fold the ocean with all the fish and the dolphins and throw it behind bars with everything else that I love. Because if I can't share them with her, then I really can't see the point.\"\n\nHe risked another peek at Helen. The love of his life stared back at him with wonder.\n\n\"I hope that answers your question.\" \n\n\u2013\n\nKevin found Ginger sitting on the stairs outside the courthouse trying to light a cigarette. Her hands were shaking so hard, she failed every time.\n\n\"Everything cool?\"\n\n\"Yeah, yeah,\" she blushed and dropped the cigarette. \"I shouldn't be smoking, anyway. I took ages to quit, and the smoke kills my voice.\"\n\n\"Something happened?\"\n\n\"No, no, yes. Something good. Good news. Excellent news, actually. Jason Abramson, Larry's assistant, came to see me a minute ago. Larry wants to cut a deal.\"\n\n\"Meaning?\"\n\n\"It means he thinks he'll lose. He wants to reach a plea bargain. Voluntary manslaughter instead of first-degree murder. Three to eleven years, and Larry is bendable, and Helen is a war hero.\"\n\n\"In human language?\"\n\n\"Four years and then Helen will be eligible for parole.\"\n\n\"And you told him to go fuck himself?\"\n\nGinger shook her head slowly.\n\n\"But we're winning. It's Marianne's word against Helen's word now, and no one believes a word coming out of Marianne's mouth.\"\n\n\"The jury probably thinks Marianne is part of the conspiracy, but we still haven't proved that Helen didn't murder William. Her fingerprints are on the murder weapon, just hers and William's. No one else's. And frankly, each time the jury look at Helen, they see this emotionless statue. The less time she is on the stand, the better.\"\n\n\"That's just her defense mechanism. She's sensitive, and she's scared, but if you take the time and give her a chance\u2014\"\n\n\"They are her jury, not her support group.\" Ginger tore the cigarette and tossed it into a can. \"Kev, your testimony might have tipped Larry's decision, but it's full of holes. Give him time, and even an idiot like him might find them. It could backfire bigtime. Convincing the jury is not an exercise in computer science. There are no guarantees.\"\n\n\"What are you saying?\"\n\n\"That as her lawyer, it's my duty to advise her to take the deal. She'll be out in four years.\"\n\n\"A convicted murderer for a crime she didn't commit.\" Kevin's elation turned to numbness.\n\n\"I'm so sorry, Kev, but this is our best bet.\"\n\n\"Four years, you say?\"\n\n\"I'll pressure them for a white-collar prison. Nothing hardcore like Alexander.\"\n\n\"If that's a wise choice, I'll...I guess I'll have to wait for her.\"\n\n\"You're okay?\"\n\n\"Four hours ago, she had a ticket for a life in prison, so four years is really no biggie.\" He wiped a tear that escaped his attempt at stoicism.\n\nGinger surprised him when she stood up, wrapped an arm around his shoulders and pulled him close, gently rubbing his arm. He sank into the warmth of her side, appreciating the simple gesture. \"I'm so sorry, Kev.\"\n\n\"We did everything we could.\"\n\n\"No, I've never asked your forgiveness for that night. The stupid sorority party. You were Mike's friend, and I was so angry with Mike, and I wanted so bad to get into Alpha Pi. I thought it guaranteed a good salary in the real world. And I thought you wouldn't mind because...I've made so many stupid excuses for treating you like crap. But there was no excuse; I used you. It was selfish and so ugly.\"\n\n\"Water under the bridge.\" Kevin's voice was soothing. \"I forgave you long ago.\"\n\n\"And you were right. It's not about a 100K or a 200K salary, it's the people you care about. I...I told you how my dad was a janitor in Brooklyn?\"\n\n\"Yeah.\"\n\n\"My mom worked as a cashier her whole life. Money was always an issue. Constant fighting. How come she spent so much, and how he never earned enough. My mom hated my dad's incompetence, his lack of ambition. But she was always too scared to leave because she still relied on the little he could provide. It tore us apart as a family, and I was always so terrified I'd end up like them. Poor and miserable because of it. But it's no excuse for being a selfish bitch. I'm so sorry, Kev.\"\n\nKevin nodded. \"Yeah, me too. I was always terrified I'd end up like my parents too.\"\n\n\u2013-\n\nFour years. Minus the time Helen already served. The clock started ticking.\n\nKevin imagined a giant clock on a prison wall. For some reason, time stood still in that clock, and he banished the image. He would visit her. Every day if possible.\n\nHe was so immersed in his dark thoughts that he didn't notice the giant black woman who stepped up to the urinal next to his until she pulled out a dong the size of a baseball bat.\n\nMadam Hulk let out a sigh as she fired a golden stream. \"Fuck, I never understood urinals with ice cubes.\"\n\n\"You mean you like drinking your piss warm, Cecilia?\"\n\n\"Smart.\"\n\n\"I saw maybe fifty cops outside; all I need to do is scream,\" Kevin said.\n\n\"All I need to do is twist your scrawny neck.\"\n\n\"Nadine might be pissed.\"\n\n\"Someone wants to see you.\" She placed her massive palm on his back. \"Be a good boy, and there will be no neck-twisting and no Nadine pissing.\"\n\nHe stepped outside, Madam Hulk keeping a firm hand on his shoulder. He scanned the shadows, searching for an opportunity to bolt. She led him down a corridor into an unoccupied courtroom. \"Go! She's waiting inside.\"\n\n\"Nadine?\"\n\n\"Just go.\"\n\nTwo goons waited for him by the door. A Native American and a sumo wrestling type. Both towered over him; both had muscles to spare and a nasty gloat that dared him to try anything\u2014they'd love it. Nothing he wasn't used to after living in Nadine's mansion. The sumo guy frisked him. Kevin didn't mind. His eyes fixated on the woman waiting in the middle of the room.\n\nShe was the first girl to ever say she loved him, and he never said those words back to her.\n\n\"Hi, Diana.\"\n\n\"Hey, Baby Butt.\"\n\n\"You look...loaded, yep, that's the word. You look rich.\"\n\nHis ex-girlfriend wore her fancy dress like a second skin and enough jewelry to buy a small country.\n\n\"I'm doing okay.\"\n\nKevin snickered.\n\n\"You like?\"\n\n\"It doesn't change who you are.\"\n\n\"I'm rich. That's what I am. That dress is a Saint Laurent, it costs 16K. The handbag is a genuine Stalvey, it cost me 20K. The shoes are Prada, they cost only 3500.\"\n\n\"They can't cover your personality.\"\n\n\"No, they just make me look really good on the outside, which is really what counts.\"\n\n\"How come you and Helen even carry the same genes?\"\n\nDiana shrugged.\n\n\"So how is life at the top? This is what you always dreamed of, no? Being filthy rich. No one to look down on you. No simple guard on duty to belittle your Maserati.\"\n\n\"It's nice.\"\n\n\"So, you're what now? The syndicate's money launderer?\"\n\n\"I'm richer than Helen ever was or dreamt of being.\"\n\n\"Helen is about to go to prison because of you. She has nothing.\"\n\n\"Tell her I'm sorry.\"\n\nKevin growled and raised his fist. The Indian-looking goon reached under his coat, but Diana signaled for him to relax.\n\n\"I'm sorry that it ended that way,\" she said.\n\n\"I guess it makes everything fine and dandy, then.\"\n\n\"I guess it doesn't.\"\n\n\"How could you?\" Kevin had to convince himself that blowing up wouldn't help. \"Helen always loved you. She never asked for anything. She gave you everything you asked her to.\"\n\n\"Except respect,\" Diana hissed.\n\n\"That's your excuse for selling her? And for what? Money.\"\n\n\"You know why I did it.\"\n\n\"To make sure I'd stay.\"\n\n\"We do crazy things when we're in love. You of all people should know.\"\n\n\"In love?\" Kevin snorted. \"You're sick. I forgot how much fun it is to argue with you. Like banging my head against a brick wall.\"\n\n\"I remember a time when you loved banging your head against this wall.\"\n\n\"Are we done, Diana, because I've got places to be?\"\n\n\"I'm a wanted criminal.\" Diana pulled an envelope out of her Stalvey handbag. \"There's a warrant for my arrest.\"\n\n\"Yeah, I know.\"\n\n\"I'm going down south, across the border. I thought I'd ask if you want to come with.\"\n\n\"Sure.\"\n\n\"Was worth a shot.\" Diana grabbed his neck before he could resist and pulled him over for a tender kiss. When it ended, she nuzzled his neck. \"Almost forgot how good you smell. Had to do one for old time's sake. We were amazing together.\"\n\n\"We were terrible together.\" He gently unwrapped her hands from his neck.\n\n\"I guess you and Helen make more sense.\"\n\n\"I love her.\"\n\n\"You know, I could see it coming from miles. If you feel you need revenge, just think how fun it was for me to watch you two stumble into each other's arms. Like watching an inevitable train wreck that's about to run you over. She'll need this.\" Diana gave him the envelope.\n\n\"What's that?\"\n\n\"I found it in one of Suzan Owens' safes. The old hag didn't do sex or drugs; her kink was watching. She kept so many videos... even some that she should have burned.\"\n\n\u2013\n\n\"Come in.\"\n\nJudge Henley's office was an ode to law and disorder. Law books stacked the shelves, overflowing. Row after row of neatly lined-up books covered the rugs and snaked around the room like walls made of paper and leather. Ginger navigated through and skipped above them. The elderly judge slouched, disrobed, in a comfy chair in the middle of his messy kingdom, his legs up in the air, resting on a small table. Larry sat rigid in the opposite chair and looked even more miserable than usual.\n\n\"Sit down, have a drink.\" The judge opened a small drawer. \"Scotch? Larry told me you're willing to settle, and I believe it's a wise choice. I must tell you I was impressed\u2014\" He stopped in mid-sentence when he registered the look on Ginger's face.\n\n\"Before we cut any deal, Your Honor, you two must see this.\" She held out a USB flash drive. \"I've just received it from...well, you can call it an anonymous tip. Mike, I mean Michael, says it can be easily verified as legit because cameras have fingerprints.\"\n\n\"What is it?\" the judge said.\n\nGinger inserted the flash drive into his desktop computer. \"The Richardson and Williams offices' stolen CCTV video from the night of the murder.\"\n\nThe movie popped on-screen and Ginger immediately forwarded to eight o'clock. It showed several hallway cameras, including footage just outside William's office.\n\n\"Who is that?\"\n\n\"Suzan Owens, the missing board member,\" Ginger blurted. \"Watch this.\"\n\nThe video showed Suzan entering the office and starting what looked like, even devoid of sound, a heated conversation. It showed William violently getting up and grabbing her collar and the stab that followed.\n\nGinger paused the video and enlarged the image. \"See that? He's holding the knife, and she holds his palm. That's why there were no fingerprints other than his and Helen's on the handle. I think, I think she didn't mean for it to happen.\"\n\nThe judge nodded.\n\n\"Watch this, now it gets even more interesting.\"\n\nSuzan went out of the office, then returned.\n\n\"She's scared.\"\n\nThe tall futanari on the screen pulled out her smartphone.\n\n\"Who is she calling? If this was a mistake, how come she's not helping him?\"\n\nGinger fast forwarded fifteen minutes.\n\n\"Oh,\" said both Larry and the judge simultaneously as Marianne Anderson entered from the elevator. The women met in the hallway, then checked on William's office.\n\n\"And all this time he was bleeding in there. Manslaughter or possibly self-defense turned into murder.\" Judge Henley frowned. \"Where are they running to?\"\n\n\"To hide in Marianne Anderson's office. Watch this\u2014they pulled the room's blinds and turned the lights off. They heard the elevator coming up.\"\n\nThe footage showed Helen entering the office. She was talking on the phone and looked over the darkened room, where the two women were hiding. Helen paused in the hallway, visibly agitated by the conversation.\n\n\"I knew Helen didn't murder William,\" Ginger said,\" but I wondered how it was pulled off. It wasn't. Just Helen's rotten luck. She was at the wrong place at the wrong time. Quick thinking by these two. I believe it was Marianne who decided they could pin it on her. At least we know she called the emergency services and Mr. Durham.\" \n\nOn the screen, Helen opened William's office and immediately dropped to her knees trying to save him. Outside in the hallway, Suzan Owens slipped out of the office.\n\n\"That's it. You know the rest.\" Ginger paused the movie. \"You can take this film to an expert, in case you think it's a fake, Larry. But we both know it's legit.\"\n\n\"Wow.\" Judge Henley wiped sweat from his brow. \"In my entire career, I've seen nothing... wow. First things first.\" He pressed his intercom.\n\n\"Security.\"\n\n\"Hey, Dwight, this is Russell Henley. Is Marianne Anderson still sitting in my courtroom?\"\n\n\"I'll check.\"\n\n\"If you find her, correction, when, when you find her, please arrest her immediately. I'll have the warrant signed in a jiffy.\"\n\n\"What about Helen?\" Ginger said.\n\n\"Do you even need to ask?\"\n\n\"Oh my God, Larry.\" Ginger slapped Larry's shoulder. \"You dropped something.\"\n\n\"What?\"\n\n\"The charges.\"\n\n\u2013-\n\n\"I'll never be able to pay you back, Ginger. But at least I'll compensate you for your time once I get my bank account back.\"\n\nKaplan and Decker's founders' portraits stared down from the office walls. Ginger's firm was 190 years old, and she was willing to bet that those harsh men looking down at her once owned real slaves. She sure was glad that everyone had already gone home. Her boss would freak out if he knew she refused hard cash.\n\n\"I did it for Kevin. Anyway, if I take your money, Mike will never let me hear the end of it.\"\n\n\"I'll be more than happy to have you represent me in the fraud trial.\"\n\nGinger shook her head. \"The FBI won't be pressing charges. I talked with the clown in charge of the investigation; we've been talking a lot this past month. He doesn't like me that much, but he hinted that it took Marianne fifteen minutes to sign a deal. She already cleared you of any suspicions, and she named five FBI agents who'd sold out to the syndicate. A guy named Brian Thompson is behind the dongle disappearing from your computer. The name rings a bell?\"\n\n\"Not really.\"\n\n\"He was working for your sister.\"\n\nHelen was too emotionally exhausted to deal with the implications.",
        "So this was freedom? Elation hit her earlier when Kevin confessed his love for her. Now she didn't feel elation, she just wanted to sleep.\n\n\"When do you think I'll get my apartments and money back, Ginger?\"\n\n\"It's the government. They're slow. A month or two, maybe three, but I'll help. Don't look so put down, you've just escaped a life sentence. Put a smile on, Helen\u2014the boys are on their way.\"\n\nHelen rubbed her face. \"I don't want to sound ungrateful. Hell, just knowing I don't have to go back to that awful place makes me want to kiss your feet. But I feel like I'm back to square one. I don't have a job. Shit, I realized I don't even have a place to live.\"\n\n\"I'm renting this new banging pad, starting next week. You can come live with me.\"\n\nHelen turned her head to the door; it felt almost surreal.\n\n\"Of course, if you can't pay rent, then we need to figure another solution,\" Kevin said. \"After all, someone once told me that grownups need to own their shit. You'll have to be my girlfriend for a year.\"\n\n\"I guess I earned that.\" Helen had dreamt of this moment for such a long time, imagined it in so many ways. She had a speech ready. There were scenarios of apologies, his and hers. Then as time went by, she became desperate, she thought she'd just beg him to take her back. Now that the moment was finally here, she was lost.\n\nKevin stood at the door; he opened his mouth and looked just as overwhelmed.\n\nMike never suffered awkwardness a single day in his life. He shoved Kevin aside, rushed into the room singing 'We are the champions' at the top of his lungs and gave Helen a massive hug and a kiss that made Ginger growl and Helen give a belly laugh.\n\n\"A rapist, a murderer, and a futanari nympho are in the same prison shower...what? Too soon for soap-dropping jokes?\"\n\n\"Yes.\" Ginger punched him, then gave him a possessive kiss. Had she been a lioness, she would have marked him with pee. \"Try a little sensitivity, Mike.\"\n\n\"Good thing you're off the hook, Helen. My homie here was turning into a zombie. No sleep, no eat, no fun to hang out with. Total downer. By the way, idiot,\" he turned to Kevin, \"you may kiss the bride.\"\n\nAnd that was all they needed. No speeches, no apologies, just a kiss, a very long one. A second later, Helen's arms were around his body, Kevin's were around her neck, and their lips melded. Her warm body and curves were again in his arms, and the soft, beautiful lips he loved to touch were suddenly real. Kevin tasted his Valkyrie, again and again, just taking a break now and then to wipe the tears from her wet cheek.\n\n\"Ooh, this is so, I dunno.\" Mike pretended to wipe a tear. \"Okay, I said kiss, singular, not plural. Kev, we got half an hour to return the suits to my cousin.\"\n\n\"Can't you keep the suit till tomorrow?\" Ginger let Mike's tie playfully slide through her fingers. \"I feel like doing naughty things to this suit. While you're in it.\"\n\n\"Tempting, but I'm three-quarter Italian, and Familia is everything, bambina.\"\n\n\"Very naughty things.\" She leaned and whispered something in his ear.\n\n\"You're making me an offer I cannot refuse.\"\n\n\"Worst Marlon Brando imitation ever. Okay, boys and girls, this is a respectable office. Kev? Helen?\"\n\nKevin and Helen were locked in their own world.\n\n\"Can't they stay in VIP room tonight?\" Mike said.\n\n\"What? No!\" Ginger raised her voice.\n\n\"Why not?\"\n\n\"Cause it's not a fucking hotel. My boss uses it when she flies in from Seattle. The guys from the northern branch use it when they're in town.\"\n\n\"Come on, all they have is my dorm room, and Thomas came back two days ago with his fucking mutt. How can they enjoy freedom with that asshole and his dog watching them like it's a peep-show?\"\n\n\"They certainly can't do it in here, because\u2014\"\n\nMike kissed her neck and nibbled her ear, making her giggle.\n\n\"Mike, I'll get in serious trouble if\u2014\"\n\n\"Be a sport.\" Mike wiggled his tongue inside his old-new lover's ear. Some girls hated it, some girls loved it. Ginger could pop when he did it. \n\n\"Stop!\"\n\n\"I'll do the Romanian Butterfly Flip.\"\n\n\"What? Seriously?\"\n\n\"I know I said I'd never, but for my homie, that's a sacrifice I'm willing to make.\"\n\nEars flushed, Ginger scanned at the kissing couple. \"No backsies?\"\n\n\"No backsies! The Romanian Butterfly Flip, I'll even do the up-down jiggle.\"\n\n\"The up-down jiggle too?\" Ginger licked her lips. \"Kev, Helen, there's a key to a bedroom in the back and a key to the office. You need to be out by six o'clock, and I'd kill you if I find any stain on the mattress or any odd smell.\" She grabbed Mike's hand, dragging him behind her, and two seconds later they were out of the door.\n\n\"Did you hear something, Kev?\" Helen said.\n\n\"No.\" He kissed her lips softly over and over. He loved her taste. \"Just your stomach rumbling. You're hungry?\"\n\n\"Famished.\"\n\n\"See that green duffel bag? I've made you mushroom bisque, and jambalaya, sausage-based, Creole chicken, and Doberge cake. I think I saw a small kitchen over there.\"\n\nHelen had a short struggle between her cravings for Kevin's cuisines and her hunger for everything else she needed. Then she decided not to choose, and she dragged him by the hand, picking up the bag on her way to the kitchen.\n\nA minute later the wild-mushroom bisque was turning in the microwave and its smell\u2014cabbage, tomatoes, potatoes, onion, and beef\u2014almost brought the tears back again.\n\n\"You're awful quiet,\" he said in a tiny voice.\n\nShe nodded and kissed his eyes. She didn't release his hand as if she feared he would disappear if she let go.\n\n\"You're angry with me, Helen?\"\n\n\"I'm so many things right now, Kev. I don't know where to start.\"\n\n\"You're angry with me.\"\n\n\"I'm tired and hungry, and I'm crazy about you, and I'm overwhelmed because of that speech you gave today in court, and I love you so much I might explode, and I want you, and I'm grateful, and yes, I'm angry with you, not annoyed or displeased. Punch-you-in-the-face angry. Ginger told me everything. How could you believe I cheated on you? You found me guilty and gave your verdict without even respecting me with a call.\"\n\n\"Once I sobered up, I was so sorry, but it was too late. I couldn't call you.\"\n\n\"I'd cried myself to sleep every night, Kev.\"\n\n\"Me too. I'm so sorry.\" He hugged her, his hands warm and protective. \"I'll make it up to you somehow. I promise. I have no idea how, but I'll try.\"\n\n\"I'll give you a clue. You'll have to cook shrimp jambalaya every day, and whenever there's a sci-fi movie out, we're going to see it, no matter how shitty it is. And from this day, we'll have as much sex as I want. Ten, thirty times a day, and you don't get to say no. And you'll never again win a PlayStation match. And you'll never even think about or speak to another woman.\"\n\n\"Maybe I should wear burkas? So no woman other than you will ever see me again.\"\n\n\"Don't be silly. And, and I want a Romanian Butterfly Flip.\"\n\n\"I have no idea what a Romanian Butterfly is or why it flips.\"\n\n\"Me neither. Ask Mike, because I want it. And we'll fall asleep hugging each other every night, you'll have to fall asleep at the exact same moment I do, and ooh\u2014\" The microwave beeped, and she pulled out the soup and jambalaya. Never letting go of his hand, she sat down to eat, pulling him into her lap.\n\n\"You know you can let go, I'm not going anywhere.\"\n\n\"I'm never again letting you out of my sight,\" she growled. \"Too risky. Seriously, we really need to work on better communication, Kev. Expressing and talking before jumping to conclusions.\"\n\n\"I promise.\"\n\nShe dug into her bisque and moaned when it touched her tongue.\n\n\"Too hot?\"\n\n\"No, I think I had an orgasm.\"\n\n\"Was the food in Alexander that bad?\"\n\n\"Worse. We were hungry all the time, and still, the cockroaches ate most of what the chow hall had to offer.\" She tried the jambalaya and made tiny moans of pleasure each time the fork touched her tongue.\n\n\"Poor you. You hate cockroaches.\" \n\n\"Huuuuge cockroaches. One of them grew so big, it chased me with a shoe around the block.\"\n\n\"So pets and exercise.\" He kissed her neck. \"Jail sounds great so far. How did you manage the other inmates?\"\n\n\"I was the most popular girl in jail.\"\n\n\"Sounds like my Valkyrie.\"\n\n\"Yep.\" She unwrapped his shirt like a Christmas present, while she kept taking sips from her bisque and bites from her jambalaya. Helen ran her fingers through his blond chest hair. She stopped eating so she could kiss his nipples. One, then the other, taking her time. \"All the girls and all the boys loved me and wanted to be my friend and play with me.\"\n\n\"So jail is like high school. It's a popularity game.\"\n\nShe unbuckled his belt and undid his pants, caressing his muscular thighs. \"I was so popular one time that a few girls got jealous. They tried to kill me, but my guardian angel saved me.\"\n\n\"Who?\"\n\n\"You.\"\n\n\"Me?\"\n\nShe nodded. \"Yeah, it was you. You sent a guardian angel to save me.\"\n\n\"You were hit a lot on the head in jail?\"\n\n\"I'll tell you all about it, because I gave my word, but not tonight.\" She reached into his boxers, and her hand greeted his stiffening cock. \"Right now I'm into eating, and then I'll eat you, and you'll begin compensating me.\" Her hand massaged his balls.\n\nKevin reached down to the snake under her dress that was pressed against his buttocks, very much breathing like a living creature. He lifted the hem of the black dress Ginger had given Helen her for her court appearance and touched the hot flesh. It rose out of her panties and jumped to the warm touch of his fingers. She moaned.\n\n\"Did someone really try to hurt you in there?\"\n\n\"Yeah, I had to go into the PC unit.\"\n\n\"Must have been one effing large computer.\"\n\n\"Protective custody, dummy.\"\n\n\"Sorry for not being fluent with your ex-con's badass lingo.\" Kevin stroke her shaft lightly and played with her smooth balls. A year ago, the thought was inconceivable, but now when he thought of sex, that was always part of the equation. He closed his fingers around the massive shaft. The feeling of her growing and swelling in his hand made him giddy.\n\n\"I dreamed about you every night, Kev,\" she whispered. \"When I wasn't dreaming, I imagined us together.\"\n\nKevin slipped off her lap and went on his knees between her legs. \"Pull the dress up.\"\n\n\"Why?\"\n\n\"I wanna see you.\"\n\n\"You already know what's there.\" She pulled the dress up nonetheless. Her beautiful long body unwrapped. She was white northern ice-queen, with a golden tinge of creole roots, and the scars, contribution of the Marine Corps. There were no secrets left between them.\n\nKevin's fingers played on her thigh and circled her bellybutton. \"That's my Valkyrie\u2014you're so beautiful.\" He pulled her panties down, and her snake sprang out, slapping his empty hand. \"Tell me what you need, and I'll do it.\"\n\n\"I want everything.\"\n\n\"No need to be so specific.\"\n\n\"Please...put me in your mouth.\" Her voice was barely audible.\n\n\"Like that?\" He wrapped his fingers around her hot rod. It felt smooth and warm and hard as steel. Kevin squeezed and Helen groaned. He very slowly pumped it in his hand, watching as a clear droplet materialized at the flared head. Kevin reached out with his other hand and closed it around the shaft. Both hands couldn't cover the entire length. He shivered when he thought of her filling his body again. He touched her lower lips. Helen's flower was soaking wet. He teased her with his tongue, reaching out and not touching her tip.\n\nHis purple eyes shone, and the intense way he stared at her almost made her bust a nut.\n\nKevin kissed the bulbous head, and it heaved, extracting another drop. With the tip of his tongue, he lapped out like a kitten at the clear drop, slurping it in. Another one formed and his tongue burrowed into the bulbous head's slit trying to extract more nectar.\n\nHis hand touched her pussy and found her button. It was protruding, like another tiny cock craving attention. His lips finally closed around the big head.\n\n\"Yeah, just like that.\" Helen closed her eyes, but immediately opened them again; she didn't feel like missing anything. \"Like that and everything else that I want.\"\n\n\"I'll always give you everything you want.\" His thumb pressed her mound, the tiny patch of skin between her balls and vagina. His finger entered her slit. She was soaked.\n\nHelen's mind went into a hundred different places, and she struggled not to cum right there. His finger pressed inside her, filling her, and Helen tightened around him. She wanted him inside her, she wanted to be inside him. Everything, just like she said. She pushed her hips against his hand, tightening her legs around him.\n\n\"I can't, Kev...\"\n\nKevin added another finger, stretching her tight hole even farther. His tongue lazily circled her glans, sliding over the sensitive nerves. Every now and then he licked the cock's slit furiously, then he returned to slowly caressing the sensitive ridge.\n\n\"I need...I need,\" she whimpered. \n\nHe knew what she needed. Kevin planted his thumb on her clit, rubbing the sensitive knob firmly. Once, twice, that was all it took. Helen exploded around his fingers. She closed her legs and leaned forward. Her hands settled on his shoulders, and she squeezed. An explosion of lust went up from between her legs and hit her pleasure center. She closed her eyes and moaned softly again and again.\n\nKevin laughed around her cock, sending another wave of pleasure down her spine. He worked his fingers faster inside her, and a second climax pounded through her body, less than a minute later. He started another cycle, but Helen grabbed his wrist.\n\nHelen's head was spinning. The second time she came rocked her senses. Before she'd met Kevin she used to play with her clit, a lot. But she needed serious conditioning and time to orgasm even once.\n\nKevin kissed her cock's bulbous head. He extracted his fingers and, never losing eye-contact, licked them, tasting her. She tasted sweet. Helen took his wrist and pressed his fingers to her mouth. She opened her cherry lips and greedily sucked on them.\n\nTasting herself made her feel naughty, bold. She sucked Kevin's fingers clean, taking her time. Kevin stared at her, mesmerized.\n\n\"Stand up, Kev.\"\n\n\"Huh?\"\n\n\"You said whatever I want. That's what I want.\"\n\nKevin complied, and Helen yanked his pants down all the way, along with his boxers. His cock sprang up, and she grabbed it, hungry for it. She leaned down and got close. Kevin wasn't lacking down below, at least not according to her limited experience. Her hand closed around him, leaving a couple of inches exposed. She lightly stroked him, and it was his turn to groan.\n\nHis fingers laced in the golden river that ran down to her back, and he moaned again as he felt her breath hot on his lower head.\n\n\"I'm going to take you to the bed, Kev, and I'm going to fuck you. I'm going to put my cock deep inside you, and I'm never coming out again.\"\n\n\"I have to go to work tomorrow. It's a new place. People will raise an eyebrow if I come in with you attached to my rear end.\"\n\n\"Tell me I'm your sun and moon.\"\n\n\"And the stars and the ocean.\"\n\n\"Tell me you want me inside you, Kev.\" \n\n\"I want you inside me so much.\"\n\n\"Tell me you want me to pound you till you scream.\"\n\nThat all it took. Kevin exploded in her hand. Helen was caught completely off guard. He spurted onto her face, capturing her across her lip and cheek, shooting into her beautiful hair.\n\n\"Sorry,\" he huffed. \"Been too long. I couldn't...sorry.\"\n\n\"That's okay.\" She kept stroking him. \"I like that you can't resist me.\" She sat back. Maybe a little of prison rubbed onto her because she pulled him down onto his knees again, using his cock, then pressed his head down, just like she saw Valerie once do to Aziz. He went for her cock, but she pushed him farther.\n\n\"Use your tongue on my clit,\" she whispered.\n\n\"What?\"\n\n\"Use your tongue on my clit,\" she said louder and pushed his head and hiked one leg over his shoulder. He could feel the suede of her shoe on his back as he dove into her. Her body twisted each time he hit the spot, and she worked her hips, thrusting herself at his tongue.\n\n\"Yes,\" she moaned.\n\nHis nimble tongue licked her folds. Helen was a big girl, and her clit was almost the size of a pinky. It stood up eagerly, and Kevin sucked it into his mouth. His tongue played on the nerve-rich knob, caressing it and flexing it left and right. Three seconds later, Helen exploded for the third time. A wave of pleasure surged through her body, and she tensed, going rigid as she came. She grabbed his head and roughly forced his face into her pussy, drenching him with her nectar.\n\n\"Yes, yes, yes, yessssss,\" she agreed in her throaty voice.\n\nHer legs closed around his head, sealing his face deep inside her folds. Kevin kept licking as she shuddered and tensed around him. A man with lesser lungs might have pulled back, but he was a free-diver and could hold his breath for five minutes. He gladly kept on pleasuring her as her storm slowly subsided.\n\nKevin pulled out. \"I like the new dominating you. Is that a jail thing?\"\n\n\"That was...\" she started giggling but then stopped because Kevin was obviously not satiated. He leaned in and kissed her massive head, tasting her salty precum again. He swabbed her, getting all, then softly sucked on the head.\n\nHelen moaned, and Kevin sucked a little harder.\n\nHis hands worked on her shaft while he slowly took more of her into his mouth. His lips stretched around her girth, and his mouth opened wide as could possibly go. He worked her with his tongue, which was always difficult when he took her length in. One hand kept pumping; the other went to her large sack, where it massaged her smooth skin, sending sparks of pleasure up into her body.\n\nHis purple eyes kept staring at her. So lewd and so sweet. She loved that nothing about her felt gross or weird for him. She had so many issues with her own body, but Kevin locked them in the basement and threw away the key. With him, she was the most desired woman on the planet.\n\n\"I love you,\" she said.\n\nKevin sucked her harder, stuffing more cock into his mouth. Enveloping her in his warm wet tunnel. She felt the head reach the back of his throat, and a moan of pure ecstasy escaped her mouth when she thought of what would come next.\n\n\"I'm gonna cum, Kev.\"\n\nHe shook his finger. Not yet.\n\nKevin kept sucking, his hands went to her buttocks and pulled her forward, his jaw stretched, and she felt the big head open up the curve in his throat. He swallowed, the velvety pressure sleeve around her hard member constricted, shooting out more pleasure streams through her body.\n\nHe stopped, his mouth lewdly stretched around her girth, never losing eye contact, he hummed \"Sweet Caroline,\" which is an excellent choice if your mouth is around your futanari lover's tool.\n\n\"Oh, God.\"\n\nShe saw the bulge growing in his throat as he pushed farther down. Helen closed her eyes, all her senses focused on the sensation.\n\nKevin pulled out to take a breather but pressed right in again. This time his throat yielded immediately, and she popped through without resistance. His throat contracted around her cock, trying to expel the invader, but Kevin never panicked. He gripped her root, feeling her heartbeat. It made him hard again, thinking about his Valkyrie's pleasure. He felt safe, tightening around her. Her shuddering moans were the focus of his world. Swallow, gasp and breathe.\n\nWhen Diana taught him to deep throat, fear was the incentive. With Helen it was desire.\n\nHe was too lost inside the moment. The feeling of Helen's cock twitching and kicking inside his throat. The choke of her flesh tense against his. Her hand playing in his hair. Those feelings went from his throat, down his chest to the tip of his cock. He sucked on her large member, her fingers in his hair, her other hand caressing his back. He was in a trance. No embarrassment or inhibitions left between them, only lust.",
        "He pulled back. \"I want you to fuck my throat.\"\n\n\"What? No!\"\n\nHe nodded. \"Yep. That's what I want.\" Kevin took both her hands in his and her cock back in his warm mouth. He held her and filled himself by her warmness. There was nothing hotter and romantic than feeling her hands on his. Playing. He surrendered to the feeling for a moment and then gently placed her hands on the back of his head. He swallowed her entirely until his lips touched her balls.\n\nKevin winked at her.\n\n\"I'm not gonna do it, Kev. It's brutal, and you're too gentle and precious.\"\n\nHe shook his head and emitted a muffled, pleading sound. He pulled back and stared at her, expectation all over his face.\n\nShe couldn't resist.\n\nShe started slow. Pulling Kevin toward her and letting go. Kevin's slight moans and his hands caressing her thighs bolstered her confidence. She slowly built a rhythm, one, two, three, the fourth time going all the way, then letting him breathe. Then dive, one two, three, four, she fucked his throat in earnest. It felt wild to let go, to pull and watch his throat bulging with each thrust. One two, three, four.\n\nHis lips stretched and caressed her skin as she pushed all the way inside. He coughed, and she immediately pulled out and looked at him, worried. Kevin shook his head, licked her from her balls to the tip, then dove again on her length. His lips touched her abs and he stayed there, moaning around her girth. Helen moaned softly as her flared head pushed deeply inside his wet cavern. Her hands caressed his hair and she stated moving in and out again. \n\nOne two, three, four.\n\n\"I'm...\" she huffed. \"I'm... Fuck, fuck, fuck.\" She buried herself inside him to the hilt and grunted as she emptied herself deeply, oh so deep inside him. Her hands locked behind his head and she pulled as her balls pumped all her pent-up frustration, fears, sorrow, and lust.\n\nShe took some time to see straight again. When she did, she could feel Kevin's soft tongue leisurely lapping on her cock.\n\n\"That wasn't terrible, was it?\" he said.\n\n\"Kev?\"\n\n\"What?\"\n\nShe giggled. \"Now who is oversexed?\"\n\n\"I missed your taste. Let's find the bedroom Mike talked about. You promised to fuck me.\" Kevin pulled her after him into a back room and to a corridor. He had to call Ginger for directions. She sounded surprised that they weren't in bed already, doing it like rabbits. It sure sounded like he caught her in the middle of doing it like rabbits with Mike. Kevin hid the fact that he and Helen had done the foreplay at her desk.\n\nThere was a small bedroom at the end, facing the river. It was small and felt as old as the rest of the building, but it was tidy. Kevin was only interested in the queen-sized bed that dominated it.\n\n\"Come on.\" He jumped, taking off what was left of his clothes.\n\nThey hugged naked under the ugly, flowery covers, breathing hard and giggling like teenagers in love. Helen licked his nose. \"What have you been up to while I was inside?\"\n\n\"Lately I've been busy trying to get the love of my life out of jail.\"\n\nHelen kissed him passionately. She touched her lips to his softly tenderly, then kissed his chin and nose. He could feel her hard cock between his legs, pushing and poking.\n\n\"Did I tell you how much I love you, Kev?\"\n\n\"Not enough.\"\n\nHelen pressed her hand to her wet sex and got her fingers nice and slick. She slid her fingers up and down the crack of his ass. Her finger slipped easily into Kevin, and he moaned and grabbed at her shoulders.\n\n\"Helen...\"\n\nHelen slid another finger into him, and he whimpered and pushed back against her fingers. She finger-fucked his ass while she licked and sucked on his nipples. Kevin was moaning and quivering underneath her. She pulled back and used more of her love juice on her cock. It was hard as steel and swollen bright red.\n\nHelen pushed his legs forward, and Kevin grabbed his knees and held them. She then moved forward and positioned the head against his tight entrance. She cooed softly as she felt his star spread for her and with a firm push, it popped inside him. The ruby head immediately flared up inside his tunnel, sealing her inside. He gasped and squeezed his ass on her member. He let go of his legs and grabbed at Helen's waist and held her back.\n\n\"That's what you wanted?\"\n\nKevin moaned and took her scarred tit into his mouth.\n\n\"Don't forget Ashley.\"\n\n\"God forbid.\" He kissed her other nipple and sucked it in. He felt his tiny ass spread and accept the broad tip of her massive thick cock, enveloping it. A pleasurable pressure sleeve for her cock.\n\nKevin wrapped his legs around her waist. She pushed into him nice and slow, pausing to let him get used to her girth again. Kevin rubbed his hands up and down her body. He moved around to her smooth, tight butt and pressed, to let her know he wanted her to keep going.\n\n\"I missed you so much, Kev. \"\n\nHelen pulled back and then pushed back in, sliding a little farther into him.\n\n\"A-almost, almost...\" She gasped as she finally rooted the last few inches of her impressive length inside her lover. She lay on top of him, breathing hard, soft skin against warm skin. Welded.\n\nShe ground her cock against him, stirring it deep within his tight tunnel, as her massive cum-filled balls pressed to his smaller ones.\n\nHe panted hard as she slowly drew the length of her cock from him till only the tip remained. The void it left in him called her right back. She didn't leave him empty; a minute later, she pushed right in, gaining a feminine moan from him.\n\nShe pulled back, repeated, and then sank all the way into him, letting out a deep groan. Kevin's slim body shuddered as she brushed against his prostate. She slid all the way out and then pushed back in. He whimpered his need as she bumped that magic spot again and again.\n\nTheir bodies were pressed to one another, damp with sweat as they coupled, his mouth open and his eyes on hers. At the most feminine position, he could be, below Helen, bred. He locked his arms around her neck and pulled her for a kiss.\n\nShe moved faster and harder in long strokes. Pushing again and again inside Kevin, in and out, in and out.\n\nHelen pumped faster and harder. Her hips slapped loudly against his as she grunted loudly. Kevin moaned and clutched at her shoulders. He pushed his hand between their bodies. Helen's athletic body moved like a mighty wave. Claiming him. Just the perfect way they both loved.\n\nShe closed her eyes and breathed deep. \"Wait, wait.\" He pressed his palm to her stomach, stopping her. \"I wanna,\" he gasped, \"I wanna try something. On your back.\"\n\n\"Mmmm... cowboy?\"\n\n\"Something.\"\n\nShe pulled back smiling and rolled on her back, stretched her long body like a cat. Kevin straddled her, facing the window. He grabbed her cock and rubbed it against his starfish.\n\n\"Hey, not that,\" she said. \"I wanna see your face. Not like\u2014ooh that feels sooo goooood...\" she moaned, biting her lip as she felt his hand now on the root of her cock. He cried, too, as he impaled himself on her girth. She ground her cock into him, stirring his insides.\n\n\"Wait!\" Kevin huffed as his eyes squeezed shut, feeling her shift and ready herself under him. Watching his back, she began to fuck him, her cock sliding in and out of his ass as she pushed up into him repeatedly. When he was halfway to the bottom, he stopped her, then did something that made her gasp.\n\nHe pressed his own cock down until it aligned with her pussy lips. Letting gravity do the work, he impaled himself farther. His own cock head breached her wet flower and opened her up. Helen felt herself both spearing and impaled. His cock head rubbed her clit as it plunged into her depth while her cock slithered deeper up his tunnel.\n\nHelen pulled her legs up over her head, and Kevin started bouncing. The room was filled with their moans as the friction grew. He impaled himself to the max because it meant his own cock was deep inside her delicate folds.\n\n\"Yessss...\" The bed creaked under them as she began to bounce him on her cock, their bodies warming and becoming slick with sweat. Their voices mixed, echoing around the room in a chorus of gasps and moans. Hers throaty and getting louder, his soft as he felt himself about to explode.\n\nFaster and faster.\n\nThey didn't stop, they didn't even slow. Their pleasure peaked as she continued to frantically pummel his ass, and he continued to squeeze inside her tight pussy. Hotter and hotter.\n\nHelen experienced absolute bliss as his squeezing and massaging of her clit became too much. A second later, her cock exploded and her pussy convulsed. Two giant waves collided inside her body, and all she could do was let herself be carried on the tidal wave. As she spasmed, she milked his cock, and Kevin, too, erupted deep inside her, pouring his hot lust into her wet tunnel as she poured her own baby-making milk deep in his bowels.\n\nLater they lay there for several long minutes, staring at the ceiling.\n\nKevin broke up laughing first, and Helen joined in a second later.\n\n\"Holy motherfuck,\" he panted. \"That was fucking wild.\"\n\n\"Wanna try again?\"\n\n\"In a minute.\"\n\nShe cuddled his slim body and felt deep contentment just to lie there and feel his heartbeat. Diana once claimed it had been scientifically proved that some men exuded a pheromone that made futa girls go crazy and that Kevin was one of them. Helen was never sure if it was pure bullshit or had a grain of truth; she simply loved to breathe him in. \"What's next, Kev?\"\n\n\"We have more sex, and we go to sleep. And we wake up early because we really made a mess, and I don't want to get Ginger in trouble. Then I need to go to work. I can sneak you into my new apartment. I'm only supposed to move in on Monday, but the place is empty, and I've got the key.\"\n\n\"Where is it?\"\n\n\"Sweet location. Nothing like the penthouse, but it's got a bay-area view. Two and a half rooms. The half room is for Peter Dinklage, in case he feels like dropping by.\"\n\n\"Did he say anything?\"\n\n\"No, but you can never be too prepared.\"\n\n\"Why did you quit your old job?\"\n\n\"I didn't like it there.\" He decided never to tell her it was because of her trial. \"Anyway, I found a new one two days ago. Easy peasy. I'm not sure how long I'll stay in this one. Mike got this banging idea for a diving computer that has an underwater communication gadget. So, I think I'll try start-upping on the weekends. If things click and we're on to something...dunno yet.\"\n\n\"Well, you sure got the future all sorted out. Do you see me fitting in there somehow?\"\n\n\"I told you, you can come live with me. I don't mind being your sugar daddy.\"\n\n\"I meant for the long run.\"\n\n\"Ah, excellent question, Ms. Brion, I'm glad you asked.\" Kevin reached for his pants and pulled out a shiny object from his wallet. \"My dad gave me this ring. It runs in the family. It belonged to his grandmother, and he gave it to my mom.\"\n\nShe opened her eyes wide. \"What?\"\n\n\"Be a good girl. Be sweet and prove yourself as ring-worthy material, and in two or three years, five max, you're gonna get a proposal.\"\n\n\"It's so beautiful and big.\"\n\n\"Four carats. My great grandpa fought in the airborne unit in France during World War Two. He stole it from a dead German soldier. Looting is a respectable O'Brien family tradition, by the way. Play your cards right, and you get to wear it.\"\n\n\"Wow.\" She took the ring and slipped it on her finger. \"It's beautiful. And it fits perfectly.\"\n\n\"Helen Brion.\"\n\n\"What, baby?\"\n\n\"Give me back my ring.\"\n\n\"No.\"\n\n\"Yes.\"\n\nShe shook her head. \"Who knows what's gonna happen in five years?\"\n\n\"Helen Brion.\"\n\n\"Nope. Might be my only chance of ever getting a diamond ring, so I'm keeping it.\"\n\n\"Give me back my ring, you thief.\"\n\n\"No can do. I think I'm developing feelings towards it.\"\n\n\"Huh.\"\n\n\"By the way,\" she said. \"In case you were wondering, I do.\"\n\n\"I didn't kneel, and I didn't ask you anything.\"\n\n\"Then what the hell is your engagement ring doing on my finger?\"\n\n\"You stole it.\"\n\nHelen sighed happily and hid her hand below her ass as Kevin tried to grab it. \"I showed initiative, that's all. I think it was the crappiest proposal in mankind's history, but I'll let it slide because you just saved my ass from life in prison. So, I do. Helen O'Brien sounds nice. Yep.\"\n\n\"I didn't propose\u2014\"\n\n\"Chill, Charlie Brown.\"\n\n\"You chill!\" He pointed an accusing finger at her. \"You you think I'm scared of commitment? You're just full of shit. There's a court across the street. There's a marriage registration office in there, and it might still be open. Let's go.\"\n\n\"Let's.\"\n\n\"On the count of three. One, two, three.\"\n\nThey both laughed when neither rose. \n\n\"Knew you're just full of it.\" He kissed her neck. \"You think I'm scared of commitment? I'll see your bullshit and raise you two kids.\"\n\n\"Kids?\"\n\n\"Yeah.\" He thumped his chest like a gorilla. \"Our kids will be amazing. Think about it. Me with my good looks, humor, smarts, and resourcefulness, and you with your ability to have kids.\" \n\n\"You have been thinking ahead.\"\n\n\"A boy and a girl. Ben and Jerry. Or we could call them after street names. Most people who are named after street names become famous.\"\n\n\"I want a big family. At least three kids,\" Helen said.\n\n\"I think two is more than enough.\"\n\nHelen shook her head. \"Three.\"\n\n\"Two and a dog.\"\n\n\"Three.\" She kissed the ring. She really liked it.\n\n\"Two and a dog and a parrot.\"\n\n\"Three.\"\n\n\"Two, and one of them is gonna be really fat.\"\n\n\"Three.\"\n\n\u2013-\n\nSometimes you plan for three kids, and God starts laughing. Then you decide that four is also an excellent number.\n\n\u2013-Epilogue \n\nPurple was her favorite color.\n\nShe once lived in a penthouse with her sister, and she was surrounded by loneliness. She called it her home, and even though it provided certainties, she had never felt rooted in it. Helen referred to that period in her life as 'the time before I started living.' Now she had her own family. Kevin called it married plus four noises, but Helen called it 'my anchor,' because that's what families are about. Some think its unconditional love, but it's really the sense of belonging. Her family\u2014five pairs of eyes that looked up to her, oblivious to her scars, her eyepatch, and her insecurities. Her family, five pairs of purple eyes, and they all looked up to her with admiration and love.\n\nPurple was definitely her favorite color nowadays.\n\n\"Seems deserted.\" Jack nodded towards the Valkyrie. The white yacht rose softly on a lazy wave.\n\n\"Weird. Kevin would never leave it like that.\" Helen scanned the water as Jack aligned the Black Pearl with the Valkyrie. She slipped her high heels off and jumped onto the yacht's ladder, barefoot. \"Thanks for the ride, Jack.\"\n\n\"Anytime, princess. Call me if there's any trouble.\" He waved her goodbye, and the sixteen Chinese tourists he took for the dive dutifully copied him.\n\nThe deck was deserted, but the obvious sounds from below told her the real story. She trudged from starboard to port, deliberately making noise, and flipped a heavy air-tank. Ten seconds later, Sam's blonde head popped from the hatch. Her face was a bit flushed, and she had an apologetic grin ready, but when she saw it was Helen, it turned to an embarrassed, worried frown.\n\n\"Mom?\"\n\n\"Hi, sweetie.\"\n\n\"How, how did you get here?\"\n\n\"When we flew overhead, I asked the pilot if I could borrow a parachute.\"\n\n\"Epic.\"\n\n\"I bet 'crap' is the word you were looking for.\"\n\nSam grinned and hugged her mother.\n\nThe head of Sam's boyfriend popped up next from the hatch. He looked flushed, too, and his shock of black hair was disarrayed. \"Hi, Mrs. O'Brien.\"\n\n\"It's Helen, and your shirt is inside out, Derek.\"\n\n\"Oh.\" He blushed deeply.\n\n\"I, I showed Derek the bridge. He wanted to learn how to navigate.\"\n\n\"I bet you did, sweetie.\" Helen's forced a smile as not to alarm Derek. Sam recognized her mother's mood and flinched. \n\n\"I love you, Mommy.\"\n\n\"Samantha O'Brien, you and your dad and I are going to have a very long talk.\"\n\n\"Just remember my last report card. Straight A's all the way. And that I love you, but I'm sixteen\u2014\" \n\n\"Fifteen and a half.\"\n\n\"And that I love you both very much.\"\n\n\"I love you too, pumpkin.\" Helen kissed her daughter's cheek. Sam was almost as tall as her mother. She inherited Helen's sharp northern beauty, softened by her father's big purple eyes. Several modelling agencies showed heavy interest. To Sam's great dismay, her parents unanimously insisted that education precede fame.\n\nBoys showed interest much earlier. Since Sam had inherited none of her mother's insecurities, the combination meant trouble.\n\nHelen gazed out at the ocean, hoping to spot two blond heads popping up on the surface. \"By the way, sweetie, that condom packet sticking out of your pocket\u2014\"\n\n\"I bought it for a friend; it's not mine.\" Sam shoved the condoms deeper into her jeans.\n\n\"Tell your friend that brand is complete crap. They sometimes rip at the worst moment.\"\n\n\"How do you know?\"\n\n\"You think I won you playing Bingo?\"\n\n\"Oh.\"\n\n\"When did they...?\" Helen scanned the water again.\n\n\"An hour ago.\"\n\n\"Then they should be up already.\"\n\n\"Maybe less than an hour. Jesus, Mom, stop fidgeting like a teenage girl in love. Derek will think you're weird.\"\n\n\"I'm not fidgeting.\"\n\n\"You were only gone for five days.\"\n\n\"That's the longest your dad and I have ever been apart.\"\n\nTwo divers' fins flew from below to land at the deck. A second later another blond top appeared on the starboard diver's ledge. \"Sam! We saw a whale. A massive hunchback, it was chasing a\u2014\" Ben stopped in mid-sentence. \"Hey! Dad, Mom is here,\" he hollered. Ben, long ago, had conformed to the social expectation that forbade physical shows of endearment in public between a mother and a twelve-year-old boy. Still, he dropped the BCD and tank and ran into her arms, wetsuit dripping seawater and all.\n\n\"Mom, I missed you.\"\n\nShe hugged him tight and kissed his blond spikes. \"Me too.\"\n\n\"I could have sworn I saw the Black Pearl's silhouette; now I know why.\" Kevin's smiling face appeared over the gunwale. \"How was the flight?\"\n\n\"You know me. Stressful.\"\n\n\"And what did Carmela want?\"\n\n\"She wants me to come back to Richardson and Williams.\"\n\nKevin raised both eyebrows as he peeled the wetsuit off.\n\n\"As the new CEO,\" Helen said.\n\n\"Wow. Big salary?\"\n\nShe threw him a towel and ogled as he dried himself. The sun kissed his muscles and made her want to feel them under her fingers. Her husband had added a pound or five but kept his body in good shape over the years. \"Big salary and lots of shares,\" she said.\n\n\"And?\"\n\n\"I'll probably say no.\"\n\n\"Because it's too weird going back?\"\n\nShe'd waited long enough. Helen hugged her husband and kissed his smiling lips. \"Because I remember how it was with William. Burning the candle at both ends week after week. The girls still need me, Ben needs me. Hell, even Sam still needs me to be there.\"\n\n\"Not that we mind being filthy rich, but whatever you choose, we're behind you eighty percent. As long as you choose right.\"\n\n\"Yeah?\" She breathed him in and nibbled his ear.\n\n\"Babe.\" He nodded towards Ben because he could feel how hard she was getting under the dress.\n\nHelen squinted. \"Hmmm, your fault. Own it. \"\n\n\"Okay then, Mom just had a long flight and she's exhausted, so\u2014\" A phone rang.\n\n\"It's Grandad,\" Sam said.\n\n\"Put him on speaker.\"\n\n\"Daddy, we found a turtle,\" Hallie sounded excited like only a five-year-old could be because of a turtle.\n\n\"Hi, sweetie, Mom is\u2014\"\n\n\"Grandad gave it lettuce.\" Annie grabbed the phone; there were sounds of a muffled fight. \"Stop it, Hallie! We call it Mr. Speedy, but he's not that fast. Grandad said we can keep it in an aquarium, but we can't put water in it because Mr. Speedy is a land turtle.\"\n\n\"Hey, honey, give the phone back to your sister,\" Helen said. \"I don't want you to fight.\"",
        "\"Mommy? You're back.\"\n\n\"Aha.\"\n\n\"What did you bring me?\"\n\n\"Lots of hugs and kisses. I missed you too, sweetheart.\"\n\n\"When are you coming?\"\n\n\"I'll see you in four hours.\"\n\n\"Nine p.m. sharp, Kev.\" Kevin's dad could be heard from the background.\n\n\"Hi, Dad. When I said nine-ish, I didn't mean nine o'clock, I meant when they're nine. So, see you in four years.\"\n\n\"Funny.\" Finn picked up the phone. \"Seriously, I need you to be here on time. I've got a date tonight.\" \n\n\"A what now?\"\n\n\"A date.\"\n\n\"Like with a woman?\"\n\n\"Yes.\"\n\n\"She has a name?\"\n\n\"Yes.\"\n\n\"All right, we're having a barbecue on Sunday. Mike and Ginger are coming. You're welcome to join, and you can bring any mysterious date, as long as she's well behaved.\"\n\n\"I'll think about it. No! Hey! Don't you dare\u2014\" Someone started wailing on the other side like an ambulance siren. \"Oh, crap, they...Hallie just hit Annie with a rolling pin.\"\n\n\"Hey, dad,\" Ben took his father aside as Helen tried to establish truth of arms over the phone. The twins were sometimes more difficult than the Israelis and the Palestinians. \"Aunt Ginger and Uncle Mike are coming this weekend?\"\n\n\"You wanna know if they're bringing Robyn?\"\n\n\"What do I care if she's coming or not?\"\n\n\"Okay, so I won't tell you.\"\n\n\"Daaad.\"\n\nKevin let out a belly laugh. \"She's coming. Not that you care.\"\n\nBen nodded, but when he thought his father wasn't watching he gave a fist pump.\n\n\"Mark the date,\" Kevin said to Helen when she finally hung up the call. \"Junior started noticing boobs.\"\n\n\"I'm more worried about this dummy.\" She nodded toward Sam. \"I called her two days ago and told her I believe it's too early for her to start having sex. She told me that ten o'clock is not too early.\"\n\n\"Kickass.\"\n\n\"Deflecting a serious subject using a cheap joke. Gee, I wonder where she got that from.\"\n\n\"Yeah, I'm so angry and yet so proud right now. Weird.\"\n\n\"And just before you surfaced, I caught her and Derek down below. They were either eating the hottest jambalaya known to mankind, or we're about to become grandparents.\"\n\n\"Unless she was doing him. What? All right, all right, I'll talk to her.\" He pulled his wife, and Helen happily lost herself in his kiss. At thirty-seven he still had an athletic body, and his naked skin ignited her until the only thing important was touching him more. \n\n\"I want you,\" she whispered into his ear. \"Five days without is a record I never wanna break.\"\n\n\"Okay, kids, Mom is exhausted. We will take a nap in the cabin. No disturbances unless there's blood.\"\n\n\"Gross.\" Sam wasn't born yesterday. \"Why can't you two act like normal parents and respectfully loath each other?\"\n\n\"I've told you a million times, Sam. Your mother didn't have a boyfriend until she was thirty, so she needs extra loving to compensate for the lost years.\"\n\n\"You're saying I'm high-maintenance, Kev?\"\n\n\"An aircraft carrier is high-maintenance, babe. You're in a league of your own. On my tombstone they'll write, 'Died because he texted Good morning and forgot to add the three red hearts.'\"\n\nShe thought of something clever to tease him back, but the joy of being back home swept over her. She let it slide.\n\nHappiness wasn't rare; it wasn't a shimmer at the corner of your eye.\n\nHappiness was waking up to see her beauty in the morning. Happiness was the way her lip trembled when she was stressed, and how she always smiled when Kevin saw her lip trembling and chased all her demons away. Happiness was her laughter at his jokes, even the dumb ones. Happiness was four kids, annoying as hell. Each an individual, each a complex little human being. You loved them and taught them the difference between right and wrong. You watched over them, and you prayed that they grow up happy and free of any fucked-up family issues.\n\n\"Hey, Mom, I've got a new one,\" Ben tugged his mother's sleeve. \"What's the similarity between a spoon, a shark, and an ant?\"\n\n\"They all begin with the letter S. The ant's name is Suzan.\"\n\n\"Aww,\" she regretted ruining the punchline when she saw the disappointment on his young face. \"Dad already told you that joke?\"\n\n\"He must have. I can't remember when I've heard it, but I know I just did.\" Something clicked. A memory from a long time ago in a restaurant and a ten-year-old, purple-eyed boy. She turned to her husband. \"Hey, Kev, I think I fell in love with you before I even met you.\"\n\n\"That makes sense.\"\n\n\"No, really.\"\n\n\"Yeah, we were written in the stars.\" Kevin sighed happily. \"Your mom is high-maintenance, Sam. But you know something else? She's absolutely, totally worth it.\"\n\nHappiness wasn't rare, happiness was right there for the taking. All you had to do was keep in mind never to take it for granted and hold on tight to what you had.\n\nShe wanted to tell him they might have met a long time ago in the Chatty Seabass and that their lives had run a full circle since. But then Kevin took her by the hand to the cabin below, and he loved her tenderly for a very long time, and she forgot all about it.\n\n\u2013-The End\n\nWhew, a loooong journey. First chapter was published a year ago. It had ton of sex (some say too much, others say not enough). Dominating futanari and a romance like I promised. Tons of family issues, I hope most of them were resolved. Sorry if I sometimes shoved my worldview down your throats. I do hope that despite using futanari (an imaginary fetish creature related to the Femdom fetish), my real beliefs about homophobia showed. (Just to make it clear. Futanari are not transgenders. I've heard of a lot of transgenders who were victims of violence. I've never heard of a transgender who was a sexual predator.)\n\nBy the way, I wrote the sketch of the epilogue scene somewhere around the 3rd chapter. The story might have appeared to go astray at times, but I think it can be attributed to the intervals between chapters. Read it from start to end, and it would make more sense. \n\nI wanna thank all the good people who took the time to read it. As usual I ask you to grade and comment to show me some love. \n\nWhat's next? \n\nOther stories I guess, with different characters (I've let Kevin and Helen suffer enough). I have an idea for three stories (none as long) but I'm open to suggestions. \n\nThanks again. Please be kind to each other."
    ],
    "authorname": "allthatisfuta",
    "tags": [
        "futa",
        "futa on male",
        "romance",
        "shemale",
        "shemale on male",
        "futanari",
        "futanari on male",
        "dickgirl",
        "dickgirl on male"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/family-issues-ch-13"
}