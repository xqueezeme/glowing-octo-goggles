{
    "title": "The Sissy Mark",
    "pages": [
        "This is my story submission for the . I ask that you forgive any errors you might find, I literally just finished 12 hours before the deadline, and have zero time to get it to my editor before submissions close. As soon as Skye can get a chance to edit for me, I will repost a freshly edited update. Thanks, and don't forget to vote/rate/favorite!\n\nThis story contains Transgender/Gender Bending themes. If you are not okay with that, these are not the words you're looking for.\n\n*\n\nLet's just start this by saying that I hadn't always been the best person. I was quick to judgment, and quite narrow minded. It didn't help that I was twenty-two, and still trying to live my life like I was still in high school. That was how I had found myself cruising for slutty girls in Halloween costumes at the State Fair.\n\nThe warm weather had finally turned, bringing a briskness to the air that occasionally sent chills through me, making me wish I had reconsidered a jacket earlier. None of the pretty girls I'd seen seemed to be affected though. They were all clad in tight, tiny outfits, excessively short skirts, and heels whose only purpose was to make men hard. I hadn't missed a Halloween at the fair since I hit puberty.\n\nHalloween itself was still a little over a week off, but that didn't mean anything to the hundreds showing off their costumes early. Halloween had become less and less a day, and more of a seasonal event that could last days, or even weeks. And the best part, the sluts advertised themselves.\n\n\"Why don't we get out of here?\" I asked, leaning in close to whisper into her ear seductively.\n\nThe sounds of bells and cries of excitement from a rollercoaster came from the distance. We were a little way off the main concourse, in a more secluded part of the park set aside for workers who traveled with the fair.\n\nMira couldn't have been much older than I, but she had been traveling with the fair her entire life. Her mother told fortunes and sold tinctures and remedies from a tent, and although she hadn't said it, I was sure that Mira did something similar. I didn't believe in that sort of nonsense, but a little thing like a girl's idiotic beliefs wasn't going to dissuade me from trying to get underneath the skirt of her sexy witch costume.\n\nMy roommate, and longtime best friend, Tom had come along as my wingman, but I'd lost him a long time ago to a slew of Harley Quinn costumes that were parading around together. The man could not be faulted; besides, I was doing just fine on my own at the moment.\n\n\"And why do we need to go anywhere?\" she asked with a coy smile. \"I thought you said you wanted to get to know me better?\"\n\n\"Oh, I do,\" I assured her, taking her dainty hand in mine, letting my fingers trace soft lines across her skin.\n\nShe spared a few chaste kisses, and she teased me just like I hoped she would. Mira was just the right kind of slut I was looking for. One you knew was going to give it up, but still made you put in the effort. It always felt better when I had to put in the work first.\n\nI slowly picked up the pace, warming her fire. My lips moved to her neck, and I heard her gasp as I nibbled her just below her ear. Finally, I grabbed her by her waist and lifted her up, placing her on the edge of the picnic table beside us. Her legs were spread to either side of me, and our bodies were inches apart now.\n\nMira's breathing had quickened, and our eyes were locked as I cupped her cheek. She'd been playing so hard to get, for so long, I felt a thrill rush through me to see that she was no longer resisting my advances. When my lips touched hers again, she melted, giving into my hunger.\n\nAfter a few minutes of passionate kissing, I felt she was well and truly warmed up, and I began to press on. I let my hand slide slowly down her body, down to her waist and past her skirt, until my fingers were resting on her warm bare thigh, just above her fishnet stockings. I paused for a moment before beginning my slow trek back up her delicious skin.\n\nJust as I reached the hem of her little skirt, Mira's hand shot to mine, stopping me in my tracks with a vice-like grip.\n\n\"I think we better stop,\" she said nervously.\n\n\"What? Why?\" I asked, trying to be persuasive. \"I like you. Don't you like me?\" I asked, kissing her again, trying to pour a little gasoline back onto the spark we'd lit.\n\n\"You don't even know me,\" she moaned softly as my mouth found her neck again.\n\n\"I know enough,\" I promised.\n\n\"What if you change your mind?\" she asked.\n\nI could feel her resolve crumbling. She wasn't the first girl I'd known that enjoyed a little song and dance beforehand. Some of them were digging for that L-word, while others just needed their egos flattered.\n\n\"Have you seen yourself?\" I asked. \"What guy in his right mind wouldn't want to be with you?\"\n\n\"You know I'm not like other girls, right?\" she asked.\n\n\"I don't care,\" I said, returning my lips to hers and kissing her softly.\n\nI must have said the right thing, because she pulled me closer, and her tight grip on my hand loosened. We continued to kiss as I let my hand slip beneath her black skirt, teasing along her inner thigh as I inched closer and closer to her warm pussy.\n\nMira's breath quickened the closer I came, and in that moment, I knew that I had her. With most girls there was a tipping point, a moment when their hormones took over and \"no\" became a lost part of their vocabulary. With her resistance gone, it would take a natural disaster to stop us now.\n\nMy fingertips touched the smooth fabric of her panties and she tensed in my arms. Her fingernails dug into my wrist, but she made no attempt to stop me. I took a moment to rub her mound before sliding her panties aside so I could feel her wet slit.\n\nMy fingers moved around over warm flesh as I searched blindly for her pussy. After a few moments I began to feel like some sort of amateur. I knew where a clitoris was supposed to be, but my fingers seemed to be just missing it. Trying to cover my fumbling, I tugged her panties even further to the side before resuming my search. It was then that I felt something bump up against my hand. It was hard and long. My confusion only lasted for a moment as I touched it blindly before jerking my hand back as if I'd been stung.\n\n\"What the fuck?\" I shouted, stumbling back.\n\nI didn't know how it was possible, but there was no denying what I had felt. Beneath those soft panties was a cock. Not just any cock, but a rather impressive one, and I'd had it in my hand.\n\n\"You said you knew!\" she began, quickly closing her legs and holding her skirt to hide her erection.\n\n\"Knew what?\" I accused. \"That you're some sort of fag?\"\n\n\"I'm a girl!\" she said defensively, a little heat entering her voice as her cheeks flushed red. \"I told you I was different.\"\n\n\"Jesus Christ!\" I said angrily. \"I thought you meant different because you grew up with Carny freaks.\"\n\n\"They're not freaks!\" she said defensively.\n\n\"Says the freak with the cock,\" I couldn't believe I'd spent the last couple of hours fooling around with some crossdresser.\n\n\"You should watch your mouth,\" she said angrily.\n\n\"Or what?\" I asked. \"You gonna tell all your fag friends-\"\n\nI didn't even see her hand move before I felt the sting on my cheek. Spots filled my vision for a moment before I shook them away. I took a step closer to her, raising my hand, but people had begun coming out of their trailers, and were watching the scene.\n\nMira's eyes darted anxiously to the watchers. I didn't know what I saw in those silent stares, but they made me want to leave, and quickly.\n\n\"Quin Perrelli,\" Mira intoned before I could move. \"We punish you.\"\n\nHow did she know my last name? \"The hell you do,\" I said, turning away from her to leave, but when I turned, Mira was somehow still standing right at my feet, startling me.\n\n\"Mutare in feminam,\" she whispered, reaching her hand out to touch my cheek softly.\n\nA chill ran through my body at her touch, and I ran. Those watching had burst into laughter, and their amusement seemed to chase me until I had reached my car in the parking lot. I didn't even consider how my roommate would get home, I just started driving.\n\nI couldn't believe what had happened. I had been making out with a dude in a dress. My only saving grace was that nobody from here knew who she was, and most of what we had done had been in relative privacy. Still, I shivered as I recalled the way her big cock had felt in my hand. Forcefully, I tried to push those thoughts from my mind.\n\nBefore I even knew it, I was walking up the stairs of our apartment, and then collapsing into my bed. It all seemed like flashes-snapshots. I couldn't remember most of the drive home, or the time between walking up the stairs, and me finally falling into my bed. I couldn't even recall if I had locked the front door.\n\nImages of Mira forced themselves into my head as I tried to sleep. The way she felt in my arms, the taste of her on my lips. I tried to block all of that out, but it was impossible. Her musical voice even followed me into my dreams.\n\nMutare in feminam.\n\n*** *** ***\n\nI woke to a loud banging on my door.\n\n\"What the fuck, Quin?\" Tom shouted through my bedroom door. \"You alive? You totally ditched me last night.\"\n\n\"Not now, man,\" I shouted back, pulling my pillow over my head to block out the sun. I felt nauseous, and it was as if someone where hammering nails into my skull.\n\n\"Seriously not cool dude,\" he said. \"What if I hadn't hooked up last night? I could have drove my own car if I'd known I couldn't count on you.\"\n\n\"Leave me alone!\" I groaned, pulling the pillow tighter over my head, trying to block out the sound.\n\nIt appeared that last night was still adding insult to injury, giving me food poisoning. After a moment, I heard Tom's footsteps fade down the hall, and I laid there in my torment until sleep finally claimed me once again.\n\nI woke what seemed like a short while later feeling much better. My headache was miraculously gone, and so was the nausea. In fact, I felt like I could eat for days, I was so hungry.\n\nRolling out of bed, I padded across the hall to the bathroom in a pair of boxers and a t-shirt. I stumbled slightly, feeling off balance still from sleep, but managed to take care of my business without incident. It wasn't until I was washing my hands that I noticed that something was very very wrong.\n\nI wasn't sure exactly what I was seeing at first. It still looked like me in the mirror, but things seemed slightly off. I couldn't even put my finger on what was different, but my face was not the same as I had remembered it. But my face was currently the least of my problems.\n\nMy short blonde hair had seemed to have grown several inches overnight, and smack dab on my chest were two tiny bumps beneath my white t-shirt. Lifting my shirt to investigate, I discovered two puffy nipples where my defined pecs used to be.\n\nI'd never been some Goliath-like Adonis, but I'd strived to keep my body in shape. I'd been below average in size my entire life, and keeping fit was one way to make up for my lack of height and breadth. Now, instead of my defined chest, I had bitch tits.\n\nMy heart began to thump nervously in my chest as I stared at myself in the mirror. I didn't understand what I was seeing. Pulling off my shirt the rest of the way, I took a harder look at myself. It was impossible, but I seemed to have lost weight in some places, and gained it back in others. My waist was definitely smaller, letting my boxers nearly hang off my noticeably wider hips. I twisted in the mirror to get a better look, and that's when I saw it, a collection of symbols on my lower back.\n\n\"What the...\" I whispered, reaching back to touch it.\n\nIt was surreal. It looked like a tattoo, but that was impossible. I'd never gotten one in my life, and from what I'd heard, they were supposed to be painful, yet my skin felt perfectly normal to the touch. The darkened skin didn't even appear to be raised. Seeing it, I couldn't help but think of the Tramp Stamps slutty girls would get.\n\nSomething else felt wrong the more I stood there. Hesitantly, I pulled open the waist of my boxers and looked inside. My cock was still there, but it seemed smaller than I remembered. I'd been a respectable six inches for as long as I could remember, but I was sure I'd lost an inch.\n\nThe sound of water running in the kitchen caused me to jump, and I panicked. Tom was out there. Embarrassment filled me at the thought of him seeing me like this and I grabbed my t-shirt and darted back to my room.\n\nI shut my bedroom door behind me, and sat on the edge of my bed, trying to catch my breath. I'd only gone twelve feet, but I felt like I'd run a marathon. My chest was becoming tight, and I couldn't seem to catch my breath. Spots began to fill my vision, and then everything went white.\n\nI woke in my bed, and instantly breathed a sigh of relief. I'd been dreaming.\n\n\"Hey man,\" came a knock at my door. \"Are you getting up today?\"\n\n\"Yeah,\" I called back.\n\n\"Ok. Cool,\" he replied. \"I was beginning to worry about you there.\"\n\n\"It's only 10 o' clock,\" I said, glancing at the clock on my nightstand.\n\n\"Yeah, but you slept all through yesterday,\" he said.\n\nI was about to deny it when I saw the date on my clock. It was Sunday. I had somehow lost Saturday. My heart beat a little quicker as I grabbed the picture frame of me and my friends from high school and looked at my reflection in the glass. Another panic attack threatened to well up inside of me. It hadn't been a dream at all.\n\n\"Some of the guys from my work were talking about hitting up a couple frat parties at ASU tonight,\" Tom called through the door. \"Costumes are mandatory, but it should be like shooting fish in a barrel. And those girls from The Sandbar should be there too.\"\n\n\"Hey, it's not a good time,\" I said, unable to focus on what my roommate was saying.\n\n\"Alright, but if we're going, we need to get costumes, so don't be all day,\" he finished.\n\nI couldn't be sure, but I could have sworn my hair hand grown out another inch. What the hell was happening to me.\n\nDespite having already slept for an entire day, I still felt exhausted. In no time I found myself curled up in the fetal position under my covers, trying to figure out what was happening.\n\nTom ended up going to the party without me.\n\n*** *** ***\n\nI was only able to sleep in fits. Day turned to night, and then back into day as I clung to my curled-up form, sweating from the aches in my body and suffering through the return of my nausea. It wasn't until Monday night that I began to feel even remotely okay again.\n\nTom was working an over night shift at his office, managing any overseas call that they might get, so I had the apartment to myself. I could immediately tell that whatever had been going on with my body hadn't gone away.\n\nIn the bathroom, I examined myself again, and I was right. The first thing I noticed was my hair; it was down to my shoulders now. And my nipples had gone well past puffy. They were most noticeably breasts. Small breasts, sure (no more than an A cup), but breasts all the same. I hesitated to look, but my cock had shrunk more... much more.\n\nI knew what was happening to me, but it was impossible. I was turning into a girl. And I was sure that girl...that crossdresser...whatever, had something to do with it.\n\n*** *** ***\n\nIt was late in the evening, and I felt ridiculous in my baggy hoodie and jeans. The jacket helped to conceal my budding breasts, and was actually quite comfortable in the cool air, but the jeans were awkwardly tight. My waist had gotten smaller, but my hips had somehow widened. I had briefly been considering sweatpants when I finally got them up.\n\nI made sure to keep my hoodie in place, and my head down, as I made my way through the crowded fair grounds. The last thing I wanted was for someone to see me like this. The sounds of merriment and excitement made a stark contrast to my own mood. I couldn't decide if I was more scared, or angry.\n\nI tried not to think of what I was doing. It was bat shit bonkers to even consider that this girl was the one responsible for what was happening, but I was freaking out bad and needed something, anything that would tell me what was going on.\n\nAt the end of the main concourse, I slipped in between two of the erected tents and through to the sectioned off area that the carnival crews used. I had no way of knowing if she would be here, but I had to start looking somewhere, and she had said that she spent most of her time away from the crowds.\n\nI went through my perfectly rehearsed speech one more time as I tried to look for any sign of where I might find her, but the moment my eyes landed on her, I forgot it all.\n\n\"What did you do to me?\" I demanded, even knowing the impossibility of it all. How could I be turning into a girl? \"Change me back!\" I shouted, an edge of panic creeping into my voice.\n\n\"What? You don't like it?\" she smirked, standing up from the same picnic table I'd had her on only a few nights earlier. \"I thought this one up just for you. You see, it's special.\"\n\n\"You thought what up?\" I asked carefully.\n\n\"This little curse.\" Her smile deepened. \"And it's a fun one, if I say so myself!\" she laughed.\n\n\"Change me back!\" I said angrily, taking a step forward. I knew there were no such thing as curses, but my sore swelling breasts, and shrinking cock were enough to make me want to believe in anything.\n\n\"If you come any closer, I'll make it permanent,\" she threatened, halting me in my tracks.\n\n\"Permanent?\"\n\n\"Right now, this is all only temporary,\" she said easily. \"The mark I placed on you changes your body, but eventually the curse will run its course. When the mark fades you will begin to change back. Or I could lock you inside of your pretty new body,\" she offered sweetly. \"I have a feeling you would make an exceptional girl.\"\n\n\"Why are you doing this to me?\" I asked, hanging my head in defeat.\n\n\"Do you really have to ask? You are cruel and close minded. Now you'll get the chance to walk a mile in my shoes...well, maybe a bit more than a mile.\"\n\n\"What does that mean?\" I asked cautiously.\n\n\"Telling would be cheating,\" she said, flashing another smirk. \"Let's just say you'll have a deeper understanding of the fairer sex by the time this is over.\"\n\n\"I...I'm sorry,\" I said, hoping desperately that somehow an apology would be enough to satiate her.\n\n\"I don't believe you,\" she shook her head slightly. \"Not yet anyway. But for the words themselves, I will leave you with this, the only way out...is through.\"\n\nThe only way out was through. It stuck in my mind, but I didn't understand why she said it. She'd already told me as much. The curse couldn't be broken early. It would only end when it had 'run its course.'\n\nI had wasted zero time getting back to my car. I couldn't even think of what possessed me to confront her in the first place. I had planned everything so perfectly too. I was supposed to have started off with an apology and work my way up to asking her to change me back. My plan had been subtle, nuanced even, and I threw a brick through the whole thing the moment I saw her sitting there.\n\nMy hand trembled on the steering wheel as I drove back towards my apartment across town. I believed Mira when she said she could make it permanent. I wasn't sure if I should have been relieved or not. I still had no idea when any of this would end.\n\nMy job was fairly accommodating when it came to working from home, and I barely had any family (just a sister across the country, and an uncle I'd never met), but I still had a life to get back to. I tried hard to be grateful that I would turn back eventually, but it was hard, seeing as I would be stuck like this until then.",
        "I got back to my apartment and made a beeline for my room. I was already struggling with the button and zipper on my pants as I came down the hall. Once inside my room I had to claw at the fabric to get it past my hips and down my thighs. I ditched the hoodie as well while I was at it. It was pretty thick, and stifling indoors.\n\nTaking advantage of having the apartment to myself, I took a shower for the first time in days. It felt weird, feeling the water running down my breasts to drip off the ends of my nipples. I didn't know when it had happened, but all of my body hair had fallen out. Every hair below my chin was gone, leaving my skin overly sensitive. The water itself even felt more erotic as is slid down my silky-smooth body. It began to stir some thoughts, and I panicked, shutting off the water quickly and hopping out. Nothing about this should feel good.\n\nI dried myself quickly and slipped back into my boxers before grabbing my t-shirt to head back to my room. I was barely into the hall when I nearly collided with my roommate, Tom.\n\n\"Oh shit!\" Tom said, startled. \"My bad, I didn't know Quin had anyone over.\"\n\nFrozen, I held the shirt to my chest, trying to cover my budding breasts. Our eyes were locked together as I failed to move. Tom was supposed to be at work until 7am. He'd told me so. He stared, waiting for me to say something back, but I couldn't. In that time, I watched the subtle changes in his eyes. First he was amused, then curious. Only a moment later, his eyes narrowed, and I saw the moment that he began to recognize something in me.\n\n\"Quin?\" he finally said disbelieving. My head falling in shame was enough to confirm his suspicions.\n\n\"You had work,\" I said in a daze.\n\n\"It got canceled,\" he said, looking me over once more. \"What the hell man? You're...You're a fucking chick!\"\n\nIt was terrifying having anyone see me like this, but at the same time, it was a relief to finally have someone to talk to. I had been trapped, alone in my room while my entire life was upended, with nothing but my thoughts. Words began spilling out of my mouth and I told him about the girl at the fair.\n\n\"You hooked up with a gypsy chick?\" he asked.\n\n\"How the hell should I know if she was a gypsy?\" I asked, shifting my feet slightly. \"All I know is that she did this to me.\"\n\n\"But she said that it's only temporary, right?\" Tom asked, making sure he had heard me correctly.\n\n\"That's what she said,\" I sighed, finally abandoning the hall to sit on the edge of my bed. \"but I don't know. She mentioned something about the curse 'running it's course', and she also said something else.\" I paused trying to remember how she had said it. \"The only way out is through.\"\n\nI paused, waiting to see if Tom had anything to say about that, but he was quiet. I stared blankly at the wall for a moment before I glanced back to him. His eyes were glued to my body. I had forgotten about my state of undress, and my small breasts were now on full display.\n\n\"Tom!\" I said, snapping my hands up to cover myself again.\n\nI quickly turned away from him and finally pulled on the white t-shirt I'd been holding in my hands. The fabric stretched a little tighter around my chest, and it rode up slightly around my waist.\n\n\"Sorry dude,\" Tom blushed. \"If it makes a difference, she did a really good job.\"\n\n\"No, it doesn't make a difference, Tom. But thank you for that. That makes me feel so much better.\" I said in irritation.\n\n\"I think you're looking at this all wrong, dude,\" he offered. \"It's temporary!\"\n\n\"That doesn't stop me from being a fucking girl right-the-fuck-now!\" I said.\n\n\"I guess it doesn't, but haven't you ever wondered how the other half lives?\" Tom asked.\n\n\"No,\" I said quickly.\n\n\"Liar.\" He laughed. \"Every guy who has ever lived has considered what it might be like if he were a girl, even if it was only for a day. I'm man enough to admit it. I mean, have you seen how easy girls have it these days? One little smile, and a short skirt, and we give them everything they want.\"\n\n\"Not gonna happen Tom.\"\n\n\"Hey, I'm just trying to help,\" he said throwing up his hands in surrender.\n\nSeeing that it wasn't likely that I would soon see the upside to all of this, Tom left me to my thoughts, courteously shutting my bedroom door behind him as he went. As much as I wished I could blame my mood solely on my current situation, some of what Tom had said had hit home a little too hard.\n\nI could remember being younger and wondering what it would be like to be a girl. More than that, I had thought about what it might feel like to be a girl...sexually. It had been so long ago, the memory was nearly all forgotten, but I could still remember some parts I wish I could now forget.\n\nI hadn't even considered it to be gay at the time. It was all \"What If's\", and in the scenario I was the girl after all, but now...this was totally gay. I couldn't even convince myself otherwise, and all I wanted to do was run terrified in the other direction. A small part of my mind still prayed for all of this to be a bad dream, but the majority of my mind already knew better. This was real, and it was happening to me. I could literally feel my breasts growing, the taught skin stretching as they slowly swelled beneath my t-shirt. Worse, I could feel changes happening inside of me. I had been trying to block it out, but it was becoming more and more difficult. The more my body changed, the more my mind and hormones fought to follow.\n\nI still couldn't stop thinking about the way Tom had stared so openly at my body, and my hands itched to touch myself. The longer I resisted, the stronger those feelings came. My thighs rubbed together in a desperate attempt to satiate myself, but it wasn't enough.\n\nMy entire body felt aflame and alive.\n\nI denied those feelings, but there was only so much I could do. The longer I fought among the ebbs and flows of pleasure, the more my resolve crumbled, until finally, I had no control over myself, only the deep need of release.\n\nA hand slipped into my boxers to find my cock. Despite my arousal, it was small and flaccid. Still, my touch sent jolts of pleasure cascading out to the rest of my body. I tried in earnest to get myself hard enough to jerk off, but it was useless. No matter how much effort I put in, nothing was happening, and frustration was beginning to set in.\n\nI sat up in a huff and pulled my hand free. Desperate, I peered around for anything that could help. I didn't know what I was looking for. I still hadn't even slowed down to think about what I was doing. Grabbing my pillow, I climbed up to the center of my bed and quickly kicked off my boxers before mounting it.\n\nLeaning forward slightly, I made sure my limp cock was pressed against the soft fabric and then I began grinding myself against it. The sensations were thrilling, causing me to move my hips faster. I'd never felt anything so wonderful. A tingling warmth filled my body and the pleasure swelled with every bucking thrust of my hips.\n\nI had to bite my lip to keep myself from crying out my pleasure, but I never slowed. I couldn't. This wasn't something I wanted; it was something I needed. Beneath the pleasure was a hunger, and a knowledge that if it wasn't fulfilled, I would cease to exist. It was irrational, but in that moment, it was truth.\n\nI rode my pillow harder, tasting blood from the inside of my lip as I raced headlong toward climax. Lifting up my shirt, I held it under my chin as I squeezed my breasts with both hands. My hard nipples stood proudly, and I pinched them, fighting back another squeal of delight.\n\nIt was then that I felt it, a falling sensation like the wind being let from my lungs. Then it happened again, and again. Mixed with the jolts of electric pleasure flashing throughout my body. I gasped as I rode my pillow, trying to catch my breath, or reach my release before I passed out.\n\nDesperate, I moved my hips faster, pressing my tiny little cock harder into the soft fabric as I pinched my nipples viciously. Finally, my entire body tensed and the bubble of pleasurable warmth inside of me burst.\n\nI collapsed onto my bed as my body trembled in ecstasy. Delirium engulfed me as I tried to cling to the pure happiness drowning my mind.\n\nI couldn't say how long I laid there basking in the afterglow. Once my ability to think returned, I immediately felt guilt, which was stupid. All I had done was masturbate. I'd done it a thousand times before, but this time felt different, almost like I'd masturbated as a girl. I tried to shake that off, but it wasn't like I could call what I had done manly. I was afraid of what possessed me to do that. Worse, I was terrified of the things I'd felt. I was no stranger to sex, or masturbation, but I had never experienced something as powerful or as profound. I wanted more...so much more. I could feel my body trying to ramp up for another go, but I was exhausted, and for now, I was able to push back those thoughts in favor of more sleep.\n\n*** *** ***\n\nI woke to more of the same changes; longer hair, slightly larger breasts, and I was sure that I'd put more weight on around my hips and thighs. I didn't even dare check my penis. That was one minefield I would try to avoid for as long as possible. I just prayed that when it was all over, I got back every single inch.\n\nI laid about in bed for a while most of the day until Tom got home from work around his lunch hour and he knocked on my door.\n\n\"How's everything going in there, Quin,\" he asked, cracking the door to check on me.\n\n\"Worse,\" I informed him.\n\n\"What happened?\" he asked. \"You didn't get your period, did you?\"\n\n\"I don't have a vagina, dick!\" I said, throwing a pillow at him.\n\n\"Sheesh, just checking.\" He shrugged.\n\n\"I mean, I'm still changing,\" I clarified. \"Boobs are bigger. Hair is getting longer still. That tattoo is still there, just as fresh looking as ever.\"\n\n\"So once the tattoo is gone, you just, what...poof, turn back to a dude?\" he asked.\n\n\"I don't know how it works,\" I sighed. \"I guess I'll just slowly change back.\"\n\n\"This shit is crazy, man.\" He brushed his hair out of his face. \"If I wasn't seeing it, I would never have believed it.\"\n\n\"Try living it,\" I shot back.\n\nSilence lingered as Tom leaned against my door for a minute. He was just about to turn and leave when he stopped himself.\n\n\"You know, you don't have to stay all shut up in your room, right?\" he asked. \"I get why you were hiding out before, but I know now. The big reveal is over. It's not like I'm going to find out about it all over again, for the first time.\"\n\nHe waited for a few moments for me to make some sort of response, but I didn't say anything.\n\n\"Well, I downloaded the old Street Fighter we used to play in high school,\" he said. \"I figured we could knock out some matches before I have to head back into work.\"\n\nWith that, he gave my door jamb a little pat and disappeared back down the hall.\n\nHe was right, like he usually was. The cat was out of the bag. There was no longer any need to hide away. I found it so hard to believe that he was taking all of this so well. I had heard him make disparaging comments about gay people and crossdressers before as well. When everything first started, I could just see my best friend saying those things to me, and it hurt. Having him fully in my corner was something that I would never have hoped for, but was glad that I'd found.\n\nNot feeling comfortable going out to the living room in my boxers, I pulled on some sweatpants and a clean t-shirt. When I sat down on the couch next to Tom, he was already engrossed in a match against the computer, so I picked up the spare controller and waited for him to finish.\n\n\"Getting all comfy?\" he asked, noting my relaxed look.\n\n\"My pants don't fit anymore,\" I said.\n\n\"What? Really?\" he asked, casting a quick glance at me before returning his attention back to the game. \"It doesn't look like you've put on any weight.\"\n\n\"It's my hips,\" I said. \"My waist got smaller, but the hips keep getting wider.\"\n\n\"Why don't you go shopping?\" he asked as he executed a perfect super to finish of the enemy AI.\n\n\"I don't want to leave the house,\" I mumbled.\n\n\"Eh, I get that.\" He shrugged, starting up a new match against me this time.\n\nWe played for about twenty minutes, completely focused in on the game before he finally set down his controller in defeat. He might have been good, but I'd been kicking his ass at this game for years. Hell, I taught him half the super combos.\n\n\"I've been thinking about what that girl said...Mira,\" Tom said, pausing a moment to choose his words carefully. \"She said that 'the only way out was through?' Does that mean that the curse is over when it's over, or...\" he paused.\n\n\"What?\" I asked.\n\n\"Do you think she meant it as, the only way you will stop being a girl is by going through all those girl things?\" he asked.\n\nI was quiet as I contemplated what he was saying. It made a sick sense, but I wasn't ready to accept that. It was hard enough sitting on the couch next to my best friend like this, let alone actually trying to be a girl. I shivered a little thinking about it.\n\n\"It was just a thought,\" he said, getting to his feet. \"I've got to get back to the office. Try not to stay cooped up in your room while I'm gone.\"\n\n\"Hey, Tom.\" I stopped him before he could get out the front door. \"Do you think you can pick me up some clothes? I kind of don't want to be stuck in sweats all the time.\"\n\n\"Sure thing.\" He nodded. \"I can swing by the shops on my way back home from work.\"\n\n\"Thanks,\" I said as he was closing the door. \"I'll text you my size.\"\n\nAfter he left, I sat on the couch for another hour mashing buttons and destroying virtual enemies, but I found myself losing interest. All I could think about were the agonizing seconds that were passing me by. They dragged by so slowly. How was this ever going to end if time seemed to be at a crawl. Its agonizing pace forced me to feel the woman that I was becoming all that more keenly.\n\nSetting the controller aside, I found myself trudging back to my room and falling into bed before pulling my comforter completely over me. I didn't sleep though, I couldn't, not with everything racing through my head right now. But it did feel better, hiding away from the real world, under my covers like a simple child.\n\nWhy would someone do this to another person?\n\nSeveral hours later I heard the front door open, announcing Tom's return, but I didn't budge. I listened to him close the door and toss his keys into the glass bowl on the counter before walking through the living room and down the hall to my room, right outside.\n\n\"Hey, Quin?\" he called. \"You awake?\"\n\nI took a moment to consider my response before finally calling back. \"Yeah, I'm up,\" I said, pulling the comforter back, exposing me to the light once again.\n\nHe cracked the door for a moment to make sure I was decent before coming inside. He held several shopping bags in his hands and seemed to be in a much better mood than I was.\n\n\"Alright!\" Tom said excitedly, holding out one of the bags to me where I sat up in bed. \"I tried not to go too crazy, but there was a lot to choose from,\" he explained.\n\nTaking the first shopping bag with a logo I didn't recognize, I peered inside.\n\n\"Girls' clothes?\" I asked, pulling out a black skirt from the first bag. \"And a fucking thong?\" I added incredulously, spotting the bright pink. \"Are you kidding me?\" I said, tossing the bag across the room angrily.\n\n\"Dude!\" Tom exclaimed. \"You said to get you clothes!\"\n\n\"Yeah, some regular fucking clothes that fit!\" I fumed.\n\n\"Well I'm sorry. They didn't have a 'Guys with Tits' section,\" he shot back, quickly becoming angry.\n\n\"Jesus Christ, just get the fuck out!\" I said in disgust.\n\n\"Ungrateful...\" I heard him mumble as he threw the rest of the bags across the room to land with the other one.\n\nI missed the rest of what he said as he walked away, slamming the door to his room, but he was right. I was being ungrateful. I knew he was just trying to help, and that he certainly didn't intend to upset me, but right then, it just felt like he was rubbing it in. That was just my hormones going crazy, I was sure.\n\nOf course, I was going to need girls' clothing. I couldn't even catch a glimpse of the man I used to be when I looked in the mirror any longer. Still, a skirt and a thong? Pants would have been better, especially with the weather starting to turn.\n\nI looked at the hot pink thong in my hand. It was the kind of thing I would have bought for a girl I wanted to bang. What was Tom even thinking? Did he just rush through the women's department grabbing the first things he saw so he could get out of there?\n\nSighing, I got up to look in the other bags.\n\nThere was more of the same. A couple more skirts, some tops, and a bunch of underwear; thankfully not all thongs. There was however a nice-looking pair of jeans folded up and hidden at the bottom of one of the bags, to my grateful surprise.\n\nI tried my best to avoid the panties all together. In my mind, somehow that was going too far. The only problem was my boxers bunched underneath the tight denim pants, and the thick seams were decidedly uncomfortable against my naked parts. After sitting and considering the undergarment pile for a long while, I finally caved and grabbed the least offending one. It was a pair of simple cotton panties with a blue trim.\n\nI shuddered as I slid them up my legs. My skin felt so smooth to the touch, and the panties sliding across my skin only accentuated their bareness. I tried not to let my depression swallow me as I watched my abnormally small cock disappear rather convincingly beneath the fabric. They sat snug against my crotch, leaving only a small bulge that could have easily been mistaken for an exceptionally pronounced labia.\n\nThere was a surprising amount of arousal filling me as the panties settled into place. The soft cotton felt wonderful against my privates, and the way they hugged my bottom...it felt like there was someone holding my ass in their hands.\n\nIgnoring it as much as I could, I pulled back on the jeans. They were snug, affording the same sensation to my ass that the underwear had, but all along my legs as well. As for the top, I chose a t-shirt from one of the bags at random.\n\nI felt nervous again, as I stood there looking at my reflection in the small mirror on my nightstand. The next obvious step would be to finally leave my room, but I was hesitating. I didn't know why though. It wasn't as if Tom didn't already know. Hell, he'd seen well enough. I guess it was the clothing that was stopping me. It felt like I was...giving in, like I was taking one small step that I would never be able to take back.\n\nI shook off that feeling. They were just clothes. Everybody wore them, and they were all made out of the same things. I was not giving in, I needed them. Actually, it felt really nice to be in real clothes again after spending so much time in my sweats.\n\nBrushing my long bangs behind my ear, I took a calming breath and opened my door.\n\nTom was sitting on the couch smashing the buttons on his controller while he played the remastered Street Fighter. He caught me from the corner of his eye and did a double take before setting aside his controller.\n\n\"Hey...listen,\" I began. \"I'm sorry about snapping at you. And thanks for getting this stuff for me. I don't exactly feel like I can leave the house right now.\"\n\nHe just stared at me for a moment. It took me a few seconds to realize his eyes were glued to my chest. A quick glance down showed me exactly what he was seeing. The cool air from the AC in the living room had hardened my nipples. It didn't help that my cartoon unicorn shirt was white, easily showing my dark nipples through the fabric.",
        "I quickly crossed my arms over my chest. \"There wasn't a bra in there,\" I said sheepishly trying to avoid looking at him.\n\n\"Yeah...I don't even know where to start with those things,\" he confessed, pulling his eyes from my chest. \"I tried to do the best I could with everything else though. I figured I should just give you some options and let you figure it out. I kept all the receipts too, so you can return anything you don't want to keep.\"\n\n\"Thanks,\" I said, taking a seat on the couch next to him and picking up the spare controller. \"So, do you think this will be enough?\" I asked after we began a match. \"I just have to live like a girl for a little bit and then it's over?\"\n\n\"I honestly don't know,\" he said as he hit me with a flurry of attacks, forcing me to retreat. \"Did that chick say anything else?\"\n\n\"No.\"\n\n\"From what you said, it sounds like she wants you to see how the other half live. So, maybe go out and get a pedicure. Buy a gym membership you will never use. Oh, I know!\" he exclaimed, sitting up in his seat as he fought to block my attack. \"Get a pumpkin spice mocha frap double whip nonfat latte. Girls go crazy for that shit.\"\n\n\"Somehow, I don't see how buying an overpriced coffee will get me out of this one,\" I said. \"She was pretty upset.\"\n\nTom nodded his agreement and we played through a few matches, mostly trash talking, before he brought up the curse again. \"And she did all of this because you wouldn't go down on her?\" he asked, a little disbelieving.\n\n\"Yeah,\" I lied. The last thing I wanted Tom to know was that I'd gotten a fistful of girl cock.\n\n\"Women,\" he said, shaking his head.\n\nI did want to go back there, to get more answers from her, but I was afraid. If she could do this to me, I didn't want to know what else she could do, and going back there seemed like a sure fire way to piss her off and find out.\n\nThe clothing I was wearing felt strange, especially the underwear, but the longer I sat there playing video games, the less I noticed it. Something I didn't fail to notice was Tom. His eyes kept stealing glances at my chest. I itched to cover myself, but I tried to be more of a man about it. My chest was not a big deal. I didn't mind if people looked at it. Still, I quickly began feeling things I didn't want to.\n\nEventually, it all became too much, and I excused myself for the night, claiming fatigue from the changes. In reality, I couldn't stand it any longer. As soon as my bedroom door closed behind me, I ripped off my shirt, and began frantically trying to peel off my tight jeans.\n\nNot even bothering with my panties, I climbed onto my bed and mounted my pillow. I was so fucking horny; I was afraid of what I might have let myself do if I hadn't left the living room. I knew Tom couldn't help it\u2014this was all so fucked up and weird\u2014he was just curious. But me, my libido was supercharged, as was evident by the grinding gyrations I was making on a pillow.\n\nIt was disturbing, but I was sure I had figured it out. I had been worried that I was turning into a fag or something, but I was sure it was the curse. That girl had made drastic changes to my physical body, who was to say that she couldn't have made changes to my hormones as well? That was how I now rationalized my actions, humping my tiny little cock onto my soft pillow while I fought back my girlish moans.\n\nAll I had to do was cum, and then all of those unwanted thoughts would go away. My hips began moving faster. My mind raced for something more, something that would push me quicker towards the edge. My entire spank bank that I had meticulously cultivated since puberty was of no use. Threesome's with cheerleaders were not even making a blip on the scale. When I slipped this far under my girl libido, only one thing did it for me. I shut my eyes and thought about him.\n\nHe didn't have a face, but he had a hard body and chiseled abs, and there was a definite bulge in his pants. I licked my lips as I pinched my nipple. I was on my knees, and his bulge was right in front of me. I could smell his manly musk. I unzipped his pants, pulling them down, and then I began to fish out his massive cock. It was so hard, bobbing right in front of my face. I could feel the warmth of it radiating on my lips, millimeters away. My lips parted, and a quiet, desperate moan escaped as my mouth closed around the swollen tip of his cock.\n\nI came.\n\nMy body convulsed, and I bit the side of my hand to keep myself from crying out my pleasure. I trembled and quaked, and cum filled the inside of my panties as I collapse face first on my bed.\n\nI was right. Once my climax faded away, all of those feelings that had filled me to bursting had vanished, once again leaving me disgusted with the thoughts I'd let myself have. I was ashamed to have masturbated like that again. Either way I tried to slice it, there was no way I could convince myself that that was an acceptable way for a guy to get himself off.\n\nBut you're not a guy, are you? Not right now at least.\n\nThat little voice was scary, and I'd been hearing its whispers more and more loudly in my head lately.\n\nI just wanted all of this over with. I wanted to be me again. I wanted to be me again as quickly as possible. Small things were starting to become normal for me, and I feared what else might become normal by the time the curse had run its course.\n\nMaybe Tom was right, maybe I needed to turn into the skid a little if I wanted this to all be over quicker.\n\nPeeling off my cum drenched panties and sweat soaked t-shirt, I discarded them in the corner before shutting out my light and crawling naked under the soft covers.\n\nMaybe I would get a pedicure or something tomorrow.\n\n*** *** ***\n\n\"Shhh!\" I let out an involuntary noise as I felt my tender breasts in the bathroom mirror. This was the most they'd hurt since they'd begun growing, and If what I was seeing was real, the pain came at a very good reason. In the night, my little breasts had nearly doubled in size. A budding A cup had easily turned into a healthy B. Well, easily might have been a stretch, no pun intended.\n\nI was sure they would burst at the first touch, or crack and bleed at the very least. Even the weight of my shirt irritated my nipples.\n\nHowever they felt, they looked incredible. They were full and round, sitting perfectly on my chest, my dark nipples appearing like delicious treats just waiting to be sucked. I felt a flutter in my belly, and a tingling lower whenever I took a moment to stop and admire them. They were the breasts that I wished every girl had, and they were on me, making me look...I was gorgeous.\n\nThat was a shock. It was the first time I admitted how attractive I was becoming as a girl. I quickly tried to shake it off and forget it, but I paused, and found myself looking closer. Not just at the parts of me that were changing, but at myself as a whole.\n\nMy long blonde hair was thick and full, and almost long enough to reach my nipples now. My waist was slim, letting my hips flair out enticingly. My legs appeared long and slender, and my butt was considerably larger, and pleasantly noticeable with how round and perky it was. I really was stunning. No wonder Tom couldn't stop himself from looking.\n\nMy tiny cock was well hidden away underneath my boxers, still smaller than the last time. My testicles had shrunk so small in the night that they had finally finished receding back into my pelvis. The only thing left that said I was a real boy was the little inch long nub that could have easily been a clit.\n\nI felt my anxiety kicking in, and I held onto the counter as I took deep breaths to calm myself. I couldn't see me anymore. All that was left in the mirror was the girl, and she looked so unbelievable, it was hard to see how my body would be able to change back from that. It was silly of course, if Mira's curse could change my body one way, it should easily be able to change it back the other way.\n\nOn the upside, I didn't see how much more I could change. That thought made me feel like I had hit a sort of milestone, which helped settle me back down.\n\nIf I had reached the end of my transformation, that could only mean that I was that much closer to all of this being over with. It was pathetic, I know, relying on the trust of the word of the person that had done this to me. I clung as hard as I could though. It would run its course...just as soon as I went through it.\n\nI suppressed another wince as I cupped my breasts again gently. They really were tender. I pulled a jar of coco butter with aloe from the medicine cabinet and carefully applied the cool cream to my tender skin. I spent several minutes slowly massaging the substance in, trying to ignore the feelings it was causing, playing with my breasts.\n\nThe cream worked wonderfully. Its soothing properties went to work quickly, easing my pain to almost nothing after only a few minutes.\n\nNervous about hurting myself, I took care putting my shirt back on. I thought about going back to my room and going back to sleep but rejected it. I'd spent a lot of time in bed the last several days. I didn't even think I could sleep if I tried anyway.\n\nInstead, I made my way down the hall and into the kitchen. I only planned to make a quick bowl of cereal, but as I was looking in the fridge for milk, I caught sight of the eggs and bacon.\n\n\"Wow!\" Tom exclaimed, looking at the spread I was preparing as he entered the kitchen an hour later. \"You're awake...and up!\"\n\n\"I couldn't sleep. And like you said, it's not like you don't know what's happening to me,\" I offered as I used a pair of tongs to move the bacon from the pan onto a plate with a paper towel ready to soak up the grease. \"I made some for you too,\" I said, grabbing the pan with the eggs and splitting it between two plates.\n\n\"Thanks,\" he said, taking a seat on one of the stools on the other side of the counter.\n\n\"What time do you have to be in the office?\" I asked.\n\n\"I'm off today,\" he explained, snagging two strips of hot bacon with his bare fingers and dropping them quickly onto his plate. \"They have the office party tomorrow, and they've been dumping a lot of time into it. We've barely been working at all these last two days. I figured, if there wasn't really a big need for me to be there, I could stay here and chill with you.\"\n\n\"Awe!\" I said, making a faux mushy sound. \"You wanted to stay and take care of me?\"\n\n\"Ha ha,\" he said flatly. \"I just figured we could hang out or something. You haven't been having the best time of it, so I thought we could make it a Fun Day.\"\n\nFun Days came from a time back in high school. Tom's parents were pretty strict, and if he got less than a C he would be grounded for a month until the next progress report. Whenever he bombed a class, and he knew he was going to be grounded, we would ditch class for the whole day and go to the mall, or an amusement park, or just out to the desert to spend all day riding our bikes. It had been a way to cram in as much fun as we could before his parents got his report card in the mail.\n\nOver the years, Fun Days had evolved, and now they popped up whenever one of us had an exceptionally bad day, or lost their job or the like. It had been nearly eight months since our last Fun Day.\n\n\"A Fun Day?\" I asked a little excited. \"Really? What did you have planned?\"\n\n\"I haven't really figured it out yet,\" he admitted. \"I just know we're due for one. You've been spending the last few days pouting, sulking around the apartment-\"\n\n\"I wasn't pouting,\" I argued.\n\n\"Yeah, you kind of have been,\" he nodded, biting into a piece of bacon. \"And don't take this the wrong way, but you're starting to look cute when you do it.\"\n\n\"Ass,\" I shot back.\n\n\"Yeah, you've got a nice one of those too,\" he joked, leaning playfully over the counter as if he was trying to get a better look at it in my boxer shorts.\n\n\"Like, gosh!\" I exclaimed, flipping my hair while affecting my best valley girl voice. \"You're such a guy! Like, in a few days, you'll be asking me to fuck you!\" I finished, unable to stop my own laughter.\n\nTom was laughing just as hard as I was. \"Maybe when your outie becomes an innie,\" he finally shot back.\n\n\"So, what do you think?\" I asked, leaning on the counter. \"All day videogame sesh? I can move my TV and console out here and we can do it up in style,\" I offered.\n\n\"Ehh.\" He tilted his head for a moment. \"Let's get out of the house. We can go to The District and day drink outside. We can get all day passes cheap at the big arcade they have there, and they are showing some old horror movies at the megaplex all week.\"\n\n\"I don't know,\" I said carefully. Tom was laying it on pretty thick, but I was reluctant to even leave my bedroom, let alone the apartment.\n\n\"Come on!\" he tried in earnest. \"You can't stay inside forever. And no one would even recognize you anyway. Hell, you could stand right in front of Mr. Sorenz, our landlord, and not only would he not recognize you, he would probably try to fuck you.\"\n\nI laughed slightly at that. Mr. Sorenz was a hopeless pervert. I could just see him casually adjusting his cock while he talked to me, trying to get me to look at it. He did shit like that with all the other girls in our complex.\n\nTom caught me looking nervously at the front door. \"I'll be right there with you, dude,\" he assured me. \"If you start freaking out, we can call it quits and come right back here to play video games.\"\n\nIn the end, Tom was more determined to get me out of the house than I was to stay inside. Truth be told, I was sick of being stuck inside. As much anxiety as I had about people seeing me looking like this, I desperately wanted fresh air and a chance to stretch my legs. Besides, he was right. There really was no way for someone to recognize me.\n\nAfter he finagled my agreement, I found myself back in my bedroom staring at the bags of clothing from the day before. I already knew I was going to wear the jeans from last night. All that was left was skirts, and a dress, and I wasn't ready for that.\n\nMy underwear situation was a little complicated. The simple cotton pair I'd found acceptable were dirty, leaving me scrutinizing a pile of lace panties, thongs, and other styles that looked just as sexy looking.\n\nI grabbed the black bikini-style pair. They seemed to contain the most fabric, with enough to cover most of my bottom. I was sure they were made out of satin, or something similar. They were silky soft and held a bit of a shine.\n\nI pulled them up my legs quickly, trying to avoid the arousal I was sure to experience when sliding them up my legs. Once they were in place, I adjusted the thin straps at my waist, and picked the wedgie out of my bottom before slipping into my snug jeans.\n\nAs soon as I pulled them up over my ass, the wedgie returned, and I took the time to fix it once again, but it was futile. I had noticed the little seam along the back as I was putting them on but was only now putting it together. If I wanted to wear these underwear, there was no way to avoid the feeling of that soft fabric riding up my crack.\n\nI was going to suffer. I already knew what my other options were, and only one of them wasn't a thong, but it did have cute little pink bows at the hips and centered in the back. Wedgie it was.\n\nI wasn't a big fan of the shirts that Tom had bought. It was all cutesy stuff, and I couldn't find it in me to pull on a hello kitty t-shirt. Instead, I opened my own closet, flipping through the shirts until I stopped on an old Rolling Stones shirt, black with the big mouth and tongue that I'd had since high school. It fit reasonably well, except for around my breasts. There it was stretched a bit. I was just glad that the shirt wasn't see through.\n\nTom was still watching TV in his boxers when I moved to the bathroom to do something with my hair. I didn't have much of an idea of what I was doing, but I started with a brush, and figured I'd see where it went from there. After ten minutes of brushing, I removed the tangles, and managed to create a cute look thanks to the natural wavy quality.\n\n\"Dude, I thought this was all your idea,\" I said, finally ready. Tom was still on the couch, working his way through one of the older Call of Duty campaigns.\n\n\"Just a sec,\" he said, finishing up the level quickly before pausing the game. \"Is that what you're wearing?\" he asked, looking me over curiously.\n\n\"What?\" I asked, looking down. I was sure I looked okay.\n\n\"You wore those pants yesterday,\" he said.\n\n\"Yeah, but it was just around the house.\"\n\n\"So, ketchup stains from home are okay now?\" he asked.\n\nSure enough, there was a glob of dried ketchup there on the outside of my thigh.\n\n\"Shit!\" I licked my thumb, trying in vain to rub it out. \"I don't have anything else.\"\n\n\"I bought you a bunch of stuff!\" he exclaimed.\n\n\"Okay, there is nothing there that I am willing to put on,\" I amended.\n\n\"Don't be a pussy,\" he shook his head, unpausing his game as he turned his attention away from me and back to the screen. \"Just go put something on so we can go already.\"\n\nI turned away from him and trudged back to my room. I already knew that none of my other pants would fit, but that didn't stop me from at least trying. While I fought to force my largest pair of pants over my ass and waist, I caught myself stealing glances at the bags lying next to my bed. Would it really be that bad? I spent another minute sullenly trying to make my ass fit into the pants before kicking them off in frustration.\n\nI sat on the edge of my bed, looking down at the bags, and sighed as I picked one up. It had a short black skirt inside that zipped up the side. Holding it up, I immediately dismissed them as an option. I wasn't even sure it would fit around my considerably larger bottom, let alone cover it. A pink, and then a white skirt followed as well. The pink was too short as well, and the white would have fit, but I didn't trust the length either. Funny enough, the only skirt that looked like it would fit and not show off my ass cheeks, was a dark red and green tartan skirt.\n\nMy heart thumped noticeably in my chest as I held it in my hands before me. I knew I was going to put it on; I had nothing else. I just wished that little piece of fabric didn't make me feel slutty...and excited.\n\nGulping, I stood up and stepped quickly into the skirt and pulled it up. With the two buttons on the hip undone, it pulled easily up and over my hips. My hand shook slightly as I fastened the buttons and let the skirt slip down to rest easily on my hips.\n\nI felt naked. Well, it was impossible to forget about the ultrasoft panties tickling my ass crack, but it felt like that was all I wore. I could feel the subtle shifts in the air causing a draft between my thighs, and the sensation was alarming. I had to fight hard to pull my attention away from what I was feeling long enough to grab the small mirror from my nightstand.\n\nI felt my teeth biting my lip nervously as I slowly moved the mirror around so I could see how my bottom half looked. The skirt definitely had more cloth, but it sat higher up on my hips, making it just as short as the others. Its placement seemed to give the illusion that my legs went on forever.\n\nI tried to tell myself that it wasn't that short, and it wasn't. I had seen girls wearing much shorter skirts in public. Hell, if I dated a girl wearing this skirt, I'd probably wish it was a couple inches shorter. I kept telling myself that over and over again until I began to believe it.\n\nThe only thing that kept me from ripping everything off and locking my bedroom door was the thought that I could buy much more acceptable clothing while we were out. I might even make Tom buy me something to cheer me up, and make up for having to wear this skirt.\n\nI stepped into my regular skate shoes, stomping my feet, before reluctantly leaving my room to find Tom still on the damn couch playing games.",
        "\"You gave me all that shit about getting ready, and you're still playing video games?\" I asked, irritated.\n\n\"I'm ready!\" he said, throwing down his controller and jumping to his feet. He was too, wearing a nice button up shirt with the sleeves rolled back, and a pair of nice jeans. The second his eyes landed on me he froze. \"Woah!\"\n\nI froze too as his eyes slowly traveled up my bare legs, pausing briefly on my skirt, before working their way up the rest of my body. His eyes darted away quickly after meeting mine, and I found myself blushing. I know he didn't mean it, but no one had ever looked at me like that before.\n\n\"I...uh. I'm ready,\" he said again, smoothing his shirt awkwardly, and making sure his pockets were tucked in.\n\nI watched him for a moment and caught him gulp nervously as he studiously tried to look only at my eyes.\n\n\"I want new clothes,\" I told him flatly. \"You're buying.\"\n\n\"We can do that.\" He nodded agreeably.\n\n\"And I'm not wearing this skirt all day,\" I told him firmly. \"As soon as I can get a decent pair of jeans, I'm chucking this in the trash.\"\n\n\"That's cool,\" he assured me, nodding some more.\n\n\"Good.\" I nodded back. \"You're driving.\"\n\nI didn't even wait to see if he would follow. I walked to the front door of our apartment and opened it. I paused for a split second before ripping off the band aid, marching right on out and down the hall. I was at the end of the hall, just taking the first steps down when I heard Tom closing our door and running to catch up behind me.\n\nMy skirt danced on my thighs teasingly as I quickly descended two flights of stairs before Tom caught me.\n\n\"You're in a hurry now?\" he asked.\n\nI didn't say anything. I was already sure I was making a mistake. Every stride I took, I could feel the soft fabric of my panties teasing my little asshole, and my skirt constantly kept bumping against my bottom lightly, almost teasingly. Mixed into it all, it felt like a balloon was swelling inside of my chest, expanding, but forcing all the air from my insides. Somehow that sensation left me feeling small and insignificant...vulnerable. I was afraid that if I stopped my feet now, I would find myself running back upstairs and locking the door behind me.\n\nTom hit the button for the locks just as I was reaching his bright blue Mustang, and I didn't even slow down, opening the door and hopping inside as quickly as I could.\n\nI jumped slightly as parts of my bare ass and thighs touched the cold leather seats, but after I settled, I closed the door and breathed a little sigh of relief. The limo tinted windows blocking out the bright light of late morning offered a sense of privacy that I was grateful for. Leaving my apartment had been much easier that I thought it would be, but with every step I took away from our door, the more my anxiety kicked in. My heart was throbbing, and there was a twinge of pain in my chest as I attempted to control my breathing.\n\nThe driver side door opened, and Tom climbed in. I quickly collected myself, hoping he hadn't seen me on the verge of a panic attack.\n\n\"So,\" he began, leaning forward slightly to place the keys in the ignition. \"Are you hungry? Do you want to get something to eat first?\"\n\n\"Clothes,\" I told him, clutching to the hem of my skirt, afraid that if I let go it would ride up.\n\nThe decent drive to The District passed quickly as I stared blankly out the passenger window watching the cars and buildings flick past. It was so quiet in the car; I could hear the low hum of the tires as they moved over the asphalt. Not even the radio played, leaving a thick awkwardness in the air around us.\n\nI had the feeling that I was letting Tom down. He'd taken a day off work to cheer me up, and it didn't seem to be working. He'd been nothing but a supportive friend throughout this whole thing too. I didn't know a single other person living who would have accepted my situation so easily, and then try to make me feel better about it all.\n\nAs was customary on a weekday, the parking lots were nearly empty, allowing for Tom to find an open space right up front outside of Lucky's, a massive two-story arcade. The car came to a stop and Tom hopped out quickly, but I hesitated. There wasn't another sole that I could see outside of the car, but I still couldn't move. My mind kept flashing back to, what if someone saw me. With how I looked, Tom was right, it was a ridiculous thought.\n\nTom saw my hesitation and came around to my side of the car and opened the door for me.\n\n\"It's going to be fine, man,\" he assured me as he offered me his hand. \"It'll be fun, I promise.\"\n\nHe seemed so sure, and oddly hopeful, as he stood there with his hand held out to me. He seemed really invested in being a good friend, and I couldn't let him down. I took his hand, and using my other to hold my skirt down, I climbed out.\n\nAs soon as I was out, I immediately moved to make sure my ass wasn't hanging out of my skirt. Tom just waited while I dragged my feet for a moment before finally shutting the door to the car. Only after I began walking towards the main entrance to The District, did he follow.\n\nThe District was a large collection of shops, much like a mall, but everything was outside. It was a slightly upscale place to shop and hang out, and a popular place with the younger crowd. With all the options available, you could spend all day in The District, and never find yourself bored.\n\n\"I know you said you wanted some clothes first, but it's almost noon,\" Tom explained. \"Do you mind if we stop in Lucky's really fast. Those all-day passes for the arcade are only half price if we get them before noon. And I need to use their bathroom.\"\n\n\"Fine, but then pants,\" I said. I wasn't kidding about that. There were only a few people I could see walking the main concourse, but it felt like every eye there was watching me, waiting for me to drop something so I would bend over for them.\n\nAs soon as we stepped inside the arcade, Tom headed straight for the bathroom while I waited for him by the front desk where people bought their passes.\n\nI leaned against the counter as I waited for Tom to return, perusing the posters that held lists of all the new arcade games they had acquired recently, and all the competitions they were hosting in the coming days.\n\n\"Are you a Crossfire: Legion fan?\" someone behind the counter asked.\n\nHe was younger with short hair and a skinny face wearing a Lucky's employee polo. He was probably just out of high school or something.\n\n\"It's okay,\" I shrugged, still reading. \"I still think they got it right the first time with the original Crossfire. All that extra shit they keep piling on only clutters the game and makes it less about skill and strategy, and more about getting that lucky proc from your weapon ability that basically makes you go God Mode.\"\n\n\"Wow, you actually play!\" he said, surprised.\n\n\"Why wouldn't I?\" I asked, finally turning to him.\n\n\"Uh...because your hot,\" he said, his cheeks staining red.\n\nI found myself blushing too, not quite able to meet his eyes. He must have thought he was scoring some points, because his next words really made things awkward.\n\n\"Hey, uh, do you think you'd want to go out some time?\" he asked, trying to stand up straighter, more confident. \"I'm really good at the original Crossfire too.\"\n\n\"No offense kid, but I don't think you could handle this kind of girl,\" Tom said, returning at the most inopportune time, and causing me to blush further.\n\n\"And you are?\" the kid asked, eyeing Tom closely.\n\n\"Nope,\" Tom said easily, casting a friendly eye towards me. \"She's just a good friend.\"\n\n\"Can we get two all-day passes before the price goes up?\" I asked, changing the topic. I was beginning to feel increasingly uncomfortable with this kid trying to flirt with me.\n\n\"Two passes?\" he asked, looking around for a second for someone. Then with a little smile, he reached under the counter and retrieved two cards and quickly swiped them through a little device before sliding them over the counter towards me. \"These will cover all the games, even the premium ones on the second level.\" He smiled. \"There on me.\"\n\n\"Oh...uh, thanks,\" I said, taking the passes slowly. \"Are you sure?\" I asked.\n\n\"What are they going to do?\" he asked with a confident shrug. \"Fire me?\"\n\n\"Thanks, man,\" Tom said reaching out to bump his fist.\n\nI felt really weird taking the free passes, but Tom was right there to usher me deeper into the arcade, away from the kid, or anyone who might look onto our passes questioningly.\n\n\"What the hell was that?\" I asked, looking back over my shoulder.\n\n\"That was free shit!\" Tom said excitedly. \"You just got 'Hot-Girl-Free-Shit!'\"\n\n\"No!\" I protested, but Tom wasn't going to have it.\n\n\"That kid took one look at you and thought Yeah, I'd risk losing my job for her.\" He chuckled. \"I bet you he took one look at your chest and was ready to sign over a non-vital organ.\"\n\n\"What's wrong with my shirt?\" I asked looking down. I didn't need Tom to answer though, I remembered that I wasn't wearing a bra. The cool AC was keeping my nipples nice and hard, not to mention how freely my breasts moved under there. I tried crossing my arms, but it only made it worse, mashing my breasts together making them even more noticeable, if that could be possible.\n\n\"Yeah,\" Tom said, seeing the realization hit me. \"Do you want to hit up the snack bar with me?\" he asked. \"I'd love to get some free shit from there too,\" he joked.\n\n\"You're an ass.\" I laughed, pushing him playfully down the isle in front of me.\n\nWe worked our way through some favorites, even going head to head against each other in Tetris. We'd covered most of the games on the ground floor before I even remembered that I wanted to get out of my skirt. I'd nearly forgotten it completely, except for when I sat down and felt the cool plastic or vinal from a seat.\n\nI caught the kid from the front desk watching us periodically, along with a few other guys, but I was having too much fun to pay it much attention. It wasn't until we took a break for food that I decided that it was long past time to fix my clothing situation. It wasn't even my skirt that instigated it.\n\nWe were ordering nachos and chili fries from the snack bar when I noticed the two cashiers on staff blatantly staring at my tits. I'd noticed other people looking, but somehow this was worse. I'd gotten a little used to guys stealing a quick glance here or there, but it was the disgusting fashion in which they leered openly, licking their lips at me. Yuck.\n\n\"Can we take a break after this?\" I asked Tom. \"We really need to stop at one of those girl stores.\"\n\n\"Shit, I forgot about your pants!\" he apologized.\n\n\"We have more pressing matters,\" I said, casting a glance to the two cashiers who were taking turns leaning around the side wall by their registers so they could keep getting peeks at me. \"I need a bra.\"\n\n\"Yeah,\" Tom nodded, rubbing the stubble on his chin as he peered casually at my chest. \"Yeah, a bra might help.\"\n\nThere were any number of shops where I could have found a bra, but Tom insisted on Victoria Secret, claiming that he didn't want me to have to deal with a shitty bra. If he was going to buy me one, he wanted to make sure it was a good one.\n\nThings only became a little complicated when the sales attendant asked me what size I was.\n\n\"You don't know your size?\" she asked, looking at me.\n\nI understood her skepticism. What twenty something year old woman didn't have at least an idea of her bust size? Tom hid a smirk behind his hand as he watched the other girl pull out a tape measure and instructed me to hold my arms out. A minute later, I discovered that I was closer to a C cup than I was to a B.\n\n\"Is it wrong that I'm thinking of you going down on that girl?\" Tom asked quietly as the girl left us to our shopping. \"But no homo.\"\n\n\"She's cute.\" I shrugged, not even looking up from the rack I was flipping through.\n\nShe was actually quite attractive, but I'd been noticing that my interest in the looks of girls wasn't what it used to be. I had just chalked it up to my situation. I left Tom to his thoughts though. I knew he didn't mean anything by it. I was sure he didn't want to see me going down on the girl, just the image of myself that the world was currently seeing.\n\nThere were too many different types of bras to choose from. Some where so transparent, and hardly worth the name. Some didn't even have cups, only a band of cloth and wire that rested underneath to perk them up. I stuck to the normal looking ones, but I still had half a dozen designs in multiple sizes in my hands before I gave in and realized that I'd have to try them on eventually.\n\nTom waited outside on a plush red chair while I closed the dressing room door behind me. I peeled off my shirt and picked up the first bra and pulled it up to my breasts. It was soft and felt nice against my skin. My breasts seemed to sit easily in the cups, but try as hard as I could, I couldn't quite get the thing clasped behind me. I tried for several minutes before I finally gave up.\n\n\"Tom?\" I asked through a crack in the door.\n\n\"Yeah?\" he called back.\n\nI paused for a second. \"I need your help,\" I finally said.\n\nI felt Tom's hand pressing on the door from the other side, and I stepped back, keeping myself out of sight.\n\n\"What's wrong?\" he asked, taking in my state as I stood there with a light blue bra held to my chest protectively.\n\n\"I can't get the clasp,\" I said, turning away from him.\n\nIt only took him a moment to fasten the little hooks, and he was getting ready to leave again before I stopped him.\n\n\"Hey, I still need you to help me with the other ones,\" I said, turning back around as I situated my breasts and fiddled with the straps, trying to make it comfortable.\n\n\"Oh, okay,\" he said, his eyes seemingly fixed on my chest.\n\n\"Do you like it?\" I asked.\n\n\"Does me liking it really matter?\" he asked. \"You're the one that has to wear it.\"\n\nHe was right, and it felt like part of the bottom of the cups were pinching me. Reaching back, I unfastened it and let the bra slide right down my arms and off my breasts. I picked up the next one in line and slipped it onto my arms and turned back around for Tom to fasten it.\n\nI made sure to try on each bra, and I even sent Tom out for additional sizes just to be safe. Some of them were close, and one made my boobs look so funny that Tom and I fell into a fit of laughter, but the moment Tom fastened the clasps on a lacy black and tan demi cup, I knew we had found a winner. It didn't pinch, or chafe, or poke. It was incredibly soft, and hugged my body deliciously. I even took the opportunity to hop around a bit in front of the mirror to make sure it had enough support. It was perfect.\n\n\"This is the one.\" I smiled, turning to Tom. It felt great to have finally found a winner after so much work.\n\n\"It's nice.\" He observed from his spot on the little wooden bench.\n\n\"It feels good. It's soft.\" I smiled, looking back at it in the mirror. And it looked hot, but I kept that to myself. I didn't want Tom to think I was enjoying myself. I twisted a little, looking at it some more, and that's when I saw it, Toms hand rubbing slowly back and forth along the length of his engorged cock through the fabric of his jeans.\n\nI froze and my heartbeat quickened. This whole time, I'd been assuming that this was all just an uncontrollable response from him. That he couldn't help it. Seeing him rubbing himself while he watched me... it made me wonder if he was as uncomfortable about this whole thing as I was.\n\nI stared blankly into the mirror for several moments before I quickly snapped myself out of it. I grabbed my black Rolling Stones shirt and pulled it on over my new bra. As soon as my shirt was in place, I slid the latch and exited the dressing room. Tom was a little slow to follow me out, and I couldn't have blamed him. I was acutely familiar with the dynamics of hiding an erection from the world.\n\n\"Hey,\" I said to the salesgirl. \"I finally picked one. If it's okay, I'd like to wear it out.\"\n\n\"That's not a problem. I'll just need the tag,\" she informed me.\n\nReaching through the arm of my shirt, I yanked the tag off the bra and handed it to her just when Tom appeared beside me.\n\n\"That will be seventy-five dollars,\" she smiled.\n\nI almost choked, but Tom didn't even hesitate to hand over his card.\n\n\"Also, you can get the matching panties to these for only seven dollars more, if you'd like,\" she added.\n\n\"Oh really?\" Tom asked. \"Let's do that.\"\n\nThe lady smiled and asked us to wait a moment while she found a pair of panties in my size.\n\n\"What are you doing?\" I asked. \"I don't need any more panties!\"\n\n\"They're only seven bucks,\" he scoffed lightly, putting the argument out of his mind.\n\nShe returned and added the panties\u2014a thong of course\u2014to the bag, and rang us up.\n\n\"So, do you two have some plans for Halloween?\" she asked as Tom signed the receipt. \"We have a nice selection of Halloween choices.\" She said with a knowing smile. \"You could make it a special night for you and your boyfriend...\"\n\n\"I think we are all set.\" I blushed. She thought we were dating, and from the look she was giving Tom, she thought we just had sex in her dressing room!\n\nI took my bag and dipped my head as I exited the store.\n\nTom kept pace with me easily as I wandered down the concourse, glancing from shop to shop as I tried to figure out what I was feeling. I wanted to say something to Tom about what I saw, but I couldn't open my mouth. I didn't want to embarrass him.\n\nHe was my oldest friend. I knew he wasn't gay. The more I thought about my situation, the more I decided that this was going to be one of those things that I pretended I never saw. I would never speak of it, and as far as the two of us were concerned, it never happened.\n\n\"Did you want to play more games?\" I asked.\n\n\"I'm cool with that,\" he replied easily. \"You sure you don't want to do more shopping? You were dead set on a pair of pants earlier.\"\n\n\"I think I'm okay now,\" I said. \"You already spent a fortune on this bra.\"\n\n\"You're worth it,\" he said before stumbling. \"I mean...you're my best friend.\"\n\nWe headed back to the arcade, and I tried to put it all out of my mind, but I couldn't stop seeing it\u2014the outline of his cock extending down the leg of his pants. It looked huge. I didn't want to think about it, but it was all I could see. Well, that and the mental image of what his cock might look like without the thick denim in the way.\n\nIt was a thought I didn't want to have, but I could already feel my libido slowly inching skyward. If I wasn't careful, I would be useless soon. For the better part of the next two hours I focused solely on the game that was in front of me for the moment. It worked, but it was still a losing strategy. If there was a way to reverse these surges to my libido, I had yet to find one.\n\nI found myself sitting in one of the race car arcade games, clutching the steering wheel as I gasped for breath. Tom was just now crossing the finish line, and I was still slammed into the stack of tires that cushioned the second turn as I tried to calm myself.\n\n\"Hey, are you okay?\" Tom asked with genuine concern when he glanced over.\n\n\"Yeah,\" I said, my voice tight.\n\n\"Are you sure? You don't sound it.\" He got up and came around to my other side. \"Do you think this is something to do with...you know? Do you think she's doing this?\"\n\nI didn't know how to answer that. \"I think I just need to get to the apartment,\" I said.\n\nMy legs were weak as Tom helped me out of the seat and put his arm around me. He escorted me out of the arcade and into the parking lot where he helped me into his car and drove me home. The whole while I fought tooth and nail to keep myself from rubbing my tiny little cock until I came all over his leather seats. I couldn't even control my thighs as they rubbed together all on their own, demanding just a little touch, a little relief.",
        "As soon as we pulled into Toms parking spot, I jumped from the car and ran upstairs. After unlocking the front door, I dashed down the hall and into my room. I slammed my door shut, locking it before jumping onto my bed. I didn't even bother undressing. I grabbed my pillow and mounted it, bucking my hips violently as I rubbed my little nub across the soft material.\n\nI gasped and panted, and fought back my moans as I raced towards my climax.\n\n\"Quin!\" Toms voice called from the other side of my door. I didn't respond, and the handle jiggled, but I never slowed my motions. \"Quin, are you okay? I'm worried about you.\"\n\nI bit my lip hard, rubbing my hands up my bare thighs and over my body. Lightning struck, flashing through me quickly, and then again. A warmth inside of me swelled, expanding throughout my body from my center all the way out to the tips of my toes.\n\nThe bubble burst, and I cried out in ecstasy as I shook violently as a flow of cum filled my panties. My hips continued to buck wildly as I milked out every bit of pleasure I could.\n\nThere was a loud bang, and a crunch from behind me. Startled, I looked back to see Tom standing in my doorway. Part of my doorframe was cracked and splintering. Tom stood there just inside my room, his mouth moving, but nothing coming out at first.\n\nI couldn't react. My body was still riding the tail end of my climax and my legs were still visibly quaking as my cock finished spurting the last of my cum, and my abs were still convulsing as I came down.\n\n\"I thought you were,\" he gulped, taking in my predicament. \"You screamed. I thought you were hurt.\"\n\nWhen I could finally move again, I just put my head into my hands and cried. I sobbed like I was a small child again, and by the time my tears cleared, Tom was gone, and my door was closed as far as the broken frame would allow. Climbing off my pillow, I sat on the edge of the bed, running my fingers through my hair.\n\nI had tried so hard. Every time I tried to fight what was happening, I lost. I didn't want to feel these things, but they were so overwhelming that they wore me down or something. It didn't even phase me to think of myself as who I was now. When I closed my eyes and thought about myself, the image of the girl came to my mind far before the image of the man. I wasn't even sure if I could remember exactly what I had looked like before.\n\nAs hard as I fought what was happening to me, I'd fought even harder to hide it from the world...Tom most specifically. And now he'd just barged in on me fucking myself stupid on my pillow like some desperately horny schoolgirl.\n\nI sat there hating myself for a while before there was a light knock and Tom slowly pushed the door open.\n\n\"Is it okay now?\" he asked, peeking in carefully.\n\nI didn't respond, but after seeing that I was decent, he came in.\n\n\"Listen, I'm really sorry I walked in on you like that. That's none of my business. I just heard you screaming, and after you not feeling well...I thought...\"\n\n\"It's okay,\" I said, scrubbing my eyes.\n\nTom sat down beside me and was quiet for a while before he spoke again. All that...\" he began. \"Is that something she did to you too?\"\n\nI opened my mouth to lie, but I stopped. \"I don't know,\" I told him honestly. \"She changed what I looked like, but I feel things, things I've never felt before, and it scares me. Why did she do this to me?\"\n\nI started crying all over again, but this time it was soft weeping. Tom put his arm around me and held me, letting me rest my head on his shoulder while my tears flowed freely.\n\nThe truth was, I knew why she did it. I was a shitty person. She had tried several times to tell me the truth about her, but I didn't care about anything she had to say. I only saw her as a set of holes. And when I found out, I was a total jackass. Did I have to be okay with her having a dick? No, but I didn't have to be an asshole about it. I could have just apologized and walked away, but I had to make her feel bad for being who she was.\n\nI guess this is what she meant by a better understanding of the fairer sex. I did not know about the fairer sex, but I understood her more. Nothing about this life I was living was easy. For her to choose it, she must have wanted it badly...needed it even, to risk having to endure shitty people like myself.\n\nI wouldn't call it an epiphanous moment though. These thoughts had been slowly building for a couple of days now.\n\nAfter my tears ran out again, I sat for a while feeling my cum seeping through my panties and wetting my thighs, before I finally excused myself to the bathroom. After discarding my soiled underwear, I wiped myself clean with a rag and soap, and washed the tears from my face for good measure.\n\nWhen I exited, Tom was standing there, leaning against the hall next to my door.\n\n\"Better?\" he inquired.\n\n\"Yeah,\" I said, feeling embarrassed.\n\n\"I don't know about you, but I always get hungry after getting off,\" he offered. \"Pizza?\"\n\n\"I don't even know why we're friends,\" I said, giving him a hug.\n\n\"Just remember this in the inevitable future that you walk in on me,\" he said as he patted my back awkwardly.\n\n\"Oh, you masturbate like a girl too?\"\n\n\"Not yet...\" he joked, \"but I'm no stranger to a little choke and stroke when the mood hits.\"\n\nI couldn't help the full bellied laugh that escaped my mouth.\n\n\"I'll order the pizza\" He smiled, giving me a playful shove as he headed back toward the living room.\n\nAn hour later we were juggling our gaming controllers with slices of pizza, laughing at our horrible play.\n\n\"No, you've gotta do it like this!\" he instructed me, putting the end of the pizza into his mouth and letting it hang. Then he used his mouth and tongue to pull it inside bit by bit, allowing him to eat virtually hands free.\n\n\"You're such a pig,\" I laughed.\n\n\"Jealous?\" he quipped.\n\n\"Maybe a little,\" I said, taking another bite of my own pizza.\n\n\"So, has enough time passed yet for me to ask why you were doing it like that?\" he asked curiously after a few more matches had gone by.\n\nI blushed, but Tom had a way of making the most embarrassing things easier to talk about, and I didn't understand it, so I answered.\n\n\"She...changed things about me,\" I said, sure that my cheeks would catch fire if I blushed any further.\n\n\"I know that,\" he said wryly. \"Anyone who looks at you can see-\" he stopped, his eye widening. \"Did she give you a vagina!\"\n\n\"No!\" I said quickly, but Tom could tell that I wasn't telling everything. \"Some parts of me grew,\" I said, touching my hair and glancing down at my breasts. \"Other parts...got smaller,\" I continued, forcing the words out.\n\n\"How much smaller?\" he asked, shifting uncomfortably. Your cock miraculously shrinking was a fear every man could appreciate.\n\n\"Too small to do anything with,\" I sighed. \"When it happens, and I get...\"\n\n\"Horny?\" he offered.\n\n\"Excited,\" I said, choosing a slightly less loaded word. When I get excited, it can be pretty overwhelming until I take care of it. I tried stroking, but it just didn't work out. The only thing I found to get-\"\n\n\"Off?\"\n\n\"Past it,\" I said over him loudly. \"was to rub myself. The pillow just made it easier.\" I finished, avoiding eye contact.\n\n\"So, what exactly are we talking about here?\" Tom asked. \"A little smokey...a raisinette?\"\n\n\"It's pretty small,\" I confided.\n\n\"Can I see it?\" he asked after a moment.\n\n\"You want to see it?\" I asked, surprised.\n\n\"Well, yeah,\" he said, blushing. \"It's not every day someone's penis gets shrunken by magic. That's something to see.\"\n\n\"I can't believe your asking to see another man's cock right now.\" I joked, trying to get us back into the video game and away from this topic.\n\n\"Now that's not fair,\" he said. \"How many dicks have you seen in porn?\"\n\n\"Not the same,\" I countered.\n\n\"Those are dudes dicks?\" he said. \"When you watch porn, whether you want to or not, you are staring at another dudes dick. And your jerking off too,\" he added. \"How is this even close to that? I mean, this is basically a medical condition, really. I'm just thinking about you, bro,\" he offered.\n\nI knew he was full of shit, but he had a point, and he'd seen everything else already. Setting down my controller, I turned on the couch, pulling my feet up so I could face him. Then, very slowly, I leaned back against the armrest and spread my legs for him.\n\nToms eyes were fixed on the space between my thighs as they slowly parted for him. I let my red and green skirt slowly slide up, exposing more of my legs. The further my legs spread, the more I was certain Tom wasn't breathing any longer. A little further apart, I heard his sharp exhale of breath, and I glanced down to see my little cock sitting there all alone like an oversized nipple, or clit.\n\nI felt a sort of exhilaration as I watched his eyes glued to me. My heartbeat quickened and those feelings began to threaten to fill me. I hesitated for a moment, part of me wanting to be pulled under so completely again, before slowly closing my legs again and lowering my skirt. Tom's eyes held to my waist for a few more moments before he pulled himself back to his senses.\n\n\"You weren't joking when you said it was small,\" he said, then thinking quickly he added, \"I hope you got a receipt for your balls.\"\n\nI blushed. That was something that I still had not gotten over. I was so used to having my balls there, always resting between my thighs, constantly needing my attention to make sure I didn't accidentally hurt them, and now they were just gone. Well, not gone exactly, but very well hidden. My entire posture had changed now that I wasn't always making accommodations for them. Crossing my legs was a hell of a lot easier, and enjoyable.\n\nThat strange awkwardness never left us, but it was starting to become a constant when it came to me and my situation. We ate more pizza and played some video games for a few more hours before I called it a night. I felt a little tired, having such a big day after doing nothing for so long. I got back to my room, stripped bare, and crawled into bed, enjoying the feeling of my comforter wrapped around my naked body.\n\n*** *** ***\n\n\"Come with me,\" Tom insisted. \"I can't promise it will be fun, but it will be more fun with you there.\"\n\nIt was the next morning, and Tom was still trying to convince me to go to the Halloween party at his work later that night.\n\n\"I don't have a costume,\" I said, shrugging regretfully as I took a bite of my cereal. \"Sorry. Looks like you're on your own.\"\n\n\"Because you've checked, right?\" he asked, leaning on the counter across from me. \"You checked all the costume shops, and they didn't have anything?\"\n\n\"Yup,\" I said.\n\n\"I know for a fact that Victoria Secret has costumes,\" he offered. \"I can hop out and get you one of those,\" he threatened.\n\nI'd glanced at those costumes. They were essentially lingerie and different color sets of wings. As much as I would have like to see other women in them, I wasn't going to wear something like that in public.\n\n\"I think you should come,\" he insisted. \"We can get you a tasteful costume and have a fun night out. My bosses even sprung for entertainment.\" He was really laying it on thick now. \"And don't try that I don't want people to see me shit either. You did just fine yesterday until your...mishap.\"\n\n\"I'll think about it,\" I told him.\n\n\"Don't think too long, because you still have to get that costume.\"\n\nOut of curiosity, I pulled out my phone and began looking through the costume catalogues of a few shops around town. Most of it was just cheap stripper costumes\u2014slutty nurse, slutty cop, slutty Dorothy, slutty...everything. There were a few that I could see myself possibly wearing, but none that I could see myself actually buying.\n\nIt was getting closer to noon, and I was about to give up when I came across an actual costume shop. Instead of the cheap options available in every drug store and strip mall, these were made out of quality materials. It even stated that they were theater quality. After browsing through for a few minutes, I saw the one that I wanted.\n\nThe shop was only twenty minutes away, and I reserved my rental online before shouting to Tom that I would go with him just as I was swinging the front door closed behind me.\n\nWhen I arrived at the shop, my costume was already stowed in a garment bag by the front counter, waiting for me to pick it up. I just had to sign a copy of the receipt before I was good to go. Just as I was getting ready to leave, I saw another costume and paused, considering it. Not for me, but for Tom.\n\n\"Hey, Tom?\" I asked through my phone. \"What is your costume?\"\n\n\"I was just going to go as Spiderman again,\" he said. \"It still fits, so...\"\n\nHe'd been Spiderman the last three years running. He didn't like to spend money on a new costume every year, and it went over well with the ladies, showing off his muscles and bulge quite well.\n\n\"Not this time.\" I said, lifting the costume off the rack to look it over. \"What size are you?\"\n\nAnother fifteen minutes later and I was heading back home with both of our costumes. I felt like I was crossing genres, but it just felt right to me.\n\nEntering the apartment, I tossed one of the garment bags to Tom on the couch. \"Don't shave,\" I instructed, passing right on by, and going down the hall to my room.\n\nWhatever the curse had done to my body hair seem to be holding. My entire body was still silky smooth and hair free, but I had other things to take up my time getting ready. After a quick shower, I wrapped my hair in a towel and headed back to my room and opened one of the other bags I'd brought home. It was just a small makeup box, but I had a feeling nothing about this would be easy.\n\nIt wasn't. By the time I'd managed a simple look, my hair was completely dry. Just a little eye liner, some blush and light eye shadow, along with lipstick only slightly darker than my natural color. My arms were fatigued, but I was more than satisfied with how I looked. Now, I just needed to avoid fucking it up.\n\nWith my face out of the way, I returned to the bathroom to work on the hair. The lady at the store I picked up the makeup at recommended a flat iron, explaining that I could use it as a curling iron if I just twisted it as I pulled it along my hair.\n\nI read the instructions. Usually, I'm the kind of guy that just goes for it, but I figured this was the right time to exercise a little caution. When I finished reading, the iron was warm, and I went to work. As I pulled, I did as the clerk had suggested and twisted, and when I reached the end, that section of hair bounced back up like a spring. Satisfied, I sectioned off my hair, and went to work trying to duplicate that lazy wavy curl with the rest of my hair.\n\nMy fingertips were burned, and I had several scorch marks all over my head, but when I finally set down the flat iron, I looked stunning. My yellow blonde hair framed my face as it cascaded around my shoulders. The curls in the locks added volume to my hair giving it a perfect oomph I was looking for.\n\nI still had an hour until I needed to be ready, so I hid out from Tom in my room. I knew he would approve of my new look, but I didn't want to give away the surprise just yet. I wanted to see his face when I came out in my costume.\n\nI sat on my bed, careful not to touch my hair or face, and scrolled through my phone for a while until I finally gave up and opened the garment bag laid out beside me.\n\nThere wasn't very much inside, but it was plenty. It was an Amazon costume, complete with shoes, a skirt made of wide leather strips, and a top that seemed to be made up of several joined pieces of rabbits' fur.\n\nI started with the top, carefully avoiding my hair and face as I pulled it over my head. It was pretty small, designed to just cover the breasts. It only had one shoulder strap to hold it in place, and it left my entire midriff exposed. There was no room for a bra, but it was extremely comfortable on my breasts due to the soft fur on the inside.\n\nThe skirt was the most daring thing I think I'd worn yet. It was just a leather belt with leather strips that were about two inches wide riveted to it with brass buttons. When I moved or walked, the strips shifted, sometimes exposing skin that was never meant to be exposed. Just thinking about walking around in something like that set my heart beating rapidly.\n\nThe shoes were sandals really. The soles were comfortable for walking, and there were two long leather chords that had to be wound all the way up the calf before being tied.\n\nI didn't want to risk going to the bathroom to see what I looked like, so I made do with my small mirror, casting it over my body slowly. It looked even better than I'd hoped. Even better than it had on the model in the catalogue.\n\nI found myself staring at the mark on my lower back once again. Not a day went by that I didn't lose myself staring at those symbols. They were the thing that was doing this to me. It was still difficult to believe that this mark was what was keeping me in this strange body....that it was the cause for all of the feelings I'd been experiencing.\n\nMy mind rested on that thought for a moment, remembering the things I'd experienced. I quickly began feeling those sensations building up inside of me, and this time I didn't even try to stop them. After only a quick glance at my broken door, wedged shut poorly, I set my mirror down and slid off my new panties off I wouldn't ruin them, and climbed onto my bed to mount my pillow.\n\nI faced my door this time, not that it would afford me any extra protection if Tom decided to walk in on me again. Resting my little cock on the soft pillowcase, I began making small motions, building my rhythm as my pleasure rose. I was sure to keep quiet this time, only letting out a muffled squeak as I came, globs of cum oozing out of me as I trembled in my ecstasy.\n\nI fell onto my side, sucking in air for a moment before I remembered all the work I had put into my hair, and I pulled myself up. Noticing my gooey mess, I stripped my pillowcase and tossed it into the corner for laundry later. Holding myself upright as the ebbs and flows of my orgasm faded was a chore, but I managed. When I finally felt like myself again, I checked my phone to see what time it was. It was nearly time to think about leaving. Collecting myself, I checked my hair and makeup in the mirror before pulling open my broken door and striding excitedly down the hall towards the living room.\n\nI expected to see Tom in his usual spot on the couch, but he was nowhere to be found. After noticing his costume bag missing, I figured he was getting dressed, and I settled in to wait for him. I needn't have bothered, because the moment I was easing myself down onto the couch I heard his bedroom door open and I walked to where I would be able to see him down the hall.\n\nHe was fiddling with the long red cloak of his 300 costume. He was trying to adjust where the cloak fastened onto the harness holding his leather shoulder plates. His body was bare, showing off his not unimpressive muscles. On his feet, he wore soft leather boots with shin plates. What I found drawing my eyes most though, was his small leather shorts. They barely covered anything, leaving his thighs exposed, and barely covering his ass. He could have just as well been wearing a speedo. The bulge in the front was impressive though.\n\nIf I thought I was surprised by how good he looked, Tom's jaw nearly hit the floor when he finally dropped his cloak long enough to look up at me. He stopped dead in his tracks, his eyes soaking in every detail.\n\n\"Do you like?\" I asked giving a little twirl. I found myself enjoying seeing him like this.\n\nMy voice seemed to draw his attention, and he looked up from his open appraisal of my body.\n\n\"You look good,\" he said, trying to play it cool. \"Where did you get these costumes?\"",
        "\"There is a small costume emporium off Grand Avenue near downtown,\" I told him. \"I thought it would be cool if we matched. Do you like yours?\"\n\n\"This cape is kind of all over the place,\" he said, pulling at it.\n\n\"First, it's a cloak,\" I said, stepping up to him so I could adjust the way it sat. \"A cloak hangs loosely from the shoulders and usually doesn't have sleeves. Not only were they meant to protect the wearer from the elements, it also acted as modest armor, able to slow minor attacks under certain circumstances.\"\n\n\"You're such a nerd,\" he said.\n\n\"You're the idiot wearing a cape,\" I told him as I turned to walk away back down the hall.\n\n\"You said it was a cloak!\" he called, following after me.\n\n\"You know, if this goes well, we should take these puppies out to all the big parties this weekend,\" he offered. \"No one will have anything this good.\"\n\n\"Let's just get through tonight first,\" I said, tossing him his car keys.\n\nNight had already fallen outside. We received a few interested looks as we headed down to the car, but I just smiled and waved politely. If their eyes had spent more than half a second on my face before moving to my body, I might have worried that they recognized me, but that was becoming a more and more distant worry. I didn't recognize myself, how was anyone else expected to?\n\nIt wasn't until we were getting out of the car in the parking garage of Tom's office building that I realized my mistake. My panties were still on my bed, in my room, where I'd left them.\n\nTwenty-four hours earlier, I would have flat out refused to leave the car, but I felt my heart quicken with a little flutter as I climbed out. I had tested the skirt before leaving. While its modesty seemed precarious, it actually covered the necessary parts rather well. Sure, it could show off a good bit of hip and thigh when I moved, but everything else was pretty safe so long as I steered clear of the gymnastics. It didn't mean that I wasn't feeling that tickle in my belly from taking a naughty risk though. Somewhere along the line, I'd begun to grow fond of that little tickle.\n\nAs soon as Tom pulled his cloak free of his car door, he came around to join me, and we walked to the elevators together.\n\n\"I know you didn't really want to come at first,\" Tom said as we rode up to the top floor. \"I just want you to know, if you want to leave, at any time, just let me know. Okay.\"\n\n\"Thanks.\" I smiled to him. \"I really hope they have food. I'm starving.\" My stomach growled loudly in emphasis and Tom chuckled.\n\nThere was plenty of food. It was all Halloween themed, and mostly looked like stuff you would never want to eat, like white chocolate maggots as well as finger foods that looked surprisingly like fingers. It was all delicious though.\n\nMusic played, and some people danced, but mostly people just stood around talking, admiring each other's costumes. There were some pretty cool ideas, like the guy in the wheelchair that turned his rig into a magic carpet, complete with stuffed legs crossed in front of him and a monkey on his shoulder. Big wads of cotton hid everything from the waist down giving the illusion that he was zooming across the clouds on his carpet. Some people had expensive costumes as well, like the girl in the realistic Victorian era dress, but for the most part it was all cheap stuff you could pick up at a department store. Our costumes received a great deal of attention though, to my delight.\n\nTom introduced me to his colleagues as his friend, Jennifer (just in case they remembered his friend Quin), and we spent some time with his closer workmates as they tried to get to know me before we were able to move on. Along with the music, there was a magician dressed as Frankenstein doing close-up magic, and he was rather good, making random objects disappear and reappear on a whim. In fact, I was having a pretty okay night until some of the men began to get a little too far into their drinks.\n\n\"You don't need to play hard to get. Tom already told me that you two weren't a thing,\" a portly looking man named Carl said as he moved a little closer. \"Why don't we just go some place a little quieter...just to talk.\"\n\n\"I don't think so,\" I said, slipping away from him and gaining a little distance. \"Our relationship might be...complicated, but I can tell you one thing, there is only one man I'm going home with tonight, and it's him.\"\n\nThen why would he tell me that you didn't have a boyfriend?\" he asked.\n\n\"I don't know,\" I thought out loud. \"Maybe he just wanted to watch me shoot you down?\" I offered. \"I'll tell you this though, even if I didn't come with Tom, I'd never leave with you,\" I finished, skirting wide around him as I made my way back to Tom.\n\n\"You look a little...pissed,\" Tom observed as I approached.\n\n\"I just met Carl. Did you really send him over to hit on me?\" I asked.\n\n\"No way!\" he said quickly. \"He just asked if we were a couple and I told him no. Why, what did he do?\"\n\n\"He kept trying to get me to go someplace quiet with him,\" I told him.\n\n\"That guy is a total tool,\" he said shaking his head. \"I don't know how he doesn't get fired, but our team isn't even allowed to have women in it because of him.\"\n\n\"Can they really do that? Purposely have a team in their company that excludes women?\" I asked.\n\n\"I don't know it they can, but they do,\" he said. \"If I were my bosses, I'd risk that lawsuit over a sexual harassment one any day.\"\n\n\"Either way, do you think you could resist from encouraging your male colleagues?\" I asked sweetly. \"I'd rather not spend the whole night telling these guys that I don't want to fuck them.\"\n\n\"What do you want me to tell them when they ask about you then?\" he asked.\n\n\"Tell them I'm taken,\" I said, then thinking better, \"No, tell them you're my boyfriend.\" Some guys only saw and absent boyfriend as a temporary obstacle. They would be a lot less likely to press the matter if my boyfriend was actually in attendance.\n\n\"I've sort of been telling everyone that we aren't a thing,\" he explained.\n\n\"Then you're just going to have to show them that you've changed your mind,\" I offered. \"Dance with me?\"\n\nHe seemed surprised by my request, but he quickly accepted my hand and guided me to a clear space before taking me in his arms. Feeling his warm hands on my bare waist sent pleasant chills through me. I tried to tell myself that it was just a dance but feeling him holding me like that...it was the most intimate anyone had ever touched me, and I didn't know why.\n\nI found my eyes glued to his as we moved together. Neither of us spoke a word, but it felt like something passed between us, something even more than the physical. My pulse quickened, and I thought about his hands on me in other places\u2014in other ways. My libido surged, and my legs went weak, but Tom was there to catch me, wrapping his arms around me to hold me up. The bare skin of our warm bodies touched, and pleasure shot dangerously through me.\n\nTom instantly noticed a change in my eyes.\n\n\"Are you okay?\" he asked, holding onto me with both hands.\n\n\"I'm fine,\" I assured him, trying desperately not to think the thoughts that were plowing through my brain.\n\n\"You don't look fine,\" he said with a worried look on his face.\n\nPlacing an arm around me supportively, he guided me through the party towards the elevators.\n\n\"She's not feeling well,\" Tom explained to his boss as we were boarding the elevator down. \"She just needs to lie down for a bit.\"\n\nAs the doors closed, I slumped slightly against the railing, trying to catch my breath. I knew I couldn't stop what was coming, it was inevitable, but I could at least try and slow it down long enough to get back to our apartment.\n\nWhen the doors opened at the parking garage, Tom put his arm back around my waist, and steadied me as we walked to his car. We were walking up to the passenger door of his car when I stumbled. Tom's arm was already there to catch me, but I reached for him reflexively, wrapping my arms around him.\n\nI quickly recovered, but as I looked up, I found myself staring into Tom's eyes as he held me. I felt the same thing surge through me as before, and I kissed him. It was just a simple lift of my chin, and our lips were touching. A half a second after, I froze in shock at what I had done.\n\n\"I didn't mean that!\" I said, quickly pulling away from the kiss. \"I swear. I didn't mean to do that!\"\n\nMy fingers touched my lips, trying to reconcile what had happened. I had kissed my best friend. I tried to pull away further, but it was only then that I realized Toms arms were still firmly wrapped around me. If the look in his eyes hadn't told me that he felt something as well, the feeling of his cock growing hard against my body did.\n\nI paused, terrified of what I was considering, and I really didn't know if I could make myself go through with it on a conscious level, but I knew what I wanted. Butterflies thrashed my insides as I built up the courage until finally, I kissed him again.\n\nThis time I leaned in slowly, watching his eyes as I closed the gap. When our lips touched again, I felt Tom's lips moving against mine and I melted into him. His hands roved over my body, and my hormones surged. I began kissing him more frantically as I pressed my body into him, feeling his hard cock pushing back.\n\nTurning, he pressed me against the car, dominating my body as his fingers tangled roughly in my blonde locks. His tongue slipped into my mouth, and my leg rose, hooking around him to pull him even tighter against me.\n\nA needy moan escaped my lips as he slowly rubbed his hard cock against my much smaller one. The sound echoed loudly throughout the concrete parking structure, but I didn't care. I couldn't. All I could think about was the flood of sensations flowing through me and making them continue.\n\nMy own hand moved down his hard body to his small cloth shorts. I touched him, running my hand along his impressive length. I wanted it. I needed it, and I was ready to let him give it to me right there, but he forced himself to pull away.\n\n\"Stop! Stop! Stop!\" he exclaimed, pulling my hand from his crotch. \"Not here,\" he said, looking around.\n\nHe opened the passenger door for me and let me inside before running to the other side and hopping in himself. The car ride back to our apartment was awkwardly silent as we both had a short time to reflect on what we had done, and what we were about to do. I still couldn't believe what I had let happen, but I wasn't ready to stop, and I wasn't sure that I could blame it all on my hormones. I wanted things from him, thing's I had been fighting so hard\u2014to know what it felt like for him to make love to me, to feel myself wrapped around him...to cum with him inside of me.\n\nWe pulled up to our apartment building, and I was immediately out of the car and racing up the flight of stairs to our flat.\n\nOnce we were inside, things slowed down. We stood a few feet apart, staring at one another as we both waited for the other person to make the next move. I looked at him longingly as I tried to find a way to ask him to make love to me, but the thought of being so forward left me paralyzed.\n\nFinally, Tom made a move. He took two steps toward me and kissed me again. Our tongues danced between our lips and I cooed pleasurably as I felt his fingers slipping between the leather strips of my skirt to run along my bare thighs and ass.\n\nHolding tightly to him around his neck, I lifted my legs to wrap around his waist. Taking my hint, he held me close and began walking us down the hall and into his bedroom. He gently set me down on his bed before crawling up after me, easing himself between my spread thighs. Our bodies touched, and I trembled, feeling so vulnerable beneath him.\n\nMy fingers found the cloth at his waist, and I began pulling at the fabric, forcing it down his hips so I could finally get to his cock. With his shorts only part way down his thighs, I felt his dick land heavily on my belly. My hand quickly found it, and I savored in my first touch of him. He was so warm, and the harder I squeezed, the more granite-like his erection became for me.\n\nI began to stroke him slowly as he kissed me, enjoying the little sounds he made for me. I could feel the steady flow of precum as it oozed from his tip to coat my fingers.\n\nTom's hand slid slowly down my body until he reached the front of my skirt, his fingers slipped between the strips, and his hand quickly found my little clitty.\n\n\"Have you not been wearing underwear this whole time?\" Tom asked, finally breaking the silence.\n\n\"I forgot,\" I blushed.\n\n\"How do you forget to wear panties?\" he chuckled, looking down on me.\n\n\"There was a lot going on at the time,\" I defended. \"Are we doing this or not?\" I asked a little frustrated.\n\nFor answer, he leaned down and kissed me softly on the lips. Climbing off of me, he began removing his cloak, and then the rest of his costume. Taking his lead, I pulled my tiny top over my head and threw it away. I was just about to work on my shoes and skirt when Tom climbed back onto the bed with me, already completely naked with his hard cock sticking out straight in front of him.\n\nForgetting about the rest of my costume, I returned my focus to Tom. We met together in the middle of the bed on our knees. Our bodies pressed back together as we kissed, and my fingers wrapped around his cock.\n\nMy hormones had reached critical mass, and I was moving purely on desire. Breaking away from Tom, I backed away and lowered myself to my hands and knees before his cock. It started with a kiss, tasting his precum on my lips, and quickly escalated to teasing licks as I savored the taste of him. Tom's hand grabbed a fist full of my hair after a while, and he began trying to guide me to finally take his cock into my mouth. My lips parted for him, and he held my head still as he slowly thrust forward, sliding himself into my waiting mouth inch by delicious inch.\n\nI moaned as my lips closed around him and cooed as I discovered the pleasurable way his cock felt as is slid along my lips and over my tongue. He gently fucked my face for a moment before easing his grip and allowing me to continue at my own pace. Strangely, the more I sucked his cock, the more pleasure I felt coursing through my body. I quickly found myself increasing my pace, trying to take more and more of his impressive manhood into my mouth, but it was too much. Barely the first half of his length made it into my mouth. I tried several times to take more, but my throat wouldn't allow it. Not to be dissuaded, I continued to suck what I could fit with added effort.\n\nAs much as I enjoyed having his cock in my mouth, my jaw soon began to ache. When my lips finally parted with his shaft, Tom pushed me onto my back and moved back between my spread thighs. His lips found mine, and he kissed me as he ground the length of his cock against my pelvis, teasing my little clitty pleasurably as he slid across it.\n\nI moaned for him, throwing my head back, letting him kiss and suck on my neck. One of his arms reached down, hooking my leg behind the knee, and he brought it up to my chest, shifting my hips to give him better access to my little hole.\n\nI'd never had anything in there before, and I knew I should have been scared, but I was just ready. I wanted to feel him in me. I wanted to be taken, and I didn't want to let my chance pass me by.\n\n\"Do it!\" I whispered, rocking my hips back against his hardness. \"Oh God, Tom! Put it in me!\"\n\nReaching between us, he grabbed his cock and guided it to my hole. I felt the warmth of his tip against my sensitive bud and I trembled. It took some effort, and patience, but slowly but surely he pressed his cock to my entrance until finally I opened to him and he slipped in side.\n\nI gasped, and my nails dug into his back as I felt stretched to my limit by his intruding member. There was pain, white hot and pulsating, but there was so much pleasure as well. I could barely catch my breath, as if his cock was somehow preventing me from taking a full breath of air. I tried to hold still as my body adjusted to him, but all I wanted to do was squirm around.\n\nMinutes passed, and Tom held my hand as he waited for me to be ready for more. His thumb stroked my palm comfortingly and I placed soft kisses on his lips. When I was finally ready, I gave him a slight nod, and gripped his hand tighter in anticipation.\n\nTom eased a little more of his cock into me and paused again before easing back out. When he pushed back, he let just a little more of himself in again. With every thrust, more of his huge cock slipped inside, filling me even more than I had thought possible only moments before.\n\nThe pain was still there, but less, or at least more bearable. The longer Tom's strokes became, the better it felt. By the time I felt his hips pressing into my ass, I was sweating bullets. I had never dreamed that I could have felt so full, or that it would have felt so incredible to be filled by a man's cock.\n\nLifting my other leg, he pressed them both to my chest, and eased back. When he thrust back into me his cock brushed against something inside of me and I jumped as I cried out in pleasure. Hearing my cries, he did it again, and again, until he was steadily fucking me while I let out an unintelligible string of sounds.\n\nHe had to have been hitting my prostate. I'd heard people talk about how good it could feel, but I dismissed it as gay propaganda, trying to convince straight people that there was a reason for their gayness. I now knew firsthand that it was real. The more he pressed my little pleasure button with his cock, the less I cared about anything but feeling more.\n\nI clung to Tom desperately as he fucked me, deliriously caught up in the things he was making me feel. I had been sitting at a level of pleasure I'd never reached before, but now I felt it, my climax. It was close and rushing closer. The ecstasy swelled and grew filling my body to bursting with an incredible warmth that threatened to engulf me.\n\nI clung to Tom tighter, and my cries urged him on. He fucked me harder and faster, thrashing my pleasure button with a rapid assault until finally I popped.\n\nWith a cry, an explosion erupted deep inside of me. Waves of pleasure consumed me as I fought to remain conscious. My little cock gushed, creating a pool of my own cum on my belly. When the storm of pleasure finally passed, and I was left in the warm glow that followed bliss, I noticed Tom panting above me, and his cock slowly slipping from my abused hole.\n\nI had missed it. He'd cum inside of me, and I'd been so distracted that I missed it.\n\nTom collapsed beside me, with only our heavy breathing to break the silence. His hand found mine, and our fingers intertwined. I lay there comfortably numb for some time before a thought finally entered my head. Every other time I'd masturbated since everything happened, I had felt guilt and shame for the thoughts I'd had. Right now, I just felt incredible, and happy.\n\nI knew I should have felt awkward, having just had my best friends' cock in my ass, but I didn't. I actually wanted more...a lot more. Sitting up, I rolled over on top of Tom and kissed him on the lips as I unfastened my skirt and threw it away. After only a little coaxing, his cock was hard for me again, and I aimed him back at my dripping hole and slowly eased myself down with a pleasurable gasp.\n\nI may not have felt him cum inside of me the last time, but I was determined to feel it this time.\n\nWe made love several more times in the night, and Tom even went down on me, licking my little clitty until I came all over his lips. When I fell asleep, it was in his arms, feeling loved and safe.\n\n*** *** ***\n\nI woke feeling wonderful and refreshed. I could still feel Tom's warm body next to me in bed, and an embarrassed smile sprung to my lips as I remembered the previous night. Since being cursed, I'd found myself doing a lot of things that I never should have imagined. I was even surprised at how much I enjoyed most of it. Still I would have never believed someone if they told me how much I would have loved making love to my roommate.",
        "As the light through the window changed from a light blue to a dim orange, I found myself imagining waking up like this every morning, and what it would be like to fall asleep in Tom's arms every night.\n\nClimbing out of bed, I padded to the bathroom. After doing my business, I found myself in front of the mirror, running my fingers through my hair, and snatching up a tube of mascara to touch up my eyes really quick. After making sure I had the appropriate level of morning hotness, I checked out my body. My boobs looked fantastic. They still felt a little tender, but the hadn't seemed to have grown any more throughout the night.\n\nMy tiny cock hadn't changed either, still sitting there like a nub right where my thighs met. I missed my old cock, but not as much as I thought I would. It felt like an old toy that I lost or something. I remembered having so much fun with it, but now I had other toys, and they were just as fun, if not more. I definitely received more pleasure from taking a cock than I'd ever gotten from my own.\n\nTwisting, I checked out the rest of my naked body, letting my hands run over my skin. I even cupped my breasts playfully for my reflection. When I let my fingers brush against my sensitive little clitty I could feel my arousal beginning to build, and I smiled as I thought about crawling into bed and waking up Tom to tell him how badly I needed him to help me with my urges. I was thinking about waking him up with a blowjob, and just about to skip back to bed and jump him, when I froze mid turn.\n\nMy stomach felt like the floor had disappeared beneath me, and I stood motionless staring at my lower back. The skin there was smooth and unblemished. I stared for minutes, unable to move as I tried to process.\n\nThe mark was gone. I had spent so much energy to this very goal, and now that it had finally arrived, I didn't know what to do. Mira had said that once the curse was broken my body would begin to change back.\n\nI found myself desperately searching the mirror to see if anything was changing. My eyes drank in every detail, trying to remember everything exactly as it was. I wasn't sure how long I stood there, but once I snapped out of it, I was a flurry of motion.\n\nAs quietly as I could, I slipped back to my own bedroom and began snatching up discarded clothing from the ground while silently trying to dress. I slipped on the hot pink thong, and ignoring the small stain, I tugged on my jeans before putting on my bra and a t-shirt.\n\nGrabbing my shoes and a hair tie, I padded quietly from the apartment, waiting until the door was closed, and I was in the hall, before slipping on my shoes and pulling my long hair into a pony tail. My heart hammered in my chest all the way down two flights of stairs, and long after I'd gotten into my car. Before I even knew where I was going, I was pulling into the lot for the Fair Grounds.\n\nIt was empty. The hundreds of rides and games were gone. All the was left was an empty lot strewn with pieces of trash that idle gusts of wind shifted about.\n\nI slumped in my seat, feeling defeated, like someone had reached inside of me and hollowed me out. I wasn't ready. I needed more time. My mind raced frantically as I tried futilely to think of a way to stop myself from changing back. It was no use though. I was hip deep in magic and curses, and even if I knew how, I had no way to make it happen.\n\nI felt a pain deep in the pit of my stomach as I realized that every second that passed, I was losing more and more of the woman that I was. I knew it must be my imagination, but I was sure I could feel the snail like microscopic changes turning me slowly back into a boy.\n\nWhat was I going to do?\n\n*** *** ***\n\n\"Are you sure about this?\" The stranger asked from behind me.\n\n\"More than anything,\" I said nervously.\n\nI felt his hands on my waist as he moved closer. His fingers hooked into my jeans and panties and he began carefully inching them down until he had just enough room.\n\n\"This might hurt a bit,\" he acknowledged with a grin.\n\n\"I can take it,\" I assured him.\n\n\"Here we go.\"\n\nA loud buzzing made me jump, but his gentle hand steadied me as he brought the tattoo needle to my lower back. Pain surged through me as he began, but pain quickly turned to a warm sensation, much like that of a sunburn.\n\n\"So, what does this symbol mean anyway?\" He asked curiously as he worked. \"I've never seen anything like it.\"\n\n\"It means Self,\" I said, gritting my teeth. The burning sensation intensified as he marked me for life.\n\nI knew it wouldn't be so easy. A simple tattoo wasn't going to have the same effects as a curse. Soon the rest of me would begin to slowly change back, and all I would be left with was an awkward lower back tattoo. But if I could add a tattoo, I could add other things as well...\n\nTHE END\n\nThank you so much for reading my story! I hope you enjoyed it. As this is a contest entry, I would ask that you please rate my story before you go. If you are interested in me or my writing, check out my bio for updates and information on upcoming works.\n\nSoB_Erotica"
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "anal",
        "costume",
        "curse",
        "gender swap",
        "halloween",
        "oral",
        "sissification",
        "transformation",
        "trick",
        "transgender"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/the-sissy-mark"
}