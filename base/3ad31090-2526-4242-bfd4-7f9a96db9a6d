{
    "title": "The Eighth Warden Bk. 03 Ch. 35-36",
    "pages": [
        "Chapter 35\n\n\"I wish you'd stop messing with that thing.\"\n\nShavala looked up from where she was sitting cross-legged with the staff laid across her lap. \"It's not saying anything now,\" she told Katrin.\n\n\"It's a hunk of wood\u2014it shouldn't have said anything at all! It's creepy.\"\n\nShavala stood and leaned the staff against the wall, then went to sit next to the other woman. \"It was more like it was thinking than talking. It just didn't like what I was doing.\"\n\n\"What if it happens again?\"\n\nShe didn't have an answer.\n\nCorec peered through the open doorway, then came in when he saw them there. \"Are you all right?\" he asked Shavala. \"Marco said you were injured, and Boktar said he didn't see you cast any spells during the fight. He was worried something had happened to you.\"\n\n\"I'm fine now. It was nothing, but I'm sorry I wasn't able to help.\"\n\n\"It wasn't nothing,\" Katrin said. \"Tell him what happened.\"\n\nShavala sighed and looked down. \"It was the staff.\"\n\n\"What do you mean?\" Corec asked. \"What sta\u2014 ... the staff you found in the ruins?\"\n\n\"It didn't want me to cast any spells.\"\n\n\"It hurt her!\" Katrin said.\n\nCorec furrowed his brow. \"Wait. Why? How? It isn't magic; I checked it myself.\"\n\n\"It must be some sort of magic!\" Katrin exclaimed. \"It's been talking to her!\"\n\n\"Not talking, exactly,\" Shavala said. \"When I first took it, it was showing me visions of things it's seen in the past. I think it's druid magic. Elven druid magic.\"\n\n\"Then why would it hurt you?\" Corec asked.\n\n\"I think it just didn't want me to kill anyone. I'm not sure it understood what was going on.\"\n\nCorec's eyes narrowed. \"It didn't want you to kill anyone? Or you didn't want to kill anyone? I know you weren't happy about the last time we fought them.\"\n\nShavala hadn't realized he'd known. Or had Katrin told him?\n\n\"They had to be stopped,\" she said. \"I hate that they didn't give us a choice, but we couldn't let them hurt us or anyone else. I understood. The staff didn't, but I think I can talk to it, teach it.\"\n\n\"Teach it?\" Katrin said. \"You should get rid of it!\"\n\n\"It's not hurting me now, and it's also helped me.\"\n\n\"Helped how?\" Corec asked.\n\n\"The room it was in, with the mushrooms and the moths\u2014they were all dying. The staff helped me save them.\"\n\n\"The moths?\" He exchanged a confused glance with Katrin. \"What do they matter?\"\n\n\"I think they might be unique. I'm not sure anything like them exists anywhere else. Not just the moths but everything else growing in that room.\"\n\nShavala had known he wouldn't understand, and from his expression, it was clear she'd been right. But he tried. \"Why were they dying?\" he asked.\n\n\"It was the staff that let them live the way they had been. It created an environment to support them.\"\n\n\"Then shouldn't you leave it here?\"\n\nShe considered that. Was she being selfish by removing the staff from where it had rested for thousands of years? But she'd seen the visions of what it had done in the past. It felt wrong to let it languish underground rather than serving its purpose, whatever that purpose might be.\n\n\"It's important,\" she said. \"It has to be. Why else would it have been locked in there?\"\n\n\"Because it's dangerous!\" Katrin exclaimed.\n\nShavala shrugged. \"Maybe, but so is Corec's sword,\" she said. Katrin threw her hands up in frustration, so she added, \"And your voice. But I don't just mean it's important; it's also important to me. The things it's shown me\u2014I think the staff was used by the early elven druids. We always say elder magic was the first to be discovered, and the dorvasta believe the druids were the first of the elder mages. I think the staff knew those druids.\"\n\n\"But if it hurt you ...\" Corec started.\n\n\"Then maybe it will again. At least until I can get it to understand me. Didn't you ever get hurt when you were learning to fight?\"\n\n\"Sometimes, but that's not the same thing. And a staff that talks? That's like something out of a story. Some of those stories don't have nice endings.\"\n\n\"It thinks; it doesn't talk. Didn't your sword have to think to choose you over everyone else?\"\n\n\"I'm pretty sure that was due to a warding spell.\"\n\n\"This is just a different kind of magic. My magic.\"\n\nHe sighed. \"I just worry about you.\"\n\nShe gave him a small smile. He and Katrin worried too much, but sometimes it was nice to have them around to worry about her. She wasn't entirely sure what was going on between the three of them. She'd only intended to join Corec's bed for a short fling before he married Katrin, but somehow that fling was still going. Shavala wasn't looking forward to ending things when it was time for her to return home.\n\n\"I know you do,\" she said, \"but I need to at least try to learn more about it before I give up. Sometimes you two treat me like a child, but I'm not; I'm older than either of you, and I'm responsible for my own decisions. But I'm sorry about today. I know I messed up. I could have gotten everyone killed.\"\n\n\"No, I messed up,\" Corec said. \"I'd never try to defend a position with a single archer or a single infantryman, but then I put together a plan that placed all the heavy work on you and Ellerie, with no fallback plan if something happened to either of you. I need to get better at this, but none of my training covered it. The knights told me a few things about how to fight mages, but never about how to work with them. I misjudged things, thinking our enemies couldn't stand up to magic, and the Travelers had to come in and save us.\"\n\n\"Are they still here?\" Katrin asked.\n\n\"They're gone now, but they caught the Seeker. He says the men with the knives are part of some cult that worships a snake, claiming it's one of the old gods. He insists they wouldn't tell him why they're hunting Leena and the other Travelers.\"\n\n\"What are we going to do with him?\"\n\n\"Leena's uncle and another fellow already took him back to Sanvar to lock him up. Their people are the ones who were killed, so I wasn't going to interfere. It doesn't sound like there's another group heading our way right this moment, but that could change. Losing their Seeker might stop them for a moment, but they already know where we are. Oh, that reminds me, have either of you seen Razai?\"\n\n\"Sarette saw her through the spyglass when she was up on the slope. She says she was following the mercenaries who ran away.\"\n\n\"What? On her own? What's she thinking?\"\n\nKatrin shrugged. \"I don't know. Sarette figured you'd sent her after them.\"\n\nCorec frowned. \"It'll be dark soon. I'm not going to be able to find her after the sun goes down, even with a mage light. If she's not back by morning, I'll go look for her.\" He paused, then said, \"I suppose it's good she's tracking them, though\u2014she can make sure they don't sneak back here.\"\n\n\"I can go after her,\" Shavala offered. \"I can make my way in the dark well enough.\"\n\nCorec hesitated, seeming to consider the idea, but then shook his head. \"After what happened today? I think you should stay here and rest. Razai knows how to take care of herself. If she wanted our help, she'd have told someone she was leaving. I'm sure she'll be careful.\"\n\n#\n\nRazai crept closer to the men she'd been following, mercenaries who'd fled from the battle. There'd been three when she first caught sight of them back at the ruins, but they'd met up with others as they'd traveled east. She'd stayed a mile behind the group while the sun was still up, following their trail, but as the evening turned dark, she'd gradually closed the distance.\n\nIt was late now, well past sundown, and the mercenaries had stopped to make camp\u2014if it could be called that. There was no moon, and the stars only provided a small bit of light, mostly blocked by a light covering of clouds. There was no wizard this time, and no mage lights. The men had scrounged up two torches before leaving, using them as they'd made their way in the dark, but they'd extinguished them once they'd stopped for the night.\n\nRazai, though, could see just fine.\n\nThe mercenaries were gathered in a rough semblance of a circle. They'd eaten a meal of cold trail rations, and now their eyes darted back and forth at every little sound their companions made. They spoke quietly, quickly, occasionally glancing back in the direction of the mountain.\n\nShe couldn't understand what they were saying, but it was obvious they were frightened. What right did they have to be frightened? They were the ones who'd chosen to wage a battle against a much smaller group. Now, they had to face the consequences of their actions.\n\nShe waited until they began bedding down for the night, then inched closer, invisibly, until she was only a few feet away from the nearest man.\n\nThere were eleven of them, but most had taken off their armor and were trying to get some sleep. It appeared that only three were staying up to keep watch. She could handle eleven under those circumstances.\n\nShe gripped the hilts of her curved knives as she waited for the best moment. She would stab the nearest mercenary through the heart as he lay atop his bedroll, then grab the next closest\u2014who was standing watch, still wearing a mail shirt\u2014and slit his throat. She'd have two of them down before the rest even realized they were under attack, and the others would hardly be able to see her in the dark. If she got lucky, they might even start killing each other by accident.\n\nSlowly, she unsheathed her knives, taking care not to break the invisibility spell.\n\nThen she hesitated. Corec's words came back to her. He'd wanted to let the mercenaries go free if they weren't complicit. It was idealistic foolishness\u2014they were the prey and she was the hunter. They'd crossed the line, taking money to kill Leena and the rest of the group.\n\nBut was Razai really any better than them? She'd been a mercenary on occasion. She'd done the same as them, and she'd done worse. She'd killed people in cold blood if she felt they deserved it. Or, sometimes, if her father had ordered her to.\n\nWhat would the others think if she killed these men? Corec's opinion didn't matter, but what would Leena think of her? What about Boktar? Would Treya tell Renny?\n\nRazai slid her knives back into their sheaths. She wanted to scream at herself for growing soft, but she kept quiet. If she made any noise, it would give away her position. She forced herself to calm down, pushing the rage back deep inside where it belonged.\n\nFine. She wouldn't kill them, but that didn't mean she could let them go free, with no punishment for their actions. They'd tried to kill Leena.\n\nSummoning her demon disguise, Razai let loose with a wild howl, then leapt forward, stomping on the stomach of the man who'd been trying to sleep nearby. She snarled, then howled again, this time with a different tone. In the dark, the humans would see nothing but a huge black shadow with glowing red eyes, but if she made enough noise, she might convince them that more than one demon had come for them.\n\nThey screamed and shouted, scrambling up out of their bedding in a panicked frenzy. One man kept his nerve enough to try to face her, but she snatched the spear out of his hands and snapped it in two, then grabbed him by the shoulders and threw him to the ground.\n\nThey all ran after that, fleeing into the night in different directions. When one of the mercenaries tried to grab his pack on the way out, Razai stomped on the strap, catching the man's fingers under her heel. He screamed in pain and she lifted her foot to let him scurry away without his supplies.\n\nMoments later, she was alone in the remains of the camp, surrounded by bedrolls and packs, and discarded armor. About half the men had escaped with their weapons, she estimated, but the only ones who'd managed to take their armor were the three who'd still been wearing it. None of them had taken the time to grab their bedding. There were only ten packs, but Razai was pretty sure one of the eleven men hadn't brought one with him, which meant the mercenaries were now all stranded in the middle of the barrens without any food or supplies.\n\nIt would take them at least three to four days to reach any sort of civilization, and that was only if they knew where to find the nearest village. Still, there was water in the barrens, and it wouldn't hurt them to go without food for a while. They were trained mercenaries\u2014they would probably live through the ordeal. If they didn't, Razai wouldn't shed any tears, but at least she could say truthfully that she hadn't killed them.\n\nShe remained in her demon disguise in case any of the men tried to return, but she picked through their belongings to look for anything interesting. After transferring all the food into two of the packs, she stacked the other packs together with the bedding and spare clothing, then lit the pile on fire with a tinderbox she'd found.\n\nWhile it burned, she dug through the four coin pouches she'd discovered, finding quite a bit of silver and even a few gold pieces. Those four men would learn a valuable lesson, she figured, and would keep their coin pouches closer to their person the next time they slept in the wilderness.\n\nShe left the weapons and armor where they were, not wanting to haul them away. If the mercenaries came back for them, so be it. Cold steel would offer little comfort when what they really wanted was something to eat.\n\nSlinging the two packs of food over her shoulders, she headed back in the direction of the mountain. It would be her second all-night journey in a row. Good thing she'd caught a nap before the fight.\n\n#\n\nBobo was still unconscious, but Treya couldn't find any injuries other than a few small abrasions. She didn't bother to heal those\u2014she was exhausted, having used the last of her strength to patch up a few of the enemy mercenaries just enough that they might survive for another day.\n\nBefore disappearing, Razai had claimed Bobo was suffering from drain shock\u2014she and Boktar had both seen him wielding magic. Razai insisted it was divine magic, as if he was a priest, but he wasn't. He wasn't any other sort of mage either, as far as Treya knew. Was he godborn, like her? Bishop Lastal had been able to identify mages just by looking at them, but Treya hadn't figured out the trick yet.\n\nOf course, if someone was going to suddenly start using magic out of nowhere, being a priest was the most likely answer\u2014it would just require being blessed by one of the gods. The gods usually chose their blessed priests from among the ranks of the unblessed priests and their students, but that wasn't always the case. Sometimes they chose an outsider. But which had chosen Bobo? In the past, he'd masqueraded as a priest of Fox, but Fox didn't have priests. None of the old gods did. For Bobo, Allosur seemed a likely choice\u2014the God of Knowledge. It was Allosur's priests who'd tried to teach Treya what they could about her abilities.\n\n\"What to happen us?\" a voice asked in badly accented trade tongue, interrupting her musings. The question came from the only injured mercenary who was currently awake\u2014a man who'd lost his right hand during the battle. Based on his descriptions, he'd been fighting Sarette. His compatriots had helped him away from the fight and tied a strip of cloth tightly around his lower arm, keeping him from bleeding out, but he'd lost consciousness anyway. His friends had either left him behind or died in the fighting. Treya and Boktar hadn't allowed him to check the bodies to find out for sure.\n\n\"I don't know,\" she replied. \"Why did you attack us?\"\n\n\"They tell us you, uhh, how say, thieves?\"\n\n\"Bandits? Brigands?\"\n\nHe shrugged, apparently not recognizing those words in trade tongue. \"Bad thieves.\"\n\nShe grasped his arm to check his injury, though there nothing more she could do about it. She'd healed it enough to keep it from killing him.\n\n\"Did you believe them?\" she asked, feeling a tiny hint of power behind her words.\n\n\"Yes. Then no.\" He blinked and worked his jaw, looking surprised to have admitted that. \"Very very, uhh ...\" He grunted, unable to find the words to complete his thought. \"They bad.\"\n\n\"But you attacked us anyway.\"\n\n\"They pay.\"\n\nShe let go of his arm after assuring herself the injury wasn't showing any signs of getting worse or becoming infected. \"Well, they're not going to pay you any longer,\" she said. \"We'll have to figure out what passes for the law around here, and ask them what to do with you.\"\n\nHe furrowed his brow, not seeming to understand her.\n\n\"Never mind,\" she said.\n\nShe left the room they'd set up as a makeshift infirmary, nodding to Nedley, who was standing guard over the prisoners. He was alone, but Josip was scheduled to join him soon, after catching a few hours of sleep. It would have to be enough\u2014everyone else was too busy. The two of them should be able to handle four unconscious, heavily wounded men, and a single man with one hand and no weapons.\n\nThe rest of the mercenaries were dead, other than an unknown number who'd managed to flee. Sarette had seen five through her spyglass from her perch partway up the mountain, but she was certain others had gotten away before she'd made it there.\n\nThe men with the knives were dead too. Those who'd lived through the battle had died just like the one outside Tir Shar\u2014their mouths foaming and their bodies convulsing.\n\nThere had been a lot of death that day, more than Treya had seen in her life. It had been worse than anything since the day the raiders had murdered her parents while she hid behind a pile of firewood. But her friends had all lived. That counted for something.\n\nShe took a deep breath of the crisp night air, then found a fallen stone block to sit on. The camp was mostly quiet, other than the faint, distant sound of Corec and Boktar still dealing with the bodies. Treya was tired but she wasn't ready to sleep, still too worked up from the events of the day. She needed to relax. Maybe some meditation. That would have required her to move, though, and she didn't want to. She'd just sit, instead.\n\nThere was a scraping sound of metal on stone, and the presence of another person nearby.\n\n\"My people are dead, aren't they?\" Ariadne asked, taking a seat next to her. \"All of them.\" She spoke Western this time, but Treya had learned Western at the Four Roads chapter house.\n\n\"I don't know,\" she replied. \"Whatever happened here, we think the people were able to leave. The city seems to have been evacuated in good order.\"\n\n\"In good order? With Fortress West destroyed, and leaving me\u2014\" Ariadne clamped her mouth closed, not finishing the sentence.\n\n\"We don't know what happened, but isn't it good they were able to flee? Maybe they found a new home somewhere.\"\n\n\"Even if they did, they're not my people anymore. The people that I knew would still be dead.\"\n\n\"I'm so sorry.\"\n\nAriadne was silent for a moment. \"Van Kir was forests and grasslands as far as the eye could see. I don't recognize anything anymore. There used to be a lake just south of the outer city. How can so much have changed?\"\n\n\"I don't know, but you should talk to Ellerie and Bobo. They know more than I do.\"\n\nThe tall woman didn't make any move to do as Treya had suggested. Instead, she said, \"Do humans rule over my people's lands now?\"\n\n\"You said your lands extended from here to the seas?\"\n\nAriadne nodded.\n\n\"Mostly humans and dwarves, then. The closest settlements are human villages.\"\n\n\"Dwarves?\"\n\n\"The stoneborn?\" Treya said, thinking the girl might be more familiar with the older term.\n\nAriadne just shook her head in confusion.\n\n\"You've seen Boktar in the camp? The strong, short man with the beard?\"\n\n\"Yes. He is dwarve?\"\n\n\"A dwarf, yes.\"\n\n\"I have never heard of his kind before,\" Ariadne said.\n\nHow could the Ancients not have known about dwarves? She was talking, though. Maybe Treya could learn something about her before she went quiet again.",
        "\"You seemed surprised to see humans in the ... the fortress, you called it?\" Treya said. \"Were there no humans here when you went to sleep?\"\n\n\"Some in the outer city who prefer life in Tir Yadar rather than among the human tribes, and, of course, many in the refugee camps. But few humans live in the inner city, and even fewer work in the fortress. Only Zachal is allowed into Fortress Central without authorization.\"\n\n\"Zachal?\"\n\n\"The human warden,\" Ariadne said. Leena had mentioned that the woman knew about wardens.\n\nTreya said, \"I know that Ellerie would really like to talk to you about your people and Tir Yadar. And the wardens. She might be able to help you learn what happened here.\"\n\n\"She talks and she talks and she talks. Her and the fat man. Sometimes I understand what they say, sometimes I don't, but I won't put myself on display for their amusement. Let them pose their questions to someone else.\"\n\n\"I don't think there is anyone else,\" Treya pointed out.\n\nAriadne ignored that, changing the subject. \"I require assistance,\" she said. \"I must lay the other Mage Knights to rest.\"\n\n\"We were reluctant to disturb them,\" Treya said. \"Are you sure?\"\n\n\"I cannot leave them in the stasis pods. It isn't right. They should be buried beneath the earth.\"\n\n\"If that's what you'd like to do, we'll help. I'm sorry about your friends.\"\n\nAriadne tilted her head to the side. \"Friends? They were the heroes who won the war, but I had only just met most of them. I wasn't truly one of them yet\u2014I was the newest recruit, earning the armor when the previous bearer was chosen to become a warden.\"\n\n\"Oh.\"\n\n\"I will also need help in recovering and transporting their blades and armor. I must safeguard them until I can find my people.\"\n\n\"Oh!\" Treya said, surprised. \"You don't wish to bury them with their belongings?\"\n\n\"The blade and panoply belong to The People, not to the knight who bears them. I'm not blind\u2014I know what you are doing here. I cannot bury the weapons and armor, but I won't allow your people to take them either.\"\n\nTreya nodded. \"We'll help you. We'll figure out a way to haul them back to Aencyr.\" Corec had already started talking about taking some of the wagons back with them so they could carry the contents of the armory. Now that they knew the route, they wouldn't have to cross the swamp. They could follow the passes through the mountains instead.\n\n\"Aencyr is where you are from?\"\n\n\"No, but it's the nearest large city. We came from across the sea in Aravor. I'm from a city called Tyrsall.\"\n\nAriadne drew in a sharp breath. \"Tir Sal still stands?\" The pronunciation wasn't quite the same.\n\n\"There's a city called Tyrsall on the northeast coast of Aravor,\" Treya said. \"I don't know if it's the one you're talking about.\"\n\n\"Aravadora, we call it. Yes. But there are no Chosar there?\"\n\n\"No, I'm sorry. It's a human city, mostly.\"\n\n\"That was the agreement. Two hundred years ago, the human tribes were given a Tir of their own in exchange for sending farmers, miners, and fishermen to the continent to aid in colonization efforts. But if Tir Sal still exists, The People should have a presence there.\"\n\n\"I'm sorry,\" Treya said.\n\nThe other woman looked down, silent for a moment before speaking again. \"Much of Aravor was destroyed during the war. Only a few of the great cities still stand. Still stood. What about Tir Navis? Does it yet remain? Tir Illia?\"\n\n\"Tir Navis is in the Storm Height Mountains, but it's been abandoned. The mountains belong to the stormborn now. Tir Illia ... do you mean Terrillia? The dorvasta city?\"\n\nAriadne frowned. \"I do not know these words, stormborn and dorvasta, and the necklace does not translate, but vasta is the elves' name for themselves, and Tir Illia was granted to them in the same way Tir Sal was granted to the humans. The vasta had to flee Cordaea ...\" She paused, her brow furrowing in concentration. \"They had to flee Van Kiradaea when the demons attacked their forest homes. A new forest had already been grown for them in Aravadora, so they went there.\"\n\nTreya wasn't sure what to say. The woman's story raised so many new questions, it was hard to keep track of them all.\n\n\"I really think you should talk to Ellerie and Bobo about this. If you tell them what you know, they may be able to help you learn what happened.\"\n\nAriadne didn't reply at first, just staring off into the night. Finally, she said, \"I will consider it.\"\n\n#\n\n\"Five hundred gold?\" Ellerie exclaimed.\n\n\"Five hundred twenty-two all told, though a lot of that's in silver,\" Corec said. \"Half of it was in a lockbox in one of their supply carts. I suppose they must have been using it to pay the mercenaries. The cultists weren't carrying much in the way of coin.\"\n\n\"How many of Leena's people did she say were here?\" The expedition's charter specified that spoils of war were divided evenly between participants rather than becoming part of the expedition's profit.\n\n\"Fourteen, I think, not counting her or the man they took prisoner. But I want to offer the wagon drivers something for putting them in danger. I imagine we'll want to stay on good terms with Livadi if you ever plan to return here.\"\n\nEllerie nodded. \"What were you thinking?\"\n\n\"Five gold each, and give them their pick of the mercenaries' weapons. There are a few suits of armor worth salvaging, but I don't want to bother with the weapons. They're just not worth as much as the stuff from the armory.\"\n\n\"I don't think anyone will object to that,\" Ellerie said, calculating the numbers in her head. \"So, subtract twenty-five, and divide by twenty-eight.\"\n\n\"Twenty-eight? I counted twenty-seven.\"\n\nShe lowered her voice. \"I think we should include Marco. I don't want to single him out as not helping in the fight. I don't want him to think he's not part of the group.\"\n\nCorec nodded. \"That makes sense. There are some things I want to do, and I'm going to need him in a good mood.\"\n\n\"So will I,\" Ellerie said. \"You're thinking about Ariadne?\" Treya had told the two of them about the Chosar woman's request for help in retrieving her comrades' weapons and armor.\n\n\"To start with, yes,\" Corec said. \"I don't know which nation's laws apply here, but I think scavenging rights get complicated when a resident is still around to make a claim. We need to make sure she's taken care of. She's claimed her friends' weapons and armor, and she took that necklace. Let's say those are hers by right, and if she takes something else, I'm not going to complain. But I think we should grant her two shares on top of it.\"\n\nEllerie nodded. She'd been considering the same idea. \"That seems fair. When we return to Aencyr, we'll look up whatever laws we can find about it. And there are some other ideas I want to convince Senshall to agree to. So, we'll include Marco in the spoils. Sort of ... a bribe we can all politely pretend isn't a bribe. That brings it to, what, seventeen gold and some silver per person? I guess it's not that much after it's split up.\"\n\n\"It still seems like a lot to me,\" Corec said with a wry grin.\n\n\"I'll ask Leena to take the Travelers' shares back to Sanvar the next time she visits home. How's everything else going?\"\n\n\"Bobo's still unconscious and Razai's still missing,\" he said, \"but we managed to clear the streets and haul all the bodies to the plaza. I'm not sure what else to do with them. We can't bury them all, and we don't have any wood for a pyre. We may just have to leave them, but if so, we'll need to move the camp farther away. And upwind.\"\n\n\"How much wood do we need?\"\n\n\"More than Leena can bring, and more than we can realistically transport in the wagons. And, honestly, by the time they got here, I wouldn't want to go anywhere near that plaza.\"\n\nEllerie sighed. \"I guess we don't have a choice, then. We'll have to leave them where they are. We can move the camp tomorrow.\"\n\nCorec nodded. \"We also went through their supplies. We've got plenty of food now, but only for ourselves, not the animals. And these carts of theirs will be useful for hauling stuff up from the armory.\"\n\n\"Then let's plan on heading back inside the mountain tomorrow.\"\n\n#\n\nBobo opened his eyes to find himself surrounded by endless mists. Was this some sort of dream? The last thing he could remember was the fighting. There'd been a sense of hopelessness, and then a sense of hope. And a sudden realization\u2014but of what?\n\nHe sat up abruptly as the memories returned. Magic. Not from his friends or from the enemy priests, but from himself.\n\nYou weren't supposed to suffer from drain shock, a voice said, echoing in his mind.\n\n\"I beg your pardon?\" he asked.\n\nA blessing is meant to control the amount of power a priest can use, preventing drain shock, but I'm new to this and you didn't have years to spend learning to master your abilities. You'll have to be more cautious than other priests.\n\nBobo couldn't see anyone talking. He couldn't see anyone at all. \"Who are you?\" he said.\n\nYou already know, but keep your suspicions to yourself. It's too soon to let the others realize I've joined the game.\n\nIf this was really who Bobo thought it was, there was so much he needed to ask ...\n\n\"You saved my friends, didn't you?\"\n\nDid I? Or did you?\n\n\"I wasn't afraid.\"\n\nThat wasn't my doing.\n\nBobo opened his mouth, then closed it, not sure how to respond. Finally, he said, \"Why me?\"\n\nWhy not? But my time here grows short. The laws they imposed upon themselves, to prevent interference, have somehow affected the actual strictures governing the ascended. Now I understand why they only send visions. Ask the question to which you actually need to know the answer.\n\n\"What do you want me to do?\"\n\nNothing you wouldn't have done on your own. I learned that much from watching the others. Be yourself. Perhaps someday you and I will speak again.\n\nBobo woke up with a startled gasp.\n\n###\n\nChapter 36\n\n\"So are you going to tell me what happened yesterday?\" Corec asked Bobo the day after the battle, as the two men loaded weapons from the armory into the hand-drawn carts their attackers had used for carrying supplies.\n\nIt had been a busy morning. They'd moved their camp again at first light, farther away from the bodies, and then Razai had shown up a short time later saying she'd tracked eleven of the mercenaries east before scaring them off. Then, Boktar, Sarette, and Josip had left to accompany the wagon drivers on their trip back to Livadi, along with one of the group's own wagons. They planned to meet up with the smaller caravan on the way. Boktar and Sarette would lead the small group to Tir Yadar while Josip and Lufton took the five original drivers, and the extra wagon, back to the village to resupply for another trip.\n\nBobo had regained consciousness just before noon. He'd seemed mostly recovered, so Corec had recruited him to help with the armory.\n\n\"It was wonderful!\" the man replied. \"For a short time, I knew exactly what to do and I wasn't afraid to do it. I don't remember everything\u2014it's starting to fade\u2014but I think I could do it again if I had to. Some of it, anyway. Maybe.\"\n\n\"But what was it? Razai thinks you're a priest.\" Corec had already used his warden senses to confirm that Bobo was indeed a mage now.\n\n\"I always told you I was a priest of the Fox.\"\n\n\"You were a fake priest\u2014\" Corec stopped talking when he saw Bobo's wide grin. \"You're just saying that to annoy me, aren't you?\"\n\nBobo laughed. \"Of course I am. But whatever happened, it was a divine blessing. I'm certain of that, though I couldn't tell you how I know.\"\n\n\"Then one of the gods did choose you as a priest?\"\n\n\"It appears so,\" Bobo said. Then he chuckled. \"I guess whoever it was doesn't have very good judgement. Or maybe I was the only one available.\"\n\n\"You don't know which god it was?\"\n\n\"Who can say? Treya never did find out which god chose her. I tried to get her to talk about her own experience, but she was reluctant.\"\n\n\"You don't seem surprised by any of this,\" Corec said.\n\n\"Oh, I was and I am. But yesterday, there was a moment of ... I guess I'd call it clarity. For that brief bit of time, everything felt right, like the world was exactly how it was supposed to be. It hasn't quite worn off yet. Later, I'm certain I'll go over the battle in my mind and realize how insanely stupid I acted, but for now, I'm able to put that to the side.\"\n\nCorec nodded. \"So, you can heal people, like Treya does?\"\n\n\"Sadly, healing isn't one of my blessings. I only received what I needed in that precise moment. I could fight and defend myself, and banish the priests' spells. It's more complicated than that, but I've forgotten a lot of it already. I hope I'll remember it if I ever need it again.\"\n\n\"Well, from what Boktar and Razai told me, if it wasn't for you, they couldn't have held the line against those priests. Those other priests. Thank you.\"\n\n\"You're welcome,\" Bobo said, giving Corec a contented smile before continuing his work of loading up the carts.\n\nCorec returned to the job too. He had a lot of thinking to do. His warden senses could identify a mage if he concentrated, but he had another sense that he wasn't sure how to explain\u2014that strange sense of familiarity he'd experienced when meeting Razai, Sarette, and Leena. He suspected it had begun before that, but he hadn't been experienced enough to distinguish it until he'd met Razai. It didn't always happen. Some mages, like the enemy Seeker or Leena's fellow Travelers, didn't trigger the feeling at all.\n\nHe believed it had something to do with choosing mages for the warden binding spell, even though Yelena and Hildra hadn't mentioned anything like it.\n\nNow, he was experiencing the same sensation again, with Bobo.\n\nAnd with Ariadne.\n\n#\n\nThe next day, Corec and Ellerie headed to the palace to retrieve the armor and weapons from the room where they'd found the two spell books. They were both carrying lanterns, and Corec was holding a stack of blankets under one arm.\n\n\"How long do you think you'll stay here in the barrens?\" he asked her.\n\n\"You're worried about another attack?\"\n\n\"Yes. We got lucky this time, but the snake cult knows where to find us now. Taking away their Seeker won't help if we stay in the same spot.\"\n\n\"Boktar and Sarette will be back in five days with the small caravan. The big caravan will take ten or twelve days, I think. Nine wagons total. How much time will that give us?\"\n\n\"Maybe twenty days, including what we have on hand,\" Corec said. \"The small caravan's only bringing enough to stretch our supplies until the big caravan arrives, and if you're thinking of leaving soon, we'll need to keep those wagons here, which means we'll have to keep feeding all those mules.\" Once they set aside space for enough hay and oats to feed over sixty horses and mules, it would only leave them with, at most, three empty wagons\u2014two of which would be needed just to transport the equipment from the armory.\n\n\"Twenty days, and it'll take seven to return to Livadi,\" Ellerie said. \"Let's wait for the big caravan to return, then head back. That should leave us an extra day or two in case there's a problem.\"\n\n\"Will that give you enough time here?\"\n\nShe sighed. \"I could stay for months and not discover everything there is to know. Or Ariadne might tell me more in five minutes than I could ever have hoped to learn on my own.\"\n\nTreya had passed along several revelations from her conversation with the Chosar woman. Ellerie and Bobo hadn't seemed too shocked about Tyrsall being one of the Ancient cities, saying the idea had already been theorized by some historians, if only because of the name. They'd been more surprised about Terrillia, and about the fact that Ariadne had never seen a dwarf before.\n\n\"Has she spoken to you at all?\" Corec asked.\n\n\"No. I looked for her yesterday, but she was never around.\"\n\n\"I ran into her near the barracks, and then I saw her again when I escorted Marco to the northern colonnade. She'd turned on the lights on the third level. We really need to find out how she does that.\"\n\n\"Did she tell anyone where she was going?\"\n\n\"Not that I know of, but it's not like we can stop her. This was her home.\"\n\nEllerie nodded. \"Hopefully she'll come with us and answer some questions. In the meantime, ten days will give me enough time to finish mapping out the southern section. I'd like to explore the city in more depth, but I'll just have to hope I can come back someday to continue the work.\"\n\nThey'd reached the royal quarters, so Corec passed his lantern to Ellerie and summoned two mage lights, lighting up the chambers.\n\nAs they made their way to the formerly locked alcove, they passed a small oval table surrounded by ceramic shards. The table itself was empty.\n\n\"Did someone take the fox and the owl figurines?\" Corec asked.\n\n\"Marco wanted them so I brought them out last night, but I convinced him to leave the two sets of big statues alone\u2014and what's left of the furniture. It's not like we could have hauled that stuff anyway. He's willing to negotiate on some of the other artwork he's found.\"\n\n\"So you told him about your plan?\" Corec said, stopping near the alcove. He added another mage light, illuminating the suit of armor on its stand, and the weapons that still hung from the wall.\n\n\"I'm not sure it's really a plan yet, but yes,\" Ellerie said. \"He was willing to listen.\"\n\n\"Do you think Varsin and Burton will agree to it?\"\n\n\"I don't know. They'll receive a nice profit from the expedition, but they're already wealthy. The money may not mean that much to them, and Varsin really wants to push the Senshall name as being responsible for the discovery of the city. He won't be able to do that if he can't provide the location.\" She hesitated before continuing. \"I may have something that'll convince him, though.\"\n\n\"Oh?\"\n\n\"Don't tell Marco yet, but those spell books I found, I think they might be worth more than I thought. One of them in particular.\"\n\n\"Enough to change Varsin's mind? I didn't realize spell books were so expensive.\"\n\n\"It's not so much the spells but the other information. Bobo thinks it gives instructions on how to create the metals the Ancients used. The Chosar, I suppose I should say.\"\n\n\"The ones from their weapons and armor?\"\n\n\"Maybe. The descriptions seem to match.\"\n\n\"A light-weight metal that's stronger than steel? You're right, that'd be worth a lot.\"\n\n\"Not as much as it sounds\u2014the part we've translated so far seems rather complicated, and it requires a wizard\u2014but it's got to be worth something. It might be enough. But we want to make sure it works before we say anything about it.\"\n\n\"Hildra might be able to help,\" Corec suggested.\n\nEllerie frowned, but nodded. \"If she's a mage and a smith, I suppose she might have some ideas. We'll have to be careful, though\u2014the book won't be worth anything if we give away the information for free.\"\n\n\"Ahh, you're worried that if she sees the book, she could create the metal herself?\"\n\n\"Maybe. I'm still trying to figure out how we'd actually sell something like this. How much is the book worth? And is it worth more if we sell it just one time, or if we make copies?\"\n\n\"Senshall buys and sells iron and copper. They have contracts with the mines and the forges.\"\n\nEllerie appeared deep in thought. \"Sell it to Senshall? Or sell our share of it, I mean? That might work. Let's not say anything yet, though. Not until we know more.\"\n\nCorec nodded, then turned his attention back to the alcove, dropping the blankets to the floor and unrolling them. He lifted the maul from the weapon rack first. It started humming, and yellow sparks of light swirled around it.\n\n\"I think it's lighter than before,\" he said, setting it to the side. The hammer's hum and glow faded while he took the two longswords from the rack. One of the swords was ornate, still in its metallic scabbard. The other was plain, with no scabbard, though the two metal bands ringing the blade suggested there had been one originally. Corec slid the bands off, then laid the two weapons on one of the blankets and rolled them up into a bundle.",
        "Ellerie tried to lift the maul, but it wouldn't budge. \"It got heavier for Boktar. Maybe it got lighter for you because it's bonded to you the way the sword is.\"\n\n\"What am I going to do with two weapons nobody else can carry?\" he asked. \"The sword's bad enough. I can't even strap the damned thing to my horse.\" Despite the awkward length of the blade, Corec was forced to wear his sword harness while riding, which required angling it in such a way that the scabbard wasn't bouncing against the horse's side. If he tied the harness and scabbard to the saddle, it triggered the warding that made the sword much heavier. The horse could carry it, but not if Corec intended to ride as well. Luckily, the horse didn't activate the weapon's pain warding.\n\nEllerie snickered. \"I can't help you with that. Are you ready for the armor?\"\n\n\"I shouldn't touch it, right?\" Corec asked, eyeing the panoply. It was made from the same dull, brownish-gray metal as the hammer.\n\n\"I wouldn't. Its warding looks similar to your sword's.\" Ellerie pulled one of the blankets closer, then picked up another to cover her hands. \"I don't see any straps,\" she said, peering at the armor.\n\nCorec had been examining it too. \"No. If it had straps, they'd have rotted by now, and the armor would have fallen off the stand. I think some of these little square plates are latches.\"\n\nEllerie handed him the blanket she was holding, and he used it to lift the helmet off the stand and move it out of the way. Then he unfastened one of the metallic latches holding the breastplate to the backplate.\n\n\"Yes, that did it,\" he said. He reached for the next latch, but his hand slipped off the blanket and brushed against the armor. There was an immediate shock of pain shooting from his hand up to his elbow, and then a burning sensation, as if he'd pulled a hot cooking pan from the fire.\n\n\"Aaugh!\" he shouted, jerking his hand away. The blanket fell from his grasp. \"Bloody hell!\" There was a scorch mark running from his thumb down to his palm and wrist, and another crossing his next three fingers. He could smell burned flesh.\n\n\"Shit!\" he said, wincing in pain. \"Is that what it was like when you touched my sword?\" He showed Ellerie his hand.\n\nHer eyes widened. \"No, nothing like that. That looks bad. We should get back to Treya.\"\n\nCorec didn't argue. The pain wasn't getting any better. \"I'll come back tomorrow with my chain gloves and gauntlets,\" he said, grabbing the shaft of the maul with his uninjured hand and bracing the weapon over his shoulder. \"Maybe that'll work.\"\n\nEllerie gathered up the bundle with the swords and the two of them left the alcove, finding Marco entering the royal quarters.\n\n\"I thought I'd collect the pieces of the other figurines, in case we can put them back together,\" the factor said. Then he nodded in the direction of the maul, which had started glowing again when Corec picked it up. \"If you want to keep that, it has to come out of your share.\"\n\nCorec wasn't sure why he did what he did next\u2014the other man was just doing his job, and Corec actually sort of liked the fellow most of the time\u2014but he was still in a lot of pain. Plus, he had plans for his share. He needed money and the weapons and armor from the armory if he was going to hire and equip a group of armsmen to counter Rusol's red-eyes. He couldn't do that if he had to spend his entire share on an enchanted weapon he had no use for\u2014one that likely couldn't be sold, if no one else could even lift it.\n\n\"Here you go,\" he said, swinging the maul off his shoulder and dropping it headfirst to the floor, leaving the shaft pointing up. \"It's all yours. If you or anyone else can take it, then we'll sell it and divide up the shares. If not, I'm coming back tomorrow and taking it for myself, since it apparently wants me to. And no, it won't be coming out of my share.\"\n\nMarco stood there, his mouth gaping open as Corec strode off, Ellerie following him. By the time they reached the doorway, they could hear the other man grunting as he strained to lift the hammer.\n\n#\n\nTreya rubbed Corec's hand with a damp cloth, brushing away the last of the burn marks to reveal the healed skin beneath. \"It's done,\" she said.\n\n\"Thank you,\" he replied. \"Maybe you should go in with me tomorrow in case my gauntlets and gloves don't help.\"\n\n\"Why not just leave the armor where it is? We're leaving that statue because it's warded.\"\n\nCorec shrugged. \"Well, the statue's also bigger and harder to move, but you're probably right. Who's going to buy a suit of armor they can't even wear? I might as well give it one more try, though. I've got to go back to grab the maul anyway.\"\n\nShe snickered. \"I can't believe you did that to Marco.\"\n\n\"I should probably go apologize to him, but I'm not going to pay for the maul out of my share. If he's going to be an ass about it, I'll just leave it here.\"\n\nTreya nodded. The two of them planned to pool their shares with Katrin, Shavala, and Sarette so they could afford to hire armsmen to help face any other attack Prince Rusol might send their way.\n\n\"What should I do with the prisoners?\" she asked, changing the subject. \"If I heal them any further, they'll be up and about. Nedley and Razai traded off watching them today while I was busy, but with Boktar, Josip, and Sarette gone, it doesn't leave us with many people to pull guard duty.\"\n\nCorec glanced at the building where they were keeping the wounded mercenaries. \"I don't know. Ned's got to take care of the animals, too, and everyone needs to take watch shifts at night. We really don't have enough people to be watching over prisoners. What about that thing you did to those two red-eyes to make sure they couldn't hurt anyone? With the runes?\"\n\n\"Des and Arnol? I don't think it works like that. Whatever it was that I did, it was to stop them from ever again committing a specific crime that I witnessed them committing. I don't think I can just ... do it anytime I want, for any reason. I'm not sure this group did anything wrong other than believing the others' lies.\" She didn't mention that one of them had admitted he'd realized the cult members were lying. Corec wasn't likely to kill the men for that, but Treya wasn't sure how Ellerie or Razai would feel. Or Leena.\n\nCorec sighed. \"I guess we need to find a way to lock them up. Maybe one of the rooms inside the mountain that has a working door.\"\n\n\"One of the warded doors?\"\n\n\"I don't know if air can get through those, but there are some other metal doors that are still intact. Ellerie knows a mage lock spell\u2014I think those can be used on doors.\" Then he chuckled. \"Or if Leena's strong enough to carry a wooden door, she could buy one for us and bring it here, and we could use it for the room they're in now. We'd just need some lumber to frame it.\"\n\n\"It'd be easier to carry meals to them if they're inside our camp than if they're under the mountain.\"\n\nHe nodded. \"I'll talk to her about it. For now, see if Katrin can help keep watch. I think she could stop them if they tried to get away.\"\n\nAriadne approached then, still wearing her armor, and gave them both a solemn nod.\n\n\"I have found an appropriate spot to lay the Mage Knights to rest,\" she said. \"On the eastern slope of Mount Yadar, near the marshaling yards, there was once a memorial honoring the dead of the Second Demon War. The memorial and the yards are gone now, but it's a fitting place to honor the heroes of the Third Demon War.\"\n\nTreya glanced at Corec. The wars were something Ellerie would want to know about, but it didn't seem like the right time to ask.\n\n\"Nedley and I will dig the graves tonight,\" Corec said. \"Tomorrow, we can start ...\" He trailed off, apparently uncomfortable speaking to the Chosar woman about her dead compatriots.\n\nTreya could understand how he felt. As she understood it, in Ariadne's mind, they'd been alive just a few days ago.\n\n\"I will bring them out from the stasis pods,\" Ariadne said. \"The carts will suffice, but I will require assistance.\"\n\n\"Just let us know what you need.\"\n\nShe stared off into the distance. \"Will Owl be able to find us here? He should really attend the ceremony, but if people no longer live here, perhaps we won't attract his attention.\"\n\n\"Owl?\" Treya asked.\n\n\"Of course. The Mage Knights defeated the demon armies. It's only appropriate for Owl to attend the burial ceremony.\"\n\n\"No\u2014I mean, who is Owl?\"\n\nAriadne grew still. \"You do not know Owl?\" Her voice wavered. \"Do people no longer follow the ways of Wisdom?\"\n\n\"Is he like the old gods?\" Corec asked. \"Fox and Bear and Raven?\"\n\n\"You know them, but not Owl?\" The Chosar woman swayed, bracing her hand against a wall for support. \"What happened to him?\"\n\n\"I don't know. I've only heard of those three. So he is one of the old gods?\"\n\n\"Only your people call them gods, as if they were made-up stories like all the other gods you invent any time you wish. But your gods offer no proof of their existence. Only the totems make themselves known to us.\"\n\nThe animal statues Treya and Corec had first found on the western slope of the mountain had included a fox and a bear, as well as a bird that might have been a raven. One of the others had been an owl. The same seven animals had been depicted near the palace.\n\n\"Your totems,\" Treya said, \"are there seven of them? Like the statues in your fortress?\"\n\n\"Eight,\" Ariadne said. \"You refer to the totem walk in the courtyard. There are eight totems, but Snake isn't welcome in Tir Yadar.\"\n\nCorec drew in a sharp breath. \"Snake?\"\n\n###\n\nEpilogue\n\nCenturies of work had been wasted. Leonis had been a tool, but a useful one, and now he was dead. Unable to control his anger, Pallisur Traveled into The Lady's domain, which had changed since the last time he'd seen it. It now resembled one of the expensive apartments on the top level of West Tower in Tir Yadar. In the totemic realm, reality was subject to the whims of those who had mastered its magics.\n\n\"Hera!\" he shouted. \"What did you do?\"\n\n\"Exactly what I said I would,\" said a voice from behind him. \"I stopped you.\"\n\nHe spun to face her, gathering arcane power to strike and sheathing it within divine power to break through her defenses.\n\nShe struck first, shattering his spell even as it formed, then flinging him back against a wall. He'd forgotten how strong Herasis was, especially on her own ground. With the possible exception of the totems, who remained tight-lipped about their own abilities, she was the only being who'd ever wielded three magics.\n\n\"Do you think to violate our laws now?\" she demanded. \"At this juncture? Do you remember what happened the last time we fought?\"\n\nThe reminder brought him up short. When they waged war in the divine realm, their powers were reflected to the mortal realm, but magnified in such a way as to cause great destruction. After the first few incidents, the others had imposed rules on their behavior to prevent further damage. As if anything could be worse than the crime they'd already committed\u2014the crime Pallisur was trying to undo.\n\n\"The ritual must proceed!\" he said.\n\nShe raised an eyebrow. \"And risk another Burning?\" she asked. \"Never.\"\n\n\"I've changed the spell. There won't be another Burning.\"\n\n\"Oh, yes, your new ritual, the one that makes you the final arbiter of all who wield magic. What gives you the right?\"\n\n\"It's unfortunate but necessary,\" he said smoothly. \"It's the only way.\"\n\n\"It's certainly a convenient side effect, giving you supreme power over all mages. Do you really think anyone's stupid enough to believe that story?\"\n\n\"It doesn't particularly matter whether you believe it or not.\"\n\n\"And what will happen to the human and elven mages if you take over? You might try to hide it, but I know how much you hate them.\"\n\nPallisur growled. \"They don't deserve your concern. They enslaved our people!\"\n\n\"So you claim,\" Hera said. \"But the Chosar I knew ruled over all the peoples.\"\n\n\"Just because you don't want to believe a thing doesn't make it untrue,\" Pallisur said. But even if she did believe him, she'd never truly understand the reality of it. She'd been born long after The People had overthrown their oppressors.\n\nThe Chosar hadn't been intended as slaves; they'd originally been created as a symbol of the alliance between the two races. The agility, quickness of mind, and elder magic of the elves; the strength, inventiveness, and arcane magic of the humans. It was the humans and elves who'd named them Chosar, the people.\n\nBut then the Second Demon War had begun. Their creators had remembered fear, and they'd sent their children to fight in their place. That had been their undoing. By the end of the war, enough Chosar had been born and trained as soldiers to vastly outnumber the warriors of the other races. After The People had pushed the demons out of their lands, it had been almost easy to continue the process with the humans and elves.\n\nHerasis shook her head. \"Even if they once treated us as slaves\u2014seven thousand years ago\u2014you're the one who doomed the Chosar, Pallis, not them. You caused the Burning, not them.\"\n\n\"I can bring The People back! I just need the four magics to do it.\"\n\n\"And I suppose the fact that you'll gain supreme power has nothing to do with it?\" She gave him a look of disdain. \"If you're telling the truth, then we were created using only arcane and elder magic. You could have come to me at any time\u2014or Demesis, or Borrisur, or Irisis\u2014and we could have tried it. Now that the wildstorms are gone, with your help, we could have attempted to reverse the changes we made. But you didn't come to us because that's not what you truly want. You want to rule over everything.\"\n\nHe scowled. Why did she constantly question things she knew nothing about? \"The ancient knowledge is lost,\" he said. \"It would take millennia to recover the old methods. With the four magics, I can bring our people back! Our people, Hera! Not scattered creatures who look like us yet know nothing of our ways.\"\n\nShe shook her head. \"Even if I believed you, the Chosar had our chance and we failed\u2014because of you, and our own hubris. Our blood is scattered to the winds. Take pride in our children; don't dwell on our failures.\"\n\n\"You haven't won yet, Hera.\"\n\nShe stared at him pitilessly. \"You're no longer my biggest concern. We've got another problem. Rusol fought Leonis head on. That shouldn't have been possible. Someone granted him divine power. I don't recognize the aura\u2014it's not one of us. There's now a mortal wielding three of the four magics.\"\n\n\"He's your mortal,\" Pallisur said coldly, hiding his sudden burst of fear. Rusol hadn't ascended and shouldn't be able to merge the magics together, but he was a warden. Who knew what was possible? \"This is what you wanted.\"\n\n\"Not like this. And I certainly didn't intend to lose my pawn to an unknown opponent. Someone is interfering. Who can grant divine blessings, besides one of us? A demon lord must have ascended somehow.\"\n\n\"That's not possible.\"\n\n\"Then you explain it!\" she snapped.\n\n\"That's not my responsibility,\" he said. \"It's yours. You messed up again. You clean it up.\"\n\nAnd while Hera was busy with that problem, Pallisur could develop a new plan. She thought he'd been defeated, but she was wrong. If a mortal wielded three magics, it was time to break the rules, which meant Leonis was no longer necessary. After all, even if most of Pallisur's bondmates had died in the Burning, or during the difficult years that followed, he was still a warden.\n\n#\n\nThe hare had been fast, but the wolf was faster. He gorged, eating the whole thing. His hunting had been more successful lately, since he'd met the female of the tree-dwellers, but he still conserved his energy between hunts. It had been nearly three days since he'd last eaten, and now the hare would let him go another three days.\n\nIt tasted fine, though it would have been better roasted over a fire.\n\nRoasted?\n\nThat was a strange thought. Wolves didn't cook their food with fire. It was the tree-dweller female who'd offered him cooked meat once. He'd somehow understood the noises she made, which was another strange thing. It had been a long time since he'd understood the noises of the tree-dwellers and the other tall ones. A very long time.\n\nShe wouldn't let him hunt the horses though. They'd been standing right there, yet he hadn't been allowed to eat even one. How could horses be part of her pack? It was nonsense. But he liked the tree-dweller, so he'd left the horses alone.\n\nNo. Horses were a distraction. What had he been thinking about? Cooking. Such a very strange thought.\n\nThinking about strange thoughts was an odd thing for a wolf to do. Of course, thinking about things a wolf might find odd was also an odd thing for a wolf to do.\n\nHis mind was going in circles. Strange thoughts had come to him more often as of late. He felt like he was missing something important. Something about the tree-dweller.\n\nHe'd followed her for a time, but why?\n\nNo. He hadn't followed her. He'd followed her potential futures, to discover where she might be.\n\nPotential futures? That wasn't a wolf thought. That was a ...\n\nWolf jumped to his feet, ignoring the discomfort of his overly full belly. How long had he been like this? How far had he regressed?\n\nHe had to find Raven and Bear and Eagle. Owl was dead, murdered by one of the wardens after their insane attempt to sever the bonds that kept the Collision stable, but Wolf had to warn the rest of his brothers about Snake.\n\nTo be continued..."
    ],
    "authorname": "Ivy_Veritas",
    "tags": [
        "fantasy",
        "magic",
        "adventure"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/the-eighth-warden-bk-03-ch-35-36"
}