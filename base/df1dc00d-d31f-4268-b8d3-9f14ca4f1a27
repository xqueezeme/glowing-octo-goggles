{
    "title": "\u00c6gir's Wife Ch. 07",
    "pages": [
        "Bjorn fiddled with the tie, but nothing he did seemed to straighten out the mess that he had made of the knot tightening uncomfortably about his neck. Any more than he could straighten out the mess that had become their lives.\n\nIf the week had gotten off to a mixed start with confirmation of Kirsty's pregnancy to lighten the load of their run-in with Greta and mounting pressures at work, it had not improved. Work was getting worse by the moment: unrealistic deadlines, promises to customers that were impossible to keep, and increasing animosity with his up-line. \n\nNow this. Lunch with his in-laws was the very last way that he wanted to spend his Sunday. Brunch at a posh Chelsea restaurant was not his idea of a Sunday dinner. Tiny little quiches that would not be enough to satisfy even one of his mother's barn cats, let alone a grown man. A tiny portion of mixed greens and some fruit. For twice what it cost to feed a child for a whole month in one of those charity advertisements? \n\nBut that was his mother-in-law's pretentions. Being seen by the right type of people was important to Nancy Dickens. More important than her only child's happiness for certain. He shook his head as he yanked the tie off, unlacing it and preparing to start again. He had never truly understood all his wife's insecurities...until he met that woman. \n\nFrom the moment, the woman pressed air kisses to both of his wife's cheeks in greeting until the sideways half-hug that announced the ending of their monthly summons to attend to her royal highness the cold hearted bitch, it was a constant barrage of all Kirsty's seeming failings. Had she heard about this new diet? Kirsty should really think about taking this night course, it would double her opportunities to advance at work. Had she looked into joining the Junior League yet? It never ended. \n\nAfter his first meeting with the woman, he truly was amazed at how well his wife had turned out. Of course, maybe part of that was that her mother had had so little to do with her actual raising. Nannies, au pairs and boarding school had done that for her. It had made him even more grateful for the time he had had with his own mother. \n\nHe sighed, he wished Kirsty would video conference with his Mom. But since coming back here, she had steadfastly refused to speak to Petrine. She went so far sometimes as to go shopping while he and Monika talked with his mother and uncle most Sundays. He had tried to get her to talk about it, but she would not even do that. Nothing beyond some nonsense about her disappointing and failing another mother, which made no sense to him. \n\nHe knew that her refusal to speak to Petrine was hurting his mother just as much as it was Kirsty. Especially when she would not even participate in the teleconference with him and Mikael to announce Kirsty's pregnancy with their girls. He saw the tightness and forced smile when his mother told him to give their congratulations to Kirsty. \n\n\"Damn,\" he cursed as he once more got the knot off-center and too tight. \n\nHe saw his wife enter the room in the mirror and smiled...until he saw the unshed tears in her eyes, \"What's wrong, sweetheart?\"\n\nShe shook her head and brushed the back of her hand across her eyes, \"There's been an accident.\"\n\n***\n\nKirsty turned away from the woman, who had given birth to her. That was all she was now. A woman, who had chosen not to abort a clump of cells, which had unexpectedly changed her life. She smiled as she leaned down and caressed her daughter's slightly messy curls with one hand while softly cupping her other little girls with the other. \n\nThis was the last time, she had decided that when her mother greeted the news of her pregnancy with a heavy sigh and launched into her current diatribe on how could she be so careless, wasn't one child enough for her to manage, what about the career that they had spent good money preparing her for. \n\nMonika fidgeted on the chair as her mother's voice lowered into that deathly silent scream, \"You could have at least had the decency to wait until after you were properly married.\"\n\nBjorn's hand covered hers over their unborn girls, \"Your daughter and I are very much married, Missus Dickens.\"\n\nMonika began to kick the leg of table, probably sensing the change in her other father's tone of voice. Kirsty smiled...fathers. Despite everything, especially this incubator's opinions, that was how she wanted it. One big family.\n\n\"Your ridiculous barbarian customs aside, my daughter deserved better. We had always planned a lovely church wedding. Followed by a reception at one of the stately country homes of the gentry. All of her friends and family there,\" Nancy Dickens continued as her husband raised his third glass of champagne and drained the whole thing in a single gulp.\n\n\"Your friends, mother. The people that you want to impress,\" she sighed as Monika kicked the table harder. She wished with everything inside of her that Georgia had not fallen and broken her arm. She had tried to get a hold of Roz to see if she could watch Monika, but no such luck. She had even tried to reschedule this week's brunch, but her mother insisted that they had important things to discuss. \n\nKirsty had foolishly even looked forward to sharing the news of her pregnancy with her parents since she had not felt comfortable participating in the video call with Bjorn, Mikael and their parents. She swallowed hard and tried her best to fight back tears at the thought she had truly failed her mother-in-law. Petrine's disappointment and rejection hurt so much worse than this woman's had in many years. \n\nShe raised her glass of juice, ignoring the slight shake in her hands as she took a sip as her mother went on, \"You have spoiled everything again, Kirsty.\" Her mother gave her that stern look that she knew preceded one of the woman's lectures. \n\n\"There is a managerial position in the OT department open at Children's Hospital, but of course this pregnancy ruins another career opportunity for you. I suppose you will even want to take the full year's maternity leave off,\" the woman frowned and shook her head. \n\n\"Actually, my wife won't be returning to work at all once our daughters are born,\" Bjorn replied in a low tone as he clutched his fork tighter. \n\n\"What? What misogynistic malarkey is that? Young man, I know that you are from some backwards God-forsaken place that no one has ever heard of, but let me tell you that is not how it is done in civilized countries. Women...\"\n\n\"Civilized?\" His voice was louder this time, so much so that Monika began to rock back and forth in her chair with her hands covering her ears as she hummed. \n\n\"For the record, our culture has always been light years ahead of yours in terms of women's right. Our women, not only had complete control of their homes, including the wealth, but they fought alongside of us. Something you still deny your female soldiers. So do not lecture me on women's rights,\" he said as he stared directly at her mother.\n\n\"As for civilized...I am sure it has been years since your posh ass did, but try taking the Tube one morning during rush hour, then let's talk about it. Oh, and while we are on the subject, once our little girls are born, I am taking my family back home. Where we all belong,\" he finished as Kirsty watched the fork bend in his fingers. \n\n\"What? My daughter become just some haus frau and baby factory? We raised her for better than that. We invested too much money in her education. The best schools, private piano lessons, ballet...well she was never any good at that. Too tall and...not the right body shape, of course. But that is beside the point.\"\n\n\"Oh, no, that is the point, Missus Dickens. You have always seen nothing but the things you think are wrong with your child. You know until we came here, until I met you, I could never understand why a woman as smart, as intelligent, as strong and caring as my wife could have so much trouble accepting our love,\" he turned to her and smiled tightly, \"I do now.\"\n\n\"Hand me your phone, please, sweetheart,\" he held out his hand. \n\nKirsty frowned, but it was impossible to disobey him when he used that tone of voice. \"Yes, Sir,\" she replied as she dropped her eyes automatically and picked it up from the table, passing it to him.\n\n\"Sir? Did you actually refer to your husband as Sir, young lady? How barbaric? It is like that horrid book. Charles, do something. Say something to your daughter,\" she demanded turning to her husband, who merely continued to sip another glass of champagne with his eyes down. \n\nBjorn chuckled and shook his head as he handed her phone back to her, \"Doctor Dickens, if you wish to speak to your daughter please text me,\" he spoke directly to her father. \"As for you, Missus Dickens...\"\n\n\"Doctor Dickens. I am a physician too. Did you conveniently forget? A respected one too. More highly paid or respected than my husband, I'll have you know,\" she replied.\n\n\"And I am certain you never let him forget it either.\" \n\nMonika kicked the table and began to fight all of Kirsty's calm reassurances. Her mother's glass of red wine tipped over and spilled across the table, \"For god's sake, why did you have to bring that urchin, Kirsty? I certainly hope that our genes are dominant enough that those...\"\n\n\"Those what, mother?\" Kirsty wrapped her arm around her daughter and drew her onto her lap. \"Burdens? Accidents?\" \n\nShe felt the hot tears cascading down her cheeks then. She saw the people at the next table looking at them. She knew it was yet another of her failings that this woman would hold against her. But she did not care anymore. \"Babies, mother. Children. Blessings. Your granddaughters. And for the record, they are very much planned and wanted. By all...\" \n\nShe caught herself a moment before saying, 'all of my husbands.' She blushed and looked up to see Bjorn smiling and doing his best to stifle the laughter. \"All of us,\" he finished for her. \n\n\"So if you will excuse us. The tension here is too much for our daughter. I am taking my girls home now. But as I was saying, Doctor Dickens, I am happy to arrange for you to see your daughter and grandchildren if possible. But until your wife can manage a more 'civil' tongue, I will not have her around my family.\"\n\n\"Well, I never...\" her mother harrumphed. \n\nBjorn did not bother to hold back rich laughter then, \"If I had not held your daughter in my arms and heart so often, yeah, I would swear that you never had either. But I am glad you did...at least that once. For that I am truly grateful to you. Excuse us now, please,\" he said with much more calm civility than Kirsty would have sworn possible. \n\nThis time, her husband reached into his pocket and threw down a wad of bills on the table as he lifted their little girl and pulled out her chair, \"I'll take her, darling. Oh, and don't bother trying to call or text your daughter, Doctor Nancy Dickens. Your numbers are blocked now.\"\n\nKirsty smiled and felt far more confident and... She searched for the right word. Pleased? Satisfied? Vindicated? Freer? Yes, freer than she ever had in her life. She softly caressed her still only slightly bulging tummy. Well, except for that once. When her little girls were made in love. \n\nNow she just had to figure out what to do with her new found freedom. How to convince Bjorn to take them home now. And the Holding was home. Home and her family was what she wanted now. The family that she had chosen. \n\nShe swore she would find some way to rebuild it all. Her relationship with Petrine. Heal the pain that she saw in Mikael's eyes and heard in his voice every time they video conferenced. Yes, she would even find a way, some way, to make peace with Sven. Even if she could never reach him, never win his love. She would find some compromise, some common ground to build a future for her family upon. \n\nShe smiled as she remembered the closing scene of one of her all-time favorite movie, \"The Holding, I'll go home to the Holding. And I'll think of something. I always do. Because after all tomorrow is another day,\" she whispered under her breath with a secret smile. \n\n***\n\nBjorn was exhausted three hours later as he carried Monika into their building. The princess had been so agitated that Kirsty felt it was best not to attempt the Tube, even a relatively quiet Sunday one, until she had run off some of the steam. \n\nSo he had used the GPS on his phone to find a park near the restaurant. The first one had been nothing more than green space with older people giving them dirty looks for allowing a 'wild', 'ill-mannered' urchin to run about. It seemed that manners were something these people had no idea about, considering they felt it perfectly acceptable to openly criticize others whom they knew nothing about.\n\nThose few minutes though had been enough to calm Monika so they could catch the bus to Hyde Park. Of course, only a tiny corner of that famous park was truly child-friendly either. But Monika had really fallen in love with the Princess Diana Memorial, the sound of running water seemed to soothe her as nothing else could. Kirsty had even withstood a few more stern glances and allowed her to splash and play, which had actually been the original purpose of the exhibit. \n\nOnce she was calmer, they had managed to make their way to another area of the park. The huge wooden pirate ship and castle had weighed on his heart and mind. It was the first time he had seen his niece truly happy since they had come to this purgatory. \n\nThe wooden climbing frames reminded him of the play area that the three of them had built for her when Greta was still pregnant...and of course any other children that might come along. Bjorn remembered the way that they had laughed and joked as they worked. \n\nThough the Holding had remained in their family for centuries, it was a constant work in progress. The play area had been merely one of the latest. Perhaps he would ask Mikael about finishing up the house he had begun at the back of the property. It would give them some space away from Sven. \n\nOf course, for Bjorn, it was the castle that had brought back the strongest memories. It was much more ornate and solidly constructed than the fortress that Mikael and Sven had built from him. Still he had not been able to fight back the sadness as he caressed the smooth wood. How had they come to this? Brother against brother? Broken and divided. \n\nHe forced himself to smile reassuringly at Kirsty as the elevator doors opened on their floor. He supposed he should be grateful that his wife was not angry about his 'disagreement' with her mother. They had spoken as Monika splashed in the fountain. He was relieved to find out that rather than anger Kirsty was actually grateful for the way that he had taken control when she simply did not know how. \n\nThe elevator came to a stop and he smiled as best he could to his wife, \"It will be fine, I promise.\" Even with his niece's head laying on his shoulder, he wished that he could believe his own words. \n\nKirsty only nodded slightly as she took the keys out of her purse and opened the door. She squealed the moment she threw open the door. He turned and was shocked to see Mikael sitting on the couch. Shocked and delighted. As if he had magically conjured him up somehow. Just when they needed him most. \n\nTheir wife raced to him and threw herself in his lap, wrapping her arms about his neck and burying her face in his shoulder, \"I am so glad to see you.\" \n\nThis time Bjorn's smile was genuine. The jealousy that he might have once felt at his wife's reaction to his brother was gone. He was probably just as happy, perhaps more so than she was to see the man. \n\nUntil he saw the dark shadows under his brother's eyes, the tightness of his mouth and the deeper cresses in his forehead and around his eyes. \"What is it, Mikael? What's wrong?\" he asked as he closed the door behind him.\n\n***\n\nMikael wrapped his arms tighter about his wife's waist as she drew back to stare at him. The woman never had been any fucking good at hiding her emotions and what he saw there now only compounded the issue. Concern, worry, fear. \n\nHe wanted desperately to calm and reassure her. Tell her that everything was going to be fine. But he could not. \n\n'Guarded', whatever the fuck that meant, was the last word that he had received from their mother. He shifted enough to grab his phone and check on the time. He must have fallen asleep on the couch because over two hours had passed since he arrived, only to discover they were not home. He had been grateful that Bjorn had insisted he have his own keys to the flat and had let himself in when no one answered his knocks. \n\nTwo days at sea. He and Karl alone this time. There was no fishing, of course, just piloting the boat as fast as safely possible across relatively calm seas. He would have preferred just phoning Bjorn and having the three of them fly back, but his mother had insisted that he needed to go get them, be the one to tell them himself, especially with Kirsty being pregnant. He was not going to argue with his mother just then either.\n\nHonestly, he was almost as worried about her as he was his older brother. She had become increasingly withdrawn since Bjorn had taken Kirsty and Monika back here. Then his brother's accident and what they learned later was a heart attack. He had not seen her this broken since he was a child...and it bothered him just as much now as it did then...even more.\n\nRight now though, it was their wife and his brother that he needed to soothe. He forced a smile and held out his other arm, \"Give her to me, please.\"\n\nBjorn shrugged his shoulders, \"She's asleep now. Normally, we would not let her nap, but something tells me that a bit of quiet adult time might be worth her being up half the night. I'll just put her in her bed then we can talk.\"\n\nMikael nodded reluctantly. As much as he needed to hold his baby girl, what his little brother said made more sense. He turned his attention back to their wife as Bjorn headed down the hall with his tiny burden. \n\n\"What is it, Mikael?\" she frowned. \"What's so wrong that you have not messaged me in three days? Why couldn't you just call us? Why did you have to come all this way? Is something wrong with your father? Did something happen to Petrine? Please just tell me now,\" she spoke rapidly. \n\nHe shook his head, \"My father is fine. And Mom is...\" He searched for the right words, \"Managing as best she can.\"\n\n\"Then what? What is wrong?\" She frowned even more as her hand rubbed her stomach. \n\nHis eyes could not help but follow the movements. His own larger hand covered hers. His eyes widened as he felt the distantly familiar memory of his child moving inside her. \n\n\"Oh my sweet Freyja.\"\n\nHis wife arched on his lap, her crotch rubbing against the front of his jeans as she cried out, \"Why the fuck did you do that?\" Her eyes rolled back in her head as it tilted back, her long red hair falling almost to her round bottom as the pleasure coursed through her, echoed in low moans and whimpers as the orgasm continued to roll through her. \n\nBy the time that she collapsed against his chest, her face a nice pink and her breathing fast and shallow, he was as hard as a rock. Despite everything, his body still craved and needed his wife as he leaned his chin on top of her head, \"I have missed you so fucking much, lilla gumman.\"\n\nShe whimpered and snuggled closer as his little brother came back down the hall. Bjorn stood for a moment watching them. Mikael felt almost like an outsider, like he was the one who was cheating with his brother's wife, not that either of his had taken Greta up on her offer. \n\nBut the feeling was not comfortable anyway, he shifted and went to push Kirsty away, but Bjorn shook his head as he took a seat on the wooden coffee table in front of them, \"So if it is not Olaf or Mom, what is it, Mikael? What is so bad that you came all this way instead of just calling?\"",
        "Mikael knew this was going to be hard on her especially as he lifted her chin to stare into those expressive eyes as he spoke, \"It is Sven.\"\n\nAt first she smiled, \"You did it then? You convinced him? Was it the babies? We can go home?\" Her face shone with joy as she spoke and he hated himself for what he knew he must do.\n\n\"Yes, I came to take you home, elskling.\" He sighed as he looked over to his little brother, his eyes pleading for his help, \"There's been an accident.\"\n\n***\n\nPanic welled inside of her. Her heart pounded so wildly inside her chest that she was certain it would break through her breastbone and plop onto the floor at any moment. She truly could not breath; fear had its gnarled hands wrapped more securely around her throat than any of her husbands ever dared. \n\nShe felt her body begin to shake as it did only a couple of times when she went deep into subspace, but this was not that comforting warmth of floating between pain and reality. This pain was so much worse than anything they could do to her physical body. And she was helpless, powerless, she felt hope for the future slipping through her fingers like the sands of time. \n\n\"Breathe, lilla gumman, breathe,\" his voice was distant. The only thing that was clear and loud was fear. Failure. She had failed. Failed to reach him. Not been able to give him the comfort and solace that he needed. Had been a thousand miles away when he needed her. \n\nAnd now it was too late. He was gone. She would never have the chance to tell him how she felt. He would never have the chance to see their babies. His little girls. \n\nThe babies. Oh sweet goddess, what was she doing to them? They could feel everything that she was. Her hands cupped them as she closed her eyes and tried her absolute best to calm herself. She knew all the techniques. She tried to breath in slowly but it came out only a huge gulp. \n\nShe tried to remind herself how important it was to her little girls that she get herself under control, but all she could think was him. Gone. Too late. Failed. She felt the hand of fear squeezing her chest then. The weight tightening and constricting. And the more she fought to get herself under control the further it slipped. The deeper she went into the panic attack.\n\nSuddenly, she felt surrounded. Enclosed. But this was not by fear. Hands firmly gripped her shoulders as solid warmth pressed against her back. Fingers bracketed her face, gentle but demanding. \"Look at me, Kirsty,\" his breath caressed her cheek as his fingers did her skin.\n\n\"Open your eyes, sweetheart,\" Bjorn's voice echoed Mikael's. His breathed almost directly into her ear as sparks skittered down her spine. \n\nHer obedience was instant. Pre-programmed into her submissive mind. It was not a choice. It was merely an automatic reaction, like kicking out when the doctor hit your knee with a tiny hammer. Her eyes met his dark gray ones. \"He is not dead. Do you hear me, lilla gumman? Calm yourself. Sven is not dead.\"\n\nAir filled her burning lungs as she nodded her head. His words registered, but still did not seem real somehow. She wanted to believe him. Wanted to think there was still hope. That it was not too late. But she did not truly dare. As if Fate would cruelly snatch it all away if she did. \n\nShe burst into tears. Her body shaking with their power as four arms wrapped solidly about her shoulders and waist. Holding her as she let it all out. All of the stress of this day. Georgia's accident. Her mother. Sven. This place that had never felt right, but she had never known anything else...\n\nUntil him. Until he touched her elbow and drew her through that turnstile in Tilbury. Until his laughter that she knew did not come easy sent those butterflies in her tummy to flight. Until she first stepped on board \u00c6gir's Captive. Until she had tasted his lips. Until his ropes had freed her. He had captured her heart as surly as he had her body. \"Sven?\"\n\nMikael nodded as he inhaled, \"Are you ready to listen now, elskling? Can you focus?\"\n\n\"I think so,\" she whispered with a slow nod.\n\nMikael moved over a bit on the couch, his arms still firmly enclosed her waist, as they made room for Bjorn to join them. It took them a moment to get settled as the brothers sat shoulder to shoulder with her body draped half over each of them, cocooned against solid muscle. \n\nMikael's arm was draped over her shoulder with his hand resting on her upper tummy. He smiled as one of the girls objected and pushed as firmly as she had ever felt against it. Her breath caught at what clearly for the first time felt like a baby's kick. \n\nBjorn pushed her sandal aside with one hand. His fingers begin to knead and rub her feet as she felt tension begin to ease from her body. He looked up at her with a soft smile as his other hand came to rest on her lower abdomen. \"Know this, my love, whatever comes we face it together.\"\n\nShe nodded her agreement as she looked back and forth between them. Together. Together they could face whatever was to come. That had been the problem these last few months. They were not together. Each of them had been isolated, alone, separated and adrift on the sea of life. \n\nHer hands covered theirs over their babies. \"Together is how it should have been all along.\"\n\n***\n\nBjorn felt the censure of his wife's simple words to the bottom of his soul. He was not ashamed of the tears that gathered in his eyes. This was his beloved wife, the one he had chosen, and the brother that as Mikael taunted 'had changed his diapers.' He could be real with them. It was safe. \n\nHe leaned over, his forehead touching hers, \"I am sorry, my love. Sorry for my jealousy that has hurt you so much, forced you to choose. It was not how it was supposed to be...not how I meant for it to be...and that was my fault. Can you forgive me?\"\n\nHer fingers laced through his as their little girl brushed against his palm and he knew then what family truly meant. He leaned back enough to look up at Mikael, \"I'm sorry for being an ass to you too.\"\n\nMikael laughed and tousled his hair, \"Damn, brat, what's happened here? Why you have to go and grow up on me?\"\n\nFor once, he did not even resent the familiar action. It was comforting almost. Bjorn chuckled and shook his head, \"You have no idea, big brother.\" He sighed and forced as reassuring a smile as he could manage as he met her deep blue eyes that were darker still with worry, \"But right now, I think there are more pressing matters.\"\n\n\"More pressing matters? Fuck, what have they done to you, kid? Mama will have a cow at how posh you sound,\" Mikael's face scrunched as he spoke of their mother and warning bells rang in Bjorn's head.\n\nHe might have wanted to protect her, their babies, but his own words about facing it together came back to quickly haunt him. There had been enough secrets between them these past few months as it was, \"So how bad is it?\"\n\nMikael shifted their wife on his lap so that they were eye to eye, \"Sven asked me if he could finish the cabin at the back of the property that I had begun for Greta after Monika was born.\" He dropped his eyes and his voice for a long moment, \"I had thought maybe if we had our own place, some privacy.\" He paused and shook his dark head. \n\nBjorn noticed the tears glistening in his brother's steely eyes...and he knew that Mikael knew. His brother somehow knew that his wife had come to him. Tried to seduce him. \n\nHis gaze dropped to Kirsty's tummy, hands four of them, his, Mikael's and both of hers formed a lattice work to protect their babies. \n\nBut still guilt swamped him. How could he ever look his brother in the eye again knowing what stood between them?\n\nThen he felt a large calloused hand covering his and Kirsty's. His brother squeezed their hands and Bjorn looked up reluctantly, \"It was not your fault, kid. I don't blame you. I never did.\"\n\nHe wished it was that simple, but the truth was he always blamed himself. Had he inadvertently said or done something that had made Greta think he was interested? Not that he ever was. Cold hearted stick figures had never appealed to him, even in cartoons. \n\nKirsty looked back and forth between them, \"Someone want to tell me what is going on here?\"\n\nMikael kissed the tip of her nose, \"Nosey little brats get in trouble, sweetheart?\"\n\n\"And I guess trouble will have to wait a few months,\" she replied with a grin.\n\n\"Oh, trust me, sweetheart, there are still plenty of things we can and will do to punish you...when necessary,\" he said with a playful swat on her inner thigh. \"And to reward you too when you are our good girl.\"\n\nBjorn would not have believed how easily his brother could make their wife blush and shyly cast her eyes down, \"Yes, Sir.\"\n\nWith another heavy sigh, \"But right now, I have come to take you all back home. Well, Oslo anyway.\"\n\n\"Oslo? Not Bod\u00f8?\" If they had taken Sven all the way to a hospital in the capital, it could not be good. \"What happened exactly?\"\n\nMikael looked at their wife as he answered, \"Like I said Sven asked to finish the house that I had begun for Greta. He was going to move there. So things would not be so... So you would be comfortable coming back to the Holding.\"\n\nShe nodded, \"He had some kind of accident then? Quit stalling, Mikael. How bad is it? You said he is still alive, right?\" \n\n\"Ja, he is still alive, elskling. At first we thought it was just an accident, that he had lost his balance somehow and fallen from the roof,\" this time Mikael looked to him, \"But when the doctors in Bod\u00f8 examined him...\"\n\n\"What, damn it, Mikael? What?\" their wife pummelled his brother's chest until he captured both her hands in one of his.\n\n\"He had a heart attack.\"\n\nThe words hung in the air. They did not register for a long moment in Bjorn's befuddled mind. Then all he could see was his father. Ashen, his lips blue. The great bear of a man that Bjorn thought was as immortal as the gods of Asgard laying still, fighting for each breathe. \n\nOnly one thought drove him and them to get back to the Holding...his mother. His father and they knew it was too late. Only one thing mattered to the man...telling his mother the one thing he never had...never could.\n\nWas that what this was? Had his brother called for their wife as his father had Petrine? What would that do to her now? To the babies? Were these baby girls destined to grow up without one parent as Sven had always felt he had? \n\nHe might have been mad at his brother. Mad enough at times to kill him, but not to want him truly dead. He held his breath and hoped against hope their family's history was not repeating itself.\n\n***\n\nKirsty fought to get her heart beat under control to breath slowly and deeply. She felt the girls kicking in protest inside of her as they never had. She knew she had to do this for them.\n\nBut sweet Freyja, she could only think about the way Petrine trembled as her tears cascaded down her cheeks when she spoke of Stig. Of the regret at words unspoken. Oh please, don't let that be us too.\n\nAt last she calmed herself enough to again ask the only question that mattered to her just then, \"But he is alive, right?\"\n\nMikael nodded slowly, but his forced smile was less than she hoped for. \"Mama said the doctors were 'guardedly optimistic.' Whatever the fuck that is.\"\n\nShe let out a breath that she had not even been aware she was holding. Having worked in and grown up in hospitals with two doctor parents, she knew that answer. \"It means he will probably make it, but the doctors need to cover their asses.\"\n\nBjorn and Mikael chuckled as she tried to stand up, \"So when do we leave? When is the next flight out?\"\n\nMikael drew her tighter into his embrace as he shook his head, \"I bought the boat. We don't want you flying right now. Besides...\" He looked directly at Bjorn, \"Besides you need to pack. You aren't coming back here.\"\n\nShe turned to Bjorn as she saw him open his mouth to argue, \"He's right. You know he is. We don't belong here. You said as much to my parents yourself.\" She reached out and caressed his handsome face, she really did understand how he felt. Especially now as she faced her worst fear...losing one of them. \"Please, Bjorn, I want to go home.\"\n\nShe knew she had won when he inhaled deeply and sighed. She wrapped her arm about his neck and drew him down for a lingering kiss, \"I promise...I will do whatever you say. I won't take any risks with the girls or myself. You have my word on that.\"\n\n\"We are taking an apartment in Oslo. The whole last month, hell, maybe your whole last trimester, we are living there.\" He turned up his nose, \"As much as I hate cities, all cities, I mean it.\"\n\nKirsty was not looking forward to spending the final weeks of her pregnancy far from the only place that she had ever felt was home, but she would deal with that later. Turning instead to Mikael, \"When do we leave then?\"\n\nHe shook his head, \"It is too late today. Besides I want to give you time to pack whatever you and Monika need. Mama said that Sven is coming in and out of consciousness. Once he is stable they need to do surgery to put pins in both his legs where he broke them in the fall. He is responding well to the drugs they gave him to break up the blockages that caused the heart attack, but they said they still might do angio...\"\n\n\"Angioplasty,\" she supplied. \n\nHe nodded, \"Yeah, that. But he is still being a stubborn, pain in the ass and won't consent to any surgery until he sees you.\"\n\n\"Damn him! He'll wish he was dead before I am through with him.\"\n\n\"Oh, I just bet he will, brat,\" Mikael smiled as he nuzzled his beard against the side of her neck.\n\nShe found it hard to breathe again as her heart pounded more quickly once more. But this had nothing to do with fear. And everything to do with desire and love. \n\nAs much as she loved Bjorn, she had so missed this man. They might not talk for hours about the classics, or philosophy, or some obscure mathematical theorem, but the easy way he made her laugh was just as freeing to her soul. And of course, his pain. Oh, she missed his pain. \n\n\"Tomorrow did you say? So tonight?\"\n\nHe shook his head, \"You have packing and resting to do, lilla gumman.\"\n\n\"There isn't much really.\" She frowned, how was it that in five months here with the exception of a few of Monika's toys there was nothing worth taking. She smiled...except the new flogger, of course. Which brought up another matter...\n\nShe beaned Mikael upside the head. \n\n\"Hey, watch it, brat. What was that?\"\n\nShe scrunched up her face, \"That was for the fact that at no point in the past year did your sorry ass think to tell me that your ex-wife and Monika's mother was the perfect size zero and one of the world's top models.\" She struggled to get up but once more he wrapped his arms about her tighter as she saw Bjorn snickering. \n\n\"And what does that matter, elskling? You've met the bitch. What exactly do you think is perfect about her? After a while bones poke you in the wrong places. And no amount of make-up can hide the ugly in that woman's heart. My ex-wife was as cold as the fish we keep on ice in the hold of \u00c6gir's Captive.\"\n\nHe slapped her backside lightly, \"And not nearly as warm, sweet or soft as the wife I love.\" He buried his face in the side of her neck, \"\u00c6 \u00e6lske d\u00e6.\"\n\nShe drew back and looked at him, \"What did you say?\"\n\n\"\u00c6 \u00e6lske d\u00e6. I love you.\" He looked at her puzzled, \"I am certain I must have told you that before.\"\n\nShe shook her head, \"No. Jeg elsker deg. English, maybe even French and German once or twice but not that one.\" Her throat was getting tighter and she fought back tears.\n\n\"I'm sorry if I upset you, elskling. It is just the local dialect. Does it really sound all that different?\"\n\nShe felt the tears slipping down her cheeks as anger warred with self-loathing and joy. \"He better hope he dies, because I'm going to kill him if he doesn't.\"\n\n\"What are you talking about, sweetheart?\" Bjorn asked.\n\n\"Sven. He said that. On the boat. When you...\" she blushed, remembering how Bjorn had interrupted their love making that afternoon. The day that their girls were conceived. She rubbed her hand over her tummy slowly, \"I am going to kill the man.\"\n\nMikael on the other hand found nothing but humor in the situation, \"Damn, that explains everything. Fuck, if I had known, we would have never sent you away...stubborn, pig-headed.\"\n\n\"Sven or you?\" she challenged her husband. \n\nBjorn laughed, \"All of us, sweetheart.\" He turned to his older brother, \"Take our wife into the bedroom and teach her some manners. There's a gag ball in the night stand. Use it.\"\n\nKirsty was about to protest that she had packing to do, but the truth was that despite all of the day's revelations, or maybe because of them, she desperately needed her beloved sadist. But she did not want her gentle white knight feeling left out either, \"What about you? Join us, please.\"\n\nBjorn shook his head, \"Monika will be up soon. There is packing to do. And I need to send an email resignation.\" His smile was the brightest then that she had seen since they came to London. \"I will join you later. After Monika goes back down for the night,\" he chuckled, \"probably much later.\"\n\n\"Promise?\"\n\n\"I promise. Now get her out of here, big brother. And make sure she gets at least some rest,\" he added sternly. \"It's been a hell of a day.\"\n\nKirsty could not argue with Bjorn's logic as she stood and held out her hand to Mikael. \"Ready for battle, Sir? Your brat is so going to enjoy having the upper hand this time,\" she chided as she rubbed her tummy. \n\n\"Don't count on that, brat. There are a hundred ways I can punish you and give you pain that won't put those babies in any danger.\"\n\nHer eyes went wide with delight, \"A hundred?\"\n\nHe shrugged as she dragged him down the hall, \"More or less. You can keep count if you like, but remember the rule. If you lose count...\"\n\n\"We start all over from the beginning, Sir,\" she smiled and winked at Bjorn as he rolled up the sleeves on his dress shirt and powered up his laptop on the coffee table. She would be so glad to see him out of those shirts and ties and back to the sea where he belonged. \n\nShe just hoped that Sven would one day be at the helm again. Though from the sounds of it that might not be any time soon. But the only soon she was thinking about at the moment was the saucy grin on Mikael's face as she closed the door to the bedroom.\n\n***\n\n\"Strip, lilla gumman,\" Mikael commanded. \n\nHe watched the play of emotions on her face as she stood by the door. Her hand gripped the knob until her knuckles turned white. He could see the battle wage in her beautiful mind. It was time to end this war...once and for all.\n\n\"I said strip, Kirsty. And I mean it.\" He closed the short distance between them until he towered over her. \"You have one minute to get out of those clothes. Or you will be denied your beloved orgasms.\"\n\nHe leaned in and whispered, \"Remember that first time on the boat? Tied up as we played with my knife. Remember how I ate your sweet cunt? How I kept edging you? Getting you so fucking close only to deny you at the last moment. This time I won't let you come at all, elskling.\"\n\nHe drew back so that they were eye-to-eye once more. Her cheeks were flushed the most delightful pink. Her breathing was shallow and her chest that appeared just the tiniest bit fuller heaved with each inhalation. \"Is that what you want, Kirsty?\"\n\nHe chuckled at how quickly she shook her head. His hand connected solidly with her outer thigh, \"My baby brother may have tolerated such bad manners in his sub, but I will not in mine, dear wife.\" He gently caressed the same stop for a moment before sinking his fingers deep into the tender flesh that he knew must still be stinging; she jumped. \"I said strip, Kirsty.\"\n\nHe saw the tears glistening in her clear blue eyes. He knew that this was perhaps the hardest command that any of them ever gave her. He realized too that their conversation in the living room about Greta was still fresh in her mind. ",
        "Her insecurities were no longer buried, all floated like flotsam and jetsam on the surface of her mind. Which was exactly why now was the perfect time to skim them away, clear the oceans of their marriage, and make their wife see herself as they saw her. Beautiful from the inside to the out. \n\nHer fingers trembled and her eyes were focused on the ground. It took far longer than the one minute that he had given her, but he would let that slide...this time. Though perhaps what he had in mind next was a far worse punishment in her mind than anything she could imagine.\n\nHe guided her around the cramped space of the tiny room until they stood in front of the full length mirror on the door of their wardrobe. He stood behind her, his hands resting lightly on her shoulders, \"Look up, Kirsty.\"\n\nShe shook her head again, but caught herself this time. \"Please, Mikael. Please, Sir, I can't,\" she pleaded as huge tears escaped the corner of her eyes. \n\nHe bent and kissed away each tear, \"Yes, yes, you can. Because I told you to, elskling. Look up. Look in the mirror, Kirsty.\"\n\nShe inhaled deeply and more tears escaped those expressive eyes, but this time she obeyed. He rewarded her instantly, \"Good girl, lilla gumman.\" His hands ran up and down her arms, spreading warmth. \n\nHe stepped closer to her until the rough front of his jeans rubbed against her round, bare ass. He rubbed his face against the side of her neck and whispered, \"You're beautiful. So fucking beautiful.\" The way she stiffened in his arms told him even more than the shake of her head that she did not believe him.\n\n\"Look in the mirror, Kirsty,\" he commanded once more. \"Look at my face, my eyes. Do you understand me?\" \n\nThe way her throat constricted and more tears trailed down her cheeks was almost his undoing, but he knew that they must bury these demons before they returned home. There would be enough battles that lay ahead to reunite and rebuild their family. To create a better place for their girls, his hands found her round tummy and as she always did when he touched her there, she shuddered, and not with desire the way he preferred. \n\nHe chuckled as his girls awoke and protested against his palm once more, \"How the fuck could you and little brother not notice?\"\n\nHer eyes dropped to the floor once more, \"I guess I just thought I was getting even fatter. My tummy has always been too big,\" her voice was barely a whisper as she finished. \n\nHe shook his head at the depth of pain he heard in her voice as it broke on those words...fat...big. How could she not see her true beauty? He swore that she would before this day was over. They were leaving this demon in this place. A fresh start deserved nothing less. \n\nHis hand over her tummy tightened just enough to press her bottom against his erection but not enough to bother the girls too much. \"Does it feel to you like I am turned off by your soft curves, my beloved wife?\"\n\n\"That is just sex. Biology. Men can...\" she stammered. \"It doesn't mean anything.\"\n\nHer words angered him in a way he did not think was possible. He had never wanted to break her the way he had Greta, especially at the end. He fought with everything inside of him to leash the darkest of his sadistic thoughts. She could be glad that she was pregnant or he was not certain what he was capable of. \"Look at me. Look in the mirror. Look at my eyes, Kirsty,\" his voice was low and tight. \n\nShe obeyed instantly, which was probably for the best. \"You will be punished for that. It may have to wait until these babies are born, but I will make damned sure you are reminded of what is to come often enough that it will be a punishment all on its own. And you know damned good and well that you fucking deserve it...and more.\"\n\n\"For over a year, you have had all three of us wrapped around this pretty little finger,\" he tried to lighten things just enough that she was no longer trembling in his arms as he brought her hand to his mouth and suckled her pinkie deep. \n\n\"Bjorn was already fucking head over heels before he even met you.\" He tapped her temple with her own wet finger, \"How many women do you think could capture that boy genius's interest like that? Has he ever told you? You were his first.\" He chuckled at how red she turned at his words, \"So he has then.\" \n\nHe smiled at her in the mirror, \"And me?\" He shook his head and sighed heavily, \"Two fucking weeks, elskling. In the space of two weeks, you healed the anger and hurt that my family had tried for over two fucking years to do. And my little girl, you gave me back the only damned good thing that woman ever did.\" \n\nHe was fighting tears and his throat was tight, but he forced himself to continue, \"If that was not enough, you broke through walls that Sven had built for a lifetime. A lifetime, lilla gumman.\"\n\nHe gripped her shoulders tighter and turned her to face him, only the precious lives that she carried in her womb kept him from shaking her until she finally saw sense, \"Do you have any fucking idea how much that hurt? For you to say that anything that has happened between the four of us this past year was...'just sex'. That it doesn't mean anything.\"\n\nThey were both crying a moment later when she finally had the courage to look up at him, \"I'm sorry,\" she mumbled.\n\nHe chuckled as he brushed her tears away, \"You're not getting out of your punishment that easy, sweetheart. In fact, it won't be just me either. You insulted all of us. Demeaned what we all feel for you. So you will answer to all of us. That much I promise you.\"\n\n\"But that will wait, Kirsty. Tonight we bury these doubts and insecurities once and for all. I thought we had done so once before. Do you remember the morning I made love to you, counting each and every one of the ways, the things I love about this body?\"\n\nHis hands cupped her breasts. Yes, they were most definitely larger, fuller, heavier. He shook his head, \"Seriously, how the fuck could you and Bjorn miss all the obvious changes in this luscious body? Damn woman, I swear I think we should keep your ass pregnant.\"\n\nShe giggled and tried to push his hands away, \"I think you have some kind of kinky pregnant woman fetish, Mikael.\"\n\n\"Damn straight, woman. And I am not apologizing. I also have a breast milk one too. Greta refused to nurse Monika, but you will these babies.\"\n\n***\n\nKirsty could not stifle the giggle. This man truly brought out the brat in her. She would not miss the experience of nursing their baby girls for the world...even if it was difficult, she was determined she would find a way. Despite that, she found herself wanting to argue with Mikael...just for the hell of it. \n\nThe stern frown that he gave her in response only made her laugh harder. She knew she was spoiling whatever scene...mood...he had in mind, but damn, she had forgotten just how much she missed her playful sadist.\n\n\"What is so funny, lilla gumman?\" he gave his sternest stare. It never held the same power as Sven's...because this man was the most comfortable pair of jeans she had ever owned.\n\nShe laughed harder. And it felt so damned good. After months of the overwhelming noise, smells and crush of the city, the job that she once lived for but was no longer quite as rewarding as she remembered, and of course, her mother. After losing Petrine, the only place she ever felt at home and now this new worry over Sven. It felt so good. \n\nSo damned good to playfully push his buttons. Goad him into action. To just be with him. Laugh with him. Love with him. \n\nShe finally composed herself enough to reply as she wrapped her arms about his neck and pressed a kiss to his lips, \"I missed you so much, Mikael.\"\n\nHe frowned down at her, \"\u00c6 har savna d\u00e6, I have missed you too, elskling. But something tells me there is more to it than that. So tell me the rest.\"\n\nShe stared sheepishly at the floor. She was certain he would not see it as the compliment that it was, but she would try anyway. She lifted her eyes slowly and pressed tighter against him, \"I was thinking that you are the most comfortable pair of jeans I ever had.\"\n\nAs she suspected, his frown deepened, until the cresses around his mouth were marked even through the thick layers of his beard. She placed her fingers over his soft lips to stop his rebuke. \"It is a compliment, Mikael.\" \n\n\"Don't get me wrong, I love the way Bjorn always challenges my mind. The long conversations about everything and nothing.\" She inhaled deeply as the pain awakened anew within her, \"And of course, things have always been so complicated with Sven. So much angst,\" she shook her head.\n\n\"But with you, my beloved sadist, it is all just so natural. My brat feels free to come out and play.\" She frowned for a moment, \"Like she knows it is safe to be herself with you.\"\n\nShe smiled as her fingers trailed down to toy with the top button on his shirt until it came free. Her fingers twirled the chest hairs that sprang into view, \"And the laughter. You always make me laugh.\"\n\nShe worked on the next couple of buttons until she could run her hand beneath the soft material. She felt his heart pounding beneath her finger tips and knew that there was something right...something natural between them in some unexplainable way. \"And the loving too.\"\n\nShe stared up at him, \"Make love to me, Mikael,\" she pleaded. \n\nHe chuckled as he threw them gently onto the bed. Tumbling and rolling until he was atop her, careful to keep his weight off the babies though, \"First, you insult me by calling me old jeans. Then, you spoil the whole me-Dom you-little sub scene by telling me to make love to you. What am I going to do with you, woman?\"\n\nShe wrapped her arms tighter and drew him down to her. She captured his lips as surely as he had captured her heart that first night when he had meant to scare her. They were both breathless and her skirt was practically wrapped around her waist by the time they came up for air, \"Love me, Mikael. Just love me.\"\n\nHer breath caught in her throat as he entered her, \"Always, elskling. Always. Until the day we die and beyond.\" His fingers wrapped tightly through her hair and tucked her head back so that they were eye to eye as he pushed deeper inside of her, \"You're mine, lilla gumman. Never forget that.\"\n\nHis words might have seemed strange given their unusual marriage, but not to her. He was right. Some part of her was totally and completely his. Just as another belonged only to Bjorn. And as hard as she knew the battles ahead would be, yes, Sven too. \n\nBut right now...this man was all she was thinking about. Feeling. And he was more than enough as they took up the age-old dance that they had perfected almost from the beginning. In the end, she buried her face in his shoulder, biting down as she came apart around his hard cock. \n\nHe scooped her into his arms and held her tightly as she drifted off to sleep, listening to the still rapid beating of his heart. \"Another punishment to come, lilla gumman. Although this one will not have to wait...biting is one of that hundred I told you about.\"\n\nShe snuggled closer, \"I look forward to all of them, my love.\"\n\n***\n\nPetrine sat beside her son's hospital bed. She fought to hold back the tears. She had honestly thought nothing could be worse than losing the men she loved. But this was. \n\nShe rubbed his hand, being careful to avoid the IV line that stuck from it. He might be a grown man. Hell, this one had been born grown...old as the sea that he loved so much. But he was still her baby. \n\nIt was only yesterday that Stig had placed him in her arms. For a first birth, especially after the trauma of losing Lars just a couple of months before, his labor and birth had been easy. She had been terrified though when she did not hear the hearty wales that she expected from a newborn. So it was not until she held him after the midwife was finished delivering the placenta that she finally sighed with relief. \n\nShe would never forget looking down into those deep blue eyes that reminded her so much of the seas from which her husbands had come to capture her...and ultimately her heart. They were so cold...so deep...and yet calm too. \"Damn it, Sven, open your eyes.\" \n\nHe had only done so a couple of times over the past three days that they had been here. Then only briefly and each time he was so disoriented and combative. Calling constantly for her. Refusing water or anything else, until the doctors and nurses were forced to sedate him once more for fear that he would once more open the wounds on his legs or put too much strain on his recovering heart.\n\nStrong hands squeezed her shoulders, \"Let the boy rest, woman.\" \n\nShe turned and stared up at the man, who had always just seemed to know what she needed, when she needed it. \"He will be fine,\" he proved that yet again with the very words she needed most to hear.\n\n\"But you sitting here and fretting won't do him any good. Go back to the hotel. Eat something. Not just coffee. Food, woman. I don't intend on getting stuck on any bones.\" He shook his white head, \"What did our boy ever see in that woman anyway?\"\n\n\"A chance to break free of his big brother's shadow. To be different. His own man. To have something that was just his,\" she sighed heavily. \n\n\"So many mistakes, Olaf. I have made so many mistakes. Been so selfish. So thoughtless. Hurt you all,\" tears started to cascade down her cheeks. \n\nHe knelt on the floor in front of her. Her heart almost stopped. She knew how hard the concrete floor was, what it must be doing to his knees. But still he knelt. Her Master knelt before her in her time of need. \n\nHer hand caressed the soft beard that made him look like Santa Claus. That was what he was to her in that moment. Love. Joy. Hope. All their forty-three years of Christmases rolled into one. \n\n\"You listen to me, woman. We all make mistakes in this life. None of us get it perfect. But what matters most...hell, the only thing that matters at all...is love. And you, my beautiful brat, have loved and been loved by four husbands, who each worshipped you in his own way.\"\n\n\"You have birthed and raised three strong, intelligent and caring sons.\" He chuckled and the deep rumble caressed her like the spring breeze off of the fjord, \"Even if they are incredibly stubborn like their mother.\"\n\nShe shoved playfully at his shoulder, \"I won't claim that trait fully. Damned Viking genes.\"\n\n\"Yes, well, too late now to be complaining, old woman. Besides seems to me you never complain much once you get me out of my damned Viking jeans,\" he chuckled.\n\n\"Oh, please, you two,\" came the raspy voice from the bed. \n\nRachel was out of the chair and beside her son in a moment, almost toppling her husband in the process, \"Sven...\"\n\nHe leaned his head further back into the pillow and closed his eyes again. She felt incredibly old when she noticed for the first that her son's hair was laced with as much gray as her own. She held her breath for a long moment. Perhaps it was just her imagination. Wishful thinking. Perhaps he had not spoken at all?\n\nThen he opened those sea blue eyes once more...and she was forty years in the past. She clutched his hand tightly, not certain what to say.\n\n\"I hope I don't look half as bad as you do, mother,\" he tried to smile, but it came out more a wince.\n\nOlaf had somehow managed to rise and came to stand beside her at his bed, \"And you wonder why you have so much trouble with your wife, son?\" he chuckled. \"Welcome back. I assume that Valhalla was not to your liking then.\"\n\nSven shook his head and clearly winced in pain this time, \"I would ask what happened, but it hurts too much right now. So can you just take the crying old woman away and let a man get some rest.\" He softened his words with a gentle squeeze of her hand, \"Please.\"\n\nOlaf nodded, \"With pleasure, son.\" He turned to her and kissed her weathered forehead, \"You heard the man, woman, you get out of here and get some sleep while our son does the same.\" He looked back and forth between them, \"We have a family to start rebuilding.\""
    ],
    "authorname": "Tara Cox",
    "tags": [
        "domination",
        "submission",
        "master",
        "sadist",
        "masochist",
        "love",
        "romance",
        "polyamory",
        "polyandry",
        "making love"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/ashgirs-wife-ch-07"
}