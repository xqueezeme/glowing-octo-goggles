{
    "title": "Tracey Ch. 03",
    "pages": [
        "Author's Note: The first two chapters of Tracey  (see: , ) have been modified to correct minor grammatical errors and continuity issues, and a few details have been added here and there. You might want to re-read them before continuing with Chapter 3. -W.S.\n\nI saw little of Tracey over the next few days. I began to worry that she was avoiding me, but my fears were quickly dispelled when she came into my room the following Friday night and put on a CD, then sat on my bed and casually chatted about her week. \n\nWhen the inevitable lull in the conversation arrived, Tracey looked up at me and spoke.\n\n\"Steve, about last week...,\" she began.\n\nI braced for bad news.\n\n\"What happened last weekend was the hottest thing I've ever experienced. It was--you were amazing! You are the sweetest, sexiest, most attractive guy I've ever known. No one has ever made me...,\" Her voice trailed off.\n\nI stared down at my feet and waited for her to continue.\n\n\"But if your parents found out, they'd kill me! And I wouldn't blame them--you're only 18! You're 4 years younger than me!\"\n\nShe paused for a moment and I looked up at her.\n\n\"Why couldn't you just be 4 years older?\" she smiled. \"Steve, can we go back to being friends?\"\n\nI might have acted a little disappointed with her request, but the truth is that I felt oddly relieved. As much as I lusted after her, my main concern had been losing her friendship. What's more, her heart-felt compliments made my head swell with pride.\n\nThe following week at school, I glowed with self-confidence. I had a perpetual grin on my face that prompted strange looks from my friends. And when Jessica Peters greeted me one afternoon in math class, I saw for the first time that she was not merely being polite. Her eagerness and broad smile made it obvious that she liked me, though I'd been blind to it before. That Friday I asked her out.\n\nMeanwhile, my friendship with Tracey blossomed. Now that Jim was out of the picture, she looked to me for entertainment. We could often be found watching movies together, listening to music, even tracking the whereabouts of my parents, sneaking upstairs to steal beers from the fridge when they were away. \n\nFor several weeks, my parents remained home during the weekend, and I began to wonder when their next trip would be. Tracey and I talked about having a party next time they were gone, but without knowing when that would be we could hardly start inviting people.\n\nThen one evening in mid-December, we had our answer. We were all seated at the dinner table when Mom and Dad announced they had something to tell me. Tracey, who joined us for dinner once or twice a week, began clearing the dishes.\n\n\"It's okay dear, you don't have to leave,\" my mother said. Tracey sat back down.\n\n\"Sweetheart, your father and I have decided to go away this Christmas,\" my mother began. I guessed where this was heading and shot a quick glance at Tracey. She was about to take a sip of water but froze with the glass a few inches from her mouth, staring at my mother expectantly.\n\n\"Of course we'd love it if you came,\" my mother went on, \"but since your brother is staying at school over break, you'd be stuck with your father and I for 3 weeks. We decided you'd be happier at home.\" \n\nI copped my best look of disappointment.\n\n\"Well, I guess so--\" I began dejectedly, but was cut off when Tracey, who had just taken a sip of her water, suddenly erupted in a fit of coughing. Water shot out of her mouth and nose as she snarfed her drink all over her shirt.\n\n\"Goodness, are you alright dear?\" my mother said, placing a hand on Tracey's back.\n\nTracey coughed a few more times then reached for her napkin to clean her face.\n\n\"I'm fine Mrs. McKenna--just went down the wrong pipe,\" She said, shooting me a quick wide-eyed glare.\n\nMy mother looked at me again.\n\n\"Stephen, you're more than welcome to join us if--\" she said.\n\n\"No--it's okay Mom, I'll be fine,\" I said, \"Besides, I already promised coach I'd be around to lead practice.\"\n\n\"Wonderful!\" said my mother. She turned to Tracey again.\n\n\"And what are your plans for Christmas, dear? Will you be traveling home?\"\n\n\"No ma'am, I'll be around,\" she answered, \"I have a lot of reading to catch up on and I'm putting in some extra hours at the bookstore for the holiday rush.\"\n\n\"Oh, that's marvelous! You two can keep each other company!\" my mother beamed. \n\n\"Did you hear that, Stephen? Tracey will be here while we're gone! But promise me you'll stay out of her hair when she's doing her homework.\" She turned back to Tracey. \"You must tell Stephen if he's bothering you, dear. You know how he likes to blare that radio of his...\"\n\n\"Yes, Mrs. McKenna.\"\n\n<div align=\"center\">***</div>\n\nNo sooner had I returned to my room after doing the dishes than Tracey appeared with a wicked grin on her face. She grabbed a pillow from my bed and started pummeling me with it.\n\n\"You little creep! You totally made me snarf with your little act!\" she cried as I tried to fend of her blows. \"`Oh, boo-hoo! Mommy and Daddy are leaving me all by myself!'\" she mimicked, erupting in laughter and collapsing on my bed. \n\n\"Steve!\" she said as soon as she had gathered herself, \"we're gonna have the house to ourselves! For 3 weeks!\" She got up and pulled me out of my chair. \"Party! Party! Party!\" she sang, leading me in a dance around the room.\n\n<div align=\"center\">***</div>\n\nTwo agonizing weeks later, the day finally came when I drove my parents to the airport. The house was empty when I returned. Tracey's job at the bookstore was keeping her busier than usual at night and she usually wasn't home until late. I was in the living room watching TV when I heard the kitchen door open around 10:00.\n\n\"Steve?\" called Tracey.\n\n\"In here,\" I said.\n\n\"Living like a king now, are we?\" she teased. Our living room had a big-screen TV, a plush couch and a fireplace--all of which seemed like a decadent luxury in comparison to the spartan basement accommodations. I had just lit a fire and the room must have felt warm and inviting to Tracey. \"Ooh, it's nice and toasty in here! Mind if I join you?\"\n\n\"Why? Is the downstairs TV broken?\" I said, trying to sound serious. \n\n\"Oh, fine. I guess I'll just have to drink these by myself,\" she said, holding up the six-pack she had concealed behind her back as she turned to head downstairs.\n\n\"Wait!\" I called after her in an exaggerated plea, \"Tracey! You can--Tracey! I'm sorry! Please, you can watch--\".\n\nA few minutes later Tracey returned wearing a pair of tight-fitting jeans and a pink sweater. \n\n\"Here,\" she said handing me a can of Budweiser, \"your first beer. I thought it would be best if you drank it under the supervision of an adult.\"\n\nIt wasn't my first beer of course, but I examined the can with a confused expression, going along with her game.\n\n\"Umm...do you have a can-opener?\" I said.\n\nShe rolled her eyes and grabbed the can out of my hands. \n\n\"Look,\" she said, pointing at the tab. \"Just grab this little thingy like this...see? Then pull up gently...\"\n\nShe opened the can of beer and handed it back to me. \n\n\"Let's crank some tunes!\" said Tracey. She darted off to the basement and quickly returned with a pile of CDs. Soon \"Dancing Queen\" was playing on the stereo.\n\nWe sat for a long while drinking beer, listening to music, and discussing our plans for the holiday. I was something of a lightweight and after three beers my inhibitions vanished and I was singing along with Abba. When the CD ended, Tracey put on a hip-hop CD I didn't recognize.\n\n\"I love this song,\" she said. The throbbing bass and drums seemed to take hold of her body. She danced across the floor until she stood before me, moving her arms over her head and thrusting her hips to the rhythm. She narrowed her eyes seductively and smiled down at me. \n\nI knew she was just being silly but her little performance was incredibly sexy. She bent over and touched her feet, shaking her hips as she ran her hands slowly up her legs and over her crotch and belly. I was really starting to get turned on when the song ended and she plopped down on the couch next to me.\n\n\"So, when are we having our party?\" she asked.\n\n\"How about next Saturday?\" I said. \"I mentioned it to a few guys on my team this afternoon.\"\n\n\"Aren't you inviting your sweetie?\" she said. When I had first told her about Jessica I thought I detected a trace of disappointment. But her frequent inquiries and teasing since then had always been good-natured, so I'd written off any jealousy on her part. \n\n\"Yeah, she'll probably come,\" I answered.\n\n\"Don't sound so excited!\" Tracey teased. \"I'll probably invite Bernie,\" she went on, referring to a guy from the bookstore she'd gone out with a few times.\n\n\"Yeah, invite ol' Bernard,\" I said, \"he can tape that Dr. Who special and watch it when he gets home,\" I went on, perhaps not so good-naturedly.\n\n\"Shut up!\" Tracey said, trying to suppress a smile, \"and get me another beer!\"\n\n<div align=\"center\">***</div>\n\nAs soon as my parents left, Tracey and I had abandoned the drafty basement in favor of the upstairs living room for its warmth and superior stereo and television, not to mention its proximity to the kitchen. I'd even taken to sleeping in my parents' bedroom with its huge, plush bed; I convinced Tracey to stay in the upstairs guest room across the hall. We shared the large master bathroom with its luxurious over-sized shower. It also contained a jacuzzi, but we had yet to try it out. \n\nOn Tuesday night around 10:30, I was splayed out on the living room couch in my boxers and tee-shirt watching TV when Tracey returned home from work.\n\n\"Hey Steve,\" she said, removing her coat, \"how was your day?\"\n\n\"Pretty good,\" I began as Tracey walked to the dining room table where she had stashed several of her belongings to save trips to the basement. \n\nAs I recounted the day's events, she turned her back to me, pulled her sweater over her head, and draped it over the chair. Then removed her turtle, revealing a lacy white brassiere.\n\nIt seemed that Tracey had gradually been shedding modesty around me, particularly since she learned about Jessica. Perhaps she felt my involvement with Jessica would alleviate any tension I might feel around her; that we could now carry on as friends. With respect to modesty, it was almost as if she regarded me as one of her girlfriends.\n\n\"So who are you inviting to the party?\" she said, turning to me when my voiced trailed off. \n\n\"Umm, just guys from the team mostly,\" I began. As I went on, she reached behind her back and undid her bra, then turned her back to me again and slid it off. She grabbed a tee shirt from a small pile of folded laundry and pulled it over her head and turned back to me.\n\n\"I asked 3 or 4 people from the bookstore,\" she said, unbuttoning her jeans and slipping out of them. She padded back across the living room floor in her panties and tee shirt and sat down at my feet. \"Well, it'll be a nice small party. I prefer small parties.\" \n\nWe watched TV for a while but I could barely focus on the program. I kept stealing glances at Tracey, who had put her feet up on the couch and was leaning against the arm opposite me. Her legs were bent at the knee, parted enough for me to catch glimpses of her crotch and the white material of her panties pulled tightly against it. Her tee shirt rode up a little and a sliver of her toned belly was visible. I pulled the blanket off the back of the couch and covered my legs with it to conceal my hard-on.\n\n<div align=\"center\">***</div>\n\n\"Hey Steve, could you give me a hand with the keg?\" I heard Tracey call from the kitchen door. It was Saturday afternoon, the day of the party. I had been putting out snacks while Tracey drove to the liquor store to retrieve the keg. I followed her out to her car and she opened the trunk.\n\n\"It's really heavy,\" she warned, \"I can give you a hand if--\"\n\n\"I got it,\" I said, grasping the heavy metal cylinder, finding it incredibly heavy. But I tried not to look like I was struggling as I hefted it out of her car and waddled my way down the sidewalk to the kitchen door.\n\n\"Ooooh, big strong man!\" said Tracey, walking along beside me and squeezing my straining biceps. She opened the door to the kitchen and I followed her in, depositing the keg in the waiting trash pail filled with ice.\n\n\"I'm going up to get ready,\" said Tracey. She darted upstairs and I heard her start the shower in my parents' bathroom. I loaded the CD player up with music while she bathed and frittered around making final preparations until I hear Tracey call from the top of the stairs.\n\n\"All yours!\" she said. I heard the door to her room closing.\n\nAfter showering, I took several minutes deciding what to wear--not something I usually gave much thought to. I chose my favorite pair of jeans and a polo shirt my brother had given me, with the promise that girls would love its trendy urban chic style. After applying a little gel to my hair and mussing it up a bit, I emerged from the bedroom just as Tracey was stepping out of hers.\n\nWe froze for a moment at the novel experience of seeing each other dressed up. Tracey looked stunning. She wore a stylish pair of gray corduroys, and a tight-fitting white angora sweater that looked so soft I wanted to reach and touch it. She had applied a tiny amount of mascara, which dramatically emphasized her gorgeous blue eyes, and her full lips, which I already found irresistibly captivating, sparkled with lip-gloss containing tiny specks of glitter. \n\n\"Hey handsome,\" said Tracey, sensing my nervousness.\n\n\"Hey Tracey. You look...nice,\" I said awkwardly. We stood in silence for a moment.\n\n\"Let's have a beer!\" said Tracey at last. That sounded like a good idea.\n\nI tapped the keg and poured us a couple beers while Tracey went into the living room and turned the stereo up. I joined her with our beers and we sat down on the couch and listened to the music for a while, anxiously waiting for the first guests to arrive. We finished our beers within 5 minutes. When we saw each other's cups, we burst into laughter. She held hers out to me.\n\n\"I seemed to have spilled mine,\" she said innocently. As I refilled our cups, the blissful onset of a buzz began to take hold and my nervousness evaporated. I was ready for the party to begin.\n\nAs if on cue, at that moment the doorbell rang with the arrival of the first guests. Soon the living room was full of our friends, sitting on the couch and floor or standing near the fireplace, talking, laughing, and sipping beer.\n\nTracey's bookstore colleagues, mostly college students themselves, and my band of teammates made for a mellow atmosphere. Everyone seemed to get along well despite the age differences. \n\nFinally, Jessica arrived with three of her girlfriends. They were all dressed in trendy clothes and appeared to have spent a lot of time preparing their hair and make-up. I worried briefly that the four most popular girls in my class might be disappointed not to find a single member of the football team in attendance, but they blended right into the crowd and seemed to enjoy themselves.\n\n<div align=\"center\">***</div>\n\nAbout an hour into the party, I was in the kitchen with Tracey and Jessica. Jessica was relaying a story I had long-since lost interest in. She spoke in the inquisitive, eye-rolling manner that branded her as a teenager.\n\n\"And I'm all, 'No, you wash the car!', and he goes, 'I washed the car last week,' and I go, 'I don't care, you're the one who got it all muddy!'\" she went on.\n\nIt was at that moment that the folly of my relationship with Jessica became clear. Moreover, it was almost as if Tracey, whom all along had been conversing silently with me in quick glances and mischievous smiles, had devised the situation herself. \"A sweet girl,\" she seemed to be saying, \"...if that's what you're looking for.\"\n\nI was soon to have my rebuttal. Just then, Bernie made his arrival, cutting Jessica's tale mercifully short. He apologized to Tracey for being late--he'd been watching a Star Trek re-run--then asked if he could have a beer.\n\n\"This is Jessica,\" Tracey said, smiling apologetically at the two of us for Bernie's lack of social graces, \"and Steve--the host.\"\n\nI shook hands with Bernie, noting with a certain pleasure his slight paunch, and my height advantage of at least 4 inches.\n\n\"Ummm...do you have anything lighter?\" said Bernie, noting the keg of micro-brewed ale, \"I'm trying to cut down on carbs.\"\n\nI retrieved a Bud Lite from the fridge and handed it to him. \n\n\"Thanks,\" he said, grasping the cap.\n\n\"Hmmph--\" he grunted, struggling with the cap, \"guess...it's not twist-off. Do you have a bottle op--?\" \n\nI took the bottle back from him and, with little effort, twisted the cap off. Tracey could not stifle a laugh.\n\n\"Thanks,\" said Bernie.\n\n<div align=\"center\">***</div>\n\nTracey and I did not subject our dates to further torment that night; we remained dutifully at their sides. But if we did not mingle together, our silent exchanges became bolder. More than once, I found myself gazing across the room at her as my attention drifted from the conversation at hand, only to find Tracey staring back. At first, I blushed and turned away. But as the night wore on and our friends became more drunk and oblivious, we held each other's gaze. These moments felt so intense to me that everything seemed to go silent around me, as if we were the only two people in the room. \n\nBy midnight, everyone had left except for Bernie and Jessica. When Bernie announced that he had to go home if he was going to make it in time for Mystery Science Theater, Jessica agreed it was time to call it a night as well. Bernie offered to give her a ride home. We saw them to the door and bid them goodnight with polite pecks on the cheek.\n\nWe returned to the living room and chatted about the party for a little while. As we talked, I reflected on the ease with which, moments earlier, I had blatantly flirted with Tracey; now I could scarcely meet her gaze. At that point, however, I was too exhausted to consider taking action. Tracey appeared to be drifting too.\n\n\"Well, I should go to bed,\" I said, \"I have early practice tomorrow.\"\n\n\"Yeah, I'm ready for bed too,\" agreed Tracey. We walked upstairs and bid each other goodnight. \n\nI'm not sure what my expectations had been that night. But when at last I lay in bed staring into the darkness, I did not dwell on missed opportunities or frustrated desires. I thought only of Tracey's face, smiling at me from across the room.\n\n<div align=\"center\">***</div>\n\nWhen I returned from running practice the next afternoon, the house was empty. I figured Tracey was at work, so I went upstairs to wash up. I undressed in my parents' room and was about to step into the shower when I paused and looked at the jacuzzi. It had never before occurred to me before to set foot in it, but for some reason I suddenly wanted to. \n\nThe jacuzzi was set in large rectangular sunroom that extended from the bathroom. My parents had had it built to accommodate the large tub, but with its view of the woods beyond our back yard, it also served as a peaceful hangout I had often sought as a kid. \n\nA cushioned platform extended for several feet behind to tub, edged by a linen shelf stocked with towels on one side and a low wooden barrier lined with pillows on the other. Its obvious potential as a love nest used by my parents had never occurred to me until now--perhaps I had blocked the idea out.\n\nI lifted the vinyl cover off the large tub and steam rose from the slightly saline-smelling water. As I set foot in the hot water and settled into the seat on the far side of the basin, I wondered what had taken me so long to try it.",
        "I sank down and completely submerged myself in the deep basin to wet my hair. Just as I surfaced, I heard Tracey calling my name from downstairs.\n\n\"Up here!\" I yelled.\n\nTracey came upstairs and walked into my parents' bedroom.\n\n\"Are you in the shower?\" she called through the open door of the bathroom. \n\n\"No,\" I answered, splashing the water a little to provide her with another clue.\n\nShe rounded the corner and found me smiling smugly at her from the luxurious bath.\n\n\"Hey!\" she screamed, \"No fair!\"\n\n\"Hey Tracey,\" I said non-chalantly, \"be a doll and bring me a beer, wouldja love?\"\n\n\"Ha! I'll bring you a beer all right, but you better make room for me! You don't get that all to yourself!\"\n\nShe disappeared for several minutes. I was starting to wonder exactly what she meant when she returned wrapped in a towel, holding two beers.\n\n\"How's the water?\" she said, placing the beers on the side of the tub.\n\nBefore I could answer, she shed the towel and slid into the tub opposite me. She was completely naked.\n\n\"I was wondering when you'd get around to using this!\" she said, leaning back and taking a sip of beer.\n\n\"Hey, want to turn the jets on?\" she asked, indicating the small control panel on the edge of the tub I hadn't noticed before.\n\n\"Sure,\" I agreed.\n\nShe pressed a button and the hot tub came to life. Powerful jets shot up from the sides of the bath filling it with bubbles, and lights within the tub came on, illuminating the water with a magical glow.\n\n\"Cool!\" we said in unison.\n\nTracey leaned back against one of the jets on her side.\n\n\"Mmmmm--massage...\" she purred, closing her eyes.\n\nI followed her lead and sat in front of one of the jets. The sensation of it pounding against my lower back was incredible. We bathed in silence for a while, sipping our beers and letting the water jets work their magic. \n\n\"When was the last time you took a bath with someone?\" Tracey said at last, sliding away from the jet.\n\n\"My brother and I used to take baths when we were kids,\" I admitted.\n\n\"Me too!\" she beamed. \"I took baths with my brother all the time. We used to compare our bodies. He would show me his pee-pee and I would show him my wee-wee,\" she went on, lapsing into an innocent voice. \"I didn't really have any boobies back then...\" \n\nMy pee-pee twitched in response to her innocent comments.\n\nWe were silent for a while, then Tracey slid over to my side of the tub. She leaned in front of me and gazed at my chest.\n\n\"My brother's chest didn't have any hair,\" she said, \"and it was much flatter than yours.\"\n\nShe lifted her hand out of the water and held it out tentatively, about to touch my chest.\n\n\"Can I feel...?\" she whispered, as if it was a particularly daring request. \n\nI flexed my pecs involuntarily as she placed her hand on my chest. She smirked at my machismo but she seemed impressed nonetheless.\n\n\"They're hard,\" she said, gently pressing and massaging her fingers into my pecs and around my nipples, causing them to stiffen in response.\n\nShe withdrew her hand and gazed down at her own chest.\n\n\"Mine are bigger than yours,\" she said, \"but softer.\" I gazed down at her breasts, but they were obscured by the bubbly surface of the water. She followed my gaze, then put her elbows on the edge of the tub and lifted herself up slightly until her breasts were visible. \n\n\"See?\" she said, grasping one of her breasts, \"mine are bigger.\"\n\nShe looked at me again and waited for me to acknowledge this fact. She smiled when I nodded in agreement.\n\n\"But they're softer than yours,\" she went on, gently squeezing her tit. \"See?\"\n\nI nodded again, but this didn't seem to satisfy her. She slid a bit closer to me and withdrew her hand, turning slightly so that her breasts were at my eye level.\n\n\"See?\" she said again, peering down at my hand then back at her breasts.\n\nI held my hand out until it was a few inches from her breast, then looked at her again to see her reaction. Her gaze was fixed expectantly on my hand. I brought my fingers to the smooth, pale skin of her breast and gently touched it. I was struck by how easily the soft flesh yielded to my touch. \n\nShe arched her back slightly, and as I glanced my fingers across her nipples, they became erect as mine had done.\n\n\"They're soft,\" I said at last, removing my hand.\n\nShe let out a breath of air as if she had been holding it in the whole time then sank down in the water and stared ahead for a moment. Then she turned back to me.\n\n\"I remember my brother's...his penis--it was pretty small...,\" she said.\n\n\"Mmm-hmm,\" I said faintly.\n\n\"Could I...I mean, do you think I could see yours? To compare?\"\n\n\"Oh--you mean...you want to...?\" I stalled. \n\n\"Just to see what it looks like,\" she said innocently, \"I just...,\"\n\nModesty at this point seemed absurd, but I hesitated a moment longer until she dropped her head and gazed up at me, puffing out her lower lip.\n\n\"Okay,\" I agreed. Her expression brightened again.\n\nThe hot water of the jacuzzi had somehow prevented me from becoming fully erect, but my penis had started to swell the moment Tracey entered the tub. And the innocent game of doctor she was playing at now was really making me hot. My penis swung heavily from side to side as I lifted out of water and sat on the edge of the tub.\n\nTracey scooted closer to me and twisted around to inspect my penis. She had the innocent and slightly amused expression of a curious child.\n\n\"It's...bigger,\" she began. When my penis twitched in response, she gasped in delight and smiled up at me with a look of wide-eyed wonder. Then she returned her gaze to my crotch.\n\nShe furrowed her brow slightly.\n\n\"...and my brother's penis--it had more skin, you know? On the tip?\"\n\nShe looked up at me with a puzzled expression.\n\n\"Oh, umm...that must mean he wasn't circumcised,\" I replied.\n\n\"That's right,\" she said, \"now I remember. He was uncircumcised.\"\n\nShe looked at my penis again and leaned a little closer.\n\n\"I like it much better this way,\" she decided, \"I like it circumcised.\" \n\nIt twitched again at her remark of approval. Then again, and again. Tracey stared in awe as my cock grew fully erect before her very eyes. When it finally reached its apex at a 45-degree angle from my stomach, she looked up at me again.\n\n\"I don't remember my brother's penis doing that...,\" she said, barely suppressing a mischievous smile.\n\nI opened my mouth to speak but no words came out, so I sank back into the water.\n\nWe both stared blankly ahead for a while until she spoke again.\n\n\"So, do you want to see...?\"\n\nWe looked at each other.\n\n\"Do you want to see what a girl looks like?\" she said.\n\n\"Okay,\" I responded throatily.\n\nTracey stood up and sat on the edge of the tub, parting her legs slightly. She placed her hand on her belly and gazed down at her crotch.\n\n\"Can you see?\" she said, pressing in on her flat belly and looking up at me.\n\nI turned around and stood in the deep whirlpool so that I was facing her and bent my knees to rest them on the seat. I gazed between Tracey's legs at the faint blond patch of pubic hair clinging to the folds of her vagina.\n\n\"Yeah,\" I said hoarsely.\n\nShe followed my gaze down to her crotch, then lowered her hand slightly so that it covered her pubic hair. Then she drew her legs out of the water and braced her heels on the lip of the tub, then spread her legs apart further. And then, as if about to reveal a secret she held most dear, she met my gaze and slowly ran her fingers over the folds of her vagina. \n\nI drew closer and the secret was unveiled, blossoming between her fingers like the petals of a flower.\n\n\"See?\" she said again, almost whispering.\n\n\"Yes,\" I croaked.\n\nI eagerly accepted this opportunity to examine Tracey's vagina under the pretext of playing doctor, and found my gaze riveted to its pink folds of flesh that glistened with moisture in the shimmering blue light of the jacuzzi. It struck me as the sexiest, most beautiful thing I'd ever seen--very different from the repellent images in my friends' hardcore magazines--and my cock throbbed painfully as its salty aroma greeted my nose.\n\n\"Look,\" she said, leaning forward and spreading the lips of her pussy apart further, \"want to see my clitoris?\"\n\nShe slid her hand up her pussy and placed her index finger on the hood of flesh at the top, then pulled it back to reveal the hidden pearl beneath.\n\n\"That's my clit,\" she whispered, meeting my gaze again.\n\nMy cock throbbed at her use of the word.\n\nI nodded dumbly, unable to take my eyes off it.\n\nTracey leaned her head back for a moment and closed her eyes, then released the flap of skin that covered her clit and ran her two middle fingers down the length of her pussy again. She rubbed them up and down once or twice, then gasped when they slid beneath the surface. She inserted them until they were buried to her second knuckle; when she withdrew them, they were coated with moisture.\n\n\"I'm wet,\" she said in a raspy voice, \"my pussy is wet....\"\n\nShe looked at me again, then at her pussy.\n\n\"And see,\" she went on. She rubbed her wet fingers in a few quick circles over the hood of skin that covered her clitoris then retracted it again. \"It's swollen. My clit is swollen....\"\n\nSuddenly, she drew her hand away from her pussy and up along her stomach until it brushed her erect nipple. Then she sat up and put her arms at her side, trying to resume a sober expression. But when she spoke at last there was still a mischievous twinkle in her eye.\n\n\"Is that normal, Doctor?\" she said.\n\nI had to swallow hard a couple times to regain my speaking voice. \n\n\"Umm...I'm not...,\" I began, staring down at the water.\n\n\"You don't think it's serious, do you?\" she said in feigned concern.\n\n\"Well, I'd uhh...I'd have to take a closer look,\" I braved at last.\n\nShe narrowed her eyes slightly and glanced at me with suspicion. Then she leaned over to turn the whirlpool jets off, pressing another button so that the lights inside the tub stayed on. She stood up and grabbed a towel from the linen shelf and wrapped it around herself, then stood at the edge of the tub and peered down at me standing in the center of the tub.\n\n\"I should probably take a look at you as well,\" she said, gazing with concern into the water below my waist. I suddenly realized that my cock, still painfully erect, was completely visible through the motionless water.\n\nShe stepped onto the pillow-strewn platform and motioned for me to follow. I got out of the tub as Tracey was laying a blanket down on the cushioned surface and arranging pillows to lean on.\n\n\"The bath makes it nice and warm in here,\" Tracey said, kneeling down on the blanket. She removed her towel and handed it to me. I dried myself off and kneeled down next to her.\n\nThe light reflected from the surface of the hot tub filled the alcove with a soft rippling glow. We faced each other in rapt silence, staring at each other's bodies as if for the first time. \n\nAfter several minutes, Tracey slowly lifted her hand to her breast and began caressing her nipple. Her gaze had been fixed on my body; now it rested on my cock, which had softened slightly from the distraction and uncertainty of what would come next. \n\n\"I'm not really that much older than you,\" Tracey said at last.\n\nI met her gaze.\n\n\"And anyway, you are 18, right?\"\n\nI nodded.\n\n\"And that means that you're a....\" her voice trailed off and her gaze fell back to my body.\n\n\"...that you're a man.\" she breathed, looking back at my face. \"Are you?\"\n\nWhen I didn't answer, she scooted closer to me until our knees were nearly touching.\n\n\"I think you're a man,\" she said, placing her hand tentatively on my thigh, \"because boys don't have chest hair,\" she went on, placing her other hand on my chest and running her fingers through the sparse tuft of hair. \n\nThen she placed both of her hands on my shoulders and ran them down my arms.\n\n\"And boys don't have muscles like this,\" she said. As she leaned in and squeezed my biceps, I could feel her breath on my face and smell the sweet fragrance of her hair.\n\nShe continued massaging my arms, then ran her hands down my sides and placed them on my thighs again. She continued to study my features carefully as if to convince herself of what she was saying. \n\n\"And boys have little-bitty penises...,\" she said, lowering her gaze to my cock which still hung heavily between my legs, \"...but you have a big cock,\" she went on, reaching between my legs and taking my swollen member in her hands.\n\nI gasped at the feeling of her hand delicately taking hold of me, and we both looked down as it grew erect in her hand.\n\n\"Little boys don't get hard-ons like this around naked women,\" she said, giving my cock a little squeeze. \n\n\"Trace--,\" I gasped, placing my hand on her shoulder.\n\nThe sensation of Tracey's warm hand on my cock was electrifying. My cock throbbed in her loose grip and my body tensed on the verge of orgasm. Finally, she let go. She sat down and leaned back against the wall of plush pillows.\n\n\"I think that means you're horny...,\" she said, her tone of casual concern belied by her raspy voice.\n\n\"Anyway,\" she went on, \"you said you needed to take a closer look....\" She drew her legs up and parted her legs slightly.\n\nI stared at her intensely, still reeling from the sensation of her hand on my cock.\n\n\"...at my pussy,\" she went on, looking down at her crotch.\n\nI moved toward her, but she closed her legs and pulled her knees to her chest, clenching her wrists and peering up at me anxiously as if she was having second thoughts.\n\nI grasped her wrists gently but firmly and pulled them apart, placing her arms at her side. Then I put my hands on her knees and tried to separate them. She resisted, looking up at me again.\n\n\"I need to take a look,\" I said hoarsely.\n\nShe stopped resisting and let me pull her legs apart. We both looked down between her legs as her pussy came into view. Then she leaned back and spread her legs wide open, grasping her knees and pulling them back until her cunt was completely exposed to me.\n\n\"Are you going to touch my pussy?\" she said nervously.\n\nI looked into her eyes and slowly ran my hands down the insides of her thighs.\n\n\"Uunnhhhhhh...,\" she breathed.\n\nI slid my hands all the way down her thighs to the outer folds of her pussy, then slid my thumb along her wet slit. She gasped again as my thumb broke the surface and plunged inside her.\n\n\"Mmmnnn...Steve...,\" she moaned.\n\n\"You're so wet...,\" I whispered.\n\n\"Mmmmm...I am?\" she squeaked as I ran my fingers up and down her slippery cunt. She pulled her knees back further and thrust her hips upward into my hand. I slid my thumb to the top of her cunt and focused on her swollen clit. \n\n\"Oooh! Steevve!\" she moaned as I imitated the circular motion I'd seen her use on her clit minutes earlier. She thrust her pussy up again and I rubbed her clit with increased speed and pressure until she was writhing beneath me.\n\n\"Mmmmmm yes! Steve...don't sto...don't...sss--,\" she screamed as an orgasm overtook her. She let out several dry gasps, then reached down and stilled my hand. She lay motionless for a moment with her eyes closed, then looked up at me again.\n\nShe rose up on her elbows and lowered her gaze to my throbbing cock, which was jutting between her legs. \n\n\"Are you...,\" she began, slowly spreading her legs apart further. She bent her knees and lifted her feet slightly so that they were dangling in the air. Her gaze was fixed on my cock.\n\n\"Are you...gonna fuck me?\" she whispered.\n\nI took hold of her knees and pulled her off her elbows toward me, then leaned over and put my arms at her sides, positioning the length of my cock along her wet pussy.\n\n\"Ooooh Steve...are you gonna fuck me? Huh?\" she said, putting her hands on my chest and holding me off but grinding her pussy against my cock at the same time.\n\nI continued sliding my cock up and down along her pussy, descending further each time until the tip of my cock was glancing her clit; then further still until instead of sliding the length of my shaft back along her wet slit, I entered her. \n\n\"Steve...,\" she whispered, gazing into my eyes.\n\n<div align=\"center\">***</div>\n\n\"This is a game to her,\" spoke a voice in my head during our kinky role-playing in the tub, \"but I will gladly go along with it.\" A quieter voice deep inside me whispered, \"I wish she felt what I feel.\"\n\nBut the moment I entered her and gazed into her eyes, it became clear that she did feel as I felt. Her game was no more a sign of indifference than was my own reticence. She may have been four years older than me, but she was just every bit as capable of uncertainty and fear of baring her emotions as I was.\n\nNow I could show Tracey how I felt. I met her gaze and lifted a hand to caress her cheek. \n\n\"Tracey,\" I answered. \n\nHer eyes widened and she smiled up at me joyously. \n\n\"You're fucking me...,\" she said.\n\n\"At last,\" I whispered, lowering my head to kiss her.\n\nTo kiss her. It had occupied my mind every waking moment of every day since that morning weeks earlier when she rose from my bed and gathered her clothes, then walked out of my room--the feeling of her soft, warm lips on mine; the sensation of our tongues touching.\n\nShe kissed me now with the passion of a woman greeting her husband returned from battle. And in a way, that's how I felt: glad to be alive, overjoyed that Tracey was still waiting for me.\n\nTracey wrapped her legs around me and pulled me deeper inside her with each thrust. I rose up on my arms again and caressed her breasts as I continued making love to her. Then we both peered down between her legs at my cock slowly sliding in and out of her pussy, glistening with its juices.\n\nTracey shifted down on the blanket, directing my thrusts downward so that my cock slid against the rear wall of her pussy. This seemed to be particularly pleasurable for her and she increased the rhythm of her pelvic thrusts.\n\n\"Unnhhh Steve...feeels sooo goooood,\" she groaned, grasping my arms for leverage and thrusting her pussy upwards.\n\nShe closed her eyes and focused on her own pleasure, twisting her hips slightly so that I impaled her at a different angle with each thrust, squealing with delight when my cock slid along particularly sensitive spots hidden within.\n\nThe feeling that I was giving her so much pleasure with my cock combined with the immense pleasure I was receiving brought me to the brink of orgasm. As if sensing this, Tracey opened her eyes and gazed up at me again. \n\n\"I'm...gonna cum--,\" I said as my balls begin to contract.\n\nTracey was on the brink herself and at once began thrusting her hips into me with increased rhythm.\n\n\"Yesss...yesss...Steve! Cum...cum insi--,\" she said in a parched gasp.\n\nWe climaxed together. I reached down and grasped her ass cheek tightly to contain her violent thrusts. I felt my fingers glance along her anus and the base of her pussy as my cock rammed into her, releasing wave after wave of cum and weeks of pent up desire.\n\nWhen it was over, I collapsed at her side, draping the blanket over us and pulling her close to me. She rested her head on my chest and I gently caressed her hair as she fell asleep. I lay awake for a long while, staring up at dappled pattern of light reflected from the tub.\n\nI imagined that night that Tracey and I were man and wife, and that this was our house. I imagined that we could go on forever as we had over the last week, sharing meals, hosting parties, and laughing together. And I imagined that I could have her whenever I wanted--that I could take her in my arms and kiss her, carry her to my bed and make love to her, to make her feel as much pleasure as I had that night, and as I surely would again when she woke up in the morning."
    ],
    "authorname": "woody_strokem",
    "tags": [
        "english literotica",
        "light reflected",
        "slightly glanced",
        "slightly breasts",
        "remember brother",
        "http english",
        "tracey leaned",
        "gaze fixed",
        "center div",
        "tracey walked"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/tracey-ch-03"
}