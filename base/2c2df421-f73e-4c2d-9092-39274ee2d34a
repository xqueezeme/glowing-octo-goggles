{
    "title": "Louise Ch. 14",
    "pages": [
        "It was almost two hours before the first movie started. Everyone had questions for Louise that soon grew old. She tolerated them only because she knew that they were asked out of concern and excitement. Nathan finally ended the question and answer session by making an announcement.\n\n\"The children are getting bored. Perhaps we should start a movie.\"\n\n\"Thank you.\" Louise whispered. \n\n\"You're welcome.\" Nathan whispered back. He patted his empty lap and pulled Louise into it. \"Comfy?\" he asked when she had finally stopped moving around.\n\n\"Sorry...\"\n\n\"Don't be.\" Nathan said. \"It gives me an idea or two.\" he added telepathically smiling when Louise blushed.\n\nNathan could feel Gene watching him, but ignored it and divided his attention between Louise and the movie with most of the focus being on Louise.\n\n\"A baby.\" he mused and then smiled. He knew that for many males, his late grandfather and great-grandfather included, the hope was for a male child. To him, it didn't matter as long as Louise and the baby survived and were healthy. He comforted himself with the knowledge that the incidences of losing either or both were extremely rare.\n\nTheir child would be born healthy and strong simply because of his or her lineage. Mentally he began to make a list of things that he wanted to do before the baby came. At the top of the list was the nursery at each home. He decided to have the nursery adjoin their bedroom. A state of the art speaker system would be installed as well as an enhanced security system. He would install the security and speaker systems himself. He wasn't going to trust the safety of Louise and the baby to someone else.\n\nThe next thing on his list was the cooking school. He was sure that Louise wouldn't want to be away from her sisters' during the pregnancy. He made a mental note to see if the school had anyone that they could send to the states for private lessons. \n\n\"You're thinking too much.\" Louise whispered. \"Enjoy the movie.\"\n\n\"I enjoy thinking about you and our baby.\" Nathan replied. \"And I'm also enjoying the fact that I have a beautiful woman in my lap.\"\n\n\"You won't be saying that when I'm as big as a house.\" Louise teased.\n\n\"I will always say that because it's true.\" Nathan replied. \"I also know that our child whether it be male or female will be beautiful as well.\"\n\n\"Will you be disappointed if it's a girl?\" Louise asked.\n\n\"I meant what I said earlier.\" Nathan replied. I don't care what sex the baby is. I just want both of you safe and healthy.\"\n\nLouise laid her head on Nathan's shoulder and went back to watching the movie while Nathan continued with his thoughts.\n\n*******\n\nGene sat in the last row of the small theater not paying attention to the movie. He knew that Nathan was letting him stew in his juices. To some degree, he understood, but that didn't mean that he had to like it. He glanced over at Nathan and grimaced. He could only imagine how the man saw him. He was keenly aware of the fact that Nathan didn't like him.\n\nHe looked away from Nathan and looked at Patrick. Of the two, he decided that Patrick was the one most likely to invest with him, and the one that seemed to have the least problem with him. He said a silent prayer that one of the Sinclaires' would invest with him. He had visions of the other family members following suit. If all went well, he would be out of the hole financially, and he would soon be able to buy expensive clothes as Leon had done for the wedding. He envisioned the house in Pittsburgh completely repaired and a place to be proud of. It would put Leon's apartment to shame.\n\nThinking about Leon made him look in his direction. Leon was sitting with his arm around one of the hotel workers. While he found Nadine attractive, he couldn't understand how or why Leon would be interested in someone who did menial labor for a living. He agreed with Barb, Leon could do much better. It didn't occur to Gene that he had no one, and that he had no right to judge anyone. Nadine was working, a student, and she owned her own home whereas he was barely surviving.\n\nGene's gaze left Leon and Nadine, and went to Juliette and Hans. That was a match-up that he understood a little better. In his opinion, Juliette was getting the better end of the deal. Hans had a good job, was obviously interested in her and liked the kids. He found it amazing that a man would be interested in a woman with three young children. It was something that he wouldn't have considered for himself.\n\nFor the first time since Dana left, Gene wondered if there was someone for him. He wondered where the thought came from, and realized it was because of all of the couples. He wanted someone who would take him as he was, and who wouldn't expect him to change. That, he decided had been Dana's problem. She kept telling him that he was a better man than he thought he was, if only he would try.\n\n\"Gene, baby you can be so much better than this!\" she told him after he had come home drunk one night. \"Your family needs and loves you; I need and love you but ....\"\n\n\"Shut up.\" he told her. He hadn't yelled it, but the tone of his voice had given her pause.\n\nHe closed his eyes when he recalled the look of pain and resignation on her face.\n\n\"I'm going to give you a choice.\" she said softly. \"Either you get help or I'm leaving. I can't and won't live my life like this.\"\n\n\"Like what?\" Gene demanded. \"What in the hell do you want? You have a nice house, a nice car...\"\n\n\"I want you!\" she screamed at him. \n\n\"This is what and who I am.\" he replied. \"Take it or leave it.\" he replied never dreaming that she would actually choose to leave.\n\nWhen he woke up the next morning, Dana was gone. He found the Petition for Divorce on the coffee table sitting under an empty beer bottle. By the time the divorce was finalized, Dana had taken almost everything and moved to Florida.\n\nThe day that the divorce was finalized, Gene called off sick and drank himself into a stupor. He had been on a slow downward spiral ever since. Looking around at all of the loving couples in the room gave Gene pause, but only for a moment. After that moment passed, he was back to trying to figure out how to get a part of the Sinclaire money.\n\n******\n\nBarb drove to her apartment in a daze. She was convinced that if Louise and Kevyn rolled themselves in a vat of shit, they would still come up smelling like roses. Now Louise was pregnant which told her something. Louise wasn't the innocent that she had led everyone to believe she was. However, it really didn't matter. Louise and the baby would have the best care, and anything that money could buy while she would have to scramble to make ends meet.\n\nAs unhappy as Barb was, the thought of abortion never crossed her mind. Her thought was that there had to be a way to make the baby work for her. As she washed her face and changed into her pajamas, she began to add up the expenses associated with having a baby. It didn't take her long to realize that her money wouldn't go far, and that she would need help.\n\nHer siblings were out of the question. \n\n\"There is no way in hell that I'm going to them with this.\" She muttered to herself. It wasn't that she thought that they wouldn't help her. It was the thought that they would look down on her. Of the five of them, Gene would have been the one she would have chosen to go to for help, but then, he would hold it over her head and he had his own issues.\n\nShe calculated when her due date was, and realized that it was a couple of weeks before Louise's. Barb cursed under her breath, and then felt a tear run down her face. This wasn't what she wanted out of life. She had spent most of her life dreaming and scheming to get into the lifestyle that she felt she was entitled to, and now it was gone because of Thorne Blackwell and his unborn brat.\n\n\"I hate you!\" she said with as much vehemence as she could muster as she angrily wiped the tears away. The hate wasn't just at Thorne. It was directed at everyone whom she deemed as being better off than she was, and that included family. The baby was an innocent, but she was still angry at it for ruining her plans.\n\nFor the first time, she wondered about her mother. Had she been as angry and upset when she found out that she was pregnant? Wanda Yancy had been a talented vocalist and had dreams of going to one of the schools' of music. Had she hated Kevyn, and then each of them that came after her for ruining her life?\n\nHow could she not have? Each birth took her further away from her dream turning it into a fantasy. Barb tried to recall if her mother had ever said anything to indicate that she hated them. Wanda had gotten angry with them, but not once did she say anything that even remotely blamed them for her station in life.\n\nFor the first time in years, Barb wished that she could just pick up the phone and talk to her mother. She still believed that she had been abused, and that her parents hadn't done all that they could do for them. But her mother would understand an unplanned pregnancy and the impact that it would have on her life.\n\n\"Damn you Thorne Blackwell!\" Barb cursed once again not taking any responsibility for her actions. She forced herself to calm down and to think rationally. In a few days, Leon and the rest of her siblings would be gone therefore making it easier for her to be able to stay out of sight.\n\nIt didn't occur to her that any of her siblings would be staying in spite of what she saw. She decided that Juliette and Hans, as well as Leon and the housekeeper were just flings. She drank a glass of milk, and then wished that she hadn't. Her stomach tossed and turned for several minutes before it finally calmed down.\n\nShe knew that she needed to see a doctor, but decided that it could wait. \n\n\"I'm not like the Sinclaires',\" she grumbled. \"I don't have unlimited resources.\"\n\nShe laid down the couch, closed her eyes and envisioned Louise lying on a big bed wearing a peach colored fur lined house jacket. In her mind's eye, she saw Nathan sitting on the bed next to Louise and handing her a glass of what looked like blood.\n\n\"Blood?\" Barb murmured already half asleep.\n\n*******\n\nBy midnight, Celeste was sound asleep in Hans' lap.\n\n\"Let me put her in one of the beds.\" Juliette said as she stood up.\n\n\"I'll carry her.\" Hans said.\n\nHans looked at Victor and Wanda as he passed by. Victor was fighting to stay awake and failing. Wanda wasn't too far behind.\n\n\"Come.\" he said to them. \"Sleep for a while, you can always come back.\"\n\n\"I'm ok.\" Victor said with a yawn.\n\n\"Just an hour or so.\" Hans said gently. \"You will feel much better.\"\n\nReluctantly, Victor agreed and looked over at Wanda.\n\n\"You coming?\" he asked.\n\n\"Go on.\" Victoria urged when she saw Wanda hesitate. \"I'll still be here when you come back.\"\n\nA short while later, all three children were huddled together; sound asleep. Juliette stood by the doorway watching them.\n\n\"They are beautiful children.\" Hans said from behind her. \"You have done well with them.\"\n\n\"Thanks...Hans...\"\n\n\"I know that you are questioning my sanity.\" he said. \"That is understandable. I also know that you talked with Kevyn and Louise. That too is understandable. What did they tell you?\"\n\nCeleste stirred, cried out, and then quieted.\n\n\"Let's go to one of the other empty rooms.\" Juliette suggested.\n\n\"Lead on.\" Hans replied.\n\n********\n\nLeon kept glancing over at Nadine whose eyes were glued to the movie screen. Every so often, he would hear her mutter under her breath.\n\n\"That isn't how it happened.\" or \"Lies all lies!\"\n\n\"It's just a movie.\" he told her at one point when she was becoming so agitated that he thought that she was going to throw something at the screen.\n\n\"You're right. I'm sorry.\" she said. \"I just hate historical inaccuracies.\" she added.\n\n\"I understand.\" Leon replied.\n\nWhat he didn't understand, was why someone with her brilliance wasn't working in academia or writing books. The fact that she worked at the hotel under a variety of roles didn't bother him. She was making a good, honest living, but he thought that brilliance like hers shouldn't be hidden but shared.\n\n**** ** \n\nAt the end of the movie, Patrick stood up, stretched and made an announcement.\n\n\"If any of you want to step outside for some fresh air, help yourselves, but please, don't go beyond the gates. We'll start the next movie but feel free to come and go as you please.\"\n\nGene sat rooted to his seat hoping that Kevyn would need to use the bathroom or something. A few minutes later, he watched as she kissed Patrick and excused herself. Swallowing hard, Gene left his seat and approached Patrick.\n\n\"Umm Patrick? Could I talk with you for a minute?\"\n\n\"Have a seat.\" Patrick said.\n\nGene relaxed, but only slightly. While Patrick was by far more approachable than Nathan had been, he was still no one to fuck with.\n\n\"What's on your mind?\" Patrick asked with a smile that didn't quite reach his eyes.\n\nGene squirmed in his seat and looked away trying to avoid Patrick's penetrating gaze.\n\n\"I wanted to apologize for my behavior when my mother died. I was inexcusably rude. I should have thanked you instead of acting like a jackass. I also wanted to apologize for the way I've been acting since I got here. I haven't been at my best, and that has led me to making some serious errors in judgment.\"\n\n\"To what are you referring?\" Patrick asked.\n\n\"Bastard!\" Gene thought to himself as he answered the question.\n\n\"I'm talking about the proposals. I should have approached you directly instead of leaving them where I knew that you would find them.\" Gene replied.\n\n\"Why didn't you come to me directly?\" Patrick asked.\n\n\"I didn't want you to think that I was taking advantage of the fact that you're my brother in law.\" Gene replied. \n\n\"But that's exactly what you were doing in a round about way.\" Patrick said. I have issues with a man who uses his family to get what he wants. The sad thing is, it was a damned good proposal, and well worth considering even if I didn't invest the amount mentioned.\"\n\n\"Are you saying no?\" Gene asked.\n\n\"At this point, I'm not saying anything except this. I won't be investing the amount of money that you're asking for several reasons. One, I would never invest that much money with someone that I barely know, and I don't care who you are. Second, I don't like nor do I trust you. If you can't be upfront with me with money being involved, what would happen if I gave you twenty-million dollars?\n\nEven the very nice apology that you gave me was false. You would have fared better had you told me exactly what you thought of me. Do you get what I'm telling you? Honesty is the key word here. All I've seen is selfishness and the unwillingness to work for what you want. All you want is the Sinclaire name on one of your accounts and you don't care how that happens.\"\n\n\"That isn't true!\" Gene exclaimed.\n\n\"Isn't it?\" Patrick asked. \"I have yet to see you make any effort to interact with your family which now by the way, includes us. What interaction there was, involved us doing something for you. As I've said before, you didn't even approach us directly about your proposal. All you had to do was say that you wanted to present a proposal, set up a time and we would have looked at it. It was that simple, but instead; you left it on a table and then tried to use Louise. Tonight you sat back there alone instead of sitting with the rest of us and made no real attempt to get socialize. You're only approaching me now with your false apology because you want something.\"\n\nGene was astounded. If Patrick had read him so easily, then so had Nathan. \n\n\"What can I do to fix this?\" he asked.\n\n\"Start by being honest.\" Patrick said. \"If you'll excuse me, I need to check on things.\n\n*********\n\nGene sat there for several seconds after Patrick left. He looked around to see who else was in the theater with him. The only person was Nathan. Determined to get the shit out of the way so that he could start working toward his goal, he approached Nathan again.\n\n\"You got something to say to me too?\" he asked. His tone was terse even though he was nervous.\n\nNathan turned to look at him.\n\n\"Why would you think that?\" he asked.\n\n\"Your brother just gave me an earful and I thought that you might want to add to it.\" Gene replied.\n\nNathan didn't bother to correct Gene's error in saying that Patrick was his brother. He knew that Louise had told Gene otherwise, and it really didn't matter.\n\n\"Are you sure that you want to hear what I have to say?\" Nathan asked. \n\n\"Go for it.\" Gene said.\n\n\"Fine. You Gene Yancy are one selfish and lazy son of a bitch. You are the oldest male in age but the youngest of the children in mentality. You want all of the rewards that come with being the oldest male, but when it comes time to fulfill that role, you step back and let Leon take over. Back in Pittsburgh, you should have set the example and helped Louise more with your mother. You as the oldest male should have set the tone and encouraged the others to help Louise as well. Instead, you caused dissention between you siblings, which left Louise alone to physically care for your mother.\n\nWhy was Leon the one to approach Patrick and me to ask us about the care of your sisters? Why was he the one to walk your sisters down the aisle? I don't like you and I'll tell you the same thing that I told Barb. I tolerate you because you are Louise's brother and because when I married her that made you my family. If I invest with you, it will be for those reasons only. Any questions?\"\n\n\"Do you dislike me that much?\" Gene asked.\n\nNathan's silence was his answer.\n\n\"What about Leon?\" Gene asked. \"Do you really think that he isn't using you?\"\n\nNathan thought about his answer. \n\n\"Leon is a good man.\" Nathan replied. \"He has acted with nothing but honor and integrity which is something that I can't say about you. He approached me as a man on the behalf of your sisters, something that you should have done. Not once since his arrival has he hinted that he wanted anything from us, he simply asked.\"\n\n\"What did he ask for?\" Gene asked thinking that he would have something to hold over Leon.\n\n\"He asked that we love and protect your sisters.\" Nathan said quietly. \"If you want an example of what a man should be, I would suggest that you look to him. I am honored to know him and to consider him a brother.\"\n\n\"He was a drug addict...\"\n\n\"Who pulled himself together and became the man that he is and was meant to be.\" Nathan interrupted. \"Perhaps it isn't too late for you to do the same. But first, you have someone else to apologize too... no; two people and I think that you know who I'm talking about.\"\n\n\"Louise and Kevyn.\" Gene whispered.\n\nNathan didn't reply but walked away wondering if Gene knew what apology he owed Kevyn. \n\n*********\n\nHans and Juliette found the room that was closest to where the children were sleeping and sat down on the bed. Juliette moved away when she realized how close to Hans she was. Hans noticed, but didn't comment. He sat quietly and waited for her to say something to indicate that she was ready to talk.\n\n\"So do you have a last name?\" Juliette asked.\n\n\"Alhberg.\" Hans replied wondering why it hadn't come up before. \"The al means alder and the berg means mountain.\" he added.\n\n\"And you were really born in Sweden?\" She asked. \n\n\"Yes in the city of Lund which is located in the province of Scania, southern Sweden. It is considered the oldest city in Sweden. I would like to take you and the children there someday.\" he said.\n\nJuliette ignored the last part of his answer and pressed on.\n\n\"Where is your family?\" \n\n\"Many of them are still in Lund, but a few of them are here. Juliette, please ask me anything. I cannot and will not lie to you.\" Hans said moving closer to her. \"Neither will I ever hurt you or those children. I would die first.\"",
        "\"How old are you?\" Juliette asked not sure of where to start.\n\n\"I am four-hundred years old.\" Hans replied\n\n\"Four.... That would mean that you were born in...\"\n\n\"The year 1612.\" Hans finished for her. \"My sister Gustaviana was born fifty years later, and my twin brothers Rikard and Roland one hundred years after that. They all live here but my parents remain in Lund. Gussie helped me with Nadine as far as the feminine part of her upbringing and my brothers aided in her education.\"\n\n\"How old are the Sinclaires'?\" Juliette asked as she tried to wrap her mind around the fact that she was sitting with a man who claimed to be four-hundred years old.\n\n\"Much older than I am. I believe that Ethan is over six-hundred years old.\" Hans replied moving even closer to Juliette. \"I'm not sure how far his line goes back, but it's far. My line goes back to the beyond the bubonic plague which was in the 1300's.\"\n\n\"How far back?\" Juliette asked.\n\n\"The 700's at least. The Sinclaire line goes back even further. My family was one of the first families to arrive in Lund when it was founded somewhere around the year 990. In fact, my family assisted in building the Lund Cathedral which still stands.\"\n\n\"And your family has always been vampire?\"\n\n\"The maternal side of my family was human. My mother was a human who was found by her vampire mate. Things were much different then. Today the human mate can choose whether to be turned or not, but back then it was a matter of safety. There were no security systems such as the ones that we have today, and one was never sure of who their true friends and allies were.\"\n\n\"Your father turned her.\" Juliette commented.\n\n\"There was no way to protect her during the day time hours, and at that time, Weres and vampires did not get along as they do now. All efforts were made to eradicate each other. At any rate, my mother became vampire thus ensuring that any children she and my father had would be born vampire.\"\n\n\"Do you realize how crazy this sounds?\" Juliette asked.\n\n\"I do, but every word of it is true.\" Hans said taking Juliette's hand in his.\n\n\"I... I believe you.\" Juliette said, \"But that doesn't mean that I'm supposed to be with you.\"\n\n\"What is frightening you about this?\" Hans asked. \"It isn't the fact that I am vampire, so what is it?\"\n\n\"It's too fast!\" Juliette exclaimed. \"I've been here less than a week and I have children to think about.\"\n\n\"Then we slow down.\" Hans said softly. \"I can wait, and if I have to move to Pittsburgh, then I will.\"\n\n\"You would move?\" Juliet asked shocked.\n\n\"I would go wherever you went.\" Hans replied. \"We belong together, the five of us.\"\n\n\"What about the kids? What would happen to them?\" Juliette asked. \n\n\"We would gradually begin to introduce them to what I am.\" Hans replied. \"But Juliette, they already know. They don't have a name for it, but they know especially Celeste. Each of them will have the option of turning when they're old enough to make that decision. The girls could have vampire mates so could Victor for that matter, but whatever happens, I consider your children my children.\"\n\n\"What about me?\" Juliette asked. \n\n\"You don't have to turn unless you choose to.\" Hans replied. \"Most don't.\"\n\n\"Did Louise or Kevyn turn?\"\n\n\"That's something that you'll have to ask them.\" Hans replied. \"But even if you don't, you will be immortal. It happens when we make love. The turning involves making love too, but also involves the exchange of blood.\"\n\n\"I think... I know that I need time to think about this.\" Juliette said. \"Does Leon know about Nadine?\"\n\n\"I don't know, and it is for her to tell.\" Hans said. \"You cannot say anything to him; it is for them to work out. There is one more thing, now that you know what I am; you will notice a few things.\"\n\n\"Like what?\" \n\n\"Let's take Nathan's mother for instance. In the human world, she is long past safe childbearing age, but she is with child. When this child is born, it will be around forty years Nathan's junior.\"\n\nJuliette started to speak, but closed her eyes doing the calculations in her head.\n\n\"She will always be the age at which she was claimed. Kevyn will always be thirty -three, Louise will always be the age that she is and so will you.\" Hans said.\n\n\"That means that they can have hundreds of babies!\" Juliette exclaimed.\n\n\"Theoretically that's true.\" Hans said, \"Realistically it won't happen. There are mates who have been together for centuries and they have no children. My parents have been together for centuries and have had no other children since the twins. But that doesn't mean that it can't or won't happen.\"\n\n\"So no birth control is used?\" Juliette asked.\n\n\"There is no need for birth control.\" Hans replied. \"It is understood that if there is a child, he or she will be loved and protected by its parents just as human parents are supposed to love and protect their children. If we were to mate, and a child resulted from it, there would be no anger only happiness.\"\n\n\"We would definitely have to be a two-income household.\" Juliette murmured under her breath.\n\nHans' heart leapt, and the tingle in his groin became a pronounced throb. He had done all that he could do for the time being except for one thing. He took Juliette into his arms and kissed her. Kissing had always been one of his favorite parts of making love. In his opinion, a kiss could convey what words couldn't, and it wasn't making love until there was a kiss.\n\nFor that reason, he never kissed a date except on the cheek, and he never took anyone home with him. Reluctantly, he broke the kiss and looked into Juliette's eyes.\n\n\"I belong to you and no one else.\" he said and brushed his lips across hers again.\n\n\"Who was she?\" Juliette asked.\n\n\"Who?\" Hans asked.\n\n\"The one who didn't want you. Who was she?\"\n\n\"It doesn't matter.\" Hans replied. \"Let's go check on children.\"\n\nHe stood still holding onto Juliette's hand and led her out of the room. All three children were still asleep and showed no signs that they were going to wake up any time soon. Hans happened to take a last look at Celeste before he and Juliette went to join the others.\n\nHe saw the smile that played on her lips and smiled to himself.\n\n\"Sneak.\" he murmured with a smile and followed Juliette back to the theater.\n\n*******\n\nDuring the break, Louise tried to call Barb, but got her voice mail each time. After the fourth time, she left a message.\n\n\"I know you're there and that you're mad at us, and I think that I know and understand why. I just wanted to say that we are still a family no matter what happens. Call us if you need anything.\"\n\n\"No answer?\" Nathan asked from behind her.\n\n\"No, and I'm worried about her.\" Louise replied.\n\n\"What do you want to do?\" Nathan asked.\n\n\"Nothing for now. If she doesn't show up by the time Gene leaves for Pittsburgh, I want to go to her apartment.\"\n\n\"Alright, but how are you feeling? Do you need to lie down?\" Nathan asked.\n\n\"I'm fine. Just worried.\" Louise replied. \"What happened with Gene?\"\n\n\"We talked, I told him a few hard truths, but I think that we understand each other.\" Nathan said hugging her. \"Patrick just put in your favorite movie.\"\n\n\"Really? He has 'West Side Story?\" Louise asked.\n\n\"He sure does, so let's get back.\" Nathan replied.\n\nA few minutes later, Louise was happily saying the lines along with the characters and then singing along with them. Nathan listened amazed at the pure tones that came from her.\n\n\"What other talents do you have?\" He asked. He had to wonder what else Jackson found out about the Yancy family history.\n\n\"What?\" Louise asked.\n\n\"You have a lovely singing voice.\" Nathan said. \"Who else in your family is musically inclined?\"\n\n\"Mom used to sing around the house, but no one else that I know of. Now shush, the movie is on.\" Louise said and turned her attention back to the movie. At the end of the movie, Louise cried as she always did. Nathan lowered his shields and was touched by the amount of empathy Louise had for the fictional characters.\n\nHe tried to imagine what childhood had been like for her, and then thought about Celeste. She had to be scared and was glad that she wasn't going through it alone as Louise had done. He was still amazed at how well Louise had managed to come through it unscathed.\n\nNathan came to the same conclusion that Kevyn had reached weeks ago; Louise was the strongest of them. Of all of the Sinclaire males to date, he considered himself the most blessed. He suspected that not even Louise knew half of what she could do, and he would get to discover those talents with her. He had to wonder where she would be if circumstances had been different, and if she would be sitting in his lap with their child in her belly.\n\n\"Hey, I'm here.\" Louise said and kissed his cheek. \"What happened before doesn't matter.\"\n\n\"But it does.\" Nathan replied telepathically. \"It helped shape who and what you are. I was just thinking of where you would be if things had been different. I would like to think that you would be where you are right now.\"\n\n\"I agree.\" she replied telepathically. \"But in the end what matters is that I'm here, and it I weren't, at some point I would be. Is that all that you were thinking about?\"\n\n\"I was also thinking that of all my male relatives, I am the one who has been the most blessed. You are gracious, kind and brave. You are adapting to a new way of life, and now you are carrying our child. Not once have you whined or complained. You just accepted what was happening and moved forward. That sweetheart is strength.\"\n\nLouise was about to reply but Patrick was speaking.\n\n\"We're taking another break.\" he said. The next movie which was chosen by Leon will start in thirty minutes.\"\n\n\"Oh lord.\" Louise moaned. \"I know what it is.\"\n\n\"What?\" Nathan asked.\n\n\"Rocky.\" Louise replied rolling her eyes.\n\nNathan laughed, his Louise was many things but a sports lover wasn't one of them.\n\n\"Let me guess.\" she said, \"It's one of your favorites too.\"\n\n\"I wouldn't go that far.\" Nathan replied, \"But it is a good movie. Would you like to skip it and sit outside?\"\n\nLouise thought about it for several minutes.\n\n\"No, I'll stay. Leon hates West Side Story and he sat through it. And besides, this is family time.\"\n\n\"I really don't think that he or anyone else will mind.\" Nathan said kissing her neck. \"I want you to myself for a little while.\"\n\n\"A whole movie?\" Louise teased.\n\n\"At least half of it.\" Nathan teased back as he grazed the skin of her neck with the tip of a fang.\n\nLouise jumped and then shivered.\n\n\"What do you think?\" Nathan asked. \"I happen to know of a spot where we won't be disturbed.\" he added kissing her neck again.\n\nThe throb and moisture between her legs decided the matter. Nathan was right, Leon would understand, and he had only sat through 'West Side Story' because of Nadine. She wished that they could just vanish from one place to another after the movie started, but Nathan was starting with teaching the simple things.\n\n\"We start small and will go from there.\" He told her when she asked when they would get to the fun stuff. \"Every small step is the basis for what you call the fun stuff.\"\n\nTo date, she could move things short distances across the room and could partially make her clothes disappear.\n\n\"When you can make all of your clothes disappear, we'll move to the next step.\" Nathan told her.\n\nAs soon as the movie started, they left the theater. They walked through the house ending up in her old suite.\n\n\"Here?\" Louise asked. \"There are too many people around....\"\n\n\"The room is soundproof.\" Nathan replied. \"The only ones who will think to look for us here are Kevyn and Patrick. Leon, Hans, Juliette and Gene have other things on their minds than newlyweds who skipped out on a movie.\"\n\n\"I know but, won't Patrick mind?\" Louise asked.\n\n\"No, he won't.\" Nathan assured her. \"In fact, I would bet that he's wishing that he and Kevyn could disappear for a while.\"\n\nHe took her hands and backed up to the bed pulling her with him. When he reached the bed, he sat down and pulled her into his lap. When she began to wiggle around to get more comfortable, Nathan moaned.\n\n\"Don't stop.\" he breathed. \"It feels good.\"\n\nIt took Louise a few seconds to catch on. Nathan wanted what was the equivalent to a lap dance. The difference was that touching was allowed and encouraged. She closed her eyes, thought of a song, and began to move her behind to it.\n\nNathan's eyes were closed, but they snapped open as Louise began to get into what he wanted. His cock grew even harder in his shorts. He wanted to free it, but the combined friction of the slightly rough material and Louise's movements felt too good.\n\nHe reached around her, took a breast into each hand, and began to squeeze them. He flicked his thumbs over the already erect nipples, and wanted them in his mouth. Louise was now moving back and forth grinding down on his cock as hard as she could. Her back was pressed into his chest, her breast jutting out trying to get Nathan to do more than just flick and squeeze.\n\nNathan quickly turned her so that she was facing him and removed her top and then her bra. He looked at her and realized that he had been wrong about something. She wasn't beautiful, she was exquisite, but even that was too weak of a word to describe her.\n\nLouise continued to grind against him but wanted him to suckle from her. Impatient, she took a breast into her hand and offered it to him.\n\n\"Please.\" she whispered and then cried out when he planted the lightest of kisses on her nipple before taking it into his mouth and sucking on it so gently that it almost tickled. \"Harder.\" she moaned when she understood that he was holding back.\n\nWithout being fully aware of what she was doing, Louise thought the words.\n\n\"Clothes off!\"\n\nSuddenly, Nathan's bare cock was rubbing against her bare and throbbing clit. Nathan sucked even harder on her nipple as he lifted her up just high enough that he could enter her. He moaned into her breast and began pumping into her careful of the amount of force he was using.\n\nHe released the swollen nipple from his mouth and took the other one in. As with the other nipple, he planted a kiss on it before taking it into his warm, wet mouth and sucking on it softly and then hard. He sucked from her until he knew that she was going to come. \n\nNathan released the nipple, and lay back on the bed giving Louise complete control of her orgasm. He tried to lay still. He couldn't help but move when Louise's vaginal muscles began to squeeze tightly around his cock. He took her by the hips and helped her grind against him as he pumped into her.\n\n\"Oh god!\" he yelled as he emptied into her inhabited womb and he felt her clit pulsing against him.\n\nLouise's orgasm began as soon as Nathan started to grind against her. She knew that the orgasm shouldn't be as intense as the ones before now that she was pregnant, but this one was every bit as intense as the others were. She could tell by Nathan's response that it was the same for him. She screamed, thankful that the room was soundproof.\n\nAfterwards, she slumped over, her head resting on Nathan's heaving chest. She shivered when her sweaty body began to cool and snuggled into him. A second later, she felt a blanket cover them and wished that they didn't have to leave.\n\n\"We don't just yet.\" Nathan told her. \"Sweetheart, are you alright? I didn't hurt you did I?\"\n\n\"No, I'm fine.\" Louise replied sleepily. \"I just need to sleep a little.\"\n\n\"Go ahead.\" Nathan encouraged. \"I'll wake you when we need to go.\"\n\nLouise was asleep a few seconds later with Nathan's cock still embedded inside of her. Nathan didn't mind, he knew how he was going to wake her up when it was time.\n\n********\n\nLeon took a quick look around and grinned when he saw that Nathan and Louise were missing. He tightened his grip on Nadine's hand and began to stroke it with his thumb. The more he thought about leaving, the sadder he became. Realistically, he could move if he used all of his vacation time of which he had weeks, and he had more than enough money in the bank without touching his investments.\n\nThe question was where would he stay until he found a place? He wasn't about to ask Louise or Kevyn although he knew that they would let him stay with them, but they were newlyweds who needed their privacy. Leon realized after a few minutes that a place to stay wasn't the real issue. The real issue was Nadine. Was he really considering moving to another state for a woman that he had known for less than a week?\n\nThe memory of another woman crossed his mind. He was almost destroyed by her, and he refused to make the same mistake twice. However, as he looked at Nadine, he knew that he wouldn't be making a mistake. Even so, he was nervous.\n\n\"Leon?\" Nadine called softly. \"Are you alright?\"\n\n\"Yeah baby... I was just thinking about a few things.\" Leon replied surprised at how easily the term of endearment had come out of his mouth.\n\n\"Are you sure?\" Nadine asked nervously. She had known that there was the chance that she had a mate somewhere, but she had never expected to find him.\n\nShe looked over at Hans and smiled. He was so happy that she could feel it from where she sat. She knew about the other mate even though they had never really talked about it. His anxiety about the woman had been palpable, and when she found out who the woman was, she fully understood his anxiety.\n\nHowever, Juliette was not her sister. Nadine liked her and the children as soon as she met them. She thanked the fates on a daily basis that they had taken the evil Barb away from her father. He didn't deserve one such as her, but then again, did anyone?\n\nNadine turned her attention back to Leon and wondered how she was going to tell him that she wasn't human. She decided to try to talk to Hans during the next intermission.\n\n\"Nadine? Are you ok?\" Leon asked concerned.\n\n\"I'm fine... I'm just thinking about papa and your sister. They look nice together don't they?\" Nadine asked.\n\n\"Yeah, they do... am I going to have to give your papa my brother speech?\" Leon teased, but was half-serious.\n\n\"Brother speech?\" Nadine asked confused.\n\n\"Yeah, you know the one,\" Leon replied, \"if you hurt my sister I'll kick your ass and so on.\"\n\n\"Oh... I don't have any brothers, but it sounds like the kind of speech that papa would give to my ma... boyfriend.\" Nadine said. \n\n\"I like your father.\" Leon said looking over at Hans. \"He's a cool dude.\"\n\n\"He likes you too.\" Nadine replied. \"Leon, would you mind if we skipped the next movie? I want to tell you something.\"\n\nLeon nodded, suddenly nervous.\n\n*********\n\nGene sat in the back not paying attention to the movie or to any of the conversations going on around him. He was lost in his own thoughts, which started with growing up. He had hated being poor, but wouldn't go so far as to say that they were abused. He knew people who had been abused. Some of them had come to school dressed in the best clothes and lived in some of the nicest houses.\n\nHe had never wanted to be filthy rich like the Sinclaires' but he didn't want to have to worry about money either. All he wanted was a nice house, a beautiful wife and a nice vacation once a year. He had actually met that goal until ....\n\n\"I fucked up.\" Gene murmured for the first time taking responsibility for his actions.\n\nHis thoughts went from that failure to his father and the failure there. Victor Yancy was firm in his belief that Gene should be the one to care for and lead the family if anything should happen to him. That Victor had his doubts was obvious when he made sure to teach Leon what he considered the role of a true man. It was something that he would have taught anyway, but he always made sure that the younger boys listened as well.\n\n\"It's our job to make sure that our women are safe and cared for. Gene since you're the oldest, the responsibility falls to you, but that doesn't mean that you younger boys can't help. The bottom line is this, if anything happens to me, you boys need to pull together. The same goes for the girls. You have to take care of each other and your mother, and you can't do that if you don't pull together.\"",
        "It seemed a lifetime ago since that conversation. By no stretch of the imagination had he fulfilled his father's admonitions. He had done the bare minimum. It occurred to him that he had been doing the bare minimum for most of his life.\n\nWhy he had to come to California to have this epiphany, he didn't know, but what he did know was that he didn't like the way that it made him feel. In a way, he felt a little like Ebenezer Scrooge who woke up one day, realized the errors of his ways and changed. Unlike Scrooge, he didn't have the resources, financial or emotional to make immediate change. If he did change, it wouldn't happen overnight.\n\nHe began to ask himself the hard questions as the movie played. His head began to ache at the choices that he needed to make. No matter what he did, he had a hard road in which he had to travel. He had to decide just had badly he was willing to work for what he now knew he was missing.\n\nRespect.\n\nIt wasn't just the respect of others that he was missing. He was missing the respect for himself and the respect that he should have had for his family. He wondered at what point he lost that respect, and whether it was possible to get it back. He jumped when the lights switched on and Patrick announced another break.\n\nGene remained in his seat, closed his eyes and hoped that no one would disturb him.\n\n********\n\nLouise and Nathan slipped back in just as the movie ended.\n\n\"Do you want anything to eat or drink?\" Nathan asked as they sat down.\n\n\"No I'm fine... I know that you want to talk to Leon so go.\"\n\n\"Leon can wait.\" Nathan replied.\n\n\"I know, but seriously, I'm fine and fully capable of getting my own food.\" Louise replied. \"Now get going.\"\n\nNathan hesitated.\n\n\"Nathan, I'm fine.\"\n\nNathan grinned. He heard the little tone of annoyance in her voice. That would be his indicator for when he was becoming too obsessive.\n\n\"What are you grinning at?\" Louise demanded.\n\n\"Nothing, I'll be back before the next movie starts.\" Nathan replied and kissed her temple.\n\n*******\n\nA few minutes later, he and Leon were sitting in an office at the far end of the basement. Nathan had caught up with Leon before he and Nadine could slip out.\n\n\"How do you like California?\" Nathan asked.\n\n\"I love it here!\" Leon replied. \"It's funny that you should ask though.\" he added.\n\n\"Why is that?\" Nathan asked.\n\n\"I was thinking about relocating. The big problem as I see it would be employment. I don't think that you have too many steel mills around here.\" \n\n\"Not in these parts anyway.\" Nathan replied. \"Tell me about what you do at the steel mill.\" \n\n\"I'm what you call a jack of all trades and a master of none.\" Leon replied. \"I'm one of the night shift supervisors. I also trouble shoot when a piece of equipment goes down, and that includes the computers. I also help train the new hires, and of course there's tons of paperwork in a system that is supposed to be paperless.\"\n\n\"Do you like your job?\" Nathan asked.\n\n\"I like it most of the time.\" Leon replied. \"But its like any job, there are days when I wonder why I do it, and then I remember that I need to work. But even if I didn't like it, I would still do it to the best of my ability. What is this? A job interview?\" Leon teased.\n\n\"Yes.\" Nathan replied.\n\nLeon stared at him for several seconds and then started laughing. He stopped when he saw that Nathan wasn't laughing with him.\n\n\"You're serious?\" he asked.\n\n\"Very.\" Nathan replied. \"I could use a man like you to run one of my small companies.\"\n\n\"Hold up!\" Leon exclaimed. \"I don't know anything about architecture or running a company.\"\n\n\"No, but you know people, and you're good with them.\" Nathan replied. \"I would send you to school for a crash course on the basics and you could come to me with any questions. I also disagree with you when you say that you don't know anything about running a company. You do it every time you go to work just on a smaller scale. This wouldn't be much different.\"\n\n\"Why me?\" Leon asked. \"There's got to be people who are much more qualified than I am to do this.\"\n\n\"There are.\" Nathan conceded. \"But I want you. You have people skills that the others lack, and that's what I need. I also called your employer and spoke with them. You are very highly regarded.\"\n\n\"You did what?\" Leon asked not sure of whether he should be angry or pleased.\n\n\"I called your company.\" Nathan repeated. \"I have good instincts when it comes to judging people, and I wanted confirmation of my impressions.\"\n\n\"Are you doing this because you think that you have to?\" Leon asked. \"Because if you are, I'm going to say no as tempting as the offer is.\"\n\n\"Who you are has very little to do with it.\" Nathan replied. \"I won't say that it has nothing to do with it because you would know that I was lying. I'm asking you because I like what you've done with your life. I like you and the way that you stepped up for your sisters. I also happen to believe that you would do well in the position that I offered you. \n\nIt's one of my subsidiary companies. It's small enough that you won't be overwhelmed, but big enough to give you a challenge. The office staff consists of four people, but the field staff is made up of eleven people in various fields of expertise. I know that you have business in Pittsburgh, but you can take whatever time you need to wrap it up if you decide to accept my offer.\" \n\nLeon didn't know what to think. Nathan had just offered him a solution to part of his problem.\n\n\"I know that you'll need a place to stay.\" Nathan said. \"I have a small home that you can live in for as long as you need it.\"\n\n\"How much is rent?\" Leon asked.\n\n\"Nothing....\"\n\n\"How much is rent?\" Leon asked again interrupting him.\n\nNathan nodded in understanding and approval. Leon Yancy was a proud man and would insist on paying rent even if he stayed with him and Louise.\n\n\"Twelve-hundred and utilities are included.\" Nathan replied. The reality of it was, he could charge triple what he told Leon and the tenant would have to pay his/her own utilities. But Leon was family and he wouldn't charge him more than he was.\n\n\"Why do I get the feeling that you're cutting me a break?\" Leon asked.\n\nNathan grinned at him. \"Because I am.\" he replied. \"Let's talk about wages. I'm going to toss out a number and you tell me if it's comparable to what you were making.\"\n\n\"I haven't said yes yet.\" Leon said.\n\n\"True.\" Nathan replied. \"But I think that you will.\"\n\n\"What about Gene?\" Leon asked.\n\n\"What about him?\" Nathan asked.\n\n\"Are you going to offer him a job or invest with him?\"\n\n\"Gene and I have talked.\" Nathan replied. \"If he chooses to tell you what we talked about, that's up to him but from my view point that discussion is between me and him.\"\n\n\"Understood.\" Leon replied.\n\n\"All right, tell me if this number is in the ballpark of what you make at the steel mill.\" Nathan said.\n\nHe threw out a number and waited for Leon's response.\n\n\"That's right on the money.\"\n\n\"This is what I'm offering.\" Nathan said and then gave a number. \"Before you say anything that is the going rate of pay for your position in this part of the country. Of course, health insurance and a retirement plan are a part of the package.\"\n\n\"Can I think about it?\" Leon asked.\n\n\"Take your time.\" Nathan replied. \"If you decide to accept my offer, we'll send you home on the jet and you can call us when you're ready to come back.\"\n\nLeon shook Nathan's hand not quite believing how things were working out. If he were a superstitious man, he would have seen the opportunity as fate. He went back to the theater to see Nadine chatting with Louise. Somehow, seeing them talking together seemed right. The last woman, the only woman that he had been with hadn't liked his family, and they hadn't liked her. Louise in particular had disliked her, and had tried to warn him about her.\n\n\"Leon, I know that she's pretty and she seems nice, but something isn't right about her. I think that she's going to get you into trouble.\"\n\nA few months later, he was a drug addict wishing that he had listened to Louise. She had seen something that he hadn't although in retrospect, he had seen it too.\n\nHe stood by the doorway watching them talk and realized that Louise liked Nadine. She was his best indicator as to whether he was making another mistake. In his heart and in his gut, Leon knew that he wasn't making a mistake but he needed confirmation.\n\nHe walked in, sat next to Nadine and took her hand in his. He looked at Louise to see her reaction. When she smiled at him, he knew that he had her support.\n\nHe was moving to California.\n\nIt struck him as odd that most of them would be staying or going home and returning. He knew with a certainty that Gene was going back to Pittsburgh and wouldn't be returning any time soon. He looked back at Gene who was still sitting in his seat with his eyes closed and then looked back at Louise.\n\nHe jumped when he thought he saw her eyes flash. He blinked, and then decided that it was the lighting when he saw that her eyes were her normal shade of brown.\n\n\"So were you talking about me?\" he asked grinning at them.\n\n\"As a matter fact, we weren't.\" Nadine replied smiling at him. \"We were taking about the baby.\"\n\n\"Are you al...\"\n\n\"Stop right there!\" Louise said. \"If one more person asks if I'm alright, I'll scream. Other than being slightly in shock, happy and anxious, I'm fine so stop worrying.\"\n\n*********\n\nNathan walked in at the tail end of the exchange. He smiled knowing that Louise could hold her own against him or anyone else for that matter. He looked around for Patrick and or Kevyn and spotted them in a corner talking. It didn't appear to be anything too personal so he approached them.\n\n\"There's more going on here than just a movie night, can you feel it?\" he asked.\n\n\"We were just talking about that.\" Kevyn said. \n\n\"What are you thinking?\" Nathan asked.\n\n\"We'll keep running the movies.\" Patrick replied. \"It will help conceal what's really happening which is mates' working out their issues. The only human that we really need to be concerned about it Gene, but he is easily dealt with.\"\n\n\"Good plan. By the way, I offered Leon a job.\"\n\n\"You did?\" Kevyn asked surprised.\n\n\"I did, and he's thinking about it.\" Nathan replied. \"I'll let him fill you in on the details; I need to get back to Louise.\"\n\nNathan walked back to where Louise was sitting still talking with Leon and Nadine. He looked over to the right, and saw Gene sitting alone with his eyes closed. Nathan knew that he wasn't asleep, but deep in thought. He hoped for Gene's sake that whatever seeds were planted took root.\n\nHe sat down next to Louise, put an arm around her, and pulled her close. He almost asked her how she was, but stopped himself. She was fine he reminded himself. While she was talking, he decided to listen for the baby's heartbeat. If he heard it, he reasoned; he could relax.\n\nNathan closed his physical and mental eyes, blocked out the sounds around him, blocked out the beating of Louise's heart and listened. Several seconds passed before he heard it. It was faint and rapid but it was there. The heart beat of their son or daughter seemed to grow stronger as he listened to it.\n\nHe laid a hand on Louise's stomach not caring who was watching him, and sent warm thoughts to the baby.\n\n\"We love you little one.\" he said telepathically.\n\nAs he listened to the heartbeat, his anxiety about the health of Louise and the baby diminished. It was replaced with a happiness that astounded him.\n\n\"I told you that I was alright.\" Louise said telepathically. \"Did you hear his heartbeat?\" she asked.\n\n\"You knew what I was doing?\" Nathan asked telepathically.\n\n\"Of course I did.\" Louise replied. \"I would have been surprised if you hadn't. What surprises me is that you managed to wait this long.\" \n\nPatrick stood up and announced the next movie.\n\n\"Kev chose the next movie...\"\n\n\"Rambo.\" Louise muttered under her breath.\n\n\"I gather you don't like Rambo?\" Nathan asked. \n\n\"Not anymore than I like Rocky.\" Louise replied. \"And before you say it, as much as I would like to slip out of the movie, we'd better stay put.\"\n\n\"Spoil sport.\" Nathan teased. \n\n\"Maybe, but I think that Gene wants to talk to me about something.\" Louise replied. \"He feels different. You didn't compel him did you?\"\n\n\"No, I promise.\" Nathan replied. \"But as you know, I did talk to him. We'll see what happens.\"\n\n*******\n\nGene barely heard anything that Patrick said during the announcement. In his mind, he was still revisiting the past and was gradually making his way to the future. He asked himself what he had done in his life that he could honestly say that he was proud of. \n\n\"I graduated from college and got a good job.\" he whispered. \"I married a wonderful woman...and then I fucked up.\"\n\nAs he sat there in the almost dark room, a feeling of shame fell over him. The feeling of shame grew when he thought about Clay Robinson. He had really contemplated killing his own sister for money. In that moment, he was glad that his parents were dead. He could almost feel how disappointed, hurt and angry they would have been. Suddenly, he understood what Nathan meant when he said that he had another person that deserved an apology.\n\nKevyn.\n\nHe had to tell her about his involvement with Clay Robinson. He had to confess to her that he for all practical purposes had tried to sell her to Clay. It didn't matter that in the end that he was going to kill Clay himself. It would only matter that he was going to kill his sister. His next thought was about Patrick. He was sure that Kevyn would tell him about his involvement with Clay. Gene shuddered as he thought about how Patrick would react.\n\n\"Fuck.\" he muttered as he went on to think about Louise. He knew that she had been struggling to care for their mother. And while he couldn't have helped much financially, there were other ways in which he could have helped. That Louise had never complained no longer eased his newly awakened guilt.\n\nFor a brief moment, Gene felt a deep sense of despair. He wanted to leave, find the nearest bar and drink himself into oblivion. Anything was better than dealing with the emotions that had come from seemingly nowhere, but he stayed where he was. He opened his eyes to see Louise looking at him with a concerned expression on her face. He gave her a small smile and then nodded at her. He would talk to her first.\n\n********\n\nLeon replayed Nathan's offer in his head several times. He knew that he was going to accept it, and wondered why he was hesitating. Louise obviously like Nadine, and Nadine liked her. He wondered if the hesitation was because everything seemed to have happened so quickly. \n\nFirst, there was Kevyn and Patrick. She hadn't known him for very long before she announced him as her significant other. The same went for Louise although she and Nathan surprised him more than Kevyn and Patrick had. Kevyn had been married before whereas Louise had no experience with men other than working with them. Then there was Juliette and Hans, another one that he didn't see coming, and finally, there was Nadine.\n\nHe had only met her once before the wedding, but she was never far from his mind. He didn't know what to think, but decided that he and Nadine needed to talk. Part way through the movie, he leaned over and whispered in her ear.\n\n\"Let's get some air.\"\n\n\"You don't like 'Rambo'?\" Nadine asked.\n\n\"I do.\" Leon replied, \"But talking to you is more important.\"\n\nA few minutes later, they were sitting outside in one of the gardens. Leon looked at his watch and saw that it was almost two am. He looked up at the sky that was sparkling with stars and smiled. It was perfect, the night was perfect and so was Nadine.\n\n\"Nathan offered me a job.\" he said after several minutes. \"I don't know if I should accept it or not.\"\n\n\"That's wonderful!\" Nadine exclaimed, \"But why wouldn't you accept it?\"\n\nLeon told her what the job entailed.\n\n\"I don't know anything about architecture or running a company. What if I fuck something up?\"\n\n\"Well... didn't Nathan say that he would send you to school?\" Nadine asked.\n\n\"Yes, but architecture?\" Leon asked.\n\n\"Why not?\" Nadine asked. \"You're smart enough, and Nathan did say that he would be at your disposal.\" she added.\n\n\"True...\"\n\n\"Leon, what's the real issue? Is it me?\"\n\n\"No! Yes, but not in the way that you're thinking.\" Leon replied and then wondered how he knew what she was feeling. \"Nadine, I have a history and it involves a woman.\"\n\n\"Tell me about her.\" Nadine said laying a hand on Leon's arm.\n\nLeon hesitated for only a moment before he began to tell Nadine about his prior life. She listened without interruption, and after he finished, she didn't say anything for several minutes.\n\n\"Do you think that I would lead you down that road?\"\n\n\"I'm not saying that.\" Leon replied. \"I'm just saying that I'm a little gun shy. I like you.\" he added. \"You're beautiful, smarter than Einstein, and I like being with you. But I would be lying if I said that the strong attraction scares me a little, and not just because of my past experience.\"\n\n\"Are you talking about your sisters?\" Nadine asked.\n\n\"Exactly, and me too. Think about it.\" Leon said. \"Three of my sisters have come to California and hooked up with some one. Two of the three married the guy, and if your father has anything to say about it, he'll be marrying the third. Then there's us. I feel like I've known you for longer than a few days. What is it about this place?\" he asked.\n\nNadine didn't know how to respond so she went back to the discussion about the job.\n\n\"Will you accept Nathan's offer?\"\n\n\"Probably.\" Leon replied. \"That's the other thing, the job offer. I was thinking about moving here, but the job situation was going to be an issue at some point and, then here comes Nathan with a job offer. Seriously, can all of this be a coincidence?\" he asked.\n\n\"Maybe it's fate.\" Nadine said softly. \"Maybe all of these things were supposed to happen, and I include our meeting in that.\"\n\n\"Are you talking about Karma?\" Leon asked.\n\n\"I guess you can call it that.\" Nadine replied. \"I just believe that things happen for a reason. There is a reason why your family came here. There was a reason for why we met that night in the hallway of the hotel, but I don't think that you're ready to hear the reason yet.\" Nadine hesitated a moment and then continued. \"Maybe I'm the one who isn't ready.\"\n\n\"What are you talking about?\" Leon asked. \n\n\"I hope that you take the job.\" Nadine said standing up.\n\n\"Nadine, wait.\" Leon said. \"Why do you think we met?\"\n\n\"It's getting late, and I have a paper to write.\" Nadine replied. \"Can I call you later today? We'll talk about it then.\"\n\nShe knew that she was being abrupt, but she needed the time to think and if possible, to talk with Hans.\n\n\"Ummm sure... call me anytime.\" Leon replied. \"How about we meet for lunch?\"\n\n\"I would like that, but the evenings are better for me.\" Nadine replied. \n\n\"Dinner then.\" Leon replied. \"I'll pick you up at six.\"\n\nAs they walked back to the house, Leon wondered what Nadine was talking about. He made a mental note to check at the front desk for the best place to rent a nice car. He knew that he had access to any of the cars at the hotel, but he wanted to rent his own car. It was important that Nadine knew, and understood that he was his own man and that he could have cared less about the Sinclaire money.\n\n******\n\nHans kept looking over at Juliette who covered her eyes every time a bloody scene or a scene involving torture came on the screen. He put an arm around her, pulled her close and kissed her temple. The truth of the matter was, although he had fought in many wars, he hated the violence and the loss of life that came with it. He avoided conflict as much as possible, but if it came to protecting his family, he would kill. He would have killed for Barb that night if she hadn't denied him. ",
        "He pushed Barb out of his mind. She was no longer his responsibility other than she was the sister to his mate. He was brought back to the present by the sound of Juliette gagging.\n\n\"Come, let's go out for a moment.\" he said gently.\n\nJuliette didn't argue, but allowed Hans to lead her out of the room and to a bathroom. Once inside, Juliette washed her face with cold water and rinsed her mouth out. Hans was waiting for her when she came out.\n\n\"Do you feel better?\" he asked.\n\n\"Yes, thanks.\" Juliette replied sheepishly. \"As you can tell, I don't do well with blood.\"\n\n\"I noticed.\" Hans said with a smile. \"Would you like to go for a walk?\"\n\n\"You don't like those kinds of movies either do you?\" Juliette asked.\n\n\"No, not really.\" Hans replied. \"I've seen too much death and bloodshed during my time. About that walk?\"\n\n\"Sure, but I want to check on the kids first.\" Juliette replied.\n\nTogether, they went to the bedroom where all three children still slept. They stood side by side for several second neither of them missing how natural it felt. A few minutes later, they were walking around the grounds. The warm breeze felt good on Juliette's face. She kept peeking over at Hans still not sure of whether she believed him or not.\n\n\"You still aren't convinced.\" he said after a few minutes.\n\nJuliette hesitated. She was thinking about how to respond to Hans' statement.\n\n\"I do and I don't.\" she finally replied. \"The part of me who used to dream about mythical and mystical creatures believes you. The adult woman with three children, and has to live in the real world doesn't. I'm not saying that you're crazy. If I thought that, I wouldn't be out here alone with you and you definitely wouldn't be anywhere near my kids.\"\n\n\"What would it take to convince the adult woman?\" Hans asked.\n\n\"Do you fly?\" Juliette asked as she began to recall the vampire lore that she knew.\n\n\"No, but there are those who can.\" Hans replied. \"I can however, jump from the ground and land on the roof of a building and vice versa.\"\n\n\"What else can you do?\" the Juliette who used to dream about mythical and mystical creatures asked.\n\n\"I am telekinetic, I can read thoughts, but all vampires can do that as well as compel. I am also telepathic and when we mate, you will be as well. I can vanish from one place to another even if it is another part of the world. The stories about our strength and speed are true.\"\n\n\"What about the blood thing?\" Juliette asked. \"I saw you eat.\"\n\n\"There are those of us who can eat, but we still need blood. It has things in it that we need. There are those who can only survive on blood. Human food doesn't appeal to them and causes significant pain when ingested. While we're on the subject,\" Hans said, \"let me dispel a few more falsehoods for you. Holy water doesn't affect us... let me clarify that. There are those who for whatever reasons let go of their humanity and become truly evil. They cannot stand to be near holy objects of any kind no matter the religion nor can they enter sacred buildings such as churches.\"\n\n\"Why do they change?\" Juliette asked.\n\n\"Some of them just choose to.\" Hans replied. \"Some of them get tired of waiting for their mates and instead of doing something to help them retain their humanity and compassion, they let themselves go. These are extremely dangerous creatures. They will take a woman even if she is mated, and will force her to mate with them. Why? No one knows for sure although the consensus is that they hope to revert to their former selves.\"\n\n\"Does it work?\" Juliette asked.\n\n\"Not that I am aware of.\" Hans replied. \"These creatures are part of the reason why vampire males are so protective of their mates, especially ones that are still human or haven't turned. Once a mate is turned, they are of no use to the dark ones. When a dark one is spotted, they are immediately killed with no questions asked. There are also those that are called hunters.\" Hans continued.\n\n\"They have been in existence for as long as the vampire and they are our sworn enemy. Their only goal is to eradicate every vampire there is and they will use the women and children of the vampire to meet this goal. That is another reason our families are so vigorously protected.\"\n\n\"Are the hunters human?\" Juliette asked.\n\n\"For the most part yes.\" Hans replied. \"But there are other species who work with them including vampires. Secrecy about whom and what we are is our greatest protection. I must apologize; I have gotten away from what we were discussing.\"\n\n\"Please, don't apologize.\" Juliette said. \"I needed to hear all of this at some point didn't I?\" she asked.\n\n\"You believe me then?\" Hans asked.\n\n\"It's not that I don't believe you.\" Juliette replied. \"When I'm with you and talking to you, it sounds so reasonable. The problem comes when I'm alone and have time to think.\"\n\nSuddenly, Hans was gone. Juliette stared at the spot where he had just been standing in disbelief. She did a complete three-sixty degree turn looking for him.\n\n\"Juliette, turn around and look up.\" Hans called out to her.\n\nJuliette swallowed hard, slowly turned around and looked up. She gasped in shock when she saw Hans floating several feet above her.\n\n\"Oh my god...Oh my god!\" she murmured as Hans slowly descended and landed on his feet in front of her.\n\n\"Juliette?\" Hans said softly ready to catch her if she fainted.\n\n\"Oh my god.\" she repeated looking up at him. \"I think I'd better sit down.\"\n\nHans looked around for the nearest place to sit. Seeing none that he deemed close enough, Hans sat on the ground and pulled Juliette into his lap.\n\nShe sat in stunned silence not paying attention to the fact that a hard cock was pressed into her bottom. Hans fought the urge to rub against her and waited.\n\n\"Do you bite people?\" Juliette asked when she recovered from her shock.\n\n\"Not unless there is an emergency where blood is unavailable.\" Hans replied. \"Some of us have access to bagged human blood. Sometimes, a female will allow her mate to feed from her, but it isn't required nor is it forced.\"\n\n\"Where do you get the bagged blood from?\" Juliette asked.\n\n\"There are vampire run facilities where it can be ordered from. Some like the Sinclaires' have their own suppliers or they own their own blood bank.\"\n\n\"What about you?\" Juliette asked.\n\n\"I am nowhere near as well off as the Sinclaires, but I have my own supplier. Hans replied\n\n\"When did you last bite someone?\" Juliette asked.\n\n\"It's been awhile.\" Hans replied.\n\n\"How long?\" Juliette pressed not sure of why it was so important that she know.\n\n\"I haven't bitten a human since blood banks came into existence.\" Hans replied.\n\n\"But what about those who don't have money? What do they do?\"\n\n\"Some of them live off of animal blood, some of them make arrangements with human friends and some of them just take what they need in order survive. Sometimes in their eagerness, they kill or accidentally turn someone. There are also those who prefer to feed from humans as opposed to the alternatives. \"\n\n\"And then what happens to the ones who were turned?\" she asked.\n\nHans hesitated. He wasn't ready to tell her about the uglier parts of his world.\n\n\"What happens to them?\" Juliette asked again oddly concerned.\n\n\"They are hunted down and if possible; saved.\" Hans replied. \"If they cannot be saved, they die.\"\n\n\"Die? You mean killed don't you?\" Juliette asked.\n\n\"You have to understand.\" Hans said. \"All new vampires need someone to teach them how to survive without killing anyone. As I mentioned, secrecy is our greatest protection and these newborns through no fault of their own endanger all us. They must be dealt with.\"\n\n\"Can you imagine waking up to a world that you may not believe in or even knew existed?\" Juliette asked. \"And to top it off, you're hunted and then killed without knowing or understanding why? That has to be terrifying.\"\n\nHans looked at Juliette and saw the tears brimming in her eyes. The compassion that she felt for the unfortunates who had been unwittingly turned touched him.\n\n\"Ours is a hard world.\" he said softly.\n\n\"What happens to the ones who accidentally turn someone? Are they hunted down too?\"\n\n\"Yes and they are forced to take their new creations.\"\n\n\"But what if they refuse? Or if they say yes and then dump them off somewhere?\" Juliette asked. \n\nJuliette had touched on a topic that was of concern to all vampires, even the dark ones, but it was a discussion for another day.\n\n\"We are working on that issue.\" Hans assured her. \"Do you have any questions regarding our relationship?\"\n\n\"Let me see if I understand something,\" Juliette said. \"If I do this, I will become immortal. All of the kids will have the opportunity to change when they are old enough to decide, but they could also find their mates. Am I correct so far?\"\n\n\"Yes.\" Hans replied.\n\n\"If they don't change or find their mates, I have to watch them die.\" Juliette said. \"And if they change and become one of the dark ones, they die.\"\n\n\"Yes, but Juliette, they will have me, Nathan and every vampire in the family to teach them so that it doesn't happen.\"\n\n\"How often does it happen?\" Juliette asked. \"How often does someone who was turned have to be killed?\"\n\n\"I wish that I could say never.\" Hans replied. \"It doesn't happen often but I should tell you in the cases that it did, the people who died were bad people in their human lives. When one is turned, the personality remains the same and in some cases, the personality worsens. However, Juliette, our children are in no danger of being killed. They are already good children who will grow into good adults who will contribute much to the world whether they remain human or not.\"\n\n\"Our children?\" Juliette asked.\n\n\"Our children.\" Hans replied. \"Wanda, Victor and Celeste will be and are loved as though they came from my loins. That they have a father doesn't change that nor does it change the fact that he is their father. I encourage that relationship and will only interfere if I see that they are being hurt.\"\n\n\"But Hans, they're children. They'll feel as though they have to choose and that alone will hurt them.\" Juliette replied. \"And I won't do that to them.\"\n\n\"I know and I understand.\" Hans replied. \"I also think that you aren't giving them enough credit or is it that you're using them as an excuse? I know that your concern is real, and it is a legitimate concern but let us not confuse the issues. The way to handle the concern about the children is to be upfront with them. I won't and don't require that they call me father or anything like that. I leave what they will call me up to them. The issue that you are having is up to you to resolve.\"\n\nJuliette didn't respond. Hans was right in that she was confusing the issues.\n\n\"Juliette, tell me about the man that you were with.\" Hans urged.\n\nJuliette looked at her watch; they had been gone for almost two hours.\n\n\"We'd better go check on the kids.\" she said. \"We've been out here for awhile.\"\n\n\"Fine, but then we will continue this discussion.\" Hans said.\n\nWhen they got to the room, Wanda was just waking up.\n\n\"Is Vickie still here?\" she asked.\n\n\"She's in the room down the hall.\" Juliette replied. \"Are you hungry?\"\n\n\"A little.\" Wanda replied. \"I'll get something after I talk to Vickie.\"\n\nDuring the conversation, Victor and then Celeste woke up.\n\n\"Let's tend to the children, we can talk again later.\" Hans said as he picked Celeste up.\n\nJuliette watched as Celeste wrapped her arms around Han's neck and laid her head on his shoulder. There was no fear only trust as she closed her eyes again not quite ready to wake up.\n\nJuliette's eyes met Hans.\n\n\"We belong to each other.\" he whispered before handing Celeste over to her.\n\n**********\n\nIt wasn't until three before Gene saw his chance to talk to Louise. He thought that Nathan was never going to leave her side. Once the moment arrived, he wasn't sure that he could go through with it. Apologies weren't a part of his vocabulary unless he hoped to gain something out of it. He reminded himself that he would be. He would be on the road to gaining some respect for himself. The question was whether Louise would believe him.\n\nHe decided that it didn't matter whether she believed him or not. He had made far too many false apologies for her to believe that this one was sincere. He had to show her that he was at least thinking about things. He waited another few seconds, looked around for Nathan and went over to her.\n\n\"Hey sis.\" he said as he sat next to her.\n\n\"Hey yourself.\" Louise replied. \"Having a good time?\"\n\n\"No, not really.\" Gene replied, \"and that isn't anyone's fault but my own.\" he added.\n\nLouise waited for Gene to continue. He cleared his throat, started to speak and stopped. He wasn't sure that he could go through with it. Getting buzzed was becoming more tempting by the second. A moment later, he began.\n\n\"I know that I haven't been the best brother to you and the rest. I was sitting back there thinking about why, and I couldn't come up with a good reason except to say that I am and was a jackass. I let everyone down including dad because I didn't do what he wanted me to do. He wanted me to take care of mom and the rest of you after he died. I did the bare minimum, which is something that I've always done, and left you holding the bag.\n\nI should have helped you a lot more than I did even though I couldn't help you financially. Instead of taking charge, I played devil's advocate and made an already difficult situation more difficult. Unfortunately, there's nothing that I can do to change that. I'm sorry. I know that I've apologized before and didn't mean it, but this time I do.\"\n\nLouise lowered her shields and felt the sincerity of the apology.\n\n\"When I heard that you were getting married, I didn't congratulate you or Kevyn. I was so angry that you and she were getting what I wanted. Part of the anger was at Leon too. He was a fucking drug addict, lost everything but he came out on top. Instead of asking him how he did it, I got angry and jealous. When I found out that we were being flown out here for the wedding, I looked at it as an opportunity. That in and of itself isn't wrong but using you and Kevyn's wedding was. Asking you to talk to your husband on my behalf was wrong. \n\nI know that you're going to find this hard to believe, but I'm only just beginning to understand that most of what happened in my life was my fault. A lot of what you went through with mom was my fault. Nathan told me that I should have been the one leading the way in helping you and he's right. He also called me a lazy son of a bitch, and he's right about that too.\n\nAs I was sitting back there thinking, I felt a little like Ebenezer Scrooge except that any changes that I make won't be overnight. I know that it won't be easy and I expect to have relapses but I'm going to try. Just a favor though, I would like to call every so often to say hello and to check on the progress of my new niece or nephew.\"\n\nLouise reached over and took Gene's hand in hers.\n\n\"Thank you.\" she said softly. \"I know how hard this must have been for you, and it means a lot to me. I accept your apology and of course, you can call me. But I have a suggestion.\"\n\nGene almost made a smart comment and, and stopped himself. \n\n\"Talk to Leon.\" Louise said. \"He can help you if you'll let him.\"\n\n\"I know, and I will. Are we alright?\" Gene asked.\n\n\"We're alright and Gene? We're here if you need us.\" Louise said giving his hand a squeeze.\n\n\"Thanks sis.\" Gene said returning the squeeze and moving away. \n\nHe went back to his seat, sat down and blew out a long breath. Talking to Louise had been more difficult than he thought it would be. He couldn't imagine what it was going to be like telling Kevyn about his involvement with Clay Robinson. He thought about writing a letter and leaving it for her. \n\n\"I can't do this.\" he muttered as he looked around. He wondered if anyone would miss him if he snuck back up the kitchen. There had to be a beer in the fridge. He looked around and saw that no one was looking in his direction. He slowly stood up and began to make his way to the stairs that led to the kitchen. Halfway up, he stopped and turned around. He could have sworn that he heard someone behind him. When he didn't see anyone, he made his way to the kitchen.\n\nHe stopped in front of the refrigerator and stared at it. He battled with what he wanted to do and what he should do.\n\n\"Walk away.\" he told himself even as he reached for the handle. \"I deserve a beer.\" he muttered. He opened the fridge and saw brands of beer that he didn't know existed. \"Just one....\"\n\n\"Those don't belong to you.\" a voice said from behind him. \"Does Uncle Patrick know that you're taking one of his beers?\"\n\nGene turned around to see Victoria looking at him.\n\n\"Oh... hey, he said that I could have one.\" Gene replied hoping that Victoria would just go away.\n\n\"No he didn't.\" Victoria replied.\n\nGene started to argue with her and realized that she had just done him a favor.\n\n\"You're right, he didn't.\" Gene replied and closed the refrigerator door. \"Thank you.\" he said and walked back to the door leading downstairs.\n\nVictoria watched him walk away, shook her head and followed Gene down the stairs.\n\n*******\n\nBy five am, everyone was gone leaving Victoria Patrick, Kevyn, Louise and Nathan to clean up the mess. Patrick had given what house staff he had the evening off, and refused to leave the mess for them. With the five of them working together the clean up went quickly.\n\nAs they cleaned, they talked about the evening.\n\n\"Leon will be back.\" Louise said. \"He'll want to go back home to give his two weeks notice and to pack up his stuff.\"\n\n\"Gene won't be back will he?\" Kevyn asked\n\n\"I don't think so.\" Louise replied, \"if he does, it will be to visit.\"\n\n\"And Juliette?\" Kevyn asked.\n\n\"She'll leave too, but she'll be back.\" Louise replied and then turned to Patrick. \"Hans is going to need time off.\"\n\n\"I know.\" Patrick replied. \"We've already talked about that. The arrangements are already made.\"\n\n\"What do you think is happening with Barb?\" Kevyn asked.\n\n\"I don't know.\" Louise confessed. I thought I felt something the other day but it was gone before I could grasp it.\"\n\n\"Does she really hate us?' Kevyn asked.\n\n\"No, not really.\" Louise replied, \"But she's very angry though.\"\n\n\"Can you believe that a week has passed already?\" Nathan asked. \"They'll be leaving in a couple of days so I was thinking, how about another night out a Jonesy's? We could invite Joseph and anyone else who wants to come. How much notice does Jonesy need?\"\n\n\"Not too much, just a general head count.\" Patrick replied.\n\n\"Not tonight though, Leon is taking Nadine out for dinner, and Hans and Juliette have some unfinished business.\" Louise said.\n\nKevyn looked at the clock. \"They should just be getting back to the hotel, let's call them before they hit the sack.\"\n\n\"It's too early to call Barb.\" Louise said. \"I'll call her later.\"\n\nPatrick and Nathan finished cleaning up while Kevyn and Louise made phone calls. Victoria, bored with the conversation went to one of the spare bedrooms, and settled in for the day glad that she was too young to worry about adult things such as mating.\n\n********\n\nGene went to his suite still fighting the urge for a drink. He was amazed at how strong the desire for a drink was once he had decided that he was going to stop. He was going to pick up the phone to call for room service when his phone rang.\n\n\"Hey Kev... dinner tomorrow? Ok... sure. Kev?... never mind, I'll see you tomorrow night.\"\n\nHe hung up still wanting a drink. His hand shook as he reached for the phone. He pulled his hand back as a realization hit him. He was scared shitless. He was afraid of failing. That was the real reason why he never stepped up to the plate in his marriage, his job and in life in general. He also realized why the urge to drink was so strong whereas he had always had some control before; he was vulnerable as well as scared. When he drank, he didn't feel vulnerable or afraid. He had felt nothing but fear since he arrived almost a week ago. That realization did little to curb the desire for a drink.",
        "The next time he reached for the phone, it was to call the one person that he knew would understand.\n\n*******\n\nLeon had just finished talking to Louise when his phone rang again. He answered it mid-ring hoping that it was Nadine.\n\n\"Gene? What's up? Now? Sure, I'm not sleepy anyway. See you in five.\"\n\nLeon hung up the phone, made a pot of coffee and changed his clothes. He had the feeling that it was going to be a long day.\n\nGene showed up five minutes later.\n\n\"If you too tired...\" he started to say.\n\n\"Nah, I'm good. I'm a night shifter remember? Come on in, I've got coffee brewing.\" Leon replied.\n\nGene gratefully accepted the cup of coffee holding it tightly between his hands as if he was trying to warm them.\n\nLeon sat back, sipped his coffee and waited. \n\nAnd waited.\n\nAnd waited.\n\nAn hour had passed before Gene finally spoke about what he really came for.\n\n\"I... I need help.\" he said softly.\n\n\"Thank god!\" Leon exclaimed. \"It's about damned time.\" he added. \"Gene, listen to me. Anything that you tell me is between us. The only time I'll break silence is if you or someone else is in danger.\"\n\n\"You won't say anything to the others?\" Gene asked.\n\n\"No, but Gene, when you get home, find someone to see you professionally. I'm your brother and will always be here for you, but there are things that I can't help you with. I would also suggest going to AA.\"\n\nGene nodded; Leon was right, but right now, he needed a listening ear.\n\n\"I don't know where to start.\" Gene said. \"How did you do this? How did you talk to people about how you fucked up?\"\n\n\"It wasn't easy, and believe me when I say that there were times that I wanted to give up. But I told myself that if I wanted to get back on track, then I had to do it. I had Louise in my corner, and she fought with me. I'm not saying that to make you feel guilty.\" Leon said when he saw the expression on Gene's face. \"You were going through your own issues and I was trying to make a point. \n\nMy point is this; I wouldn't have made it if someone hadn't believed in me and fought with me. I believe that you can change, we all do. You just have to let us help you.\"\n\n\"What if I fuck up again?\" Gene asked. \"I almost did twice already.\"\n\n\"But you didn't. There's one thing that I can promise you.\" Leon said, \"You will always have that fear of fucking up. Will that stop you from doing it? It helps, but it won't always stop you.\"\n\n\"You're still afraid of fucking up?\" Gene asked.\n\n\"You better believe it.\" Leon replied. \"Whenever I feel the urge... and I still do from time to time, I remember what I almost lost, and yes, I fucked up a few times.\"\n\n\"Leon, you have no idea of what I've done.\"\n\nFour hours later, Leon knew everything. \n\n\"Sweet Jesus.\" was all that he could say. \n\nHe had known some of Gene's issues. It didn't take a rocket scientist to see that Gene had a drinking problem as well as other issues but to consider killing Kevyn was a hit that he hadn't seem coming. It took him several minutes to recover from the shock.\n\n\"Why didn't you go through with it?\" Leon finally asked.\n\n\"I couldn't.\" Gene replied. \"I don't think that I could have lived with the guilt.\"\n\n\"Are you going to tell her?\" Leon asked.\n\n\"I don't want to, but I have to don't I?\" Gene replied.\n\n\"I can't and won't answer that question.\" Leon replied. \"You know what you have to do, and it's up to you to decide whether you're going to do it or not.\"\n\n\"Leon, I don't think that I can tell her. She'll hate me more than she already does.\"\n\n\"She doesn't hate you.\" Leon said. \"She doesn't understand why you act the way you do, and she wanted your support instead of fighting with you, but she doesn't hate you; none of us do.\"\n\n\"Leon, will you come with me when I tell her? I understand if you don't want to.\"\n\n\"I'll go with you, but Gene, be prepared for her and Patrick to be pissed. If I had to guess, I would say that Patrick will be even more pissed off then Kev. I don't know if you've noticed, but these guys are very protective of Kevyn and Lou.\"\n\n\"I know. Barb tried to warn me about that.\" Gene replied.\n\n\"When do you want to talk to Kev?\" Leon asked.\n\n\"Tonight if I can.\" Gene replied. \"Are you free?\"\n\n\"I can be....\"\n\n\"Don't change anything for me.\" Gene said, \"it can wait.\"\n\n\"I was going to have dinner with Nadine.\" Leon replied. \"I can change the time to later in the evening; she's a night owl too.\"\n\n\"Thanks... can I ask a question?\" Gene asked. \"It has nothing to do with what we were talking about.\"\n\n\"Shoot.\" Leon said.\n\n\"Why her? You could have any woman that you want, why a hotel worker?\" Gene asked.\n\n\"Why not?\" Leon shot back. \"It's an honest living.\"\n\n\"I know it is.\" Gene replied. \"She isn't your type.\"\n\n\"What do you mean by that?\" Leon asked.\n\n\"You know how you used to like them, tall, long legged and with tits out the wazoo.\" Gene replied.\n\nLeon chuckled, he couldn't be mad. He and Gene hadn't talked as brothers and men in a long time. It seemed like ages since he looked at a woman who met those characteristics. Gene was right; Nadine while beautiful looked nothing like the women in his past. She was short, petite and her breasts were much smaller than he was used to, but those things weren't important. How she made him feel was.\n\n\"Things change.\" Leon replied. \"And it would be more accurate to say that I'm not her type. The woman is brilliant!\"\n\n\"Shit!\" Gene exclaimed when Leon told him about Nadine and her accomplishments. \"You're right; she's too smart for you. If I offended you, I'm sorry. What are you going to do about her? We're leaving in a couple of days.\"\n\n\"I....\"\n\n\"You're going to come back aren't you?\" Gene asked.\n\nLeon saw no reason to deny it.\n\n\"Yes, I'm coming back. I'm going back long enough to give notice, and to pack up my apartment.\"\n\nGene was stunned. It wasn't like Leon to make such a rash decision.\n\n\"I know that I'm the last person that should be offering advice, but Leon what about a job and a place to live? I know that you have some money but it won't last long out here. Is this woman worth the risk? You just met her.\"\n\n\"I believe that she is.\" Leon replied. He wanted to tell Gene to mind his business, but he didn't. Gene was in a fragile state, and if giving advice helped, then he would let him.\n\n\"Where are you going to stay?\" Gene asked. \"And what about a job?\"\n\nLeon didn't know what to do. He decided to wait to tell Gene about the job until later. He didn't see how telling him at that moment would help or change anything.\n\n\"I'm thinking about that.\" Leon replied which was the truth. He hadn't accepted Nathan's offer, although he was sure that he would take it Nadine or no Nadine. \n\n\"I guess I'd better call Kevyn.\" Gene said after a few moments of silence had passed.\n\n\"I'll call Nadine while you do that.\" Leon said relieved that Gene hadn't pushed the issue about Nadine or the move to California.\n\nA few minutes later, Gene was nervously waiting for Kevyn to answer her phone.\n\n*********\n\nKevyn had just climbed into bed, and was waiting for Patrick to finish talking to Jonesy when her phone rang. She looked at the number and frowned.\n\n\"Gene? Everything all right?... ummm tonight? Well... We were going to get together with Juliette, but she just called to cancel. What's up? Ok... how about seven? Leon's coming too? Are you sure that you're all right? Ok... see you then.\"\n\n\"What was that about?\" Patrick asked.\n\n\"That was Gene; he says that he wants to talk to me. He sounded different.\"\n\n\"What do you think he wants?\" Patrick asked as he got into bed.\n\n\"I don't know.\" Kevyn replied. \"But he was nervous and he's bringing Leon with him.\"\n\n\"I thought Leon and Nadine had plans tonight.\" \n\n\"I guess whatever is going on trumps their plans.\" Kevyn replied. \"What did Ethan say?\" she asked changing the subject. It would do no good to try to guess what Gene wanted to talk about, she would find out soon enough.\n\n\"They're coming, but Rachel and Martin aren't. The baby is due at any moment and Rach doesn't want to leave home. He's going to call mom, George, and the twins. I talked to Jonesy so we're set there.\"\n\n\"Good.\" Kevyn said settling in Patrick's arms. \"Another change in subject, can you believe that Nathan and Lou are having a baby?\"\n\n\"I have to admit that I'm surprised.\" Patrick said. \"Kev, how do you feel about it, and be honest.\"\n\n\"I'm happy for them, but jealous too. Louise was already beautiful, but now she's glowing.\" Kevyn replied. \"She's going to be such a good mother.\"\n\n\"So will you.\" Patrick said. \"And you will be even more beautiful than you are now if that's even possible.\"\n\n\"You are such a sweet talker.\" Kevyn said smiling at him. \n\n\"I only speak the truth.\" Patrick replied. \"How do you feel about your family moving here?\" he asked.\n\n\"I'm ok with it, although I find it odd that most of us will be living here.\" Kevyn replied.\n\n\"I agree.\" Patrick replied kissing her shoulder. \"What's bothering you?\"\n\nKevyn hesitated.\n\n\"Barb.\"\n\n\"What about her?\" Patrick asked.\n\n\"She's a pain in the ass, but I love her and want her to be happy. I know that she's her own worst enemy, but I still want her to be happy.\"\n\n\"Of course you do, and believe it or not, I want her to be happy too.\" Patrick replied. \"But as you said, she's her own worst enemy. All we can do is wait for her to understand that she's got to give as well as receive.\"\n\n\"Juliette asked me about the woman who turned Hans away.\" Kevyn said.\n\n\"What did you tell her?\" Patrick asked.\n\n\"I told her that she needed to talk to Hans about it.\" Kevyn replied. I hope Juliette won't feel like Hans wants her only because Barb turned him away.\"\n\n\"He won't allow that to happen.\" Patrick replied hugging her close. He was ready for things to settle down so that he could take Kevyn away. \n\n\"I know.\" Kevyn said. 'It's just me worrying. It's been a busy week.\"\n\n\"Lie on your stomach.\" Patrick said.\n\nKevyn turned on her stomach. A few minutes later Patrick was massaging her shoulders with firm strokes that had her purring and then snoring. Patrick kissed her lightly, lay down next to her and allowed his mind to wander. The pressing question was what Gene could possibly want with Kevyn. Finally, he turned on his side facing Kevyn, put an arm around her and closed his eyes.\n\n********\n\nNathan ran the bathtub while Louise sipped on a glass of warmed blood.\n\n\"Did you take your vitamins?\" he called out to her.\n\nLouise grimaced, and took the large pill with the blood.\n\n\"I just did.\" she called back. \n\nShe hated the taste of the vitamins but told herself that it was for the baby, and finished the blood in the glass. \n\n\"You know,\" she said when she went into the bathroom, \"you would think that there has to be a way to make those things taste better and to make them smaller.\"\n\nNathan laughed as he hugged her. \n\n\"You can laugh.\" Louise retorted, \"You don't have to take them.\"\n\n\"Maybe I will.\" Nathan replied. \"They're just vitamins. They can't hurt me.\"\n\n\"You're kidding.\" Louise replied feeling guilty because she complained.\n\n\"No, I'm not.\" Nathan replied. \"Where are they?\"\n\n\"On the dresser, but ...\"\n\n\"Be right back.\" he said kissing her on the temple.\n\nHe was back a few seconds with a frown on his face.\n\n\"That was terrible.\" He said as he reached for the bottle of mouthwash.\n\n\"Told you.\" Louise said laughing. \"I bet you won't take another one.\"\n\n\"That would be a bet that you would lose.\" Nathan replied. \"I'll take them for as long as you do. We also need to start walking. How about we start tonight after dinner?\"\n\n\"Sounds good.\" Louise replied.\n\nWhen the tub was full, Nathan got in and then helped Louise in. When she was comfortable, he put both hands on her stomach. He kissed the side of Louise's neck and thanked her again for the wedding gift.\n\n\"It isn't as if I planned it.\" she said. \"Can you teach me how to listen for his heart beat?\"\n\n\"I'll teach you after we get out of the tub.\" Nathan replied. \"The less background noise the better.\"\n\n\"Gene talked to me last night.\" Louise said as she played with Nathan's hands.\n\n.\n\n\"I know.\" Nathan replied. \"I was watching, but not listening.\"\n\n\"Did you think that he would hurt me?\" Louise asked.\n\n\"No, but I didn't want him to upset you either. Nathan replied. He didn't ask what Gene said to her because he already had a good idea. If she wanted him to know the specifics, then she would tell him.\n\nThey sat in the tub in silence until Louise spoke.\n\n\"He apologized, and he meant it.\"\n\n\"I figured as much.\" Nathan replied. \"It's an apology that is long overdue.\"\n\n\"Maybe.\" Louise replied. \"But don't you see? He did it! Gene has never sincerely apologized for anything in his life. And think about this, if Gene can begin to change, then there's hope for Barb.\"\n\n\"Sweetheart...\"\n\n\"You don't believe that she can change do you?\" Louise asked.\n\n\"Sweetheart, I'm the last person to say that people can't change. Look at my family history, but I believe that there are those who cannot change whether it's because they don't want to or because they simply can't. Gene has the capability to change. I saw that tonight and the fact that he came to you confirms that.\n\nAs far as Barb goes, I hope that she does change. I'm not talking about going from total bitch to total sweetness. Over the past week, I've seen glimpses of a Barb that was likable. I also noticed that as soon as she realizes that she's having a good time, the bitch comes out and tries to ruin things.\"\n\n\"So what are you saying?\" Louise asked.\n\n\"I'm saying that Barb has the same capability to change as Gene does. She has to decide whether she wants to or not. I just don't want you to be disappointed if she decides to be one of those who choose not to change. Of course, we will be available to help her and Gene in anyway that we can.\"\n\nLouise thought about what Nathan said, and realized that he was right. Both Gene and Barb had a bumpy road ahead of them. She would have to be cautiously optimistic where both of them were concerned. She pushed the thoughts about her siblings out of her mind. She had happier things to think about.\n\n\"Teach me how to hear the baby's heartbeat.\" she said after a few minutes.\n\nNathan helped her out of the tub, dried her off and led her back to the bed.\n\nHe sat on the bed, and positioned himself so that his back rested against the headboard.\n\n\"Sit between my legs and rest back against me. Make sure that you're comfortable.\"\n\nTen minutes later, Louise was sitting comfortably between Nathan's legs with her eyes closed.\n\n\"Are you cold?\" he asked.\n\n\"A little.\" Louise replied as she snuggled back into his warmth.\n\nA second later, a thin blanket was lying across her legs.\n\n\"Alright, now close your eyes.\" Nathan said when he was sure she was comfortable. \"Right now, you can hear every sound in the room from the clock ticking to the water dripping in the tub. We're going to eliminate those sounds one by one. We'll start with the water.\"\n\nThirty minutes later, they were working on eliminating the sound of the clock. Nathan was impressed with how quickly Louise caught on. Another thirty minutes, they were ready to listen to the heartbeat of their baby.\n\n\"Alright, take nice slow deep breaths.\" Nathan said telepathically. \"Block out the sound of your breathing and just listen.\"\n\nLub lub, lub lub, lub lub...\n\nTears ran down Louise's cheeks as she heard the baby's strong, rapid but steady heartbeat for the first time. She felt Nathan's warm tears on her neck, but couldn't speak. \n\n\"I know,\" Nathan said telepathically. I love you and her too.\"\n\nLouise fell asleep listening to the sound of the baby's heartbeat. \n\nThey were going to have a baby.\n\n              **************\n\nHello all! I wanted to take a moment to thank my beta readers Donalde, Anjel54 and last but not least my friend in the Netherlands for their time and help. I also wish to thank you all for your patience and well wishes for my daughter's wedding. I am still gallivanting around the country, visiting friends and family and not getting too much writing done, but I had a chapter of Louise almost finished so here it is. The next chapters of Justine and IWLYF are in progress and I plan to submit them soon. Thank you so much for your patience. \n\nKal"
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "vampire"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/louise-ch-14"
}