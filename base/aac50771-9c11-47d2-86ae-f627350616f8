{
    "title": "There and Back Again Ch. 115-116",
    "pages": [
        "Chapter One Hundred Fifteen: DisenChanted\n\n I slipped out of the tent, leaving my brother and my husband to 'important' discussions with the new Teyrn. Honestly, the meeting had gone about as well as I could expect, and I was just happy we could hopefully work together as needed, even if we'd never have a familial relationship. \n\n I was trying really hard not to take it personally.\n\n I finally caught Leliana alone when I got back to the Wardens' camp; with a grin for a fantastic distraction, I dragged the bard into my tent, made her undo the braid she'd put in my hair, and demanded she tell me everything about her and Nathaniel.\n\n \"Why didn't you tell me, Leli?\"\n\n She giggled. \"I didn't want to...what's that word you use? Jinx? I didn't want to jinx it. He's kind, yes? And shy. I didn't want to embarrass him either. And when things are new...\"\n\n \"I know. Sometimes you just want to keep it for yourself, right?\"\n\n \"Exactly, my friend. But he is wonderful, Sierra.\"\n\n \"Sort of broody, isn't he?\"\n\n \"Only on the surface. He's been through so much...but he has a sense of humour, underneath it.\"\n\n \"So is it serious?\" I teased.\n\n She flushed. \"It hasn't been very long...\"\n\n \"So that's a yes, then?\"\n\n She smiled. \"It's not a no.\" Her smile faded. \"Is that...do you think people will be upset? I sound Orlesian, after all.\"\n\n \"Leli...I know that you have ties to the Chantry. I know you're going to end up working as some sort of agent for the Divine. I know about Dorothea. But I also know that you're one of the kindest, sweetest, most devout people I know. If someone really has a problem with you because of your accent, then that's their issue. I think you deserve whatever happiness you can find, and I hope it keeps you from losing yourself too much to the Chantry. Does he make you happy?\"\n\n Her answering smile was radiant, but also mischievous. \"I'll tell you one thing. He's a sinfully good kisser.\"\n\n I snickered, and we spent the next couple of hours in girly giggles, comparing our love lives and sharing our dreams of the future. It was a nice change of pace from the fighting and fear we'd been living with for a year, and it was a good distraction from my issues with Fergus. Zev joined us, and the talk turned to comparing their experiences, bard and Crow trying to outdo each other with outrageous seductions and dangerous liaisons. I had nothing to offer that could compare \u2013 I'd been sheltered, despite my less-than-ideal upbringing \u2013 but it was amusing to relax and just listen, without worrying about politics, or being ambushed, or an upcoming battle with darkspawn.\n\n Aedan and Alistair finally returned from their discussion with Fergus and Cailan; Nathaniel had apparently joined them and been reunited with Fergus, and he returned to our camp with the two new Warden-Commanders. Leli, Zev and I tumbled out of my tent, me blushing crimson from the stories they'd been telling, to get a strange look from the three men; giggling, I snuggled up to Alistair and pulled him in for a kiss.\n\n \"Tell you later.\"\n\n \"Mmm.\" He kissed me again. \"You okay?\"\n\n Everyone looked interested in my answer, so the six of us settled around the fire companionably.\n\n \"I'm fine.\" Aedan scoffed, and I grinned at him. \"No, really. I don't blame Fergus. He has no reason to believe me, and he's been through too much to be really willing to trust in anything right now. I wouldn't be willing to accept me either.\"\n\n \"You're far more forgiving than I am.\" Alistair scowled, and I pushed his cheeks up into a smile with my fingers.\n\n \"You're allowed to be upset on my behalf, but I don't want it affecting your relationship with him.\" I turned to Aedan. \"You especially. He needs all the support he can get right now. I can't even imagine what he's going through. I'm fine; I want you to promise me you'll take care of him. I'll just stay out of his way for a while.\"\n\n \"That should be easy,\" Nathaniel declared. \"He is leaving in three days to take back Highever. I'm going with him. I didn't expect him to accept me either, but if he can forgive me, I'll offer any support I can. King Cailan is sending us with a company of soldiers, and he'll send stonemasons and other craftsmen once Denerim's population settles. We don't know what is happening at the castle, but we'll find out, retake it if necessary, and start the recovery before I leave for Amaranthine.\"\n\n \"We're not going?\" I looked at Aedan in surprise. \"You're okay with that?\"\n\n He winced. \"As much as I'd like to help Fergus, I have to admit, I'm not sure I could stomach fighting my way back through those halls again. We'll need to go eventually, but not right away. And Fergus isn't willing to wait. Besides, Cailan's asked for us \u2013 all of us \u2013 in Denerim for a celebration of the end of the Blight. I'm guessing he wants us there when he tells the Landsmeet he gave Ostagar to the Dalish. And I think he's got some sort of plans for the Alienage \u2013 he spent an awful lot of time talking to Kallian, recently.\"\n\n \"We'll also announce that Ferelden's Grey Wardens have seceded from the Order at Weisshaupt. I imagine we'll receive a delegation from the Anderfels fairly soon; Duncan sent a messenger before the battle. Might as well be there to receive them.\"\n\n After that, the rest of our companions started filtering back into camp, and we separated to go to bed. Alistair pulled me into his lap once we were alone in our tent, his shirt off, weak firelight glinting off his toned abs and broad shoulders.\n\n \"You sure you're okay?\" he asked.\n\n \"Hmm?\" I was far more interested in running my fingers over his impressive muscles and nuzzling into his neck than I was in discussing my liege-lord.\n\n \"Love,\" he chided, pushing me away slightly. \n\n I sighed. \"I won't say it doesn't hurt. I didn't expect him to come running with open arms, but I wasn't quite prepared for the degree of hostility. I was telling the truth though \u2013 I'm not surprised he isn't totally trusting, and I don't blame him. He's been through too much \u2013 I think I was just one thing too many.\"\n\n \"With time, maybe he'll come around?\"\n\n \"I doubt it. He wouldn't give himself the chance. That would involve getting to know me, and he doesn't want to. But he said he will work with me; if we can tolerate each other, that's enough. I have you, and Aedan. Fergus has no one, and I won't be the thing that gets in the middle between him and Aedan.\"\n\n I snuggled in again, burying my nose in the crease between his neck and shoulder. \"I don't really want to talk about Fergus right now.\" I punctuated my statement with a gentle bite on his neck making him gasp as I started stroking my fingers across his bare chest again. \"Do you?\"\n\n \"Not in the slightest.\" Alistair's tone was husky as he bore me down to my bedroll, divesting me of my clothes in record time and distracting me rather admirably from thinking about anything, never mind about my brothers.\n\n Over the next several days, many things happened. The mages completed their work scouring the land with fire, and the sensation of the darkspawn taint around the site of the battle began lessening slightly. Sten and Irving finished their work of preserving the Archdemon's blood, hide, and much of the bone, and it was all crated for travel to Denerim. The wounded largely either died or rallied, and each day, the small pyres got smaller until they stopped.\n\n Aedan performed several Joinings for soldiers who'd been tainted by the darkspawn; none of them survived, though I wasn't that surprised given how quickly they'd become ill after the battle \u2013 most of them looked barely better than ghouls by the time it was even attempted.\n\n Leliana, who'd been helping out with the wounded, came to me one day asking me to get Alistair, Aedan, and Anders, and then follow her. We scoured the camp until we found the two Warden-Commanders in a meeting with Cailan, and pulled Anders away from the makeshift infirmary where he'd been working with Wynne and the other Circle healers. Anders grumbled as we followed Leliana almost outside of the army's encampment; Aedan and Alistair raised their eyebrows at me, but I just shrugged. Don't ask me! She was wearing the same Chantry garb she wore back in Lothering; I'd gotten so used to seeing her in armour, I'd forgotten what it looked like.\n\nA ways beyond the rest of the tents, around the edge of a large outcropping, we finally came upon a camp. There was a small earthworks ringing the area, with make-shift fences planted in the mud; it was guarded, strangely, and the templar armour on the two guards was a clear indication of who camped there. I hadn't paid attention to where the templars and mages were set up, but given how much I'd seen of Irving and Greagoir, they had to have been sleeping somewhere more central. And this camp was far too small for the entire contingent from Kinloch, not to mention it seemed strange they'd be so isolated, almost vulnerably so on the edge of the army encampment.\n\nThe two templars on guard, neither of whom were wearing helmets, initially seemed excited to see Leliana, and watching her smile coyly at them, I could see why; however, they stiffened when they noticed us following her, and immediately moved to block entrance.\n\n\"Sister-\" one of them began, obviously planning to turn us away.\n\nLeliana gave the one speaking a look that every Catholic school child, and from what I'd seen, everyone who'd ever set foot in a Chantry, was intimately familiar with. It was the glare of a woman in control, one who could see right through you and know without checking that you hadn't washed behind your ears. One who knew your innermost thoughts, and wasn't totally averse to using them against you. The poor man visibly withered, glancing desperately at his partner for help, and finding no aid there, he muttered something that sounded whiny and discontented, and stepped aside.\n\nThe four of us followed her past the small entrance, and the reason for the camp's isolation became immediately obvious. There were injured men and women there, being tended by a small number of harried-looking mages; strangely, those writhing on their pallets on the ground looked superficially whole \u2013 there were no missing limbs, no bleeding wounds. But the sensation was the kicker; the taint was everywhere here, much stronger than the rest of the camp. A closer glance showed several templars with blackening skin, dark blotches and black veins marring their pale Fereldan complexions; two had eyes white with rheum, like Duncan in the Deep Roads. Two others were being restrained as they struggled, hairless, gnashing their teeth and snarling like animals \u2013 or darkspawn. \n\nThose that weren't so obviously tainted weren't far behind, sweating and grey, moaning in pain and delirium. A number of mages were also affected, huddled together in one corner of the enclosure.\n\nI glanced up at Alistair to see him returning my hopeless gaze; very few of these people would be healthy enough to undergo the Joining, given how much time had passed since the battle. It was a minor miracle any of them had avoided becoming ghouls already, and I assumed that the mages healing them had been the only reason they hadn't all turned. My gaze slid over to Aedan, to see raging fury instead of the helpless sadness Alistair and I had shared.\n\n\"Why have these people not been brought to the Grey Wardens before now?\" he asked, his tone dangerously calm. \n\nThe templar guard, an incredibly young-looking redhead with a bit of a nervous tic in his eye, twitched, which was probably the most sensible response to the unspoken threat. I hadn't even noticed he'd followed us inside the makeshift gate. I'd be scared of Aedan if he used that tone on me too. \"I do not know, my Lo-, uh, Warden Commander.\" He was eyeing Aedan's tabard, which he'd insisted all Wardens now wear. \"The Knight Commander and the Grand Cleric told us to stay here and be on guard, so we did.\"\n\n\"I suggest you send a runner for the Knight Commander now, then.\" It was strange to think that Aedan, with all his twenty-four years, was considerably older than the young man trying not to cringe under my brother's gaze.\n\nThe poor kid nodded, and left us to head over to another young, untainted looking templar; the blond saluted smartly, smashed his helmet onto his head, and left at a jog. Anders knelt down next to a mage writhing on a thin blanket, and I felt the aura of his magic as blue healing poured forth; the elf slumped into what looked like a deep sleep \u2013 a kindness, I was sure. Anders looked less relieved than I expected, moving to kneel beside the next mage he saw. Looking around, I realised why; the healers circulating through trying to do what they could were focusing mainly on templars. The mages had been left largely to themselves, and I guessed the only thing that would prevent the healers from helping other mages was the threat of violence from their templar guards.\n\nOne of the tainted mages appeared to be the only one helping his fellows; from the pallet on which he sat, I could see him reaching out towards his neighbours, magic streaming from his fingers. While obviously sick, he appeared much healthier than the others; his hair had not fallen out, his skin showed black veins only up one arm, and his eyes were clear, though dark circles underneath them betrayed his exhaustion. With a start, I recognised him as a mage I'd met before: Alim. I was willing to bet anything his last name was Surana.\n\nI stepped over to him just as Anders took over his healing; the elf collapsed back, panting slightly. As I got closer, I could tell he was completely drained; he'd used every last scrap of his mana trying to keep his fellows alive, when he was dying too.\n\nI knelt beside him, gently touching his hand. \"Alim?\"\n\nHe turned his head slowly, his eyes focusing on my face, his expression bleak until he recognised me. \"Sierra?\" I nodded, and he flipped his hand to grip my fingers with surprising strength. \"Thank the Maker. I've been asking for the Wardens since we were dragged here, but I didn't know if you were still with them, and I doubt any of my messages would have gotten through anyway.\" He squeezed my hand until it ached, but I held his just as tight. \"Please, Sierra, you must recruit us.\" He gestured with his free hand, a vague wave that seemed to encompass the entire camp. \"All of us.\"\n\nI ignored that for a moment, unwilling to be the one to shatter the hope he'd clearly been clinging to since he'd become tainted. \"What happened here?\"\n\nAlistair and Aedan approached behind me, and I heard the two crouch to hear his response.\n\n\"The Grand Cleric.\" Alim's response was bitter, venomous \u2013 a remarkable change from the man who'd ratted out Jowan in the tower. \"When she found out a group of mages and templars had become ill, she forced the Knight-Commander to isolate us. Didn't want to allow the Wardens access to too many mages \u2013 it put too many of us outside of Chantry control, she said. She was angry that Greagoir let Solona and Anders slip through their grasp, and wouldn't allow any more of us to be conscripted.\" \n\nHe coughed, blackish blood flecks on his hand where he covered his mouth. \"Greagoir tried to argue with her, tried to convince her that templars were being harmed by the same decision, but she said she wouldn't allow them to become Wardens either. She forced some healers into trying to 'cure' the templars, threatened them with Tranquility if they wasted mana on healing the mages, and left us here to die. I was the only one well enough to try to heal the others. I only had a small cut \u2013 just a stupid nick on a finger when I was grazed by a piece of broken sword that flew by. I've been trying to keep the others alive as long as I could, hoping someone would find us.\"\n\nI squeezed Alim's hand, trying desperately not to cry. It was so typical, so stupid; I didn't even know why I was surprised. The old prune of a Grand Cleric was a zealot of the worst sort, using Chantry law to achieve her own ends, as I'd clearly seen in the Landsmeet. It shouldn't have come as a shock that she'd be threatened by the power wielded by the Wardens, though I was appalled at the deaths she was willing to countenance just to keep the Wardens from gaining a precious few recruits. And it was even worse than that \u2013 soldiers from the army had died for the lack of healers, soldiers who could have been saved if the handful of healers keeping the afflicted templars alive had been available to aid in the effort.\n\nI couldn't decide whether to throw up, or find the Grand Cleric and beat her silly.\n\nI took a deep breath, murmuring some sort of reassuring nonsense to Alim before standing to talk to my brother and my husband. \n\n\"Aedan...\"\n\n\"I know.\" He looked over the group of sick mages and templars with barely concealed rage. \"There's maybe four of them who will even live until I can get Jowan to make the potion, never mind how many will survive the ritual. If we had only found them sooner...\"\n\nLeliana spoke, startling me; the bard had approached unheard as we talked. \"I am sorry I didn't find out sooner. I thought it was strange, that several healers were nowhere to be found near the infirmary tents, and started searching for them; I only discovered this place this morning, by accident. I had never imagined...\"\n\nI turned and hugged her. Her voice sounded so lost, so defeated, and I couldn't stand hearing my friend sound that way. Growing up without religion, I could only imagine that seeing the result of your closely held beliefs being abused must be horrifying.\n\n\"Not your fault, Leli,\" I assured her, and Aedan and Alistair murmured agreement. \"I'm glad you found them at all, and I just hope that Cailan can use this to make sure that old hag never lives it down.\"\n\nShe choked out a dismayed laugh, torn between amusement at my irreverence and despair at the tragedy that her faith had propagated. \n\nJust then the Knight-Commander arrived. The four of us \u2013 Anders was still busy soothing tortured mages \u2013 turned as one to glare at him; he just sighed, gesturing for us to step to the side where we couldn't be heard.\n\n\"I'm not supposed to say this, but I'm glad you've found our little secret, Wardens.\" Aedan looked to be nearing apoplexy, and Greagoir waved his hand defensively. \"This was not my idea, believe me. Think of me what you will, assume the worst about the mages in my care, but you have to believe at least that I would not allow so many of my own men to perish for politics.\"\n\nHe has a point. I don't know whether he'd have been happy with more mages being recruited, regardless of the circumstances, but I can't believe he'd let the templars die with them.\n\n\"I...you...they're all going to die, Knight-Commander. At your order.\"\n\n\"And what was my alternative?\" He just sounded tired. \"I can't ignore the Grand Cleric of Ferelden when she gives me a direct order. I argued with her until she threatened to have me excommunicated. And if I'd kept on without regard for myself until she did that, she'd just promote someone less likely to even try.\"\n\nThe reality of the situation was sinking in, leaving me numb. If not for one, stupid, hateful, narrow-minded woman, some of these people might have survived. I sighed. It was too late \u2013 most of them were already dead, even if they didn't know it.\n\nAedan appeared to be trying to swallow his rancor to do what needed to be done. Finally he spoke, his voice tight, the only thing that betrayed his dismay. \"I hereby conscript every man and woman in this camp who survives until,\" he paused and checked the position of the sun, \"sundown. I will leave my healer here to keep the most likely survivors as healthy as possible. Those who have already turned, Knight-Commander, I will personally put out of their misery \u2013 immediately. You should have your men prepare a pyre; I'd be somewhat surprised if even one or two survive the night.\"",
        "Greagoir nodded and stepped away to start giving orders; I was actually impressed with how little he fought. He truly didn't want this for these people, did he? It was sad that so much death would come at the hands of one pruney hag with an attitude problem.\n\nAnders had completed a circle around the templars while we spoke, examining some, expending a little bit of healing on others. He approached us as the Knight-Commander stepped away. \"When can we do the Joining?\"\n\nI was pleased to note he didn't even ask if, but only when. \n\nAedan winced. \"I'll get Jowan started. We're going to need some fresh darkspawn blood. I'd guess nightfall.\"\n\nAnders grimaced. \"I'm not sure any of them will be in their right minds by then.\" He'd had more than enough experience with the taint's progression over the last few days to be able to say that with some confidence. \"Maybe Alim, and one of the templars. And I know it's beneath me, but I hope I'm wrong about that particular templar.\"\n\nAedan's brow furrowed. \"Oh?\"\n\nAnders flushed slightly. I suddenly had a very bad feeling in the pit of my stomach.\n\n\"Who?\"\n\nThe mage sighed. \"His name is Rolan. He-\" \n\nHe would have continued, but I gasped. Anders shot me a strange look, but I held up one finger to ask him to wait, and grabbed Aedan's arm, pulling him a few steps away, Alistair at my heels.\n\n\"You can't recruit Rolan,\" I whispered furiously.\n\n\"Why?\" Aedan looked sincerely puzzled.\n\n\"He's one of the bad kind of templars \u2013 thinks every mage is a hair's breadth away from becoming an abomination. Regardless of being conscripted, he'll never let go of the Chantry. He'll come after Warden mages, set up ambushes when he thinks he can isolate one and invite his templar buddies to help. And capture isn't what he'll have in mind. He's a danger to every mage in the Order.\"\n\nAedan frowned. \"Surely he can be...re-educated.\"\n\nI wrung my hands, agitated. \"I don't think so. Aedan, please. Please don't conscript him.\" I didn't want to tell him about Anders and Justice, but I would if I had to. \n\nAedan examined my face, looking apologetic. \"I already did. If he survives until tonight...Sierra, I won't have a choice. But in the game, did he have the taint when he Joined?\"\n\nI shook my head, distraught.\n\n\"Well, then let's just hope he doesn't make it until the potion is ready...or that he doesn't survive the Joining itself.\" Aedan stepped back to Anders, ending the conversation.\n\nI huffed, debating what to do, when Alistair wrapped his arm around my waist. \"We'll watch him. We won't let him get away with anything. I promise.\" \n\n\"Okay.\" I relaxed in his arms, turning to nuzzle my husband's neck. \"All these people...\"\n\n\"I know.\" He kissed my temple. \"Maybe you should go back to camp, get Jowan ready, and send out a group to find some darkspawn. I don't think you should watch this.\" I leaned back, shooting him a dirty look, but he just stroked my cheek softly. \"Please. Let me protect that empathetic heart of yours just a little, okay? Just go.\" \n\nThe sadness in his eyes as we both gazed at the ghouls who used to be templars and mages was clear, and I finally nodded. It'll only hurt him more to know I'm watching. I kissed him once, chastely but tenderly, then pulled away.\n\nI hugged Anders, whispering in his ear my plea that he keep as many mages alive as possible, even at the risk of losing a particular templar; he squeezed me once in acknowledgement and then let me go. I wrapped my arms around Aedan as he stood, stiff with tension, almost shuddering in my embrace.\n\n\"I'll go talk to Jowan, and send Sten and the dwarves to get darkspawn blood.\" He nodded woodenly. \"I'm sorry. I love you.\" I kissed his cheek, then somehow both reluctant and eager at the same time, slowly walked back to camp with Leliana, the bard as somber and quiet as I felt.\n\nChapter One Hundred Sixteen: *Three Campfires\n\nThe Joining that night went about as well as expected. While three mages and three templars had survived until the potion was ready, most of them were ravaged by the taint, barely able to stay upright, skin blackening, hair falling out, fever running rampant through their ruined bodies. Alim and Rolan were the exceptions; the mage looked pale, but otherwise well, and Rolan had black veins visible only under the skin of his hands and arms. Unsurprisingly, they were the only two who survived, and in Rolan's case, it was a close thing \u2013 he convulsed and stopped breathing for a handful of agonising seconds before he seemed to stabilise. \n\nIt was interesting, feeling the taint alter in the bodies of the two who survived \u2013 overshadowed, of course, by the horror of losing four more recruits, not to mention all of those Aedan and Alistair must have had to put out of their misery earlier. I'd warned Zevran that Aedan would need some extra support later; no matter how necessary, wielding the sword of mercy was still an execution. Aedan would never admit that it bothered him \u2013 stubborn ass \u2013 but having Zevran prepared to handle the emotional storm could only be a good thing. And I'd be ready for Alistair, whatever he needed.\n\nAnders sighed sadly, eyeing Rolan's unconscious form; it would be worse, I knew, if he had known what I did about the future, instead of just generally knowing that the man was an ass. Alistair and I shared a lingering glance, both resolved not to allow bigotry to impact our friends who just happened to be mages.\n\nPyres had been prepared for those who didn't make it, and we all had a moment of silence \u2013 a disgruntled, irritated, depressed silence \u2013 as Aedan and Alistair lit them. Alim and Rolan woke within the hour, and after being fed a Warden-sized snack, were ushered to tents to get some much-needed rest.\n\nCailan had been informed of the Grand Cleric's disgusting decision to hide tainted mages and templars from the Grey Wardens, and from the thunderous expression on his face, I guessed that when he confronted the old hag, the fight would be epic. I was too tired and too sad, however, to find out, and I dragged Alistair back to our tent immediately after the new surviving Grey Wardens recovered. \n\nMy husband had been too quiet since they'd returned from the Chantry's hidden camp; I hadn't counted how many people had been tainted, but given only six left to take the Joining, I was guessing Alistair and Aedan both had probably granted merciful deaths to a dozen or more. I knew Alistair wouldn't want to talk about it with me \u2013 he seemed to remain convinced that if I was forced to confront some of the more brutal truths about life in Thedas and the acts he had no choice but to participate in, I'd lose respect for him, or lose the desire to stay in Thedas altogether. \n\nInstead of discussing the details, I helped him take off his dragonbone armour, undressed myself, and pulled him down into our combined bedroll, allowing him to bury his face in my belly while I held him and stroked my fingers through his scruffy hair.\n\n\"I love you, you know that, right?\"\n\nHe shuddered, and I dug my fingers in harder, kneading his scalp. The noise outside slowly settled as the camp went to sleep, and he continued to hold me, pressing his face into my skin. I'd almost have thought he'd fallen asleep except for the periodic spasms that passed through him; finally, after what might have been a half hour, I felt the telling wetness of the tears he'd probably been trying to deny since morning spilling onto my stomach.\n\nHe looked up, then, but his expression, instead of the regret or sadness I expected, was furious.\n\n\"How dare she? That...that...bitch!\" He was almost stuttering in his anger.\n\nI nodded. What else could I add? He's not wrong, and I'd like to say worse things about her.\n\nHe lowered his eyes, whispering so softly I could barely hear him. \"Being a leader is even worse than I expected.\"\n\nI couldn't deny it; he was right. It was often easier to follow, to let someone else make the hard decisions and live with the consequences. I stroked his cheek with one finger. \"What do you need?\"\n\nHis eyes darkened as we made eye contact again and he saw the truth in mine \u2013 whatever he needed, I'd give, and give gladly.\n\n\"You,\" he replied, his voice a plea that sent a shiver of pleasure down my spine, pooling warmth between my legs.\n\nI nodded, and with one massive push, reversed our positions quickly, pressing his naked form down onto his back as I leaned over him, capturing his lips in a searing kiss. He tried to chase me as I pulled away, but I held him down with one hand in the centre of his chest. After all the times he'd held me, distracted me, kept me sane through the Deep Roads and everything with Duncan...the least I could do was return the favour, and I planned to make it count.\n\nI started sensually; I left him on the bedroll and dug through my things until I found a clean cloth, and my little stone shower head. With a cautious movement, I dampened the cloth with warm water, and then turned to carefully wipe his face with the warm, wet fabric. I slowly removed sweat and dirt as I dragged the cloth down his neck, his bulging, muscular arms, and his lean, sculpted abdomen. He laid quietly, his eyes never leaving me as I worked, and while I blushed periodically as I reached across him, dangling my breasts in his face or brushing against him, I didn't stop until his entire upper body had been cleansed.\n\nIt was his turn to blush as I washed his legs, and then carefully, softly stroked the damp cloth across his growing erection; I lingered there longer than strictly necessary, licking my lips as he swelled in my hand, and I giggled as he let out a frustrated groan.\n\nTossing the cloth aside, I leaned over him again, kissing him briefly before using my lips, tongue, and hands to trace the path the cloth had followed. I sucked hard over his pulse point, marking him, before soothing the irritated skin with a kiss; he grunted, and I had to push his hands down as he reached for me. I softly drew my hands across the hard planes of his chest, running them through his sparse golden chest hair, scattering kisses across his shoulders, and down his chest until I reached his tiny, pebbled nipples. \n\nHe hissed as I laved my flattened tongue across one little bud, then switched and sucked the other gently. His hands fisted in the blankets below him as I continued lavishing attention across his chest, and he growled out my name in a voice so hoarse with lust that I shivered deliciously.\n\nI sat back, reaching up to stroke his cheek, and he nuzzled into my palm. \"I've got you, love.\" I brushed my other thumb softly over a nipple again, and his growl turned into a needy whine. I smirked and leaned down to capture the intoxicating sound with my lips. \"I'll make you forget your own name, never mind all the rest.\" \n\nI kissed him again, and then returned to my ministrations across his chest and torso. I started running my hands across his muscular abs as I kissed my way down from his chest, stopping to dip my tongue into the deep indent of his belly button, eliciting a gasp and a whispered prayer. I climbed over one of his legs, encouraging him to move until I knelt between his strong thighs. Avoiding his large, very prominent length, I pressed more kisses down over his hip, running my hands over his legs, until I reached the crease where his hip met his leg, and I sucked at that tender spot briefly, listening to Alistair groan.\n\nWhen I began softly licking the length of him, providing pleasure but no pressure, he arched up under me, and I looked up at the sweat-slick body of my husband. He was completely gorgeous like that \u2013 his entire body tense, flexed muscles standing out in firm relief under his skin, his face red, eyes squeezed tightly shut, his entire body bowed, as he strained towards the relief I wasn't quite ready to allow him. Seeing him like that affected me, however, and I rubbed my legs together in agitation as a wave of arousal washed over me.\n\nI gave in. Capturing his length between my lips, I swirled my tongue around the purple head and then sucked hard, one hand cupping his sac while the other crept down between my own legs, gathering some of the copious moisture there and going to work immediately, urgently, on my aching clit.\n\nIt took only moments for his release, after the thorough build-up I'd given him; I drank him down gladly, listening to his hoarse shout as he came. I hadn't quite finished myself, however, and with an unfulfilled groan, I sat up, hand still active at my centre, needing more. I assumed he'd be distracted by his own aftermath, but to my surprise, he sat up, his fingers replacing mine in my damp folds, latching his mouth onto my sensitive neck and tweaking a nipple with his other hand. When two thick fingers pressed inside me, his thumb massaging frantically across my pearl, I gasped and shuddered and came in his arms, my hands gripping his hair as I rode out my climax.\n\nWe collapsed together onto our bedroll, and I curled up in his arms, pulling the covers over us both. He kissed my temple, and we fell asleep together, sated and smiling.\n\n*****\n\nThe next morning, it became obvious the Wardens were going to have a few more challenges than we'd even anticipated. With so many Grey Wardens, as well as the rest of our companions, our group had become large and somewhat unwieldy \u2013 and then there were the politics.\n\nAt breakfast, Alim and Jowan immediately began acting like feral cats, backs up and hissing at each other. I wasn't surprised; Alim was the reason Jowan had been threatened with Tranquility, after all \u2013 whether justified or not, I still wasn't sure \u2013 but given the large group, we decided two campfires were perhaps a good idea, and we separated the two mages with alacrity. At the same time, Anders and Alim both bristled around Rolan, who refused to call any of the mages by their names, instead calling them 'Mage' or 'Warden' in mocking tones. Aedan and Alistair both tried to intervene, with little success \u2013 proving a 'tone' was difficult, after all, and he was careful to do nothing that technically crossed the line, though he was rebuked strongly until he desisted \u2013 and the two campfire plan changed to three. \n\nConrad and Dougal had a falling out over the Dark Ritual and Conrad's choice to stay in Ferelden, and Oghren and Faren were suddenly not on speaking terms, for no reason I was able to ascertain.\n\nIn the end, Loghain and Sten joined Rolan at one campfire, Conrad and Faren joined Anders, Solona, and Jowan at another, and Alim, Dougal, and Oghren sat sullenly at a third. The rest of us \u2013 Alistair and I, as well as Aedan, Zevran, Bel, Riordan, Leliana, and Mornwulf \u2013 rotated through all three, trying to bridge the gaps and keep everyone calm.\n\nThe following day, Nathaniel, Fergus, and a portion of the Ferelden Army were going to be leaving for Highever; Aedan took the opportunity to solve some of the problems we were having.\n\n\"I want to send some of the Wardens with Nathaniel. They can help out around Highever, then go with the Arl to Amaranthine and begin preparing for the darkspawn assaults we know will be coming,\" Aedan muttered to Alistair and I.\n\n\"Good idea. And if we plan it right, maybe fewer problems with those left behind?\" I hope.\n\n\"Exactly,\" Aedan agreed. \"I also think we should send a smaller group to Soldier's Peak \u2013 they can work with Avernus, and help out the Drydens with getting everything ready.\"\n\n\"I'd send Jowan to Soldier's Peak,\" I suggested. \"Avernus will work better with a mage, and our other options are less likely to be open to working with an ancient blood mage. Anders and Alim both would probably prefer to kill him.\"\n\n\"What if we send Conrad with Oghren, Bel, and Rolan to Amaranthine? No conflict there, and Conrad can handle any trouble Rolan tries to make.\" Alistair looked at us, briefly surprised when neither of us disagreed with his suggestion. \"We obviously need Sten, Loghain, Riordan, Dougal, and the three of us in Denerim, for a while at least.\"\n\n\"So that leaves Jowan and...Wulf? For Soldier's Peak?\" Aedan suggested.\n\n\"Not Wulf,\" I interjected, thinking of Kallian. \"Take him to Denerim.\" \n\nAedan gave me a knowing look, but didn't ask. \"What about Faren? He's pretty practical - pragmatic, even \u2013 and doesn't seem bothered by mages.\"\n\n\"They'll need an escort,\" Alistair agreed. \"I'll ask Cailan.\"\n\n\"He promised to provide the Peak with a guard anyway, until I could hire my own people. I'm sure he'll agree.\"\n\nI was right, and it was decided, with Cailan's approval, to send a group of soldiers with the two Wardens to Soldier's Peak, but not before he made the group officially swear fealty to me. I was extremely uncomfortable with the entire thing, but he insisted it was the only way to ensure the loyalty of the men I would have directly under my command.\n\nHe asked for volunteers, and apparently ended up having to refuse dozens when he picked fifteen soldiers to transfer. Apparently the Wardens' reputation had earned admirers, and there was no shortage of people willing to work with us. Some of them even offered to join the Wardens, but Aedan declined, saying that he wanted to get the current Wardens settled before he accepted any more, but that he would keep them in mind. There were a few that seemed disappointed, but Aedan's sincerity was obvious, and I knew that, down the road, he would truly consider those who proved themselves and were still interested.\n\nWith the exception of one. Among the group of knights who'd volunteered to go to the Peak was one familiar face that I doubted I'd ever forget, nor would I allow her to go through the Joining. There were few women among the group, and that made Ser Mhairi stand out even more from her peers. When she volunteered to Join the Wardens, I caught Aedan's eye, and very subtly shook my head 'no'. I admired Mhairi's eagerness and desire to serve, but no one would benefit from her death, least of all her. While Avernus may have updated the Joining Potion, I wasn't ready to trust it and use the poor woman as a guinea pig.\n\nWhat I did, instead, was accept the fealty of the fifteen knights, including Mhairi, and then promote her to be the leader of the group \u2013 the Lieutenant, Alistair whispered in my ear when it became obvious I had no idea what rank to call her. Maybe if she sees advancement in her future outside the Wardens, she won't be so keen to join and we won't have to refuse. She seemed surprised at being singled out, but stepped forward confidently and agreed to take command of the small platoon of men assigned to me.\n\nI wondered if some of them would balk at being placed under the command of a woman \u2013 either Mhairi or myself \u2013 but none of them even blinked. There were a few surprised glances at Mhairi's sudden promotion, but my guess was that she lacked seniority over some of the people she'd just been put in charge of. I'll ask Faren to keep an eye on her and see if she's competent.\n\nI made it clear to the knights that, in my absence, they would follow directions from Faren and Levi Dryden, my seneschal. They were to secure the fortress, aid in repairs and renovations as needed, begin patrols, and mark the route through the maze leading up to the Peak to make it more accessible. Aedan gave Faren a map, which he'd copied from the one he made for himself on their way there the first time.\n\nAnd then it was time for goodbyes. The two groups leaving \u2013 for Highever and for Soldier's Peak \u2013 were planning to march at dawn, so there'd be no time for talk in the morning. Fergus shook hands with Cailan and Alistair, pulled an agitated Aedan in for a tight hug, and with a glance in my direction that I couldn't interpret, he excused himself to get the Highever troops ready. Cailan bid those leaving good luck. The rest of us went back to the Warden camp and spent the evening talking and laughing together. Faren and Oghren seemed to have called a truce, and the two started a drinking contest that soon had them unconscious together, and for once not only Conrad, but Dougal joined in. ",
        "Perhaps there hadn't been time for complete forgiveness, but the upcoming parting had made everyone rethink their hostilities, it seemed. Rolan, Alim, Sten, and Loghain retired early to their tents. I got the opportunity to hug everyone leaving us, though it wasn't a terribly sad farewell since I knew we'd be seeing them again before too long. \n\nFinally, everyone settled into tents. I woke early, hearing the packing of the Wardens leaving, and slipped out of the tent I shared with Alistair just in time to see Nathaniel sneak out of Leliana's tent, face sombre. I hugged Jowan, Conrad, and the dwarves one last time and then slipped into Leli's tent.\n\nThe bard was laying listlessly on her bedroll, naked, though with a blanket covering her; she startled and tried to cover herself better when I entered, but relaxed when I reassured her it was just me.\n\n\"You okay?\" I asked her, concerned for the hopeless expression on her face.\n\nShe attempted to smile at me, but it fell flat. \"I will be fine, my friend.\" I frowned, and she sighed. \"I have an obligation. I cannot stay, any more than he can go.\"\n\n\"Dorothea?\" She nodded. \"But, Leli...she doesn't own you. The Chantry doesn't. You need to do what's right for you, too. In the game, the next one?\" She nodded again. \"You're the Left Hand of the Divine. You end up trying to improve the situation in Kirkwall. But Leli...you didn't look happy. You were up to your eyeballs in conspiracies and intrigue, but you never smiled. You were involved with a Seeker doing some rather shady things. That isn't who you have to be!\"\n\n\"She saved me!\"\n\n\"And if she knew that what she had planned for you would make you miserable, do you think she'd still insist on going forward with that?\"\n\nThe bard looked at me, a single tear sliding down her cheek, then turned away, burying her face in her pillow. I rubbed her back, silently offering support, until she relaxed again.\n\n\"Perhaps there is a way to aid Dorothea, and still remain yourself. To stay with Nathaniel. Just...think about it, okay?\"\n\nShe squeezed my hand gratefully. \"Dorothea really becomes the Divine?\"\n\nI nodded. \"In the game, anyway. I suppose things might have changed since then. Justinia, I think. That's the name she takes. You say, in the game, that she's a good person who thinks mages deserve to be treated fairly, who wants to reform the Circles and help people. She sounds...good.\"\n\n\"She is.\"\n\n\"I'm glad. We could use some of that.\" I slapped her hip with a smile. \"Now put on some clothes, lazy girl. You can't just lay around naked all day!\"\n\nShe laughed and I grinned as I climbed out of her tent. The six Wardens were gone, and Aedan had just started breakfast. With fewer of us \u2013 and the troublemakers temporarily separated \u2013 we kept just two campfires; while Aedan worked over a pot at one, I started a pot of porridge at the other. Soon the smell of food had Wardens tumbling out of their tents, and we all settled in to eat.\n\nAfterwards, Aedan informed us that we would be leaving for Denerim in two days. \"The wagons to transport the injured have arrived, and they'll follow behind, but we will be accompanying Cailan back to Denerim to await the Weisshaupt delegation, Cailan's formal re-coronation, and the celebrations planned for the end of the Blight. Afterwards, Loghain, Riordan, and Dougal will be leaving for Jader, Sten for Seheron, and the rest of us will travel to Amaranthine.\n\n\"What about you, Leliana? The Blight is over. What will you do next?\"\n\nLeliana wiped her mouth daintily and smiled. \"I'd like to come with you to Denerim, if you don't mind, and perhaps to Amaranthine after that for a short time. I have some obligations to a friend in Orlais to fulfill after that, but,\" she glanced at me with a sly smile, \"I think I can delay those for a little while.\"\n\n\"Excellent!\" Leliana actually looked surprised at Aedan's enthusiasm. \"What? I could use a good archer to train any new recruits. And you tell the best stories.\"\n\nThe bard giggled happily and blushed, and Aedan turned to Wynne, who had joined us for the first time in what felt like months. \"And you, Wynne? I know you've been helping out with the wounded. Will you be travelling with us?\"\n\nThe mage nodded, looking pleased. \"I will. His Majesty has asked me to remain at court for a time as a healer, and will allow me to continue working with the soldiers there. After his confrontation with the Grand Cleric, I feel I may be able to recruit some of the other healers and possibly gain crown support to open a free clinic in Denerim. I won't stay there forever \u2013 I have some research of my own to do, and Shale and Caridin have requested my help in discovering the key to golem sentience \u2013 but I'd like to get things established, perhaps aid in the transition to having more free mages outside the Circle.\"\n\nI looked at the healer in shock. \"I thought it might be nasty, but I never heard what happened with Cailan and the Grand Cleric. I assumed they hadn't talked yet. What did happen?\"\n\nAedan laughed. \"It was marvellous, Sierra. I wish you'd been there. Cailan was furious, and he had most of the nobility standing with him, looking supportive even if they didn't all totally understand what he was up to, or agree. He called her a 'self-serving, shrivelled-up, power-hungry hag,' wasn't it?\" \n\nHe looked at Zevran for confirmation, the elf blushed slightly and nodded. \"Exactly so, amore mio. I wasn't aware you knew of my...presence.\"\n\nI raised my eyebrow \u2013 Zevran had snuck in, and been caught? Hysterical \u2013 but Aedan just laughed. \"I know you, Zevran. Anyway, Cailan accused the old bitch of murder, and told her he was going to make a plea to the Divine to have her replaced.\"\n\nLeliana interjected. \"The Divine will have little to do with it, no? Most Holy is getting on in years, and will likely have forgotten that Orlais no longer rules over Ferelden.\"\n\nAedan nodded. \"Her advisors, the most senior Grand Clerics, will have to deal with it \u2013 it will be interesting to see what happens there. Anyway, Cailan told Elemena she may remain in Denerim for now, but that he would consider exiling her completely if she did anything to undermine him or the Wardens again. And he demanded that she grant the Circle some independence \u2013 he didn't threaten it, exactly, but the implication that he'd place the Circle under secular control if she didn't agree was certainly obvious. Greagoir didn't say a word, but it was clear even he approved. So now the Circle is going to train mages, but they'll be permitted family visitors when they're young, and will be allowed to leave the Circle more permanently after they're Harrowed if they apply for permission. They'll have to check in at the local Chantry wherever they go, and it only applies in Ferelden, obviously, but they'll be able to live outside direct templar supervision.\"\n\nI snuck a look at Wynne, surprised at her beatific smile. She'd always seemed so fanatically religious before, and I thought she might have been worried about allowing mages too much freedom.\n\nShe returned my look with a wink. \"What? Some very wise person I know convinced me that I have to look at what the Circle is attempting to accomplish, and decide if the current status quo is achieving that. It is not. I saw what desperation drove some mages to in Uldred's uprising. He may have been possessed, but the rest were just...desperate. I'm an Equitarian, Sierra \u2013 we need the Circles, but not as prisons. You were right.\"\n\nI blushed. \"I distinctly don't remember saying that.\"\n\nShe chuckled. \"I may have paraphrased a little.\"\n\nAnders looked absolutely astonished, and I giggled at the open-mouthed expression on his face. \"The Circle is independent?\"\n\n\"Well, not totally. But more than it was, yes. There'll still be Chantry oversight, and not all applications to leave the Circle will be approved if the First Enchanter and Knight-Commander don't think the applicant is stable, but some mages will be allowed to live on their own.\" Aedan looked pleased, proud even, and I knew he was as impressed with Cailan as I was. Taking away the Circle entirely was a recipe for disaster \u2013 mages did need somewhere to go and learn to control their powers, and those who'd been living in Circles shouldn't be dumped out unceremoniously with nowhere to go \u2013 but the way things were just wasn't going to be sustainable.\n\nOver the next two days, we ended up spending some time with Sereda \u2013 who was engaged to a Deshyr's son, one of Harrowmont's supporters, not the former casteless she'd taken on as her second \u2013 and heard about how the changes had been going in Orzammar. They'd recovered Aeducan Thaig, as a result of the war games they'd used as training exercises for the Warrior and Military Castes, and hoped that by the time they returned to Orzammar, most of the Thaig would have been cleared of the taint and habitable. She'd found some stone masons willing to train some of the former casteless as labourers, and had rebuilt Dust Town, settling it with labourers, military, and servants who needed accommodations. She planned to populate much of the Aeducan Thaig with the former Casteless, who would be allowed to set up businesses and provide services to the few upper Caste families who chose to resettle there \u2013 for generous tax advantages, of course. \n\nGorim joined us, as he was no longer needed on the war council as a liaison, and would be returning to his family in Denerim. He and Sereda exchanged some tortured glances, but he seemed almost relieved to be going home, once she'd left at least.\n\nDariel came to visit as well, confirming he would be staying with Lanaya's clan. He and Mithra, his new bond-mate, had been acting as messengers between Lanaya and Cailan, but would be heading out to Ostagar with the rest of the clan. He thanked us, again, for sparing his life in the ambush where we'd met, and for introducing him to his new clan. He even shook my hand, despite his fear of templars, and I wished him well. I knew Lanaya would help him with his magic and with proving himself to the clan.\n\nBodahn, who'd evidently made a fortune selling supplies to the army over the previous few months camped in the Bannorn, was heading out \u2013 I knew he'd make it to Amaranthine and a boat to Kirkwall eventually. \n\n\"I hear the Free Marches will have lots of opportunities for a merchant such as myself, and my boy's never been on a ship before,\" he declared. \n\n\"Ocean, crossing the ocean,\" Sandal sang to himself, using a small rune he held as a pretend boat floating over invisible waves.\n\n\"The Waking Sea,\" Bodahn corrected almost automatically.\n\nI sat down beside the simple dwarf boy, putting one hand on his shoulder gently. \"Sandal? You know the runes that go boom?\"\n\n\"Boom!\" he cried, smiling broadly. \"Enchantment!\"\n\nI nodded. \"Exactly. If you end up going into the Deep Roads, you keep some of those with you, you hear?\"\n\nHe grinned and pressed the rune he was holding into my hand. On closer inspection, it was smoother and shinier than the usual runes we used; I wasn't sure if it was just a pretty rock, or if Sandal had somehow enchanted it. \"Pretty lady.\"\n\nI pocketed the stone, ruffling the boy's hair and then giving him a quick kiss on the cheek. I turned to Bodahn, giving him a quick hug and making him stutter with a kiss too.\n\n\"You meet someone named Hawke, you stick with her, okay?\"\n\n\"My Lady?\" \n\nI was never sure how much Bodahn knew about me; he'd have been able to eavesdrop a few times over the year travelling together, I was sure, but he might have been too polite \u2013 and he was too clever to admit it in any case. \"You take care up there, okay? I'll miss you.\" And it was true; at the very least, Sandal's enthusiasm and Bodahn's unending optimism had been worth their weight in gold when things had been difficult during the Blight.\n\nShale and Caridin were returning to Orzammar with Sereda and the dwarves; they planned another expedition into the Deep Roads to find inactivated golems, and then Caridin wanted to really begin his research into how to make the golems sentient like Shale. And they wanted to go to Cadash Thaig, as well \u2013 evidently they'd never made it there before the final battle. \n\n\"Thank you, my Lady,\" Caridin said after he'd said goodbye to Aedan. He held his enormous stone hand out towards me, and I carefully laid my hand on his. \"Your foreknowledge has given me a new purpose, and a chance to atone for my terrible mistake. I wish you well.\"\n\n\"You too, Caridin. I hope you and Shale find what you're looking for.\" I leaned in to whisper, \"Take care of Shale for me, okay? She may be made of stone, but that doesn't mean she can't be hurt.\" \n\nHe nodded sagely, then turned and walked away without looking back.\n\n\"I find myself wondering if I shall miss It and Its friends.\" Shale approached me, and I turned to face her with a smile. \"It is, perhaps, less feeble than I believed when we met, which was a relief.\"\n\n\"Thanks, Shale. I will miss you. But you can come visit \u2013 Soldier's Peak will be in much better shape before long \u2013 and I'll probably end up in Orzammar at some point. I'll see you again, I'm sure of it.\"\n\n\"Tell the Silly Warden to take care of It, or I shall find him and squish him.\"\n\nI giggled, hugged the golem \u2013 not that she'd have cared, I was sure, but it made me feel better \u2013 and watched her stomp away towards the dwarves. I actually will miss her, stubborn acerbic pain-in-the-ass that she is. Huh.\n\nTeagan was going to Redcliffe to run things in his brother's absence \u2013 Eamon was going back to Denerim to meet up with Isolde and Connor, and then I hoped Cailan would find something for him to do elsewhere. I knew Teagan would be much better for Redcliffe than Eamon ever was. The redhead came to bid us goodbye, and I spent a few minutes teasing him about Kaitlyn \u2013 until he showed me the ring he planned to give her. \"I like your Earth tradition,\" he whispered as he put the ring away. \"Do you think...are you sure...\"\n\nI rolled my eyes. \"She's going to say yes. Don't be ridiculous. I know you two will be very happy, Teagan. And probably have lots and lots of babies!\"\n\nHe blushed, and I laughed. He sat with us for the rest of the evening, laughing and carousing, and then he set out at dawn with the Redcliffe forces.\n\nWe finally got underway for Denerim much later in the day than we planned. I'd already discovered travelling with nobles was irritating, and though I'd blamed it entirely on Isolde before, it became obvious that pretty much the entire nobility was just as bad. Some of them rode horses which had to be saddled for them, several insisted on carriages, and none of them were willing to wake a few minutes early so their things could be packed. Many of them had carried ridiculous amounts of stuff \u2013 I saw two full-sized mattresses being loaded onto a cart, as an example \u2013 and no one wanted to carry or pack anything of their own. The few servants were being run off their feet, so some of the soldiers were having to help out which made them cranky, and the whole thing was complete chaos.\n\nAedan and Alistair decided the Wardens would scout ahead, and so we split into teams of two, slowly meandering through the wilderness of the Southern Bannorn, aiming for the main highway leading to Denerim. A group of soldiers had been assigned to clear the way for the carts and carriages, cutting down inconvenient trees and creating a passable path, so we all kept an eye on them to ensure they weren't accosted by any darkspawn stragglers or local wildlife.\n\nIt had taken two weeks for us to get from Denerim to the Bannorn \u2013 travelling only with Wardens was a huge advantage \u2013 but it looked like it would probably take close to four to get back, between late starts and slow-moving carts. Things went a little better on the highway, with the carts able to travel more efficiently than on uneven ground, but summer was almost upon us by the time we made it to the city.\n\nDenerim was still all but abandoned when we returned. Messages had been sent out to those evacuated before the battle, but it took time for people to return, and the city was like a ghost town. Walking through the market, only a handful of people \u2013 those too stubborn or too sick to leave \u2013 stared suspiciously at us, giving it a surreal feel. The market stalls were vacant, some of them sagging, with torn awnings swaying in the slight breeze. The stalls look almost depressed, or...lonely. Strange thought. \n\nThe only redeeming feature of the creepy, empty streets was the smell; for once, Denerim didn't smell like human waste and rotting corpses. There was a lingering, unpleasant odour when the air stagnated, but the light wind kept it moving, and for once I wasn't forced to breathe through my mouth to avoid nausea.\n\nWe marched straight through the city, the fastest trip across I've ever made, to be sure, and finally arrived at the gates to the Palace. There were a handful of servants with us, and another handful who'd either managed to return faster than the rest of the evacuated residents, or who had stayed put when everyone else left. There weren't going to be enough though \u2013 not for Cailan, and all the other nobles, never mind the wounded. As a group, we watched the chaos as Cailan tried to organise the few servants they had to getting everyone settled; to avoid making it worse, we decided to take care of ourselves. We helped ourselves to the rooms we'd held previously, putting away our things before meeting for a supper of leftover trail rations in the little dining room we'd used before. \n\nAnders and Wynne excused themselves to help with setting up an infirmary, and after bidding everyone goodnight, I decided to have a long hot bath. Grateful to Sereda for about the millionth time since leaving Orzammar, I filled the tub and slid in, submerging fully before almost falling asleep in the warmth. I didn't stir until Alistair joined me, and after spending far too much time ensuring we were completely, squeaky clean, we both collapsed onto the bed and fell straight asleep.\n\nWe were all surprised to wake up and find elven servants bringing us breakfast and offering to run baths for anyone who needed them. The confusion only lasted a few minutes, until Kallian arrived, and the elves all jumped to attention before rushing away breathlessly to start hauling water.\n\n\"Kallian?\" Wulf stood immediately, staring at the beautiful elf with dark, uncertain eyes.\n\nIgnoring his obvious discomfort, or perhaps nervousness, she pulled the former werewolf into a hug, pressing her forehead against his sweetly, and the battle-hardened Grey Warden practically melted.\n\n\"What are you doing here? You're supposed to be on a boat, or in the Free Marches.\" Wulf shook her slightly, and she chuckled.\n\n\"What can I say? I've never been good at following orders.\" Wulf growled, and she winced. \"Look, a bunch of families from the Alienage wouldn't leave. They were afraid being loaded onto carts and forced to leave together was an excuse to sell them to Tevinter or kill them outright. So they stayed. But there were looters, and then a fire, and they were in danger. When I realised I couldn't convince them all to go, I stayed too, and brought them here. The guards recognised me and let us in. There was food, beds, and plenty of places to hide if the darkspawn had come. And together, we helped the guards keep the looters out of the Palace.\n\n\"In return for being safe in the Palace, I convinced them that if I was right, and that the King wasn't selling the rest of the elves or hurting them, they'd all help out here until the servants came back.\"\n\n\"You could have been killed!\" Wulf was squeezing her waist now, angry and worried and completely exasperated, and she kissed his cheek as she slipped out of his grasp somehow.\n\n\"But I wasn't. I'm fine, Wulf. And now we have people to help out until everyone gets back.\"",
        "Leliana approached the elf, who looked much less haunted than she had when we'd left, and claimed a hug as well. \"Nicely done, Kallian.\" We all agreed, sending her smiles and nods of approval. \n\n\"So anyway, I'm here to inform you that his Majesty would like to meet with the Warden Commanders and Lady Theirin at your earliest convenience.\"\n\nAedan and Alistair exchanged pouts, and I laughed. \"Come on, boys. Let's not keep the King waiting.\"\n\nKallian escorted us to another wing of the Palace, where the furniture had largely been moved out of two adjacent ballrooms, and instead pallets had been built for the wounded soldiers. Cailan paced through the makeshift infirmary, calling out orders and stopping to hold a hand or wipe the brow of an injured person as he passed by. Waving acknowledgement when he saw us, he spoke briefly to a couple of people who appeared to be more-or-less in charge, then rushed over to us.\n\nHis skin was slightly sallow, dark circles ringed both of his eyes, and he was wearing the same clothes from the evening before. His expression was one of grim determination overriding complete exhaustion, and Alistair and I exchanged worried glances before following him down a hallway to a nearby sitting room.\n\nHe slumped into a chair, sighing heavily, and we all did the same as he gestured to chairs. \"Kallian? Would you join us?\"\n\nThe elf, surprised, settled into a chair gracefully, and it was nice to see she didn't appear nervous in a relatively small room with three human men. We all turned our attention to the exhausted king.\n\n\"Cailan?\" I ventured. \"When was the last time you slept?\"\n\nHe twitched slightly, and I scowled \u2013 he was preparing to lie to me, and I wasn't going to have any of that. \"The truth, if you please.\"\n\nHe sighed. \"On the road. There's been too much to do since we arrived.\"\n\n\"Cailan...\" Aedan's tone was almost motherly, and I stifled the urge to giggle.\n\n\"Tonight, okay? I promise. But that's not why I asked you here, so could you all quit pretending to be my parents for a second or two?\"\n\nI did laugh at that, and we all flushed slightly. \"Yes your Majesty,\" I teased, and even Kallian giggled as Cailan stuck his tongue out at me. \"How may we assist the Crown?\"\n\n\"Alright, so...hear me out before you make a judgement, but...I want to burn down the Alienage.\""
    ],
    "authorname": "ElyssaCousland",
    "tags": [
        "fantasy",
        "fanfiction",
        "dragon age",
        "modern girl in thedas",
        "romance"
    ],
    "category": "Celebrities & Fan Fiction",
    "url": "https://www.literotica.com/s/there-and-back-again-ch-115-116"
}