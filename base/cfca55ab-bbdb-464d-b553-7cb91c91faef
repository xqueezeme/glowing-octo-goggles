{
    "title": "Secret Smiles and Three Little Words Pt. 23",
    "pages": [
        "Chapter 25 \n\nThe next morning Alex slowly opened her eyes, the room was still dark but she could tell the sun was coming up as it brightened the bedroom. She rolled over but Gavin was gone. She shook her head as she thought about the argument from last night. She felt his pillow and it was cold. She wondered if he had come to bed at all, his side was still perfectly straight and it looked unslept in. \n\nShe pushed the covers off of her, and slowly sat up. As soon as she did the cough came up, forcing her to bend at the waist, as it overwhelmed her. The sharp burning in her chest took her breath away, the pain radiating outward as she coughed, forcing her to wheeze in between coughs as she desperately tried to bring in air. Her throat was raw from the abusive power of her coughs as it felt like her lungs were going to come up at any moment. When she got control of herself she tried to stand, her normally strong legs, shook weakly. \n\n\"Back into bed,\" his voice commanded from behind. \n\n\"I'm sorry,\" she said again turning to face him. She expected harsh eyes and angry facial expressions but instead found a firmness, but it wasn't anger. \n\n\"Prove it,\" he said soundly. \"Get back into bed for me.\" \n\nShe nodded as she slid back beneath the covers without a word, and he helped pull them up around her chin. \n\n\"I am sorry,\" she said again as he took her temperature. He said nothing, instead starting his exam of her. \n\nPulling out his stethoscope he lifted her shirt and put it on her as he listened. \n\n\"Gavin,\" she started. \n\n\"Shush,\" he warned her. \n\nShe closed her eyes. He was cold and unaccommodating. His demeanor, professional, like she was nothing more than a patient of his. Not the woman who lived with him. Not even the woman he fucked. His voice was cold, his mannerisms frigid and his eyes were like the North Pole, uninhabitable. \n\nThis man that sat on the bed with her was not the same Gavin she was with normally. This one was robotic, his focus was only on his examination. His eyes never looked into hers, instead it appeared he was intentionally keeping them from her. \n\nNot the normal Gavin, not the Gavin she fell in love with, but then again, the fight that caused this demeanor, was her own doing. Her pride caused this. Her stubbornness caused this. Now the problem was, having never had any relationships that lasted past the first fight, she was uneducated on how to fix this. Fixing it was what she desperately wanted to do! Gavin went to his bag and pulled another needle out. \n\n\"Gavin,\" she tried again. \n\n\"Shush,\" he told her as he tilted a little vile of medicine loading the syringe. \n\nHe came to her and helped her roll over. He did so gently and it was the first thing he did to her that was gentle and remotely loving. Alex felt the needle insert just above her cheek and she realized it was much softer than last night. Proving that last night was intentionally painful, by his choice. \n\n\"What are you giving me?\" she asked him. \n\n\"You have pneumonia,\" he told her flatly. \"I would love to take you down for x-rays but the weather is too bad to do so. I won't risk making this worse by taking you out in the frigid temperatures, so for now, we are stuck here. If you don't respond to this in the next twenty-four hours, I will be forced to take you, by ambulance if necessary.\" \n\n\"I have school,\" she tried to tell him after she doubled over into a coughing fit, again her chest feeling as if it was on fire. \n\n\"It was cancelled because of the weather,\" he informed her, shaking his head at her complete denial of how sick she was. \"Not like you could have gone in anyway.\" \n\n\"Gavin,\" she whispered as the drug started to make her woozy. \"I'm sorry.\" \n\n\"No, I don't think you are,\" he said softly with a deep exhale. \"You're sorry that it has turned out this way. That you wound up sick. But you aren't sorry that you did it.\" \n\n\"I sorry that I made you mad!\" she explained drowsily. \"I don't like that I disappoint you!\" \n\n\"I'm more disappointed in myself, than you,\" he told her pushing her hair off her forehead. \"I let you do this to yourself.\" \n\n\"You didn't have much choice,\" she whispered as she barely hung on to consciousness. Her eyelids feeling like five pound weights were on them. \n\n\"Yes I did, but that's another thing,\" he nodded with a concerned frown. \"Something to address when you are feeling better, but for now, try and not worry. When you are better, then we will hash this out.\" \n\n\"So I haven't fucked this up beyond repair?\" she asked him sleepily, her insides jumping up and down in happiness, even if she didn't have the energy to do so physically. \n\n\"This was a lack of communication,\" Gavin assured her. \"Both on your part, and mine. No, this is not broken, this is something for us to discuss so we can learn and make us stronger.\" \n\n\"Us?\" She asked, her eyes were impossible to keep open. \n\n\"Not getting rid of me that easily, Little One,\" he smiled. \n\nShe fell asleep as he stroked her face. She was trying to stay awake to talk to him but whatever he was giving her was putting her out. When she awoke again, Lena sat in the bed with her. \n\n\"Told you he would be pissed,\" Lena said as she flipped the channels on the TV, not looking at her, her face just as angry and firm as Gavin's had been. \n\n\"I haven't even given him the box yet,\" Alex told her as she turned over and tried to prop herself up. The coughing caused her to hang her head over the side of the bed in fear she was going to vomit again. She felt Lena's hand on her shoulder as she held her for comfort. \n\n\"No, just wait until he finds out you spent four grand on that box and didn't buy a better car!\" Lena warned her. \"Especially now, since he found out yours broke down!\" \n\n\"Fuck,\" she gasped. \"How pissed is he right now?\" She had forgotten about her car and now that was surely going to bring another fight! She hadn't recovered from the first one yet. She turned over and faced Lena and pulled the covers up close to her face. The room still feeling like it was a refrigerator. \n\n\"Um,\" Lena shook her head. \"I'm thinking I have never seen anyone as pissed as he is right now!\" \n\n\"Fuck,\" she shook her head again. \"What do I do?\" \n\n\"Pray he doesn't...,\" Lena stopped talking, and pursed her lips tightly to keep the words at bay and shook her head. \n\n\"Doesn't what?\" she asked her when she stopped talking. \n\n\"End your relationship,\" Lena said softly looking at her, concerned at how that was going to hit her. \n\n\"Did he say that?\" she asked sitting up. \"No he said we were just having communication problems!\" Alex said remembering his soft words as she drifted off the day before. \n\n\"Yeah, that was before the police called and told them about your abandoned car, something you neglected to mention to either of us! He then calculated how far you walked to the train, then from the train to the condo...he said it was no wonder you had pneumonia! He was livid last night!\" Lena told her. Lena was angry as well, for Alex's stubbornness. \n\n\"Do you know what could have happened to you? Did you know, that just one block from where your car broke down, three people were shot? One died? No, of course not! You're too stubborn to take in consideration the dangers! I would break up with your stubborn ass too!\" Lena continued to rail making Alex want to hide under the covers that the two people she loved were so pissed at her. \n\n\"Did he say it was over?\" Alex asked her softly, thinking what he said before was just to placate her until she was well enough to end it. \n\n\"No,\" Lena frowned. \"It was his eyes that said it. He is worried about you, but he is also wondering if he can handle someone who won't let him close enough to help. If your pride won't let him take care of you the way he wants too.\" \n\n\"What are you talking about?\" Alex growled, tired of the lashing she was taking from her best friend. \"I'm the one who said I loved him, to the world! He hasn't said it back!\" \n\n\"Just words,\" Lena said softly shaking her head in disbelief that Alex just wasn't getting it. \"How many guys have said that to me, I can't count them, but they were just that? Words. Doesn't mean they are true! Actions mean more than words.\" \n\n\"Make sense,\" Alex said rubbing her forehead, tucking herself back deep into the covers to fend off the shivers. \n\n\"If you loved him, you would let him love you in the way he knows how!\" Lena pointed out. \"He shows it by spoiling you. By doting on you, by the little things he does!\" Lena shook her head. \"That man loves you, I can see that, even if you can't! I can tell by the worry on his face and by the way he does everything for you. You're so blind because you are looking for some stupid fucking words!\" \n\n\"I've had guys tell me the words but not the action,\" Lena told her. \"You have a man who is showing you, but not saying it. I know the words are important, the whole verbal commitment and all, but if you weren't such a spoiled little brat, you would have heard him say those words each and every day! By what he does.\" \n\n*** \n\nShe awoke with him pumping up the blood pressure cuff. He was staring at the gauge as she slowly released the air from the cuff. \n\n\"Gavin,\" she attempted. \n\n\"Shush,\" he said again, it was a fighting tactic that was really starting to piss her off. Her anger spiked and she hit full boil in record time. How was she going to make this right if he wouldn't let her talk to him? \n\n\"No, I will not shush!\" she barked out. \"I want to apologize!\" \n\n\"What did you say to me that day?\" He asked, looking at the ceiling as he removed the cuff from her arm angrily. \"Oh yeah,\" he said with a cock of his head, he turned his angry eyes to her. \"Go fuck yourself!\" \n\nHe got up and left the room and Alex could do nothing but watch him leave. The tears of pain falling, her bottom lip quivering as he smashed her with his heavy hammer of anger. \n\nLena was standing in the doorway of the bedroom as he started to make his way by her, she touched his forearm in a comforting touch that he nodded at in appreciation. She went to the bed and sat down pulling her feet up and turning on the TV again. \n\n\"Oh my God,\" Alex whispered. \"This is it, isn't it?\" \n\n\"No,\" she assured her with a shake of her head. \"I talked to him last night, he isn't thinking that. Lucky for you he is fantastic and not like most of the assholes that dot this planet, wasting valuable space!\" \n\n\"I know,\" she said turning over and taking Lena's hand. \"How do I fix this?\" \n\n\"I don't know baby,\" Lena said laying down next to her. She gently stroked her friend's hair, looking into the watery blue of her eyes. \"I've never had true love, so I don't know what it is like to have a guy that cares for me, more than himself.\" \n\n\"I've so fucked this up, I don't know where to begin!\" Alex said as the tear rolled down her nose. \n\n\"You will figure it out,\" Lena assured her. \"Not too soon, I hope!\" She smiled and winked at Alex when she looked on her, shocked she would say such a thing. \n\n\"I mean if you fix it, then I would have to go back to the apartment instead of this fabulous condo!\" She teased. \"With its indoor pool and sauna, super-hot doormen, and garage parking!\" She fluttered her eyes closed like she was in heaven. \n\n\"He has forced me to move in here, so we can take turns taking care of you. He refuses to let you alone by yourself for one second! He came over and picked me up, I don't think I had much choice either, his demeanor was so commanding!\" Lena explained as she thought about when he asked her to stay with them for a little while. \"So I have taken over your fabulous guest room. That way, if he gets a call, we can take turns taking care of you as you refuse to go to the hospital, you stubborn little bitch!\" \n\n\"If you are in the guest room, where is he sleeping?\" Alex asked her with a soft laugh at Lena's response to her new living situation. \n\n\"The couch from time to time, when he does sleep anyway,\" Lena said softly. \"He doesn't want to crowd you in here, and he won't sleep with me!\" Lena said with a wink that she was joking. \n\n\"I don't like you that much,\" Alex smiled as she shook her head at Lena's teasing, it made her feel better to know that the anger was subsiding. Maybe in the near future she would be able to talk to Gavin and not suffer frostbite from him. \n\n\"Mee-yoowwww!\" Lena laughed. \n\n\"Baby,\" Alex laughed with her. \"You have no idea!\" \n\nAlex laughed as she knew there was no way that Lena could know, that as a sub, they were also called kittens. So her remark was spot on in more ways than one. \n\nWhen Alex awoke the next day, the sun was brightly shining in her room. She looked around and there was no Lena. She sat up and for the first time it didn't cause her to spiral into a coughing fit that hurt throughout her chest. The cough was still there, but it didn't set her chest on fire! She eased out of bed and made for the door and that is when she heard the voices. She smiled, the two people that loved her. Whether she let them or not. \n\nShe watched them from the door for a second before padding quietly out to the dining room. \n\n\"Hey you!\" Lena beamed when she saw her standing there. \n\n\"Hey!\" she smiled at her before turning her eyes to Gavin who stood to come over to her. He felt her forehead then her cheeks. \n\n\"Fever is finally gone,\" he smiled with relief filled eyes, before he kissed her temple. She turned and attempted to kiss his lips, but he pulled away too quickly. \n\n\"Just because your fever is gone doesn't mean you can go crazy and get yourself all worked up!\" he cautioned her with a wink. \n\n\"Yes Sir,\" she smiled dropping her head, the distance of a few inches felt like miles. Now he was not being angry, but there was definitely still some sort of invisible barrier he was projecting with is body language and tone. \n\nHe guided her to the table and pulled her chair out for her, before he disappeared into the kitchen. \n\n\"Len, do you want more?\" he asked from behind the door. Alex easily recognized that the way he spoke to Lena was much less frosty than the way he was talking to her. \n\n\"Jesus no!\" Lena laughed. \"I've gained twenty pounds from eating your fantastic cooking!\" \n\nHe brought Alex a small plate and she looked at it. She was starving for the first time in three days so she dug into her food ravenously. Gavin smiled with a nod, knowing that her appetite was a good sign. \n\n\"You missed the crepes earlier!\" Lena bragged. \"I mean God damn, talk about orgasmic!\" She teased quietly. \n\n\"Hey,\" Alex said glaring at her. \"That's my man you're talking about!\" \n\n\"I was talking about his cooking,\" Lena defended. \n\n\"So was I!\" Alex laughed. \n\n\"We share everything else!\" Lena pointed out with a fake look of shock and anger. \"Make-up, apartment, clothes...everything! What's one more little thing?\" \n\n\"Uh, again, I don't like you that much!\" Alex said firmly. \n\nGavin sat at his end of the table and rolled his eyes at their playful banter, while taking a sip of his tea. \n\n\"Gavin are you sure you don't have a brother? It looks like my best friend is going to be really selfish here and not share you!\" Lena growled while she stared at Alex. \n\n\"Sorry,\" he shrugged apologetically. \"I'm an only child.\" \n\n\"He's got a Russian friend who is as close as his brother!\" Alex pointed out with a wicked little smile. \n\n\"Really?\" Lena smiled intrigued. \n\n\"My God woman!\" Gavin gasped shaking his head at Alex. \"You really don't like her, do you? Pavy?\" He turned his laughing eyes at Lena and shook his head. \"Run Lena! That is a man you don't want any piece of!\" \n\n\"Trust me, it's been so long I don't care if he is a piece of shit, I would take him right now!\" Lena laughed getting up. \n\n\"Wait!\" Alex stopped her with her hand. \"What happened to Paul?\" \n\n\"Paul?\" Lena frowned in question as she shook her head. \"Paul is history.\" \n\n\"When?\" Alex gasped as she stood up. How could she not know her best friend had broken up with her boyfriend? \n\n\"Three or four weeks ago,\" Lena shrugged turning and heading to the door. \n\n\"Wait,\" Alex said going after her. Lena turned and faced her, her face told Alex she didn't want to talk about it. \"Why didn't you say something?\" \n\n\"You were busy! Had the kids and all,\" Lena shrugged. \n\n\"I'm never that busy!\" Alex barked at her, her temper rising. \n\n\"It wasn't important,\" Lena shrugged, arching her eyebrow at Alex's sudden anger, a soft smirk tugging at the corners of her mouth. \n\n\"Bullshit!\" Alex growled. \"You are important to me! So the things that affect you, affect me!\" \n\nLena raised her eyebrows more at her, with a question in her eyes that was easily readable, her smile coming out more as well. Alex read right into it. \n\n\"That's not the same!\" Alex defended that she was doing the same to Gavin. \n\n\"Shall we ask him?\" Lena asked coolly, crossing her arms across her chest. \n\n\"Ouch,\" Alex frowned as the verbal slap from her best friend took her anger from her. \n\n\"Listen baby,\" Lena smiled taking her into her arms, realizing she was probably being too harsh. \"I know you think you can take on the world and all, but you can't. You were busy, and I knew all along Paul was never going to be my Gavin. So it ended, and I move on.\" \n\n\"I should still be there for you,\" Alex whispered as she thought about all the selfish things she was doing. \n\n\"You are,\" Lena said with a kiss to her head. \"I'll see you tonight!\" She said opening the door. \n\n\"Good luck!\" Gavin called from the dining room. \n\n\"Thanks!\" She called out to him, she then smiled at Alex one last time and closed the door. \n\nAlex put her head to the door and began to cry. Tears of guilt, not only for what she was doing to Gavin, but for not being there for her one and only true friend. This meant that during their Christmas shopping, Lena was dealing with a broken heart. Something she never noticed while they spent the day together. It explained why Lena didn't want to go shopping with her but Alex had insisted. Petulantly. \n\nShe remembered going off on a rant when Lena said she didn't feel like going out, that she wanted to stay in and read. Alex wouldn't hear of it, nearly demanding that she come with her as she needed her advice. Alex also said they didn't hang out anymore and she wanted to do that now. \n\nGavin's strong hands on her shoulders made her turn around instantly and disappear into his arms. \n\n\"Oh my God! I'm a horrible fucking person!\" Alex gasped as she gripped him tightly. \n\n\"How do you figure?\" he asked her softly, his lips in her hair, his nose inhaling her precious scent. \n\n\"I missed it that she had broken up, I stomp around here like a spoiled brat not getting her way. Say some horrible things to the man I love...I won't let you help because of my stupid pride!\" Alex told him in between sobs. \n\nGavin said nothing he just held her and kissed her head repeatedly. \n\n\"How do I fix this?\" Alex asked him plainly into his chest as the scent of him filled her nose. \n\n\"You know, I have been thinking of this for some time,\" Gavin told her guiding her to the couch. He sat next to her and she was afraid of what he was going to say, was he going to tell her that she should move on? Was he going to say they were incompatible? \n\nShe tried to slow her heartbeat by breathing in and out as slowly as she could. All she could think about was that he was waiting for her to get better, so that he could end this relationship. Lena told her she had talked to him and we wasn't thinking that, but was that just to keep Lena in the dark of his true intentions? He stroked her face. \n\n\"Relax,\" he told her softly, reading her panic perfectly. \"You get to end it. I am a man of my words, although, I will say, you have pushed that to the breaking point.\" \n\n\"I'm sorry,\" she tried again, but he stopped her with his finger on her lips. ",
        "\"Stop saying that,\" he told her firmly. \"I get it, you're sorry. But sometimes saying you're sorry isn't enough...you know?\" \n\n\"Yes, I know,\" she said softly. \n\n\"So, I have been thinking,\" he started again. \"I love you here, I love the fact you are in my life, and there is so much to love about you.\" \n\nHe came close to saying it, but didn't. He said everything but the three little words. She wondered just how important they were to her. Should she listen to Lena and just accept his action as the words? \n\nLena was right, he said 'I love you' with everything he did. But if that was the case, then did he love every sub he owned? He said he did these things for all his subs, it was part of the lifestyle for him. So ultimately, no, she needed the words, if nothing else it was something he didn't tell anyone else. Well maybe one. The one who broke his heart into a million pieces and may never be repaired. \n\n\"How do I fix this?\" she asked him. \n\n\"That's what I'm trying to tell you,\" he smiled. \n\n\"It can't be fixed?\" Alex said softly. \n\n\"Everything broken can be fixed,\" he smiled with a shake of his head. \n\n\"How?\" she pleaded. She was desperate to fix this, desperate to turn back the hands of time and go back to where they were just laughing and fucking. \n\n\"You need to do something very specific,\" he said softly. \"I was kind of waiting for you to realize it, but then all these wonderful things started happening to you so I knew it would be difficult to see with the tidal wave of new responsibility. What with the wall, then your mini depression, then the kids. I understood why this didn't come to the surface much earlier.\" \n\n\"What? What didn't come to the surface?\" Her voice begged for the knowledge, all she cared about right now was righting the wrongs of their relationship. \n\n\"That's just it, I know I'm supposed to teach you, but some of that also requires me to know when to just tell you and when to let you make your own discovery. This is one of those times. This knowledge will be better suited for you to seek out and learn.\" \n\n\"What?\" she asked, the pain in her voice causing it to break. \n\n\"I could tell you, we could move on, but I think this is better suited to you learning on your own. That way it sinks in and takes root. I have thought about this and this is very important for you to do on your own,\" he said taking her hand. \n\n\"I know what you want, you want to fix this, but what you need is knowledge. Knowledge that is out there for you to find, and sometimes knowledge that is learned the hard way is the stuff that sticks,\" Gavin explained patiently, even though her hurt and bewildered eyes had him second guessing himself. \n\n\"What if I can't figure it out?\" \n\n\"Look,\" he began carefully cupping his hands around her face to make her look at him, before he dropped them to take her hands in his. \"One of two things are going to happen,\" Gavin told her looking down at her hands as he held them. \"One, you figure it out and everything gets better with your epiphany.\" \n\n\"And the other?\" \n\n\"You leave me,\" Gavin said so softly she barely heard it. But she did hear it and she wanted to un-hear it. She didn't even want to think about it! \n\n\"I'm not leaving!\" she said firmly, shaking her head to double her denial. \n\n\"Without this knowledge, our relationship will die sooner or later,\" he warned her. \"I can be only what I am, it's all I know or want. You have to be who you have to be, sooner or later those two will clash and then we will both...be unhappy.\" \n\n\"How do I even know what I'm looking for?\" she asked him as he stood up. \n\n\"I want you to think about what this lifestyle really is,\" he told her. \"You haven't done something very specific, you think you have, but if you look closely you will realize you haven't. The only hint I will give you is, Lena has told you. She doesn't realize she has told you, of course, as she is not in the lifestyle, and you have agreed to her that I need to do it, but it seems we both need to do it. It seems we are both guilty of the same thing, only we are on opposite sides of the same mistake.\" \n\n\"What?\" she blurted totally confused. The last thing she needed was Gavin speaking in riddles. \"That's absolutely no help at all! We've made the same mistake but on opposite sides?\" He nodded. \n\n\"Did you tell Lena what I need to do?\" Alex asked him. \n\n\"Of course not,\" he said with a shake of his head. \"Our lifestyle is our business, obviously she knows we are in a BDSM lifestyle from you, but no, I don't discuss it.\" \n\n\"Sorry,\" Alex said embarrassedly. She knew he was a very private man, she also never asked how he would feel about her telling Lena. \n\n\"We are best friends. She was right, we share everything,\" Alex attempted to explain. \n\n\"I don't mind who you tell,\" Gavin told her with an accepting shrug. \"I, personally, would prefer our life be ours, but I'm not embarrassed of our lifestyle. I'm just a private man.\" \n\n\"Yes, Sir,\" she nodded. \"Can you at least point me in the right direction?\" \n\n\"I would see people who know our lifestyle,\" Gavin told her as he stood in the doorway leading to his office. \"See how they are in their lifestyle and compare it to yours. Just keep in mind, Lena has already told you what you need to know...I heard her say it in this apartment.\" \n\n*** \n\nAlex had her sketchbook on her lap, she was just doodling. Nothing coming to mind to draw, as her mind was occupied by what Gavin had said. How was she to learn something if she didn't even know where to look? How would she know if she did learn it? Would there be some sort of \"ah-ha\" moment? \n\nLena walking in, without knocking, disturbed her thoughts, she smiled at Alex brightly as she came around the corner. \n\n\"You have a key to our place?\" Alex asked her as she sat down next to her with a plop. \n\nLena looked at her curiously, \"It's how I get in!\" she laughed, which caused Alex to laugh. \n\n\"What?\" Lena asked her, her smile fading. \n\n\"That's the exact thing I said, when my mother asked me about my key!\" Alex remembered. \n\n\"Bet that went over like a turd in the punch bowl!\" Lena laughed. \"Where's Dr. Stud?\" \n\n\"On a call,\" Alex told her. \n\n\"Did you guys fight it out, then fuck and make up?\" Lena asked her with wiggling eyebrows. \n\n\"Yes and no,\" Alex frowned. \"We discussed some things, not really a fight, but I feel like we fought. I'm exhausted and I feel horrible inside!\" \n\n\"What did he say?\" Lena asked pulling Alex into a hug that it looked like she needed. \n\n\"He said I need to figure something out,\" Alex told her from within her arms. \"Something specific I need to do, but I haven't done yet. He says without it, our relationship will die.\" \n\n\"Oh baby,\" Lena kissed her head consolingly. \"What is it?\" \n\n\"That's just it,\" Alex whispered. \"He wouldn't tell me, he said I had to figure it out!\" \n\n\"Did he give you a hint?\" Lena asked. \n\n\"Yes,\" Alex sat back and looked at her head on. \"He says you told me here in this apartment! He says, he and I are guilty of the same mistake, but on opposite sides.\" \n\n\"He realizes you are not Sherlock Holmes, right?\" Lena teased, scrunching up her face in confusion. Alex shrugged not finding any humor in something that could end the greatest thing in her life. \"What are you going to do?\" \n\n\"Ask Madelyn,\" Alex said firmly. \"She should know, she is like Gavin's mother and closest confidant.\" \n\n\"Ok,\" Lena shrugged. \"Go.\" \n\n\"I still can't leave the apartment,\" Alex frowned. \"He says just because I'm feeling better, doesn't mean I am better!\" \n\n\"Good man,\" Lena smiled. \"Too bad you are going to fuck it up, then I, the best friend, will have to swoop in and make him feel all better!\" Lena continued to tease, acting dramatically like she was kissing him, then faking with her tongue and hand to her mouth imitating her giving a blow job. Alex laughed at her. \n\n\"I have told you that I don't like you, right?\" Alex glared playfully. \n\n*** \n\n\"So,\" Gavin asked Lena as she sat at the table with them later that evening. \"How did it go?\" His smile told her he already knew. \n\n\"I'm guessing you already know,\" she pointed out. \"Otherwise you wouldn't have that little grin!\" \n\n\"Yeah,\" he shrugged. \"But I wanted to give you the opportunity to brag.\" \n\n\"Brag about what?\" Alex asked them. \n\n\"Your Dr. Stud here, got me an interview with Senator Danita Housley,\" Lena grinned. \"Seems she was looking for a personal assistant, and Gavin recommended me!\" \n\n\"Seriously?\" Alex smiled, looking at Gavin then back to Lena. \"That would be great for you! It would get you out of that stupid insurance office!\" \n\n\"I know right?\" Lena gushed. \"I would get to go to Washington from time to time, I could see some of the rest of the country as well! All expenses paid, of course!\" \n\n\"That's awesome!\" Alex gushed. \"Did you get it?\" \n\n\"Ask Dr. Stud!\" Lena smiled, pointing at him with her fork. \"I was told she wasn't making a decision until Monday!\" \n\n\"Gavin?\" Alex looked to him. \n\n\"How would I know?\" Gavin teased. \"It's not like I had to see her today for her medical check-up or anything!\" \n\n\"Gavin!\" Alex chastised he was being cruel in his joke about something this important. \n\n\"Ok,\" Gavin relented. \"She knows she got the job!\" \n\n\"I got the job!\" Lena laughed with a vigorous nod. \n\n\"Awesome!\" Alex smiled happily. \n\nIt was two days before Gavin gave her permission to leave the condo. Lena had gone back to the old apartment now as Alex didn't need round the clock care. When Alex got off the elevator Mike smiled broadly at her. \n\n\"You're alive!\" he laughed coming around the counter to see her. \n\n\"Barely!\" Alex laughed with him. \"It was close there for a while, but my fantastic doctor pulled me through!\" \n\n\"I was beginning to wonder!\" Mike teased. \"Here he had this new girl coming in, this little hot chickadee!\" \n\n\"Lena?\" Alex smiled. \"She's my old roommate, evidently they conspired against me while I was sick, to take care of me in shifts!\" \n\n\"Hmm,\" Mike smiled. \"I was beginning to wonder if Dr. Steward was going to collect all the beautiful women in Chicago for himself!\" \n\n\"Ohh,\" Alex smiled. \"Got a thing for my best friend?\" Alex remembered Lena's words about hot doormen, she knew Lena had to be talking about Mike, as the other two men were both in their mid to late sixties. \n\n\"No,\" Mike shook his head, but it was evident by his smile that he was interested. \n\nAlex walked over to him and pulled a pen out from the counter. She wrote the phone number down to her old apartment. \n\n\"There is her number,\" Alex smiled. \"She is single, she just got out of a relationship though, but she might be ready for a date.\" \n\n\"Really?\" Mike asked in disbelief. \"She's single?\" Alex nodded and wrapped her scarf around her neck and face, hiding her smile. \n\n\"Like I said, she is just out of a relationship, but hey, a date is not like marriage. It's just two people going out that need to eat...right?\" Alex gently prodded. Mike nodded as he looked to the number. \n\nHailing a cab outside, she took the long ride out to Madelyn's. She would start her search for what she needed to find there. Hopefully Madelyn would know right off so she could get their relationship back to the way it was. If that was possible.  \n\n\"There's my angel!\" Madelyn smiled as she opened the door. \"Alive and well!\" \n\n\"Hello Mistress,\" Alex said lowering her head. \n\n\"Come in sweetheart, before he finds out I left you out there to get another cold!\" Madelyn insisted. \"Then he will be over here busting my chops about something other than my blood pressure!\" \n\n\"Know about that, do you?\" Alex frowned. \n\n\"Of course I do!\" Madelyn told her, hooking her arm into Alex's and guiding her into the parlor. \"The boy was just worried sick about you!\" \n\n\"I know,\" Alex frowned. \"I should have just listened to him, but I was only thinking of the kids!\" \n\n\"I know,\" Madelyn beamed with a wink, showing she was not angry and understood why she did it. \"But you are ok now, so maybe the horse's ass will get some sleep! I've been on him to sleep more but he can't.\" \n\n\"And that's another thing,\" Alex started, stopping abruptly and forcing Madelyn to turn to her. \"With all due respect Mistress...take your damn pills!\" Alex said, her face firm but loving, her jaw set. \n\nShe thought of the worry on Gavin's face when he complained Madelyn was not taking her medication. \n\n\"We love you, and we want you to be around for a long time! That means, he can only have one stubborn bitch in his life. Right now, I have the monopoly on that, so you have to do what he says, take your pills!\" \n\n\"Oh my,\" Madelyn laughed at Alex's stance. \"You are quite the switch!\" \n\n\"I'm sorry Mistress,\" Alex frowned. She realized she probably went too far. \"But we do care about you, he loves you, so I just want him happy, and will do everything I can to make sure that happens. So if that means coming over here every day to make sure you take your pills, then so be it!\" Madelyn nodded as she moved in and kissed Alex's cheek. \n\n\"Yes, my lovely girl,\" she smiled. \"I will take my pills!\" \n\nAfter tea was poured and they talked about the weather, and Alex's class of artists, Madelyn sat looking at her. \n\n\"Well,\" Madelyn smiled. \"Why don't you get to why you came all the way up here, because I know it wasn't for my tea!\" \n\n\"No, Mistress,\" Alex smiled. She kept forgetting this woman was a Domme and could read her as easily as Gavin could. \n\n\"I have angered him,\" Alex said softly. \"He says there is something I need to do, but I don't have any clue as to where to begin!\" \n\nMadelyn smiled and nodded as she put her tea down. \n\n\"You know,\" Alex said immediately, reading the woman across from her. \n\n\"I do,\" Madelyn smiled. \"But alas, Gavin has asked me to stay out of it.\" \n\n\"What?\" Alex whined. \"He can't do that!\" \n\n\"He can, and he did,\" Madelyn said with a smirk. \n\n\"So you won't help me?\" Alex asked her. \n\n\"I will,\" Madelyn smiled. \"But not now. He's right, this knowledge is best left for you to learn.\" \n\n\"But you just said you would help me,\" Alex pouted, confused. \n\n\"I will,\" Madelyn assured her. \"I'm not going to sit around and let him fuck up the best thing that has ever happened to him because he is a stubborn jackass!\" \n\nThis got Alex to laugh. \n\n\"But we want you to find it out on your own,\" Madelyn told her causing her smile to diminish. \"If you can't, then I will help, but I believe you will figure it out. You are a smart, beautiful woman and I have no doubt you will figure it out and you will both be better for it!\" \n\n\"Can you give me a hint?\" Alex asked her. \n\n\"All kittens have one thing in common,\" Madelyn told her, after some thought, from behind her cup of tea. \n\n\"And that is?\" Alex pressed her. \n\n\"What you need to learn,\" Madelyn smiled. \n\nMadelyn sent Alex back in her car with her driver, she refused to let her take the cab back. Alex sat in the limo looking out the window deep in thought. How was she going to figure this out? She was really hoping Madelyn would know and tell her, but just like Gavin, she was going to make her sweat it out. At least she had the knowledge that Madelyn was going to help her, if she couldn't figure it out. \n\nHer mind drifted to something else Madelyn said, that she wasn't going to let him 'fuck up the best thing that has ever happened to him'. This statement made her smile, Madelyn was on her side. She would be a powerful ally, if she needed her. \n\nShe picked up her phone and scrolled through the contacts, her phone landing on Kelly's name. She didn't know a lot of subs in the life, Kelly was one, Elizabeth, was the other. She called Kelly. \n\n\"Hello?\" came the voice on the other end. \n\n\"Hey, Kelly, It's Alexandria,\" Alex said in the phone. \n\n\"Alex!\" Kelly gushed. \"How are you?\" \n\n\"I'm good! How are you?\" Alex asked back. \n\n\"I'm ok,\" Kelly told her. \n\n\"I was wondering if you would like to have lunch with me today? I need some advice from somebody in the know,\" Alex said looking at the driver. \n\nShe didn't know how much the driver knew, she assumed being around Madelyn he would know about the lifestyle but she wasn't sure so she kept it quiet. \n\n\"Lunch?\" Kelly asked. \"Would love to! What kind of advice?\" \n\n\"Kitten advice,\" Alex said still trying to keep it on the down low. \n\n\"You need my advice? You have the best Dom in the world!\" Kelly pointed out. \n\n\"I know,\" Alex agreed. \"But he is the reason I have to seek advice, he wants me to talk to other bottoms to learn something.\" \n\n\"Learn what?\" Kelly asked. \n\n\"The difference between me and you,\" Alex said with a shrug into the widow at her reflection. The girl in the widow looked just as lost as she felt, she also looked sick. She was surprised Gavin let her out knowing she still looked ill. \n\n\"Ok,\" Kelly said slowly. \"Sounds weird, but ok, is it alright if I bring some of the other girls?\" \n\n\"No, that would be great! I need to hear all I can!\" Alex said excitedly at the prospect of multiple points of view. \n\nMaybe if the girls could help her, she wouldn't have to go to Elizabeth. Alex didn't want Elizabeth to know she and Gavin were having problems. Even though Elizabeth left and has a new Dom, Alex still feared her return. It was like Elizabeth was the ex-girlfriend and Alex had to be wary she would learn she made an awful mistake, and try to come back. She would use the division between Alex and Gavin to weasel her way back in and Alex wasn't about to let that happen. \n\nThe driver opened the door and she got out. \n\n\"Thanks,\" she smiled at him. \"I'll take a cab from here.\" \n\n\"Can't do that ma'am,\" the driver apologized. \"I was told to take you home, so I'll wait.\" \n\n\"But I could be awhile,\" Alex explained. \n\n\"The Mistress said to wait, so, I will wait,\" he said firmly. Alex shook her head and then left him. \n\nWalking into the restaurant she scanned the patrons. Kelly waved from the back of the room. She was at a table with two other women. They must be the three subs Kelly's new Dom owned. She smiled and made her way to them. \n\n\"Alex,\" Kelly said hugging her when she arrived. \"Alex, this is Janna,\" she said introducing a blonde thirty something. \"And this is Lauren,\" she said introducing a young, dark headed Asian with a bright smile. \n\n\"They are subs for my Master, John,\" Kelly said sitting down with Alex. \n\n\"So, you are Alexandria!\" Lauren smiled. Alex nodded with a smile. \n\n\"You lucky little bitch,\" Janna teased with a bright smile letting Alex know she was teasing. \n\n\"I am,\" Alex nodded. \"Both lucky and a bitch!\" \n\nThis got all the girls laughing as a waiter brought Alex a wine glass to share the bottle already at the table. The girls chatted amiably about current events, about the wall that they all had seen which made Alex blush with all the compliments they poured on her like the free flowing wine they were going through. \n\n\"So,\" Kelly began. \"How can we help you?\" Steering the conversation back to what they were all there for. \n\n\"Well,\" Alex began. \n\nShe looked to the crisp white table cloth. Where does she begin? \n\n\"Gavin and I have been at odds lately, mostly my fault, but now he says I need to learn something. He wouldn't say what, only to say that it is something every sub does, but I haven't done!\" Alex explained never lifting her eyes from the table. \n\nWhen she did look up, she found all three girls with the same bewildered look. All three looked on her...waiting. \n\n\"That's it,\" she said when they didn't say anything, as they were still looking at her like she had more to say. \n\n\"Ok,\" Kelly said slowly, her brow showing her confusion. \n\n\"I know,\" Alex admitted. \"I guess I would just like to hear what your lives are like, then I will compare it to my life...somewhere, I hope, I will figure out what you guys have done that I need to do.\" ",
        "\"Well, Ok,\" Janna shrugged. She looked to Lauren. \n\n\"What do you guys do for your Dom?\" Alex asked her. \n\n\"Whatever he wants,\" Lauren said with a shrug. \n\n\"Well I know that, but when you argue, as that has been our current problem, how do you handle it?\" Alex asked them. This would be a good place to start as they had been arguing a lot and she felt it was the root of their problems. \n\n\"Uh,\" Janna snickered in disbelief. \"We don't argue with our Dom.\" \n\n\"Well, I mean when you have a disagreement, how do you solve it?\" Alex laughed. \n\n\"Uh, he solves it,\" Kelly smiled at her curiously. \"You argue with your Dom?\" \n\n\"I mean, not like every day or anything,\" Alex defended as the three other subs looked to one another in shock. \"You never argue?\" \n\n\"No, argument means immediate consequence!\" Lauren told her firmly. \"You should never argue with you Dom!\" \n\n\"What if you want to do something and he doesn't want you to do it?\" Alex asked them. \n\n\"Then we don't do it,\" Janna shook her head. \"A true submissive doesn't argue! How do you not get consequences if you argue with you Dom?\" \n\n\"I don't know,\" Alex said looking to Kelly who shrugged. \n\n\"Baby,\" Kelly shook her head. \"You are a sub, your Dom makes all decisions. You aren't supposed to argue. Communicate yes, but never argue. Once your Dom makes a decision that's it, you accept it. You're just supposed to trust he is doing the best thing for you! When you decided to be a submissive, you gave up that part of the relationship!\" \n\n\"So I can't argue?\" Alex asked them. \n\n\"Well,\" Janna smiled. \"Each Dom is different, but not generally. I mean, like Kelly said, communication is very important, and while the Dom makes the final decision, we can speak with him but in the end, we trust he is going to do what's best!\" \n\n\"I see,\" Alex frowned. \"I'm a bit stubborn.\" \n\n\"Like how stubborn?\" Lauren asked. \n\n\"He called me a mule once,\" Alex smiled. \"I don't think it was a compliment.\" \n\n\"How?\" Kelly laughed as she couldn't comprehend how a sub was allowed to argue. \"I mean, Honey!\" \n\n\"I know!\" Alex frowned. That was a big difference. These girls didn't argue with their Dom? That is all she did, most dealing with the way he spoiled her too much, or doing what she felt she had to do. From the wall and her long days, to working on the south side, to her stupid car. \n\n\"What do you argue about? Sex? Consequences?\" Kelly asked seeing the despondent look on Alex's face. \n\n\"No,\" Alex shook her head. \"It's mostly about the way he spoils me, I want to make my way on my own, pay my own bills and stuff. Things like the way he tries to protect me, from my long days working on the wall to driving my car, to teaching kids in a dangerous neighborhood!\" \n\n\"Why?\" Lauren asked. \"Why would you argue about bills?\" \n\n\"I don't like handouts,\" Alex defended, her ire creeping up, causing her voice to sound defensive. \n\n\"Ok,\" Janna smiled. \"I get that, but you also need to know that every Dom does something for us that is a reward.\" \n\n\"A reward?\" Alex asked. \n\n\"Well, Jesus, I've never had to explain it before!\" Janna laughed. She was finding that it was difficult to explain. \"Look, Master John is like my fifth Dom. I've had some pretty shitty Doms. I mean, they are Doms in the terms that they call themselves Doms! In reality all they are, are wannabes who want is a personal slave.\" \n\n\"Isn't that what we are?\" Lauren asked. \n\n\"Absolutely not!\" Janna defended. \"We are in relationships, not your traditional relationship, but it's a relationship nonetheless!\" \n\n\"With any relationship,\" Kelly continued. \"There is some give and take. How does Gavin reward you?\" \n\n\"He is always buying me things,\" Alex told them. \"Clothes, shoes, jewelry.\" \n\n\"No,\" Janna said with a shake of his head. \"If he is like most good Doms, the clothing is not always one of the rewards. I mean it can be a reward, but not always. That is what he wants you to wear, so he buys them because he wants that worn.\" She explained. \n\n\"Exactly,\" Kelly agreed. \n\nAlex nodded, that was something she remembered. He told her she couldn't wear anything he didn't approve. This made that possible because he bought it for her, she never had to question if it was approved, if he bought it. \n\n\"Tell us about your scenes,\" Lauren asked her. \n\n\"My scenes?\" Alex asked her. \n\n\"Well, when you are playing, whether he ties you up or he uses things on you, stuff that takes if from the vanilla world to our world, that is sometimes called a scene, or a session,\" Janna explained. \n\n\"Oh,\" Alex nodded. \"What do you want to know? Like what he does to me? Or what I do to him?\" \n\n\"No,\" Kelly assured her that they didn't need details. \"Dr. Steward is a fantastic Dom, we know by his reputation that he gives you what you need, but how does he act before and after?\" \n\n\"Well after, he always spoils me,\" Alex shrugged. \n\n\"That is the reward,\" Janna pointed out. \"See if you don't do something right, you won't get spoiled after, I mean if you disappoint him he won't encourage that behavior! A good Dom will communicate that you may have done something wrong, but it won't cause him to be angry, if he is a good Dom anyway, but it may keep him from spoiling you after.\" \n\n\"I see,\" Alex nodded. \"With Gavin, he likes to massage me, and bathe me. Sometimes he pampers me with little things, like shaving my legs or rubbing lotion on me. It's always so loving.\" \n\n\"That's called after care,\" Janna told her with an approving smile. Janna had been in the life for the better part of twenty years so she had lots of knowledge and it looked like Alex needed it. \"Some Doms do it, some don't. The good ones, do.\" \n\n\"Well, Gavin doesn't ever shirk that!\" Alex told her. \"He could be exhausted, but it still gets done!\" \n\n\"And how do you feel when he does it?\" Kelly asked with a smile. \n\n\"Loved,\" Alex said plainly. \n\n\"That's the emotional connection,\" Janna smiled nodding at Kelly. \"Our lifestyle develops strong emotional connection!\" \n\n\"Have you cried yet?\" Lauren asked her. \n\n\"Only when we fight,\" Alex frowned. \n\n\"That still blows me away, that you fight!\" Lauren pointed out shaking her head in disbelief. \n\n\"No, not when you fight. I have been in a scene and then right after, I cry!\" Janna told her. Alex furrowed her brow in confusion. \n\n\"See the emotional side comes out,\" Kelly explained. \"It could be happy tears or you may cry and not know why you are even crying! It's an emotional release. A good Dom will use all he has then to bring you down carefully from that.\" Alex nodded that she understood. \n\n\"You guys never talk back?\" Alex asked disbelieving that she was the only one that did. \n\n\"No,\" they said in unison letting Alex know that what they said was the truth. \n\n\"How is that possible?\" Alex asked them. \n\n\"Well, most Doms will break you if you do,\" Janna told her. \"Some subs need broken, or even want to be broken, but again, that is up to the Dom. Do they want you broken? It sounds like Dr. Steward doesn't want you broken.\" \n\n\"If for some reason you have to change Doms,\" Lauren began in warning. \"You had better make sure they don't mind being spoken back to! Otherwise, your life with be hellish!\" \n\nAlex nodded that she understood, but no, she was going to make sure she didn't have to change Doms! \n\n\"The difference in this life is the Dom,\" Janna told her. \"If you get a good Dom, then this life is very rewarding, very satisfying. If you get a bad Dom, then Lauren is right, this life becomes very hard, very unfulfilling.\" \n\n\"I know I have an excellent Dom,\" Alex told them, and they all nodded their head enthusiastically. \n\n\"His reputation alone says that,\" Kelly smiled. \n\n\"Look, Sweetheart,\" Janna began. \"Let's tell you what a good Dom should be, I mean I have had them all! A good Dom, a Dom in learning, and a downright shitty Dom!\" \n\nAlex nodded, like Gavin always told her, start with the basics and work your way from there. \n\n\"A good Dom, has extraordinary self-control, I mean it can be infuriating at times! You want to go faster, but he has the self-control to not go faster! To give you what you need, not what you want! That's what a good Dom does.\" \n\n\"Sometimes, what you need, is not what you want,\" Lauren said in follow up. \n\nAlex nodded, Gavin had that in spades. Self-control, the man could control her body like a marionette, and then even though he pleased her with multiple orgasm, not get off himself. Giving her what she needed, not what he needed. \n\n\"Next,\" Kelly began. \"After care, it's very important, sometimes more important than the scene! Good Doms do this without fail, sometimes it's what your Dom does, the pampering, but sometimes it's knowing when we just need to be snuggled.\" \n\n\"Oh God yes! Snuggling! Some Doms think that is what vanilla boyfriends do right before they go to sleep!\" Lauren contributed with a laugh. \n\n\"Also, rules have meaning,\" Janna continued. \"They aren't just something that they make up because that's what they want, and they rarely change, unless the sub communicates that she needs them changed. Which is why communication is so important, a shitty Dom doesn't care about what you think or feel. You are there for their enjoyment, not a mutual enjoyment.\" \n\n\"They think you are a prostitute,\" Lauren pointed out with a frown. \"They can do what they want because they are the 'boss'!\" \n\n\"Not so,\" Kelly added. \"Good Doms know that it is about us, not us, as in, us the subs. But us, as in, the Dom and the sub. One unit, one deriving pleasure from the other. A full circle!\" \n\n\"A good Dom, makes sure you both get what you want or need,\" Janna continued. \n\n\"A good Dom, takes your opinion into consideration, because it matters,\" Lauren told her. \n\n\"Oh, and communication!\" Kelly pointed out as she picked up her wine glass. \"Something that asshole Royce doesn't believe in!\" \n\n\"Please,\" Janna growled. \"That man is the picture of what a bad Dom is!\" \n\n\"If Gavin is the post card for good Doms, then Royce is the antithesis!\" Lauren growled. \n\n\"When you are in a scene,\" Kelly said trying to shake off the bad memory of her last Dom. \"A good Dom will check on you.\" \n\n\"What do you mean?\" Alex interrupted. \n\nShe didn't want to, as she was reveling in the facts they were giving. Granted none of it was really helping her, she knew some of what they were saying because Gavin was all the things they were saying. It was nice to see how the girls were bragging on Gavin in a way, without really bragging on Gavin directly as that would make him uncomfortable for all the praise. \n\nShe was concerned however that nothing was clicking to tell her what she needed to do, she just didn't know how she was going to know when she learned what he wanted her to learn. \n\n\"Has Dr. Steward ever stopped in the middle of a scene to ask how you are?\" Janna asked. \n\n\"Of course! How would he know if I was enjoying it?\" Alex asked. \n\n\"Trust me, he is not checking if you are enjoying it,\" Janna corrected. \"He is checking your mental state.\" \n\n\"My mental state?\" Alex asked. \n\n\"Honey,\" Janna smiled. \"We are subs, we are trying to please him. If we are being pleased we don't need to tell him, our bodies tell him naturally!\" Janna wiggled her eyebrows. Alex smiled as she knew what that meant. \n\n\"But because we are subs, we have an overwhelming need to please our Doms and we will suffer through something just for him,\" Kelly continued. \n\n\"A good Dom knows this, so if he starts asking questions it means he has recognized something in our body language that has alerted him to a possible problem, which brings on the questions. If he feels that we are in distress, a good Dom will end the session, immediately!\" Janna told her. \n\n\"There is absolutely nothing more important, than communication,\" Kelly told her, driving home the point by bringing it up repeatedly. \"Had Royce stopped to check on me that night, I wouldn't have spent time in a hospital! He never cared to check because he had no self-control, he didn't believe in communication and didn't care about me!\" \n\n\"Alex, this lifestyle we have, it can be dangerous. We do some things that push our bodies to the limit. That push our emotions and our minds to the limit, which is why we have to be in constant communication,\" Janna said patting Kelly's hand as she knew talking about Royce always pissed her off. \n\n\"Oh,\" Lauren piped up trying to change the subject from Royce. \"A good Dom is always humble!\" \n\n\"Absolutely,\" Janna nodded. \"Arrogance leads to assuming you know it all, nobody ever knows it all! You can be in this life for decades and you can have done a scene hundreds of times, but if your Dom is humble he doesn't take you, or what you are doing, for granted.\" \n\n\"Your safety is paramount,\" Kelly smiled shaking off her bad memories. \n\n\"Now,\" Janna smiled. \"Not that we need to ask, but does Dr. Steward do those things?\" \n\n\"Gavin does all of those things!\" Alex admitted. This caused her three lunch mates to groan in tease. \"Ok but none of that helps me! I know Gavin is a fantastic Dom! It's me that fucks things up!\" \n\n\"Ok,\" Janna smiled taking her hand because she realized Alex was getting frustrated. \"Now to be a good sub, there are some things that you must do, and one of those things is patience!\" \n\n\"I'm fucked then!\" Alex growled. \"I have like, zero patience!\" \n\n\"Oh my God, it's not the only thing! It is also something you can work on as you go! As are all the traits of a good submissive!\" Kelly laughed taking her hand as well. \n\n\"Patience is the be ability to wait for things to come, being pushy is something that usually angers the Dom, it doesn't mean put your needs to the side, it means knowing the difference between what is truly important, and what can wait,\" Janna told her. \n\n\"Having an open mind, you have to be able to accept something the Dom wants and learn new things,\" Lauren told her. \"The hard part of that is putting aside your fear to try those things! At least it is for me, something I'm still trying to learn, and I've been doing this for a couple of years. But that is also part of the trust we learn with our Master.\" \n\n\"Trust is critical, without it, there is no relationship. This goes beyond the scenes, beyond the sex. You have to trust not only your Dom, but yourself. To have the trust in yourself that you are making the right choices, both for yourself and your Dom,\" Janna smiled. She knew this was something she felt Alex may be lacking, no so much in her not trusting her Dom, but not trusting herself. \n\n\"Pride is also important, this isn't arrogance but more along the line of self-respect, you are important in the relationship, know that this isn't about degradation, this is about respect, both given and received,\" Kelly told her, the fire there in her eyes as she was specifically talking about Royce. \n\n\"We must never forget, we are subs, so service is very key, completing tasks set by our Doms. Now this can be sexual, but it doesn't have to be. It basically means anything we do to please the Dom, from sucking his cock, to cooking for him,\" Kelly smiled with a wink at the sexual reference. \n\n\"Gavin does most of the cooking,\" Alex frowned as she thought about it. \n\n\"Again, all of this varies by Dom!\" Lauren assured her. \"Maybe it pleases him to make you dinner, part of his pampering, so the service for you may mean allowing him to cook dinner when you think you should be!\" \n\nAlex nodded, that she understood, Gavin loved doing the little things for her, spoiling her. \n\n\"Here is a biggie,\" Janna smiled with a slight cringe, \"This is something I think you may be lacking, sorry, but its respect.\" \n\n\"I respect Gavin!\" Alex defended immediately. \n\n\"It's more than words, Honey,\" Kelly agreed with Janna. \"It's shown through your tone of voice, your manners...your attitude. It means during your arguments, which you should strive to avoid, you demeanor should always remain respectful.\" \n\nAlex cringed as this hit her like a Mack truck! 'Go fuck yourself', immediately came to mind from the Expo. Hardly respectful! \n\n\"Manners,\" Lauren told her. \"This was a big problem for me, saying please and thank you for sure, but it was the treating others around me with respect and courtesy. Remember we are a reflection on our Dom, if we aren't courteous, other Doms will get offended and that is an insult to your Dom.\" \n\n\"I used to treat Janna here like shit, but it was because I thought I was in competition with her! Mater John punished me when he caught me, telling me the entire time, how I treated others, should be the way he would want them treated,\" Lauren admitted softly with a twisted frown. \n\nAlex thought back to her first trip shopping with Gavin, the way the shop clerk treated her initially. That was until Gavin said something to her, right there in the store. Then her demeanor and manners changed immediately. Did Gavin remind her of this rule? \n\n\"A very important trait of any sub is loyalty,\" Kelly smiled at Lauren for her admission. \"This isn't necessarily about not cheating on your Dom, which goes without saying, but to follow your Dom's rules no matter what, whether he will find out or not!\" \n\n\"For instance, one time, my Dom was punishing me, he grounded me from sexual gratification.\" Kelly leaned into Alex. \"I couldn't cum! He did this for a week, told me ahead of time of the time frame, but then expressly forbid me to cum, that didn't stop him from playing with me, but I had to tell him before I came, so he could stop! Holy shit! Do you realize...just how hard that is to do?\" \n\n\"Oh my God!\" Alex gasped. \"Please Lord don't let Gavin do that to me!\" Alex laughed as she thought about how torturous that would be. \n\n\"Do you know how many times I was in the shower, my Master was gone, it would have been easy to rub one out!\" Kelly giggled. \"But he forbid it, so the loyalty was doing what was commanded. However difficult that may be, or how easy it would have been to get away with!\" \n\n\"Fuck me,\" Alex whispered as she shook her head. And here she went and dared him to find a punishment worse than spankings! 'Is that the best you can do?' echoed in her ears from her temper tantrum in the bed causing her to cringe. \n\n\"Acceptance of who and what you are, knowing your limitations yet keeping in mind that your limitations will change as you grow, and knowing they will, whether you want them to or not,\" Janna said after a few minutes of just sipping their wine. \n\nShe was watching the young sub in front of her absorb all this knowledge, she could tell by Alex's facial tics what she was doing and what she wasn't. There was a lot she wasn't doing by the way she kept frowning. \n\n\"Something you predecessor had,\" Kelly smiled bringing up the subject carefully. She didn't know the relationship between Alex and Elizabeth so she wanted to tread carefully as to not bring up a bad subject. \"Something I learned from her...grace. Not super important, but it's still something that needs to be said. Acting like a lady, appearing almost...I don't know...,\" \n\n\"Regal?\" Alex smiled thinking of Elizabeth. \n\n\"Exactly!\" Kelly laughed as they both understood. \"Just this whole demeanor of head held high, confident!\" Kelly demonstrated as she sat at the table. It reminded Alex to sit up straight. \n\n\"Yeah,\" Alex nodded. \"Elizabeth always made me think of royalty, how she kept her chin slightly raised, the way she sat, the way she presented herself to the public.\" \n\n\"Yeah,\" Kelly nodded. \"Which makes me wonder why she went with Royce over Gavin! When they were together they seemed so perfect! Grace for her, and gentlemanly for him. The way he opened doors, and the way he looked at people, like something from an old movie! I remember bumping into in, literally, at a party. Spilled my drink on him, I. Was. MORTIFIED!\" ",
        "\"Your Master was so gracious and polite. I was trying to clean him off, and he held my hand firm, ordered me to stop, which I did immediately. He pulled his handkerchief which I knew was expensive, and he dabbed my hand clean, while he held it. Then he wiped some off my face, all the while he stared at me intently causing me to melt like butter on a hot stove! I was like, holy shit! Seemed like such a little thing, but it was his demeanor, it was graceful.\" \n\nAlex smiled. Yeah she loved his manners for himself, and the way he treated others. Like holding the door open that night in the restaurant, for total strangers, in her test weekend to see if she would like this life. The way he pulled chairs out for her, or held her coat so she could put it on. Tucking her hand in his arm to guide her. She was damn sure he would toss his high priced jacket over a puddle to keep her feet from getting wet if the occasion called for it! \n\nThe girls all looked on Alex as she stared at the table. She shook her head. \n\n\"There are a lot of things I'm not doing,\" Alex admitted as she thought about it. \n\n\"Don't worry baby,\" Kelly smiled comfortingly to her. \"This is stuff you learn as you go, things you strive to do! That's the growth part, learning from your mistakes and striving to grow from them!\" Alex nodded. \"Keep in mind, part of being a good Dom is being patient. You have a good Dom, so he will give you time to learn these things.\" \n\n\"Does any of that help you?\" \n\n\"Yes, it helps me, but he said it was very specific,\" Alex stressed. \"Granted all of those things I need to work on, but none of that strikes a chord in me that tells me, this is it, this is what Gavin wanted me to learn!\" \n\nThe girls look to one another and sighed. They couldn't help her find what she needed to know. \n\n\"Relax,\" Kelly said outside in the street before they said goodbye. \"If he wasn't happy with you, he would move on.\" \n\n\"No,\" Alex disagreed. \"He says his subs always get to end it.\" \n\n\"Wow,\" Kelly smiled in disbelief. \"He is beyond a good Dom then, he is a great Dom!\" \n\n\"Why?\" Alex nodded, she agreed, but she wanted to hear Kelly's reasoning. \n\n\"He is going to guide you to improve your relationship, which I guess is why you are here,\" Kelly told her. \"Most Doms will end it if they feel like they aren't going to get what they want, or help you get what you want. If they can't bridge the gap, then they end it. Your Dom is saying, whatever it is, we can work it out!\" \n\n\"It also means, if he needs to change,\" Janna said hugging her. \"He will, the ultimate sign of a good Dom. The willingness to adapt to the sub.\" \n\n\"If it doesn't work out,\" Lauren teased. \"Let me know, I would love to have a great Dom like that!\" \n\n\"I'll kill you first,\" Alex teased back. \n\nShe waved at them as she got into the open door of the limo. Once inside the smile left her. She didn't learn anything that would help her. She learned she was a lousy submissive, as she didn't have many of the qualities they espoused. She also learned that she was probably the only sub that argued with their Dom and didn't receive some sort of consequence for it. That made her drop her head back on the seat and pound her fist on the door in guilt. That left one person. One she didn't want to go to. \n\nAlex thought about what the girls had said. It seemed their life was completely different than hers. They didn't argue, they didn't do what they wanted. Was Janna right when she said she wasn't a true submissive? \n\nKnocking on the door of her last hope, she wondered if this was the best choice. Elizabeth opening the door caused her to furrow her brow. \n\n\"Are you alright?\" Alex asked immediately. \n\nElizabeth looked thin and her eyes were hollowed. Her cheeks were sunken in and she looked exhausted and had dark circles under her eyes as it didn't look like she had slept in days. \n\n\"Yes,\" Elizabeth smiled. \"Just getting over the flu!\" Alex nodded but she didn't know if that was the truth. She was just getting over pneumonia and she didn't look that bad! \n\n\"Is Royce here?\" Alex asked from the hallway. If he was here, she would beg off and come back another time. She knew enough to stay away from that son of a bitch. Gavin was angry enough, if she put herself anywhere in the vicinity of that asshole willingly, there would be definite consequences. \n\n\"No,\" Elizabeth assured her. Alex was happy about that, and Elizabeth took her into the apartment. She ushered Alex in and then closed the door behind her. \n\n\"How have you been, besides the flu?\" Alex asked as she looked around Elizabeth's nearly empty apartment. \n\nShe thought back to the day Elizabeth moved out, she knew Gavin had said they had ordered furniture and Elizabeth was staying in a hotel until it was delivered. This apartment was sparsely furnished. No lamps, a single couch, no chairs for company. No dining room furniture, but there was enough room for lots of stuff. Her old apartment had more stuff than this apartment did! \n\n\"Sorry about the place!\" Elizabeth smiled as she saw Alex look around. \"I'm really not here very much anymore!\" \n\n\"No,\" Alex smiled. \"Yeah, you're at Royce's and all.\" \n\n\"Yeah,\" Elizabeth semi smiled. Alex furrowed her brow at the way Elizabeth seemed to look away. \n\n\"So, what brings you by?\" Elizabeth asked her as she scratched at her skin at the bend of her arm. \n\nAlex gave her a solid look over, she seemed jumpy. Skittish even. She seemed to start one thing only to be distracted by another. Picking up some plates only to move them from the coffee table to an end table, distracted by moving to pick up newspapers. \n\nShe had lost at least fifteen pounds, weight she had no business losing. Yes, the flu could make you lose weight, but this was more than she would have figured. She had lost the regal look that had attracted Alex to begin with. Something she had just bragged on her at lunch. \n\n\"I just wanted to see you,\" Alex said backing out of her original idea. She was going to ask about Gavin but abandoned the plan. Something inside of her told her to, her instinct maybe. \n\n\"Oh,\" Elizabeth smiled. \"Have a seat.\" \n\nAlex smiled and sat down next to Elizabeth only to have the dark haired goddess stand up and move to pick something else up and then abandon it. \n\n\"Can you sit down for a minute?\" Alex asked her, twisting her brow in concern. \"You seem really odd!\" \n\n\"Of course, it's just I have so much to do!\" Elizabeth laughed as she sat down again. \"I have to find a job and what not.\" \n\n\"What happened to your old job?\" Alex asked her. For a fleeting second Elizabeth seemed afraid. It flashed in her eyes as she looked at Alex. \n\n\"Oh, umm,\" Elizabeth shrugged. \"Well, if you must know, I can't be with a senator and be a lobbyist. Royce thought it would be best, for appearances, to not be with a lobby for fear of someone thinking I have influence over him.\" \n\n\"Makes sense,\" Alex agreed as she nodded her head while staring Elizabeth down. Elizabeth smiled that Alex understood. \"Are you going to move in with him?\" \n\n\"Eventually,\" Elizabeth told her. \"Right now it's all about appearances! His father wants it to look like we are dating and what not, then move in, then get married.\" \n\n\"You're getting married?\" Alex asked shocked and concerned. \n\n\"Eventually,\" Elizabeth shrugged. \n\n\"I thought you weren't the marrying type?\" Alex asked her remembering Gavin's statement. \n\n\"I'm not,\" Elizabeth smiled with a wink. \"But Royce has eyes on the White House! Can you believe it? He is going to be President of the United States! And history says, single men do not win the White House! So he has to be married and have children. You know the whole family man that the conservatives love so much!\" \n\n\"You are going to have kids with him?\" Alex gasped in disbelief. \n\n\"Maybe,\" Elizabeth shrugged. \"Maybe we adopt, that would be another feather in his cap. That he was willing to take in some unfortunate.\" \n\nThe words she spoke reminded Alex of just how phony this man was, and it appeared Elizabeth was the same. Only doing things for appearance sake to get elected. How did her moral compass get so askew? \n\nAlex nodded, but again, Gavin's words rung in her ear. Royce's family didn't have the clout to take the White House. \n\n\"He says once he is President, then I can think about running for office! Like Hillary!\" Elizabeth gushed excitedly. She continually scratched at her arm, her face twisting in pain from time to time. \n\n\"You want to run for office?\" Alex asked her, disbelief filling her voice while she watched the formally exotic woman deteriorate before her. \n\n\"I can be a Senator!\" Elizabeth defended, her anger quick to show itself. Something that Alex rarely saw before. \n\n\"I'm not saying you can't, I just didn't know you had such high goals!\" Alex tried to soothe. \n\n\"I'm a lot smarter than people give me credit for!\" Elizabeth growled as she stood up and began to pace. \"People always think I'm some sort of idiot! But I'm not, I've made plans to protect myself from being betrayed. Just wait and see, he tries to screw me over...I'll bury him so fast it will make his head spin!\" \n\n\"Whoa! What are you talking about?\" Alex asked, standing up to corral the babbling woman. \n\n\"Nothing,\" Elizabeth said as she realized she said more than she should. \n\n\"Are you ok?\" Alex finally asked her straight out. \n\n\"Yeah,\" Elizabeth nodded with a smile taking Alex into a hug. \"Just stressed, the whole no job things has made money kinda tight! I've never had to worry about money before, Royce won't give me any money till the end of the month, the whole not wanting to look like he is paying off things for a lobbyist, you know?\" \n\nAlex shook her head as she had no idea what she was talking about. Politics was not her thing. \n\nElizabeth and Alex chatted about various subjects for a while. Alex's teaching was talked about in great detail. All the while, Alex watched her. Elizabeth was off, something was not right about her. Gone was the soft, quiet, demure woman. Gone was the stunning beauty and the happy eyes. It was replaced with a tired and somewhat haggard woman, who had problems just sitting still and focusing in on the conversation at hand. \n\nGuiding Alex out, she hooked her arm in Alex's. \n\n\"I'm so glad you came by, but next time call. That way I'm sure I'm here! You just happened to catch me picking up a few things,\" Elizabeth explained. \n\n\"Sure, no problem!\" Alex agreed. At the door, Elizabeth turned her. \n\n\"Hey,\" Elizabeth looked to the floor. \"I have a huge favor to ask!\" \n\n\"Shoot,\" Alex encouraged. \n\n\"Is there any way you could...I don't know...loan me some money till the end of the month? I will pay you back when Royce starts to help or when I get a different job!\" Elizabeth asked, her face shading red in humiliation in having to ask. \n\n\"Oh, of course, I totally understand! Remember, starving artist here!\" Alex smiled knowing how hard that was to ask. She began to dig into her purse. She hated asking for money, even from her Dad, who always insisted she come to him when she needed it. So to have Elizabeth ask, Alex knew she was in desperate need. \"How much do you need?\" \n\n\"Whatever you can spare, don't put yourself out or anything,\" Elizabeth told her, looking into Alex's purse with her. \"It's just taking a little longer to find a decent job! I mean, all I get are offers to be a lobbyist! I'm good at it, but I can't do that and ruin Royce's chances at the White House!\" \n\n\"No, it's nothing,\" Alex said with a scoff that she didn't understand. \"How much?\" \n\n\"Well I don't know you financial situation,\" Elizabeth told her apprehensively. \"Whatever you are comfortable with, like I said, it's just until the end of the month!\" \n\n\"Well, I have a grand total of one thousand fifty three dollars and twenty seven cents in checking!\" Alex laughed looking at her checkbook. \"I have more in savings but I need that for a new car!\" \n\n\"Oh, um,\" Elizabeth looked to the floor. \"Could you spare five hundred?\" \n\n\"Yeah,\" Alex nodded. She scribbled out a check and handed it to Elizabeth. Elizabeth took her firmly in her arms and squeezed her. \n\n\"Thank you so much!\" she said in her ear. \n\nShe leaned back and kissed Alex on the mouth. Not a quick peck, but more of a lingering kiss. Alex forced herself to step back breaking the kiss, like it was from an old boyfriend, she smiled apologetically at Elizabeth who seemed a bit dejected that Alex didn't kiss her back. Alex backed away after the kiss broke, it felt weird now, to have Elizabeth kiss her in this way. \n\nYes, she had made out with her, and yes, she had gone down on her and vice versa but this was different. This was not something done in the heat of passion. This had the feel of a first move by an amorous date. Alex moved away from her, and it showed in Elizabeth's eyes she was hurt by the distance Alex was putting between them. Alex waved and quickly moved towards the elevator. \n\n\"Hey, I hope you get to feeling better,\" Alex said waiting at the doors for the elevator. \"Do you want me to have Gavin come by and take a look at you?\" \n\n\"NO!\" She nearly yelled. \"No,\" she recovered with a smile and said her denial softer. \"The last thing I need is Gavin and Royce squaring off! I mean did you see the way they looked at each other at the Expo?\" \n\nAlex nodded and cracked a smile at her. \n\n\"It was like the old west! Billy the Kid type shit!\" Elizabeth teased. \n\n\"I agree,\" Alex nodded as the door began to open. \"Probably best to keep them separated.\" \n\n\"Absolutely!\" Elizabeth smiled. \"Hey, just one more thing...,\" Alex stopped and looked at her. \"Don't tell Gavin, please?\" Elizabeth said holding up the check. \"That would bring a lecture I don't need right now!\" \n\n\"Ok,\" Alex agreed with a single nod. She got on the elevator but something was gnawing at her. She couldn't quite place it but nothing about Elizabeth seemed right. \n\n*** \n\nTurning the key to her old apartment she pushed her way in. \n\n\"Hey!\" she called out in warning, in case Lena had company. \n\n\"Hey!\" Lena called back. \"Living room!\" \n\nAlex walked in and found Lena where she normally was, reading. \n\n\"What you got now?\" Alex asked as she peeled her layers of clothing off. \n\n\"The Prisoner #5141133, same guy, this one is creepy as shit!\" Lena smiled putting the Kindle aside. \"He gets better with every book!\" \n\n\"Cool,\" Alex said as she sat next to her with a disappointed frown. \n\n\"I sense a disturbance in the force!\" Lena teased. \n\n\"I have been sent on an impossible mission,\" Alex shrugged her frown deepening. \n\n\"Give,\" Lena said pulling Alex's head into her lap. This was what they called their \"therapy\" position. In this position you spilled it all, whether you wanted to or not! Alex did. All of it. Gavin's instructions, visiting the kittens at the restaurant then the odd meeting with Elizabeth. \n\nAll the while Lena stroked her hair, running her fingers through it softly. Never interrupting, just letting Alex get it all out. By the end Lena was frowning while she nodded. \n\n\"Ok, that look says you know something!\" Alex pointed out. \n\n\"I don't know anything!\" Lena defended. \"I mean, shit, I don't know anything but what you tell me about the BDSM lifestyle or whatever you call it. And there is no way Gavin says anything to me! I mean the man is so private!\" \n\nAlex nodded, but there was something there and she wanted to know what it was. \n\n\"The look on your face has me worried,\" Alex pointed out. \n\n\"Well, it's just,\" Lena started. \"Hell I don't know!\" \n\n\"Go on,\" Alex encouraged her as she sat up and looked at her full on. \n\n\"Well, just listening to you since you and Gavin got together, and then what the three girls said, it just doesn't add up to what I thought being a submissive was,\" Lena shrugged. \n\n\"What do you mean?\" Alex asked her. \n\n\"Well, Honey, don't take this the wrong way,\" Lena tempered carefully. \"But they sound like submissives, you don't.\" \n\n\"What?\" Alex asked. \n\n\"Well, they don't argue, they do what their Master wants...God I can't believe you call him Master!\" Lena stopped. \n\n\"I don't call him a Master,\" Alex said firmly. \"Gavin would never allow someone to address him that way! I don't know why, I just know he wouldn't!\" \n\n\"What do you call him?\" Lena asked tilting her head to the side. \n\n\"Sir,\" Alex shrugged. \"I call him Sir...or Gavin.\" \n\n\"Well, see? That doesn't seem very submissive?\" Lena pointed out. Alex leaned back against the couch. Lena saw the look on Alex's face and tried to defuse the upcoming argument. \n\n\"What I mean to say is, I thought submissives were supposed to be docile, you argue with him every chance you get. I thought submissives were supposed to be under someone else's control. They did what the Dom or Master or Sir wanted! You won't even let him loan you money! You take a job knowing it will make him worry, you do everything you want to do, and then not let him do anything for you, except sex. There you let him do what he wants but it sounds like you are the one getting the most pleasure. Maybe I'm wrong, but it doesn't sound like you are submissive at all!\" \n\nAlex closed her eyes and began to shake her head as a tear came out. \n\n\"I'm sorry baby if I hurt your feelings,\" Lena said picking up her hand. \n\n\"No,\" Alex said opening her eyes. \"Out of the mouth of babes!\" Alex smiled as it all clicked. \n\n\"What?\" Lena asked her confused. \n\n\"Gavin said you told me what I needed to know, you didn't know it but you did. He said we were on opposite sides of the same mistake!\" Alex smiled, her tears streaming down her face. Relief filled her as she figured it out. Her \"ah-ha\" moment smacking her. \n\n\"Ok, make sense because you are crying and you rarely cry and that has me scared shitless!\" Lena demanded. \n\n\"I said the words, but am not doing the action. He is doing the action, but not saying the words!\" Alex explained. \n\n\"Please tell me there is more, because now it sounds like you are the one babbling!\" Lena begged. \n\n\"In the very beginning, I submitted myself to him, I made the speech that I would be his submissive, but like you pointed out, I wasn't being the submissive! I was just role playing! I wasn't living the lifestyle, that's what Gavin has been waiting on, for me to learn that I wasn't living as a submissive, while I said the words...I wasn't backing it up with action!\" Alex continued to explain. \n\n\"Now he has been doing the opposite, he has been showing me he loves me, but he isn't saying 'I love you'!\" Alex shook her head. \"Both making the same mistake, just on opposite sides! Me all words, no action. Gavin all action and no words!\" \n\n\"Holy shit!\" Lena gasped. \"That's it?\" Alex shrugged and nodded. \"So why didn't he just punish you?\" \n\n\"You mean break me?\" Alex laughed. \n\n\"Isn't that a part of it?\" Lena shrugged. \n\n\"He doesn't want me broken,\" Alex smiled with a shrug. \"He has to be who is, but he wants me to be who I am. I have to willingly give him my submission!\" \n\n\"So what do you do?\" Lena asked, happy that Alex figured out what she wanted to figure out. \n\n\"I have to decide on whether I am going to submit or not!\" Alex frowned. \n\n\"What if you don't want to?\" Lena asked. \"Will Gavin still accept you as just his girlfriend, without all the kinky sex stuff?\" \n\n\"That I don't know!\" Alex whispered as the thought about it. \"He says that being a Dom is all he wants to be.\" \n\n\"Uh-oh,\" Lena said. \n\n\"No shit,\" Alex agreed. \n\n*** \n\nAlex walked into the condo but found it empty. She plopped down on the couch and put her head in her hands. How could she be so blind? This was what he was waiting on, for her to realize she had never fully committed to the lifestyle. \n\nShe picked up her phone and looked at it for a moment. She called him, she hoped he wasn't with a patient. Normally he would text her if he was, but then again maybe he was giving her time and space to soul search. ",
        "\"Hey Beautiful,\" Gavin's warm, soft voice made her melt. \n\n\"Hello Sir,\" she smiled as she leaned back into the couch. \"I'm home.\" \n\n\"Ok,\" he said softly. \"I'm at the store, getting groceries.\" \n\n\"I could have done that,\" she told him. \n\n\"You were busy,\" he told her. \"Did you learn anything?\" \n\n\"Yes Sir,\" she nodded as her hands began to shake. She was now scared. She hadn't been scared in a long time, but she was now. \n\n\"What did you learn?\" he asked her. \n\n\"I have not committed to this lifestyle,\" she whispered. \"I have said the words, but have not fulfilled them.\" There was a long silence that made her hold her breath as she waited for confirmation. \"Is that what you wanted me to find out?\" \n\n\"Yes,\" he said after agonizing seconds that seemed like hours to her. \n\n\"I'm sorry,\" she whispered. \"It never dawned on me!\" \n\n\"I know,\" he said softly. \"The question is, what are you prepared to do?\" \n\n\"What am I prepared to do?\" she smiled. She could hear the teasing in his voice, she knew, he knew she was scared, so he was bringing back a long ago conversation in the park. When she asked him the same question, only hers involved marriage. \n\n\"Yes,\" he laughed when she giggled. \n\n\"I have a question for you, before I decide,\" she said softly. \n\n\"Shoot,\" he said firmly, his Dom coming through the phone. \n\n\"What if I don't want to be a sub?\" Alex asked softly, the fear of his answer causing her voice to shake. \"Could we have a normal relationship? A vanilla one?\" \n\nThere was another long silence as the tears ran down her face, she knew that the silence was a bad sign as was the deep sigh she had to endure. \n\n\"First off, you can never be vanilla!\" He said firmly. \"You, are so beautiful, so full of life and love, vanilla you could never be!\" Her heart broke, his voice was so strong, so loving. \n\n\"In all honesty,\" he said softly now. His voice barely caring over the phone. \"I don't know, it has been so long since I have had a vanilla relationship.\" \n\n\"I understand,\" Alex cried, she tried to keep her shaking hand over the mouthpiece as she bent at the waist as the pain of their apparent breakup riddled her body with the shakes. She was trying to keep her pain from him. \n\n\"For you?\" Gavin said in her ear. \"I'll try anything to keep you in my life!\" \n\n\"What?\" she let her tears fall now openly her voice cracking. \n\n\"I'll take you however I can get you,\" Gavin said to her. \"Vanilla or otherwise, you bring something to my life I hadn't had in a long time!\" \n\n\"What is that?\" She was crying happy tears now, wiping her face repeatedly as they fell. \n\n\"A difference,\" he said with a soft voice. \"You have made me realize, I can still make a difference, and you make me want to do just that!\" \n\nAlex cried, hard tears. Happy tears. Gavin said nothing, but he felt helpless as he stood in the middle of aisle nine at the grocery store listening to her cry. His own eyes watering, Alex wasn't the only one afraid. Gavin was in the middle of a crowded store fearing as well. \n\n\"I'll be home shortly,\" he said as a woman cast a wary glance at him as she made her way by him. \n\n\"No rush,\" Alex smiled through her tears. \"I'm not going anywhere! I love you Gavin!\" Again there was a long pause before he spoke. \n\n\"Don't worry, whatever our problems are, we will work them out. Together,\" he said softly causing her to burst into fresh tears. \"See you soon.\" \n\nWith that he hung up the phone and Alex curled up into ball on the couch, the weight of all the pain, all of the fear, all of the regret was lifted off her soul and for the first time in weeks...she felt...happy! \n\nGavin stood at the door of his condo, his key in his hand. His hand shook slightly and he looked at it. Fear. Fear for his heart being broken now. He was about to break a promise he made to himself so many years ago. Not since Carla had he ever committed to something that would cause him the pain that he felt with Carla. \n\nIf he walked through this door, he would be breaking that one solemn promise to never let anyone close enough to hurt him again. He shook his head, he could turn get back on the elevator and go to Madelyn's and call and tell Alex he had a change of heart. He could only be a Dom. If she wouldn't submit fully, she should leave. Then again, he smiled at the door, maybe Alex already knew, she could already be gone. Gavin shook his head. Not Alex, not his Alexandria. She walked into this life fearlessly, she would not back away. He would follow her lead...trust. \n\nOpening the door, he expected her to be on the couch, but she wasn't. He set the groceries on the table. \n\n\"Alex?\" he called out. He received no response, so he checked his phone to see if she texted him and he didn't hear it. Nothing. \"Alexandria!\" He called out again. Still nothing. \n\nHe walked to the bedroom, maybe she was in the shower. He found the bedroom doors closed. He took the handles and twisted but didn't push them open. He forced a deep breath into his lung before pushing on the doors. What was he going to do if she wasn't here? What was he going to do if she decided that she couldn't be with him with the knowledge of his desire of being a Dom? \n\nOpening the doors, his eyes fell upon her. She was naked in the submissive position. Her hands outstretched, in her open palms was the flogger. \n\nGavin smiled and came to her, he sat down on the bed but said nothing. She didn't move. \n\n\"I submit to you, Sir,\" she said with her head down. \"I belong to you, for your pleasure, for your companionship...for your needs.\" \n\n\"I submit to you, fully, completely,\" Alex continued. \"What would please you my Master?\" \n\n\"First off,\" Gavin smiled as he stroked her soft hair. \"What is with the flogger?\" \n\n\"I have been very naughty,\" Alex explained. \"I have disobeyed, I have argued, I have displeased you, I have disobeyed your desires. I await my consequences, and your guidance.\" \n\nGavin said nothing, he just looked upon her. She could feel his eyes on her but she didn't move. It took a lot of willpower not to look over at him. Gavin softly reached out and took the flogger from her. \n\n\"Assume the position,\" he said softly. \n\nShe immediately obeyed and took a stand at the foot of the bed next to him. She put her palms down on the mattress and spread her legs to give herself a firm base. In her mind she wondered just how many strikes he would give her. She tried to do the math in her head but she couldn't even think of how many times she argued, or how many times she went against his rules, or how many times she flat out disobeyed him! \n\nShe figured twenty per incident but that would put her in the hundreds! He got up and moved behind her, he then gently stroked her backside with his fingers causing her to fluster in her thinking. His gentle touch got her thinking other thoughts.  \n\n\"Count them out,\" he said firmly. \n\n\"Yes Sir,\" she whispered. \n\nShe wanted to ask how many he would give her, she knew he wouldn't give them all tonight as her body wouldn't be able to handle the number. Her legs began to shake and his hand stopped moving on her backside when he felt her tremble. \n\n\"Are you afraid?\" he asked her. \n\n\"No, Sir,\" she said in a whisper. \"Angry at myself for disappointing you!\" \n\n\"We begin,\" he warned her. \n\nShe heard the strike on his hand first, to measure the proper power he wanted. So controlled, it made her think of Kelly and the girls, on what a good Dom was, one with great self-control. Gavin had that, he was displaying it right now. \n\nThe strike caused her to flinch as she was thinking about something other than her impending punishment. \n\n\"One,\" she remembered. She felt his hand back on her backside. The flogger was placed on the bed. Perhaps he wanted to use his hand. \n\n\"Stand,\" he ordered her. She did so and waited. \"Turn to me.\" She obeyed. \n\n\"You have pleased me a great deal tonight, your actions were perfect,\" he smiled. \"I think no further punishment is necessary.\" \n\n\"Yes Sir,\" she smiled. \"Whatever you wish.\" \n\n\"Some things to clarify,\" he said coming to her closely and putting his hand to her face. \"One, do not ever call me Master. Some prefer it, I do not. Nor are you to address me in that fashion to anyone you talk to.\" \n\n\"Yes Sir,\" she smiled. She knew he wouldn't like it, but she wanted to go all the way. \n\n\"Two,\" he continued. \"We need to communicate more clearly, both of us.\" \n\n\"Yes Sir,\" she smiled as she nodded. \n\n\"So let me communicate very clearly to you, so that there is no debate,\" he said putting his lips close to hers. \"I love you.\" \n\nGavin took her breath away with his kiss, it was powerful, it was generous, it was loving. It was all that Gavin embodied. When he pulled his lips off and she let her eyes flutter open. \n\n\"Thank you, Sir,\" she gasped breathlessly."
    ],
    "authorname": "CJT",
    "tags": [
        "oral sex",
        "spanking",
        "maturbation",
        "anal toy",
        "bdsm"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/secret-smiles-and-three-little-words-pt-23"
}