{
    "title": "The Baseball Trip Pt. 07",
    "pages": [
        "Seventh Inning \n\nSeventh inning stretch! Everyone is over the age of 18. \n\nDespite my roommate's insistence that we were to stay separate, we all woke up wrapped around each other. Kelsey and Sarah cuddling in one bed. Julia and I spooning in the other. \n\nThis was how our baseball road trip had been going. Sexy Sarah had said that she had a boyfriend, but then she started the whole thing by grinding on my lap. Gorgeous Kelsey was virginal and innocent, and then she was neither. Julia and I were in the friends' zone, then suddenly we were in the friends-with-benefits zone. \n\nEvery time someone said that the sex was over, that they were moving on from the physical, they followed that up by going even further than before. And so it would be again. \n\nAfter everyone took a turn in the shower and got dressed, we made our way downstairs. We were about two hours out from a day matchup in Pittsburgh, our second to last baseball game of the trip. That was plenty of time for something of interest to happen and I couldn't even guess at the possibilities. \n\nKelsey, my best friend's teenaged little sister, had been worked up since the day before when Julia had called an end to the beautiful blonde's frolicking. Of course, Julia, my tomboy roommate, herself, had said that she was looking for more. And then sexy, buxom Sarah had also made things more interesting, despite her supposed devotion to her on-again-off-again boyfriend. \n\nHonestly, I could see any one of them making a move. \n\nThen, before we even got to the parking lot, Kelsey surged forward and called, \"Backseat!\" \n\nSo that answered my question. Kelsey was wearing a tight white, ribbed top and a pink skirt that went down to about mid-thigh. She grabbed my hand and pulled me along with her, as if I needed the encouragement. \n\n\"Ben and I are sitting in the back.\" \n\n\"OK, OK. Sheesh,\" Julia said and shrugged. We were the only car on earth where everyone preferred to be squished in the back rather than comfortable in front. \n\nBy now we were all used to the overstuffed situation in Julia's tiny Beetle. I was sure that even a Smart car would seem luxuriously spacious to me after this trip. As usual, Julia took the wheel, giving Sarah the passenger seat. Kelsey climbed in first, settling - at least for the moment - in what little remained of the middle. I got in after her and we were on our way. \n\nWe hadn't gotten to the highway before Kelsey unbuckled herself and started to shift over. \n\n\"I'm not comfortable. I'm going to sit on Ben's lap,\" the beautiful teenager told the car. \n\n\"Yyyyyup,\" Julia said. \n\n\"As expected,\" Sarah said. \n\nThey kept their eyes on the road. Even if either had wanted to look back, they would have only gotten an eyeful of luggage and not much else. Kelsey lowered herself onto my crotch. I'd been hard since the morning. Since the night before. Honestly, I'd been hard for seven straight days, despite (maybe because of) all the action I'd been getting. At this point, my gun was permanently cocked. Er, my cock was permanently... Anyway. This was hardly the time for wordplay, an absolutely stunning blonde girl was sitting directly over my schlong. \n\nSpeaking of which, something felt a little... different about the way she was sitting. Like it was warmer? I couldn't figure it out. \n\nKelsey sat up a bit, I assumed just to settle herself more directly on my erect member. Instead she reached back, grabbed at my zipper and slid it down. Before I could even gasp, she fished around in my fly and pulled my bare cock right out of my pants. \n\n\"Kelsey!\" I shouted, despite myself. \n\n\"Don't worry, I've got this,\" Kelsey said. She lifted up the sides of her skirt, almost like doing a curtsy, then sat back down on my crotch. \n\nThis time I couldn't miss the difference. Her bare skin landed on mine. Warm wetness kissed against my cock. That little minx wasn't wearing any panties! Clearly, skirts are the greatest invention ever. \n\nKelsey made a sort of guilty giggle as she pressed against me. My hardness squeezed against her softness. \n\n\"Much better,\" she said, \"Wait. One last thing.\" Kelsey lifted herself up slightly again. She reached behind herself, grabbed my cock, and slid it against her pussy lips. I felt my head nestle at her opening. Then Kelsey let go and lowered herself down. \n\n\"Yeah... Now that's comfortable,\" Kelsey said. I was buried in her to the hilt. So much different than the virginal girl I'd entered only days before. Still plenty tight, but now sopping wet and ready for my stiffness. \n\nDaintily, Kelsey adjusted her skirt so it was covering everything. Her pussy clutched at my cock. We both sighed together. \n\n\"Holy fuck!\" Sarah cried, \"Are you two...\" \n\n\"Yup!\" Kelsey said, \"He's in me right now. And it feels sssssssooooooo good.\" \n\nJulia did her best to glance back, then quickly looked back at the road, swerving as someone honked. \"No fair! You didn't tell me we could do THAT back there.\" \n\n\"Finders keepers,\" Kelsey said, giving my cock another squeeze. \"Now I'm going to ride this monster until I cum and cum and cum.\" \n\n\"Ohhhh. That sounds nice,\" Sarah said, wistfully. \n\n\"I hate you so much right now, little slut,\" Julia said, \"I'm so jealous.\" \n\n\"There's always another drive,\" Kelsey said, \"Or our hotel room...\" \n\nI could hear Julia's teeth grinding all the way in the back seat. Kelsey lifted herself slowly, then lowered herself back down. I was wrong before about skirts - vaginas are clearly the best invention ever. \n\n\"Oooooo... Never done it this way before. Good in a whole different way, you know? Not exactly sure what I'm doing, though.\" \n\n\"Just do what feels good,\" I said, \"Trust me, you don't have to worry about me.\" \n\n\"Yeah,\" Sarah said, \"Just work him the way you like.\" \n\n\"Gaaahhhhhhh I feel ssssooooo full,\" Kelsey said, \"He's like... in me so deep. So big. My poor little pussy's never gonna be the saaaaaaaaame. Ruined me for every other... cock I'll ever have.\" She was moving steadily now. Up and back. My hands shot out and grabbed her tiny ass, just holding on for the ride. \n\n\"Gonna go a little faster now... OH! Getting clllooooose... AH! ah HA!\" \n\nThe dress wasn't hiding anything at all now. Kelsey was bucking back and forth like riding the mechanical bull. Our sexes sliding, squick squick squick. The smell heady and deep. Kelsey kept grunting. Gasping. Describing her pleasure, like the world's greatest play-by-play. \n\n\"OH! Just came there. Little one. Still going though. Still... still fucking him. Riding that... that cock. oh YES! Another one. Bigger that time. So good. Don't think I'm stopping... Gonna just keep... keep riding you till you burst!\" \n\nLike I said, Kelsey was a talker. And a bit of a narrator, now that I think of it. \n\nWith nothing to hide now, she flipped the dress right up and shot her hand down to her clit. Kelsey leaned back, her lips back by my ear. Her movements slowed and she pressed her button. \n\n\"Gonna... gonna cum again. And again and again and again. God how did I ever live without this amazing COCK? I just want it in me all the time. F... feel empty without it. You gonna keep fucking me, Ben?\" \n\n\"Yeah.\" \n\n\"You gonna fuck your little Kelsey forever?\" \n\n\"Yeah Kels. I'm yours. Yours forever.\" \n\n\"Mine and Julia's and Sarah's,\" Kelsey said, \"You're ours, you got that?\" \n\n\"Yeah.\" \n\n\"Hrrrrrrrrrr...AHHHHHHHH!\" Kelsey's whole body straightened and shivered. Then she popped back up again and started riding me all the harder. Hands wrapped around the front seat for leverage. \n\n\"That's it! Keep hanging on. I'm not done yet. Oh GOD that's good. S... Sarah you... how can you not want this?\" \n\n\"I do. So bad.\" \n\n\"I'm riding him and it's like... every stroke. Every time his head hits bottom... I can't stop. Won't stop. That's it. Take my pussy. Fill it up. Give me what I need. Just. Keep. Fucking. ME! \n\nThe beautiful blonde teenager was practically in a frenzy now. Nearly leaping off my cock, slamming her butt down hard. Like a piston, unable to stop pounding. \n\n\"Come on. Come on! Sssssoooooo close now. Gonna hit the big one I can feel it. Superbig. Gonna cum so hard... Ben you gonna cum with me?\" \n\n\"Yeah.\" \n\n\"That's my boy. That's my Benny. Gonna give it to me so good. Like I... Like I knew you would. I used to lie in bed. Rub myself off. Thinking about you. Did you know that Ben? How badly I wanted you? Wanted you to just bust me open with that big cock? Didn't know it was so big then but I knew... Knew I wanted it. Wanted you. Every night you came over. I would beat my poor clitty sore, wishing it was your fingers. Your tongue. Your dick.\" \n\n\"Oh God, Kelsey. I... I'm getting close.\" \n\n\"Yeah? Yeah - fill me up... Fill me with your fertile stuff. I want it. Need it so bad.\" \n\nKelsey reached down and slid my hands up her sides till they were cupping her breasts through the ribbed white t-shirt. The closer we got, the harder I held till I was practically crushing her tits. \n\n\"OH! Here it cums! Cum with me. Oh... OH!\" \n\nI felt Kelsey's pussy shudder, then clench and that was the end of it for me. Sperm shot right up my shaft and we both exploded with pleasure. \n\n\"OH FUCK he's cumming! Oh he's cumming in me I feel it! So hot and... OH!... OH SO GOOD... Oh God that's so good...\" Kelsey kept rambling on, the words 'so good' seeming to repeat with each blast of my cum. \n\nI realized I was holding her breasts so hard my fingers hurt. I slowly released. Kelsey slid slightly forward, but kept my cock inside her as my blasts slowed down to a dribble, still filling her teenaged twat with my seed. \n\nI heard a little clapping from up front and saw Sarah smiling at me. Kelsey leaned back and rested her head back on my shoulder. She was still mumbling. \n\n\"Never letting you go. Never...\" \n\nI heard a loud tapping noise and noticed it was Julia, practically pounding the steering wheel with her fingers. Chanting her own mantra, as well. \n\n\"I get next. I get next. He's mine next.\" \n\n* \n\nThe baseball stadium in Pittsburgh is widely considered to be the most beautiful park in the country (except possibly for San Francisco). Long suspension bridges fan out over majestic rivers surrounding an edifice of exposed steel wrapped around green grass. In many ways, this was the stadium that inspired our whole trip in the first place. I just had to see PNC Park in person. \n\nThe four of us hardly noticed it. \n\nAfter we parked, Kelsey finally allowed me to slip out of her nethers and, almost reverently, placed my pleased penis back into my shorts. She smoothed her dress, but did no such thing as put on panties. Just watching her walk, knowing there was only the thin material between the open air and Kelsey's slice of heaven - it was hard to look anywhere else. \n\nExcept I had two other women good and ready to be appreciated, as well. Sarah was wearing a bright blue sleeveless blouse and I saw immediately that she had unbuttoned the thing about halfway down. Half her breast was still covered, yet the sexy Sarah was already showing more boob than most women had to give. \n\nThen Julia - JULIA - reached down and held my hand. Scientific papers would be written about this moment. Sure finding the Higgs-Boson was neat and all but my tomboy roommate showing physical affection in public? That was a fucking miracle. \n\nMy girls were fighting over me. In a sort of sweet way that was meant to make sure no one's feelings were hurt. But still. If this is what it means to be treated like a piece of meat, butcher me up. \n\nWe'd parked in the city at a small lot and then followed the crowds of people over the bridge to the stadium. As we went, I felt like almost everyone was staring. The way Kelsey's (almost nonexistent) ass waggled in that pink skirt. How Sarah's bosoms bounced along in time. Pretty Julia, flirting and laughing - whispering in my ear - her athletic body practically hanging off mine. \n\nAt the stadium, we tried to get into our usual routine. We walked around the concourses, talked about food. Sarah got out her camera and tried to take pictures. But we were all too... fidgety. Live. Like kids before Christmas, we were so busy thinking about unwrapping each other, we couldn't sit still. Though we tried. \n\nWe got to our seats and sat four across, Sarah then Julia then myself then Kelsey. Julia still holding my hand. \n\n\"I hope you're happy,\" I told the beautiful blonde as the game began, \"Look at what you did.\" \n\n\"Sarah started it,\" Kelsey said, getting into the act. \n\n\"Yeah, well, I think you're going to earn some punishment when we get home.\" \n\n\"Not unless you discipline Sarah and Julia, too.\" \n\n\"Are you sure you want that? I mean... what you said before.\" \n\n\"I say a lot of things when your pendulous penis is plugging me,\" Kelsey said. \n\n\"Yeah, no kidding,\" Julia said. She didn't even look up from her scorebook when she said it. I looked over, surprised. I didn't realize she'd been listening. \n\n\"Do you mean when I said that you're my jack for when I jill?\" Kelsey asked, \"Or when I said that your cock was so big it was breaking my poor little pussy? Or when I screamed that I was never going to stop cumming?\" \n\nI heard the person behind us choke on his beer. Julia just lowered her head, trying to keep from laughing. I saw her cheeks turn apple red. But I also noticed she hadn't stopped holding my hand. Almost affectionately. Definitely possessively. \n\n\"No, ummmm. I meant... the 'forever' thing.\" \n\n\"Oh! Oh... Ben I was just... Like I said I kind of just run my mouth while you're running me and I...\" \n\n\"No. Of course. I get it.\" \n\n\"I mean, I said before about this being for fun and I meant it, I mean... I say those things about sharing you with Sar and Jules because I know you're not mine. If you were... If I had to be...\" \n\n\"Yeah, no. I know. I wasn't... I mean, like you said we talked about it. I was just confused. That's all.\" \n\n\"We're OK?\" \n\n\"Yeah. Totally OK,\" I said. I felt Julia squeeze my hand a little tighter, but it felt more patronizing than comforting. I was OK. I knew that Kelsey and I weren't... Weren't anything really. Yet I have to admit I felt my heart drop a little.  \n\nI looked over at Sarah. She leaned over and winked, then peeled her shirt back a bit more to show me her ginormous boob. It was safely ensconced in her bra - though honestly calling that undergarment a bra was like calling a piece of string a seatbelt. Keeping those massive mammaries in place was a true feat of engineering. \n\nStill, even so concealed, Sarah's breast looked magnificent - soft and succulent. There was no doubt that she was offering me a chance to worship at her most holy mounds. Was Sarah really about to go through with anything? She'd made it clear that her boundaries were malleable (much like her breasts, I know), but she could just as easily slam shut as she would open (much like her pussy, I know). \n\nThen Julia leaned over, put her lips on my ear and sucked, mixing it with little nibbles at my lobe. \n\n\"I get next,\" she whispered, \"Don't forget it.\" \n\nWell, if Julia was so eager to get an at bat, and Sarah was willing to at least take a swing, who was I to feel down about... anything, actually? \n\n* \n\nAll three girls, even Kelsey, kept poking and prodding me. Like they couldn't control themselves. Julia kept switching between hand holding and cock holding (through my pants, but still). Sarah's intermittent strip teases kept appearing. KeIsey kept rubbing my arms, my shoulders, my hair, and - in the times when Julia let her - my still-clothed member. \n\nOur little performance in the car had left everyone wanting more and we were clearly headed for extra innings. Maybe a full on doubleheader. Sex-wise I mean. \n\nThe actual baseball game was a blowout, with the hometown Pirates' hopes quickly sinking down to Davy Jones' locker. Then, in the fourth inning, it started to drizzle. Ordinarily, we'd have stuck this out. The rain wasn't heavy enough to lead to a delay but even if it did, Julia and I prided ourselves on being die hards. If the umps didn't call the game then we wouldn't either. \n\nBut with a week's worth of games behind us and an evening's worth of activities ahead, Julia announced that she was no longer willing to endure the experience. Kelsey and Sarah had done a great job of respecting our baseball trip, even if they weren't big fans themselves, but they certainly weren't the ones to stick it out. And at that point, I wasn't going to argue it with Julia either. \n\nWe left the stadium, all four of us holding hands, united in pervert-ry. \n\n* \n\nNo matter how many times we told Julia there was no rush - the hotel was just outside of town, there was zero traffic, the hotel wasn't going anywhere - she sped along anyway. I'm pretty sure we went so fast at one point we actually traveled backward in time. \n\nWe screeched into the parking lot and before the rest of us could climb out of the car, Julia was in the lobby. Usually sweet as pie with strangers, my roommate practically ripped the keys out of the desk manager's hand before marching over to our room. \n\nWe had another standard hotel room that night - two queen beds with a tiny flatscreen and an even smaller bathroom/shower set up. I was beginning to wonder if these rooms were all printed in one place and then disseminated across the country. They even all smelled the same. \n\nI went in first, but then Julia jumped up and barred the door with her arm. Sarah and Kelsey stood in the hallway, peering around Julia and looking confused. \n\n\"What?\" Kelsey asked. \n\n\"You already had him,\" Julia told Kelsey. Then she turned to Sarah, \"And you aren't going to do anything, anyway. I get next.\" \n\n\"OK. Fine,\" Kelsey said, \"Better than fine. But it's still our hotel room, too.\" \n\n\"Don't care.\" \n\n\"We don't have any other place to go,\" Sarah said. \n\n\"You know...\" I said, looking out the window, \"It looks like there's a pool down there.\" \n\n* \n\nThe hotel, indeed, had an outdoor pool, set in an open quad in the middle of the hotel grounds. A sort of oasis in a desert of urban sprawl. The rain had stopped, leaving us with a hot, sweaty haze of an evening. The sun was still hanging on to the horizon, leaving the sky purple and pleasant. Though it was the perfect setup for a swim, the pool area itself was completely empty, as if we were just characters in a story and someone had written us the perfect backdrop for our illicit business. \n\nI was ordered to change into my bathing suit and then make my way to the pool while Julia got ready. I slowly slid into the cool water - it almost felt like trespassing the way my body broke through the glassy blue. \n\nWhat had, at first, felt a little too cold quickly went to welcoming. It really was a perfect pool day, all other intended activities aside. I dunked my head under the water and when I came up, Julia was standing there, watching me. \n\nShe was wearing the sexy green one piece from before. It hugged her curves in all the right places, putting forward her toned arms and bare legs, flat stomach, and tiny breasts. She smiled at me shyly, a weird look for my outgoing, almost aggressive roommate. \n\nJulia lowered herself to the side of the pool, then slid in, making barely a splash. Her feet bounced against the bottom, wetting her to about her shoulders. I paddled over so that we were about an inch apart. I saw Julia was breathing heavy, almost panting, like she'd been out on a run. \n\nI laughed a little, lovingly. I reached up and pulled off her glasses, leaving them on the side of the pool. She smiled, sheepishly. \n\n\"Kind of hard to swim with those,\" I said. \n\n\"Kind of hard to see without them, too.\" \n\n\"I'll stay close,\" I said. Then I reached back and found the tie in Julia's hair. I gently unspooled it, watching in awe as her brown locks fell free. Down to her shoulders. I stepped back a little and took my roommate in. ",
        "She looked gorgeous. Amazing. More than I'd ever really realized. Big green eyes staring back. Cheeks a little pink from the heat or the cold or just everything around us. She looked so strong. So vulnerable. I leaned in and kissed her. Really kissed her, putting a year's worth of want and worry into one grand expression. Pouring myself in through her lips, her teeth, her tongue. My hands found her shoulders and hers dug into mine and we stood there like the whole pool was swirling and the only anchor was each other. \n\nI tried to pull away but Julia nibbled at my lips, holding them close. Then she released me and started tasting at my cheeks. My neck. My chest. \n\n\"Fffffffuck Julia.\" \n\n\"You always say that.\" \n\n\"I know, Sarah said the same thing. I guess I just...\" \n\n\"Big and dumb. That's how we like you.\" \n\nI stepped back a bit. \n\n\"A joke, dude. Just a joke.\" \n\nJulia leaned in and kissed my lips again. Dragged her hands around my body, then snaked down and grabbed at my cock - aching and able. \n\n\"Well, not about the big part,\" Julia said, \"Seriously how was I living with this monster under my roof and I didn't even know it? You should've at least been forced to disclose it as part of the rental agreement.\" \n\nI laughed then leaned forward, kissing Julia's impertinent, freckled nose, her blushing cheeks. Mirroring her journey on me. I ran my hands down her sides and then slid them into the suit. She jumped a little as I did and I found that satisfying. It was like we were daredevils, double-dog daring the other to go a little further a little faster. Never caring that neither would swerve first. \n\nMy hand found Julia's silky pubes and then her sex. At the same time, she pulled my waistband back and wrapped her fingers around my cock. \n\n\"Hmmmmmm,\" she sighed contentedly. We were still trading kisses. I took my free hand upward and again went under her bathing suit to cup Julia's tiny tit. \n\n\"I know...\" she mumbled through my lips, \"... not Sarah's.\" \n\n\"Do you really think that matters to me? I like you for who you are. And Sarah for who she is. I don't want you to be each other. I want you to be yourselves.\" \n\n\"See?\" Julia said, giving my cock a squeeze, \"Definitely not stupid.\" \n\nI traced at Julia's nipple, feeling it harden in my hand. Pointing outward like a little pink needle. Satisfied that her top was primed, I stopped waiting by the entrance at her bottom and slowly slid my finger inside. \n\n\"Hm,\" Julia grunted. It was not a sound of satisfaction. \n\n\"Did I?\" \n\n\"No no. It's just... The water is making me dry.\" \n\n\"Huh?\" \n\n\"Water is great for lubrication. Unless you compare it to what comes out of me, in which case it might as well be sand.\" Then Julia stroked at my cock a little too quickly and I could see what she meant. So much for slippery - if anything this kind of hurt. \n\nStill we kept kissing and fondling for all we were worth. I found Julia's clit and started to rub, but I could tell it wasn't really doing anything. \n\nJulia 'hmmed' again then stepped back. She pulled my bathing suit down to my knees, then stepped forward. I slid the gusset of her suit aside and started to guide myself in. As soon as I hit her sweet spot, though, I could tell it was going to be work. Whatever moisture Julia had - and I had no doubt that there was plenty - was almost instantly wicked away by the water. \n\n\"Just... shove it in there,\" Julia said. But I stopped, cock sort of half hanging out of her pussy like a toothpick in a cowboy's mouth. \n\n\"No, let's...\" I separated and started to climb out of the pool. Julia looked up. Steamed and paced in the water. \n\n\"Not fair,\" she muttered, \"We can't just do it out on the sidewalk... I mean, out of the pool, we're...\" \n\n\"Hotel room,\" I said, fixing my bathing suit at my waist. \n\n\"But the girls are...\" \n\n\"Do you want to stop now?\" \n\nJulia's face set. Determined. She popped right out of the pool, grabbed my hand, and dragged me back to our hotel room, leaving a trail of chlorinated water behind us. \n\n* \n\nJulia didn't even bother knocking, she just threw open the door and pushed me in. Sarah and Kelsey were both lying on the bed in their pjs, watching TV. \n\n\"Hey guys,\" Sara said, \"How was the...\" \n\nJulia shut the door behind her, then tackled me. Literally, tackled - a perfect technique shoulder drive to my sternum - onto the other bed. \n\n\"...pool?\" \n\nWe were still a bit wet but Julia hardly cared, her mouth hungrily working over my body now. Down to my bathing suit drawstrings. If Julia was aware that other people were in the room, she didn't show it. Her brain had passed into another dimension, the land of Hornia, and damned if she was going to be pulled back to our own world just yet. \n\nMy cock was certainly in that same universe because he bobbed up happy and hard as soon as Julia freed him from my shorts. Bounced against my stomach and then stood at attention. He wasn't out in the world for long though because Julia's mouth quickly clamped over him - head to root -- in one big gulp. \n\n\"Hmmmmm... kinda chlorine-y,\" she said around my meat. Her hand went down to my balls - more gently than the last time, thank God - and stroked at the scrotum with her nails. For someone who seemed to be more about her own pleasure than mine, Julia sure did seem to enjoy supping at my schlong. \n\nI heard a whisper and looked over. Kelsey and Sarah were both sitting next to each other on the bed, TV totally forgotten. Seeing that I saw them, they both gave me a shy little wave. \n\nSllllluuuuuuuurrrrrrrrp. Julia popped her head off my cock, regaining my attention (I know, who gets a blowjob and looks at other women at the same time? Boys - that's who). \n\nJulia smiled at me, tossed her hair out of her eyes, then went back to licking. Now she was more teasing, just little kisses at my head and shaft. Long drags up my shaft with her fingers. Then she gave my erection a little affectionate clasp and sat up. \n\nShe looked at me a little guiltily, like a little girl caught eating candy off the top shelf. I smiled back. I was naked on top of the bed, blown in all senses of the word. My bathing suit was... somewhere I suppose? Head, still wet from the pool, dripping onto the pillows. A wanting, wanton brunette by my feet. \n\nJulia brushed her hair back again and pulled the bathing suit straps down off her shoulders. Her little titties popped out proud, nipples standing oh so tall. Then Julia lifted her taut bottom off the bed and slid the suit right off. Her puss peeked at me from behind her tuft of curly brown hair. \n\nJulia looked at me hungrily. \"Enough pre-game. Let's play ball.\" Then she jumped up, slamming her hands into my shoulders. It was less of a kiss than just Julia pressing her face into mine. Then she reached back, found my cock and placed it at her entrance. Impaled herself in one go. \n\n\"THAT'S my boy,\" Julia said. Her pussy clutched at my cock - a starving mouth finally swallowing its well-awaited meal. She leaned back and laughed a little. \"Seriously, why do I ever take this thing out?\" \n\nInstinctively I turned to look at Kelsey. She'd said the same thing before and I thought for sure she would have some smart remark. Only she said nothing. Just sat there next to Sarah, silently, as if afraid that making her presence known might snap the spell. \n\nSLAP \n\nJulia whacked her clit \n\nSLAP \n\nI looked up and saw Julia was gasping for breath like we were at the end instead of the beginning. Her stomach muscles flexed and I wondered at her body, this monument to what the human form could be sculpted into. Julia was not a natural - one of those people that just woke up in Olympic splendor. She worked her ass off, quite literally. Held her diet. Kept her discipline. Was never late for a class but never missed a workout either. Looking at my roommate now I saw someone I desperately admired, who I knew was better than me. Better than I deserved. \n\nOf course it helped that my dick was buried in her twat in that moment, too. \n\n\"OK - Hope you're ready dude. Cause once I start this thing, it ain't gonna stop.\" \n\nBefore I could even respond. Julia started working up and back on my cock. Kelsey had ridden me like a rookie - tentative but with the fervor that comes with a first time. Julia on my dick, she was a master. Gripping and groping. Alternatively pounding me down then slow easy strokes. I was at her mercy. \n\n\"Hmmmmm... AH!\" Julia stiffened, a bit of her moisture bursting out. \"Good start. Gonna rub my clit a little bit.\" She sat up and put her hand down. Where before she'd been rough, now she was almost kind, stretching and caressing at her magical nubbin. \n\nI heard a little gasp and looked over. Apparently it was time for Sarah and Kelsey's clitties to get some attention, too. Both girls were sitting in the same spot as if they hadn't moved, except both were naked from the waist down. If either cared about the exposure, the way their bare thighs casually touched, it didn't show. They both were busy, palms down, working their girl-y selves for all they were worth. \n\nThe three women built to a squishy chorus. A slippery symphony of rubbing themselves off. Julia shifted downward a bit, her hand now sort of trapped between our two pubises. She kept going, eyes rolling back, tongue wagging in effort. \n\n\"Fffffff... Ffffffff... fffffFFFFFUUUUUCK! FUCK THAT'S SO FUCKING GOOD!\" Julia bent back, her whole body clenched like squeezing something out and sure enough a whole stream of Julia juice blasted out of her sex, soaking me all over again. \n\n\"Hrrr... ha. Hrrr... ha. Hrrr... ha,\" Julia laid back, blown, breathing in great wheezing heaves. \"That was... AH.\" Another little splash. \"AH. AH. AH.\" Three more. \"Fuck. It's not... I mean... AH oooooooOOOHHHHfuck...\" A bit of a bigger stream. \"Not stopping. I mean... fuck. Fuckfuckfuck.\" Tossed her head back and forth. She started laughing, then a bit of tear ran down her face. \"I don't even...\" Her pussy clenched my hard, like a convulsion, \"OHHHHH FUCK.\" A blast almost as big as the first. Julia reached down and hit her pussy HARD as I'd ever seen, but all it did was send another ejaculation over us. \n\n\"Hmmm... hmmm... hmmmm...\" I looked over and saw that Kelsey and Sarah were still rubbing. Only not rubbing themselves anymore. Kelsey's long, dexterous digits were clearly buried between Sarah's legs and her deep brown hand was in the same place on her pink-ish, slender besty. The two working each other over. Kelsey's chest shook like it was sprinting to catch up to Sarah's spectacular jugs. \n\nI felt Julia lay back even more, my cock doing it's best to bend. Would break itself in half to stay inside. Julia was still breathing hard, laughing between breaths, tears now streaming almost the same as her overexcited snatch. \"Not stopping... not...\" \n\nI slid up, doing my best to stay attached, then wiped the tears off Julia's face. \n\n\"Sssssooooo good,\" Julia said, \"Just... toooooo good, too.\" \n\n\"You did good out there,\" I said, kissing at the tears on her cheeks, \"Hit the showers. I'll close it out from here.\" \n\nJulia laughed, but let me slide forward so that now I was on top of her. My cock slipped out, so I reached down and put it back in scoring position. I felt Julia's lithe legs wrap around my back. Her breathing slowed. Anticipation. \n\nShe looked so beautiful then. Flushed pink with pleasure. Eyes sort of searching mine, wondering when I was going to drive it home. \n\nSo I did. One glorious stroke and I was back inside my roomie, sharing her space in a far more intimate way. I leaned forward and kissed at her ear. Nibbled at it. \n\n\"You don't cum until I tell you,\" I growled. \n\n\"T... too late.\" \n\n\"Understood?\" \n\n\"Uh huh.\" \n\nI drew myself back slowly. \"I am just going to keep fucking you. And fucking you. And fucking you until you drop.\" And then, tenderly, I slid myself back inside her. Kissing her lightly on the lips as I did. I drew back and did it again, long languid strokes, letting her feel every ridge, every vein of my cock slide against her tight, wonderful walls. \n\nI felt her cervix tighten, her legs try to push me forward. \n\n\"No, Julia. You don't go until I say so.\" \n\n\"Uh... Uh huh...\" \n\n\"That's a girl.\" I kept my steady pace, angling a little differently each time, making sure that my head stroked against her g-spot as well as it could. Gradually I started moving faster. Just a little bit at a time. My kisses on Julia's face and freckles becoming less frequent as I focused on driving her into ecstasy. \n\n\"You need to rub your clitty?\" I asked. \n\n\"N... no. Too sensitive. G... gonna cum anyway. Know it. Feel my cum... c... Coming.\" \n\n\"Not till I say.\" \n\n\"Kn... know. I know.\" \n\n\"You need to slap your clitty?\" I asked. \n\nJulia kind of laughed at that. \"N... no, naughty little puss... she's getting plenty right now.\" Julia's chest had been pink before from her orgasm but now it was practically cherry red, her body straining to stay on the edge without going over. The more I picked up the pace, the more my brunette buddy had trouble holding together. Legs trembling. Eyes fluttering. Whole body seeming to shudder the closer she got. \n\n\"Kels, his... stuff is still in there.\" \n\nAt the same time, Julia and I both froze and looked over. Kelsey lay back on the bed. Legs spread. And Sarah - oh my fucking God fucking Sarah - was lying over her besty's body. Her top at Kelsey's bottom and the other way around. \n\n\"Yeah, no duh,\" Kelsey said, \"Been dripping out of me for days. By the time I finally get it all out, that beautiful boy just fills me right back up again.\" \n\nSarah sort of shrugged, then lowered her head and started licking at Kelsey. Kelsey picked her own head up and started doing the same to Sarah. The brunette's massive breasts pressed into Kelsey's stomach. The blonde teen had clearly learned a lot from her previous experience with Mel a few days prior, but Sarah was no slouch either and they both sort of moaned into each other's other-mouth. \n\nIf the sight shook Julia from her stupor she didn't show it. Instead she just laughed and looked at me as if to say, well, we doing this? I started slowly again, but quickly picked up speed, pistoning into Julia, squeezing her breasts, her shoulders, the bed, grabbing anything for purchase to pound her harder and harder and \n\n\"HARDER!\" Julia cried, \"Pump me... oh pump me FULL! Come on. Give it to me.\" \n\n\"Mmmmmmm Sarah... you taste really good,\" Kelsey said. Her voice dreamy distant. \n\n\"Y... you too,\" Sarah said. \n\n\"Those two... s... sluts,\" Julia said, \"They can't stop.\" \n\n\"None of us can,\" I said. \n\n\"Better not,\" Julia said, \"Don't... ever... stop.\" Her words punctuated each time by me battering her into the bed. I was going full steam now. Bathed in pool water and girl cum and both of our sweat. Almost violent as I drove myself into Julia's squeezing snatch. I felt her body start to stiffen... \n\n\"Hrrr... hrrrrrrrr...\" \n\nI slowed. \n\n\"OHhhhhhh. Dammit! Why'd you...?\" \n\n\"This?\" I said, patting at Julia's clit, \"This is mine. All of it. And it doesn't cum until it's filled all up with mine. Got it?\" \n\n\"Uhhhnnnn. Nnnnnnnot g... gonna make it. Too good. Too big. That fucking cock of yours is fucking me so good and I...\" \n\n\"Yes. Yes you can. Yes you will. Just hang on, Jules. Come on.\" I took one of Julia's stiff nips into my mouth and sucked, hard. She whimpered and I did it again. Then, finally, I released my prisoner and started working Julia again. My cock moving in and out with desperation now. Drive. The end was in the distance, I could see it now, and all I could think was faster. Harder. \n\n\"That's it! Come on, Ben. Cum. CUM! I need it so bad I need to...\" \n\n\"CuuuuummmmmmMMMMIIIINNNNG!\" Sarah. Is it sad or wonderful that by now I knew exactly what the sexy brunette's orgasm sounded like? So clearly that I could probably identify it as part of an investigation. \n\n\"Cum Ben. Cum on!\" Julia urged me forward. Legs locked at my backside, pushing and pulling with her whole body. Nails dug deep into my back. \"Plllllease Ben. CUM!\" \n\n\"Oh... OH Sar! OH your tongue is... oh FUCK ME!\" And that was Kelsey. Two down. Bottom of \n\nthe ninth. Time to bring the big game home. \n\n\"No more nice stuff,\" I told Julia, bringing my last ounce of effort into just busting her begging pussy with my cock. \n\n\"OH! Oh Ben... I... I'm ssssssssoooo close. Help me I can't help it I'm... Please Ben. Let me cum. You have to let me CUM!\" Julia's face was practically purple, her pupils down to pinpricks. My whole body stiffened except for my most precious part, my penis suddenly reared back then BURSTING and Julia's eyes exploded open, her mouth hung dumb beating my shoulders purple as she threw her head back and HOWLED my name and told the world that she was \"CUMMMMMMIIIIIINNNNNG OH! That big fucking cock is fucking cummming in ME!\" \n\n\"That's my girl... There you go... Doing so good for me.\" \n\n\"Yes... So good! Oh God I'm fucking cumming so hard with your cum inSIDE me oh fuck yes! Don't stop fucking filling me UP!\" \n\nAn explosion of Julia's essence shot upwards. Then another and another till I was sure she must be drained. But it kept coming. My own flooding fertility did its best to match. Blasting into her again and again. I started to slide back, thinking to splash some of my sperm on Julia's chest but her legs just held me in, her pussy greedily chugging it all down. \n\n\"Mine... all mine...\" she mumbled. Her body went loose and I could feel Julia already drifting down to sleep. Her body still shaking as I my spend slowly dried up to a dribble. \n\nJulia's hands went up to my chest, not at all affectionately, and shoved me off of her. I fell back onto the bed next to her. Arms and legs all askew. I looked over and saw Kelsey and Sarah on the other bed much in the same position as we were. All just splayed on our beds staring up at the ceiling. Sleep slowly sliding over us, satisfied. \n\n\"Well,\" Sarah said, \"That was fun.\""
    ],
    "authorname": "Spector_Dugan",
    "tags": [
        "exhibitionism",
        "backseat",
        "group sex",
        "oral",
        "cunnilingus",
        "girl on girl",
        "college",
        "squirting"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-baseball-trip-pt-07"
}