{
    "title": "Chords that Bind Ch. 14: Sonata",
    "pages": [
        "Dear Readers,\n\nI've had this chapter in my head for a long time, so I'm extra excited to share it with you. I hope you enjoy it as much as I enjoyed conjuring it up. This should be up in time for Christmas, and although it isn't holiday themed, I hope you'll enjoy it! [Incidentally, I'm seeking feedback on your feelings about a Christmas chapter. I thought one up, but I'm definitely not going to get that together. I already missed the holiday story deadline! Let me know if it interests anyone. If not, I'll save it for next year!]\n\nThanks as always for the comments, votes, and feedback. I can't tell you how rewarding it is to see your reactions. Wishing you a beautiful new year!\n\nXoxo\n\nPoeticLicense91\n\n***\n\nThe doctor's office was supposed to be soothing, but stepping into the grey and green room with the mid-century throwback furniture, Cecilia felt anything but relaxed. This was the third time she'd been to Dr. Shriz. Abraham and Clara insisted that she see a therapist after her evening with Sebastian had gone all wrong. They went with her the first time to try and ease her into the idea.\n\nIn the back of their minds, they knew that Cecilia should have gone to see a doctor as soon as she physically recovered from her first ordeal. Abraham called James to let him know what he and Clara decided, expecting to have to convince him. But James was very agreeable. Over the short conversation he told Abe to take the funds for the therapist out of his account.\n\nDr. Jude Shirz suspected there was more at play with Cecilia's case than the couple initially let on. She didn't buy the reason that Cecilia was here. Cecilia said she was here because she'd been attacked while out on a date. She denied that her date had anything to do with it, but wouldn't explain why she ran out of a club alone at night in an unfamiliar area.\n\n\"Did you feel unsafe? Is that why you ran?\"\n\nCecilia nodded. \"Yes.\"\n\n\"But your date didn't make you feel unsafe?\"\n\nCecilia paused, struggling to find the words. \"He . . . didn't . . . I mean, he might have . . . but he didn't know . . .\"\n\n\"Cecilia, did you he force you into anything with your consent?\" Dr. Shriz's clinically androgynous matter-of-factness threw Cecilia off balance.\n\n\"He was just kissing me. I wanted him to. But then . . . he kept going . . . and . . .\"\n\n\"Cecilia, you have to tell me. I can't help you if you don't tell me what he did. Did he rape you?\"\n\n\"NO! No, he didn't. It wasn't his fault!\" Cecilia hated that word. \"When he was kissing me it just . . . it reminded me of . . . something else. Something bad I want to forget. He didn't know that I was remembering a different time. But it felt like I was back in time, like he was someone else.\"\n\n\"What were you remembering Cecilia? What did he trigger?\"\n\n\"I don't want to talk about it.\" This time it was Cecilia who was blunt.\n\nDr. Shirz redirected. \"What specifically did he do that triggered you?\"\n\n\"I don't want to talk about this.\"\n\n\"Then I can't help you, Cecilia.\"\n\nThe doctor looked over her frameless spectacles, challenging Cecilia's resolve to hold onto her bad memories.\n\nCecilia held her ground.\n\n\"Alright. We'll revisit this. Can you tell me about your current living situation? Are you living alone?\"\n\n\"No. I live with Abraham and Clara.\" For now. She thought.\n\n\"That's good. After your encounter the other night, it'll feel safer to have people with you. Do you have a good relationship with them?\"\n\n\"Oh yes. Very good.\"\n\n\"Care to elaborate?\"\n\nNo. \"What else is there to say?\"\n\n\"Tell me about them.\"\n\n\"They're a lovely couple. They've made me feel very at home, as if I were family.\"\n\n\"Do they have children? How large is their family?\"\n\n\"No. No children, but James lives with us too. It's his house actually, if I understand it right.\"\n\n\"Who's James?\"\n\nAgain, Cecilia didn't know how to explain how she knew James. She definitely didn't want to get in him into trouble after all he'd done for her.\n\n\"James . . . well . . .\" He's my hero. \"He's a pianist, so he's away on tour right now.\"\n\n\"And how long have you all lived together?\"\n\nThat made Cecilia think. \"Ah . . . maybe eight or nine months now?\" Had it really been that long since she'd been kidnapped?\n\n\"So you feel safe at home?\"\n\n\"Yes.\" Cecilia was sure of that one at least.\n\n\"What about before that?\"\n\n\"I was alone before that.\"\n\n\"What made you decide to move in with your friends?\"\n\n\" . . . Well, I moved to England . . .\"\n\n\"And what prompted that?\"\n\nA trafficker and a terrible misunderstanding. But Cecilia wouldn't answer that truthfully lest it cause trouble for Abe and James. She hated thinking about any of this.\n\n\"I just\u2014always wanted to see England\u2014it's what I studied in school, so I decided I needed a change from America . . .\"\n\nDr. Shriz detected the deflection and didn't believe for a second that that was all there was to it.\n\n\"Why are you here if you're going to lie to me Cecilia?\"\n\n\"I don't want to be here! I'm only here because Abe and Clara asked me to come.\"\n\n\"Cecilia, your friends think you need to be here. They're worried about you. There are some things you need to work through.\"\n\n\"Well, I don't want to think about that right now.\" It was unusual for Cecilia to be so adamant, but she wasn't comfortable at all with the doctor's questions.\n\n\"We have another half hour Cecilia. Won't you let me help you? What about your romantic life? Can you tell me about your date? Do you have conflicting feelings?\"\n\nCecilia sighed. The doctor wasn't giving up easily. \"That was my first date in a long time.\"\n\nDr. Shriz masked her surprise. She suspected Cecilia would have a busy social calendar.\n\n\"Oh? And why is that?\"\n\n\"No one has ever asked me. I'm not very popular...\"\n\nThis was something Dr. Shriz could work with.\n\n***\n\nOne hotel bar looks quite like another after awhile. This one was in Sydney, Australia. James was puzzled that Mae wanted to speak to him here. She sounded very serious when she asked him to meet her. They didn't have a performance tonight, having just arrived in Australia after several performances in Japan. Tomorrow they'd resume their scheduled concerts.\n\nMae plopped down playfully next to James on a barstool. He was still in his rumpled travel clothes. The top three buttons of his shirt were unbuttoned and he had a few days' growth on his beard. Mae on the other hand, felt refreshed. She showered and changed after checking in, assuming James would do the same.\n\nInstead, he had rather a head start on his first scotch. She scanned him quickly, deciding to go through with her plan. She meant to respect his privacy, but if he was deteriorating over this Natasha business\u2014and from all appearances it looked like he was\u2014it would affect both of them. It was time to act and get him to shake off whatever lingered from their amour fou.\n\n\"Cucumber martini please. And may I see a menu?\"\n\nThe bartended rushed to accommodate her. Mae quickly ordered a few small plates. James still hadn't done more than nod.\n\nShe steeled herself with a sip of her martini. \"James, do you know why I asked you here?\"\n\nJames shook himself from whatever train of thought he had been mulling over. \"No actually.\"\n\n\"I'm a bit worried about you. You haven't been taking care of yourself since we left Tokyo.\"\n\n\"I'm fine, Mae. Really. Thanks for your concern though.\"\n\nThe bartender brought out prawn toast, some spring rolls, and roasted beets. Mae pushed a plate towards James, and took a bite of toast. \"James. Eat something and talk to me.\"\n\nJames sighed and took a pull on his scotch. \"Why? Mae, what's going on?\"\n\nShe hoped it wouldn't come to this. \"I'm worried about your playing.\" Yes. That got his attention.\n\nJames straightened in his seat. \"Oh?\"\n\n\"Yes. I'm amazed you've been playing so well with the way you've been behaving. You start drinking too early in the day, before rehearsals. You stay up too late. Are you even sleeping? Just look at yourself. This is not the James Asthon I know.\" Her softly accented voice was gentle, but didn't shield him from the truth as she saw it.\n\nMae was right. He hadn't been sleeping, which meant he was too tired to argue with her.\n\nMae used this to her advantage. \"What is wrong, James? There is more to this,\" she indicated his scruffy appearance, \"than breaking up with Natasha. Whatever it is, I need you to be able to perform. You can't keep this up, and I don't want to be humiliated on stage... especially with the gossip that's been going around.\"\n\nNatasha made short work of telling the magazines and reporters that she ended things with James. She didn't directly accuse him of cheating on her, but let the reporters stitch the story together themselves. By the end of their tour in Japan, James was characterized as a savant Casanova, and Mae as the beautiful, unwitting, new flavor of the month.\n\nMae let the stories roll off her back. But the situation wasn't helped by the fact that they were travelling together for a tour across the Pacific, and obliviously, they had been photographed together. James apologized when the story first circulated. Perhaps that's what started this unhealthy cycle.<br >\n\nJames felt bad that Mae's reputation was drawn into this. He nodded. \"I won't let you down. I'm sorry you got involved in all this.\"\n\n\"I know James, and I don't care about gossip and rumors. Those people will forget soon enough anyway. But I do take my art seriously. Is it those stories that are bothering you?\"<br >\n\n\"Well, no\u2014yes, what I mean to say is . . . I only hope that\u2014there's one or two people I would rather not read them. I don't care about the rest of the world. Our playing speaks for itself. There's just one person I don't want hurt by what they read.\"\n\n\"Pray tell James, who?\"\n\nHe paused, drained his glass, and whispered, \"Cecilia.\"\n\nMae could barely make out the name. \"Who is she?\"\n\n\"Someone I care about. Someone who has every reason to hate me and doesn't.\"\n\n\"Someone you love James?\"\n\nJames avoided the question by ordering a blood and sand from the bartender and nibbling on one of Mae's spring rolls.\n\n\"James? Do you love her?\"\n\n\"It doesn't matter Mae. I\u2014I did something unthinkably stupid that hurt her. And instead of hating me, she\u2014she didn't forgive me\u2014because she never even held it against me. She acted as if I were some sort of hero. . . I could hurt her again, and I don't want to.\"\n\nMae was confused. \"Dating Natasha? Is that what you're worried about? All men get a little stupid when confronted with a woman like her. But that's not irreparable. Not if you don't want it to be.\"\n\n\"It's not Natasha.\" James shook his head. The bartender presented him with the scotch-based cocktail. \"Thanks.\" Turning his attention back to Mae he struggled to explain. \"Because of me, because of my error in judgment, she was grievously injured. She\u2014could have\u2014. . .\"\n\nMae interrupted his confession. \"You say she never held anything against you?\"\n\n\"No. She doesn't. She doesn't seem to know I'm no good for her. So I have to be the one to protect her from me.\"\n\n\"I don't know what it is you're supposed to have done.\" James looked like he was going to confess whatever it was he'd done. Mae cut him off. \"But it sounds like it was out of your control.\"\n\n\"That's the problem. It's all out of my control now. But before, I was the reason she was hurt. That's why I had to get away from her.\"\n\n\"So you're on this tour . . . and you think that will give you more control? I don't know all of this story\u2014\"\n\n\"Mae, if I'm not there, then I can't hurt her. Since I tried to make things right she's been living with Abe, Clara, and me. It's too hard having her so close to me.\"\n\n\"James. . . you're punishing yourself and running away at the same time.\"\n\n\"I'm not sure what else I can do. Mae, I'm just\u2014\"\n\n\"James do you want to be happy?\"\n\n\"What sort of question is that?\"\n\n\"James, I know you. Whatever you did, or think you did, you're a good person. You need to move on. Especially since you said she doesn't hold this against you.\"\n\n\"She brings out something in me. I'm afraid of it. Afraid of what I'd do to keep her. She's so perfect Mae, and she deserves someone better than me. Someone who doesn't . . . desire her so profoundly.\" It was as close as he could come to admitting his personal darkness.\n\nMae felt James rebuilding his emotional walls. \"James,\" she shook her head, \"you can't hold yourself accountable for things outside your control. Does she feel the same way about you?\"\n\n\"She\u2014shouldn't in any case. I don't know. I don't know if I can trust her feelings.\"\n\n\"Then all you can do right now is accept her forgiveness. James, do you hear me?\"\n\n\"I do. But I don't know how. Right now, I hate myself for what I've done. I tried moving on with Natasha. Look how that turned out.\"\n\n\"James. You're suffering and it's no one else's fault but yours. You are in control of that. And if you don't take hold of that soon, your appearance won't be the only thing that suffers. You can't keep treating yourself this way and perform at this caliber.\"\n\nIf nothing else, Mae was right about his physical health. His sleepless nights with copious amounts of drink were taking their toll. He oscillated between being heartsick over missing Cecilia, and loathing himself for the part he played in her ordeal.\n\n\"You're right, Mae.\"\n\n\"I know. So will you try to forgive yourself? I need you in top form.\"\n\n\"I will. But I make no promises.\"<br >\n\n\"That's all you need to do right now. Just try.\"\n\nWith that, she snagged his cocktail and started sipping on it. Her smile dared him to object. \"After a gratifyingly smoky sip, she said, \"You need some nourishment. Order some real food. I'll finish this for you.\"\n\n***\n\nJames woke the next morning without a hangover. He pulled the curtains open and took in the sun sparkling off the water of Port Jackson. He ordered himself a pot of earl grey and a full English breakfast. After showering, (and a long-overdue shave) he pulled on his dressing gown and tucked into his breakfast alone.\n\nReplaying his conversation with Mae last night, James wondered if Mae knew. She didn't pry into the dark nature of his desire for Cecilia. But his allusions didn't seem to faze her; her advice was sound and sincere. She was demure and easy going by nature, but he wondered if she was an actual submissive. He appreciated the way she confronted him and realized that she caught him before he really started to spin out. He did the same thing after Josephine left, and it had been unpleasant and awkward for Abe and Clara while he grieved the loss of that relationship.\n\nPart of him was hurt by the gossip Natasha circulated. Another piece of him was ashamed he ever tried to have a romantic relationship with her. The other part was ashamed that he'd been unsatisfied with one of the most beautiful women in the world, not to mention a world-class musician. What was wrong with him that she hadn't been enough to satisfy his desires?\n\nHearing about Cecilia's near-abduction (and God knows what else those men had considered) nearly unhinged him. Right after that the social columns started circulating rumors of James' alleged affair with Mae. He needed to draw on the last reserves of unrequited passion for the remainder of their tour in Japan.\n\nWaking up with a clear head helped. James acknowledged that he needed to move past these accumulated hurts. He was running out of excuses to punish himself. For a dominant he had such a masochistic streak. If acknowledging was the first step, then he was on the road to recovery.\n\n***\n\n\"Cecilia, so far you and I only talked about your confidence issues. Socializing is hard for you, but I think you've been making progress on that. Probably without me, if I'm honest.\" Dr. Shirz was summing up conclusions from Cecilia's previous session. \"Abraham and Clara seem to be good influences on your confidence.\" Cecilia noticed that she left James out of the good influences category. \"What about your goals? Are you looking for a career? A relationship? Travel?\"\n\nCecilia smiled. She hadn't made traveling a goal, but through events outside of her control she was the furthest she'd ever been from home. \"I-I don't know.\"\n\n\"Come now, Cecilia.\" Dr. Shirz looked over her frameless spectacles. The doctor noted Cecilia's reticence to share anything personal about herself. \"Why did you study English at university?\"\n\n\"I wanted to be a writer.\"\n\n\"Have you been writing anything?\"\n\n\"No. I haven't had time.\"\n\n\"What's been eating up your time? Your job?\"\n\n\"No.\" Cecilia stared at the floor. She couldn't work because of the status of her nonexistent visa. It often bothered her that she couldn't repay James, Clara, and Abraham for letting her stay with them. \"I sometimes go with Clara to watch rehearsals at the ballet.\"\n\n\"You enjoy dance?\"\n\n\"I enjoy watching.\"\n\n\"I'm not much of a dancer myself,\" the good doctor confided, \"but it is beautiful to watch. Have you thought about using that for inspiration?\"\n\n\"No.\" Cecilia hadn't. She often let herself get swept away in watching the beauty and athleticism at work. But she hadn't attended a rehearsal since her date with Sebastian. She still didn't want to face him. Explaining would be too hard. Cecilia was uncomfortable with everything Dr. Shirz wanted to talk about.\n\n\"Sometimes I go to fitness classes with Clara and some of the other dancers.\" Cecilia hadn't done that in some time either. Mostly, she cloistered herself in the townhouse and listened to James' music when she was sure no one would notice.\n\n\"Exercise is healthy. I'm glad to hear that.\"\n\nCecilia almost admitted that she stopped doing these things, but it was easier to let the doctor assume.\n\n\"Cecilia, I want you to do a little writing. It doesn't matter if it's a journal or a poem, or anything else. I think it'd be good for you to express yourself. See if inspiration strikes while you're watching the dancers . . . How's that sound?\"\n\nCecilia looked up from the floor to see Dr. Shirz had quietly crossed the room and presented her with a black, leather-bound notebook. \"Take this. Do some writing, and next week see if you can share something with me.\"\n\nCecilia grimaced. \"Okay.\"\n\n***\n\nJames felt the sun beating down on him. The crash of the waves was a constant soothing noise in the background, punctuated by the intermittent cries of seagulls. Mae convinced James that they should take the time between the week's performances to relax. She no longer worried that James was having a mental breakdown, because he appeared remarkably improved. He stopped drinking into the wee hours of the morning and no longer looked haggard.\n\nToday, they'd earned some leisure. James had been touring for months, and Mae wanted to unwind a bit. A day on the beach in Australia was just what he needed.\n\nA buzzing interrupted James' semi-somnolent state. He sighed deeply, shielded his eyes against the sun, and reached for his mobile.\n\n\"Hello?\"\n\n\"James. I've got good news for you.\" Josh sounded rather pleased with himself.\n\n\"Who is this?\" James asked groggily.\n\n\"It's Joshua Howland. United States Embassy. Your roommate second year of college...\"\n\n\"Sorry Josh. I didn't check the ID on my phone. Did you manage\u2014?\"\n\n\"I did, James. That girl of yours should have her new passport and visa in a few weeks.\"\n\n\"That's brilliant Josh! Truly. Thank you so much for all of your effort. I know I wasn't asking something easy of you.\"\n\nJosh chuckled. \"Let's just say you owe me one or two. But it got done. I'm sending the documents to your address in London.\"\n\n\"Anything you need Josh. Just name it. If it's in my power it's yours. The London address is perfect. I'm in Australia for a few more days, but Abe and Clara should be able to get her a ticket to fly home.\"",
        "\"I forgot you were abroad. That's everything you should need from me. She shouldn't have any trouble getting back to the States.\"\n\n\"Yes. Josh. Thank you.\"\n\n\"Alright James. I'm happy to help. Take care.\"\n\nWith that Josh hung up.\n\nJames dropped his phone and gazed out to the horizon. He thought he'd feel elated when this was sorted. All he felt now was a bit crestfallen. Cecilia was going to go home. He'd get her a plane ticket once the documents were in. It was as he planned this in his head that he realized he'd never see her again. He would still be off touring, and there was no reason to delay returning her home.\n\nIt was probably for the best.\n\nMae walked up to James looking tanned and radiant in her sleek one-piece swimsuit. \"Why the frown James?\"\n\n\"Oh, don't mind me. I just had some good news from back home.\"\n\n\"It doesn't look like you had good news.\"\n\n\"Well, it's part of what you told me to do. I'm working on forgiving myself, and the last piece just fell into place for me to keep a promise I made, a promise that's going to make things right.\"\n\nLittle drops of seawater coated her body from wading into the surf. \"All right James,\" She grabbed his hand and pulled him to follow her into the rolling waves again. \"It's good that you're getting some sun. You look much less English now, but you didn't come all this way just to look at the Pacific.\"\n\nJames smiled. It was an odd, bittersweet feeling. He knew he was doing the right thing, and took comfort in it. He didn't know how long he was standing with his feet at the edge of the beach. Mae noticed his far off look, and took matters into her own hands. She splashed James full in the face and broke his trance.\n\nThe cold salty water jolted James; he was momentarily annoyed. He saw Mae laughing and preparing to splash him again. She was so vibrant and alive. He avoided another attack by throwing himself into the next breaking wave. Mae approved.\n\nJames tossed his head back and pushed his wet hair out of his eyes. Mae was showing a different side of herself, and he felt lucky to have her friendship. For a passing breath, James thought that maybe Mae could make him happy. She pushed him again, forcing him to give up on his internal seriousness. She gave him a wet, salty hug and started laughing at him.\n\n\"What?\"\n\n\"You've got seaweed in your hair, James.\"\n\nHe felt behind his head and sure enough, removed a long length of kelp. When he looked back to Mae, she was already back under the waves. Before he went to catch her, James nodded to himself. Mae was a wonderful friend, and a good pianist, but there was nothing more there. The water lost its initial chill, and James leaned back, bobbing like a cork in the water, enjoying the sun, and letting his heart lighten, if only ever so slightly.\n\nThis was better.\n\n***\n\nCecilia pulled on an Under Armor turtleneck, some swishy track pants, and tightened the laces on her trainers. Her clothes purposely covered as much skin as possible. The charcoal grey colour wasn't eye catching, and she didn't put makeup on. She told Dr. Shriz she'd go and write something. It was probably good to write. But she didn't want to face Sebastian. She ignored his phone calls and told Clara to make excuses for her. Sebastian even lingered outside the yoga studio the corps frequented hoping to \"run into\" Cecilia again. The drab clothes Cecilia chose today were another layer of mental armour.\n\nCecilia surprised Clara when she responded in the affirmative to come with her to the \"Streetcar\" auditions. Clara invited Cecilia constantly. For weeks, Cecilia put her off. Therapy was having a good effect on Cecilia, Clara thought. She smiled at the tepid improvement.\n\nWhen they walked into the studio, Sebastian immediately noticed Cecilia accompanying Clara. Cecilia looked through him, almost as if he wasn't there. He almost called out to her, but Alicia, Gabrielle, and Sophie swarmed around her. Sebastian wanted to avoid an audience this time.\n\nCecilia settled in her usual corner with her friends' spare toe shoes and foam rollers.\n\nWhen the piano player started the music for their warm-ups, Cecilia opened her blank notebook. Instead of poetry about dance, all Cecilia could think about was how inferior this piano player was compared to James.\n\nSo she wrote about James. She wrote about how much she missed him. She admitted that her infatuation with him hadn't gone away. Scrawled across a few pages of her notebook was a confession. She even wrote a comparison between James and Sebastian. The dancer paled in comparison to the pianist at every turn. Her obsession with James grew even as his distance from her did.\n\nThe act of writing it out made Cecilia raw. She felt incredibly breakable and when the piano stopped, signaling the dancers' first break, she came back to herself. Sebastian sauntered toward her. The lines of his body were exquisite, but besides a touch of feminine appreciation for his form, Cecilia felt nothing for him.\n\n***\n\nClara and Cecilia came home arm-in-arm. Clara felt very good about her dancing today, even if she was exhausted. Abe had something of a buffet of take-out spread across the butcher-block island. \"Help yourselves ladies,\" he leaned back casually in his chair at the dinner table plucking at some steamed dumplings with chopsticks.\n\n\"How did today go?\"\n\n\"Quite well, I think.\" Clara answered. \"But I'm famished.\"\n\n\"Excellent. When will you find out?\"\n\n\"Soon.\"\n\n\"Well, I know Cecilia and I have our fingers crossed for you. Isn't that right Cecilia?\"\n\n\"Yes, of course.\"\n\nAbe's mobile rang, interrupting Cecilia. He was going to ignore the call, but it was from James. \"I'm sorry. I should take this... Hello? James?\"\n\nCecilia's heart leapt to her throat as she heard Abe speak James' name.\n\n\"Yes. She's right here.\" Abe handed her the phone.\n\n\"Cecilia?\"\n\n\"Yes?\" She was excited to hear his voice again.\n\n\"I hope you're well?\"\n\n\"Yes. You?\"\n\n\"Fine thanks. Listen, I've got some good news. Josh called me a bit ago. Keep an eye out for the post: He got all your documents sorted. Your passport, visa, everything. They should be in the mail this week or next.\"\n\n\"Oh\u2014that's great!\" But Cecilia felt the bubble of joy shrinking rapidly.\n\n\"Yes. So start looking at airline tickets. You'll be back in Philadelphia soon! I told you I'd keep my promise.\"\n\n\"I knew you would. That's\u2014great news! Thank you.\"\n\n\"I just wanted to be the one to tell you the good news. Would you mind handing me back to Abe? There are some logistics I'll need him to work out for you since I'm abroad.\"\n\n\"Yes. Of course.\"\n\nCecilia's spirits sunk further. She heard Abe taking directions to order her airline ticket to Philadelphia, and realized that James was handing her off to Abe. Now that he kept his promise he was done with her.\n\nOn the other end of the call, James shook in a bout of nervousness and relief. With this phone call he'd fulfill his promise. Soon, Cecilia would be back where she belonged. This was the right thing to do.\n\nAbe assured James that they'd take care of the rest of the arrangements. James took a breath to prepare to end the call when Abe stopped him.\n\n\"Wait James. Cecilia wants to say goodbye.\"\n\n\"Oh. Alright then.\" James had specifically been avoiding saying goodbye.\n\n\"James?\"\n\nThat was one of the few times she'd said his name. He gripped the phone tighter.\n\n\"I'm here Cecilia.\"\n\n\"Does this mean . . .? Won't I see you again?\"\n\nJames didn't prepare for a tearful goodbye. \"Don't you want to be getting back home?\"\n\nHe wasn't sure he could handle seeing her again before sending her off.\n\nClara, it appeared, had grabbed the phone from Cecilia's hand. \"James? Hi! Aren't you going to be in Philadelphia soon?\"\n\n\"Yes, hello Clara . . .\" James felt exasperation. Couldn't he break his own heart without everyone interfering? \"In about three weeks. I'm in Australia at the moment. We still have to hop the Pacific and perform in California and Seattle.\"\n\n\"That's perfect then. We'll have Cecilia fly home while you're in Philadelphia, James. That way you can be there to make sure she gets back safe.\" Clara kept her face neutral as Abe raised an eyebrow at her.\n\nThe idea did have merit. It tugged at the concern James had for Cecilia, so he agreed. \"I suppose I can manage that. I'll send you the exact dates and hopefully you can book a flight, and by then all of Cecilia's documents should be in hand.\n\n\"Perfect. Send the dates, and I'll make sure Abe and I settle the rest of the details. Bye James.\"\n\nCecilia cheered slightly with the prospect of seeing James again. Abe wore a fixed smile. Clara suddenly realized she had taken responsibility for seeing Cecilia off on the first leg of her journey home. Her enthusiasm for getting James and Cecilia together chilled. Once she got Cecilia on a plane that would be it.\n\nIn the intervening months, no one had actually spoken about keeping in touch after Cecilia was back in America. It made sense that Cecilia would want to put this chapter behind her. It would be wrong to intrude, but Clara was feeling like she'd be saying goodbye to a sister. After almost a year together, Cecilia would no longer be part of their lives. It would be selfish to be anything other than excited though. \"Abe, how about we open a bottle of bubbly? Abe?\"\n\nAbe seemed distracted. \"Oh, oh yes, that's a capital idea.\"\n\n***\n\nAs she lay in bed that night, Cecilia's whole being felt heavy. She knew she should feel relief or gratitude, even excitement. Anxiety weighed on her, preventing her from sleeping. Cecilia had been in London for nearly a year. After she recovered and came to trust the people in this house, Cecilia realized she settled in easily here.\n\nNow she was going back home. James' townhome in the posh part of London was like a vacation resort. She didn't have to worry about the bills, her student loans, or her job. James had maintained her lease while she was in London, but surely she'd have to make her own rent again.\n\nCecilia would need to find a new job. Working late nights at a bar in Philly seemed dangerous, wontedly reckless even, after what happened to her. Could she find some other work?\n\nThe truth that scared her the most was that she would be living alone again.\n\nThat was when her mother's voice returned after a long sabbatical. The doubt sown from years of hearing that she wasn't good enough bombarded Cecilia's sense of self.\n\nIt's about time they got rid of you. You were only ever a burden for everyone. They were nice only because they felt bad for you. You're pitiful and don't belong with them. Did you think James had any real interest in you? If he did, he got over it as soon as he realized what a slut you are. \n\nEventually, Cecilia cried herself to sleep.\n\n***\n\nCecilia nervously checked the clock. She left the townhouse at the right time, and then proceeded to wander into a caf\u00e9. Her appointment with Dr. Shirz started in ten minutes, but Cecilia had no intention of going.\n\nTrue to her word, she'd been writing. In fact, the notebook Dr. Shirz gave her was filled with things Cecilia wrote. But she knew the doctor would want to read her writing, and Cecilia couldn't stand the idea of the cool woman reading it.\n\nSince James' called to tell her that her papers would shortly be in order, Cecilia quietly fell into a depression.\n\nJames and Abe, who had saved her from a terrible fate, seemed to be ready to put her behind them. And Clara who had been nothing but sweet and understanding was also preparing to help her on her way and out of their lives. She knew that they didn't owe her anything, but it hurt to know that she'd been little more than an obligation to them. Cecilia's chest frequently felt tight, and she avoided Clara and Abe because she nearly always felt ready to cry at the prospect of leaving.\n\nAnd the things she felt about James . . . They were unreasonable, unhealthy, and unwelcome. She wouldn't get to hear him play again. The thought made her unbelievably sad.\n\nShe also had no prospects awaiting her in Philadelphia. And fewer friends. Clara's overly-helpful socializing meant that Cecilia would be leaving more friends behind in England then she'd have to welcome her home.\n\nHer best-case scenario to support herself was to find another restaurant job and hope she could make friends with the rag-tag members of the culinary underbelly. Cecilia remembered how poorly she fit in at her last restaurant job. It had been a pretty high volume restaurant, but she wouldn't be able to return. She'd need to start from scratch...\n\nWith all these reflections, it was no wonder her notebook was filled with worry, self-doubt, anxiousness, and longing. Cecilia couldn't bear to think about sharing these things with Dr. Shriz.\n\nSo she skipped her weekly appointments. For the past two weeks, Cecilia left the house and ducked into a caf\u00e9 for the hour she was supposed to be seeing her therapist. She simply couldn't endure the doctor's stare. She also knew the doctor didn't believe her answers about many of the things she was asked.\n\nIn another week and a half it wouldn't matter. Clara booked her on a flight for Philadelphia last night. Her documents had arrived in the post a week ago. The only reason she wasn't on an airliner right now was because James was touring the west coast of the United States and he wouldn't be in Philly for another two weeks. Cecilia ordered a coffee and watched passersby though the window.\n\n***\n\nMae gave James one more fond hug. They each had a wheeled suitcase with them and a carry-on bag slung over their shoulders. \"Take care of yourself James. I should be in London sometime in the spring, but I'll keep in touch.\"\n\n\"I will, Mae. Thank you for everything. I mean it. Playing with you has been the redeeming highlight of this tour.\"\n\n\"Thank you for that James. I hope you find what you're looking for.\"\n\nJames didn't know how Mae knew to say things like that. Be he hoped to find the object of his mysterious quest too.\n\n\"Call me when you land.\" He replied.\n\nWith that Mae went to board her flight back to Japan, and James walked to the other end of O'Hare to catch his flight to Philadelphia.\n\nJames had had a few weeks to steel himself for this trip. In roughly three hours, he would be at Philadelphia International Airport to receive Cecilia and see her home. It was only James' pride that spurred him on to keep the promise he made to Cecilia. But he was a man of his word, and he wouldn't compromise his honour over a trivial thing like his fractured heart, after all, carrying on in silent desperation is the English way.\n\n***\n\nClara was uneasy about all of this. She suspected Abe felt the same. He'd been all business and matter-of-fact as they organized the logistics for Cecilia's departure. Clara did her best to remain cheerful as she helped Cecilia pack the belongings she'd accumulated over the past year of living with them.\n\nCecilia seemed ready to put the whole affair behind her. When Clara suggested giving Cecilia one of her garment bags to pack the sapphire evening gown she'd worn to the Alice premier, Cecilia tried to demure, saying she should probably leave the gown behind all together. At that point Clara insisted, and Cecilia begrudgingly accepted yet another parting gift. All of the clothes, shoes, books, and even Clara's old purple iPod were packed away with vague mutterings that she'd need clothes once she was back home, and she should have the playlists of music that she and Clara bonded over, as well as recordings of James' performances.\n\nThrough a monumental emotional effort on her part, Cecilia managed to hide all the hurt she felt as Abe and Clara prepared to be rid of her. Clara came home a week ago after rehearsal with the exciting news that she'd landed the part of Stella in Streetcar. While she was wanted to celebrate with Clara and Abe, her heart wasn't in it. She'd never see Clara perform it, or see Clara dance again for that matter.\n\nCecilia was used to people saying goodbye tearfully, with empty promises to remain in touch and meet again soon. But Abe and Clara made no suchpromises, and Cecilia followed their lead. Perhaps it was kinder this way, Cecilia thought bitterly. At least they aren't pretending they'd miss her.\n\nThe last few days before Cecilia's departure from Heathrow were eerily quiet in the townhouse. It seemed they'd run out of small talk, and no one knew what to say about the past year they'd spent together. Cecilia continued to pretend to see her therapist right up until the end.\n\nNeither Abe nor Clara wanted to pressure Cecilia into revealing how her therapy was going, but they didn't really want her to leave. The night before her flight, Clara practically begged Abraham to convince Cecilia to stay. It had been at Abe's insistence that Clara refrained from telling Cecilia that she'd be missed, that she wanted to keep in touch, that they would come and visit.\n\n\"Clara, she made the best of her time with us, and I liked having her here too, but she seems ready to put this behind her. James decided that she needs to be able to start a fresh chapter, and I think there's wisdom to that. You\u2014we\u2014have to let her go. She doesn't want to stay here with all these memories. We need to respect that.\"\n\n\"Abe, it's not right though. We're a family now. It feels wrong. You've said yourself James was being thick about this!\"\n\n\"I did. And I also said it wasn't our place to interfere where James and Cecilia are concerned.\" His voice was firm and Clara knew he was ready to end the discussion.\n\nShe pushed him anyway.\n\n\"But\u2014don't tell me you'd handle it like this. I've never heard her talk about any friends or family in America. What if she's all alone there? We're abandoning her! She could just stay with us. She's got her papers now.\" Clara tried to be persuasive.\n\n\"Clara, it doesn't matter how I would handle this. It's between James and Cecilia.\" Abe sighed, familiar with the fierce look on his wife's face. \"James promised her he'd send her back home, and she accepted his offer of help. She never asked for anything else. She didn't try to keep dating that tosser from the company... it looks to me as if she wants to go back. That's enough. If she's your friend you'll be happy that she's returning home where she belongs.\"\n\n\"Can't we just\u2014,\" Clara began to plead her case anew.\n\n\"No! Clara, stop it.\" Abe's voice betrayed his frustration. \"The case is closed Clara. I'm having no more of it.\"\n\n\"Please Sir, can't you at least\u2014?\"\n\n\"Clara! Enough. There's nothing for me to do. You've just earned yourself a paddling. Continuing this line of question won't change my answer, but it will increase your punishment.\" Abe crossed his arms, waiting to see how far she was willing to push it.\n\nHis ballerina hung her head in defeat. \"Yes Sir.\" She tried to blink back the tears for a moment until she realized that she'd only loose them tomorrow when it was time to say goodbye.\n\n\"It's\u2014it's not right Sir. She belongs here with us. I know it. I don't want her to leave.\"\n\nAbe scooped her up, and sat in his armchair with his wife in his lap. He agreed with her reservations. But as long as Cecilia seemed happy to leave, he wasn't about to interfere. James sounded better the last time he'd been on the phone, but all in all, Abe doubted that James was fully past what had happened, and considered if Cecilia's departure really was the best way for either of them to recover.\n\n\"Clara, I know. But this one's out of my hands. See if you can write or call her once she gets settled. You know she never should have ended up in England? You remember that she was forcibly taken from her home? James is trying to undo all of that and honor his promise. I'm not going to second guess either of them on this matter.\"",
        "In her husband's arms, Clara cried out her tearful goodbye. She didn't want to be selfish; she knew Abe was right, that if Cecilia wanted to put everything behind her, it would be wrong to prevent her from moving on. Clara was sorry to see her friend go. In the year they'd spent together under the same roof, Clara had gotten to know Cecilia well, or so she thought. Now that Cecilia was leaving, Clara wondered if what they'd had was friendship or if Cecilia was just surviving as best she could. \"Cry it all out Clara.\" Abe rubbed her back. \"Get it out now so you can be strong tomorrow.\"\n\n***\n\nLeaving Abe and Clara at the gate to her terminal was draining. The couple obligingly helped her check her luggage once they arrived at Heathrow. Cecilia tried to insist on taking a cab, but they refused, insisting on driving her. Finally, Clara mentioned keeping in touch and gave Cecilia her screen name on Skype. With this clich\u00e9 platitude, Cecilia knew they'd reached the end of their acquaintanceship. Abe cleared his throat when Clara mentioned phoning them after she landed.\n\n\"I'm sure James will let us know. You and he should be landing at the same time. You do have his flight number, just in case he gets delayed?\"\n\n\"Yes. I've got it.\"\n\n\"Well then. I suppose this is it.\" Abe gave Cecilia a one-armed hug. \"Take care of yourself and send our love to James too. Best of luck to you.\"\n\n\"Thank you for everything. For saving me. F-for sending me home. I mean it. I owe you twice now.\"\n\n\"Think nothing of it. You made life a bit more interesting for awhile there.\" Abe cracked a smile.\n\nClara was strangely emotionless. \"Cecilia, do be safe. I want you to know how lovely it was to have you. I'm going to miss the fun we had together. Do think about calling or messaging me? I'd love to hear how you're doing.\" She threw her arms around Cecilia and hugged her tightly.\n\n\"Thank you for everything. Really. I don't know how I can thank you both.\" Cecilia felt she should say more, tell them how much she'd miss them. Instead she glanced at her phone. \"Well, it's time for me to go. They'll be boarding soon. Thanks again.\"\n\n***\n\nThe air pressure in the cabin finally stabilized, and Cecilia's ears popped so violently she couldn't believe the businessman next to her couldn't hear it.\n\nCecilia silently wept as her plane ascended, taking her away from England. Keeping a stiff upper lip took too much energy, and she'd have to regain control of her emotions once she landed and met James. For now though, she closed her eyes and hoped no one would notice. A flight attendant tapped her on the shoulder with a knowing look and handed her an eye mask like one would wear to sleep. Perfect. Now no one else would see while she got herself back together.\n\nIt seemed so unfair. After being kidnapped, beaten, abused, and rescued you'd think that maybe there would be a happy ending. Instead she had all the baggage of her traumatic experience and some short-lived friendships that wouldn't survive the trans-Atlantic distance.\n\nOnce she blocked out the people around her, Cecilia heard a familiar voice.\n\nSee? I told you they wouldn't want anything to do with you. What? Did you think they would KEEP you? You're no better than a stray cat. Don't go getting all sentimental to see James either. In case you didn't notice, they're happy to be getting rid of you. He doesn't want an ugly slut like you. Abe and Clara are glad you won't be a burden to them anymore. It's time you face facts: You think you're owed some happily ever after? James discharged his promise, and that's more than enough where you're concerned. If there are knights in shining armour, than they won't be after you. You're an inconvenience, not a damsel in distress.\n\nThe prospect of returning home to an empty apartment and a dead-end job meant that her mother's voice got bolder and interrupted her thoughts more frequently.\n\nIt was a long flight back to Philadelphia.\n\nAt customs, Cecilia felt a wave of anxiety that her passport wouldn't be accepted. Instead, the officer stamped her passport and welcomed her home.\n\nHome was a surreal word to use here. The poetic rhythm of posh English accents was replaced with harsher American tones in a polyglot of variants. Cecilia walked over to luggage claim and let the cacophony of the airport insulate her. She wondered if the skyline would look the same, and if she'd still be able to navigate the city with the same ease she used to. Cecilia hadn't considered not remembering how to get around anymore. She'd only thought up to this point, and now . . . She didn't pay close attention as suitcases spun their way around the carousel.\n\nJames saw Cecilia walk over to collect her things, and then stand still looking out into space. He swallowed. For the flight she'd worn comfortable leggings and an oversized sweater that emphasized her daintiness. After months away, James forgot the affect she had on him.\n\nShe didn't see him as she walked past. \"Cecilia. Cecilia!\"\n\nAn elegant voice cut through Cecilia's daze. Then a hand was at her shoulder making her jump. \"Cecilia.\"\n\n\"Oh!\" she cried out in surprise. \"James! I didn't think you'd be here yet.\"\n\nHe tried to let her catch her breath. \"My flight was early, so I thought I'd meet you here.\" He motioned to her carry-on. \"Here, allow me.\"\n\nCecilia easily gave up the messenger bag with her books and music. \"Thank you.\"\n\nJames hugged her stiffly as he took her bag. \"I'm glad to see we both made it.\"\n\n\"Yes.\" They stared at the revolving parade of luggage waiting for her suitcase to appear. Conversation stalled. James' elation at seeing Cecilia simply wouldn't go away. He never was any good at small talk, but he tried. \"It's not often the airlines cooperate for such a perfect international rendezvous.\"\n\n\"No. Oh! That's mine. And there's the other one.\" Cecilia grabbed her suitcase and the garment bag, but James relieved her of the unwieldy items, awkwardly handing back her messenger bag. \"Is that everything?\"\n\nIt all seemed very final. \"Yes.\"\n\n\"Alright. Ready to be home?\" James plastered a smile on his face. He didn't want to leave her yet.\n\n\"Of course. Thanks for coming to make sure I made it alright.\" Cecilia didn't know how much longer she could stand this proximity. \"I'll just grab a cab.\"\n\n\"Don't be silly. I'll pick up my rental car and see you safely home. Like I promised.\"\n\n\"You don't have to, you know. I'm sure you're busy. Didn't Clara say you had a performance tonight?\"\n\n\"I do, but it's a solo performance, so I don't have to meet anyone at a specific time for a rehearsal. Let me do this for you.\"\n\nCecilia was going to resist. \"I'm taking you home, Cecilia.\" His voice came out ever so slightly clipped, and sent a shiver down her spine. He didn't wait for her; he seized her suitcase and set off down the terminal, expecting her to follow.\n\nShe walked quickly to catch up with him. He smiled when she fell into step with him. He just couldn't help himself with her. But this wasn't harmful, only gentle teasing, and he knew that once he saw her home it'd be over for good and all. Now that his penance was almost over he felt his guilt lifting. He could take pleasure in knowing he'd done the right thing. Even so, he should have thought better of the suggestion he was about to make. He turned to her and asked, \"I don't suppose you'd like to come to the performance tonight? I can get you a ticket.\"\n\nCecilia blushed deeply and blinked repeatedly. \" Umm... I'm... maybe... but I have so many things to sort out... not that I wouldn't like to...\"\n\nJames heard her evasive let down and nodded. \"Of course. I understand, naturally.\" It hurt that she didn't want to stay with him longer, but he wouldn't hold that against her. \"I just remembered you'd mentioned coming to a concert in London, and since it doesn't look like we'll have the chance, maybe I could make it up to you tonight.\"\n\n\"Oh.\" He'd been trying to be kind too. \"Yes, we did talk about that. But I don't think it's a good time.\"\n\nJames picked up his rental car, and opened the passenger door to let Cecilia in. \"I know Britain is in the minority with left-hand drive, but it still takes getting used to.\" He kept smiling at her. Cecilia didn't think she could stand any more of his pity. She nodded at him.\n\n\"I've got Sat-Nav. Just tell me where to go.\"\n\nCecilia gave him the address of her South Philadelphia apartment, and he slid the German sedan into gear. Pulling out of the airport, they crossed the Delaware River, and Cecilia saw the Liberty Towers crowning the skyline. She gasped. Even the ugly Comcast building looked beautiful as it reflected the mottled blue tones of the cloudless sky back at her. It was sunny in Philadelphia today, and for a moment Cecilia did feel a sense of joy and homecoming at returning to the City of Brotherly Love.\n\nJames' heart swelled at the sound of Cecilia's excited gasp. \"Missed it?\" He was happy to finally be the source of some pleasure for her.\n\n\"I did.\" She said breathlessly. \"It hasn't changed much. I wondered if it would look very different. It's like it was waiting for me.\" She sounded alittle sad, but James figured that after being away for so long, homecoming would be a bit tumultuous.\n\nSmall sounds of nostalgia and surprise punctuated the rest of the ride as James followed the directions to Cecilia's flat. He let her absorb everything without comment, but his grip on the steering wheel tightened. The closer they got, the more run-down the building appeared. Some were completely abandoned with shady-looking figures loitering around the derelict structures. Truants populated the parks. Trees started to disappear from the landscape, and by the time they pulled up to Cecilia's street they were in the heart of a concrete jungle. Trash and old city council campaign signs swirled in a breeze in a parody of a dust devil.\n\nJames double-checked the address. Could this be right? He knew her apartment came cheap. He'd assumed her rent so that everything would be here when he returned her to her home. But this . . . he didn't want to leave her here. She definitely wasn't safe here. The black rental BMW attracted stares and raised eyebrows from people perched on the front stoops of the row homes that populated the area.\n\nHe thought back to Cecilia's abduction. He never asked her how or where it happened, but he couldn't imagine the people around here lifting a finger to help her.\n\nWhen James pulled up to her street, Cecilia was amazed that even the abandoned vehicle in the vacant lot was still where it had been before she'd been kidnapped. It was a relief and a bit creepy that nothing changed here while she'd undergone a total transformation in London. At least she'd be able to pick up where she left off. She tried to open the car door, but it was still locked. \"James, let me out. We're here.\"\n\nThe last thing James wanted to do was unlock her door. He didn't know what to ask her. She just confirmed this was the place, but he didn't want that to be the truth. \"James. Come on.\" Reluctantly, he pressed the button to unlock the car doors and pop open the boot.\n\nHe set his jaw and said nothing as he shouldered Cecilia's belongings and followed her. Cecilia was afraid her keys wouldn't work anymore, but they slid easily in. The hallway was crowded with junk, and they had to walk single file up the stairs. \"I'm on the second floor.\" Cecilia wasn't sure why she was explaining this. \"It looks like my downstairs neighbor is still hoarding.\" That was why. She didn't want James thinking she was the hoarder. The second key also eased open as if she hadn't been gone for nearly a year.\n\nThey walked in without a word. A carpet of dust coated everything, undisturbed. This was a good sign to Cecilia. She hadn't been robbed while she was away at least. James surveyed the flat. It was larger than he would have thought, but there wasn't a security system, and he thought it would only be too easy for someone to break in. \"Where can I\u2014?\" he asked looking for a place to deposit her bags.\n\n\"Oh, thanks, I can handle it from here. I think I'll need to give the place a good cleaning,\" she said, looking around the flat. \"I can't thank you enough for helping me keep it while I was in England. I don't know what I would have done otherwise.\"\n\n\"It's no matter.\" He was very close to her now. Clearly, this was where he was supposed to say goodbye.\n\n\"Are you certain you won't come to my concert tonight? It's no trouble, and this will all be here tomorrow.\" He wasn't happy about that part.\n\nCecilia moved away from him quickly, surveying her flat. \"It's a bit musty in here, anyway, I have so much to do. I just don't think I should procrastinate.\" She wasn't looking at him. He followed her and noticed her bookshelf lined with countless titles: classics, fantasy, a hint of romance, lots of adventure, volumes of poetry. This was the only thing in the apartment that matched her personality. All the rest of the furniture was sourced from cheap Scandinavian manufacturers of the do-it-yourself variety.\n\nCecilia breathed deeply and steeled herself for this last hurdle. \"I want to thank you James. I know you went through a lot to help me and bring me back. I'll never be able to thank you enough.\" She started opening her window to air the apartment out. \"You saved my life. You returned me home You...\" She trailed off and shook her head. \"I'll never forget you. Or Clara or Abe for that matter.\"\n\nShe was dismissing him. Through the open windows James heard car horns and shouting. He had been though a bit to bring her back. But now that she was here, it seemed like it had been a futile venture. He hadn't regretted a minute of it until now. Seeing her here was not worth it. It could have been worth it, if James could know she'd be safe. But it seemed like he'd spent all that time fulfilling an empty promise.\n\nCecilia felt herself running out of time. If he didn't leave soon, she wouldn't be able to maintain her calm demeanour. Why wouldn't he just leave already? \"I suspect you've got a lot to get settled yourself before tonight. Don't let me hold you up.\" She gave him his out.\n\nJames looked down at his feet. He ran out of things to say. \"Right then. I suppose I'll leave you to it. I won't forget you either. Neither will Abe or Clara. Er, you know you can call me tonight if you need anything?\"\n\n\"That's nice of you. But I'll be fine.\" Cecilia turned away so she wouldn't have to see his handsome face any longer. \"You should go.\" The part of her that was still enamoured with James was angry with him for not wanting her. That part wanted to yell at him that if he was going to leave her here alone to restart her life, the least he could do was leave her in peace. But the rest of her heart was breaking, and she couldn't muster the rage.\n\nThe brief hug at the airport was the first time James touched Cecilia since they went to see Clara dance. Now, James longed to have that night back, to act on his feelings, even if it was wrong. Instead, he nodded and moved towards the door. \"Take care, Cecilia.\" He was about to hug her goodbye, but checked the motion. She didn't want him here. He could feel it, and if he honestly cared about her, he'd heed her wish.\n\nJames closed the door behind him. A beat. Cecilia heard the door latch, and bit her lip, as tears poured. She almost hadn't made it. Her knees buckled and she crumpled on the floor, sobbing and waiting to hear the front door close the chapter on her involvement with James forever.\n\nBelow on the landing, James could hear more shouting from outside. Even though it was the middle of the day, most people didn't seem to be at work. His throat was tight. He expected the weight to lift. It was done. He'd made good on his promise. Once outside, he looked around and felt eyes on him. He couldn't leave her here. He didn't care anymore about the rightness or wrongness. He'd spent so long hating himself and trying to return Cecilia to her old life that he'd hadn't noticed there wasn't much to return her to. He stood stock-still in the doorway, reluctant to close the door and lock himself out.\n\nShe could be angry with him, but if he left her here he'd be doing her a greater harm. The truth of that thought clicked into place.\n\nThis new understanding made his resolve strong, but it also heightened his feeling of possession. He turned around, and tore back up the stairs, hoping he wasn't locked out, and certain that he'd tear the door down even if he was.\n\nHe closed his eyes in brief gratitude when the door opened. He heard her sobs before he saw her. \"Cecilia? What's wrong?\" She was on the floor with face in her hands, weeping.\n\n***\n\nHe couldn't be here again. She was already hallucinating his voice saying her name. She looked up and saw his blurred figure through her tears. She chocked on a sob, terrified that someone was invading her home, but saw James standing boldly in the doorway.\n\n\"Wh-what are you still doing here?\" she sharply accused him.\n\n\"Cecilia? What's the matter?\"\n\n\"I told you to get out!\"\n\nSomething about the tone in her voice grated on James' nerves, or perhaps it was having his words used against him still.\n\n\"No.\"\n\nHis response was so even, Cecilia wasn't sure she heard him properly. \"Get out of here! Can't you see I don't want you here? GO!\" Her tears were angry now.\n\n\"I'm not leaving Cecilia, and I'd like to see you try to make me. Get up.\" His voice grew firm, but he held out a hand to her. She covered her face with her hands, trying to block him out. When she refused his hand and ignored his order, he scooped her up bodily, and held her upper arms tightly. She shut her eyes tight, and tried to pull away.\n\n\"What are you doing? Let go of me!\"\n\n\"No.\" With one hand he held the side of her face in a caress, but she turned and pushed at him weakly. \"Cecilia, look at me.\"\n\nThe dominant part of James lay dormant after his failure with Natasha. It awakened in full force now as the object of his desire refused to comply with his wishes. His hand snaked behind her head and grabbed a fistful of her hair, tugging to direct her face to his. \"Oww! Get your hands off me!\" She lashed out with a fist, but before she could make a move, he caught her wrist.\n\n\"Let go!\"\n\n\"No. Cecilia. Calm down and listen to me.\"<br ><br >Despair gave way to fury. \"Why should I? You're done with me now. I'm home! If you haven't noticed. Now let go of me! GET. OUT!\"\n\nJames' whole being thrilled at touching her. \"Cecilia, I kept my promise. I brought you home. But, I've changed my mind now. You're not staying here.\"\n\n\"No!\" Her shout rang in James' ears. He was momentarily afraid someone would hear and misunderstand the argument. But his impression of her neighborhood was correct: no one around here was going to help her if she needed it.\n\n\"Who's going to stop me, Cecilia? I'm not leaving you here. There's no one to help you. I meant it when I promised to keep you safe.\"\n\nHe couldn't possibly decide to toy with her now. She'd been so close. Maybe with time she could put him behind her. But even as she struggled to assert herself, she felt his fingers in her hair, and his arm wrapped protectively around her waist. \"I can't\u2014I can't\u2014don't do this to me. I can't take it!\" Her voice was barely above a whisper and desperate. \"Please, don't do this again.\"\n\nHer begging tipped the scales. James tilted her head back and silenced her pleading with his mouth, taking full possession of her and biting her bottom lip. He could taste the salt from her tears, and felt all the conflict in her body: at war with the desire to deepen their contact and struggling with the urge push him away. Her breathing hitched as he swallowed her sobs and tears.\n\nJames didn't care if she was at war with her emotions. He was going to free her so she could feel what he felt. He came up for air, took hold of her wrists and pinned them behind her back. \"P-p-please, please stop.\" James was tired of this insubordination.",
        "\"Please, what little girl? I know you haven't forgotten.\"\n\nShe knew what he wanted to hear.\n\n\"No! Fuck you. I thought you didn't want me.\"\n\nHer obscenity and defiance shocked him as if she were a live wire. He let go of her hands.\n\n\"I-I can't take this again. You're going to leave! You're just fucking with me!\"\n\nHer chest heaved, and her eyes were blazed with rage and unshed tears.\n\nJames' voice was soft. \"Cecilia.\" He couldn't stop saying her name. He wasn't going to loose her now.\n\nHer bearing stiffened. He had some nerve to say her name like that. Like an endearment. \"Shut up James. You're fucking with me and I'm not taking it anymore.\" She stopped before she made any real confession.\n\n\"That's not how you address me. And that's what you think? You think I'm fucking with you?\" It was James' turn to sound accusatory. His blue eyes iced over. He was angry with himself for lying to her all those months ago. He wanted her. He'd wanted her since he first laid eyes on her.\n\nShe nodded, afraid to offend him with her answer. \"I can't do this again. Please.\"\n\nHe closed the gap between them, and gripped her shoulders.\n\n\"We're past all that now. I tried to keep you safe, and to keep my distance. But I can't stay away anymore. I'm done running from what I feel for you. I'm sorry. You deserve someone better, but I don't have it in me to let you go.\"\n\nShe shook her head. \"No, you're going to go back to London and leave me here, and I can't\u2014I can't go through that again. Please, just stop.\"\n\n\"Look at me Cecilia.\" She obeyed, even though she wanted to continue her defiance.\n\n\"You haven't been listening to me. I'm not leaving this city without you. You. Are. Coming. With. Me.\" Cecilia didn't have an answer to that. James kissed her deeply again, and she melted into him, no longer shying away. His free hand crawled under her sweater to caress her heated skin. He felt her whole body press closer to him and he squeezed her right breast through her bra. She moaned. \"Good girl, Cecilia,\" he soothed. She shouldn't want him treating her like this. It wasn't right, but her body still remembered its ill-fated training.\n\n\"Are you going to be a good girl for me?\" he asked as he pulled her sweater off.\n\n\"Yes,\" she gasped as he took hold of her other breast and freed her hands. Her arms circled his neck.\n\n\"You know better than that.\" His fingers dug into the soft flesh, prompting her for the proper response.\n\n\"Yes, Sir. I'll be good.\"\n\nJames growled in response and started to peel the sweater off her. The air hit her skin and she gasped again. She knew she was wet. His hands on her were so welcome. They comforted her after the torrent of her sadness. His words should scare her. They were playing the same scary game that brought her to him, but she knew James. He was a paragon of chivalry, and maybe, just maybe, this time would be different, maybe this time he would accept her submission.\n\n\"Stay still.\" He growled now. His fingers trailed over her breasts and ribcage. He tugged her leggings over her curvy hips and proceeded to remove her bra, slowly revealing her body. Her panties came next. She stood, fully revealed to him. The sight made him incredibly hard, as did the uncertain way she looked at him.\n\nCecilia's face coloured as James eyed her with appreciation. But his voice and her desire compelled her to obedience.\n\nJames slowly paced around her. The last time he saw her fully nude had been the night they rescued her and she'd been badly hurt. Now, all the wounds were healed and he could barely detect the damage that had been done to her back. She was perfect, trembling as she held herself straight for his inspection. He ran a finger down her spine from the back of her neck to the curl of her tailbone and enjoyed the responding shiver. His fingertips brushed her back and torso.\n\nFear coursed through Cecilia's whole system. James triggered her flight response, but her instincts no longer operated the same way. It was primal and visceral, but instead of actually running, Cecilia maintained the stillness, the way a deer does when it hears the footsteps of a wolf. Her whole nervous system took in more information. She detected the faint scent of sandalwood from James' aftershave, the dangerously close proximity of his body, the sound of his deep breathing and the sharp click of his shoes as he continued to circle her.\n\nHe'd admired her from a distance for so long, that it was freedom just to look at her with undisguised lust. \"Such beautiful carriage.\"\n\nCecilia didn't answer, but a sliver of pride warmed her from within, happy he could honestly find her attractive.\n\nHis fingers combed through her hair again, and he admired the different tones of chestnut and coffee that gave her hair such a rich lustre. Cecilia entered a new place altogether as his presence started to drown out everything else. His voice deepened a half-step and brought her back to the present.\n\n\"You think I'm going to toss you aside? Have my way with you and be done?\" A taunting smile played around his mouth, but his eyes didn't share in the jest. \"Answer me, Cecilia. It wasn't a rhetorical question.\"\n\nShe knew what he wanted to hear. \"N-n-no S-sir.\"\n\n\"That's good. Because nothing could be further from the truth. I've run out of reasons to keep away from you.\" James stepped behind her, his left arm banding across her abdomen, and his right crossing her bare chest, pulling her close to him. She felt his breath in her right ear. His voice barely carried over the blood pounding in her ears. \"I don't think I'll let you go at this point.\" His left hand inched down, brushing her thigh. She moaned, and James' hand crawled to her pussy, gently tracing her folds and teasing the nerve endings.\n\nIt had been so long since she'd been touched so intimately. She whimpered and twisted in James' firm embrace, but he held her fast. His arms constricted further against her frame, and his index finger probed further. \"Shhhh.\"\n\nA whine escaped Cecilia, but she calmed ever so slightly. Her pussy was wet, and James' fingers emphasized the point. \"You're already so wet for me. Do you know how much that pleases me?\"\n\nHis firm arousal behind her told of the effect she had on him. She nodded. He kept his tight hold on her and continued the digital exploration, spreading her wetness and fingering her pussy lips. Her head whipped to the left, away from his whispers. Emboldened by her embarrassment, James circled her alert little clit and chuckled as she gasped and thrust her hips into his hand. He repeated the motion and Cecilia's body strained against him this time, seeking out his touch. His right hand traced her nipple in methodical circles as his finger pressed into her sopping slit.\n\n\"You're so tight Cecilia. Do you feel that?\" He crooked his finger and pumped her body slowly, letting her adjust to the invasion. She ground her pussy against his hand. After a few moments he pinched her nipple and snuck another finger into her incredibly tight cunt. His thumb resumed circling her clit and she let out a sharp keening noise, trapped between fear at the invasion and desire for it to continue.\n\nJames played with her pussy in earnest, abandoning exploration and assuming command. His left hand grazed up her neck and guided her head back to lean against his shoulder. He felt the power of her very life force pulsing just beneath his fingers. It was nothing more than a gentle caress, with no pressure, but the gesture was one of ownership. James felt her body tighten and her breathing hasten. He slowed and withdrew his fingers.\n\nCecilia whimpered at the loss. He had her right where he wanted her. \"Do you want to come Cecilia?\" He bent to kiss her neck, distracting her. \"Hmm?\" he asked again when she was slow to answer.\n\n\"Yes Sir.\"\n\n\"Ask me.\"\n\n\"Please Sir? Please may I come?\"\n\n\"I'll think about it.\" His hand traced her neck down to her other breast and proceeded to give it the same titillating treatment. She sighed in frustration when his fingers continued to lazily play with her innermost core. \"You're body is begging to be fucked. You'd like that wouldn't you?\"\n\nHer breathing hitched. She breathed the admission, \"Yes Sir.\"\n\n\"Soon.\" It was a promise. \"Right now, you'll beg to come riding my hand.\"\n\nShe was in a place where obedience was intoxicating and instantaneous.\n\n\"Please let me come on your hand, Sir?\"\n\nGradually, he sped up and when Cecilia's body signaled its readiness, he dictated his terms. \"Say you're mine. Tell me you belong to me, and I'll let you come.\" He cupped her whole mound with his palm and she lewdly thrust against it. She heard his words, but couldn't register any thoughts about them.\n\n\"I belong to you Sir.\"\n\n\"Good girl. Come for me.\"\n\nHer entire being distilled to the areas in contact with James' hands and lips. He softly nipped her ear, and rapidly circled her clit. Her breathing came in pants now, and his arms wrapped so powerfully around her shaking frame that it looked as if she were putting up a fight instead of a surrender. A final pinch of her clit threw Cecilia over the edge and her whole body contracted, pulled in on her center, and then spasmed.\n\nJames felt her weight give way under the force of her climax. He scooped her up in his arms.\n\n\"Good girl,\" he murmured. He carried her to her bedroom and lay her down. The room was stale from disuse. He watched her come down from her high, and felt his own aching arousal intrude on his otherwise victorious thoughts: she said it. She'd given herself to him, and he wasn't about to reject such a precious gift again.\n\nHe combed his fingers through her hair and enjoyed seeing her nuzzle against his hand. He wanted her. As she came down from her high, she gave him a bashful smile, but covered her breasts and turned her hips away from him.\n\n\"You're beautiful. Don't hide yourself from me.\" His voice coaxed her. The color rising to her cheeks deepened.\n\nHer reticence made James want to tie her up and force her to reveal all of her body's secrets. He was sure he'd enjoy discovering each one. But he didn't have any rope with him. He leaned down to kiss her, and felt his heart jolt as she eagerly returned his kiss. James pulled away groaning.\n\nNot here. He'd denied himself this long; he could wait a few more hours. He smiled as a plan formulated. \"What's wrong?\" She whispered, afraid at any moment she could wake up\u2014or worse\u2014he would push her away and leave her for good.\n\n\"Nothing. But it's time to go.\"\n\n\"Go? Where?\" His bearing changed so abruptly.\n\n\"Well, I have to check into my hotel, and I do have to rehearse.\"\n\nCecilia's face fell. He was leaving her.\n\nHe caught sight of her face and a fierceness returned to his visage. \"I'm not leaving you. You're coming with me. Get dressed.\"\n\n\"What?\" Cecilia sat up. She'd fantasized about James for so long, she couldn't comprehend the reality.\n\nJames reached a hand out to her and pulled her off her tiny bed. \"As soon as you're ready we're going.\"\n\nHe didn't watch her gather her clothes and redress. He gathered up all the bags they'd carried in and when Cecilia was presentable, he exited, expecting her to follow.\n\nFollow she did. Her heart thrummed in her throat as she sat next to him in the car and contemplated events. They drove north to the Avenue of the Arts. The drive didn't take long. They parked the rental in a garage. James helped Cecilia out of the car and smiled. \"I'm glad that you'll be there tonight.\"\n\n\"Be where?\"\n\n\"You're coming to the concert. I had a ticket reserved for you, just in case.\"\n\nCecilia took a breath to absorb that it was no longer a request. It mattered very little. She did want to go. \"I-I'm not sure I have anything to wear.\" They were in the hotel lobby and a man came with a brass luggage rack to take their bags.\n\nJames looked thoughtful as they waited to check in. \"No? I'm sure you have something in your suitcases. Besides, if memory serves me, people dress fairly casually at the Kimmel. It's not like in Europe.\"\n\nCecilia nodded, still bewildered. James turned to the hotel clerk. \"Room for Ashton, James.\"\n\n\"Yes Sir. It's all here. Will you be needing anything else?\"\n\n\"Is it possible to upgrade my room? And I'll need to extend my stay for a few extra days.\" The reception clerk started typing rapidly. Everything was moving so quickly. Cecilia looked at James questioningly. \"We'll need to collect everything you want to take with you... tie up the loose ends here before we go home.\"\n\nHome. Cecilia hadn't been sure where home was for the past year. In her heart, home became the London townhouse with Abe, Clara, and James. She hadn't dared to speak of it that way. But suddenly she felt the magnitude of everything that had altered between herself and James.\n\n\"It's all set. You're booked until Tuesday, Sir. Enjoy your stay.\"\n\n\"I plan on it.\" James locked his gaze on Cecilia as he answered the bloke behind the desk.\n\nHe reached for her hand and squeezed it.\n\n***\n\nCecilia's worry about appropriate concert attire turned out to be unfounded. Feeling strange and uncertain, she unzipped her garment bad and found the blue gown. A grateful smile spread across her lips at Clara's insistence.\n\nThe suite was beautiful and spacious. After setting her suitcase down and rediscovering her gown, Cecilia sat on a small loveseat, unsure of what to do now that she was here.\n\nJames set out his black dinner jacket and noticed Cecilia's uncertainty. \"Cecilia?\"\n\nShe looked up, somewhat startled by hearing her name pass his lips. \"I have to rehearse. Why don't you relax and get ready for the night, and I'll come back for you? I shouldn't be longer than an hour or so, and Verizon Hall is only a few blocks down Broad Street.\"<br >\n\n\"Yes, I remember.\" Of course she did.\n\n\"Alright then. I'll be back. You have my mobile if you need anything, and here's a key card to the room.\"\n\nHis fingers lingered over her hand and he couldn't resist pressing a kiss to her lips. Her shiver was all the response he needed. \"I'll be back soon. Be good.\" It was more a playful suggestion than a warning.\n\nThe absence of James' presence gave Cecilia time to come to grip with the past few hours. She couldn't believe the change in James. After so long apart and his cool distance before he left, Cecilia was thrown off by having his intensity focused on her. He smiled more today than she'd seen in those few months in London.\n\nThe more fragile bit of her mind questioned the wisdom of being here. He hadn't really given her a choice. Had he? Did she care? She wondered if her enthusiasm at being with him now was even an appropriate response... And if that was the case, her responses to James back in her apartment certainly weren't appropriate. She sat for a few moments doubting her self-preservation instincts. Then the part of her soul that was euphoric at the change chimed in: He told you to get ready.\n\nMonths of aimlessness and purposelessness evaporated with his simple command.\n\nAbe and Clara often made mild suggestions about ways to pass the time, but hearing James' expectations that she be ready slowly took over her whole being. She wanted to listen to him, and was felt calm as she fished for a hairbrush and her small makeup bag out of one of her suitcases.\n\nShe hoped, as she let the blue silk fall over her, that James would be pleased. Clara wasn't there to help with her hair and makeup, but as she ran fingers through her long hair, she thought she might have learned a thing or two from her friend.\n\nWhen James reentered the suite, he saw Cecilia reaching awkwardly behind her trying to zip up the back of her dress. He smiled. \"Can I assist you with that?\"\n\nShe jumped at the sound of his voice, and turned. James exhaled in a rush. \"Cecilia, I should have told you before, but you look stunning in that dress.\"\n\n\"Thank you, Sir. Actually, could you get that zipper for me?\"\n\nHe nodded. \"I think you'll like your seat for tonight. I pulled a few strings.\"\n\n\"Anywhere would be fine. I'm just excited to go at all.\"\n\n\"Good. Because, I want you there. You declined earlier . . .\"\n\nSo it wasn't really her choice then.\n\n\"No. I wanted to. I was afraid that\u2014it would hurt too much\u2014to hear you\u2014for the last time.\"\n\n\"I understand.\" What else could he have expected? The way he brushed her aside in his studio, after laying herself bare? He felt that rejection once before. Nothing burned deeper than someone rejecting your innermost self. And no matter how well-intentioned, he'd inflicted that pain on Cecilia. \"I have to finish the tour in New York and Boston before we fly back home. So it will be far from the 'last time.'\"\n\nHe hoped if he reminded her that she would understand just how permanent a situation he believed this to be.\n\n\"Let me change my shirt and shoes.\"\n\nIt's one of life's great injustices that men can get ready for the same event in a quarter of the time it takes women, but in two winks, James and Cecilia were walking down Broad Street hand-in-hand to the Kimmel Center.\n\nPeople stared at the couple. They were fantastically overdressed. James' debonair tux and Cecilia's evening gown were a bit over-the-top in Philly, but for once, Cecilia liked the attention. The walk was brief, and James was shown into the very back of Verizon Hall. He pulled a ticket out of his jacket pocket and handed it to her with a smile. \"I got you a box.\"\n\n\"Oh!!\" Cecilia wasn't exactly sure what that meant, but the way he said it, it sounded like a big deal. \"I hope you didn't go to too much trouble.\"\n\nHe hadn't. The ticket people had been very accommodating. He was just happy she was going to be where he could see her. \"I have to go backstage. I'll come collect you after the concert.\" He squeezed her hand and kissed her temple.\n\nAn usher led her to her seat. It was near the far edge of the stage, nearly perpendicular to where the musicians' chairs were arrayed. \"\n\nPeople started filing in shortly after, and the musicians also took their seats. Cecilia saw people continue to cast inquiring stares her way, but the excitement at being invited into James' world gave her a little extra boldness to help withstand the attention.\n\nAfter an obligatory announcement to silence cell phones, the conductor crossed the stage and the entire room broke out in applause.\n\nCecilia wasn't familiar with the symphony the orchestra played, but her body appreciated it all the same. Her chest tightened and she felt physically supported by the lush sounds around her. The orchestra took very short breaks in between the movements, and Cecilia remembered the surprise and angst and passion that fed this sort of music. When it was completed, the audience stood and applauded until their hands grew numb.\n\nThere was a ten-minute intermission, after which, James would play his piece. Cecilia was excited. This music was alive to her, and she couldn't forget the effect James' playing had on her whole being.\n\n***\n\nJames thoroughly enjoyed the \"Fabulous Philadelphians'\" symphonic performance. However, he noticed his palms sweating as they neared the climax of the piece. Was he nervous? Cecilia had been his muse for the past few months. Now that she was here and would be listening, he felt a bit jittery. It was less about the performance and more about her presence.\n\nHe shook himself. Tonight, he played for her.\n\nThe giant grand piano was in the center of the stage and there were no other musicians to share the spotlight. He walked with purpose to the instrument and caught a glimpse of sapphire. He stood to acknowledge the audience and his eyes sought her out. He nodded to her. Perfect: Cecilia would be just in his line of vision when he sat to play.\n\nHe breathed deep, closed his eyes for a moment, and spread his arms wide as if preparing to wrestle the instrument. Tonight though, the difficult piece would sound as if it were natural and downright easy to perform.",
        "From the moment he sounded the first hairy chord, James could tell that this piece was about to take him somewhere uncharted. Cecilia drew her hand over her mouth to silence her gasp. Her whole body tingled on high alert. She felt her insides coil tightly around the music James played. Or was it the music that wrapped itself around her soul? That first movement brought Cecilia back to James' studio. She was a voyeur again, but this time in the midst of hundreds of others. Or maybe the others were intruding on her and James. This time it would be different. This time when he stopped he wouldn't toss her out of his space. Cecilia felt an ephemeral sort of connection to James, as if the other audience members weren't even there.\n\nIn between movements, James flashed a peek at Cecilia, and each time he caught sight of her, he felt an inch more control over the masterpiece he played. During the slower, more expressive parts, James closed his eyes. He imbued the piece with his very soul. No other piece of music would have been right for this musical confession. Beethoven wrote this masterpiece for such a moment as this.\n\nCecilia's whole being awakened to the sound of James' performance. Her body was physically aroused and she felt desperation at wanting James to hurry and finish the sonata, and wanting it to last forever. The sooner he finished, the sooner she could be near him again. But something special was happening inside James' performance.\n\nCecilia and James didn't pay attention to the audience, but they too knew that they were witnessing something special. A few musical connoisseurs tore their eyes away from James long enough to share knowing glances with each other. Sir James M. Ashton's playing was now in a league unto itself.\n\nCecilia shifted in her seat, acutely aware of her liquid arousal pooling between her thighs. She recalled this suspended state of tension, but this time she didn't resent or revile her body's response. It seemed not only natural, but also right for James to have such an effect on her.\n\nJames reached the conclusion flawlessly. Once it was over, he exhaled rather loudly, somewhat drained by his performance. The audience too held its breath until almost as one, the whole room stood to applaud such an outstanding performance. A real smile graced James' usually stoic face. He directed his gaze back to Cecilia who clutched the brass railing of her box and looked at James with longing.\n\nShouts of \"Bravo!\" rained down on James who took his bow and nodded his thanks.\n\nA few more voices called for an encore. James smile flickered for a moment, recalling Natasha's answer to that call. He shook his head and returned a fixed smile to his face. No. There was no way to follow up tonight's performance. There was no need to spoil the moment with an act of hubris. He directed another nod in Cecilia's direction and strode off stage.\n\nPeople began to gather their things to leave, a rumbling whisper of amazement and appreciation filling the room. Cecilia just sat in her seat. She felt so alive and of this world, more attached to this life than she'd ever felt. James said he'd come back for her and she wasn't sure she could manage the wait.\n\nThe conductor and the concertmaster stopped James backstage to congratulate him on the night's performance. While pleased by the warm reception, James itched to escape the conversation and get to Cecilia. There were some arch comments about James' brief love affair with Natasha Dubnikov, but at that James cut them off, grimacing.\n\n\"Actually gentlemen, there's someone new in my life.\" He ignored the raised eyebrows and carried on, \"and she's waiting for me.\"\n\nThe men nodded their understanding. \"We'll see you tomorrow night then.\"\n\n\"Yes, thank you, gentlemen.\"\n\nJames set off at a brisk pace. He fought against the crowd and spotted Cecilia instantly, given away by the bright blue of her dress among the deep red velvet chairs and wood paneling of the hall. Cecilia started to wonder if James was coming back for her, or if he'd changed his mind.\n\nHer worry was for naught though. James slowed his eager pace and reached for her hand, bringing her fingers to his lips for a kiss. She jumped at his touch, relaxed, and then smiled. James looked deeply into her eyes. She held his gaze for a second before looking down. \"That was beautiful. If you don't mind my saying, thank you for bringing me here tonight.\"\n\nJames still held her hand. \"I'm glad you could be here for that. It was your doing after all.\"\n\n\"What do you mean?\"\n\n\"That performance was dedicated to you. And made possible because you were here.\" Cecilia looked confused and embarrassed.\n\n\"I owed you that, after the way I behaved.\" Seeing that she still didn't understand, he said with conviction, \"I couldn't have given that performance without you here. It's never sounded like that before. That was the best performance I've ever given.\"\n\n\"Oh... Ummm...\"\n\nJames saved her from responding. \"I made late dinner reservations at Girasole, but if you'll indulge me, I was thinking I'd take you somewhere else. Is that alright?\"\n\n\"Of course, is something wrong?\"\n\n\"It's a great restaurant, but many of the musicians in the orchestra frequent it after concerts.\"\n\nCecilia's face fell. Maybe James didn't want to be seen with her.\n\nHe saw how she took his words. He lifted her chin to look at him. \"You mistake my meaning. I simply don't want to share this evening with anyone else.\" He brushed a strand of hair behind her ear, and she leaned into his touch.\n\n\"You don't have to change your plans on my account.\"\n\n\"Of course I do. I think you'll like this place and it'll be nice and quiet.\"\n\n\"If you're sure,\" she acquiesced.\n\n\"It's my favorite place in Philadelphia.\"\n\n***\n\nJames opened the door of their uber and helped Cecilia out. Le Virtu was on Passyunk Square far away from Broad Street and the steak houses that dotted the immediate vicinity around the Kimmel Center.\n\nIt was only an hour until closing, but the hostess assured them there would be no need to eat and run. \"In that case, can we have two flutes of prosecco and a bottle of montepulciano?\"\n\nThe hostess nodded and went to tell their server. James watched Cecilia pour over the menu, which read like an Italian encyclopedia. \"Would you mind terribly if I ordered for you?\" James worried about her response. Cecilia, for her part, was relieved. \"No. I have no idea what to order.\" Upon sitting down at the candle-lit table, Cecilia's hands started to shake like leaves. \"Just, nothing with raisins please.\"\n\nJames tilted his head at her and smiled at learning something new about her tastes. \"I think I can work within those parameters.\"\n\nWhen the server came with two flutes of prosecco, James ordered a series of dishes and asked for plates to share. \"I've never had anything here short of outstanding. I thought we could share and try a few different dishes. Cheers!\"\n\nThey clinked glasses and Cecilia murmured convivially, \"Huzzah!\"\n\nJames watched her savor the dry bubbly. Everything happened so unexpectedly today. But it was all irrevocable. James refused to turn back now that he had set a course for Cecilia and himself.\n\nThe carbonation tickled Cecilia's nose, and she remembered her dinner with Sebastian. She shook herself at the memory. This time she wouldn't have to worry about awkward questions. James knew everything already. The server brought bread and a dish of very green and fragrant olive oil. Cecilia nibbled on a piece and took in her surroundings, still amazed that she was here\u2014with James.\n\nJames enjoyed watching her. It was a pure gift to watch her appreciate her surroundings. A plate of marinated burrata came out. \"I insist. Have the first bite.\" It shouldn't have been sexy, watching someone eat, but he could tell as she savored the handmade cheese that she noticed the nuances. The soft moan of appreciation made James want to ask for the check right then and there.\n\nAlas, he'd ordered a pasta dish, and a dessert. It was a sort of fitting punishment; Cecilia's delight at the delicacies he chose were at once wonderful and torturous. Her enjoyment at a homemade rabbit and plum ravioli dish with blush wine sauce was enough to have his cock raging. She spoke softly and deliberately, and her nervous shaking endeared her to him even more.\n\nThey were waiting for dessert when James said what had been weighing on his mind: \"Cecilia, I owe you an apology.\"\n\nThis admission caught Cecilia off guard. Immediately, she wondered if he'd change his mind about her. \"Why? What for?\"\n\n\"I owe you an apology for nearly everything that's happened to you this past year. But... I'm mostly sorry for the way I treated you that day.\"\n\nThey both knew what \"that day\" was.\n\n\"I threw you out of my studio because I thought it was the right thing to do. I tried to distance myself from you because it would be taking advantage of you to act on my feelings. I should have just told you then what I felt for you, but I thought it would be unfair to you. I should have told you lots of things. I only wanted to do right by you. And I couldn't. I'm sorry.\"\n\nCecilia tried to respond, but he cut her off. \"No. Let me finish: In the end, I couldn't resist you. If I were a proper gentleman, I would have let you go on with your life, but I can't. I'm sorry. You deserve better than me. I should have at least trusted you to make the choice, but I can't loose you again. I won't take that risk again.\"\n\nPart of Cecilia registered that James' words implied that she had no choice in this, or that he wouldn't relent if she were to change her mind about him. Some strange twist of fate put Cecilia across James' path, and she wasn't sorry. She wanted nothing more than to believe that James meant all the words he was saying.\n\nOver the course of their meal, Cecilia's trembling subsided, but hearing James' say the things he felt made the shaking start all over again.\n\n\"James\u2014I don't know what to say, except\u2014\"\n\n\"No Cecilia, I know that I'm undeserving and unfair, but I'm not going to loose you again. Not while I think there's still a chance...\"\n\n\"No Sir. You don't understand how afraid I am that this is a dream. I'm afraid I'll wake up at any moment. I don't care what you think you've done wrong. You saved me and I'm glad you did. Please don't keep saying that it should be otherwise. Whatever transpired between you and that man Lace, you didn't do anything wrong. He did. He hurt me. You...\"\n\n\"I don't have the strength to resist you anymore, Cecilia.\" He paused as the server presented them with a homemade gooseberry crustada. \"That's what I'm trying to say. I'm not able to let you go.\"\n\nWhat he said should have been disturbing to her. But something about the way James said this made Cecilia feel more certain about her situation, a mercifully settled passed over her. As she thought these things, James watched not sure of her reaction.\n\nFinally she gave him a response: \"I don't want you to.\"\n\nJames stopped holding his breath.\n\nThe look he gave her was hard to read. She thought it was relief, but he hadn't looked uncertain just a moment ago, determined perhaps. With the matter settled to his liking, he changed tack and devoted attention to dessert. He held up his spoon to tap against hers, and they smiled as they tucked into the tart.\n\nOnce they were finished, it was past closing time and they were the last customers in the restaurant. Cecilia felt pleasantly buzzed. James called for another uber. This time, Cecilia moved close to him in the back of the car. He wrapped an arm around her and enjoyed seeing her relax in his presence.\n\nHe rhythmically tapped his fingers over her arm as if he were pressing keys on a piano. James recalled holding Cecilia in the back of the car the day they rescued her from the Welsh bastard's auction. She was still just as tiny, and he enjoyed the warmth of her body leaning against him. It was remarkable how well Cecilia recovered from that ordeal. Even still, every now and then her body trembled as if she were fending off a chill.\n\nThe ride back to their hotel wasn't long. They got out and James was eager to have Cecilia to himself. The anticipation was erotic enough, but Cecilia's sweet mannerisms and lovely behavior made James hard. She was every inch a submissive: from the way she allowed him to run the course of the evening and the way she surrendered to his commands earlier today, to her acceptance of his confession over dinner. James was glad he waited. But he also was happy the wait was over.\n\nHe restrained himself in the elevator, contented just to brush her hair over her shoulder to get a better view of her delicate neck and collarbone. Her neck was still unadorned for now and James wondered how soon he could remedy that.\n\nCecilia felt a subtle change drift over James. All night he'd been kind and attentive. Dinner was incredible and they simply got to know and understand each other better. His apology and admission calmed her. She slowly stopped wondering when she would come to and find she'd hallucinated the whole evening.\n\nJames' voice was low when they entered their room. \"Stand still, and don't speak until spoken to.\"\n\nUncertainly, Cecilia whispered, \"Yes Sir.\"\n\nHe'd loosened his tie as soon as he finished performing tonight, but now he pulled it off and opened his shirt collar. His dinner jacket came off and he offered Cecilia his forearms. He brusquely answered her questioning look, \"The cufflinks.\" Her slim fingers fiddled with the finicky bits of onyx and brushed steel.\n\nJames rolled up his shirtsleeves to just above his elbows. She watched him from beneath her lashes, and he saw the nervous shaking return. It seemed an involuntary reaction, and James wondered:\n\n\"Cecilia, are you scared?\"\n\n\"Umm... a bit... Sir.\"\n\n\"Tell me why.\" He worried that she was afraid he'd hurt her.\n\nShe blushed crimson. \"I've never been in this situation before, Sir.\"\n\n\"Are you afraid of me?\"\n\n\"No Sir. Not you. Just\u2014I just...\" she didn't want to talk about her previous encounters.\n\nJames braced himself for the answer. \"Cecilia, do you want me to leave you alone?\"\n\n\"No Sir.\" She replied almost too quickly.\n\n\"Cecilia, if you want me to stop, just say: 'red'. I'll listen to you. I promise.\"\n\nCecilia trusted his promises. Even if James thought he'd been going back on his word by taking her here tonight, Cecilia saw it differently. If he actually wanted her, then she didn't care. He brought her back to the States. Mercifully, he hadn't left her back at her little apartment. \"Yes Sir.\"\n\n\"Tell me your safeword Cecilia.\"\n\n\"It's 'red,' Sir.\"\n\n\"Good girl.\"\n\nEach time Cecilia said 'Sir,' James' desire burned hotter.\n\n\"Take off your shoes.\"\n\nCecilia stepped out of her heels without a word. Her feet ached and she was relieved to take them off. Her toes and ankles cracked as she did. She felt even smaller without them.\n\nShe was like a little pixie, James thought. He stepped behind her and pulled on the silver ribbon at the back of her gown. His fingers touched her shoulders softly and he took his time unzipping the blue silk.\n\nShe continued to tremble. The gown started to fall from her shoulders, pooling like water at her feet. She was left in a simple black bra and matching panties. She crossed her arms over her chest as if cold, but her face flushed red again as if she were still embarrassed. James couldn't believe how perfect she was as he stood in front of her. \"Are you cold, or are you hiding yourself from me?\"\n\nCecilia took a long time to answer. \"Both Sir.\"\n\n\"Well, I can't have that.\" He crossed to the wall and fiddled with the thermostat. \"It shouldn't take long to warm up. But I won't have you hiding yourself. That endearing modesty belongs to me now. Place your hands behind your head.\" Seeing her bow her head he added, \"And stand up straight.\"\n\nCecilia swallowed. She'd be so exposed. And it was such a familiar position. She squeezed her eyes shut, wondering if she could do this. His voice was deep and barely audible. \"Stay with me, Cecilia. Stay here with me.\" She felt his lips on her forehead and she opened her eyes. His hands rested on the smooth skin of her lower back. \"You're with me now.\" With that declaration, James kissed her. The romantic action had an edge to it. James needed to possess more than her mouth.\n\nThe kiss reached her heart and her toes, and Cecilia realized that despite the similarities, this was, in fact, very different. She'd never been properly kissed before James. Her whole time in that place with Lace, she'd never been made to feel beautiful or valued. But everything James did made her feel all those things and more. She reached to pull him closer and run her fingers through his hair, but he broke the kiss and shook his head.\n\n\"No. Hands back where they belong Cecilia.\" She almost complained, but James brought a finger to her lips. \"Shhhh. Be good.\"\n\nShe looked just the least bit pouty. James figured that in time, she'd be just a bit petulant, and smiled at the thought of needing to give her a spanking over his knee. The thought made his already hard cock throb uncomfortably. Tonight though, he would take one thing at a time\u2014slowly. Her innocence was something to savor.\n\nThe angles her slight frame made as her arms returned to position entranced James, who still couldn't believe that she was here. He noticed her uncertainty all night, and knew he was the reason. He traced her arms and elbows and brushed her underarms, surprised as she wiggled and squirmed.\n\n\"Are you ticklish, Cecilia?\" He ran his fingers over the sensitive spot again. She giggled and squirmed, trying to keep her arms up and shy away at the same time.\n\n\"Y-yes S-sir!\" She gasped.\n\nJames catalogued that information too. \"Very good. Take off your bra and panties,\" he directed.\n\nShe hesitated, knowing her panties were wet and that James was watching her every move. James watched her modesty battle with obedience. He didn't care how long it took. Her dilemma was adorable. While her reticence battled and lost, James looked on absently unbuttoning his own shirt, and putting it with his dinner jacket. It left him in a soft cotton t-shirt, which stretched enticingly over his muscular torso and broad shoulders.\n\nJames was still completely clothed, but his motions made Cecilia feel less isolated and uncomfortable. She shimmied out of her panties, oblivious to how sexy her every movement read to James. Even after everything that happened, she was still an innocent. She looked at him, nearly pleading with her eyes to be allowed to hide from his gaze. He didn't want to scare or push her. He sat on the edge of the bed and kicked off his shoes and socks. Her nipples puckered as they met the cooler air. James needed to give them a pinch. First he asked, \"Cecilia, do you want to stop?\"\n\nWhy did he keep asking her? He kept giving her an out. She wanted him to stop giving her an excuse to back out. She felt foolish for not wanting to take it. She didn't want to say it out loud, but the last thing she wanted to do was stop. She was supposed to say \"yes.\" That's what good, proper girls did. What was wrong with her that she wanted this so badly?\n\n\"Cecilia?\" She hadn't answered, and James could tell she was somewhere in her mind and not with him.\n\n\"Yes?\" the sound of her name brought her back.\n\n\"You want to stop?\"\n\n\"No!\" she replied quickly.\n\n\"Tell me.\" James needed her to be sure. As much as he wanted her, he wasn't going to push her if she wasn't ready.\n\n\"I don't\u2014I don't want to stop, Sir.\"\n\nJames exhaled. \"Come here then. Hands back where they belong.\"\n\nCecilia walked to where James sat on the bed, her body fully exposed by the position. James eyed her hungrily and for a moment Cecilia reveled in the fact that he wanted her. She licked her lips, uncertain of what was to come. His hands reached out and cupped her generous breasts. He massaged them for a moment, and just as Cecilia began to enjoy the sensation, his thumbs found her nipples. He rubbed them vigorously and then pinched them sharply. At her gasp, he pulled her another step forward. She stood close to him, almost between his legs, squeezing her own legs tightly together. James could see wetness glistening between her thighs. He was impressed by her bare pussy. He squeezed her pink nubs harder still and gave them a fast twist before letting them go, admiring the ruddy colour and the soft little whimpers she made.",
        "He rubbed them again; making circles that eased away the fading pain. \"To whom do these belong Cecilia?\"\n\nShe averted her eyes. While it screamed 'submissive' and accentuated her innocence, James thought it was something of a bad habit. She had no need to be ashamed. \"You, Sir.\"\n\n\"That's right.\" He pinched them again. \"Now look me in the eye and tell me.\"\n\n\"You, Sir.\" Her eyes glazed with lust and fear at her admission, but it was only a whisper. He pinched and twisted her nipples again.\n\n\"Say it so I can hear you, Cecilia.\" His voice took on a patient tone as if schooling her on something she should have known.\n\n\"You, Sir!\"\n\nHe freed her nipples and then stroked her back and bottom. \"Good girl.\"\n\nHis hand squeezed her bottom firmly. \"What about this? To whom does this belong?\"\n\nSuddenly a swift swat landed on her cheek. She blushed and squirmed. James didn't know if he was going to make it. \"Tell me. To whom does this gorgeous ass belong?\"\n\nShe looked at him this time. \"You, Sir.\"\n\nHe spanked her other ass cheek. \"Louder.\"\n\nShe jumped and supplied the answer.\n\n\"Good girl.\"\n\nJames' thumb traced her bottom lip, causing her to pout just so. \"And these lips? And this mouth? What about those?\"\n\nHis other hand rubbed down her back and ass, soothing where he'd lightly spanked her moments before. She was shaking again. His hands would have been calming, except the prolonged contact was further arousing her.\n\nHe pressed his thumb into her mouth and cupped her chin. \"Suck.\" She did. Her hazel eyes flashed uncertainly as she continued to obey, surprising herself and James. James closed his eyes for a moment, imagining it was his cock in her timid little mouth.\n\nHe removed his thumb and repeated his question. \"Hmmm? Who does this mouth belong to Cecilia?\"\n\nHer breathy response was too much. \"You Sir.\"\n\nHe roughly pulled his t-shirt over his head and tossed it aside. He needed her to touch him. Something. Anything to help him hold back just a little bit longer.\n\nHe gripped her hips and lifted her onto his lap. His arousal was painful and obvious. His precious little girl still kept her hands behind her head. \"Touch me.\"\n\nHer tentative reach for his neck and chest had him groaning. He spread her legs over his hips and kneaded her thighs and ass. She sighed and James kissed her with force. She pulled him closer and held onto him as if she were drowning. His tongue invaded and took possession. He had one more question. He didn't know his willpower could be so strong, because all he wanted was to take her.\n\nHis hand snaked in front of her flat tummy and found her sopping pussy. James groaned again. This was torture, and he didn't know why he was being such a masochist. He tilted his head back and collected a grain of sense. \"Who does this tight little pussy belong to Cecilia? Hmmm? Tell me.\"\n\nOnce he demanded an answer, he started flicking her clit. Cecilia couldn't think or answer. His fingers squeezed it and she gave a squeal. James haggard voice barked out, \"Cecilia. Tell me.\"\n\nHer eyes closed as she started to ride a wave of endorphins. \"You!\"\n\nHe stopped, needing to hear this. He gave her ass a quick spank. \"Tell me again. Look me in the eye, and tell me.\"\n\nHis blue eyes cut right into her. He wanted her, and the acknowledging feelings made her shudder. But behind the lust was a question. He was asking her permission.\n\nShe looked him straight in the eye, her own eyes a vivid green in this light. Knowing exactly what she said, she answered, \"I belong to you Sir.\"\n\nThat was the last bit of restraint. \"Cecilia,\" he breathed and kissed her again like he was a starving man.\n\nHe leaned back and felt her tiny weight come to rest flush against his frame. His hands ran the length of her body as he tried to memorize the feel of her skin.\n\nShe hadn't fought him, and that fact alone was enough for James to want to get set up camp in her heart. But her beautiful little body was torturing him; she got under his skin. He rolled her over, leaning on his forearms and straddling her diminutive waist, afraid to crush her with his weight.\n\nCecilia looked up at James, who kneeled back to unfasten his belt. He took her breath away; he was so handsome. Then she felt her fear return. Not fear of James, but of this last unknown act of intimacy. He divested himself of the last of his clothing in a hurry. James' cock was painfully swollen and clear fluid was already weeping from the engorged head. He fisted his sizable length and groaned. He wouldn't have relief until he had all of her.\n\nEverything she needed to know about James was communicated in one last urgent kiss, as James bent down to reclaim her mouth. She could feel his hot cock press against her leg, and squirmed. His earlier touches made her feel the same urgent need he was resisting. His lips traveled to her neck and ear, and she felt a quick bite.\n\n\"Oh, Please!\" she hissed through the jolt.\n\nJames didn't need further encouragement. He took hold of her wrists and pinned them above her head with one hand. With the other he teased her entrance again, spreading her wetness and steeling himself for a slow, excruciating entry.\n\n\"Your little cunt is so wet for me, Cecilia.\"\n\nShe felt the faintest pressure, and started at the enormous size. A whimper escaped her lips. Her hips bucked, but his tight grip on her wrists and his muscled legs spread her thighs, keeping her in place as he exerted more pressure. Her breasts were peaked with taught little nipples and James did his best to be gentle as he pushed and tore through her virginity. The sharp pain lanced Cecilia's entire core and she cried out. Summoning what was left of his fraying willpower, James stilled and brushed her check.\n\nHis weight on top of her, his massive cock stretching her, and the grip on her wrists and the soft touch on her cheek overwhelmed Cecilia. She didn't need to hear his murmur above her, \"Yes, you're mine.\" She already knew. She'd known for months, nearly a year, but now it was true.\n\n\"Yes Sir,\" she hissed.\n\n\"Good girl.\"\n\nThose words were becoming her favorite. At the praise she moved her hips trying to adjust to his size and was rewarded with James' rushing exhale.\n\nJames' patience paid off. She was incredibly tight, but oh-so wet. His muscles strained as he fought the urge to keep a steady pace. Every time she gasped, he could feel an answering clench around his cock and he wanted the feeling to go on forever. He ground deep into her, opening her up, claiming her irrevocably. He let her wrists go. \"Hold onto the headboard.\" She was too far gone, so he guided her hands up and put them where he wanted them. \"Don't let go.\"\n\nShe nodded and gave a weak, \"Yes, Sir.\"\n\nJames' dominance, tightly restrained, was unleashed.\n\nCecilia held onto the metal bars and moaned as James pulled nearly all the way out, and then pushed back in. All of Cecilia's newly discovered nerve endings sparked into life as James' cock filled her over and over. She closed her eyes as if it would help her body process all the pleasure and pain coursing through her system. Every time he thrust into her, her clit drank in the delicious friction.\n\nNo longer holding Cecilia's wrists in his tight grip, James circled her waist and held her in place, pulsing in, deeper, deeper, as if he could find more ways to impress on her his complete ownership of her. Her moans drove him wild as he claimed her body as his own. There was no way he'd ever let this creature go.\n\nCecilia's body singed with sensation. She couldn't hold on anymore and reached up for James, craving even more contact. \"Please,\" she gasped. \"Please?\"\n\nHearing her ask this time was everything he could have hoped for. His voice sounded rough, but the words were tinged with pride: \"You may come Cecilia.\"\n\nIn the space of two breaths, Cecilia's muscles contracted and her pussy squeezed James like a vice. Her head shook back and forth. Seeing her come undone tipped James over the edge and he slammed into her and growled in the heat of his long-sought climax.\n\nHe didn't want to pull out of her tight pussy. She felt too good. He kissed her again, this time softly. As he came down from the physical high he worried that he'd hurt her.\n\nCecilia's body felt like a live wire. She was so warm from James' body heat and every single sensation, even just the bedding underneath her, felt drastic and sharp. Kissing James was the perfect way to come down.\n\nJames' slipped out of her, and she hissed in pain. Sure enough, the sheet beneath her was stained scarlet with her blood. She would be incredibly sore. Reluctantly, he let go of her, stood up, and ran a washcloth under the tap. He wrung it out and first sponged off her forehead, and then spread it out over her chest, smirking as the cool towel set her nipples tightening. He toweled her down and gently cleansed her feminine folds. She didn't say a word as James affectionately took care of her. It was a deeply intimate act that spoke a thousand words.\n\nCecilia watched James take care of her in a sort of awe. Her savior and now her lover... she couldn't believe she was here. He stroked her back and ass all the way down to her ankles. Cecilia was so relaxed she couldn't contemplate moving.\n\nOnce he'd finished cleaning her off, he climbed back into bed behind her and pulled her close. Everything about her tripped his dominant instincts. She'd just given him everything: her trust, her body, her obedience. She belonged to him in a way she'd never belong to anyone else, and he couldn't help but swell with masculine pride at knowing that.\n\nHe kissed her temple, and she turned her body to face him. Cecilia nuzzled into his broad chest and enjoyed the feeling of safety she found in his arms. Within moments she was deep asleep. James reached to turn off the bedside lamps and followed her to a restful, dreamless sleep. "
    ],
    "authorname": "poeticlicense91",
    "tags": [
        "bdsm",
        "first time",
        "music",
        "m/dom",
        "f/sub",
        "orgasm control",
        "control",
        "lovemaking",
        "spanking",
        "teasing"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/chords-that-bind-ch-14-sonata"
}