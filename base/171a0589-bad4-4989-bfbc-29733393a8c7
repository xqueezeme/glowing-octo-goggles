{
    "title": "Lost Empire Ch. 16",
    "pages": [
        "It had been almost twelve hours and Mary had been following the progress of Rear Admiral Joseph Hartwell. After sending him to Abrir Oculta Providence to retrieve Derrick's family she could only wait. Checking in on Derrick every few minutes there still hadn't been any improvement. Not really one to worry that much Mary was actually hoping that his family would jar his memory. It was far too dangerous to try most of the other remedies that had been prescribed. It appeared that while increasing his intellect and cognitive abilities Derrick's head set process had also loosened his tight grip on the present, hence only a slight knock had rendered him with no memory. \n\nMary was just hoping that the jar of seeing his family would be sufficient enough to bring him back. Finally she saw that the Rear Admiral had left Abrir Oculta heading toward the imperial planet. Opening a channel Mary needed a progress report, \"Rear Admiral,\" she started slightly startling the bridge crew, \"Did you have any problems?\" \n\n\"Uh no, by the way what do I call you?\" Hartwell asked Mary. \n\n\"At present my current title is imperial advisor and head law holder. Also I am at an emergency contingency 'til such time as the emperor releases me from it. This means I will do everything within my power to protect the imperial planet and the emperor.\" Sighing at the confused look on Hartwell's face she said, \"Just call me advisor Mary, it's about as close as most will get to my full title.\" \n\nHartwell nodded making note of it, \"We have both Sherry O'Toma and Milley O'Toma aboard. We should arrive in ten hours.\" \n\n\"Unacceptable. Shelby, please transport the ranger ship here. Shelby should have you here in a minute or so,\" Mary advised Hartwell. \n\nLooking out a huge, sleek, black skinned ship flashed in directly above them, emitted an eerie beam then they both flashed and were in the vicinity of the imperial planet. Most of the bridge crew was staring opened mouth at the view screen. The science officer walked up to Hartwell with a look of surprise and want on his face, \"Sir according to the stellar readings we just crossed over half of the galaxy in five seconds! OMG! I want one of those!\" \n\nHartwell chuckled a moment his self in awe, \"You and me both Anders, you and me both.\" He said almost in a whisper. Suddenly there was a commotion in the passageway connecting the bridge to the rest of the ship. \n\n\"I don't care what he said, I want to see that idiot NOW!\" Sighing, Hartwell knew the sound of Milley O'Toma's voice anywhere. She might be old but she was still as feisty as she was when she was younger. Pushing her way onto the bridge she stood next to Hartwell's chair with her arms crossed. \"So when are we due to get there?\" She asked before she looked at the view screen. \"Is that the imperial world? I knew that the Rangers had fast ships but this is...\" Milley's mouth dropped open when a three mile long ship came into view. \"OMG!\" She was whispering, falling to her knees, \"I thought he was telling stories, they are real then the rest of it has to be true also!\" \n\nHartwell looked at her strange what was she talking about? \"Ma'am?\" Hartwell asked her, \"What are you talking about?\" \n\n\"That,\" she whispered in awe, \"it is just as my husband described it, I just thought it was one of his wild stories.\" \n\n\"You know what it is?\" Hartwell asked her a little shaken now. \n\n\"Yes,\" she said never taking her eyes off the sight before her, \"it is an Elite Imperial Guardian, all these years I humored him and he was actually speaking the truth!\" \n\nShelby couldn't resist and appeared on the Ranger ship's bridge, \"it is good that someone remembered us!\" she said as she smiled at Milley. Then she was gone as the Ranger ship's holograph equipment wasn't that good. \n\n\"What was that?\" Milley asked. \n\n\"That was a hologram of the Artificial Intelligence personality on board the ship you see there I believe.\" Hartwell tried to explain to her, as well as the rest of the bridge crew that were listening with rapt attention. \n\n\"Artificial Intelligence? Personality? What in the hell are you talking about?\" Milley said finally starting to come to her senses. \n\n\"When I met the emperor, he told me he had four of these ships at his command. Derrick was helping him, though he, nor I knew who the man was.\" Hartwell told her. \n\nMilley O'Toma could only shake her head Derrick was helping the new emperor? Remembering back before her husband had been found dead, she was starting to remember quite a bit. What was it he had told her numerous times? AH! That he, their son and Derrick were descended from the imperial line. It was still a bit of a shock for her to take, wait they were descended, that meant... \n\nLeaning close to Hartwell she whispered, \"Derrick is the emperor isn't he?\" Hartwell's eyes grew wide then looking around he gave her a look as if to tell her not to ask again. Nodding, she thought for a few moments before she spoke again. \"So when will we know about Derrick?\" She asked. \n\n\"Well...,\" Hartwell started. \n\nSuddenly the voice of Mary was heard, \"Ah! Good! You're participation is greatly appreciated, please have the two females on the bridge so I can effect a transfer.\" \n\nSnapping her head up Milley growled at the voice, \"I have a name, I am going nowhere without an explanation, especially with one as rude as you!\" \n\n\"I apologize Mrs. O'Toma but you and Derrick's mother are required as soon as possible to be with him.\" Mary found it extremely distasteful and disrespectful to say the emperor's first name, but in order to keep up the charade she felt he would want her to. Milley's face was suddenly worried hearing Mary's words. \n\n\"I'll get Sherry and call you when we are ready, I just hope Derrick isn't injured too bad.\" Milley said as she ran from the bridge to get Sherry. Almost running to their room Miley grabbed a confused Sherry. \"We have to hurry; the voice said that we needed to be there with Derrick as soon as possible. I am worried that he was harmed far more than these idiots in the Rangers told us\" \n\n\"My god, Derrick has survived so much and now they and you tell me he is on an alien looking ship? It took both of us so long nursing him back to health, I'm hurrying Milley!\" Sherry O'Toma said, as Milley grabbed her arm and started pulling her with more strength than Sherry thought Milley had. \n\nArriving back on the bridge Milley and Sherry nodded to Hartwell, \"Advisor Mary, they are both here on the bridge,\" Hartwell spoke into the communicator. \n\n\"I wonder how...\" Milley started, \"long we'll have ... to wa ... what the hell!!??\" \n\n\"Welcome aboard,\" A blonde, green eyed, slender woman smiled as they both stared at her. \"I am EIG-0101F though I was ordered to go by the name given me. If it is more appealing to you, please call me Shelby, Derrick insists that we use our names we were given. Actually I prefer the name also more than my EIG designation.\"\n\n\"Obviously Derrick has been extremely busy since we last saw him,\" Milley told a wide eyed and gaping mouthed Sherry. \n\nFinally finding her voice a slightly trembling Sherry looked at Shelby, \"Just where are we?\" \n\nShelby smiled even wider and her face softened, \"You are on board me, well the ship; you see the ship and I are one.\" \n\n\"We were told you are an Artificial Intelligence personality,\" Sherry said. \n\n\"Yes I am, though I and the ship are integrated in a way. Hmmm think of it like this I am the brain, the ship is my body does that help?\" Shelby smiled sweetly. Sherry shook her head looking at Shelby as if the hologram was crazy. \n\n\"Enough of this,\" Milley said, \"Where is Derrick? From what we heard earlier we are worried that he is injured far more than we were told. I demand to see my grandson immediately!\" \n\n\"Yes of course Mrs. O'Toma, please follow me or would you rather go via the IMT?\" Shelby asked. \n\n\"If that is the there, then here in a few seconds, I think I'll pass unless I have no choice.\" Milley told a still smiling Shelby. Shelby started to walk towards a door that slowly slid open, from the other side they could faintly hear a slightly distressed Derrick's voice.\n\n\"I don't care what your orders are! I want out of this contraption! You said I wasn't a prisoner; let me out of here NOW!\" Came Derrick's voice.\n\nMilley shook her head as did Sherry, yes that was Derrick, same temper and all. Walking a little further they finally rounded a corner. There on a steel table was Derrick with a myriad of machines trying to tend to him. \n\n\"You always were a stubborn one weren't you Derrick,\" Milley said as she watched Derrick struggle with trying to fight off the machines. \n\n\"I am not stubborn gram, I am just tired...,\" an opened mouthed Derrick started at the two people that had entered the room. \"Gram?\" Derrick started an amazed look on his face. \"Mother? Oh my god! Is it really you two? I'm so confused I don't know where I am or what any of this is, god it's good to see a face that I know!\" \n\n\"You sure you know us Derrick? I have heard that a person with amnesia can think they know but are only seeing flashes of memory.\" Milley told Derrick. \n\n\"No Gram, I remember you and mother I remember you getting me and trying to tend me after the beating I took,\" Derrick told Milley. \"Beyond that everything fades to nothing.\" \n\nMary who had been watching looked over the now updated readings; good, the jar of seeing them had opened part of the blocked memory. Sighing, Mary thought now to bring the rest of it out before they went on too far. Accessing all of her medical records she started painstakingly going through them all again trying to find the right treatment. \n\nShelby was greatly encouraged when she saw that Derrick's readings were starting to align back to what they had been before the incident. Although Shelby was somewhat confused as to why just seeing his relatives had caused this to accrue. Derrick was looking around the room trying to figure out exactly what was what but still for the life of him nothing but the table looked familiar. Looking further he saw that a young blonde, green eyed woman was watching everything that was going on, why did she look so familiar also? Derrick thought the young blonde was gorgeous but the harder he tried to remember the more that his head ached. Finally laying back a groan escaping his lips, Shelby told his grandmother and mother they needed to let him rest. Besides Shelby thought she'd like to talk to them alone anyway. \n\n\"I feel that you both want answers,\" Shelby told them after they were alone. \n\n\"Yes, first off how in the hell has this injury happened to my grandson!\" Milley O'Toma almost shouted at a startled Shelby. \n\n\"I assure I was taking every precaution that I could, but as we both know Derrick isn't the greatest listener in the universe.\" Shelby shot back at her. \n\n\"Huh as advanced as you are you could have prevented it!\" Milley snapped at Shelby. \n\n\"I tried Mrs. O'Toma,\" Shelby replied tears now starting to fall from her eyes, \"I tried my best to protect him but he is so stubborn Mary has had to shock him before to get him to rest. Believe me Mrs. O'Toma I want nothing to ever harm Derrick, never.\" This last was almost a whisper as Shelby couldn't see that straight from the tears. \n\n\"Oh my god you really are alive and you're in love with Derrick!\" Sherry O'Toma said suddenly her eyes wide as the realization hit her. \"Just how long have you been in love with him?\" \n\nShelby actually blushed as she struggled to answer Sherry's question, \"I'm not sure, I think it was just after Derrick opened up more of my emotions, he always puts us machines before his self.\" \n\n\"Humph! Yep! That sounds like our Derrick, alright young la ... whatever you are, what can we do to help?\" Milley O'Toma told Shelby. \"We'll do what we can but we aren't medically trained, we're at a complete loss with this.\" \n\n\"According to Mary, she was the voice you heard before I brought you on board me. Just seeing you, has already started to straighten out his brain readings, unfortunately all the memories he has at the moment are up 'til he was beaten outside the base.\" \n\n\"Ho ... how did you know about that?\" Sherry asked Shelby. \n\n\"I have been in his mind a few times to try and help him, though at the moment I am afraid that his reaction to me being there might do far more damage than help. So we are trying a few less painful and intrusive ways to snap him back to us. As I said your presence has already awakened quite a few of his memories.\" Shelby explained. \n\n\"Uh huh, why do I feel that you are hiding something from us?\" Milley asked Shelby. \n\nSighing Shelby had never met a human as perceptive as Milley O'Toma, in a way it was refreshing but also in was frightening. Milley O'Toma was a formidable woman and Shelby felt that even Mary might find her hard to talk around. Mary had been listening the whole time and had come to almost the same conclusions as Shelby, now she could see why the emperor was as strong as he was. \n\n\"What she hasn't said,\" Mary said suddenly appearing next to Shelby, \"Is that if these methods we are trying don't work we will have to delve back into his mind, this is dangerous. It appears now that the experiment he used on himself to increase his knowledge also weakened his grasp on the present. Almost like with his war stress only far deeper, and many times more dangerous to bring him out of. If this isn't done right we could not only lose him but the A.I. that goes in.\" \n\nSighing Milley nodded her understanding, as was Sherry both had tears in their eyes Derrick was the last male of the family. They both knew as did Mary and Shelby that if he was lost all was lost. \n\n\"All right let's start on these methods; we need him back if this galaxy is ever going to be civilized again, as it is right now I wouldn't give you too awful much for it.\" \n\nMary appeared on board Tempro a few moments later, looking over all that had happened so far; she sighed as the first twenty attempts had been dismal failures. \"Tempro are you getting any closer to finding why they fail before even half maturation?\" \n\nTempro sighed, he hadn't like reactivating the equipment after so long, he could still hear the cries and screams of the failures all those centuries ago. \"No mother I haven't as of yet I am still seeing no pattern of success or failure. I have gone back to the records of those first experiments, even as far as they went I have as of yet to detect any pattern that will aid in any of this.\" \n\n\"Please continue, try living tissue as a template this time all the sample that you have, record all. Transfer all data you have so far, it is possible that you may have overlooked something.\" Mary advised Tempro. \n\n\"Yes mother but I don't think I can go much further than where I have, I will advise you as soon as I have something.\" Tempro told Mary. \n\n\"Good, remember Tempro we are doing this for him, there has never been a human, emperor or not that has ever shown the concern and care that he has. He more than deserves this and as I said before, he will need her when the time comes.\" Mary told Tempro; though he didn't really approve of it he knew that Mary had a point, a very valid point. \n\nShelby watched over Derrick in his drug induced sleep she was more than tempted to delve in, as she remembered him saying he always seemed to remember her being there for him. How could this time be any different? Then she also remembered Mary's warning that to delve in might cause far more damage than good. It was all so confusing to her now with all the emotions she was feeling it shouldn't be that hard to decide should it? Watching a few minutes more, she finally decided that if she ceased to exist it was far better than continuing on without Derrick. Looking over the readings a final time she reached out and again entered Derrick's mind.\n\nLooking around, she at first couldn't see anything all that different though as she started to go deeper she could see where the brain was starting to heal. Concentrating on the areas that held all that was Derrick she hoped that she could find an answer and a way to bring him back. The closer she got to what essentially was Derrick the stranger it appeared to get. Finally she reached what she knew was him, unlike before there was no chaos, no Derrick nothing. Strange she thought the last time there had at least been a trace of him, now it was almost as if all that was him was erased. Sure there were a lot older memories but nothing newer than ten to fifteen years ago. \n\nPainstakingly Shelby started to look everywhere for even a hint of Derrick. Sighing after a while she sat wondering what she was going to do when a voice startled her out of her thoughts. \n\n\"Hello,\" a young voice quietly said to her. \"Who are you?\" \n\nTurning she saw a young slender boy with sandy blonde hair, he was holding a book of mathematics. \"Oh hello, I am Shelby I'm looking for Derrick O'Toma.\" \n\nThe young boy's eyes grew wide then lit up, \"That's me Ma'am, but I don't remember ever meeting as pretty a lady like you before.\" \n\nShelby's eyes grew wide also; she knew that there would be obstacles but nothing like this! Looking around further Shelby began to see doors that before had been hidden. \"I am very pleased to meet you Mr. O'Toma,\" Shelby told the boy gaining a wide smile on his face. \"Are you all alone here?\" \n\n\"No Ma'am, there are a lot of other Derricks here also, oh,\" here the boy's face dropped, \"You're probably looking for one of the other Derricks, an 'older' one.\" Dejectedly the boy hung his head. \n\nGrasping the boy's face she tilted it up toward her own, \"No actually, I am looking for all of the Derricks,\" smiling when the boys face lit up again. \n\n\"Yes Ma'am, though there aren't as many as there used to be, seems something happened one day and a lot of the newer Derricks couldn't get out of their rooms. One of the older Derricks said that they were trapped like most of them had been 'til a little while ago.\" The now widely smiling young boy said. \n\nAs her eyes scanned all the doors, more than half were open, she walked to the first that was closed and pulled on it. At first there was nothing not a sound, and then suddenly the door slipped and flew open knocking Shelby on her butt. The Derrick that walked out wasn't her Derrick but he was a lot closer than a lot of those she'd seen coming here. The Derrick from the room looked out blinking then extended a hand to help Shelby up. \n\n\"Captain O'Toma at your service finished flight school yesterday,\" Leaning close he whispered, \"You ever want a long ride alone in space I'm your man.\" \n\nWalking away he went to join the others, shaking her head she moved to the next door, by the thirtieth door Shelby felt weary. Grasping the knob she struggled with it more than the others, it took several minutes to finally get it to move. Finally opened enough, the Derrick inside slipped out and the door suddenly moved with ease. Shelby was more than exhausted; strange she thought I am a machine I don't get tired. \n\nThe Derrick she'd just released knelt beside where Shelby had sat, \"E? What are you doing here? I thought we were waiting for the emergence of 0999 has something gone wrong?\" Shelby was trying to tell Derrick what had happened with him, the blow to the head, the loss of memory, her disobeying her mother to try and rescue him. \n\n\"I am afraid that I may have done and gone too far, my love, just a chance to see more of the new you makes this sacrifice worth it,\" Shelby said as she lapsed into unconsciousness. \n\nJerking awake Derrick looked around the med bay, why in the hell was he in the med bay? Why were over half the systems dark? Getting up Derrick started to shout, \"I don't know if you can hear me I need to talk to the mother of the living A.I. of this ship.\" \n\nA moment later Mary shimmered into view, \"Yes Sire?\" she said then noticed that well over half the systems of the ship were dark. \"Sire what has she done? More to the point where has she gone?\" This was not good without Shelby any hopes of restoration of the fleet was impossible. ",
        "\"She was in and still is in here,\" Derrick said pointing to his head, \"she was attempting to open the sections of my brain, trying to reintegrate all of the mes, I can actually remember her and the ship 0999 now but she is unconscious.\" \n\nMary's face took on a worried look; this was an extremely dangerous move on her part. Shelby's data could be lost, absorbed, and rejected by Derrick's brain; it could mean not only the loss of the emperor but Shelby, Mary's daughter. Sighing, she should have known that Shelby would have tried to do something like this, she'd seen the looks that Shelby had shared with him. \n\n\"I am afraid I am also going to have to go in, this is extremely dangerous Derrick, though she has released more of your mind, I still feel it is weak.\" Mary tried to explain to him. \"There is a chance that we may lose one of you, I cannot allow that to happen to you. Though she is my daughter she too knew the risks doing this.\" \n\n\"Look I don't have any memory of you yet, but I know that all mothers fight for their children. You have to fight for her, as will I, do what you can but you have to save her.\" Derrick looked directly into Mary's eyes and quietly asked, \"Please?\" \n\nMary was suddenly overwhelmed with emotion though the mandates forbid it she couldn't ignore the fact of what her daughter had felt so strong about this man. The fact that her daughter had risked her very existence to bring back the man she loved spoke volumes to Mary. Nodding to Derrick, tears in her eyes for the love they shared, Mary induced sleep with Derrick again and gently delved into his mind. It was worse than she thought the deeper she went the more damage she was starting to see. Finally reaching the room of his memories and self, Mary started to assess all that was wrong. \n\nLooking at all the doors Mary could see the thirty that Shelby had opened, then Mary saw why Shelby was so weak. Sighing Mary could see the increasing amount of energy she expended each time to open the doors. Shaking her head she thought she had known how much Shelby loved the man but this went far beyond anything she'd thought possible. True Shelby had increased the energy of his mind to the point that he now had a fifty percent better chance of full recovery. In the process though, she had used up all the energy that she'd stored up to delve into his mind. \n\nNear the last door Shelby had opened Mary finally found Shelby, a worried Derrick holding her head in his lap. Mary knelt next to them placing a hand on Shelby, she had far less energy than Shelby but Mary was hoping that she wouldn't need that much. Looking in Mary saw much to her shock that Shelby had tried to use all her energy to bring him back. Again this was a shock to her it was obvious that this man was far more unique than she at first had thought. Slowly she could feel Shelby's energy start to increase Mary just hoped that when she awakened that she wouldn't refuse to go. \n\nShelby was so tired a strange thing for her, when Derrick called her E her heart soared. Bending down he looked at her and asked if all was alright. All she could think of was, \"I am afraid that I may have done and gone too far, my love, just a chance to see more of the new you makes this sacrifice worth it.\" Then the world went dark it was a strange first for her 'so she thought this is what death is like,' there was no light, no sound, just a warm peace that she couldn't explain. 'Finally I feel I have done something to justify my existence.' It seemed she'd just gotten there when she felt something start to tug her back toward the light. She didn't want to go back not if it meant Derrick had to take her place. Fighting she tried to reject and push everything that came at her. Finally it overwhelmed her and she started to close in on the light. \n\nMary could feel Shelby's levels starting to rise, good, she was afraid she didn't have enough energy to save her. \"I can feel her, she's stronger you have to get her to leave, if she stays she'll expire Derrick.\" Derrick nodded his head as he could feel that there was more to the woman on his lap than met the eye. It just escaped him each time he tried to bring it to the surface. \n\n\"I'll do my best IF she'll listen,\" Derrick told Mary as Shelby started to stir. \n\n\"Derrick?\" Shelby weakly asked, \"Are you alright?\" \n\n\"Yes, but I need you to go out with your mother; I couldn't go on if I lost you too.\" Derrick told a now smiling Shelby. \n\n\"Alright but I will be watching you closely, my love,\" Shelby said as she kissed Derrick deeply and passionately, surprising not only him and Mary but Shelby herself. Rising Shelby, Derrick, and Mary headed for the surface, none of them heard a half dozen or more doors open far below them."
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-16"
}