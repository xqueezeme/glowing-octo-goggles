{
    "title": "Water Park Fun Ch. 04 - First Week",
    "pages": [
        "Thank you to OG_James for editing this story and offering great advice on how to continue it.\n\nIt felt bizarre being back home after spending the weekend with Amanda. It had just been two days but felt like weeks.\n\nI stripped off my clothes and climbed into bed. So much was swirling around in my head that I couldn't fall asleep. I had read one time how while it could take weeks to break a habit, it only took a few days to create a new one. Already I felt myself yearning to be in Amanda's presence again. It was hard to fall asleep without her in my arms. I tossed and turned. When I thought that I wouldn't fall asleep, I finally managed to drift off.\n\nI woke up before noon and saw that I had a couple text messages from Amanda. The first message was around seven AM, saying good morning to me with a kissy-face emoji. A few hours later, she called me a sleepy head and sent a gif of someone sleeping in a big bed.\n\nI had a huge smile as I looked at the messages while waking up. It felt so good waking up to cute messages from her.\n\nIt was 11:59 AM, and I waited a minute before replying with a \"Good noon.\"\n\nAmanda sent me an eye roll emoji but then another kissy-face one. It was such a cute little thing that she did, and I loved it.\n\nI texted Amanda as I got ready for class. One of my favorite things about going to community college was choosing when to have my classes. I made sure that I had enough time to sleep in, and if I ever needed to, I had some time in the morning to finish up some reading or a paper for class.\n\nI floated through the day with having Amanda to text. I had an hour gap between classes, I would usually get bored waiting so much throughout the day, but now I stopped paying attention to how much time I had to kill, which made it pass even faster.\n\nI got home around my usual time at seven PM. My phone was near dead, so I put it on the charger and scrounged up something for dinner. When I sat down to eat, I heard my phone's text message alert.\n\n\"Do you want to FaceTime tonight?\" Amanda asked.\n\n\"I would love to :).\"\n\n\"Ok :). I am going to shower and get ready for bed first.\"\n\nI felt both nervous and excited. I had never FaceTimed a girl before; I wasn't a complete failure when it came to trying to date. I had texted with and talked to a few girls on the phone before. Texting wasn't that hard for me, sure it sometimes took me too long to think how to reply to a message, but at least that time helped me say the right thing. When I talked on the phone, it was hard for me to respond with something of substance, leading to long awkward pauses. For the first time that day, my old insecurities reared their heads, and I worried that it would be like that when we FaceTimed.\n\nI watched some Netflix in bed on my laptop while I waited for Amanda to call. My phone began to buzz. I picked up my phone, took a deep breath, and then answered it.\n\nWhen Amanda smiled at me, all my nerves washed away. Now that I thought of it, I finally realized how easy it had been to text Amanda all day. She made me feel so comfortable.\n\nAmanda looked radiant in her post-shower glow. Strands of her damp blonde hair clung stubbornly to her face no matter how many times she pushed it back. Her icy blue eyes and the warmth of her smile stunned me. She was wearing a shirt that looked familiar.\n\n\"Is that my shirt?\" I asked.\n\n\"Maybe.\"\n\n\"It is!\"\n\n\"You left in such a hurry that you forgot I washed it for you.\"\n\n\"And you had to wear it?\" I knew about the joke about how girlfriends tend to steal their boyfriend's clothes. I had never realized how endearing I would find it when it happened to me.\n\n\"Yep. It still smells like you... and it reminds me of last weekend,\" she winked.\n\n\"That's not fair. I don't have anything of yours.\"\n\n\"What, to wear? We aren't the same size!\" she said mock seriously.\n\n\"No. Just like something that smells like you.\"\n\n\"Like a pair of my panties?\" she purred, raising an eyebrow.\n\n\"I was thinking a shirt\u2014\" I remembered how good she had smelled, and thought about how nice it would be if I could smell her any time. Her suggestion reminded me how amazing the scent of her womanhood was. \"\u2014but if you insisted, I wouldn't say no.\"\n\n\"Of course you wouldn't,\" Amanda smirked.\n\nWe laid in bed talking about our day and filling in the gaps of our knowledge about each other. We both needed to be up early for work, but neither one of us wanted to fall asleep.\n\nI got up to get a glass of water. When I came back, I saw that Amanda had fallen asleep. She looked so beautiful and at peace sleeping. That creeping feeling of just how strong I was starting to feel for her began to surface again. I imagined what it would be like to sleep with her every night.\n\nI tried to be logical. I knew that it was crazy to be feeling this way about her so soon. I was still at the very beginning of our honeymoon phase, and also I was still riding the high of losing my virginity.\n\nI let myself say out loud the words that had been so close to the surface already several times. \"I love you.\" It felt like the burden in my chest loosened, but as good as that felt, I knew that it was only just a partial release of pressure. That it wouldn't be long before it had built up again, and I was dying to say it to her for real.\n\nHer smile seemed to deepen after I said that. I worried for a moment that maybe she had been awake and heard me. I watched her for a couple of minutes, waiting to see if she stirred any more. She must have just been having a good dream. I kept the call going and closed my eyes to get what sleep I could before work.\n\nI woke up early the following day from someone calling my name. I knew that I was in bed, so I was confused about where the sound came from. I looked down at my phone and saw Amanda.\n\n\"Ryan? Are you awake yet,\" Amanda asked.\n\n\"No,\" I managed to grumble.\n\n\"It's about time you wake up. Your alarms have been going off for the last five minutes,\" Amanda said.\n\nI groaned as I rubbed the sleep out of my eyes. I hated working this early, but it was the only way I could still get hours with my school schedule.\n\nAmanda was in the bathroom, finishing getting ready. She wore her pastel blue work uniform with her hair in a ponytail tucked into the hat she had to wear for work. She always complained about having to wear it, but I thought she looked adorable.\n\n\"I have to go. Just wanted to make sure you woke up. You're aren't exactly a morning person. You're going to stay up, right?\"\n\nThe thought of crawling back under my blankets was an appealing one, but I fought it. \"Yeah, I will. Thank you for waking me up.\"\n\n\"Thank you for talking to me last night.\"\n\n\"Anytime.\"\n\nWe hung up. Usually, I dragged my feet a lot more, barely leaving with enough time to make it on time, but I felt so rested and ready to face the day that I managed to leave the house early.\n\nWork flew by from having a reason to check my phone other than just to check the time. Since we were both working, we couldn't text each other as much, but every time I felt my phone vibrate, I got happy, knowing that Amanda was thinking about me.\n\nOver the next few days, we fell into a rhythm that I loved. We constantly texted during the day, and then at night, we would FaceTime each other. Sometimes we would leave the call on while we slept. It made me wish that I could sleep with her again in person.\n\nI noticed how much Amanda loved to flirt and tease me, but she never got too sexual. I wanted to continue our sexual exploration, but at the same time, I was happy about having someone to talk to all the time that I didn't want to press her and make things uncomfortable.\n\nOn Thursday night, while we talked about what we had to do the next day, Amanda realized that she would have to work a split shift, so she would have an hour in between shifts. It overlapped with one of my breaks between classes, so we made plans to get a late lunch together.\n\nWe talked the rest of that night away and managed to hang up this time before falling asleep.\n\nI jumped out of bed the following day. The day seemed to drag on as I counted down the hours until I would have my lunch date with Amanda. As the time inched forward, I became increasingly nervous. I worried what if the magic that had been there last weekend would be gone the next time we saw each other. I was able to mostly hold back this thought with the help of all of Amanda's sweet and flirty texts. We had been talking nonstop this week, and there never seemed to be an awkward moment.\n\nI drove to the restaurant and parked next to Amanda's car. We walked to each other, and before I could even say hi, she hugged me tightly and kissed me. The kiss and hug lingered, burning away my earlier thought that maybe the magic of the last weekend was going to be gone. I wrapped my arms around her and held her tightly against me.\n\n\"Hi,\" she said while smiling sweetly once she broke the kiss.\n\n\"Hi,\" I said, smiling back. I wanted to kiss her again, and realizing that I could, I did. The kiss lingered even longer this time.\n\n\"Did you miss me?\" Amanda asked.\n\n\"Every minute,\" I said. This made her smile even bigger, and I was proud of myself for making her smile. I made a mental note to think extra hard about everything I said the rest of our date. The start of our date was strong, and I wanted to make sure the rest of it was as well.\n\nThe rest of the date went well. The food was great, but the conversation was even better. We spent the whole time talking up until the last minute until she had to go.\n\nI walked her to her car, and she hugged me tightly and kissed me. The kiss deepened, and she flicked her tongue across my lips. I met her tongue with mine, savoring the taste and softness of her lips and tongue. She pressed against me. I held her tighter. When we broke the kiss, we were both panting. We both kept saying how we had to leave, her break was ending soon, and I had a class to attend. We kept on trying to leave, yet neither one of us would let go.\n\n\"I... do you want to talk tonight?\" Amanda asked.\n\n\"Of course,\" I said, punctuating my sentence with one final kiss. I spent the rest of the day in a cloud of bliss. I replayed the way she held me tightly, how much she kissed me, and the way she was nervous when she asked to talk to me later on that night. It seemed like Amanda was also still getting over her nerves in our relationship. The fact that such an amazing girl could be nervous threw me off. She must not be aware of just how beautiful and great she was. I promised myself that I would try and show her just how perfect she was.\n\nI went home, showered, and did some reading while I waited. She had told me about how there was a way for us to watch Netflix together while apart, and I wondered if we would try that out today.\n\nWhen it was time for us to talk, she didn't call. I waited five minutes and then texted her that I was ready. She called me a few minutes later. Everything felt effortless when it came to Amanda. We FaceTimed late into the night again, but we hung up this time before passing out on the phone.\n\nThe next day I was at work when I got a message from Amanda. I opened it and immediately turned my phone, so no one around me could see what was on the screen. Amanda had sent me a picture of her with her work shirt pulled up. She was wearing a pink lacy bra.\n\nI couldn't believe that she sent that to me out of nowhere. She had told me how she had never liked sending risqu\u00e9 pictures to guys. She had several friends who did, and the guys ended up showing all their friends. Out of respect, I hadn't asked her for any photos. I wasn't about to do something stupid like that and ruin things.\n\nI wanted to stare at the picture, but I had to minimize it since I was at work. Of course, that would be when we got swamped, so I couldn't look more at the picture. I felt my phone buzz a few more times and was dying to look at what else she sent me, but we were slammed with customers for the next hour. After the rush, I wanted to run off to the bathroom to look at what else she had sent me, but I forced myself to do my job and get the store cleaned and restocked. The rush had been rough, and I had been preoccupied with what Amanda had sent me. It made it difficult to do my job initially, but it didn't faze me as things got more stressful.\n\nAfter an hour, I finally got a moment to go to the restroom and check my phone.\n\nThe message that went with the picture was, \"This is what I am wearing under my work uniform. Do you like it?\" A few minutes after that, she had sent me another message. \"Do you not like it? To think I would have sent you more.\"\n\nI typed my response so fast that it was full of typos. I fixed my mistakes and hit send.\n\n\"Of course I love it. All I wanted to do was look at the picture, but we got busy right after I saw it,\" I said.\n\n\"Thank you. So I distracted you from work?\"\n\n\"Yes, but I didn't mind the distraction if you wanted to send more.\" I felt nervous asking for more pictures, but since she had sent me one without me asking, I figured I could ask for more. I wouldn't push for it since I hadn't been expecting it at all.\n\n\"Maybe some other time ;).\" That was a good enough response to make me glad that I had asked.\n\nAmanda was extra flirty the rest of the day but more on the sweet than the sexual side. I still wasn't used to having someone to always text like this. The week was going by so fast. I couldn't believe that I was going to get to see her tomorrow for a dinner date.\n\nI counted the hours down until when I would get to talk to her that night.\n\nAmanda FaceTimed me at our usual time.\n\n'How was your day?\" she asked.\n\n\"Work was pretty crazy today.\"\n\n\"Oh?\"\n\n\"Yeah, it kept on getting busy. Also, a certain someone sent me a picture right in the middle of the rushes.\"\n\n\"Are you saying that certain someone shouldn't send you a picture like that again?\" Amanda asked with a smirk.\n\n\"Not at all. In fact, she should send me pictures any time she feels like it.\"\n\n\"She will remember it, but don't go expecting it all the time.\"\n\n\"I will remember that.\" I took in her smile and was overwhelmed with that feeling again.\n\nOur conversation started out normal, but I started to pick up on sexual tension between us. I thought that maybe I imagined things because I was so turned on by seeing her. I noticed how she was talking with more of a sultry tone in her voice. She met my gaze with a smolder that made my cock twitch. There was a lull in our conversation, and that smolder in her eyes intensified.\n\n\"I really wanted you yesterday and today,\" she said in a hushed tone.\n\nI was thrown off by this. I had gotten that feeling that she did from how passionately she had kissed me, but having her say she wanted me turned me on even more. It took me a couple of seconds to respond to this fantastic information.\n\n\"I really wanted you too,\" I said.\n\nShe had her arm pressed against her chest, and her hand was almost out of sight below her stomach. It was hard to see what she was doing, but I could see her hand moving near her crotch. I had no problem filling in the blanks with my imagination. My cock twitched at this, and I started to rub myself through my boxers. \"I really want you,\" She purred.\n\n\"I want you too,\" I said. We held eye contact as we both continued to touch ourselves. I couldn't believe that this was happening. We both lightly touched ourselves for a few minutes. I wanted so badly to pull my erection out and show her how hard she made me. She rubbed herself harder, and she made herself moan. A shiver went through me from her moaning. I remembered that the last time I heard her make those moans, I was inside her.\n\nAmanda kicked her blanket down to her feet, so I did the same thing. Her eyes went wide when she saw my erection straining up against my boxers, threatening at any moment to pop out. She rubbed herself through her panties and played with her breasts through her top. Her hard nipples poked through the thin fabric.\n\n\"I want to see it,\" Amanda said with a sultry confidence that surprised me. I pulled my erection free. I started to stroke myself in long slow strokes, trying to make myself last while also putting on a show for her. She slipped a hand down inside of her panties, her hand moving slowly as she played with herself to match the pace that I was setting.\n\nShe saw how intently I was looking at what she was doing. She undid the straps of her nightie and pulled it down to her waist, exposing her perky breasts to me. I watched as she pushed them together and pulling on her nipples. I started to jerk off faster as I took in the show and thought about how much I loved touching and sucking on her breasts. This was so much better than watching porn. I had an intimate connection with this person and knew what it was like to actually be with them.\n\nHer nightie bunched up at her hips, blocking my view of her touching herself. I could tell that she was speeding up to match my speed, but that was all. I wished that she would finish stripping so that I could take in the full beauty of her body. She must have read my mind because she stopped playing with herself to finish pulling off her nightie. I was surprised when she pulled down her panties at the same time, leaving her fully exposed.\n\nI took in the sight of her alluring pussy; her exposed lips glistened with her wetness. I stripped out of my clothes. We started to play with ourselves again, now with nothing to block each other's view.\n\nNow that we were entirely naked, I wanted to hurry up and cum, but I had never gotten to do this with anyone before, so I took my time and drew it out as long as possible.\n\nI stroked myself slowly to keep myself hard as I watched Amanda. She took her time getting back into it, slowly trailing her hands across her body. She cupped both of her breasts, kneading them and pressing them together. She let out a sigh as she pulled on her nipples and rolled them between her fingers.\n\nAfter playing with her breasts, she started to slide her hand down her stomach and across her mons. She stroked along both sides of her lips and then gently slid a finger up between them. She pressed against her clit and let out a moan as she shivered. She added a second finger and started to rub her pussy in circles but didn't penetrate herself as she did so. I got peeks at the pink of her pussy as she moved her hand around. She alternated between rubbing her lips and her clit.\n\nIn my excitement of watching her, I had been speeding up in my excitement, and I could feel myself getting close to cumming. I pulled my hand away. Once I had managed to deny my orgasm, I went back to gently jerking off so that I wouldn't come too soon.\n\nAmanda bit her lip as she watched me jerk off. She stopped rubbing her clit and pressed a finger at her entrance. I watched as she slid her finger inside of herself. I remembered how amazing it had felt to feel her tight pussy wrapped around my erection, how it had contracted on my cock as she came.\n\nAmanda took in her entire finger. When she pulled it back out, I could see that it was coated in her juices. She added a second finger and then went back to fingering herself.\n\nI started to jerk myself off in the same rhythm as her, pretending that I was there with her and we were making love. I lost track of time in our virtual love-making and in the beauty of her eyes. Her eyes seemed to communicate so much, most of it coming through, but some of it was still out of my understanding. I saw the lust in her eyes when she started to press against a sensitive spot inside of her or when she pulled her glistening fingers out to rub at her clit. There was also still a vulnerability to what she was doing that made me appreciate every moment of it that much more. I knew that she wouldn't be doing this unless she was comfortable with me.",
        "She sucked the juices on her fingers clean like it was the best thing she had ever tasted, and then after squeezing both nipples hard, she went back to fingering herself.\n\nI loved watching how when she would press hard against her clit, her whole body would move as the pleasure raced up to her brain, and then she would take a deep breath and then exhale in pleasure.\n\nShe rocked her hips in time with her thrusts, taking her fingers in deeper. I remembered how it had felt to have her humping against me as we approached our climax.\n\nShe closed her eyes as she approached her orgasm, focusing entirely on her pleasure. I loved how she had been putting on a show for me, but there was just something incredible about being able to witness her being so intimate with herself. I did the opposite and became hyper-focused on her as she approached her orgasm. I could feel mine approaching, and I tried to hold back for just a little bit longer, but when she started to buck against her hand and moaned out my name as she came, it was too much for me, and I started to cum.\n\nThis had come so far out of nowhere that I hadn't even thought about the cleanup. My cum shot up into the air, the first load landing on my chest. I managed to angle my dick upward so that my next load went straight up and then fell back down, coating my hand.\n\nAmanda let out one last sigh, and then she fell back into her bed. She kept her eyes closed as she recovered. The contented smile on her face reflected how I felt perfectly.\n\nShe opened her eyes, but then a look of sadness crossed her face.\n\n\"I didn't get to see you come,\" she said.\n\n\"Sorry, you must have been too distracted.\"\n\n\"There's always next time,\" she said.\n\n\"Next time?\" I asked hopefully.\n\n\"If you play your cards right.\"\n\nAfter we both recovered and cleaned up, we resumed our conversation. If it wasn't for the fact that we were both still nude and my entire body felt fully relaxed, it might have been as if our sexual detour had never happened. We made plans to go to dinner and then spend some time at my apartment.\n\nAfter we said our goodnights, I quickly fell asleep, but not before the last of our conversation played on repeat. I was going to get to see this beautiful girl tomorrow.\n\nI woke up quickly. I had slept entirely through the night. Knowing that I would see Amanda later today made it easy to jump out of my bed when usually, on my first day off, I would sleep in late.\n\nI sent a good morning message to Amanda, and she responded about how she was surprised that I was up so early when I didn't have to be.\n\nI cleaned up my apartment and ran some errands. At noon Amanda texted me saying that she would be busy for a bit and wouldn't text me. I told her that was fine. I tried to stay busy to make time go faster, but I couldn't stop myself from constantly checking the time. Time seemed to be against us being together again, or maybe the tasks I found myself procrastinating on took up a lot less time than I thought because I found myself cleaving through my to-do list.\n\nFinally, it got to be not too early for me to start getting ready. I took a long shower and took the time to comb out my medium-length black hair for the first time in months.\n\nAmanda texted me that she was almost ready.\n\nI drove to her house for the first time. I felt a little out of place in my clunker of a car once I started to enter the richer areas. I parked in front of her house and texted her, saying that I was there.\n\n\"Do you want to come in? I am still finishing up,\" Amanda texted me.\n\n\"Ok, sure,\" I said. I knocked on the door, and a gorgeous woman in her late thirties opened the door. She looked like she should have been hosting a weight loss infomercial. She was wearing a bikini that barely covered any of her ample chest. She was leanly muscled but still held onto her curves beautifully.\n\n\"You must beRyan,\" she said.\n\n\"Yes,\" I said, holding out my hand for a handshake before I really thought about it.\n\nShe looked down at it for a moment, making me feel self-conscious.\n\n\"So polite. I'm Mary. Amanda has told me all about you,\" she said.\n\n\"Nice to meet you.\"\n\n\"I'm a hugger,\" she said and held out her arms. I had just a moment to start to hold my arms out, and then she wrapped her arms around me tightly. She was strong, and her breasts pressed against me. The hug lingered for just a moment longer than what I would have thought would be considered a usual hug between a boyfriend and his girlfriend's stepmom.\n\nShe let go of me and led me to the living room, where she said I could wait for Amanda to finish getting ready.\n\nI sat down and waited. I tried to focus on my phone, but I noticed that I could see Mary applying lotion through the bay window. I tried to be respectful, but I couldn't help but appreciate how beautiful she was. After watching her for a minute, I was finally about to force myself to look away when she started applying the lotion to her neck and then working it down her breasts. I was glad I hadn't missed that, but I finally forced myself to look away. What I had with Amanda was perfect, and even if Amanda didn't catch me checking out her stepmom, I still didn't want to do anything with even a slim chance of ruining my new relationship.\n\nAmanda shouted down the stairs that she was almost ready. I got out of my seat and walked to the base of the stairs to wait for her. She stepped into sight at the top of the stairs, and I couldn't believe how amazing she looked. She was dressed in a tight black dress that hugged her hips and showed a lot of her cleavage. She had her hair down in elegant curls. She seemed to have a glow about her. With the perfect use of makeup, Amanda accented her natural beauty a magnitude higher. I was glad that I had taken the time to get ready.\n\nI didn't say anything as she walked down to me, \"What?\" she asked.\n\n\"You just look so beautiful,\" I said.\n\nShe smiled. \"You look really handsome,\" She said. She made it to the last step so that we were at eye level. She gave me a quick kiss on the lips, she was wearing red lipstick that contrasted with her pale skin beautifully, and she must not have wanted to smear it.\n\nMary walked into the kitchen to get something to drink and saw us as we pulled apart. \"You too have fun, but not too much,\" she said teasingly.\n\nAmanda shot her an embarrassed look. \"See you later,\" she said as she grabbed my hand and led me to the door before her stepmom could say anything else to embarrass her.\n\nShe rested her hand on my lap as we drove to the restaurant. It was the first time I had called to make reservations, and I had been nervous when I did it, but it wasn't hard to do at all. We made it to the restaurant, which wasn't that far away from her house. It was the nicest restaurant I had ever been to, and I immediately felt out of place, but having Amanda on my arm made me feel more comfortable. I caught our reflection in the window of the front doors, and I almost didn't recognize myself\u2014a lucky guy going to dinner with an absolute stunner.\n\nWe were shown to our seats in a cozy corner booth. I knew from when I looked up the menu before placing my reservation that this restaurant would be expensive, but I rarely treated myself to anything nice. It was easier to justify the spending when it meant getting to have a nice date with Amanda.\n\nWe ordered our food and then filled the waiting time with our conversation. We filled each other in on how our high school years had gone. We were both socially awkward, so our conversation quickly became about us trying to one-up each other on who had the most embarrassing story.\n\nThe lighting in the restaurant was dim, supplemented by candlelight on each table. The tables were small and spread out, leading to a more secluded and romantic atmosphere. We talked in hushed tones and leaned towards each other, punctuating our conversation with hand holding, caresses, and the occasional hand on a knee. My feeling of being out of place dissipated as I focused entirely on Amanda.\n\nThe food was terrific, easily worth the price. Once again, I had to erase my preconceived idea that Amanda would be a dainty eater. She ate her entire pasta entree, which had come on a huge oval plate. She always seemed to be so happy, but especially after eating.\n\nShe noticed me watching her finish her food. \"What?\" she asked.\n\n\"Nothing, just noticing how happy you get when you eat,\" I said.\n\n\"If you want to keep me happy, then mostly all you need to do is take me to get food and keep me caffeinated.\"\n\n\"Is that all?\" I asked, leaning forward to wait for her response as if she was divulging the universe's most vital secrets.\n\nAmanda leaned forward, pressing her hand high up on my thigh. \"There might be other things that you can do to keep me happy.\"\n\nI gulped and didn't know how to respond. Luckily for me, the waiter came back to take away our empty plates and asked me if we would want anything for dessert. I looked at Amanda, and she nodded, so I asked to see the menu. We picked a lava cake, and the waiter left. Amanda kept her hand on my thigh and scooted closer to me. I held her close as we waited for our dessert.\n\nJust like the rest of the food, the lava cake was to die for. I questioned how I could go back to eating regular food. I felt like I would constantly be comparing everything else to this meal. I thought briefly about how that was how I felt about Amanda too. She seemed so amazing and perfect. If we didn't work out for some reason, I already knew that I would be comparing every girl to her and knew that they would come up short.\n\nWhen we left the restaurant, it was surprisingly chilly\u2014another storm was working through the valley; its looming clouds hung low in the grey sky, pregnant with future rain. I put an arm around Amanda to shield her from the wind as we walked back to my car.\n\nAmanda paused for a moment, looking up at the rain clouds.\n\n\"You really love rain, don't you?\" I asked, remembering how she had danced in the rain and jumped in the puddles our first night together.\n\n\"I have always loved the water. Living in the desert means that I have to take it in any form I can. Plus, when it rains hard enough, it means I get to leave work early... or sometimes not go in at all.\"\n\n\"Too bad it barely ever rains,\" I said.\n\nShe looked thoughtful. \"Yeah, that's why someday I want to move somewhere along the coast where it rains a lot, like Portland.\"\n\nMy heart pinged in pain at the thought of Amanda moving away, \"Yeah, that sounds nice.\"\n\n\"What about you? Where do you want to live?\"\n\n\"I've never really given it any thought,\" I said. I was content here, I wouldn't mind moving away, but I didn't feel the draw to be somewhere else like some of my friends did.\n\n\"Maybe we could take a trip together some time to check Portland out?\" Amanda asked. She seemed hesitant to ask about this.\n\n\"I would love that,\" I said. Her eyes lit up as she smiled.\n\nAmanda rested her head on my shoulder as we drove. It wasn't even nine PM, and she was already tired. My tiredness ambushed me. I forgot how I had woken up so early instead of sleeping in that morning.\n\nI felt a little nervous about showing her my apartment. It was extremely modest compared to where she lived. Inspecting how I lived must have been the furthest thing from her mind because the moment we entered my apartment, she pressed her lips and body against me in a deep passionate kiss. As we made out, I ran my hands up and down her body. When I reached the swell of her ass, I squeezed it and pulled her up into me. She let out a moan when I did that, so I reached down with both hands and lifted her up by my grip on her ass.\n\nI carried Amanda into my bedroom and laid her on my bed. She pulled me on top of her. Amanda started to press against me. I responded to her gyrations and started to hump her back.\n\nI kissed my way down her neck, taking the time to linger on the spots that I knew were sensitive. When I reached the hollow above her collarbone and sucked on it, she pressed up against me and stretched back her neck as she moaned. Before she could finish her moan, I kissed her again; she sucked hard on my bottom lip. When she finally let go, I tried to copy her, but she playfully moved her mouth away. I followed her lips with my own. She let out a playful squeal as I managed to land a kiss and sucked hard on her lips.\n\nI broke the kiss with a loud smooching sound and made my way down the other side of her neck, this time more aggressively. She let out a throaty moan when I paid extra attention to the hollow of her neck, sucking it hard, trying my best to leave a mark.\n\nI kissed my way down her chest. The dress was tight, and it was hard to slip a hand down under her bra, but I was determined. I fondled her breast and played with her nipple. After a minute of this, I switched over to the other to give them equal attention.\n\nAmanda started to grind against me. Each time she pressed her soft body against my erection, it caused a ping of pleasure to echo through me. I knew that it was just a hint, a brief preview of the pleasure we would soon share.\n\nAmanda broke the kiss with one last nibble of my lip and pushed me to the side so that I would lay on the bed. She stood up and stared down at me for a moment. She was illuminated from behind by the streetlight that shone through my window. It had been a source of constant annoyance, but now it lent itself to making her beauty into that of an otherworldly goddess. Amanda reached down to the hem of her dress and started to drag it up her body, wiggling a little bit to help get the skin-tight fabric moving. I watched in awe as she revealed her upper thighs and then her pink panties. They were frilly, and most of it was transparent. It took me a second to realize that her pubic hair was trimmed short, allowing me to fully see her womanhood.\n\nAmanda continued to pull her dress up, showing her hips and toned stomach, and then after getting caught on her breasts for a moment, she finished removing her dress. Her bra matched her panties, showing off most of her perky breasts through the transparent sections. Her nipples were barely covered up. She draped her dress on top of my nearby computer chair.\n\nShe leaned down, giving me a great view of her cleavage, and brought her hands to my belt. She quickly unbuckled it, then pulled down my pants and boxers in one motion. I sat up and pulled my shirt over my head. My shirt caught on my chin, briefly obstructing my view, and at that moment, I felt Amanda's full lips envelop the head of my erection. I tugged my shirt free and threw it aside to see Amanda on her knees at the edge of the bed, taking me inside of her mouth. I sighed as she slowly, steadily worked her way down the length of my cock. I watched in rapture as half of my cock penetrated her lips, then more. Amanda slowed as she went, probably trying to not gag right away, but after an extra couple of seconds, her lips reached the base of my cock.\n\nHoly fuck, this is really happening; She is deep throating me. I groaned in pleasure as the head of my cock was enveloped in the tight soft warmth of her throat. I had already thought that getting a blow job felt terrific, but now that I knew that she could also do this, I was going to be hooked on them.\n\nAmanda was only able to deep-throat me for a few blissful seconds before her gag reflex kicked in, and she pulled back to catch some air. I became worried as she coughed sharply, and I started to sit back up to check on her, but before I could lift myself onto my elbows, she pressed her hand against me to keep me down.\n\nAmanda licked and sucked along my shaft, almost as if she was making out with it. I could see her lipstick smearing, some clinging to my erection, and that turned me on. She held eye contact as she licked from the base of my cock up to the tip. She swirled her tongue around my head, pressing against its sensitive underside. I closed my eyes and moaned in pleasure right as she took my cock back into her mouth, sucking hard as she did so. This time Amanda took nearly my entire length into her mouth in one try. She bobbed her head back and forth, pulling all the way off my cock before plunging back down.\n\nIt was hard to keep track of anything; it felt so good. She retook my entire length into her mouth, deep throating me again, drawing another groan of delight from me in the process. She not only held it longer, but she also pressed her tongue along the underside of my shaft. Amanda pulled back to catch her breath, but after one deep breath, she went right back down, taking me back into her throat again. She established a rhythm of doing this so that she kept engulfing my entire length, deep throating me time and time again, sucking harder and longer each time.\n\nI had been so turned on from our date and making out together, Amanda demonstrating her new oral skill made me rapidly approach my orgasm. I had been leaning up to better observe what Amanda was doing, but my stomach muscles were burning, so I sat up at the edge of the bed. I ran my hands through Amanda's hair as she blew me, my hips rocking up into her as she plunged down. Amanda let out a moan around my cock when I first started to fuck her face. I became so focused on my orgasm that I began to hump harder and guide her head to the rhythm that felt the best for me. I tried to be gentle at first, but I started to go harder as the pleasure took over.\n\nI felt my orgasm rising quickly when Amanda cradled my balls in her hand, rolling them with her fingers. I plunged one last time into her throat, and with a loud moan, I came directly into her throat. I could feel it when she swallowed. The added pleasure caused me to hunch down towards her. I stroked her silken hair as she slowly pulled off my erection. She rose from her knees and wrapped a hand around the base of my cock to slowly jerk me off, her hand following her mouth up so that she could milk the last of my cum out. She sucked hard one last time when she reached my head and pulled her mouth off with a loud popping sound. There was a small bead of cum left at the tip of my cock. Amanda saw it, and with a gentle kiss, she cleaned it off me and then licked her lips clean.\n\nAmanda looked up at me with a look of triumph at making me cum. I leaned down and pulled her up into a kiss. The kiss deepened as she pressed me back down onto the bed. I could feel the warmth of her pussy radiating through the thin fabric of her panties. We started to dry hump again, her warmth pressing against my sensitive, partially deflated cock. I could feel her wetness soaking through her panties; she could almost coat my cock with her juices. My cock twitched at the fantastic feelings, and I felt myself already starting to get hard again, but I knew it would be a little more time before I was ready to go again.\n\nAmanda broke our kiss and started to climb her way up my body. She paused and pressed her breasts down against my mouth. I sucked on her exposed cleavage and then latched onto one of her puffy nipples through her sheer bra. Amanda sighed and humped against me as I sucked hard and flicked my tongue around her nipple. I did the same to her other nipple, then took it between my lips and started to suck hard on it.\n\nAmanda finished climbing up and pressed her thighs to either side of my face. Her panty-clad pussy was right in front of my eyes. The transparent fabric clung to her lips, perfectly showing off their shape. The scent of her pussy was intoxicating, and I could feel my dick stirring. I licked slowly from the bottom of her slit to the top. Amanda quivered as I pressed my tongue against her clit, then pushed my tongue as deep into her as her panties would allow me.\n\nI tried to take it slow, but I couldn't hold back. I admired the way her panties clung to her lips before finally pulling them away. She had trimmed her pubic hair down to a short bit of fluff so that it wouldn't obscure any of her beautiful pussy. I wondered for a moment if this was what she was busy with earlier when she couldn't text me. I pressed my tongue directly against her entrance, and she shivered. I explored her folds with my tongue, licking up and down and to the sides so that I wouldn't miss a single spot.",
        "Amanda rocked her hips slowly, increasing her contact with my tongue. I slipped my tongue inside her, and my erection sprung back to life as my whole world became the taste, scent, and feel of her. She rode my face harder, pressing her pussy down into my tongue.\n\nIt became uncomfortable for me to keep on holding her panties to the side. I reached up and started to pull them down. Amanda stayed still as I pulled them down her amazing ass. With my hand right there, I couldn't help but give her a playful spank, something that I was shocked that I did. Amanda inhaled at the unexpected pain, and then she moaned. I pulled her panties down to the back of her knees.\n\nAmanda had to partially climb off me to pull her panties free the rest of the way. She climbed up to the head of my bed. I scooted up, and she mounted my face again. Without her panties in the way, I had free rein of the flower in front of me. Now that we had moved up on my bed, Amanda braced herself against the headboard. Her chest heaved, and her face contorted with pleasure. I reached up and struggled to undo the clasp of her bra. She reached back and effortlessly unclipped it. She pulled the bra free and threw it to the side. We were now both fully naked.\n\nAmanda used the new leverage to ride my face harder, driving my tongue even deeper inside her. It didn't take long for my cheeks to become coated in her juices. The deeper I tongued her, the better she seemed to taste. I lost track of time as I alternated between tongue fucking her and flicking my tongue against her clit. My tongue became strained, but I ignored it as her moans got louder and her hips ground more urgently against my face.\n\nAt one point, she leaned her body forward against the headboard and stayed there as she rocked on my face. I couldn't breathe\u2014my nose and mouth were smothered\u2014and my nerves momentarily raced due to the lack of air. When she rocked her hips back, I quickly inhaled; it somehow seemed crisper, sweeter. Once I got used to it, I found myself looking forward to when she did this.\n\nHer breathing became shallow as she humped hard against my face. I could tell she was getting close, so I did all I could to urge her on. She squeezed my head between her thighs and moaned my name loudly over and over, her body shaking as she raced to her climax. I saw her face contorted in pleasure, her breasts bouncing with each of her thrusts. I sucked hard on her clit as her moans intensified. Amanda let out one last cry before freezing up with her pussy pressed against my mouth. She stayed rigid like that for a few seconds, and then she leaned forward against the headboard.\n\nWhen she recovered, she climbed down next to me, and we cuddled together. We kissed and touched each other leisurely. She went to work kissing and sucking my face clean from her juices. It turned me on knowing that she enjoyed her taste so much. It allowed me to entertain the fantasy of us involved in a threesome, getting to enjoy the sight of Amanda going down on another girl.\n\nAmanda's wandering hands gently fondled my cock, giving it a few slow strokes before running her hand back down my thigh. I let my touch linger on her breasts, gently squeezing them before sliding my hand away. We took turns doing that, playing with each other for a few moments before moving our hands elsewhere. Each sexual touch lasted longer and was done with a stronger intent to turn each other on. Before long, I found myself fully hard again. When I slipped a finger down between her lips and inside of her, she was incredibly wet.\n\nWe stopped the pretense of teasing each other and started playing with each other in earnest. Amanda used the precum collected at the tip of my cock and used it to lubricate her hand as she jerked me off in long, confident strokes. I added a second finger.\n\nAmanda grabbed the base of my cock and sat up. She mounted me, pressing the tip of my erection against her entrance. Her hair cascaded around my face as she leaned down, her forehead pressed to mine and our lips inches apart. I leaned up and kissed her. I felt those same butterflies in my stomach that seemed to constantly be fluttering whenever I was around her.\n\nAmanda broke the kiss just enough so that our lips were still a breath apart so that she could say, \"I love you.\" The butterflies in my stomach became a tornado as I felt a pang of something new echoing throughout my body at her words. I never knew that three little words could have such an intense effect on me.\n\n\"I love you too,\" I said and pressed my lips against hers as she started to lower herself on top of me. We inhaled simultaneously as I slipped inside of her and exhaled a few moments later when she took in my full length.\n\nWe stayed still like that for a minute, savoring the physical reuniting of our love, and then she started to slowly work herself up and down my shaft. I gripped her hips and rocked my hips in time with her. This felt more sensual and passionate than any of the other times we were together.\n\nI lost track of time as all I could think about was how it felt to have Amanda's soft body pressing against me again. Sometimes we kissed each other sweetly; other times, she rested her head against my shoulder, and I listened to her breathing, feeling each breath on my neck. I embraced the moment\u2014not trying to race to an orgasm but enjoying the connection we were forging together. I felt like I could go on forever.\n\nAmanda started to increase her pace, sitting up for better leverage. She rode me harder, stopping every now and again to grind into my pubic bone when I bottomed out inside her.\n\nI watched as her breasts bounced with every thrust. She grabbed my hands on her hips and slid them up to her chest. She moaned and picked up the pace as I roughly fondled her breasts and pulled on her nipples. Amanda started to bounce up and down on my shaft, taking it fully in each time. My headboard banged against the wall, an increasing tempo as our love-making started to approach its climax. I had a moment to worry about what my neighbors might think, but when Amanda shifted back, placing more pressure on my cock with each movement, I realized that I didn't care.\n\nI heard the storm clouds let loose, rain falling heavily against my windows while Amanda and I set a torrid pace of our own. I grasped her hips again, using my grip to pull her down into me as I thrust up, driving my cock as deep as I could go. Amanda's moves become erratic, the beat of the headboard on the wall alternating between multiple rapid taps or spaced-out loud thumps as we fucked with abandon, each of us thundering closer to our own orgasms.\n\nShe got there first and cried out my name as she started to cum. I cried out hers back moments later as I also came forcefully, clenching her hips tightly and bottoming out inside her with one last thrust.\n\nAmanda moaned as I shot my cum inside of her. She was still rocking her hips, causing me to twitch and moan from my now-sensitive cock. Her moans and motions slowed to a stop for a breath, and then she collapsed on top of me. With her hair framing my face and the scent of her floral shampoo in my nose, she said in a whisper in my ear, \"I love you.\"\n\nI stroked her hair and the small of her back as I replied, \"I love you too.\"\n\nWe drifted off to sleep together. When I stirred from my slumber, I checked my phone and saw that it was past midnight. I carefully separated from her and got up to use the bathroom. When I returned and saw her sleeping, I felt that intense feeling of love again. Having her sleeping in my bed made all of this more tangible for some reason.\n\nI listened to the rain falling, the sound transporting me back to my memory of our first night together. I couldn't believe how so much had happened in so little time. I thought about how easy it would have been to not have gotten to reunite with Amanda. There was a pang of loss at that thought, and I told myself to enjoy this as much as I could and not take it for granted.\n\nI climbed back into bed with Amanda. She moved to wrap her arms back around me, and I held her back, but she didn't wake up. I continued to listen to the sound of rain and the rumble of thunder in the distance, hoping that it would be enough to get Amanda an extra day off from work tomorrow so that I could spend tomorrow with her."
    ],
    "authorname": "storyteller19",
    "tags": [
        "teen",
        "blowjob",
        "petite",
        "sexting",
        "romance",
        "mutual masturbation",
        "facesitting",
        "eating pussy",
        "girlfriend",
        "deep throat"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/water-park-fun-ch-04-first-week"
}