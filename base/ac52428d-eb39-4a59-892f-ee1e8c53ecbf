{
    "title": "How to Become a Sissy/Cuckold",
    "pages": [
        "This is a How To Guide for Sissies and Cuckolds.\n\nPlease do not read this guide if you have no interest in the cuckold/sissy lifestyle. \n\nLike most couples these days both partners will be doing demanding full time jobs. Traditionally husbands have done gardening, cleaning the car, putting out the trash, performing do it yourself jobs around the house, driving the car if you are going out in it together and anything that might come under the heading of 'physically demanding' work. It's true that the last sentence now sounds somewhat old fashioned although there are still marriages where such arrangements exist. If you are the kind of husband that secretly desires a different relationship with your wife the chances are that you have already negotiated a more equal division of labour. You have accepted that, where both of you are doing demanding occupations, it's only fair that tasks outside working hours are shared equally.\n\nMy advice for those drawn to the sissy/cuckold lifestyle is to work towards a female led relationship first of all. Broaching the idea of your wife becoming sexually active outside your relationship whilst you indulge your desire for cross dressing could be unnecessarily shocking for your wife coming right out of the blue.\n\nWhat you are embarking on is quite difficult. You have a long term aim in mind but you are not letting on what it is at this stage. I would also advise against arriving home and announcing that you are putting your wife in charge of all decisions from now on. Do it by stealth. Gradually take over as many of the household tasks as possible without making a fuss about it. Encourage her with her career. Compliment her abilities so that she gains the confidence to apply for promotion. Suggest she works longer hours to gain respect and further her career. Buy her white silk blouses and other tops that make her look smart and efficient at work and iron them for her. Coach her to improve her interviewing skills. Encourage her to buy a newer, bigger car whilst not changing your own car. Make sure that your joint trips are in the new car with her driving.\n\nYour wife will be feeling the benefits of not having the repetitive humdrum tasks to do on her return from work and at weekends, (you'll be doing the ironing at the weekend). Her confidence will increase and she will begin making more of the important decisions in your marriage. Don't challenge her decisions, go along with them. Praise her even if you feel she is wrong. This will be frustrating and against your usual nature. It's important that whilst you are building up and improving her career you are allowing yours to stay in the doldrums.\n\nLeave work early, go into work after your wife. (you'll need to put the breakfast things into the dishwasher). Wherever possible have a meal ready when your wife arrives home from work. You'll need an apron when completing kitchen work, why not wear one of hers, or if there are no suitable ones in the house, buy her an especially feminine one with pastel shades and flowers, then wear it yourself. You'll be sending her a subliminal message.\n\nIf you have enjoyed alcohol in the past it's important that you cut down. You must avoid becoming inebriated at all costs. You cannot get out of control because your accepting, submissive behaviour may slip. Encourage your wife to drink more alcohol, share a bottle of wine with her and make sure she drinks the lion's share. Be prepared for her being more self centred and less kind to you when in drink. You may find out what she really thinks about you and at this stage it may be hurtful. You will be sober. Take it on the chin. Do not react. Your best strategy is to say 'Yes dear' to any criticism. If she tells you that you are behaving like a wimp your best plan is to agree with her.\n\nIn a sense you have been acting a part although it will probably become second nature over time particularly if you enjoy it and find it sexually stimulating. Many submissive men become aroused completing tasks such as ironing for their wives. You may enjoy ironing items that do not need ironing such as her panties. Wives might read a hint into that and if nothing else she will find it amusing.\n\nThese changes will not happen overnight but it's important to be patient if you want to achieve your dream. You will notice a distinct change in the way she speaks to you and how she treats you in other ways drunk or sober. No doubt she'll show her gratitude but it's inevitable that over time she will begin to take you for granted. Your status in the family will have dropped quite low. Her friends will be envious and she will boast about how she can twist you around her little finger. If she does this in front of you, you will find it humiliating but in reality your new life has hardly started. Imagine overhearing your wife discussing her latest boyfriend and showing them pictures of you in panties. Their laughter will be far louder and longer. Again there are cuckolds who find it arousing to become a figure of fun.\n\nWhenever you go out for an evening to a place that sells alcohol always offer to drive. Encourage her to let her hair down especially if she's had a rough week working long hours. Boost her confidence by suggesting that other men in the restaurant or bar find her attractive and are trying to catch her eye and flirt with her. This may or may not arouse her but once back at home mention a particular man you think she might have been attracted to whilst making it clear that you want to fool around. Mention that you have a work colleague who enjoys wife swapping. Talking dirty in this way will heighten her sexual tension.\n\nOnce you are under the bedclothes crawl down the bed and lick her cunt. Make sure you bring her to orgasm then cuddle her but don't try to enter her. If she has had a lot to drink she may fall asleep without noticing but if she reacts make up a lie about your penis being sore or suffering bruising to your balls. Do this regularly so that actual fucking becomes less and less common. It will be necessary for you to masturbate more frequently. Make sure you wank off before you go out drinking together. You can learn a lot from masturbating to erotic stories about cuckolds and sissies but don't forget that they are not real. They are written mainly by men to titillate and give you an orgasm. Sometimes the stories are so unlikely that they become ridiculous but these are often the stories that are the most popular.\n\nWe all know that there is always a fair amount of flirting going on in most office workplaces. This flirting will pave the way for more serious sexual behaviour on office nights out and particularly at the Christmas office party. It is essential that you make sure your wife goes to the office Christmas party on her own. You may pretend to be interested in going then drop out at the last minute. She will, of course, want to choose her own outfit but encourage her to wear a dress not trousers if you get the chance. Provided there has been sufficient time to bring about the changes outlined above this may be an opportunity to take things a step further. As she is getting ready to go out pour her a glass of wine or mix her a gin and tonic or whichever alcoholic drink she prefers. Your conversation might be as follows;\n\n\"I hope you are going to have a good evening dear. Just enjoy yourself tonight won't you? You know I'm not the jealous type.\"\n\n\"What are you trying to say dear?\"\n\n\"Well, I find it difficult to put it into words. It's just that I know that things sometimes get out of hand on these sort of nights. I don't mind you flirting a little, it's only natural. I just want to reassure you that, if anything does happen I won't get mad. I want you to have a good time, let your hair down. You are a free woman, forget about me for once, just do what you want to do.\"\n\n\"So what you're saying is, if I want to kiss Mike from Accounts I can come home and tell you all about it and you'll be all relaxed and smiley and glad that I enjoyed myself?\"\n\n\"Yeah pretty much, it might give me a stiffy. I know I've been neglecting you lately.\"\n\nYou've prepared the groundwork but don't be surprised if your wife shakes her head in disbelief and marches out of the house thinking that you are going a bit crazy. The important thing is, you've planted an idea in her head which she won't forget. It may take months or even years to bear fruit. But if you've judged the timing perfectly she may reply as follows;\n\n\"Okay darling, thank you. I'm going to have a few more drinks than usual and see what happens. Fetch me that little black dress from the wardrobe, the one you like so much. And I'd better wear the half cup bra sweetie. Mike's always trying to flirt with me at work. He's got a bit of a reputation around the office. Are you sure you're okay with this?\"\n\n\"Of course I am. All those extra hours you've worked this last year. It's made a big difference to our income. You deserve a good night out. Here, I bought you these I thought you might like to wear. They'll put you in the mood.\" You show her a pair of expensive black stockings. She takes them off you looking uncertain.\n\n\"Stockings? I never wear stockings these days. Wait a minute,--they are the right size. I suppose I could wear them. There's a suspender belt in the bottom of my knicker drawer somewhere.\" She looks at you. You are smiling. \"You checked didn't you?\" You nod looking a little embarrassed. \"Thank you, darling, you've really thought this through haven't you?\"\n\n\"I suppose so.\"\n\n\"Mike may not settle for a kiss and a cuddle. What if...?\"\n\n\"He wants to fuck you? Like I said, it's your decision. If that's what you want it's okay with me. Has this Mike had sex with other married women in the office?\"\n\n\"So they say, but their husbands don't know anything about it. There'd be hell to pay if they found out.\"\n\n\"This kind of thing helps spice up a marriage. I'll bet there are a few of his conquests who tell their husbands all about it. It's becoming quite common these days you know. Strong, manly men are in short supply. It's only natural for a woman to fuck with them, enjoy their bigger cocks, then go home to their husband who provides them with the love and security that they enjoy with him. Their husband enjoys the fact that they have this outlet, it makes them happy and contented.\"\n\n\"Don't you see yourself as a strong, manly man?\"\n\n\"If I did you would know that I was deluding myself. Actually I feel more womanly than manly at times.\" You look at her a little embarrassed.\n\nThis might stop her in her tracks. She'll look at you and raise her eyebrows.\n\n\"What's made you say that darling?\"\n\n\"When I was nineteen my company sent me on an Outward Bound course for a month. It was supposed to bring out my leadership qualities. It didn't really work in my case, some of the tougher guys from the big cities bullied me. It didn't help that part of the course meant performing a play and our director casting me as a teenage girl. I had to wear a dress, put a wig on and make up. The bullies could see I loved it. They delighted in pulling up my skirt and showing the others my erection. But I've never forgotten how I felt at the time. Wearing women's clothes just seemed right somehow.\"\n\nIf you're really lucky your wife will appreciate your honesty and take an understanding attitude. She might say;\n\n\"I expect you'll have tried on some of my things when I'm out haven't you dear?\" Your brief nod and red face tells her all she needs to know. \"It's okay, I won't shout at you. It's a lot to take in at the moment. I'm glad we had this chat. All this has come as a bit of a shock.\"\n\nOnce she's spent all night with Mike giving her the fucking of a lifetime your marriage will have changed forever. If Mike spurns her advances there will be other studs who welcome them. Once she's been broken by a big cock she'll want to do it again and again and not just with him. You'll encourage her to dress more provocatively and pretty soon the word will get around that she's an easy lay. People will look at you in the street and turn away and whisper something to their friends. You'll hear people giggling and assume they are laughing at you and often you'll be right.\n\nHopefully you are married to a kind, sensible woman who appreciates you and spends most of her time with you, her cuckolded husband. Once she's processed your cross dressing revelation she'll want you in panties under your work clothes and a night dress in bed. She'll be sensible enough to realise that turning you into a sissy will increase her domination over you. If she still wants to fuck with you she'll prefer it if you lie under her, legs apart whilst she does all the work pushing her cunt hard onto your penis. You'll be spending even more time with your head between her legs slurping up another man's semen until you begin to enjoy the taste.\n\nShe'll be the one in charge so it will be up to her whether she brings men home and lets you watch them fucking her. She may expect you to dress as a maid and serve them drinks. She may like you to take part in their fucking, licking her clitoris or nipples as he fucks her or sucking his cock to get him hard. Many wives place their sissy cuckold husbands in chastity, locking their penises in a device which prevents an erection. They themselves can become as submissive with their lovers as you are submissive with them. A cruel stud might take the key to the chastity device away from your wife.\n\nSo be careful what you wish for, it might come true."
    ],
    "authorname": "Quietoldie",
    "tags": [
        "cuckold",
        "sissy",
        "fem dom",
        "crossdressing",
        "submissive",
        "cream pie",
        "panties",
        "stockings",
        "adultery",
        "flr"
    ],
    "category": "How To",
    "url": "https://www.literotica.com/s/how-to-become-a-sissy-cuckold"
}