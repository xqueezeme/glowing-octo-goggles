{
    "title": "The Blossoming of Becca Pt. 04",
    "pages": [
        "This is one part of an 8-part story. It is a pseudo-incest tale about the burgeoning relationship between a man and his stepdaughter. Within this story I explore certain fetishes having to do with feet, anal, and various bodily fluids and odors. If any of that is not your cup of tea, this probably isn't the story for you. Consider this your warning.\n\nIf you like this story and want to follow my characters' adventures within their connected universe, I recommend bookmarking my page, as the next story may or may not be in the same category. Constructive feedback is appreciated.\n\nAll characters involved in sexual or explicit activity are 18 years of age or older.\n\nThis part of The Blossoming of Becca picks up directly from the previous part. You might want to consider starting at the beginning, so it makes more sense, but that's up to you. Enjoy!\n\n* * * * *\n\nMonday night\n\n\"I thought, if you wanted to, you could make me come too. With your fingers.\"\n\nThose words went straight through me. My breathing was labored, my head was swimming with desire, and my cock was standing straight out, throbbing in time to my heartbeat. I was completely nude, and so was my stepdaughter Becca, lying on the couch in front of me with her legs spread.\n\nFor the last few weeks, we had been on a marvelous journey. It all started because I had noticed my daughter's and her best friend's bare feet out by the pool. As I stared at both girls' 18-year-old bodies, soaking in the sight of everything from their cute little toes to their tight, nubile asses, something changed within me. At that point I began to see Becca, not as my daughter, whom I had raised by myself from the age of six, but as a woman\u2014one I wasn't technically related to.\n\nFully aware of my various fetishes, I gave her a foot massage one night. During that session I told her that her mom and I had dabbled in naturism when she was a child. I had hoped it would spark something inside of her, and it worked. Within days, Becca was walking around the house topless, and soon after that, all the clothes came off.\n\nAlong the way, the foot massages continued. I slowly indulged my fetish, getting her accustomed to the idea of me enjoying the smell and taste of her feet. Every time I experienced a part of Becca's body, whether orally or olfactorily, it took me to a place that I had never been. For her, these were just my little quirks. For me, they were fodder for my masturbatory fantasies.\n\nEventually, I convinced her that not only was nudity acceptable around the house, but sexual self-pleasure was as well. And with my blessing, Becca had shattered that taboo, taking full advantage of it. I had now seen her masturbate numerous times, and it was like I was living in a dream. She had seen me masturbate too, even jacking me off once, and each of us had sampled the other's cum.\n\nTonight, when she had come home from work, she had seemed different\u2014more confident, for some reason. For the first time in our evolving relationship she took the lead, encouraging me to take her clothes off, and working me up slowly\u2014first by having me smell and lick her armpits, then letting me indulge on her feet and toes, and finally watching as I filthily cleaned the gusset of her messy panties with my tongue. I had fully intended to go down on her when she stopped me. It seemed she wasn't ready for that yet, but at the rate we were going I could imagine it was only days away. What she wanted was for me to get her off with my hand, as she had done for me the other night. Who was I to deny her that pleasure?\n\nI smiled at the sweet, beautiful blond in front of me. Her flushed face wore an expression of wariness, combined with an innocent curiosity. Her full C-cup breasts settled ever so slightly against the sides of her chest, which heaved with nervous breaths. A tiny diamond stud sat above her navel on her flat stomach. And her legs, along with her puffy outer labia, were splayed open, allowing an unobstructed view into the pink inner sanctum of her sex. Her inner lips looked like the smallest butterfly wings, framing a tiny wet vaginal opening that looked both mysterious and inviting.\n\nThis was her night. She was driving this interaction and she had stated that she wanted me to masturbate her. So, that's exactly what I intended to do\u2014slowly, lovingly, and passionately.\n\nI leaned between Becca's thighs, pressing her legs farther apart. She gasped delicately as my hand moved up her thigh and touched her smoothly shaved pubis, feeling the bare skin above her pussy. She had the slightest bit of pubic stubble, presumably since she hadn't shaved down there since this morning. The robust aroma of her vagina, which had been closed up in her panties and work uniform for the last eight hours, marinading in her sweat and bodily fluids, filled my nostrils. It was like the nectar of the gods. Nothing smelled like the pussy of a clean, beautiful young woman. My cock was rock hard.\n\nI ran my fingers down the sides of her outer labia. They showed the same tiny amount of stubble as her pubic bone above, but they were puffy and swollen in arousal. The soft flesh moved under my thumbs as I spread her apart. Next, I dipped the tip of my finger into the pool of slippery vaginal lubricant that was slowly leaking out of her vagina, threatening to spill over and run down her ass cheek. I stuck my finger in my mouth as she watched, tasting her essence directly from the source. It was the sweetest ambrosia I had ever tasted, and it took all my willpower not to go against her wishes and bury my tongue in her perfect vulva.\n\nPlacing my fingertip back into that warm, fragrant pool, I traced a path up and over her urethral opening, spreading lubricating fluid all the way to her clit. Pushing up the tiny hood, I exposed her hard little button. I touched it gently and she jerked, gasping audibly as her eyes fluttered. I worked my finger up and around, moving in circles around the perimeter of her clit, but not stimulating it directly. Becca moaned and her thighs trembled as a reservoir of whitish discharge spilled over the edge and down her ass cheek. I quickly collected it on a finger and slathered it on my tongue, tasting and swallowing the pungent secretion.\n\nI positioned my hand so that my thumb continued to work around her clit as I placed the tip of my middle finger just inside her tight opening. I moved it around, coating it in her fluids, and slowly penetrated her until half of my finger was enshrouded in the warm, wet, tight sheath of my daughter's sex. My finger continued to descend into her depths until I bottomed out at my last knuckle. Becca moaned and her hips gyrated as she lay back into the couch cushions. I withdrew my finger almost completely, then slid it back in with ease, my thumb working under and around her clit. Becca moaned again.\n\nPulling my middle finger out, I dipped my index finger in her wetness, coating it and penetrating her deeply. When it was sufficiently lubricated, I used both together, stroking her deeply. Becca responded by groaning.\n\n\"Ohhh...I'm close...\"\n\nSeeing that this wasn't going to last nearly as long as I wanted it to, I concentrated on her clit, my thumb now rubbing directly over the swollen nub. Within seconds, Becca cried out, shaking, and trembling as her pussy released a small gush of warm fluid around my fingers. I continued to massage her tiny button until she bucked wildly, unable to withstand any more clitoral stimulation. Then I slowly massaged the inside of her vagina with my fingers as the orgasm evaporated.\n\n\"Oh, god...\" she moaned. Leaning up on her elbows she stared at me through sleepy lids and said, \"That was amazing. Thank you.\"\n\n\"Don't thank me yet,\" I replied lustily.\n\nI placed my hand on her chest between her breasts and pushed her back down to the couch as I curled my fingers upward and began stroking her G-spot quickly and firmly. Becca's eyes grew wide, and she groaned deeply as she pressed her hand against her abdomen. I kept up the pressure, stroking the roof of her vagina with almost violent intensity. Becca's low moan became a keening wail and just as I could tell she was about to come I yanked my fingers out of her pussy. A pressurized spray of clear liquid suddenly erupted from between her legs, but I was ready for it. I quickly positioned myself to take it in my mouth. I collected as much as I could before it died out, swishing the warm, salinized liquid around in my mouth before swallowing it in a single gulp. It tasted pure\u2014not as salty or potent as the blend of lubrication and discharge that normally issued from her sex during arousal\u2014and it was like I had tapped into a hidden reserve of fresh feminine nectar.\n\nBecca's eyes were rolled back into her head and she was now practically in seizures, curled up into the fetal position. I licked my fingers clean, consuming the delicious vaginal secretions that were coating them, as I watched her shake and moan. She was pressed up against the back of the couch, and from this position I could see her smooth cleft peeking out from between her thighs, and her tiny rosebud nestled between her ass cheeks. I rubbed her back, her thigh, and her ass, trying to calm her tremors with my warm hands. After a minute or so, Becca's body began to relax. She rolled onto her back and looked at me through fluttering eyelids.\n\n\"Oh...my...god...\" Becca exclaimed. \"What did you do to me?\"\n\nI smiled, continuing to massage her thighs and hips. I didn't know that she still needed the physical stimulation on her skin, but I was enjoying it and she hadn't given me any indication that I should stop.\n\n\"I gave you a G-spot orgasm. Now that you know what it feels like, and what to expect, it should be more manageable next time.\"\n\n\"Next time!\" she shouted, pretending she was angry. She was trying to fight the smile that came to her face unbidden. \"Holy crap, dad! It felt like you broke something! Am I bleeding?\"\n\nMy cock bobbed up and down as I laughed. \"No, you aren't bleeding,\" I replied. I was still as hard as a rock from fingering my stepdaughter and I was going to need relief soon. An idea popped into my head. I told her to wait there, and I ran upstairs to grab a bottle of baby oil. I came back down and took my seat on the couch.\n\n\"What's that for?\" she asked.\n\n\"Well,\" I started, then simply looked at my dick. Becca smiled shyly as she realized that I needed to come.\n\n\"Are you going to masturbate?\" she asked.\n\n\"I am, with your help. If you're game.\"\n\nBecca blushed, then held her cupped hands out to me, ready to receive the baby oil.\n\nI shook my head. \"Lie back down.\"\n\nBecca complied and I set her feet on my thigh. I squirted some oil into my hand and began to massage it into the soft skin of her feet. After a couple more squirts, they were covered in a copious amount of oil. My cock was slightly less engorged than it had been while my fingers were buried in Becca's pussy, but as soon as I placed it between her slippery toes, it surged with renewed blood flow.\n\nBecca's feet were the prettiest I had ever seen in real life. They were incredibly smooth to begin with, but with the oil on them, they felt almost as good around my penis as a warm vagina. Her face was red and her breathing heavy as she watched me use a part of her body as my fuck toy.\n\nI stroked myself slowly, running my thickening member between her smooth arches, until I was back to full mast. The head of my dick was swollen and throbbing as I watched it slide between her beautiful feet. I had her move closer to me so she could bend her knees outward, which enabled me to use her entire soles around my cock. I moved my dick up into the area between her toes and the pads underneath, and held her feet tightly together around me, thrusting as I got myself off. I began to shake as I felt the orgasm approaching, that familiar tightening in my balls signaling the impending explosion. I glanced into my daughter's eyes and time slowed down.\n\nOrgasms had always been equal parts physical and mental for me. Depending on what was in my head at the time, my thoughts could make or break an orgasm. If my fantasy suddenly turned weird or my addled brain shifted to something else at the last moment, my orgasm could simply die. Alternately, if I thought about something really sexy and exciting, I could give myself an incredibly potent finish. And in front of me were all the tools I needed for a mind-blowing orgasm.\n\nAs I slowed my thrusts between Becca's toes to almost a crawl, I took in the view before me\u2014my absolutely stunning 18-year-old stepdaughter, completely nude with her knees spread and her hairless pussy unselfconsciously displayed, my cock tightly sandwiched between her pristinely sexy feet, and an expression on her face that lay somewhere between curious innocence and eager sexuality. The image burned itself into the animal part of my brain and that was all it took.\n\nI felt every muscle in my body tighten up, my face included, as my orgasm reached its climax and my balls released with thundering contractions. The first shot of cum flew past Becca's ear and onto the couch as she flinched. I closed my eyes and groaned as I continued fucking her oily feet. I heard Becca exclaim through the euphoric haze, but I wasn't sure what she had said. After half a minute of unbridled bliss, I opened my eyes to see Becca's face, hair, neck, breasts and stomach spattered with my cum. Her eyes were wide, and her mouth was hanging open as she stared disbelievingly at the orgasmic carnage that I had unleashed all over her body.\n\nIt was actually pretty hilarious, and I couldn't help but laugh. It didn't take long for her to join in, the perfect globes of her breasts bouncing and jiggling. I slowly continued to stroke myself between her feet as her toes curled around my girth. She swiped a finger along her breast, scooping up a thick rope of cum and popping it into her mouth. I watched as she sucked it off her finger and swished it around in her mouth before swallowing. Her tongue snaked out and licked her lips as she smiled, then bit her lip shyly. Holy fuck. She was so incredibly beautiful and suddenly my heart swelled with love for her.\n\n\"Come kiss me,\" I whispered, releasing her feet as my semi-flaccid member slapped against my abdomen.\n\nBecca hesitated, the smile evaporating off her face. \"I'm kind of a mess,\" she said.\n\n\"I don't care,\" I said, looking at her with love in my eyes. \"Kiss me.\"\n\nI'm sure the wariness I saw on Becca's face was because she knew the kiss that I was wanting wasn't one we had ever shared. She could tell that this kiss was going to be intimate in a way that was beyond anything we had done, even counting the foot job she had just given me.\n\nBecca's eyes blinked as she swallowed nervously. She went to her knees and crawled toward me, the cum running down her body in rivulets. Then she climbed up over my legs and lay on top of me with her wet breasts and stomach pressed against my chest. We were inches apart as we studied each other, breathing into each other's face. I placed my hands around the sides of her head and drew her in, tilting to the right as our lips met.\n\nWe kissed deeply and passionately, our arms finding their way around the other's back. I probed playfully into her mouth and was greeted halfway by her warm, wet tongue. As my hands moved down the smooth bare skin of her back and cupped her succulent ass cheeks, she moaned in my mouth. Our pelvises ground into each other, her smooth pubis resting warmly against my junk. My cock responded immediately as we explored each other's mouth, rising and nestling snugly against her warm, wet sex.\n\nBecca must have felt it because it broke the spell. Her lips withdrew from mine and she pulled back, her eyes wide and her breath heavy in my face. I cupped her cheek in my hand as I whispered, \"It's OK. Whatever you are feeling is perfectly OK. I will always love you no matter what.\"\n\nShe sat back on her heels and studied me for a moment, trying to reconcile this new development in our relationship. Then she looked at the wet mess of cum and sweat on both of our bodies. She stood up and said, \"I'm going to get a shower.\" With a shy smile she added, \"You can join me if you behave yourself.\"\n\nI looked at my semi-erect cock and said, \"Now, see what you've gotten us into? Bad boy!\"\n\nBecca laughed and ran upstairs, and I quickly trailed behind. By the time I arrived on the second floor and stepped into the bathroom, she was already running the hot water. We stepped in together and washed each other's bodies, our hands soaping and exploring. We kissed one more time, but only for a minute or so before Becca broke the kiss and shut off the water. After we dried off, we each retired to our own rooms. I wasn't sure what my stepdaughter thought about before she fell asleep, but I could think of nothing but her. And it wasn't just sexual either. It was more. Much, much more.\n\n* * * * *\n\nBecca's heart was beating a mile a minute and she couldn't keep the smile off her face. She lay on her bed and ran her hands over her freshly washed skin, the smell of body wash infusing the room with a floral scent. Her skin felt electric. It still vibrated from the orgasms her dad\u2014her stepdad\u2014had given her tonight. She thought about masturbating again, but she was satisfied, and she wanted to fall asleep with the memory of his touch.\n\nShe had been so nervous about her plan to be the aggressor tonight, initiating their interactions. She had spent her whole shift at work thinking and worrying about it, but now she was glad she had done it. The payoff had been worth it. She felt so incredibly close to him right now. He was so gentle and loving. And that kiss! She hadn't expected or been ready for that at all. But it was beautiful.\n\nHoly shit, she thought to herself with no small amount of trepidation. I'm falling in love with my dad. And she was pretty sure he felt the same.\n\n* * * * *\n\nTuesday\n\nBecca stood naked in the kitchen making breakfast as she recalled the previous evening's escapades. Her dad was upstairs working, but she figured she would treat him this morning. Something had changed inside her, and she suddenly felt this need to take an equal part of the housework and chores upon herself. She was grown, and he shouldn't feel the need to take care of her every need anymore. As a matter of fact, she needed to step up and show some initiative around the house. This was her house too, and the dynamic of their relationship was changing. If things kept heading in the direction they were, Becca would quickly need to shed the daughter persona for that of a...partner.\n\nThe thought made goosebumps rise all over her skin and set her heart aflutter. She shook her head to clear away the daydream and get her mind back on the task at hand. After a few more minutes, breakfast was done, and she loaded the plates onto a tray and took everything upstairs. She walked down the hallway to her dad's office and peeked around the corner. He didn't sound like he was on a call.\n\n\"Knock, knock,\" she said.\n\n* * * * *\n\nI turned around in my swivel chair and saw Becca peeking around the corner. \"Come in! Good morning. I didn't know you were up.\" I was shocked when she walked in. Not because she was naked\u2014I had come to expect that\u2014but because she had a tray of food. Becca wasn't normally one to cook, even though I knew she knew how.\n\n\"I made you breakfast,\" she said with a smile. She set the tray on the side table and gave me a plate of scrambled eggs and bacon, another plate with two pancakes, and a glass of orange juice. When she had delivered my food, she sat in my lap and gave me a hug. Then she leaned over and kissed me gently on the lips. \"Good morning,\" she whispered.",
        "My throat suddenly felt very dry. I swallowed nervously as my chest constricted. The changes I was seeing daily in my daughter were taking my breath away. Not only was she more confident than I had seen since we began this exploration into naturism and sexuality, but it seemed she was completing her final metamorphosis into adulthood. Her body was already there, and her maturity was quickly catching up. It was extremely fucking attractive.\n\n\"Thank you, beautiful,\" I said, peppering her lips with kisses. \"This is wonderful. Let's take a break and eat.\"\n\nI suggested we take our food over to the couch that sat against the opposite wall. We took seats next to each other and set our breakfast plates on the coffee table. The food was delicious, and once we were finished, we sat back and relaxed, Becca curling into my side with her head on my shoulder. I absently rubbed her bare back as we talked about nothing in particular. It was nice spending leisurely time with her enjoying simple touches and conversation.\n\n\"Do you have to get back to work right away?\" she asked.\n\n\"Well, eventually I will, but I have a little time. Something on your mind?\"\n\nBecca smiled mischievously, her cheeks coloring slightly. \"Would you like to watch me?\" she asked playfully.\n\n\"Watch you what?\" I asked, though I had a very good idea of what she was talking about.\n\n\"Watch me...masturbate...\" she said seductively as she lay across my lap, resting her head on the arm of the couch to my right. Her back was arched over my thighs and her ass was on the leather sofa cushion just next to my left leg. Her magnificent tits with the tiny areolae and stiff pink nipples were right there in my line of vision. I went to caress her breast and she playfully slapped my hand away. \"No touching,\" she said.\n\nFuck me.\n\nI waited for her to say something, but instead, she reached between her legs and started touching herself right there in my lap. I felt my cock respond, but it wasn't going to be able to do much under the weight of her back.\n\nBecca bit her lower lip as she gazed into my eyes. She pulled her knees up and spread her legs and I watched as she traced her fingertips through the wetness between her hairless labia. My eyes were riveted to her sex and I drew in a deep breath as I felt my heartbeat quicken.\n\nBecca closed her eyes and plunged her fingers inside herself as she rhythmically strummed her clit, already beginning to work herself toward an orgasm. I continued to watch in rapt fascination, listening to the wet sounds of her aroused and well lubricated pussy. A whiff of her musky vaginal aroma wafted into my nose and I closed my eyes as I fought to suppress the urge to do very naughty things to her. Her C-cup breasts jiggled with the movements of her hands and her hips as she masturbated uninhibitedly. What an amazing and wonderful morning surprise this was.\n\nI couldn't help breaking her 'no touching' rule and rubbed her inner thigh, feeling the smooth skin as I moved my hand between her knee and her hip. The knuckles of her masturbating hand brushed mine and I groaned inwardly. To think I was this close and all I had to do was reach out and take over for her, sinking my digits into her warm, wet sex was killing me. I was tempted to do just that. But it was too late. Her orgasm had arrived.\n\nBecca's blue eyes went vacant, and she began to cry out as her vaginal muscles contracted in wave after wave of ecstatic pleasure. Her finger flew across her clit, drawing out that euphoric high as long as she possibly could. She bounced up and down in my lap, bucking and moaning as her free hand pinched a nipple so hard it turned white. When the blissful orgasmic wave had subsided, her entire body melted into my lap and she glanced up at me with a sexy, bashful smile as she continued to massage her sex. She took deep breaths as she recovered from the exertion and I ran my fingers through her beautiful blond hair.\n\n\"That was magnificent,\" I whispered.\n\nBecca beamed from ear to ear as she withdrew her messy fingers from her tight vagina. They were glistening with wetness and smeared with white cream. She smelled her fingers, then stuck one in her mouth and sucked it clean. To my surprise, she held the other one up, offering it to me. I sniffed it, smelling the fresh, hormonal aroma, and gratefully opened my lips as she stuck her finger in my mouth. I felt my dick strain inside my pants as I tasted her warm, fresh fluids, licking the sticky, white cream from the webbing between her fingers as well. After I was done, I smacked my lips as if I had eaten my favorite meal and she laughed.\n\nSeeing her happy and listening to the sound of her laughter was like music to my heart. I smiled contentedly down at her and said, \"Thank you so much. That was a really special gift.\"\n\nBecca's smile evaporated and I could see she was looking at me with expectation. We both stared deeply into each other's eyes for a long moment, and I could feel myself being drawn to her by some unknown force. I leaned down closer to her and she drew a nervous breath, but she didn't turn away. Finally, I kissed her. It wasn't a chaste kiss. I devoured her lips, my tongue probing inside her mouth. After a moment's hesitation, her mouth opened wide, and her tongue joined in. We kissed for what seemed like ages until my hand found its way to her chest. I placed it over her breast and squeezed, feeling the soft, firm tissue and the erect nipple under my palm. I broke the kiss and said, \"I love you, Becca.\"\n\nA swirl of emotion raged through her eyes. Then she whispered, \"I love you too...Tim.\"\n\nHer use of my first name sent a jolt through my body. Suddenly, I panicked, realizing this was real. I had initiated a sexual relationship with my 18-year-old stepdaughter. I had raised her since she was six, never once having an impure thought about her until a few weeks ago. And in that short period of time, though I was reluctant to admit it to myself, I had fallen in love with her. She was the image of her mother, whom I had loved immensely. But Becca was everything her mom was and more. She was the apple of my eye who had somehow become the love of my life. And I was apparently lucky enough to have that love reciprocated. If she was calling me Tim, it meant that she had reached a tipping point in her mind\u2014we were no longer stepfather and stepdaughter...we were becoming lovers.\n\nBecca must have misread my shock as anger because she asked, \"Am I allowed to call you that?\"\n\nI quickly collected myself and smiled, saying, \"Of course, you are.\"\n\n\"Are you OK, dad?\" she asked, then blushed at her accidental reversion to my familial title.\n\nI laughed and said, \"Yes, sweetheart. I'm more than OK.\" I rubbed her smooth stomach and played with the diamond stud in her navel. \"It just took my by surprise. When you called me by my name it just made me suddenly realize that our relationship is now different, isn't it?\"\n\nBecca blinked and nodded. \"I don't know what to do about Sydney.\"\n\n\"What about Sydney?\" I asked, confused by the sudden turn in the conversation. Sydney Thomas was her best friend and they had been inseparable until recently. I hadn't seen much of her lately, and I guess if I thought about it, I knew exactly why. Becca probably didn't want her to know that we were dabbling in naturism, let alone have her find out about our sexual relationship.\n\n\"I don't know what to do,\" she repeated. \"I can't very well invite her over here with us, or even with just me naked all the time. And if I had her over and we stayed dressed and acted like nothing had changed I would feel like we were putting on a show, and I don't want that either. I've been out with her a couple times recently, but she's been asking why we aren't hanging out here. What am I supposed to do?\"\n\nI didn't know how to answer Becca's questions. I had known Sam and Rhonda Thomas for a number of years, and they lived just a few blocks away with their daughter. If they found out my daughter and I were hanging out naked at home together, they would probably freak out and forbid Sydney from coming over. It might even destroy the girls' friendship.\n\n\"I don't know what to tell you, sweetie,\" I said, pushing the hair out of her beautiful face. \"I guess I would start by having a serious conversation with her. Find out how she feels about naturism, to begin with. Keep it vague and nonspecific in case you don't get good vibes from her. I would hold off on any of the rest of it for now.\"\n\nBecca nodded. \"We were planning to go the mall today and then we were going to come back here to hang out. I guess I can find out where she stands on the subject while we are having lunch.\"\n\n\"That sounds like a plan,\" I said. \"As much as I would love to spend the entire day staring at your lovely naked body on my lap, I need to get back to work.\"\n\nBecca blushed and sat up, then I stood and gave her a peck on the lips before walking over to my desk. I glanced back to see her watching me with a dreamy expression on her face. I smiled and she smiled back, then she stood up and playfully sauntered out of the room, exaggeratedly wiggling her ass back and forth as she left. I looked at my computer and thought to myself, Now, that was just fucking mean.\n\n* * * * *\n\nBecca and Sydney sat in the mall catching up on all the gossip and eating Chinese in the food court. Becca had been nervously waiting for the right opportunity to talk to her friend about her new love of being naked, but there just didn't seem to be any natural way to incorporate it into the conversation. Finally, she just decided to blurt it out.\n\n\"Have you ever heard of naturism?\" Becca asked her petite brunette friend.\n\n\"Yeah, it's like nudists and stuff, right?\"\n\nBecca was surprised that she knew what it was, because when her dad had mentioned it a few weeks ago, she'd had no idea.\n\n\"Yeah. What do you think about it?\" she asked.\n\nSydney crinkled up her nose and said, \"I don't know. I guess I don't think about it.\"\n\n\"How do you feel about the idea?\" Becca prodded.\n\nSydney swallowed a bite of pork fried rice and asked, \"Why? Are you a nudist?\"\n\nBecca blushed and countered, \"No! I mean...not really. Why? Are you against it?\"\n\nHer friend gave her a quizzical look and said, \"No. I just have no opinion about it. I don't know anyone who does it. I don't know if I could do it, but if others want to, that's fine for them.\" When Becca didn't reply, keeping her eyes on her plate, Sydney said, \"Have you done something like that?\"\n\nBecca blushed and said, \"Maybe.\"\n\nSydney's face took on a look of surprise and she slapped Becca on the shoulder. \"Shut up!\" she whisper-yelled. \"Are you serious? You have? Where? When? Spill it, Becca!\"\n\nBecca gave her a stern look and said, \"Keep your voice down!\"\n\n\"I'm sorry!\" Sydney exclaimed, then said, \"Well?\"\n\n\"OK,\" Becca began. \"What I'm going to tell you is top secret. I'm serious. You can't tell anyone. Even your parents. Especially your parents.\"\n\n\"Like I would tell them anything anyway,\" Sydney replied. She smiled conspiratorially and said, \"Tell me.\"\n\nBecca took a deep breath. \"A few weeks ago, my dad told me something about him and my mom. Apparently, when I was little, they had both tried out naturism, going to nude beaches and campgrounds.\"\n\nSydney's mouth dropped and she whispered, \"Really?\"\n\nBecca nodded. \"After my dad\u2014my stepdad, mind you\u2014told me about it, the idea kind of stuck with me. I found myself wanting to try it.\"\n\nHer friend said, \"You naughty bitch!\"\n\nBecca smirked and said, \"There's nothing 'naughty' about it. It's just about feeling more comfortable in your skin than you do in clothing.\" After Sydney shrugged, Becca continued. \"Anyway, my dad\u2014stepdad\u2014told me that if it was something I wanted to try, I should start at home, because it was safe and private. And since he had already been a naturist, it wasn't something that would bother him.\"\n\nSydney's face got deadly serious. \"He suggested you take your clothes off at home. In front of him?\"\n\n\"It's not like that,\" Becca said. \"He's not some kind of pervert. He is just very open and free with that kind of stuff.\"\n\nSydney looked like she wasn't convinced. \"So, you did it? You've been naked in front of your dad?\"\n\n\"I keep stressing that he's my stepdad, because our relationship is different than what you have with your dad. He's your real dad\u2014flesh and blood. I don't have that with mine. I mean, he raised me after my mom died, and he's always been dad to me, but it's different. I don't have the same taboo feelings about him that you would with your dad.\"\n\nSydney appeared to be thinking it over. Finally, she said, \"OK. Continue.\"\n\n\"Well, I started off just going topless.\"\n\nThe brunette girl's eyes bugged out briefly at that word, then motioned for her to keep going.\n\n\"After I got accustomed to being topless, and being seen by my dad, then I took the leap and went fully nude.\"\n\nSydney sat back in her chair as she tried to process this information. The look on her face was unreadable. \"Are you OK?\" she asked Becca. \"Do you feel like you were coerced in any way by him?\"\n\nBecca placed her hand over her girlfriend's. \"Not in any way. I don't want that even to be a concern. I know exactly what I'm doing. And I'm happy. And he's happy. He's been nude around the house too...but only after I told him it was OK. I didn't think it was fair for me to have the freedom to be nude when he didn't. We both hang out naked at home all the time now. And I wouldn't have it any other way.\" After a few seconds, Becca asked, \"How are you feeling about this? Can I count on you to keep this between us?\"\n\nHer friend blew out a breath. \"I'm just kind of blown away by this. It's hard to believe that you and your dad\u2014stepdad,\" she said with an eyeroll, \"\u2014hang out naked together all the time.\"\n\nBecca smiled and said, \"It's perfectly consensual, and like I said, I'm happy. Please be happy for me. Is this something you think you can deal with if we hang out at my place after this?\"\n\nA lightbulb went on over Sydney's head and she asked, \"Is this why you've been avoiding me lately?\"\n\nBecca blushed and averted her eyes. \"Yeah. I didn't know how to bring it up. Or how you would take it.\"\n\n\"Do you plan on being naked in front of me?\" she asked.\n\n\"Well, I don't have to be, if it makes you uncomfortable,\" Becca replied dejectedly.\n\nSydney paused, then said, \"Do whatever makes you happy, Becca. Don't worry about me. I just miss you and want to hang out. If you happen to be naked, then I'll get used to it.\"\n\nTears began to fill Becca's eyes as the girls hugged. They continued talking as they finished their meals, Sydney asking a hundred questions about the whole 'naturism' thing.\n\n* * * * *\n\nThe girls drove to Becca's house after they were done at the mall and they undressed in Becca's room. Sydney changed into a pink bikini and Becca wore black thong bottoms, but nothing on top. A little chill ran up Becca's spine as her best friend, who had seen her naked before, but only when they were changing together, kept ogling her as they left the safety of her bedroom and walked down the hall. Becca peeked around the corner and announced herself to her dad, who turned around in his chair. The girls entered the office, one in a bikini and one topless. Sydney's eyes darted nervously between Becca and her dad.\n\n\"Hey, dad. Sydney and I are going to tan out by the pool for a while.\"\n\nHer dad smiled. \"OK. I see you let Sydney in on your secret.\"\n\n\"Yeah. She said she wouldn't say anything. I don't think her parents would be cool with it.\"\n\n\"Oh, I know my parents wouldn't be cool with it,\" she said. \"But I won't say anything. You can trust me.\"\n\nThe girls made their way out to the back yard and took their usual places on towels at the edge of the pool. Becca was still a little nervous to be outside with no top on and she looked around to make sure no one could see her, even though there was a tall privacy wall that surrounded the entire back yard. They sprayed tanning oil all over their bodies and soaked up the sun, enjoying the summer day.\n\n* * * * *\n\nWhen I decided to take my break, I pulled on my swim trunks and headed outside. The girls were there lying by the pool in their favorite spots, and I greeted them as I stepped down into the water.\n\n\"Hey, girls. Why don't you join me? It's pretty hot out.\"\n\nThey leaned up on their elbows, Sydney in her little pink bikini and Becca topless in her black thong. They glanced at each other and shrugged, then scooted forward and slipped into the water. As Becca submerged herself and then stood up, the water beaded off her oily skin. Her nipples seemed like they grew erect in front of my eyes. Sydney, with her little B-cup boobs, had oil all over her body as well, and even though I couldn't see her breasts, she nipped out quite nicely.\n\nWe talked with Sydney for a while about our feelings on naturism and nudity and I tried to get a read on her. I wanted to make sure she was going to be OK with how things were now, and I wanted to confirm that she was going to be discreet. All seemed well, though, so we played a little, splashing each other and enjoying the water. After our flirtatious playtime, both girls were standing at attention, and I was beginning to have that familiar problem down below.\n\n\"So, do you think you would ever give naturism a try, Sydney?\" I asked, smiling.\n\n\"Oh, I don't think so, Mr. Davis,\" she replied.\n\n\"It sounds like you aren't sure,\" I responded playfully.\n\nSydney glanced at Becca's breasts and turned back to me with a red face. \"I don't know if I'm brave enough for that.\"\n\n\"Well, you know, just like I've told Becca many times, this house is a safe place. If you are curious about it, there is no better place than here. There will be no judgment of any kind, and whatever happens here stays here. Nobody other than us will know about it.\"\n\nSydney looked like she was torn, so I drove the wedge in a little further, hoping to widen the crack.\n\n\"I'll make you a deal. Take your top off and lie in the sun for five minutes. If you don't feel amazing afterwards, you can put your top back on, and I will never bring it up again.\"\n\nSydney's eyes darted around as if she were trying to think of some excuse to get out of it. Suddenly, she stared at me confrontationally. \"Is this about you wanting to see me naked, Mr. Davis?\"\n\nI was a little taken aback. I mean, it was kind of about that, but I didn't want to make her feel that way. \"I was simply trying to be inclusive, Sydney. Becca and I have really been enjoying our foray into the naturist lifestyle here at home, and I wanted to give you the same opportunity while you are with us. If you don't want to, that's perfectly fine.\"\n\n\"I don't see you taking anything off,\" she said a little defensively.\n\n\"I would be more than happy to take my trunks off. The only reason I'm wearing them is for your benefit. I didn't want to expose myself to you if that would have been offensive or overwhelming. But I'll do it right now. Is it OK with you if I take them off?\"\n\nSydney suddenly looked like she was second guessing her suggestion. \"Uhh...\" She looked at Becca, who shrugged with a smile on her face. \"I guess it's OK,\" she said with wide eyes.\n\nI waded over to the pool stairs and took two steps up, so I was almost completely out of the water. Then I turned to face the girls and untied the front of my trunks. I slid them down and off my legs and tossed them onto the tile deck with a wet slap. Both girls were staring at my penis, which was chubby, but not erect, as I walked back into the water.\n\n\"It's as easy as that,\" I told Sydney. \"No judgment, no inhibitions, no humiliation. It's incredibly freeing to be naked\u2014even in front of other people.\"",
        "Sydney's nipples were sticking straight out in her pink bikini top. I knew she was excited and possibly even turned on. She glanced at Becca, seeking moral support, and my daughter gave her a big smile, nodding her encouragement. Sydney's hands trembled as she reached behind her back and untied her bikini top. With a single pull of a string, her top came loose, and her arm quickly held it against her chest. Becca squeezed her shoulder in a gesture of solidarity. She blew out a nervous breath and pulled the material away from her chest, tossing it out of the pool.\n\nSydney Thomas was stunning. Standing three inches shorter than Becca and a cup size smaller, she would definitely be considered petite. Her dark hair fell over her tanned shoulders by an inch or two. Her B-cup breasts were positively pale compared to the rest of her body, which saw the sun on a regular basis. Her areolae were larger and darker than Becca's, with nipples that were about the same size. While Becca's tits were a nice handful, Sydney's were cute and perky. They stood up with no support, her nipples pointing directly at me.\n\n\"How do you feel?\" I asked her.\n\nSydney was shaking and looked slightly nauseous. \"Nervous.\"\n\n\"There is absolutely no reason to be nervous. We are alone here. No one will see you. Are you nervous, Becca?\"\n\nMy stepdaughter shook her head, even though she glanced around, double-checking to make sure we were alone.\n\nI looked at Sydney again. \"Becca and I have been living life fully nude inside the house, although Becca has never been bottomless out here. Why don't you take your bottoms off and show Sydney that she has nothing to worry about here?\"\n\nBecca shot me a look, then quickly scanned the yard again. The privacy wall made it so there was no way anyone could see us unless they were flying a drone over our yard.\n\n\"Go ahead,\" I said. \"It's about time you overcame some of your irrational fears as well.\"\n\nBecca glanced at Sydney, trying to look confident, then walked up the pool steps like I had. She pulled the strings on the sides of her hips and her bikini bottoms fell away, exposing her smooth vulva. She tossed them onto the deck and walked back into the water.\n\n\"Good. Now why don't you girls go lie in the sun for a bit and tell me how you feel afterwards.\"\n\nBecca grabbed Sydney's hand and led her up the steps and back to their towels. They lay down and soaked up the warm Florida sun. I swam a few laps in the pool, periodically stealing glances between their legs and surreptitiously checking out their breasts. After a few more minutes I walked up the steps and sat on the deck next to them, my penis lying to one side on my thigh.\n\n\"So, how are you feeling, Sydney?\"\n\nShe lifted her sunglasses and squinted at me, her eyes darting from my eyes to my dick and back. \"I feel pretty good, surprisingly.\"\n\n\"Here you are with your breasts out in front of me for the very first time and it's not as bad as you thought, huh?\"\n\nShe blushed a little but shook her head.\n\n\"And how about you, Becca? You are totally nude in our back yard.\"\n\nBecca smiled and said, \"Yeah, I feel good too. I don't know why I was so worried about it. It's private back here. And the sun feels amazing on my body.\"\n\n\"Well, girls, have we learned anything today?\" I said, giving them my best substitute teacher impression. They chuckled and smiled from ear to ear. \"Now, we just have to get you relaxed enough to lose the bottoms, Sydney.\"\n\nThe lovely little brunette's smile vanished in an instant as she contemplated it. \"If you had asked me that an hour ago, I would have told you both you were crazy.\" She looked at Becca's nude body and then mine. \"But it does feel really nice to be topless, and with you both naked, I do feel kind of left out.\"\n\nThat surprised me. I thought she would push back on the idea, but it seemed she may have been more open to it that I had originally thought.\n\n\"Well, what are you waiting for, sweetie? We would love for you to join us! Take them off!\"\n\nSydney hesitated, taking deep breaths as she pumped herself up, then she untied her bottoms. The material went slack over her pubic area. She hesitated once again before lifting her butt off the towel and pulling her bottoms off.\n\nSydney's vulva was hairless, just like Becca's. Unlike Becca, her inner labia stuck outside of her outer labia, displaying some meaty little wings. The first thing that popped into my head was that they looked eminently suckable. I felt my cock thicken slightly at the thought of licking her pussy.\n\n\"Wow. You are absolutely beautiful, Sydney! You should take great pride in the fact that you have a gorgeous little body. Just like I have told Becca, please feel free to explore this side of yourself any time you are here, sweetheart. Anything that happens here is just between us.\"\n\n\"Thanks, Mr. Davis,\" she replied.\n\n\"Oh, and please call me Tim.\"\n\n\"OK...Tim,\" she said, squeezing her bare thighs together.\n\n\"Great. Why don't we go in and I'll make us something to eat?\"\n\nThe girls stood up and Sydney immediately wrapped her towel around herself. Becca took no such step before standing next to me.\n\n\"You don't have to cover up to come inside, Syd. You can if you want to, but we don't. Do whatever makes you comfortable.\"\n\n\"Oh,\" she exclaimed, then, not wanting to stand out, dropped her towel on the ceramic patio tiles.\n\nI waved the girls ahead of me and watched their bare asses as they walked. Sydney's smaller butt wasn't as plump as Becca's, but it was no less inviting, and it made me wonder if there might be a way to welcome her into our playtime as well.\n\nThe girls sat at the dining room table as I made a tossed salad. I popped a couple frozen pizzas in the oven, and we sat and talked while they were baking. About twenty minutes later we were stuffing our faces. After the meal, I told the girls I needed to get back to work and I left them in the living room on the couch.\n\n* * * * *\n\nBecca glanced over at her best friend sitting naked on the couch with her legs tucked under her butt and smiled. \"How are you feeling about all this?\"\n\nSydney shook her head. \"This is fucking crazy. If you told me this morning that I would be naked in your house in front of your dad, I would have thought you were on drugs.\"\n\n\"But when you think about it, it's not really a big deal, is it? He's not judgmental, and he's perfectly OK with it. He is a very kind person, and he would never make someone feel badly about their body. He's now seen you naked. Who cares?\" She shrugged her shoulders. \"I've come to the conclusion that my body is normal and natural. Not only has Tim seen me naked, but we had a pizza delivered last week, and that guy saw me topless. Plus, we went to a nude beach and I went topless there as well, in front of tons of people. And nobody cared. It was amazing.\"\n\nSydney sat there with her mouth agape. \"Wait. Are you serious?\" Becca nodded. \"That's...wow. This is all so much to take in.\" She paused to ponder what Becca had revealed, then looked her friend in the eyes. \"Why did you call your dad Tim?\"\n\nBecca's smile slipped. \"Oh, uh, I've been calling him that lately.\"\n\n\"Why?\"\n\n\"Umm...\" Becca wasn't sure what to say. Should she tell her friend about their extracurricular activities? How would Sydney react? She might be able to handle it. But if not, things could go south really quickly. \"Uh...well...\"\n\n\"What's up?\" her friend asked. \"Is everything OK?\"\n\n\"Yeah!\" Becca was quick to assure her. \"Listen. I don't know if you are ready to hear absolutely everything yet...\"\n\nSydney looked sideways at Becca. \"I had a feeling there was something you were holding back from me. You may as well spill it. I don't know how things could get any weirder than they have already.\"\n\n\"Oh, you'd be surprised,\" Becca mumbled to herself. Sydney waited with her palms up, urging Becca to continue. After a moment's hesitation, she said, \"I want to remind you again that Tim and I aren't related. Even though he has raised me as his daughter, I'm really not. He never even officially adopted me. If I didn't know him as my stepdad, he wouldn't be any more related to me than a random dude off the street.\"\n\n\"OK...\" Sydney said, wondering where Becca was going with this.\n\n\"So, as you can see, he's really...permissive...about nudity around the house. He's very open-minded and free. And that goes for...sexuality...as well.\"\n\nSydney's face fell. \"Has he tried to do anything to you?\"\n\n\"No!\" she exclaimed. \"Not to me. Not like I'm a victim and he's a predator. It's nothing like that.\"\n\n\"Go on...\"\n\n\"It's just that we have had some very honest and open conversations. He is just as open-minded when it comes to things like self-pleasure as he is with nudity.\"\n\n\"Self-pleasure. You mean...masturbation?\"\n\nBecca nodded. \"Yeah. And there's nothing wrong with that. Masturbation isn't something to be ashamed of or to keep hidden. It's normal and natural. Everyone does it. Even you and I have talked about it before.\"\n\n\"Yeah, but we haven't done it in front of each other. And I would especially never do it in front of my parents! That is what we are talking about here, right? You masturbate in front of him?\"\n\nSydney was very perceptive. Becca didn't have to spell things out for her. She caught on quickly. \"Yes, but it's not coerced or anything. I masturbate almost every day. It's just that now I have the freedom to do it whenever and wherever I want. I don't have to close my door and be secretive about it. He doesn't mind.\"\n\n\"I'm sure he doesn't,\" Sydney replied with a sarcastic huff. \"I'm sure he enjoys every minute of it.\" The little brunette suddenly felt very naked and exposed, and she wrapped her arms around herself as she checked to see if Becca's dad was anywhere around.\n\n\"But I enjoy it when he does it too,\" Becca said, placing a hand on her friend's knee. \"It's not like he is convincing me to do something he wouldn't do himself. And he wouldn't masturbate in front of me if I had a problem with it. He told me so. But we have reached the point that we are enjoying each other in that way.\"\n\nSydney looked nauseous as she imagined Becca and her dad masturbating together. \"Is there anything else I should know?\"\n\nBecca looked into her hands. \"Sydney. I don't want to lose you as a friend. But I don't want to keep things from you. It would feel dishonest and false. And I don't want that. I would rather lose your friendship that have it turn into something fake and superficial.\"\n\n\"I don't want that either, Becca. Look, I can handle whatever you have to tell me. I just want to make sure that you are safe and healthy and happy. I don't want anyone taking advantage of you or abusing you. Even your dad.\"\n\n\"I can assure you that that is not happening. I am in the safest, most loving place I can imagine being in. That being said...\"\n\n\"Yes?\" Sydney prompted. She was on pins and needles.\n\n\"I think...I mean...I know...\" She paused as she searched her friend's eyes for any sign that this would break them. She found nothing but love and acceptance, so she just let it spill. \"I'm falling in love with him, Sydney.\"\n\nHer friend's jaw practically hit the floor. \"Whoa,\" she exclaimed. \"That took a turn I wasn't expecting. I was thinking you were going to say that you guys fucked or something. But not that you were in love with him. How did this happen?\"\n\nBecca drew in a deep, shaky breath. She was on the verge of tears. It felt good to get this off her chest. The past few weeks had been like this big secretive weight on her back. It was smothering her. But she felt she could share anything with Sydney, and it was a huge relief to finally say it out loud.\n\n\"We haven't fucked. But we have done other stuff. And I find myself thinking about him all the time. Literally all the time. I can barely concentrate at work. I just want to get home as quickly as possible and see him.\"\n\n\"What have you guys done?\" Sydney asked in a monotone voice.\n\n\"We masturbate together. He gives me foot massages that have turned rather sexual at times. He's touched me everywhere. I've touched him everywhere too. We have gotten each other off with our hands. The other night he used my feet to masturbate.\" She let out a little laugh. \"It was actually really hot.\"\n\nSydney rubbed her face with her hands. \"Wow. That's serious. And you're absolutely positive there is no coercion in any of this? Because honestly, Becca, if you are in trouble of any kind, you have to tell me. I won't stand by and let you be hurt.\"\n\n\"I have never been happier in my life,\" Becca told her friend. \"Please keep this between us. I know it's not...conventional. And most people probably wouldn't understand. But I'm happy. He has been single since my mom died and throughout that entire time he has barely even dated. I could count on one hand the number of times I remember him getting a babysitter to watch me while he went out on a date. He deserves this even more than I do. I want to make him happy.\"\n\nSydney nodded. \"I won't say anything, Becca. I kind of can't now anyway,\" she said, blushing. \"I'm naked here too. I would be outing myself if I told anyone about you guys. But just so you know, I would totally throw myself to the wolves if I thought you were in trouble.\"\n\n\"I know you would. And I love and appreciate you for it.\" She hugged Sydney hard, and their breasts squished together. Then she quickly ended the hug and leaned back in shock. \"That's a first. I never felt another girl's boobs against mine.\"\n\n\"Yeah. Me neither. But there isn't much that could shock me more than what I've heard in the last half hour. I guess anything goes, at this point,\" she conceded with an incredulous look.\n\nBecca laughed and hugged her again.\n\n* * * * *\n\nBecca knocked at my office door and I told her to come in. She and Sydney walked in together, holding hands. They were both still completely nude, and my eyes couldn't help roaming over Sydney's body.\n\n\"Tim...\" Becca began.\n\nMy chest constricted because she hadn't yet called me that in front of Sydney, to my knowledge, and I wondered nervously where this was headed. \"Yes?\"\n\n\"I told Sydney about us. She knows everything. Not just about our naturism. She knows about our freedom to masturbate and our relationship as well. And she has accepted it. She's OK with all of it.\"\n\nI suddenly felt light-headed as the blood drained out of my face. I tried to control my expression, because I didn't want to show my discomfort in front of them.\n\n\"I see.\" I looked at Sydney and said, \"Are you sure I can trust you to keep this between us, Sydney?\"\n\n\"As long as I can trust you not to hurt Becca, you can trust me not to say anything,\" she said defiantly.\n\nI smiled. \"Then we are on the same page. Because I would sooner die than hurt Becca.\"\n\n\"Good. Because if you do hurt her, I will murder you in your fucking sleep.\" Her half smirk let me know that she was only partially joking.\n\nI nodded uncomfortably and they left the room together. Holy fuck. My adrenaline was rushing through my body. I suddenly couldn't wait for Sydney to leave so I could have alone time with Becca.\n\n* * * * *\n\nLate that evening, Becca and I were once again in the living room. We were naked and had just finished a snack while watching a comedy on Netflix. She was leaning into the center area of our L-shaped sofa with her legs stretched out. I was sitting in my usual spot at the end, just out of reach of her feet.\n\nI watched her as she laughed, her eyes twinkling as her smile lit up the room. Her breasts jiggled as her diaphragm moved up and down with each peal of laughter. And her smooth vulva peeked out from between her thighs. My eyes traced a path down her long legs, all the way to her bare feet.\n\nShe had spent much of the day with her shoes off and her soles showed a little discoloration from dust and dirt. Becca gasped as I suddenly reached over and grabbed her by the ankles and pulled her closer, resting her heels on my thighs. The look on her face was one of shock, which, within seconds turned into a shy, knowing smile.\n\nI lifted her foot to my face, sticking my nose between her toes, and breathed deeply. The aroma was substantially more subdued than on previous evenings when she had worn shoes for hours. But Becca's mellow scent came through and it filled me with lust. I licked the dirty pads at the top of her foot and ran my tongue between her toes. My saliva reactivated her scent and it wafted into my nose. Her foot tasted dusty and the taboo idea of licking her dirty feet sent signals from my brain straight to my cock.\n\nBecca sighed and closed her eyes as I continued my oral assault on her other foot. Her hand slipped between her legs and her finger probed inside her moist vulva. I licked and sucked on her feet until they were completely clean, stroking my dick with my free hand.\n\nSetting her newly cleaned feet back on my thigh, I watched Becca sit up. She offered me her wet, slippery fingers and I smelled them. They were redolent with her feminine musk. I licked them clean as well and she lay back down, looking at me seductively. Suddenly, I heard her stomach rumble, and she placed a hand on her abdomen as her nose scrunched up.\n\n\"I think I have to take a break. I'll be back,\" she said as she jumped up and went upstairs.\n\nAs I waited for her, I massaged my cock, trying to maintain my erection while she was gone. After about ten minutes, Becca came downstairs. She sat next to me on the couch and watched as I stroked myself. I had a pretty good idea of why she had left, and it gave me an idea.\n\n\"Come up on your knees,\" I instructed. She did what I asked with a curious smile on her face. \"Facing that way,\" I told her, pointing to the opposite end of the couch. She turned around so that her feet were next to my leg, and her bare ass was up in the air. I could see everything from her moist vagina to her graphically splayed asshole.\n\nI took a position behind her and said, \"There is one area of your body I haven't yet smelled.\" I grabbed a handful of each cheek and spread her ass even more. Becca darted forward out of my hands and turned around, quickly sitting on the couch.\n\n\"Nooo...\" she said. \"You don't want to do that.\"\n\n\"Actually, I do.\"\n\n\"Dad...Tim...\" Her face colored at her slip of the tongue. \"I just went to the bathroom. I cleaned myself, but I haven't had a shower or anything. That would be really gross.\"\n\n\"It would be fantastic,\" I replied. \"I love every part of you\u2014every aroma that emanates from your body and every fluid you secrete. I want this.\"\n\nBecca looked like she might hyperventilate. \"That's so weird...are you sure? I don't want you to be disgusted and pretend that you like it.\"\n\n\"I wouldn't do that. If I didn't know I wanted it, I wouldn't have asked.\" I motioned for her to turn back around.\n\nBecca sighed nervously but did as I instructed, turning back around, and sticking her butt up in the air. I leaned forward and kissed each cheek, then squeezed them. They were soft and cool to the touch. I rubbed the tip of my nose along the top of her crack, then traced a path to her asshole. It smelled earthy and strong. It was plainly evident that she had just gone to the bathroom. There was no visible messiness on the outside of her sphincter, but I knew she wasn't completely sanitary simply based on the pungency. My head swam with desire as I placed my nose directly above her puckered anus and breathed in deeply. The odor that filled my nostrils was base and animalistic and I stroked myself as I breathed in the fumes from my stepdaughter's freshly soiled asshole.\n\nI massaged both cheeks and stretched them farther apart as I leaned in and licked her puckered starfish. Even though the odor was strong, it tasted like nothing. I licked the entire surface, slathering her with my saliva, then began to probe inside with my tongue. It was incredibly tight, and I wasn't having much luck, although Becca moaned from the sensation of my warm, wet tongue in her butthole. I stuck my index finger in my mouth and coated it with spit, then pressed the tip against her anus. It penetrated easily to the first knuckle before meeting tight resistance. Becca mewled and her fear and discomfort were palpable.",
        "\"Becca,\" I said, my voice sounding husky in my own ears. \"Bear down like you are trying to go to the bathroom and it will go in more easily.\"\n\n\"I don't know if I should do that. I don't want to get poop on you.\"\n\n\"If you do, you do. I don't care. Trust me.\"\n\nI rewetted my finger, tasting the part that had been in her butt. There was still no definable taste, although there seemed to be a slight waxiness to it. I pushed it against her sphincter, and when I met the same resistance, I pushed a little harder. Becca groaned as she trembled in fear of the unknown. With constant pressure, it finally moved past her sphincter muscles. I began to slide it in and out, trying to get her accustomed to the sensation.\n\n\"Ughhh...\" she moaned.\n\nI pushed as deep inside her asshole as my hand would allow, then withdrew completely. My finger smelled incredibly rich, but the only evidence that it had been in her ass was a tiny smear at my fingertip. I stuck my finger in my mouth and licked it clean. The smeared area had no true flavor, but it left an earthy aftertaste. I once again coated my finger with spit, then penetrated her fully for the second time. Becca moaned loudly as she accepted my invasive probing and began playing with her clit.\n\nI began rhythmically fingering her asshole, moving in and out and changing up the speed, to try and get her used to the feeling. Becca was now bearing down, and as her asshole pushed outward, the penetration became much smoother. Her ass wasn't prolapsed, but it was accepting the intrusion easily. I withdrew my finger again and her anus gaped before slowly shrinking to a close. I licked my finger clean, then coated both my first and second fingers liberally with saliva. I pushed back inside with only my index finger until she was relaxed again, then added the second. Becca moaned even more loudly with the increase in pressure against her sphincter.\n\nAs I was thrusting my fingers into her ass, I used the first two fingers on my other hand and penetrated her pussy. Becca practically screamed at the sudden sensation of double penetration. As I simultaneously pushed into her butt and vagina, Becca's finger flew across her clit. Her loud vocalizations were almost constant now, as her hips shifted forward and backward, meeting each thrust. I could tell she was close to orgasm because her toes began to curl, and her breathing came in little gasps. Her pussy was leaking around my fingers, a web of slippery fluid stretching toward the couch cushion.\n\nBecca screamed into a pillow as her orgasm ripped through her body, losing muscle control, and collapsing to the couch. I followed her down, continuing the invasive penetration. The muscles in her vaginal area contracted tightly, causing both orifices to pulsate around my fingers and her sphincter gripped me with more pressure than I thought possible. As she turned her face out of the pillow, she rode the waves of her orgasm, grimacing as she moaned. It was hard to tell by her face if she was experiencing pleasure or pain, but I knew the answer to that. Her pussy secreted profusely and there was almost no friction as I fingered her through the last of her orgasm.\n\nFinally, Becca lay there exhausted, and I extricated my fingers from her anus. Her relaxed muscles caused her asshole to gape, and I immediately shoved my tongue inside her, lapping up the aromatic spit that leaked from her butt. After I feasted on her exquisite ass, I withdrew my fingers from her vagina. They slipped out easily, followed by a glob of white discharge that was carried out on a rivulet of her cum. I caught as much of her fluids as I could in my palm and slurped them up like a raw oyster. Then I cleaned my fingers off with my tongue, simultaneously enjoying the taste and smell of both her vagina and her ass. Becca sluggishly lifted herself off the couch and crawled over onto my lap.\n\n\"Holy fuck!\" she exclaimed, her face red and glowing.\n\nI smiled at the profanity, which she almost never used around me, taking it as a sign of our evolving relationship. She mashed her lips to mine and stuck her tongue down my throat, suddenly seeming not as exhausted as I thought.\n\nBecca was straddling my lap as we made out and my hard cock was sandwiched between my stomach and her warm, wet vulva. I squeezed her breasts and played with her nipples as we tongue-kissed and she began to thrust her hips, rubbing herself on the underside of my dick. The pleasurable feeling was intense, and I moaned into her mouth as my arousal grew. I wanted to fuck her so badly, but I wasn't sure if she was ready yet. Becca made it a moot point when she crawled off my lap and kneeled on the floor.\n\nShe pushed my knees apart and leaned into my lap as she grabbed my throbbing cock, slick with her juices. She stroked the length twice, then shot me a lust-filled look as she took it in her mouth.\n\nHoly shit.\n\nBecca's mouth was hot and wet. Her tongue swiped over the tip of my dick as she created a light suction with her lips. Then her head began bobbing up and down as she sucked me off. I squeezed my eyes shut as my head fell back into the cushions, unable to wrap my mind around the fact that my daughter was sucking my dick.\n\nI was so incredibly aroused that I knew I wasn't going to last. As a matter of fact, I was almost there already, and it was a little embarrassing. I grabbed the sides of Becca's head and held her without forcing her down onto me, allowing her to do her thing as I watched. It was surreal seeing her pretty lips stretched around my thick, engorged cock.\n\nHer mouth felt amazing and whether her experience was from real life or watching porn, she knew what she was doing. As my orgasm approached, my whole body tensed up and I started shaking. I reached the point of no return and my face became a rictus of ecstatic agony.\n\nI warned Becca that I was about to come, but her oral assault never faltered. She continued bobbing and sucking as she stared into my eyes. It was strange, but in that moment of weightlessness right before my orgasm hit, I noticed how innocent and lovely her blue eyes looked as she blew me.\n\nFinally, my balls clenched and explosively released their payload. My cock throbbed as it pumped shot after shot of semen into the back of Becca's throat. Her strokes slowed and she blinked repeatedly as she took the totality of my ejaculation. I groaned as the last of my seed was unloaded into her warm, wet mouth.\n\nWhen my orgasm subsided, all rigidity in my body ceased and I melted into the cushions. Becca released the head of my penis with a pop, careful not to lose any of the thick semen. It took her two gulps to swallow all of my cum, and a third after she swished her tongue around her mouth and claimed the remainder of the stray baby batter. She crawled back up into my lap and kissed me once more.\n\nBreaking the kiss after a minute, I said, \"That was the first time you ever used your mouth on me.\"\n\nBecca nodded and bit her lip, then whispered, \"It was so hot. I fucking loved it.\"\n\n\"It's my turn,\" I said huskily as I tossed her to the side and pushed her down in the couch cushions. She gasped and her eyes grew wide as she watched me spread her legs and move myself into position. I gazed hungrily at her wet pussy, dripping anew in arousal. Her strong musk filled my nostrils and my mouth watered. The time was finally here. I was now going to dine from the source of her femininity. Eating pussy was almost hotter to me than actually fucking and my heart raced as I kissed my way down the inside of her thigh. She trembled as I went in.\n\nto be continued..."
    ],
    "authorname": "saltyboy69",
    "tags": [
        "18-year-old",
        "naturism",
        "masturbation",
        "foot fetish",
        "first time nude",
        "anal play",
        "blowjob",
        "romance",
        "oral sex"
    ],
    "category": "Fetish",
    "url": "https://www.literotica.com/s/the-blossoming-of-becca-pt-04"
}