{
    "title": "Her Black Wings",
    "pages": [
        "\"Now I lay me down to sleep.\nI pray the Lord my soul to keep.\nI ask the Lord, the King of kings,\nProtect me from Her Black Wings\n - Amen.\"\n\n--\n\nThe desert stretches out in front of me. Hills of sand undulating, flickering in the heat, glaring back into my eyes. The air is still, no movement, nothing, like being in a vacuum. The sun beats down on me and my skin feels like it's sizzling from the heat. I raise my hand over my eyes and peer into the desert, looking for the next supply truck. I see nothing for miles. \n\nI turn around and walk back into the small village. The homes of cracked wood and mud brick squat on either side of a road that is only a road because it's between the rows of homes. People sit in the doorways, gathered in small groups; young children, women, a few men, limbs thin, faces drawn, bellies distended, skin drawn tight across their skulls with dark eyes peering out at me, looking for the bit of hope that I can bring them. I feel like a god in my clean pressed shirt and pants, a large wooden cross dangling from my neck, my skin bronzed to a golden tan, a bronze god among the dark savages. I shake the thought from my head. I am not a god. I am just an emissary of the one true God, here to bring his word and his hope to these people.\n\nA child steps from a doorway and walks over to me. Her hair is fallen out in patches. Her mouth is toothless. Still her eyes shine. They are alive. With the fire of God. Her hands stretch out to touch me and I kneel down, letting her pull me down to look her in the eyes.\n\n\"What do you need child?\" I ask her, my hand draping across her bony shoulder.\n\nShe stares at me and says nothing. She only stares at me. Then I realize that she is a deaf mute. She has no tongue. She has no teeth. Her mother must chew her food and spit it into her mouth like a bird feeding her baby.\n\nI stroke her head, feeling the bumps of her skull, the few strands of her hair slipping across my fingers. She reaches out and touches the cross hanging down from my neck.\n\n\"It is the cross of the Lord our God. You have one of your own,\" I tell her, knowing how these people see symbols like the cross as powerful talismans and though that seems like idolatry to me - and thus sinful - I am happy that they have accepted the cross.\n\nShe wraps her hands around the cross and closes her eyes as if she's drawing strength from it, pulling the spirit of the Lord into her soul. I almost expect to see her tiny, frail body to expand, filled with His strength, but nothing happens. She holds it in her hands, seeming to meditate upon it.\n\nThen her eyelids open, her eyes rotated back into her head, the whites glaring out at me. Startled, I jump back from her. The leather necklace snaps from my neck as I fall backwards, her hands still grasping onto the cross, her head still tilted up, her body still like a statue.\n\nI sit up to walk over to her, to see if she's all right and retrieve my cross, but I stop as a shadow drifts over me, blocking the sun. I see the shadow stretch out over me, my shadow swallowed by it. The girl is gone. My cross lies in the sand. I watch as it sinks slowly into the ground, the leather strap trailing after it until it's gone. My skin has broken into goose bumps, cooled by the oppressive shadow. As I breathe out I see my breath drifting from my lips. \n\nI turn around, knowing what I'll see, knowing that she has come again, not wanting to look at her, my body tight with fear, my heart pounding, but I can't help but turn, my body is drawn to her. I must see her. My skin is cold, but my blood boils, and I must look at her.\n\nI see her eyes first, always those eyes, a deep blood red staring down at me as if from some great height, two red shining orbs peering into my head to pierce my soul. Her wings are wrapped around her body, hiding her entirely except for those two eyes, and then she raises her head up, her face beautiful, cruelly beautiful, her lips red and wet, her skin brown, her hair drifting back in long, black waves.\n\n\"Come to me.\" Her voice resounds in my head, deep and sensual, reverberating in my head and then down through my body to my guts, sending waves of tingling pleasure through my loins, and I sigh, feeling my penis starting to harden.\n\nHer black wings shift and then start to part as she unfolds them from her body. My mouth is dry, my body tight with anticipation, watching as her body is revealed to me. Slowly, she pulls her wings apart, the tips scraping across the sand at her clawed feet until she lifts them up, spreading them apart. My eyes trace up her brown legs as her wings unfold, eagerly moving up her calves and thighs, the skin seeming so soft stretched over the muscles, up high on her thighs, staring between her thighs, but I see nothing but darkness, her legs closed tightly. \n\nThen her wings snap loudly as she flicks them apart, stretching out beside her and over her head. Her body seems to glow dimly, illuminating her sensuous curves from the shadows cast by her immense wings. Her chest rises and falls, her breasts large, the nipples black and round. She raises her long arms up, holding them out to me, beckoning me to her. I look at her face, beautiful and dark, her tongue slides between her lips, slipping between her sharp teeth. \n\nShe offers me everything, everything I've never had, everything I've always wanted, but am forbidden to have - every delight and pleasure, wallowing in sin, seeping into my skin. A sigh. Her breath soft on my neck. Her body close to me, oh so close, and I can feel her in front of me, her heat prickling my skin, every nerve tingling. Her wings close around us, swallowing me inside of her, taking me in, and I lean forward, my head resting against her shoulder, my cheek pressed to her skin, so soft. I want to kiss it. I want to bite it.\n\nHer wings slide along my back as she pulls me towards her, her hands at my waist, touching my body, and I'm naked now, nothing between us, just skin against skin, flesh against flesh, and my penis is hard, pushing between her legs, spread wide now, the soft hair tickling me. My body is in a rage, her fingers sliding down my waist and my thighs, her nails scratching my skin, and my brain is soaked with desire, wanting everything she offers, wanting more, and my body jerks as she grabs my penis.\n\nShe moves closer still, her breasts pushed against my chest, her thighs pressed to my thighs, her wings wrapped around my back, her tongue, hot and wet, licking across my neck, behind my ear, and I sigh, feeling my body let go, powerless in her embrace, each second an eternity of pleasure and want.\n\nHer hand presses my penis up against her, between her legs, and she moves her hips, sliding along it, her fingers rubbing it underneath, teasing me, so close, oh so close, my moan making her hair flutter, the scent of perfume and cooked meat. Her fingers touch the tip and my body jerks as a spasm flows up my spine. She moves her hips, sliding the wetness, the soft folds of skin between her legs, along my penis, her stomach pressing against me and then parting as she moves.\n\nI wrap my hands around her waist, feeling the skin, hot and smooth under my palms, her body soft, wanting to pull her towards me, push it into her, now, now, oh I need it inside of her now, lost in lust and desire, her fingers touching me, sliding underneath it, faster, pumping my hips, sliding between her hand and her pelvis, moaning loudly, her tongue stretching along the back of my neck, wrapping around to my face, parting my lips, and I touch my tongue to her tongue, my fingers digging into her waist, grasping her butt, feeling her muscles flexing and moving beneath my touch, moving faster, and then her fingers touching the tip, a quick stroke, and I almost double over as my body erupts.\n\nHer wings hold me against her body, her hand wrapped around the head of my penis as it jerks uncontrollably, my whole body shivering and shaking, grunting, my hips pumping, pushing against her, her tongue diving into my mouth, as the fluid continues to burst from me, a release so wonderful and pleasurable that I want the moment to stretch out forever, never lose it, always feel her against me, around me, holding me, ejaculating into her cupped hand, her fingers stroking it underneath, drawing it out of me, pulling my whole body out tight on a string stretched out to her fingers.\n\nShe slides her fingers down my penis once more, pulling one last ejaculation from me, and then pulls away. I fall to my knees as she steps away, pulling her wings from me, the harsh sun now beating down on my body, exposed, pitiful and naked. I squint up at her, standing over me, her wings pulled in tight against her back, her hand held in front of her, my semen lying in a puddle in her palm. She lifts her hand to her mouth and her tongue shoots out, licking my semen from her hand. She rolls it down her tongue and into her mouth, her lips curled back in a grin, her eyes watching me, and then she presses her hand to her lips to suck it from her hand.\n\nI fall to the ground, crumbling to the sand, all energy drained from my body. I feel the harsh light of God beating on my bare back. I try to crawl towards her to find the protection of her black wings, but I can't move, the sand is opening, pulling me down, and I'm so tired that I can't struggle against it. I look up at her, begging for help, pleading with her, but she's gone, there is nothing, and I sink into the sand until it covers my head and it's dark.\n\n--\n\nI wake with a start, sitting up quickly as my eyes jerk open, my heart pounding. I see the walls of my bedroom lit by the light spilling in through my curtains and not the desert swallowing my sinful body. I drop back onto the bed and rest my hands on my chest feeling my heart slowing down as I let the reality of my bedroom sink in. \n\nI notice my hands clutching my bare chest and sit up again. I push the bed sheets to the side and see my pajamas lying in shreds between the sheets. I look down at my naked body and then notice the sticky wet fluid on the sheets and on my body at my waist and genitals. \n\nI grab my tattered pajamas and wipe the semen from my body, scrubbing the skin, remembering the dream, the feel of her body, her hand, rubbing against me, her tongue on my neck and lips, and I can almost feel her against me again, the desire to enter her. I rub harder, wanting to get the semen off of me, rub those thoughts out of my mind, but rubbing myself is only arousing me more.\n\nI throw the pajamas down on the bed and press my hands into my eyes, wanting to purge myself of the dream, those feelings. I need to pray, pray for strength, for forgiveness.\n\nI slide out of the bed onto the floor on my knees and bow my head with my hands clasped in front of me. I pray to God, pray to please help me, help me fight temptation. My flesh is weak. My mind is clouded. I need His strength to help resist the sin. That sin. That lust. That feeling deep in my gut, in my head, a feeling like none other, pure desire and lust, so tempting. Oh God, I need Your help. I need it more than ever. As I kneel here before You praying for Your strength and love. Kneeling here, trying to rid my soul of this sin, praying - my penis erect and waiting.\n\n--\n\n\"Forgive me Father for I have sinned.\"\n\n\"When was your last confession?\"\n\n\"It's been four weeks.\"\n\n\"Go on my son.\"\n\nI swallow hard, kneeling on the cushion, trying to think how I should start. How can I tell the Father about my dreams? About the lust that seems to control my life? I have resisted telling him during confessions before, but I must, for my eternal soul I must.\n\n\"Go on my son,\" he says again.\n\n\"I'm sorry Father. I just don't know where to start.\"\n\n\"Your heart is heavy. Your sins way upon you. That is just. But you will not be absolved until you can open your heart to the Lord.\"\n\n\"Yes, Father.\" I bow my head, closing my eyes, wanting to shut out this confessional, blot it out, feeling the walls hovering over me, closing in on me. \"I have lied in the past.\"\n\n\"Go on.\"\n\n\"I have lied to you. I have not confessed all of my sins.\" I have begun now and I cannot turn back.\n\n\"Yes?\"\n\n\"I have been tempted and I have not been able to fight it. I have been tempted by lust.\" Hearing the word spoken in this confessional, in this church, by me, I feel as if I've tainted the house of God with my sin. The word seems to echo between the walls, accusing me, judging me. The silence holds for several seconds, the Father waiting for me to continue. \"I have had dreams, very vivid dreams. Dreams that...that are sexual.\" I cringe at that word. Another word I thought I'd never say in the church. I want to leave the confessional and run away. But run to where?\n\n\"Such dreams are normal. How long have you been having them?\"\n\n\"Soon after I turned eighteen. About six months ago.\"\n\n\"Yes. These are normal. Especially for a young man of your age. But you must fight the temptation of lust. It's the most evil sin and leads the most men astray.\" I let his words sink in trying to find solace. I know that such dreams are normal, but I know that mine are different. \"Tell me of these dreams.\"\n\n\"In my dreams,\" I say, my eyes still closed, picturing the desert. \"I am a missionary in some desert country. I am trying to help the sick and the hungry. Do God's work.\" I pause, thinking of the cross sinking into the desert, sucked into the earth. \"And then...then she comes to me.\" I pause, trying to not think of her, but still feeling her black wings over me now and I resist the desire to turn and see if the shadows around me are cast by her wings about to take me in.\n\n\"Go on.\"\n\nI sigh and push myself to continue. \"She is not a woman. She has wings. Large, black wings that block out the sun.\" I stop, hearing the Father move suddenly on the other side of the wall, a loud thunk as something hits the wall. \"Father?\"\n\n\"Continue,\" he says, his voice faltering.\n\n\"Um...She has large black wings and she covers me with them and...\" I stop, unable to speak the rest, hoping that he will know the rest, feeling dirty, so dirty that I infect the world with my filth.\n\n\"Yes?\" he says expectantly. I open my eyes and see the shadow of his form close to the grate between us.\n\n\"Well, she touches me and...and I can't stop her. I don't want to. It feels good.\" I wrap my arms around my shoulders, remembering her embrace, her skin, her body, and I can feel myself becoming aroused. \"She...makes me...well, I, um, I...ejaculate,\" I say, pushing the final word out of my mouth quickly. \"And then she licks it.\" My head is pounding. My hands are sweaty. My body is shivering. I want to collapse back against the wall, feeling so tired, feeling so...horny. I can feel my penis hard in my pants and I have to stop my hand from moving down to rub it.\n\n\"Yes,\" the Father says, the shadow of his head nodding.\n\n\"Help me Father,\" I whisper, unsure if he heard me.\n\n\"She is Lilith,\" he says, his voice floating through the air to me.\n\n\"What?\" I ask though I heard him, just wanting to hear it again.\n\n\"Lilith,\" he says and the name is soft and comforting. I say it softly to myself, feeling my tongue move in my mouth.\n\n\"She is the devil's bride. She is his bitch goddess,\" he says, spitting out the words, and I flinch at the end, having never heard that word in the church before. \"She has been sent to tempt you. You must be special or he would not have sent her to you. You must worry Satan himself.\" He hesitates, letting the words sink in. \"Are you a virgin?\"\n\n\"Yes,\" I say immediately.\n\n\"Good. You want to be a missionary?\"\n\n\"Yes Father. I want to go to the seminary and then spread the word of God to the poor and hopeless.\"\n\n\"Good. You have been touched by God. Given a mission from Him. That is why the Devil pursues you. That is why she has been sent to tempt you and take you away from God's work.\"\n\n\"Yes, Father,\" I say, feeling that he is right, knowing it. I am special. I have been chosen by God. I had known it as long as I had lived. And the Devil knows it too.\n\n\"You must resist her. You must fight her. The more she tries to tempt you the more you must fight her.\"\n\n\"Yes, Father,\" I say, feeling my strength returning, my back straightening, lifting my head in the knowledge that I am God's chosen.\n\n\"The Saint Augustine was tempted by her, but he defeated her. You must as well.\"\n\n\"A saint?\" I say.\n\n\"Yes. The Devil knew Saint Augustine was a miracle of the Lord and sent his mistress to tempt him. But he resisted her.\"\n\n\"Does that mean...\" I start, feeling lightheaded, my chest rising. \"Does that mean that I could be a saint? That I...\"\n\n\"Well, it's possible. You never know God's plan for you.\"\n\nI sit back on my heels, staring through the grate at the shadow of the Father and think that I could be a saint, worshipped by millions.\n\n\"You must keep your Bible close to you. And your crucifix.\"\n\n\"I'm wearing my crucifix now,\" I say and pluck it from my shirt to hold it in my hand.\n\n\"Good. Sleep with them at night. Keep them beside your bed or under your pillow. The Lord will protect you if you keep him close.\"\n\n\"Yes, Father.\"\n\nHe clears his throat and sits back, his shadow fading away.\n\n\"Say twelve Hail Mary's.\"\n\n\"Yes, Father,\" I say, bowing my head again.\n\n\"And pray for strength.\"\n\n--\n\nI look at the small wooden church developing before me. A few men are hammering nails, placing boards up for walls. The small steeple stretches above me, a bright white cross shines at its pinnacle. I place my hands on my hips, feeling strong. This church will help bring the Lord to these people so that they may have the comfort of Heaven when they do die of starvation or disease. \n\nI feel comfortable. I feel that I belong, that this is what I was meant to do. I can feel Him here helping us bring this church up out of the barren sands, his grace working through my body. I can practically feel Him inside of me. \n\nI tilt my head as I stare up at the cross. It is tilted like a wind has pushed it to the side a bit. It wasn't like that earlier and there is no wind. That must be fixed. I should find a ladder and climb up there to fix it. \n\nI look around quickly and see no ladder leaning against the sides of the church. But there must be one around somewhere. I look back up and the cross has fallen more so that it now lies almost perfectly horizontal. It even appears that the steeple itself is bending, warping down to the ground. \n\nNo. This is all wrong. This must be fixed. I start walking around the church to find the men who are hammering to tell them to fix the cross and the steeple now. But I don't hear the hammering anymore. I stop and listen for the men to make a noise, to speak, to move. But, I hear nothing. \n\nI look up and the steeple is bending down now with the cross pointing down to the ground as if the whole church is being pulled to the ground, sucked down into the sand. How can this happen? The boards are bending, not splitting, warping into large curves as the steeple is pulled slowly down in a large arc.\n\nI watch as the cross touches the sand and then disappears into it, buried by the earth. The air is still. The only noise is the slight rustling of sand as the cross and now the spire are sucked into the sand.\n\nI'm drawn to the front door of the church, now warped, curved to the side. I peer into the dark interior but I see nothing, only darkness. The harsh sun outside is unable to break the shadows just inside the doorway. \n\nThe church sits still now, curved in a long arch, the cross and half of the spire now buried in the sand. It no longer seems like a holy place. It's some evil madhouse, everything distorted, unnatural. The opening in the front is a gaping mouth into Hell. \n\nI walk towards the doorway, pulled forward, unable to stop my feet from moving. I grab the cross hanging from my neck. I must keep God close. ",
        "The doorway looms before me. The darkness inside is thick, no light able to penetrate it. I tilt my body to the side to step through the doorway. The air is bitterly cold, biting my exposed skin. I stand up straight and peer into the gloom, trying to discern the interior of the church. My feet keep moving forward, down what should be the aisle between rows of seats, and I can almost see the pews on either side of me.\n\nI look up and can barely see the wall curved over me and turn my head to the side to see the wall stretching over me and then down to the ceiling. I stumble and almost fall over as I lose my balance, my mind unable to make sense of the distorted room. I drop my head and see the altar in front of me, the darkness unable to mask it. I stop in front of the altar, a large gold cross glistening and a large bible with gilded edges sitting on it. I reach out and touch the cover of the Bible softly, seeking its comfort, but the cover is cold. \n\nMy heart stops and I hold my breath as I hear a rustling noise behind me, wings flapping softly, large wings. It's her. \n\nI turn around slowly and stumble back against the altar when I see she's standing directly behind me, seeming to loom over me, her black wings spread wide from one side of the church to the other, her eyes glowing a hideous red.\n\n\"Lilith,\" I groan and pull the leather necklace tight, trying to hold the cross out to her.\n\nShe doesn't move. She is still, her heavenly body unmoving, as she glares at me, her legs spread slightly, planted firmly on the ground, her hands on her hips. \n\nI lean forward slightly, holding the cross in front of me, almost touching her with it, but she doesn't flinch. I break her gaze and notice the cross is upside down, the leather strap strung through a loop at the bottom of the cross, inverting it. I twist it around and push it towards her again. The only movement is a slight grin that breaks across her cheeks, her red lips drawing tight into a sneer. I look at the cross and it is still inverted, the leather strap now strung through a loop at the top of the cross, and I am holding it upside down. I twist it over, but as I do, it flips again, and is still inverted.\n\nThen, her hand moves quickly and wraps around my hand holding the cross. Her hand is hot, almost scalding my skin. She grips my hand tightly like she's going to crush it. I groan and start to fall to my knees as she tightens her grip. Then she yanks it towards her and the strap breaks from around my neck. She opens her hand, relieving the pressure on my hand, and I open it to see just dust lying in my hand. I tilt my hand and the dust falls to the ground.\n\nI jump as she snaps her wings, the sound like a popping in my ears, and then there's darkness as her wings fold over me. I back against the altar, my hands falling back against it. I tilt my head to look up, looking for some light, the light of God, to break through and save me. But the only light is a bronze glow from her skin.\n\nThen I feel her body against me and I am naked, our flesh touching again, and I know that I am lost. There is nothing I can do. Her skin is pressing against my skin and there is nothing between us, and I don't want there to be. I can't think. I can't pray. I can only want. My body is rigid with fear and anticipation, afraid of her yet yearning for her, unable to move or act, waiting for her to have me, do what she will with me, wanting her to do it.\n\nI look into her face, exquisitely beautiful, her skin seeming so soft, her lips full and wet. I feel her hands on my sides and then her breasts pushing against my chest, her nipples hard. Her hands slide down my sides and she grips my butt in her hands as she starts to writhe against me, rubbing her breasts against my chest, the hair below her stomach rubbing against my groin, and I'm hard, painfully hard, my penis trapped between our bodies. She lifts her leg and slides her thigh down my side and butt, her skin so soft that I want to touch it, kiss it, lick it, be lost forever in her flesh. \n\nShe drags her nails up my side and I flinch as I feel them break my skin, the pain bringing a sigh from my lips, and then her mouth is covering my mouth, her nails dragging up my back now, making my body writhe against her undulating body. Her lips seer my mouth, her tongue dives into my throat and I struggle to breathe, but kiss her back, kiss her hard, wrapping my tongue around her tongue, wet and hot. Her pelvis is moving in circles, rubbing my penis against her stomach, her leg hooked over my hip, the wetness between her legs rubbing against my thigh, and I can barely stand it, getting lightheaded, delirious.\n\nShe breaks the kiss, raking her teeth across my lips, sucking some blood into her mouth and then she drops down, her body heat gone, and she's kneeling before me, her hands gripping my butt. I tremble before her, feeling the altar behind me shutter, watching her face hovering in front of my engorged penis, wanting her to do it now, wanting to feel it, wanting the release. She glares up at me, fires blazing in those eyes, waiting for me, offering everything to me if I just say yes, give over to her. And I nod my head quickly, knowing everything is lost now. It's all gone. I am now damned. But I don't care. There's nothing I've wanted more than this. Nothing. \n\nShe watches me, her sharp teeth gleaming through the twisted grin, her lips shining with my blood, taking me in. And then she opens her mouth, a quick lick along my penis and it's in her mouth, her lips gripping it tightly. I moan loudly as she starts to move her head back and forth, her lips moving up and down the length of it while her tongue is wrapped around the head, the tip of her tongue rubbing it. I almost crumble to the ground as waves of pleasure roll up my spine to explode in my head. I grip the altar tightly, my arms locked.\n\nHer nails dig into my butt, making my body stiff, my muscles tense, wanting to feel the pain, sharp and hot. She moves her head faster, every inch of my penis touched by her lips, her mouth, her tongue, and my body trembles as she pulls me inside of her, pulling me further, higher, wrapped around me, and I almost collapse as an orgasm breaks over me, fluid exploding from my penis, pumping frantically.\n\nMy arms buckle and I start sliding to the ground, moaning, my body tight, as she keeps moving along my penis, her tongue wrapped around it, pulling each ejaculation from me, making my body jerk. My hands are tangled in the cloth lying on the altar and I fall down, my butt hitting the cold wood floor. I fall to my side, my body folds over as she slides her lips and tongue up and down my penis, still squirting into her violently, feeling like the tip of my penis will be torn apart by the force. I clench my butt, pumping into her and she swallows me deeply, pulling my penis deep into her mouth, and she drinks from me like a fountain. I lay on the ground for what feels like an eternity, her mouth working on my penis, pulling more from me, my mind and body soaked with ecstasy.\n\nSlowly it subsides, each ejaculation less violent, her tongue moving lovingly up and down my penis, caressing it, coaxing the last bit of fluid from it. I feel my penis go soft in her mouth and her tongue licks the head, the tip of her tongue pushing into me slightly -and then she's gone.\n\nI open my eyes and a harsh red light almost blinds me. I scramble to my knees and pull the cloth from the altar. The cross and Bible tumble down. The cross hits the wood floor with a crash and the Bible slams down onto it and the cross splits with a deafeningly loud smash.\n\n--\n\nI bolt awake, the smash still echoing in my ears. My body is coated in sweat. The sheets have been tossed from the bed and my new pajamas are lying in shreds beside me. \n\nI rub my eyes, trying to wash the images from my head, images of a waiting grin and then a broken cross. I clutch at my chest, raging with a deep fire like my soul has been ripped from my body. I fall to my side and curl into a ball. I reach between my legs to touch my sore penis. My groin and the bed are dry. I cup my genitals and pull my legs up to my chest.\n\nI am lost. I have given over to lust. And I did it so easily. I have no resistance to her. She manipulates me, tortures me, and brings me pleasure that I had never imagined. I feel drained, my body weak and tired, but my mind is a twisted mass of desire and shame. I won't sleep tonight.\n\nI must ask for forgiveness. I must beg. I must plead before the Almighty to take me back before it's too late - if it's not already too late.\n\n--\n\nThe church is dark, a few candles burning, prayers that humanity hopes to have answered. My steps echo silently as I walk between the pews, my dream of that night haunting me. My sore penis is being rubbed raw in my pants and to my horror is being stimulated to erection. \n\nI look into the darkest corners of the church as I approach the altar, wanting to make sure I am alone, that no other lost souls are here at this late time of night. I need time alone to search my soul and become right with God again. \n\nI kneel before the railing and bow my head. I cross myself, muttering the Lord's prayer, opening my heart to feel Him come into me. I fold my hands in front of me. I lift my head and look at the gaunt figure of Christ hung on a cross above the altar. Blood drips from the nails driven into his hands and feet. A crown of thorns rests on his head. His head hangs low, his chin touching his chest, the posture of a beaten man. \n\nI turn my head away from the Crucifixion. I've never liked it. The anguish, the pain, the horror, all seemed out of touch with the love that I had expected when entering this church. To the far right of the altar under a high-pitched arch sits Mary, dressed in a blue robe, the baby Jesus curled in her arms, her head tilted down with a smile on her face. I smile as well. This is what I look for when I come into God's house - the love of a mother for her child like the love of God for his children. \n\nI feel my heart getting lighter and I open myself up to Him. Dreams and mistakes slip from my mind and I see only His love for me. I am His special child, a saint. I can feel it again. I have been tainted, but He will restore me.\n\nI turn my head and look down the sides of the church at the stained glass windows, each picturing a saint. I have long thought that someday my image might join the saints in the stained widows of churches for others to look at and remember the works I had done. That is my destiny. To rise above the mediocrity of men and become greater than any man, surpass the flesh that binds the soul within and shine brighter than any star in the sky. A god among men.\n\nI bow my head, thanking God for reminding me of my part in His plan and ask for His protection against the forces of Evil. I will conquer them. I will conquer her. A quick flash of her body, golden, radiant, curves of flesh and muscle. No. She will not tempt me again. I pray to Him to strengthen my weak flesh, make me resilient to her attacks, so that I will be able to continue His work.\n\nI raise my head, my eyes wet from clenching them tightly closed, trying to drive her from my mind to let Him in. I look up at Christ on the cross and gasp, raising my hand to my mouth.\n\n\"No,\" I mumble to myself. \n\nHis loincloth has fallen from his body and a large erection stands out. My mind is playing tricks with me. I am not asleep. This can't be real. I fall back on my butt. I close my eyes, shake my head quickly, and open my eyes again. \n\nI sigh with relief. The loincloth has returned and he hangs as before. I rub my hand across my face. I pull my hand away and look to the solace of Mary. Her face is radiant as ever. \n\nI smile to myself, the Mother would never betray me, but then the smile falters. Her robe has fallen open, and her legs are spread wide, revealing her full, pale legs and the glistening softness between them. That can't be. The devil is playing tricks on me, turning these statues of godliness into his profane pornography. \n\nI stand up quickly, my fists clenched, anger rising from the shock and humility. She has invaded the house of God, my one place of refuge. I must drive her out.\n\n\"Be gone slut of Hell,\" I snarl. \"You are not welcome here!\" I turn around in slow circles, looking into the darkest depths of the church, looking for her form, her black wings, to confront her, but there is nothing.\n\nI hear a loud crash behind me and turn around. Mary no longer holds the baby Jesus. He lies on the ground several feet away, rolled onto his face, a large gash taken from the back of his head. Mary lies back on her bench, her head back, her eyes closed, her lips parted in ecstasy, and her hands are between her legs with her fingers pushed deep inside of her.\n\nBlood rushes to my face. I feel lightheaded like I'm drifting in some terrible dream, but I know I'm awake. This must be stopped. \n\nI stomp towards the figure of Mary, my eyes locked on her, looking for movement, but seeing nothing. I step over the cracked Christ child and stop before her. She looks like a statue, hard and immovable. My eyes drift down between her legs, the details of her genitalia seeming so real, even wet, and instantly feel the anger pushed back by lust.\n\nI reach out to grab her arm to pull it away in a last desperate attempt to fight the sin. But her arm is cold and rigid like a statue. It cannot be moved. My hand slides down her arm to her wrist and I pull again, but she doesn't move. My eyes are drawn between her legs, spread wide, my body between them, her sex open to me, and I feel my heart flutter in my chest as the most perverse ideas and images course through my brain. \n\nI step backwards, holding my hand over my eyes, and try to push those thoughts away, willing myself to remember Mary as the mother of God, loving and pure. But I can't wash the images of her seated spread before me and me kneeling before her, my penis in my hand, bringing it towards her, putting it inside of her. \n\nI scream, a distressful wail that is barely able to escape my throat and then stumble backwards, falling hard against a pew and then onto the floor. I climb to my knees, my head lying on the floor, my arms covering my head, and I rock back and forth, moaning to myself, feeling helpless and weak, my erection tight in my pants. There is nothing left for me. I have been forsaken and there is nothing left. No sanctuary. No reprisal. I am alone. Forgotten.\n\nA hand touches my back and I am too lost in my misery to care. The hand settles near my shoulder, tender and soft. I continue rocking back and forth as the hand caresses my back, moving in slow circles. The touch starts to feel good, reassuring, caring, and I can feel my despair starting to lift. A touch - that is all I need.\n\nI lift my head from my arms and see her kneeling beside me, her black wings stretched high over her head, her eyes a dim red staring back at me. I feel her nails lightly scraping across my back.\n\nI scramble up to my knees and throw my body against her, wrapping my arms around her back. She folds her arms around me and I am enclosed in her heat like a mass of rolling steam engulfing my body and I lay my cheek on her shoulder. I feel like a child in my mother's arms, warm and comforting, my worries dissolving away. I want to cry out of despair and joy, the feel of her body pressed tightly against me, her hands gently stroking my back, her hair brushing against my face. I slide my hands up her back and touch the thin, smooth skin of her wings. A shudder passes through me quickly and then subsides as her lips touch my neck.\n\n\"I am here for you, my child,\" she whispers in my ear, her voice deep and soothing. \"When all seems lost I will always be here for you.\"\n\nI press my face to her neck, my head cradled by her shoulder, as the tension in my body recedes and the torment fades away, her soft kisses against my neck, my shoulder, my ear, my cheek. She leans back, lifting my head from her shoulder and looks into my eyes. Her face is dark and beautiful, her eyes glowing softly. She touches my face and caresses my cheek.\n\n\"You are my chosen one,\" she whispers, her red lips barely moving. \"My beautiful angel.\"\n\nHer thumb slides across my lips and she smiles at me. I kiss her thumb softly and she pushes it between my lips and I suck on it, her skin tasting like cinnamon and smoke. She slides her wet thumb across my cheek and ear. She leans forward and presses her lips to my lips. Her mouth opens and I kiss her back deeply, her hands holding my head. Her tongue slips into my mouth and I push against her, feeling the need come alive like a wild beast in my gut.\n\nHer hands move down my body and pull my pants open, ripping the buttons off. I kiss her urgently, panting, wanting to dissolve inside of her. She tears my shirt from my body and then pulls me close to her, our bodies pressed together tightly, her breasts mashed against my chest, and I grab her waist to pull her pelvis against me, rubbing my cock on her stomach.\n\nShe pulls away from me and the cold air swirls around me, devoid of her heat and passion. She crawls away, facing me, her eyes glowing lustily, her body glistening, and slowly lies down on the floor by the altar. She slides her legs apart, her knees pointed to the ceiling, her body tilted up as she watches me, her chest heaving. I crawl forward, pushing my pants and shoes off of my body until I'm naked, moving towards her.\n\nI kneel between her legs, her sex open to me, and I hover over her, my cock pointed out straight and hard, staring at her brown body, her wings laid out underneath her, stretching out to the sides, and the desire gnaws at my gut, twisting inside of me. I need to be inside of her, feel her wrapped around me - fucking her.\n\nShe sits up and grabs my cock. She pulls me down to her gently and I drop my hands on either side of her, my palms pressing into her black wings, and then I feel it up against her, wet and hot and I push forward and it slides into her and I sigh as a shiver writhes down my spine to burst in my head. She raises her hips underneath me and pulls me into her entirely. She lies back on the floor, presses her thighs against my waist, and grabs my butt in her hands, urging me on. \n\nI move out of her slowly, feeling her wrapped around me, tight and wet, deliciously hot, and groan loudly as I sink back into her, my whole body shuddering. \n\n\"Fuck me, my angel,\" she whispers, her voice sliding through my lust soaked brain.\n\nHer cunt ripples around my cock, encased in side of her. I pull back and her pussy sucks at the head of my cock, her flesh rubbing the head. I push into her, her cunt gripping me tightly and I twist into her, wanting to be entirely inside of her. She wraps her legs around me, her thighs grip my waist powerfully, and she digs her heels into my butt.\n\nI collapse on top of her, our bodies pressed together, my face hovering over her face, and she starts rocking below me, moving my cock inside of her slowly. Her hands slide up my back, her nails scratching my skin, and grab the back of my head.\n\n\"This is what you've wanted for so long,\" she whispers, her lips almost touching mine. \"Does it feel as good as you wanted?\" She moves under me, her cunt vibrating around my cock, stroking it inside of her as she moves it in and out of her. I'm lost in a haze of drunken ecstasy. I nod my head. It's all I'm capable of.\n\n\"Do you?\" she whispers, her lips brushing mine, her tongue licking across my lips, her eyes burning red. I groan and move in and out of her, concentrating my will inside of her, feeling every inch of my cock sliding into her, her cunt clenching and loosening around me.\n\nShe grabs my shoulders and pushes me to the side. I tumble over and she shoves me to the ground, her thighs gripping me tightly, her cunt holding me inside of her, and she flips her wings quickly behind her as she slams me onto my back. Her hands press my shoulders into the ground, feeling like they are melting into my skin.",
        "She hovers over me, her knees drawn up to my waist, as she moves up and down my cock, her eyes watching me, burning into my brain. I watch her radiant body moving on top of me, thrusting, her breasts pushed out as she arches her back, her stomach narrowing down to her curved, writhing hips. Her weight holds me to the ground and I can't move if I wanted to. I'm paralyzed by the waves of lustful pleasure radiating through my body from my cock, every nerve connected to my cock, and she holds it firmly inside of her, stroking it, rubbing it, her cunt rippling about it.\n\nShe throws her head back, her black hair flying through the air, her black wings snap out over us, extending out across the width of the church, and she spreads her arms over her head as her body stretches out long and lean, her skin dark and tight around her flexing muscles, and she pumps her hips frantically, thrashing on top of me, and my vision explodes in a bright, red light, my back arches uncontrollably like electric current is passing through my body, and my will, my strength, my soul, explode from my cock and into her. \n\nImages form in my head as she whips her body on top of me, images of me going to the seminary, talking to the other students in hushed tones, bringing them her decadent promises, and watching as she seduces them in the night, images of me leaving to a barren country to introduce the destitute population to her as their new goddess, images of her visiting me at night, caresses, kisses, orgasms more intense each time, and I give in to them all. \n\nI shudder as my body falls back to the ground, completely exhausted, drained, feeling like my body has been skinned and every inch of me is raw and alive. She moves slowly on top of me, letting my cock shrink inside of her, still dribbling the last of my semen into her.\n\nShe leans over me and touches my face softly. I open my eyes to stare into her face, dark and terrible, horrifyingly beautiful. I see my future and I accept it, taking it into me, wallowing in the knowledge that I'll be her angel, her messenger.\n\n\"You'll be my saint,\" she whispers and folds her black wings over me."
    ],
    "authorname": "Margin Walker",
    "tags": [
        "horror",
        "demon",
        "devil",
        "religious",
        "monster",
        "god",
        "priest"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/her-black-wings"
}