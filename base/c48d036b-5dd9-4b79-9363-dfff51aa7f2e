{
    "title": "Alpha Killer Ch. 16-20",
    "pages": [
        "Randall Meechum's POV<br >LaCrosse Pack Lands\n\nI drove my Jeep over to Erica's cabin, a big cooler in the passenger seat that the kitchen had provided. The Pack made sure she got fed when she couldn't come to the Pack House, or she didn't want to come all the way in. The dinner I was bringing was pot roast with mashed potatoes, gravy and green beans, plus they packed food for breakfast and a bag of ice to keep everything cold.\n\nShe was waiting outside as I parked, a smile on her scarred face. I hopped out and went around to get the cooler, taking it inside as she held the door open. \"Thanks for seeing me again,\" I said as I set it down in her small kitchen.\n\n\"It's nice having a visitor, and you're Talia's mate. I'd like us to be friends.\" She pulled out some lemonade out of her small refrigerator as I set the dinner containers on the table. She grabbed some silverware as well. \"Alpha Clark said you're making progress on the investigation.\"\n\n\"Some. Not enough to go to the Council yet, but enough to back up Tania's story when she comes back.\" She needed to come back, and I hoped to Selene that she could tie that prick Todd to her kidnapping. He needed to die, slowly, painfully and publicly.\n\n\"Good. I want her, I want us all to have closure.\" I served up the food as she sat down. \"Do you think Talia is going to be able to come home?\"\n\nI stopped eating for a second as I looked at her. \"I'm going to try, but it's not going to be easy,\" I said. \"I really need to talk to her about the events of the past four years, though. The Council has her tried and convicted already, and I need enough to turn that around.\"\n\n\"She's a nice person, she cared about everyone. She's the last one who deserved to be kicked out, but those people just wouldn't consider a female Alpha. Of course, she was sixteen then. Now, the Alphas are afraid of her.\"\n\nThat was one way to put it. They were terrified of her; she would show up, kill the Alpha and leave again. \"What did she like to do before this all happened?\"\n\n\"She loved being on the water,\" she said. \"Water skiing was her favorite, she'd be out on the boat all day long if they would let her.\"\n\n\"Was she a good swimmer?\"\n\n\"She was a good athlete, she was fast and had good coordination. It never took her long to pick up anything. She was always ahead of our age group in combat training, and not just because she was Alpha blood. She worked hard to be the best because she wanted to be able to protect her Pack when the time came.\"\n\n\"It's an admirable quality,\" I said. \"Do you think she's that way now?\"\n\n\"I hope so.\"\n\nThe windows were open, and a scent wafted through the windows. My wolf rushed forward, recognizing her immediately. \"She's here,\" I said as I rose from the table.\n\nI went to the front door, she was right behind me. \"Tania is here too,\" she said. \"I'm letting the Alphas know.\"\n\nI opened the door a little too hard in my eagerness to get outside, and it banged against the table by the door as I walked out. She was right behind me as we got out onto the grass. My eyes went to the treeline, and that is when I saw her.\n\nAnd she saw me.\n\nShe pushed Tania to the side and drew a gun, pointing it at my chest. I had my pistol with me, but I didn't go for it. I couldn't use it against my mate, and I had to trust she wouldn't hurt me either. \"Don't move,\" she ordered.\n\nI brought my hands up to show her I wasn't a threat. \"Hello, Talia.\" By Luna, she was beautiful. I looked past the Glock, which was pointed at my heart, to the blonde hair, the innocent heart-shaped face, and the athletic body which was in a Weaver pistol stance.\n\n\"NO!\" She dropped the gun before firing, the round hitting between my shoes and ricocheting off into the woods. She turned and ran into the woods, fast as lightning, as I looked down to make sure I was still all right.\n\nErica and Tania both screamed for her to stop, but she didn't. \"Go to her,\" I told Erica. She ran out to where her friend was sitting on the grass and hugged her as they rocked back and forth.\n\nI heard vehicles and wolves approaching fast; as the first raced into the yard, I held up my hands. \"Hold up, Talia's gone already,\" I said.\n\nGamma Michael shifted and looked around, scenting the air. \"Tania?\"\n\n\"Yeah. Give her space, let her family help her.\"\n\n\"What was the gunshot?\"\n\n\"Talia saw me and left, apparently she didn't want me to follow her.\" It was the best I could think of; I knew that if she wanted me dead, I would have been dead.\n\nA Ford Explorer pulled in, and the Alpha pair got out along the Gamma female Sally. \"Everyone all right,\" he asked.\n\n\"Fine. Talia panicked and took off for the Pack border, Tania is over there with Erica.\"\n\nAlpha Clark looked at his Gamma. \"Take a few men and follow the trail to the back border, but do not engage if she's still on our land. She's family,\" he said. \"If she's gone, don't pursue.\"\n\n\"Yes Alpha,\" he said as he shifted. The men circled around the edge of the clearing so they could stay away from the crying girls, then ran off into the woods towards the south.\n\nI went back and sat on the front porch, not wanting to interfere with the reunion that was happening. Clark and Teri walked forward slowly, hand in hand towards their niece they hadn't seen in over four years. \"Tania?\"\n\nShe looked up from where she was crying on Erica's shoulder. \"Auntie Teri?\"\n\nTeri dropped to her knees and Tania jumped into her arms. \"Oh baby,\" she said as she hugged her tight.\n\nClark knelt down next to them, pulling both of them into a hug. \"You're home now,\" he said as he held them tight.\n\nI got off the porch and walked over to the vehicles as they got up and Emily suggested they go inside. It was a good idea, more and more people were showing up, including my brother. I stopped him at the treeline. \"Not the right time,\" I told him. \"She's safe, but she's overwhelmed, and she doesn't know you.\"\n\nI looked over at Gamma Sally. \"I'd recommend you ask the males to leave the area. After what she's been through, they'll make her nervous if they aren't family.\"\n\n\"You're right,\" she said. Soon enough, all the men had backed away from the cabin or were returning back to the Pack House. \"Michael said her trail leads past the borders towards the road. He's sending men to do a full circuit of our territory, just to make sure she isn't coming in anywhere else.\"\n\n\"She's long gone,\" I said. \"I think she'll come back eventually. She recognized me as her mate, I could see it in her eyes. My wolf and hers had a moment.\"\n\n\"Right before she shot at you,\" my brother asked.\n\n\"Yeah, right then,\" I said with a laugh. I could hear them inside, they were still crying. \"Come on, I'll give you a ride back to the Pack House and we'll have a few beers and celebrate your mate being here.\"\n\n\"She didn't recognize me,\" he said.\n\n\"If her wolf is gone, how is she supposed to recognize your scent? You have to relax, let her family bring her back and let her feel safe before you meet her.\" He just nodded, looking through the window at her. She was sitting on her Uncle's lap, crying and talking. Michelle pulled up in her car and jumped out and ran into the room as well.\n\n\"She's so beautiful,\" he said.\n\n\"Come on, mate boy. Let's go.\" He got into my Jeep and we backed out of the parking spot and headed back to the Pack House. \"Call Mom, let her know what's going on. She'll never let you live it down if she hears it from anyone else first.\"\n\nHe laughed and pulled out his phone. \"Nothing has happened YET,\" he said. \"It will, though.\" He told Mom the story as we drove back to our rooms.\n\nTalia's POV\n\nI was zipping through the woods as my wolf pushed against my consciousness, trying to take over. She wanted her mate, he was there for the taking, and she filled my mind with his image and the images of what she wanted to do with him. He was a strong male who would be a good father to our pups, she knew that.\n\nPups.\n\nI faltered as the image of me with children at my feet flashed through my mind. I recovered and kept running, reaching my motorcycle and firing it up. I tore out of there like my ass was on fire, not even acknowledging Marcy as I took off. I saw the lights of her sedan in the rear-view mirror and heard the roar of the engine as she tried to catch up.\n\nI drove for ten miles until the road had a pullout overlooking the Mississippi River. Laying on the brakes, I stopped my Harley, put the stand down and got off just as Marcy pulled in next to me. \"Are you all right,\" she asked as I looked over the moonlit river valley.\n\n\"No,\" I said. \"I'm a long damn way from all right.\"\n\n\"Tania is with her family? Safe?\"\n\n\"Erica was there, she'll take care of her. I left before any family arrived.\" I kicked a rock under the guardrail, listening as it tumbled down the cliff. Part of me wanted to follow it, but I couldn't. I'd made a blood vow, and it wasn't over yet. Everything, including my handsome mate, would have to wait.\n\n\"Something happened, Talia. Your heart is still racing.\"\n\nI took a breath, forcing myself to calm and pushing back my wolf. \"Erica wasn't alone. Remember what Eduardo said about the investigator in Fort Worth?\"\n\n\"Yeah, Special Agent Randall Meechum, FBI and Sulphur River Pack.\" She looked at me as I nodded. \"Oh shit. He was there?\"\n\n\"Yep. He was eating with Erica when we arrived.\"\n\n\"The gunshot I heard, you killed him?\"\n\n\"I couldn't,\" I said as I sank to my knees. \"I just scared him so he wouldn't follow me. He... he's my MATE, Marcy.\"\n\n\"Holy shit.\" She turned and looked up at the sky. \"Your mate knows you were the one in Fort Worth who killed four people, his family has talked to the Council about you, and he's your destined?\"\n\nI picked up a rock and threw it as far as I could, which was quite a long way, given my vampire strength. \"Yes. He's going to find me, he'll never give up. And when he finds me, he'll figure out that I'm not a normal werewolf, that I've been working with Vampires and have mixed my DNA with them. He's going to find me, reject me and drag me back to the Council to be executed.\"\n\n\"Or he'll chain you to his bed so you can't run off until he's sated your lusts for each other.\" I looked at her, she was always an optimist. \"What are you going to do?\"\n\n\"Tania is safe, there's no more business for me now. I have my blood vow, and that takes priority over everything. The first thing I need to do is to get my nephew back to his mother.\"\n\n\"Let's go, then. We can make Des Moines before sunrise if we leave now.\" She walked back to her car. \"Are you going to be all right, Talia?\"\n\nMy wolf was whining in the back of my head, she wanted to return. I shoved her down as I straddled my Harley. \"I haven't been all right for years, Marcy. I'll survive.\"\n\n\"You'll survive and we'll help you figure this out. You have a mate out there, you can have your life back when your vow is over if we do this right. He's an Alpha's son, the two of you can retake your Pack and fulfill your destiny,\" she said as she closed the door.\n\nDestiny? I'd never be Alpha. No werewolf Pack would accept me now, my mate wouldn't accept me either. I wasn't a werewolf anymore, I wasn't a vampire, I had no place in this world anymore. I was an instrument of vengeance, nothing more, nothing less.\n\nThe Moon Goddess must hate me.\n\nCh. 17\n\nTania's POV <br >LaCrosse Pack House\n\nWe had stayed in Erica's cabin for almost an hour before I started to yawn. It had been a long ride up from New Orleans, and I was beat. I was still fighting symptoms from withdrawal as well, so as much as I hated to leave Erica, I had to go. \"Aunt Teri, I need to sleep,\" I told her as I settled into her side on the small couch where I was sandwiched between them. Grandpa was in the recliner across from me, while Erica was sitting on a dining room chair.\n\n\"Go,\" Erica said as she got up. She came over and hugged me. \"I'm so glad you are home, and Talia is all right,\" she said. They had wanted to talk about what happened to me, about what was going on since I was rescued, but I wasn't ready to go through those memories yet.\n\nI just wanted to feel like I was home again.\n\n\"Come on,\" Uncle Clark said. \"Let's take you home.\" He picked me up like I weighed nothing, which wasn't far from the case. Just being next to Erica or Talia showed me just how much my body hadn't filled out. I was skinny, weak and vulnerable where they were strong. I relaxed into his arms as he carried me to the car, like he used to do when I was a young girl visiting with our parents.\n\nI stayed in his lap as Grandpa drove us. I was relieved that they weren't pushing a bunch of people at me, they were letting me get used to them first. Even when we arrived at their Pack House, I didn't see anyone around. He carried me up the stairs, down the hallway of the Alpha Wing, past their offices and into one of the guest rooms. He set me in the bathroom, where Teri was already getting the shower going. \"I'm tired,\" I said as I leaned against the vanity.\n\n\"You're full of road dust and tears, baby, just a quick shower. Clark, go get some pajamas out of our room.\" He walked off and she closed the door behind him. \"Come on, take those off and get in.\"\n\nI closed my eyes, pushing back the thoughts invading my mind. She wasn't like Peggy, I wasn't being held in a whorehouse, and I'd be all right. I pulled off my shirt and got undressed, stepping into the warm shower. I heard Teri gasp in shock; she must have seen the scars.\n\nTania's POV<br >39 months ago, one week after giving birth\n\nThe man who held me captive, raped me until I was pregnant, then took my baby from me had been gone for six days. Time was difficult to tell for sure in my basement prison; sometimes I could see light from the bottom of the door from upstairs, sometimes I couldn't. Day and night merged into each other as I pushed back the hunger.\n\nWhen he took my baby, he left me without food. I had all the water I wanted from the hose, and I'd drink a bellyful when my hunger got too bad, but I was weakening. I'd survived this time, only to be abandoned and starve to death in a basement?\n\nLuna couldn't be that cruel to me.\n\nIt turned out she wasn't. I heard someone moving around upstairs, and I sat up with my back against the pole watching the door. The deadbolt moved, and the door opened, spilling light into the dark room. The man was big, his shoulders turning sideways to go through the doorway. He walked slowly down the stairs as I covered myself, unwilling to let him see my nakedness. \"Hello, Tania,\" he said in a low, gravelly voice.\n\nI didn't say anything as he reached the bottom of the stairway. \"The Alpha sends his regards. The baby is doing well; the Luna returned with him two days ago, and he was presented to the Pack that night. Everyone is praising the Goddess for finally blessing their pack with a strong male heir.\" He came closer, bending down at the foot of the mattress while I shook in fear. \"Your Beta was right, you'd provide a strong child, with Alpha bloodlines on both sides. A much better option than having some pack slut or human surrogate.\"\n\n\"Can I go? You got your baby, I won't say anything!\"\n\nHe roared with laughter at my question. \"He doesn't want a war to break out, and he can't let there be a reason to question the legitimacy of his heir. No, your part is done, and with that comes the problem of what to do with you. The Alpha left that up to me. Killing you and burying you in the woods would be the simplest fix.\"\n\n\"NO! PLEASE! I'm just a kid, I didn't do anything to deserve this!\"\n\n\"Tania, if you had a chance to grow into adulthood, you'd realize that people don't get what they deserve.\" He pulled a syringe out of his pocket; I stared at it like it was poison. \"I'm sorry about this, really, but it's better than a shallow grave.\"\n\nHe grabbed my ankle and dragged me down the mattress until my collar was choking me. He used his shin to trap my left leg against the floor, while his left hand pulled my right leg straight. He flicked the cap off and plunged the needle into my thigh, pushing the liquid into my body before letting me go. \"Oh oh Goddess it hurts! Make it stop!\" The chemical burned like fire in my veins, and my weakened wolf was howling in pain.\n\n\"Don't fight it, you can't stop it now,\" he said. \"That amount of wolfsbane will kill your wolf. Take a second to tell her goodbye.\"\n\nI closed my eyes against the pain, seeking out that place where my wolf and I met in my mind. She was straining against the chains that were pulling her down. \"I'm sorry,\" I told her as she howled in pain. She jerked against the chains, then went still. I started crying, it was like a chunk of me had been torn out of my soul. The blackness took me.\n\nWhen I woke up, I wasn't in the basement anymore. The room was the size of a small hotel room; I was lying on a queen-sized bed, naked under the white sheets. I could see a small bathroom through an open doorway, with a shower visible in the mirror.\n\nI sat up, reaching for my wolf and finding nothing. My head was spinning, so I didn't move until the room did. My feet touched the cheap carpet, but It was better than a concrete floor. Maybe things were looking up.\n\nMy fingers went to my neck; the metal collar was not there, but a thick leather collar was in its place. In the back was a plastic box. I couldn't find a way to get it off, so I left it alone. The heavy door opened, and a man came in. \"Good, you're awake. Crystal will be here soon to start your training, so get up and shower.\"\n\n\"Who are you? Why am I here?\"\n\nInstead of answering, he pulled a box out of his pocket and pressed a button. The collar beeped once, then an electric shock raced through my neck. It hurt like hell, I wanted to scream in agony, but my chest wouldn't work for me. It turned off and I started to gasp in shock as the pain receded. \"Lesson number one, when you are told to do something, you do it, immediately and without backtalk. Do you understand me?\"\n\n\"Yes sir,\" I said as I pushed myself to my feet. I moved past him to the shower. There was no bathroom door, so I saw him leave and heard the door lock. There was a generic shampoo and conditioner in there; I couldn't recall the last time I'd been able to clean properly. I did my hair, then scrubbed my body clean. I was just getting out when the man opened the door again.\n\nHe looked at my body as I dried off. \"Your previous owner didn't feed you, he told us as much. This is oatmeal, you need to eat it slowly or you'll throw it up again. These cans are a shake supplement, they will help you put on weight again. Drink one every hour between meals. No one wants to fuck a skeleton.\"\n\nI didn't say anything, I was just confused. \"Thank you,\" I said as I took in the food.\n\n\"A little free advice. You are no longer free, you are an owned slave. You exist now to please your owners and those you are assigned to please. The sooner you accept your fate, the better it will go for you. If you try to escape, you will be tortured and killed. We have clients who pay special for that, so don't even think about it. Do you understand me?\"\n\n\"Yes sir,\" I said, the tears coming to my eyes. I'd heard about women who were caught up by the slave trade; I might not even be in the United States anymore.\n\n\"Eat, you'll need your strength.\" He left the room, locking it again. I went over to the door and checked it was locked, then went back to the small table where my food was sitting. My stomach ached with hunger, and I pulled the cover off the Styrofoam bowl and smelled the oatmeal. It wasn't the same as before; there was none of the detail, like my senses had been dulled. Without my wolf, I was weak.\n\nI opened one of the shakes, drinking it in gulps. I poured a little over the oatmeal, taking a bite every minute or so and letting it settle. By the time the door opened, I was done.",
        "A woman in her forties came in the room. She had bleached blonde hair and looked like her better days were behind her. She looked at me, then pressed a button on a box and my collar beeped. I jumped to my feet. \"Good, you're learning. A beep is a warning, if I hold the button for another second you get the shock until I let the button go again. When anyone comes into the room, you will go to the kneel position I will teach you.\"\n\n\"Yes ma'am.\"\n\n\"In two weeks, you are going up for auction. My job is to prepare you so you fetch the highest price possible. You are young, which helps, but you're underweight and ribs showing aren't sexy. I'm going to teach you how to walk, how to fuck and how to be pleasing to a man.\"\n\n\"May I ask a question, ma'am?\"\n\n\"You may.\"\n\n\"Why would I care how much I sell for?\"\n\nShe moved until she was staring me in the eyes, our bodies touching as I was backed into the wall. \"A girl who fetches a high price at auction has value; she will still be used, but no one intentionally damages something valuable. A girl who doesn't listen to me, who doesn't do her best to become valuable, is just a pussy support system. You might end up with someone who beats you daily, or end up in some dive with homeless guys fucking your ass for five bucks a shot. The girls who sell for big money survive, the cheap sales are used up and disposed of.\" I gulped, not meeting her eyes. \"Either way you're getting fucked, so at least be good at it.\"\n\nOver the next two weeks, I learned how to satisfy men with my body, how to walk, stand and kneel. I put weight back on quickly, and by the time the sale arrived Crystal was happy with my progress. Bidders visited my room during the day, sampling the wares and deciding on how much I was worth. Cameras watched me, there was no chance to get a message out and no one who would help me. These men were the customers of a criminal empire, and I was the product.\n\nI sold for eight thousand dollars. I didn't see the bidder. I was taken backstage, stuffed into a dog kennel for transport and loaded into a van. When I was let out, my new life as a sex slave began.\n\nTania's POV<br >Lacrosse Pack House\n\nI woke in the middle of the night, restless and hot. I moved Teri's hand from around my waist; I was too nervous to sleep in the guest room, so I had crawled into bed with them. She didn't wake up as I silently moved to the door and opened it.\n\nI was startled a little when the big wolf looked up at me from his place in front of the door. He turned his head to the side, looking at me. I moved my hand down, letting him sniff it. He licked it before I scratched his ears. \"You're a big boy,\" I said. \"Can you show me where the kitchen is?\"\n\nHe nodded and got to his feet, his nails clicking against the wood floor as he walked. I kept my fingers in the black fur of his saddle, the rest of him was silver and white. He was a handsome wolf, and I was trying to figure out who he was. He was nearly as tall as me, four feet tall at the shoulder, and looked to be over two hundred pounds. I held onto his fur as we went downstairs, then he led me to the back of the big house and into the kitchen.\n\nI turned on the light and went straight for the freezer. Opening it up, I found a selection of ice creams and grabbed my favorite, mint chocolate chip. It was not a full quart, so I didn't grab a bowl. Looking in the fridge, I found some chocolate sauce. I poured it on top of the ice cream, leaving the lid in the garbage. \"Come on, big guy,\" I said as I put the sauce back. I saw some cheese curds in a bag, and grabbed those too. It had been YEARS since my teeth had squeaked while eating genuine Ellsworth cheese curds.\n\nI walked back into the front of the house, finding a spot on the L-shaped couch in the rec room. He jumped up on the couch next to me, and I put the food in my lap. I'd toss him a cheese curd, then I'd eat some ice cream. When the ice cream was gone, I started sharing the cheese with him until that was done too. He looked disappointed when the food was gone.\n\nI didn't know why, but I felt safe with him, safer than I had felt up in the bed with the Alphas. I yawned, then laid on my side in the big corner pad of the sectional. When I was settled, he crawled up until he was lying in front of me. I put my arm over him, burying my face in the fur on his neck, and went to sleep.\n\nCh. 18\n\nTalia's POV<br >Three Years Ago\n\n\"You sure you want to do this, T?\"\n\nThe instructor put the headgear on me over my blonde hair and buckled it under my chin. \"I need the challenge, Matt.\" I put my mouth guard in, and he checked my gloves and equipment one last time. \"None of the women here can take me.\"\n\nHe moved back, letting me stand up in the corner of the Octagon at the New Orleans MMA Academy. It was the Friday Night Fights, and we were the main event. The crowd had swollen to several hundred. \"I don't want you getting hurt, the Turk has a hundred pounds on you and five pro fights.\"\n\n\"He also runs his mouth about how women shouldn't be in the ring unless they are in a bikini holding up a round card. He needs to get his mind right.\" The Turk walked around like he was the shit, and it was time to teach him a lesson in humility. His friends were just as bad, so it wasn't hard to goad him into a three-round match with a significant side bets. I'd given a thousand dollars to my girls to put into play, giving them a third of the action if I won. My odds of winning had gotten to twenty-five to one with the help of the other girls in training. \"Just referee the fight, I'll be fine.\"\n\nHe turned and went over to the Turk before we met in the middle. \"Three-minute rounds, I want a clean fight, break if I tell you. Fight goes three rounds unless there is a submission or knockout. Shake hands and wait for the bell.\" The crowd had gathered, and betting was fast and furious. I could hear the people talking, there was a lot of betting on first-round knockouts, and I heard my girl put a hundred bucks on me for that at twenty-to-one odds. This was going to be fun.\n\nThe bell rang, and he moved towards me as I danced around, my gloved fists near my face as I kept my elbows over my ribs. I danced around him, moving out of the way of his jabs and sidestepping his rushes. It didn't take long to figure out his strategy; he wanted to get me against the ropes or on the mat where he could use his size and strength against me. He made glancing contact with my head a few times; his style was heavy on boxing, while I was more rounded in my style.\n\nI waited for my spot, and it quickly came when he overextended his jab. I ducked and spun, slamming my left foot into the side of his stomach. It stunned him, and I could see him get mad. I kept up the attack, using my longer legs to counter his reach advantage. \"ONE MINUTE,\" I heard someone say.\n\nHe tried a roundhouse kick, but it was to me like slow motion. Instead of dodging the leg, I bent my knees and brought my hands up to grab his calf. I pushed up hard, lifting it until he was bent backwards and fell heavily to the mat on his back. I moved forward, stomping on his stomach then dancing away before he could react.\n\n\"That all you got,\" I taunted. He got to his feet and bull-rushed me. I ducked under his arm, grabbing on to it I swung my body up until my legs wrapped around his neck. I let go, my upper body swinging behind him and pulling him to the mat again.\n\nI hooked my right leg around his neck, the knee in front and my ankle behind my left knee. Leaning back, I squeezed my leg as his hands tried to get me off. My legs had him in a chokehold, and I was cutting off his oxygen as well as the blood flow to his brain. He lashed out with his glove towards my chest, but I easily caught his glove and held on. He struggled in vain, and I could see his strength fading as his friends begged him to break the hold.\n\nHe tapped out.\n\nThe bell rang as I let go of his arm and extended my legs, letting him breathe again. The crowd was going nuts as I stood up and went to the corner; the girls were screaming and happy, while the men who bet against me were still in shock. The medic was still checking Turk out as Betty 'The Blonde Bombshell' White took my headgear off. \"That was AMAZING,\" she said. \"We cleaned up on the betting tonight.\"\n\n\"Collect it and meet me in the locker room, we're going to have some fun tonight,\" I said. I showered and changed into jean shorts, ankle boots and a sleeveless black top, which showed off the muscles and low bodyfat of the body I'd developed in the past year of hard training.\n\nThe training program Jarrod put me on was grueling; in addition to hours of running, yoga and weight training, I was learning multiple fighting disciplines from the human masters. They sent me first to Gunsite in Arizona, where I spent two months learning how to use a rifle and pistol until I could hold my own with the best of the military and police shooters. When I returned, I was enrolled in all the human fighting training I could fit into a week. I spent eight hours a day in dojos or gyms, then I'd go back to the Coven and practice against vampires. In subsequent months, I had learned boxing, Brazilian JuJitsu, Krav Maga, Karate and now Mixed Martial Arts. All this was in addition to keeping my shooting skills up. Training to be a killer was my full-time job.\n\nI had become one dangerous bitch, at least to humans. My strength and speed had to be tempered when training against them, but I learned the skills quickly. Vampires were far more difficult to beat, although Eduardo was 'young' enough that it was a close fight. The others had centuries of experience and seemed to relish in leaving me bloody on the mat in the basement. I hadn't faced other werewolves yet.\n\nBetty handed me a thick wad of cash, my original thousand plus my share of the winnings. \"Not a bad night for you,\" she said. \"When are you going pro? You're wasted here.\"\n\n\"I can't,\" I said. \"My parents would never allow it if they found out. They've already picked out a man for me to marry and have kids with.\"\n\n\"Holy shit,\" she said. \"Really?\"\n\n\"Yeah. They sent me to a finishing school to become a proper young lady. I decided I liked street fighting more than dinner parties, and I can make enough to live without their allowance,\" I said. \"The private investigator they hired is getting closer, so I'm moving on to Miami. I've got some fights set up there already.\"\n\n\"You have time to party before you leave?\" I just raised my eyebrow, of course I did. How could you be in New Orleans and not have a fake ID good enough to get into the bars? \"Good, we're heading to the French Quarter to get drunk and maybe find a hot guy to fuck us good and proper tonight.\" She gave me the name of a bar and I told her I'd be there, but I wasn't planning to show. It was time to cut my friends out of my life.\n\nPutting my gear in a backpack along with the cash, I walked out of the strip-mall gym complex down the street towards my motorcycle. I stopped when I was still thirty yards away, something was wrong. I smelled four humans, the unmistakable mix of sweat, aggression and lust on them. Sure enough, they stepped out from the shadows and moved to surround me. \"You think you're tough or something, don't you bitch,\" Turk said as he moved close to me. \"I want my money back.\"\n\n\"It doesn't work that way,\" I said as I kept track of the other three. They were blocking any escape, and no one was around to stop what they wanted to do. \"Go home, this won't end well for you.\"\n\n\"I'm going to enjoy fucking that smart mouth of yours while Bob takes your ass. Grab her and pull her into the alley, boys, it's time this bitch learned the only thing a woman is good for.\"\n\nMarcy had taught me knife fighting and throwing. She told me I should always have two knives on me, and tonight I was carrying four.\n\nThere wasn't time for anything else, and I was in no mood to get raped tonight. I reached to the back of my jeans, where two short knives were sitting in leather sheathes at the small of my back. I pulled one out with each hand, then did the last thing they expected me to do.\n\nI attacked.\n\nWhen in a fight, you always go after the leader first, because if he goes down, the rest might run. His eyes picked up the glint of steel, but it was too late. My left hand plunged the blade into his stomach, then the right sliced across his neck just below the ear. Blood sprayed out five feet as I turned to meet the second guy between me and my motorcycle.\n\nBob was a musclebound former wrestler, and he wrapped his arms around my chest from behind and lifted me off my feet. I snapped my head back, breaking his nose, and when his grip loosened I plunged the three-inch blades into his thighs. He screamed in pain and I was able to break free. I sliced a blade across his throat before meeting the third guy with a knife to the chest.\n\nI tried to pull it out, but it was stuck in bone. The fourth guy had a pistol, and he pointed it at me as I followed guy number three to the ground. I had to hope he wouldn't fire with his guy next to me. \"You don't have to die,\" I said as I let go of the stuck knife and let my hand drop to my boot.\n\n\"You fucking KILLED THEM,\" he yelled as the gun shook in his hand.\n\n\"They needed killing,\" I said. I removed the throwing knife in my boot and threw it in the same motion from my knees; the blade flew true, puncturing his left eye and penetrating his brain to the hilt. He dropped like a sack of potatoes.\n\nI turned to the man in my arms, he was struggling to breathe as his lung was punctured. My inner beast surged forward, the scent of blood and the thrill of the fight was too much to hold her back. My fangs descended, and he tried to scream as I bit deeply into the artery on his neck and started to feed.\n\nI had struggled with my vampire nature this past year, especially the compulsion to drink human blood. This was the first time I fed outside the protection of the Coven; until now I had used willing familiars or blood bags to sate the thirst that came every few weeks. My vampire purred in satisfaction as I felt his life essence be sucked into my mouth and down my throat.\n\nI let him go when his heart fluttered to a stop.\n\nI looked around, letting my senses out. There was no one else around, and the other men had bled out. I was covered with blood and shaking. Standing up, I took a deep breath and pushed my beast back. I pulled the knives free, setting them on the ground, then pulled off my shirt. I used the back to wipe off as much as I could, then wrapped the bloody knives in them.\n\n\"You forgot something,\" Marcy said.\n\n\"Shit you scared me,\" I said as I saw her walking out of the shadows. \"How long were you there?\"\n\n\"The whole time. You did well, but you can't leave him like that for the cops. Come here.\" I walked over to where she stood by the man I'd fed from. \"These puncture wounds can't be left for an autopsy. Plunge the knife into each hole, then stab it a few more times to make it look random.\" I stabbed some more, there was almost no blood now. \"Leave him by this puddle of blood, they won't test to see how much came from each guy.\"\n\nI grabbed his arm and belt, lifting the man easily and dropping him so his neck was in the pool of blood from where Turk had bled out. \"Anything else?\"\n\nShe handed me a pair of latex gloves and I put them on. \"Take their wallets, remove the cash and toss the rest. Make it look like a mugging.\"\n\nThere wasn't much left in their wallets since I had most of their money, but I took the rest. She was parked nearby, she came back with a change of clothes and a plastic bag. I pulled off my bloody clothes in the alley and used a big water bottle to rinse the rest from my hair, arms and legs. I wiped off with a towel and dressed. Marcy took the bag and tossed it in her trunk. \"You need an alibi.\"\n\n\"The girls were going to meet up for drinks.\"\n\n\"Go, have fun, make sure you're seen. I'll take care of the rest.\" I went back to my Harley, firing it up and heading for the French Quarter.\n\nWe talked about it when we got home. I'd already told everyone I was going to Miami, so I wasn't missed at the gym or the dojos I'd been working out at. Two of the four men had rap sheets and gang connections, and none were missed. No one ever looked at it closely, thinking it was a gang fight that they lost.\n\n\"I think we've gone as far as we can with humans training you,\" Jarrod said when we were done talking about what happened. \"It's time to see how you do against a werewolf.\"\n\nCh. 19\n\nLuna Teri's POV<br >LaCrosse Pack House\n\nI woke up with the sun coming in the room through the partially open drapes and reached for my niece. Finding nothing, I sat up and looked around. The bathroom door was open and dark, and her scent in the room was stale. Getting up, I pulled on my robe and went into the hallway.\n\nHer scent was here, but it was overwhelmed by the scent of Bobby. He must have been sleeping at our door, his wolf pushing him to be as close to his mate as he could get. I checked in the guest room, it was still empty, so I went downstairs to the kitchen. \"Good morning Luna,\" Alice said. She and two others were busy cooking breakfast. \"Breakfast is biscuits and gravy today.\"\n\n\"Smells wonderful,\" I said. \"Have you seen Tania?\"\n\n\"The human we can't talk about outside the Pack?\" Alice had mated one of our young men and joined the Pack two years ago, she didn't know her as my niece. My mate had put out a command last night, no one outside the Pack was to know about her. We didn't want those involved in her disappearance getting away because they found out she was still alive. \"In the lounge room.\"\n\nI walked in, their combined smells were stronger and I froze as I saw them together. Bobby was in wolf form on the big couch, his long legs hanging off the edge of the cushion. Tania was trapped between him and the cushions, but she looked very cozy. Her right leg was slung over his side, and her right arm was wrapped around his shoulders. His head was bent back so her face was using his neck as a pillow. She looked comfortable and she needed the rest; she had nightmares when she was in my arms last night, tossing and turning, but now she looked peaceful.\n\nI had to smile as I thought about Bobby's wolf, he was a smart one. He'd found the one way to get close to his mate without scaring her, and the close contact would build the bond between them. Things were different when your mate was a human, since they didn't feel the mating pull like a werewolf would. It was more of a feeling of love and safety, it had been explained to me. \"You just feel like you are home in his arms,\" one of the women who took the change and joined our Pack had told us. \"The love built up from there.\"\n\nI picked up the empty ice cream container and cheese bag along with the spoon and brought them back into the kitchen to throw away. \"How long have they been there?\"\n\n\"They were asleep when we got here at 4:30,\" Alice said. \"Haven't heard a peep out of them since.\"\n\n\"Let them sleep. If they wake up, offer them food.\" I walked back up to our room, and Clark woke when I opened the door. I told him where I found her and with who.\n\n\"Bobby's wolf is smarter than he is,\" he said with a chuckle. \"When she wakes up, we need to get some answers. I want to know who took her and where she's been the last four years.\"\n\n\"I don't know if she's ready for that,\" I said as I sat on the edge of the bed by him. \"Hell, I don't know if I'M ready to hear what she went through.\"\n\nHe pulled me into his lap, his lips moving down to kiss my mating mark at the junction of my left shoulder and neck. I moaned as I moved my head, giving him full access as his hands moved up my sides. \"I want you,\" he said.\n\n\"I'm yours,\" I moaned as his hands cupped my breasts. My body hadn't changed much in the sixty years we had been mated, and I could pass as a woman in her early thirties in the human world. His fingers tweaked my nipples as his kisses moved along my neck, then they moved up and pulled the nightgown from my shoulders. The cooler air hit my breasts as it fell to my waist, and I leaned back into him as he resumed his play with them.",
        "I could feel his arousal, hard against my thigh through the silk boxers he was wearing. My hand moved down to trace its length, causing his breath to hitch. \"Stand,\" he whispered to me.\n\nI stood up, letting the nightgown fall to the floor. My panties followed them down, and I stood by the bed waiting for his next desire. He lay back on the bed, lifting his hips and I pulled his boxers down his leg. I licked my lips as his excitement was exposed; he was everything my wolf and I had ever desired, and he was all mine.\n\nI moved forward, leaning down over the bed until I was breathing on the swollen tip. My tongue licked out, tasting him before I took him into my mouth and then my throat. I kept my eyes on his as I used all my tricks to drive him wild; when I took him deep and started to hum, he pulled me off and tossed me onto the middle of the bed. I laughed as I saw his wolf coming forward. I had teased him and now I would pay the price, a price my wolf and I were happy to pay over and over.\n\nHe grabbed my hips and pulled my ass up in the air, bringing my knees underneath as my head remained on the mattress. He growled as he plunged his length into me, and I moaned in pleasure as he filled me. The room was filled with my moans of pleasure, the slapping of his hips to mine and the liquid sounds from my overheated sex. I was working up to a huge orgasm, and he was too. He grabbed my hair and pulled me up and back, my back arched and my mouth open, then he bit down hard on my mark and I exploded. \"CLARK,\" I yelled as my body shook with pleasure.\n\nHe slammed in one last time and I felt myself being filled with his hot essence. He wrapped his arms around my waist, holding me up as the tremors continued to move through my body. When they were done, he lowered us back to the bed. He held me to him until he disengaged, then he got up and went to the bathroom before cleaning me up. \"It gets better all the time,\" he told me with a smile as he wiped my thighs.\n\n\"Maybe my next heat will catch,\" I said. I felt bad I had not been able to provide him an heir; the doctors had not found a physical reason in either of us, but I knew he was worried.\n\n\"It may or may not, but my love for you will not change,\" he told me. \"Now let's get dressed, I smell biscuits.\" I didn't bother showering; werewolves had a different way of looking at things including sex. The scent of sex on the Alpha pair reassured the wolves of the Pack that the Alphas were happy and the pack was prosperous. It also settled his wolf when there were powerful unmated males around, like the Alpha sons of the Sulphur River Pack. I pulled on underwear and a sundress, then thin sandals, while he put on slacks and a polo shirt. He kissed me deeply before he led me downstairs.\n\nOne of the kitchen girls was standing in front of the lounge area, keeping the people out while our guests continued to sleep deeply. Clark had his hand on my back as we greeted Pack members on the way to our seats, where he pulled out my chair before sitting down. Breakfast was served over a two- hour period, so they weren't waiting for us, but they did stop eating until we sat. Trays and bowls were passed, and the topic of conversation was no surprise. Everyone was talking about Tania's return and Talia's disappearance.\n\nI saw Randall coming down the stairs from his guest room, looking around and sniffing. \"Come in here, Randall,\" I said as I waved at him. \"He's in the lounge room with Tania, she's finally sleeping.\"\n\nHis eyes got wide. \"She accepted him?\"\n\n\"His wolf is with her, she isn't scared by him that way. She's pretty overwhelmed by it all, you have to remember she was only fourteen when she was taken. You probably know better than anyone what she went through.\"\n\n\"I do, and this is good news for both of them that they can be together.\" He came in and sat down, the food being passed his way. \"Have you made any progress in finding her a therapist to work with?\"\n\n\"Not within the Packs,\" I said. I had made discreet inquiries of the other Lunas, asking about a counselor to help one of my young females who had been raped. \"None of the Lunas had any specialists, they all recommended talking to the Pack Doctor.\"\n\n\"Pack Doctors aren't equipped to deal with this kind of trauma,\" I said. \"From the victim statements of the other girls recovered, they were treated like cattle; drugged, beaten and tortured into compliance. They are going to need years of therapy, and even then, they will struggle to regain their lives. Post traumatic stress, difficulty forming relationships, sexual dysfunction, even depression and suicide. I know Tania was strong, but she's lost her wolf and her hope.\"\n\n\"I lost my baby too,\" a voice said from the doorway. We all looked up, Tania was standing there, her hand gripping the fur on Bobby's neck as she leaned on him. \"He raped me and took my son.\"\n\n\"Who took your baby,\" I said as my heart broke for her.\n\n\"I don't know his name. He was an Alpha. Beta Todd gave me to him, he kept me leashed in a basement and made me pregnant. When my son was born, he took him.\"\n\nThe table was practically shaking with rage, and it was scaring her. \"CALM YOUR WOLVES,\" Clark commanded. \"Males, except Randall, leave us through the kitchen.\"\n\nThe men got up and walked around the table, knowing better than to look at Tania, and exited out the back door. I heard some shift and howl, probably going to run it off. The knowledge that this had happened to a fourteen-year-old girl, one who was family to us, and confirming who it was, had us all on edge. \"You are safe her, Tania. Come, sit down and have some breakfast.\"\n\nShe looked around, then looked at Randall. He was the only one she didn't know. \"Tania, this is Randall Meechum. He's from the Sulphur River Pack in Texas, and he is also a Special Agent with the FBI. He was involved in the investigation into your rescue from the hotel.\"\n\nHer hand went to her face as she gasped and stepped back. \"He's after her? She helped me!\"\n\nRandall held his hands up, shaking his head. \"I could never hurt Talia,\" he said. \"She is my mate. I knew as soon as I scented her in the parking lot that she was my other half. I was here because I was trying to figure out what happened to the two of you four years ago. The humans do not know it was her, and they do not know she killed those men to rescue you.\"\n\nShe relaxed, nervously scratching at Bobby's ears as she took in the news. \"Your mate?\"\n\n\"Yes. I saw her just long enough for our wolves to connect last night.\"\n\n\"She shot you!\" Bobby was rubbing his head against her side, trying to calm her. \"She ran from you!\"\n\n\"She missed, intentionally. Do you know why she would have run off?\"\n\nShe looked at me, then back to Randall. \"She went to get my baby back, and to kill some Alphas.\"\n\n\"On her own,\" I asked. \"Why didn't she ask us? You are family, we would help. We all want blood for what they did to you.\"\n\nShe looked down at Bobby, he just licked her hand and rubbed against her, letting her know it was all right. \"She doesn't need your help. She doesn't need any of you anymore.\"\n\nRandall looked at her. \"Do you know where your baby is, Tania?\"\n\n\"Talia does, she told me she was going to bring him back to me.\" She walked over to her Aunt and Uncle. \"She won't ask for help because she knows the Council has an arrest warrant out for her, and you'll be in trouble with them if you don't turn her in. She told me she took a blood vow, to find and kill those responsible, and nothing would get in her way.\"\n\nI gripped my mate's leg, a blood vow was unbreakable, even in death. \"And then?\"\n\n\"When she has her revenge, she will turn herself in. She said she is beyond saving, so I have to live for both of us. I'm supposed to move on, find my mate, have a family and live my life.\" She pulled back a chair and sat down heavily. \"I think she got the easy half of the deal.\"\n\nCh. 20\n\nTalia's POV<br >34 Months Ago, Upstate New York\n\n\"You ready for this, Talia?\" Eduardo was sitting on the counter in the hotel bathroom, watching me as I pulled on my black leather jacket over black jeans, a black T-shirt and boots. I double-checked my weapons, four throwing knives sat ready in my boots and jacket sleeves, and an autoinjector filled with a fast-acting sedative in my front pocket. I'd left the Glock behind, I didn't want to risk jail time in this state that didn't recognize carry permits.\n\nIt wasn't like I couldn't kill someone twenty different ways without it. \"Yeah,\" I replied as I pulled my blonde hair back in a ponytail, then covered it all with a black bandana.\n\n\"This phone has one number in it, you can use it to contact me when you are done. As soon as the sun sets, I'll come get you.\"\n\n\"If I need it,\" I said. \"You guys didn't pick an easy task for my first assignment.\"\n\nHe put his hand on my shoulder. \"You're ready for this, or Jarrod wouldn't send you.\"\n\nI took a deep breath. \"You going to be all right?\"\n\n\"The do not disturb sign is up and we've got the drapes closed and taped. I'll be fine.\" I gave him a hug and walked out, down the hall and stairs and out into the parking lot. I fired up my Harley and headed out for the bar Alpha Marvin Jones owned in the town just outside his territory. I drove through the Fulton County Lakes region to Eagle Bay, where the Harbor Bar sat.\n\nParking my Harley facing out near the door, I got off and walked in. It was fall, the off season and a Wednesday, and there weren't many tourists around. I unzipped my jacket as I walked in, and I could sense that most of the people inside were werewolves, including all of the staff.\n\nI walked up to the bar, oblivious to their stares. Technically, I wasn't on Pack lands so I couldn't be detained for trespassing. That didn't mean my presence was welcome. My scent alarmed them, and they all focused on me as I walked past the booths to take a seat on the barstool.\n\nIf I was male, they would have considered me a threat. I was without a Pack, unmated, beautiful and alone, so I could smell their attention shifting from alarm to lust. \"What can I get you, young lady,\" the bartender said. He was a big guy, at least warrior rank.\n\n\"Beer, menu and a meeting with your boss,\" I said as I sat down.\n\nHe asked to see my identification, and I showed him my newly forged Louisiana driver's license that showed me turning 21 two months earlier. He stared at it carefully, and his eyes glazed slightly. He was linking to his Alpha, giving him my name and address no doubt. My Coven had spared no expense in creating my false identity, down to the real apartment in the city that was listed. I even had a credit history showing my job working for a company secretly owned by Jarrod. \"Beer and menu I can get you,\" he said.\n\n\"I'll take an India Pale Ale if you had it,\" I said. He came back with a standard bar menu and a glass of Full Boar IPA. I ordered a burger with mushrooms and blue cheese and tried the beer, it was pretty good. The bartender went back into the office, right as another man sat next to me. \"That seat is taken,\" I said.\n\n\"I didn't see anyone come in with you,\" the young wolf said. \"You're not the one but you look like you'd be fun,\" he said. \"Name's Boyd. Let me buy you a drink, pretty lady.\"\n\n\"No thanks.\"\n\nI reached for my beer, but he grabbed my right hand, turning me towards him as he held it tight. \"You've got no rights here, rogue. Leaving with me for a quick fuck is your best option right now. The three boys in the back there want to take you to the Pack prison, where they can share you with all their friends.\"\n\nMy left hand had dropped to my boot as he talked. \"You have a nice cock, Boyd?\"\n\n\"You bet I do, and I know how to use it.\"\n\n\"You like your cock the way it is? It's not too big?\"\n\n\"It's perfection, bitch.\"\n\nI moved the tip of the razor-sharp blade in my left hand until it was poking through the fabric of his jeans, right where his hardened shaft was pressing against the zipper. \"Then you better sit your ass down where you came from before you lose half of it.\" His eyes got wide as he looked down. I could see his wolf coming forward, demanding my submission, and so I let MY wolf forward and she was pissed. My Alpha dominance pushed his wolf back, and he let go of me and backed off. I smiled and put the blade back as he walked away.\n\nThe smell of lust changed over to one of aggression as his took his seat, communicating what happened with his buddies in the corner. I ignored them, enjoying the burger and fries as I waited. I had just finished up when the bartender came back out. \"The Alpha wants to know why you want to meet with him and who you represent.\"\n\n\"Word is that there is a witness working with the FBI who saw two men abducting a woman in Syracuse last month,\" I said. \"The people I represent can make her go away.\"\n\nHe nodded and walked off. I finished my beer by the time her returned. \"Meeting will be on our lands. No weapons.\"\n\n\"I'll leave them on my ride,\" I said.\n\n\"Boyd and the boys will escort you. Follow them and do not deviate or you will be killed.\" I tossed a twenty onto the bar to cover lunch, then got up and went to my Harley. The four from the corner followed me out, two heading to each car. I made sure I showed them the knives as I took them out and put them into my saddlebags. Firing up my ride, I followed the first car out of the lot, the second behind me.\n\nWe arrived at the Pack House twenty minutes later. Driving up, the Pack looked like a small housing development mixed in with the rolling hills and trees, but I could see the subtle clues there was more. The chain link fence topped with barbed wire, the cameras, and the layout with the Pack House and gym at the center. Larger homes belonging to senior Pack leaders were on the inner ring, smaller houses surrounded it. They probably had the unmated staying in Pack House apartments.\n\nI parked my Harley when they came to a stop, and the four men escorted me up the stairs where I was met by an even bigger man. \"I'm Beta Mark Turner. Follow me.\" He led me into the house and up the stairs to a conference room, holding the door open for me. Four men were in the room, including the Alpha who I immediately recognized from his photo. \"Alpha, this is Amanda Keller. Amanda, this is Gamma Pierce, Delta Lawrence, Warrior Parker and Alpha Erich Shunn.\"\n\n\"Welcome to the Fulton Lakes Pack, Miss Keller,\" the Alpha said as he stood and took my offered hand. He raised it up to his nose, a little confused by the scent. I could tell his wolf didn't like it. \"I understand you have a proposal for me.\"\n\n\"Not exactly,\" I said. \"I challenge you for the Alpha position at Fulton Lakes.\" The five men stared at me, then the Alpha started to laugh, and the others followed. I stared him down, my dominance forward and my wolf pissed at being dismissed. When the laughter died down, I continued. \"Do you accept, or do I take your submission now?\"\n\n\"Thank you for the comedic interlude, young she-wolf, but you are better suited to be UNDER a strong man than in charge of one.\" The other men got up from their seats, two moving behind him while the other two blocked the door. \"Take her to the cells until I decide what to do with her.\"\n\nI let my claws grow out as they dismissed me, and when the two men came to grab me, I was ready. Fast as lightning, I sliced clean through the neck of the man on my right before spinning and plunging my claws into the kidneys of the man on the left. He screamed in pain, and I snapped his neck before the other two men could react.\n\nOne ran towards me, and with a jumping roundhouse I knocked him into the wall and out. The second man had gone wolf and leaped for my throat as I landed from the kick. Avoiding his jaws, I grabbed him by the scruff and slung his head down into the wood-paneled wall. His head broke through the wall, and before he could recover, I stomped on his exposed neck. A loud snap told me it was broken, killing him instantly.\n\nI turned to face the Alpha, who was now alone in a room with a pissed-off she-wolf who had just taken out his senior leadership in under ten seconds. I walked towards him, my bloodied hands dripping on his expensive carpet as he backed up towards the window. \"My question remains, do you accept my challenge, or do I take your submission now?\"\n\n\"Who are you?\"\n\n\"I'm your worst fucking nightmare. You've been kidnapping and changing human women, threatening to draw attention to our kind. That isn't acceptable, especially as you've tried to dump the ones who didn't make it in the back yard of friends of mine.\" His eyes got wide, but he didn't get a chance to say anything. My hand shot out, the claws piercing his upper left chest. I moved my hand around in there as his mouth opened in shock and his hands grabbed mine, but he was already dying. Finding what I wanted, I jerked my hand back hard. He was pulled forward past me as his chest ripped open, and he fell hard to the floor by his desk.\n\nI looked down at him, his heart in my hand. I reached over to his desk and grabbed a pair of scissors, then plunged the blades through the heart, pinning it to the center of the conference table.\n\nThe man I had knocked out was starting to come to. The thirst for blood led me to grab him and bite into the carotid artery just below his left ear. I took deep gulps of the warm blood as I listened to his heart weaken. I let go and sliced his throat open when I had my fill.\n\nMy beast felt satisfied; he hadn't deserved to live, and they had all paid the price for breaking Council laws and endangering the local Coven. No longer would dead bodies be showing up around the Syracuse coven house; that was the kind of cold-war antics that could get us all in trouble. The fact that girls were being kidnapped and forced into a life they didn't want, well, that gave me satisfaction in ending them.\n\nI went to the attached bathroom and washed the blood off my arms and face, and used the towels to get the blood off my clothes and jacket. I liked black because the blood didn't show, and leather because it would clean up well. I walked back into the room, placing an Ace and King of Clubs in the mouth of the dead Alpha.\n\nI opened the door and a few dozen Pack members were waiting outside. \"The Alpha, his bond broke,\" Boyd said.\n\n\"It's to be expected when he's dead,\" I said as I flung the doors wide open. \"Tell the Council to find leadership suited to the Pack, I don't want it.\" I walked towards the stairs, the shocked werewolves parting for me like the Red Sea for Moses.\n\n\"Who are you, really,\" Boyd asked.\n\n\"I'm the Alpha Killer.\" I walked out, firing up my motorcycle, and left them shocked and leaderless behind me."
    ],
    "authorname": "partwolf",
    "tags": [
        "luna",
        "mate",
        "werewolf"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/alpha-killer-ch-16-20"
}