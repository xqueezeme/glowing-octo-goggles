{
    "title": "Ugly American Ch. 02",
    "pages": [
        "Thanks to mikothebaby for her editing Advise. All and any errors are all mine. \n\n++++++\n\n...from Part 1\n\nNow I am certain at some point in my life I have done dumber things then throwing white hot lighted flares onto an ocean of jet fuel. But at that moment, I truly could not recall committing a more inane dim-witted act.\n\nThe first few flares went out, or had no effect. I knew that the fuel was lighter than seawater, so the fuel must be on the surface. I tried to keep the rising panic down as a pirate zodiac almost reached the ship. \n\nSuddenly I remembered it was not the fuel that burns,-it was the vapors coming off the fuel that burns. We were down to throwing out our last flares when unexpectedly a massive WHOOSH of air crackled thru the sky. The churning wake from the ship had agitated the fuel enough for vapors to be developed. These vapors had ignited!\n\nLittle did we know I had unintentionally created a small Fuel Air Bomb close to the surface of the water. A mini mushroom cloud rose up as a fireball spread out, sucking oxygen from the air. The Filipino was faster and wiser ducking down behind the ships railing plate. I was still standing there with my mouth open, staring at the sight when the concussion blast reached the ship, slamming into me hard.\n\nLast I remember was being picked up, and then hurled several yards into the aft bulkhead before darkness slid over me...\n\n+++++++\n\nI tried to open my eyes, but my vision would not focus. It felt like the worst hangover in the world. My head was throbbing , my face felt stiff. Someone must have worked over my body with a sledgehammer, even my hair hurt.\n\n\"About bloody time you woke up you lazy bastard.\" Someone said in a thick Scottish accent.\n\nAs I turned my head, my vision cleared. Mac was sitting beside me in a chair. I was in a bed, but it sure as hell wasn't in my tiny contractor cabin. I was in a massive bed; the room was huge with paintings on the wall. I even saw a grand piano reflected in the large sliding glass patio doors that led to a balcony overlooking the sea.\n\nMac saw my confusion, and grinned. \"Not bad ah Darrin? After your little Texas barbeque stunt the passengers in the Royal suite insisted you stay here to recover. They moved to another cabin.\"\n\n\"I told you, I'm not from Texas. Although I do man a mean grill.\"\n\nI looked around again. \"Mac, this is..I don't know really too much. I just got lucky, that's all.\"\n\nMac got up, rubbing his hands. \"I'd rather be good then lucky any day Darrin my boy. The whole ship is talking about that cowboy feat you pulled off. Last I heard they got you drinking the fuel while lighting fire out your ass, shooting flames from your backside at them bloody pirates.\"\n\nI tried to smile, but the sides of my cheeks burned in pain.\n\nMac got a solemn look on his face as he said. \"Seriously Darrin, that deed took quick thinking, coupled with a big brass set of balls to back it up.\" Mac paused again before a smile returned to his face. \"That exploit was almost Special Boat Service worthy,now don't you be getting a big head. I said ALMOST.\"\n\nI touched my face, it hurt like hell.\n\nMac started pacing the room. \"Never thought of ducking for cover Darrin? My instructor used to say to be sure of hitting the target, shoot first, then call whatever you hit the target.\"\n\nI tried to sit up in bed. \"Mac, I thought I was a goner when that blast hit me.\"\n\nMac grabbed a mirror off the dresser, shoving it in my face. \"You fool, you're too ugly to die.\"\n\nI gasped, putting a hand to my face confirming it was really my reflection in the mirror. My eyebrows were gone, with a lot of my hair singed away. Some white salve was on my nose, and lips. The rest of my face had the look of a bad sunburn. To top it off, the left eye was swollen, ringed with three different shades of red, purple, and yellow\".\n\nJust then Zoie came out of the bathroom, ever the profession in her Medical garb with a stethoscope hanging around her neck.\n\n\"Mac, I going make you leave if you upset my patient.\" Zoie then shoved a digital probe into my mouth that was attached to a monitor. At the same time she wrapped a blood pressure cuff around my bicep.\n\nMac ignored Zoie. \"I got more good news Darrin. Because the ship dumped most of its standard fuel frying them pirates, the ROYAL VIKING has been running on our biofuel for the better part of two days.\" He got up, and clapped his hands. \"Been running great too! Even that hard headed Nordski Chief Engineer is happy!\"\n\nZoie turned, pointing toward the door. \"That's it Mac, out. Don't make me have the Captain call security on you.\"\n\n\"OK Lassie, I'm going, I'm going.\" Mac threw me a salute as he left.\n\nZoie turned to me, I was surprised to see tears in her eyes that she wiped away with the cuff of her sleeve. \"Darrin. what am I going to do with you.\"\n\n+++++\n\nIn between the ship Doctor looking me over, the rest of the day was a steady parade of visitors, with Zoie keeping visit time to a minimum. She was watching over me like a mother hawk, ushering even the Captain out, when Zoie felt my strength was waning.\n\nMy favorite visitor was the passengers who had given up this massive suite for me. I was surprise to see it was the elderly Scot who had first dropped his pants \"mooning\" the pirates. He and his wife were quite the couple, refusing to accept my thanks for use of their accommodations.\n\n\"Think nothing of it Darrin.\" The old man said with a smile. \"Didn't think you would recognize me with me pants on.\"\n\nHis wife swatted him. \"Oh hush you.\" She turned to address me. \"You have given us quite a story to tell our grandchildren when we get home\"\n\n\"Ah yes,\" her husband broke in. \"and mightily bored they'll be by the tale!\" \n\nWe chatted a bit longer until Zoie ushered them out. I was really feeling exhausted, so when Zoie closed the blinds I was out like a light.\n\n+++++\n\nA moment of panic came over me as I fought to recognize the surroundings. It was dark, hard to make things out. A soft, but firm naked form, was wrapped around my body. I knew it was female by the perfume smell.\n\n\"Anita?\" My heart jumped, as my eyes adjusted to the dim light while conscious thought returned. \n\nThen disappointment spread, it could not be my former wife Anita. This lady had dark hair, Anita was blond. As my fingers traced the nape of her neck I felt rough skin. I recoiled a moment before it hit me.\n\nMy mind screamed. \"Damn it's Zoie!\"\n\nI felt Zoie stiffen when I pulled my hand away. I tried to pretend it was to stretch out a stiff muscle.\n\n\"It's OK Darrin.\" Zoie said softly. \"I know what it feels like, and how I look. That's why I left the lights off.\"\n\nRolling over quickly, the sudden was pain shocking, and bolted me wide awake. It also reminded me to move slower next time. I found the bedside lamp, flickering it on. Zoie was on her side facing me. Reaching up she made an effort to cover the disfigurement with her hair.\n\nI grabbed Zoies hand, pushing away her hair, so I could see her face in full. \"You are beautiful the way you are. Please do not try to hide any part of you from me.\"\n\nZoie looked past me before she began speaking. \"My parents were not high in the Party, so I could not get reconstructive surgery after the fire when I was eight. Many in our small town are superstitious, they felt my...looks, were a punishment for something bad I had done, or my parents had done. Most would not allow their children to play with me, I never get used to the names, or taunts.\" \n\nZoie rolled onto her back looking at the ceiling. \"I studied hard, first in all my classes. Got qualified for the University, I was to be an anesthesiologist.\" She paused. \"My patients would be unconscious, never need to see my face. I had my first boyfriend there at University Medical School. I thought he saw past my scars. Then I heard him tell his friends the only way to fuck me was with a sack over my face, or in the dark. He said a sack interfered with me sucking him, so he was stuck with only screwing me at night.\"\n\nZoie took a deep breath but continued talking. \"I forgot about him, concentrating on my studies. I was a very good anesthesiologist Darrin. Always first in my classes, and later in great demand by our government hospitals. Then my father did something to upset the Party. They took him, and my mother away. A patient warned me, so I fled the country ahead of the government police. I ended up in various parts of Europe. With no way to retrieve my qualifications, I could not practice medicine anywhere. I completed a nursing \n\ncourse while working nights as a cleaner.\"\n\nZoie turned to face me, propping herself up on an elbow. \"That is my sad story Darrin. As I said this is a small ship, and am not a...how you say...slut. If you want me to leave I will.\"\n\nI put Zoie's chin in my hand so she was looking directly at me. \"YOU are without a doubt the most amazing lady I have ever met. I feel like a major league whiner, moaning about my little setbacks. Hell, I 've been leading life like a wimp compared to you.\"\n\nI saw her eyes twinkle in amusement. \"and Zoie, as for wanting you to leave...\" I grabbed her hand putting it on my growing erection. \"What do you think?\"\n\nZoie smiled as she started to stroke me. \"Darrin, can we turn out the lights?\"\n\n\"I may be too ugly to die Zoie. But there is no chance I am turning out the lights. Not a Chance, hear that?\" I said, pulling her toward me.\n\n++++\n\nI wish I could say our lovemaking that night was magical. However if you ever tried to kiss someone with burnt lips, including painful bruises all over your body ...DON'T!\n\nLike two porcupines having sex, it was quite an event, slow, and careful. The only magic that night, was that I was able to do anything at all, let alone the second time.\n\nAlas nothing lasts forever, four days later Zoie and I said good bye. She promised to come stay with me at her contracts end. I was already looking for airfare on the dates when the ROYAL VIKING came to Florida.\n\nThe Pirate event got a good bit of airtime, but it was old news by the time I arrived home. My son and brothers family were a bit shocked by my appearance (although I had healed up a bit by then). All I could say was. \"You should have seen the other guy.\" \n\nWhen I returned to work, my coworker had a small party for me, complete with a Pirate themed cake. They decked out my work area with Buccaneer paraphilia. My bench was covered with a skull and crossbone flag, eye patch, stuffed parrot, and a toy cutlass. The machine shop even churned out a peg leg for me. The Blackbeard and Captain Jack jokes were fast, and heavy for the first few days. I took the ribbing good naturedly.\n\nWhich is why I thought it was a joke when I was brought into the Managers office to meet a stern older lady with a slight German accent.\n\n\"Darrin\" my Boss began. \"This is corporate H.R. Manager. She is from HQ personnel to oversee your transfer to the South Florida division.\"\n\nThen it got interesting. The lady from Corporate was aghast I would defy an edict from our company HQ. It seemed my old buddy Mac wanted me yesterday. He was willing to pay the price to get my happy ass down to South Florida ASAP. All my objections were shot down.\n\nMy home? No problem, the company gave you fair market value for the house, and put you up for a year, plus hired a realtor to find you a new place. Or if you did not wish to sell, the company would hire a management company, and help you find a renter.\n\nMoving? The company moved whole families to different countries all the time. Just get on a plane. The movers will have everything sent to you, in any location, or in storage to move later.\n\nMoney/Position? The new position was a huge increase in pay, with perks I could only dream about, even real stock options with profit sharing.\n\nThat night I approached my son AJ about moving to Florida.\n\n\"Duh Dad!\" AJ said. \"Sunny Florida, or this frozen slush, plus a chance to see Grandma? When do we leave?\"\n\nThen I got a second surprise from my Brother, a day after I told him of the offer.\n\n\"Darrin, we are coming with you.\" My brother informed me. \"A realtor has been bugging us to sell in this red hot market. You know my wife and I are both nurses, so we can get jobs anywhere. It will be great for the kids to be around their Grandmother. Besides we are tired of this cold weather where everyone has blond hair, and blue \n\nears.\"\n\n++++++\n\nAnyway that is how we ended up with a rental house near the beach outside Fort Lauderdale. The place was a stately old manor. The house had plenty of room, which was good, as my brothers family was staying with us. \n\nLife was fine. My Mother was thrilled to have her grandchildren near her. My new job with Mac as my boss was interesting. The cruise Industry was large, but a very small community centered near Miami. Everybody knew about the pirate attack, and wanted to hear about the event. Mac was a born salesman, trotting me out like a show horse at every occasion. He used the opportunities to push our products from biofuels, communication equipment, even the \"Noise Toys\" or Long Range Acoustic Device (called LRAD) used on the pirates that day. I was at a Cruise Port almost every day on a ship when not giving a Dog & Pony show at some company boardroom. On any one day, I was meeting with more people, from more nations, than I had in my whole life back up north.\n\nAJ and his cousins got a chance to try out their conversational Spanish after years of lessons. \n\nThis caused some confusion when AJ approached me after hanging out with some new Latino friends.\n\n\"Dad, these people here don't speak Spanish right.\" AJ informed me one day.\n\nI chuckled. \"Let's see if we can figure this out AJ. Is the Spanish taught to you by your teacher who spent a summer in Madrid correct? Or is it possible your buddies, and their families who have been speaking the language from birth is the right way?\"\n\nSouth Florida had a thriving Latin community. I even picked up a few words, but AJ and his friends laughed at my \"Spanglish\" conversation attempts.\n\nBest of all about the Florida move, was I got to see Zoie every 10 days when the ROYAL VIKING came into port. I was nervous when Zoie and AJ met, it was unfounded. They were best buds after 10 minutes.\n\nLook Dad.\" AJ exclaimed, holding up a piece of string Zoie had given him during a tour of the Medical Center. \"Zoie taught me to tie a knot with one hand! Just like Surgeons do.\"\n\nI looked over the knot. \"Not bad AJ.\"\n\n\"Zoie, is like the bomb Dad! She speaks like a zillion languages!\"\n\nZoie came up, giving me a hug.\" Now AJ, I only speak seven languages fluently.\"\n\n\"Listen to this Dad.\" AJ then spouted out some cryptic words. He looked at Zoie. \"Did I say that right Zoie?\"\n\nZoie patted AJ on the shoulder \"Yes AJ, you pronounced that perfect.\" She had a mischievous look in her eye.\n\n\"What's it mean AJ?\" I asked.\n\n\"It means 'Eat Shit and Die' in Uzbek!\" AJ was beaming. \"Dad, ain't that cool!\" \n\n\"ZOIE!\" I turned toward my laughing girlfriend.\n\nZoie gave me that beautiful smile. \"Oh Darrin, it's OK. How many Uyghurs in South Florida does AJ know that are going to understand what he's saying.\" \n\n+++++++\n\nAfter getting the proper security and port passes, I ended up taking AJ with me to the ROYAL VIKING every time I went to see Zoie. Various crew members were happy to keep AJ entertained, while Zoie and I had some \"private time\". AJ got to see every part of the ship from the engine room workings, TV Studios, Bridge, Galley and of course the Medical Center. The only problem was everyone on the ship seemed to delight in teaching AJ to swear in their native tongue. To my horror, AJ soon was able to curse fluently in Norwegian, German, Creole, Dutch, Filipino, Finnish, Russian, even Hebrew.\n\nBut alas all good things must come to an end, the phone call I answered Monday morning was it.\n\n\"Hello Darrin.\" \n\nAfter over a decade of marriage, I knew Anita's voice instantly.\n\n\"Yes this is Darrin. May I ask who is calling?\" I could not resist yanking Anita's chain.\n\n\"Darrin, you damn well know this is, Anita!\" She said calmly from the other end of the line.\n\n\"It cannot be Anita. I asked she not contact me unless it was an emergency concerning AJ.\" I switched my phone to the other ear. \"What do you want?\"\n\n\"Darrin, I thought you would be over this by now. I want to see my son.\"\n\n\"Anita, the lawyers told you the court gave me sole custody after you missed so many scheduled visitations with AJ.\"\n\n\"I know, and I am sorry. The travel with Wesley just made things so crazy. You know what they say, \u2013Standing behind every successful executive boss man is a female secretary.\"\n\n\"Anita, is there a saying for a cheating married secretary on her knees in front of the executive boss man? Or spread eagle on her back under the executive boss man?\"\n\n\"Darrin, stop being so crude. I want to see AJ. His is still my son.\"\n\n\"Anita, you cannot get AJ all excited, then not show up. He is your son, not a hair appointment.\"\n\n\"No need to bore me with a lecture Darrin. Wesley has a time share near you. We are going to be down next week. Can I take AJ for a long weekend? Wesley has a boat, AJ can go water skiing.\"\n\n\"Anita, this weekend AJ is planning to go the Marlins baseball game with my brothers family. I will be away doing some work on a ship.\" I looked at my watch.\n\n\"Yes I heard you are doing boat engine work. Little fishing charters, and stuff right? I am so happy for you.\" Anita said condescendingly\n\n\"Yea, something like that.\"\n\n\"Well can I have AJ this weekend, or not Darrin.\"\n\n\"Yes Anita, you can. The boy needs to know his mother cares about him. Don't screw this up if you promise to come, you better show up.\" \n\n\"Oh Darrin..\" Anita started.\n\n\"Anita, I do not wish to hurt you, but it is still on my list. So be here Friday. Don't be late.\" I hung up the phone.\n\nNaturally Anita did not show up Friday, waiting until Thursday night to cancel.\n\nAnita was unapologetic. \"But Darrin, surely you can comprehend the situation. Wesley got a great last minute deal on a cruise. He knows the bar waiters brother, we could get upgraded. It will be my first time out of the country, a chance to use my passport.\"\n\n\"Damn it Anita, you cannot do this to your son!\" I was pissed. \n\n\"I am not going to argue with you about this Darrin.\" Anita countered.\n\n\"I do not argue with idiots Anita. Idiots just drag you down to their level, and beat you with experience.\" I said to her. \"You get AJ all fired up, now I have to clean up this mess.\"\n\n\"Darrin, do not be such a drama queen. AJ will understand.\" Anita replied. \"I will make it up to him another time.\"\n\n\"Don't bother.\" I hung up the phone.\n\n+++++\n\nI should have been happy. The ROYAL VIKING was in port, I was going to be sailing on her for three days. My task was uploading a new engine control software, before she went into drydock. I would be staying with Zoie, in her cabin. But Anita's stunt with AJ had put me in a foul mood. Thank God my brother took his Godfather duties seriously. He was able to get the extra ticket back, so AJ could come to the Marlin baseball game with his cousins.\n\nMy attitude instantly improved when Zoie gave me a big hug, and kiss. She sensed my mood.\n\n\"Everything OK Darrin?\" She asked running her fingers thru my hair. \"Did I do something wrong?\"\n\nI explained the situation with Anita and AJ. Zoie was understanding.\n\n\"That is terrible Darrin. We must do something for AJ.\" Zoie said. \"But I do have some good news. Actually two pieces of good news.\"\n\n\"I could use some good news Zoie. Come on don't tease me.\"\n\n\"Captain Sven heard you were coming. He wants us to join him tomorrow in the passenger dining room. I even got you a Tux. We can get a formal picture together.\" Zoie was almost beaming.\n",
        "I tried to be excited for Zoie's sake, but spending the evening in a monkey suit, was not high on my bucket list.\n\nZoie continued. \"Better yet Darrin, on the ten day drydock, I am not needed. So I can either stay on the ship doing fire watch or..\"\n\nI jumped right in. \"No F'in way are you staying on the ship!\" I picked Zoie up hugging her around the waist. \"You are staying as a guest at Chez Darrin! AJ has been bugging me to see the sights. We are going to be do up the best South Florida has to offer!\"\n\n\"Darrin, put me down!\" Zoie squealed. As I returned her to the ground, she gave me a look, then said softly. \"I'd hope you would say that.\"\n\n++++++\n\nThe ships tailor did a great job, the tux fit perfectly. I did look damn good, if I do say so myself. Zoie was stunning in her evening gown, and I really was enjoying the night. Captain Sven was a fine host, plus the food was excellent.\n\nSuddenly an angry male voice boomed out from behind me.\n\n\"What the hell is that Asshole doing here!\"\n\nThe whole room went silent. Everyone at the table turned. I was astonished to see my ex-wife Anita standing there with a red faced Wesley.\n\nCaptain Sven rose from the table. He towered over Wesley. When Captain Sven spoke his voice was every inch the commanding Captain. \"Excuse me sir, this man Darrin, is an honored guest of the ROYAL VIKING, and her crew. Now if you will be so kind, the waiter will show you back to your table. Have a good evening.\"\n\nAnita face was pale white. She seemed to be more in shock at the sight of me in a tux at the Captains table, than I was at seeing her. Wesley however, must have had a few drinks, as he would not let it go.\n\n\"Fuck that! Listen up you Love Boat wannabe. We get stuck in some shitty table by the kitchen while this Prick!\" Wesley pointed at me. \"Gets to sit at the God Damn table of Honor! No Fucking way Sailor boy!\"\n\nCaptain Sven stared down Wesley for a moment, who started to wilt. \"Sir, I assure you the cuisine is just as fine on every table in this dining room. Now will you allow my staff to provide you excellent service, or shall I have security remove you?\" \n\nAnita looked like she wanted to shrink into her shoes. She tugged at Wesley's suit coat sleeve. \n\n\"Wesley\" Anita said in a voice just above a whisper. \"Everyone is staring at us. Let's just go sit down.\"\n\nWesley turned on her. \"Screw you too bitch! I don't need your fat ass telling me what to do. You give me a half assed, world's worse blow job before dinner, and now this crap. I am going back to that tiny fucking shithole without a window they call a cabin.\" With that he stormed out of the dining room. \n\nAnita stood there stunned with her hands at her face as all the diners stared at her. The room was still silent. I knew I shouldn't ...but I could not resist. I cleared my throat loudly. Everyone looked at me as I peered at my ex-wife.\n\n\"Hello Anita. It sure is a surprise to see you.\" I raised my wine glass at her. \"Maybe we'll see each other on your travels about the ship. I'm in a suite, upper deck. Where are you and Wes bunking?\"\n\nAnita face burst into tears, as she bolted from the dining room. After a moment the buzz of conversation returned as diners turned their attention away from our table. \n\nI signaled over the wine steward. \"Anyone else like some more to drink?\"\n\n++++++\n\nI had intended to sleep in the next morning, as my task was done, debark from the little Haitian Island was not until the afternoon. However Zoie was tugging me out of bed at 7 AM.\n\n\"Darrin get dressed quick. You need to come to the Broadcast room. The Captain is going to throw your ex-wife, and that guy off the ship!\"\n\nI was instantly awake, pulling on my clothes. \"Zoie, what happened?\"\n\n\"Last night your wife's guy got real drunk, and nasty with the staff at the casino. Then he got into a fight with some guests, and the ship security.\"\n\n\"No Shit!\"\n\n\"It gets worse Darrin, during the struggle a bag of cocaine was discovered on your wife's guy.\"\n\nI had to laugh this was too much. Wesley getting caught with drugs, this was the best gift ever, and it was not even Christmas, or my Birthday.\n\nI dressed as fast as I could. We were soon in the Broadcast room, watching a feed from the conference Center. One camera showed Captain Sven at a table flanked by the Staff Captain, Hotel Director and several other members of the ships staff. A wide angle shot had Anita sitting in a chair off to the side. She looked like hell. Another camera followed Wesley as he was pacing the room. He was dressed in rumpled clothes that looked like he had slept in them, and was unshaven. The Tech handed me a pair of headsets. I adjusted the volume, listening in on the middle of Wesley's rant.\n\n\"..I am not standing for any Kangaroo court. I am a US Citizen, and an attorney, so I know my rights. You cannot hold me against my will. I'll sue all your asses, and own this rustbucket. You will be lucky to be captain of a bathtub toy boat when I get thru with you!\"\n\nCaptain Sven looked bored as some papers were passed in front of him. He looked down at the papers before addressing Wesley.\n\n\"This is a Captains mast hearing not a court. You are correct, as a US citizen we cannot hold you against your will. In fact, we cannot hold any citizen, of any country against their will. However under Admiralty law, I am Master of this Vessel, responsible for the safety, and welfare of all souls aboard my ship. I have viewed the footage, and read the reports. You have attacked both my staff, and attempted to get into a physical altercation with other guests. I rule that you are a danger to both the good ship, and all aboard. There is only one sentence I am allowed to impose. You are both to be removed immediately from the ROYAL VIKING .\"\n\nWesley smacked his fist into his hand. \"Fine! Give us back our money, then get us a plane off this piss ant island. I will see your ass in an American court.\"\n\nCaptain Sven stared sternly at Wesley. \"Under SOLAS or Safety of Life at Seas, the Jones Act, and the Shipping act of 1984, all of which your country was a signature of. I have only the responsibility to set you off in a Port with adequate food, water, and living conditions.\"\n\nNow Anita spoke up. \"You cannot strand us on this Island with those nigg..those ..Savages!\"\n\n\"Mam, this part of the Island is a private resort on a long term lease from the Government of Haiti. We will set you off outside its gates, with the remainder of your fare, and personal belongings. How you arrange passage after that point, is at your discretion.\"\n\nWesley became enraged. \"NO fucking way are you going to leave us to those God Damn Niggers. They'd like nothing better then to get their hands on me.\" He pointed to Anita. \"Do you have any idea what them black monkeys would do to a white women!\"\n\nI thought \"Wow Wes, you are a walking example of never being too old to learn something stupid.\"\n\nCaptain Sven looked at Wes. He was unmoved by the outburst. \"I resent the racist comments you are making toward our Haitian hosts.\" He then held up a sealed evidence bag containing another bag with white powder. \"We have video evidence, and sworn statements of this being in your possession. Our field test kit confirms this is a banned controlled substance.\" \n\nCaptain Sven passed the bag to the Security Chief before continuing. \"If you wish, I can alert the Haitian law enforcement authorities on your unlawful pharmacology ownership. The Police National d'Hati or PNH, would arrange both transportation, and accommodations for you and your wife. However I do not feel it would not be in your best interests. Do you agree?\" \n\nWesley looked defeated, Anita started crying into her hands.\n\nCaptain Sven nodded toward the Chief of Security. \"Please make arrangements to escort these two individuals, with their belonging off the ROYAL VIKING.\"\n\nI put down my headphones, giving Zoie a crooked smile. Pulling a pack of bubble gum out of my pocket, I tossed it to one of the techs. \n\n\"Hey guys.\" I said. \"Think you can burn me a DVD copy of that?\"\n\n+++++++\n\nBetween AJ and I, it wasn't clear who was more excited about Zoie coming to visit. We played tourist every day, going to the zoo, beach, seaquarium, and South Beach. Just generally having a great time. My Mom, and Brother's family loved Zoie. Although my Sister-in-law made Zoie promise not to teach AJ any more foreign curses, as AJ was promptly sharing any \"new\" words with his cousins.\n\nThe nights were even better than the days. I had never had a women love me like that. It seemed like Zoie had just arrived, when I walked into the bedroom to see Zoie packing her bags.\n\n\"My God Zoie, is that that time already?\"\n\nZoie paused a moment folding a blouse. \"Yes Darrin, the ship returns tomorrow.\"\n\n\"Damn.\" I said leaning against the doorway. \"How did the time go by so quickly?\"\n\nZoie gave me a sad smile, than patted the bed for me to sit next to her. I could tell something was on her mind.\n\n\"Darrin, I have enjoyed much these days with you and AJ, but now I must talk at you about us.\" Zoie took my hand. \n\n\"Darrin, I will say what many ladies think, but do not admit.\" She paused to take a breath. \"I wish to have two children. I know that danger is in having baby after age 34. As you say counting backwards this means I must be making baby number two by age 33. One year between babies put me at age 32. Another year for making baby number one I be age 31. Add more year for wedding, and getting together, so we reach age 30. \"\n\nI listened in rapt attention. \"Damn Zoie, you plan out your life like a math problem?\"\n\nZoie gave a little smile. \"I now 28 years of age Darrin. I no lie to you like many females would do. I can see you would be good father to our children, and good husband to me. But I no make falsehoods to trap, or trick you.\"\n\nI could tell Zoie was stressed, as her English skills faltered when she was tense. As I started to speak Zoie held up her hand.\n\n\"Darrin, I go back to ROYAL VIKING tomorrow. The ship is leaving America to do the far Carib run, and I will not see you for these last three months of my contract. Please take the time to make your decision. If you do not want me I understand, and we will always be friends. But I must look ahead in my life. We will talk no more of this.\"\n\nZoie closed the suitcase, then left the room.\n\n++++++ \n\nIt had been almost three months since I had last see Zoie. I missed her like crazy. Now I was on a 757 airplane winging east, headed out over the Caribbean to meet Zoie, and the ROYAL VIKING. Mac was onboard, needing a part. I had almost reached thru the phone to kiss Mac when he asked if anyone could fly out. There was only one flight a week to Port Angler. I had left straight from work, not even packing any bags, promising the cab driver all the cash in my wallet if he got me to the airport in time for the flight.\n\nI was seated by a window near the rear of the plane. The plane had about 150 passengers on it, so I was lucky to have an open seat between me with a young girl at the aisle seat.\n\nWe were halfway into our six hour flight, when the young girl tapped me on the shoulder.\n\n\"Hey Mister, how'd you get internet?\" She was staring at my laptop.\n\n\"Well Honey,\" I addressed the young girl. \"This is a test plane, it's wings contain Phased Arrays that can pick up internet via satellite, not cell phone towers like most aircraft.\"\n\n\"How come you got it, and no one else does?\"\n\n\"My company is doing a trial test with this airline. I have a pass code with this memory stick to use the system.\"\n\n\"Damn Mister, I wish I had net access. I am frigging bored.\"\n\nI pulled the USB stick out of my laptop. \"My name is Darrin, we'll make a deal. You tell me your name, plus where you're going, then I'll let you use the internet for the rest of the flight.\"\n\n\"Deal!\" said the girl. \"My name is Kadie, with an E. I'm 16 years old, and I am going to meet my family on some cruise ship called the ROYAL VIKING.\"\n\n\"Well Kadie, with an E, it is nice to meet you. Is your family on board already?\" I motioned her to give me her laptop.\n\nKadie was giggling at me. \"You can just call me Kadie, but yea everyone is on board already. My Dad is some big shot political guy, they are filming a lame reality TV show about him. I didn't want to come, but Mom is making me. Says we got to support Dad. It's so stupid!\"\n\nI handed Kadie back her laptop. \"Your Mom is right, families should stick together. I think it's great you are helping out your Dad.\"\n\nKadie was already logging into a facebook page. \"Sure. Whatever.\"\n\n+++++\n\nAbout an hour was left into the flight. I was staring at the GPS display on the planes seatback screen when I got an idea.\n\n\"Kadie, let me borrow your laptop, I will show you something.\"\n\nAfter Kadie handed me her laptop. I logged onto the ROYAL VIKING web page. I turned the screen to face Kadie.\n\n\"See that?\" I pointed to the Laptop display of a real time GPS coordinate of the ROYAL VIKING. \"If the Planes GPS is accurate, we should be passing over the ROYAL VIKING in a few minutes. Heck we might see the ship out the window if there are no clouds.\"\n\n\"Cool!\" Kadie said.\n\nI nodded. \"If we had a parachute, we could jump out right on top of the ship.\n\n\"YEA Right!\" Kadie laughed.\n\nSudden a huge \"BANG! \" rattled the aircraft. The plane started to violently shake.\n\n\"Darrin, what's going on!\" Katie grabbed my hand. \"I'm scared!\" \n\n\"Me too\" I thought. Hell, I was so terrified my back six was completely closed. But I tried to assure the young girl. \"Stay calm, I am not sure what's happening Kadie. They should be making an announcement soon.\"\n\nThe Captain came over the speaker, and it was not to wish us Happy Birthday.\n\n\"Ladies and Gentlemen, I am afraid we have a major malfunction, so I need you all to listen to your flight attendants. We may need to make an emergency aquatic landing. If that happens, just please follow the Flight attendants instructions. I have sent out a distress signal, and have been assured Coast Guard help is on its way.\"\n\nThe flight attendants looked ashen, as they scurried down the aisle trying to calm passengers.\n\n\"What's that mean Darrin!\" Kadie face was dead white.\n\n\"Kadie honey, the plane may need to make a big splash in water. Looks as if we are going for a little swim.\"\n\n\"I don't want to die!\" Kadie started to cry.\n\nI took her chin in my hand. \"Look at me Kadie. You are going to be fine. You're with me, and I'm too ugly to die.\"\n\nThis brought a little giggle, with a smile from Kadie's tear streaked face. It also gave me an idea as the plane started to shake worse, losing altitude.\n\nI swiped my credit card into the satellite phone on the seatback, while searching for a phone number on my blackberry.\n\nI had to listen thru greetings and menus, pressing a series of buttons as an automated voice told me the cost of the call, making sure I acknowledged the charges. I could care less, they could bill my happy ass. If I died in the crash, they could go fish trying to collect.\n\nI punched in a series of numbers. Finally, after what seemed like an eternity, an authoritative voice I knew well answered the phone.\n\n\"Bridge this is Captain Sven.\"\n\n\"Captain Sven, this is Darrin..\"\n\nCaptain Sven broke in. \"Ah Darrin, so good to hear from you. Mac said you will be joining us in Port. Did you bring any more Aquavit?\"\n\nI could see the ocean getting closer to us through the window. \"Captain Sven listen, I don't have much time. I'm on an airplane about to crash land a few klicks from your current position.\" I rattled off the last coordinates I saw on the aircraft GPS screen.\n\nCaptain Sven became all business, I heard him yell something to his staff. He then came back on line. \"You just stay dry Darrin. We be coming faster then a Valkyrie during a thunderstorm battle. After the...\"\n\nThe line went dead. I swore to myself, than put the useless headset back in its seat cradle.\n\nThe flight attendants were still coaching everyone into position when the intercom squawked \"BRACE FOR IMPACT\"\n\n++++++ \n\nWhen I was sixteen my brother, and I, got into a really bad car accident that laid us both up for a week. That collision was like an angel kiss compared to when we hit the water.\n\nI had the breath knocked out of me, seeing stars. \n\nMy nose really hurt, there was blood streaming down my shirt.\n\n\"God Damn it!\" I swore under my breath as I touched my face. \"Broke my nose -Shit!\"\n\nKadie looked unhurt, but she was shaking like a leaf. \"What'll we do Darrin!\" Kadie was on the edge of panic.\n\nI took a deep breath. The door behind us had blown open. Thru the window I saw the emergency evacuation slide pop out. I think they doubled as rafts. I ripped out my seat cushion pulling out a yellow life vest, helping Kadie into it. Passengers were already jumping out the door.\n\nI fitted myself with a life vest, pushing Katie in front of me. As I urged her forward, I saw her crotch was stained.\n\nKatie turned to me red faced. \"I'm sorry Darrin, I am so scared I peed on myself.\"\n\nI compelled her to keep moving. \"No Worries Kadie. We're all going be wet in a few minutes anyway, no one will notice. Besides I think we are all going to need a change of underwear after this.\"\n\nThe crew was doing a great job getting everyone off.\n\nI helped some of the older passengers off, then saw no one was behind me. The water was almost knee deep in the plane. I grabbed bottles of water from the galley, throwing them out the door.\n\n\"Sir what are you doing!\" asked a frantic flight attendant manning the rear door.\n\nI continued to chuck individual water bottles, then entire cases of bottled water into the ocean outside. \"It's hot out there Honey. We can't drink seawater.\" I persisted in my looting of the galley liquid supplies-soda, juice, milk, whatever would float. \n\nA man with pilot wings sloshed toward us. \"Get the hell out!\" he waved at us. \"Everyone else has evacuated.\" He turned jumping out the door.\n\nI motioned toward the open hatch at the flight attendant. \"Ladies first,\" Then I shoved her out the door, before jumping myself.\n\n+++++++\n\nAn old pilot axiom is the any landing you can walk away from is a good one. I wonder if the same applies for a landing you swim away from.\n\nOne of the plane's wings was torn away, but the body of the plane was still intact. Our pilot had certainly earned his pay. He had done a magnificent job to bring down the plane in one piece. I saw of the six inflatable emergency slides, five had deployed, and were being used as rafts, although two were deflating.\n\nIt looked like about 150 of us were floating around, with most people on the slides/rafts. The rest bobbing in life jackets, and holding onto buoyant seat cushions. I saw Kadie, then swam over to her, she looked terrified.\n\n\"Hi Kadie!\" I tried to put on a brave front. \"Boy are we lucky! You know how much people pay to go on deep sea excursions?\"\n\nKadie gave me a weak smile. She was hanging onto a side of an inflated emergency slide. I gave her a boost, pushing her into the slide/raft to join a group of passengers there.\n\nThe sea around us was filled with floating seat cushions, with other debris. The water was calm, but the biggest issue seemed to be the current pulling everyone apart. It was separating us into small groups. The crew of the plane was trying to keep everyone together. \n\nAbout an hour went by. I swam around, gathering up the bottles, and cans tossed from the wreck. I handed out armfuls to various groups of passengers, trying to keep their spirits up by telling every bad Cruise Director and Entertainer joke I could remember from onboard.\n\nPaddling up to the slide/raft Kadie was on, I tossed a bunch of cans of soda, and juice into her lap. Plastering a big smile on my face I said \"Miss Kadie, here is your order. That will be six dollars, and eighty five cents \u2013not including tip.\"",
        "As others in the makeshift raft passed around the drinks, Kadie gave me a strange look. \"Darrin are we stranded out here? Are we gonna die?\"\n\n\"Kadie I told you, you're with me, and I am too ugly to die. The Captain said the distress signal was sent out, so the coast guard should be here soon. But my money is on the ROYAL VIKING.\"\n\nKadie seemed to ignore my answer, scanning the ocean. \"Yea OK. But what about sharks?\"\n\nI looked around, it was a hot day. Most people had removed their shirts, holding them up as temporary sun shades.\n\n\"Kadie don't worry. Sharks don't come out this far mostly because they prefer colder water. Besides since 1997 there have been less than six shark attacks in the Caribbean. Generally sharks don't attack people. This isn't the movie 'JAWS'.\"\n\nOf course, I had never even seen a shark in my life, until a few months ago at the Miami Seaquarium. All I knew about sharks is what I had seen on the DISCOVERY Channel, during their \"Shark Week\" marathon.\n\nI heard a noise off in the distance. I looked to the sky, it was clear with no clouds, so it could not be thunder. Then Kadie shaded her brow with her hand. Peering out with her younger eyes, I saw her spot something.\n\n\"IT\"S A BOAT! IT'S A BOAT!\" Kadie screamed, jumping up on the slide/raft, promptly falling overboard with a splash. Suddenly everyone was pointing, and shouting. Off in the distance a white looming shape could be seen cresting the horizon.\n\n\"That ain't no boat! I yelled. \"That's a ship! That's the ROYAL VIKING!\"\n\nA prettier sight you have never seen as the ROYAL VIKING steamed toward us. Captain Sven was putting on quite a show. Blowing the ships horn, shooting off flares, the whole nine yards! I do not know if it was happiness, or the saltwater, but I had tears in my eyes.\n\nEveryone was screaming, waving their arms as the ROYAL VIKING approached. When the ship got about two hundred yards away, she slowed, turning to show us her portside.\n\nKadie was frantic. \"Why are they stopping! They're not going to leave us!\"\n\nI patted her shoulder. \"Calm down Kadie. Just watch.\" I knew what was coming.\n\nWe stared in amazement as the ROYAL VIKING performed a complicated ballet, that was carried out with military precision. This was no Italian ocean vessel; Captain Sven came from a long line of professional Nordic seamen, stretching back to the Viking days. He took his duties seriously, tolerating no errors. I had seen Captain Sven personally oversee countless drills, making sure his crew knew their jobs, backwards, forwards or blindfolded. Soon large orange topped boats, manned by lifejacket crewmembers were lowered, launched simultaneously in the blink of any eye.\n\nA dozen of these boats sped toward us in an arrowhead formation. I saw the familiar face of my boss Mac in the lead craft, standing by a tall white haired man, next to a guy with a video camera. The ships decks were crowed with waving, cheering passengers, and crew. From all the flashes it seemed every single one of them had a camera of some sort.\n\nThe ships tenders formed a ring around us, than began plucking soggy, but grateful plane passengers, and crew from the water.\n\nNow that the waiting and tension was over, I actually began to enjoy myself. Swimming in the warm waters, I helped others onto the Rescue crafts, backstroking from group to group. After a while, just about everyone was out of the water.\n\nAs I approached the lead boat, I saw Mac staring down at me. \n\nMac had that grin on his face. \"Darrin, you daft bastard. Get in the god damn boat.\"\n\nI was about to grab onto his extended hand, when I saw the white haired guy shouting, and waving. I turned, seeing Kadie had drifted off from the group, about twenty yards away. I let go of the ladder, starting to swim after Kadie.\n\n\"Darrin, you bloody fool!\" I heard Mac's voice behind me. \"Get your ass back here.\"\n\nI reached Kadie, who was floating on her back. As I grabbed onto her lifevest, she turned, giving me a pouty smile. In a little girl voice she said. \"Ah Gee Mister, do I gotta go now? I want to stay and play in the pool some more.\"\n\nFor someone, that an hour ago had wet her pants in terror, Kadie sure had changed moods. Typical teenager!\n\nI laughed. \"Come on they're waiting for you.\" Spying a movement behind her, my blood froze.\n\n\n\nTwo dorsal fins were knifing thru the water approaching us. I tried to stay calm, but my heart started beating a million times a minute.\n\nNow I do not care how many awards DISCOVERY Channel's \"Shark Week\" won, I was not willing to bet our lives on a TV program. \n\nI ripped off Kadie's flimsy lifejacket. \"Kadie, quick! Get on my back, than hold on! NOW!\"\n\n\"But why?\" Kadie said. Then her eyes opened wide, as she saw the oncoming fins.\n\nKadie was not the only one who saw the sharks. Everyone in the lifeboats were pointing, and shouting.\n\nMac started yelling. \"Swim you son of a bitch! Fucking HURRY your bloody arse!\"\n\nI needed no inspiration, racing toward the boat, swimming faster than any Olympic gold medalist. Something large bumped against my abdomen, I almost let go my bowels.\n\nI was almost there, just a few yards away. As the distance closed, people on the boat were screaming themselves hoarse. Everyone was shouting encouragement, as if it were the last leg of a relay race at a swim meet. I caught a glimpse of the white haired guy franticly screaming out Kadie's name.\n\nMy hand touched the side of the boat. Mac was hanging upside-down from the ladder. He yanked Kadie off my back with one hand, flinging her over the side, into the boat.\n\nI actually felt Macs hand on mine, than something chomped into my left leg, pulling me under the water..."
    ],
    "authorname": "cpete",
    "tags": [
        "travel"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/ugly-american-ch-02"
}