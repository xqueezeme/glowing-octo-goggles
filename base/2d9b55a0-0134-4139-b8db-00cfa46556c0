{
    "title": "Earth - Tentacle Breeding Ground Ch. 04",
    "pages": [
        "Note from the author: If you have been enjoying this story strictly for the tentacle sex, then you may find this chapter somewhat disappointing. That said, I think it's still definitely worth a read in order to get to the next part, for which someone asked me, \"How much tentacle alien sex is there in part 5?\" and I replied, \"Yes.\" As always, thanks for your feedback and support!\n\n***\n\nCold drops of rain began to patter on the nearby pavement as Sarah and the rest of the group continued to creep through abandoned yards and streets, trying to put as much distance between themselves and the creatures raiding their previous home. They all came to a stop behind some shrubs along the yard of a modern-looking mansion, gasping for breath and wheezing on their knees from the exertion of sprinting for almost 5 minutes straight.\n\nSarah collapsed to the grass with a wet thud, clutching at the stitch in her side. Her legs felt like jelly, her dry throat screamed out for liquids, and her chest was on fire from her large breasts widely bouncing during the run. She chastised herself for not wearing a sports bra, but then again, why would she have thought to wear one to class in the first place? She tried to reach her sore back to massage it, but she was too tired to apply ample pressure. She let out a frustrated sigh, opening her mouth and looking up to the clouds in an attempt to catch some precious drops of water on her dry tongue.\n\nSuddenly, she felt a pair of firm, strong hands press into her shoulders, and two thumbs between her shoulder blades. The hands squeezed into her tight muscles and instantly relieved some of her pain and stress. She looked over her shoulder to see Adam behind her, trying to maintain a serious, neutral, expression while he massaged her shoulders. She closed her eyes and relaxed her muscles as he did his best to apply the right amount of pressure through her lab coat.\n\n\"Mmmnn... that feels nice...\" Sarah murmured. \"...Th-thanks...\"\n\n\"I noticed you seemed to be in some pain,\" he replied, blushing a bit. \"It's better if everyone is in top shape, right?\" He sounded like he was trying to convince himself. The rain had begun to push his dark hair messily over his face, highlighting his stormy grey eyes. Sarah wasn't sure if her heart was beating this fast because of the intense exercise or if it was due to... something else.\n\n\"Hey!\" Steven loudly gasped. \"I'm hurting here too, man! Why don't I get a massage!?\"\n\n\"Shush up, moron!\" Zoey slapped her brother. \"Do you want those things to find us again!?\" She was clearly better at reading the mood than he was, seeing as she had just been wearing a knowing smile only a moment before while watching the two professors interact. \n\n\"If it is muscle strain that you need assistance with,\" A'luhr said to Steven while calmly breathing, \"I know several pressure point techniques that might help. Though they were designed for members of my species, I believe they will be sufficient for use on your human tissue as well.\" She turned to Steven, extending her delicate-looking hands that still managed to radiate an inhuman strength. Her sudden motion made her voluptuous bosom jiggle within her skin-tight suit, causing Steven to instinctively glance down at her ample assets.\n\n\"Y-yeah...!\" Steven eagerly replied, still struggling to control his breathing. \"That... that would be nice!\" He turned around to reveal his back to the alien woman. She shuffled towards him, hands at the ready, but just before her soft chest could press into his trembling back, Zoey pushed between the two.\n\n\"Here, allow me,\" Zoey said in an icy voice. She reached out a hand and deliberately put a tight squeeze between his shoulder and neck, causing him to wince and jerk away in pain.\n\n\"Ngh! Hey! Not so hard!\" Steven complained. \"I need a soft touch!\"\n\n\"Yeah, I'm sure you do.\" Zoey glared at him, stealing some annoyed glances at A'luhr's shapely breasts.\n\n\"Hmmnn...! Yeah... that's good...\" Sarah lustfully moaned next to them, still being massaged by Adam and clearly lost in the sensation. Her relaxed eyes quickly shot open and she covered her mouth in disbelief that she had just uttered such a lewd noise in front of the rest of the group.\n\n\"Do you two need to find a room?\" Steven asked dryly, with a look of jealousy and annoyance on his face.\n\n\"Erm... I think I feel good now, thanks.\" Sarah gently croaked, awkwardly pulling away from Adam's touch. \"We... actually should find a room though. The rain is really starting to pick up.\"\n\n\"Yeah. We should.\" Adam grumbled. He turned and shot a bloodcurdling glare at Steven, who didn't notice it. He was busy looking up at the house they were in front of.\n\n\"We could always crash here.\" Steven suggested. \"Looks like the owners aren't around.\" Sarah inwardly agreed, finding that to be a pretty reasonable assumption, seeing as there was a large hole in the side of the building leading to what appeared to be a dining room. There were still several cars in the parking lot, so either anyone living here had been taken away by the Krinis without having the chance to drive away... or they just had a lot of cars. It was hard to know for sure. There were certainly no signs of life inside, nor anywhere else for that matter.\n\n\"We could try and keep going,\" Zoey suggested. \"Did you notice that we haven't seen a lot of Takers out on the streets? I wonder wh-\"\n\nKRAKOOM!\n\nAn ear-splitting rumble of thunder shook the sky and the rain started to pour down harder in a deafening torrent. Everyone scrambled to their feet and ran towards the mansion's porch for cover. They huddled near the doorway and began to fix their hair and squeeze the water from their clothes before noticing that A'luhr was not with them.\n\n\"The Krinis must be hiding from this loud weather phenomenon!\" A'luhr shouted through the din, still standing in the yard. Her long silver hair fell back against the rain and she happily ran her hands through it, sending droplets of water flying. \"The sound must interfere with their tracking ability; I have never seen anything like this!\" She held her arms out and spun in circles. \n\n\"So much water!\" A'luhr looked up into the falling raindrops and smiled in amazement, reaching her hands up to feel the impacts on her skin. She let out something akin to a laugh and seemed to savor the feeling before speaking again. \"We should take this opportunity to rest here. They will not be able to locate us within the cacophony of these falling drops of water and exploding clouds! If only we had such natural events on my own planet... maybe we would have had more of a chance...\"\n\nThe child-like glee faded from her face as she recalled painful memories. She quickly brightened up again as a mild rumble of thunder echoed overhead. \n\n\"Why are you all hiding from this fantastic sensation!?\" A'luhr yelled over to the rest of the group. \"Certainly we can take a few moments to enjo-\"\n\nKRRRRACKKKKOW! \n\nA powerful clap of thunder shattered the air as a huge thunderbolt streaked through the sky, illuminating A'luhr's suddenly terrified eyes. She let out a surprised yelp and scrambled over to where the humans were amusedly watching her.\n\n\"I...\" She gasped. \"I did not know that such deadly things would be waiting to catch me off guard! I admit that I am impressed your species managed to survive this long within this extreme environment.\" No one explained the storm to her. Instead they just giggled a bit and began to quickly move around the side of the house towards the large hole in the wall, seeing as Steven had already found the front door to be locked.\n\n\"Everyone in!\" Adam yelled as they approached the gaping wound in the wall. The wind had picked up and was sending various objects flying around the exposed dining room. Seeing the chaos inside, the group hesitated to enter. However, the rain started to come down even harder now, so waiting was no longer an option. They all carefully stepped through the splinters of the wall and their billowing clothes dripped with water.\n\nSarah ducked to dodge a painting that was knocked from the wall and ushered the rest of the group across the room and through a pair of French double doors that lead further into the house. She noticed piles of rotting, uneaten breakfast food on the floor next to several smashed dishes. Sarah had to assume that the people living here were captured while enjoying their breakfast.\n\nThe wet spray of rain and howling wind came to a stop once they got to the hallway and Sarah closed the doors behind them, keeping the almighty power of nature contained to just the dining room. They shook their limbs to get off the excess water and laughed in relief now that they finally felt safe again.\n\nSteven whistled, \"Wowee look at this place. I mean, our house was nice, but this place is NICE.\" The mansion's halls spread out in all directions, with numerous doors lining the walls and several abstract art installments positioned in strategic spots. The fancy carpet beneath their feet had already been totally ruined from exposure to the rain, but it was still likely more valuable than anything Sarah owned.\n\n\"We should take stock of what provisions and supplies we have here,\" Adam said, wiping his wet hair from his face while his beard dripped water to the floor. Sarah absent-mindedly bit her lip seeing this. She had to force her wandering eyes away from the wet bulge in his grey sweatpants, pressed tight around his legs from the rain. She coughed to clear her thoughts.\n\n\"I-I'll go look for towels or something for us to dry off with...\" She stuttered.\n\n\"I'll help!\" Zoey quickly chimed in.\n\n\"Great,\" Adam responded, \"Steven you're with me, then. Let's go find some food and anything we can use for tools or weapons. A'luhr, you go-\"\n\n\"I shall search the perimeter of this large domicile to ensure that it is secure,\" she cut him off. \"If I encounter danger, I will signal to the rest of you. Stay alert.\" She brandished her daggers and walked off down the hall, checking corners as she went. \n\n\"Y-yeah... do that.\" Adam sheepishly mumbled.\n\n\"C'mon, let's go find the kitchen!\" Steven said, clearly excited to go exploring. He jogged down the hall and Adam hurriedly rushed after him.\n\n\"Let's go check upstairs, hm?\" Zoey suggested. She grabbed Sarah around the arm and yanked her towards the nearby grand staircase that spiraled up to the next floor. As they climbed up the marble steps, she turned and gave Sarah a coy smile. \"So... Professor Sparhawk, huh?\"\n\n\"E-excuse me?\" Sarah responded, flustered. \"We're just colleagues, that's all!\"\n\n\"Mmm... I'm sure.\" Zoey rolled her eyes knowingly. \"Please, I see the way you've been looking at him lately. You're so into him!\" She shrugged. \"He's a bit rough around the edges, but you could do a whole lot worse.\"\n\n\"I mean... he's certainly... easy on the eyes.\" Sarah admitted. \"But now is not a great time to begin a relationship.\" She sighed. \"Not that I had time for one before all this anyway...\"\n\n\"Now's the perfect time!\" Zoey squealed. \"Think about it - we don't know what tomorrow is going to bring, so stop hesitating and go get what you want!\" \n\n\"I thought I was supposed to be the teacher here.\" Sarah joked, laughing appreciatively. \n\n\"You may have an advanced degree in biology, but you still don't understand your own heart,\" Zoey replied. \"It's more common than you think. I read a lot of romance novels.\"\n\n\"Really?\" Sarah asked in surprise. \"Don't take this the wrong way, but you tend to come off as a bit... innocent.\"\n\n\"W-well...\" It was Zoey's turn to be flustered. \"Reading pretty words on a page isn't quite the same thing as witnessing a bunch of aliens impregnate people...\" She coughed in embarrassment.\n\n\"Fair enough. What about you, then?\" Sarah slyly probed. \"Are there any strapping young men that caught your fancy back in school?\"\n\n\"Wh-what does that matter anymore? There aren't many strapping young men in the area nowadays, in case you hadn't noticed!\" She looked away in embarrassment. \"Umm... hey let's try this door!\" She changed the subject and started moving down the hall, opening doors to peer inside as she went.\n\nSarah laughed and followed after her. She had considered splitting up to cover more ground, but she had seen enough horror movies to know that it was always better to stay in a group. She checked the rooms on the opposite side of the hall from Zoey, revealing several bedrooms, some offices, a den, a game room, a room full of musical albums on display in glass cases, and several other such spaces, until eventually they found what they were looking for.\n\n\"Here's a bathroom!\" Zoey said, pushing the door fully open. It was rather dark inside as the heavy rain running down the solitary window blocked out most of the dim sunlight. Zoey felt around for a light switch, found several, and flipped them all on and off several times. Nothing happened. \"The power must be out.\" She sighed. \n\n\"All the more reason to work quickly before night falls,\" Sarah replied. She started to rummage through the cabinets in the room, taking a few moments to admire the fancy, multi-headed shower and gigantic Jacuzzi in the corner. Zoey tried some of the taps in the sink. They sputtered out dirty water for a few seconds before running dry.\n\n\"It was worth a shot,\" she moaned. \"Man, I'd kill for a hot shower.\"\n\n\"You and me both.\" Sarah agreed. \"Ah here we go - get a load of these fluffy towels!\" She playfully threw a large, soft towel at Zoey, which hit her in the face, knocking her glasses off. \"Oops! Sorry! I meant for it to hit lower!\"\n\n\"I'll forgive you some day,\" Zoey replied with a laugh, picking up her glasses and pressing her face into the comforting folds of the towel. \"This is a good way to start getting back into my good graces!\" She wrapped her still-soaking hair up in the absorbent cloth as Sarah began to produce more items from the cabinets.\n\n\"Zoey! Look!\" Sarah shouted excitedly.\n\n\"What!? What is it!?\" Zoey frantically pulled another towel away from her face to look at what Sarah was holding in her hands. Sarah grandiosely flourished several unopened boxes of menstrual sanitary products.\n\n\"I know Adam meant well with his bunker... but it was clearly not made with women in mind, as you probably realized.\" \n\n\"Oh god...\" Zoey whispered, almost in tears. \"No more having to burn through wads of single-ply toilet paper...\"\n\nThe relieved women celebrated for a short while before gathering up several towels and puffy white bathrobes. \n\n\"Let's get out of these soaked clothes and enjoy these beauties!\" Sarah suggested, passing Zoey a robe.\n\n\"I could get used to this!\" Zoey replied before going into the shower and closing the frosted glass door behind her. Even though Sarah couldn't make out Zoey's blurred form whatsoever, she still politely averted her eyes.\n\n\"I'm going to quickly change out here while you're in there, okay?\" Sarah said, starting to slip off her drenched lab coat.\n\n\"Mm'kay,\" Zoey answered in a muffled voice, struggling to get her waterlogged hoodie over her head.\n\nSarah pulled off her own wet t-shirt and stepped out of her grass-stained sweatpants, socks, and shoes. She chuckled at the pitiful sight of herself in the mirror. Crazy, unkempt hair, blue checkered boxer shorts, and a plain white bra that was getting more and more stretched out by the day. \n\nShe glanced over her shoulder to make sure Zoey was still in the shower before letting the bra straps slide down her shoulder, spinning the whole thing around her chest 180 degrees, and then unclasping it to allow the well-worn garment to fall to the floor. Her plentiful breasts gently spilled out as she savored the delicious feeling of no longer having an underwire digging into her sensitive skin. She ran her fingers over the indents on her shoulders left by the tight straps and groaned in relief.\n\nApproaching the mirror, she studied herself again, grabbing a nearby comb and attempting to wrestle her hair back into a respectable shape. She had mixed success. Wrapping her arms around her chest, she gently squeezed her boobs to make them bulge slightly.\n\n\"I'm still attractive... right?\" Sarah thought to herself. She wondered what Adam would do if he walked in on her right now. Would he be shocked and turn away in embarrassment? Or would he tenderly join her, delicately using his skillful hands to do more than just massage her shoulders? She shuddered at the thought.\n\n\"Hey, are you almost done?\" Zoey asked through the shower door.\n\n\"Ah... yeah! One sec!\" Sarah hastily replied, being yanked from her fantasies. She decided to keep the boxers on as they weren't too wet, but she kicked the rest of her piled up clothes to the side as she slid the robe over her otherwise naked body, rejoicing in the sensation of being swallowed up by clouds. \"Okay, I'm decent.\"\n\nZoey cautiously exited from the shower holding her dripping clothes. Sarah noted that her underwear was not included in the pile, so she must have been too shy to remove even just her bra. Sarah completely understood. She remembered how awkward stuff like this was at her age. \n\n\"Here, give me your stuff and I'll hang them up to dry.\" Sarah said, taking the articles of clothing from Zoey and draping them over a nearby drying rack alongside her own garments. As she did so, something next to the jacuzzi caught her eye. \"Ooh! Candles!\"\n\n\"Nice! Now we can set up a romantic dinner for you and Professor Sparhawk!\" Zoey teased.\n\n\"Orrrr,\" Sarah slowly responded, rolling her eyes. \"We can just use them as regular light sources.\"\n\n\"I guess.\" Zoey blew a raspberry. Sarah laughed. Zoey looked too adorable in her current attire. She had removed the towel from around her head and let her ponytail down, allowing her golden bangs to wildly cover her face. The robe was a size or two too large, so she was practically swimming in a sea of fluff. Her glasses were also slightly askew, but she fixed them as she brushed the strands of hair from her eyes.\n\n\"Let's go show the boys what we found,\" Sarah chuckled. With that, they headed back the way they came, carrying their discovered treasures with them. The sounds of their idle chatter were washed away by the pounding rain outside.\n\n***\n\nThe sun had only just started to set but it was already getting pretty dark due to the thick clouds in the sky. The storm continued to rage outside while the group sat around a large coffee table in the living room. Flashes of lighting occasionally illuminated the various bookshelves and furnishings around them, but the atmosphere was warm and cozy due to the several candles they had lit.\n\nAdam and Steven had managed to find some lighters among an impressive collection of BBQ equipment near the back door, along with a couple of flashlights, so their worries that they would have to spend the night in total darkness were put to rest. They also still had their phones, but now that their only reliable source of electricity had been lost, they needed to use their charges sparingly.\n\nEveryone sat around on the couches and chairs in their comfy bathrobes, reveling in the delightful feeling of finally being dry and able to lounge in comfort after such a disastrous day. A'luhr had initially hesitated to strip out of her bodysuit, despite it already being considerably damaged, as it efficiently carried what remained of her equipment. However, once she touched the plush sleeves of the robe, she quickly changed her mind. She had started to strip naked in front of everyone before Sarah quickly spun her around and pushed her into a side room, instructing her to get changed away from the curious gazes of the men.\n\n\"So this is what we have to work with,\" Adam said, arranging some of the items that he and Steven had collected onto the coffee table. \"There's an entire pantry full of bottled water. I guess the rich folk here didn't like tap or filters. We found a few days worth of canned and dry food, but most of it was rotten in the dead fridges and freezers. We might be able to boil some of the bottled water over the propane grill in order to cook pasta and stuff, but we should use that sparingly.\"",
        "\"It doesn't seem like we will be in danger of starving over the next couple of days,\" Sarah remarked. \"But we might need to consider the possibility of locating other food sources pretty soon.\"\n\n\"Mm,\" Adam agreed. \"We can search other houses around here, but to be honest, I'm nervous about moving around too much now that the enemy knows our general location.\"\n\n\"Are we even gonna' be safe staying here, assuming that's the plan?\" Zoey asked. \"This place clearly didn't hold up at all against the monsters.\"\n\n\"Good question,\" Steven replied. \"I think these might be able to help!\" He flopped a large piece of black styrofoam onto the table. \"Check it out! Acoustic dampening pads! It looks like whoever owned this place was some sort of recording artist. They've got tons of this stuff lying around and even several recording rooms already lined with it!\"\n\n\"The Krinis would easily penetrate this flimsy material,\" A'luhr sighed, poking at the porous slab of foam.\n\n\"It creates nearly soundproofed spaces,\" Steven explained. \"Seeing as they primarily hunt via sound and vibrations, I figured that these could create some safe areas around the house - at least covering enough of the space for us to comfortably live in for now.\"\n\n\"Ah, I see!\" A'luhr exclaimed. \"Very clever!\"\n\n\"Well... I use them myself at home when I stream.\" Steven grinned, blushing from the compliment. \"Maybe that's why I wasn't found in my bedroom back then.\"\n\n\"We should install these in strategic locations around the house while it's still storming out,\" Adam suggested. \"We only have, at most, a couple hours of sunlight left in the day and it will be difficult to do this in candlelight... so let's quickly get to work people.\" \n\nEveryone agreed and started to grab armfuls of the styrofoam pads. Steven demonstrated how these particular types had adhesive strips on the back for easy installation and how to best position them on a wall before the group split up to soundproof the most important, connected rooms and halls.\n\nAfter almost two hours of working tirelessly, they finally managed to apply the dampeners around a relatively small but spacious segment of the large mansion, even allowing for them all to finally have their own bedrooms. They reconvened in the living room, guided by their flashlights, and ate a delicious meal of nuts, crackers, canned vegetables, and jerky. It was simple, but compared to the endless meals of just canned food they had endured over the past two months it was fine cuisine.\n\n\"Well,\" Adam spoke up after they had finished eating. \"As much as I'd like to stay up and keep talking, we should probably hit the hay so we don't waste precious light source fuel.\"\n\n\"I do not think now is a good time for combat training, but if you insist...\" A'luhr slowly responded in an unsure voice.\n\n\"He means we should go to sleep.\" Zoey giggled lightly.\n\n\"It is ridiculous how often knowing the words of your language does not aid in comprehending it,\" A'luhr sighed, shaking her head. \"I agree, then. Today has taken a great toll on our minds and bodies. When the sun arises, we can begin to formulate future plans.\"\n\n\"I could definitely sleep,\" Sarah agreed, stifling a yawn. \"These robes almost made me nod-off a few times already.\" She buried her face in her soft sleeves and almost salivated at the thought of sleeping on a high quality pillow tonight. \n\nAfter cleaning up their dinner, the group all split up and went to their separate rooms. They were all well stocked with large beds covered in luxurious sheets and blankets, vanities, walk-in closets, shelves, televisions and like. Assumedly the old owner enjoyed having several guests over at a time. Sarah sat on the bed in her robe, listening to the rain strike against the large window and watching the lightning outline the distant city skyline. \n\nShe sighed deeply. Today had not been particularly good. They had failed to stop the alien creatures, lost their home, and had been betrayed by old friends... even though they clearly weren't in their right minds. She fell backwards onto the bed and stared up at the ceiling, watching the shadows cast from the candle on her bedside dance around the room.\n\n\"We don't know what tomorrow is going to bring...\" Sarah murmured Zoey's words from earlier back to herself. She used to bemoan being stuck in the endless cycle of work and bills a couple months ago, but now she wanted nothing more than to hear her 6AM alarm going off and be able to start the day with a hot shower without having to worry about tentacles ravaging her naked body.\n\n\"Hmnn...\" Sarah moaned slightly at the thought, realizing that she was slightly aroused. She was tired of feeling this way. Ever since she had been toyed with by the Krinis she had felt enslaved to that sensation... to them. She needed to take control back, and for the first time in months, there wasn't an 18-year-old girl sharing the bedroom with her. \n\nSarah started to slip a hand down into her robe and towards her tingling crotch, spreading her thighs to give herself access to her most intimate area. Her questing fingers were briefly obstructed by the elastic waistband of the boxer shorts Adam had leant her. Now with him on the mind, she hesitated to go any further. She gulped and looked around the room at all the sound-dampening pads, finally finding her resolve.\n\n***\n\nAdam lay in the large bed, tossing and turning in the darkness. He had removed the bulky robe to put on a pair of boxers and an undershirt that were in one of the room's drawers, but the unfamiliar fabrics and sheets made it difficult for him to fall asleep. His mind endlessly replaying the day's events didn't help much either.\n\nHe had lost the bunker that he had put countless hours into building, failed to conceive any new, effective plans, and had made a fool of himself in front of Sarah in her time of need. He pressed his palms to his face and groaned in remorse. He just needed to sleep this off. A new day would dawn and then they would take things one step at a time. \n\nHe had been trying his hardest to control himself around his attractive female colleague, whom he had been mildly crushing on since they had been in faculty orientation together several years ago, but he felt himself slipping as time went on. He knew that now was not the time for relationships, but whenever he watched her intensely stare at the monitors to take notes, scrunch up her eyes to giggle, or fiddle with the ends of her hair as she pondered some new discovery, he felt his pulse quicken. Even thinking about it now made his heart beat so loudly that it seemed to be leaving his chest.\n\nHe turned to face the closed door of his room, realizing that the beating sound was actually a delicate knocking at his door. He hurriedly fumbled to find the flashlight next to the bed, scared that something had happened.\n\n\"Y-yeah? What's up?\" He yelled across the room, having to raise his voice over the thunder. The door slowly creaked open and a beam of light shone onto his blinking face. \"Who-?\" He started to say.\n\n\"Shh...\" Sarah's voice whispered from behind the light. \"It's just me. D-do you mind if I come in...?\" Adam blankly stared in her direction, not sure if he should promote what he thought... what he HOPED... was going on here. He gulped. But before he could contemplate for long, he heard himself say,\n\n\"Yeah... of course. I couldn't sleep anyway.\"\n\n\"Me neither,\" Sarah replied in a relieved voice. She slipped into his room and closed the door behind her with a gentle \"click\". \n\nAdam lit a couple of the candles next to his bed using his lighter and sat up, swinging his legs over the side of the mattress and patting a spot next to him. He immediately blushed at how forward that must have looked, hoping that the relative darkness of the room hid his red face from Sarah's approaching eyes. \"Th-there's also a chair there, of course,\" He coughed, gesturing to an easy chair near the foot of the bed.\n\nTo his surprise, Sarah sat down next to him where he had patted. He felt he weight compress the mattress and threaten to pull his body towards hers. She fidgeted nervously. They sat in an awkward silence for a moment before both inhaled to speak at the same time. She spoke first, however.\n\n\"S-so... what was keeping you awake...?\" Sarah probed.\n\n\"Just... well... today, you know?\" He sighed and let his shoulders fall forward.\n\n\"Are you sure it's not because you're...SCARED OF THUNDER!?\" Sarah suddenly whipped her head towards him and shone her flashlight under her chin, casting creepy shadows all along her lightly freckled face. The effect was far from terrifying, however. \n\n\"So, you figured me out!\" Adam chuckled. \"I guess you ARE as smart as you look!\"\n\n\"Oh? I didn't realize you paid attention to how I look?\"\n\n\"Err... well, I mean...\"\n\n\"I'm teasing you, you goof.\"\n\n\"R-right,\" he chuckled. But then he sighed again, a troubled look souring his angular face. \"What are we going to do, Sarah...? All I can think about is-\"\n\nSarah shushed his words by putting a finger to his lips.\n\n\"Enough,\" she said gently. \"We don't know what tomorrow will bring, at least not with the information we have now, so let's not worry about all that... at least just for tonight, okay?\"\n\nHe didn't know how to respond. He was enraptured by the soft glow of her face only a couple of feet from his own. The flickering flames of the candles highlighted the crimson hues of her hair that had now grown past her shoulders and the light made her eyes glisten in the darkness. \n\nSarah stared back at him, slowly withdrawing her hand from his lips and placing it on his knee, giving it a comforting squeeze. The feeling of her warm skin pressing against his own began to slowly melt all the pent-up stress inside of him. Though he realized he was sitting next to her in just his underwear, he didn't feel embarrassed. If anything, he felt emboldened.\n\nAdam hesitantly placed his palm on her soft cheek and gazed deep into her moist, emerald eyes, which she gently closed after feeling his touch. His hand trembled as he ran his thumb delicately back and forth over her skin, clearly hesitating to go any further. They both sat that way for almost a minute, simply appreciating the feeling of each other. Sarah wondered if Adam could feel her pulse pounding through her cheek, as she could certainly hear it in her ears. \n\nSarah slowly mustered up some courage and decided that if Adam wasn't going to make a move, then she would. She was done dancing to someone else's tune. Sarah gently opened her eyes and looked into Adam's. His penetrating gaze was both tender and powerful at the same time. She wanted more.\n\nShe gulped softly and very slowly reached up to grasp his outstretched wrist, carefully guiding it from her cheek and down into the loose top of her robe. Her heart felt like it was about to burst out of her chest as she directed his palm to gently cup her warm breast. The rough skin of his fingers passed over her nipple, causing it to stiffen from the sudden sensation. Sparks of electricity danced under her skin, causing her lips to slightly part with a sudden, sharp intake of breath.\n\nThis sound broke whatever spell was holding the two of them back. In unison, they both leaned forward and shared a kiss. It was gentle at first, but soon became deeper and more aggressive as they gave into their passion. Adam began to gently squeeze Sarah's supple breast in his hand, only removing it when he had to raise his arms due to her lifting the undershirt off over his head to reveal his toned chest to the candlelight. Her eyes appreciatively scanned his half-naked body.\n\nSarah then loosened her robe and let it fall down to her waist, suddenly exposing her generous, ample bosom to the night air. The candlelight danced around her pale globes and cherry-pink nipples, casting erotic shadows of their shapes around the room. She bit her lip in delight as Adam's large hands reached up and gently cupped her breasts, massaging them and teasingly circling his thumbs around her areolas. \n\nSarah ran her own trembling fingers along Adam's pecs, lightly scratching at his chest hair and sliding a hand down his abs, following the soft trail of hair that led beneath his boxers. Before she could get lower, Adam suddenly flicked at her erect nipples with his thumbs, causing her to flinch and let out a gasp as she felt them harden even more. She leaned forward and rested her forehead on his shoulder, enjoying his delicate ministrations. \n\n\"I... I've wanted to tell you how I feel about you for a while now...\" Adam whispered into Sarah's ear, still gently kneading her nipples between his fingers and enjoying the small moans escaping her lips.\n\n\"Mmm... m-me too...\" She breathed, inhaling his scent. \"It just... didn't seem like a good time...\"\n\n\"Well, then... let's MAKE it a good time.\" He smiled and nibbled on her ear, forcing another moan from her. \n\n\"OhhhhOOOP?\" Her aroused sigh turned into a surprised squeal as Adam suddenly held her by the shoulders and pushed her back onto the mattress, causing her boobs to wildly jiggle and her hair to spill all over the pillow. He nimbly undid the sash around her waist and delicately peeled the robe away from her hips. \n\nAdam was clearly expecting to be greeted by the sight of her delicately trimmed mound. What was revealed instead caught him by surprise and made him chuckle. He smiled down at her as she blushed and hid her face with her hands.\n\n\"You've really taken to this style, huh?\" He teased, patting the pair of his boxer shorts that she was still wearing. \"You have good taste!\"\n\n\"Shut up!\" She laughed and hit him with a pillow. He caught it and yanked it from her hands, throwing it to the floor.\n\n\"You've been disarmed!\" He declared. \"Now, to be disrobed!\" She rolled her eyes but leaned back against the remaining pillow without replying, allowing him to grab either side of her waistband. He slowly slid the boxer shorts down her creamy, smooth thighs, aided by her arching her back to lift her butt up off the mattress. Finally, the garment fell to the floor next to the bed and Sarah was completely naked in front of his eyes, her fair-skinned body practically glowed in the candlelight.\n\nHe looked down at her from his kneeling position, simply admiring her for a moment.\n\n\"...What?\" Sarah hesitantly asked. \"D-do I look okay...?\" She was decently confident with her body, but it was still always nerve-wracking to reveal herself to a new partner. \n\n\"You're even more beautiful than the drone...\" He smiled, and then faltered. \"Err... that sounded more romantic in my head...\"\n\n\"No, no,\" She giggled. \"You're doing great. Tell me more.\" She expectantly crossed her arms under her chest, causing her breasts to squish together and make her nipples stand taut. Adam's eyes were obviously drawn to them but he kept talking.\n\n\"We never would have gotten as far as we have without you...\" he whispered. \"I thought I was the one saving everyone, but it was really you this whole time. Analyzing their behavior, piecing together their weakness, sacrificing yourself... you're just... amazing,\" he breathed.\n\n\"Hm, yep, fair enough.\" She grinned up at him and winked. \"So, what's my reward?\"\n\n\"I'm sure I can think of something...\" He leaned over her and tenderly kissed her neck. He began to trail his lips down her body, gently kissing her collarbone, then her breasts and nipples, her stomach, her navel, her downy, auburn landing strip, and finally ending at her inner thighs. He carefully spread her legs with his hands as he continued to plant soft kisses along her legs, working his way down to her feet before returning up towards her moist slit until it was only a few inches away from his face.\n\n\"Mmnn... you tease...\" Sarah groaned and grabbed at the pillowcase under her head as Adam continued to gently kiss and lick all around her inner thighs - everywhere except where she most wanted it. Finally deciding that she had been warmed up enough for now, he gave her what she desired, gently sliding his warm, wet tongue between the awaiting lips of her pussy. \n\nHe stroked up and down her labia, circling around her clit before returning back down to her entrance. She moaned in satisfaction as he buried his face deep between her thighs and firmly thrust his tongue into her moist womanhood. He licked into her for several seconds before she suddenly started to giggle. He nervously withdrew his mouth, wiping his wet beard on his arm.\n\n\"Am... am I doing something wrong...?\" Adam asked in a concerned tone. He could feel his boner start to weaken under the pressure of his growing nervousness.\n\n\"N-no! You're... you're doing great! It feels great!\" She reassured him and looked down at him with an embarrassed expression. \"It's just... your beard tickles a little.\" She awkwardly laughed. \"But it's nice, really! Keep... keep going... p-please.\" \n\n\"A-are you sure? I can-\"\n\nShe leaned forward without a word and grabbed his hair mid-sentence, pushing his fluffy face back between her legs to finish his meal. He happily obliged. He lapped at her increasingly wet sex while massaging and gently flicking her clit with his fingers, eliciting several lewd gasps and moans. \n\nHe moved his hands down to spread her pink petals wide, allowing his tongue to enter her as deep as it could go. He rhythmically danced his nimble tongue along her inner walls for several minutes, trying to read the reactions of her body, attacking the places that he sensed made her tense up in pleasure, and only pausing for brief moments to catch his breath.\n\nAfter a little while, he pulled his face away from her slit, his beard trailing thin threads of her juices and his own saliva. He carefully slid a curious finger into of her entrance to gauge how aroused she was, and was rather happy with the results. She wordlessly confirmed his conclusion, slowly spreading her legs wider to allow him easy passage, glancing lustfully at the large tent in his boxer shorts.\n\n\"Oh...!\" Sarah yelped. To her surprise, instead of pulling down his underwear, Adam instead leaned back down between her legs and gently inserted two fingers deep into her pussy, curling them upwards to search for her G-spot. \"Mnn!\" She moaned, closing her eyes and leaning back against the pillow as he began to lick at her swollen clit, still working his fingers in and out of her now dripping pussy.\n\n\"Th-there!\" She suddenly squealed, gripping the bed sheets a bit tighter. \"Just like that...\" Adam obeyed, trying his best to maintain the speed, pressure, and position of his fingers massaging against her G-spot. He continued to lick and suckle her clit while using his free hand to reach up and rub his thumb over her left nipple, and then her right, going back and forth to give both sensitive peaks equal attention. \n\nWith her eyes closed, she didn't notice his approaching hand, so the sudden stimulation on her nipples made her shiver and gasp in delight. Then her eyes opened in surprises.\n\n\"W-wait... AHHN!\" She cried out in pleasure as he pushed a third finger inside of her, now thrusting his hand in and out at a faster speed. Her pussy began to squelch as her juices started to freely flow over Adam's hand. The muscles in her groin instinctively retracted and began to tighten around him. She could feel warmth building up between her legs as her excitement grew from the intense fingering. Every thrust of his thick fingers sent shockwaves to her brain, making her back gently arch up.\n\nSensing that she was close, he maintained his efforts, getting into a good rhythm and savoring the look on her face. Her eyes were slightly rolled back, her brows were knitted, and her full lips were parted as she let out a satisfied moan. \n\n\"Like that! Like that! Oh god!\" She cried. \"Yes! Yes! Oh god, Adam, right there! I'm close! I'm so close! I'mmmmmmmm mnghhhh!\" She grunted and suddenly the muscles in her pussy strongly contracted, squeezing and pushing Adam's fingers out of her spasming hole along with a gush of juices. She gasped and shuddered, slumping back against the pillow while heavily panting.",
        "Adam tenderly planted a few more kisses on her wet, swollen pussy lips as she came down from her orgasm. She affectionately ran her fingers through his hair as he looked up at her with his sharp, handsome eyes. She smiled groggily down at him.\n\n\"That was... really good\" She said dumbly, frustrated that her brain wasn't functioning at 100% right now in order to find more impressive adjectives. \"I came... pretty hard there...!\"\n\n\"I'm glad to be of service.\" He smiled back. Her breathing calmed down finally and she suddenly shifted onto her knees and leaned forward.\n\n\"Your turn!\" She smirked, grabbing at his underwear and leading him by the elastic waistband to the edge of the bed. She slid off of the mattress onto the floor and motioned for him to stand up as she knelt down in front of him, resting her knees on her discarded robe. He did so, allowing her to excitedly yank his underwear down.\n\nAdam's rock-hard, 8\" erection got pulled down with the waistband but quickly sprang back up and slapped against this stomach with a satisfying, meaty smack. Sarah's face was only a few inches away, directly in front of his already throbbing cock, allowing her to admire his tidily groomed, curly dark pubes. \n\n\"W-wow...\" Sarah breathed. \"If I had known you were this hung, maybe I'd have acted sooner!\" She joked.\n\n\"I'm just average...\" he replied modestly. \"Okay... maybe a little bigger\".\n\n\"Mmm... let me measure,\" She said seductively, looking up at him as she glided her tongue up the underside of his shaft. The sudden feeling of her warm, moist tongue stroking along his length made him shudder and twitch in delight. For the first time it seemed to hit him, \n\n\"Oh my god... I'm really doing it with Sarah...\" He thought to himself in a mild stupor. \n\nAs her tongue neared the tip of his penis, she rose from her knees and suddenly pushed him backwards down onto the bed, leaving his legs bent over the side and fully exposing his genitals to her. He didn't resist as she used one hand to keep his lower abdomen pressed down while using the other to dexterously massage his velvety balls.\n\nSarah licked and kissed along the sides of his swollen cock for a while, covering it in her saliva so that it glistened in the flickering light. He was unable to easily see what she was doing from his position on the bed, so when she suddenly locked her lips around his glans, he grabbed at the bed sheets and groaned in surprise.\n\nShe chuckled into his thick shaft and began to bob her head up and down his length, swirling her tongue around the tip. She had both hands between his legs now, with one still fondling his testicles while the other stroked the exposed base of his shaft that wasn't currently in her mouth. \n\nSarah hesitated for a moment but then decided to try a new technique that she had overheard a student talking about. She very gently grazed her teeth against the soft tip of his spongy glans. This was a gamble, but it paid off as he let out a pleasured gasp and looked down at her in surprise.\n\n\"Wh-what did you just do?\" He asked breathlessly. She popped his cock out of her mouth and nervously smiled.\n\n\"I just used a little teeth there... was it okay...? I know a lot of guys are not into teeth... but I had heard it could feel good on the tip, so...\" She sheepishly looked down.\n\n\"Y-yeah! I've never felt anything like it...!\" He stuttered. \"It's true that teeth normally really hurt on the shaft, but the way you did it just now... um... you should keep doing that...\" He scratched his beard, embarrassed that he had made her embarrassed. \n\n\"O-okay...\" She smiled in relief. \"Lay back down, mister!\" She chided.\n\n\"I'd rather watch.\" He grinned, sitting up and propping himself with his arms.\n\n\"Mmm... I bet.\" She replied, not really sure what she meant by that, but saying it in a seductive voice nonetheless. She maintained eye contact with him as she went back to work on his rigid cock, suckling at his glans - performing the teeth technique now and then - while she used both of her hands to stroke his entire length.\n\nShe spat lightly onto his shaft and rubbed it into his skin to lube it up, allowing her to spin her hands in opposite directions up and down his penis while she flicked her tongue across the very tip of his cock head. He groaned and grunted in satisfaction with every motion, looking deep into her big, unwavering eyes as she lewdly moaned with her mouth full of cock, savoring the taste of his manhood. \n\nSarah pulled her mouth away with a gasp for breath and kissed her way down Adam's shaft, caressing it with her soft fingers as she reached his hanging sack. She sucked his juicy balls one at a time into her mouth, gently lapping at the delicate skin with her tongue and juggling his them on the tip of her tongue as she worked his cock with her hand even faster.\n\nAs she felt his meaty rod begin to throb and swell even more, she quickly moved upwards and engulfed it between her soft tits, squeezing them against his shaft as she slid them up and down to fully stimulate his length. She licked at the exposed tip of his glans each time it momentarily came into view within her bountiful cleavage and he squirmed in delight feeling her hard nipples trailing up and down his lower stomach.\n\nAdam began to gently buck his hips in time with her motions, attempting to hold back his moans to no avail. He clenched his eyes from the pleasure but quickly opened them again as he felt a tight, moist warmth suddenly envelope his entire shaft. He looked down wide-eyed to see Sarah deepthroating his cock, the bulge of his girth clearly visible in her throat.\n\nHer eyes watered and she gagged a few times, gripping the edge of the bed sheets, but she held it in for several seconds, humming a bit as she did. The vibrations from her throat reverberated through his shaft sent him into a frenzy. He instinctively bucked his hips again and this time it was too much for her to take. She choked and pulled back with a wet, sloppy \"Bluuughh!\" She sat between his splayed legs for a moment, gasping for air and coughing up saliva in the process.\n\n\"D-don't force yourself...!\" He said in alarm.\n\n\"It's fine,\" she croaked. \"I want to do it.\" She opened her small, eager mouth, ready to take him whole again, when he put a hand on her shoulder to stop her.\n\n\"That feels amazing, but why don't you come on up here and take a short break.\" He phrase it more as a gentle command than a suggestion.\n\n\"Are-are you sure...? I can keep going, really...\" She seemed a bit disappointed. \n\n\"I'm sure you could, and it would be fantastic.\" He softly grinned at her. \"But I have another idea.\" She quizzically looked at him as she stood up, allowing him to take her hand and pull her onto the bed, pressing their warm, naked bodies together. She could feel his hard cock twitching against her stomach as her marshmallow-soft breasts squished into his chest.\n\n\"Wh-what is it?\" She murmured, enjoying the feeling of skin on skin.\n\n\"This,\" he said, grabbing his wallet off of the nightstand. He had insisted on keeping the useless money-holder with him for whatever reason. He opened it and withdrew a small square wrapper from within. \"Just because it's the end of the world doesn't mean we shouldn't be safe.\" He winked. Then he frowned as he got a better look at the condom in his hand. \n\n\"Aww... no...\" The sorrowful sting of regret washed over his face. \"It's hard to read in this light, but it looks like this one expired a while ago... it's all I had...! Do we... risk it?\" He asked, a slight hopeful note in his voice.\n\n\"What if...\" Sarah replied, reaching over the side of the bed and digging her hand into one of the pockets of her robe, \"we don't have to...?\" She smiled in triumph as she pulled out a handful of unopened condoms. \"I found these in another bedroom earlier today. One that... had a couple more features than this one.\" He raised a brow and grinned.\n\n\"You'll have to show me that room.\" He winked. She gasped in mock indignation.\n\n\"Naughty boy!\" She teased. \"Maybe I'll reward you if you do well tonight.\" She giggled and fell back onto the bed as he opened one of the fresh condoms with slightly shaking hands. She watched appreciatively as he slid the thin, transparent sleeve down over his penis, pinching the tip a little to give the reservoir some extra room. His thick shaft easily filled the entire condom, which seemed like it might burst from the strain.\n\n\"Oh!\" Adam exclaimed. \"It has lube already on it! Nice!\"\n\n\"Mmm... I think I'm still pretty ready to go regardless.\" She cooed up at him, wiggling her legs together.\n\n\"Is that so?\" He suddenly kneeled between her legs and pulled them apart, causing her to let out a playful squeal and laugh. He leaned over her and held his cock in his hand as he grinded it against her still-wet vulva, pressing his soft glans to her erect clitoris. He continued to slide his length up and down her slit until eventually she cried out in frustrating.\n\n\"Will you never stop teasing me!?\" She groaned, lightly slapping at his firm chest.\n\n\"I can try,\" he responded, and suddenly Sarah gasped as she felt the girthy tip of his manhood push past her vulva and into her pussy.\n\n\"S-slowly... y-yeah, like that...\" Sarah murmured in a soft voice. Adam followed her instructions and gently worked the length of his shaft deeper and deeper into her with small thrusting motions, until eventually she had swallowed up his entire shaft between her legs. \"Mmmnnn...\" She moaned, savoring the feeling of fullness and of being one with him.\n\nAdam slowly worked himself in and out of her entrance a few times, coating his cock with her natural lubricants until both of them were slippery with juices, allowing for his thrusts to steadily get faster and faster. He grabbed her knees and lifted them up to his shoulders, suddenly thrusting into her as deep as possible and letting out a satisfied grunt.\n\n\"O-OH, GOD!\" IT'S D-DEEP!\" She squealed in surprise, reaching up and firmly grabbing his shoulders, her nails digging into his skin slightly. \n\n\"Do you need me to slow down...?\" Adam gently whispered.\n\n\"N-no... keep going!\" Sarah looked up at him with a lustful gaze and drew her hands down from his shoulders and onto his chest, lightly scratching at the soft hair there. He let out another grunt and increased his pace, resulting in fleshy slapping sounds as his swinging balls smacked against her plump ass cheeks.\n\nSarah's eyes became hazy with ecstasy as she looked down at their crotches to watch the delicious sight of his rigid cock repeatedly ramming into her wet slit. Her view was obstructed slightly as Adam reached down to grab her wildly bouncing tits, filling his hands with their supple flesh and squeezing them as he continued to thrust into her.\n\n\"F-faster! Don't stop!\" She gasped, starting to buck her hips up into his, overtaken by the rhythmic fucking, while her toes uncontrollably clenched and flexed like they had a mind of their own. \n\nShe reached up and pulled him down to her chest, hugging his bearded face into her neck and scratching her nails down his back, completely lost in the throes of pleasure coursing through her. Her moans freely escaped her mouth as she slid one hand down his back and smartly spanked his ass.\n\nAdam squeaked in surprise but didn't flinch away, so Sarah slapped him again, grabbing his ass cheeks with both hands as best she could despite the jerking motion of his hips and dug her fingers into the firm muscles. She continued to relentlessly spank him and soon, his gasps of erotic pain began to turn to gasps of exhaustion. She wrapped her legs around his waist and pulled him in closer, pinning him to her body in order to slow his movements and allow him time to recover while still feeling him so, so deep insider of her.\n\n\"I'm so close...\" he breathlessly whispered into her ear, making her shudder at the feeling of his warm breath. \"I'm just a little out of shape I guess...\" He awkwardly laughed, slowing his thrusts a bit. \"I guess sitting around watching cameras all day doesn't do wonders for one's stamina.\"\n\n\"Mmm... sounds like you need me to take control, as usual.\" She seductively gazed up at him and smirked.\n\n\"What do you me-\" Adam's question was cut short as Sarah used her thighs wrapped around his back to flip him over on his side before rolling on top of him and straddling his torso and pinning him to the mattress with her hands. \"Oh,\" was all he could manage. He could feel the seductive, warm wetness of her pussy pressed into his chest.\n\nSarah leaned over him and slowly slid her hips down his stomach. She began to grind her moist labia over his twitching erection, squeezing and massaging the rigid shaft between her delicate petals as she lubed him up again with her freely flowing juices.  \n\nAfter a short while, once she was satisfied with how slippery his cock had become, she slowly lifted her waist up and used her hand to guide him into her. She eased down onto his length and let out a gentle moan as she felt it inch further and further into her. \n\nShe sat on him for a few seconds, unmoving, reveling in the sensation of feeling him twitching deep inside of her. She playfully squeezed her vaginal muscles around his penis and savored the look of delight on his face that partnered with a groan escaping his bearded mouth.\n\nShe giggled and began to lift and lower her hips, getting faster and faster with each rhythmic motion. As her juices started to collect at the base of his cock, loud, wet sounds of smacking flesh rang out each time her ass and crotch forcefully slid down onto him. \n\n\"Is... is this good?\" She asked as she bounced up and down. Her voluptuous breasts were jiggling wildly from the motion, practically begging Adam to play with them. He didn't wait long. He reached up to grab her bouncing tits and let out a wordless, satisfied moan, which Sarah took to mean, \"this is definitely good\". She bit her lip in ecstasy as he started to flick and knead her stiff nipples between his fingers, letting her own moans of pleasure join his.\n\nShe continued to ride his hard dick for several minutes, holding onto his wrists as he fondled her boobs. Soon though, her own stamina began to give out as well - like Adam, she had also spent a lot of time sitting around lately. Sensing his partner was beginning to slow, Adam slid his hands down to her ass, helping to lift her up and down onto him in order to relieve some of the strain of her tired muscles. \n\nThe sight of Sarah's large boobs dancing in front of his face, coupled with the firmness of her ass filling his hands, made the pressure in his loins quickly build back up to the boiling point. He started to thrust his hips up as Sarah came down on him, pushing his cock even deeper into her tight hole as she hungrily rode him. He moaned as he watched her play with her own breasts, expertly rubbing her pointed nipples between her fingers. \n\nThe adorable sound of her gasping as Adam reached a particularly good spot inside of her finally caused the dam to burst within him. He felt warmth build up in his stomach and his balls tighten in anticipation for what was about to come.\n\n\"I... I'm gonna' cum...if you keep riding me that hard...\" He groaned, hoping she would slow down to extend the duration of this amazing sensation.\n\n\"Be a good boy and show me, then,\" Sarah replied with a slightly commanding tone. The unexpected dominance in her voice took him by surprise, but by god he was into it. Being able to give up control felt... refreshing. Freeing. He had never experienced anything quite like it before. \n\nShe suddenly pushed down on his forearms to pin him to the bed yet again, using what had to be the last of her strength to bounce up and down on his throbbing cock as fast as she could, squeezing his shaft with her pussy muscles as if trying to milk everything out of him, until, very soon after,\n\n\"OH F-FUCK!\" Adam yelled through gritted teeth, his quivering voice overcome with ecstasy. \"C-cumming! I'm cumingggg!! He tensed up and his legs gently spasmed. Grasping at her hips, he summoned one final, powerful thrust and rammed it deep into Sarah's welcoming womanhood. He ejaculated hard, feeling the warm cum pool around the tip of his penis, trapped within the thin confines of the bulging condom.\n\n\"Mmm... I can feel it pulsating inside...\" Sarah moaned in satisfaction, rocking her hips back and forth to coax even more semen from his tight balls. \n\nAfter he finished shooting his load, she leaned forward and cuddled into his chest, leaving his slowly softening shaft inside of her so they could both savor the feeling a little longer. He hugged her tightly around the shoulders and buried his face in her hair. Even though she hadn't had a chance to really wash it in a few days, it still smelled sweet as honey to his nose.\n\nThey lay like that for several minutes, quietly feeling each other's pounding hearts and listening to each other's slowly steadying breaths. Eventually, Adam regrettably had to slide his spent penis out of her slit. Reaching down to their groins to peel the condom from his shaft, he felt a wetness drizzle onto his hand. Glancing down at Sarah, he noticed she was already looking back at him, with a slightly embarrassed and pleading glint in her eyes.\n\n\"That was... everything I imagined it would be...and more.\" Sarah croaked, clearly still tired from the exertion. She smiled at him. His chest throbbed seeing her gentle, intimate gaze.\n\n\"Sarah, that was... well... perfect,\" he exhaled deeply, reaching over to play with her hair, making her hum in relaxation. \"Do you... want some more...?\" He awkwardly asked, having sensed her desires. He suddenly ran a finger along her dripping, swollen mound, eliciting a shiver from her sweaty body.\n\n\"Mhm...\" She sheepishly nodded into the pillow. \"M-maybe just a little...? I-I already came earlier, but all this excitement... and not having had a release in a while... well... erm...\" The look of innocent embarrassment on her face felt like an arrow piercing through his heart. The air of control she had displayed while riding him had melted away, leaving Adam with the urge to take care of her now.\n\n\"I may need a few minutes before I can... get back into the action...\" Adam admitted, idly rubbing his flaccid member in frustration. \"But I can take care of you in other ways?\"\n\n\"Maybe we can take care of each other at the same time...?\" Sarah looked at him with verdant doe eyes. \"I'm sure I can get your little 'Adam Junior' back at full attention soon enough.\" She licked her lips in an attempt to be seductive but she realized that her throat was parched and her tongue was dry.\n\n\"Okay, I like this proposal,\" Adam grinned, understanding what she was getting at. \"Water?\" He offered the bottle of water to her that he had next to the bed. She gratefully took several swigs from it before handing it back to him. He drank his fill as well to replenish his body's spent fluids. \"But, um...\" he mumbled.\n\n\"...What is it?\" Sarah asked in a concerned voice.\n\n\"I-it's name isn't 'Adam Junior'...\" he sheepishly stammered. She seemed confused for a brief second and then let out a bubbly giggle.\n\n\"What IS his name, then?\" She asked with a smirk.\n\n\"He...IT... doesn't HAVE a name,\" he firmly replied, crossing his arms. \"Not all men do that, you know.\"\n\n\"Then I'll name him!\" Sarah chirped, playfully rolling over on the bed to position her head close to his soft penis, inspecting it closely in the candlelight. Despite having just orgasmed only moments ago, seeing her beautiful face only inches away from his cock stirred energy within Adam once again. \"Oh! I think I just saw him twitch!\" Sarah squealed. \"I think I'll call him... 'Twitchy'!\" She said in a cute voice.\n\n\"You have to be kidding me...\" he moaned.\n\n\"Come here, Twitchy! Come here!\" She teasingly called to his penis like a dog, patting the bed next to her. He felt silly but he also liked the sensation of obeying her, so he did as she asked, lying down next to her on the bed.",
        "Sarah sat up and crawled over to Adam's semi-erect cock, straddling his face in a 69 position for him to look up at her wet pussy lips only a few inches from his nose. She bent down and languidly slid a single lick up the entire length of his shaft, reaching around it to gently massage his soft balls between her undulating fingers. She brushed her hanging hair behind her ears and coyly glanced back at him.\n\n\"Let's see if I can help Twitchy feel better...\" She then swallowed his glans, circling it with her moist tongue before bobbing her lips up and down on it. Adam let out a moan, both from the embarrassment at the silly nickname that Sarah had given his already re-hardening penis, and from the pleasure jolting through his crotch. \n\nShe used one hand to continue playfully fondling his balls while using the other to hold his cock in place as she sucked. Sarah popped it from her mouth now and then to lewdly slap his saliva-covered, slightly floppy penis against her elastic cheeks. She flicked the thin tip of her tongue across his sensitive cock head and kissed and caressed his shaft with her lips and before swallowing it again.\n\nNot one to fail to reciprocate, Adam reached up and began to massage Sarah's swollen vulva, rubbing her exposed clit with his thumb. She was still rather wet from before and he suddenly felt a drizzle of moisture hit his face. He realized that it was a few drops of pussy juice that had dripped from her slit, and this turned him on even more. He felt his cock already reaching full mast as Sarah hummed into it, moaning from his touch against her womanhood.\n\nShe lowered her hips more to press her succulent mound to his mouth and allowing him to hungrily feast on her pussy, using his hands to spread her ass cheeks to give his dancing tongue and sucking lips full access to her delicious hole. They remained that way for a while, sucking and licking and each other's eager genitals until eventually Adam's cock was throbbing and rock hard yet again, while Sarah's own crotch was nearly gushing with moisture.\n\nBe it from the months of abstinence, the long repressed desires for each other, or the need for intense stress relief, both of them had the virility to fuck through the night. They enjoyed every position they could think of. Sarah even managed to reach climax twice in a row during doggy-style. \n\nThe combined sensations of Adam's large cock completely filling her up, his playful spanks on her shaking ass, the light smack of his balls against her stiff clit, his firm pull on her hair, and the unrestrained swaying of her tits below her all came together to make her brain feel completely charged with tingling electricity. \n\nThe pads on the walls hid their voices from the rest of the house as they cried out each other's names, demanded for faster and deeper thrusts, and released several moans that were simply unintelligible grunts of ecstasy due to the endless waves of pleasure coursing through their writhing bodies.\n\nThough they took brief rests after each round to recharge a bit, they made passionate love until the candle had burned out and the rising sun started to peek through the weakening rainclouds. \n\nThey lay in bed together on top of the ruined sheets, with Sarah cuddled warmly in Adam's muscular arms and nuzzling against this chest. They were both sweaty and out of breath, but she still managed to drift off to a pleasant sleep, relaxing to the calming sound of his heartbeat while he tenderly stroked her head.\n\n\"Maybe things aren't as bad as I thought...\" Adam whispered to himself, looking down at the incredible woman in his arms and joining her in slumber, savoring the feeling of her plush, warm skin pressed against his side as he brushed several torn condom wrappers onto the floor.\n\n***\n\n\"HEY! Professor Sparhawk! WAKE UP!\" Zoey's frantic voice called through Adam's bedroom door. Her loud yelling and rapid knocking roused him from his sleep. \"Sarah is MISSING!\"\n\n\"Hmngh...?\" Sarah stirred in her sleep and drowsily cracked her eyes open upon hearing her name. She looked around for a moment in sleepy confusion, trying to remember where she was. Feeling Adam's body heat next to her jogged her memory and she happily mumbled into her pillow.\n\nJudging by the amount of sunlight filtering into the room, it had only been a couple of hours at most since the two of them had fallen asleep together. She yawned and stretched, fumbling for Adam's chest to snuggle against it again in the hopes of returning to her slumber.\n\n\"Shh! Quiet down!\" Sarah heard Steven hiss at his sister. \"Even though we have these sound dampeners, we can't just go around making loud noises - ESPECIALLY not after waking me up from a particularly pleasant dream.\"\n\n\"Quiet down!?\" Zoey retorted in a strained whisper. \"Stevie, Sarah went missing in the night! We have no idea where she is or if she is okay! And you want me to be calm!?\"\n\n\"Sarah Cassidy is currently in Adam's sleeping quarters,\" A'luhr's approaching voice stated matter-of-factly. \"Her scent is mixed strongly with his, along with many powerful pheromones. I imagine they were fornicating, likely for quite some time.\"\n\nAdam and Sarah both nearly fell out of bed with a jolt, scrambling to find their robes, tidy the sheets, and fix their hair. The pounding on the door had gone completely silent along with the voices on the other side.\n\n\"Shit!\" Adam hissed and he yanked up his boxer shorts. \"Busted!\"\n\n\"It's... not a problem,\" Sarah murmured back, tying her robe's sash around her waist. \"W-we're all adults here, after all, right?\"\n\n\"Yeah, exactly! There's no reason we should hide it!\" Adam assured the both of them as he finished putting on his robe. Sarah slipped over to the door and opened it a crack, holding the collar of her robe tight around her neck.\n\n\"H-heyyyyy...!\" She casually greeted the three people in the hall. \"Um, good morning! Did... did...um... did you all sleep well?\" She smiled awkwardly at them. Steven just stared ahead in mild shock, his mouth hanging open, analyzing the room behind her. His eyes widened when he noticed the pile of condom wrappers scattered on the floor. Zoey was backed up against the opposite wall, madly blushing and refusing to look into the room at all. To Sarah's surprise, however, she did steal at glance towards her and give an approving little nod and shaky thumbs up. A'luhr seemed completely unfazed, simply working out the kinks in her muscles. \n\n\"They probably slept better than we did,\" Adam chuckled, coming up behind Sarah, stretching, and slyly draping his arm around her shoulder. \"Morning, sweetheart.\" He playfully planted a kiss on the top of her messy hair.\n\n\"A-Adam!\" Sarah exclaimed. She gave him a wide-eyed look, but didn't shy away from his embrace.\n\n\"I knew it...\" Zoey softly whispered to herself and did a little fist-pump.\n\n\"Uh... umm... we... well...\" Steven stammered, trying not to be distracted by the situation... and also Sarah's bountiful cleavage, which was slightly visible through a gap in her robe.\n\n\"We have come to discuss our plans moving forwards.\" A'luhr stepped in, saving the floundering Steven. \"The loud weather seems to be clearing, so the Krinis will be active again. We must hasten any preparations we need to perform.\"\n\n\"I agree.\" Adam nodded with a yawn. \"But first... I should really brush my teeth.\"\n\nSarah's entire face turned a rosy pink as Steven and Zoey both choked in surprise from Adam's candor. A'luhr simply shrugged and glided away down the stairs without making a sound.\n\nSarah returned to her room while the others got ready for the day. She looked at her tired, but glowing face in her vanity's mirror before suddenly bursting out into a giddy little dance. She pumped her arms into the air, causing her robe to loosen and slip off, which she stepped out of and kicked to the side.\n\n\"Oh. My. GOD.\" She grinned and whispered to her reflection. \"I can't believe I just did that!\" She playfully cupped and jiggled her naked breasts in her hands, trying to refresh the fading memory of Adam's lips sucking at her nipples. She giggled wildly to herself, feeling empowered and free from the doubts that had plagued her over the past week. She happily hummed as she threw on her now dry clothes and practically skipped downstairs to join the rest of the group, who were waiting for her around the coffee table.\n\nSarah sat next to Adam on the couch. She wanted to lean against his shoulder and bury her sleepy face into his inviting neck, but she restrained herself. She was still an educator in the presence of her student, after all.\n\n\"Ok, now that we're all here,\" Adam began, smiling at Sarah next to him and attempting to ease the awkwardness in the room, \"we should discuss food rations.\" Everyone groaned in disappointment. \"I know, I know.\" He raised his hands to calm them. \"We should have enough to get a decent amount of calories and nutrition for two days, maybe three.\"\n\n\"That's all...?\" Zoey asked. \n\n\"Sadly, as I mentioned before, a lot of it went bad after the power got cut. It seems that the folk living here didn't much care for processed dry goods.\"\n\n\"So what you're saying is we are going to have to go searching for food soon.\" Sarah said, thoughtfully running her fingers over her mouth and worrying about the implications of such a trek.\n\n\"We should be able to easily clear the other nearby domiciles without attracting too much unwanted attention,\" A'luhr replied. \"However, we need to be exceedingly careful of Krinis drones due to our dwindling methods with which to combat them.\" She gestured to the two remaining sparkler sticks on the table.\n\n\"What about your kick-ass sound grenades?\" Steven asked, scratching his hair.\n\n\"You mean this one?\" A'luhr emphasized the \"one\" part of her response while tapping on the single remaining silver sphere attached to her hip. \"This is our only true form of escape if we need it. Because the effects are temporary and single-use, we must only use this when there are absolutely no other options, and at a point where we can be guaranteed to escape within the small window of time it allows. There will be no second chances.\" The group all collectively gulped at the gravity of her words. \n\n\"Speaking of second chances...\" Sarah said, \"What are we going to do about the Krinis? What even happened yesterday!?\"\n\n\"I have to assume that the new queen was already on the cusp of being born when we managed to strike at the original queen,\" A'luhr sighed. \"While we momentarily destroyed the Krinis's hive mind, the young queen must have been able to escape the ashes of her mother and taken control of the nest.\" Her eyebrows drooped as she massaged her temples. \n\n\"Not only that...\" Zoey slowly groaned, \"but Diana and Arlo... betrayed us?\" She slouched into her chair with a depressed look in her face.\n\n\"Something definitely seemed off about them,\" Steven replied. \"Were they being mind controlled or something? Alien mind control? That sounds plausible, right?\"\n\n\"It is not quite accurate to categorize the mental effects of the nectar as 'mind control',\" A'luhr explained, idly examining the small pile of food on the table in an effort to find anything that seemed palatable. \"Once consumed in sufficient quantities, the nectar completely releases the drinker's inhibitions. Actions and desires that were once thought taboo, shameful, or inappropriate will come bubbling to the surface of their consciousness and force them to focus on nothing else.\" \n\nA'luhr grabbed a small box of Corn Pops off of the table and cleanly cut it open with one of her daggers. \"That's why the nectar is so dangerous: because the victims start to willingly welcome their fates and will try to drag others there with them. The effects will fade over time, though. I'm sure Sarah Cassidy understands the feeling even from consuming only a small amount of the fluid.\" She started to hesitantly place some of the cereal pieces on her blue tongue, and tested the flavor with a few suspicious licks. She seemed to quickly come to enjoy the sweetness and started tossing more of the sugary yellow bits into her mouth to merrily crunch on them.\n\n\"Yeah, that's true...\" Sarah pondered. \"The general feeling of wanting to return to that... ecstasy... even followed me for a while after you rescued me. I guess I should have realized that we needed to keep an eye on Diana and Arlo, seeing as they had it much worse...\" Her shoulders slumped and she rested her forehead on her hands. She let out a heavy breath but then felt a strong pressure massaging against her back.\n\nShe peeked up to see Adam rubbing her shoulders in a consoling manner.\n\n\"You couldn't have known,\" Adam said quietly. \"It's not your fault. None of this is any of our faults. This world has gone upside down. We can't keep blaming ourselves for every single mishap that we happen to witness. It will eat us from the inside and tear the group apart.\" Everyone lowered their eyes, thinking about their own senses of guilt. \"A'luhr,\" Adam continued, \"what are our options here? How do we fight back?\"\n\nA'luhr looked over at him; her cheeks were puffed out like a hamster's as she munched on the entire box's worth of cereal in her mouth. Sarah liked this side of the alien woman - seeing her experience Earth for the first time in child-like wonder was such a stark contrast from her usually stoic, combative attitude that it made her seem extra adorable at such moments. For the first time, Sarah wondered how old she was, but figured that wasn't important to ask about right now. A woman has her secrets to keep.\n\nA'luhr took a labored gulp to swallow the Pops and then washed down her breakfast with some bottled water before speaking. \n\n\"We could attempt to find another one of those scouting machines of yours, along with more starfire, and try the same tactic again...\" A'luhr suggested in an uneasy voice. \"But besides the low odds of us being able to safely locate such objects, the Krinis will have now learned of the threat the machines possess and likely attack them on sight.\"\n\n\"Learned?\" Steven asked in surprise. \"I thought these worms were all just mindless, horny monsters acting instinctively to fuck people, or whatever.\" \n\n\"They probably share information through the hive mind,\" Zoey suggested. \"Most likely with the queen's consciousness shaping what they know. If she witnessed the drone, then they'd definitely be suspicious of it in the future.\"\n\n\"What your kin says is correct,\" A'luhr said to Steven. A small ray of sunlight struck the dagger in her hand and cast dancing reflections around the room. \"The Krinis are not 'mindless' as you say. In fact, they are the very opposite. They have the shared intelligence of countless minds. We cannot afford to underestimate them.\"\n\n\"So what are our other options, then?\" Sarah asked.\n\n\"If all else fails, we can return to the original plan: let one of us be captured and then strike the queen when they get the chance, but we should try and evaluate other strategies before it comes to that.\" A'luhr leaned forward and sighed. \"If anything, we at least have some time on our side now, as it seems the new queen is not leaving the planet yet for some reason and is instead staying here for now. Though it is anyone's guess as to how long that will last.\" \n\n\"Well, let's hope we, or somebody else, can figure out a solid plan before it comes to that.\" Adam shrugged. \"For now, we need to focus on stabilizing our own safety and living conditions before we rush off into the next big mission.\"\n\n\"Mm.\" Sarah agreed. \"Hopefully we can make some progress on a plan before we need to venture further away from the house to find food.\" She glanced out the window, half expecting to see a drone staring back in at her, but the streets appeared empty. \"Let's keep our heads up and take it one day at a time for now.\"\n\nShe leaned forward and grabbed a small box of Lucky Charms, hoping that if the luck didn't rub off on her, that maybe at least the sugar would jump-start her sleep deprived brain.\n\n***\n\nOne week passed without any major incidents. They stayed as quiet as they could, leaving conversation and meals for the rooms with the most acoustic padding. They found some board games to pass the time and delighted in teaching them to A'luhr who, as it turned out, was somewhat of a prodigy at Chess. She did not, however, like Candyland. The luck element seemed to rub her the wrong way.\n\n\"How could a planet of pure sweetness mask such guile!?\" She had exclaimed in anger after being sent almost all the way back to the start of the board. \"This betrayal will not be forgiven lightly.\"\n\nThey also asked questions about A'luhr's home planet, apparently named something like \"Vir'tael\", which was home to many extraordinary creatures and sights - but with significantly less water than Earth, especially due to recent climate changes. Her people instead collected moisture from the atmosphere using complex machines. Adam was severely disappointed when he found out that A'luhr had absolutely no clue how they worked. Apparently she was a soldier, who was tasked with watching over the \"lesser races\" whom they kept in ghetto-like cities.\n\nSarah thought this sounded suspiciously like a dictatorship, but stayed her tongue. It would be impossible to fully understand such an alien culture and be the height of folly to assume that human ethics and politics would apply to extraterrestrials. \n\nApparently the Krinis had first attacked these \"lesser races\", so A'luhr's own race, the Prinquem, didn't really care too much and let things take their course against the weaker demographics. This proved to be their undoing, as despite the Prinquem having advanced technologies, the Krinis had plenty of time to absorb the energies of countless captives and easily managed to subdue them when the time came for the tentacles to finalize their dominion over the planet.\n\nThe group listened in horror as A'luhr explained all the terrifying battles and lewd scenes that followed them. Eventually she began to seem pretty depressed from recounting the tales, so they shared things about Earth to cheer her up. \n\nShe was amazed to hear about fish, elephants, and squirrels, remarking at how hard it was to imagine them based solely on their descriptions. They managed to find some books around the house that had pictures to help illustrate some of what they were saying. \n\nIt interested Sarah quite a bit to learn how exotic and mysterious A'luhr found Earth's flora and fauna to be, as Sarah naturally considered it all to be rather mundane and boring in comparison to the incredible creatures that A'luhr was describing from her own home planet. Sarah had never really put much thought into it before, but it was obvious the more she did so that natives of a planet would find their own ecosystems to be \"normal\" while recoiling in shock at even the simplest of things on another world.\n\nThey spent many hours sharing tales and learning about one another. Most of their time, however, was spent scouting out the area and continuing to search the large house for more supplies. After a couple of days, they finally mustered up the courage to adventure into some of the nearby houses and managed to procure a few more days worth of food along with more candles, changes of clothes for everyone, and even a few more sparklers.\n\nThe nights were pretty uneventful, as light sources were limited, but Adam and Sarah still found ways to \"pass the time\" together. They even went so far as to burn an entire candle that Sarah had found at a neighbor's house in order to spend the night in the \"special\" bedroom. The morning after, the rest of the group had eyed the two of them suspiciously, noticing Sarah nursing a sore jaw, as if her mouth had been forced open by a ball gag for an extended period, and Adam rubbing his backside, with faded red lash marks slightly visible under his shirt.",
        "But that's a story for another time.\n\nThe relationship between the two professors continued to strengthen over this short period. They watched each other's backs when out scavenging (armed with sparklers), shared their own secret stashes of treats, and simply enjoyed general conversation in order to learn more about one another. Hobbies were rather limited at the moment, so any new interests they could be turned on to were welcomed.\n\nThings continued in this way over the course of the week, with the group repeating the cycle of eating, scavenging, relaxing, and strategizing, until one day, Steven made an announcement after coming back from a scavenging mission.\n\n\"Guys, you won't believe this, but A'luhr and I were just down near the campus, and the goo on that one door is gone!\" He excitedly paced back and forth. \"We could sneak in there and grab a bunch of starfi - I mean, magnesium!\"\n\n\"Yes, it would seem that we have access to the building,\" A'luhr confirmed. \"However I am somewhat suspicious as my vibrator was nowhere to be seen.\"\n\n\"Y-your what?\" Zoey asked in surprise.\n\n\"My vibrator. The tool I had with me when I first met Steven. It was lodged in the door. A shame, too, as it can regularly deliver a powerful, disarming noise against the Krinis thanks to its vibrations.\"\n\n\"O-oh! I thought it was... something else.\" Zoey blushed.\n\n\"Do your people also have something like vibrators?\" A'luhr looked at Zoey with an eager expression. \"We must procure as many as possible!\"\n\n\"I believe there are some upstairs...\" Adam grinned mischievously. Sarah elbowed him and he yelped in pain. \"But they are probably too weak to use against the Takers.\" He rubbed his sore side as A'luhr shrugged in disappointment.\n\n\"So what do you all think? Should we go check it out?\" Steven continued. \"This could be our big chance to nab some weapons to kill off that newbie queen!\"\n\n\"I don't know... it seems kind of risky.\" Sarah replied.\n\n\"I agree,\" Adam said. Sarah felt reassured knowing he was backing her up. \"That's pretty far away, and with only one exit, options would be limited once inside if things go sideways.\"\n\n\"But we would have A'luhr with us!\" Steven retorted. \"She'll just kick the ass of any monsters we meet.\"\n\n\"I appreciate that you think so highly of my skills,\" A'luhr said, crossing her arms. \"But I cannot guarantee anything now that I am low on armaments.\"\n\n\"That's exactly why we need to get in there! To get kitted out!\" He desperately tried to convince her.\n\n\"It... would be worth it if we managed to pull it off...\" Zoey agreed. \"We could start to find a real path towards a resolution to all this. We've just been sitting around, simply surviving, for almost a week now!\"\n\n\"Yeah! We need to take revenge for our fallen comrade!\"\n\n\"I agree, Diana and Arlo are still down there!\"\n\n\"Err... yeah... they're who I meant.\" Steven nervously laughed.\n\n\"Fine,\" Adam relented. \"What do you think?\" He turned to Sarah, as did the rest of the group. Put on the spot, she thought for a second and then sighed.\n\n\"Okay, let's do it.\" She nodded. \"But each of us needs to be carrying at least one sparkler and if ANYTHING starts going wrong, we leave immediately. Cool?\" Everyone agreed.\n\nThey got to work gathering equipment they might need, such as the sparklers, lighters, bags, a crowbar, some bottles of water, and the like. A'luhr cut the bottom off of her partially destroyed bodysuit and wore it like leggings as her weapons could more easily be carried this way. She simply threw a rather revealing and loose-fitting tank top over her chest, explaining that she appreciated the mobility and breathability of the material. The men didn't seem to mind it too much. Sarah painfully kicked Adam in the shin when she saw him ogling the large blue mounds barely hidden under the garment.\n\nA'luhr's breasts weren't entirely on display, however. Earlier, Sarah had found a sports bra in another house that she eyeballed to be a good fit for A'luhr, considering that both women seemed about the same size. She showed the alien woman how to put it on and smiled bashfully after A'luhr praised the garment, noting that it would allow her to be even more agile in combat. \n\nSarah was still curious as to why both human and bellus females had permanently enlarged mammaries - a trait otherwise unique to humans - but she figured that A'luhr would have no idea either, so she didn't bother bringing it up.\n\nThe team assembled at the front door of the mansion and, after some glances out the windows to make sure the coast was clear, slipped outside into the overcast afternoon. They stealthy shuffled down the sides of the road, expertly ducking between parked cars, fences, and bushes as they went. Sarah nervously watched the skies for any signs of the dragonflies, but the thick layer of murky clouds made it difficult to have complete confidence each time she confirmed there were none of the creatures in sight.\n\nEventually, the university buildings came into view at the end of the block and they hunkered down behind a fence to get a gauge on the situation. They could see the doorway that A'luhr had been attempting to bash open before. As Steven had claimed, it was no longer obstructed by the ichor, which seemed to have been melted away. All of the other doors they could see were still blocked by the hard substance, however.\n\n\"Maybe your tool malfunctioned, managed to destroy the gunk, then fell to the ground and got blown away in the storm?\" Zoey suggested.\n\n\"That is a possibility,\" A'luhr agreed, still seeming a bit suspicious.\n\n\"Let's go check it out,\" Adam whispered. \"Zoey and Steven, you watch our sides, A'luhr, cover our six, Sarah-\"\n\n\"Six?\" A'luhr asked in a puzzled tone.\n\n\"...It just means to watch behind us. Sarah, you keep your eyes on the skies. I'll move in front so if anything happens I'll be the one to bite it and the rest of you will have a chance to react.\"\n\n\"But that's-\" Sarah started to object.\n\n\"I have complete faith in all of you.\" Adam cut her off and nodded to the group. \"We need to move before something finds us. Let's go!\"\n\nThey crept out across the street towards the doorway, constantly swiveling their heads around to check for danger. Sarah could only imagine that the Lucky Charms she had eaten a week ago had really worked some leprechaun magic, seeing as they had yet to spot and single Taker all day.\n\nThey got to the door without incident and crouched down as Adam peered in through the lightly tinted glass.\n\n\"It seems pretty clear inside,\" he breathed. \"Save for some overturned furniture.\"\n\n\"Do any of you have your ID cards to get in?\" Steven asked, realizing that there was a card reader next to the door.\n\n\"That would have been a good thing to check beforehand, eh?\" Adam gave him a look. \"I do, but we actually won't even need them. The locks operate on an electric timer - I helped install them myself actually - and if the power ever goes out, they become disabled as a safety feature.\" He grabbed the door handle and slowly swung it open to prove his point.\n\n\"Ah, excellent,\" Steven coughed. \"Just as I planned.\"\n\n\"You never cease to amaze me...\" Zoey said, moving into the dark building with the rest of the group.\n\n\"Naturally.\" He winked back at her. She rolled her eyes, which had started to become somewhat of a trademark for her when dealing with her brother.\n\n\"Wow this is... eerie.\" Sarah whispered as they walked through the shadowy interior. She was no stranger to seeing the halls empty as professors often worked in the buildings during the summer months to adjust the curriculum and take workshops, but seeing the campus totally dark and derelict sent a chill up her spine.\n\n\"Where is the chemistry storage?\" Adam asked her.\n\n\"I'm actually not super sure...\" Sarah admitted. \"I guess it's probably near the bio storage, which is on the top floor at the other end of this building.\"\n\n\"Of course it is.\"\n\n\"It's not like the building planners had 'ease of access during alien invasion' on their minds when designing the layout.\" Sarah shrugged. They entered into a small cafe area, which was well lit by the large windows lining the wall. Sarah noted with alarm that almost none of the baked goods still on display had mold on them. They were certainly sure to be hard as rock - though whether or not they had always been that way was up for debate. Sarah didn't much care for the college food services.\n\nSuddenly, a loud clang and the sound of falling metal struck the floor behind them, tearing Sarah from her thoughts as she and Adam jumped in surprise and spun on their heels to face the incoming attack that they were sure was heading their way.\n\n\"S-sorry! Fuck! Sorry!\" Steven stammered. \"I didn't even see that!\" It seemed that he had bumped into a small table and knocked a food tray tumbling to the tiled floor, sending the silverware skittering away from the light of the windows and into the shadows.\n\nThey stood frozen for a second, steadying their pounding hearts, before all releasing a sigh of relief.\n\n\"Be careful, idiot!\" Zoey hissed at him. \"You're gonna get us all fucked! Literally!\" Sarah raised her eyebrow at the pun, which was unexpected from the girl. \"S-sorry...\" Zoey meekly chuckled. \"I've kinda been holding onto that one for a while.\" The rest of them giggled as well, except A'luhr who was squinting her eyes and staring off into the darkness where the silverware had landed. Her eyebrows twitched uncertainly.\n\nThen, out of the surrounding blackness, they heard the sound of a table slowly screeching along the floor. The sickening, high-pitched grating echoed around them before abruptly coming to a stop. Sarah felt the hairs on the back of her neck stand on end as her legs started to gently shake from adrenaline.\n\n\"Th-that wasn't me...\" Steven whispered in a barely audible, hoarse voice.\n\n\"Nobody... make... a sound...\" Adam said through clenched teeth. Sarah desperately willed her heart to stop pumping so loudly. It was deafening in her ears and she was convinced that anyone in a fifty-foot radius would easily be able to hear it. She gulped and felt her mouth become dry with fear. \n\nThey all fought to hide their shaky breaths, but it was a losing battle as a sense of dread began to wash over them. Something else crashed to the floor in the shadows, closer than the previous sound had been.\n\nOut of the corner of her eye, Sarah saw A'luhr very slowly draw a sparkler out of her waistband and hold it to the blade of the dagger at her hip, ready to strike it at a moment's notice. Sarah gripped her own sparkler with white knuckles, trying to quietly fumble through her pocket for her lighter.\n\n\"Stupid!\" She thought. \"Why wasn't I on guard!?\" She inwardly cursed at her own carelessness.\n\nThey stood otherwise motionless for what felt like several minutes without hearing anything else. Just as Sarah was about to take a breath in relief and suggest it was just a rodent or something, A'luhr suddenly whipped her hand away from her hip, igniting the sparkler on the blade of the dagger and thrusting the spraying lights in front of her in one fluid motion. Something humanoid was vaguely illuminated standing a few feet away from them in what had previously been complete darkness.\n\n\"UAAHHH!\" Zoey shouted as the rest of the group stumbled back in surprise. Their shock only increased in magnitude however, as, at the same time,\n\n\"HIIEEEE!!\" A woman's shrill voice rang out in fear near where A'luhr was brandishing her sparkler. With an acrobatic motion, A'luhr spun towards the source of the sound, sweeping the woman's legs out from under her and holding a dagger to her quivering throat while another hand held the sparkler up to the panicked woman's face.\n\n\"Why do you hunt us?\" A'luhr angrily growled. \"Speak now or lose that privilege forever!\"\n\n\"I-I-I-I- Please don't eat me! Oh god! No! Please!\" The woman cowered in terror at the unearthly sight of A'luhr's inhuman features, made even more pronounced by the wildly dancing lights of the sparkler.\n\n\"W-wait! A'luhr, stop!\" Zoey shouted out, running over to the two of them. \"P-professor Wilde!?\"\n\n\"Z-Zoey? Zoey Jones is that you!?\" The woman stuttered. \"Don't let this thing get me! Please!\"\n\n\"Thing!?\" A'luhr spat in dismay.\n\n\"It's okay, A'luhr!\" Zoey pleaded with her. \"She's my Life Sciences professor! I know her!\"\n\n\"Hmph,\" A'luhr snorted, standing back and allowing Zoey to help the woman up off the floor. \"And why, exactly, were you lurking in the shadows watching us? Waiting to pounce when our backs were turned to steal our equipment?\"\n\n\"N-no! Heavens no!\" The woman said, flustered. She straightened out her wrinkled dress and adjusted her large glasses as she stepped forward into the light. Sarah wasn't particularly familiar with all of the general education professors, but she did vaguely recognize the women. She looked to be in her late 40's, with long, dirty-blonde hair that was in complete disarray, dark brown eyes that were magnified through her lenses, and a surprisingly full bosom despite here narrow frame... though Sarah didn't want to be impolite and stare. \"I was just approaching to see if you were friendly but then I saw this... creature standing there and thought you were all like that! I froze up!\"\n\n\"Everyone, this is Professor Mary Wilde.\" Zoey briefly introduced her to the rest of the group, ending with A'luhr, who was still eyeing the frail-looking woman suspiciously. \"...And this is A'luhr. As you have guessed, she's... not from around here... but she's been a huge help! You can trust her!\"\n\n\"I... I see...!\" Mary stammered. \"A pleasure, I'm sure.\" She said, shaking everyone's hand, except for A'luhr's who refused to take it. Sarah wasn't sure if she didn't understand the custom or simply had a distaste for the woman. \"I've been hiding here all alone for months now! Giant monsters are roaming the streets but they don't seem to find me in here! So I've been surviving off of the food in storage and the water in the toilet reservoirs! Just what is going on out there!?\"\n\n\"We really don't have time to explain, Mary,\" Adam calmly said. \"We need to get to the chem lab storage as quickly and quietly as possible. Do you know where it is, exactly?\"\n\n\"Why, yes! Yes I do!\" She bobbed her head up and down. \"I've passed by it a few times!\"\n\n\"Awesome!\" Steven pumped his fist. \"Can you take us there?\"\n\n\"Of course! Just follow me!\"\n\nThe group looked at each other and shrugged, walking after the woman. A'luhr seemed to relent and tossed her spent sparkler onto the floor as they went. They quietly winded their way down a few other halls and up some short flights of stairs, heading towards the science wing. They finally got up to a long skywalk that led into the next area, with large windows forming the walls on both sides and offering a spectacular view of the campus grounds below. As the group filed across it, Sarah noticed something strange in the well-lit corridor: Mary seemed to be tracking a thin, wet trail along the floor from underneath her dress as she walked.\n\n\"So... Mary... was it?\" Sarah quietly spoke up, slightly slowing her pace.\n\n\"Y-yes?\" The woman in the lead responded without looking over her shoulder.\n\n\"How did you manage to avoid being dragged away back on the first day of all this? We saw the school - it was completely overrun...\"\n\n\"I suppose I just got lucky?\" She shrugged and adjusted her glasses. \"I'm sure there were several others who got away as well. How silly that we were in such a panic despite being right next to a trove of magnesium throughout the attack!\"\n\nSarah stopped in her tracks, making Zoey bump into her back by mistake.\n\n\"How did you know we were here for magnesium...?\" Sarah slowly asked in a cautious voice. \"We never said anything about that.\" Mary abruptly came to halt with her back still turned to the rest of the group. Sarah felt her face lose its color as she reached behind her to motion for Zoey to step back. Suddenly, Mary let out a small, giddy laugh.\n\n\"It doesn't really matter why you're here.\" She turned and smiled at them, with a distant look in her eyes. \"You will soon know the warmth of the Krinis's embrace, just as I have.\"\n\n\"GET BACK! IT'S A TRA-!\" Sarah started to shout, but it was too late.\n\nSMASH!\n\nSeveral flying Takers suddenly crashed through the glass windows of the skywalk, sending glass flying. Mary laughed drunkenly as she watched the creatures lash out at the group with dozens of nimble tentacles.\n\n\"FUCK!\" Steven yelled as tentacles wrapped around his limbs, knocking the unlit sparkler from his hand. The rest of the humans weren't faring much better. Adam was grunting and struggling in vain against the powerful appendages tightly binding his arms to his sides, while poor Zoey couldn't even make any sounds at all as tentacles had already completely engulfed her upper. Her flailing legs kicked at the air as the creature started to take flight.\n\nSarah had managed to ignite her sparkler in time, having already had her lighter ready to go from the earlier scare. She pushed back the Taker that had targeted her and quickly spun around to slice through the tendrils binding Zoey, which turned to ash as the monster shrieked in agony. Suddenly, Zoey's face burst free from the tentacles, allowing her screams to echo around the surrounding campus. \n\n\"I knew this woman was a danger!\" A'luhr yelled, fighting off two of the Takers at once while dual-wielding sparklers. \"She is a thrall to the Krinis, just like your friends!\" A'luhr cut down pivoted and vaulted towards the woman, ready to take her down, striking at the scattered Takers along the way.\n\n\"They Krinis are kind masters,\" Mary replied, now lewdly fondling her tits with one hand while rubbing the fingers of her other hand against the crotch of her dress, which was getting damper by the second. \"They will show you a happiness that was impossible in our imperfect world before. Do not resist their love! Join us in ecstasy!\" As she shouted the last line of her speech, several tentacles suddenly slithered out from under the hem of her dress, as if exiting from her vagina.\n\nThe tendrils shot out and caught the surprised A'luhr in midair, holding all four of her limbs in a spread eagle position. Mary laughed gleefully as she watched the alien woman struggle valiantly against the tentacles before staring daggers at her captor. \n\n\"A'LUHR!\" Steven hollered. Sarah freed him from his captor and he fell to the ground, scrambling to pick up the sparkler he had dropped. He didn't get a chance to do anything though as A'luhr had already made her move.\n\nLooking down at the writhing woman below her, A'luhr seemed to give up her fight, the sparklers slowly beginning to die in her hands. But suddenly, a light gleamed in her eyes and she flicked the glowing sticks into the air above her head using the strength of her fingers alone and deftly caught them with her long eyebrow-like antennae. She swung her head forward and jammed the smoldering ends of the sparklers into one of the tentacles binding her, slicing through it and creating a blistering wound.\n\nThe squirming mass between Mary's legs suddenly jerked around in pain, knocking the woman off of her feet. A'luhr had apparently been aiming to completely sever all of her bonds with her last stunt, but one tentacle still remained around her left ankle, leaving her hanging upside down and causing the loose fabric of her tank top to fall over her face, exposing her tightly restrained chest and blocking her vision. She attempted to blindly swing up at the last tentacle but wasn't quite able to reach it. \n\nSteven dashed forward as Sarah and Zoey continued to push back the three remaining Takers with their rapidly weakening sparklers, trying to push past them to save Adam. Steven leapt into the air, his sizzling sparkler outstretched towards the tentacle around A'luhr's leg. She managed to push the tank top out of her eyes and, as if in slow motion, the two of them locked eyes for a moment... before the flailing tentacle holding A'luhr suddenly hurled her violently through the broken glass wall and down to the ground three stories below.",
        "\"NO!\" Steven shrieked, rushing over to the gap where A'luhr had just been seconds before. As he neared the opening, he heard his sister let out a shrill shout from behind him,\n\n\"STEVEN!\"\n\nHe didn't even have time to turn around.\n\nHis world went black as a flying Taker blasted through the hole he was standing next to, ensnaring his entire body with one flourish of its tentacles before rocketing off into the clouds on the other side of the skywalk.\n\nSarah faltered in shock after seeing A'luhr get thrown from the building and Steven taken away by the flying monster. This opening was all that the other Takers needed, especially now that her sparklers were little more than charred rods at this point. \n\n\"S-SARAH! HELP M-!\" Zoey shrieked as tentacles once again quickly wrapped around her curvy body, dragging her into the sky towards her brother, and leaving her broken glasses on the floor.\n\nAdam had also been grabbed during the distraction and the tentacles were quickly winding their way over his muscular form. He struggled and bit at the appendages, but they failed to react in any way.\n\n\"SARAH!\" He yelled, snapping her out of her shock. \"GET THE MAGNESIUM FROM THE LAB! GO! WE'LL FIND A WAY T-\" His voice was silenced by several thick, slimy tentacles that engulfed his head. Sarah watched in despair as her boyfriend got lifted away by the winged abomination, leaving her alone on the skywalk with Mary.\n\nSarah didn't have time to mourn, she simply swore inwardly at herself for being so foolish as to go along with such a risky plan. She started to sprint down the hall past Mary, who had stripped completely naked during the scuffle and now seemed to be lost in orgasmic bliss as she frantically fingered herself through the writhing tentacles that spread her pussy wide. \n\nSarah reached the end of the skywalk and grabbed the doors to throw them open, but suddenly she felt powerful tendrils grab her limbs from behind and drag her backwards towards the ceiling.\n\nShe was spun around in midair to face Mary, who had regained her composer, adjusting her glasses again. Sarah confirmed that the several tentacles binding her were indeed protruding from the inside of Mary's gushing slit. Her large, sagging breasts jiggled as she laughed up at Sarah's feebly struggling form. Mary reeled Sarah closer to her body and ran a hand up under her captive's shirt, sliding a thin finger beneath the center of Sarah's bra and between her heaving boobs.\n\nSarah gritted her teeth as Mary teasingly tickled her cleavage with a long fingernail before curling it into her bra cup and playfully grazing her nipple. She ran another hand down Sarah's trembling waist to squeeze at her firm ass, letting out a cheerful giggle.\n\n\"You've been with us before...haven't you?\" Mary said in a whimsical voice. \"Mmm... how I'd love to welcome you back to the family personally...\" She moved her hand from Sarah's butt and gently rubbed the bound woman's crotch. \"But our mother wants to have a word with you first.\" Mary's face drooped into a pout. \"I'll come visit you soon so we can play though, doesn't that sound nice, hm?\"\n\n\"Fuck. You.\" Sarah growled defiantly.\n\n\"No, no - didn't you hear what I just said?\" Mary grinned. \"That comes later.\" Then, without warning, her tentacles threw Sarah out of the skywalk. \n\nSarah screamed as she tumbled through the air but the sounds of her distress were quickly muffled as another Taker shot down from the clouds and snatched her up before she could even fall a single story. \n\nThe last thing she saw before her eyes were covered by squirming tentacles was a glimpse of A'luhr's crumpled form, shakily rising to her feet far below, with a small silver orb in her hand.\n\nAs Sarah felt the tentacles tighten around her immobilized body, she squirmed in terror, but also, perhaps, anticipation.\n\nEND OF PART 4"
    ],
    "authorname": "worldender",
    "tags": [
        "tentacles",
        "alien",
        "sci-fi",
        "mind control",
        "romance",
        "vanilla sex",
        "romantic"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/earth-tentacle-breeding-ground-ch-04"
}