{
    "title": "The Old King and the New Bride Ch. 03",
    "pages": [
        "Chapter 3: Major Bitches and Body Switches\n\nI stare at him in shock, my jaw smashing through the bed and denting the floor. Nipple piercings? Now? I've just been crowned as his queen, seen my mother kneeling before me in rags, and recovered from a good session of slow, sweet lovemaking. And he wants to do this now? I sigh. I love Lucifer, I do, but I will never understand this man...creature...thing that he is.\n\nTaking a deep, ragged breath, I stare him in his bright gold eyes. \"Really?\"\n\nHe grins. \"Yep.\"\n\n\"Why now?\"\n\nHe shrugs. \"Why not?\"\n\nI can't think of a good answer, but I'm apprehensive nonetheless. I raise my arms against my chest, covering what I can of my breasts. I start chewing my lip out of nervousness, my heart rate starting to go berserk.\n\nLucifer frowns at me, concerned. \"Michelle.\"\n\n\"I don't know,\" I manage to whisper. \"I don't like pain. I got my ears pierced when I was twelve and I screamed like a banshee.\"\n\nThat makes him pull away and think of a response. \"It won't be that bad. It'll only hurt for a second.\"\n\nMy eyes flick down to the box of hoops and studs. \"I'm nervous.\"\n\nHe offers me a small smile. \"You know you get to pierce me, too.\"\n\nI stop chewing my lip and cock my head slightly. That does make me feel a little better. If I get to give him a few piercings as well, then at least it's fair. I won't suffer alone.\n\n\"We could have them engraved.\" His grin is almost contagious.\n\nDespite my apprehension, I can't help but laugh. \"What? Like have our initials in the studs?\"\n\nHe smiles and nods. \"If you'd like. Might help with keeping other people's hands off our property.\"\n\nI shake my head and scoff. \"Lucifer, the only way Leyna is ever going to leave you alone is if you kill her or have 'Property of Michelle' tattooed on your ass.\"\n\nHe thinks for a minute. \"I like the engraved piercings instead.\"\n\n\"Only because you get to manhandle my boobs,\" I counter.\n\nHe grins again. \"Damn straight.\"\n\nI smile and roll my eyes. He's certainly charismatic, almost impossibly so. He could convince the pope to lose his virginity or a demon to convert to Catholicism. I can understand why so many people fear him: his influence on the human soul is terrifying. And now, even as his queen, some of that charisma is starting to get to me.\n\nI take a deep breath. \"If that's really what you want to do...\"\n\nHe nods. \"Think of it as a wedding present.\"\n\n\"For whom? You or me?\" I eye him cautiously.\n\n\"Both of us.\" He scoots closer, pushing the box of metal aside so his thigh touches mine. His eyes stare into mine, almost burning my retinas. \"I promise to make you feel better once they're in.\"\n\nI stare at him. \"How?\"\n\nHis smile turns wicked. \"What's better than a warm tongue on a tender nipple?\"\n\nI let out an exasperated laugh. \"You're hopeless.\"\n\n\"And?\" He leans I close, his nose brushing mine.\n\n\"And you're crazy.\" I mirror him, pushing forward until our lips touch.\n\n\"And?\" His mouth meets mine, doling out soft, tender kisses that make me shiver.\n\n\"And you owe me for this,\" I whisper against his mouth.\n\n\"Now or after?\"\n\nI pause, holding back on my end of the kiss while I think. \"Later. It'll take what's left of the edge off.\"\n\nHe halts his delicious kissing and smiles against my lips. \"Deal.\"\n\nHe pulls away and reaches over to grab the small box of studs and hoops. He slides it between us, holding it open for me to see our choices.\n\n\"Now...what'll it be?\"\n\nI stare at the assortment of tiny metal piercings, excited yet totally lost. I don't know which to choose. There are plain metal hoops and studs, barbells with small glass designs on the end, carved bone gauges and an array of small sparkling gemstones that can be attached to anything in the box. There are so many choices I can't decide what to have shoved into me.\n\nA flashback races through my mind: my dream. My nipples pierced with small gold hoops, my belly pierced with a gold barbell. Each has a tiny black gem that dangles from delicate gold chains.\n\nAlright. I guess we'll do that.\n\n\"Gold hoops,\" I whisper.\n\nLucifer's eyes flick to me. \"Following your dream?\"\n\nI stare back, slightly stunned but elated. He remembered my dream and knows exactly what I'm planning. That's more than mom has ever done for me.\n\nI nod. \"Yeah.\"\n\n\"You know we don't have to follow your dream exactly,\" he nudges my hand. \"You can do this any way you want.\"\n\nI shake my head. \"It kind of feels like that dream meant something, like that's what I'm supposed to have. Like my mind was trying to tell me something. A guarantee or a premonition. And if really that's the case, I'm not in the mood to tempt fate.\"\n\nHe laughs. \"Alright then. If that will make you feel better about this, we'll copy your dream. Now, what else was there...Oh, yes! There was a belly piercing.\"\n\nDamn. Someone's got a good memory.\n\nLucifer digs around the box and pulls out two small matching hoops and a gold barbell. He holds his hand out and lets me take the. They're cool to the touch and heavy, but nothing that would cause my much discomfort.\n\nHe sits back, staring at the box. \"We're missing something.\"\n\nI nod. \"Black stones.\"\n\nHe looks ready to smack himself. He sighs and digs through the box again, producing three tiny faceted stones attached to thin gold chains. He places them in my hand and sits back, watching me.\n\n\"What?\" My voice is shaky, almost nervous.\n\nHe glances down at the box. \"Choose.\"\n\nI cock my head in confusion. \"Choose what?\"\n\n\"We had a deal. We pierce each other. You have yours. Pick mine.\"\n\nOh boy.\n\nI take a deep breath and stare down at the box, scanning through the endless menagerie of metal pieces. Once again, I'm stuck. What piercing could possibly befit the ruler of Hell? I immediately decide against any gemstones, gauges or pieces that are horrifically girly. My gut tells me he needs something manly, something sturdy and rough. Something that will solidify his status as a male...A male with a nipple piercing.\n\nI scan through the box one last time, and thankfully, my eye catches something worthy of being attached to Lucifer's otherworldly body. It's a thick hoop of black metal, nearly an inch in diameter and covered in small spikes. I reach down and grasp it, holding it gently in my palm. It's heavy, but not so much that he'll be uncomfortable. Swallowing loudly, I look up at Lucifer and hand him my selection.\n\nHe cradles it in his palm and smiles at me. \"Quite a masculine choice.\"\n\nI shrug. \"I didn't think a barbell with pink glass hearts would fit you.\"\n\n\"Really? I think it would have been a perfect match,\" he teases.\n\nI smile a little. At least he's in good humor for this. I'd hate to have him coming at me with a nipple ring on a bad day.\n\n\"Who wants to go first?\" His eyes are alive with excitement.\n\nMy gut clenches instinctively. I'm not going first. I'm not sure if I even want to do this.\n\n\"Michelle?\" He grins viciously.\n\nI shake my head frantically. As much as I appreciate his enthusiasm, I'll respectfully pass on being first.\n\nHe nods. \"Oh, I think so.\"\n\nI shake my head again, scooting back an inch.\n\nHe sighs, but his smile never fades. \"Do I have to pin you down for this?\"\n\nMaybe.\n\nI shake my head. \"No. I just... Alright.\"\n\nHis eyes soften a bit. \"Michelle, if you're really that scared-\"\n\nI force a smile and shake my head. \"I'll be fine. I live in a dark, fiery underworld filled with demons and tortured souls. I need to get over my anxiety if I'm ever going to survive here.\"\n\nHis smile returns. \"Good girl.\"\n\nHe turns and digs through the box, finally pulling out the longest, sharpest, most terrifying needle ever created. It's pure silver and carved with the intricate markings that make up the demonic tongue. It's beautiful, but horrifyingly sinister. And it's going to poke me.\n\nLucifer pushes the box aside and shifts closer to me. He holds up the needle, the shining tip glinting right in front of my eyes. He smiles and blows on it gently. The silver starts to glow bright red. I swallow loudly, my gut spinning itself into so many knots that the makers of the Twister game would be amazed.\n\nHis smile never waivers. \"Ready?\"\n\nNot really, but I'm here.\n\nI nod despite my growing panic. I'm terrified, but I know if I don't plant my feet and grit my teeth, he'll probably see me as a weak queen who has no business ruling here. I've already admitted to myself that I somehow love him, so being cast aside for being scared -- and possibly being supplanted by Leyna -- is not an option. I'll have to bite the bullet on this one and cry myself to sleep later.\n\nHe reaches out and plucks one of the gold rings from my palm. He inches closer, folding his legs across the bed. With one hand, he reaches out and wraps his arm around my waist, pulling me forward and into his lap. Fisting my hand around the other piercings, I loop my arms around his neck and hold on tight.\n\nThis is gonna hurt, this is gonna hurt, this is gonna-\n\n\"Hold still. This will only sting for a second.\"\n\nI nod and tighten my grip. My heart is racing, my lungs have ceased and my thoughts have stopped. He's all the stability I have left.\n\nHe holds me close against him, angling me back a bit so he has a good view of what he's doing. I hope he knows what he's doing as well. God forbid this is his first time and I end up with more holes than a block of Swiss cheese.\n\nHe raises the needle to my nipple and I recoil a millimeter. I can feel the heat radiating off the metal and my stomach starts to twist.\n\n\"Deep breath.\" He moves the needle a hair's breadth closer.\n\nI nod and force my lungs back to work, inhaling a long breath just as he presses the needle's tip against my nipple and pierces my skin.\n\nHe's right. The pain only last a second, but it's the longest, most agonizing second of my life. I manage to clamp my jaw shut, but streams of tears replace my screaming. I whimper once as the needle passes through my skin, and again when Lucifer slides the cool metal of the ring through the fresh hole. I dig my fingers into his shoulders, holding on for deal life as my body is marked as his.\n\nA heartbeat later, the pain has lessened. I still wince when a slight breeze from his breathing brushes against my nipple, but it's no where near the pain I had before. This is bearable...barely.\n\n\"Ow,\" I whisper, wincing slightly.\n\nLucifer's bright eyes flick up to me. \"Are you alright?\"\n\nI take a long breath, exhaling slowly. \"Mostly. A little sore and freaked out of my mind, but I'm okay.\"\n\nHe smiles. \"My poor sweet queen. Here, let me sooth your wound.\"\n\nMoving the still-glowing needle away from my skin, he leans in and wraps his lips around my nipple. Heat and pain is replaced by cold and numbness. His tongue gently paints circles around my wounded nub, soothing my aching body and reigniting the fire in my belly. I won't lie, his mouth feels damn good. It's cool and soft and everything I need right now. He's more than just an extremely experience kisser; those lips might save my life one day. Or at least heal me when I'm accidentally pierced by an arrow or something.\n\nHe pulls away too soon, but he's done his job. The pain his disappeared from my skin; my nipple, which was swollen and red from the piercing, is now back to it's regular rosy pink. I still miss his mouth on me, but I'm relieved to be healed of my injury.\n\nLooking down, I inspect the damage. A tiny gold ring, no more than half an inch in diameter, loops through my skin. Below it, a thin strand of gold chain connects it to a tiny black faceted gemstone. I sigh and smile a bit. It's was painful, but worth it. It's a lovely piece, exactly like my dream, so I feel better about having it in me. That, and it also makes me feel damn sexy.\n\n\"Better?\" Lucifer's tone is playful and inquisitive.\n\nI lean forward, pressing my newly bejeweled breast against his chest. \"A little. I'm still sore.\"\n\nCome on! Again! Please again!\n\nHe laughs and angles his head to kiss me. \"Have patience. Let's get this next one in and I'll give you more attention.\"\n\nI groan and lean back, sulking slightly. I pout at him, silently willing him to change his mind and launch himself at me.\n\nGod, what's wrong with me. Am I five?\n\nHe crooks his finger at me. \"Two more and you're done.\"\n\nI sigh and pull back my pout. Begging won't work here, but compliance will. The faster we finish this off, the sooner we can go back to destroying the bed. I reposition my grip on his shoulders and straighten my spine. He brings the needle back and picks up the second small hoop. Although my gut clenches again, it's nowhere near the anxiety I felt before. I've survived nipple ring number one, so number two should be a bit easier.\n\nHe moves faster this time. Instead of going slow so I have time to prepare, Lucifer gives me one second of soul-searching before running the needle through my other virgin breast. It hurts, but my body's now accustomed to the pain, so I wince instead of crying. I'm also holding my self stiller than before, which means ring number two goes in easier and I don't have to strain my body as much.\n\nOnce the ring is in, I relax a bit and exhale slowly. My other nipple now matches my first with its tiny gold ring and small black jewel. They're quite beautiful, these tiny little gems that adorn my body. I feel like I'm having ornaments stuck into my skin, like some horrifically perverted version of a Christmas tree. I love it, though. I feel sexy and free, as if this is my rebellion against my mother.\n\nI'm still a little sore, and I intend to be soothed as soon as possible.\n\nLucifer does exactly what he's supposed to, pulling the needle aside and leaning in to ease the throbbing in my breast. I have a plan for him; he's not pulling away so soon this round.\n\nHis lips wrap around my nipple and I moan softly. As evil and tempting as he is, he really shouldn't feel this good. Nothing should feel this good, yet here I am, wrapped in the arms of a fallen angel getting my rocks off with him suckling my breast. I've lost my damn mind and I don't care.\n\nAs he continues to lave my tender skin, I manage to claw back some of my sanity so I can move. I reach around his neck and tread my fingers into his soft, messy hair, pulling him close and holding him in place. He's startled slightly and his fingers dig into the bedding, trying to push away. I hold him steady, throwing my head back and closing my eyes so I can revel in the prolonged sensation of his mouth on my skin.\n\nMichelle.\n\nI freeze, my breath halting in my throat. That's not my thought voice. It's deeper, darker, slightly annoyed. My gut clenches again, a small spark of fear rocketing up my spine.\n\nSorry.\n\nI untangle my hands from his hair and lean away, giving him back his freedom and relinquishing any control I have over my own pleasure. He sits back and stares at me with hollow eyes, his brows slightly creased, his lips turned down in a frown. He's upset, all because I wanted more and had the balls to take it.\n\nI turn and stare at the wall, scowling at the stone. I do love him, and I'm honestly trying to have patience, but it's becoming increasingly difficult to deal with his controlling, aggressive attitude. I shouldn't be surprised, but I am annoyed. He's had a shit life and dealt with some fucked-up circumstances, but he has the mind of a self-centered teenager.\n\nHe sighs, almost exasperated. \"Michelle.\"\n\nI glance at him, still glowering in the wake of his less-than-gentlemanly silent scolding.\n\nHis eyes have softened a bit, becoming a bit more apologetic. \"I just need you to relax, alright? If you try to push me down a more sexual street, I'll end up slamming you into the bed and we'll never get this done. I need you to stay still so I can concentrate and not accidentally scar you. Once we're finished, we can destroy the bed.\"\n\nI clam down a bit. He's not mad, just frustrated. He's got good logic, though. The more I try to nudge him away from finishing this piercing session, the less focus he'll have and the more likely he might make a mistake and harm me. I nod and turn back to face him, looping my arms around his neck one last time.\n\nHe takes the small gold barbell from my palm, smiling at me. \"Last one, then it's my turn. After that, we can trash the room.\"\n\nI nod, my smile returning. Secretly, I look forward to having a go at this. Watching his reaction to me shoving a needle into his skin should be very entertaining.\n\n\"Lean back a bit.\"\n\nI nod and grip his shoulders as I slowly lean my body back, giving him access to my torso. Once again, the heat from the needle pulses against my skin, just enough to let me know it's there. I take a deep breath and squeeze my eyes shut, jerking slightly when the needle pierces my belly. Again, the pain only lasts for a second, and the cool metal of the piercing helps sooth my skin. Lucifer's tongue doesn't magically appear to ease the burn, but his icy fingers do the job just fine.\n\nA minute later, I've caught my breath and have pulled myself back up. I don't look down at my stomach to see the piercing, but I know it's there. I've got three piercings altogether: one in each nipple and one in my belly, each with a small black gem. Exactly like my dream. I'm now marked as Lucifer's queen, a bit like having a \"Property of...\" tattoo on my skin. These are far more scintillating, however, and much more fun.\n\nIf Leyna ever tries to make a move on Lucifer, I can just pull down the top of my dress and shut her up.\n\nLucifer smiles at me. \"Okay, you're done. Was that really so bad?\"\n\nI sigh and roll my eyes. \"No.\"\n\n\"Good.\" He gently lifts me away from his body and hands me the needle. \"My turn.\"\n\nShit. How am I...I don't know...\n\nHesitantly, I take the needle from him. Although glowing red, it's cool to the touch and easily handled. A clever trick, but something I'd expected. He'd never hand me a truly hot needle and allow me to burn myself. I'd slap him.\n\nI take a deep breath and steady myself, rolling the spiked ring I've chosen for him between my fingers. I don't know why he's allowed me to do this. I'm no seamstress-I've never even sewn a button - and I've certainly never jammed a needle into anyone's skin. He's risking serious bodily harm with me doing this, but if it's what he wants, I suppose I'll have to do it.\n\n\"Okay,\" I manage to center myself. \"Hold still.\"\n\nHe smiles and straightens his spine, holding perfectly still so I have a good shot. \"Don't scar me.\"\n\nI give a nervous laugh. \"No promises.\"\n\nI take one last breath and hold the needle close to his skin, aiming the tip at his nipple. I'm shaking slightly, throwing my aim off a bit, but I manage to pull my nerves together. I don't want to mess this up and accidentally mar that gorgeous skin of his. I'd never forgive myself.\n\nShoving my anxiety aside, I focus my gaze on his skin and quickly force the needle through his flesh. Lucifer gives a sharp groan, squeezing his eyes shut and gritting his teeth. Panicking but still clear-headed, I pull the needle away and manage to slide the ring into the fresh hole and screw it closed.\n\nThere.\n\nI take a slow breath and set the now-cooled needle into the box of rings and studs, relieved that I managed to pierce him without doing any unnecessary damage. We're both fine, albeit a little rattled.\n\nI look at my body, now full of metal and stones, then back to his. We've marked each other as our own, alerting others to the fact that we've been claimed by another and are unavailable. He is mine and I am his.\n\nLucifer glances down at his chest, a slow smile spreading across his face. \"Not bad. You did a clean job.\"",
        "\"Thanks,\" I offer a slight smile.\n\n\"No blood or anything.\" His eyes flick to me. \"I'm impressed.\"\n\nI pause for a moment, suddenly curious. \"What color is your blood?\"\n\nHis smile turns sly. \"What do you think?\"\n\nI shrug. \"It can't be red. You're not mortal. And the old Greek gods were supposed to bleed gold and silver. So...maybe black?\"\n\n\"Good girl.\" He leans in and kisses me - a slow, burning kiss that sets my skin on fire and starts to melt my bones. \"Smarter than your mother gives you credit for.\"\n\nGently, I lean back onto the bed as Lucifer crawls forward with me. His chest presses against my breasts, and the chill of his skin numbs any lingering pain from the rings. My back presses against the soft bedding, and I'm pinned under my husband's weight. I'm trapped between a warm bed and a soft body and have no way of escaping.\n\nHow I despise my cruel, undeserved fate.\n\nMy arms automatically loop around his neck and pull him close as our kiss deepens. I run my hands down the length of his back, feeling the lean muscles hidden just under the skin. It's amazing that so much strength can be held in such an unassuming body. He's nothing like the muscle-bound juice heads that compete in body building competitions; he's much leaner and less testosterone-fueled. But even taking away his immortality and supernatural strength, he could punch through a wall of rock with less effort.\n\nSandwiched together, both of our bodies kick into autopilot and let our baser instincts do the talking. His hand slides down the length of my torso and over my hip, stopping at mid-thigh and slipping under my leg. He lifts my leg high, hooking my knee over his hipbone so we're locked together.\n\nOur kiss has deepened to a level beyond normal passion, and another round of eat-your-face-off kissing has started. It's amazing how close we've gotten in a matter of days. Lucifer spilled his soul -- what's left of it, anyway -- to me in the bath, and now we've personally marked each other with the metal that now accents our skin. It must be incredibly difficult for him to get this emotionally close to anyone, but its progress. A few more days and I might attempt a striptease if he proves himself.\n\nStop. Destroy that idea this instant. A striptease? As if I can dance?\n\nMy logical voice tries to dissuade me from attempting the impossible -- dancing well enough not to embarrass myself -- but my rebellious spirit has a death grip on the challenge and won't let go. I've made my decision. Good behavior on Lucifer's part equates to a striptease from me. It sound incredibly fair since we'll both be out of our comfort zones, and we both might enjoy seeing my parade around in a lace thong trying my best to seduce him.\n\nHell, if I can get him to fuck me seconds after he spilled his heart in the bathtub, I can do anything.\n\nOur embrace lasts far longer than expected, but neither of us cares. We should have started tearing the bed apart about five minutes ago, but it's wonderful to just lay here and hold each other. I chalk it up as another small victory in making him a little more open. I've discovered the more intimate we are, the more honest and warm he becomes. That's really good news; I can use the idea of making him more trusting and open as an excuse to drag him to bed five times a day.\n\nA knock at the door startles us out of our embrace. I pull away, scrambling to the edge of the bed and pulling the sheets to my chest. I may be queen of the underworld, but my body is for my husband's eyes only. Lucifer himself groans, scowling at the wall for a moment before pushing himself up.\n\n\"What?\" he snaps.\n\n\"Sire. We've brought the queen's new servant as you requested.\"\n\nNew servant?\n\nLucifer's eyes brighten instantly. \"Perfect! Bring her in!\" He turns to me, a wicked smile sharpening his features. \"I have a gift for you.\"\n\nI stare at him, confused and curious. \"A gift?\"\n\nHe nods. \"Think of it as a wedding present.\"\n\nI swallow loudly. This can't be good.\n\nThere's a commotion outside. I can hear the deep voices of demons mixed with a higher, more fragile voice of a woman. My heart clenches a little. The poor girl. I must be getting a new arrival that has to pay off a debt. I sigh and stand, tossing the sheets aside and turning to stare at the door. Lucifer disappears from my line of sight for a second, then returns carrying a beautifully embroidered black satin robe. I shrug it on quickly, pulling the tie at the waist and knotting it tightly. The last thing I need is one of my newly pierced boobs to pop out while this girl is being hauled in to begin her punishment.\n\nA knock at the door signals that our company has arrived. Lucifer turns to me and smiles, then stares at the door and nods. It swings open of its own accord, revealing two massive demons standing outside. They step in quickly, dragging my new servant behind them. Her head is down and her body covered with filthy rags, hiding her from view. The demons pause a few feet in front of us and shove the woman to the floor. She goes willingly, falling to her hands and knees and hanging her head. Stands of short sandy blond hair fall in front on her face, shielding her from my eyes.\n\nLucifer nods again. \"Stay. She'll need to be escorted to her quarters after she's introduced to the queen.\"\n\nThe demons nod and step back a bit, giving us room to maneuver.\n\nLucifer steps up to the woman, stopping just inches in front of her hands. \"I'd hope you have some idea of why you're here.\"\n\nThe woman nods, her blond hair moving slightly. \"Yes.\"\n\nLucifer starts to slowly circle the woman. \"And why are you here?\"\n\nThe woman is shaking slightly. \"I-I had made a deal with you and backed out at the last minute.\"\n\nI'm slightly stunned. She sounds much older that I'd expected. I was imagining some nubile teenager who'd sold her soul to become popular, not a middle-aged woman who'd weaseled out on a deal.\n\nMy breathing stops. Dirty blond hair. Middle-aged. Backed out of a deal at the last minute.\n\nOh no.\n\nMy stomach completes a double backflip. I'm silently praying that my instincts are horribly wrong and it's simply a woman who looks like my mother. But somewhere deep inside of me, I know my hopes are useless. What I'm looking at is the final product of my mother's endless dealings and manipulations. All those years of using and abusing people have finally caught up to her.\n\n\"Lift your head,\" Lucifer snaps. \"Do not be rude to your queen.\"\n\nThe woman nods and slowly raises her head. A woman in her mid-forties with a round face and pin-straight blond hair peers up at me. Thin-lipped and well tanned, her emerald green eyes stare up at me with a mixture of fear and apology.\n\nI take a long, slow breath, exhaling loudly. My mother, the woman who had tried and failed to raise me for nineteen years, has become my personal servant. Our roles have been reversed, with me now being completely in charge and her being subservient to me. Dear God, how do I handle this?\n\nIt's ironic, really. She spends all her life dreaming of becoming a part of royalty - even selling her soul and bartering off her daughter to attain that dream -- only to end up serving under a queen. Karma can be a real a bitch sometimes, but I never question her.\n\nI take another slow breath. All the years of anger and rebellion begin to bubble to the surface, making my new position all the more perilous. She's done so much harm to so many people that I'm fairly justified in smacking her around as much as I want. Besides, I'm queen. No one would challenge me if I did. In the underworld, it would actually be expected that I did torture her and make her pay.\n\nBut none of that is really me. Unlike my mother, I get no satisfaction or personal gain from using or harming others. Unless it was a dire situation where harming her was the only way to save my mother, I could never bring myself to hurt her, no matter how much she deserves it. I shove down all the anger and resentment I feel towards her and let my rational mind step up to the plate instead.\n\n\"What happened to Richard?\" My voice is soft but fueled with anger. If she's gotten him or my step-brothers hurt, I'll explode.\n\nRelief washes over her face. \"He's fine. So are Daniel and Marcus.\"\n\nI'm relieved, too. At least they're safe. Of out entire family, they came out unscathed and alive. They may have lost a sister and a wife, but they're okay.\n\n\"Where are they?\" I'm slightly calmer, but no less pissed.\n\n\"At home.\" Her voice is soft, nervous.\n\nI nod, turning away to avoid eye contact. I'm excited to know that the rest of my family is safe, but I'm still pissed at my mother. I'll be honest, I do get a small amount of satisfaction knowing she's finally gotten her comeuppance. It's slightly refreshing to see a person who's done so much damage and been so self-serving have her plans blow up in her face. But, again, I have no desire to shove her around and humiliate her. I'll make damn sure she knows her place below me, but she'll be fed and clothed and treated like a normal person.\n\nI sigh. \"Get up.\"\n\nMy mother stares at me in shock for an instant, her eyes flicking fearfully to Lucifer. \"But I...\"\n\n\"Mother, please get up.\" My tone is cold, but not emotionless.\n\nShe nods quickly and rises to her feet, brushing the dirt and soot from the rags she's been dressed in and squaring her shoulders. Her eyes meet mine and stare coldly. Two sets of eyes - emerald green and hazel - are squaring off.\n\n\"Alright,\" I sigh. \"Let's get you out of those rags properly dressed.\"\n\nBoth my mother and Lucifer stare at me, stunned. They've both expected me to go thermonuclear on mom and tear her to pieces. Instead, I do the opposite and act rationally.\n\nI turn to my husband, giving him my patented exhausted look. \"She's my mom. Hell yes, she's fucked up, but I'm not going to treat her like an animal. I can't use and abuse her just because she screw me over. I was raised better than that.\" I can't help taking the shot. It might rattle my mother's cage enough that she'll shape up a bit.\n\nMy mother's eyes narrow an inch, a dead giveaway that she's gearing up for a fight. \"Your father raised you to be sweet and gentle, Michelle. He never taught you how to protect yourself or go after what you wanted. I taught you that. All you ever learned from him was how to pitch.\"\n\nDamn straight.\n\nMy mother, for once, is telling the truth. She taught me the art of manipulating people and fooling boys to get what I want. As if I really needed help there -- mom once remarked that my chest could convince a gay man to sleep with me. My father, on the other hand, taught me how to fix a flat tire, wield a drill and pitch a ball fast enough that I was recruited onto the boy's baseball team in high school.\n\nDad wins this one.\n\nI clamp my mouth shut, fighting my instinct to spin around and tear her face off. The family joke is that my mother practically owns China since her ego is larger than the entire country, and she's just proved it here. She likes to think of herself as a hot-shot supermodel that can charm her way into anything. She's really an insecure little girl who tries to compensate for her faults by using others to get her way.\n\nHigh school flashbacks, anyone? Tessa Helsten, you've met your match.\n\nThankfully, I'm used to my mother's blame game and easily avoid losing my temper. Instead, I take a cleansing breath and turn to face her. \"You taught me how to win. Dad taught me how to survive. You lose this argument.\"\n\nShe wears a mask of annoyance, as if she's been slighted. \"Michelle, I've taught you-\"\n\nI narrow my eyes and hold up my hand, silencing her. \"This conversation ends here and now. I've been kind enough to respect you as my mother despite your constant manipulations of me, and I've offered to clothe you as a normal person instead of the servant that you are. But the more you run your mouth, the less kindness I may be inclined to show.\"\n\nThat right there, that was awesome.\n\nAt that moment, all three of us are stunned in our own separate ways. My mother is horrified that I've finally showed some spine and faced her head-on. Lucifer looks about ready to pick me up and start swinging me around because I managed to stand my ground. I'm excited because, for the first time since my marriage, I sounded like a queen.\n\nMy mother stares at me for a moment, the drops her head in defeat. I may be her daughter, but I am no longer the insecure push-over she remembers. She cannot barter me off or put me in as a replacement when she backs out of a deal any longer. I am her superior, and she is bound to follow my orders. The parent must now answer to the child.\n\nFreud would have a field day with this.\n\nMom avoids making eye contact, instead staring at the floor like a guilty teenager who's just been caught sneaking out. I shake off our argument and walk over to armoire. I grip the twisting iron handles and throw the doors open, beginning my descent into the endless piles of clothing that awaits me inside.\n\nMy quest is almost an immediate failure. The racks are full of clothing meant for my frame, not my mother's. I'm about five-foot-seven, a slender size six and possess a chest that makes me very top-heavy. Mom's about three inches shorter than me, with wider hips, a generous chest like mine and far more junk in her trunk. Sharing clothing is impossible for us.\n\nI pull out of the racks, exasperated. This isn't going to work. We'll have to find some way to have her clothing tailored to her frame instead of shoving her into my dresses.\n\nTen pounds of sausage in a five pound bag. Even here that's a little harsh.\n\n\"Any way we could have someone make stuff for her?\" I look over my shoulder at Lucifer.\n\nHe's pouting angrily. Not at me, but at my decision to treat my mother like more than just a servant. He has an in-depth knowledge of who she is and what she's done -- I was forced into this marriage because of her -- so he's less than thrilled that I'm treating her so kindly. He'd rather toss her into the flaming rivers and be done with it. But she's my mother and my servant, so I have the last word.\n\nHe glances at mom briefly, still upset, then returns his gaze to me and nods. \"I suppose we could have the seamstresses create something...\"\n\nI smile and nearly skip over to him, looping my arms around his shoulders and crushing my lips to his. I hear his soft gasp of surprise morph into quite moan of lust. His arms encircle my waist, pulling me sharply against him. His hands slide down the smooth fabric of my robe and cup my ass, a possessive motion that lets the remaining demons in the room know he's staking his claim.\n\nI nearly twitch away at first, then decide to lat him have his moment. Besides his hands feeling damn good massaging my ass, he needs a way to mark his territory against any overly-ambitious demons that may be eyeballing me from a distance. I'm also having the time of my life knowing that my prudish mother is watching my fallen angle husband feel me up. For a woman who's sold off her daughter for a failed attempt at the English crown, my mother has an incredibly hard time watching people explore their sexuality.\n\nSilently, I decide to use our constant displays of affection as a tiny weapon against my mother. I don't have the heart to torture her or condemn her to death for what she's done to me. But I do have the confidence to make her suffer through watching Lucifer and I eat each other's faces off and ransack the bed.\n\nIt's a punishment that will reduce the need for having a demon pull out her hair as a torture. After two weeks, she'll be doing it herself.\n\nFinally, after a few long heartbeats of kissing and having my ass wonderfully massaged, I pull away from Lucifer and smile up at him. He does his best to hold back his grin, but I can see the tiny flickers of lust in his bright eyes. A bubble of my own desire starts prodding my mind, and I smile to myself as I push it down gently, keeping it hidden for now.\n\nIs it legal for a woman to want her husband like this?\n\nTearing my eyes away from my impossibly handsome husband, I turn back to my mother. She's staring at us with a mixture of horror and disgust, a sure sign that our few seconds of PDA worked like a charm.\n\nI give her an apologetic smile. \"Unfortunately, we don't have anything for you to wear besides the clothing you've been given.\"\n\nMy mother sulks like a child. \"There's nothing I can wear?\"\n\nI raise my eyebrows. \"Mom, have you ever been able to fit into my jeans?\"\n\nThat shuts her up.\n\nI shake my head. \"For right now, you'll just have to deal with what you have. We'll have the seamstresses work something out and you can wear what they give you.\" I stop, eyeing my mother cautiously. \"But only what they give you. This is Hell and you're my servant, so you don't get your choice of color or style. I'll do what I can to make you feel comfortable, but I run this place, not you.\"\n\nShe sighs and nods. I feel almost giddy. For the first time in years, my mom has acquiesced to falling into her place. And for the first time, I'm starting to feel like I'm a real queen.\n\n\"I'll put the order in for you to wear something besides rags. Until then, you can go. I'll call when I need you.\"\n\nMy mother stares at me for a moment, unsure of what to do. She knows her place is below me, but it must be incredibly difficult for her to relinquish the power she's held onto so tightly to her only daughter. Taking orders from me isn't something she's used to. She nods silently, though, and starts to make her way towards the door.\n\nGuilt and depression start to settle into my gut, and I rush over and hug her before she can exit. It's a silent hug, one meant to quiet the pain and remorse stirring inside me. It only lasts a few seconds, but it's enough to solidify the idea that she's still my mom and I love her despite what she's done to me.\n\nI watch silently as my mother and her two escorting demons exit into the hallway. Mom never looks back at me; her pride has been too deeply damaged to look at her daughter. I roll my eyes at the back of her head just before the door closes behind them. By now, I'm sadly accustomed to my mother's defense tactics of running away when she's defeated. How such a frightened, spineless woman gave birth to a daughter who could give Bob Feller a run for his money, I will never know.\n\nLucifer and I are finally alone. He steps up behinds me and loops his arms around my waist. My body responds instinctually, leaning back against him so I can feel the chill of his skin through my robe. His cheek presses against my neck, and I tilt my head back as he nuzzles me. His hands, unsurprisingly, travel upwards along my robe and cup my breasts through the fabric.\n\n\"You sounded like a true queen,\" he murmurs against my skin.\n\nI giggle. \"Cross me, sire, and thou shall have thine balls turn blue.\"\n\nHe bucks his hips against me. \"You wouldn't dare,\" he whispers teasingly.\n\nI open my mouth to respond, but I'm silenced by my own inner workings. I haven't eaten a thing since our wedding reception, and my body has taken notice. A pain courses through my abdomen, so sharp and so deep I feel like I've been stabbed. Involuntarily, I squeeze my eyes shut and groan, trying to drown out the ravenous hunger clawing at my gut.\n\nLucifer pulls back an inch. \"What is it?\"\n\nI groan softly. \"I'm starving.\n\nHe barks out a sharp laugh and spins around to face me. He grabs my hand and stars to pull me towards the bed. He strips me of my robe and helps me into my dress again. The top two chains of my gown are still missing from our game with Bradfield, but I don't care at this point. I can only concentrate on not passing out from lack of nourishment. Once I'm properly laced into my dress, Lucifer takes my hands and pulls me towards the door.",
        "\"That's perfect!\" The door to our room opens as we enter the hall. \"You can meet the others while we eat.\"\n\nI manage to gain my footing and follow closely behind him. \"Others?\"\n\nHe grins over his shoulder at me. \"Beelzebub, Asmodeus, Leviathan. All the other angels that fell with me. They've been asking about you relentlessly since I announced our engagement. Meeting you will finally shut them up.\"\n\nYes! Food!\n\nMy body rejoices silently, the promise of long-awaited nourishment spurring me on to keep pace with him. We make our way quickly down the hall, turning sharply down one of the many smaller halls that branch off the man corridor. We begin to turn randomly, spinning left and right down a myriad of hallways until I'm nearly dizzy.\n\nLeft...right...right...left....right...shit!\n\nFinally, we exit onto a wide ledge of black rock that peers over the fiery river of screaming souls. Lucifer pulls me over towards one edge of the outcrop. An enormous circle is etching into the rock, inscribed with more designs of the demonic language. Lucifer snaps his fingers once and the circle twists, breaking away from the rest of the ledge and sending a plume of black dust into the air. A hole has formed where it was once connected to the rest of the ledge, and it floats within the small space, waiting for us.\n\nGently, Lucifer coaxes me onto the circle of rock. The designs now glow bright gold, radiating heat as I step onto the heated surface. Lucifer snaps his fingers again, smiling at me as the floating disc of rock jerks, then descends into the hole.  \n\n'Going down?\" he grins at me.\n\nI stare at the glowing symbols my feet, then met his haze. \"Hellevator?\"\n\nHe throws his head back and gives a sharp laugh. \"Clich\u00e9, but it works.\"\n\nOur elevator descends quickly, taking us into the bowls of Hell. A tunnel of black rock surrounds us the entire way, barely lit by small flames embedded into the rock that flash by as we shoot downward. We grind to a stop seconds later, the platform pausing at a large arched hallway cut into the rock. Lucifer leads me into the brightly lit hallway, taking hold of my hand so I don't fall too far behind.\n\nThe hallway is short, so short that we exit into an enormous dining hall in seconds. It's twice the size of the main foyer, with rich blue and green marble slabs tiling the floor and walls. Along the entire length of one wall are enormous oval cut-outs that let us peer into the vast chasm of souls below. The fiery pits below give off a soft red-orange glow that illuminates the room.\n\nIn the middle of the room sits an enormous carved oak table that stretches nearly fifty feet across the floor. Covered with rich fabric, it carries the weight of hundreds of plates on its dark stained surface. From cooked venison to tiramisu, there's almost no delicacy left out of the feast.\n\nAlong the table's length sit dozens of high-ranking demons, each seated in an elaborately carved chair diving into his own silver plate piled high with food. Those farthest from where Lucifer and I stand are simple generals or Keepers that manage the damned in the pits. The guests nearest to us have the charred remnants of wings attached to their shoulders, denoting their status as fallen angels. At the very end of the table sit two empty chairs, inlaid with stones and covered in twisting metal spires.\n\nThe biggest, tallest and most elaborate chairs at the table. I couldn't begin to tell you who those belong to.\n\nGiving me a soft smile, Lucifer tugs at my hand and leads me toward the empty seats. One of the fallen angels looks up for an instant, then slams down his utensils and snaps his spine straight. He stares at us, holding completely still as we approach. The other demons look up, startled by their companion's sudden movement. They, too, notice us and halt their meal. Lucifer pulls my seat back and allows me to sit first, pushing me in quickly then taking his own seat at the table.\n\nA hundred pairs of eyes stare silently at us, waiting for instruction. My eyes flick to each of them, taking in my new, very formidable company. Their eyes, a menagerie of colors ranging from electric blue to pitch black, lock on me, periodically flicking to Lucifer in interest.\n\n\"So,\" the fallen angel nearest to me speaks, his deep voice making my entire body vibrate. \"This is our new queen?\"\n\n\"Beelzebub.\" My husband smiles and nods. \"This is the former miss Michelle Harlowe. She's our newest addition to the family and our proud queen.\"\n\nThe angel turns to me and smiles. He's strikingly handsome, with bright silver eyes, pale skin and wavy blond hair. A jagged scar runs from the top of his left eye to his jaw, marring what would have been a flawless face. His wings shift slightly as he reaches for my hand. He holds it lightly and inclines his head, his eyes never leaving me.\n\n\"You majesty,\" he croons.\n\nI smile back. \"Michelle is fine.\"\n\nHe nods and smiles wider, lifting his head and releasing my hand. His eyes flick to my dress and widen with interest. I flush as I suddenly remember that the first two chains of my bodice are missing, leaving very little to the imagination. Beelzebub grants himself a few precious seconds of staring before gathering himself and chivalrously returning to his plate of food. I exhale quietly, relieved. I'm safe from being ravaged by and overly-interested fallen angel...for the moment.\n\nLucifer turns to me and begins to counts off the former angels that line the table: sitting alongside Beelzebub are Asmodeus, Mammon and Leviathan. Sitting directly across from them are Belphagor, Samael, Astaroth and Azazel. They're all stunning handsome, but they don't come close to my husband. He shames them all.\n\nA little farther down the line of demons, leaning over the table so she can glare at me, is the deathly gorgeous and oh-so-infamous Lilith. Golden-haired, ocean-eyed and rosy-cheeked, she wears nothing more than a draped Grecian-style violet gown, mocking the idea of purity and delicateness by weaving dozens of tiny dead flowers in her hair. She's the epitome of murderous beauty. She's also a good competitor for Leyna when it comes to giving me they evil eye of death.\n\nFuck. Evil bitch part two.\n\nI sigh angrily and sulk in my seat. This is not what I wanted to deal with today. I already have Leyna trying to steal Lucifer away, and now Lilith is giving me a death glare? If there's one part about living in Hell I could truly hate, it's the man-eaters that live here.\n\nLucifer reaches out across the table and drags a jewel-encrusted platter towards me. Roasted venison covered in a rich wine sauce. My stomach does a back flip at the smell and I nearly faint. I'm salivating but manage to keep my mouth shut to avoid making a mess.\n\nLucifer smiles at me. \"Eat.\"\n\nI smile back. Taking just enough time to place my linen napkin on my lap, I jam my fork into the plate of steaming meat and taking a delicate bite. Queen of Hell, yes, but I was raised with manners.\n\nThe taste renders me mute for a moment, and I manage to suppress a moan. It's fantastic, along with everything else here. Swallowing my first delicious bite, I stab another piece of meat and take another delicate bite, feeding my hunger while keeping my royal charms in check.\n\n\"How long has the marriage been official?\" Belphagor breaks the silence.\n\nLucifer grabs his own plate of food and starts to eat. \"Three days.\"\n\n\"She's been crowned, I assume.\" Belphagor's crimson eyes narrow at me.\n\nLucifer nods. \"Yesterday.\"\n\nA wide smile breaks across the fallen angel's face. \"Excellent.\"\n\nI smile at him and, on instinct, incline my head slightly. His smile softens, though the energy from it stays the same, as he inclines his own head. My gut impulse has saved me. Queen or not, respecting these powerful figures who serve directly under my husband might just keep me alive for another century or two.\n\n\"Those things real?\" Samael's booming voice snaps me out of my silent musings.\n\nI turn to stare at him, startled and a little confused. His eyes, an electric ocean blue, are fixed on my barely-covered chest. His pouty lips are parted slightly, giving the tiniest hint of his newfound lust.\n\nAh. Are those real?\n\nA proud smile rises to my lips. \"Yes, they are.\" I glance at Lucifer for an instant. \"Unfortunately, I'm afraid you'll have to consult with my husband if you want to see for yourself.\"\n\nLucifer sputters and jerks in his seat, nearly choking on his bite of food.\n\nI'm barely able to suppress my laughter.\n\nSamael throws his head back and bursts out laughing, the deep sound echoing around the hall. \"I like her!\"\n\nLucifer swallows his food and turns to me, giving me a sly, you're-in-so-much-trouble smile. I smile back innocently and take another bite of venison.\n\n\"If you don't mine me asking,\" Samael's caught my attention again. \"What are you?\"\n\nMy chin lifts involuntarily. \"36D.\"\n\nHe laughs again and swings his arm to the side, smacking Lilith on the shoulder. \"She's got you beat by a full cup!\"\n\nShe scowls and rubs her shoulder. \"She's still human.\"\n\nBeelzebub gives an exasperated sigh. \"Will you give that a rest? You've been bitching about this all week. Yes, she's human. But she's Lucifer's choice, not yours. Give it up.\"\n\nShe glares at Beelzebub, then flicks her eyes to Lucifer. \"I just don't understand why you had to pick a mortal girl.\"\n\nLucifer shrugs and takes another bite. \"She's not mortal anymore.\"\n\nThat doesn't placate Lilith. \"You had your choice of millions of succubae! All of them were ready and willing to marry you in an instant. And you go for a human? Why?\"\n\nLucifer takes a long breath, closing his eyes and rubbing his temple with two fingers. Clearly, this isn't the first time my husband and Lilith have been at odds with his choice of a bride. My gut instinct tells me she's a more powerful form of Leyna - jealous that I, a human, bypassed her for the honor of marrying their master. Knowing that a grenade's about to go off somewhere, I scoot my chair an inch to the side, putting a tiny amount of distance between me, Lilith and my now frustrated husband.\n\nLucifer manages to reign in his anger. \"Lilith, we've had this conversation before. I wanted a human girl, so I married one. End of discussion.\"\n\nLilith, unfortunately, is persistent. \"But why? She's weak, fearful, skinny. She's got no experience with damned souls or torture methods. She doesn't belong here!\"\n\nLucifer's eyes narrow at her. \"Lilith.\" His tone is dark, warning her that she's treading into shark-infested waters.\n\n\"I'm only saying that if you had married a demon girl-\"\n\n\"Lilith, knock it off!\" Samael turns to glare at her. \"He found a girl to marry and it wasn't you. Deal with it.\"\n\nThat shuts her up. Lilith stares at Samael in shock for a moment, then drops her head and glares at her food. My gut was correct again. She and Leyna are both envious of me being queen. As much are her not-so-subtle anger has rubbed me the wrong way, I'm glad someone besides my husband took my side in this fight. I mentally pat myself on the head. Showing a little respect to the former angels surrounding me has earned me a few allies.\n\nThe table is silent for a moment, and I'm able to take another bite of food to soothe my raging hunger.\n\n\"The CEO of Goldman sent in a request this morning.\" Asmodeus, the famed ruler of the lust circle in Hell, breaks the silence.\n\nLucifer perks up. \"What did he want?\"\n\nThe angel shrugs. \"Insurance. He wanted to make sure they'd be covered in case the market crashes again.\"\n\nSamael scoffs. \"Some people just won't accept their own faults.\"\n\nI stare at Asmodues, curious. \"I thought you only ruled over the lustful. How did you know about Goldman's plea?\"\n\nThankfully, the fallen angel gives me a warm smile instead of a rueful glare. \"You're correct in that I do rule over the souls of those whose libido got the better of them. But all of us under your husband have direct access to any request made from the human world. It's a failsafe to make sure that stuff gets handled if Lucifer here were to ever go M.I.A.\"\n\n\"Oh.\" I nod and smile at him. Well, that does make sense. If Lucifer happened to be tied up with creating a war - or, perhaps, tangled up in bed with me -- someone would have to make sure the place ran smoothly.\n\n\"If she were a true queen, she would have known that,\" Lilith growls quietly.\n\nThere's a collective groan at the table. My happy mood sinks like a block of cement into my gut. Lucifer's deadly scowl has returned, along with Samael's angry glare and Beelzebub's exasperated sigh.\n\n\"Lilith,\" Samael warns.\n\nShe shrugs. \"I'm just making a point.\"\n\nNo, you're being a bitch. Please be less of a bitch.\n\n\"Lilith. For shit's sake, just stop.\" Beelzebub mirrors Lucifer's previous action of rubbing his temples. \"We're trying to have a peaceful dinner with our new queen and you just can't shut your damn mouth.\"\n\nLilith raises her head and stares at me coldly. \"She's not fit to be our queen.\"\n\nThat's it.\n\nI can sense the hurricane has landed, but I intend to jump ship before it hits me. Before my husband can erupt on her bitchy demonic ass, I shove my chair back and stand up from the table.\n\n\"Michelle-\" Belphagor starts.\n\nI shake my head and stare directly at Lilith. \"No, I'm done here. I've been chosen as your queen and you refuse to accept that. That's fine. You have free will as much as I do and I'm willing to respect your choice. But I will not sit here for the entire meal listening to you whine and complain about me getting picked to be queen over you. You're a demon. You should be able to control yourself better.\"\n\nLilith stares at me, thunderstruck. Lucifer's lips hold a small smile meant to show his pride for me. Asmodeus and the rest of the fallen angels can barely hold back their laughter.\n\nI don't stop. \"You're centuries older than I am, and yet you sit here throwing a fit like a child. I honestly expected more from a demon as infamous and powerful as you, Lilith. Unfortunately, your reputation far from precedes you. If all you can do is insult my humanity and my ignorance about a place I've only lived in for three days, then perhaps I shouldn't grace you with my presence.\"\n\nHaving said my piece, I turn on the balls of my feet and step away from the table. I spin and begin to make my way towards the short hallway we came in from. Behind me, I can hear the scrape of a chair on marble as Lucifer steps aside to chase me down. I can also hear the sudden eruptions of laughter coming from dozens of fallen angels and high-ranking demons. I've managed to show some spine and put Lilith in her place in front of Lucifer's best and brightest.\n\nNot bad for my third day on the job.\n\nWithin seconds of my exit, Lucifer has caught up to me. His icy hand grips mine as he gently pulls me to a halt. He steps in front of me, a brilliant smile on his face and absolute elation in his eyes.\n\nI smile and cock my head. \"Proud of me?\"\n\n\"You have no fucking idea.\" He leans in and kisses me. \"Stay,\" he murmurs against my lips.\n\nI sigh and shake my head. \"No. I'm not going to sit there and listen to her chastise me all night.\"\n\nHe pulls back and stares at me apologetically. \"I can toss her in the fire pits if you want.\"\n\nI smile at his attempt to console me and shake my head. \"What I really want is a nice long bath and a nap.\"\n\nFuck, that actually sounds good.\n\nLucifer sighs. \"You're sure?\"\n\nI nod. \"I'm exhausted.\"\n\nHe gives a soft smile. \"I'll have Samael escort you back.\"\n\nI shake my head. \"No, I want to go alone.\"\n\n\"Michelle...\" he starts.\n\n\"Lucifer please. I need a little time to clear all the murderous thoughts out of my head.\" I rise up on my toes and kiss him. \"I'll be fine.\"\n\nHe sighs again. \"I suppose you can handle yourself.\"\n\n\"Suppose?\" I stare at him. \"I just verbally kicked Lilith's ass.\"\n\nThat brings his smile back. He steps forward and loops his arms around me, his enormous wings sweeping around to encase me in feathery softness. He leans in and kisses me again, his hands sliding down to cup my ass. I smile against his lips and circle my arms around his neck.\n\n\"You be safe, damn it,\" his whispers against my mouth.\n\n\"I'll do my best.\" I pull away and start to make my way towards the hallway. \"You come to bed, damn it.\"\n\n\"Couldn't think of a reason I'd decline.\" His smile is breathtaking.\n\nI giggle softly and kiss him one last time before I turn and start down the hall again. \"Send Samael after me with that plate, will you?\" I call over my shoulder.\n\nHe winks at me. \"Will do.\"\n\nI smile and enter the hallway, looking back to watch him as he makes his way back to the table. His wings are folded tightly against his back, twitching in anticipation for something. I catch sight of Lilith's horrified face and understand that someone's about to have their ass handed to them. A small smile cracks onto my lips. Serves her right. That woman has a bigger attitude than mom when I beat her at Monopoly.\n\nI make my way down the short hallway, lost in thought of how nice that warm bath will feel. My breasts are still a bit sensitive from the piercings, and being rubbed by the fabric of my dress hasn't helped them heal much. The hot water might do them some good.\n\nI step gingerly onto the slab of rock that brought me down here, not wanting to be caught off guard and have it shoot up when I'm not prepared. Instead, it seems to wait for me to gain my balance on the uneven surface before gliding smoothly upward. This trip is faster, and I reach the top in a matter of seconds. When I step onto the ledge of rock, the circle descends back into the abyss, resetting itself to collect another high-ranking official wanting to leave the hall.\n\nI turn and make my way down the labyrinth of hallways Lucifer and I walked through. Somehow, I've managed to memorize the majority of turns we took, and I'm able to make my through a good portion of the twisting maze. For the few turns I haven't branded into my head, I take my best guess, hoping that all roads will lead to the main corridor eventually.\n\nMy gut instinct, once again, has saved my ass. After ten minutes of twisting and turning through the dimly lit mass of corridors, I'm spit out into the cold emptiness of the main hall. It's deathly quiet here, but right now I like it that way. I have a chance to clear my head and figure out how I'm going to deal with my new role as queen. I turn and start making my way down the hall towards my room, my body kicking into autopilot as my mind figures out how to handle my current issues.\n\nFirst things first: Mom. She's been elected as my servant, which means she'll serve under me for the next three hundred years until her debt to Lucifer is cleared. She'll be taking my every request and demand, answering me without question and doing anything I ask without hesitation.\n\nI shiver slightly, uncomfortable with the thought. Yes, she screwed me over and forced me into a married with the baddest of bad guys, bit she's my mother. Having her be my servant just doesn't sit right with me. I know there's no way I can reverse her punishment or lessen it -- she might get placed with someone less inclined to treat her with respect or sympathy -- but still.\n\nIf you can't beat them, treat them as you would treat anyone else.\n\nI sigh to myself. I can't stop Lucifer from taking his reward from their deal, but I can treat my mother with a little kindness and allow her to keep some of her dignity. The better I treat her, the more likely she'll come to respect me as her queen...and maybe even think of me as her daughter rather than a pawn.\n",
        "Now that mom's been cleared away...Lilith.\n\nI literally groan out of exhaustion. That woman is going to drive me nuts, I just know it. She's got her crosshairs trained on my head, she just doesn't have the guts to pull the trigger. I know now that she and Leyna both share a deep hatred for me and my position. Both of them feel slighted for being passed over by a human for queen.\n\nThe good news: She probably won't come after me for it and try to slice my head off. Lilith, thankfully, knows better than to challenge Lucifer at anything. She's worked under him for way too long to even try taking me out.\n\nThe better news: In a matter of five minutes I've managed to stand my ground against her and proved to the mass of fallen angels and demons that I have a spine and I'm willing to use it. That grants me a few ounces of street cred and puts me on top of the Verbal Ass Kicking list. Bonus points there.\n\nI make my way quietly down the enormous hallway, slightly comforted by the screams of the damned souls below me. At least I'm not wandering back to my room in complete silence. I continue on, making my way mindlessly down the massive hall towards my room and my long-awaited bath.\n\nThere's a noise behind me, like the soft whisper of wings on tile. Immediately, my heart skips. Lucifer has decided to leave the dinning hall and follow me, possibly to have another go at that wonderful session in the bathtub. I'm barely able to hold back my smile, and I spin around to welcome my dark husband into my arms.\n\nWhat stands before me is not my husband. He's tall like my husband, though, and nearly as painfully handsome. Wearing nothing but black slacks, his strongly chiseled body and powerful arms are on full display. Snow-white wings are relaxed, splayed out along the dark tile floor. A mass of long wheat-blond hair and piercing blues eyes offset his tanned flesh and chiseled features.\n\nMichael. Holy shit.\n\nI stare at him, swallowing loudly. This can't be good.\n\nHe smiles softly at me. \"Miss Harlowe, I presume?\" His voice is deep, resonating, and simply divine.\n\nI manage to steady myself. Gorgeous as he may be, Michael is not my Lucifer. There's no seductive darkness, no playful evilness about him to stir my hormones awake. He's a squeaky-clean goody two-shoes who cast my husband down into these pits because his dad couldn't handle being questioned. Motherfucker.\n\nI lift my chin an inch. \"Your Highness will do, thank you.\"\n\nHis brows rise an inch. \"Your Highness? Settling into our role already, are we?\"\n\nI scowl a bit. \"What could you possibly want? I don't believe your name is on the guest list.\"\n\nHis smile widens, showing two rows of immaculate white teeth. \"I come to you on behalf of my father.\"\n\nFather? Double shit.\n\nI gulp quietly. \"What does he want?\"\n\nMichael steps forward, his arms swinging wide and his wings fidgeting to life. \"What he always wants. To offer you freedom and love and redemption.\"\n\n\"Redemption?\" I ask sarcastically. \"What do I need to be redeemed? I've done nothing wrong. I never made a deal or killed anyone. Why would I need to be saved?\"\n\nMichael shakes his head, his smile never wavering. \"Poor innocent Michelle. Forced into marriage with my heartless brother by her mother and crushed by the untimely death of her father. Such a sad trail of misfortune follows you, and all because your mother wanted to be queen.\"\n\nHis tone leaves a bad taste in my mouth. \"So? My mom's selfish. Who isn't at some point?\"\n\nHe comes closer, closing the space between us. I stand my ground; backing away here won't do me any good. If I keep my stance firm, maybe he'll fly away.\n\n\"My father isn't,\" he nearly sings the words. \"He never is, was or will be.\"\n\nI scoff. \"I doubt that.\"\n\nHis smile fades into a mask of seriousness. \"What makes a loving woman like you say such blasphemous things?\"\n\nI stare coldly at him. \"Sodom and Gomorrah ring a bell? Or the thousands of people he killed off because they worshipped someone besides him?\"\n\n\"Such vague references.\" He's some close enough to me that I can feel the heat -- not an icy chill -- radiating off his skin. \"Plague killed off most of those poor souls.\"\n\n\"Uzzah?\" I counter. \"He touched that ark. He didn't tag the damn thing.\n\nMichael is rendered mute for a moment but recovers. \"A foolish act by a man who knew better...but a fair point.\"\n\nI can't help a small smile. \"Thank you. You're too kind.\"\n\nHe starts to slowly circle me, trapping me in my place by extending hid wings to make a barrier. \"And you're quite an enigma.\"\n\n\"How so?\" I ask sweetly.\n\n\"So charming, so graceful, so intelligent, so...\" he gives me a once-over, \"...physically blessed. I don't understand why you would choose to stay with Lucifer.\"\n\nI shrug. \"He's not as bad as your family makes him out to be.\"\n\n\"Isn't he?\" Michael looks at me incredulously. \"You've only spent three days with him. I've spent millennia around my brother. I'd like to think I know him a little better than you.\"\n\n\"Maybe, but all you and your dad can see is that bad parts of him,\" I fire back. \"You've forgotten the good person he used to be.\"\n\nMichael takes a long breath and closes his eyes for an instant. \"You're quite insightful for a human, I'll give you that.\"\n\nPoint two for my team.\n\n\"I just don't understand why you'd choose to stay here with my brother.\" Michael resumes his circling. \"No doubt he's told you bits and pieces of his past.\"\n\nI nod. \"No details, but he's mentioned a few of his own sins.\"\n\nMichael scoffs. \"His own sins. Ironic how he punishes those who have done the same wrongs as hum.\"\n\n\"Not all of us are being punished for what we have done,\" I counter\n\n\"People like you are the exception, Michelle.\"\n\n\"There's an exception to everything, even your brother.\" I manage to soften my tone a bit. \"He's still your family. Despite what he's done, don't you still love him?\"\n\nMichael sighs. \"Of course, but I cannot forgive hm. He denounced father and has created hysteria over the entire planet. He's caused so much harm, inflicted so much pain...he's still my brother and I love him, but I'm not sure I could ever welcome him back.\"\n\nI grit my teeth. \"Since we're on the subject of people who've done harm, perhaps your father should be here as well?\"\n\nMichael turns away from me, side-stepping from my change of subject. \"Why, Michelle? Why do you willingly stay here with him?\"\n\nI lift my chin and answer as honestly as I can. \"Because he's the only person besides my father and Richard who really cares for me.\"\n\nMichael screeches to a halt, whipping around to stare at me. \"You honestly think he cares about you?\"\n\nI nod again. \"I do.\"\n\n\"What on earth would make you think such a thing?\" His eyes are wide with horrified shock.\n\nMy flyspeck of an ego swells slightly. \"For one thing, I'm the first queen he's ever had. Surely putting up with me is evidence enough.\"\n\n\"Michelle-\" he starts.\n\n\"He's also sweet and kind to me.\" A tiny smile is growing on my lips. \"And intelligent and honest.\"\n\n\"That's all a ploy-\"\n\n\"He's also one hell of a lover.\" I smirk.\n\nMichael rolls his eyes and groans. \"He's simply fooling you! He has no heart or love in him! He's hollow, nothing but hatred and anger! He can't please you at all!\"\n\nMy hands fly to my hips as I glare at him. \"The hell he can't! I don't see you or any of your brothers flying down here to lay me out on a bed.\"\n\nA soft smile breaks his stoic expression. \"With you my dear, believe me when I say I would love to.\"\n\nEew. No.\n\nI scoff. \"As mach as I'm sure you mean that, I'm afraid I must respectfully decline. I'm far too comfortable with my husband to ever be pulled astray by you.\"\n\nHe smile widens an inch. \"Pity. That chest of yours is magnificent.\"\n\nI nearly burst out laughing. \"You are brothers!\"\n\nHe gives me a confused stare. \"How so?\"\n\nI shake my head. \"Both of your are entranced by my boobs.\"\n\nMichael gives a sly smile. \"I'll give my brother credit, he chose a very entrancing woman as a queen.\"\n\nI'm honestly flattered by Michael's compliment, but I've had enough of this conversation. Neither of us is going to back down on our view of Lucifer, so we might as well call it a draw and walk away. That will leave us both unharmed and might end the confrontation on a friendlier note.\n\n\"You're a very gracious person, Michael, and I respect your passion when speaking about your father,\" I decided to end this as soon as possible. \"But I'm afraid I won't be swayed so easily from my views, either. I'm married to Lucifer, and I've resolved to make the best of it. Despite what you and your family may think, he is still my husband. Until he does harm towards me, I won't turn my back on him.\"\n\nMichael sighs and shakes his head. \"So trusting, even when it's the devil himself. How you humans do it, I will never know.\"\n\nI shrug. \"Your father granted us free will.\"\n\n\"That he did, but I never imagined it would be so misused.\" His eyes narrow at me. \"You decide to stay married to evil rather than join the light?\"\n\nI stare at him, offended to my core. \"Ted Bundy has killed over thirty women just because he wanted to, and you're singling me out because I'm staying with your brother?\"\n\n\"Because you willingly choose to stay with Lucifer! Bundy has no choice!\" He's pissed now, and I back away a step. \"You have all the opportunity in the world to make something great of yourself, and you decide to stay here with my brother! How could you, knowing his past?\"\n\nFrightened as I am, I stand my ground. \"Because I've seen the slices of good that are still inside him. They're buried under years of shit and anger, but they still exist! Just because you choose not to see them doesn't mean they're totally lost! It doesn't give you the right to chastise me, either!\"\n\nHis eyes blaze with fury. \"Insolent fool! You'll get yourself killed one day because of your trust in him. I know my brother in ways you cannot comprehend! He'll tear your heart out sooner or-\"\n\n\"What the fuck do you want, Michael?\" The deep, rhythmic tone of my husband's voice saves my head from being separated from my shoulders.\n\nI hear his footsteps an instant before he strides up and stands beside me. His bright gold eyes are blazing, and his flawless lips have been disfigured to form a scowl. His enormous ebony wings are spread slightly, casting a shadow across the walls and making his look far more intimidating than he is...if that's even possible.\n\nA sliver of anger fades from Michael's face, replaced by a mixture of fear and absolute loathing. \"Your queen and I were simply having a chat.\"\n\n\"That was quite a chat. I could hear your ranting from three floors below.\" Lucifer's voice is smooth, almost emotionless. I stare at him in wonder. He's got more self-control in his finger that I do in my entire body.\n\nMichael rolls his eyes. \"Why have you decided to grace us with your presence? We were almost finished.\"\n\nLucifer ignores his inquiry and turns to me. \"Are you unharmed?\"\n\nI nod, relieved to have backup. \"Fine. Pissed, but fine.\"\n\nHe nods, a tiny smile breaking his frozen features. He turns back to Michael. \"You didn't come down here just to harass my queen. What does dad want?\"\n\nMichael's caught off-guard for an instant, but recovers. \"Nothing but your queen. She doesn't belong here, Lucifer.\"\n\nMy husband shrugs. \"That's not your call.\"\n\n\"She's still alive, Lucifer! She's an innocent! Why keep her here?\"\n\nMichael is getting more frustrated by the minute. The more frustrated he gets, the more irrational and unfocused he gets. That makes him vulnerable to my husband's counter-attack of level-headed fury.\n\n\"What happened to her was not her choice, but I believe she said she's willing to work with what she has.\" Lucifer shoots me a soft smile. \"You have no right to deny her a choice, not even that one.\"\n\nMichael nearly loses it. \"That's all you can do. All you could ever do! Question every order you were given, deny every ounce of love father gave you! You took everything for granted and then complained you went through life unloved!\"\n\nLucifer's eyes narrow in anger. \"At least I had the balls to question. You just stood there like a mindless sack doing whatever dad told you. You never had the spine to ask anything!\"\n\nAt this point, I've back myself up a few steps, trying to put some distance between myself and these two sticks of dynamite. I'm more than willing to stand by Lucifer in this argument, but I also know my limits. Technically, I'm human. They're not. If either of them explode, I'm dead.\n\n\"I never had to ask! Father was right about everything!\"\n\n\"He wasn't! He claimed humans were better than us! How can they be? Michelle's own mother sold her to me!\"\n\n\"They are! They have empathy, life, choice! They have everything we could only ream of!\"\n\n\"We did have choice. You just chose not to use it!\"\n\nMy head is spinning, and I can almost feel the rage radiating off of both angels. My husband and Michael are now nose to nose, age-old animosities flaring up again as they try to prove their points. I panic, terrified that the entire room might spontaneously combust. I race over and pull at Lucifer's arm, jerking him back a few inches and throwing a few drops of water on the fuse.\n\n\"Please,\" I beg, \"Let's juts go. It's not worth the fight. Neither of you are going to back down, so why waste your breath. Please.\"\n\nI'm willing to do anything to separate these two, even if it means letting my mother win a game of Monopoly or giving Lucifer a strip-tease. I don't care. I just want to go.\n\nLucifer stares at me, his eyes still full of fury and anger from their argument. Slowly, though, the ferocity in them fades away, replaced by a soothing calmness so overpowering that makes me wonder if he's got another personality. He turns to Michael, looping one arm around my shoulders and pulling me close.\n\n\"Yes, you're quite correct. None of this is worth the energy we've spent.\" He starts to turn away, taking me with him. \"We'll leave him to stew in his anger in peace.\"\n\n\"Asshole!\" Michael roars behind us. \"She'll come to us someday!\"\n\nLucifer wheels around and gives his brother a look that would make Mount Everest crumble. \"Come down here and harass my queen again and I will shove that sword of yours so far up your ass father will wonder how your spine became steel.\"\n\nWith that last threatening defense, Lucifer turns, grabs my arm and hauls me out of the corridor. I don't look back to see if Michael is still there. I don't care. I have my husband and we're leaving, which is exactly what I want.\n\nI manage to regain my footing and keep pace with him. I glance up to see his eyes still blazing from the fight, a mask of pure fury carved onto his beautiful face. He's still fuming, and I don't blame him. Michael may be the poster-boy for heaven's might, but he's an asshole in person. I can see why he and Lucifer never got along well.\n\n\"What now,\" I risk opening my mouth.\n\n\"We go to our room and cool off.\" His voice is cold, emotionless.\n\nWe reach the door to our room in what feels like seconds. It swings open just long enough for us to step inside, then slams shut and locks. I stop just onside the door, watching Lucifer pull away and start pacing the room. He's beyond furious, not at me, but at his brother for coming down into his domain and trying to steal away his queen. I feel no anger or annoyance towards him. Any rational man would be upset after that.\n\nThat said, I can't watch him pace the floor like a trapped animal. It makes me nervous. I want him to calm down faster, to cool off quickly enough that we'll still have time to roll around in bed. I square my shoulders and walk over to him, gripping his wrist and pulling him towards the bed. He resists at first, but acquiesces and follows me back.\n\nI reach the bed and spin around, sitting down on the soft blankets the line the enormous oak structure. With Lucifer staring at me dispassionately, I reach up and hook my hands on his shoulders, gently forcing him to his knees. He crumbles easily, collapsing to the floor and gazing at me with hollow, empty eyes.\n\nFuck. That's creepy as hell.\n\nI loop my arms around his neck and pull him forward, guiding him to the front of my dress. If I know Lucifer, then my body will do wonders to calm him down. His cool cheek presses against my breasts and I hold him there, running my fingers through his messy hair. He relaxes almost immediately, turning his head so he can press his nose against my skin and breathe me in. He nuzzles the skin of my breasts, and a soft smile finally arrives on his lips.\n\n\"If I had the ability to die,\" he whispers against my skin, \"I would suffocate myself in your breasts and die a happy man.\"\n\nI relax a bit and smile myself. \"Please don't. I'd have to sleep here alone.\"\n\nHe groans happily and pulls away, looking up at me apologetically. \"I'm sorry about that argument. Something about Michael always seems to set me off.\"\n\nI run my fingers through his hair again. \"I understand. He pisses me off, too.\"\n\nHis smile widens a bit. \"Anything I could do to help my distressed queen?\"\n\nI pause, the gears in my head starting to spin. My curiosity builds, the reckless teenage side of my conscience daring me to ask for something insane. My rational side stares in horror, begging that I return to sanity and ask for something normal. I stare at him and chew my lip, stalling for time while my two halves fight for supremacy.\n\nLucifer's smile falls a bit, his eyes turning worried worried. \"Michelle?\"\n\nWith one final shove, my reckless side claims the crown. \"Mind if I blow off a little steam?\"\n\n\"Blow off a little...\" His eyes narrow in confusion, then widen with hope. \"I do hope you're implying what I think you are.\"\n\nI smile and nod.\n\nHe stares at me with wide, thunderstruck eyes. Behind his shocked expression, I can almost hear the 'Fuck, yes!' echoing in his mind. A tiny smile breaks on my lips. I've hit a sweet spot.\n\nHe takes along breath, trying to conceal his excitement. \"If that's what you want.\"\n\nSpurred on by his enthusiasm, I nod and reach behind my back, scrabbling for the velvet ties of my dress. Lucifer laughs and rises his feet, pulling me off the bed and spinning me around.\n\n\"Allow me,\" he breathes against my neck.\n\n\"Please,\" I whisper back.\n\nHe works quickly, pulling the ribbons apart and helping me out of the pool of fabric. He grins like a child at Christmas, and I can only stare and admire his superior beauty. How I'm able to look him in the eyes and remain sane is a mystery.\n\nHe leans in for a kiss, but my libido is already fired up and has no time for games. I shake my head and gently shoe him towards the bed. He stumbles a bit, then regains his balance and smiles wickedly at me.\n\n\"Take off your pants and sit down,\" I'm almost pleading for him to comply.\n\nHe barks out a laugh. \"Yes, ma'am!\"\n\nHe strips quickly and tosses his jeans aside, collapsing into the bed and grinning at me. His cock stands straight as a pole, proud and strong and ready to go. I giggle at his childlike excitement. There's something so innocent and untainted about him when it comes to sex, like every time is his first. It's charming, honestly.\n\nI step over to the bed, kneeling down in front of him. He's grinning like a madman, practically shaking with anticipation. I'm excited, too. I actually like sucking him off. With Lucifer, it grants me a rare moment of control, as well as allowing me to tease him for once.\n\n\"I didn't know I was that good. You're almost bouncing.\" I can't suppress giggling at his enthusiasm.\n\nHis smile never fades. \"I have my reasons for liking your mouth.\"",
        "I glance at his cock, staring at it apprehensively. I know the extent my talents, and I know that I can make him beg, but I don't know what he likes. He's never told me if there was any particular way he likes being sucked off - something that would make this a bit more enjoyable for him - so I'm apprehensive to simply close my eyes and start.\n\nI look back up at him, biting my lip uncertainly. \"Is there anything you want?\"\n\nHis smile fades, shifting to a confused frown. \"Anything I want?\"\n\n\"You know...is there anything you really like? A certain way you want it?\" I shrug.\n\nHis eyes widen in recognition, and his brow creases for a minute in concentration. \"Try going really slow.\"\n\nI stare at him, dumbfounded. \"Slow?\"\n\nHis smile retunes. \"It'll make the feeling last longer.\"\n\nMakes sense. Alright, slow it is.\n\n\"Anything else?\" I reach out and gently grip his shaft, slowly stroking him as he thinks.\n\n\"Uh...\" He trails off, his breathing unsteady, unable to create a coherent thought for a moment. \"No...drawing a...blank for now.\"\n\nI smile and release his cock. His lust has got a tight grip on his mind, making his thinking hazy and his body hypersensitive. Perfect.\n\nI pull my hair away from my face and dip down, running my tongue along the underside of his cock. He twitches and gives a sharp gasp. My blood starts to pound in my head. For some reason, this has gone past simple oral sex. It has transitioned into a bonding moment for both of us, linking us together in a mutual give-and-take of pleasure.\n\nFinally reaching the tip, I open my mouth and sink down onto him. I hear his sharp intake of breath, feel his fingers reach down and twist in my hair. I smile to myself. As broken, powerful and deceitful as he is, Lucifer is all mine. And I'm all his. He can launch me into the stars and I can bring him to his knees. What a perfect match we are.\n\nSlow. Take it slow.\n\nI take his as far as I can go, which is surprisingly far with him being as gifted as he is. Taking a spare second to breathe and catch myself, I begin the long, languid journey back up his shaft. It takes me a bit of effort to go as slow as I need to, but I get the job done. I reach the swollen tip of his cock and suck lightly for a few seconds before descending again. I do my best to keep the easy pace he requested, and it's becoming easier with ever second.\n\nHis skin tastes like the same impossible mix of delicious flavors that fills his mouth. I briefly wonder how I could still have the mind to pleasure such a man, even just kiss him, and not try to eat him in the process.\n\nAbove me, Lucifer shivers and twists his fingers tightly in my hair. \"Oh, yes,\" he breathes through clenched teeth. \"That's...that is something else.\"\n\nI'm grinning like a fool on the inside. I've started chipping away at that angry barrier he'd put up so long ago, pulling it down brick by brick with every swirl of my tongue.\n\nHe shivers again and exhales loudly. \"Fuck, that is nice.\"\n\nGently, his hands push me down to the root of his cock, forcing his shaft inside my mouth as far as it will go. He pauses, letting me adjust to having my entire mouth stuffed full of him. It's not at all unpleasant, just different. His hands hold me still, keeping me at maximum capacity.\n\n\"Just swallow,\" he breathes.\n\nI comply, running my tongue over his flesh as I listen to his harsh breathing.\n\n\"Oh, that's good.\" His fingers dig into my scalp. \"You stay right there.\"\n\nI shrug mentally. I promised to give him whatever he wants, so I'll stay right here. I swallow a few more times, taking care to press my tongue firmly against his skin with every movement. Hoping his eyes are closed, I reach my hand down and cup his balls in my hand. I roll them in my palm, giving each orb a gentle squeeze with my fingers.\n\nHe gasps, almost whimpering as his body trembles. \"Whoa, Michelle! Easy there. Slow down a bit.\"\n\nNope. Ask and thou shall receive.\n\nI brush his hands away and continue my torture, keeping my slow pace just to feel him squirm. It works flawlessly, and I'm treated to another round of my husband twitching against my mouth and begging me to stop.\n\n\"Michelle,\" he moans my name and a fire starts in my belly. Hearing my name spoken like that, with such pure sexual force, has me getting aroused.\n\nIn my palm, I feel his sac start to tighten. I've brought him to that deep, dark abyss that is sexual release, and I'm dangling him at the edge by a thread. I don't intend to cut that thread and let him fall gently into that dark bliss; I intend the catapult him into it.\n\n\"Please,\" he tries one last time to stop me. \"No more. I'm not...Michelle, you don't-\"\n\nHis words of warning are cut off by his orgasm. His hips buck sharply against my mouth as his fingers twist into my hair again. The muscles of his stomach contract, and he gives a long, painful groan. His balls pulse lightly in my fingers, releasing their burden and sighing in relief. His seed spills into my mouth, hot and salty and almost overpowering. I do my best to swallow quickly, forcing down every last drop so I can catch my breath.\n\nOnce he's spent, I pull away and sit back on the cool tile, staring up at him. He's hunched over, bracing his hands on his thighs. His breathing is harsh and ragged, his eyes closed and his hair a mess. A light sheen of sweat covers his body, making him look like an oiled-up Greek warrior. His skin glistens in the light, the lines and ridges of his muscles beautifully highlighted.\n\nOh...well, hello there.\n\nMy gut twists again as another spark of lust surges though me. I'd expected to be proud of myself after giving him yet another stellar blowjob. Getting turned on in the process is an unusual, though not unwelcome, byproduct.\n\nHe finally raises his head to look at me. His mouth is open slightly, his breathing still uneven. His golden eyes are blazing, but I can't tell if it's from lust or anger.\n\n\"Why didn't you stop?\" he rasps\n\nA sliver of fear races up my spine. Did I piss him off by letting him orgasm? Desperately, I try to search for an acceptable answer, by my mind goes blank. I sit on the floor looking up at him with fearful eyes.\n\n\"I... I...you said...\"\n\nHe takes a long, slow breath and refocuses his gaze. \"Because that was fucking amazing.\"\n\nThank god!\n\nI sigh quietly in relief. He's not pissed, just a little bewildered that I was able to take him so far. I'm quite proud of myself. I've rocked him to the core and knocked him slightly off balance. I consider this a job well done.\n\nHis sly smile returns, and he straightens his spine again. He crooks a finger at me. \"Come here.\"\n\nI smile back and rise from the floor, stepping forward so I stand between his legs. His hands loop around my waist, reaching down to cup my ass and lift me into his lap. I straddle his thighs, feeling his softened penis press against my belly. His hands slid up my body, cupping my neck and pulling me towards him. Our foreheads touch, and I watch him close his hypnotic eyes as he inhales slowly.\n\n\"Why do you always try to stop me?\" I stare at him, waiting for an answer.\n\nHe sighs. \"The more you make me feel, the less control I have. I don't want to accidentally hurt you because I was blind with lust.\"\n\nI smile and run my fingers through his hair. \"If your were blind with lust, I don't think I would mind.\"\n\nHe shakes his head. \"How I got you...\"\n\nI lean forward and kiss him. \"Because you did. Don't question how we got here. You might jinx it.\"\n\nHe smiles and returns my kiss passionately, tangling his fingers into my hair. I copy him, burying my own fingers into his mess of hair, tugging at it gently and hearing him moan in response. His hands slide down again, gripping my hips and pulling me close so that my breasts are crushed against his chest. His cock hardens against my belly, pressing into my tender flesh.\n\n\"Round two?\" he asks between kisses.\n\n\"Round five, I think,\" I whisper against his lips.\n\n\"Fuck it.\"\n\nHe lifts me off his thighs just long enough to reposition me. He pulls me back down quickly, his cock sliding into me easily. I smile against his lips and moan into his mouth. My body has been aching for this all day, and now it will finally have its hunger satisfied.\n\nLucifer wastes no time, bucking his hips against me to drive himself deeper into me. His hands reach around to cup my ass again, holding my steady as he slowly pulls back. It's a slow rhythm, but steady and strong. I have no complaints. He's picked a fantastic position, rubbing against every sweet spot I have.\n\nOne thrust in particular simultaneously rubs against my clit and the sweetest spot inside of me. I lose my ability to breath momentarily, and pull away from his mouth to catch my breath. I tremble slightly, a bolt of lightening streaking up my spine.\n\n\"Oh, Lucifer,\" I moan his name. \"That feels good.\"\n\nHe laughs and kisses my exposed neck. \"I aim to please, your majesty.\"\n\nHe does just that, angling his hips and adjusting his hands so I'm leaning away from him, holding myself upright by gripping his shoulders. The new angle is perfect, allowing him to rub against both of my hotspots at once. The feeling is mind-numbing, and I close my eyes and let wave after wave of pure ecstasy roll over me.\n\n\"If I could,\" he whispers between each kiss he places on my throat, \"I would do this forever.\"\n\nOh, please do.\n\nI moan his name again, my own mindless answer to his confession. I wouldn't mind that at all. He could have me tied to this bed for the next four centuries and I would never tire of him.\n\nSadly, it over far too quickly, the direct pressure on my clit too much for my body too handle. A few more thrusts and I'm lost, but once again it's a slow, delicious burn. I dig my fingers into his shoulders as I shudder against him, biting my lip but groaning anyway. Lucifer breaks, too, burying his face against my neck as his body twitches against mine and he moans my name.\n\nSeconds pass and we're left panting and covered in a thin sheen of sweat. Calling back my sanity, I giggle and lean forward, moving with enough force to shove Lucifer backward onto the bed when I collide with him. We fall back into the piles of sheets, still locked together as one.\n\nHis hands move up my body, wrapping around my waist and holding me close. His cheek nuzzles my hair as he closes his eyes and inhales deeply. Gently, I maneuver my body off his cock and slide my hips to the side so I can rest my head against his chest. His skin is cool against my cheek, soothing yet seductive.\n\n\"Oh, woman,\" he breathes. \"The things you make me feel. I think I may have a heart again.\"\n\nI giggle and trace the lines of his chest with my finger. \"You think so?\"\n\nOne of his hands slides up to stroke my hair. \"Perhaps. With you around, I might have a chance at redeeming myself.\"\n\nI frown. \"Please don't.\"\n\nHe freezes, his breath nearly halting. \"You want me to be damned and rejected forever?\"\n\nI shake my head. \"No, but I like you like this. It's the only way I know you. If you did redeem yourself and went beck to your old glory, I might not recognize you as my husband.\" My lip trembles a bit. \"You might not recognize me.\"\n\nHis arms squeeze me thing, his lips pressing into my hair. \"No, no, no. I would never forget you, even if I did go back. I couldn't. You've done so much to break me down and tear me to pieces. I wouldn't forgive myself if I lost my memory of you.\"\n\n\"But you'd leave.\" My voice starts to break, my mind beginning to envision his ascending into Heaven and leaving me behind.\n\nHe freezes again, understanding my fear and anxiety. We both know he'd jump at the chance to return to his birthplace, so there's no point in him trying to deny it. Silently, I pray that he keeps being his evil, manipulative self so he can stay here with me.\n\n\"I would, but I'm not sure I could leave you behind.\"\n\nI look up at him, a mix of relief and confusion in my eyes. \"Meaning?\"\n\nHe gives a soft smile a shrugs. \"I may have to bargain with the old man so I could take you along. I'd go insane without you.\" He leans forward and kisses me. \"Besides, you're too much fun to leave behind.\"\n\nI smile and return his kiss. \"You're way too crazy for me to leave you alone.\"\n\nHe grins. \"Good.\" He shifts and settles into the soft bedding, reaching down to pull the blankets up to my shoulders.\n\n\"We done for the night?\" I ask sleepily. All this sex has left me exhausted.\n\n\"Yep. We do the same thing tomorrow.\"\n\nI shift against him and close my eyes. \"Good.\" On an instinctive self-dare, I kiss his chest. \"Love you.\"\n\nHe inhales sharply and stills against me, then relaxes. \"I...love you, too.\"\n\nThe tremor in his voice gives away his discomfort, but also his sincerity. It's probably been forever and a day since he's admitted he loved someone, so saying those four words must be like pushing Mount Everest a few feet eastward. I smile and settle in against him, letting sleep claim me as my husband begins to snore softly into my hair.\n\nIt's not the earth-moving change I've been looking for, but it's a start.\n\n* * *\n\nI wake up starving. My body has survived the last few hours on the few slices of meat I consumed during dinner, but it's craving more. My stomach starts growling, warning me of a growing rebellion inside me that will turn into a riot if I don't eat within the next fifteen minutes.\n\nGroaning, I slip out of my husband's embrace and push myself upright. Gently, I pull back the blankets and swing my legs over the edge of the bed, landing softly onto the cool tile floor. I turn and replace the sheets over my sleeping husband's body, taking a spare second to stop and admire his beauty one more time.\n\nI've scored big time.\n\nI look around the room and spot my black satin robe lying in a heap on the floor. Silently, I walk over and scoop it up, swinging it around so I can slip it on. I tie the ribbon around my waist and check to see that I'm fully covered. I know it's Hell and there are topless demons walking around everywhere, but I feel uncomfortable having anyone besides Lucifer see me naked. As far as I'm concerned, my body is his to stare at and his alone.\n\nI make my way towards the door to our room, moving as quietly as possible so Lucifer can sleep. He doesn't need to wake up to just because I'm hungry. I'll be back in less than fifteen minutes and he'll be none the wiser.\n\nThe door to our room swings open silently, and I quick-step through the doorway. It swings closed, but seems aware of my intentions and locks with the slightest noise. I smile.\n\nGood door.\n\nTurning, I start my way down the main hall. It's empty now, so it must be either really early or really late. I'm alone now, which grants me a few precious moments to clear my head. I listen to the sounds of the screaming souls below me, trying to gauge if I can become numb to the sound.\n\nNope. I still possess my human heart.\n\nI smile to myself. Good. Even after spending nearly a week married to the baddest bad guy in the Bible, I haven't lost my empathy or my common sense. I'm normal. Thank God.\n\nI breathe a small sigh of relief and continue on down the hallway. It's a bit eerie walking by myself, but I don't really mind. I like the quite, and the cool breeze is keeping me awake long enough for me to get to the dining room. My gut is starting to incite a rebellion, so I quickly try to remember whether we turned left or right after the hallway.\n\n\"He loves you so fucking much.\"\n\nI stop, freezing in place. Leyna's voice echoes around the silent hall, bouncing off the stones and ringing in my ears.\n\n\"What I can't understand is why.\" Her tone is mocking and resentful, still upset that I got picked instead of her. Same old Leyna.\n\nI sigh and turn to face her, my hunger slowly being replaced by an acute case of fuck-you-bitch syndrome. This woman, no mater how many times she's been screamed in her face to stop, just won't let this fight die. I finish turning and glare at her, sending as much of my annoyance at her as possible.\n\nShe stands about ten feet away from me, dressed in a long black Grecian gown, her cheery-red hair fluttering in the breeze. Her sickly yellow eyes are locked on me, and her lips are curved up in a sly smile.\n\n\"I mean, there's nothing really remarkable about you.\" She sneers at me. \"You're human, you're weak, and you're way too sweet for him. What could you possibly have that makes you a better fit than me?\"\n\nI stop and think for a second. \"A better rack?\"\n\nHer eyes narrow. \"Lucky draw on the genetics card.\"\n\nI shrug. \"A sense of empathy? A bigger brain? A soul?\"\n\nShe sneers against and waves her hand dismissively. \"All things that prove your weakness. If you were a real queen of Hell, you'd be just a ruthless as Lucifer.\"\n\nMy annoyance boils over. \"You mean sink to your level? Pass.\"\n\nHer eyes shoot wide. \"My level? I'm not the one following him around like a homeless dog begging for scraps.\"\n\n\"At least I have enough spine to put Lilith in her place!\" I counter.\n\nShe pales for an instant, shocked that I've admitted having a strength she lacks. I smile to myself again. Leyna may hate me for marrying her crush, but there's not much she can do to his queen and a woman able to stand up to Lilith. I may be human, but I've got more balls than she'll ever have.\n\nLeyna recovers and dismisses my attack. \"She's Lucifer's right-hand girl. She may not like you, but she can't do anything to harm you. Lucifer would go ballistic.\"\n\n\"So you have the right to harm me, but Lilith doesn't? I'm sorry, but where exactly did you get that entitled thought?\" I stare at her coldly. \"I don't think Lucifer would appreciate it if either of you harmed me.\"\n\n\"I'd be doing him a favor. Once his pesky little human is gone, he can look for a real queen.\" Her smile turns reptilian, and a shiver races up my spine.\n\n\"A real queen? I hope you're not referring to yourself. If you were queen, this whole place would crumble within days.\" She's talking about supplanting me and taking my crown and husband. Now I'm pissed. \"Besides, what makes you think Lucifer would even want you?\"\n\nShe glares at me, offended and confused. \"Why wouldn't he?\"\n\nI laugh softly. \"Honey, he's spent the last few days with me. We've fucked on nearly every surface in that room, and we've even pierced each other.\" In a moment of brazen boldness, I pull open the sides of my robe and let her take a good look at Lucifer's attempt at marking his territory. \"See? He's mine and I'm his. Deal with it.\"\n\nShe pouts for a moment, and as I pull my robe back around me, I silently hope she's given up and waved her white flag. Instead, she lifts her head and glares at me, the corners of her mouth tilting into a cruel smile.\n\n\"You're right,\" she purrs, \"He does have you.\"\n\nUh oh. This is going downhill fast. Back away! Back away!\n\nShe makes the first move and takes a step towards me. \"So maybe, if I can't make him fall for me, I'll just use you.\"\n\nShe reaches out and grabs my shoulder, jerking me forward. Before I can pull way, her hand slides up to cup the back of my neck, holding me in place as she closes the distance between us and kisses me.\n\nMy first instinct is to scream like a banshee and claw her face off, but as the kiss goes on, my head starts to swirl and my hands go numb. The room starts to spin, my knees give out and I can't breathe correctly. Leyna is falling with me, and the two of us collapse to the floor. She's got a death grip on me, but I can feel her fingers slip a bit. My entire body is numb, and I lose the ability to think completely.\n\nI take one last breathe before the world goes dark and I hit the floor.\n\n* * *\n\nMy head aches. My body still feels numb. My thoughts are jumbled. And I'm still starving.",
        "What the fuck just happened?\n\nI groan and gingerly push myself up from the floor, looking around to survey the damage. There's no massive crater in the wall or burn marks streaking up the marble, but Leyna is gone and I'm reeling from whatever magic trick she pulled on me.\n\nGet up. Find Lucifer.\n\nI nod and crack my finger, trying to rid my hands of the numbness. It works, so I roll my wrists and ankles, hoping to gain back enough strength so I can walk again. The pins and needles fade away, and I smile. I can get going and figure out just what the hell happened to me.\n\nAlright, time to get your ass in gear and find Lucifer.\n\nNodding to myself, I push against the cool stone floor, using every ounce of my strength to try to stand. I fail and crumple to the floor again, panting. I'm not ready to move yet, so I sit down and rest for a bit until my body has recharged enough so that I can move. In the meantime, I sit back and listen to the screaming souls again, relieved to know I'm not completely alone in my misery and confusion.\n\nI look up for an instant and freeze. Before me is a small puddle of rainwater that's seeped down through the cracks and pooled on the marble floor. In the puddle is a reflection of Leyna, her red hair a mess and her yellow eyes bewildered. She stares back at me, looking as confused as I feel.\n\nWhat the fuck?\n\nI reach up to cup my aching head and freeze again. Leyna moves when I move, the reflection showing a mirror image of what I'm doing. Dread pooling in my gut, I reach up and trace my lips, watching as the reflection copies me perfectly.\n\nI scream and scramble backwards, pressing my back against the wall. My breathing is panicked, my heart bursting from my chest. I'm Leyna! How the fuck did this happen!\n\n...So maybe, if I can't make him fall for me, I'll just use you...\n\nI think back to her numbing kiss. She must have used her evil bitch power to switch bodies with me. She has my body and I have hers, which means she can finally accomplish her goal of having Lucifer. With my body, he'll never know she and I have switched and that the woman he's with isn't me.\n\nTears sting my eyes. No, no this can't happen. We were just starting to break ground with him, just beginning to open him up. And I was just starting to actually love him. I can't lose him now, not yet. Not to her.\n\nAs much as I want to cry and scream and yell, I can't. That will just do more harm than good. Forcing my natural instincts down, I shake off the despair and pain, focusing my mind on anger. Crying about it won't fix the problem. I need to find Lucifer and explain what's happened, then find Leyna and get my body back.\n\nGathering my strength again, I shakily haul myself to my feet and pull my now red hair away from my face. I glare down the massive corridor, knowing that's exactly where Leyna has gone. I take a tentative step forward, then another, slowly but surely making my way toward my bedroom. I swear once I find that woman, I am going to tear her head off with my bare hands and serve it on a silver platter.\n\nThe screams fade away as my mind slows down and focuses on my goal. My sights are set. I'm going to find Lucifer. I'm going to tell him what happened. And I'm going to find Leyna and get my body back.\n\nAnd this time...I am gonna kill Bill."
    ],
    "authorname": "Kindasortacrazy",
    "tags": [
        "hell",
        "demon",
        "blow job"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/the-old-king-and-the-new-bride-ch-03"
}