{
    "title": "The Baseball Trip Pt. 04",
    "pages": [
        "Fourth Inning \n\nPart four of a nine part series! Holy crap this thing keeps going! As always, maybe read the previous stuff before getting into this one. Or don't. Whatevs. Warning, this one tiptoes around the incest category (no actual incest) so beware if that's a trigger for you. \n\nEverybody here is over the age of 18. Enjoy! \n\n***** \n\nFor the second morning in a row, I woke up pressed against Julia's warm, athletic flesh. My aching prick jammed against her ass. \n\nThis time I knew it was my roommate, I just didn't care. After what had happened the night before - me, Kelsey, and Sara bringing each other to orgasm in the hot tub - I felt bulletproof. I had no problem at all with grinding into my suddenly very desireable friend. \n\nFor her part, Julia didn't do anything but groan and push back. \n\n\"We have to stop meeting this way,\" she said, still half asleep. \n\n\"I dunno, there are worse wakeups in the world.\" \n\n\"You said it, dude\" Julia said, rubbing against me one last time. Then she stood up and stretched. \"Still, probably best to keep our sleeping arrangements as they are. Don't know if I could control myself, otherwise, once we got home.\" \n\nThen she pranced off to the bathroom. \n\nI stayed under the covers, still a bit sleepy and more than a little hard. The room filled with the sound of running shower water. I looked over at the other bed and saw Kelsey and Sarah, still half asleep and twisted around each other. I wondered if it was all so innocent, now that I'd seen their tag team act the night before. \n\nNow that it was morning, Sarah - the sexy brunette with impossibly immense breasts - would be feeling guilty about the previous evening's activities. She'd be distant, even a little angry. Kelsey, the incredibly beautiful teenaged blonde would pretend to back off, as well, just for the sake of appearances. \n\nAnd it would all hardly matter. As always, Kelsey would find a way for a little naughty fun on the side at some point. And Sarah would eventually go from upset to aroused. By nightfall we'd all be working each other over. \n\nExcept for Julia, of course. She wasn't involved in our postgame celebrations - hopefully wasn't even aware. Our baseball trip still had to hold the appearance of being about baseball. Sarah and Kelsey might make my balls ache, but Julia would almost certainly break them if she found out what was going on. \n\nJulia came out of the bathroom wrapped in a towel. She was so fit, so tight. Suddenly I started to rethink my \"no doing the roommate\" policy. I imagined taking her tiny breasts into my mouth and... \n\n\"Dude - get your lazy ass out of bed,\" Julia said and punched my shoulder, hard. \n\nOh right. The \"no doing the roommate\" policy. Good sense, that one. \n\n* \n\nI slid open the glass door and stepped into the shower. With all the action I'd been getting - hand jobs from Sarah and Kelsey, blow jobs from Kelsey (you'd think I was running my own personal employment center, what with all the jobs being given out) - I was sure my penis would be drooping, near death. Instead, the little man was more than solid, almost begging for more. \n\nThe bathroom was mostly dark. I'd forgotten to turn the light on when I stepped inside. I leaned back against the wall. Took myself in hand. \n\nThere was a loud bang as the glass door slid open. \n\n\"Need any help with that?\" \n\nIt was Sarah. Sarah! The girl who could barely look at me on the mornings after was standing there, naked. Smiling. Water running off her ginormous breasts like twin Niagaras. \n\n\"Hey!\" I said, maybe a little too happy to see her. \n\n\"You were taking too long, so I thought - two birds. One stone.\" Sarah reached over and gave my cock a little squeeze, \"Speaking of stones...\" \n\nI moved my hand right up to her fantastic, enormous, possibly physics-breaking tits. For all our jacking and jilling, I'd barely had a chance to touch Sarah's most fantastic features, and I resolved now to make up for that in the moment. \n\nHer breasts looked huge but they felt bigger. More than a handful each, yet firm. Perfect. Her nipples were pink and pointed like pencil erasers. I touched and teased at them with my fingers while I hefted her mounds. \n\nSarah kept her hands on my cock, not really rubbing, just sort of feeling. I knelt a bit and took one amazing little nip into my mouth. \n\n\"Hmmmm,\" Sarah sighed. I released the one and then went at the other. \"That is niiiiice.\" \n\n\"Nice doesn't even begin to do these justice,\" I said. With my ex, I used to take her entire tit into my mouth and suck. I didn't dare even try that with Sarah - her monsters would have suffocated me for sure. \n\nI stepped back and did my best to see the buxom brunette in the dark. Take her in. \"Fuck Sarah,\" I said. \n\n\"You always look at me and say that,\" she said, \"I can't tell if you're saying it in a bad way, or making a request or...\" \n\n\"Looking at you. I mean, how does someone this beautiful, with this body... I mean. I feel so lucky I see you this way and it just... My brain wipes.\" \n\n\"I guess I kind of feel the same way seeing...\" here she looked pointedly down at my cock, \"you.\" \n\n\"I'm not that huge, really. I mean, you keep saying it and I don't mind. Does wonders for the ego. But seriously? This isn't anything that impressive.\" \n\n\"Bigger than anything I've ever...\" \n\nSarah stopped herself. \n\n\"Sarah?\" \n\n\"Every time I think I've got it figured out...\" she mumbled. Dropped my cock and stepped back. Even the shower water seemed to get cold. Sarah slumped down and sat on the floor of the shower. Leaned her head back and stared at the ceiling. \n\nI lowered myself down across from her. The shower was big enough for both of us to sit this way, but barely. Our legs entangled. Sarah's tan thighs rested on mine. \n\nWe lay like that for a while, soaking in the silence. Sarah reached up and absently ran her hand up and down my calf. \n\n\"This is nice,\" she said, \"Muscular.\" \n\n\"Cycling,\" I said, \"I try to go three times a week. Y'know, when I'm not in the middle of a two week long baseball orgy through the midwest.\" \n\nShe laughed at that. I took the opportunity to feel Sarah's legs in kind. Her skin was soft, almost creamy. I did my best to resist the urge to go up higher. Deeper. Into the sodden dark hair of her juncture. \n\n\"God, what am I doing?\" Sarah asked, and threw her head back. The plastic shower wall shuddered with the impact. \n\n\"Getting clean,\" I said, \"Getting dirty.\" \n\n\"What I said last night, when I was drunk...\" \n\n\"You were drunk.\" \n\n\"Maybe not drunk enough. I told you what happened? About the fight.\" \n\n\"You told me he didn't want you to go on the trip. Honestly, if you were my girlfriend... Well, I can't say I'd have acted any better.\" \n\n\"That wasn't exactly...\" Sarah said, \"Fine. Here's what happened. I hate it at Rutgers. I hate my classes, I hate everything and everyone and all I want to do is run away. I fantasize about it all the time. Just me, my car, and my camera.\" \n\n\"You want to be a photographer?\" \n\n\"I don't know. Maybe? It's the only time I feel happy, honestly. Even when I'm tired from school and all I want to do is lie around if I take out my camera and start taking pictures, it all just fades back. I could shoot a cement wall for an hour and I'd be happy. Just doing that.\" \n\n\"So why aren't you doing that?\" \n\n\"Because I need a 'real education' and a 'real job' and being an artist is a 'stupid waste of time.'\" \n\n\"Those aren't your words,\" I said, \"Are they?\" \n\n\"That's what Rob said to me right before I left for the trip. I mean, not exactly? But close enough. I told him that I was thinking of dropping out of school. Doing this full time. The photography, I mean. Not the... Well anyway. I opened up my heart and my dream guy went ahead and stomped on my dreams. Robert the Practical - practically perfect. Practically always right. Practically engaged...\" \n\n\"Not all that perfect if he said all that.\" \n\n\"I guess,\" Sarah said, \"After he said it... It's not like we broke up. But clearly we weren't together, either. We've been a couple for three years, but in that moment I felt like I was staring at a stranger. And then I was in the car. With you. And suddenly... I'm sorry. I'm sure this is what you want to hear, sitting naked in the shower, talking about my relationship troubles.\" \n\n\"You can say what you want,\" I said, \"So long as I get to stay here with you.\" \n\n\"And, see, then you say things like that and I... You know what? This is stupid. We're here. Now. And if Rob doesn't want to share my life, then I'm happy to keep it to myself.\" \n\nSarah stood up with a squeak. She reached down to help me up, as well. She smiled and tousled my hair. My cock had flagged a bit before, but now he was going full pole and... \n\n\"Guys! Hurry it up!\" Kelsey called through the door, \" I still need to shower.\" \n\n\"There's room for one more!\" Sarah said. That dirty minx - where had she been hiding all this time? Kelsey called back. \n\n\"And when Julia comes back from breakfast and finds us all stuffed together in the bathroom...?\" \n\nKelsey said the word 'stuffed' in a way that made me really want to stuff her. Sarah, too. Full of my stuffing stuff. \n\nBut before I could stop her, Sarah sighed and turned off the shower. She shrugged, then stepped out and wrapped herself in a towel. \n\n\"We'll finish this later\" she said, \"I promise.\" Then she left the bathroom. \n\nI hung my head down and took a deep breath. All that time in the shower and I somehow felt less clean than before I'd started. I tried to wIll my cock to at least go from steel to copper, but it wouldn't transmute. Instead, I told myself there'd be plenty of time for tomfoolery as the day went on. \n\n* \n\nIt was our last day in Chicago before we headed back out on the road for more baseball (and, hopefully, more backseat shenanigans). We had planned on walking around town some more, getting dinner, and then we had tickets to Second City that night. \n\nIt was another sunny Chicago day. If I didn't know better, I'd have thought we'd secretly been moved to Los Angeles while we slept. We did touristy things for Kelsey and photoshoot things for Sarah. The White Sox were out of town, but we went over to US Cellular for Julia, just because. \n\nYet all I could think about was what was to come. With Sarah's shower declaration and Kelsey's... Kelsey-ness, I could only imagine the evening that was in store for me once our day was done and Julia was no longer in the know. I couldn't imagine things getting any better. \n\nThen, as we stepped out of Garrett's, caramel popcorn in hand, I heard the blooping bleeping of a cell phone ringing. Sarah's. She pulled it out of her pocket and looked at the screen. \n\n\"Rob,\" she said, \"Ugh. I'm not going to answer it.\" \n\n\"You have to talk to him some time,\" Kelsey said. \n\n\"I agree,\" Julia said, \"Answer the call. Scream 'fuck off!' Then move on.\" \n\nSarah laughed, then pocketed the phone. It started ringing again. \"Fuck it. Let me just get this over with. You guys go on ahead.\" \n\nAs we walked down the block. I couldn't help but stare back at Sarah. She was pacing back and forth, head bent to her chest. Bits of the conversation drifted over to us, mostly just 'fines' and 'OKs' followed by extended silences. It was clearly an uncomfortable conversation, even for those of us who weren't actually in it. \n\n\"Guess they're working it out,\" Kelsey said. \n\nI was more hoping she was working him over. This would be it, I thought, she'd break it off right then. A few minutes more and it would be all day fun time with Sarah and Kelsey. No more 'no touching.' Maybe all three of us could fit in the backseat and the suitcases would ride shotgun. \n\n\"That's not fair!\" Sarah shouted. Even a block away, we could tell the conversation was getting louder, more animated. It was tough to watch. I couldn't look away. \n\nI heard more bleeping bloops. My phone. \n\n\"Speaking of jerks...\" I held up the screen and showed Julia. \n\n\"Ugh. Tell him I said 'fuck off.'\" \n\n\"Who is it?\" Kelsey asked. \n\n\"Your fucking brother,\" Julia said, \"The jerk that ditched us the day before the trip and dropped you and Sarah on us instead.\" \n\n\"Yes, I know who my brother is. Thanks.\" \n\nI slid the screen to answer, then started walking down the sidewalk. Now Sarah and I were at opposite ends with Kelsey and Julia standing between us. A complicated dance just to talk on the phone. But talking to my best friend in front of Julia was just asking to get punched in the dick. And talking to him in front of his sister - the girl that had been licking my dick the day before - well, that was not a good idea, either. \n\n\"What's up?\" I asked, once I felt I was far enough away, \"You're missing a hell of a trip.\" \n\n\"Oh good. I'm glad you're having fun. Listen... There's something I've gotta tell you.\" \n\n* \n\nSarah finished her call around the same time I did. We convened back in the middle. \n\n\"Where next?\" she asked. She seemed a bit brighter than before. I was too much in my own cloud to wonder why. \n\n\"I want to go back to the hotel,\" I said. \n\n\"Wait. What?\" Julia asked. \n\n\"I'm just... I'm tired. I want to go back and lie down. OK?\" \n\nThe girls all sort of surrounded me, protective. I felt hands on my shoulders. My back. Tentative touches that should have kept me calm, but instead only riled me up. \n\n\"God... Look, dammit, we've been driving and walking and just... It's too much, OK? Is that alright with the committee? I'm tired of bouncing around and I just need a rest.\" \n\nSarah, Kelsey, and Julia all stepped back and stared at me. Appraised. \n\n\"Of course,\" Sarah said, \"I'm sure we could all use a break.\" \n\n\"Yeah, dude, don't sweat it,\" Julia said. \n\nKelsey just looked at me and narrowed her eyes. \"What did my brother say to you?\" she asked. \n\n\"Nothing. It's nothing.\" \n\n* \n\nWhen we got to the hotel room, I announced that I wanted to be alone. The girls conferred once again, then nodded and let me go up to our room without them. I didn't know where they planned to go. At that point I no longer cared. \n\nI stripped down to my shirt and boxers. Lay down on the bed, face down. Buried myself in the pillows. For a while I just wallowed. Then I heard a light little knock. \n\nI got up out of the bed and opened the door. Sarah stood there, looking lovely as always. She had on a tight blouse (really, everything she wore was tight with that chest) and a pair of short shorts. She was smiling shyly. \n\nOur eyes met and locked in a long stare. Suddenly it was all running through my head. Me and Sarah in the car, in the pool. That morning in the shower. The way she looked at me, sometimes, that made me think that maybe I was amazing. \n\nIt felt fated. This was our moment. My moment. I leaned forward. Pressed my lips to hers. Lightly at first. Then harder. Sarah put her hands on my shoulders. I pushed myself into her all the more. Tried to force my tongue past her teeth. \n\nI had meant it to be passionate. Daring. Instead it felt oddly transgressive. I reached down, started undoing the buttons on Sarah's blouse. Sarah put her hands on my chest. Not touching, but pushing. Breaking us apart. \n\n\"I... I can't. I can't do this with you. Not now.\" \n\nI stumbled back to the bed and sat there, like awaiting execution. \"You and Rob worked it out,\" I said, \"When he called before. When Jim was telling me about... You two made up.\" \n\n\"Yeah. I mean, sorta? He apologized. He was really sweet. He found all these art schools nearby and did all this research about what I need to do to get in and I don't know what we are, but I'm not ready to be done. I want to try to make it work. I feel like I have to try to make it work. But that means... I can't. I'm sorry, Ben. I just can't.\" \n\nWe sat in silence. The air seemed to press around me. To rush out of the room. I could still feel the aftertaste of Sarah's lips on mine. I felt so alone in that moment and all I could think of was how it sort of surrounded me. This bubble of nothing. \n\n\"I understand,\" Sarah said, \"You were upset and I said those things before in the shower and I... I'm such a screw up. I shouldn't have screwed you up.\" \n\n\"You didn't. I was just... Y'know what? It doesn't matter. I'm happy for you and Rob.\" \n\n\"No you're not.\" \n\n\"I am. True love and all that. I'm sad for me. That's all.\" \n\nThere was another soft knock on the door. \n\n\"Rescue party?\" I asked. Sarah started going to the door, then stopped and turned to look at me. \n\n\"You're a good guy,\" she said, \"You have nothing to be sad about, OK? Just me. I'm sad.\" \n\nKelsey was on the other side, her head cocked. Questioning. Sarah quickly led Kelsey outside the room, then closed the door behind them. I heard the echoes of their voices, but I couldn't tell what they were saying. Was this Sarah telling Kelsey what happened? That she was angry and I was stupid and... Oh God, was I about to lose both girls in one shot? \n\nJust Kelsey came back. She closed the door behind her, then leaned against it, arms crossed. \n\n\"You going to tell me what happened?\" \n\nI told her. About feeling low and Sarah coming in and me kissing her and how she'd pushed me away and how embarrassed I was. Ashamed. I'd put all that passion out there and all she wanted to do was go back to her boyfriend. \n\n\"Don't worry about it,\" Kelsey said, \"Seriously, Sarah's not, like, mad. Not at all.\" \n\n\"What about you? Are you mad?\" \n\n\"That she took Rob back? Fuck yeah. You know what he said to her?\" \n\nI nodded my head. \n\n\"Whatever. If she wants to be stupid I guess I can't stop her. But you're clearly upset about something else. So what happened? Not the Sarah thing. Before the Sarah thing. When you stormed off to your room like a mopey, emo pre-teen.\" \n\nI tried not to laugh and I failed. I took a deep breath and collected myself. Kelsey still had her arms folded, the world's most beautiful interrogator. I wondered if that would work for Homeland Security. You won't respond to torture? Fine. Here's a supermodel. I bet a lot of guys would break right then. \n\n\"Jim called me,\" I said. \n\n\"I know, I was there.\" \n\n\"He wanted to apologize for ditching us. Said he was feeling bad. Guilty. Wanted to get it off his chest.\" \n\n\"OK...\" \n\n\"He's fucking Anna,\" I said. Blurted. I hadn't planned on saying it. It just... There it was. \n\n\"He's WHAT?!\" Kelsey practically leapt forward, \"Anna your ex-girlfriend, Anna?\" \n\nI nodded. \n\n\"That fucking stupid piece of... I can't believe he actually... FUCK!\" \n\nI jumped up and grabbed Kelsey by the shoulders - a sort of semi-hug. I thought I was the one seeking solace, yet here I was comforting her. \n\n\"That lying sack of shit. I can't believe he... I mean, he gave me this, like, whole sob story about how he really wanted to go on the baseball trip and couldn't and how I'd be doing him this epic favor and like... Instead I was just one more obstacle between him and getting laid. He ought to be kicked out of the family for this.\" \n\nKelsey wandered over to the bed and sat down. I flopped down next to her. The hotel air conditioning kicked in. It made a low, soothing hum. I could smell Kelsey's shampoo and I couldn't help but feel a little better, then. \n\n\"God, that sucks,\" Kelsey said, \"That really really sucks. I mean... How could he do that? You must be devastated. I'm wrecked and he's not even my... y'know.\" \n\n\"I mean, Anna's not my girlfriend any more, either,\" I said, \"So I guess this shouldn't hurt so much, right? It's her life, she can do what - or who - she wants. But I just feel awful inside. I didn't know how to say it before and then I felt so stupid feeling this way so I didn't know if I even should say anything and now it's just this big dark knot and I don't know how to get it out of me.\" \n\n\"I understand why you're upset and if you told Sarah and Julia they'd understand, too. He's supposed to be your friend,\" Kelsey said, \"I mean, ditching you on the trip is bad enough but then he's...\" She made a noise somewhere between a scream and a groan. The A/C kind of groaned back. ",
        "We both sort of smiled at each other. A bit of a pained look, the shared misery that's best expressed with sullen happiness. We both felt betrayed. Let down. \n\n\"OK,\" Kelsey said, \"We're gonna fix this.\" She pulled out her phone and started texting. I tried to look over her shoulder, but she turned away. Gave me the 'just a sec' sign. A moment later she finished typing and put her phone back down on the bed. \n\nThen she leaned in and kissed me. Our lips had been all over each other's bodies, but somehow this was our first kiss. I tasted at her thin, pink lips and the world felt suddenly all the sweeter. Then Kelsey pulled back, only slightly. Our noses almost touching. \n\n\"OK, she said, \"here's the deal.\" \n\nAnother light kiss, again on the lips. Smack. \n\n\"Julia and Sarah have our tickets. They're going to go get dinner and see the show. They'll be out for hours.\" \n\nSmack. \n\n\"I'm going to stay here. And 'comfort' you. In your time of need. If that's OK with you?\" \n\nSmack \n\nI just nodded dumbly. Tried to put our lips back together, but Kelsey held her distance. \n\n\"I know I'm not Sarah,\" she said. \n\n\"You don't have to be. You're you - Kelsey. Wonderful, beautiful, amazing Kelsey.\" \n\nShe smiled at me and kissed me again. Then broke apart. \n\n\"I'm not upset. Like I said, this is just fun. Nothing serious. No feelings or jealousy or any of that.\" She snaked her tongue into my mouth. I slid back against her. Gripped at her shoulders and she squeezed back. Both of us holding on. Kelsey stopped us again, then grinned. Cat with canary. \n\n\"And with that in mind, you and I are going to spend the evening taking revenge on my older brother. Doing his little sister ought to do nicely, don't you think?\" she said. \n\nThe grin spread across my face, threatened to swallow my ears, my eyes, all of it. Kelsey was smiling, too. Shyly. Shining. She stood up from the bed, leaving me still sitting there. I noticed Kelsey was panting a little. Shivering. The little blonde hairs on her arms stood up straight. \n\n\"Kelsey, I know you're a... I mean, are you sure you want to do this?\" \n\nThe beautiful teenager responded by reaching down and ripping her shirt right over her head. Bra and all. Gone in one smooth, sweet motion. Her breasts, surprisingly sizable on her small frame, hung high on her chest. Pink nipples stood out sharply. \n\nI ran my eyes over her. Ravenous. Then I looked back up at her face. Seductress, yet also a little scared. Like she knew, in that moment, exactly how much she wanted this and what that meant for her. So flawless and exposed. \n\nShe leaned forward and kissed me, almost tentative this time. \n\n\"Kelsey, honey, your first time... I mean, my first time with Anna it was terrible. I mean really, really bad. It hurt her and that hurt me and it... You should do it with someone special.\" \n\n\"I am doing it with someone special,\" she whispered, then kissed me again. Much harder with tongue and teeth. I felt her breasts dangling over my hands. \"I'm doing it with you.\" \n\nKelsey let me go, then slowly slid down her pants and panties, shimmying them down her legs. Her bare pussy was right at eye level, almost smiling at me, I swear. \n\n\"Fffffuck Kelsey.\" I was definitely going to have to work on other things to say when faced with an amazing, naked woman. \n\nThe beautiful teenage blonde stepped forward. Lifted me up so I stood in front of her. Pulled my shirt over my head. Then reached down and undid my belt. My pants pooled at my feet. My boxers joined them. We were both naked, our eyes tracing the shape of each other. \n\nThen we pressed our lips together once again. I grabbed her skinny shoulders. Squeezed. Then turned and pushed her back onto the bed. She crumpled beneath me, held her lips pressed to mine. \n\n\"You're amazing,\" I told her. \n\n\"You are too.\" \n\n\"I'm just a guy. A stupid, lucky guy.\" \n\nWe were still kissing. Rolling. I held her arms, her sides, her hips. Tried to keep myself from just diving at her most sensitive parts. Not yet. \n\n\"You're THE guy. My guy,\" Kelsey said. \n\n\"So wait. The brother thing from before?\" \n\nShe giggled a little. \"I mean... I'm not going to lie to you and say it isn't a turn on. You know, as an idea. But it wasn't exactly my big brother I was getting off on when I was younger. More like my big brother's best friend.\" \n\nI rolled her onto her back and started kissing down her jaw to her neck. She sighed and stretched. \n\n\"So you've had a crush on me this whole time?\" \n\n\"Not... God you make me sound like such a weenie.\" \n\n\"You're not a weenie. I'm... You're so fucking fantastic Kelsey and I know you can't just see it yet but just wait. You're gonna blow boy's minds. Especially if you blow their other parts, too.\" \n\n\"Oh brother,\" Kelsey said and rolled her eyes. \n\n\"Oh... sister...\" I kept kissing her. Kelsey grabbed my face. Held my attention. \n\n\"That would be fun,\" she said, \"But... don't. Not tonight. I want it to just be me and you. OK?\" \n\nI smiled, went back down to kissing at her neck. Slowly working down to her collarbone. \n\n\"Besides, with awful jokes like that one, I don't know if I'm really ready for this after all.\" \n\nI moved up and kissed her lips. \n\n\"You love my awful jokes,\" I told her. \n\n\"I just hope you get to sucking on my pussy soon so I don't have to hear them anymore.\" \n\n\"Clever girl,\" I smiled, then moved back down to her chest. I dragged my tongue around the outside of her areola, teasing at her tits without touching their most sensitive spots. Kelsey kept trying to shift herself, trick me into licking at her erect nipples, but I deftly dodged. Finally she just grabbed at the back of my head and shoved me down. \n\nI took the little nubbin into my mouth and held it there, lightly bit at her while she moaned. Gasped. \n\n\"Now start licking a little lower, would you?\" Kelsey said. I'd forgotten how directive she could be. \n\n\"What, like here?\" I kissed her stomach. She groaned, then shifted herself upward, making sure my lips would meet their mark. \n\nI stared down at her perfect pussy. Pink lips pouting. Then paused and looked up at Kelsey. The blonde teenager just raised an eyebrow at me. I smiled, then dove into her glistening mound. I started at the bottom, just lapping up her juices, then worked up to her clit. Again, teasing at her. \n\nKelsey's legs slowly wrapped around my shoulders as I licked from bottom to top, again and again. Then finally I slid a finger inside of her and focused my oral attentions on her magic button. \n\n\"Oh... fffffuck that's nice,\" I heard her sigh muffled through her thin legs. Perhaps for the last time, my finger touched the thick ring of flesh that marked her virginity. I stopped and looked up. \n\n\"Do you want me to...? I could do it now and maybe it might not hurt so much when we...\" \n\n\"No! No. I want it on a cock. Your cock. Please.\" The sexy teenager strained. I pulled my finger back and found the little bit of roughness on the roof of her snatch. Started petting it lightly while I went back to her clit. \n\nNo more playing around, I pressed my tongue hard onto her clitoris and worked it for all I was worth. \n\n\"Oh... OH! Close... getting... OH!\" Kesley's body went straight. The walls of her pussy squeezed down on my digit. I let it force me out, little bits of white froth on her legs, my hand, the bed. Liquid Kelsey all over. She giggled a little. I slid up to kiss her, then stopped. Some girls didn't like to taste their own... \n\nKelsey grabbed my face and pulled me down, squeezing my skull so hard it hurt. Well she certainly wasn't shy about putting my head where she wanted it. \n\n\"You're a quick cummer,\" I said. \n\n\"Maybe you're just really good at getting me going.\" \n\n\"I hope so. You're so incredible, Kelsey. I just want to make you feel incredible.\" \n\n\"You do. I do. Now, there seems to be something else we wanted to do.\" She reached down and grabbed my cock. \"Oh yes. There he is.\" \n\nShe smiled and jerked me a few times. I was so hard it hurt, and my balls just ached even more badly. Oh crap. \n\n\"Kelsey, I don't have a condom. Are you...?\" \n\n\"I don't have one either,\" she said, thinking. \"It's OK.\" \n\n\"Are you sure? I mean, I'm clean and everything and I know you are, too, but I don't want to like...\" \n\n\"I want my first time to be bare, anyway. It should be skin on skin. But, like, don't like... cum. Inside me, I mean. It's OK to cum just...\" \n\n\"Just not in you.\" \n\n\"Yeah. Tits, face, ass, wherever. Is that OK?\" \n\n\"Kelsey, whatever you want is fine. I just want to make sure I'm doing right by you.\" \n\n\"Good, then what I want is this,\" she squeezed my cock pointedly, \"In this.\" She pointed at her waiting pussy. It had gone from pink to purple. The lips hung open, obscene. I could see the moisture dripping down and, obviously, I could smell her essence as well. \n\nI tried to slide my mouth back over her but she pushed me away and wagged her free finger. First pointed at my cock, then at her hungry hole. \n\nI'll admit it, at that moment, I got nervous. Kelsey and I weren't dating. We weren't anything. But I didn't want to hurt her or disappoint her in any way and, like I said, I knew what a first time was like for a girl and most of what I knew was that it s-u-c-k sucked. And sure, I'd gotten her worked up with my mouth and she seemed wet and wild but... \n\nKelsey pulled me forward with my cock. Spread her legs and brought me to her center. I reached up and stroked her hair. Kissed at her cheeks and mouth. She rested the tip of my cock at her entrance. I felt her little nether lips tug at it. Urge me forward. Every instinct demanded I slam home. I held there. \n\nI caught her eyes. Now Kelsey was the one who looked nervous. I smiled. \n\n\"Maybe I should suck your... penis.\" \n\n\"My cock?\" \n\n\"Yeah, like, would you want that?\" \n\n\"It might help with lubrication,\" I said. \n\n\"In porn they always... Like the girls always go down on the guy before they...\" \n\n\"How much porn are you watching?\" \n\n\"Shut up.\" \n\n\"It's not... There's no ritual here. I went down on you because I thought it would get you wet and that cumming would help loosen you up a little. I'll do it again if you'd like, but I don't think that's what you want.\" \n\n\"It's just... You have a really big cock. I haven't...\" \n\n\"You just told me you watch porn!\" \n\n\"That's what I mean! It feels really big and I don't want it to hurt.\" \n\n\"Do you want me to stop?\" \n\n\"No, I want you to...\" \n\n\"I'll take care of you. I promise. If it hurts, we'll stop. If it really hurts we'll, I don't know, go watch porn and do something else, OK? Incest porn.\" \n\n\"I never should have admitted to that.\" Kelsey sighed and rolled her eyes. \n\n\"It's OK. You shouldn't... I'm going to stop.\" \n\nI started to pull back, but Kelsey's hand shot down and grabbed my shaft. Held me in place. \n\n\"No!\" she said, \"Don't you dare.\" \n\nI stroked her hair and kissed her again. \n\n\"Just... just go slow,\" she said. \n\n\"And no cumming in you,\" I said. \n\n\"Preferably no.\" \n\n\"And remember why we're doing this,\" I told her \n\nKelsey tilted her head slightly. \n\n\"To take revenge on your brother.\" \n\nShe laughed and as she did, I slid myself forward. Her laugh sort of morphed into a low groan. Not in pleasure, but not exactly pain either. \n\n\"Oh, you're cruel.\" \n\n\"Not nearly as cruel as I will be in a moment,\" I said. \n\n\"Is it... How much? Feels like a lot.\" \n\n\"Just the head. The head of the head, really,\" I said. My hips were absolutely straining but I held them back. Moved forward a little more. Sheathed in her snatch, it was like my whole existence - every nerve, every part of me - was snaking into that pussy. \n\nThere was a whole world of sensations surrounding us - the bed, the sunlight, the beautiful woman beneath me - but I only felt two things: wet and tight. Kelsey was dripping. I could already feel her liquid sliding down my shaft and over my balls. A tremendous little tickle. And yet, at the same time, sliding forward felt like this incredible effort as her pussy walls slowly adjusted to my shaft. \n\nActually, I felt a third thing. An imperative, a need, to just pound my cock into poor little Kelsey's pussy, pain be damned. And every second I was fighting it, a wrestling match in my head to mirror the one that Kelsey and I were undergoing on the hotel bed. \n\nI looked down at her and saw she was staring forward. Sweating. Panting. Looking little and afraid but also wanting. I smiled and she smiled back. I kissed her lightly on the lips. \n\n\"Little more?\" \n\n\"Yeah.\" \n\nI let myself lean forward more. I felt it at my tip. The barrier. I knew I could push forward and just... \n\n\"Big push coming,\" I told her. \n\nShe nodded, gamely, but I could tell this wasn't going well. She seemed to be mumbling to herself. \n\n\"Too much... too much...\" \n\nI started to pull back but she grabbed my ass and stopped me. \n\n\"I don't want to hurt you, Kelsey.\" \n\n\"Someone will. Eventually someone's going to have to do this and I want it to be you, OK?\" \n\nAt the same time, she pushed me forward, her hands on my ass. \n\n\"What if you sat on me and then you could control it?\" I asked. \n\n\"No. Want you... Want you to do it. Be my first. Don't... don't you want it? Want me?\" \n\n\"I do.\" \n\n\"Oh, Ben, you're gonna break my little pussy. Don't you want my... my juice all over your big, hard cock? Yours only. I could be a hundred and there'll always be a little part of me that's yours. I want that. I want you to give that to me\" \n\nI went forward a little more. \n\n\"That's... that's it. Fill me. Stuff me full. Pound me with that cock. I want to... I want to see it. My blood on your cock. Come on. Show me. Give it to me. I want it so bad. \n\n\"This is it,\" I told her, rearing back for the big plunge. Kelsey nodded, brave face. \n\nI pushed forward, felt my cock freeze in place, then burst forward. \n\n\"OH! ooooooooo,\" Kelsey mewled and I saw a tear pool at the corner of her eye. \n\n\"Is that... that it? You whole cock? I got it all?\" \n\nI looked down. \n\n\"Little more.\" \n\n\"Goddammit, Ben, are you sure you're just average?\" \n\n\"Are you OK?\" \n\nKelsey tried to shift around and winced. \n\n\"Not really, but let's... let's get this over with.\" \n\n\"There's the romance I'm looking for.\" \n\nKelsey's face shifted into a little girl pout. \n\n\"Oh come ooonnn Ben. I want alllll of it. Haven't I been good enough to earn it?\" \n\nI shook my head, readjusted then did my best to slide in to the hilt. My balls lightly scraped against Kelsey's bottom. I leaned forward and wrapped her close. \n\nShe sighed, more from relief than contentment. After a minute she seemed to get restless. \n\n\"Still hurts?\" \n\n\"Yeah. A lot. Like, so much. What the hell, you bastard?\" \n\n\"You told me to.\" \n\n\"And if I told you to jump off a bridge would you do that?\" \n\n\"If I could land in your perfect pussy? Probably.\" \n\nKelsey laughed and I felt it everywhere. In her shoulders as I held them tight. On my cock as her pussy rumbled along with the rest of her body. \n\n\"Can I see?\" she asked, suddenly. \n\n\"You mean, like...\" \n\n\"Yeah. I want to see it all inside me.\" \n\nI shifted (Kelsey moaned as I slid back and not in a good way) and let her lean forward to look at where we were joined. There really was some blood on the part of my shaft that was now exposed. The rest was good and buried. Like a weird, dirty magic trick, my cock just seemed to disappear inside the tiny teenager's twat. \n\n\"Wow,\" Kelsey said, \"That's so cool.\" \n\nI saw her eyeing the blood on my cock. \n\n\"I really hope the hotel washes these sheets,\" she said. \"Thoroughly.\" \n\nSitting slightly up made Kelsey's breasts dangle alluringly, so I leaned forward and took one into my mouth. Just suckling lightly. \n\n\"Mmmmmm...\" Kelsey said and then slowly let herself lean back, pulling her tit out of my mouth. My cock slid forward with her, re-burying himself in her velvet underground. She kind of hissed in pain as he did so. \n\n\"So that's it?\" she asked. \n\n\"Well, usually we'd move back and forth for a bit until, ideally, we reach some sort of a climax.\" \n\n\"You make it sound so romantic.\" \n\nLike I said, Kelsey was a smart girl well before she'd grown into a beautiful woman and I could see her logicking her way through this. \"Well, let's try that,\" she said. I smiled and kissed her. Started to withdraw and then slid forward, a micro-thrust, really. \n\n\"Ow,\" Kelsey said, \"Ow. ow. ow.\" \n\n\"Sorry.\" \n\n\"Keep going.\" \n\nI pulled back again - God, this was hard, I wanted to just fuck her so bad, her pussy was so wet and tight and I... I couldn't. I wouldn't. I would make it good for her. I'd find a way. \n\n\"Ah! Dammit. Why does this hurt so bad?\" \n\n\"You get used to it,\" I said, \"Not the pain, I mean, the...\" \n\n\"The penetration?\" \n\n\"Yeah. And then it starts to feel good. And then really good. At least, that's what I've been told.\" \n\nI started sliding back again. \n\n\"I don't think I can do this...\" Kelsey said suddenly, her voice small. \n\n\"It's OK,\" I said. \n\n\"Are you sure? I mean, we could start again in a little bit or maybe I'll just suck you off. Oh my slutty little mouth would love to take your...\" \n\nI held my hand up. Looked her straight in the eyes. \n\n\"It's OK,\" I said. \n\nKelsey nodded meekly. I withdrew. My cock was garish - striped with Kelsey's virginal blood and white streaks of pussy juice. Purple and aching. She looked at me, then slid her eyes down. \n\n\"It's fine,\" I said, pointed, \"I'm gonna have to go take care of this. Red cock. Blue balls.\" \n\nKelsey giggled and I remembered what it felt like when I was inside her and she was laughing. She curled her legs up to her and wrapped her arms around her knees. She looked young and scared and I went over to comfort her. \n\n\"It's OK, just... disappointed,\" Kelsey said. \n\n\"I'm sorry.\" \n\n\"Not you, Me. I'm so mad at me.\" \n\n\"We can try again, you know. Any time.\" \n\nI heard some bleeping bloops. My phone, rumbling through my pants' pocket at the end of the bed. \n\n\"You should get that,\" Kelsey said, \"It might be the girls.\" \n\nI reached down to my jeans and pulled my phone out of my pocket. \n\n\"Ugh. No.\" I showed her the screen: Jim. \n\n\"No, thank you,\" I said, starting to toss my phone away. \n\nKelsey raised an eyebrow at me, then leapt forward. I looked down at the naked beauty, all pink and perfect. Her little bum shook slightly as she reached for the phone. Below it, her pleasure center still dark and dripping. \n\nKelsey slid her thumb across the screen and answered. She lay on her stomach, blonde head propped on her arm. Legs up, feet dangling. Like a high school girl taking a call from one of her girlfriends. Only completely naked. I saw her switch it over to speaker. I sat back against the pillows and listened. Our legs sort of tapped at each other. \n\n\"Ben? Hey man, listen. I'm so glad you picked up. What I said before... Look, I don't like how we left things and I was hoping we could... Am I on speaker?\" \n\n\"Hi Jim,\" Kelsey said, flatly. \n\n\"Uh... who is this? Do I have the wrong number?\" \n\n\"It's Kelsey. Y'know, your sister?\" \n\n\"Uhhh.. Hey Kels. Um, why do you have Ben's phone? I really want to talk to him and I...\" \n\n\"Ben's busy right now,\" Kelsey said. She put the phone down on the bedspread. Then, pointedly, she rose up on all fours. Almost like we were about to fuck doggystyle. Though that was obviously not what the still-somewhat innocent teenager could possibly have in mind. \n\n\"Well, I mean,\" the phone continued, \"Could you go get him? It's kind of important.\" \n\nKelsey wagged her head toward her ass, then looked over at me. \n\nHoly... We were about to fuck doggystyle. Holy holy holy holy fuck! Kelsey must have seen my eyes widen in shock because she just smiled and wagged her head at me again. \n\n\"He's in the room, Jim,\" Kelsey said, \"He's just busy right now. Too busy to talk to you, anyway.\" ",
        "I got on my knees and, tentatively, kind of shifted into position. My dick was still a steel bar wrapped around an iron rod so that wasn't going to be an issue. I started to lower my head, to sup at Kelsey's ample juices, but she swatted at me. \n\n\"Hang on,\" she told the phone, then pressed mute. \n\n\"You,\" she turned her head, somehow looking angry while still presenting her pussy to me in one of the most submissive positions possible, \"Stop dicking around and get your dick in me.\" \n\n\"But...\" \n\n\"You said we could try again any time and that time is now. I'll handle the phone.\" \n\n\"You don't want to maybe hang up first?\" \n\nWith her left hand, Kelsey reached down and unmuted. With her right, she reached back and aimed my arrow at her target. \n\nI didn't need telling twice. In one smooth motion - so much different than the first time - I slid inside little Kelsey's golden snatch. \n\n\"Ahhhhhhhh,\" Kelsey sighed. \n\n\"Better?\" I asked. \n\n\"Much much. So much.\" \n\n\"Hello?\" the phone asked. \n\n\"Is that all of it?\" Kelsey asked me. \n\n\"Little more.\" \n\n\"You and your little more,\" Kelsey sighed, \"Yes brother, I'm still here.\" \n\nI was fully inside of Kelsey and I held there, again, hoping she was getting more used to the sensation. I certainly wasn't - she was, somehow, even wetter than the last time around and in this position her pussy was absolutely squuuueeeeeeezing me. Even my parts that weren't in her felt constricted by the stunning teen's incredible snatch \n\n\"Hmmmm,\" she said, contentedly. \n\n\"What's going on?\" Jim asked. \n\n\"I thought you were apologizing to Ben,\" Kelsey said. \n\n\"I was. Yes, I was. Can you put him on the phone?\" \n\nReluctantly, I reached over for my cell, but Kelsey was having none of it. \n\n\"Don't you think you should apologize to me, too?\" she asked, \"For making me go on this trip under false pretenses?\" \n\n\"Crap. You're right, Kelsey, I'm sorry. Are you having that bad of a time?\" \n\n\"No I'm having a goooooood time,\" Kelsey said, waggling her butt as she said it - working my cock in her pussy like running a Jolly Rancher over her tongue. \n\n\"Hang on,\" she said, pushing the mute button. \n\n\"Hey, Ben. That thing you said before. The back and forth and back and forth until I climax? Let's, like, get on that, K?\" \n\nSomewhere between amused and shocked, I slid my cock back and then drove forward. Kelsey's body rode with me and she sighed, loudly, before unmuting the phone. \n\n\"That is... so much better,\" she said. \n\nI started sawing in and out of Kelsey's pussy. Slowly. Hands gripping her hips. Her little butt cheeks. God she felt amazing. I'd be covering her back in cum in no time if I wasn't careful. \n\n\"Ah, Ah, Ah,\" Kelsey panted with every thrust. She picked up the phone - quite dexterously, all things considered (though, admittedly, I was still going slow) - and switched off the speaker. I thought she was hanging up, but I was more than incorrect. \n\n\"Yes,\" she said to the phone, \"Y... yes. No I'm not sorry, why sh... why should I be sorry? I told you, Ben's busy.\" \n\nI was hitting my rhythm and so was she. Every sentence was punctuated with a shared little gasp. I reached down, around her thin thighs, and found Kelsey's little clitty with my finger. \n\n\"OH! Oh fffffFUCK!\" She cried. It was a little hard pumping her while also bent around her, and Kelsey seemed to sense this. She reached back with her non-phone hand and pushed mine away. Strumming herself, while leaving me to stick with the percussion. I went back to full strokes. \n\n\"G... gonna have to... g... go soon,\" Kelsey said, head hanging down. Her hair wrapped around the phone. I couldn't hear the other end but it sounded like a question. \n\n\"B... Ben? I told you. He's in... inside. Right here. He's... listening,\" she laughed a little. A guilty, dirty, giggle. \n\nThe dirty teenager raised up the cell so I could see her switch back to speaker. \n\n\"Say hi, Ben!\" \n\n\"Hi!\" \n\n\"Waitaminute,\" I heard the phone say, \"Are you two... fucking?!\" \n\n\"Yup!\" Kelsey cheered happily, \"And it's... so... fucking... good!\" \n\nStunned silence. Kelsey switched off the speaker and put the phone back to her ear. She rubbed at her pussy while I pounded her. Going a bit faster now. I couldn't help myself. I knew it was building. Building. I couldn't care. Kelsey's pussy seemed to just hug me tighter and tighter with each thrust. My balls ached from bouncing off her clit. From all the seed they were about to spill. \n\n\"Well maybe you should've thought of that before you slept with Ben's ex,\" Kelsey said, strangely matter-of-factly. The voice on the other end said something but I couldn't understand it and was too busy to try. \n\n\"Y... yes. He's in... In me right now,\" Kelsey continued, \"Pumping me with his... big... OH Sssssssoooooo good. Y... yeah. Don't think... Don't think I'm ever gonna stop... He's pounding me. I can feel every ridge... as it rubs against my... Yeah. Oh... oh wow. He's going faster now. Getting close. Ohhh... oh FUCK yes! \n\nKelsey reached down with her free hand and started rubbing her clit again. \n\n\"I'm rubbing my clitty now,\" she told the phone, \"Just like I... Just like I showed you.\" \n\nMy rhythm skipped and I almost fell right out of her pussy. What did she just say? \n\n\"Yeah, well. You got yours, so I'm g... I'm getting mine. Harder! Give it to me goddammit. Don't... stop... giving it... to... ME!\" \n\nKelsey's whole body sort of cinched for a moment, then she straightened. Her pussy, somehow, tightened even more around me. \n\n\"D... did you hear that Jimmy? I j... just came. I just came on a cock. Your best friend's giant, amazing cock just made me cum so... fucking... GOOD!\" \n\nShe turned her head back to look at me, \"My brother says he's going to kill you.\" \n\n\"Not if... if your p... pussy doesn't first,\" I said. \n\n\"Getting close?\" Kelsey asked me. \n\n\"Y... yeah.\" \n\nThe incredible blonde dynamo turned her head slightly and - I swear - gave me a big grin and a thumbs up. Then she went back to her call. \n\n\"OK - Jimmy I gotta go. No. Oh... fffffuck. No. Your buddy's about to cum. I'm hanging up. Yes, I'm sure he'll call you back eventually. No he's not wearing a... Well too fucking bad cause he's gonna and I'm letting him! Yes - I will. No, I won't. OK. OK. Give my love to Mom!\" \n\nKelsey tossed the phone to the floor, then fell forward laughing hysterically, little snorts punctuating every breath. My cock slid out of her and dangled dripping on the bedspread. \n\n\"That was fucking awesome!\" she said, convulsing on the bed. Well, I told her we'd go until her climax - though this wasn't exactly what I'd meant. I crawled over her and kissed her deeply. Our tongues fought for dominance. The beautiful teenager spread her legs, reached down for my cock and dragged me back inside her for the third time that night. \n\n\"Come on stud,\" she said, \"finish me.\" \n\nEver happy to oblige, I leaned over and slid straight in. \n\n\"More,\" she said, \"Pound me. Pump me. Fuck me like you fucking mean it.\" \n\nI'd spent the whole night holding back on my baser urges - the drive to just absolutely plow the pretty girl under me. And I'd forced myself to keep calm. Like riding a sports car stuck in third, all I had wanted to do was floor it but I'd stayed my acceleration. \n\nNo more. I gave in to my baser urges and began absolutely battering the little blonde vixen into the bed with abandon. My sack slapped into her so hard it hurt. She gasped and groaned with every thrust. \n\nAny doubt that I had about the accuracy of my actions was quickly doused as Kelsey reached down and starting jilling herself again. Her deft little fingers brushed the top of my cock. I felt the spark of satisfaction starting to grow. \n\n\"Kelsey I'm really...\" \n\n\"Good. Me too. Come on, Ben. Pump me. Pump that pussy. Give it to me. Hard. Harder dammit.\" \n\nI reached up and held Kelsey's wrists above her head, stretching her breasts ohhhh so lovely. She grinned, kissed my cheek. My neck. I grasped at her wrists so hard, it probably hurt, using them for leverage. \n\nKelsey shrieking. Babbling. Nonsense.Telling me to fuck. Fuck. \n\n\"Keep fucking meee!\" she cried, \"AH!\" \n\nKelsey straightened again. I recognized her little cums now. She dropped her hand off her clit. Reached up and squeezed at her tit. Rubbed her fingers on my cheek. \n\n\"Ben. Ben you've got to... Got to cum... OK, baby? You... I know you're trying not to. You're doing such a good job. My first time. OH! But now... Now you have to cum. Need it. Please. Cum for me.\" \n\nI nodded, slammed into her. I wasn't at the edge exactly but I could see it now. Started to plan my end. Not here but... but soon. \n\n\"Getting close.\" \n\n\"Yeah... Damn right. How's my little virgin puss? Not a virgin any more.\" \n\n\"So... so good.\" \n\n\"Like you never want to leave?\" \n\n\"Yeah.\" \n\n\"M...me. Me too. That cock is so good. Don't want to ever let it go.\" \n\n\"Got to. Soon.\" \n\n\"I know. I will. Tell me when.\" \n\n\"Getting there.\" \n\nI felt Kelsey slide her legs up and around me. Flexible little nymph, her pussy seemed to shrink in this new position. What had been a wet warm hug was almost choking. Drowning. \n\n\"You want to rub your...\" \n\n\"N... no... too sensitive. Just... just need to cum. OK? Cum for me.\" \n\nI nodded. Point of no return. I was there now. Floodgates open. Pleasure rising. My brain, my fingers, my fucking cock and in my head all I wanted was to... No. I started to slide back. Kelsey's legs held me close. \n\n\"No!\" she said, \"No no no.\" \n\n\"Kelsey, I've gotta...\" \n\n\"Don't you dare. Don't you dare. Come on. Cum. Cum inside. Cum inside meeeee.\" \n\nI tried to pull back again, but the little blonde was stronger than she looked and she held me close - arms and legs wrapped around. Chanting. \n\n\"Don't you dare. Don't you dare. Don't you dare.\" \n\nAnd then I wasn't just at the edge, I was over - seed bursting out of the floodgates, racing forward, cock quivering... BURST! \n\nKelsey gasped and then screamed low in her throat and her body wrapped around me even tighter and \n\nBURST \n\nI swear I felt my fertility splash against Kelsey's pussy walls and she must have felt it too because she was squealing and squeaking as her body rocked against mine, almost shaking and \n\nBURST \n\nAnother blast of seed sent into the beautiful blonde teenager's unprotected pussy. My eyes squeezed shut so lost in my own pleasure. Only the press of flesh, the smell of sex. Kelsey's gasps and shudders and my need to just keep filling. Keep filling her up with my cum \n\nBURST and Burst and burstburstburst till I was empty, my cock still straining at Kelsey's little quim trying to give her more. \n\nKelsey's limbs loosened. So inextricably together, now the moment passed, and I slowly peeled myself off of her. She lay back, flat. Blown. I leaned over and kissed her forehead and she smiled. Slowly stretched herself up. Then she looked down at her still-splayed legs. Her pussy red, flecked with white from our cums. \n\n\"Holy crap that's a lot,\" Kelsey said, \"Are you sure you're not a porn star?\" \n\nShe reached down and cupped her hand at her now-sated snatch, scooping some of my spend. Kelsey stared at it, always the scientist. Studied. \n\n\"Hmmm,\" she sighed contentedly, \"I don't know about baseball stuff, but that was definitely a home run. You didn't tell me it got that good, that quick.\" \n\n\"Doesn't always.\" \n\n\"Magic penis,\" Kelsey said. She reached down and grabbed another palm-full of sticky fluid. \"Seriously?\" \n\n\"I'm sorry Kelsey. You told me not to cum in you... I'll go downstairs right now. I bet there's a pharmacy open, it's not that late and I can...\" \n\n\"It's cool,\" the beautiful teenager said, \"I'm on the pill.\" \n\n\"Oh. Oh good! But you said...\" \n\n\"I said 'don't cum in me' cause I thought I didn't want that. Then I did. Don't worry. I'm horny, not stupid.\" \n\nMy whole body seemed to unwind in that moment. Fuck. I really thought I'd done something awful just then. Not that it'd stopped me, exactly. Stupid brain always making me do stuff then making me guilty for it. \n\n\"So you're safe.\" \n\n\"Far as I know. Though you should probably fuck me again, just to be sure.\" \n\n* \n\nWe cleaned up afterward, each taking a turn in the shower. I thought we might clean up together, but post-sex Kelsey was less... driven than ordinary Kelsey. It was probably for the best, my poor cock was pretty wrung out after the evening's adventure. \n\nWhen we got back to bed it was still somewhat early. The other girls wouldn't be back for another hour, and so we lazed against the pillows. Kelsey drifted her hands through my chest hair and I lazily stroked at her long, blonde locks. She cooed, content. \n\n\"So,\" she asked, \"Feeling better?\""
    ],
    "authorname": "Spector_Dugan",
    "tags": [
        "first time",
        "oral",
        "college",
        "exhibitionism",
        "cheating",
        "virgin",
        "cunnilingus"
    ],
    "category": "Erotic Couplings",
    "url": "https://www.literotica.com/s/the-baseball-trip-pt-04"
}