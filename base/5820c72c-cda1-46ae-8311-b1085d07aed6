{
    "title": "Sister's Home Movies Ch. 03",
    "pages": [
        "\"All I'm saying is that you are missing out on a lot of fun, Ron. Dating is a ritual of growing up that you shouldn't just ignore.\" \n\nI love my sister but she could pick the most inopportune times to bring up my lack of dating. Like this time, she was sitting astride my morning hard-on, undulating her hips with an incredibly slow movement that she called foreplay fucking. She said that in the absence of other foreplay like oral stimulation, fingering, etc., this would build her arousal toward a nice vaginal orgasm. Whatever, it felt great and I wished she would just stop talking and let me enjoy it.\n\n\"You didn't date in high school and now here you are getting ready to start your second semester of college the same way,\" Maryanne continued without giving me a chance to respond. With my hands on her thighs, I tried to speed up her rhythm to no avail.\n\n\"So what you're saying is,\" I sighed, while moving my hand up to caress her rippling breasts. \"I should subject myself to ego-busting rejection, spend money I don't have on movies, dinner or whatever, make my clumsy attempts at small talk in an effort to find common interests, all in the hopes that after eight or ten dates I might get laid?\" I raised my eyebrows in an exaggerated smirk as I watched her gently rocking on my cock. \n\n\"Maybe I should cut you off,\" she teased, raising her eyebrows in a mock challenge. At least I hoped it was. \"Maybe then you would have an incentive to start dating.\" \n\n\"You'd be cutting yourself off too,\" I retorted cockily as she finally picked up her rhythm.\n\n\"I was doing fine without you,\" she smiled coyly. \"You've seen my dildo collection.\"\n\n\"Can your dildos do this?\" I asked, pinching her nipples and tweaking the tips just the way she liked. \n\n\"Ooooo!\" she squealed, rocking faster on my eager cock. I bucked my hips to match her accelerated rhythm.\n\n\"Or this?\" I continued as I dropped one hand to her pussy, rotating my thumb lightly against her swollen clit. \n\n\"Oh fuck!\" Maryanne cried, rocking faster, bouncing higher and nearly thwarting my thumb's circular motion on her clit. Mission accomplished. Conversation over. \n\n\"Oh yeah!\" My sister went crazy, rocking frantically with an intensified rhythm until her pussy-clutching orgasm sparked a gushing release from my cock and we exploded together in a mutually satisfying climax, leaving us both breathless. \n\n\"Come on, Geek,\" she prodded moments later as she jumped off my cock. \"Get showered. You don't want to be late for school. \n\n\"It'd be your fault again,\" I said, swatting her naked ass before ducking into my bathroom. We had started showering separately on weekdays to keep from getting distracted and being late. It had happened more than once. \n\nI showered, dressed, grabbed a Pop Tart to eat on the way, and arrived at school with seconds to spare and a big smile on my face. God, I love my sister! Our morning ritual is the best part of my day. \n\nDashing in the back door of my Physics Lab just as the professor was walking in the front door was not a good way to start the semester. I whipped my eyes around checking out the seating. A middle aisle split the room into two rows of worktables, each with two stools. I quickly identified the few people I knew sitting at each table but those were all full.\n\nBefore I could sweep my eyes across the room a second time, someone waved at me, hurriedly motioning me over. I looked around to make sure this beautiful, brown-skinned goddess was actually motioning to me. She smiled and jabbed her finger at me, motioning again for me to take the stool next to her. \n\n\"Hi,\" I whispered hesitantly as I eyed her black sweater curving lasciviously around her generous breasts. \"I'm Ron.\" I added as I tried to focus on her face but caught my eyes drifting downwards towards her tits. \n\n\"I know, Freshy,\" she whispered back, using the common slang for freshman. \"Katrina Johnston,\" she added sticking out her hand. I shook it as my eyes dropped farther down to the shapely expanse of nylon-covered thighs visible below her mini-skirt. She nodded toward the front of the classroom where the professor was waiting patiently for the class to give him their undivided attention.\n\nHe introduced himself, reviewed the curriculum and told us we would be selecting lab partners for the entire semester today. I tried to covertly check out Katrina as he spoke but every time I glanced at her, she was looking at me and I looked away. A few minutes into the class, the professor asked us to introduce ourselves to the person next to us, giving me a chance to look at her more closely. \n\n\"I'm... um... not sure why you... I mean I'm glad you did, but...\" Damn it! This is why I don't date! I get tongue-tied whenever I'm around a good-looking woman. And Katrina wasn't just good-looking she was stunning.\n\n\"You were the only freshman in the advanced Physics class,\" Katrina jumped in before I made a complete ass of myself. \"You became treasurer of the Physics Club,\" she continued with her eyebrows raised in wonder about how I had accomplished that. \"You were the only one who appeared to have read and understood the textbook.\" \n\n\"I love this text book,\" I said, pointing to the book in front of her. \"I read it when I was in High School. One of the reasons I applied here was because of this author.\" The other reason was it was close to my sister's house but I didn't share that detail. \"I was hoping to take his class but they said he retired this year.\"\n\n\"He did,\" she said, nodding. \"He wasn't a young man and he kept forgetting things. But now he's making a nuisance of himself at home with nothing to do.\" It was my turn to raise my eyebrows.\n\n\"You know him?\" I asked excitedly. Katrina pointed to the author's last name on the textbook: Johnston. \n\n\"Holy crap!\" I said. \"He's your father?\"\n\n\"Grandfather,\" she smiled, her whole face beaming with pride. \"I read this whole book when I was in high school too, but I was proofreading it and didn't fully understand everything then.\" We talked about what it was like having a famous professor as her grandfather and I pointed out a couple of his theories that particularly intrigued me. \n\n\"At least when you start talking about physics you quit gawking at my tits,\" Katrina said matter-of-factly just as the professor called us back together. \"I was afraid I was going to have to find different lab partner,\" she laughed. \n\n\"I'm sorry,\" I stammered, my face beet read and my eyes inadvertently dropping to her breasts again. \n\n\"Stop that,\" she teased, slapping my arm. \n\n\"I'm sorry!\"\n\n\"So you said... twice,\" she whispered. \"They're just tits,\" she smiled. \n\n\"Yeah, and a Ferrari is just a car,\" I retorted. Not thinking before I spoke. \n\n\"You didn't just say that!\" she said, stifling a laugh but it looked like she took it as a compliment. She picked up her pen and started taking notes. Shit! My cock was rock hard and I could hardly pay attention to what the professor was saying, something about an initial project that was due next week. By the time we were gathering up our books to leave, I was completely lost.\n\n\"What do you think, Freshy?\" Katrina asked, juggling her books against her ample bosom. About what? The assignment? Her tits? About the cushiony place her books were leaning?\n\n\"You tell me, Miss Professor's granddaughter,\" I answered, trying not to give away my lack of attentiveness in class. \n\n\"I think we should do number 2, it'll be fun and it's the area you seem to like the best.\" I nodded but didn't have a clue what she was talking about. \n\n\"Perfect!\" I said. \"Do you want to meet outside of class to get started,\" I offered hopefully. \n\n\"Didn't he just say he was going to give us sufficient time next class period?\" she asked. Hell if I know. \"Or are you just looking for more gawking time?\" she added, glancing at the bulge in the front of my jeans.\n\n\"No!\" I insisted, turning sideways and hoping I wasn't too obvious. \"I was... I guess you're right he did say that.\" She cocked her head to the side and appeared to be studying me.\n\n\"Tell you what,\" she said, apparently making up her mind. \"I'll give you one minute of gawking time at the beginning of each class and then we'll focus on our physics projects.\" My mouth must have dropped open because as she turned to leave she added with a chuckle, \"but no drooling!\" \n\n\"What about your ass?\" I whispered as she passed me by. \"Can I gawk at that?\" I couldn't believe I said that out loud.\n\n\"Why not,\" she shrugged. \"Everyone else does.\" She was smiling as she brushed past me and I watched her ass sway suggestively under her tight skirt all the way to the doorway. Fuck! What a smart, sassy, sexy woman. On my way out of the room I took note of the professor's website where we were assured all of our assignments would be posted. \n\n\"She said what?\" Maryanne asked when I described my encounter with Katrina. \n\n\"She said I could gawk at her tits for one minute at the beginning of each class,\" I smiled as I took another bite of roast. My sister just shook her head.\n\n\"You are so going to get laid!\" she shouted, extending her hand for a high-five. \n\n\"I know,\" I answered as I slapped her hand. \"Right after dinner, I hope.\"\n\n\"No, I mean this woman is perfect for you,\" Maryanne continued as I gobbled up the last of my vegetables. My sister really is the best cook.\n\n\"I just met her,\" I argued, but secretly hoped she was right. \n\n\"Ronnie, just don't be a geek about this gawking thing,\" she warned me as we cleaned up the dishes and headed for the bedroom to shoot a video for Mark.\n\n\"What do you mean?\" I asked, stripping off my clothes and getting the camera ready. \n\n\"I mean,\" she said turning towards me as she shook her bra loose, releasing her flawless breasts. \"Don't actually do it.\" I marveled at the way she just let her bra drop to her hands and tossed it aside without a thought. \n\n\"Why not,\" I countered. \"Don't you think she wants me to?\"\n\n\"Yes!\" Maryanne answered with an exaggerated sigh. \"That's exactly why you shouldn't.\" Really? That makes perfect sense. I shook my head as I watched my sister peel her thong down her long, shapely legs. Her neatly trimmed pussy never failed to generate a reaction from my cock and it was pointing right at her by the time she crawled up on the bed. \n\n\"What are we doing today?\" I asked as I grabbed the camera.\n\n\"You said you wanted to do something with the tripod,\" she answered. \"But first...\" She wrapped her hand around my aroused cock and scooted to the edge of the bed. \n\n\"Mmmm,\" I moaned as my sister sucked my cockhead into her warm mouth and bobbed her head a few times. \n\n\"Just warming you up, Geek,\" she smiled. \"Get the camera ready.\" \n\nWith Maryanne on her hands and knees near the foot of the bed, I positioned the camera to the side, zooming in enough to get all the action without showing me above my stomach.\n\n\"Let yourself go, Sis,\" I directed as I positioned my hard cock against the moist entrance to her love canal. \"I want the camera to see your tits swinging wildly.\"\n\n\"Sure you do. They're not your tits getting bruised,\" she laughed, making me wonder what Katrina's much larger tits would look like swinging from her chest. I plunged balls deep into my sister in one thrust.\n\n\"Oopmh,\" she stifled a moan as I grabbed her hips and pounded her pussy mercilessly. Her tits moved exactly as I hoped they would and the camera captured it perfectly. I was glad I didn't have to worry about how my face looked in these videos. I never wanted to see it contorted the way Mark's was when he fucked Maryanne. The video was edited and emailed in less than an hour. \n\n\"Just be yourself tomorrow, Ronnie,\" my sister said later that night as we got ready for bed. \n\n\"If I did that, I'd be gawking at her tits,\" I joked. \n\n\"Just focus on the physics,\" she said, turning off the light and snuggling against me. The physics of how her bra held those babies up was what I wanted to focus on.\n\n\"I will, Sis,\" I said, kissing her good night. \n\nI dreamt of Katrina, picturing her milk chocolate colored breasts tipped with thick black nipples. In my dream, she teasingly offered them to me during our physics lab while everyone else worked on their projects, seemingly oblivious to her nakedness. I squeezed her large breasts and sucked on her erect nipples as she admonished me not to drool. \n\n\"Dreaming about anyone I know?\" Maryanne asked, jolting me out of my dream. \"Looks like you need some late night attention,\" she said, scooting down on the bed and taking my throbbing cock into her warm mouth. \n\n\"Oh yeah!\" I cried as my sister slid her lips down the length of my shaft and her tongue danced along the sensitive ridges. \n\n\"Don't let me interrupt your fantasy,\" she said, taking a breath. \"Close your eyes, Ronnie, and envision it's her.\" My over active imagination coupled with my sister's expertise made me cum so hard my whole body was shaking. Fuck! That's the way to fantasize. I wondered if this was what my sister's role-playing was all about. \n\n\"Damn, Geek,\" Maryanne said, wiping cum from her chin. \"She must really be something.\" \n\n\"She is,\" I panted as we snuggled together and went back to sleep. \n\n\"Remember, don't even look at her tits,\" my sister reminded me as I left for school the next day. \n\n\"Got it, Sis,\" I kissed her hard on the mouth and squeezed her firm ass before grabbing my books and heading out the door. \n\n\"Hey Katrina,\" I said, looking only at her face as I took the stool next to her. \"I want to apologize for yesterday,\" I said. If possible she looked even sexier today. She was wearing a beige blouse that buttoned up the front and another short, tight skirt.\n\n\"For what? You did nothing to apologize for,\" she whispered, leaning closer and exposing the tops of her light brown globes through the gape in her blouse. Had I been inclined to look, I would have gotten a great view of her generous cleavage.\n\n\"I was rude,\" I whispered back. \"You are a very attractive woman but it was sexist of me to gawk at you the way I did. I'm sorry.\" I turned towards the table.\n\n\"I'll take that as a compliment,\" she whispered, laying her hand on my arm. \"No need to apologize. Does this mean you don't want your minute of gawking time,\" she teased. \n\n\"Nah, let's just work on the project,\" I laughed like she had been making a joke but if I wasn't mistaken she seemed a little disappointed. \n\nWe worked well together and complemented each other's abilities. Katrina was great at setting up a hypothesis and I was thorough in the documentation of our experiments. Every once in a while I would catch her looking at me with a curious expression but I did my best to ignore her gorgeous tits for the entire class period.\n\n\"I'll type this all up and email it to you so you can review it,\" I said at the end of the class period. \n\n\"Thanks, Freshy,\" Katrina said. \"You're good at this.\"\n\n\"So are you,\" I said, catching myself before my eyes dropped to her chest. \n\n\"See you tomorrow,\" she smiled. I risked a glance as she walked past me, and damn if she hadn't undone the second button on her blouse. I could see most of her left breast before it disappeared into a black, lacy bra. My cock sprung to attention at the sight of her mocha colored orb. Fuck! Maybe my sister was right. Maybe she wants me to look at them. I followed the exaggerated sway of her hips as she walked out of the classroom and wondered where this might lead. \n\n\"How was your day, Geek?\" Maryanne asked as she walked in the door. \n\n\"I could use some relief,\" I smiled as I helped her with the grocery bags. \n\n\"That good, huh?\" she laughed, setting the last bag on the kitchen table. I spun her around into a full embrace, squeezed her against me as I plunged my tongue into her mouth. We didn't even bother with the bedroom. Stripping each other naked, we fucked right there in the kitchen with Maryanne leaning against the sink and me pounding into her from behind. \n\n\"Oh yeah! Harder!\" she screamed as I dug my fingers into her hips and pummeled her pussy for all I was worth. I closed my eyes and pictured Katrina's dark breasts, wondering how they would feel in my hands. I imagined her round ass and how her pussy would envelop my hard cock. \n\n\"Oh, FUCK!\" Maryanne cried, interrupting my reverie. I slammed into her three more times and then we were both cumming. I jerkily shot several loads of cum into my sister's hot, pulsating pussy as she tightened her muscles around my cock and I collapsed against her back. \n\n\"Tell me about your day,\" Maryanne whispered once she'd caught her breath. I extracted my spent cock from her soggy pussy before answering her.\n\n\"It was fun,\" I answered cryptically as I pulled her against me and we enjoyed another long, passionate kiss. \n\n\"Tell me what happened,\" she said, pushing me away. \"Did you gawk?\"\n\n\"You were so right, Sis,\" I said as I described my entire day, including my glance at Katrina's tits at the end of class. \n\n\"I told you she wanted you to look!\" Maryanne said excitedly. \"The question is: what else does she want you to do?\" She raised her eyebrows and smirked at me. \n\n\"You tell me,\" I answered. \"You're the expert.\" \n\n\"I think you should ask her out,\" my sister said. \"But I think you should wait a week or so. See how she handles the next few days.\"\n\nI did what my sister suggested, continuing to ignore Katrina's breasts for the rest of the week. It was like she took it as a challenge, wearing blouses that showed more cleavage and leaning closer so I couldn't miss the view. She was definitely hard to ignore and my cock was aching by the time I got home from school. \n\nMaryanne kept encouraging me to play hard to get while taking good care of my throbbing hard-on when she got home from work.\n\nThe following Monday, at my sister's suggestion, I tried to conjure up the courage to ask Katrina out but she practically beat me to it.\n\n\"Maybe you shouldn't have given up your gawking rights,\" she said when she caught me glancing down her blouse at the end of class. Three of her buttons were undone and she was wearing an even skimpier bra. \n\n\"Maybe you should just show them to me,\" I retorted as I gathered up my stuff. \"Then we wouldn't have to keep playing this game.\" I laughed.\n\n\"I wouldn't do that unless we were on a date,\" she said. I just shrugged as I walked her to the door. Stopping in the classroom doorway, she turned and blocked my way. \n\n\"I said, I wouldn't do that unless we were on a date,\" she repeated, standing next to me and looking at me quizzically.\n\n\"Um...\" Damn! I can be so fucking slow at times. \"Would you like to go out Friday night?\" I stammered.\n\n\"Where?\" she asked as we moved out of the doorway to let others exit the classroom. \n\n\"Wherever you want to go.\"\n\n\"No,\" she said. \"I'll go out with you but you have to at least ask me to go somewhere specific, not just, would I like to go somewhere and show you my tits.\" She was smiling but I could tell I had better come up with something quickly. \n\n\"Katrina,\" I said, looking her in the eyes. \"Would you like to come over for dinner Friday night? You could meet my sister and we could catch a movie afterwards.\" I smiled as I awaited her reply.\n\n\"I'd love to,\" she said, her eyes dancing with enthusiasm. \"Do you want to pick me up at my dorm or should I meet you there?\"\n\n\"It wouldn't be a proper date if I didn't pick you up.\"\n\n\"No it wouldn't,\" she said, smiling. \"And it is a date.\" She leaned up and kissed me on the cheek, letting her tits brushing against my arm before she turned and headed to her next class. \n\nThe week flew by. I loved working with Katrina on our physics projects. We got more comfortable every day and our bantering became even more flirtatious. By the time I picked her up on Friday night there was none of the usual first date anxiety. \n\nShe was ready right on time and met me in the lobby of her dorm. Wearing a light green blouse and black curve-hugging stretch pants, she smiled and kissed me on the cheek. As she walked towards my car, I admired the way her tight pants perfectly outlined her sexy ass. ",
        "The dinner was a huge success. Katrina and Maryanne hit it off famously, almost ignoring me as they talked fashion, celebrities, movies, and music as if they had been best friends forever. At Katrina's suggestion we skipped the movie and got out the Settlers of Catan game. I won but Maryanne and Katrina insisted I had cheated.\n\n\"How did I cheat?\" I asked as we put the game away.\n\n\"By being a geek,\" Maryanne laughed.\n\n\"Yeah,\" Katrina jumped in. \"You took the whole thing way too seriously,\" she laughed. \"You took advantage of us.\" God, I would love to take advantage of them. \n\n\"You guys are just poor losers,\" I teased. \"You were too distracted with your celebrity conversations to pay attention to the game.\"\n\n\"Exactly!\" Katrina said, slapping me on the arm. \"That's how you took advantage of us.\" Maryanne raised her eyebrows at me, knowing exactly what I was thinking. \n\nKatrina said goodnight to my sister and I walked her to my car. As I started to turn the key, she put her hand on my wrist to stop me. I looked over and she was unbuttoning her blouse. \n\n\"I don't want to do this in front of my dorm,\" she said. \"But I promised you could see them.\"\n\n\"Wait,\" I said, it was my turn to put my hand on her wrist. \n\n\"What?\" she asked. \n\n\"I'm a geek and I don't date a lot but I know this isn't the way it's usually done.\"\n\n\"You don't want to see my tits?\" she asked, clearly surprised.\n\n\"I would love to see your tits,\" I responded. \"I fantasize about your tits, but... I don't know.\" Damn, this wasn't coming out right. \"Maybe I'm old fashioned or some kind of hopeless romantic but... I mean, we haven't even kissed and you're ready to show me your tits. Doesn't this usually progress differently?\" Katrina buttoned up her blouse and just stared at me. \n\n\"You fantasize about my tits?\" she asked quietly. I just nodded.\n\n\"What do they look like in your fantasy?\" she asked, teasingly.\n\n\"They're beautiful, soft with thick black nipples,\" I admitted sheepishly.\n\n\"Mmmm,\" she smiled.\n\n\"What do you mean, mmmm?\" I asked. \"Aren't you going to confirm my description?\"\n\n\"I gave you your chance to see them for yourself and you declined,\" she laughed, settling back in her seat. I started the engine and we drove in silence for a few minutes. \n\n\"I love your sister,\" Katrina said as I drove her home. \n\n\"So do I,\" I answered without revealing how often that happened. \n\n\"I'm really jealous,\" she said. \n\n\"Of my sister?\" I inquired, wondering if we had somehow given ourselves away.\n\n\"No, silly,\" she sighed. \"Of the two of you \u2013 your relationship. I'm an only child. I think I missed a lot by not having any siblings.\" She didn't know the half of it. \n\n\"My sister has always been there for me,\" I answered.\n\n\"And I'm sure you've been there for her, too,\" she smiled. \"Does it bother you that she calls you geek?\" \n\n\"No, she means it in the most endearing way.\" \n\n\"Would you mind if I called you geek?\" she asked.\n\n\"It's better than freshy,\" I answered, smiling at her.\n\n\"Then geek it is!\" she announced.\n\n\"As long as you call me Ron or Ronnie when we're in the throes of passion,\" I added.\n\n\"The throes of passion?\" she asked incredulously. \"You don't even want to see my tits and you've got us in the throes of passion? When is this going to happen?\"\n\n\"On one of our next dates,\" I answered sounding more confident than I felt.\n\n\"Oh, when do you think our next date should be?\" she asked, coyly.\n\n\"Is tomorrow too soon?\"\n\n\"I think I'm available. What would you like to do?\" she asked, sounding more pleased than she had since I declined to see her tits. \n\n\"Maybe we could see that movie we didn't see tonight,\" I offered. \n\n\"I'd love to, Geek,\" she laughed, nearly blushing at her use of my nickname. \n\nI walked her to her dorm room and she gave me a hug before opening her door. I wrapped my arms around her and kissed her long and hard while our bodies conformed to each other. Her lips parted invitingly and my tongue slipped inside as she pulled me closer. Our tongues danced excitedly around each other but our hands barely moved.\n\n\"Mmmm, that was nice,\" she whispered as we broke the kiss. I was still holding her when she leaned back and pulled her blouse and bra away from her left breast, exposing the dark areola and thick black nipple to my view. \"Fuel for your fantasy, Ronnie,\" she whispered, kissing me quickly on the lips before she opened her door. \n\n\"See you tomorrow,\" she said as she slipped inside her room and closed the door. Damn! The sight of her bare breast was mesmerizing \u2013 even more beautiful than I had imagined. Her nipple was thick, black and appeared to be aroused. I knew my cock definitely was. Time to get home to my sister.\n\n\"You stopped her?\" my sister asked disbelievingly as I described taking Katrina home. We were naked on her bed. I was lying on my back with Maryanne's head on my stomach as she stroked my hard cock.\n\n\"I didn't want her to just show me her tits. How romantic is that?\" I asked.\n\n\"But she showed you anyway. Are you sorry she did?\" \n\n\"No, not at all,\" I answered as Maryanne started licking around my cockhead. \"The way she did it was perfect, especially after that long kiss.\" \n\n\"And you're seeing her tomorrow?\" she asked with a mischievous smile. \n\n\"Yes,\" I answered, wishing my sister would get on with the blowjob. \n\n\"Maybe you should save yourself for her,\" Maryanne said, sitting up on her heels as she continued to stroke my saliva-covered cock.\n\n\"Maybe not,\" I pleaded with my eyes. She just laughed and sucked my hard cock back into her warm mouth. \n\nMaryanne made a sly comment about me not lasting long but then proceeded to suck me hard again and mounted my rigid shaft for a wild, mutually fulfilling ride. \n\n\"She really is beautiful, Geek,\" Maryanne said as we snuggled together in our post-coital intimacy. \"Thick, black nipples, huh?\" she asked quietly.\n\n\"Yeah, thick and long,\" I whispered, reliving my quick view of her breast. \n\n\"I wouldn't mind sucking on those myself,\" she teased as she settled into her sleeping position. What the fuck! I would pay to see that! \n\nAs you can imagine, my dreams were filled with images of a threesome with Katrina and my sister. I awoke fully recovered and ready for our accustomed morning fuck. \n\nSince it was Saturday morning, I let Maryanne sleep while I daydreamed about my date with Katrina. I was picking her up at her dorm after lunch so we could see an early movie and have dinner afterwards. Surprisingly, I wasn't just thinking about her thick nipples or the taste of her lips. I thought about her radiant smile and the way she crinkled her nose when she was working on a particularly complex problem. I thought about the way she would hit my arm when I made a smart-ass remark and of course, I thought about her lovely ass. \n\nMaryanne snuggled up to me and reached for my cock before she even opened her eyes. With a light stroking, she fed me into her mouth and licked all around my cockhead. Damn!\n\n\"Sure you don't want to save yourself for your date?\" she teased, releasing my cock and turning her face towards mine. \n\n\"I'll be fine,\" I answered, hoping she wasn't serious. \n\n\"I know you will,\" she answered while positioning herself between my outstretched legs. \"You'll be more than fine,\" she said as she licked and teased my cock until I was humping my ass off the bed trying to drive the length of it down her throat. \n\n\"But just in case, you're only going to cum once this morning,\" she laughed as she scooted up and swung one leg over me.\n\n\"One measly little cum?\" I whined playfully as Maryanne impaled herself on my throbbing shaft, her hot pussy juices coating my cock while her muscles tightened around me.\n\n\"Yup!\" she said as she set a steady rhythm and I reached for her bouncing breasts. \"This is what you want to do to her, isn't it?\" she asked. \n\n\"Yes,\" I panted as I squeezed her breasts and pinched her nipples. \n\n\"Mmmm,\" Maryanne sighed. \"Think her pussy will be as tight as mine?\" she whispered as she leaned forward and rolled her hips, driving my aching cock deeper into her love channel. \n\n\"Probably tighter,\" I teased. \n\n\"Her ass looks like it is more round than mine,\" she said, rocking faster as I twisted her taut nipples.\n\n\"Her breasts are larger, too,\" I smiled. \n\n\"Maybe you won't need me anymore,\" Maryanne said, intentionally baiting me.\n\n\"We've only had one date,\" I countered, having difficulty continuing the conversation when my cock was getting ready to explode.\n\n\"But you see each other at school every day,\" she panted as she bounced higher on my cock, landing harder each time. \n\n\"Oh God! Sis,\" I moaned, pulling my hands from her breasts and grabbing her hips to help keep the rhythm going. \"I'm about to cum!\" I announced.\n\n\"Me too!\" she screamed. \"Just... a little... bit... more!\" she cried, each word punctuated with a downward thrust onto my swollen cock. With my hands on her hips, I slammed her down on my cock, smashing her clit against my pelvic bone and driving her over the edge. I had held back as long as I could but finally let loose a torrent of cum just as my sister clamped her pussy muscles around my convulsing cock. \n\n\"OhhhhhhHHHHHH! FUCK!\" Maryanne screamed as the force of her orgasm shredded any composure she had left and she bucked wildly on my spurting cock. Gasping for breath, she collapsed on my chest.\n\nI slid my hands around to her ass cheeks, squeezing affectionately as I kissed the top of her head. \n\n\"Seeing each other at school every day doesn't mean we're going to fuck on the second date,\" I whispered, continuing our conversation.\n\n\"It doesn't mean you won't,\" she responded, brushing her lips across mine. \n\nI was showered and dressed, eating lunch in the kitchen when Maryanne came back from running errands. \n\n\"I got you these just in case,\" she said, handing me a three pack of condoms. I blushed despite the intimacy between us. \n\n\"It's only the second date!\" I insisted. \n\n\"Better to be prepared and not need them than to need one and not have it,\" my sister stated profoundly. \n\n\"It's never better not to need one,\" I shot back, enjoying the light banter with my sister. \n\n\"Have fun, Geek,\" Maryanne said, kissing me on the cheek like she was sending me off to my first day of kindergarten. \n\n\"Didn't you pack me a lunch?\" I teased, scooting through the door just in time for her intended swat to miss my ass. \n\n\"I love you, Sis,\" I shouted just before I got to my car. \n\n\"Love you, too!\" she called. \n\nI arrived on campus about ten minutes early, found a parking place and was getting out of the car when I stopped and pulled out the condoms. I contemplated leaving them in the glove compartment. I actually put them in there and then pulled them back out and put them in my inside jacket pocket. It was only our second date.\n\n\"Are you Ron?\" the girl in the dorm security room asked. \"Here to see Katrina?\"\n\n\"Yes,\" I answered, wondering how she knew. \n\n\"She left word for me to just let you up,\" she smiled, sliding the sign in log towards me. I scribbled my name on the log along with Katrina's name and her room number and headed for the elevator. \n\n\"You look fabulous,\" I said when she opened the door wearing tight jeans and a pale yellow blouse. Her hair and make up were perfect and she looked like a model. She obviously had taken some time to get herself ready for our date.\n\n\"You're not so bad yourself,\" she answered, kissing me on the cheek. That's two kisses on the cheek in the last few minutes. \"Come on in,\" she said, sweeping her hand towards the small room she shared with another sophomore. \n\nThe room had enough space for two beds, two desks and a dresser with a TV on it. There was about a four by six area in the center of the room that wasn't taken up with furniture. \n\n\"Cozy,\" I said, looking around. \n\n\"Cramped you mean,\" she laughed. \"Sit down a minute. I want to ask you something.\" She pointed towards her bed rather than the chair so I sat on the edge of her bed and she sat next to me. \n\n\"What?\" I asked, as she put her arm around me and leaned closer.\n\n\"What if I told you,\" she said, tracing the outline of my face with her finger, \"that my roommate is out of town for the weekend?\" She pressed her finger to my lips to keep me from responding. \n\n\"And what if I also told you that when you kissed me last night,\" she brushed her moist lips across mine and then moved her mouth up to my ear, \"you made me very wet,\" she whispered. My cock responded instantly to her breathy announcement and my heart pounded in my chest. \n\n\"And what if I added that if you were to kiss me again like that I might make you do something about that wetness.\" Her hand was now caressing my chest and she was flicking her tongue in my ear. \n\n\"Here's the question,\" she said as she started unbuttoning the front of my shirt. \"Would you still want to go to a movie?\" she asked, sliding her hand inside my shirt and brushing her palm over my nipples. Movie? What movie? \n\nI turned towards her and removed her hand from my shirt. \"What if,\" I said, leaning her back on her bed and maneuvering my body over hers, \"I told you that I would need to verify the wetness for myself?\" I kissed her hard on the lips.\n\n\"And what if I needed to see it, touch it and taste it before I could decide?\" An anxious moan escaped from her lips before I covered them with mine. Fuck! My sister knew exactly what she was talking about.\n\nWe kissed and ground our bodies together, groping awkwardly through our clothing until we were both breathless. I leaned up, locked eyes with her as I began unbuttoning her blouse. When I spread the material apart, her mocha-colored breasts came into view as they spilled out of her lacy black bra. I lightly kissed each one before moving back to her lips as I reached for the clasp.\n\nThe front clasp on the bra came apart easily, exposing her breasts to my gaze. She blushed when I got my first look at them, probably because I just stared at those gorgeous looking mounds. They were larger than Maryanne's with wider areolas and thick nipples as dark as charcoal. \n\nShe smiled and neither of us said anything but there was intimacy in the silence. I smiled back as I lowered my mouth for a taste.\n\n\"Mmmm,\" Katrina moaned as I sucked her nipple into my mouth and flicked my tongue across the tip. Her taut nipple protruded at least half an inch as I sucked and nibbled it to full arousal. Katrina continued to moan her approval as she ran her fingers through my hair and pulled my face tightly against her breast. \n\nI switched to her other breast giving it the same treatment as I squeezed her soft flesh. With one hand massaging each breast, I moved my mouth back and forth between them, suckling and teasing until her moans indicated it was time to move on. \n\n\"Is there some wetness for me to taste?\" I whispered as I unsnapped her jeans.\n\n\"Uh-huh,\" she breathed, lifting her hips off the bed so I could pull her jeans down. She was wearing a thong that matched her bra and I could smell the sweet aroma of her arousal as I pulled her jeans off, tossing them on the floor. \n\nKatrina anxiously spread her legs but I took a minute and helped her completely remove her blouse and bra. Naked except for the scanty thong, her body took my breath away. \n\n\"You are so beautiful,\" I said quietly. \"Like a goddess,\" I added. \"A breathtaking goddess.\" \n\n\"You're still dressed,\" she answered. \n\n\"I'll get undressed in a minute,\" I answered, as I savored the vision of her. She was perfection personified. Her dark nipples and surrounding areolas stood out in stark contrast to her light brown breasts. Her skin darkened slightly around her navel and lightened again down her thighs. \n\n\"My wetness, remember?\" Katrina teased as I continued to stare at her dazzling flesh. \n\n\"Patience,\" I countered as I hooked my fingers in the sides of her thong and she raised up again so I could peel it down. Fuck! Her velvety, black pubic hair was trimmed into a small triangle above her splayed open pussy. Glistening with juice, she was definitely wet. \n\nPositioning myself between her legs I reminded myself of my sister's instructions: reconnoiter, dominate, retreat. I wanted to make Katrina cum harder than she thought possible so I began slowly licking all around her wet pussy, reconnoitering the area, as it were. Katrina was squirming on the bed, obviously anxious for my tongue to touch her sensitive opening. Not yet.\n\nAfter licking the crevices between her pelvis and her thighs, I teased her slick pussy lips open with my finger, lightly smearing her moisture all around her outer labia. \n\n\"Oh Ron!\" Katrina moaned, trying in vain to get my finger inside her steamy opening. Lifting her legs onto my shoulders I pushed her thighs up and licked all around her asshole with my tongue. Then, just like my sister taught me, I lightly flicked my tongue along her sensitive perineum. \n\n\"Ohmygod!\" Katrina gasped when my tongue hit her pussy and I plunged in for a taste, dominating her pussy with my mouth. Lapping at her delectable nectar, I couldn't help but make the comparison to my sister. Katrina had a subtle, more delicate flavor, not quite as overwhelming as Maryanne's or maybe it's just my imagination. \n\n\"That is so...\" Katrina dug her fingers into my hair and bucked her pussy against my face. I slid my tongue up to her clit, lightly flicking it before sucking it into my mouth. I was just about to retreat and start over when Katrina's whole body went rigid and she started shaking uncontrollably. \n\nI wasn't masochistic enough to stop then. I obviously misjudged how close she was so I just slurped the freely flowing juices as she rode out her orgasm. \n\nWhen she finally pushed my face away, she was gasping for breath. I laid my cheek against her spongy pubic hair and watched the rise and fall of her breasts. Softly rubbing my cheek against her triangular cushion, I traced my fingers around the curves of her luscious breasts. She smiled at me and I palmed her tit, compressing her hard nipple against my hand. \n\n\"Fuck, Ron!\" Katrina said when her breathing calmed. \n\n\"Not yet,\" I joked. \"I want to eat you some more first.\"\n\n\"More?\" she said in disbelief.\n\n\"We're just getting started,\" I assured her. Sliding my chin down across her wet labia, I slipped my tongue back into her pussy while I continued to fondle her breasts.\n\n\"Damn!\" she cried when I flicked her sensitive clit with my tongue. I knew I should reconnoiter, dominate and retreat but all I really wanted to do was eat her delicious pussy. I slurped, sucked, teased and nibbled away at her succulent opening until she was thrusting her hips off the bed and gasping my name. \n\n\"Oh Ron! Ron! Ron!\" she cried when I pushed two fingers inside her soggy pussy and finger fucked her while sucking on her swollen clit. Digging her fingers into my scalp, she humped my face like a wild woman, screaming loudly enough that I'm sure the entire third floor could hear us. \n\n\"I'm fucking cumming!\" she screamed just as her pussy clamped down on my fingers and her juices gushed out like she'd sprung a leak. Sliding my fingers out, I engulfed her pussy with my mouth, sucking on her lips and lapping up her steadily flowing cream. \n\n\"Ohmygod!\" she gasped, breathlessly as I continued to lap up her juices. \"Enough!\" she sighed, pushing my head away from her sensitive hole. \"That was unfuckingbelievable!\" \n\nI moved my body up over hers and kissed her hard on the lips. She sucked my pussy-soaked tongue into her mouth without giving it a second thought. My hard cock was poised to plunge into her smoldering pussy when I remembered my sister's parting gift. \n\n\"Just a second,\" I panted, breaking the kiss and smiling at her confusion. \"I um... brought something.\" I said, easing off of her and looking around for my coat. I found it draped over one of the desk chairs and grabbed the condom package from the pocket. ",
        "\"Just like a Boy Scout,\" she smiled. \"Always prepared.\" She raised her eyebrows at me questioningly. \n\n\"I didn't plan any of this,\" I said defensively. \"My sister is much smarter than I am. She gave me these just before I left today,\" I explained. \n\n\"Your sister?\" she laughed. \"I love her!\" Me too, but I'm not going to go into that. \"See, that's what I mean. You guys have each other's backs... ur... fronts,\" she giggled as I ripped the package open and attempted to roll one down my cock. Katrina saw me fumbling and swatted my hands away, expertly rolling it on in one motion. \n\n\"Where were we?\" she smiled, lying back and spreading her lovely thighs. \n\n\"I think I remember,\" I teased as I again positioned my body over hers and aligned my cock with her well-lubricated opening. Arching her back, she pushed up as I thrust forward, burying my cock to the balls in one smooth glide. \n\n\"Oh yeah!\" Katrina cried, gripping my ass cheeks with her hands. \"Now fuck me, Freshy,\" she said, pulling me tightly against her crotch. \"Fuck me hard!\" \n\nThis was my first time with a condom and I didn't particularly like it but once I got caught up in Katrina's frenetic rhythm, I started pummeling her pussy like a fucking jackhammer. Her pussy was much tighter than Maryanne's and created a fiery friction that surrounded my cock in a steamy cocoon. \n\n\"Oh yeah! Oh fuck! Oh Ron!\" Katrina kept moaning as I pounded her hot, horny pussy. My hard cock was getting ready for its long awaited release when I heard a noise behind us.\n\n\"Hey, Kat. Can I... oops!\" A beautiful brunette had opened the door and caught us doing the horizontal boogie on Katrina's bed. \"Sorry... um... lock your door, huh?\" she admonished us as she raised her eyebrows and smiled appreciatively at my bare ass. \"Nice,\" she said, reaching around to twist the lock on the doorknob. \"Carry on,\" she laughed as she closed the now locked door. \n\n\"Sorry,\" Katrina whispered as I tried to pick up the rhythm that we'd lost. My face was flush with embarrassment and excitement. I wasn't sure which was more prevalent. \n\n\"It's fine,\" I said as I continued to try and get the mood back.\n\n\"Let's roll over,\" Katrina said. \"My turn to be on top.\" There wasn't room on her narrow bed for us to actually roll over. I disengaged my cock as she rolled onto her side and I dropped onto my back beside her. She reached for my sheathed cock, stroking it lightly with her hand as she caressed my balls. My semi-hard pole sprang back to life.\n\n\"Let's try this again,\" she said, releasing my cock and letting it wave in the air as she crawled up next to me and swung her leg over. Her breasts bounced erotically as she slid her slick pussy down my shaft and wiggled her ass around to get it seated appropriately. \n\n\"Ride 'em cowgirl!\" she smiled as she sat up straight and rolled her hips in an undulating motion that sent shivers through my whole body. I grabbed her bountiful tits and squeezed the way I had seen Mark do to Maryanne's.\n\n\"Oh yeah! Squeeze those babies hard!\" Katrina encouraged me as she picked up her rhythm and we were fucking just as energetically as before we were interrupted. I loved watching her ride my cock, her tits bouncing and her black nipples fully erect. I slid one hand down through her spongy black triangle and found her clit with my thumb.\n\n\"Oh fuck yeah!\" Katrina cried, jouncing higher and slamming down harder on my about to burst cock. I pressed her clit harder, trying to keep my thumb in position but she was riding me like I was a bucking bronco. \n\nI was trying to hold back my release but the tension was mounting and I was about to explode any second. I grabbed her waist with both hands and slammed her down on my throbbing cock just like I do with my sister, detonating her orgasm and pushing me along with her.\n\n\"OhhhhhhhHHHHH! GOD!\" Katrina howled as her orgasm ignited, gushing fiery liquid all around my jerkily, spasming cock. Digging my fingers into her hips as her pussy tightened around me, I shook uncontrollably as my cock spewed a fountain full of cum, draining my balls and my energy.\n\n\"Oh Ron!\" Katrina breathed as she fell forward, her hard nipples pressing into my chest, her lips seeking mine. We tried for a passionate kiss but we were both breathing so hard we had to settle for a tight embrace.\n\n\"I just kept cumming and cumming,\" she whispered as she snuggled her face against my cheek. It felt so intimate that I was surprised by her question. \"Do all you white guys just come out of the womb knowing how to eat pussy?\" \n\n\"You've had a lot of white guys eat your pussy?\" I asked, trying to keep a level of humor in my voice.\n\n\"No! That's not...\" she looked at me more seriously. \"Just one other one but... it just surprised me.\" She stopped talking and stared at me more curiously than before. \"So... Mr. 'I don't date a lot' you didn't learn that from reading books, did you?\" She raised her eyebrows in a mock challenge. \n\n\"No...\" I answered, trying to think of what to tell her about my sexual experience. I needed to buy time. \"I'll tell you where I learned to do that after you tell me about your other white guy.\" I answer, squeezing her ass cheeks.\n\n\"Okay, but first...\" she said leaning up and letting my spent cock slide out of her saturated pussy. \"Maybe we should take care of that,\" she said, pointing to the condom bunched around my flaccid cock. \n\n\"No problem,\" I answered, looking around for what I should do with it. \n\n\"Let me,\" Katrina said as she grabbed a couple of tissues, wrapped them around the used condom and pulled it off my cock. \"I'll be right back,\" she said, slipping a bathrobe on and grabbing a washcloth from one of her dresser drawers. \n\nI laid there with my arms behind my head contemplating what to tell her about my experience, finally coming to the conclusion that I would make it mostly the truth just omitting the small detail that the person was my sister. \n\n\"Let me see that thing,\" Katrina teased when she came back into her dorm room. Locking the door behind her this time, she stepped over to the bed and started cleaning off my cock with the warm, wet washcloth. \n\n\"That feels nice,\" I murmured as she lifted my cock up by the head and wiped down the sides. \n\n\"Once I get it cleaned up, I'll make it feel even better,\" she smiled. \n\n\"I like the way you think,\" I answered as I slid my hand under her bathrobe and cupped her firm ass cheeks. \n\n\"I bet I can coax this guy into action again,\" she said, crawling up on the bed and feeding my cleaned up cock into her warm mouth. Watching my pale rod disappear between her dark lips made it jump to life even before her tongue started its amazing antics. Completely different than my sister's blowjobs but no less effective, Katrina knew her way around a cock. I was hard in no time and pushing my ass off the bed to get more of my solid shaft into her talented mouth. \n\n\"I really want to taste you,\" Katrina said, continuing to corkscrew her hand up and down my shaft as she took a breath. \"But I want to fuck you again, too. Do you have a preference?\" she asked. What a terrible choice. Let me see...\n\n\"My hypothesis is that we could do both,\" I smiled. \"Would you help me conduct the experiment to prove or disprove my theory,\" I asked in my most serious classroom voice.\n\n\"I would love to, Geek!\" she laughed just before sliding her moist lips over my cockhead and speeding up the pumping of her hand. Damn! She was good! \n\nAs I bucked my hips to drive more of my hard cock into Katrina's welcoming mouth, I wondered at my good fortune to have this ebony beauty sucking me off in her dorm room. We had gotten to know each other pretty well as lab partners and I still marveled at how comfortable I felt around her but I never expected anything like this.\n\nI was lost in my reverie when Katrina started rolling my balls around with her fingers and then did something magical with her tongue that made my cock explode.\n\n\"Oh Fuck!\" I screamed as my body stiffened and I jerkily shot her mouth full of hot cum. Sucking and swallowing, she continued teasing my balls and pumping my cock until she had milked me completely dry. \n\n\"Damn, Katrina,\" I panted as she wiped her mouth on the back of her hand and scooted up to lay her head on my chest. I wrapped my arm around her and held her tight as I caught my breath. \n\n\"Why don't you tell me about this other guy while I recover,\" I said as I reached down and squeezed her round ass cheek.\n\n\"The other white meat?\" she teased, plucking at my chest hair with her fingers.\n\n\"Hey!\" I cried. \"That hurts!\" We were laughing at her comment and my reaction to her tugging on my chest hair.\n\n\"Okay,\" she said, settling in for her story. \"First, you should know I was kind of a rebellious kid.\"\n\n\"That's a shocker,\" I retorted.\n\n\"Do you want to hear this or not?\" she laughed.\n\n\"Sorry, go ahead.\"\n\n\"My parents were going through a rough stage in their marriage and I guess I was kind of acting out my frustration.\" Her voice got softer. I just silently held her, waiting for her to continue. \n\n\"Anyway, they were wrapped up in their own problems while I was staying out late partying with anyone who wanted me.\" She looked at me to make sure I wasn't judging her. I just smiled for her to continue. \n\n\"I was drinking, smoking dope, fucking different guys and nearly flunked out of high school. At the time I wouldn't have even cared but thankfully my grandpa intervened. He took me to his house, enforced his rules and didn't send me home until my parents had worked through their problems.\"\n\n\"That's when you read his textbook?\" I asked.\n\n\"Yeah and a lot of other stuff that I didn't want to do at the time,\" she laughed.\n\n\"How does this fit in with your white friend?\" I asked, hopefully sounding interested instead of impatient.\n\n\"I'm getting to that!\" she admonished me. \"I wanted you to have the background so you'd understand what happened.\"\n\n\"Okay.\"\n\n\"When I got back home, my grandpa told my dad that he needed to enforce homework and curfew and find something to keep me busy during the summer. My dad got me a job as an intern in his lawyer's office and I did that for three summers. The white guy was one of the lawyers.\"\n\n\"How old was he?\" \n\n\"Nothing happened until the third year and he was in his thirties and I had just turned eighteen,\" she smiled mischievously. \"It was my job to deliver the mail and I went to his office every day. I wasn't na\u00efve. I knew he was checking me out.\"\n\n\"Who wouldn't?\" I offered.\n\n\"Thanks. It wasn't anything sleazy. It was actually kind of flattering. I was just this teenage high school graduate and he was a big shot corporate lawyer. Anyway, one day he asked me out to lunch and told me he did erotic photography on the side and did I know an eighteen year old black girl who would be willing to pose for him.\" Whoa! I wasn't expecting that!\n\n\"You're kidding?\" I asked incredulously.\n\n\"No!\" she said, lifting her head to look at me. \"It turns out it was all a ploy to get me into bed with him but I didn't know that at the time,\" she said, settling her cheek back on my chest. \"In fact, he sounded shocked when I said I would pose for him.\" Fuck! This just keeps getting better and better.\n\n\"Did you do it?\" I asked. \"Did you pose in the nude for him?\" \n\n\"It would be hard for him to eat my pussy if I wasn't nude, wouldn't it?\" she laughed again. \"Remember how this conversation got started?\" she teased.\n\n\"What happened to the pictures?\" I asked. \"Do you have copies?\"\n\n\"I'm telling you about my first time with a white guy and you want to see copies of the pictures? God, you're such a guy!\"\n\n\"What gave it away?\" I retorted.\n\n\"This,\" she said, wrapping her hand around my semi-recovered cock. Her story was definitely having a stimulating effect on me. \n\n\"Okay,\" I said, as she fondled my stiffening cock. \"Continue your story.\"\n\n\"I couldn't believe how turned on I got as he was taking my picture,\" she admitted. \"I never thought of myself as an exhibitionist but watching his obvious reaction,\" she squeezed my cock to make sure I knew what kind of reaction she was talking about. \"I got really wet.\" \n\nShe glanced at me and I nodded for her to continue. \n\n\"When he took close ups of my aroused pussy, he started touching me.\" She paused again. \"It was like he was trying to pose my vagina,\" she chortled. \"It was all so erotic and I wanted to cum so badly but he kept stopping to take pictures until I finally begged him to fuck me.\"\n\n\"Which is what he wanted all along,\" I said. It was manipulative but ingenious. Something I might have done if I had the opportunity. It's hard to hate a guy like that.\n\n\"Exactly, but I didn't know that yet.\" \n\n\"You had probably guessed, right?\" I asked as I rocked my fully recovered cock inside her fist.\n\n\"Well, yeah. It was getting clearer. The thing is that even though I had been fucking and sucking at parties, no guy had ever gone down on me before.\"\n\n\"You're kidding!\" I couldn't believe someone would pass up a scrumptious pussy like hers. \n\n\"That's what he said!\" she responded. \"And then he proceeded to show me what I had been missing... several times, just like you did. Don't worry, you were better,\" she said, stroking my ego along with my cock as she continued her story. \n\n\"Did I mention he was married and his wife was out of town?\" she asked, sitting up and maneuvering herself over my rigid shaft. \n\n\"No, did you know that beforehand?\" I asked as I watched her rub my cockhead against her slick pussy lips. \n\n\"Yes,\" she said, looking at me sheepishly. \"I didn't really care if he was married, just how he made me feel.\" She was about to slide down onto my hard cock but I stopped her. \n\n\"What about the condom?\" I asked. \n\n\"I'm on the pill, I haven't been with anyone for almost a year and you don't date, right?\" she asked, raising her eyebrows. \"We should be fine,\" she said as she slowly sunk her velvety pussy down around my hard cock. Right! Who was I to argue with that logic or how this felt?\n\n\"Mmm,\" she sighed as she settled onto my cock and sat up straight. \"I like it better like this,\" she said as she slowly undulated her hips, rocking my cock in and out of her hot, buttery cavern.\n\n\"Me too,\" I agreed. \"So, was it just that one time?\"\n\n\"No, we spent the whole weekend together. We were naked almost the entire time. He took more pictures and kept eating my pussy like he couldn't get enough.\" I could understand that, too.\n\n\"I left for school about three weeks later but we still saw each other off and on for about six months,\" she said, picking up her rhythm as I palmed her luscious tits. \"Then he got the bright idea that he wanted to include his wife in our little tete-a-tete.\"\n\n\"A threesome?\" I asked, surprisingly pleased by the implication. Holy fuck! A vision of Katrina, Maryanne and I in bed together just flashed through my brain. \n\n\"Yeah,\" she said, rocking faster as I pinched and teased her thick nipples. \n\n\"And... um... you were okay with that?\" I asked anxiously but the conversation was stymied while she was slamming her hot pussy down on my overly aroused cock. Katrina just shrugged and rode me harder, both of us panting for breath as we neared the blissful summit we were chasing.\n\n\"Oh fuck! Oh yeah!\" I cried, gripping Katrina's hips and smashing her down on my pulsating cock. We both hit pay dirt at the same time. Her pussy contracted around my cock just as I shot off deep inside of her. Closing her eyes, she threw her head back as her whole body shuddered with pleasure. \n\n\"Oh, Ron!\" she sighed, collapsing on my chest as her gushing pussy relaxed its grip on my spent cock. Our lips met in a long, passionate kiss with our tongues dancing around each other. I couldn't get the idea of a threesome out of my mind. When we finally broke the kiss I had to ask. \n\n\"So what happened?\" I asked, squeezing her ass cheeks while my cock was still buried in her soggy pussy. \n\n\"What do you think just happened?\" she asked. \n\n\"No, I mean with the threesome?\" I laughed.\n\n\"Oh, that,\" she smiled. \"Nothing. He completely misread his wife's level of adventurousness. She totally freaked out, insisted he stop seeing me and that's the end of the other white guy story.\"\n\n\"How long ago was that?\" I asked.\n\n\"About a year,\" she said. \"Yes, that was the last guy I was with. Now it's your turn to tell me how you got so talented with your tongue.\" Ahem, this better be good. \n\n\"I'm glad you liked it,\" I said, kissing her forehead, \"because I intend to do it a lot more.\"\n\n\"Mmmm,\" she cooed. \"You'll get no argument from me.\"\n\n\"There was this woman who lived in our neighborhood,\" I began my tale determined to include just enough truth to make sure I didn't forget what I told her. \"I used to do odd jobs for her around the house.\"\n\n\"Like eating her pussy?\" Katrina teased.\n\n\"Not at first,\" I smiled as I slapped her bare ass cheek. \n\n\"Ouch!\" she laughed. \"Continue, please.\"\n\n\"As you know, I'm a geek,\" I explained. \"I was working at her house one day while she was out running errands.\"\n\n\"You must have known her pretty well for her to leave you alone in her house,\" Katrina interrupted.\n\n\"Our families are very close,\" I assured her. If she only knew how close. \"Anyway, I like snooping in people's computers. I'm good at guessing passwords and stuff like that.\"\n\n\"Good to know,\" she smiled as she squeezed her pussy muscles around my limp cock. Her body was warm and soft, and since it was stretched out on top of me, I found it hard to concentrate on my story. \n\n\"This one afternoon I was poking around in her computer, you know, seeing what websites she visited and stuff like that when I came across some nude pictures of her.\"\n\n\"Seriously?\" she asked, rhetorically. \"Wow!\"\n\n\"I had always thought she was attractive but when I saw those pictures I thought I had struck gold.\" Katrina just laughed and kissed my chest. \"Naturally, I assumed her husband had taken them and that he was the one who had stored them on the computer.\"\n\n\"What did you do?\" \n\n\"I guess what any red-blooded guy would do,\" I answered cryptically, wondering if this whole story was a good idea. \n\n\"Right there in her house?\" Katrina asked, obviously understanding my message. \n\n\"I thought she would be gone long enough and the pictures were so erotic,\" I said defensively, recalling the day my sister caught me masturbating at her computer.\n\n\"She caught you?\" she asked. This girl is always one step ahead of me. \n\n\"Yeah,\" I answered. \"Pants around my ankles, cum shooting out of my cock and a full screen shot of her nude body.\" Katrina laughed so hard that my cock slipped out of her pussy and she rolled onto her side. \n\n\"Ohmygod! I can picture that!\" she said, laughing so hard that tears were running down her cheeks. \"Sorry! Sorry! Sorry!\" she said, waving her hands in front of her face before guffawing again in another fit of laughter.\n\n\"Sorry,\" she said, finally controlling herself. \"What happened? I can hardly wait to find out how this turned into her teaching you to eat her pussy.\"\n\n\"She was shocked to say the least,\" I continued, bemused by Katrina's reaction. \"I was scared to death she was going to tell my parents. That would have been unbearable.\"\n\n\"I can imagine,\" Katrina said, more seriously now. \"But she obviously didn't?\"\n\n\"No, she asked me how I got into her computer and admonished me for violating her trust but I could sense underneath it all she was kind of flattered that I got off to a nude picture of her.\"\n\n\"I get that,\" Katrina said. \"I sometimes think about Chris masturbating to the photos he's taken of me and I find it oddly arousing.\" Good to know.\n\n\"As we talked, I admitted to being a virgin and not being very good with girls.\"\n\n\"And she offered to help you out?\" \n\n\"Exactly, in fact, she was very excited about being my first and promised to teach me how to satisfy a woman.\"",
        "\"I can vouch for her doing that last part,\" Katrina smiled. \"When was this?\"\n\n\"Last summer,\" I answered. \"I went over to her house almost every day. It was the best summer I ever had.\"\n\n\"I bet,\" she laughed.\n\n\"Did you see her when you were home for winter break?\" Katrina asked.\n\n\"Yeah, but she told me to find someone my own age,\" I answered honestly. \"So I did.\"\n\n\"You did not!\" she said in mock chastisement. \"I found you, remember.\"\n\n\"Either way, here we are and we're both benefiting from her tutelage.\" I stopped talking, surprised at how close to the truth my story was. \n\n\"Her husband never found out?\" Katrina asked, looking at me curiously when I didn't answer right away. \"What?\"\n\n\"I later found out that he knew from the beginning,\" I answered. \"He's one of those guys who gets off on his wife being the object of someone else's lust.\" \n\n\"You're making this up!\" she cried, sitting up and locking eyes with me. I guess she figured she could tell if I was lying. Of course, I wasn't. Not about this.\n\n\"Don't freak out but when I went home over break, he wanted to watch me make love to his wife.\" Katrina was staring at me with her mouth open. \n\n\"Did you do it?\" she asked. \"Did you let him watch?\" It was my turn to shrug.\n\n\"Yeah... and... um... she... uh... sucked him off while I fucked her. It was kind of weird.\"\n\n\"Kind of weird? That's a lot weird!\" she laughed.\n\n\"Not that different than your guy wanting a threesome with is wife, is it?\" I asked. Katrina sat back on her heels with an expression that said she hadn't even considered that. \n\n\"I guess not, now that you mention it,\" she smiled. \"Wow! What are the chances that we would have such similar experiences? That's what's weird!\" I couldn't agree more.\n\n\"Let's take a shower,\" she said, jumping off the bed. \"I want you to go down on me again but I'm all full of cum,\" she laughed, reaching out for my hand. \n\n\"Isn't the shower down the hall?\" I asked, wondering about the other residents of her dorm.\n\n\"It's fine,\" she said. \"By now everyone knows you're here anyway,\" she laughed again. \"They're probably so shocked that I have a man in my room that they've gathered around outside the door to get a glimpse of you,\" she said, matter-of-factly.\n\n\"Great,\" I sighed. \n\n\"I don't mind showing you off, if you're not embarrassed to be seen with me,\" she teased. \n\n\"Are you kidding?\" I asked. \"They're going to wonder how a geek like me ever got together with a goddess like you?\" \n\n\"I'll tell them you're a silver-tongued devil,\" she laughed uproariously. \n\nThe shower was designed for one person but that just made it cozier when we squeezed into it facing each other. Her generous breasts brushed my chest and my recovering cock poked her abdomen as I leaned down to kiss her. She reached between us, adjusting my cock so it nestled against her pussy mound rather than poke into her. \n\n\"This is nice,\" she murmured as she lathered soap on her hands and ran then down my back. Pulling me tightly against her, she squeezed my ass cheeks and ground her pussy against my surprisingly hard cock. \n\n\"I could get used to it too,\" I answered, lathering soap all over her luscious breasts. \n\n\"Mmmm, that feels nice,\" she said as I gently kneaded her breasts and teased her taut nipples. \n\n\"You feel nice,\" I acknowledged. There wasn't room to do anything in the shower, which made our mutual fondling all the more arousing. I glided one hand down her body and thoroughly lathered her pussy hair while my other hand continued caressing her breast. \n\nI was hard as a rock when she started soaping my cock and balls. Returning the favor, I slid my hand between her legs. \n\n\"Mmmm,\" she murmured, bending her knees and spreading her thighs to give me complete access to her cum filled pussy. Taking my time, I soaped all around her outer labia before sliding my fingers inside her slick opening and scrupulously washed away the remnants of our lovemaking. \n\n\"We're done washing,\" Katrina panted. \"I need you back in my bed!\" No argument from me. We dried off and headed back to her room with just the towels wrapped around us. \n\n\"We need a larger data sample to see if it is consistent with the first experiment,\" she teased as she crawled up on the bed and spread her legs apart. \"The hypothesis is that your tongue will evoke the same reaction as it did the first time.\" She was smiling from ear to ear, eagerly awaiting the touch of my tongue as I settled in between her legs. \n\n\"I'm willing to give it a try,\" I shrugged. \"I make no promises,\" I said as I lowered my mouth to her overheated pussy. \n\n\"Ooo yeah!\" she cooed as I flattened my tongue and took a long lick from just below her slit to the top of it without penetrating her. My tongue easily glided over her moist pussy lips and I teased her mercilessly while she begged me to push it inside. \n\n\"Come on!\" she pleaded when I again circled my tongue around her outer labia. \n\n\"Patience,\" I whispered. \"You want this to be as good as the last time, right?\"\n\n\"Yes... but I'm so ready,\" she turned her mouth into a fake pout that nearly had me laughing out loud. To appease her, I slid a finger into her slick opening while I licked and sucked all around her steamy hole. Katrina curled her fingers through my hair and rocked her pussy against my face. I slipped in a second finger just as I clamped my lips around her engorged clit, flicking my tongue across it as I sucked it into my mouth. \n\n\"Holy fuck!\" Katrina screamed as a quick climax shook her body and she pulled harder on my hair. Pistoning my fingers in and out of her hot pussy, I lightly nibbled on her clit while she frantically bucked her hips off the bed. \n\n\"Oh God! Oh Ron! Oh Fuck!\" Katrina screamed as her pussy muscles clamped down on my fingers and she bucked feverishly against my face. Flicking my tongue across her clit, I pushed her over the edge. \n\n\"OHHHH! FUUUCK!\" She squeezed her thighs tightly around my head, cutting off my ventilation as her body trembled with pleasure. \n\n\"Oh Ron,\" she moaned when I pulled my fingers from her pulsating pussy, replacing them with my tongue. I lapped up her sweet nectar as she gasped for breath.\n\n\"You weren't kidding about the throes of passion, were you?\" she smiled\n\n\"So you think the experiment was a success?\" I asked as I kissed my way up her beautiful, ebony-hued body, pausing at her tits to tease her taut, dark nipples.\n\n\"Hmmm,\" she said, considering the question. \"I still don't think we have enough data for a solid conclusion,\" she smiled. \"We might have to set up a regimen of repetitive experiments before we can be sure.\"\n\n\"What frequency are you thinking?\" I asked as I moved my mouth from one breast to the other. \n\n\"Oh, at least daily!\" she exclaimed. \"Probably twice a day!\" I kissed her neck just under her collarbone and positioned my fully recovered cock against the entrance to her fiery tunnel. \n\n\"I like that idea,\" I said, guiding my shaft into her welcoming hole. \n\n\"Fuck yes!\" Katrina cried, wrapping her legs around me and pressing down on my ass with her heels. \"Fuck me!\" she moaned as I started a hard, steady rhythm. \n\n\"Harder!\" she shouted just before I pushed my pussy-soaked tongue into her mouth. \n\nI pounded my cock into her snug pussy, rocking the headboard against the wall with each thrust. She seemed oblivious to the noise as she dug her nails into my back and bucked her hips up to meet every stroke. \n\nBreaking the kiss, I grabbed the back of her knees and pulled her legs up, pushing her ankles down almost to her shoulders. With her nearly bent in half, I pummeled her horny pussy like a jackhammer, driving us both to the crest of the summit. \n\n\"Oh God! I'm fucking cumming again!\" Katrina cried as I slammed into her several more times before my cock erupted again. Clawing my back, she tried to free her legs as her orgasm roared through her like a freight train. \n\nI released her legs and let her straighten out her body. Settling down down on her soft flesh, I pressed my mouth to hers. The passion of the kiss was disrupted by the occasional gasp for breath but neither of us wanted to break the spell. \n\nI must have dozed off for a while. When I opened my eyes, Katrina was lying beside me with her head propped up on her hand.\n\n\"Wore you out, huh?\" she smiled as she leaned over and gave me a kiss on the lips.\n\n\"Sorry...\" I said, rubbing my eyes. \n\n\"Don't be. I just woke up, too,\" she confessed. \"I was just enjoying watching you sleep.\"\n\n\"Kind of like watching grass grow?\" I retorted.\n\n\"Not at all,\" she smiled dreamily. \"I think I could get used to it. Are you staying overnight?\"\n\n\"I think I should go home and come back tomorrow in some clean clothes, at least clean underwear,\" I laughed.\n\n\"You wouldn't really need any clothes if you just stayed.\" Damn that was tempting but I was also anxious to tell my sister about what had happened. \n\n\"You've pretty much used me up for today anyway and I promise I'll be back first thing in the morning.\"\n\n\"I go to church on Sundays,\" Katrina said. \"Want to go with me?\" she asked. Fuck! I'm not very religious and hadn't been inside a church in years. \n\n\"Sure,\" I answered. \"What time should I pick you up?\" \n\n\"Church starts at 10,\" she said. \"I go to that First Baptist church right down the street.\"\n\n\"I'll be here by 9:30,\" I told her as I pulled her on top of me and caressed her firm ass cheeks. She lowered her lips to mine and our tongues were dancing with unexpected passion when there was a knock on the door. \n\n\"Katrina,\" a woman's voice said. \"Can I come in?\"\n\n\"Fuck! That's my roommate,\" she said, sliding off of me and grabbing her clothes. \"Just a second,\" she yelled at the door as she threw me my underwear and jeans. \"She wasn't supposed to be back until tomorrow.\" We scurried around like a couple in a predictable sitcom, trying to find all of our clothing while we sensed the impatience on the other side of the door. \n\n\"Sorry,\" Katrina said, out of breath but not for the reason her roommate probably suspected. The tall blond barreled into the room, throwing her overnight bag on her bed while rambling about why she was back early. \n\n\"I'm the one who's sorry to interrupt but I had to come back for a study group that I had forgotten about. I've already missed two meetings and I...\" she stopped suddenly and stretched her hand out to me. \"I'm Erin,\" she said as I shook her hand.\n\n\"This is Ron,\" Katrina jumped in for the belated introduction.\n\n\"Right,\" she said, smiling at me. \"You're the lab partner.\" I nodded while she looked at me appraisingly and then turned to Katrina and winked. \"Not bad for a geeky freshman,\" she said. \"You two been studying in here all weekend?\" she laughed.\n\n\"Yeah, but we can't now,\" Katrina countered. \"We wouldn't want to disturb you.\"\n\n\"Hey, just act like I'm not here,\" she said, turning to unpack her bag. Katrina rolled her eyes and shrugged apologetically. I just smiled. \n\n\"I'll see you in the morning,\" I said, pulling her in for a final kiss. \"Nice meeting you, Erin,\" I called over my shoulder as I opened the door. \n\n\"Likewise,\" she smiled, somewhat seductively. Hmmm.\n\n\"You're going to church!\" Maryanne laughed. \"Brother, you've got it bad if she's got you going to church with her.\" I just smiled and shrugged my shoulders.\n\n\"Can't be any worse than being dragged to a chick flick and you wouldn't think any less of me if I did that,\" I answered as I got the video camera ready for another shoot. \n\n\"I don't think any less of you for going to church either,\" my sister said as she stripped off her clothing, exposing her sexy body for me. \"You used to get hard as soon as I took my bra off,\" she teased, looking at my flaccid cock.\n\n\"You are still the girl of my dreams, Sis,\" I answered honestly. \"But I think I'm pretty used up for today.\"\n\n\"I'm just teasing you, sort of,\" she said with an exaggerated pout. \"I guess we'll have to do a masturbation video today,\" she smiled, reaching for the nightstand drawer and her small selection of toys.\n\nMaryanne performed impressively for the camera, striking breathtaking poses with a variety of dildos inserted into her splayed open pussy. By the time she slammed one home for her orgasm she was churning up so much juice it was dripping down her ass cheeks. Panting like she'd run a marathon, she bucked her hips off the bed and even had my overused cock responding to her machinations. Mark was going to love this one!\n\nWhile I edited the video, I told Maryanne all about my date with Katrina, including her one other experience with a white guy. \n\n\"Have you seen the pictures?\" Maryanne asked, as I zoomed in on a close up of her quivering pussy. \n\n\"Not yet, but she promised to show them to me,\" I answered. \n\n\"And she was really going along with the threesome if this guy's wife had agreed?\" she asked quietly, not like a question but like she was contemplating the idea.\n\n\"Yeah, she said she would have done it,\" I answered excitedly, looking over my shoulder at my sister. We were both still naked and this time my cock did respond to the sight of her. Maybe I could recover faster than I thought. \"Are you thinking what I think you're thinking?\" I asked.\n\n\"Mark would love that video, wouldn't he?\" Maryanne answered. \"I'm just not sure we should be sharing our incestuous activities with anyone.\" I agreed and we left it at that.\n\nFor the first time in a long time, Maryanne and I slept together without having sex. Of course, I was out as soon as my head hit the pillow and woke up with just enough time to shower before I had to pick up Katrina.\n\n\"I'm kind of feeling left out,\" my sister pouted as I jumped out of bed. \"Back to my dildos, I guess,\" she said with an overly dramatic sigh. \n\n\"Tomorrow for sure, Sis,\" I called over my shoulder as I headed for the bathroom. Not sure what to wear, I settled on a pair of khakis and a dress shirt. I skipped the tie but Maryanne insisted I wear one of Mark's blazers. \n\nKatrina was waiting outside her dorm, wearing a dress that was stylish enough for church yet hugged her shapely form in a way that left little to the imagination. I marveled at how it could be both erotic and classy at the same time. Tastefully short but not extravagantly so while displaying a fashionable amount of her enticing cleavage. \n\n\"Hi,\" she said, as she got in the car and leaned over for a kiss. \"You look nice.\"\n\n\"You look amazing!\" I responded, my eyes on her shapely thighs as her dress rode up when she sat down. \n\n\"Thank you,\" she said, smoothing her dress self-consciously. \n\nIt only took us about ten minutes to drive to the church. Katrina introduced me to a few people as we made our way into the sanctuary. I agreed when she suggested a pew towards the back where the fewest people were sitting. We stood when we were supposed to, sang along from the hymnals and when the preacher started his sermon, she reached over and took my hand. \n\nAt least I thought she was taking my hand. She slid her hand under mine in my lap and while it looked like we were just holding hands, her pinking and ring finger were lightly rubbing my cock through my pants. \n\n\"Do you know what I think about when he talks about sin and temptation?\" she whispered in my ear as my cock responded to her feather-light strokes. Fuck! I couldn't believe she was doing this in church. I looked around to see if anyone was noticing. \n\n\"You're getting hard,\" she whispered excitedly. Duh! Thankfully, everyone else appeared to be enthralled with the sermon. \"Do you know the only reason my panties aren't soaking wet?\" she asked, her fingers moving more rapidly as my cock swelled inside the khaki material. I looked at her and shook my head.\n\n\"Because I'm not wearing any,\" she smiled as she spread her legs to make her dress ride up higher on her thighs. Why the fuck were we in church if this is what she wanted to do? We could have been naked in her bed. I'm sure there was a way to get rid of her roommate for a while. Or we could have gone to my house. Maryanne would have given us some privacy.\n\nMy thoughts were interrupted when the sermon ended and everyone stood to sing the closing hymn. Katrina grabbed the hymnal and we stood with me hoping my hard-on wasn't as noticeable as it felt. \n\nKatrina thanked the preacher as we filed out. \"I enjoyed your sermon, it really gave me something to think about,\" she said. I almost laughed but covered it with a fake cough before shaking the minister's hand and pulling Katrina to the car. \n\n\"Did you like the sermon,\" she asked with practiced innocence as I started the car. \n\n\"I liked what you were doing during the sermon,\" I answered. \"But wasn't that kind of sacrilegious?\" I laughed.\n\n\"Why?\" she asked, still playing innocent. \"God wants us to love one another,\" she said matter-of-factly. \n\n\"I think that's an awesome sentiment, where shall we do it?\" I asked expecting her to chose between her dorm and Maryanne's house. \n\n\"Take the long way back to my dorm,\" she said as she reached over and undid my pants. \n\n\"What are you doing?\" I asked as she pulled my cock through the fly in my jockey shorts. Pulling out of the church, I turned right instead of left, figuring I would circle around the college and triple the length of our drive. \n\n\"I can't have you showing this off to every girl in my dorm,\" she said, getting up on her knees and bending her head towards my exposed cock. Fuck! I had heard about this but didn't ever expect to be experiencing it. Her warm lips wrapped around my cockhead and I had trouble keeping the car on the road. \n\nShe was bobbing her head and I wanted to close my eyes but instead they were darting left and right to see if anyone could tell what was happening. \n\n\"Oh fuck!\" I moaned as she slid her lips down the length of my shaft and the car slowed to about 15 miles an hour. \n\n\"I can't do this and drive,\" I panted. \n\n\"Pull over then,\" Katrina said, raising her head up to see over the steering wheel. \"There!\" she pointed. \"Stop on the shoulder under the overpass.\" \n\nAs soon as I stopped the car, she reached over me and pulled the lever to recline my seat, giving her easier access to my throbbing cock. \"Much better,\" she smiled as she wrapped her hand around my rigid pole and fed it back into her talented mouth. \n\n\"God! I am so wet!\" she cried, taking a breath from her enthusiastic blowjob. She had one hand under her dress and I watched as she brought it out and put her fingers to my lips. Her aroma hit me first and then the taste of her arousal. My cock ached to be back in her mouth.\n\nI didn't have to wait long; she attacked me with a renewed vigor that, coupled with the taste of her pussy on my lips, brought me off in less than a minute. \"Oh fuuuuck!\" I exclaimed as I arched my back and jerkily filled her mouth with my hot jism. Damn! I wonder why Maryanne never taught me this.\n\n\"Let's go back to my dorm so you can reciprocate!\" Katrina said, as I zipped up my pants and put my seat up. \n\n\"Fuck!\" I said, as I caught movement in my review mirror. Blue lights were flashing and a police officer was approaching the car. I glanced at Katrina as I lowered my window.\n\n\"You folks have car trouble?\" the officer asked. \n\n\"No sir,\" I answered, searching my brain for a reasonable response and landing on one just in time. \"I had a cramp in my leg and I figured I had better pull over and try to rub it out.\" \n\n\"Good idea,\" he smiled shrewdly. \"Did you get it all rubbed out?\" he asked, looking at Katrina's exposed thighs and ample cleavage. \n\n\"Yes sir,\" I said. \"I think we can be on our way, now.\" He didn't appear to be listening to me. He was looking at Katrina as he swiped his fingers across his chin. When I turned towards her, she was looking at him blankly but I noticed she had a thin strand of cum trailing down from the corner of her mouth. \n\n\"We'll be fine now,\" I said, reaching over as casually as I could and wiping my thumb across her chin. ",
        "\"I'm sure you will be,\" he said with a lascivious sneer. \"Maybe you should let your girlfriend drive in case it happens again.\"\n\n\"That's a great idea!\" Katrina said, opening her door and swinging her legs out. The officer stepped back and opened my door so I could get out as well. There was nothing to do but walk around the car and get in the passenger's side. \n\nI watched the officer hold the door for Katrina, his eyes never leaving her thighs as she scooted into the car. Her dress rode up, exposing a lot of her mocha colored flesh and I wondered about her lack of panties when she swung her legs into position under the steering wheel. His eyes got as big as his smile before he pushed the door close. \n\n\"You kids be careful where you rub out your leg cramps from now on,\" he said, tipping his hat before he walked back to his cruiser. As soon as he got in his car, Katrina burst out laughing and I couldn't help but join her. \n\n\"God!\" she said. \"He knew exactly what we had been doing.\"\n\n\"The string of cum on your chin kind of solidified it,\" I laughed. \n\n\"We were almost caught in the act!\" she said, putting the car in gear and checking over her shoulder. \"God! I am so wet!\" The way she positioned her legs when she drove pushed the hem of her dress almost to the top of her thighs. \n\n\"Let me see?\" I said, sliding my hand up her bare thigh until I could feel the heat emanating from her aroused pussy.\n\n\"Don't you dare!\" she said, trying to close her thighs but my hand was already on its target. \n\n\"Let's see how you like it,\" I said, as my finger easily slid into her slick opening. \n\n\"Oh fuck! Ron, please don't! Fuck!\" I wiggled my finger around inside her pussy as she tightened her grip on the steering wheel and tried to concentrate on her driving. \n\n\"Not easy to drive like that, is it?\" I teased, pulling my finger out and sitting back. \n\n\"Ohhh,\" she said as I licked the pussy juice off of my wet finger. \n\n\"My roommate is studying in our room,\" she said, glancing at me. \"But I can get rid of her for an hour or so.\" Her smile was absolutely radiant.\n\n\"Lunch time!\" Katrina said to her roommate as she rushed into her dorm room. \"We need the room for a little bit,\" she smiled. Katrina was pulling her dress over her head before Erin even had a chance to react. \n\nStanding in the doorway, my cock reacted to the sight of Katrina's shapely, dark ass cheeks as she hung the dress over the back of her chair. Erin slowly gathered together her papers and swung her legs off her bed. She sat there staring at me.\n\n\"You going to stay dressed?\" she asked.\n\n\"Not hardly,\" I said, unbuttoning my shirt. \"Have a nice lunch,\" I added, hoping she would get a move on. She didn't.\n\n\"I've seen Kat naked,\" she said, nodding towards her roommate who was making herself comfortable on her bed. \"She doesn't do anything for me.\"\n\n\"Come on Erin!\" Katrina pleaded. \"You've got your own boyfriend.\"\n\n\"Yeah but he doesn't come back until next weekend,\" Erin retorted. Shaking her head, she stood up and started towards the door. \n\n\"I just wanted a peak at the package,\" she said. \"I wasn't trying to steal your guy!\" She smiled as she glanced at my crotch. \"Looks good though.\" My face must have been fifty shades of red because she laughed as she brushed past me. \n\n\"Erin!\" Katrina cried.\n\n\"I'm going. I'm going,\" she said, standing in the doorway. \"You two kids have fun.\" She pulled the door closed behind her and I locked it. \n\n\"Sorry about that,\" Katrina said, chuckling as she spread her legs invitingly. I tore off my clothes and Erin was forgotten as I buried my face in her fur-lined pussy. \n\n\"Oh yeah!\" she moaned as I ate her through two hefty orgasms, flooding her pussy with her delectable juices. By the time I drove my hard cock home, her saturated opening welcomed me with no resistance. \n\n\"Fuck! Fuck! FUCK,\" she cried loudly enough for the whole floor to hear as I pummeled her pussy through two more orgasms, the second one coming right on top of my own release. I had held back as long as I could, finally slamming into her with a climax-producing thrust that sent us both into trembling fits of ecstasy. \n\nMy arms gave out and I collapsed onto her soft breasts, our breathing coming in quick gulps. I kissed her and just stared into her eyes, soaking up her radiance. \n\n\"You're a keeper,\" she smiled, squeezing her pussy muscles around my spent cock. \"That lady sure taught you right! I should thank her,\" she teased. Before I could answer there was a knock on the door. \n\n\"Hey, I forgot some notes,\" Erin's voice came through the door. \n\n\"Come on in,\" Katrina yelled. \"We're done.\" What? I started to get up and Katrina grabbed my ass cheeks to keep me inside her. \"Don't move,\" she pleaded. Okaaay, I wasn't expecting this. I heard Erin's key in the lock as I settled back down on Katrina's warm flesh. \n\n\"Sorry,\" Erin said, sounding anything but. \"I thought I had all of my notes,\" I kept my face buried in Katrina's neck, not wanting to know whether Erin was looking at us or keeping her eyes averted. \n\n\"It's okay,\" Katrina said, casually. \"The good stuff is over.\" She again squeezed her pussy around my cock.\n\n\"I heard,\" Erin laughed. \"The whole dorm probably heard.\"\n\n\"Yeah, well. Four big orgasms will do that,\" Katrina said as if she was discussing how many lumps of sugar she put in her coffee. \n\n\"Four? Nice,\" Erin said, complimenting her roommate. \"Nice ass, too\" she added as she opened the door.\n\n\"I know,\" Katrina answered, squeezing my ass cheeks with her hands. \"Lock the door, please.\" She called to Erin.\n\n\"I will. Another hour or so?\" Erin asked.\n\n\"That would be nice,\" Katrina answered, her hands lightly caressing my back. \n\n\"You got it. Have fun!\" The door closed and Katrina busted out laughing. \n\n\"That was weird!\" I said, lifting my head to look into her eyes. \n\n\"Sorry,\" Katrina said. \"You didn't really mind me showing you off a bit did you?\" she asked. \"I mean, she only saw your ass. Everything else was nicely tucked away where she couldn't see it.\"\n\n\"It was just weird,\" I said again. \"I wasn't expecting it.\"\n\n\"Admit it, though,\" she said. \"It turned you on a bit to know she could see you naked, right?\" I hadn't thought about that but she was right. \"You should have seen her eyes devouring you!\"\n\n\"Really?\" I asked, my cock stiffening at the idea.\n\n\"See, you do find it arousing,\" Katrina said. \"Like when I posed for those pictures with Chris.\" Fuck! I had forgotten the pictures. \n\n\"The ones you promised to show me?\" I asked.\n\n\"Do you really want to see them?\" \n\n\"Absolutely.\" \n\n\"Get my laptop,\" she said, playfully pushing me off of her. I grabbed her laptop and joined her on the bed. She was sitting up with her back against the wall. I sat next to her. Waking up her laptop, she selected a folder and keyed a password. \n\n\"Password protected,\" I said. \"Good idea.\"\n\n\"Yeah, well. I haven't shown them to anyone,\" she said, pausing before clicking on the first picture. \n\n\"It's okay if you don't want me to see them,\" I said trying to hide my disappointment. \n\n\"No! I want you to see them,\" she smiled. \"I just don't want you thinking, you know,\" she paused. \"With Erin coming in like that, and these nude pictures, I don't want you thinking...\"\n\n\"No way!\" I put my arm around her. \"There is no way I could think that way about you. Believe me, I understand this side of you better than you think.\" She looked at me quizzically for a minute and then nodded, clicking on the first picture.\n\nMy jaw dropped open when the screen filled with a picture of Katrina dressed in a schoolgirl outfit with the back of her skirt flipped up showing her white panty-clad ass. I clicked through the next couple of pictures, aware that Katrina seemed to be holding her breath as I watched her disrobe for the camera. I smiled at her embarrassment and reassured her with a quick kiss. \n\n\"These pictures are really good,\" I told her, not to mention how erotic it was looking at them while we're both already naked. My cock reacted to some of the poses, especially when she had her hand inside her panties like she was playing with her pussy. \n\n\"It looks like you're actually masturbating,\" I said, raising an eyebrow as she blushed. \n\n\"Chris said it wasn't looking realistic enough so he asked me to put my finger inside,\" she shrugged. \"But I didn't actually masturbate.\"\n\n\"Would you have?\" I asked, clicking to some shots of her in a tight black skirt and a bright gold tank top. These were just as sexy and they mirrored the school-girl poses. \n\n\"I guess,\" she shrugged again. \n\nBy the time I got to shots of full on nudity, my arousal was obvious. Katrina encircled my hard-on with her hand, gently massaging it as I looked at some pretty extreme close-ups. \n\n\"Damn!\" I exclaimed. \"This one looks like you either just came or are about to.\" \n\n\"That one and the next are just before and just after,\" she said, still stroking my cock. \"I was so mad at him for stopping,\" she laughed. \"He was licking me and it was the first time any one had done that and... well, you know how much I like it,\" she smiled. \"And he stopped to take freaking pictures! I could have killed him!\"\n\n\"The pictures are amazing!\" I said, putting the computer on her desk and leaning back so she could have better access to my cock. \n\n\"You recovered fast,\" she teased as she slipped her lips over the end of my shaft.\n\n\"Those were very erotic pictures,\" I countered, arching my back to get more of my cock into her warm mouth. \"Would you let me video you sometime?\" I asked. Katrina paused the blowjob and looked deeply into my eyes.\n\n\"We'll see,\" she said, lowering her mouth back to my cock. Yes! I could do an amazing video of her masturbating. The intense image that conjured up coupled with Katrina's very skillful mouth had me shooting another load of cum well before Erin came back. \n\nThe three of us went to dinner. Erin was tall, blond and beautiful with a body that would turn heads even on a campus full of shapely coeds. She was apologetic about her rude behavior and assured me that she wasn't usually like that. We had a nice dinner and I found out Erin was a history major on a tennis scholarship. \n\nErin suggested that I spend the night and promised she'd be out late and not disturb us. Katrina's pleading eyes sealed the deal. I called my sister before the two of us went back to the dorm while Erin disappeared to parts unknown.\n\nKatrina and I banged the headboard against the wall once more before falling asleep. We slept spooned together with my back against the wall and my spent cock nestled between her ass cheeks. \n\nIt seemed like I had slept for hours when a noise woke me and I saw Erin tiptoe into the room. There was just enough moonlight snaking through the blinds for me to see her every movement. \n\nAs I watched her undress, I reflected on how much my life had changed from the time my sister caught me masturbating. Not just the sex but also the confidence she had given me. A year ago I would never have been able to talk with Katrina and here I was my cock hardening against her warm ass cheeks while I watched her roommate get naked. \n\nIn the glow of the moonlight I could make out the lush contour of Erin's breasts and her pink areolas when she bent over to pull her panties down. Fuck! Her pussy was completely hairless!! I just kept staring at her porcelain smooth mound and by the time she turned around to get her nightshirt, I was fully erect against Katrina's warm ass. \n\nI leaned my head up a little to get a better look since she was turned away from me. Her ass cheeks shone in the moonlight and were round, firm and sexy as hell. Erin pulled her nightshirt down and turned towards me. \n\n\"Good night, Ron,\" she whispered, smiling. Fuck! She was putting on a goddamn show.\n\n\"Good night,\" I whispered back as she crawled into bed. \n\nThe next morning wasn't as awkward as I expected it to be with the three of us trying to get ready. Erin acted like I was just another roommate.\n\n\"Erin!\" Katrina admonished her when she pulled her nightshirt over her head, exposing her sexy body in the full light of day. \n\n\"What?\" she shrugged. \"He saw it all last night anyway.\" Katrina looked from Erin to me.\n\n\"I woke up when she came in,\" I said sheepishly, staring at Erin's bald pussy. I hadn't noticed her sexy tan lines in the dark. \n\n\"Well you don't have to keep looking!\" Katrina said, shaking her head as she turned me around to face the other way.\n\n\"And you!\" she said, addressing Erin. \"Just hurry up and get dressed,\" she said.\n\n\"Erin knows how sexy she looks,\" Katrina confided in me as we walked to class. \"Just don't get any ideas,\" she laughed.\n\n\"Don't worry,\" I assured her, putting my arm around her. \"She doesn't hold a candle to you.\" \n\n\"Nice of you to say,\" she shrugged. \"Anyway I intend to keep you too worn out to even consider another woman.\"\n\n\"I like the way you think!\" I answered.\n\nAfter class Katrina came over to Maryanne's with me so we could work on our latest physics project. I invited her to dinner, knowing my sister wouldn't mind. \n\nEven though Maryanne and I slept together every night, I kept my clothes in my own room for appearances. I had a desk in there that I used for studying and that's where Katrina and I went. \n\n\"Wow!\" Katrina said, walking into my bedroom. \"A guy who makes his bed... or does your sister do that for you?\" she teased. If she only knew what my sister did for me.\n\n\"I can make my own bed,\" I countered, trying to remember the last time the bed had needed making. \"Maryanne will be home in about an hour,\" I said, pulling Katrina into my arms. \n\n\"Does she ever come home early?\" she asked, stepping back. \"I realize she knows we're sleeping together, but still...\"\n\n\"Okay,\" I said, giving her a quick kiss. \"How about we knock out the details of our project?\"\n\nI grabbed some snacks and we worked at my desk, with only occasional kisses until we heard Maryanne at the front door. \n\n\"Hey geek!\" Maryanne's voice came from the front of the house. \n\n\"In here!\" I yelled back. \n\n\"God! I'm so glad you're home!\" her voice came booming down the hallway. \"You've been neglecting me and I'm so fucking horn...\" her voice stopped abruptly as she stood in the doorway with her blouse undone and her chest heaving under her lacy bra. \"Oh shit!\"\n\nKatrina looked from my sister to me and back, absorbing the shocking disclosure as I wracked my brain for an explanation other than the truth. \n\n\"Katrina,\" I said, reaching for her.\n\n\"Your sister?\" she asked incredulously. \"She's the woman who taught you...?\" I just nodded. \n\n\"That's... that's...\" \n\n\"Yeah,\" I said. She was shaking her head like she was trying to clear it of this new information. Maryanne was buttoning her blouse and trying to decide whether to come into the room or leave us alone. She finally opted for entering.\n\n\"We need to talk,\" Maryanne said. \n\n\"I think I should go,\" Katrina said. \n\n\"No,\" Maryanne said firmly. \"Not until we've talked,\" Maryanne said in her very schoolmarm voice that I always responded to. Apparently it worked on others as well because Katrina just nodded.\n\n\"Let's go into the living room,\" Maryanne said. \"We will explain everything and then if you want to leave, Ron will take you home.\"\n\n\"I'm sorry. I know this is beyond weird,\" I whispered to Katrina while trying to judge her reaction.\n\n\"I'm shocked,\" she whispered and I just nodded, staring at the floor. \"But I'm not appalled,\" she said, smiling as she put her hand on my shoulder. Really? Our eyes met and I could see that she was actually more intrigued than I would have assumed. \n\nWe spent the next 45 minutes giving Katrina every detail of our relationship from the time I first discovered the video of her masturbating. Maryanne and I took turns telling the story, finishing each other's sentences and by the time we were done Katrina seemed more captivated than upset. She even asked Maryanne several questions.\n\n\"You really had him masturbate for you?\" she asked at one point.\n\n\"Well it was only fair, right?\" Maryanne answered conspiratorially.\n\n\"That is so hot!\" Katrina exclaimed. \"I never would have thought of that in a million years.\"\n\n\"Well, he had just watched a video of me masturbating and... remember my husband had been gone for almost a year.\" Katrina just nodded and we went on with the story. When we were finished I looked at her expectantly.\n\n\"That's it,\" I said, waiting to see what she would say.\n\n\"I guess now I'm wondering where I fit into your relationship,\" Katrina finally said.\n\n\"It's over,\" my sister said. \"I will back out of this picture and you two can continue to develop your relationship. If you're still interested,\" she added.\n\n\"I'm definitely interested but that's not fair to you,\" Katrina protested, making me wonder what she had in mind as an alternative. \n\n\"I'm married,\" Maryanne said. \"My husband will be coming back. We knew this was not a long term thing,\" she said, her finger moving between her and I for emphasis. Katrina sat back on the sofa with a contemplative look on her face.\n\n\"Do you still make him to masturbate for you?\" she asked Maryanne. \n\n\"We've kind of moved past that stage, why?\" Maryanne asked.\n\n\"I'd like to see it,\" she said, smiling at Maryanne. \"Can you get him to do it for us?\" \n\n\"What am I not here?\" I asked, wondering when this became about me masturbating.\n\n\"We could both threaten to cut him off if he doesn't do it,\" Maryanne laughed as she looked at me with raised eyebrows. Katrina sat up straight and I thought she was going to clap her hands she was so giddy. \n\n\"Now?\" she asked.\n\n\"Geek?\" Maryanne was still looking at me. \"Will you masturbate for us?\" she asked. Fuck! This was as unexpected as the first time my sister asked me to do it. \n\n\"Right here?\" I asked, wondering if it really mattered where I did it.\n\n\"This is good,\" Maryanne said, moving next to Katrina on the couch like they were the audience at a strip club. I looked at these two sexy women waiting for me to put on a show, when I was struck with a flash of brilliance.\n\n\"You guys have to be naked too,\" I said. \"That's the rule, remember?\" Katrina looked at Maryanne, checking the accuracy of my statement. My sister just shrugged and nodded her head. \n\n\"He's right,\" she said. \"That is the rule.\" Maryanne started unbuttoning her blouse as she nodded for me to take off my clothes. This was so fucking hot. I took off my shirt and waited to see what Katrina was going to do. By the time Maryanne had her bra off, Katrina was slowly starting to shed her clothes too. Holy shit! I was going to masturbate for my sister and my girlfriend while they were both naked on the couch. My cock was ready and willing by the time I unsnapped my jeans. \n\n\"He looks ready,\" Katrina said, nodding towards my hard cock.\n\n\"He always is,\" Maryanne answered as she rolled her thong down her shapely legs. Katrina's eyes were dancing between Maryanne's naked body and my hard cock as she finished undressing and sat back on the couch. \n\n\"Damn!\" I sighed. \"You two are like every guy's wet dream!\"\n\n\"Let's see it then,\" Maryanne said, sitting close enough to Katrina that their thighs were touching. The contrast in their skin tones was one of the most erotic sights I had ever seen. It was about to get much better but I didn't know that when I started slowly jacking my cock for these naked women. \n\n\"Which of us are you thinking about, Geek?\" Maryanne asked. Now that was a loaded question.\n\n\"Both of you,\" I answered diplomatically.\n\n\"I've never seen a guy do this,\" Katrina said excitedly as she squeezed her thighs together. \n\n\"Is it turning you on?\" I panted, my hand pumping my cock faster. It was certainly turning me on. \n\n\"Hell yes!\" she answered. \n\n\"Would it help you, Ronnie, if maybe we touched each other?\" Maryanne asked. I nodded, stroking faster as Katrina looked askance at my sister. ",
        "\"May I?\" Maryanne asked, her hand poised near Katrina's left breast. The nipple was temptingly taut as Maryanne's fingers hovered near it. It took a minute, but Katrina finally nodded and Maryanne's hand encircled her tit. Fuck!\n\n\"You have beautiful breasts,\" Maryanne said, kneading the closest one as she leaned her head toward it and raised her eyebrows questioningly. Katrina understood and simply nodded, turning her head back to watch me masturbating. \n\n\"Mmm,\" Katrina gasped when Maryanne sucked the thick, black nipple into her mouth. I was jacking like crazy now, thrusting my hips forward as Maryanne caressed and suckled at Katrina's breast. Katrina slipped a hand between her own legs and rubbed her wet pussy.\n\n\"God! This is so...\" she stopped abruptly as Maryanne pushed her hand out of the way and took over the fondling of Katrina's pussy. That was enough for me.\n\n\"I'm going to cum!\" I announced, looking around for some tissue. \n\n\"Just shoot, Ronnie!\" Maryanne said, lifting her mouth from Katrina's tit. \"Shoot on us!\" I stepped closer and let loose a stream of cum that landed just on the bottom curve of Katrina's right breast and trailed down to her stomach. As I kept spurting, I swiveled to get some on Maryanne, but it only landed on her thighs. \n\n\"That was... Oh God!\" Katrina cried. \"I'm going to cum, too,\" she screamed as Maryanne expertly fingered her pussy. \n\n\"Come on, Geek!\" Maryanne said. \"Get your mouth down here.\" I knelt between Katrina's widespread legs. Maryanne pulled her fingers out and shoved my face into Katrina's soggy pussy. \n\n\"Oh Fuck!\" Katrina moaned as I licked her pussy and sucked her clit into my mouth. Maryanne was still assaulting her breasts and Katrina was in the throes of the longest orgasm I've ever seen. She jerked and convulsed continually for several minutes as my sister and I devoured her charms. \n\nShe finally pushed us away and fell back on the couch, gasping for breath. \"You two!\" she stammered. \"Fuck!\" Maryanne just pulled me over in front her.\n\n\"My turn!\" she cried, spreading her legs and pulling my head down. I glanced at Katrina who was still catching her breath and didn't seem fully aware of what was happening. It wasn't quite a threesome but pretty damn close. \n\nI ate my sister through an explosive orgasm while Katrina just watched. I was kind of hoping she'd reciprocate the breast suckling but she didn't. My cock was hard again by the time I had eaten both pussies but I didn't think it was appropriate to suggest any relief. Both women just looked at it appreciatively but didn't make any move to towards it. \n\n\"Can I see some of the videos?\" Katrina asked Maryanne. \n\n\"Why not?\" she shrugged. \"It's not like there's anything there you haven't just seen,\" she laughed. \"Let's have some dinner and then Ron can pick which ones he wants to show you.\"\n\nWe were at that awkward moment where we weren't sure how to act now that the urgency of the sex was over. We were all naked and I wasn't sure whether I should get dressed or not. Maryanne resolved the issue.\n\n\"Why don't you two wait here and I'll throw together some sandwiches. No point in getting dressed if we're just going to watch homemade porn videos,\" she said matter-of-factly as she went into the kitchen.\n\n\"I can't believe it was your sister,\" Katrina said when we were alone. I sat next to her on the couch with my arm around her. \n\n\"I didn't know how to tell you,\" I answered. \n\n\"Yeah, it's not something you would share with many people,\" she said. I turned her head to me and kissed her tenderly on the lips.\n\n\"Are we going to be okay?\" I asked hopefully.\n\n\"Yeah,\" she said quietly. \"I really like your sister,\" she continued. \"It was weird having her come on to me like that but I really got off from it.\" she paused, looking at me. \"And so did you!\" she teased, wrapping her hand around my fully recovered cock. \"I guess this means we're going to share you.\"\n\n\"Are you okay with that?\" I asked.\n\n\"Yeah, for now anyway,\" she snuggled up to me and we kissed passionately as she stroked my cock. Goddamn! This was like a fucking dream come true! No more secrets and I can still fuck both Katrina and my sister! \n\n\"Here we go!\" Maryanne said, walking back into the room with a tray of sandwiches and a large bag of potato chips. She set them down and went back for sodas. \n\n\"Whoa, one of us should probably help Ron out with that thing,\" Maryanne said, nodding towards my throbbing cock. \n\n\"We could have him masturbate for us again,\" Katrina laughed. \n\n\"Yeah but that would be kind of cruel,\" Maryanne said, taking a bite of sandwich.\n\n\"I would love to watch you suck him off,\" Katrina said. \"That is, if you don't mind.\"\n\n\"I don't mind at all,\" Maryanne said, taking a drink of soda and sliding down onto the floor in front of me. \"We could trade off if you want,\" she offered. Holy shit! Yes! A double blowjob would be amazing. \n\n\"Maybe next time,\" Katrina said. \"This time can I just watch?\" \n\n\"Sure,\" Maryanne said, wrapping her hand around my hard-on and locking eyes with Katrina, she fed my cock into her warm mouth. Yes! This was so fucking erotic! I knew I wouldn't last long. \n\nKatrina was intrigued with my sister's technique and was closely watching my reaction. \"God,\" she whispered, leaning in for a closer look. \"I can't wait to watch you guys fuck.\" That did it for me. I jerkily shot off into my sister's warm mouth while Katrina watched her suck and swallow every drop. \n\n\"Wow,\" she whispered. \"You're good.\"\n\n\"Ron tells me you are too,\" Maryanne said, sitting back on her heels and wiping her mouth. Katrina just smiled.\n\n\"I guess you've talked about us.\" Katrina said, not really a question. \n\n\"Just feedback on his training,\" Maryanne laughed, causing Katrina to almost choke on her drink. \n\n\"When you taught him to eat pussy,\" Katrina paused, trying to find the right words. \"Did you just do it based on what felt good to you or did you... um... you know... have some...\"\n\n\"Personal experience?\" Maryanne finished her sentence for her and Katrina just nodded, looking relieved that she didn't have to say it. Maryanne took a minute to formulate what I thought was going to be an obvious answer. But as usual, my sister surprised me. \n\n\"A little of both,\" she answered, cryptically. \"I would love to experiment some more,\" she added. Nothing cryptic about that. I waited anxiously for Katrina's response. When it didn't come, Maryanne prompted her.\n\n\"Is that something you've had experience with?\" she asked. Katrina blushed. \n\n\"A little... but not really... you know... just touching and kissing.\" Maryanne nodded, knowingly, while I just stared.\n\n\"Well, we don't have to rush into anything but if you'd like to experiment, I'm sure Ron wouldn't mind.\" She smiled. \"In fact, he'd probably get off on making a video of it.\"\n\n\"Speaking of videos...\" Katrina said. Shit! What just happened? My cock was responding already even though my sister had just sucked me off. \n\n\"Sure,\" Maryanne said. \"Ron, do you want to show Katrina to the computer and cue up a couple of juicy ones,\" she laughed. \n\nSince the videos were all three minutes long we watched several of the early ones in quick succession. Katrina obviously liked what she saw. Maryanne had brought in an extra chair and the three of us were sitting naked in front of the computer.\n\n\"Here's one from a couple of weeks ago,\" I said, cuing up the video where Maryanne traded off several dildos. \n\n\"Damn, you are good at this video thing,\" Katrina said, giving me a kiss on the cheek. \"Would you do one of me?\" she asked. Would I? Fuck yes!\n\n\"If you'd like,\" I answered nonchalantly, like I did this every day. Okay, I did do it every day but only with my sister.\n\n\"Why don't you set up the camera and do it now, Ronnie?\" Maryanne said. \"You can do it in my bedroom.\" \n\n\"Sounds good,\" I answered, grabbing Katrina's hand and leading her to Maryanne's bedroom. \n\n\"Do you mind if I watch?\" Maryanne asked. \n\n\"Not at all,\" Katrina answered as we headed down the hall. \n\nThere wasn't anything to set up. The camera was always ready and I only used the tripod when I was going to be in the video.\n\nKatrina was standing next to the bed waiting for direction, when I got another flash of brilliance. \n\n\"Maryanne,\" I said turning to my sister. \"Go stand next to Katrina a minute.\" She nodded approvingly and walked over to the bed. \"Both of you face me, with one arm around each other's waist.\" I directed.\n\n\"Like this?\" Maryanne asked, putting her arm around Katrina and smiling like it was a family portrait. Katrina put her arm around Maryanne and stood up straight, causing her breasts to jut out proudly. \n\n\"Perfect,\" I said and it was. Fuck! I started with a full frontal shot and then moved around, shooting from the side and the back. The side shot was particularly enticing as it highlighted the difference in contour of their two bodies. Maryanne's stomach was slightly flatter or maybe it just looked that way because Katrina's breasts were larger. \n\nMy cock was rock hard as I compared their two bodies. Even though both women were about the same height, Maryanne's legs were longer giving them a more shapely appearance. I love my sister's sexy ass but it looked like a cute dimple compared to Katrina's more fully rounded cheeks. Katrina's ass curve started higher and ended lower than Maryanne's and I couldn't help but zoom in for a closer comparison. \n\n\"Now turn and embrace each other,\" I said when I was back in front of them. This was so fucking great! Katrina wrapped her arms around Maryanne's neck while Maryanne let her hands rest on Katrina's ass. They pulled each other close, pressing their breasts together. Fuck! My cock ached in reaction to the contrast in their skin tones as much as the sexy mashing of their tits. Then, without any direction from me they started kissing. \n\nMaryanne initiated it but Katrina didn't resist. I zoomed in for a close-up of their open mouthed kiss and then panned down Katrina's back to where Maryanne's fingers were kneading her fleshy ass cheeks. This was easily the most erotic thing I had ever seen. \n\nAlthough mostly passive, Katrina seemed to respond positively to my sister's lead. They were kissing and grinding their pussies together but Katrina hadn't moved her arms from around Maryanne's neck. \n\nBy the time they broke the kiss, both women were nearly panting. Maryanne trailed light kisses down Katrina's neck and across her shoulder blade while she brought one hand up to caress her dark hued breast. I was so turned on by these women that I nearly forgot my role as cameraman. Recovering quickly I zoomed in just as Maryanne sucked Katrina's distended black nipple into her mouth. \n\n\"Mmm,\" Katrina moaned as my sister sucked and nibbled. Moving from breast to breast, she pulled on the nipples with her teeth, stretching them out from her breasts just like she had taught me to do. God, this was so fucking sexy!\n\nMaryanne continued planting kisses down the front of Katrina's torso until her face was buried in the other woman's cushy bush. Kneeling now, Maryanne gripped Katrina's ass cheeks and kissed her way between Katrina's legs. I loved watching my sister make love to my girlfriend but I was anxious for Katrina to take a more active role. \n\n\"Cut!\" I yelled, impulsively. They weren't going to last very long standing up like this and I wanted to make sure Katrina would reciprocate.\n\n\"What?\" they cried in unison.\n\n\"Can he do that?\" Katrina asked. Maryanne shrugged resignedly, looking at me for direction. \n\n\"Katrina's turn to kiss her way down your body,\" I said to my sister. \"Then you two can continue on the bed right where you left off.\" I held my breath as the women looked at each other. Then Katrina reached down and helped Maryanne to her feet. Yes!\n\nMaryanne smiled at me as they embraced for another kiss. This time, Katrina had her hands on Maryanne's ass as she initiated the kiss. Fuck! She was doing just what I asked. I zoomed in as she kissed her way down Maryanne's neck and wrapped her dark lips around my sister's pale pink nipple. \n\n\"Yeah,\" Maryanne sighed. \"This is going to make a great video.\" Katrina attacked Maryanne's nipples with the same vitality my sister had shown to hers. Kneading the fleshy, white mounds and switching her mouth back and forth between the taut nipples.\n\nFollowing my sister's lead, Katrina kissed her way down Maryanne's body and knelt with her face in front of her pussy. She glanced at me to see if I was going to stop her. When I didn't, she smiled and flicked her tongue across Maryanne's labia. Fuck! She's actually eating my sister's pussy! I moved in for a closer shot. \n\n\"Ohhh,\" Maryanne cried, her legs shaking as Katrina's tongue teased her moist lips open. \"Can we take this to the bed?\" Maryanne asked.\n\n\"Absolutely,\" I said, stepping back so they had room to maneuver. \n\nMaryanne laid down on her back and scooted up to the head of her bed, making room for Katrina between her outstretched legs. Katrina didn't hesitate for a second. Crawling up between my sister's thighs she stuck out her tongue seductively before lowering her face to Maryanne's wet pussy. Fuck! I moved around to the side of the bed and zoomed in on Katrina's tongue as it licked and probed at my sister's aroused pussy. \n\n\"I've never done this,\" Katrina said, taking a breath and locking eyes with Maryanne. \n\n\"Just do what you would like,\" Maryanne coached her. \"You can't really get it wrong,\" she laughed. \"What you're doing feels great!\" Katrina plunged her tongue back into my sister's pussy and I moved around the bed, zooming in and out to get as many angles as possible. \n\n\"Oh yeah!\" Maryanne moaned. \"Just like that! Keep... doing... that!\" she cried as she dug her fingers into Katrina's scalp and humped her pussy against the other woman's face. My cock was rock solid as I zoomed in on my sister's face, catching her in the throes of a powerful orgasm. \n\nWhat a great shot! Just as Maryanne started relaxing, I panned down past her heaving chest and zoomed in on Katrina's wide-eyed face and her pussy-soaked mouth. She was beaming radiantly as she smiled proudly at my sister. Maryanne reached out for her and Katrina scurried up, lying prone and crushing their tits together as they shared a post-coital kiss. Damn!\n\n\"Your turn,\" Maryanne said, rolling Katrina off to the side and scooting down to the end of the bed. Katrina smiled kind of sheepishly at me as she spread her legs for my sister. Maryanne knelt with her ass in the air, ready to eat Katrina's pussy.\n\n\"You don't need to video this, Geek,\" Maryanne said, wiggling her ass at me as she lowered her head between Katrina's thighs. \"Fuck me while I get your girlfriend off.\" Fuck yes! A threesome!\n\nI set the camera down and stepped up behind my sister's sexy, bare ass. Her puffed out pussy lips were still glistening with juice from her recent orgasms. I gently probed her slick opening with my cockhead as I grabbed her hips with my hands. Teasingly, I inched my cock into her hole, holding her firmly so she couldn't push back against me. \n\n\"Mmmphph,\" she moaned into Katrina's pussy as I slid in another inch. \"Geek! Fuck me!\" Maryanne cried. \n\n\"I am,\" I answered calmly while winking at Katrina. We smiled at each other and she blew me a kiss as she pulled Maryanne's face back into her crotch. Fuck! It was an honest-to-God threesome. I was fucking my sister while she was eating Katrina's pussy. \n\nWhen my cock bottomed out, I pressed against my sister's ass, not moving in or out, just holding it still inside her hot, velvety tunnel. Pulling out with the same excruciating slowness, I teased my sister's anxious pussy just the way she taught me. \n\n\"Fuck me, Geek,\" she pleaded quietly, while taking a quick breath from Katrina's delectable pussy. \n\n\"If that's what you really want,\" I answered calmly while moderately increasing the speed of my strokes. My pace was still slower than what I'm sure my sister wanted but it was enough to create some much-anticipated friction inside her smoldering pussy. I still held her hips so she couldn't rock against me as I gradually picked up speed. This was killing me too and I finally gave in and started really fucking. \n\n\"Oh God!\" Maryanne moaned when I finally progressed to an acceptable rhythm. Katrina was moaning as well, anxious for Maryanne to get her mouth back on her overheated snatch. \n\nKatrina had her fingers tangled in Maryanne's hair and was rocking her pussy against my sister's face. This was so fucking awesome! Once I started moving, I knew I wouldn't be able to hold on for long. \n\n\"Oh God! I'm cumming!\" Katrina cried, locking eyes with me as she humped her ass off the bed and held Maryanne's face tightly against her pussy. I stepped up my pace, smiling at Katrina as I tried to push Maryanne over the brink as well. \n\n\"Ohhhh! YEAH!\" Katrina cried, her body shaking as her orgasm rocketed through her body and she convulsed under my sister's machinations. When Katrina relaxed her grip on my sister's head, Maryanne pushed herself up on all fours and slammed back against my cock. \n\n\"Oh God! Fuck me harder, Ronnie!\" Maryanne cried as one of her hands disappeared between her legs. \"Fuck...meeeee!\" she screamed as I pummeled my cock into her and let loose a torrent of built up cum deep inside her pulsating pussy.\n\n\"God yes!\" Maryanne moaned, clamping her pussy muscles around my discharging cock as her body quivered and shook with the intense pleasure of her own release. \n\nMaryanne collapsed on top of Katrina, pulling loose from my spent cock as she mashed their bodies together. Seeking Katrina's mouth with her own, they kissed passionately as I crawled up next to them, totally spent.\n\n\"Wow,\" Maryanne said quietly. We were lying flat on our backs next to each other, Katrina in the middle between my sister and I, our bodies touching. \n\n\"Ohmygod,\" Katrina laughed, covering her face with her hands. \"I've never done anything like that before!\" She was giddy with excitement, giggling into her hands. \n\n\"A first for me, too,\" I said, sincerely hoping it wouldn't the last time. I waited for Maryanne to chime in with her admission but she changed the subject instead. Interesting.\n\n\"Are you okay with us sending a copy of the video to my husband in Afghanistan?\" she asked. \n\n\"Do you think he'd...um... you know... enjoy seeing you with another woman?\" \n\n\"Oh, I think he'll rub himself raw over this,\" Maryanne laughed. \"It's been a long time since he's gotten anything really new or different.\" She turned on her side to face Katrina. \"There are only so many ways Ron can video me. It's gotten a little routine.\"\n\n\"Not from what I saw!\" Katrina countered, then turned towards me. \"Ron knows that I already fantasize about someone getting off to pictures of me.\" She looked back at Maryanne. \"I think I'd like knowing your husband is too. Besides,\" she added, clapping her hands together and flashing her radiant smile, \"I'd be helping the troops!\" \n\nLaughter turned into a group hug and then six hands began roaming over three naked bodies. Lips found willing lips as well as aroused nipples. One mouth closed around a cock while two others devoured wet pussies. The video editing would have to wait. \n\nAfter another mind-blowing threesome, where I fucked Katrina while she ate Maryanne's pussy, Maryanne asked Katrina to spend the night. I can't even describe to you what it felt like to sleep sandwiched between these two naked beauties. Suffice to say we were almost late for class.\n\nOf course, Mark loved the videos. I edited the footage down to four different three-minute videos and we sent them on consecutive days. Mark's accolades got more impassioned with each email until he finally asked for footage of Maryanne eating Katrina's pussy. Both women willing obliged and I soon had another week's worth of videos for Mark. ",
        "Katrina was practically staying with us now and I had the most amazing freshman year sandwiched between her and Maryanne every night. Katrina loved being in videos as much as she enjoyed posing for Chris' camera. Mark was treated to some amazing footage.\n\nOne thing I didn't film was the evening Maryanne and Katrina teamed up to make me their boy toy. They started with a dual blowjob, each licking opposite sides of my cock before they shared it between their mouths, trading off swallowing my cum. They finished up the evening with Katrina on my face and Maryanne on my cock while they kissed and fondled each other's tits. Damn, I blew a boatload of cum that night. \n\nWe haven't talked much about the future or what happens when Mark gets home but for now everything is perfect. Besides, isn't living in the present one of the secrets to a happy, healthy life? Well, it sure as hell is if that present includes two insatiable beauties! "
    ],
    "authorname": "samslam",
    "tags": [
        "interracial",
        "bf/wm",
        "bf/wf",
        "brother",
        "sister",
        "oral",
        "voyeur",
        "exhibitionist",
        "threesome",
        "video"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/sisters-home-movies-ch-03"
}