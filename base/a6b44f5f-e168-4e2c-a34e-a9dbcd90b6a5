{
    "title": "The Mechanics of Sex",
    "pages": [
        "Some months ago, my darling hubby had a minor heart attack leaving him with several problems, one of them being he has to take tablets to control his blood pressure. Now all of you men out there will know one of the side effects of those nasty little pills is that you just can't get it up. Poor hubby still wants it so badly but his cock lets him down every time. He was great about it and did everything to ensure I was satisfied; fingers, tongues and every toy we owned had been used to try to help me have my sexual needs fulfilled.\n\nPerhaps you are wondering what sort of wife I am, wanting to get satisfaction from this poor man who was unable to make love to me? Well I will tell you. When we met I was a virgin. He is the only man ever to make love to me. And like most girls of my age I did it just for him, because I loved him and would do anything to please him. But, as we got more assured in our love for each other, he taught me to enjoy it for myself. Well the only way I can describe it is \"He's done too good a job.\"\n\nHe taught me to want it so much, to the point where I instigated lovemaking more often than he did, and that, believe me, is quite something on its own because he never seemed to be limp those days. I called him Eveready, like those batteries we used to buy.\n\nWe did everything that two people can do with each other, even expanding our sex life outside the home. We did it in the car, in the woods, even in a changing room in a clothes shop, often getting caught. But that just added to our fun and pleasure in each others bodies.\n\nSo that's my excuse for still wanting to be loved and satisfied by my ever-loving hubby when his poor cock couldn't get it up. I tried just about everything to make it big, even sucking it until it got hard. But by the time he had turned round to put it in me it had gone limp again. Nothing worked; he tried several herbal remedies and exercises to improve the blood flow but nothing got it up. To his credit, though, he still did everything he could to satisfy me.\n\nLet me tell you a little about him; he's six feet four, he used to play rugby and he's as handsome as hell. But his most endearing features are his kindness and compassion with other people. His heart attack was the biggest shock of our lives. He was the most unlikely candidate for a heart attack at only forty one.\n\nHe is a mechanical engineer who owns his own business making one-off machines for whoever wants something that is not available on the market. He just sets out and invents it for them, finishing up making the first by hand. Then, if it's a multi order, he finds an engineering firm to make the rest. You may wonder why I'm telling you all this very boring stuff but I can promise you it will become clear, eventually.\n\nAfter a night of pure frustration he suggested that I find another man just for sex. I was shocked and could not even contemplate the idea. I didn't just want sex; I needed him to make love to me too.\n\nWomen, in general, don't have sex - they make love. By that very definition they need to love the man who is fucking them. Yes, you follow my drift. Men have sex but women make love!\n\nWe talked about it for ages and he seemed quite happy for me to go with another man. He was convinced that it was the right thing to do, but just for sex. He wanted me as his friend and companion for always. The subject came up several times, him trying to persuade me that it would be good for me to have, as he called it, a really good fuck. I always refused. I had no interest in any other man, only him.\n\nWe watched a video one night, looking on as this girl was playing with various toys finally finishing up with a 'fucking machine'. I must admit it got me very horny, so much so I played with myself in front of him.\n\nSomething he loves me to do is let him sit and watch as my finger drifts over my clit, gently parting the lips, feeling the moist inner membrane, fondling that little bud of lust, letting my finger roam round and round, sending signals to my brain that I need to come.\n\nI usually alternate between my pussy and my nipples as they stand out proud against the white flesh of my boobs, begging for attention. My fingers grip them, imagining the feel of those clamps he bought for me .... Or was it for him? He loves to attach that pair of nipple clamps making me cringe as they bite into my tender flesh, sending such wonderful signals down my tummy to my pussy.\n\nDespite the initial pain I do love that feeling. So this night, watching this beautiful girl getting screwed to death by this unrelenting machine, I thought about getting his nipple clamps out and offering them to him as I stripped off my all clothes while still watching the film.\n\nThinking about those clamps gripping my nipples got me so horny, so much so that I walked from the room and into our bedroom. He followed, thinking I was going to lie on the bed to continue this exhibition. But then I walked to his side of the bed opening his bedside drawer where he kept his toys. I fished around until I found those big clamps and I passed them to him as I strolled back to the lounge.\n\nSitting opposite him in the armchair, my legs spread wide and hooked over the arms of the chair, I showed him exactly what my fingers were doing. The clamps, hanging from the chain that connects them together, dangled from his fingers.\n\nHe kissed me hard on the lips. Then, opening first one then the other clamp, he fastened them onto my protruding nipples. I cried out as the cruel little teeth bit into my tender flesh. Then came that feeling as the blood pressure in my nipples built up, sending those wonderful feelings down to my pussy.\n\nThe heavy chain connecting my nipples together hung down exerting more pressure on them, transmitting shock waves through my body. As my fingers stroked and fondled my clit, the chain swung in time with my hand, pulling just slightly but quite enough to make me constantly aware of its presence.\n\nHe sat back in his chair watching my hands fingering my inflamed pussy, and he observed my face as the feeling of pure lust expressed itself in my facial expressions - especially my eyes. A smile came to his lips as he enjoyed watching his wife acting like a little whore. \n\nI slowed my fingers down. I wanted this to last, not rush it; give both of us the longest time possible to enjoy this spectacle I was making of myself. His face was a picture of pleasure and yes, he too had lust in his eyes. I felt for him, knowing what he was missing. \n\nHe talked to me as my finger ran slowly round and round my clitty, telling me how sexy I looked, telling me to open my pussy wide so he could see how wet I'd made myself. I shut my eyes and let the pleasure sensations build even more, feeling the moisture seeping out and trickle steadily between my lips, down through the crack of my bum, wetting the seat below me. He told me how he would like to fuck me real hard, make me come so many times I would faint. He did that quite often before that damn heart attack.\n\nHe told me I should be doing this with a man, didn't I want to feel my pussy full of cock? He could find a suitable man to satisfy me if only I would say yes. I must admit at that moment I was sorely tempted.\n\nHe described to me how I would feel at this moment as a big hard cock entered my wet pussy. How it would fill me so full, stretching my pussy to accommodate its length and girth. In my mind I could actually feel the things he was saying to me. Yes, my fingers are so small compared with his cock. It would be so good to feel a big cock in me again.\n\nHe almost had me agreeing with him that I needed a man to satisfy this ache in my pussy. I was just on the edge of saying \"Yes, organise it for me,\" knowing if I had, it would have happened in hours rather than days.\n\nLooking again at the TV screen, where this girl was still being mercilessly fucked by that big artificial cock connected to that machine, I said the most stupid thing I could have uttered, to him of all people.\n\n\"That looks good\"\n\nHe changed tack quickly and it was that machine he was tempting me with now. He told me how he would have the control and make me come for as long as he liked, fucking me until I begged him to stop. At his insistence that he would make me come many, many times with this machine, I couldn't hold back my climax any longer and came with the most satisfying groan.\n\nHe dropped to his knees between my legs, his tongue taking over from my fingers, greedily lapping at the moisture, licking and sucking my clitty till I climaxed again and again. His fingers played with the chain connected to the clamps, making my poor little tits feel as if someone had set fire to them. He continued until I was completely exhausted.\n\nAs soon as he moved I took his poor little cock out and sucked it for all I was worth. It got big for a while but soon wilted again. He held my head between his hands and said, \"Oh Chrissie, what I would give to just fuck you one more time.\"\n\nAs he removed the clamps from my nipples oh, the heat and pure agony as the blood flowed back into them after more than an hour in their grip. It's actually worse when they come off than when they go on. Oh, what delightful pain!\n\nBefore I continue with this story I think I should tell you a little about our home. It's not the conventional semi in suburbia. It is, in fact, an old barn we converted many years ago when he decided to go out on his own, no longer to be a wage slave.\n\nHe needed a workshop to dream up and build his wonderful inventions, so we converted this big old barn out in the sticks. Most of the ground floor is his workshop, or, as he likes to call it now, his studio. The upper floors are our home.\n\nIt's very convenient and economical; no rush hour traffic in the mornings, no travelling costs and he's only a few feet away when I need him. It may not be everyone's cup of tea, but it suits us very well.\n\nAbout a week following that evening watching the film of that girl and her electric lover, he called up to me telling me he had something to show me. There was nothing unusual about that. I often got used to view his new inventions and even got to pass judgment on some of them.\n\nI had just come out of the shower, so threw on a robe and went down to his 'studio'. A strange feeling came over me as I took each step on the stairs moving closer to his den. I had no cause to feel like this. What was it that made me feel so unnerved? But still I was surprised to see nothing in particular, nothing standing in the middle of the floor space, no new machine gleaming with bright new paint. \n\nInstead there was an old camp bed on the floor and some contraption hanging from the high ceiling joists. He smiled and said \"Oh good you haven't dressed yet.\" Pointing to the camp bed he said \"Take that dressing gown off and lay down on the bed.\"\n\nBy now my usually rather slow warning signals were on full alert. He can be a bit of a control freak when the mood takes him and memories of his asking about various measurements like my waist and hips came to mind.\n\nDespite this, and being the good little wife I am, I let the robe slip from my shoulders and sat on the edge of the old camp bed, noticing how rusty the legs had become over the years. He said \"Lay right down on your back.\" I noticed some strange looking straps across the bed as I complied with his wishes.\n\nHe smiled down at me laying there like the sacrificial lamb, his smile warning me that I shouldn't be so easy to control. He only has to ask me to do something and I just do it, often without thinking, because of a mixture of love and a big helping of subservient nature.\n\nHis hands quickly showed me what those straps were for. We had talked before about a cradle, or swing, or whatever it's called. You know; those things that give your man the ability to suspend you in mid air and expose any part of you that interests him.\n\nI suspected he would invent one rather than buy it, but I had no idea he had made it. My knees were strapped in one set of straps with a spreader bar keeping them open wide. My waist was firmly held in another. More round my upper body, of course, leaving my breasts totally exposed.\n\nAnother set of straps held my head and neck, I was very firmly held in position. I was beginning to feel totally helpless. There would be no escape from this leather and webbing contraption. He then pressed a button on his remote control and the overhead hoist came rolling along the track bolted to the joists above me. The hook that he used to lift heavy pieces of machinery slowly dropped towards my captive body.\n\nHe fastened the loops from the straps to the hook, and then with the press of a button I was lifted bodily up, suspended in the air. He had adjusted the straps so that, as it lifted me, my knees were drawn up higher than my body. What was he intending to do to me? I dare not ask because if ignorance was a bit scary then knowing could be a lot worse.\n\nI was held in a sitting position but suspended on my back. My knees and ankles were held up and away from my body. I felt so exposed. I was trussed up like a Christmas turkey. \n\nHe pressed more buttons and I was transported along the workshop towards the bench at the far end, coming to a stop just a metre or so from his work bench.\n\nOpening the cupboard he brought out another device I hadn't seen before. It was part of my old sewing machine. Well, the electric motor was certainly from it, it still had the 'Singer sewing machine company' label stuck on the side of it. \n\nBut what on earth was the rest of it? Then it hit me - he had built a machine something like the one we watched the other night on that film. Oh, why do I open my big mouth?\n\nI watched in mild terror as he fastened the biggest imitation cock I have ever seen to a shaft running from the motor. He moved me round so I was in line with this huge dildo, smearing the monster cock with some lubricant.\n\nHe moved me into position. Not a word had passed my lips. I wanted to ask but simply daren't. The truth might be worse than my fears. He inserted the tip of that monster into my pussy. I was so wet and ready. Why does my body always betray me?\n\nI was held captive, frightened, and very apprehensive, but my pussy was throbbing and lubricating like it was looking forward to whatever he had in mind.\n\nMoving me until he was satisfied that everything was just right he pressed a button on the motor. It slowly purred into life, driving that huge cock deep into my captive body, slowly but firmly until it was totally embedded in me.\n\nGod, but that was big. Yes, too big, but there was nothing I could do so I gritted my teeth and took it. I was relieved as it started its reverse action, pulling out slowly letting my insides recover to their normal size.\n\nThen as soon as it was out, to my shame, I missed it. This was the first thing that had made me feel full up for a long time. I had forgotten what it felt like to have my pussy so full. Even if it was artificial, it was a lot better than nothing.\n\nThat big dildo reached the end of its backward stroke and inevitably started to move forward, penetrating my pussy again. This time it was easier and not so painful. A bigger thrill was to come as it opened my pussy to accommodate its length and girth.\n\nAs it became more comfortable I started to enjoy the feelings of this man-made cock invading my insides. My hubby's fingers began playing with my nipples - a sure way to make me feel sexy and very easily controlled. He knew me so well and could do whatever he wanted to me because he knew just which button to press to make me go in the direction he wanted. My nipples are always so sensitive due to his constant attentions that I will just go along with him whatever.\n\nHe reached for the motor control and it speeded up. Not much, but enough to make me cry out; not with pain but total delight. I thought of that girl we had watched only a few nights ago. How she had moaned and cried out in passion, thinking it was for the benefit of her audience. I thought to myself, perhaps not!\n\nThe thing was pumping into me at a rate of a good hard fucking now; long steady strokes. If any girls are reading this they know just what I'm talking about, that steady pace guaranteed to bring you off. It gives you time to enjoy every stroke, but not so fast they blend into one long blur.\n\nHe knew just the right speed and held it there. I could hear the motor purring away thinking of all the times I had listened to it as I sewed things for our home. But this wasn't sewing. It was fucking; fucking me hard and very competently.\n\nCombined with his fingers at my tits I could feel the start of a climax building deep inside my tummy, but I wasn't prepared for the shock of my first mechanical orgasm.\n\nNothing could have prepared me for how much that thing was going to drive me over the top. Perhaps it was the way I was suspended in a comfortable position -no pressure on any part of my body just nicely relaxed and supported, but totally captive. Maybe this was combined with the feeling of total helplessness, unable to resist the machine, and my hubby at the controls, doing to me whatever they wished. \n\nIt might also have been because I needed to feel full of something so badly. I just don't know, but it started in my toes like a tingling feeling, travelling slowly up my legs, causing me to tremble as it intensified and continued through my body. The feelings had reached my pussy making it clench onto the shaft of this mechanical cock, gripping it tight, like I used to with his real one. Then my tummy started to cramp. No, not the nasty sort; the kind of cramp that precedes an orgasm.\n\nBut this was nothing like I had experienced before. This was more gentle and slower than the frantic feelings I had when we used to make love. I could feel both his fingers and this strange but delightful sensation moving up through me and spreading into my tits.\n\nEventually it entered my head, like an explosion. It really felt like the top of my head had blown right off. I lost consciousness for a few seconds just like when he fucked me exceptionally well. Oh my god, this was something else altogether. Unlike actually making love this thing didn't erupt in a shower of hot come, filling me with seed. It just continued its relentless thrusting, driving me higher and higher.\n\nI could hear hubby's voice somewhere in the distance asking me if I was alright but I couldn't speak. The feelings of pure lust had taken away the ability to do anything other than moan with delight as it drove me to places I didn't know existed.\n\nMy mind then did the strangest thing. It saw pictures of that girl on the film as she writhed on the bed in throes of passion. She could have moved away from the machine if it became too much. I didn't have that choice. I was my hubby's captive and only he could release me from this ecstasy. I hoped it wouldn't be just yet, but the fear of being made to orgasm until he was satisfied was very real and, to be honest, it probably added to the fantastic feelings I was having.\n\nWhy do I want my husband to take control of me especially in this way? What is it about me that allows him to be the master of my destiny? Did I care? No, I didn't, not at all.\n\nMy captor slowed the machine down to a gentle but still very firm beat as I continued to climax after climax. Each peak was not really separate now, just one long perpetual orgasm. Would I have moved away from the pounding cock if I could? Well perhaps, I might have, but that was totally academic. I had no choice and no opinion. This was his show. I was just the supporting cast, but I felt like the star of this little production, the porn star!\n\nHe turned it up again making me cry out in ecstasy as it took me over the top once more, the muscles in my tummy tightening as the climax that had never stopped just went up a notch, the thing pumping into me like it was never going to stop. ",
        "I opened my eyes and looked into his. He had that smile on his face like he used to have when we made extra special love. Those times when everything went just that little bit better, making me so happy and him so pleased that he had fulfilled me.\n\nI wanted to ask him to stop it for a while at least, but the look of pure pleasure in his eyes made me hold my tongue. I had not seen that look for a while, in fact not since his heart attack.\n\nI bit my lip to stop me begging him to slow it down or better still give me a break. I just didn't have the heart to spoil this for him; I rode out several more violent peaks. It was almost unbearable, but I wanted it to never end.\n\nHave you ever done something that was so draining it made you feel as if all your energy was used up but you didn't want to stop? Well that's how this damn machine had me right now. I was torn between the pleasure and the agony of total exhaustion, but it wasn't my decision. He was in charge. I couldn't move and, because of his obvious pleasure, I couldn't speak. I simply couldn't ask him to turn it off.\n\nBut even if I had put myself before his so intense enjoyment of being able to make his wife come at his will, would he actually switch it off? He had the power to do whatever he wanted.\n\nI passed out with the intensity of the continuous orgasm, and when I came to the thing was still stroking gently in and out of my pussy. It was much slower now, just keeping me at boiling point.\n\nI looked up at him, the control in his hand, wondering if he realised just how much he had made me come. Did he realise what agony and joy he had caused in my body? After only fingers and the odd dildo recently, I was also out of practice.\n\nHanging there helpless, in his contraption, with that sewing machine motor still purring away I knew my days of sexual frustration were over. He could make me come whenever he wanted to and for how long he wanted to. It was just like before but with the added advantage that this thing never got tired and certainly never went limp.\n\nHe asked me if I had enjoyed it, I tried to sound upbeat because he was obviously so happy his machine had done the business. I told him it was wonderful but I needed a rest now. He smiled and said \"Are you sure?\"\n\nI replied \"Yes my darling, I have got to get used to coming like that all over again. It's been a long time since you made me climax so many times. Promise you will do it to me again.\"\n\nHe eased the dildo out and lowered me down, pulling the camp bed under me as he did so. His fingers worked at the straps, releasing me from their hold. It wasn't until I tried to stand I realised just how knackered I was. My legs felt like rubber.\n\nHe had to hold me in his arms for ages until I could manage to stand alone. He was surprised at my incapacity and I don't think he knew just how effective his latest invention was, how potent it felt as it drove me to climax after climax.\n\nWell, our problems are over now and whenever I need to feel myself full to the brim with hard cock all I have to do is ask. He is much happier seeing me so satisfied by his wonderful machine. He has refined it several times including one variant that is small and portable. It is mounted on a board and I can take it to the bedroom and give myself a really good fucking whenever I feel the need.\n\nWith the help of some expensive but effective herbal tablets and gentle, prolonged, stimulation he got it up long enough for me to make a cast of his cock at full erection. Of course he made several different models from the mould, and I just love them all, so much more that any of the mass produced ones. Now I am even happier, knowing that it is his cock that still penetrates me every time I switch that machine on.\n\n*\n\nI love feedback from my stories. Perhaps you could take a few minutes telling me whether you enjoyed my story and why. Even if you didn't enjoy it, let me know, and why, then I can try to improve on my next story. Anyone who includes a valid email address will get a personal reply.\n\nMy sincere thanks go to my editor 'grumpyg' for sorting out the punctuation, correcting grammar and otherwise improving the readability of this story. "
    ],
    "authorname": "Chrissie39",
    "tags": [
        "masturbation",
        "female masturbation",
        "sex machine",
        "masturbation machine",
        "male voyeur",
        "voyeur husband"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/the-mechanics-of-sex"
}