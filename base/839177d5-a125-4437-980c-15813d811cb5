{
    "title": "The Mystic Adventure Ch. 02",
    "pages": [
        "The first thing I noticed was the sound - the relative lack of sound actually. The stillness of the morning, at anchor, in a cove miles from any real semblance of civilization, is almost eerie. That kind of silence accentuates what little sound there is and amplifies the effect. It's hard to describe that particular sound; of tiny waves gently lapping the side of the boat; the gentle thump of the dinghy nudging up along side like he's asking if anyone is awake. \n\nI lay on the cockpit cushions with my eyes closed as my brain slowly powered back up and began to piece together the situation. Normally, I don't sleep very deeply while on a boat - especially at anchor. There are so many things that can go wrong - dragging the anchor, another boat dragging into me, weather that pops up quickly - that I seem to almost sleep with one eye open as they say. \n\nRight now, it feels like I've been in a coma. I seem to be partially covered by a sheet but I've kicked or twisted most of it off of me. An occasional wisp of warm breeze plays over me and causes the halyards to gently clank against the mast. Other than that, there's nothing. \n\nSo, let's see. I'm on the boat; check. At anchor; check. Weather's fine; check. Kim and Kell; oh fuck. Oh. Fuck. I open my eyes but I don't really see anything except the movie playing in my head. It's not playing straight through but more of a highlight reel, or a flashback montage of the events of last night. It almost seems like it really is a movie - that those things happened to some actor in an impossibly well-directed porno that could never exist in real life. No, it was me. It happened. I rewound a few times; slowed it down in several places. Jump ahead to scene five; back to scene three. The finale. Shit. \n\nWell, I guess my dick still works since this brain movie has caused a stir under the sheet that is barely covering me. God, I still can't believe what happened and how it felt. That was simply the hottest thing that I have ever experienced. It was a perfect mix of warmth, tease, beauty, playfulness, and out and out, down and dirty smut that I just can't quite process it all. Maybe I'm going to have to tackle this over time. I really should check the boat. \n\nI lift my head and try to bring the world into focus. My abs ache slightly. Oh yeah, I remember; watching them work on my cock. Focus. OK; Marinas Cay; weather looks good; we haven't dragged and we're not too close to any other boats. Cool. I realize that I really tensed up there for a few seconds - almost a panic as I realized I had been so out of it for so long and had not been \"on watch\" so to speak. With the quick assessment completed, I relaxed again. The girls. Hmm. Not here. I had another brief panic wondering if they had fallen overboard or something but I'm sure they are just down below. \n\nI rise up and clear a few more cobwebs from my head and crud from my eyes. I grab my trunks, which are neatly folded next to me, and slide them on. I'm still a little hard from the recent movie review so I have to do some adjusting. One more look around to check the conditions and then I move to the companionway and go below. I poke my head in the starboard stateroom; no girls. I see a bathing suit bottom on the cabin sole in front of the port stateroom. Hmm. Then a tank top that says \"Drink, Stink, and Go-Naked\" about a foot away. Yeah, I feel ya buddy. Let me just adjust myself a little better.\n\nI quietly peek in the room and see the two girls entwined on the bed asleep, breathing softly, totally naked. It's a scene that is almost artful and incredibly sexy hot at the same time. Kell is on her back and Kim is laying on her back partially on top of her; like they had been in a spooning position on their right sides and then rolled backward onto their backs. Their legs are tangled together and partly opened. The view gave me another jump as I realized that despite what happened last night, I really hadn't seen either of them naked before; not counting Kim's tits of course.\n\nKim had dark hair, trimmed into a small landing strip. Kelly's right hand was resting on the crook of Kim's thigh, tantalizingly close to Kim's cunt. The casualness of it made it that much sexier. \n\nI found myself hesitating to look at Kelly and I didn't really know why. It was almost like I had been imagining this for such a long time and wondering and hoping and fantasizing about it so much, that I wanted to prolong the tease. Sometimes, the idea of something ends up being better than the actual thing that you are picturing. Yeah, but who am I kidding. I have to look.\n\nNope. This was every bit as good if not better than I imagined. She had blond hair; so light that it was almost hard to see. It was trimmed into a small patch above her pussy but it wasn't cut real short. It was curly, and wispy and impossibly sexy. I instantly imagined her taking the time to shave and trim and make everything beautiful for whoever might happen to see it and frankly, the thought of that is hot as hell. \n\nI zoomed out to take in the whole picture again and just wallowed in the smoking hotness of it. Clearly, after they had taken care of me last night; and I passed out like schoolboy leaving them high and (not so) dry; they had come down here and taken care of each other. I tried to imagine what they did and how they did it and I basically just have to stop. My cock is really getting hard now and I'd feel like a letch if they woke up and saw me looking at them with a hard-on. \n\nI quietly head back to the galley and try to make coffee as silently as I can.\n\nGrabbing the chart book and my cup, I head back up on deck to put up the shade Bimini and think about planning the rest of the trip. In the haste of getting away and getting the girls briefed on the boat, I realized that I hadn't really planned where I was going to go. It's easy enough to wing-it down here but I wanted to have some semblance of a plan and make sure the girls had a chance to see the special things that were around. As I thought about where to go next, I heard the clank of a coffee mug from down below and then, a few seconds later, Kelly came up through the companionway.\n\nShe was squinting in the growing sunlight and her hair was lightly mussed which, of course, made her all that much more beautiful in my eyes. She was wearing one of my button down flannel shirts that I had brought just in case there were some slightly chilly nights. Only the middle two buttons were buttoned which meant that the curve of the inside of each breast was just visible in the V. \n\nAs she stood up she looked at me, smiled, put her coffee down, and did a big morning stretch/yawn. \"Morning.\"\n\nAs she stretched her arms out and back, and then clasped them behind her head, her shirt rose up and exposed the pink panties that were barely covering her pussy.\n\nFuck. She was absolutely gorgeous. \"Good morning.\"\n\n\"I hope you don't mind. I borrowed your shirt.\"\n\n\"It looks good on you.\" The understatement of the year.\n\nShe looked around and took in the view of the island; the cove; the other boats on the glassy water. It was dusk when we had gotten in last night and with dinner, drinks, and oh yeah, the mind-blowing sex, she hadn't really had a chance to get a look at the place. Now, in the quiet of the morning, she was able to really absorb it. \n\n\"I guess there really aren't the right words are there?\" She turned back to me like she was giving up trying to say something about the scene. \n\n\"I know. You can't really describe it to someone, and pictures sell it short too. You just have to be here and experience it you know?\"\n\nShe didn't say anything. She just looked back out across the water. \n\n\"Can I walk around on the deck up there?\" \n\n\"Yeah. Just watch your step and hold on to a lifeline or a stay until you feel steady.\"\n\nShe stepped up out of the cockpit and onto the deck leaning over to grab the lifeline as she did. Of course in doing this, her shirt rode up in back giving me a peek at her ass and a flash of panty covered pussy. Again, the non-sexual aspect of the whole instant was so casual that it made it ten times sexier than if she had bent over and stuck her ass out. That would probably work as well though, I heard my little friend say.\n\nShe walked up to the bow of the boat and stood there taking in the scenery. I swear she looked like a model in a photo shoot. The breeze was gently blowing her hair back and occasionally flipping back the sides of the bottom of her shirt. The fleeting glimpses of the side of her ass was mesmerizing. She seemed to sense me looking at her, glanced back, smiled, and made her way back along the port side to the cockpit. \n\nI took her hand to help her step back into the cockpit and as she leaned over to step down, her shirt gaped open giving me a glorious view of her breasts. \n\n\"Hey,\" she said.\n\n\"Hey.\"\n\n\"Sleep well?\"\n\n\"Like the dead.\"\n\n\"Good coffee. What kind is this?\"\n\n\"Um, it's some sort of Spanish coffee. Yeah it's good.\" I paused a bit. Were we dancing around the 600 pound gorilla in the cockpit? \"Kell, I gotta say, last night was the most mind blowing thing that I've ever experienced.\"\n\nShe sat down next to me and put her head on my shoulder. \"I know huh? I'm almost embarrassed by the things I did and said but I was so horny and it felt good to just let go. I think some inner-slut came out that I didn't know I had.\"\n\n\"Heh, yeah, I guess so,\" I chuckled. \"I feel like a chump for basically passing out on you. I desperately wanted to repay the favors but I think my body just shut down it was so intense.\"\n\n\"You know what, it was actually really hot to see what effect I - we - had on you; kind of empowering if you know what I mean. There's nothing you have to apologize for. Besides, Kim and I managed to have some fun without you.\" She looked up at me and gave a wry smile and then kissed me on the cheek. \"Whatcha lookin' at?\"\n\n\"Oh, um, the chart book. It shows all the islands and the various anchorages. I was just trying to figure out what our itinerary should be.\"\n\n\"Cool. Where are we going?\" She snuggled in a little closer as I showed her the charts and told her what I was thinking. I guess I was a little worried that the morning after would be a little awkward but it couldn't have been more natural and easy. I think The Pact was working. We were just having fun and not overanalyzing things. God she smelled good. She must have re-applied that body lotion or whatever it was because she had no right to smell that good after a day on the water and a night of hot sex. \n\n\"Well that looks comfy Kell.\" Kim had appeared in the companion way and we hadn't even noticed her. \n\n\"Umm, it is,\" Kelly giggled. \"Brad was showing me all the places we can go. \"Oh! Kim, look over there. Look at that little beach.\" Kelly pointed over to the small beach that she had been looking at when she was up on the bow. \"Isn't it beautiful?\"\n\nKim looked up from the chart book and gazed around the boat. Like Kelly, she hadn't really realized the idyllic setting we had pulled into last night. \"Jesus Christ,\" she muttered as she took it in. She spotted the palm-lined beach that Kelly was pointing to. \n\nAs all this was taking place, I was just staring at Kim. She was wearing a tiny bikini top that was just devastating. The straps and edges were trimmed in bright blue while what barely covered her breasts was some kind of very fine white mesh fabric such that her dark nipples were clearly visible. She had a wrap on below but I'm sure it covered an equally tiny and see-through bottom. Her stomach was taut and browned and she had a small belly button piercing that I hadn't noticed last night.\n\nAs she turned to take in the scenery, I could tell from the outlines through the bikini wrap that the suit bottom she had on was the Tonga style; the kind that doesn't go in the crack like a thong but also only half covers the butt cheeks. I had to tear my eyes from her and look back down at the chart book or I was going to knock the book off my lap with my hardening cock. Shit, I don't know if I can take this for the rest of the trip. \n\n\"Are we allowed on that beach?\" Kim turned back to me. \"It looks like it's straight from one of those Corona Beer commercials. I have got to sit on that chair that's down by the water.\" \n\nShe was talking about the wooden chair, two chairs actually, that were in the sand right at the edge of the water. They were strategically placed there to let the sitter be sort of half-in and half-out of the water and bask in the sun. Two palm trees drooped lazily over them creating a scene straight from a postcard.\n\n\"Yeah, sure,\" I answered. \"I know it looks private but you can absolutely use it.\"\n\n\"Oh man, we gotta hit that Kell.\" She paused like she just remembered something and then came over to me, leaned past Kelly, and stuck her tongue in my mouth. \n\nFuck.\n\nShe disengaged leaving me startled with my mouth hanging open. \"By the way, good morning Brad. Thanks for making coffee. How are you feeling?\" She kissed Kelly sweetly on the tip of her nose and stood back up.\n\n\"Umm, uhh, Good. You're welcome. Uh, Thanks.\" I was struggling to make a coherent sentence come out of my mouth while it still hung open.\n\n\"You are so bad Kim,\" Kelly playfully slapped Kim's arm after she unleashed the two radically different kisses.\n\n\"You're not too far behind Kell.\" \n\nKelly looked down, apparently remembering something \"bad\" that she had recently done, and sheepishly grinned, \"I know.\" \n\nI got up and went below to grab some bagels and cut up some fruit and to try and contain the lust that was building in my groin. We had breakfast on deck in the shade of the Bimini as the sun quickly heated up the day. \n\n\"I'm going to finish planning our route and radioing to a couple of restaurants for some reservations. Why don't you two take the dink over to the beach and relax for a bit.\"\n\nThe both looked at me like I was an alien. \"What, in the hell, is a dink?\" Kim said flatly.\n\n\"Oh. The dinghy,\" I said pointing to the inflatable boat that was tied to the stern. \"It's called a dink for short, sorry.\" \n\n\"Oh, man. I thought you were saying take the 'dick' to the beach. I thought you had some sort of sex toy you were offering us!\" We all laughed at the misunderstanding although I was also intrigued that that was where her mind went when in doubt. Hmm.\n\nI showed them how to operate the motor and how to kick it up so they could pull the 'dink' onto the sand. They grabbed some suntan oil and put some wine coolers in a little thermal bag, jumped in the boat and headed for shore. I watched them all the way over and was amazed at how well they handled the boat. Kelly seemed to pick up things after only one explanation. She kind of reminded me of a Tom-Boy type; the kind that grow up with a bunch of brothers or a father who is a mechanic or something, and they pick up the guy-stuff by osmosis. The fact that she was beautiful as well made it seem like she was a movie character that was perfectly scripted by a writer with the power of the pen. Yet here she was, on my boat, in my life. What the fuck? How is this possible? I shook my head and tried to concentrate on my chores. \n\nI looked over at them occasionally as I worked around the boat. They were simply relaxing in the sun, enjoying the small waves on the beach. I saw them one time walking along the sand bending down every once in a while to look at something; probably a shell or something. They both had on bikinis and looked like they were models on location for a photo shoot. I half expected to see a team of hair and make up artists, a photog, and a bunch of guys standing around holding those reflectors, scurrying around them. \n\nPart of the daily ritual of life on a sailboat is running the engine for a couple of hours. The engine drives a generator to recharge the batteries, which are used power the radio, GPS, and other instruments. It also runs a compressor to chill down the icebox and, as kind of a free benefit, heats up a fresh water tank so you can get a hot shower if you want it. Kind of contradicts the \"stink\" part of the sailor's creed but it feels good when you need it.\n\nAfter working on deck for a bit, I decided to take advantage of the shower and clean myself up. I had worked up quite a sweat and was still rather spunky after the 'workout' I had last night. The girls must have come back while I was lathered up - the running water and the engine noise masking their return. \n\n\"There you are!\" I looked up to see Kelly poking her head in the door to the head. \"You're taking a shower? I thought that was cheating!\"\n\n\"Hey!\" I was startled and caught off guard. My first reaction was to turn away. It's not like there's an actual shower stall with a curtain or something. The head is so small that the whole thing just doubles as a shower. You grab the shower head off the wall and hose yourself down right next to the toilet and sink. I quickly realized that there was no point in being modest after what had already transpired. \n\n\"It's just an excuse for when you do stink. We don't have to stink if we don't need to.\"\n\n\"Oh thank god. I thought I was going to have to be smelly all week. \"\n\nYou don't know the meaning of smelly, I said to myself.\n\nKelly pulled her head back, \"Kim! Shower time,\" and stepped back in. \n\nOh man. Here we go. \n\nNow, despite the size of this boat, the head - the bathroom/shower combo room - is quite small. It's barely big enough for one person and now it was considerably tighter. Kelly was still wearing her bikini and she was still oiled up from her time sunning on the beach. \n\n\"Kind of cramped in here, huh? You don't mind if we join you do you? Might as well save water right?\"\n\n\"Um, yeah. Good thinking.\" My dick was starting to make it even more crowded in here. \n\nKelly looked down at my stiffening cock and reached down and stroked it. \"You're probably pretty crusty after last night. You need some help getting cleaned up?\" She giggled and looked up at me with a smile and a wink. She found the soap dispenser on the wall and squirted some in her hand and went back to work on my dick. \n\n\"Is this where the party is?\" Kim opened the door, looked at us pressed together, and stepped in. This pushed Kelly into me and drove my cock up against her belly. Of course Kim, seemingly always ready for anything, was already buck naked. She grabbed a squirt of soap and reached around Kelly and started washing my back. She ran her hands down my back to my ass and slipped one hand down my crack grazing a finger along my asshole. Oh fuck.\n\nShe squatted down and brought her left hand back around and started lathering up Kelly's ass. Kelly was busy stroking my cock and licking my nipples when she gave a little \"Uhhh\" and pressed into me a little harder. Kim slid her hand between Kelly's legs and lathered my balls. So Kim had one hand around the back of me, running a soapy finger back and forth over my asshole, the other hand coming from the front, through Kelly's legs, foaming up my balls and fingering Kelly around the strip of her thong, with her head presumably smashed up against Kelly's ass. Jesus Christ.\n\nAll right, enough of this. I'm all for girls who take charge in bed but it's time to do some fucking. I grabbed Kelly by the waist and hoisted her up onto the sink top and wedged myself between her legs. I reached down, pulled her suit aside and put the head of my cock at the edge of her cunt. I looked into her eyes and she looked at me. I paused and grabbed the back of her head to pull it closer to me so our noses are almost touching. My eyes say \"Yeah, I'm gonna pound you,\" and I drive my cock into her.\n\n\"Ohh fuuuck,\" Kelly moans as I practically split her in two. I leave my cock buried to the hilt and pull her mouth to mine and drive my tongue into it like I just did with my cock in her cunt. I can feel her cunt pulsing on my cock and then her body tenses and shutters. She opens her mouth around my tongue and half moans, half screams as her body continues to convulse. She wraps her arms around me and pulls me in tighter and moans again. The thought that I made her come with just one thrust and the feeling of her cunt still pulsing on my cock is threatening to push me over the edge. I force that thought out of my mind. I'm going to well and truly fuck this chick damn it. ",
        "As I slowly pull back from being smashed up against her, Kim's head slips under my arm and she starts licking Kelly's right breast and nipple. She witnessed Kelly's almost instant orgasm. \"Jesus Brad. What did you do to her?\"\n\nI pull her head back, hold my lips just barely touching hers, and look into her eyes. I start thrusting slowly and smoothly into her, grabbing a handful of hair for a better hold on her head. She opens her mouth and tries to move closer to me to kiss me but I hold her head back; keeping my mouth millimeters away. Our hot breaths are mixing as we breathe each other. I feel Kim's hand bump into my cock as she reaches down to Kelly's cunt. She grabs my cock as it slides out and then moves back to Kelly's clit as it goes back in. Kelly moans again. She's looking into my eyes as I, we, fuck her. \n\nKim, on my left side, plays with Kelly's cunt with her left hand and reaches around behind me. She slides her right hand down my ass crack and slides her fingers over my asshole and down to my balls. She cups my balls and grabs my shaft as it comes out of Kelly. My cock is coated with Kelly's juice, which Kim picks up on her hand and then transfers to my balls as my cock drives back in. This continues and Kim gets my balls totally slicked up. On one thrust, I feel Kim's hand slide off my cock as it slides in, and I can tell that Kim was now playing with the slime that was oozing down to Kelly's asshole. \n\nKelly's eyes widen and she lets out another guttural groan. From her reaction and the feel of my cock and balls sliding along Kim's lower arm, I'm pretty sure that Kim is inserting one or more fingers into Kelly's ass. Kelly starts breathing harder still and I can feel her cunt pulsing as she builds to another orgasm. She starts undulating; slowly at first but steadily building. Kim grabs my cock with her left hand to load it up with more of Kelly's spunk and goes back after her clit even faster. I continue stroking in and out at the same pace as I started I can tell Kelly wants me to pump faster but I hold back which drives her even more insane. All of a sudden she starts bucking uncontrollably. I jamb my tongue in her mouth but she has to pull away because she is breathing so hard. Her orgasms come in continual waves now and she is thrashing about as I hold her head with one hand while the other is around her back. \n\n\"Uhhhh. God...I...stop...can't...stop...take...any...uhhh!\" she manages to get out in gasps. God. I thought last night was the hottest thing I'd ever experienced but this was even hotter. \n\nSomehow, despite fucking the shit out of this girl and having Kim playing with my ass as I did, I hadn't come yet. Kelly was so over stimulated at this point that Kim and I pulled out and let her come down. She basically collapsed in the corner of the sink top. \n\nKim moved over to between Kelly's splayed legs, \"You okay Kell?\"\n\nKelly's breathing had slowed a little bit. \"Yeah...God...\"\n\nWhen Kim had moved over to Kelly, she had wedged herself in front of me and now my cock was resting on her ass. She looked back at me and started slowly sliding her ass up and down my shaft that was still slick from Kelly's cunt. I didn't need any more prompting so on the next \"up slide\", I bent my knees a little and slid into her cunt. \n\n\"Oh fuck,\" Kim moaned as my balls rammed up against her. She bent forward a little more to give me a better angle, which pushed her face down to Kelly's tits.\n\nI looked up from the view of my cock disappearing into Kim's cunt to see Kelly looking at me. I started slowly sliding in and out of Kim while looking into Kelly's eyes. As Kim was licking and sucking her breasts, I saw her hand move in front of her and, by the look on Kelly's face, start to play with her cunt. I continued to stare straight into Kelly's eyes as I moved in and out of Kim. She struggled to maintain eye contact as Kim licked, sucked, and fingered her. My thrusting was slowly gaining speed but I continued to focus on Kelly. We were so connected through our eyes that it was almost like I was fucking Kelly through Kim. As I thrust harder and harder, Kim could barely keep her mouth on Kelly's nipples and just focused on her cunt. Kelly would roll here eyes back or close them every once in a while but each time she opened, I was there, looking straight into her. \n\nI was getting really close to coming. I was desperately trying to focus all my lust at Kelly and trying not to think about the fact that I was actually in a threesome and fucking someone else basically at the same time. \n\nIt wasn't working...\n\nLooking at Kelly though, and hearing Kim moaning and panting, I was thinking that the timing might just work out. I grabbed Kim's hips and started slamming her onto my cock. I don't understand how normally, the slightest hit in the balls will cause excruciating pain but slamming those same balls against the cunt of a woman while you are fucking the crap out of her, causes no pain. How the hell does that work?\n\nI'm not really sure why that question came to mind just then but I pushed it aside and kept fucking and slamming. \n\nKim had to hold on to the counter top with both hands now. She let out little grunts in time with each thrust. \"Uhh. Uhh. Fuck me. Yeah. Oh god. I'm coming. Uhhh, fuckkkkk!\"\n\nThe sound of Kim coming apparently sent Kelly over the edge as she started moaning and bucking back and forth. The combination of those two coming did it for me as well. I absolutely pummeled my cock into Kim and exploded into her. I kept thrusting and coming into her for what seemed like an eternity - all the while, locked onto Kelly's eyes. Super hot.\n\nAfter my last spurt, I slid out of Kim and leaned up against the wall trying to catch my breath. Kim moved over and sat down on the toilet seat lid and pretty much collapsed against the sink top and Kelly's draped leg. \n\n\"Jesus Christ Brad.\" Kim looked up at me with her mouth open, still breathing hard. \"You fucked the shit out of me.\" \n\nBetween breaths I grin, \"I know.\" I looked over at Kelly. She was leaning back against the wall, gazing at me with a strange kind of look. It was an odd mix of exhausted pleasure and \"what the hell did that just mean\" kind of look. At least that's how I interpreted it. She didn't say anything. \n\n\"That was so hot,\" Kim said as she looked over at Kelly. She followed her eyes over to me and then back to Kelly. \"You two okay?\" \n\nI didn't know what Kelly was thinking but the silence felt awkward. \"I'm starting to think this was a big mistake. You girls are going to kill me. Hot? That was surface of the Sun.\"\n\nAs I said that I realized that it was about 150 degrees in this tiny little room and I was drenched with sweat. \"Last one in the pool is a rotten egg!\" I pulled open the door and scrambled up the companionway to the cockpit and onto the swim platform. I looked around to see if anyone on any of the other boats was looking - not that I cared - and jumped in. \n\nThe ocean water was like bath water but still much cooler than my boiling skin and felt wonderful. I came to the surface and turned to the boat to see both girls climbing onto the swim platform. With a shrug of their shoulders, they both jumped in. \n\n\"Oh god, this is wonderful,\" Kelly said as she came to the surface and wiped her hair from her eyes. \n\n\"I love to skinny dip!\" Kim was swimming in circles around us. \n\nWe splashed around for a little while and got a few curious looks from people on other boats. They were far enough away that they couldn't really tell that we were naked - as if we cared anyway. It was kind of weird though. We didn't talk about what had just happened. It was like we had just finished having lunch together instead of just fucking our brains out. \n\nLunch. Yeah lunch. \"Is anybody else starving?\"\n\nThe girls both noted that they were starving so we headed for the boat and the swim platform. Being the gentleman that I am, I allowed the ladies to board the boat first. Kelly hung onto me as Kim climbed up the ladder first. She grabbed my cock as I watched Kim step onto the platform. \n\n\"If I had a cock, she would make me hard too,\" she whispered in my ear. \n\nI turned to her and whispered in her ear, \"You should see how hard I'm going to be after I watch you get on board.\" I moved my mouth around to hers and kissed her deeply. She could feel my cock get harder still and she gave it another squeeze. \n\nShe opened her mouth around my probing tongue and gasped, \"Lunch remember?\"\n\nI licked her tongue a few more times and then reluctantly pulled out. \"Oh yeah.\"\n\nShe let go of me - both hands - and climbed up the ladder. The look of her, with the water cascading off her body, the curves of her breasts and ass, the sunlight glinting off her skin - Fuck. \n\nNow I've done it. I have a full raging hard on and I'm going to have to climb up the ladder and onto the swim platform in front of the two girls. They are grinning ear to ear, realizing the predicament I'm in and taking joy in making me pay for the peek I took of them. Oh well.\n\n\"Wow Brad. That's quite a recovery!\" Kim was hamming it up. \"Are we having tube steak for lunch?\" She cracked up at her own joke and Kelly started laughing too.\n\n\"You guys can have tube steak if you want. I was thinking about having some tacos.\" Two can play this game babe.\n\nIt took a second for Kim to realize what I was saying but once she did, \"I'm down with that.\"\n\nShe took Kelly's hand and led her into cockpit, pushing her down onto her back on the cushions. She swung her leg over Kelly's head straddling her, face down towards Kelly's bush. Kim flicked her tongue lightly over Kelly's slit and pulled her legs apart to get better access. From my position, still mesmerized on the swim platform, I saw Kelly lift her head up and slide her tongue along Kim's pussy. Kim lowered her cunt down onto Kelly's face and started grinding with Kelly lapping hungrily away. \n\nKim raised her head and looked over at me, \"Where's the tube steak bucko?\"\n\nI jolted out of my trance and made my way over to the two girls. \n\n\"Mmm, I'd like some special sauce on my hotdog.\" She grabbed my cock and pulled me over between Kelly's legs and by her mouth. She rubbed the head of my cock up and down along Kelly's cunt, getting it slippery with the mixture of her spit and Kelly's juices. \"Stick it in. I want to lick her off of you.\"\n\nOh fuck. I guess everyone has some sort of fetish or something that really turns them on. For me, a cock going from pussy to mouth was it. Kim positioned my dick right at the entrance to Kelly's cunt and then reached around my ass and shoved me in. I heard Kelly let out a little moan as I plunged in and I think I let one out myself. \n\n\"Mmm, yeah. Get that cock all slicked up for me.\"\n\nOk, pussy to mouth plus slut talk. Yeah, that's my fetish thing. Fuck.\n\nI stroked a few times. Or rather, Kim had me stroke a few times, and then she brought her hand back around, grabbed my cock as it came out of Kelly and swallowed it into her mouth. She gave a few sucks and then pulled it out and proceeded to lick all around the shaft and head. As she licked the underside of it, she looked up at me. Yeah, that's hot.\n\nKim had a few more licks and then plunged my cock back into Kelly to pick up another load of slippery stuff. A few strokes and it was back in her mouth - and pretty much all over her face. She lifted my cock up to lick the underside and then turned and licked down Kelly's dripping cunt as well. \n\n\"You want some steak Kell?\" She lifted off of Kelly's face for the answer.\n\nKelly was trying to catch her breath after having Kim's cunt covering her nose and mouth. \"Huh?...Yeah...No...Oh God, just get his dick back inside me. You're killing me!\" she said between breaths.\n\nKim slicked up one hand and then reached around my ass again and started rubbing my balls. I jammed my cock back into Kelly and started pumping. Kim put her head down on Kelly's abdomen with her face millimeters from my thrusting cock. She opened her mouth and looked up at me. Oh Fuck. \n\nI pulled out of Kelly and slid my cock right into Kim's waiting mouth. Fuck. Fuck. Fuck. \n\nThe mixture of cunt juice and spit was making an impossibly slippery substance that was driving me insane. \n\nI pulled out of Kim's mouth and let my cock slide down along Kelly's cunt, past her clit and down to her pulsing hole. One thrust, then I pulled out and back into Kim's mouth. One lick and back to Kelly's cunt. I started to get a rhythm going as I alternated between pussy and mouth. \n\nKelly is now moaning loudly with each pump into her and Kim is going gonzo with her tongue and her hand on my balls. The feeling on my cock and balls was intense but when I really took a second to *think* about the situation and what the fuck was happening, that was all she wrote. I felt it start in my toes like it did last night and build up my legs, course through my balls and bam! I let loose like a fire hose in Kelly's cunt, \"Ahhh, fuuuuck!\"\n\nKim whips my cock out of Kelly and into her mouth and I shoot two or three times in there before she puts me back into Kelly. Oh my god. That starts a new round of spurting that I didn't know I could even do. Motherfuck.\n\nI gradually slow down my thrusting into Kelly's cunt and Kim pulls my softening dick out. She puts me back into her mouth for one final cleaning and then licks up some of the cum that is oozing from Kelly. Jesus Christ, this girl is crazy!\n\nKim lifts off of Kelly's face but Kelly just lies there exhausted and spent. I flop down onto the cockpit cushions, spent as well. \n\n\"Jesus,\" I say as blood begins to flow in my legs again. \n\nKim swings her head around to face Kelly. \"You okay girlfriend?\"\n\n\"No. You are such a slut!\"\n\n\"I know. It's fun isn't it?\"\n\nKelly lightly slapped Kim on the arm, \"Shit Kim.\" \n\nI could see Kelly was smiling, obviously driven past her normal boundaries by the inhibitions of Kim along with just the sheer pleasure of it. \"If my mother only knew what I was doing...\"\n\nBoth girls laughed and Kelly raised herself up into a reclining position against the cockpit edge. Again, it felt a little weird now that the sex was done - us three just sitting there naked with sex pretty much dripping off of the girls. At the same time though, it felt good. It felt good to be this uninhibited, this unconcerned with anything else. Yeah, this is pretty fucking good. \n\nAs the salt water dries on you, it gets pretty sticky so I got up and headed back to the swim platform to rinse off with the hand held wand that is stowed there. The girls followed suit and rinsed a little more than just salt water off of each other as I moved forward to the companionway. I looked back at them. Fuck. They weren't trying to be sexy but it was hot nonetheless. I tore my eyes away and headed below to put some shorts on and make some sandwiches. Lunch. Yeah, that's what started this little episode. \n\nThe girls came down and went into the port cabin to put some clothes on and I took the sandies and beer up on deck. A few minutes later, the girls came up, dressed in their bikinis. We cracked open the beers and just sat in the cockpit relaxing, recovering, basking in the splendor of being in the tropics, on a boat, at anchor, in a cove. \n\nWe didn't really talk. It was one of those times when it just felt right to take things in as opposed to sending noise out. We took in the sun glinting off the water, the gentle swinging of the boat on the anchor as the warm breeze nudges it back and forth. I cracked another beer after I finished my sandwich and leaned back against the back of the cockpit rail. Kelly looked over at me, grabbed another beer and came over. \"Is there room for me?\"\n\nShe sat down next to me and leaned back into the crook of my arm. God she felt good. Her skin was so smooth and soft. And of course, she had that smell that drove me insane. It was in her hair too and it would blow into my face and redouble the intoxicating effect. \n\nNormally, this would start my cock throbbing again but this time, it produced a different feeling. It's hard to describe it really and it was something I don't think I had ever felt before. It was like an intense feeling of being at peace. Like right then, everything was perfect, like the way it should be at a level that I'd never known. \n\nWhat the hell man. Snap out of it. These girls are pretty much fulfilling all your fantasies so no shit you are going to feel like this. What do you expect?\n\nI don't know man. There's something else going on here. Yeah, the sex is mind blowing but there is something cooking just below the surface. Can this be what it's like to really fall in love? Have all the other times been fake? \n\nEveryone has these little conversations with themselves right?\n\nSpent from two rounds of sex and with the slight buzz of a few beers, I drifted off to sleep with the girl of my dreams in my arms."
    ],
    "authorname": "smugmug",
    "tags": [
        "sailing",
        "boat",
        "threesome"
    ],
    "category": "Group Sex",
    "url": "https://www.literotica.com/s/the-mystic-adventure-ch-02"
}