{
    "title": "Joined by the Night Ch. 02",
    "pages": [
        "\"No,\" she moaned, her head twisting against the satin covered pillow. \"Please, let me go. I don't want this,\" she keened, her voice rising as panic and fear twisted inside of her. \"I don't want you.\"\n\n\"Hush, my darling,\" he breathed, coming to sit down next to her on the soft pallet, his fingers tickling across the white silk that covered her sumptuous figure. \"You will want me, you will beg to be with me before we're through,\" he said softly.\n\nShe felt the light pressure of his fingers trail across her nipple, felt it grow hard, budding under the silk that felt as another caress to her skin. It prickled with sensation as if shot with some sort of electrical charge, the current running through her and into her groin, sizzling with heat and making her grow wet against her will. \"No,\" she moaned again. \"No, no, no.\" Her head tossed upon the pillow, her body squirmed, trying to get away from him. \n\n\"Why do you fight me? You know you want this as much as I. You crave my touch, my hands upon your soft skin, giving you pleasure. Why deny us both what we both want so badly?\" He slid down further until he was lying beside her, his lips brushing against her cheek.\n\n\"I-I don't. I can't want you. I d-don't even know you,\" she cried. She felt his fingers on her and then a tingling pain. Looking down, she watched as his nails carved slits into the thin white silk, gasping as one nail sliced into her flesh below the silk, her blood blossoming like a bright red rose against the white. \"Stop!\"\n\nHe lifted his hand to his lips, licking the small smudge of blood off of his nail, his eyes seeming to glow with the taste of the metallic fluid. His handsome visage wavered for just a moment, showing it for the fa\u00e7ade it truly was as fangs protruded from twisted lips, scarred flesh covering his rancid face His eyes were bloodshot and bulging, his head misshapen. \n\n\"What are you?\" she screamed, closing her eyes as thoughts of madness and demons flooded her mind.\n\n\"I am nothing but what you seek, Brianna. I am love and kindness, understanding and sweetness.\" He pushed the hair from her face, his eyes once more blue and sexy, his skin clear, his lips lush and firm. \"I am the man you will grow to love.\"\n\n\"No, I don't love you. I won't. I loved Jeff.\" She fought with the bindings that had her bound to the bed, almost screaming as they didn't give.\n\nHe lifted a hand, bringing to her lips a succulent red strawberry. \"Take a bite,\" he whispered against her cheek. \"You can't resist the smell, can you?\"\n\nHer eyes closed once more, a moan of need coming from her lips. \"No, I want it,\" she whimpered. \n\nHe fed her the fruit, watching intently as she bit into it, sweet red juice coating her lips like the purest of gloss, shining them a glistening pink. Then his tongue came out, stroking over her sweetness, enhanced by the taste of the berry. \"That's it,\" he whispered as she tried to kiss him. \"Surrender.\"\n\n\"What do you want from me?\" She writhed against the bonds, pressing up against his body, wanting him so badly.\n\nHe smiled, the blue of his eyes shining down upon her, admiring the picture of abject misery and need she made under him. \"I want you, my love. I want all of you, your body,\" he whispered, stroking his hands over her and delving in the ripped slits in the silk. \"Your mind.\" He kissed her forehead, letting his tongue trace over her eyebrow and down . \"Your soul,\" he said as he shifted over her, his hand grasping the front of the gown and tearing it from her, his lips buried in the skin between her breasts. \"Our baby.\" \n\n\"B-baby?!\" she exclaimed, even as his mouth moved to the tip of her breast, his tongue lapping at her responsive nipple. \"I don't want to get pregnant.\"\n\n\"What you want doesn't matter,\" he said cruelly. \"What I want is what is important. You will submit in due time and then we shall be happy together. It has been foretold.\" His hand moved upon her skin, sliding over her soft stomach, ripples of pleasure following in his wake. She cried out as he touched her thighs, her legs parting with such ease even as she fought to hold them closed.\n\n\"This is a dream,\" she cried, tears of terror, of passion and desperate need spilling from her eyes. \"You are nothing more than a nightmare.\"\n\nFingers delved between her thighs, playing in the fluidity of her desire, laughing as he pushed easily inside of her. \"I'd say more of a wet dream,\" he quipped, rising up and pressing a kiss to her nose. \"You are so delightful, Brianna. Since you give me so much joy and pleasure, let me do this for you.\" He moved lower before she could speak and she felt the thickness of his tongue.\n\nIt swiped at the pink flesh between her legs, licking at the drops of her arousal with a satisfied moan. It was electric, every stroke made her arch up against him, every touch of his tongue upon her clit drove her higher, taking her from plateau to plateau of pleasure until she shuddered delicately against him, her cries ringing in the air above them.\n\n\"Yes,\" he groaned, moving up her body, his thick and rampant cock rubbing along the slender curve of her leg. \"That was wonderful, my love. Now, accept me, all of me.\" He grabbed her ankles, sliding her legs up his arms until she was caught at his elbows and bent almost in two. The head of his shaft was swollen, angry looking. It pulsed against her wet slit, delving into the pinkness of her pussy with little regard for the pitiful cries that escaped her lips.\n\n\"Please don't,\" she moaned, feeling him stab at her with his blunt, rounded head. \"Please, I don't want to get pregnant.\"\n\n\"Yes,\" he groaned, pushing inside of her. \"You are ripe. You're ready, Brianna. You're mine.\"\n\nHis chest pressed her knees down toward her breasts, letting him in deeper. She could feel him, feel every ridge and vein of his erection as it slid inside her creamy folds. The same tension that had burst earlier began to coil deep within her as he moved over her. Hard, almost punishing thrusts slammed against her, harsh friction drew her deeper into the trailing web of desire that he wrapped brutally around her.\n\nBrianna grabbed the restraints in her fists, pulling on them with a strength born of desperation. She moved under him, needy and wanting, begging for the pleasure he could bring. Whimpers left her mouth with every pummeling stroke of his body, pleas filled the air as he pulled away, moving until just the tip of his thick cock was inside of her. Then he'd slam back inside, over and over until she could stand it no longer.\n\n\"H-help me,\" she cried, the desire that slammed through her as sharp as talons. \"P-please!\" Sobs shook her body as she arched and writhed under him, her breasts rubbing against the heated wall of his chest, her hips undulating up against him, begging him to make her come.\n\n\"Yes,\" he growled, his voice thick, deep, sounding of the evil that blackened his soul. \"Yes, Brianna. Fuck me too.\"\n\nShe cried out as the pleasure started, a shattering sense of heat inside her bruised womb that grew until it covered her with tendrils of ecstasy. Her thighs shook, her hands dug into the sheets, tearing at the soft fabric. Her eyes rolled into the back of her head as the unbelievable darkness took her. She couldn't breathe, she couldn't speak as her body convulsed, the muscles surrounding his thickness fluttering in a madness of rapturous sensations.\n\nAbove her, he gritted his teeth, his head thrown back, his grip on the glamour that covered his true form slipping once more. If she'd seen him, if she'd been aware on any level of what kind of entity had possessed her body, her horror would have overpowered her orgasm, leaving her drooling and insane.\n\nInstead, he poured the heated thickness of his potent seed into her convulsing womb, growling and snapping almost like a rabid dog would at the ecstasy he felt. His baby would grow here, for if she weren't pregnant now, she would be after the next time he took her. His son would nurse at her breasts, as he would too. Even after his child was born from her, he would want her. He could feel it. She was delicious.\n\nHis tongue lolled out of his mouth, touching her skin, tasting the salt of her sweat. He pulled from her body, slowly letting her legs down, slipping down further so that he lay between them. His chin rested upon her mound, feeling the downy softness of her curls against his once more handsome chin. \"Brianna,\" he whispered. \"Brianna, look at me.\"\n\nHer head turned to the side, her eyes closing tightly. A rosy blush rose from her breasts, filling her cheeks with color in the flickering lights of the candles. With a small moan, she shook her head, defiant even after what he'd done to her.\n\n\"Oh, I love your spirit, your will, it will be so sweet when you finally confess your true love to me.\" He slid down a bit further, his nostrils flaring as he inhaled the musky aroma of the mixture of their spending. His tongue, long and sinuous, slipped from between his lips, flicking against the overly sensitive flesh. He heard her moan and felt her try to close her legs, but his shoulders held them apart.\n\n\"No,\" she whimpered. \"Please, it's too much.\"\n\n\"Yes, if you do not look at me, I will make you come again and again until you do.\" He flattened his tongue, pressing it against her clit, moving it back and forth quickly until she gasped, her hands clawing at the restraints once more to try and pull her body away from his teasing tongue.\n\nHe laughed at her feeble efforts, easily holding her open under him, hearing the way her breathing changed, the almost desperate clasp of her thighs as they wrapped around his head. She no longer tried to get away, no, now she pushed against him, unable to stop as he took her up again, the pleasure pain-like in its intensity.\n\nThe slide down was long, her breathing ragged, her heart beating rapidly against his chest. She barely heard his words. She didn't notice the strangeness of them as he stroked a soft hand over her cheek, breathing against her shoulder, his finger tracing a pattern over the soft rise of her breast over and over.\n\n<center>******</center>\n\nBrianna woke, the sound of her alarm buzzing annoyingly in her ear. She sat up, slamming her hand on top of the alarm, staring groggily around the room. \"Oh,\" she hissed, her body sore, a strange pain coming from her chest. She looked down, staring in horror at her nakedness and the raised welt that decorated her breast.\n\n\"What is that?\" she cried, searching around her for the flannel pajamas she'd put on last night. \"Where are they?\"\n\nShe dug through the covers, pulling them off of her, staring at horror at the bruises that covered the insides of her thighs. It looked as if she'd been fucked and fucked hard. \"Why can't I remember?\" she whispered, her hands going into her hair, tugging at it as if she were going mad.\n\nA knock sounded upon the door to the hallway. It scared her and she shrieked, grabbing the blanket and holding it to her chin.\n\n\"Geez girl,\" Ryan said, opening the door quickly. \"I thought you were being murdered in here.\"\n\n\"W-why?\" she moaned, not really wanting to hear the answer but unable to stop herself from asking.\n\n\"I could hear your screams down the hall, though to tell you the truth, I thought you were having some kinky dream. It sounded pretty hot.\" He came over and sat on her bed, reaching out for her hand. \"What happened to your wrist?\"\n\n\"I don't know,\" she whispered. \"I don't know what is happening to me. I think I might be possessed.\"\n\n\"You aren't talking like Emily Rose possessed are you? You know that's just movie hype, right?\" Ryan moved a little closer, his eyes serious as he peered down at her.\n\n\"I...I'm not sure what to think now,\" she pulled her hand from his grasp. \"I about killed Matt yesterday after one of these nightmares. I lost my pajamas and now I woke up again, without clothes. I don't like this at all.\"\n\nRyan scooted even closer, his arms coming out and circling around her. He pulled her closer, holding her to him. She didn't struggle but she could hear a voice coming into her thoughts.\n\nTell him to let you go or I'll have to hurt him, it said.\n\n\"Oh God, oh God,\" she moaned. \"You've got to let me go.\"\n\n\"Why, doesn't it make you feel better?\" He stroked his hand down her naked back and then back up, staying away from doing anything that would make her uncomfortable.\n\n\"Yes. No. I don't know. You've just got to stop, please. He'll do something worse to you. Please...\" she wailed, finally struggling so that he let her go. She scooted to a corner of the bed, unwilling and unable to look at him anymore. \"Please, you've got to go.\"\n\n\"Bria...\" he began, then sighed heavily. \"I'll go, but I'll be close in case you need me. Whatever you're going through, I'm not going to let you go through it alone.\" He touched her ankle, watching as she pushed against his hand, almost kicking out at him. \"If you need me...\"\n\n\"I know,\" she answered shortly, glaring at the door pointedly. \"I have class and need to get dressed.\"\n\nRyan took the hint, slowly leaving the room, glancing back before he left the room, closing the door tightly behind him.\n\nBrianna threw off the covers, reaching into her drawers for the first clothes that she could find. There was only one thing that could help her. She had to get to him.\n\n<center>******</center>\n\n\"Father Joseph?\"\n\nHe heard the furtive voice and looked up from the sermon he was trying to craft, his eyes blinking as he made them focus upon something but his own cramped hand writing. \"Yes?\" he said. \"Brianna, is that you?\"\n\n\"Yes Father,\" Bria said, afraid to come any closer to the man. Her skin was burning, her heart thumping wildly even as she sat in a pew so far away from him.\n\n\"I'm so glad you've come,\" Father Joseph said, quickly putting away his pen and paper, sliding the uncompleted sermon into his bible and rising from the steps that led to the altar, slowly walked down the nave to her. \"Are you all right?\"\n\nBrianna raised haunted eyes to him, the look in them sending a cold chill through him. There was a scent about her today, one he hadn't noticed the day before when they'd met. But that could have been due to being outside at the time. Today though, he could smell it. It was familiar, like burnt cinnamon with a hint of decay underneath.\n\n\"Oh no,\" he whispered, feeling a surge of fear and a snickering of longing shoot through him. \"Who is he?\"\n\n\"I don't know,\" she cried. \"He hasn't told me his name.\"\n\n\"When does he come to you?\" Father Joseph slid down into a pew about three pews away from her. He couldn't come closer, the scent wound around him, calling to him in ways he hadn't been tempted in years.\n\n\"At night, in my dreams, he finds me. I go to bed fully dressed and wake naked, bruised, my wrists raw and chapped like they were bound. Father, why me? Why is he doing this to me?\" she sobbed, her hands coming up to cover her face. Her sleeves fell back, exposing her arms and the terrible ringed bruises around her wrists. \n\n\"Oh goodness,\" he sighed. \"Where else are you bruised, Brianna?\"\n\n\"M-my legs and...and here,\" she said, pulling down on one side of her blouse and her bra, exposing the top of her breast. The symbol was bright red, flaring as if it were throbbing with pain. He could see the raised welt, but not well enough to make out the pattern.\n\n\"Can I come closer,\" he asked her calmly though his heart raced at the thought of being closer to her, to that scent, to the signs that were on her body.\n\n\"It burns when you do,\" she whispered. After a slight hesitation, she nodded. \"I-I'll try.\"\n\nJoseph stood slowly, cautiously moving toward her. His nostrils flared as the scent grew stronger mixed with something else, something not so familiar. \"Did...did he have sex with you?\"\n\n\"In my dreams,\" she said, her voice taking on that sing-song quality that usually denoted shock. Her pretty eyes held a faraway look, as if she were seeing something in the past, something...anything that would take her from the here and now.\n\n\"Brianna!\" he shouted, and saw her snap back, her eyes filling with tears. \n\n\"He makes love to me while I sleep, Father. But I don't think he's human, I don't know what he is but he's not human.\" She held out a shaking hand. \"Please, I don't know where else to go...can't you help me?\"\n\nSliding into the pew in front of her, Joseph reached for her hand, drawing a hissing breath when her skin seemed to burn under his. He closed his eyes, saying a prayer of blessing, his brows furrowing as pain blossomed in his hands and arms.\n\n\"Oh,\" she cried. \"That feels...wonderful.\" She shivered, relief coursing through her almost as strong as an orgasm as the pain eased under his touch. \"Oh thank you,\" she cried, tears streaking down her cheeks.\n\n\"Listen to me, Brianna,\" Joseph said, opening his eyes and staring into her. \"You're in danger. If this man is who I think he is, your immortal soul is in danger. He wants to impregnate you, let you have his child so that he can be reborn to the world of man through your child. You can't let him do that.\"\n\n\"Who is he? Why does he want me? I...I'm nothing.\" \n\n\"His name is Caim, if I'm right about this,\" Joseph said, almost as if he were speaking to himself. \"You would be exactly who he would be looking for. Beauty, sweetness and a sadness that come from tragedy, he would sense all that about you.\" He nodded his head slowly, his thumb rubbing gently across the back of her hand. \"He seduces you, gives you pleasure, does he not?\"\n\n\"He does. I've never felt like that, the things that he does...the way he touches me...I've never known anything like it.\" She dropped her eyes from his, dipping her head down. \"I'm ashamed, I wanted him too. He touches me and I'll do anything to feel his touch, Father. Anything he wants, I'll give him.\"\n\n\"Has he cut you yet, drank of your blood?\"\n\nHer other hand came up, touching her stomach. She lifted her shirt, showing him the scratch that lined the smooth skin. \"He scratched me when he was taking off the nightgown. He...he licked the blood off his fingers.\"\n\n\"It's not enough,\" he murmured, staring at the tiny scratch. \"He didn't lick from the wound, did he?\"\n\n\"N-no. Why would he do that?\"\n\n\"Ritual,\" he said quietly, staring into her eyes. \"To possess, you must gain a part of that person into your body.\" His eyes moved past her, staring at one of the huge stained glass windows that surround the nave of the church. The sun shone brightly against the beautifully depicted scenes, splashing the bare wooden floors with pools of reds, blues, and greens.\n\n\"He's taken you, but he hasn't completed the ritual.\" His voice was as faraway as his eyes, quiet and thoughtful. \"Can you leave?\"\n\n\"Leave? School?\" she asked, confused by his sudden change in attitude.\n\n\"Yes. If you leave...he'd only find you,\" he finished with a disgusted sigh. \"We will have to do something Brianna, something to rid him of his unholy lust for you.\"\n\n\"But what?\"\n\n\"We can't let him take you again. If he does... well, he could accomplish the goal he has set for himself. We must protect you from that,\" he said, his blue eyes darkening, a look of pensive anger upon his almost pretty face. He ran his hand through his black hair, sighing heavily as he thought. \"Do you, perhaps, have a friend you can stay at until I can get permission to do what has to be done?\"\n\n\"I live with my friend. What she supposed to do, watch me sleep?\"\n\n\"Exactly that, Brianna. If she can watch you and then wake you when the dreams start, then perhaps we can keep him from finishing the ritual.\" He looked around the church frustrated. \"It takes forever to get anything backed by the church. We don't have that much time.\" He glanced down at her throat, his eyes dropping lower to the sign of this particular devil that was burned into her skin. It was a curved pentagram, drawn upside down, the star like extremities curled around into a chaotic blend of lines.",
        "It was apropos. Chaos was what Caim thrived upon. He lived for the screams and pain of those whose lives he ruined. \"Will your roommate help you?\"\n\n\"She doesn't believe in any of this. She thinks I'm just having some powerful wet dreams that are so realistic because I've been sexually anorexic since my boyfriend was killed.\" She lifted a shaking hand to her face, pushing back the long strands of her hair. \"She believes that my mind is playing with my body because I need to, in her words, get boinked.\"\n\n\"Is there anyone...\" Joseph trailed off, a slight blush coloring his cheeks.\n\n\"Anyone who would boink me?\" Brianna finished for him, almost laughing at how shy he sounded. \"I guess, but no one I would want to.\" Her eyes shot to his face and he could almost read the thoughts she was having.\n\n\"No, Brianna, you mustn't think that way. It's his influence. You wouldn't think like this if it weren't for what he was doing to you.\"\n\n\"But he is doing it, and you said I was in danger. What if...boinking...someone else will stop him from wanting me? You'd be safe. You wouldn't want a relationship or anything afterwards. I don't think you'd be too anxious to spread around rumors either.\" \n\n\"No, Brianna,\" Joseph repeated. \"No, I'm a priest, I've taken a vow of celibacy. I won't break my vows.\"\n\nBrianna snorted. \"Yeah, tell that to your altar boys.\"\n\nA second later it was as if she realized what she said, a horror filled expression transforming her face. Tears came from her eyes and she gripped his hand even tighter. \"I didn't mean that, Father. I really didn't.\"\n\n\"I know. I know a demon when it speaks to me, Brianna. The evil that is inside of you is strong, but you are stronger. You only have to believe in that and in yourself.\" He gripped her hand. \"Would you pray with me?\"\n\n\"Pray? Here? Now?\"\n\n\"Where could possibly be better and why not?\" he smiled back at her, indicating the church they sat in. \"Prayer can soothe a soul that is lost. It can raise up the holy and heal the sick. You believe in prayer and the power it holds, don't you?\"\n\n\"I...I just don't know. It's almost as if God has turned his back on me. He's taken everybody I loved away from me and left me with nothing.\" A tear streamed down her cheek, quickly followed by another. \"I haven't tried praying, but even being here in this church is so hard.\"\n\n\"It's going to be hard, the worthwhile things always are, Brianna.\" He rubbed a hand across his handsome face. \"Holy father,\" he said, reaching out and clasping one of her hand in both of his and bowing his head. \"We ask for your blessings on this child, one of your own who is being sorely tested in both faith and spirit. Show her the right path, lead her into the light and away from the darkness...\"\n\n\"Stop!\" Brianna screamed. \"My arms, they feel like they're on fire.\"\n\nJoseph stopped, reaching out to push up her sleeves, seeing the fine red rash that was steadily spreading up her arms even as he watched. \"My dear God in heaven,\" he exclaimed quietly. With a grimace, he dropped her hands, going to the Sacristy and pulling out the small first aid kit. It contained a salve made with hydrocortisone cream, which he grabbed and hurried back to her.\n\n\"This should help the burn,\" he said, holding up the tube.\n\n\"It's already too later, Father. It's not burning or itching any more. This Caim that you mentioned before, he has put his mark upon me.\" Her words were spoken with an unhappy resigned air that told Joseph more than anything else. She was giving up. She was going to let him take her, lose her life to the evil condemning her soul.\n\n\"No,\" he almost shouted, snapping her out of her pathos. His voice echoed in the quiet of the church, and she lifted her head, her eyes going wide.\n\n\"No,\" he said again, though his tone was gentler. \"You're giving up, Brianna. You're allowing him to take you, to forfeit your immortal soul to darkness. There is no greater tragedy in this world than that.\" He sat back in the same pew as before, watching as she began to squirm, her face flushing. \"You have to fight him and his hold over you. If not, it won't be just your soul in danger. It will be us all.\"\n\n\"Stop, stop saying that, stop talking to me as if I hold the key to the future of mankind in my hands. You can't expect me to believe that you really believe the stuff you're telling me.\" She closed her eyes, dropping her hands to her lap and refusing to look up at him.\n\n\"That's exactly what I'm telling you, Brianna. You stand between him and what he wants, your child. He won't let you raise it when it's born. He won't let you have it. He will come in the night and steal him away.\"\n\n\"Him?\"\n\n\"Yes, Brianna. Any child of Caim will be a him. You read in the bible about Cain and Abel? Cain and Caim are very close to the same person. We must do all we can to stop him. If you are ready to listen, I've been thinking of a way out of this position.\"\n\n\"Yes, anything, anything at all. I'm afraid to go to sleep,\" she sniffed.\n\n\"Then come closer, child and we shall see if we can outfox the devil.\" "
    ],
    "authorname": "Daniellekitten",
    "tags": [],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/joined-by-the-night-ch-02"
}