{
    "title": "Beneath the Ice Ch. 04",
    "pages": [
        "Alexei forced himself to leave Charlotte's bed some time in the middle of the night. Not because he wanted to. After the way she'd melted under his mouth and tongue, he'd wanted to stay and make her do it again and again. But they hadn't talked about him spending the night yet, and with Zoe two doors away, he didn't want to do anything to make Charlotte uncomfortable. Although, she had seemed pretty damn comfortable with his tongue inside her.\n\nStop. He swallowed hard and forced all thoughts of Charlotte out of his head. He did not need to be springing an erection moments before hitting the ice for practice.\n\nSo he had left her bed the night before, and returned in the morning as had become their usual routine. Zoe helped him with breakfast, Charlotte had blushed every time he'd looked at her, and a broad sensation of utter contentment had settled in the center of Alexei's chest before they'd both had to leave for work.\n\nNow, as he glided out onto the ice, he wondered if he'd gone too far with Charlotte the night before. Not that she hadn't been willing or anything like that, but every time he promised they'd talk, they didn't just talk. It was her fault. She was far too delectable for her own good. For his own good as well.\n\n\"You all right, Alexei?\" Tarik tapped his wide goalie stick against Alexei's shin pad as they stopped skating near one of the nets.\n\n\"Yeah.\" Alexei shrugged and blew out a breath. \"You have a girlfriend, Tarik?\"\n\nTarik snorted and shook his head, his black hair flopping over one eye. \"Had one when I was in San Jose, but she didn't want to move to a winter city, so that was that.\"\n\nAlexei frowned. \"She broke up with you because of that?\"\n\n\"So she said.\" Tarik shrugged. \"Whatever. Now I'm free to hook up whenever and wherever I want.\"\n\nSome guys on the team did seem to thrive on that sort of lifestyle. Alexei had never really been one of them, though he'd had his fair share of one-night stands over the years. Now, staring thirty in the face, he didn't want that. He wanted his two redheads and a lifetime of breakfasts and dinners and everything he'd been doing with Charlotte and Zoe for the past few weeks.\n\n\"You've been seeing someone, haven't you?\" Tarik asked, dropping down to start stretching, his big goalie pads widening under his body.\n\n\"Yeah.\" Alexei nodded. \"It's still new.\"\n\n\"Well, I hope it works out for you, man.\"\n\n\"Hope what works for who?\" Olle skidded to a stop before them, sending ice sprinkling over Alexei's skates.\n\nAlexei scowled and shook his foot in Olle's direction, making the other man snicker.\n\n\"Alexei was telling me about his woman. Or he was about to.\"\n\nOlle nodded. \"Joelle says she's great and that you would be lucky to have her.\"\n\nAlexei knew that already. In fact, he'd forgotten all about they way they'd met and how he'd hated the noise at first. How could he hate what had brought the girls into his life?\n\n\"She said Zoe is the sweetest kid, too.\"\n\n\"Hold up.\" Tarik rose to his feet, his eyes wide. \"She's a single mom?\"\n\nAlexei nodded. \"Zoe is her daughter.\"\n\nTarik whistled. \"Wow, man. Good on you if you can work it out. Not sure I'd want that kind of baggage in my life.\"\n\n\"What do you mean?\"\n\n\"I mean, what about the girl's dad? Isn't he in the picture? There's got to be some tension or jealousy that goes on there.\"\n\nAlexei shook his head. \"No. He's not around.\" He didn't know why. Another reason to really sit down for a talk with Charlotte. A real talk, not him ordering her to remain silent while he spent hours devouring her sweet--\n\nNo! Alexei gave his head a sharp shake and skated away from his teammates without another word. He needed to focus on skating and passing and scoring goals instead of Charlotte and the way she'd positively melted under his mouth.\n\nJesus, he was so hopeless.\n\nAfter practice, Alexei agreed to go to Olle and Joelle's for lunch. He could use some advice and he knew Charlotte was still at work so there was no reason to rush home.\n\nJoelle was happy to host him for the hour or so he spent with them, serving up an easy lunch of chicken salad and fresh fruit. They all sat and watched the snow falling as they drank coffee after and Alexei couldn't help worrying about Charlotte driving in the snow.\n\n\"She's lived here for years, Alexei.\" Joelle grinned when he confessed the reason for his worried expression. \"I'm sure she can drive in all the weather Chicago gets.\"\n\n\"Leave him be.\" Olle leaned over to kiss his wife's head. \"I worry the same about you.\"\n\n\"All right.\" Joelle patted his cheek and shoved him away. \"Get off. I'm glad things are going so well with you and Charlotte, Alexei. She's wonderful.\"\n\nCharlotte was perfect. So was Zoe. \"I worry about her and Zoe all the time.\"\n\n\"That's normal.\" Joelle gave him a sympathetic look. \"But I don't think you're really worried about them driving in snow.\"\n\nAlexei blew out a breath and shook his head. \"No. It's everything. And nothing.\" He rubbed one eyebrow and let out a light laugh. \"I don't make any sense, do I?\"\n\nOlle was shaking his head but Joelle grinned. \"Yes, you do. It's what happens when you start to care for someone. Or two someones, in your case.\"\n\n\"I want to do everything for them.\"\n\n\"I bet.\" Joelle nodded. \"Are you worried that Charlotte wouldn't let you?\"\n\nHe started to disagree but then nodded. \"Yeah. Sort of. Charlotte has been on her own for a long time. I don't know how she'd react if I just started buying her things.\"\n\n\"Like what?\" Olle leaned forward, a curious look on his face. \"Like jewelry?\"\n\n\"No.\" Alexei frowned. \"Charlotte doesn't wear anything. Neither does Zoe. More like, if I were to pay for Zoe to play sports, or offer to buy clothes for them. Things like that.\"\n\nJoelle's brow wrinkled as she listened. \"I don't know, Alexei. Charlotte struck me as fairly reasonable and level-headed. I don't think she'd fly off the handle if you asked. She might not like it if you go over her head for anything.\"\n\nAlexei nodded, his mind working along the same lines. \"We haven't talked about it much.\"\n\n\"Well, it's still new, for both of you.\" Joelle smiled and reached over to pat his hand. \"And dating a single mother is not the same as dating anyone else.\"\n\n\"Yes.\" Alexei scowled. \"Tarik says there's too much baggage.\"\n\n\"Baggage? Is it complicated with Zoe's father or something?\"\n\nHe shrugged. Again, he didn't know. He really needed to get his libido under control so he could have an adult conversation with Charlotte.\n\nAs if sensing the direction of his thoughts, Olle snorted and gave him a knowing smirk. \"So talk to her, man.\"\n\n\"Yes, I know.\" He did know. The trouble was, every time he got Charlotte alone, talking was the last thing on his mind. But he was a grown man and he could figure it out.\n\n\"Oh, when you see her later, invite her and Zoe to Thanksgiving here.\" Joelle sipped her coffee. \"If they don't already have somewhere else to go, that is.\"\n\n\"I don't think so.\" Alexei wasn't sure though. It was possible she had a date for that with her friends from the store, but he would ask, as Joelle suggested. He'd love to show up to something with Charlotte on his arm. Yes, he'd bring them for sure.\n\n\u2500\u2500\u2500\u2500\u2500\n\nCharlotte knew Alexei meant business when he arrived at their apartment that night. He didn't smile, even though he wasn't rude at all, but he didn't greet Charlotte with a kiss or touch of any kind. For a little while, Charlotte was afraid he was going to call everything off, but then she caught him looking at her a few times, and was reassured by the barely banked heat she saw in his dark eyes.\n\nEventually they were alone -- in a way-- washing dishes while Zoe played in her room, quiet for once.\n\n\"How was your day?\" she asked.\n\nAlexei took the frying pan from her hand and started to dry it. \"It was all right. Practice went well. We have a new player from the minors.\"\n\n\"Really? Was someone injured?\"\n\nHe nodded. \"One of the defensemen. He'll be out a few weeks.\"\n\n\"Right.\" Charlotte scrubbed another pan before setting it in the rack on the counter. \"And you had lunch with Olle and Joelle?\"\n\n\"Yes.\" He turned to face her fully for a moment. \"Before I forget, they have invited you and Zoe for Thanksgiving dinner.\"\n\n\"Oh.\" Charlotte blinked, her hands stopping in the water as she considered. She usually went to Sarah's, even though Sarah hadn't brought it up yet this year. \"I suppose we could. Won't there be a lot of people there?\"\n\n\"A few.\" Alexei nodded and started drying again. \"But they have a large house.\"\n\n\"And you don't play that day?\"\n\n\"No, but we have games the day before and after.\"\n\n\"Okay.\" Charlotte nodded. \"Well, can I let you know? I think we will come but I want to talk to Sarah first. We usually spend Thanksgiving with them, if anyone.\"\n\n\"Sure.\"\n\nThey fell silent again as they worked, finishing the dishes. Zoe came out just as they finished up and asked for dessert.\n\n\"What would you like, zaya?\" Alexei turned to the fridge and looked inside. \"You have those cookies from yesterday still.\"\n\nZoe twisted her mouth to one side, considering and then nodded. \"Yeah. Cookies are good. And milk?\"\n\n\"Okay. And milk.\" Alexei ruffled her hair and poured her a cup of milk.\n\nCharlotte watched the entire exchange, her chest swelling with emotion. Would she ever get used to this?\n\n\"Are you okay?\" Alexei smiled as he sent Zoe off to the couch with her two cookies and cup of milk.\n\nCharlotte didn't overthink it. She put her arms around him and pressed her face to his chest. \"I'm more than okay.\"\n\nHis arms went around her, one warm hand circling in soothing rounds on her upper back. He pressed his mouth to her hair and inhaled, making Charlotte smile. They stayed that way for a while, until Zoe whined that they were ignoring her.\n\nThey all sat together on the couch and watched a few episodes of some animated show before Charlotte shuffled Zoe off to brush her teeth and change for bed. After Zoe was asleep, she rejoined Alexei on the couch, and he had his serious face on again.\n\n\"Can we talk?\"\n\nShe grinned as she sat next to him with a nod. \"Yes, of course. We can always talk.\" She loved talking to him as much as she loved 'talking' to him. From the look on his face now, he meant the former, which was fine.\n\n\"I know I was an ass before when I brought it up, but can I ask about Zoe's dad?\"\n\nCharlotte winced. \"Ah, yeah. I guess. We can talk about it, if you want.\"\n\nHis mouth pressed into a thin line. \"I'm sorry. Is it too much?\"\n\n\"No.\" Charlotte blew out a breath and leaned back on the couch. \"I get that you must be curious. Maybe even worried about having to deal with him. Am I right?\"\n\nHe hesitated but nodded once.\n\n\"Well, he's not around. That should be obvious by now.\" Charlotte fell silent for a minute as she considered how to explain the origin of her daughter. \"When I was in college, I dated a bit, went to a lot of parties, and had fun.\"\n\n\"Sure. Most college kids do the same.\"\n\nShe smiled and nodded. \"Yeah, and I didn't get crazy. I was smart, always got rides with sober friends, never went anywhere alone, and even dating, it was more like a lot of group dates, always with lots of people around.\"\n\nShifting, Charlotte looked down her hands, plucking at a loose thread on her pants. \"Well, at one party, I really hit it off with this guy. His name was Aidan. We talked for hours and then I went home with him. Or well, what I thought was his home.\"\n\nAlexei's expression darkened and Charlotte realized how that must sound.\n\nShe grasped his hand and squeezed, smiling at him. \"I don't mean he took me somewhere shady. He wasn't actually from the city. He was visiting and staying with a friend, and that's where we went.\"\n\n\"Okay.\" Alexei squeezed her hand back but remained silent, patient as he let her finish her story.\n\n\"So, we had some fun that night.\" Charlotte hated that her cheeks heated. \"We used protection, I swear. Then, I left in the morning before he woke up. I didn't want to be the one to get kicked out, because we both knew what it was. I actually ran into his friend, the one whose place we were at, as I left. He was nice, didn't make fun or anything, just asked if I needed to borrow cab fare or call for a ride or anything.\"\n\n\"That is nice.\"\n\n\"It was.\" Charlotte shrugged. \"I may have had my fun, I can't lie about that, but I was lucky that I never got taken advantage of, or never had any bad run-ins with real jerks or anything.\"\n\nShe fell silent as she considered. She had been lucky, even with all her well-meaning efforts to stay safe. \"Well, a few weeks later, I missed my period, and--\"\n\n\"And Zoe happened.\" Alexei smiled as he said her name and Charlotte couldn't help but smile with him.\n\nBoth their gazes strayed to the child's closed bedroom door.\n\n\"I wish I could say it was the easiest decision I made, to keep her.\" Charlotte sighed and shifted, wanting to get closer to Alexei but not sure if he was open to it at the moment. A second later, he tugged her into his arms, holding her head to his shoulder. She sighed again before continuing. \"But I was only nineteen. I was halfway through my freshman year. Who would decide having a kid then was a good idea?\"\n\n\"No one.\" Alexei's quiet voice rumbled under her cheek and she nodded. \"And your family?\"\n\n\"They weren't great. I told them over the phone and they said that we'd discuss it when I went home for the summer. By discuss it, they meant convince me to get rid of her.\"\n\n\"But you didn't want that.\" He didn't phrase it as a question.\n\n\"No. By the time I told them, I already knew. I was scared shitless but I knew I wanted to keep my child. No matter what.\" She paused and closed her eyes. \"Turned out, no matter what included losing my parents, my sister, my college education, and my home.\"\n\nAlexei muttered something in Russian before he pressed a kiss to the top of her head. \"And this... Aidan? What did he have to say when you told him?\"\n\n\"Well, that was the interesting part. I only knew his name, nothing about where he actually lived or what his number was. I went back to the apartment where his friend lived, and the guy remembered me. He gave me Aidan's number, thank goodness, and I called him right away.\"\n\n\"And?\"\n\nCharlotte rubbed her cheek on his shirt for a second, gathering her thoughts before continuing. \"He was a bit of a jerk about it, said there was no way of knowing he was the actual father.\"\n\nAlexei's hold tightened and he muttered some more, making Charlotte smile.\n\n\"To be fair, I was having a lot of fun that year. But, I knew it was him, because I hadn't gone out much around the same time and definitely hadn't hooked up with anyone else before or after for several weeks. Still, I understood where he was coming from.\n\n\"I used every bit of my savings to pay for a paternity test when the time came and then for a lawyer to draft an agreement in which Aidan agreed to give up all current and future parental rights. He didn't want to be a father and I didn't want him to be able to change his mind later, and disrupt Zoe's life.\"\n\nAlexei was silent as he listened, his lips brushing over her hair now and then.\n\n\"My family was less understanding when I told them my decision about everything. They said without the father's child support, how was I expected to live? Because they weren't going to give me a dime. They refused to let me live with them and refused to pay for college any longer.\" She shrugged one shoulder. \"That was their choice, but I can't lie, it hurt.\"\n\n\"Of course it did.\" Alexei sighed and squeezed his hold tighter for a second. \"They're your family.\"\n\n\"Yeah. Old news now. I always let them know where I've been living, and make sure they have my number, if they ever decide to reach out, but other than a once yearly call at Christmas, I don't talk to them. It's just me and Zoe, and honestly, I wouldn't trade it for the world.\"\n\nShe sat up and looked into Alexei's eyes, sure that her own expression was fierce. \"Sure, it's been hard. I had many days where I thought I'd made a huge mistake and ruined both mine and Zoe's life forever. I had to live in a women's shelter when I first came to Chicago after she was born, and it wasn't easy. None of it's been easy.\"\n\nAlexei's eyes were soft as he watched her. He lifted one hand to run his fingers through her hair. \"But you did it.\"\n\nShe nodded, her lower lip trembling. \"I did. I still am. So if you've asked me about all this because you think I'm going to start asking for money or--\"\n\nAlexei cut her off, pressing his fingers to her lips, his dark brows drawing together in a fierce scowl. \"I don't care if you ask for money or not. I didn't ask about your past because I think you have any expectations of me.\"\n\nShe frowned and he dropped his hand. \"So why were you asking? To find out if you want to deal with me and my past at all?\"\n\nHe shook his head and one corner of his mouth lifted. \"I don't care about your past. I wanted to know for Zoe's sake, mostly, and if we'd be dealing with visits to her biological father in the future.\"\n\nCharlotte swallowed hard and tried to think of something to say but she was stuck on his use of the word 'we'. And 'future'.\n\n\"There's nothing you could have told me that would make me not want you, Charlotte.\" He slid his hand around her neck and tugged her close enough that his next exhalation tickled her lips. \"You or Zoe. I want to be with you.\"\n\nCharlotte shivered, heat flooding her. \"So. You're my boyfriend?\"\n\nHe smiled then, those dimples popping out at last. \"Yes, and you're my woman, and Zoe is my girl.\" He paused and tilted his head one way, his fingers flexing on the back of her neck. \"If you want to be.\"\n\nHonesty, Charlotte. Be honest and don't assume anything. Charlotte let out a shaky breath and nodded once. \"Yes, Alexei. I would like that.\"\n\nHe kissed her then, light and quick. \"Good. Now, when is Zoe's birthday?\"\n\nCharlotte let out a breathless laugh at the sudden change in subject. \"December twelfth, she'll be four. And when is yours?\"\n\n\"My birthday is in January.\" He leaned closer to her, lifting his eyebrows. \"I'll be thirty.\"\n\nShe couldn't help it. A gasp of surprise escaped her. \"You're thirty?\"\n\n\"Almost. And you must be twenty-three?\"\n\n\"Twenty-four.\" Charlotte swallowed as she considered their age difference. But if he didn't care, then she'd convince herself that she didn't care either. \"But only just twenty-four. My birthday is in October.\"\n\n\"Missed it.\" Alexei pulled a face. \"Next year, we'll do something special.\"\n\n\"Next year?\"\n\nHe nodded. \"But for Zoe's birthday, we'll plan something fun.\"\n\n\"I don't usually do much. Make her favorite dinner and cake.\"\n\n\"There are lots of teammates who have kids. We could have a proper party. And Zoe must have friends at daycare.\"\n\nCharlotte nodded as she thought about it, reeling a little bit from all these sudden plans he was making. First Thanksgiving? Now Zoe's birthday? And hers, next year? She cleared her throat and pushed away from Alexei.\n\n\"Yeah. We, um, we could do that.\" She paced to the kitchen and opened the fridge, staring inside for a long minute before grabbing the jug of water. \"A birthday party. Sure. Maybe a few kids. I can handle that.\"\n\n\"Charlotte?\"\n\nShe turned to see Alexei standing at the end of the counter, a concerned expression on his face. \"Would you like some water? I'm thirsty. Are you thirsty?\" She turned away again, going to the cupboard with all her glasses.\n\nThere were quick footsteps behind her and then Alexei was reaching up, staying her hands as she reached for cups.\n\n\"Charlotte, what's wrong?\"\n\n\"Nothing's wrong. What could be wrong?\" She let out a laugh that was borderline hysterical. \"I mean, birthdays and Christmas and next year--\" Another laugh and she shook her head, burying her face in her hands. \"What could possibly be wrong with all that?\"",
        "\"Charlotte, look at me.\" Alexei's strong hands landed on her shoulders and turned her, tugging gently on her wrists until she lifted her face. \"I'm sorry if I went too far. We don't have to plan anything for Zoe's birthday. Or mine. Or yours.\"\n\n\"That's not it.\"\n\nAlexei blew out a breath and drew her into his arms, hugging her tight. \"Then what? Do you want to spend Thanksgiving with Sarah?\"\n\n\"No. I mean, yes, I've always done that, but that's not it.\"\n\n\"Then what?\"\n\nCharlotte sighed and pressed her hands to his chest until she could look him in the face. \"I just-- don't you think this is moving a little fast?\"\n\n\"Is it?\" He lifted one shoulder and shook his head. \"I don't think so. I want to be with you.\"\n\nHer heart skipped a beat and Charlotte bit her lip. At her continued silence, Alexei sighed and ran his hand over her head, smoothing the loose waves from her face.\n\n\"We can take a step back, if you want.\"\n\n\"What?\" Charlotte gaped at him. \"You want to break up with me now?\"\n\nHe chuckled and tugged her against his chest. \"Of course not. But you are obviously concerned about things and I don't want to push you. We can spend more time together, or less. Whatever you're comfortable with.\"\n\n\"I don't want to spend less time together.\" As she said the words, she realized how true they were. Why she'd freaked out a minute ago, she didn't know. Letting out a shaky breath, she put her arms around his middle and squeezed. As much as she could, anyway. The man was a slab of marble. All the muscles... she recalled how he'd looked that one day in the hall, and she could touch him now. Him and all his muscles.\n\n\"Okay. We will spend more time together then.\" He dropped a kiss on her head and took a step back. \"But I won't mention birthdays again, I promise.\"\n\nShe smiled. \"Well, we'll have to talk about Zoe's at least. Your idea was good but we can't have a party like that here. There's not enough space.\"\n\nAlexei nodded. \"You're right. We'll figure something out.\" Another quick kiss and he released her, heading for the door. \"I'll see you in the morning, yes?\"\n\n\"You-- you're leaving?\"\n\nHe looked up from slipping his shoes on and cocked a dark eyebrow at her. \"Shouldn't I? It's late.\"\n\n\"Well, yes. It is late, I suppose.\" She glanced at the clock over the stove and back at Alexei as he straightened.\n\n\"Do you want me to stay? We haven't talked about that before.\"\n\nCharlotte's cheeks flamed and there wasn't a thing she could do about it. Letting out a breath, she moved closer to him. \"No, we haven't, but I would be okay with it. If you wanted to. Sometimes.\"\n\n\"Sometimes.\" He reached out for her hands, drawing them up to his lips. All the while, he kept his gaze on her face, barely banked fire glowing in his golden-brown eyes. \"I'm sorry I left last night.\"\n\nCharlotte looked, unable to keep from remembering every moment in her bed before she'd fallen asleep. \"I understand why you did. I think, um, I think Zoe would be fine if you stayed though. Sometimes.\"\n\n\"Sometimes.\" Alexei tugged until she was in the circle of his arms, his hard chest under her cheek. \"She is used to seeing me every morning already.\"\n\n\"Yes. She is.\"\n\nThey stood like that for a few minutes, not speaking. Charlotte's body started to relax, from her shoulders to her feet.\n\n\"I will stay, sometimes.\" Alexei lifted her chin with one hand and brushed his lips over hers. \"But not tonight.\"\n\nCharlotte was okay with that. She was exhausted after their talk tonight anyway, and her emotions had bounced around a lot in the past hour. Besides, she told herself, if Alexei was planning things for her birthday next year, they were obviously in no rush. Never mind how much she wanted everything this heat between them promised.\n\n\"Good night, Alexei.\"\n\nHe kissed her, long and slow, teasing her lips, and giving her bottom lip a gentle bite before he drew away.\n\n\"Good night, lyubov.\"\n\nOne more quick, hard kiss, and he was gone.\n\n\u2500\u2500\u2500\u2500\u2500\n\nAlexei: I forgot to ask this morning, do you have plans on Monday?\n\nCharlotte: The usual, sleeping in, grocery shopping, laundry... why? You want a piece of this glamorous life?\n\nAlexei: Always, but I'm wondering if you'd like tickets to the game that night. For you and Zoe. And Sarah or another friend if you want.\n\nCharlotte: Really? I think Zoe would love that. I'll check with Sarah. Can I get back to you later?\n\nAlexei: Of course.\n\nCharlotte: Thank you, Alexei.\n\n\u2500\u2500\u2500\u2500\u2500\n\nSarah was busy on Monday but Zoe was beyond excited to go to Alexei's game. Even more when they made their way to the ice level seats. Zoe stared around them with her eyes wide and her mouth hanging open. To be fair, Charlotte was a bit in awe as well. She'd attended sporting events over the years, high school football, the occasional baseball game or anything else when tickets came up. She had been to one or two hockey games as well, though they'd always been the less expensive seats, never this.\n\n\"Here we are, munchkin.\" Charlotte patted her daughter's head, turning Zoe towards their seats.\n\nZoe clambered up into hers and faced the ice, resting on her knees. Charlotte reached over and unzipped Zoe's jacket, pulling it off while Zoe continued to take in the sights. She exclaimed at the lights, the banners hanging overhead, and the video playing on the giant screen hanging over center ice.\n\n\"Where's Grumpy? I can't see him, Mommy.\"\n\nCharlotte chuckled and patted Zoe on the back. \"None of the players are out on the ice yet, sweetie. I'm sure he'll come say 'hello' when they're ready.\"\n\nAlexei hadn't said anything about it, but Charlotte suspected he'd chosen these seats for them because they were so visible. So long as the Blackhawks were playing at this end of the ice, anyway.\n\nEven as she made herself comfortable, Charlotte looked up to find the players from both teams filing out onto the ice in front of them.\n\n\"There, Zoe. Look.\"\n\nZoe was on her feet a second later, hands and face pressed right up to the plexiglass separating them from the ice. \"I can't see him, Mommy.\"\n\nCharlotte grinned and tugged her phone out to take some pictures. Zoe's first game was a milestone, for sure. As she did that, the players started to circle the ice in front of them. Several swooped past without a second glance, then Alexei's big form approached, a rare grin on his face.\n\n\"Grumpy!\" Zoe screeched and pounded on the glass.\n\nHe slid to a stop before Zoe and pressed his fist to the glass. She grinned and 'bumped' her fist back against his.\n\n\"Do you like your seats?\" His voice was muffled through the glass and with the noise of the crowd around them.\n\n\"They're awesome! I can see everything!\"\n\n\"I have to go warm up but I'll come see you before I go, okay?\"\n\nZoe nodded and waved as he shifted back on his skates. He glanced over at Charlotte and gave her a look. He said nothing, didn't wink or anything, but Charlotte's skin warmed from the top of her head to the tip of her toes. As he skated away, she let out a shaky breath.\n\n\"Yay!\" Zoe hollered and pounded on the glass a bit more, making a few of the surrounding fans laugh.\n\nCharlotte sighed and tugged on her daughter's arm. \"Come on, sweetie. Sit back down. You can get up again when Alexei comes back.\"\n\nZoe wriggled back into her seat without protest and watched as the players skated more laps, stretched, and started some puck handling. She stayed on her knees the whole time, her little hands clenched hard around the seat armrests and her eyes wide as she took everything in. Several of the other players waved as they came by and Zoe waved back. Charlotte shook her head with a smile and took more pictures, happy to have a fun night out for once.\n\nAlexei did return as promised before all the players left the ice following their warm-ups. Zoe jumped back to the ground and smacked her hands on the glass.\n\n\"You're the best player ever!\"\n\nAlexei laughed, the sound carrying, and warming Charlotte's heart through-and-through. \"You think so?\"\n\n\"Yes!\"\n\n\"The game hasn't even started yet. Just wait and see, you might change your mind.\"\n\nZoe scowled and shook her head, her braid swinging behind her. \"No. Only you, Grumpy.\"\n\nHe bent low, his smile still there on his face. \"I won't be able to say 'hi' during the game, okay?\"\n\nShe nodded, her expression solemn. \"Can I still cheer loud?\"\n\nThose nearby that could hear the conversation laughed, making Charlotte blush but Zoe was in her own little world with her Grumpy.\n\n\"You'd better. I'll still hear you, zaya.\"\n\nZoe nodded and offered her little fists up against the glass again. He bumped them, then his gaze shifted as he did the same for the other fans lined up along the glass. He skated back, waving and smiling at a few more people in the lower crowd, and before he turned away, his eyes landed on Charlotte.\n\nAgain, he gave her a look, but it was enough. Anything more and she could not be held responsible for her actions. As it was, she bit her lip and sat on her hands to keep from trying to scale the glass divider.\n\nHe drifted across the ice with the last of his straggling teammates and they all disappeared down the tunnel.\n\nZoe climbed back into her seat and Charlotte pulled her close. \"Let's take a picture, sweetie.\"\n\nWith a grin, Zoe tucked her head under Charlotte's and she angled the phone to get both of them in the screen.\n\nThe ice cleaner and some of the videos playing on the big screen kept Zoe's attention for the next twenty minutes. Charlotte snapped a few more pictures of Zoe enjoying the new experience and sent the picture of the two of them to Sarah, who responded with a thumbs up emoji.\n\nThen the game started and Zoe did indeed cheer as loud as she could. She also complained when she couldn't see Alexei, and startled the first few times the players slammed into the boards near them. The first time it happened, she scrambled into Charlotte's lap, her fist at her mouth and her little brow wrinkled.\n\n\"It's okay, sweetie. No one's hurt, see?\" Charlotte pointed out how the players continued to move with ease after any contact with the boards, or each other.\n\nShe couldn't deny that it was loud and jarring when they slammed into the boards right in front of them. But they both got used to it as the game wore on, that and the noise of the crowd around them. The cheering and excitement was infectious, and Charlotte cheered along with Zoe and everyone else when the Blackhawks scored.\n\nCharlotte took Zoe up to the concourse for a snack and drink before the first period ended, not wanting to get stuck in any long line-ups. When they returned, Zoe laughed at the antics of the mascot, a big red-tailed hawk, named Wings, during the intermission show.\n\nDuring the second period, there wasn't as much action right in front of their seats and Zoe started to yawn and lean against Charlotte in between sightings of Alexei. Charlotte had let Alexei know that they'd probably leave the game early. He agreed that Zoe wouldn't be able to stay up all the way through. So as the second period came to an end, Charlotte bundled Zoe up and they left the arena.\n\nAs expected, Zoe fell fast asleep on the drive home and Charlotte had a heck of a time getting her daughter's dead weight up to their apartment. She wasn't a big kid, but Charlotte wasn't exactly a weight lifter so it was a challenge all around. She managed and collapsed onto the couch with a groan after tucking Zoe into bed.\n\nShe turned on the game, only to find the third period nearly over, and the score at 3-2 for Chicago. She watched the rest of it, yawning and rubbing her eyes. It might be a long day at work tomorrow, but it would be worth it for all the fun they had.\n\nA little while after the game ended, Charlotte sat up on the couch at the sound of a key in her lock. She smiled as Alexei stepped inside and locked the door behind him. He kicked his shoes off and hurried to her, sweeping her right up into his arms and planting a kiss on her that curled her toes. She barely had a moment to admire his broad shoulders in the white button-down shirt and tailored black pants from his game-day attire.\n\n\"Hi.\"\n\nHe rubbed his nose alongside hers and hummed what might have been a similar greeting before sealing his lips on hers again.\n\nCharlotte let him steer the kiss, wrapping her arms around his neck as he settled back on the couch. In seconds, she was sprawled across his chest, his fingers tangled in her hair and their hearts beating double time together.\n\nHe drew back after another minute and rubbed his thumb down her flushed cheek. \"Did you enjoy the game?\"\n\n\"I did.\" She smiled and reached over for her phone on the coffee table. \"Look at the pictures I got.\"\n\nAlexei's smile came out in full force and Charlotte stared at him as he flipped through the pictures of Zoe enjoying her first NHL game. He chuckled at a few and forwarded a couple of the shots to himself before setting the phone back on the table.\n\n\"I'm glad you had fun. I'll get tickets for you any time you want.\"\n\n\"I think we'd both love that.\" Charlotte snuggled up against him, setting her cheek on his chest. \"Though, not all the time. The late nights won't be good for either of us.\"\n\nHe murmured in agreement, one hand sliding through her hair and the other rubbing in long, slow strokes up and down her back. The longer they lay there, quiet and warm, the longer his strokes became, until he was grasping handfuls of her ass and dragging her up for his kisses. She obliged, arching and offering her mouth to his.\n\nMinutes, or hours, later, Charlotte found herself under him instead, and one of his hands had slipped beneath her shirt to rest on her bare skin. She shuddered when he rubbed his thumb over her lowest rib and lifted his head. Both of them were panting and she was pretty sure she knew what the hard weight was pressing against her thigh.\n\n\"I should go.\" His voice was hoarse and his eyes so dark.\n\nShe groaned and tried to tug him down for more kisses. God, she'd never get enough of his kisses.\n\n\"Lyubov...\" He matched her groan and dipped his head to cover her mouth, his tongue tangling with hers.\n\nShe opened under him, angling her chin up and drawing him down. He was much too strong for her and pulled back, settling all the way at the other end of the couch. He scrubbed his hands over his face and gave her a hot look before standing up.\n\n\"Alexei?\"\n\nHe held a hand out to her and she took it, standing on weak legs as he pulled her up. He wrapped her in a hug and she knew he wasn't unaffected by the way his heart raced under her cheek.\n\n\"I'll see you in the morning, yes?\"\n\nShe sighed and wrapped her arms tight around his middle before following him to the door. Her body was humming with everything they'd done already and with the need she still had for him. She shifted from foot-to-foot, wringing her hands together as she watched him slip his shoes on once more.\n\n\"You don't have to go,\" she blurted as he straightened.\n\nHe reached for her and she tilted her head back to look into his eyes as he tucked her close to his chest. \"I know, but it's okay, lyubov. I'll be here in the morning.\"\n\nCharlotte licked her lips and put her hands behind his neck, rubbing her fingers through the ends of his hair. \"But, I want you to stay. I'm asking you to.\"\n\nHis eyes darted between hers, his lips parting as if he was going to say something. Instead, he spun her around and pressed her to the door. She sucked in a breath at the contact and stared up as Alexei loomed over her.\n\n\"I could stay.\" His hands slid under her shirt again, squeezing and grazing higher over her stomach to her ribs. \"All night. This is what you want?\"\n\nHis accent thickened, his voice going deeper, the longer they stood there, breathing each other's air and not moving.\n\n\"I'll be next to you in bed, touching you. Will you touch me, lyubov?\"\n\nCharlotte swallowed and nodded, her head jerking at the quick motion. He lifted one hand from under her shirt and cupped her chin, his long fingers stretching along both sides of her jaw.\n\n\"Can you be quiet?\"\n\nShe bit her lip and nodded again. \"Kiss me, please.\"\n\nHe did, brushing his lips once over hers. Not enough. Not nearly enough. She made a noise again and a laugh washed over her lips before he kissed her.\n\n\"You can't be quiet, can you?\"\n\n\"I could, I swear.\" And now she was begging. She didn't even care, just like she hadn't cared about the shape of her body the last time he'd told her to be quiet. \"Please, Alexei.\" She ran her hands over his chest to the front of his pants. She fumbled with his belt buckle, running her lips over his jaw, scratching herself on the stubble there. \"I can be quiet. Please, please stay. I need you.\"\n\nThis time, it was him who made a sound. A deep, low rumbling growl as her hand slid into his pants. Both of them groaned aloud as she cupped him over the cotton of his underwear.\n\nThen their eyes met and she bit her lip at the look in his eyes. His lips twitched and he gave his head a quick shake to one side. Then a giggle escaped her and he pressed his forehead to hers as he covered her mouth with one hand. His body shook with silent laughter, which only made Charlotte want to laugh harder.\n\nThey stood there, both vibrating with suppressed laughter until they regained control of themselves. Charlotte gave him a soft smile when he lifted his head, running her fingers through his hair.\n\n\"I would like it if you stayed, Alexei.\" She lifted to her toes and kissed his chin. \"And we don't have to do anything requiring silence. Lets just sleep.\"\n\nHe arched a dark eyebrow but nodded once. Removing his shoes again, he followed her to her bedroom after they turned out all the lights. There, they faced each other beside her bed, smiling. Charlotte took a deep breath and lifted her shirt over her head, tossing it to the laundry basket behind her.\n\nKeeping his eyes on hers, Alexei undid the buttons of his shirt, and pulled it off. It joined her shirt in the basket. They reached for their pants at the same time, bending to tug them off. More into the basket, socks too. Charlotte twisted her arms up to reach for the clasp at the back of her bra, but Alexei stopped her. He turned her around and pressed a kiss to her shoulder as he unclasped the strap. Another kiss, a tease with his tongue, as he slipped the straps down her arms.\n\nThen his arms were around her middle and he was nuzzling her neck, his breath hot on her skin. Charlotte shivered, tilting her head to one side and tugging her hair away from her neck to give him more space. His arousal pressed into her backside and she wanted to press back against him. But she had said they could just sleep, and she meant it, because in all honesty, she didn't think she could be silent. She didn't want to be.\n\n\"Alexei.\" She turned in his arms and circled his shoulders with her arms. She pressed her face to his neck and sighed when he rubbed his stubbly chin over her forehead.\n\n\"You are beautiful, lyubov moya.\"\n\nCharlotte smiled and squeezed him tighter. She had never felt as beautiful as she did now, in his arms, with those words and others gliding over her skin. She didn't need more than this to believe him, not in this moment.\n\n\"Let's get in bed.\"\n\nHe nodded, kissed her head, and turned to pull the covers back. They climbed into bed and settled together a minute later, naked except for their underwear.\n\nCharlotte closed her eyes and let out a breath. Behind her, Alexei shifted once or twice, his mouth on her neck, her shoulder, the warm shell of her ear. His hands roamed over her bare skin, up to her breasts, down to her lower abdomen. He teased his fingertips along the edge of her panties and she shivered when he opened his mouth on her neck, his tongue tracing hot patterns on her skin.",
        "\"Alexei.\" She pressed her hand over his as two fingers slid up beneath her panties where they rested on her hip. \"We can just sleep.\"\n\n\"You can sleep after I do this.\"\n\nAnd he shoved her panties down, his hand coming up between her thighs. She gasped, her body bowing in his grasp. He chuckled, the low rumble sending shivers up and down her spine where she felt it.\n\n\"Quiet.\"\n\nCharlotte twisted, pressing her face to her pillow as his fingers parted her below. His mouth clamped onto her neck as he slid his fingers inside. He stroked her like that, his thumb rubbing in time against her clit and she clutched his arm. The muscles flexing beneath her palm, his hot breath on her skin, and the rigid length of him pressing against her, altogether it sent her spiraling towards a climax that stole her breath. Quiet? Yeah, she couldn't have caught her breath to live through it, never mind anything more.\n\nHer body shook as Alexei drew her back down to earth. The words in her ear were soft and spoken in Russian, but she gathered his meaning all the same. Turning, her chest heaving, she drew him down to her mouth for a kiss. It was slow, hot, and full of everything she couldn't put into words.\n\n\"Sleep.\" He held her close, turning each kiss lighter than the one before, until she obeyed with a contented sigh.\n\n\u2500\u2500\u2500\u2500\u2500\n\nWhen Alexei woke in the morning, he was on his back, one arm half off the bed, and the other serving as Charlotte's pillow. He couldn't feel anything below his bicep and it was the best morning wake-up he'd had in years. Turning his head and careful not to disturb her, he looked at her sleeping face, counting her perfect freckles.\n\nHe was on his third count and hard as a rock when her beautiful aquamarine eyes blinked open. She squinted when her gaze landed on him and then she smiled.\n\n\"Alexei.\"\n\nFuck.\n\nHe rolled onto her, sealing their lips together. She moaned into his mouth, her legs splitting around his body. He ground his cock against her, eliciting another sleepy moan that he devoured. He shoved again, wanting in. God, he wanted to be inside her more than he wanted anything else.\n\nHer hands were all over him an instant later, her nails scraping through his hair and over his shoulders. Her hips undulated under him and he growled into her mouth, tangling their tongues together as he thrust again and again. She gasped, he stole the sound. She moaned, he tasted that too.\n\nThen her hands were inside his underwear, her fingers curling into his ass and drawing him against her. She met his thrusts, took his kisses like she was meant for them, and they were a panting, overheated pile of tangled limbs in seconds.\n\nAlexei dropped his weight on her, rubbing against her in exactly the right spot. He knew it was exactly right because her nails dug into the skin of his lower back and she started to shake all over. He kept at it, so close to losing his damn mind. A moment later, he had to bury his face in the pillow under her head, his hand fumbling to cover her whimpers and moans as they both came apart.\n\nWhen reality sank back in a few minutes later, he rolled to his side, his arm still cradling Charlotte's head. They stared at each other, bodies cooling and Alexei couldn't stop the silly grin from spreading across his face. Charlotte's eyes, glassy from what they'd done, widened and then she pressed her face to her pillow to smother her giggles.\n\n\"Oh, my God, Alexei.\" She wriggled closer to him and he chuckled as he folded her in his arms. \"I can't believe we just did that.\"\n\nHe couldn't either. He hadn't dry humped since he was a kid. Never had it been so damn satisfying though.\n\n\"Good morning.\" He kissed her nose and then her lips, his voice rough.\n\nShe shivered and kissed him back, a sweet blush blending around her freckles. He kissed those too, because he could. She opened her mouth as if to say something but they heard a door bang in the apartment, followed by the sound of running water.\n\nWith a sigh, Charlotte cupped his cheek and lifted her head to look at the clock. \"That kid has an internal clock, I swear.\" A moment later, her alarm started to chime and she reached over to flick it off. \"Come on. You need to clean yourself up before breakfast, mister.\"\n\nHe did but gave her one more thorough kiss before letting her get up. She wobbled on her feet for a moment before grabbing her discarded clothes from the night before. She tossed him his pants and shirt and he went into the bathroom while Charlotte went out to see to Zoe first.\n\nHe found them in the kitchen, Charlotte pouring a bowl of cereal for the little girl who sat patiently at the table waiting. Her face lit up when she saw Alexei come into the kitchen and scrambled to her feet on the chair, her arms reaching for him.\n\n\"Grumpy!\"\n\nSmiling, Alexei bent to give her a quick hug and dropped a kiss on her head. \"Good morning, zaya. Did you have a good sleep?\"\n\nShe nodded and dropped back to her chair as Charlotte deposited her ready bowl in front of her. \"I did and the game was so much fun.\"\n\n\"Good.\" Alexei walked around to Charlotte's side and stole another kiss before grabbing something to eat for himself.\n\nThe morning passed by in a blur of Zoe's scattered recap of the game the night before and Charlotte sliding hot glances his way. After an hour, Charlotte and Zoe were ready for daycare and work, and he dragged his ass downstairs to his own place to get ready for his team meeting later that day.\n\nHis smile throughout the meeting got him some sideways looks and he didn't give a damn. After that night, he didn't want to spend another night without Charlotte in his arms.\n\n\u2500\u2500\u2500\u2500\u2500\n\nThe next couple weeks passed by in a fog of late night talks, more kissing, and blissful mornings of the three of them sitting around the table eating breakfast. They still didn't do much more than kiss or touch-- a lot-- and Charlotte was dying for more. She had so little experience really, and none at all of a committed adult relationship. Anytime she thought about talking to Alexei about sex, she burned with embarrassment. Sarah told her to get over it, when they were at work on the Wednesday before Thanksgiving.\n\n\"If the man hasn't run screaming after everything so far, he's not going to.\"\n\nCharlotte sighed as she finished the Black Friday sign for the lamp shades. \"That's comforting, thank you.\"\n\n\"Come on.\" Sarah nudged her, her dark skin flushed from all the work they'd been doing that day so far, getting ready for the Black Friday sales. \"You know you can talk to him about anything. He's got to be the least judgmental guy we've ever known.\"\n\nAlexei and Sarah had met a few times, when he'd surprised them at the store with coffees on different days. He got along with Sarah, and had completely charmed the pants off Ursula when they'd met.\n\n\"I know he'd never judge me, but I've never had any kind of sex talk with anyone, Sarah.\" Charlotte straightened the sign and moved on to the next one. \"Not even my mom. I'm not stupid, I knew enough to use condoms, for all the good that did me, but that much I knew from sex ed, no more.\"\n\nSarah snickered and Charlotte rolled her eyes.\n\n\"Okay, but could you have truly seen yourself sharing a sex convo with your mom. Your mom?\"\n\nCharlotte cringed. No. Her parents were small-town born and bred and so old-fashioned they hadn't even understood her desire to go to the University of Chicago. They thought she'd get a job in their little town two hours away and find a local boy to settle down with. Never mind that her older sister, Theresa, had already gone to university herself. Last Charlotte had heard, Theresa had even married some fancy lawyer from Chicago's high society. For some reason, their little baby was supposed to walk a different path.\n\n\"Okay, so what you need to do is have the conversation you want to have with Alexei inside your head first.\"\n\nCharlotte looked over at her friend. \"In my head?\"\n\n\"Yeah.\" Sarah counted one stack of lamp shades, then straightened the stack. \"Don't assume what he's going to say, just figure out exactly what you want to say. Do it a few times. Practice in the mirror if you want.\"\n\n\"That's silly.\" Charlotte wouldn't be talking to herself.\n\nSarah shrugged. \"Fine, just do it in your head then. I'm telling you, it'll help to sort your thoughts first.\"\n\n\"What if he laughs?\"\n\n\"He won't.\"\n\n\"What if--\"\n\n\"Charlotte, honey, I told you: don't assume anything.\" Sarah gave her a pointed look before turning away to start on another display.\n\nCharlotte followed after finishing the last sign for that section. \"So I should practice in my head. I should think to myself, hey, Alexei, you know how we're on third base and it's awesome, but I want a home run?\"\n\nSarah laughed and nodded. \"If that's how it comes out, then yeah. Although, will he understand the reference?\"\n\n\"I have no idea.\" Charlotte laughed with her, some of her tension easing. Sarah had a point. Alexei had been patient and understanding about everything since the day they met. Well, almost everything. Once they started spending all their time together, neither of them worried about Zoe's noise level anymore, and that had been the only thing she'd ever seen him upset about before.\n\n\"If you're scared to bring it up no matter what, just throw a box of condoms at him.\" Sarah leaned closer. \"He'll take the lead from there, trust me.\"\n\nCharlotte giggled at the image of Alexei catching a box of condoms she threw. She bet that would be enough to get her point across, but it would also involve her buying a box of condoms and that had her blushing all over. Jeez, she really was hopeless. She'd had a kid! She should be able to handle sex talks and buying condoms, for crying out loud.\n\nPushing it out of her mind for now, she finished working up the Black Friday displays.\n\nThe next day, Alexei helped her pick something to wear to Olle and Joelle's for dinner. He had on dark khaki pants and a light blue button down shirt with the sleeves rolled partway up his arms. Casual, but still nice.\n\n\"Should I wear a dress?\"\n\nZoe, perched in the middle of Charlotte's bed behind Alexei, who sat on the edge, nodded with a smile. \"Yeah, like mine!\"\n\nCharlotte had managed to wrangle Zoe into a cute purple dress with black leggings underneath, since it was full winter outside now, with snowbanks on every corner and slush on the streets.\n\n\"You don't have to wear a dress.\" Alexei glanced at Zoe. \"She doesn't have a purple one to match yours anyway.\"\n\nZoe made a face and went back to her game on the tablet.\n\nCharlotte slid her fingers over the few dresses she did have. She wasn't even sure if they'd fit her. She pulled out a little black dress and eyed it.\n\n\"Try it on.\"\n\nShe nodded at Alexei's words and slipped into the bathroom to do so. It was a little snug around her butt. Other than that, it fit. It had a high V-neck and capped sleeves, and fell to her knees in a plain A-line shape. She opened the door, smiling when she glimpsed Alexei and Zoe with their heads together over the tablet. Grabbing a cardigan from the closet, she pulled it on and walked out to model for them.\n\n\"Well?\" She did a twirl and Zoe applauded, making her smile.\n\nAlexei stood up and hugged her, planting a quick kiss on her head. \"You look beautiful.\"\n\n\"Thank you.\" She hugged him back, careful not to smear make-up on his light shirt. \"Now, we should get going. No telling what traffic will be like.\"\n\nHe nodded in agreement and they headed to the door to put on their winter outerwear.\n\nTraffic turned out to be just as bad as she'd suspected and Charlotte was glad she'd allowed Zoe to bring the tablet in the car. It kept her quiet for the most part and Charlotte was content to sit with Alexei's big hand enveloping hers as they inched through busy Chicago streets.\n\n\"You're quiet.\"\n\nCharlotte glanced at Alexei. \"Am I?\"\n\n\"You're nervous.\"\n\nIt made her smile that he phrased it not as a question. \"I suppose. I only know Joelle.\"\n\n\"And me.\" He lifted her hand to his lips for a brief kiss before the traffic light ahead turned green.\n\nCharlotte sighed. Yes, she knew Alexei but that was perhaps what had her nerves jumping around in anticipation. This was their first real outing as a couple. They did plenty together when their schedules allowed it, but other than the odd trip to the grocery store or the park to make snowmen, they hadn't gone 'out.'\n\n\"There will be enough people there that you won't have to worry.\"\n\nShe let out a light laugh. \"No? I should think a bigger crowd makes me more nervous.\"\n\n\"No. A lot of people, a lot of talking, you can ignore most of them.\" He gave her a crooked smile that made her stomach flip. \"They're mostly boys who talk only of games and practice and won't bother you.\"\n\nShe supposed he was right. She could handle conversation with Joelle or any other ladies that might be there, and Alexei had said that there would be a few other children, so at least Zoe wouldn't be bored either.\n\nA short while later, they rolled down a long driveway to a lovely house set into some trees, bare of everything except snow and ice. There were a half a dozen other cars already parked and Alexei rolled up behind the last one in the line.\n\nThey climbed out and made their way carefully up to the house. A tall man with floppy blond hair and bright blue eyes answered the door with a welcoming grin.\n\n\"Happy Thanksgiving. Come in, come in.\" He stood back, holding the door and waved a hand to usher them all in.\n\nAs they walked in and started working off their winter layers, Joelle came down the hall, a wide grin on her face.\n\nZoe clearly remembered the woman. \"Auntie Joelle!\" She launched herself at Joelle's legs, making the woman laugh as she bent to embrace the child.\n\n\"Hello, pumpkin. How are you?\"\n\n\"Hungry. Is there food?\"\n\n\"Zoe!\" Charlotte covered her eyes and laughed with everyone else.\n\n\"Yes, there's food, dear.\" Joelle smacked a kiss on Zoe's head and took her hand. \"Come with me, and we'll get you something.\"\n\nCharlotte watched them go and turned when Alexei introduced her to the man.\n\n\"This is Olle. Olle, this is Charlotte.\"\n\nOlle gave Charlotte a hug, even as she started to lift her hand for a simple handshake. \"I'm so pleased to meet you. Joelle talked about you and Zoe so much after you met.\"\n\n\"Did she? I was such a mess, I hope she didn't tell you everything.\"\n\nOlle pulled back and patted her shoulders. \"She said you guys were great fun. Now, are you hungry?\"\n\n\"Not as hungry as my daughter.\"\n\nHe grinned and tugged her down the hall. \"Come meet everyone and we'll get you something to drink as well. Coffee, or tea?\"\n\n\"A tea would be lovely, yes.\"\n\nAlexei followed and made introductions as they reached the great room where everyone had gathered. There were two other young couples so far, and a few single guys. Charlotte was never going to remember their names, except for maybe the one guy, Adam, who winked at her, earning a dirty look from Alexei.\n\nCharlotte laughed as he tugged her away towards the kitchen where Joelle had Charlotte sitting on the edge of the island, feeding her something that looked like a pumpkin cookie.\n\n\"Is that tasty, sweetie?\" Charlotte touched her daughter's shoulder.\n\nZoe didn't even open her mouth to respond, just nodded.\n\n\"Joelle, is there anything I can help with?\"\n\n\"Oh no, everything's ready, really, except for the turkey.\" Joelle smiled and handed over a steaming mug. \"Here's your tea. Cream and sugar is just over there if you want some.\"\n\n\"Thank you.\"\n\n\"I'm so glad to see you both fully recovered.\" Joelle squeezing Zoe's knee and making the little girl giggle.\n\n\"Oh, I should hope so.\" Charlotte cupped her mug to her chest. \"That was weeks ago.\"\n\n\"It was a good thing Alexei was close by.\" Olle glanced at the big man beside her.\n\n\"Yes.\" Charlotte still got chills to think of how long she was so out of it. If Alexei hadn't been there-- but he had been, and it had changed her life in so many ways already. She looked up at him to find him staring down at her, that barely banked heat in his golden brown eyes.\n\n\"All right, you two. Simmer down.\" Olle chuckled and thrust a bottle of soda at Alexei. \"Here.\"\n\nThey were all about to move to the other room to join everyone there, when the doorbell rang again. For the next ten minutes, the bulk of the guests arrived, several with small children in tow. It was a noisy, wild place for a while as more introductions were made and Zoe clung to Charlotte's side in a sudden spat of shyness.\n\nLeaning against the kitchen island, Charlotte smiled as Zoe wrapped one little arm around her thigh, her eyes big as she watched two girls and one boy around her age.\n\n\"Don't you want to join them, sweetie?\" Charlotte rubbed a hand over Zoe's braided hair.\n\nZoe said nothing, but squeezed Charlotte's leg tighter, her little fist at her mouth. In spite of her energy, she did get shy around new people on occasion. Except Alexei, anyway.\n\nThe kids didn't let Zoe stay out of things. They noticed her and one of the girls came over at her own mother's urging.\n\n\"I'm Katie.\"\n\nZoe looked at her and her fist dropped. \"I'm Zoe.\"\n\nA moment later, Zoe was gone, swept into the circle of kids as they became instant best friends.\n\nCharlotte shook her head, a smile on her face. Alexei put his arm around her shoulder and leaned over her.\n\n\"So easy when they're little, yes?\"\n\n\"No kidding.\"\n\n\"And you were worried she'd be bored.\"\n\nCharlotte snorted out a laugh as Zoe and the other kids shrieked and ran off for the playroom Joelle led them to.\n\nA short while later, everyone was halfway through their meals, or their second helpings. A few of the guys were more than a little tipsy and there was a lot of laughter ringing in the big house.\n\nCharlotte helped Joelle with clearing some of the dishes and tucking leftovers away in the fridge after some of the food furor had died down.\n\n\"I forgot to say earlier, Charlotte, but you look lovely today.\" Joelle smiled as she leaned against the counter beside her.\n\n\"So do you.\" Charlotte glanced at the woman, who was wearing a lacy red top over fitted black pants.\n\n\"Oh, thanks.\" Joelle smoothed her hands down over her hips. \"I wanted to be a little festive but I knew no one would want a big fancy affair.\"\n\n\"No.\" Charlotte nodded as she looked out over the kitchen island at the crowd of boisterous hockey players. Some had dressed well, in slacks and nice shirts as Alexei had done, but several had on jeans and worn-out T-shirts that had clearly seen better days. \"But it's nice that so many people came over.\"\n\n\"Oh yeah. Not many people want to bother with the fuss of a big Thanksgiving dinner in the middle of the season.\"\n\n\"I can understand that.\" Charlotte looked around for what else needed to be put away or cleaned. She reached for the half-full bottle of wine on one end of the counter. \"Did you want some? There's not much left in here and then we can toss the bottle in the bin.\"\n\nJoelle's cheeks turned a little pink and she shook her head. \"I'm not drinking.\"\n\nCharlotte squinted at her and smiled. \"Are you saying something without saying something?\"\n\nJoelle snickered and shrugged. \"It's too early to say anything about something.\"\n\nExcitement and happiness for the woman rose in Charlotte but she maintained her outward calm. \"Well, then, I won't say anything about how wonderful something is.\"\n\nThey shared a look before they both burst into laughter. Charlotte tipped the wine into her own glass and lifted it towards Joelle. \"Cheers to nothing!\"\n\nAnother laugh and then Olle and Alexei swept into the kitchen beside them. Olle gathered his wife up in a warm hug that made Charlotte swoon as she watched. It was clear that Olle was aware of the something and she was beyond happy for them, even if she'd only known them such a short time.",
        "\"How are you?\" Alexei's arms slid around Charlotte's middle as he stood behind her.\n\nShe sighed as she settled back against his chest and tipped her head up to look at him. \"I'm great. Thank you so much for bringing me.\"\n\nHe kissed her head and she turned, setting her glass on the counter. She wrapped her arms around him and pressed her cheek to his shoulder. He huffed out a breath and squeezed her tight for a second, stealing her breath.\n\n\"We should go?\"\n\n\"Really? It's not late.\"\n\n\"You have to work early tomorrow.\"\n\nThat was true. Black Friday waited for no one. She glanced at the clock over the stove and nodded. \"I suppose we should get going. By the time we get home, Zoe will be wiped out too, I bet.\"\n\n\"I'll go get her.\" He kissed her forehead and let her go to retrieve her child from somewhere in the depths of the house. The kids had migrated from the playroom to the great room to the kitchen and back again throughout the day and evening.\n\n\"Are you guys going to head out?\" Joelle had escaped Olle's amorous clutches and faced her again.\n\n\"Yeah. I work tomorrow and Zoe needs to get to bed.\"\n\n\"I'm so happy you came, Charlotte.\" Joelle embraced her tightly. \"You have my number and I'm up for coffee or a baby-sitting gig anytime you need me.\"\n\nCharlotte smiled as she hugged the woman in return. \"I appreciate it. I will take you up on that soon.\"\n\nAs Alexei reappeared with Zoe in his arms, the little girl talking at him with animated hand gestures, Joelle shot Charlotte a wink. \"You'd better. I get the feeling Alexei would be happy for some one-on-one time with you too.\"\n\n\"Oh, well, I--\" Charlotte didn't know what to say to that. Never mind that Sarah had been teasing her about the same thing for weeks.\n\nJoelle giggled and squeezed her arm against her side. \"Don't get me wrong. We can all tell how much Alexei loves Zoe, but I'm sure any parent will tell you a night alone together is a welcome treat.\"\n\nCharlotte had to agree. The more time she spent with Alexei, the more she leaned towards giving themselves that treat.\n\nThey walked to the front door, Olle trailing them, and wrangled Zoe into her boots and winter coat.\n\n\"Thank you so much for dinner and everything.\" Charlotte hugged Joelle once more and turned to hug her husband as well. \"I had a great time. So did Zoe, didn't you?\"\n\nZoe nodded and hugged Joelle tight for a second. \"So fun. Can I come tomorrow?\"\n\nThe adults all laughed at that and Charlotte rubbed a hand over Zoe's head. \"These kids won't be here tomorrow, but we'll see them again for your birthday party.\"\n\n\"Yay!\" Zoe clapped her hands, still vibrating with energy from her time there.\n\nAlexei scooped her up to keep her still and shook hands with Olle. \"We should go. Have a good night.\"\n\n\"See you at practice in the morning.\"\n\nAlexei nodded and led the way outside, Zoe in one arm, Charlotte holding onto his other. The car was cold as they got in but warmed up quickly when Alexei got the vents going. The drive home wasn't as slow as their arrival but by the time they parked at their building, Zoe was out cold. At least this time, Charlotte had Alexei to carry the girl inside.\n\nAfter Zoe was tucked into bed, Charlotte found Alexei in her bed, reclined on her propped up pillows, one arm behind his head and still fully clothed. She smiled when she closed the bedroom door, watching as he tapped on his phone for a few seconds before he looked up and returned her smile.\n\n\"Are you tired?\"\n\nShe shrugged as she pulled off her cardigan and tossed it in the laundry basket. \"I'm not bad, really. It's only nine.\"\n\n\"You have an early morning tomorrow.\"\n\nCharlotte sighed and nodded as she bent to double check the time for her alarm clock. \"I do, but I'm only working until two, so that's okay.\"\n\nThe store was opening early for the Black Friday sales, but everyone was on shift for the day at some point, so there would be plenty of coverage. As well, the store was closing for the rest of the weekend, to give everyone a bonus three days off in a row. The only other time Ursula closed the store for so long was over the Christmas holidays.\n\n\"Come, sit with me. We can watch something before you sleep.\" Alexei patted the bed beside him and Charlotte smiled before sliding onto the bed beside him, but he didn't turn the television on.\n\nHis arm went around her middle, tugging her right up against his side and she went, resting her head on his shoulder. She loved the quiet nights after they'd put Zoe to bed.\n\n\"You had fun tonight?\" He stroked his fingers through her hair as he spoke. \"Not so bad, after all?\"\n\nShe smiled and shook her head, playing with the top button on his shirt. \"No, it was really a nice evening.\"\n\n\"You and Joelle talked a lot.\"\n\n\"Yeah, we did. I like her. Though, she's hard not to like.\"\n\n\"I think so too. I like spending time with her and Olle.\"\n\n\"Joelle offered to babysit Zoe.\"\n\n\"Oh? When?\"\n\nCharlotte shrugged one shoulder, popping the top button on his shirt free, then tucking it back through the hole. \"Whenever. She also offered their place to host Zoe's birthday party.\"\n\n\"That's great.\" Alexei continued to run his fingers through her hair. \"Now we can plan the rest.\"\n\nCharlotte smiled. 'We'. She was starting to love the sound of it. It had been ages since she'd been part of any we, aside from Zoe.\n\n\"I like your dress.\"\n\nCharlotte let out a light laugh at his non-sequitar.\n\nAlexei's hand slid down to her hip, his palm rubbing over the fabric there. \"I thought about taking you into another room while we were out.\"\n\n\"What?\"\n\nAlexei made a humming noise and the skirt started to bunch under his fingers, sliding up and revealing her bare skin underneath.\n\n\"I kept watching you, in this dress, and I wanted to touch you. Like this.\" His long fingers curled around her upper thigh, sliding along the curve of her ass.\n\n\"Alexei--\"\n\n\"Shh. Quiet, remember.\"\n\nHonestly, in all the weeks since that first night together, Charlotte had come to realize just how sound a sleeper her daughter was. Not that she wanted to be screaming Alexei's name with Zoe two doors away, but maybe they didn't need to be so worried. And yet, the way he told her to keep quiet always made her shiver. It made their nights together seem so illicit and wicked, and fun.\n\nThen Alexei hooked his fingers around the edge of her panties and tugged, stealing Charlotte's breath altogether.\n\nA moment later, she was on her back and Alexei's mouth was on hers. She tangled her fingers in his hair, holding him close as he licked his way into her mouth. His hands were both under her skirt now, pulling her panties down. She wriggled in his hold, turning one way, then back, until he slipped the paltry bit of fabric all the way off.\n\nLifting his head, he stared down into her eyes, his own low and dark with desire. Charlotte licked her lips, drawing his gaze back to her mouth and he made a low, growling noise before tracing the same line with his own tongue. She moaned and arched under him, wanting his kiss again. She'd always want his kisses. They were the best kind of drug.\n\n\"Quiet,\" he said against her lips.\n\nShe let her head fall back on the pillow and stared up at him, a hundred thoughts crowding in her head suddenly.\n\nAs if sensing her need to say something, Alexei paused in his touches, his hands stilling on her hips.\n\n\"I want--\" She stopped and cleared her throat, heat rising in her cheeks. \"I want to please you, Alexei.\" Okay, maybe she hadn't meant to sound so... she didn't even know how it made her sound, but it was how she felt. He was so generous with her, beyond generous in everything they did, not just in the bedroom, and never pushed for more.\n\nHis expression softened. It was still full of need, for her, but he lowered his body over hers and brushed the hair from her face with gentle hands. \"You do, lyubov. All the time.\"\n\n\"No, I mean--\" God, what did she mean? Dropping her gaze, she ran her hands down his sides to the belt at his waist. There, she traced its shape to the front, where he was hard for her.\n\nHe shifted, giving her hands some space and she let out a breath before unbuckling his belt and button in one quick move. A moment later, he grasped her wrist, halting her movements.\n\n\"Charlotte.\"\n\nShe looked up, biting her lip. \"I want you, Alexei.\"\n\nHe let out a low groan as she wriggled her hands free to unzip his pants.\n\n\"Charlotte, wait. We don't have to--\"\n\nHe moved to his side, putting his arms around her to try and still her movements. She twisted though and he let her go, rolling to his back at her urging.\n\nBefore she could get his pants off, Alexei grabbed her arms and held her back, one of his legs between hers.\n\n\"Charlotte, I don't want to push you.\"\n\nShe smiled and shook her head. \"You're not. You've been so amazing all this time.\"\n\n\"I don't expect anything in return.\"\n\n\"I know, that's what makes you even more amazing.\"\n\nIt was dim in her room, the only light coming from her nightstand but she saw his cheeks turn a little pink at her words.\n\n\"I like to make you feel good.\"\n\nNow it was her turning pink, all over. \"And you do.\"\n\nHis eyes went dark again, his jaw clenching.\n\n\"I don't--\" She reached for the buttons of his shirt as she spoke, her thoughts still jumbled even as she forced herself to speak. He let her undo his buttons, his fingers still around her arms, but not restricting her movements. \"I don't have a lot of experience. I mean, I'm obviously no virgin, but before that, I didn't... do a lot. You know?\"\n\nHe gave a short nod in understanding as she worked all his buttons loose and spread his shirt wide. Charlotte let out a breath and ran her hands up his torso, her breath coming faster as her fingers bumped over the ridges of his abdomen and across his firm chest. Leaning down, she kissed his shoulder first, then dragged her lips across his collarbone to the center, where she licked him once.\n\nUnder her lips, his pulse skipped a little faster and she smiled against his skin before lifting her head. When she moved again, he released her arms and watched with hooded eyes as she shimmied off his leg to kneel between them. She met his dark gaze as she tugged his zipper down, then curled her fingers around his pants and boxer briefs. He lifted his hips without saying anything when she tugged.\n\nHer eyes dropped as he was revealed to her, the hot, hard length of him. Her mouth watered and she swallowed a few times as nerves threatened for an instant. Lifting her eyes to his again, she shifted, brushing her fingers along his bare skin. He sucked in a breath but didn't move, except for his hands clenching at his sides.\n\n\"If I don't do it right, you'll tell me?\"\n\nA dry laugh came out of him and he reached with one hand to brush her hair off her forehead, the touch so slow and gentle that she had to blink hard several times. \"Nothing you do could be wrong, lyubov moya.\"\n\n\"Still.\" She wrapped her fingers around him, her heart thundering. \"You'll tell me what you want me to do?\"\n\nSomething flickered in his eyes but he jerked his head once. His jaw clenched as she stroked down the full length of him, then all the way back up. At the tip, she rubbed her thumb over him, marveling at the smooth skin.\n\nMouth watering again, Charlotte leaned over him. At the touch of her tongue to him, he sucked in a breath, his whole body jerking under her.\n\n\"Is that okay?\" She lifted her head to take in his expression, her heart threatening to pound out of her chest.\n\n\"Yes.\"\n\nAt his strangled tone, Charlotte smiled and licked him again. Another full body jerk and she relished the sensations she was giving him. This. This was what he did to her every time he kissed her or put his hands on her body. And he was letting her do it to him now.\n\n\"Tell me, Alexei.\"\n\n\"What?\" He sounded so breathless, his chest pumping hard with each pass of her lips and tongue on his rigid length.\n\n\"Tell me if this is all right.\"\n\n\"You know it is, lyubov.\"\n\n\"I need to know.\" She parted her lips and sucked him into her mouth.\n\nWith a low groan, he shoved his hands into her hair. He didn't push or pull, just held her head as she dipped low, sliding her mouth over him. He pulsed against her tongue and she rubbed it against him, eliciting another strangled sound from him.\n\nLifting her head with a grin, she met his wide eyes. She pressed a finger to her wet lips. \"Quiet, Alexei.\"\n\nHe gritted his teeth, his hands flexing on her head, but he said nothing.\n\nAs she lowered her head again, one hand stroking down to his base, he didn't make another sound. He shook under her hands and mouth, his body jerking and tensing as she licked and tasted all of him.\n\nHer body sang with need and the power she held over him. Every inch of her skin tingled as she slid more of him into her mouth, letting him tap the back of her throat. His fingers tensed and tangled in her hair, tugging once or twice, but he didn't push her. He didn't thrust, didn't force more of himself into her mouth. She rewarded him, slicking her tongue all around him and stroking with her hand until he tapped her shoulder in a wild gesture that had her looking up into his face.\n\n\"Lyubov, I'm--\"\n\nOh, she knew exactly what he meant. She took him deep and held her mouth over him as he spent into it, hitting her tongue and making her groan around him. The hand that had tapped her shoulder disappeared and the other clenched tight in her hair, stinging just enough that Charlotte knew she'd done it right.\n\nShe lifted her head after a moment, the last of his climax trickling over her hand. She took him in, his head thrown back, his free hand over his mouth, and his chest working like he'd just run a marathon.\n\n\"Not so easy to stay quiet, is it?\"\n\nHe dropped his hand and met her giddy gaze. When he still said nothing, Charlotte licked her lips and tipped her head to one side. \"Did I do it wrong?\"\n\nHis laugh was low but rumbled around the room and curled into her chest. She was falling so hard for this man.\n\n\"Come here.\" He waved a hand at her, his voice hoarse.\n\nShe looked down at her hands and shook her head. \"One second.\" Shuffling to the side, she slid from the bed and hurried to the bathroom to wash her hands off.\n\nBut Alexei didn't let her linger. His body pressed into her from behind as she dried her hands, pinning her to the bathroom vanity. She gasped as he wrapped her hair around one fist and lifted it to the side. His mouth came down on her neck, nipping once and licking the spot to soothe after. She jumped when he did it again, his other hand gathering handfuls of her skirt.\n\n\"Hold on to the sink.\"\n\nShe did, her now-shaking hands dropping to the porcelain, doing nothing to cool her skin.\n\nHe met her eyes in the mirror as he slid his fingers between her thighs. She didn't even have a second to be embarrassed by how aroused he found her, moisture coating the insides of her thighs. He made a sound and sucked her ear lobe into his mouth.\n\nShe gasped and one of his hands lifted to cover her mouth.\n\n\"No sounds, remember?\"\n\nShe couldn't even nod as he delved into her body, two thick fingers filling her. He rubbed the heel of his hand against her, grinding as he stroked in and out. She was so wound up from what she'd done to him that it was seconds-- seconds!-- before she was clawing at his wrist, writhing in his hold. He was relentless, thrusting hard and fast, his breath hot at her ear, his hands hot on her skin. She rode his hand, her body arching like a bow in his embrace.\n\nHe started to whisper in her ear, even as ecstasy rushed in around her.\n\n\"Quiet, lyubov. Don't let anyone hear you scream.\" It was hot, so hot, and she shouldn't be even more turned on as she was by his words. \"I make you scream, don't I? Me, my hands, my cock.\"\n\nShe jerked in his hold, his words sending her spiraling into a climax that turned her inside out.\n\n\"That's it, yes. You want this, you want me holding you, keeping you quiet as you come.\"\n\nHis fingers plunged deeper, his body surrounding her, his words fading as her orgasm wiped out everything but pleasure.\n\nWhen she came back to herself, Alexei was lifting her into his arms. Her dress was gone, as was his shirt, and they slipped beneath the covers of her bed, naked.\n\nHe kissed her, slow and gentle, brushing his fingers through her hair, soothing her until she drifted off, happy and safe in his embrace."
    ],
    "authorname": "MugsyB",
    "tags": [
        "hockey",
        "hockey player",
        "hockey team",
        "sports",
        "athlete",
        "sports romance",
        "hockey romance",
        "single mom"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/beneath-the-ice-ch-04"
}