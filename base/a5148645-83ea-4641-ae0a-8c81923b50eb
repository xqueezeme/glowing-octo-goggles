{
    "title": "Some Things Change Pt. 02",
    "pages": [
        "This is the second half of the story.\n\n1. All characters engaging in sex are 18+\n\n2. No characters resemble real people\n\n3. Enjoy the fiction\n\n----\n\nPART 2\n\n----\n\nAfter Steve and Prudence returned from their honeymoon, they moved into my parents' house until they could find their own place. Of course, I moved out of that bedroom to give them privacy, but that left me on the couch in the den. Even more incentive for me to do what I was planning.\n\nSteve, Prudence, June, and I dubbed ourselves the Gang. They worked with me on developing my plans, and to be safe, we kept it between us four. Together, they coached me into appearing as weak and needy as possible, while maintaining my stubborn requirements. Mom, Pop, Frank, and the twins knew something was going on, but they didn't know the details. Prudence suggested we bring Lara into the group, but I decided it was safer for her if she remained in the dark. \n\nHowever, I had been seeing Lara. She worked six days a week, but we made Sundays our date day. Sometimes we had Zeke with us, other times Lara managed to get her mother to watch him. Our dates were mostly simple: walks in the woods, picnics in the park. This Sunday, Lara's mother was watching Zeke so we could have lunch and see a movie in the city.\n\nI think we were only about fifteen minutes into the movie when I felt Lara's hand slip off the arm rest and onto my leg. It was subtle but I definitely noticed. In the darkness of the theater, where only a few other people were sitting, we were in one of the last rows and no one sat behind us. I put my arm around Lara's shoulders and brought her closer to me.\n\nI don't remember much of the movie after the beginning. Lara's hand started light rubs up and down my knee. It was terribly distracting. I turned to look at her. She was beautiful always, but in the movie theater her eyes gleamed in the reflected light of the film screen. I pulled her face to mine and we shared a long, silent kiss. That turned into several consecutive long kisses. Her hand moved less lightly on my leg, and inched its way towards my crotch. With my right hand still around her shoulder, I brought my left hand across and put it on her bare knee. The more her hand drifted upwards, so did mine, up her short skirt.\n\nIt felt wonderful, like something we'd missed out on as teenagers: pawing at each other friskily in the movie theater. Originally, Lara had called our first night together a 'release of unrequited teenage emotions', and I agreed with her apt label. Her hand now reached the erection that was pushing tightly against my pants, and my hand now found her warm panty-covered paradise. She moaned into my mouth as I grazed my fingers over it.\n\nI was able to slip my hand inside the leg hem of her panties and find her wet pussy. It was shaved smooth; I recalled that she'd had some hair the first time we made love, so she must have shaved it away for me. She bit her lip to silence herself as I pushed a finger inside. Her hand squeezed my erection, but then she retracted it and firmly grabbed the arm rest instead. I withdrew my finger and pushed in again, this time using my thumb to rub her clit. Her right hand flew to her mouth to cover her noises.\n\nIt was a little awkward doing this with my left hand, but that was okay. Since we were in the dark and there were people around who could potentially catch us, I was fine with going slow. I heard no complaints from Lara. I worked my finger in and out slowly, then added a second finger. Her eyes got wide, but she was managing to stifle her moans.\n\nI finger-fucked her there in the darkness, wanting her to enjoy my touch. Then I went in for the coup de grace. I leaned in towards her and whispered in her ear, \"When I get you home, I'm going to fuck you until you scream my name. But first, I want you to come for me.\" She released a tiny moan that she couldn't quite muffle completely. I continued, \"You're going to come for me, baby. Come on my fingers.\" My breathy words giving her naughty thoughts helped push her over the top, and she came. She gasped a quiet \"eeep\" noise as she climaxed. I felt her tight pussy squeeze my fingers, and I left them there until finished.\n\nWhen I withdrew them, I helped her fix her underwear and skirt, so it didn't show any evidence. But then she whispered in my ear, \"You just wait. I'll make you scream my name too.\"\n\nShe made good on her word. On the half-hour drive back to Lara's trailer, she leaned over my lap, unzipped my pants, and took my rock-hard erection into her mouth. I almost swerved off the road a few times as she licked around the head of my cock. \"God, Lara, you're gonna kill us both if you keep that up,\" I told her.\n\nI somehow managed to get us both to the trailer without dying and without exploding my load into her mouth. She jumped out of the car and quickly ran into her trailer, and I gave chase. She'd been heading for the bedroom, but I caught her in her living room and pushed her against the wall. \"I'm gonna fuck you,\" I groaned in her ear as I kissed her neck. \"Right here, right now.\"\n\n\"Oh God yes, fuck me,\" she moaned back. I moved her to the arm of her couch and bent her over it. Then I flipped up her skirt and brought her panties down to her knees. My pants had still been unzipped from before, so it was no hard task to slide them down too. I pressed my dick against Lara's pussy and pushed inside. She was so wet that it didn't take much effort. She gripped the couch and howled my name as I pounded her. I'm sure the whole trailer was rocking from my efforts.\n\nI glanced over at her living room floor, which was still littered with Zeke's toys. It was instantly sobering. I realized I was fucking Lara without protection. I slowed my pace, and she noticed. \"What... what's wrong?\"\n\n\"I didn't put on a condom.\"\n\nI went to pull out, but she gripped my shirt from behind her. \"Nooo,\" she said, \"just fuck me. It's not that time, I promise.\"\n\nI wasn't sure, but I trusted Lara. Her high school self would have lied to manipulate me, but I was sure this mature version wouldn't do that. I slowly picked my pace back up, and really started driving into her. She squealed in delight and then came, her loud, powerful orgasm gripping my cock. I didn't let up, though. I fucked her silly, then, as I felt my own climax coming on, I pulled out and pointed downwards, spraying the floor with my hot spunk.\n\nLara saw me do it. \"You're cleaning that up,\" she told me, but it was with a contented, post-sex sigh.\n\nI laughed, \"Of course I will.\"\n\nShe stood up, and walked towards the kitchen, wobbling side-to-side on the way. \"I can't walk in a straight line,\" she said with a giggle. She grabbed some cleaner and a rag, and handed them to me, and I kneeled down to get right to work.\n\n\"Why'd you do that?\" she asked, sitting on the floor near me.\n\n\"I... well, I didn't want to burden you with another child,\" I tried to explain. \n\nLara frowned. \"My son isn't a burden.\"\n\nI shook my head. \"That's not what I meant. I'm not doing a good job of explaining it. I mean, I love you, and if we ever do have a child together, I want us to be married first.\" I took her hand, and said, \"I want to do the honorable thing by you. Does that make sense?\"\n\n\"You love me?\" She said, smiling.\n\n\"I do.\" I leaned in and kissed her. \"And that means I want what's best for you. And that's probably not another kid, at least right now.\"\n\nShe nodded. \"Okay. Yes, I get it. But you better get more condoms.\"\n\n\"I will,\" I said with a grin. \"We got us a good thing here. I'm not trying to let it go.\"\n\n----\n\nWhen I walked into the mayor's office on a Monday morning, I was ready to put on a show. \"Well, boy, nice to see you,\" Jim Hammond Jr. said. I knew that the opposite was true. His secretary Betty had set up the meeting; it wasn't his idea.\n\n\"Nice to see you too, sir. I came to talk to you about the old building on Maple Street.\" I made sure my posture was as physically unintimidating as possible. It was hard, since I had a few inches on the mayor, and more muscle.\n\n\"Oh yeah, the old garage. Been closed over twenty years, if I recall. Asking price is $100 thousand, if you're interested.\"\n\n\"I'm interested, sir, but I don't have that kind of money.\" That was a lie. The bank had authorized me for a loan of $150 thousand, but he didn't need to know that. \"I was hoping we could make some kind of a deal, maybe?\" \n\nThe mayor grinned. He thought he had me over a barrel. I could already see the thoughts in his mind - he'd do me a favor, if I promised I'd help him in return somehow. I'm sure he thought he could gain leverage on me, and call in a favor of his choice, but that's not what I had in mind.\n\nI spoke as timidly as I could, while maintaining my agenda. \"I was thinking I could buy some of the parts from your brother's gas station.\" His little brother was a screw-up who couldn't handle anything more than that storefront. The gas station had a few basic parts, but certainly not everything I needed. \"And maybe I could take a couple of the kids from the high school, teach them how to fix cars too. Like auto shop.\"\n\nThe mayor eyed me, considering my ideas. He seemed to be agreeable so far. \"Sounds okay, I think we can make a deal there. How does $60 thousand sound?\" \n\nInwardly, I smiled. Betty's guess had been accurate. Outwardly, I tried to look relieved. \"That sounds great, sir.\"\n\n\"I just got one more condition.\"\n\n\"What would that be sir?\"\n\n\"I heard you been seen around with Lara. I done told you, boy, that girl won't bring you nothing but trouble,\" he droned on. \"If I'm gonna invest in you, I gotta know that she won't be involved. You understand?\"\n\nI saw that coming, but pretended to be somewhat defeated. This was something I could agree to without having to follow through. There was no way he could put in a legal document 'don't date the daughter that I disowned'. I hung my head and reluctantly nodded. \"I promise, sir. She won't be involved in setting up my business.\" I worded that carefully so it was true. Lara would not be involved in setting up the new business, but I didn't mention anything about the future, after the business was set up. But then I added a condition of my own. \"Sir, your condition, it's a little unorthodox. It may take me a while to get started without her help. Is there any way we can make the price $55 thousand?\"\n\nHe pondered it, then countered. \"$58 thousand.\"\n\n\"Deal, sir. Thank you very much.\"\n\nAs expected, the paperwork was very standard. It didn't mention any of those little conditions we stipulated with each other. So none of it was legally binding. If he tried to harass me about it, I could get a lawyer to defend me. The mayor was assuming I was a man of honor. I was. But he wasn't, and that's how I justified ripping him off for thousands of dollars.\n\n----\n\nMy Pop loved fixing things. So when I told him about the garage with an apartment above it, his eyes glowed a little. I drove him and Steve over that afternoon, and we made lists and plans. Pop said the pipes were good, but we'd have to replace all the electrical lines. That was fine with me, as I planned to put in internet lines as well. We planned to do the apartment first, to give me a place to live and get me off the couch. Then we'd focus on the garage below.\n\nAfter telling Pop, I figured it was time to tell Mom too. Then she insisted that I tell the twins. I did tell them about parts of the plan, but they didn't need to know all the minutiae of the business deals. The important part was that we needed the mayor to think he'd gotten the better of me, and the family would need to keep up that image until it was too late.\n\nSteve again asked if I would tell Lara, since we'd been dating about a month's worth of Sundays now. Lara knew something was going on - she was far from stupid - so was starting to get frustrated when I wouldn't say anything. \"It's better that you not know,\" I told her. \"It's safer that way, trust me.\"\n\n\"You better not be seeing another girl, Charlie Williams,\" she gave me her sternest look. \n\n\"I assure you I'm not,\" I said, then I teased her, \"Remember, I know what you'd do to other girls.\" \n\nShe hit me in the shoulder. Worth it. \"I will find out,\" she warned.\n\n\"Eventually, I will tell you, I promise. Please just trust me for now.\"\n\n----\n\nI should have known Lara would be stubborn and not listen. She followed me one day when I drove to the old garage. I had just closed the door behind me when she knocked on it. \"Whatcha doin'?\" she asked sweetly, as if to deflect the fact that she had not listened to my request.\n\n\"What are you doing here?\" I hissed at her. \"Don't you listen when people tell you things?\"\n\n\"Not when they're hiding something from me. Did you buy this old crappy building?\" she asked, looking around at the dark garage.\n\nI closed the door again. \"You need to get upstairs right now!\" I said, pointing at the old staircase.\n\n\"What? Why?\"\n\n\"For the love of God, get up those stairs right this second or I'll knock you out and carry you up there!\" I wanted to yell but I tried to keep my voice down. \n\nLara finally saw the serious look on my face. \"You'd never hit me,\" she muttered, but she finally went to the stairs and started climbing up.\n\nJust as she slipped out of sight, there was another knock on the door. \"Good morning, Mayor Hammond,\" I said, clearly. If Lara had been listening from upstairs, I was hoping she'd go hide at the mention of her father's name.\n\n\"Morning, Charlie,\" he said pompously, striding into the garage. \"I see not much has changed since I've last been in here.\"\n\n\"Not yet, sir, but soon. I've got some contractors that will come replace these old car lifts. Then I'll get to work putting in new lights, and a new desk for the front.\"\n\n\"So when you think you'll be ready to open?\"\n\nI shrugged. \"Don't know yet exactly, but hopefully this fall.\"\n\nHe clapped me on the back. \"Well I'll be glad to see it. Keep up the good work, boy.\" \n\nThen he thankfully left. When I was sure he was gone and not coming back, I locked the door and went up the stairs. Lara wasn't in the great room, so I bet she was hiding. \"He's gone now,\" I called out. \n\nLara sheepishly came out from one of the bedrooms. \"I'm so, so sorry.\"\n\nI held open my arms and she walked to me for a hug. \"Do you trust me now?\" I asked.\n\n\"Yes. Anything you ask, I trust you.\"\n\n\"Okay. Now listen: I didn't want you to be here because I knew he'd show up. It was safer for you that way.\" Then I told her, \"I also had to tell him that you won't help me set up my new business.\"\n\n\"I won't?\"\n\n\"No. It was one of his conditions. But, it helped me drive the price down. And,\" I paused for dramatics, \"I only said you won't help set up the business. I didn't say anything about after the business is opened.\"\n\nI gave Lara the quick tour of the apartment. Pop, Steve, and I hadn't done much yet to the bedrooms. The bathrooms were okay, but needed a little TLC. The kitchen was our big project so far. We'd ripped out the old counters and replaced them with new ones, including the sink. Appliances were going to be delivered this afternoon. I had a few chairs and a folding table as furniture so far, but as soon as I got a bed in here, I could move in here right away.\n\n\"It will be nice to have a place of my own,\" I told Lara.\n\n\"You'll be all alone in this big apartment?\" Lara asked, batting her eyes at me.\n\n\"I'll be alone at first,\" I teased. \"But maybe I could use a couple roommates. You think Steve and Prudence would want to move in with me?\" Lara wound up to punch my shoulder, and I caught her arm. \"That's a joke, you hot sack of crazy.\"\n\n\"So you think I'm hot?\" she grinned.\n\n\"Baby, you're a fire hazard,\" I responded, and kissed her. \n\nI might have done more that kiss her if I'd had a bed there. Or a couch. Or even a decent, clean blanket would do. But I had work to do anyway. \"Now shoo. Don't let your father catch you in here.\"\n\nShe grunted as I gently pushed her away. \"Fine. Thanks for showing me your new place.\"\n\n----\n\nThe next few weeks passed quickly. I spent Sundays with Lara and Zeke. The other six days were mostly spent on the apartment. I finished the kitchen, and supervised as the appliances were installed. Then I started on the master bathroom. I bought a mattress and box springs, but no frame yet, so they were just on the floor of the bedroom. That little bit enabled me to move out of my parents' house.\n\nI started realizing why the garage was so cheap: the mayor didn't realize the apartment above existed. He must have been too lazy to properly inspect the entire property. He stopped by one day, long enough to see that professional contractors were replacing the hydraulic car lifts with new ones, then left. So I was able to continue work upstairs while professionals worked downstairs.\n\nLara was constantly curious about the progress. But she didn't dare to drop in again, after almost being caught by her father the last time. So I took pictures and showed them to her, satisfying her curiosity, at least for now. She admonished me at one point, ridiculing my penchant for frozen meals. She demanded that I come by the diner at least once a week so I could get a proper dinner. I knew Lara made the soup of the day on Wednesdays, so that became a regular night for me to drop in. The only soup of hers I didn't like was a vegan chili that she was trying out, but even she admitted it wasn't her best work.\n\nBefore I knew it, August rolled around, and I got the call from Frank. June was in labor, and he was driving her and Mom to the hospital in the city. I picked up Pop and the twins and drove there too, a few minutes behind. We sat in the waiting room for seven hours before we were introduced to Eliza Marie, my first niece. She was so tiny, and I had to wait in line until after the grandparents all got their turns to hold her. I made sure to take pictures of everyone holding her, especially June and Frank. When I sent one to Lara, she texted back to send her love to everyone.\n\n----\n\nBy mid-September, the apartment was more than habitable. I had living room furniture, a kitchen table, good kitchen appliances, a washer and dryer, clean functioning bathrooms, and my bed and dresser in the bedroom. The other two bedrooms were completely empty, of course, and I didn't have much in the way of decor. But it was all mine, and I wasn't sleeping in my parent's den, so I was loving it.\n\nOf course, I thought about having Lara and her son move in with me. I couldn't right now, as it would jeopardize my deals with the mayor. Also, in my mind, she and I weren't quite at that step yet. The way I saw it, cohabitation is a close neighbor to marriage, and we'd only been seeing each other a couple of months. And some folks in this town wouldn't look kindly on an unmarried couple living together. It was far too small of a town to make enemies for that reason.\n\nI also would have to figure out my relationship with Zeke. I wasn't just dating Lara, as she and her son were a package deal. I figured that if I married Lara, I'd do the just thing and adopt the boy. But was I really ready to become a dad?\n\nI had a heart-to-heart with Pop in the barn about this one day. \"You helping take care of the boy?\" he asked.\n\n\"I only really see him once a week. Twice sometimes,\" I answered.\n\nHe rephrased his question. \"When you do see him, do you get along? What kinds of things do you do?\"\n\n\"Normal kid stuff, I guess.\" I shrugged. \"I read to him sometimes. I bought him a dinosaur toy, he really likes that. If we go on a picnic, I run him around the playground a bit.\"\n\n\"Well, that's a part of fatherhood. You're getting the good parts there. What about when he's upset?\"\n\nI thought about it. \"There was a day he was just having a snit. I don't really know him well enough to do anything about that. You know, like discipline. But Lara's really good at that stuff.\"",
        "Pop looked at me. \"If you're a father, you take the bad with the good. You know how many times I had to smack you or yell at you when you were little?\" I shook my head. \"A lot. You and Steve. And the girls too. All kids goof up, mouth off, have fits. It's part of their life. But if you teach 'em right, they grow up good. I like to think I've done a good job.\"\n\nI smiled. \"You did, Pop.\"\n\nHe patted me on the shoulder. \"But then there's this. You know how many times I had to really punish you?\" I shook my head. \"Neither do I. I don't keep track of that stuff. But I remember the days you came home with straight A's on your report card. I remember when you got your driver's license. I remember that day you and Steve beat up that kid who was trying to mess with June. Those days, the good days, when you're proud as heck, are worth remembering.\"\n\nBefore I left my parents' house, Steve caught me. \"Hey, Charlie, can I ask a favor?\"\n\n\"Anything for you, Steve.\"\n\nHe looked down at his feet, and said quietly, \"It's a little... it's kind of a private thing.\"\n\n\"Something wrong?\"\n\n\"No, yeah, well... here's the thing. Prudence and I feel it's kinda awkward, you know, being together, in Mom and Pop's house. Especially with the girls around too.\"\n\n\"Being together? You mean sex?\"\n\n\"Yeah,\" Steve said, blushing. \"So I was wondering if we could, maybe, borrow your apartment? Just to get some privacy?\"\n\nI looked at my brother and grinned. \"Tell you what. I got extra rooms. And I could use a young woman to work my front desk, part-time. How about you and Prudence move in with me, and she works the desk as part of the deal?\"\n\nSteve's eyes lit up. \"You mean it? We can really move in with you?\"\n\n\"I mean it. Who better than to have as roommates than my family?\"\n\nA week later, I started to regret my offer. It turns out that Prudence was a bit of a screamer. The walls weren't thin, but I could still hear Prudence's moans as she and Steve made love. Every damn night. It wasn't their fault really. Of course newlyweds should enjoy sex with each other. It was my problem, as I was jealous as hell. Hearing my brother's wife's bedroom noises made me think of Lara.\n\n----\n\nA few weeks later, the garage was ready to open. I had a grand opening ceremony put together. The mayor was coming to say a few words and then cut a ribbon with me. The neighborhood was starting to spread the buzz about it. Mr. Anderson from the hardware store next door told me he really appreciated me fixing up that old building.\n\nLara helped Mom and the twins to bake hundreds of cookies for the event, while I watched Zeke. I knew Mom and Lara would get along, but I occasionally watched the twins' reactions. I remember one of them had initially been opposed to my dating Lara (which one, I can't clearly remember) but now they both seemed ready to get to know her.\n\nWe also had officially inducted Lara into \"the Gang\", which now consisted of my entire family (including Frank and Prudence), Lara, Amanda, and Greg. They were all sworn to secrecy about the unwritten deals I'd cut with the mayor, and how I intended to honor almost none of them.\n\nI also had allies outside of the Gang. Betty, the mayor's long-time secretary, kept me notified of what he was doing. Greg hooked me up with a friend of a friend, an auto parts wholesaler, who was interested in getting my business. June, still on maternity leave, had found a high school junior named Joey who was interested in being my part-time apprentice for a little school credit. The biggest surprise on that list was Lara's mother, who despite her husband, approved of me courting her daughter.\n\nThe grand opening was on a Saturday in late September. The weather was still nice though slightly chilly. Folks from all over Gideon came to see the new garage and shake my hand. Everything was in place when Mayor Hammond arrived, his wife on his arm. I turned the music down and invited the mayor to stand at the small podium we'd set up.\n\nHe cleared his throat and started speaking. \"Today, the town of Gideon comes together to celebrate the opening of this new fine new garage. It will surely be of benefit to every one of us.\" There was some mild applause. \"We also salute the nobility of its owner and operator, our hometown hero, Charlie Williams, Private First-Class in our United States Army.\" More applause. \"Charlie, will you help me do the honors?\"\n\nHe and I each took a pair of scissors and cut through a ceremonial red ribbon. I copied his pace in cutting, as he was doing it slowly so the cameras could take his picture. Once it was cut through, we stood back to let the people into the garage. The new car lifts were ready for my first customers. Lights had been replaced, and shiny new tools awaited their first use. On the side, there was a front desk with a new computer, and a small waiting area.\n\nWhile everyone else oohed and ahhed, the mayor pulled me aside, \"So Charlie, you ready to follow through on those conditions we agreed on?\" I found it interesting that now, as a business owner, I was Charlie to him, not just 'boy'.\n\nI nodded with a smirk. \"Yes sir. First, I have a young man lined up who's interested in helping me, pending the school's approval.\"\n\n\"That's good. What about buying parts from the gas station?\"\n\nI held up a receipt for him to review. \"I bought a few things from there yesterday.\"\n\n\"Hmm.\" He reviewed the transaction. \"Not a lot on here.\"\n\n\"Your brother doesn't keep very much in stock, sir. I had to make other arrangements for the rest. I'll be getting most of my parts wholesale from a good dealer I found.\"\n\nMayor Hammond's eyes crossed a bit in irritation. \"That wasn't what we said.\"\n\n\"What we said, sir, if you remember, was that I'd buy SOME parts from the gas station. I didn't say how much. So that condition has already been met by yesterday's purchase.\" I grinned, knowing that I'd beaten him. I already knew what he'd ask about next, and he did.\n\n\"What about our last condition? Lara's not to be around here at all.\"\n\n\"Again, sir, that's not what we agreed. We said she wouldn't be involved in setting up the business. I think we can both agree that the business is now set up.\"\n\nHis face turned red. \"But... But...\"\n\n\"In fact, sir, she's upstairs right now, with your grandson. Would you like to come say hello?\"\n\nHe turned beet red at that. \"You,\" he growled, \"You think you're smarter than me.\"\n\n\"Yes I do, sir.\" I couldn't hide the smile from my face, or the condescension from my voice.\n\n\"You'll regret the day you messed with me, boy.\" He turned and stormed off.\n\n----\n\nI took the Mayor's threat seriously. It wasn't a big surprise that, three days later, a pair of vandals broke into my garage at 2:00 AM. Both men wore black clothes and ski masks, and they broke through the window to enter the garage.\n\nIt was a surprise for those vandals that Steve and I were sitting in the garage with shotguns pointed at them.\n\n\"On the ground, now!\" I yelled at them. They obediently put their crowbars down and laid on the floor of the garage, face down. I was glad for that, as I really didn't want to shoot anyone. I kicked their crowbars away from them while Steve kept his gun on them. I quickly ziptied their hands and feet so they wouldn't go anywhere.\n\n\"How'd you know we was coming?\" one of the masked burglars asked. \n\n\"We've been here every night,\" I lied. Betty had figured out when the mayor's goons were going to attack, and warned us in advance. Nobody else needed to know that I had a mole in the mayor's office. I could have notified the sheriff, but I wasn't entirely sure if he'd side with the mayor. \n\nI ripped the ski masks off both men, and immediately recognized them. \"You're the clowns from the diner, a few months back.\" I kicked one in the side, making him grunt. \"You're the one whose ass I kicked. You morons work for the mayor?\"\n\n\"I'm not saying nothing to you, fuckface.\"\n\n\"Fuckface? Okay.\" I kicked him again. \"Call me more names. I dare you.\" They were both silent. \"Let's talk about the mayor. I know he sent you. How much did he pay you?\" More silence. \"Did the mayor tell you I'm military? I've shot people before.\" That was an exaggeration; I'd only ever shot one man, and it was in his leg. \"It doesn't make much difference to me to shoot two more.\"\n\n\"Okay! Chill!\" the other one cried out. \"Dale Hammond said he'd pay us a thousand each to mess your place up. That's all.\"\n\nI frowned. The mayor had used his brother Dale to contact these guys. I was hoping to nail the mayor, but his brother would have to do. \"You get that?\" I called to Steve.\n\nHe clicked off the video recorder. \"I got it. What do you want to do with these guys?\"\n\nThe next morning, people were appalled to find two men tied to a light post in the middle of the town square. They were tied so they were facing each other, and for some reason they were missing their pants. Gideon's town sheriff had to take them both away for public indecency. \n\nIt was so shocking, and such good gossip, that people didn't even notice as the county sheriff's men took Dale Hammond away in handcuffs. Thanks to the video we'd sent him, Dale was going away for a little while.\n\n----\n\n\"I'm sorry I got your uncle arrested,\" I told Lara on our next Sunday date. She'd brought Zeke to my apartment. Steve and Prudence were out, giving us some quality time.\n\n\"I'm sorry you didn't get him arrested sooner,\" she responded, surprising me. \"He was an ass. And a drunk. Everyone's safer if he's in jail, otherwise he might wreck his car into somebody.\"\n\nThe three of us were snuggled on the couch together, watching TV, though I think Lara and I were both hoping Zeke would fall asleep so we could have some couple time. At least that's what I was thinking. So far, no luck. \n\nI thought maybe his eyelids were drooping, when suddenly there was a knock on the door. \"Charlie?\" Pop's voice came through the wooden door. \"You in there?\"\n\nI got up and opened the door to find him and Mom. Pop looked irritated and Mom looked a little shaken. \"Come in, what's going on?\"\n\n\"Charlie, it's awful,\" Mom started out.\n\n\"Son, we just got a visit from the mayor,\" Pop said, glancing between me and Lara. \"He threatened to get our farm shut down.\"\n\n\"How?\"\n\n\"Something about health and safety regulations or something. He said he'd get inspectors to comb every inch of the farm.\"\n\n\"Pop, your farm is up to code. Everyone knows that.\"\n\n\"We all know it, but you know Jim Hammond. He'll play dirty. He'll have his inspectors fake something, or plant something.\" He looked at me in the eyes. \"Bottom line is, we'll lose the farm if they do.\"\n\n\"That dirty bastard,\" I clenched my fists. It was clear that he wasn't done with me, so he was going after my family. \"Something's got to be done about him.\"\n\n----\n\nThat night, we called an emergency meeting of the Gang at my parents' house. Everyone was there, including Lara. Zeke and baby Eliza slept in a bedroom while the rest of us conferred together around the dining room table.\n\n\"We need to protect ourselves,\" Frank said. \"We know what happened at the garage. They could attack our homes or our businesses. And I won't let that asshole hurt my wife and daughter.\"\n\n\"Hammond's smarter than that,\" Steve countered. \"He won't do the same thing twice. But I agree, we all need to be on guard.\"\n\n\"Whatever we do, we need to do it together,\" Lara spoke up, after hearing all of our criticisms of her father. \"He'll have people organized. We have to do the same.\"\n\nMom said quietly, \"He does have a lot of people under his thumb.\"\n\nI had been mostly quiet. Pop finally asked me, \"Charlie, what do you think?\"\n\n\"I think Lara's right. He'll be organized. But we can do the same.\" I looked at Lara. \"His threat against the farm is typical of his playbook. The same playbook you used to use.\" \n\nLara flushed with color. \"I thought you forgave me for all that.\"\n\n\"I did. And I know you put it all behind you.\" I put my arm around her shoulder. \"But now I need you to think about it again. What else is he planning? How else is he going to use his influence?\"\n\nLara closed her eyes to think. \"He'll have guys. Big guys to threaten people. So yes, we need to be on guard for that. He won't go after the women. But you men, he'll try to at least intimidate you.\" \n\nI nodded, and glanced around at Steve, Frank, Greg, and Pop. \"Okay. Go on.\"\n\n\"He'll try to use legal methods too. Like the inspection on the farm. I don't think he'll bribe the inspectors. But some of them are probably under his influence somehow. We just need to make sure that the inspectors who get assigned are clean.\"\n\n\"I can help with that,\" Pop said. \"I've had a few inspectors get assigned here. I know which ones will be strict, but fair.\"\n\nI looked back at Lara. \"Anything else?\"\n\nShe just shrugged. \"Most of his power comes from being Mayor.\"\n\nThere was a beat of silence before Jenny finally spoke up. \"What if he wasn't the mayor anymore?\" We all turned to look at her. \"November's coming up. Someone can run against him.\"\n\nI grinned at her. It took the youngest of us (younger than Jilly by three minutes) to come up with the ultimate solution. \"That's true.\"\n\nMom was stunned. \"Nobody ever runs against the mayor. I don't really know why, but that's just the way this town has always run.\" \n\n\"Some things change, Mom.\" I stood up. \"I'm running for mayor of Gideon.\"\n\n----\n\nThe town of Gideon doesn't have a lot of people. On the rare occasion that my parents don't know someone, one of my trusted friends does. We decided to keep the official announcement of my campaign under wraps at first; instead, we went and had private talks to a few people who we already knew were unhappy with Jim Hammond's leadership.\n\nFor example, I went with June and talked to the teachers at the school. It was easy to round them all up since there were only a handful of them to begin with. It seems the mayor was a fan of the traditional methods, the 'that's the way I learned it' style of education. As a result, he was resistant to provide funding for technology and other enriching activities that the teachers asked for. I told the teachers I didn't know what the town budget looked like, but I'd look into it for them. I agreed that our local kids needed a wider variety of educational experiences, and that pleased them.\n\nPop had me talk to a few of his farmer friends who'd been similarly hassled by the mayor's inspectors. Amanda and Prudence collected a small group of women who felt devalued by the mayor's misogynistic comments. I talked to Mr. Anderson at his hardware store about how the mayor's rule had stifled local commerce, and he sent me in the direction of a few other receptive small business owners.\n\nAfter those small meetings, I had a small base of probable voters even before publicizing my campaign. Prudence and Lara did the math and approximated that I could already count on about a third of the town. The biggest hurdle, though was yet to come.\n\n----\n\nI walked into the church on Sunday morning with Lara on my arm. She held Zeke's hand. People whispered when they saw me, as this had been the first time I'd been to Sunday services since I'd left for the army. They whispered more when they saw Lara. Since she had missed Steve and Prudence's wedding, she had not entered the building since she was pregnant and the minister called her a whore.\n\nI looked up at Reverend Jones as we sat down in a pew. He wasn't expecting us at all. His face was white as a sheet. I wouldn't bother coming if I didn't have a reason. It's not that I don't believe in God, but I sure won't participate in a church where the minister throws out a young woman in need of help. But the Sunday morning service is the best way to make announcements, since practically the whole town is there.\n\nThe minister seemed to be nervous as he read through his sermon. He kept glancing at Lara, then at me. My eye contact never wavered. I was silently letting him know that if he had something to say to Lara, he'd have to go through me.\n\nReverend Jones finished his preaching, then as always, he asked if anyone has any community news to share. Some days, no one did; other days, it was a bake sale or a school event or something.\n\nI stood up and walked to the front of the church. I spotted the mayor and his wife and son Lance, in the front row of course. The mayor's face went fire-red, indignantly angry that I'd even be there, let alone speak.\n\n\"Ladies and gentleman,\" I spoke clearly for all to hear, \"you all know me. I'm a native son of this town. I've seen how things are run here, and how things are in the rest of the world. And let me tell you, we can do better. We deserve better, and so do our children.\" I looked down at the mayor. \"We deserve better than Jim Hammond. Therefore, I'm announcing my candidacy for the office of mayor in next month's election. I know we're a small town, and some things around here never change. But some things do. And we need a leader who will embrace the new times we're living in, not resist them because they're not what he knows. I encourage you to think on that, and come talk to me if you have questions. Thank you for your time.\"\n\nThe mayor was sweating. He wanted to shout at me, I could tell, but that wouldn't play well. He'd never win an election if he started swearing at me in the church. I sat back down and looked at Reverend Jones again. He was also sweating, but I sensed it was a different reason.\n\n----\n\nAfter that, I started getting phone calls at the garage, but not to make appointments for car servicing. Several people were genuinely interested in talking to me about my opinions and ideas for the town. My team had also gone into full action. Mom and the twins put up flyers around town: \"Vote Charlie Williams, for progress and justice.\" My family and friends were spreading the word and getting people to at least talk to me.\n\nA few calls were asking about Lara. They wanted to dredge up the past, to discuss her 'unfortunate situation'. I told them my relationship with her wasn't part of my campaign, but I also brought up how the current mayor had thrown his own daughter out of his house in her greatest time of need. What does that say about his character? Will he also neglect the town's citizens when they need assistance?\n\nI got a huge surprise that Thursday as I was closing up for the evening. Mrs. Hammond walked into the front office of the garage and locked the door behind her. \"Good evening, Charlie,\" she said politely.\n\n\"Hello, Mrs. Hammond. How can I help you?\"\n\nShe looked around, affirming we were alone. \"I need to ask you about something Lara told me.\"\n\n\"Ask away.\"\n\nShe asked quietly, almost in a whisper, \"Is it true my husband sent thugs in here to rob you?\"\n\n\"More vandalize than rob, but yes he did,\" I said flat out. \"They admitted it was Dale who contacted them, but I think we both know Dale couldn't organize anything like that on his own.\"\n\nA tear formed on the corner of Mrs. Hammond's eye. \"And he told you not to help my daughter and my grandchild,\" she said, sitting in one of the waiting area chairs.\n\n\"Yes ma'am, he did.\" I sat down with her. \"But I know you still try to help Lara as much as you can.\"\n\nShe nodded. \"I still love my daughter, and I love little Ezekiel.\"\n\nI smirked. \"Ezekiel?\" This was the first time I'd heard Zeke's full name.\n\n\"Lara named him that after my father. She was so distraught when she had nowhere to go. My father had lived in that old trailer. It had been empty a few years after he died, but I gave it to her when Jim kicked her out.\" She started to cry. \"No one knows this, but he hit me when he found out.\"\n\nI was truly shocked. \"Oh my God.\" I grabbed a tissue for her. \"Why didn't you tell anyone?\"\n\n\"I... I stayed for Lance's sake. And to help Lara whenever I could.\"\n\n\"Mrs. Hammond...\" ",
        "\"Please, call me Nancy.\"\n\n\"Nancy, I had no idea. I'm so sorry.\" I wrapped an arm around her.\n\nShe cried into my shoulder. \"How did I end up with a terrible man?\"\n\nI couldn't answer that. The best I could say was, \"I don't think he was terrible at first, right?\"\n\nShe sat back and thought about it. \"He was my friend at first. But do you know how he got me to go out with him?\"\n\n\"How?\"\n\n\"He threatened any other boy who looked at me. He made it so all the other boys were too afraid to ask me out. I didn't know that at the time. He was the only one asking, so I went out with him, and then married him.\" She looked at me. \"I think that must sound familiar to you.\"\n\nI nodded. \"Lara tried the same thing.\"\n\n\"But you left.\" She put her hand on my shoulder. \"I think you did the right thing. And now you're still doing the right thing. If you had dated Lara back then, you'd both be unhappy. But now things have changed, and you're both better people for it.\" She paused, then added, \"And now you love her.\"\n\n\"I do love her,\" I confirmed. \"And I love Zeke. I know we haven't been dating long, but it feels right, and they make me happy. And I think I want them in my future.\"\n\nNancy smiled. \"I was hoping you'd say that.\"\n\n\"What about you?\" I asked. \"What are you going to do?\"\n\nShe inhaled and exhaled, clearing her tears away. \"I'm going to do the right thing. And I'm going to be happy about it.\"\n\n----\n\nIt was a big scandal that Nancy Hammond filed for divorce from her husband. She freely stated her reasons to anyone who asked. I was glad for it, as Nancy had lots of friends, and her stories would only help my campaign.\n\nI also found out something extremely interesting. \n\nI felt sorriest for Lance, Lara's teenage brother. He had been kind of a prick, already taking after his father, but the ending of his parents' marriage shook him. He hadn't spoken to Lara for years, at the insistence of Jim, but now he finally contacted her. He spent a Sunday afternoon with Lara, Zeke, and myself, and caught up with her. He was good to his little nephew, and I hoped that he'd turn himself around like Lara had previously.\n\nIt was through Lance that I learned two very interesting bits of information. First, the diner that Nancy managed was also owned by her, as it had been passed down from her parents. I, along with most people, thought it was one of the many things Jim Hammond owned. I think he also thought he owned it, as he was going to try to claim part ownership in court, though Lance related that his mother wasn't worried about that one bit.\n\nThe other piece was that Nancy had moved out, and was staying with a friend. The mayor had argued that, since Lance was a minor, he should stay in the house with him, so he didn't have to move anywhere. The court had agreed to that tentatively, so Lance was stuck for now. Apparently, Jim had told him, \"You're the mayor's son, and you'll live in the mayor's house.\" \n\n\"He said it like that? Those exact words?\" I asked.\n\nLance seemed confused. \"Yeah, why?\"\n\nI visited Betty in the town hall the next morning. \"What can you tell me about the mayor's house?\" I asked her.\n\nShe furrowed her brow at me. \"You looking to buy more property? Is business really doing that well?\"\n\nI shook my head. \"Something I heard, probably just a rumor, but it made me think. Who owns that house, exactly?\"\n\nBetty's eyes widened. \"Oh. OHHH.\" It took nearly half an hour for Betty to find the paperwork. When we read those yellowed documents together, I nearly fell over.\n\n\"This is big,\" Betty said. \"I never even realized this before.\"\n\n\"I know,\" I agreed. \"This is going to sound wrong, but I don't think we need to share this information just yet. It would, um, affect the election results.\"\n\nBetty saw what I was saying. \"I think you're right. We should keep this quiet. We wouldn't want voters to be unfairly swayed.\"\n\n----\n\nWe were able to find out, through our little spy Lance, that the inspector assigned to Pop's farm was Mr. John Trace, one of the mayor's close friends. He was a regular visitor to the mayor's home. We weren't surprised. We knew Hammond would pull his strings and make his puppets dance.\n\nOn the Saturday morning of the inspection, Mr. Trace went out to his truck and turned the key in the ignition, but it wouldn't start. He tried again and again, but no luck. He would later find out that his alternator was shot and his battery was dead. It's a common thing that happens to many cars at some point, but not usually to a truck that's only two years old, and hadn't shown any problems the night before.\n\nSomeone like the mayor might think the car had been sabotaged. It would take a very trained technician to destroy an alternator like that, especially overnight, in the dark. But I had been seen at the local bar the night before. It was Steve's 21st birthday, so Amanda, Frank, and I took him out for some drinking. We were partying there until closing time, around 1:00 AM. Then I was at the diner for breakfast at 5:00 AM, showered and shaved and ready for the new day. And Trace's home was well over an hour away from Gideon, on the other end of the county. There's no way I'd be able to drive there, do the work, and drive back in time. Not unless I was driving at 100 MPH.\n\nIn reality, I had trained my apprentice Joey to do the work. He slipped out of his window after dark, around 11:00, and Greg (who was supposed to be out of town on business) met him down the street. Greg drove Joey to Trace's house, and got him back by 3:00 AM. \n\nAnd we didn't really destroy Trace's alternator, we just swapped it out for one that was bad. I showed Joey how to do it, then made him do it five times. Then I blindfolded him and made him do it ten more times. He could now do alternator work in the dark, which is exactly what the mission called for.\n\nUpon finding his car out of order, Trace had to call in to his office, and they sent another inspector. This one was more of a rookie, and operated by the book. Pop and Steve were able to point out that everything on the farm was clearly met the requirements of the written code. The rookie inspector was happy and gave them a passing review and a warm handshake.\n\n----\n\nA few days before the election was Halloween. Kids in Gideon don't go house to house, as most farms are a mile or more away from each other. So there's always a fall festival in town to make sure the kids (and adults) get plenty of candy. Kids walk with their parents around the town square and stop at participating businesses like mine. Mom suggested I wear my military uniform, but I told her that's not a Halloween costume. I did find a cheap black cape and plastic teeth, so I slicked my hair back and went as a not-very-scary vampire.\n\nI watched Lara and Zeke across the square, adorably dressed as matching ghosts. They didn't have much money for costumes, so Mom found an old white bedsheet and its matching pillow case. Rather than cut holes just for the eyes, Lara cut holes for their whole heads to stick out, like a poncho. Mom agreed it was safer for Zeke that way.\n\nI continued to watch them as they strolled and met with other townspeople. I was a little surprised with other peoples' reactions to them now. Six months ago, Lara was a bit of a social pariah, especially among the more religious folk. Now, as she'd come out of her shell a bit, people seemed more glad to see her and talk to her, and to see little Zeke as well. She claimed I had something to do with it, but I told her I couldn't take the credit.\n\nI also saw the mayor, sitting on the steps of the town hall, giving out candy. The kids got fun-sized ones. The adults got full-size candy bars with his face and campaign slogan on it. \"Vote Hammond: Traditions and Values.\" As if voters would be interested in his cheap candy and cheaper words.\n\nA man walked up to me as I watched the mayor. \"You picked a tough battle, soldier,\" he said. I turned to see Reverend Jones. \"He's not going without a fight.\"\n\n\"I know.\" I handed a Hershey's bar to a little girl who walked by in a fairy costume.\n\n\"I'm glad you know. It's a lesson I learned too slowly,\" he said.\n\n\"Reverend, sounds like you have a story behind that lesson,\" I inferred out loud. \n\n\"Not a sermon, I promise. Can we talk inside?\"\n\nI nodded and handed the candy bucket to Prudence. She'd been faithfully helping out at the garage, while Steve had been helping Pop at the farm.\n\nI took the Reverend upstairs into the sitting room of the apartment. \"Have a seat, sir,\" I beckoned.\n\nHe sat in the big arm chair and I sat across from him on the couch. \"Let me tell you a story from about thirty years ago. Back then, there were two young men in school together. Best of friends for most of their schooling. Went everywhere together.\" He sighed. \"Then one day, one of those boys realizes he loves his friend.\"\n\n\"I assume it was not a love-thy-neighbor kind of love.\"\n\n\"You assume correctly,\" he said. \"That boy tells his friend how he feels. Well, not only does that friend not reciprocate, but he says very hurtful things in response. Keep in mind, this is in a time when that kind of love is extremely rare, at least in public. So then the first boy is blackmailed with his secret.\"\n\n\"It's still a secret?\"\n\n\"Yes.\"\n\n\"How many people know this secret?\"\n\n\"You, me,\" said Reverend Jones, \"and Jim Hammond.\"\n\nI took in a deep breath and came to the realization of the story. Reverend Clyde Jones was buried deep in the closet. Jim Hammond, Clyde's former best friend, had been blackmailing Clyde for thirty years. In a conservative little town like Gideon, Clyde's homosexuality would have been a huge issue, especially when it comes to him being the minister of the church.\n\n\"I promise that no one else will hear it from me,\" was all I could think of to say. \"But Reverend, why tell me?\"\n\n\"Firstly, I'm sorry for what I did to Lara. I certainly have no right to dismiss a teen girl for her unmarried pregnancy. Heck, the baby Jesus was born the same way. I only did it because Jim demanded it.\"\n\nI nodded in understanding, but the reverend continued. \"Secondly, I'm retiring. No one else knows it yet, but I've decided I'm done with living here, and living a lie. I'll be staying on through next Easter, then I'll leave.\"\n\nAll this news at once was stunning to me. \"I understand, Reverend, more than you may know. That's why I had to leave Gideon myself. I needed to see the world.\"\n\nHe smiled at me. \"And I'm glad you did. People around here say that nothing ever changes. But you're proving them wrong. You're going to be a great mayor. I wanted you to know I'm throwing my support to you.\" He held up a finger. \"And, I'd like to make it all up to Lara.\"\n\nAnd he did. That next Sunday, two days before the election, I brought Lara and Zeke back to the church, despite her confusion as to why. Reverend Clyde Jones preached about love and compassion, especially to those desperately in need of it, and he publicly apologized to Lara. Then he baptized Zeke, and Steve and Prudence were named his godparents. Lara's mother sat next to mine in the service. Jim Hammond was not present, and not missed.\n\nAfter church, my family had a big dinner at my parents' house, and of course Lara, Zeke, Nancy, and Lance were all there. We celebrated Zeke's baptism with dinner and cake, and my hopeful election as mayor with beer. Jenny and Jilly played games with Zeke. I caught a moment when Lara was holding June's baby, Eliza, and she and I shared a look.\n\nAs I drove Lara back to her trailer, with Zeke fast asleep in the back seat, I had to ask about it. \"Saw you with Eliza. You ever think about having another baby?\"\n\n\"Maybe. Not the same way as the first time, of course.\"\n\n\"Of course. This time, you should know the guy's name.\"\n\nShe hit me. I wondered if I'd have a permanent bruise on my shoulder. \"Why are you asking? You want to be the guy?\" she asked with a smirk on her face.\n\n\"Not right away,\" I said. \"But maybe someday.\"\n\n\"How soon is someday?\" Lara asked. By her tone, it wasn't really a demand, it was more of a rhetorical wondering. But it did make me think she was hoping for sooner rather than later.\n\nWe got to the trailer and Lara put Zeke in his bed, which was in the living room, as there was only one bedroom. \"I'm not sure when soon is,\" I finally answered. \"When I find out, you'll know.\" I bent down and kissed her. She wrapped her arms around me.\n\n\"Come with me,\" she said, and led me to her bedroom. \"Someday may not be today, but that doesn't mean we can't practice.\"\n\nI closed the door and hoped the walls were thick enough to avoid waking Zeke. Lara slid my shirt off me and kissed my chest. I unzipped her dress and helped her shimmy out of it, letting it fall to the floor. Then I pulled her in to kiss her again, simply enjoying the feel of my bare skin on hers. I moved my lips to her neck and she sighed in my arms. \"God I love when you do that.\"\n\nI kissed her neck and shoulder while I got rid of her bra, then I led her to the bed and went to work teasing her nipples with my mouth. She gasped when I first made contact, and I gently put my hand on her mouth. \"Shh,\" I warned her quietly. \"Don't wake the little guy.\"\n\nMy other hand slid down her flat tummy to her white panties, which were already wet. When my hand fingers slid inside and found her shaved smooth again, and so soaked it was like my fingers were invited inside. \"Oh God, Charlie,\" she whispered, \"Charlie, I need you in me.\"\n\nI sat up and removed my pants, and she slid off her underwear. I found the condom in my wallet and slid it on as quick as I could. Lara sat up and watched, then pushed me onto my back. \"I need this,\" she said, grabbing my dick, \"in here, now.\" Then she slid it into her warm wet tunnel, and both of us groaned in delight. \"Ohhh, I love you, Charlie,\" she said as she started to ride me.\n\n\"I love you too, Lara,\" I said, holding both her hands in mine, giving her stability as she slowly rocked both our worlds. She couldn't go fast, that would shake the trailer and potentially wake up Zeke. But we didn't need that right now. We watched each other lovingly, as we made passionate love together. \n\nWhen she got a little fatigued of that position, I had her lay down beside me on the bed. I spooned right up behind her, and slid into her pussy from that angle. \"Oooh,\" Lara exclaimed, \"I like this.\"\n\nI thrusted gently from behind her, holding her close to me, playing with her breasts with one hand. I kissed her neck again from there, and she gasped again. This was driving her wild, and I was loving it too. I slid my hand from her breasts to her clit, and rubbed it while I continued to drive into her. Lara started making small sounds, but she was trying to muffle them with her hand. I felt her noises get louder, and her breathing get shallower, and knew she was close. I sped up my thrusts a little more, and got her to cum. She would've been loud, but she kept it nicely muffled.\n\nI hadn't cum yet, and she knew it. She rolled over to face me. \"Let me take care of this for you,\" she said sweetly. Then she peeled off the condom and engulfed my erection into her mouth.\n\n\"Oh God, Lara,\" I groaned for her. I recalled she wasn't the most experienced - she'd been almost a virgin when we started dating - but she was certainly a fast learner. She knew just what places to tease to get me really going. With her talents, especially after a very nice fuck, I wasn't going to last long. \"Lara, I'm gonna, I'm gonna!\" I blurted out.\n\nShe did not relent. Instead, she remained clamped on my dick and sucked up every last drop of my jizz, swallowing every bit of it down. When she was done, she released my dick with a \"POP\" noise, then looked at me with a huge grin. \"Was that good for you?\"\n\n\"Damn, Lara, why'd I wait so long for you?\"\n\nShe laid down with me and nuzzled into my shoulder. \"Yeah, you tell me why?\" she asked. I didn't have to answer. We'd both realized we would never have worked as a couple in high school. But now we were so in love, it was hard to think about those days three years ago.\n\n\"I love you, Charlie. You've done so much for me and Zeke.\"\n\n\"I did it because I love you too. I want you both in my life.\"\n\nFrom the other room, we heard a little voice. \"Mama?\"\n\nWe quickly jumped up from the bed. The door was locked, but he was too young to understand what was going on in here. I put my clothes back on, and Lara threw on some sweats. \"Time to return to reality,\" Lara said pensively.\n\nI smiled at her. \"Reality's nice too, as long as you're around.\"\n\n----\n\nThat evening, I was feeling really good about myself. I had won the girl, and was close to winning the election. \n\nAll things considered, I was riding high at the moment. It's always at that moment that tragedy strikes.\n\nI had parked my truck outside the garage, and was walking towards the door to the apartment when a shot rang out. My combat instincts went into alert mode, but they were too late. A sudden pain radiated from my left calf, and I knew I'd been shot. I fell down, crouching behind the truck, clutching my leg, and trying to stop the bleeding. \"HELP!\" I yelled, hoping someone would hear.\n\nThankfully, Steve came running out of the apartment, his rifle in hand. \"Oh God, Charlie,\" he said, running up to me. \"Someone shot you!\"\n\n\"Do you see anyone else around?\" I asked him, holding my leg.\n\nHe peeked his head up and took a quick look. \"Nobody,\" he reported. \"They must've run off.\"\n\n\"Give me your shirt,\" I told him, and he did. I wrapped it up around my leg to stop the bleeding. \"Okay. Now get me to a hospital. Now.\"\n\n----\n\nSteve told Prudence to call the family, then drove like a madman into the city. The ER doctor told me I'd have to have some surgery to fix the wound. \"You'll be alright,\" the doctor said, \"but you're not going to be able to re-enlist, soldier.\" \n\nThey were leading me towards the surgery area when I heard Lara's voice. \"Charlie!\" she cried out. She ran down the hall to meet me.\n\n\"Miss, you'll have to step back, we're going to take care of him,\" the doctor was telling her.\n\nThe tears were streaming down her face. \"Charlie, I love you.\"\n\nI smiled despite the pain. \"I love you too. I'll see you in a few minutes.\" Steve took Lara and held her while the doctors wheeled me away from her.\n\nThe surgery went well, I suppose. I woke up in a room with Lara sleeping in a nearby chair. My leg ached, but nowhere near what it felt like when I'd been shot. I considered it ironic that I hadn't been wounded while in the military, but somehow got hurt at home instead. I recalled what the doctor had said before the surgery. No Purple Heart for me, I guess. \n\n\"Lara,\" I whispered. She stirred, but didn't wake. \"Lara,\" I said again, a little louder.\n\nHer eyes popped open. \"Charlie!\" She stood up and took my hand. \"You're okay!\"\n\nI managed a grin. \"Okay is a stretch. But I'm alive. I'll be okay later.\"\n\nShe started to cry. \"I thought I'd lost you.\"\n\n\"No way, you'll never be rid of me that easily.\"\n\nLara looked me in the eyes. \"It was my father. I don't know who actually pulled the trigger, but I know he set this up. He probably meant to kill you.\"\n\n\"You're probably right,\" I said. \"He knows he's going to lose, and he's desperate.\" I looked around. \"Where's Zeke?\"\n\n\"With my mom.\"\n\n\"Is my family here too?\"\n\n\"They were here, all of them. But your mother took the twins home, and Frank took June and the baby home. Your dad and Steve and Prudence should still be outside.\" She ran to the door and poked her head out. \"Y'all, he's awake,\" she called to them, and they entered the room. \n\n\"How are you, son?\" asked Pop.\n\n\"I'll be okay, Pop. Just a flesh wound. Could've been worse.\" I looked at Lara again. \"It could have been so much worse.\"\n\n----\n\nEven with me in the hospital all of Monday, word spread through the tiny town of Gideon. No one saw Jim Hammond at the time of the shooting, but there was no proof he was involved. Still, everyone came to the same conclusion that he had something to do with it.",
        "I personally think he did it himself. If he'd hired someone to kill me, a professional, they would have got me in the chest or head, and I'd be gone. But the shooter missed my chest and got my leg. I also believed that, if Steve hadn't come out right away like he did, the shooter could have finished the job. Steve's quick reaction may have saved my life.\n\nLara went home to take care of Zeke, but someone stayed with me the entire time I was in the hospital. Mom brought the twins and my apprentice Joey after school got out. Prudence and Steve came in the evening. Pop stayed with me overnight. I even got short visits from Amanda and Greg, Reverend Jones, and Nancy Hammond. \n\nI was released from the hospital Tuesday morning. I was confined to a wheelchair for a week or so, until I healed up enough walk on my own. My family and friends made a big deal of it as they helped me roll in my wheelchair to the ballot box, so I could vote for myself. \n\nThen Steve rolled me to the garage, and we both realized that there was no way for me to get up those stairs to the apartment. We were both trying to think of an alternative - I was considering moving back to my parents' den - when Steve came up with a creative, and very unorthodox idea.\n\nHe figured that I wouldn't be doing much auto work in the near future, aside from possibly instructing Joey from my chair. So we could set up a bed in one of the garage bays. Or, even better, a mobile bedroom.\n\nThus it was that Lara's trailer was soon relocated in the garage bay. Lara was more than happy to help, of course, though she was concerned since her trailer hadn't been moved in years. She and Zeke took my bed upstairs. And I was able to shift my temporarily-crippled ass out of the wheelchair and into the trailer, and sleep there. \n\nLara poked fun at me about it. \"How is it,\" she asked me while grinning, \"that you won't ask me to move into the apartment with you, then suddenly you do ask, but you're not staying there with me?\"\n\n\"Life is a cruel bitch,\" I nodded. \"Or maybe it's karma.\"\n\n\"How is it karma?\"\n\nI pointed at my leg. \"Remember the guy I shot in Iraq? I'm pretty sure that's the same spot where I shot him.\"\n\n\"You can't call that karma,\" Lara said. \"He was coming at you. You defended yourself.\"\n\n\"Maybe your father shot me to defend himself, or at least his way of life.\"\n\nIt was a sobering statement, but Lara brushed it away with kisses to my forehead. \"Stop that. You are a hero. He's a coward. You are loving and he is hateful. You and he are nothing alike.\" Then she smiled again. \"That's why I voted for you.\"\n\n----\n\nThe normal election processes in Gideon had the mayor and Betty, the secretary, counting the votes together. Since the mayor's office was on the line, the consensus of the town was that he should not participate, though he wanted to. In the end, the town elders agreed that Betty would count the votes with two trusted members of the community, selected by the town's commerce guild. Reverend Smith was an obvious choice. Mr. Anderson, from the hardware store, was selected as the second person. \n\nThe mayor and I watched from a distance as the three of them counted hundreds of votes. I was told it was more votes than any normal election, but most normal elections don't have this kind of controversial issue on it.\n\nThe mayor eyed my wheelchair. \"Heard about your injury,\" he muttered.\n\n\"Yup.\" I didn't have much to say to the man who possibly pulled the trigger, and if not, most definitely knew who did.\n\n\"Gonna be able to walk again?\"\n\n\"Yup.\"\n\nI didn't look at him. I wanted the awkward silence to rattle him. I simply watched the vote-counters do their work and whisper quietly to themselves.\n\nWhen they finally completed their tallies, and verified them between the three of them, they put the ballots away in a folder. Betty walked over to Jim, her hand outstretched. He grinned, and my heart dropped.\n\n\"It's been a pleasure working with you,\" she said to him, making the smile fall from his face. Then she turned to me, and shook my hand. \"Congratulations, Mayor Williams.\"\n\nThat night, I had a party in the garage. Steve moved the trailer out to the street to make room, and all my family and friends came. There was music and dancing. Several women danced with me as best they could with my wheelchair. There was some drinking, but not for me, as I was still on pain medication.\n\nLate in the evening, after Lara had put Zeke to bed, she was curled up in my lap as I sat in my chair. Most of the party-goers had left, but Steve, Prudence, Amanda, and Greg were all still sitting with us.\n\n\"So what's next, mister Mayor,\" Amanda teased. \"Any more big plans?\"\n\n\"Just one I can think of,\" I answered. \"I'm moving into the mayor's house.\"\n\nLooked at me funny. \"You're moving into my father's house?\"\n\n\"It's not his house,\" I stated. \"That house, since it was built, has belonged to the town of Gideon, for the use of housing the mayor and his or her family.\"\n\nLara was still confused. \"But... where will he live?\"\n\nI just shrugged. \"I don't know. I don't much care, do you?\"\n\n\"Not for him, but for Lance,\" Lara pointed out. \"He still lives there.\"\n\n\"We'll figure something out for him.\"\n\n\"Does he know?\"\n\n\"Nope,\" I grinned. \"But he'll find out real soon.\"\n\n----\n\nJim Hammond was furious that he was being evicted from his home. It was really the only home he'd ever known, since his father had been mayor before him. But the town owned the house, and he was no longer the mayor. \"But I'll be merciful,\" I told him. \"You can have two weeks to move out.\"\n\n\"What if it takes me longer than two weeks?\"\n\n\"I'll throw whatever's left in a dumpster.\"\n\n\"Where the hell am I supposed to live?\" he shouted with a red face. I'm sure he would've attacked me if the sheriff wasn't standing behind my wheelchair.\n\n\"I know someone with a trailer, they might be willing to sell it to you at a reasonable rate.\"\n\nHis big red face turned pale so quickly I thought he might pass out. Just the thought of Jim Hammond having to buy that old trailer from his disowned daughter made him sick and made me giddy. \n\n\"This isn't over, boy,\" he said gruffly, then went into the house and slammed the door.\n\n\"He's right, it's not over,\" I told the sheriff. \"He's going to try to get at me.\"\n\n\"How do you know that?\" he asked.\n\nI pointed at my leg. \"Pretty sure he's responsible for this. He knew he was losing that election. It made him desperate. Now he's being evicted, he'll be even more desperate.\"\n\nThe sheriff nodded. \"You know I don't have any proof he shot you, Charlie. But I also don't have any proof he didn't. I'll try to have my deputies keep an eye out.\"\n\n\"I appreciate it.\"\n\n----\n\nHammond was able to get his stuff out of the house by the deadline. The week before Thanksgiving, I had the whole house cleaned and painted, then had my stuff moved in. I had to buy new appliances, since Hammond took those, but it was worth the expense.\n\nI didn't do much of the heavy lifting myself. I was out of the wheelchair, but I was still limited by using a cane to walk moderate distances. The doctors assured me I'd be rid of that before Christmas, but I might have a slight limp for years. But I didn't die and wasn't paralyzed, so I guess I should be thankful that Jim Hammond was a lousy shot.\n\nI let Lara and Zeke stay in the apartment, along with Prudence and Steve. We moved the trailer to an empty spot behind my parents' house. I had no idea where Jim Hammond had gone to live, but he never did come asking about the trailer. I knew he wouldn't; a man like that could never eat that much humble pie.\n\nNancy kept Hammond as her last name, but the divorce became final right before Thanksgiving. Even better, Lance started living with her. He became a little nicer to people, realizing how much people hated his father. \n\nAll my friends and family helped with the moving-in process. I had made a request to them that we have Thanksgiving in that house, and everyone agreed. The house had a huge dining room that we set up so that everyone to eat together. I looked around the table that day. Pop and Mom sat on my right. Prudence and Steve next to them, followed by Jenny. Frank on the opposite end, with June on his right, and little Eliza in a high chair between them. Then Jilly on June's right, then Nancy and Lance and Zeke, and finally Lara on my left. One big family.\n\nI said the prayer, as it was my house. \"Lord, we thank you for watching over all of us and for all the blessings you've bestowed upon us. Thank you for keeping all fourteen of us together through difficult times. And bless this bountiful feast before us. In Jesus' name, Amen.\"\n\nEveryone set to it, but Steve spoke up. \"Charlie, it's fifteen, not fourteen.\"\n\nI looked around the table again. \"You sure you passed math, Steve? It's fourteen.\"\n\n\"I passed math, and biology too,\" he said with a shit-eating grin on his face.\n\nI knew what he meant. \"You got something to say, you say it to everyone.\"\n\nEveryone shut up for a second to turn to Steve. \"Pru and I are expecting.\"\n\nMom was the first to shriek, as she hugged Prudence close. Everyone else congratulated them in turn. June happily said to Eliza, \"You hear that, little girl? You're gonna have a little cousin to play with.\" Eliza smiled and cooed back at her mother, but I'm sure she'd have done that anyway.\n\nThe meal was fantastic. The women all pitched in with the cooking. That meant the men had to help clean up. I waved my cane in the air and claimed a medical exemption, and June and Prudence both booed me. But Frank, Steve, and even Lance helped do dishes. This made the women available to hold Eliza, now sleeping, and have girl talk about Prudence's bun in the oven.\n\nPop and I retired out on the porch. I had put a couple of rocking chairs out there for days like this. \"I like this better than the barn, Pop.\"\n\n\"It's nice, I'll give you that, but at least you can close the barn door and have private talks.\" He looked at me. \"What are you gonna do about Lara?\"\n\n\"Marry her,\" I said out loud. It was the truth and everyone knew it anyways. I hadn't popped the question, but it was only a matter of time.\n\nPop chuckled. \"Didn't expect you to be so honest, you being a politician now.\" We both laughed at that.\n\n\"I love her, Pop. I don't get to see her as often as I'd like. She's still working six days a week at the diner. I told her I'd take care of her, but she wants to earn her money.\"\n\n\"She's stubborn, just like you. Good. It means she won't put up with your crap, and you won't put up with hers.\" Pop slowly nodded. \"It's a good thing. You'll fight, but you'll make each other better and love each other more for it.\"\n\nI thought about that. \"You're a wise man, Pop.\"\n\n\"So when you gonna ask her? Before or after you knock her up?\"\n\nI laughed. \"Damn, Pop. You don't beat around the bush,\" I said. \"I've told her, if we have a kid, it'll be in a marriage.\"\n\n\"Good man.\" Then his ears perked up. \"You hear that?\"\n\nIt was quiet. \"I don't hear anything.\"\n\n\"Exactly. Seven women inside, eight if you count the baby, and not a damn peep. Something's going on.\"\n\nWe went inside to find the women sitting around the living room, several of them looking awkwardly at each other. Zeke was sitting on Lara's lap, as she spoke to him. \"Not everyone has a daddy, sweetie. Some people just don't have one.\"\n\n\"Why don't I have a daddy, Mama?\" Zeke asked.\n\nLara made the mistake of looking up at me as I entered the room, and Zeke turned to see what she was looking at. \"Charlie, are you my daddy?\"\n\nYou could have heard a pin drop. Everyone was looking at me now. The ball had been thrust in my court, well before I was ready for it.\n\n\"Zeke, you wanna come with me, out on the porch? Let's talk outside.\" I said to the little boy.\n\n\"Okay!\" He jumped off his mother's lap and ran over to me. As I left the room with him, I looked at Lara. She mouthed \"sorry\" to me.\n\nI sat Zeke in one of the rocking chairs, and rocked him while I sat in front of him. \"What's all this talk about daddies, buddy?\"\n\n\"Mama and everyone were talking about babies. They said Steve was going to be a daddy, and Frank was already a daddy. But I don't have a daddy, I just have Mama.\"\n\n\"That's right, you have Mama, and she loves you and she takes care of you.\"\n\n\"But what about my daddy?\"\n\nI tried to find the right words to say to explain it to the two-and-a-half year old boy. \"Zeke, sometimes people have different kinds of families. Some people don't have dads, and some people don't have moms. Some people have two dads or two moms. And some people don't have a mom or a dad, and they live with their grandma and grandpa instead.\" He sat quietly; I could tell he was thinking about it. \"Does that make sense?\"\n\n\"So I just don't have a daddy?\"\n\n\"No,\" I answered honestly. \"Not right now. But you know I love your mama, right?\"\n\n\"Yes.\"\n\n\"And she loves me back?\"\n\n\"Yes.\"\n\n\"And we both love you. And maybe someday, if your mama still loves me, maybe we'll get married, and if that happens then I can be your dad. Would you like that?\"\n\nHe nodded enthusiastically. \"Yeah! I think you and Mama should get married. When will that happen?\"\n\nI smiled. \"Well, not today. And I have to ask her to marry me first, and she'd have to say yes.\" \n\n\"Oh. I think if you ask, she would say yes. Mama's really nice.\" He was so honest, it was adorable.\n\n\"I think so too. But we'll talk about that another day, okay?\"\n\n\"Okay.\"\n\n\"Want to go back inside and get a cookie?\"\n\n\"Yes!\"\n\nWe went in and Lara met us in the foyer. \"Mama, Charlie says we can have cookies, and then later maybe he will ask you to marry him.\"\n\nI expected her to be shocked, but she wasn't. \"Okay. Well let's find those cookies.\"\n\nWe gave Zeke two chocolate chip cookies and sent him on his way. \"You were listening,\" I said.\n\n\"Was not,\" she said, but couldn't keep a straight face. \"Okay fine. What gave me away?\"\n\n\"Your son announces our upcoming marriage and you didn't even blink.\"\n\n\"I sure as hell blinked when he said it on the porch,\" she admitted.\n\n\"I bet you did. That little boy needs to learn to keep a secret.\"\n\n\"He's nosy,\" said Lara, \"He gets that from me, I guess.\"\n\n\"But he's also smart like you,\" I pointed out. \"He's asking questions I probably wouldn't have thought to ask at his age.\"\n\nLara nodded. \"Can you imagine him as a teenager? I hope I can keep up with him.\"\n\nWhen people started to clear out for the evening, it ended up being just Lara and I left. Zeke, not long after eating his two cookies, then stealing a third one and gobbling that up too, had fallen asleep on one of the living room chairs. Prudence scooped him up and took him back to the apartment with Steve. Lara was going to object, since she didn't have to do that, but Prudence simply said, \"I need the practice. And you need couple time. Goodnight.\" Then she and Steve left.\n\nThe big house felt empty without all the people. Lara collapsed on the couch, sprawled over my lap. \"I'm so full.\"\n\n\"You ate so much turkey, I'm surprised you're not turning into one,\" I teased as I stroked her hair from her face.\n\n\"So I'm a turkey now?\"\n\nI cocked my head to the side. \"I think you were trying to talk, but all I heard was gobble-gobble.\"\n\nLara smiled. \"Well if I'm a turkey, they why don't you give me a proper stuffing?\" She sat up and pulled me to my feet, then up the stairs.\n\nShe stopped when we got to the master bedroom. \"What's wrong?\" I asked.\n\n\"This was my father's room,\" she answered. I saw the conflict. The room had once belonged to the jackass who disowned her and kicked her out.\n\n\"Was. Now it's mine. Let's christen it.\" I set my cane to the side of the dresser, and picked Lara up, and hobbled my way over to the bed, dropping her there.\n\n\"Oh! Mr. Mayor! What are you doing?\" she teased, biting her lip in a cute way.\n\n\"Taking care of one of my most loyal voters,\" I answered, sitting on the bed with her. I winced in a little pain as I did, as my leg was still sore.\n\nLara saw it, and took over. \"You lie back there, Mr. Mayor. I'll take care of you.\" She pushed me backwards and lay on top of me, kissing me ferociously. Then she pulled my shirt up and kissed my chest, while undoing my pants. When she yanked them down to my knees, my erection sprung up to point at the ceiling. \"Oh, Mr. Mayor, what's this?\" she asked playfully, wrapping her little hand around it.\n\n\"Just a token of my appreciation,\" I joked in response.\n\n\"Appreciation huh?\" she said, stroking it up and down slowly, \"You must appreciate me a lot.\"\n\n\"You're damn right I do.\"\n\nShe leaned in like she was going to take me into her mouth, but then only gave my eager friend a kind kiss. Before I could groan in protest, she quickly unzipped her dress and let it slide from her shoulders. When I tried to sit up and assist, she pushed me back down. \"Nope,\" she told me, \"You are still injured. But I can make you feel better.\"\n\nShe slipped the rest of her dress from her body and tossed it aside, followed by her bra, then she removed her panties too. \"You just relax,\" she instructed, \"and let me do the work.\" Then she climbed over me and lowered herself on to my dick.\n\n\"Ohhh,\" I groaned, \"You're so damn tight.\"\n\n\"Maybe you can loosen me up,\" she said with a wink. Then she slowly, luxuriously, lovingly rode me. \"I love your dick inside me.\"\n\n\"Baby, you feel so good,\" I responded. I tried to move my hands up to touch her, but she leaned forward and grabbed my wrists before I could. \n\n\"I told you, no,\" she chided me. She put my wrists above my head and held them there, all the while continuing to ride me. I could have wrestled my way out of it, but why bother? I was being tortured in the best way. I even tried to lift my head and kiss her, but her face was out of my reach. She held her body inches away from me, looking into my eyes, capturing my gaze with hers.\n\n\"I want you to come inside me, Charlie. I want your come deep in me.\" She started picking up her speed, and I felt myself getting closer to the edge.\n\nI realized I wasn't wearing a condom. \"Lara...\"\n\n\"Shh...\" she shook her head. She moved one of her hands from my wrists to my mouth, silencing me. \"I know. Just do it. Come inside me, Charlie. Come on, you can do it, come on.\"\n\nI was getting so close. Her body on mine was the sexiest thing I'd ever seen. I could definitely get used to doing this on a regular basis.\n\n\"I'm gonna come, I want you to come with me, please, come inside me!\" She was crying out, and then I felt her pussy clench me tightly. Her eyes closed, and she sputtered out, \"GAH! CHARLIE!\"\n\nThat was all I could take. \"UNNH!\" I grunted, and I released my seed inside her. I could feel each spurt. Six, seven, eight, nine. Lara's warm pussy milked me for all I had in me. \n\nThen she collapsed on top of me and rewarded me with a steamy kiss. \"God, Charlie, that was amazing.\"\n\n\"Yeah, it was.\" Lara finally released my wrists and I and used one hand to stroke her messy sex hair away from her face. \"Can I tell you something?\" I asked.\n\n\"I would hope so.\"\n\n\"It's gonna sound weird. Don't get mad,\" I started. \"You know I've been with a couple girls over in Europe...\"\n\nLara interrupted, \"This seems like a strange time to bring that up.\"\n\n\"...but none of that was nearly as hot as what we do together.\"\n\nShe looked at me suspiciously. \"You're lying.\"\n\n\"It's true, I swear,\" I said, crossing my heart with my finger. \"And it's because I love you. I never loved those other girls, it was just a fling for fun. You are the only girl I love, and you are the only girl I want from now on.\"\n\nLara finally smiled, and relaxed into my shoulder. \"You better. And I love you too.\"\n\nI got up and realized my pants were still at my knees, but rather than pull them back on, I just shucked them off, and headed for the door. ",
        "Lara sat up. \"Where are you going?\"\n\n\"I need a turkey sandwich. Don't you go anywhere.\" When I returned, I had a plate with two sandwiches made from the leftover turkey, and cold drinks under my arm. We feasted in bed, then I flipped Lara onto her stomach and gave her the 'proper stuffing' I promised her.\n\n----\n\nBy Mid-December, I was walking on my own again, without a cane, but with a slight limp. The doctor had been right - I'd never be able to re-enlist in the army. Good thing I had a career as a town mayor and auto repairman. \n\nBalancing the two seemed like it should be hard, but really, the duties of the town mayor were fairly light since the town was so small. I worked in the town hall with Betty every Monday and Wednesday, and worked in the garage Tuesdays, Thursdays, and Fridays. Saturday morning was sometimes spent working in one of the two places if I had work to catch up on, but that was rare.\n\nSundays were still date days with Lara. Sometimes we brought Zeke along, but sometimes we left him with Nancy or with Prudence. If it was just the two of us, we'd usually end up back at my house for a romp in the bedroom. She had only hesitated to enter that room the first time, but now that we'd christened it, it was officially no longer her father's bedroom in her mind.\n\nI oversaw the town square's Christmas decorations. Things seemed brighter with the whole center of town lit up with colored lights. I also knew that with Christmas around the corner, I needed to find some gifts for my family.\n\nSo, I took Lara and Zeke to the nearest mall on Sunday. I told her I needed help picking out gifts for my family, which was true. But I also wanted to get subtle hints at what she wanted. I kept my eye on her as we walked around, seeing what caught her eye in the different stores and kiosks. Of course, her eyes were glued to the glittery stones in the jewelry store.\n\nLara helped me pick out a couple of books for Mom, some nice sweaters for the twins, and some baby-type things for June and Prudence. For Steve and Frank, I got new wireless headphones. For Pop, I scratched my head for a few minutes. Pop was a simple man who didn't ask for fancy things. Lara convinced me to get him a couple of nice warm flannel shirts, good for farm work in the winter.\n\nOur final stop was to visit the mall's Santa Claus. Zeke had seen him early on and wanted to see him, and how could we say no? Zeke waited patiently in line to sit on the old man's lap. I thought he was a good likeness, with a real-looking beard.\n\nWhen it was finally Zeke's turn, Lara hoisted him up to Santa's lap. \"Well, little boy, what do you want for Christmas this year?\" asked Santa with a good, enthusiastic voice.\n\n\"I want a daddy, Santa,\" replied Zeke. It was simple and to the point. Little kids don't have the skill to beat around the bush.\n\nThe confused Santa looked up at me. \"That's not your daddy?\"\n\nZeke shook his head. \"No, that's Charlie. But I want him to be my daddy.\"\n\nSanta wasn't quite sure what to say to that, but I did see him look at Lara, and down to her bare left hand. Then back to me with a questioning look. I gave him a smile and a wink in return. I could tell he was trying to avoid making a promise to a little kid he couldn't keep, but I confirmed his suspicions. \"Well now, I'm sure you know I can't bring people down the chimney, right?\" Zeke nodded, and Santa continued. \"But I think maybe if you and your mama are both really good, then good things will happen for you. Okay?\"\n\nThat seemed to satisfy Zeke. \"Okay, Santa!\" \n\nThey took a cute picture together, and then Zeke hopped down and went back to Lara. I took a look back at Santa, who gave me a covert wink before we walked away.\n\n----\n\nThat Christmas, we all met as a family again in my big glorious house. And, in front of everyone, I proposed to Lara. It wasn't so much of a shock to anyone, really. Everyone there knew it was coming eventually. Lara didn't actually vocalize a \"yes\", but her crying and nodding was good enough for me. Zeke gave me a big hug too.\n\nThe bigger shock was Lara's gift to me. She handed me a small box, which I opened, finding something wrapped in a lot of tissue paper. When I unfurled it, I found a pregnancy test. Used, with two stripes on it. The whole room, which had been loud with happy chatter, became quiet as individuals saw what I was holding. I looked up at Lara. \"Are you serious?\" \n\nShe nodded, with an apprehensive look on her face. \"Are you mad?\"\n\nI scooped her up into my arms with a laugh. \"Mad? How could I possibly be mad at you?\" I kissed her, and told her, \"You just gave me the greatest gift any woman can give a man. I just swore I'd love you forever, and Zeke too, and the same goes for our baby.\"\n\nThe nervousness melted away from Lara's face. \"I was afraid 'cause we weren't trying, and weren't married.\"\n\n\"Well it does accelerate things, doesn't it?\" I put her down on her feet. \"If you want, let's get married this spring. I don't think I can wait much longer than that.\"\n\nLara grinned and agreed. The whole family congratulated us again. Not long after, I enlisted most of them to help move Lara's possessions into the house. Prudence and Lara started spending a ton of time together, knowing they'd both be due months apart. They often consulted June in pregnancy matters.\n\n----\n\nThe day before Valentine's day, I was worried about Lara. Morning sickness had not been kind to her. She insisted it was worse than it had been the first time around with Zeke, though most books said that the second pregnancy is usually easier than the first. I had to explain to the worried little boy why his mama was throwing up so much lately. \n\nShe also insisted that she finish her high school coursework to get her diploma, despite her also planning a wedding and being a mom. I worried about the stress of everything together. But June volunteered to help with the schoolwork, and both my mother and Lara's were helping with the wedding planning. Lara appreciated that strong support system that she'd been missing for so many years.\n\nOne thing that was positive was our sex life. Apparently, pregnancy made Lara even hornier than normal. And it helped we were finally living together. We made love every night, and sometimes again in the morning if we could get away with it. Maybe in the afternoon during Zeke's nap. The little minx was insatiable; she wanted my cock in her as much as she could get it.\n\nI tried convincing her to quit the diner. Between the garage and my salary as mayor, I was getting paid more than enough to support us. She argued she couldn't, because her mother needed her there. I argued that as she got more pregnant, she shouldn't be on her feet so much. We were both right and we were both stubborn about it. That night, she still demanded sex, and after I hammered her good, I also hammered out a compromise with her. She would stay on at the diner until the spring, then start cutting back her hours. At that time, she'd spend time working the reception desk in the garage. That would keep her off her feet so much.\n\nThis plan worked perfectly with Prudence, who had been working at the garage for me. She was in line for another job, also with me. After 50+ years, Betty was ready to retire. She happily trained Prudence to take over. Steve once asked me why Lara wasn't taking over for Betty, but it was Lara's preference. After growing up as the mayor's daughter, she had no desire to get back into those affairs, aside from marrying the new mayor.\n\nBut I was still worried about Lara, and worried about becoming a father. Pop had been the best role model one could ask for, but it didn't stop me from being nervous. So I had been reading a book about fatherhood that Frank let me borrow. The night before Valentine's day, I locked up the auto shop and had my face in the book on the short, chilly walk home.\n\nI heard the footsteps behind me and didn't look up. I was in the middle of an interesting section about pregnant women and their cravings. I was right outside the house when I heard the click behind my head. \"Don't move, boy,\" came the eerie, recognizable voice.\n\nI froze and dropped my book. It hit the concrete walkway with a loud thwack, that seemed to almost echo in the otherwise silent air. \"Jim, you don't want to do this.\"\n\nJim Hammond came around in front of me, keeping his gun trained on my head. A second set of hands, still behind me, forced me to my knees. Then Jim's brother Dale came around to face me as well. \"Dale,\" I said, \"Good to see you out of jail.\"\n\nHe sneered at me. \"Funny to hear you say that, since you're the one who put me in there.\"\n\nI shook my head. \"I didn't do that, Dale. That was your brother, making you the fall guy for his crime.\"\n\nJim kicked me in the stomach. \"Shut up!\" he yelled. There was no one around on that night. Too cold for people to be out and about. \"I'm gonna finish what I started. Right here, right now. You got lucky last time I shot you, but I won't miss this time.\"\n\nI closed my eyes. This is how it would end. I pissed off the wrong guy. Why? I fell in love with his daughter. I waited for the shot to ring out, for my life to end.\n\nWhat I heard instead was a miracle. \"You pull that trigger, you're a dead man.\"\n\nLara! I opened my eyes. Lara was standing on the porch of the house, and had my shotgun trained on her father.\n\n\"You wouldn't kill your own daddy, you stupid girl.\" Jim said it derisively, but not confidently. I could see his assuredness waiver.\n\n\"Oh! So now you're my daddy? Now that I've got your life in my hands?\"\n\nJim kept his pistol trained on me, but turned his head to look at her. That was what I was waiting for. As Dale didn't have a gun, I jumped up from my knees and grabbed Jim's arm. I was able to quickly wrestle the pistol from his wrist and get control of it. I pointed it at Dale, who quickly put his hands up.\n\n\"Run,\" I commanded, and Dale did. Fast.\n\nI turned to Jim and Lara. Jim was sweating bullets now, despite the frigid temperature outside. \"You put that gun down,\" he said, much less confidently than he wanted it to be.\n\nLara didn't speak. She trained the rifle at his head. I saw the look in her eyes. She knew she could end his life in an instant. The man who threw her out, and turned the town against her. The embodiment of evil in her world.\n\n\"Lara,\" I said, trying to stay calm, \"it's okay, Lara. He can't hurt you anymore.\"\n\nShe kept the gun pointed at Jim, but she started to cry. \"He can. He almost took you away from me.\"\n\n\"He's going to leave now, Lara.\" I looked at Jim, but kept speaking to her. \"He's going to leave town and never, ever return.\"\n\nJim was shaking. \"Yes, yes, I'll leave. You'll never see me again, I swear.\"\n\nLara was starting to shake too. It was scary with that rifle in her hands. \"The only way for this to end is with you dead,\" she stated flatly.\n\nI didn't want that to happen. If Lara shot Jim, she'd go to jail for murder. And moreover, she'd have to live with his death at her hands for the rest of her life. I kept my voice calm and tried again to de-escalate the situation. \"Lara, he's not worth it. You need to put the gun down. I need you. And Zeke needs you. And our baby needs you.\"\n\nThe mention of our unborn baby was what won the day. Lara hesitated, but finally put the gun down. \"If I ever see your face again,\" she fiercely growled, \"I will kill you.\"\n\nJim nodded, still shaking. \"You'll never see me again, I promise.\"\n\n\"Go,\" I told him. He turned around and jogged back to his truck. We never saw him, or Dale, in Gideon ever again.\n\n----\n\nI had carried Lara off to bed that night, as she crashed from the extreme adrenaline rush. I laid her in bed, then went to put the shotgun away. It was indeed loaded. She'd have blown Jim's head clean off if she'd fired from that distance.\n\nThe next morning, I awoke before she did. I'd had plans to have a romantic Valentine's day with my fianc\u00e9e, but last night rattled me and sure as hell shook her. I was feeding Zeke his cereal when Lara came downstairs. I gave her a cup of coffee, as she looked like she needed it from her disheveled state.\n\nLara didn't talk much, so it was a pretty quiet breakfast, then Zeke went off to play in his room. \"I almost killed my father yesterday,\" Lara finally said aloud.\n\n\"Yeah.\"\n\n\"I was going to blow his brains out. My own father, Charlie,\" Lara said, tears dripping down her cheeks. \"What kind of terrible person am I?\"\n\n\"You're not!\" I quickly rushed to hold her. \"You're not a terrible person. You had it really, really hard these last few years. And it all came to a head last night. But remember, you didn't pull the trigger. You could have but you showed him mercy.\"\n\n\"I was going to,\" she admitted. \"If he killed you, I would have killed him. And Dale too.\"\n\n\"I know.\"\n\n\"You do?\"\n\nI tried to smile. \"I know because I know you. You are a fierce, strong woman. You are stubborn when you need to be, and you are protective of the people you love. And I love you for being that woman.\"\n\n\"You love me because I'm stubborn?\"\n\n\"I'm just as stubborn as you. And we're gonna have fights in this marriage. Big ones,\" I told her, making her laugh just a bit. \"But we're gonna love each other all the more for it. You're gonna tell me when I'm a jackass. I'm gonna tell you when you're a bitch. And then we'll fall even deeper in love with each other.\"\n\nNow Lara was bawling, and I held her closely to my chest. When she'd calmed a bit, I relaxed my grip on her. \"How did you know I'd be outside anyway?\"\n\n\"I had just put Zeke to bed, and I was just sitting by myself, listening to the silence of the winter outside, when heard a loud noise, like a clap.\"\n\nThat jogged my memory, and I started to chuckle. \"What's so funny?\" Lara asked me.\n\n\"I dropped Frank's fatherhood book. I'm pretty sure it's still outside.\" I chuckled again. \"I guess I owe him a book, it's probably ruined by now.\"\n\nLara grabbed me and pulled me close again. \"You were studying how to be a good daddy. In a way, that's what saved your life.\"\n\n----\n\nLara and I were married on a warm spring Saturday in March. Reverend Clyde Jones was pleased as punch to officiate for us. He had also worked with Betty to put together the paperwork for me to officially adopt Zeke. The little boy, just turned three, was finally getting a daddy.\n\nSo much happened that day. Steve stood next to me as my best man, with Greg behind him, and with Zeke standing nearby. He was so cute in his little bowtie, matching the groomsmen. Amanda was Lara's maid of honor. Prudence, now starting to show a baby bump, stood behind her. Lara had insisted the day before the wedding that she was showing too. She wasn't. Everyone told her she wasn't and she wouldn't believe anyone until Prudence told her. \n\nMost of the details of the day disappeared from my brain when Lara came down the aisle. With Jim Hammond long gone, the honor fell to Lara's little brother Lance to walk her down. She was so, so very beautiful in her white dress, wearing the most radiant smile I've ever seen. I kicked myself for not doing this sooner.\n\n----\n\nBy May, Lara's bump was showing. We'd gone to the doctor and found out she was having a healthy baby girl. I swore that I'd protect that little girl with my life, my everything. Then Lara and I fought over the baby's name. She was insistent on Hannah. I said I liked the name Gabrielle. Then Lara seduced me that night, fucking me into submission. Hannah it was.\n\nThat following Saturday, I told Lara to get dressed up. \"Prudence is coming over to watch Zeke. You and I are going out.\"\n\n\"Going out? Looking like this?\" she pointed at her belly. It was still small, but she still exaggerated its size.\n\n\"Yes. Looking as sexy as that,\" I told her. \"Now go.\" I got her to put on a dress that still fit nicely, and I put on a nice shirt and tie, and I helped her into the car.\n\n\"Where are we going, Charlie?\"\n\n\"You'll see.\" It wasn't a long drive. We only went a few blocks and I pulled into the school parking lot.\n\n\"Why are we here?\"\n\nI took her hand in mine. \"Lara, four years ago, you wanted me to take you to the spring dance, and I didn't ask you.\" I motioned to the school building. \"Tonight is the spring dance, and I couldn't miss the opportunity to make up for my mistake. Will you go to the dance with me?\"\n\nShe grinned, and it made me recall that same grin on her face when she was seventeen. \"Well, Chuck Williams, I thought you'd never ask.\"\n\n----\n\nTHE END\n\n----\n\n----\n\nEPILOGUE, FOR THOSE WHO LIKE EPILOGUES - TEN YEARS LATER\n\n----\n\nI stepped down today as Mayor of Gideon, and I couldn't be happier. The job was slow at first, so I was able to juggle it with my auto repair shop, but things picked up as I made positive changes to the town. I suppose it's my fault that the job of Mayor became more work because the town became more successful. A few more businesses opened up, and more houses were built.\n\nOne of the biggest changes I made was to finally incorporate our school into the district of another city. Kids still attended our school through the third grade, then hopped on a bus for a 40-minute bus ride to the city schools. Then, at tenth grade, students had the option of returning to our town's school for 'Agricultural Career Prep', rather than the usual high school curriculum. Many of our town's kids chose that option, but not all - several were interested in the college prep courses. The town's elders were a little annoyed at me about that, that their children would be leaving for college and possibly never move back, but they got over it eventually. To everyone's surprise, a few city kids chose the agricultural route, and attended the school here in Gideon.\n\nI ran unopposed most of my ten years during re-elections. The only person who ran against me once was Mr. Anderson, the owner of the hardware store, but he was happy to lose.\n\nHe ran again when I announced I would not run for re-election. But, to my surprise, he had a fierce competitor: my sister-in-law, Prudence. She'd run the office after Betty retired, and decided to throw her hat in the ring. It was a close election, but Prudence was named the town's first female mayor. \n\nOur family grew quickly. Zeke is now thirteen, Hannah is nine, and our youngest, Samantha, is seven. Steve and Prudence had a boy right before Hannah was born and named him Simon, then another boy named Paul, then another boy named Luke. It was like Prudence was trying for a girl and just couldn't get one. Frank and June had a boy too, Frank Jr., as a little brother to Eliza. All the cousins get together as much as we could arrange it, and they're real close. With eight grandchildren (so far), my parents are both happy as fat cats sleeping in the warm sunshine. Mom spoils them with her cookies, and Pop takes them for rides on the tractor.\n\nBoth my twin sisters, now 24, went to college after graduating high school. I think they both intended on getting 2-year degrees and moving back to Gideon, but Jilly met a nice boy named Dylan at school, and decided to stay on campus and get her Bachelor's, partially to stay with him. They got engaged right after graduation, and got an apartment in the city. Jenny likes to combine their names to call them \"Jylan\".\n\nJoey stayed on at my auto shop after he graduated, as he liked working for me, and he made a good partner. Then he shocked the hell out of me when he started dating my sister Jenny. They're also engaged now. I told him I'll be happy to call him a brother, and he surprised me by asking me to be his best man, which I easily accepted. The twins will both be getting married next summer, on Saturdays one week apart.\n\nLara eventually took over the diner from her mother. She still works there six days a week, despite my requests for her to work less. But she makes the kids help by bussing tables and other odd jobs, and I agree with it, as I think everyone needs a least a little customer service experience. Lara was a little stressed when a Bruno's Pizza opened up in town, but I was eventually able to convince her that they weren't really competing with the diner.",
        "When Zeke was turning twelve, I got him a pocket knife, as Pop had done for me at that age. Lara was a little pissed off about that, as she didn't think a boy his age should have one, but I assured her I'd make sure he used it safely. Lara scrunched her face at me, but then turned to her son and told her if he was old enough to use a knife safely, he could learn to chop vegetables for her at the diner.\n\nFinally, we never saw or heard from Jim Hammond again. I guess getting held up at gunpoint by your own daughter is scary enough to keep you away. A few years after that incident, I did hear that Dale was arrested again. I'm not sure what the exact charges were, but he'd been working for a trucking company in Georgia and neglected some safety checks, then his semi collided with a mini-van, killing some people. He'd probably be in jail for the rest of his life.\n\nAll in all, our small town is still a small town. There's still one diner, one gas station, one church, one school. And Lara and I are both still stubborn as mules. Some things don't change. \n\nBut tonight I'll tuck in both of my precious daughters. Then I'll nag my teenage son until he finally goes to bed. Then I'll wrap my arms around my wife and nuzzle her neck just the way she likes. And I'll thank God that some things do change.\n\n \n"
    ],
    "authorname": "Octave888888",
    "tags": [
        "mayor",
        "romance",
        "small town"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/some-things-change-pt-02"
}