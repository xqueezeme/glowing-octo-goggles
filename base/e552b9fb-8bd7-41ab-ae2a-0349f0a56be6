{
    "title": "My Little Ventrue Ch. 10",
    "pages": [
        "Author's Note: Second edit pass complete! Check out my bio for details.\n\n~~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~~\n\n~~Antoinette~~\n\nFrom the meeting room of her great glass tower in Elysium, Antoinette stood in front of the window-wall, and watched the city burn. Far off in the distance, the night sky had turned slightly orange with the light of flame, as the large fire of the North Side's warehouse district spread. Sirens filled the air, and flashing lights of firetrucks and other emergency vehicles zipped by.\n\n\"It burns,\" she said.\n\n\"Quite the sight.\"\n\nJacob stood beside her. The old Nosferatu was dressed in some ridiculous garb, old and worn fabric that draped over him, thick and heavy like some sort of animal skin. It smelled like it too.\n\nShe managed a small chuckle at his words, and even the eyeless Nosferatu cracked a grin at her in return. He could see without eyes, she knew it, but how he did or what it was like were mysteries she would never know. Mysteries were infuriating and intoxicating to a Dragon.\n\n\"Did your raid against Xnomina go well?\" she asked.\n\n\"Michael and Maria both showed up. I made enough chaos that they stuck around, so whatever is happening out there,\" he said, and pointed at the giant fire miles off in the distance, \"is probably just between Viktor and Tony.\" He lowered his hand, and she grimaced. He'd left a smudge on her window.\n\n\"I cannot see how either of them would cause such insanity. They are not children, Jacob.\"\n\n\"You're right, but men can get pretty stupid in a pissing contest.\" The old Nosferatu gave a shrug, slipped his hands together inside his robes, and moved over to lean back against the window. Ugh, her poor window, so many smudges. \"And hey, maybe you got what you wanted. One of them could have killed the other.\"\n\n\"I can only hope.\"\n\nThe door opened. She turned, and smiled when Daniel stuck his head in through the door.\n\nThe smile quickly faded when he walked in with Jack in his arms. The boy had been split open from face to gut, and half of him was badly burned. Kindred blood soaked him, and bits of it turned to ash on his skin and ruined suit.\n\n\"Jack!\" She almost jumped to Daniel to scoop the boy out of his arms. Composure went out the window. It was only Daniel and Jacob, one her faithful servant and the other... well, composure mattered little to the ancient Circle of the Crone member. \"What happened?\"\n\n\"I found only Mister Terry at the site. Mister Mire and... Beatrice, I believe was her name, were both there, but were leaving to escape the fire.\" Daniel stepped forward and adjusted his glasses with a single finger, his voice monotone as always. \"If Viktor or Tony had been there, I found no sign of them.\"\n\nNo Tony or Viktor. Could the fire have eaten them? She could only hope.\n\nNow was no time to bask in triumph though, she had to deal with the boy. He was in torpor, the Kindred coma forced on him by his wounds, but he would not survive with more of his blood escaping by the minute. He was too young to regenerate what would wound even her.\n\n\"Daniel. Bring me three from the reserve.\"\n\n\"Three, Prince? Per-\"\n\n\"Now.\"\n\n\"... as you wish.\" The quiet man gave a small bow, and was gone.\n\n\"Perhaps the boy can tell us what we wish to know.\" Jacob was beside her, and she found herself naturally stepping between him and the boy.\n\n\"Perhaps. For now, I am only concerned with saving his life.\" She held the small man to her business suit. It did not matter that his dark blood soaked through it, she did not care. All the webs she'd spun, all the deceit and manipulations and carefully laid plans, it all just stopped existing. For just the moment, for just right now, there was only the young vampire in her arms.\n\n\"Yeah? What does a Voivode of the Ordo Dracul care with a fledgling?\"\n\nShe glared daggers into him. \"You are not a Dragon, do not call me by that title. And,\" she looked down and stroked the boy's hair, \"when was the last time someone cared for you, witch?\"\n\nHe stopped. She had chosen her words carefully. The old monster, long a witch of the Circle, likely cared for many things, but for someone to care for him was a different matter entirely. So for the moment, she did nothing but stroke the unconscious Ventrue's hair, while the Nosferatu lowered his eyeless gaze to look at nothing. They were just two old monsters, prime examples of each of their covenants' most powerful members, and in the end, it meant nothing.\n\nTony would not understand it, and neither would Viktor, but Jacob knew. He knew all too well.\n\nDaniel returned, and by his hands he pulled three people along with wrists cuffed behind their backs.\n\n\"Daniel, would you... no, it is too late to risk it, even for you. Tomorrow night, please find Julias Mire and explain to him that his childe is still alive. I will return him soon.\"\n\nHe nodded, and left. Not even the situation before them could spark conversation from her stone sheriff. He'd left the three kine in her care. \n\n\"Jacob, you may go. You may stop your raids against the Invictus for now. I will contact you again if your help is required. And... I\u2014\"\n\nHe raised a hand to cut off her apology, and moved it to the side with a dismissal as his smile returned. \"Don't worry about it,\" he said, \"happy to help anytime.\" Then he vanished. Literally. Even she could not follow his mastery of the hiding disciplines. Such a powerful ally. Such a dangerous enemy.\n\nAntoinette turned to her sacrifices, gave each of them a stern look, and they whimpered in their gags. She was not a cruel soul; she avoided sacrificing kine that deserved life, when the situation allowed. But an elder learned to not be wasteful with their enemies, even human enemies.\n\nShe could spare a few souls from her dungeon.\n\n~~~~~~~~~~~~~~~~~~~~\n\nIt took only twenty minutes. In twenty minutes, she had bled the three kine dry. It was so simple and easy for her to cut their throats, pin them to the boy's propped-open mouth, and force the fresh blood to pour into his destroyed jaw. Kindred reflex was enough to make even one in torpor drink blood, so when the warm, red fluid gushed into Jack's mouth, he drank it down. Had he been awake, she imagined the young vampire would have found such casual murder revolting. She was glad he was not.\n\nHis head had been almost split open to the center, but one kine's blood was enough to close it. The second's blood was enough to restore the giant gash through his chest and stomach; his insides would regenerate throughout the day when he slept. And the third kine was enough to regenerate the massive amount of burned flesh. Much of it had peeled away and fallen to rotting skin before eventually turning to ash, but gallons of fresh blood now pumped through the young Kindred's body and restored his skin quickly.\n\nAnd then he woke up. There were only thirty minutes before sunrise, but that would be more than enough for a quick conversation.\n\n\"Uh... Antoinette? Er, I mean, my Prince? What's... going on?\" He looked around, clearly confused.\n\n\"You survived the fire.\" She gestured to the window. The small boy hopped off the table and fell to floor. He let out a loud groan of pain, but when she stood up to help him, he'd already forced himself to stand and look out the glass wall.\n\n\"Oh... god... oh fuck I'm sorry. I had no idea it'd get this crazy.\"\n\n\"You did this?\"\n\n\"I... yes, my Prince. I had to. Viktor and Tony, they were going to kill each other, but....\" He lowered his gaze, even as he turned around to face her. \"Viktor let slip he wanted to be Prince, and that he'd kill you to do it. I said no, and... he was going to kill me. He... cut me....\" Jack took a sniff at the air, and then glanced over by the door, where Antoinette had laid out the bodies. He was still cradling his stomach where much of him had been ruined. \"... were they for me?\"\n\n\"Do not worry about them,\" she said, and dismissed the three dead humans with a wave of her hand, \"continue the story. Please.\"\n\n\"Right.... Viktor cut me, and he'd... his eyes... it was like he'd gone insane. Just because I said he shouldn't kill you. Tony and Viktor were bickering, fighting, and I was dying, and we were in a textile mill, and I had to think of something, because Viktor wanted me dead now and Tony wanted me dead because of you and Viktor taunting him by using me so I set fire to the mill and both of them died in the fire like incinerated dead and\u2014\"\n\n\"Alright. Alright.\" She stepped over to him by the window, and reached down to raise his gaze. \"You set fire to the mill.\"\n\n\"... yes.\" He looked down at his bloodied body. There were still massive gashes down his flesh, but those would heal while he slept come sunrise.\n\n\"To save yourself?\"\n\nThe boy turned his gaze to the side for a moment. \"I... yes, but....\" And then, he looked up to her, and a smile graced his lips. \"Not just for me. Um... he wanted to hurt you, you know? Both of them did.\" He touched the huge cut along his chest that had split open his suit. \"... I didn't want you hurt.\"\n\nOh damn you Jack.\n\nShe reached out for her nice leather chair, without a care for the mess of blood on her, and sat down with Jack's hands in hers. \"Jack... Jack I am so sorry.\"\n\n\"Sorry? Sorry for what?\"\n\n\"There was no information, Jack.\"\n\nHe just blinked at her, but that was alright. He was but a fly caught in her web, to her dismay. He did not deserve what her net had wrought.\n\n\"That mission that Julias was sent on last month, to acquire information, was planted at my whim. The fire, the fake Vance, everything.\"\n\nHe blinked a few times more, but she could see his mind start to come to the realization.\n\n\"So the information drop... was all just... a goose-chase?\"\n\n\"I needed to create a situation where Tony and Viktor could be dealt with, and where I could blame their deaths on each other.\" She looked down just to avoid the pained look on his face, so she stroked his knuckles with her fingernails instead. \"My first appearance at Bloodlust was to spark their paranoia. I pulled many puppet strings to lead them both to that location and confrontation. If they killed each other, wonderful, but if not, it was for my sheriff to kill them, and plant evidence they had had killed each other. The plan was not perfect. There were many risks, and gambles, that could have turned the result of this against me instead. But the risk was worth it.\"\n\nShe would not mention Jacob's name. The twisted Crone had been the one to plant evidence of Vance, the mysterious information, and the trail that lead to the Carthian hacker Mike. He had even worked with Garry to ensure the trail of evidence would lead to North Side.\n\nShe would not betray that trust, but Jack deserved to know the rest.\n\n\"And you,\" she continued, \"killed Viktor, and Tony.... on your own,\" a sad chuckle forced its way through, \"by burning half of North Side.\"\n\nThe small Ventrue just stood there, digesting the information. The poor boy. So young, and already she had corrupted him with the Danse Macabre.\n\n\"What about... us?\"\n\nWhen she raised her gaze at his question, she was taken aback. He looked worried. Almost petrified with worry.\n\n\"Oh no, little Ventrue.\" She pulled him in a little closer. No no, she would not lose this. \"Our first meeting was coincidence. I... please do not think....\" She raised his hands to her chest and held them to there. Begging. The Prince was begging, and she did not care.\n\n\"So... you crafted a ridiculously complicated plan just for a slight chance of creating a situation where you could kill Tony and Viktor while avoiding political fallout. Me nearly dying in the process was an unhappy consequence, but us... together... is a good thing?\"\n\n\"Yes. I did not lie to you.\"\n\nThis time, it was the boy who stepped closer to her. \"Then what's the problem?\"\n\n\"You almost died, Jack! You were split open and burned. You had to kill your own grandsire, and Tony. Two elders!\" What had happened? The young boy was still the same, but changed. Just a little changed, just enough that a warm, confident smile was on his lips, instead of a nervous one. Well, maybe still a little nervous.\n\nHe looked down at himself; he was truly an absolutely a mess. The gash, closed but not yet completely healed, ran down his face to his chest and down his stomach to his pelvis. Much of his pale skin was still growing and replacing withered skin and rotting ash. Most of his clothes were ruined, bloodied and burned and split open from neck to hip, and even as he still clutched his stomach in pain, she knew his insides were not whole.\n\n\"But... none of that matters,\" he said. Again he stepped closer, until they were almost touching noses, but this time he was the one looking down at her, as she was sitting. \"I... um.\" He squirmed, and worry rejoined his expression. \"I don't want to lose this either.\"\n\nThe boy looked so afraid, sad, uneasy. Did he not realize he was the one who'd been injured, not her? Did he not see that she was the one afraid of losing him?\n\nShe let go of his hands, reached out for his sides, and pulled him into her. She even closed her eyes; there was no playful flirtation here, she just wanted to kiss him. Kiss the young man, make all his problems go away, take him, protect him, hold him, and just hug him. He sank into her kiss, so she wrapped her arms around him entirely, and cradled his smaller form against her.\n\nHe was hers. Her little Ventrue.\n\n~~~~~~~~~~~~~~~~~\n\n~~~~~~~~~~~~~~~~~\n\n~~Jack~~\n\nHe awoke in her office. Thankfully, like Julias's place, it automatically sealed itself come sunrise. She'd let him sleep there, since it was so late there was no chance he'd get home before the sun came up. They'd only had time to kiss for five minutes before she left for her den, and invited him to sleep in the office.\n\nAnd he slept like a corpse. Upon awakening, he felt reborn, with his pain gone and insides healed. For once, it was good to be dead.\n\nAlone in the dark of her office. No bodies -- mental note, ask about those bodies later -- were found, and no Kindred waited him. Instead, he found a suit prepared for him, a note on the table, and a keycard.\n\n\"Prepare yourself, and come join me in the... sub-basement? What?\" The note was hand-written, and some of the most god damn beautiful calligraphy he'd ever seen. So, with a shrug, he took the keycard, and looked around. The office had a bathroom, and upon entering, he found it actually had a shower. A shower in an office. Pays to be rich.\n\nOnce he was no longer a bloody mess, and wearing the prepared suit, he started his way down the glass tower of Elysium. There were several Kindred and kine working in the tower; which, upon exploring, was actually an office building. Probably for some dummy corporation Antoinette owned, he imagined. The kine, he did not know if they were ghouls or not, so he said nothing to them, but the Kindred he walked by gave him curious glances. Kindred working for Antoinette not even of her own covenant. Scary. One even stopped him, but he held up the keycard and was immediately given passage to continue.\n\nThen there was the guy with the boots, the last thing he'd seen before passing out. With no more fire and insane pain screwing up his vision, he could see the man clearly. Trench coat, glasses, gloves, and a thin, tall, unassuming form. His own inner-beast shriveled at the sight of him though, and that was enough to know who it was. It was the sheriff.\n\nAnd Jack walked right up to him.\n\n\"Sheriff.\"\n\n\"Mister Terry.\"\n\n\"I... owe you. Antoinette told me about what happened, and then you must have\u2014\"\n\nThe sheriff held a finger up to his own mouth, and glanced around at nearby patrons of the hallway. When he lowered it, Jack found himself a little uncomfortable with the man's gaze. It was so... deadpan, emotionless, and almost creepy. But then the Kindred adjusted his glasses, and gave a tiny smile.\n\n\"Be kind to her, young Kindred. She is more fragile than you know.\"\n\nAnd then he was gone. With nothing more than a nod, the ancient Mehket just walked past him and continued on his way. For a moment, Jack thought he looked like an English professor, or something.\n\n~~~~~~~~~~~~~~~~\n\nDozens of floors and a few oddly vault-like doors later, he opened a door that would have blocked a nuclear explosion, and stepped into the Prince's den.\n\nThe room was massive. Absolutely massive. Huge black drapes hung from the walls, all the walls, bathing the room in darkness except for several standing lamps that gave off just enough white light to keep the room lit. In the center of the room was the bed, the Prince's bed. It was huge, easily ten feet both across and long, covered in silk black sheets and similarly silk black-covered pillows, a dozen of them. The sheer size of the room combined with the black motif and white light made for an imposing presence.\n\nThe floor beneath him was marble, with dancing dragons and coiling around each other. Where black dragons coiled into white dragons, the marble around them changed color as well. Within the coiling dragons, various symbols were highlighted, symbols beyond his knowledge.\n\n\"The Coils of the Dragon, of the Ordo Dracul. There are many.\"\n\nJack froze. Ahead of him, Antoinette was sitting on the edge of the bed and facing him. She was dressed in what was probably a silk nightgown, white, and painfully see-through. It did little to hide that underneath it, the Prince was completely naked. Completely. Naked. He tried to avert his eyes, desperate to look at anything to keep his lust down. Oh look, the lamps had dragons coiling around them too, how interesting.\n\n\"Come here, my little Ventrue.\" That stern voice had come through again, but she was smiling at him. He recognized that smile, from the first day they talked at Bloodlust. She wanted something.\n\nHe dragged himself toward her, but damned if he was going to stare. The Prince was beautiful, beyond beautiful, so naturally he had to do everything his power to not look at her right? He kept his eyes on the floor as he eventually closed the distance between them.\n\n\"Am I going to have to guide you through every step of this journey?\" she said. She was teasing him, he knew it. Her French accent was subtle and playful, and he knew that she knew that he knew that she was playing with him.\n\nHe nodded, and she laughed.\n\n\"That is fine with me. Come, sit.\" She motioned to the space next to her on the bed. There was a lot of it.\n\nWith a nervous sigh, Jack took those two final steps toward the woman, and sat next to her. So close, he couldn't help but see her in the corner of his eye. He was wearing the simple suit someone had left for him in her office, but the woman next to him was wearing what might as well have been nothing.\n\nThe Prince turned to face him with one knee pulled up onto the bed. She placed one hand to the bed to lean her weight onto it, and the other drifted up and down her own leg.\n\n\"Take off your clothes. Every. Last. Piece.\"\n\nBoth his hands were on his head, rubbing and scratching at the buzz cut. Wow, just... what could he do? Say no? But then, why would he say no? He'd killed Viktor and Tony, largely because he knew if he didn't they'd have killed him, but wasn't the only reason. Glancing at Antoinette with nervous green eyes, he knew. He killed them because he didn't want her hurt.\n\nHe reached up and undid the buttons of his jacket, and slid it from his shoulders. The Prince helped him, her delicate grip taking the jacket from him and tossing it to the floor.\n\nWith a nervous smile, he took a quick glance at her as he undid his tie and did the same. Once he started unbuttoning his shirt though, he got far more nervous. It was his first time getting naked in front of a woman, but the Prince's word was absolute. Not only absolute, but her smile was so terribly inviting. With shaking fingers, he started to work on his buttons. Each proved problematic, but it wasn't until he undid the last that Antoinette helped him slide the shirt from his arms.",
        "\"You are a lean little thing, aren't you?\" She ran one of her hands up and down his thin body. He had the body of a gymnast, which Antoinette apparently liked. A lot. Her claws found his abs and ran down the cracks of his muscles with hunger. Her red eyes drank in the sight of his small, tight form.\n\n\"Do you... like bigger guys?\"\n\n\"A faint memory suggests I did, when I was but a freshly embraced. Tall women were not common, and all the men wanted a little dainty thing under their arm.\" She leaned in close and put her dark lips to his ear. \"That was a long time ago.\" She gave his earlobe a gentle nibble as her hand slid further down his stomach to tickle around his navel.\n\n\"I, uh... mm.\" Her hands were on him, touching him, playing with him. Her lips were on his ear, tugging and nibbling. Nervousness and anxiety mixed with anticipation and arousal. She wanted him. The Prince of all Dolareido was chewing on his ear.\n\n\"I did not say stop,\" she said. Commanded.\n\nJack let out a tiny, nervous chuckle. It was a weird position, but he made it work and undid his pants. Her grip on him was unmovable, her strength unimaginable, and she made no effort to stop teasing his stomach as he slid his pants off. Now, the only thing between him and the sheets was his boxers.\n\n\"Uh... do y-\"\n\n\"Now.\"\n\nHe trembled. That voice almost resonated with power, terrifying, like a hungry tiger looming over a mouse.\n\nA strange mix of exhilaration and fear was coursing through his dead bones. He was scared, but definitely aroused, and the combination made him shiver with excitement when he slid off his boxers.\n\n\"Oh, you trimmed it.\" She let out a teasing giggle before she lowered her hand to the man's pelvis. Jack dared not move, but he couldn't help but turn his head to watch her. She was grinning at him. With a wink, her fingers started to stroke where his pubic hair would have been, but found only soft fuzz where he had trimmed it all off. \"You remembered when I said I do not like hair, hmm? Did you expect this to happen?\"\n\n\"No! No, I... well... I hoped.\" \n\n\"Good. Blush for me, my little Ventrue.\"\n\nHe gulped. On nothing. Kindred don't salivate unless they had the blush of life going. He took a moment to visualize, and reached into his blood; it was becoming much easier now. Instead of grasping blindly and hoping it worked, he could find his blood and move it like a limb, and with a little concentration, he could tell it to course through him like real human blood.\n\nTingling warmth came back to his skin. Saliva came back to his mouth. The forgotten, subtle nuances of a heartbeat filled him. He was even blinking his eyes again to moisten them.\n\nHis member had also risen with an erection.\n\nHe chuckled nervously, horribly nervously, and managed to look up to her eyes. She was licking her lips with her gaze on his member though, and he almost quaked at the hunger in her stare. Quaking turned to a quiet groan when her grip, tender and gentle, wrapped around the base of his shaft. What little growing it had left to do finished an instant, now as hard as possible in her hand.\n\nHe had to take a second to examine the situation, so he looked around with a shy shift of his eyes. He was in the Prince's haven, her lair. The huge room was extremely intimidating; he half expected a metal coffin in its center. The most beautiful creature, and most powerful he'd ever seen, was sitting next to him in a see-through gown, and he next to her wearing absolutely nothing, on a bed. Her hand was around his cock, and she was slowly, so very slowly, starting to squeeze and stroke it.\n\n\"I... I don't know how... how did this all hap-\" \n\nShe put her free hand to his lips with a chuckle, kissed his forehead, and then stood before him. Both her hands reached up to her shoulders, and took grip of the collar of her gown. She arched her back subtly as she pulled on the silk to let it fall down her body, and soon she was standing in front of Jack, completely naked.\n\nJack's mouth fell open. Just... wow. Her body was unbelievable. Her legs were toned and curvy, her stomach flat, her waist thin and her hips wide. Her ass was plentiful, and her breasts were absolutely enormous, with large, dark nipples of the same tint as her dark lips. Her skin was pale, more than other vampires', and her long, white hair reached down to her hip.\n\nThe fact she was a foot taller than him only made it all the more intoxicating a sight.\n\nThen she too blushed, and his mouth fell open further. Her dark nipples and lips turned red like her eyes, and her pale skin turned into beautiful white alabaster. It was like looking at painting.\n\nWhen she saw that her nudity had struck him dumb, Antoinette giggled \u2014 an actual giggle \u2014 and crawled back onto the bed beside him. She laid down on her side, propped her head up on one arm, and slowly rubbed her legs together as she waited for Jack's eyes to eventually reach her.\n\nJack's eyes had a long journey to make though. They started at her feet, which had nails painted black, before sliding up the length of her long, very very long legs. They looked so smooth. His eyes soon reached her hips and between her legs, where the smoothness of her body was uncontested. Not a hair to be found. She wasn't lying about disliking body hair.\n\nHis eyes continued moving up her body, but came to a standstill at the sight of her breasts. With her on her side like that, one breast was squishing the other into the silk sheets. They were heavy, natural, and sagged slightly with their volume and mass, like teardrops. The sight of them collapsing to gravity only made him groan in arousal.\n\n\"Lay beside me.\" She motioned to the space in front of her.\n\nJack melted back onto the bed. It was truly soft, obviously covered in the finest of silks and a mattress definitely made of the latest in memory foam. He could even see the mattress contour just slightly to the shape of her hips, her torso, and the weight of her breasts. He had tried to land on the bed so they'd be face to face, but her greater height had offset him and now he found his eyes just above her nipples. Her areola, puffy and swollen, were only inches from his chin.\n\n\"Tell me, little Ventrue. What do you think of my breasts?\" On her side and propping her head up with her elbow, her free arm reached out and took Jack's hand. Her sharp fingernails drifted down his forearm to find his fingers, and there she guided them up to her body and placed his open palm to the underside of her breasts.\n\nJack froze. He was doing it. He was really touching her. God her breast was soft.\n\n\"I... my Prince... I....\" No words to be found. He still didn't move, but with the huge mound of her breast filling the cup of his palm, he couldn't help but caress her skin with his fingertips. The feel of her breast molding to fit the shape of his hand with its heavy softness made him groan.\n\n\"Ah, my little Ventrue, always so honest.\" She licked her lips and slid his hand higher until his palm was pressed against her engorged nipple. It was hard against his palm, and Jack's eyes went a little wide at the sensation of it pressing into his skin.\n\n\"I want you,\" she continued, pushing his palm toward her until her breast's ample size overflowed his hand, \"to play with my breasts as you desire. Do as you will.\" With that, she let go of his hand, and placed her claws upon the back of his neck to rest there. She waited.\n\nJack was sure he'd died and gone to heaven. Died again, maybe? With her gentle grip on his neck, he drifted across the blankets toward her longer body, and finally brought his face to her breasts.\n\nWhat's a man to do when an amazing, huge pair of breasts, so soft and heavy, are just inches from his face? Jack found himself moving without telling himself to, and his lips touched the topside of her bosom. His kisses pressed into her skin, and he let his chin sink into her a bit as he found the sheer size of her breast enough to let his face rest against.\n\nUnable to contain himself any longer, his lips moved further down, and he wrapped his mouth around the large, swollen nipple and areola. A gentle mewl escaped Antoinette. God, how could such an unobtainable goddess be letting him do this? Not just letting him, encouraging him. She pulled his head closer to her breast, enough that much of it overwhelmed his lips, chin and nose with its softness. If he had to breathe, he'd be worried.\n\nHe brought both palms to her breasts, but with his head unsupported it had to fall to the blankets. That was alright though. Her other breast, squished under its sister, was just as inviting and soft, and he delightedly wrapped his lips around its nipple instead. Even on his side, he managed to wrap her breast with both palms, and gently squeezed and kneaded its size. With his palm trapped underneath it, its size completely hid his hand and buried his fingers.\n\nA touch of lips on his buzzed hair shocked him from his breasts obsession, and he looked up to see the source. Antoinette was smiling down at him with that softer, more elegant, more natural and honest smile he was growing fond of.\n\nShe closed her eyes and rolled onto her back with her hips still turned to face him. Her hands raised and ran through her white hair, now splayed out across the black sheets, like a painting of white radiance against night's black. With her body mostly flat against the bed, her breasts slipped free of Jack's hands and lips, only to flatten against her body with their natural weight. The volume of them dipped to the sides of her torso, mostly toward Jack, and the sheer size of them combined with the angle made them seem like the most comfy pillows imaginable.\n\nShe pointed a finger at him, and curled it toward her breasts.\n\nJack groaned, almost growled even, and pulled himself over her. Sitting down beside her, he leaned over and put one hand next her so the other could cup the side of one of her breasts. He pushed its weight back up onto her torso, where it slid lightly toward her neck from how she was laying down. God, the size of them. He leaned back in to devour it with a little more aggression this time. The way her breast moved and rolled with its size over her smooth, perfect body was too much for the little Ventrue. He just had to have her, and with tight lips around her nipple, he started to suckle.\n\nAntoinette outright moaned with this, and brought both her hands out to hold his head from behind.\n\n\"Never have I seen a man so engrossed with a woman's bosom. Like a child,\" she said, but her voice was anything but insulting. No, she was encouraging him, even pressing him harder to her breast. Her leg nearest his slid over to nudge against him; she was beyond smooth, like the silk they were laying upon.\n\n\"You have warmed me, little Ventrue.\" With a grin, she put both her hands on Jack's temples and raised his head. He was almost drooling. \"I trust one such as you is well educated in the anatomy of a woman?\"\n\nJack blushed bright red, but nodded. He knew she knew everything about him, including his lack of experience with such things. His only experiences worth mentioning had been with her after all. But a man could learn a thing or two from diligent internet research.\n\n\"Good. Make me cum.\" She giggled when his eyes went wide. \"And you may only use your mouth for now. Come, slowly now.\" With that, she leaned back even as she pushed his head down toward her belly. Once she had pushed him far enough that his eyes were over her pelvis, she slowly, teasingly spread her milky white, toned legs apart, and laid herself bare.\n\nJack, with a gulp and groan, slid over one of her legs to get between them. He got down onto his stomach and leaned in close, but nothing could prepare him for the unusual beauty of the scene. Antoinette's vulva were smooth, just like the rest of her, and the lips of her pussy were of the same dark tint red as her lips and nipples. It was exceedingly erotic against her alabaster skin. More so was how little beads of her juices coated her pussy's lips, and she periodically gave her muscles a slow but hard squeeze that forced out a couple more drops of her juices.\n\nAntoinette just reveled in waiting.\n\nHe was terrified. He was excited. He was shaking with fear. Or was it arousal? He couldn't tell anymore. A mighty goddess had her legs spread and was asking for him to pleasure her, and one wrong move could upset her. But... he really, really wanted to touch her.\n\nHe leaned down to her center, and with a very large degree of nervousness, placed a couple kisses around her inner thighs. Satisfied, quiet mewls from the Prince eased his anxiety though, and he pushed into his kisses more. Her skin was so smooth, always so smooth, but her thick legs were toned and strong. It was a lovely feeling, that soft skin against hard muscle beneath his lips.\n\nHis kisses drifted closer to her pussy, but he took his time. Antoinette was not some schoolgirl. She was ancient. She wanted him to go slow, and so did he.\n\nFinally, his kiss found her labia. They were wet. Very wet. He blinked in surprise at the reaction her body had given to his touch. While the blush of life had brought her body's living functions back to the surface, he hadn't expected her body's response to be so strong. Her juices moistened his lips, and he sighed into her body. When his kisses eventually found her clitoris, erect and swollen, Antoinette outright moaned.\n\n\"Careful Jack. Gently... slowly...,\" she said. Her claws drifted down to her stomach and down her thighs.\n\nJack tried to contain his excitement. She was enjoying it. The ancient succubus was enjoying his touch. He beamed with pride and grinned into his kiss upon her clit. She'd said use only his mouth, so he hooked his arms under her legs and put his hands onto her stomach while he eased his tongue against her moist cunt.\n\nHer hands found his and netted their fingers together. She tickled his palms with her fingernails and let out more, quiet moans. When he let his tongue slip under her clit and pressed it to her body, her grip on his hands tightened. He could feel her muscles clench, and more juices leaked from her onto his lips, even onto his chin with her arousal.\n\nWhen he gave her clit a gentle little suckle, her grip on his fingers tightened sharply. Apparently, he'd found something she liked. He smiled into his kiss before sucking her swollen button back between his lips again, this time where he kept it with a constant but ever-so-gentle suckling.\n\nHe stopped for a moment, and the Prince gave a tiny whimper. Oh god the sound of her voice, making tiny whimpers because of him? He really wanted to devour her harder, but she said slow, she liked slow. Slow was making her mewl. So slowly, he explored the whole of her labia. He probed at her pussy's clenching muscles with curious licks, and sucked her lips between his own, just to hear the quiet purrs of pleasure she made. It was when his lips trapped the entirety of her clit though, that her sounds grew so erotic it was making his cock hurt between him and the bed.\n\nHe sucked a little harder this time, and pushed with his tongue against the budding, swollen flesh in his mouth. The pressure was apparently too much for Antoinette, her hands grabbed his head and pinned him to her. He looked up from between her legs, down the valley of her body to her face, but could not see anything but her chin. Her head was reeled back, and her grip was firmly on the back of his skull, preventing him from retreating.\n\nShe had grown quiet, but more juices had joined the mess between her legs. It dripped from the little Ventrue's mouth and wet the sheets. Her legs spread further, and her hips pushed her slit up against his mouth in rhythm with her clenching muscles, until more of her fluids dripped down her skin. Her orgasm was silent, not a squeak or moan to be heard, but her body spoke volumes as her legs started to shake and her hands did not let go. Jack knew better than to grow too zealous with his licks during her climax, but he could not resist another long stroke of his tongue along the folds she was pinning his head to. That managed to pull a gasp from her, and another drop of her cum hit his tongue before trickling down his chin.\n\n\"Ah... that was delightful.\" At last the mighty Prince released him, and Jack put his palms to the sheets to sit up before wiping his lips dry.\n\n\"... wow.\" He sat there and watched her, and she watched him in return. She kept her legs spread, and her hands returned to her breasts to softly knead the mounds. She was massaging her breasts in front of him. His member felt like it was going to explode.\n\n\"Now, little Ventrue, I want you to use only your hands.\"\n\nFuck yes. He was free to touch her, to open her, to feel her. Anxiety was replaced with genuine excitement by this point.\n\nHis left hand reached out and rested against her leg for balance, and his right ran its fingertips up and down the Prince's soaked folds. She chuckled at him, but soon her juices had coated his fingers, warming them and moistening them. With curious experimentation, he caressed her labia from side to side, and traced the lines of them up to the hood of her swollen clit. It only took a touch of the underside of the little nub to make Antoinette let out a quiet mewl.\n\n\"Am I some new land for you to explore?\"\n\n\"Sorry! I just... never done this, and... you're so beautiful. I want to....\"\n\nShe reached down between her legs with both her hands, and with a slow, teasing motion, she spread her lips for him. \"Explore.\"\n\nJack gulped. Her juices were leaking out of her, and he could see the opening of her pussy clench down in anticipation. It was all so wet and inviting. His index finger grew bold and pressed along her folds before sliding toward the opening, and with an almost fearful slowness, he slid his digit into her squeezing body.\n\nGod her insides felt amazing.\n\nAntoinette chuckled and squeezed down on him in response, and Jack found himself groaning again. Her insides were so warm, rippled with bumps and grooves, and each clench she made only highlighted the curvature. When he turned his hand over so his palm faced upward, he curled his finger and found a swollen bump, slightly rougher than the rest of her flesh.\n\nHer sigh of content was his signal. He'd found her g-spot, and he smiled to himself. He sneaked in his middle finger to join his index, and the tightness of her walls increased, as did his pressure on the bump of her flesh. His other hand went flat over her pelvis, just above her pubic bone, and when he pushed down on it, he could feel his fingers pressing up from within her.\n\n\"Nn... Jack, sly little creature.\" She slid her hands back up to her body, and pushed her hips forward to meet his fingers. \"Harder.\"\n\nThe little man did as commanded. He pushed his fingers up against her g-spot, and with his other hand, pushed down against her pelvis, trapping her between his hands and massaging the sensitive flesh between. Her pussy dripped her juices down his knuckles, and her ass raised when he pushed harder up against her.\n\nHe stopped. She gave him a small pout, but he had to feel more. He sank his fingers into her as deep as they could until her folds swallowed his last knuckles, and he rubbed his fingers up against the soft flesh of her cunt from beginning to end. With his other hand pushing down, he could feel every groove of the softness of her squeezing, tight muscles, milking at his fingers. Antoinette wiggled her hips to meet his exploring fingers, and she mewled in rhythm with them.\n\nHe started to finger her in earnest. Instead of just curling his fingers, he started to push his whole hand upward, and the motion gave his two fingers inside her enough force to almost slap against her g-spot. It was enough force to make a sloshing sound of her growing juices, and pull even more moans from the mighty Prince. He got faster, and faster as his actions only made the Prince grow louder and louder. Just to hear her voice make such sounds was intoxicating, and watching her heavy breasts tremble along her body even more so.",
        "Eventually his hand was forced to stop when her muscles squeezed down on him like a vice. He let her relax, and only with gently curving fingers did he continue to massage her insides. Her orgasm had her quaking, and her hips rocked up and down while more of her juices leaked over his palm and down his wrist. She went silent once again \u2014 it seemed to be what she liked to do when she came \u2014 but the pleasure on her face was obvious.\n\nHe had no idea this ancient creature was capable of such sexuality, but her body responded without hesitation or embarrassment to his touch.\n\nEventually, her legs slowly closed around Jack to embrace him between her quivering thighs as her body calmed with orgasm aftershocks. He could still feel the shaking of her large thighs against his sides, and when he slipped his fingers from her, she gave another husky mewl.\n\n\"Delicious,\" she said, and licked her lips as she sat up, weight on her elbows.\n\nFor a moment, he froze. Her red eyes were staring at him, more wide than usual, and lips were curled into a predator's grin. Then she reached out, took his shoulders, and eased him over onto his back beside beside her. He was just a feather to her, and even though she was gentle with him, he couldn't move an inch.\n\nWith a slow motion, she got up onto him, and straddled him. She was so tall he almost disappeared between her legs, with her weight now on her knees around him, and her pelvis hovering just over his.\n\n\"I... don't know if I'll-\"\n\nHer finger found his lips, silencing him. \"Do not speak.\"\n\nHe gulped. The tall, gorgeous goddess reached down, and wrapped her other hand around his cock. It had several drops of precum on it already, and she chuckled as she gently eased the skin down to expose his glans. So swollen it was almost painful.\n\nIt only got worse when she aimed the member up toward herself, and began to lower her weight onto him. The hot, soaked folds of her cunt found his cock's head, and he groaned with the powerful sparks of pleasure her squeezing muscles coaxed out of him. \n\n\"Watch,\" she said. He forced his eyes to open, and just drank in the sight of her. She lowered herself slowly, with a light rocking of her hips from side to side, complete with a hard squeeze of her muscles around him whenever she dipped from left to right. It was a dance. The Prince was dancing for him. She put her hands on his shoulders, pinning him down and so he was helpless to escape her as she worked her body to devour him to the hilt.\n\nWhen her folds found the base of him, she squeezed him again, so hard and tight it made his jaw drop and a low moan escape him.\n\n\"Do not think our difference in size a problem, little Ventrue.\" She leaned forward so her elbows were against his chest, her breasts against his neck, and her lips over his eyes. \"You feel delightful inside me. And I trust I am a comfortable sheathe for you?\" While still leaned forward, she raised her ass higher, squeezed tight the whole way up, before lowering herself back down with a slowness that had him almost whimpering.\n\n\"I-\"\n\nShe cut him off with a finger yet again, and gave him an almost angry look. Dangerous. He wasn't supposed to speak.\n\nShe sat up, and let the weight of her body bury him inside her. Then, as if performing art, she reached up to comb her fingers back through her hair, arched her back to jut out her breasts, all the while easing her hips back and forth against him. Her juices were soaking him, coating him, as if rewarding him for her earlier orgasms.\n\nThen she leaned forward again, took his shoulders, pinned him down, and started to work her hips in a figure eight. An actual figure eight, so that each curve outward of her hips was met with a light forward thrust. He was mesmerized. Her heavy, beautiful breasts hung over him, swaying back and forth with their weight, but it was the glorious movement of her wide hips he couldn't look away from. She was just so god damn perfect, and skilled; each forward shift of her body was met with a squeeze of her cunt in just the right way to make the tingling bliss start to build between his legs.\n\nThe Prince took the boy's hands into her own, and pinned them against the blankets over his head. \"It has been many, many years since I have delighted in this dance.\" Her breasts were swaying directly over his head now, as she was leaning far more forward to hold his hands down over his head. He just stared with jaw open. \"How would you like to cum, hmm? I could take it from you roughly.\" She raised her ass, dragged her soaked lips along his length, and slammed her hips back down. The bed creaked, and he struggled to not push his hips up to meet her.\n\nIt took everything he had to not cum right there.\n\n\"No, I do not think so. You, my little Ventrue, are not that sort.\" She grinned again, a devil's grin, and leaned down even closer. His hands were still pinned, so he couldn't even lift them to touch her, but she pressed her body down into him so her breasts overwhelmed his collar and neck, and he had to look up to see her with her head past his. \"You are a methodical creature. Deliberate. Paced. You would prefer slow.\" Her voice got deeper, husky, and she arched her back to push her breasts into him. \"Very slow.\"\n\nOh god. She was squeezing him so tight, and now she was easing herself back and forth along his body, with the whole of her pressed into him. Her hips were pushing into him at just the right angle to massage the length of him while milking the swollen head of his member. She was edging him closer and closer, and each time he made a little groan or whimper, she let out a satisfied sigh.\n\nOver the course of painfully long minutes, the rising pleasure was too much. Warm cum poured into him, and after a powerful wave of bliss forced his muscles to clench, it poured into her.\n\n\"Oh,\" the Prince said. She sat up so she could look him in the eyes, but still leaned forward enough to keep his hands pinned down above his head against the bed. \"Cumming inside, are we?\"\n\nHe managed a small nod, even as he struggled to keep his eyes open while his muscles tingled with each squirt of cum that escaped him. She chuckled down at him, but did not stop easing herself back and forth in her slow dance, and tight grip of her insides. The eye contact was overwhelming; something on his face, in his expression maybe, was making the red-eyed goddess gaze at him with almost animal hunger. It made each clench of his muscles, each spark of bliss between his thighs and along his length feel almost unimaginably surreal. How could this be happening?\n\nBut then, she squeezed him yet again, and his own fluid started to trickle out of her and onto his body. It was most definitely happening, and the mighty goddess continued milking him until his eyes rolled upward. She kept a perfect pace of tight, massaging, hot muscles along his cock, that each squirt of his cum was almost painful, and the pleasure made his breath come out in pathetic pants.\n\nWhen his orgasm finally started to pass, she pressed her chest to him again, and kissed his head, even as she continued to gently rock her hips. \"You are so adorable, little Jack.\" At last, she let go of his hands, and put her weight into her elbows against the blankets so she could hug him, and to his delight, continue to rock her hips forward. Those few final drops of his cum were squeezed out of him in the rocking motion, and he trembled underneath her with each one. She was milking him, squeezing him in a rhythm to stir those last few sparks of orgasm aftershocks down his cock's length and into his thighs.\n\nShe finally sat upright completely, and lifted her hips from his body. His member slid free, and more drops of their mess dripped down onto it. It only made her smile.\n\nGod damn that dark red, ludicrously seductive smile.\n\n\"You may speak now,\" she said. \"Did you enjoy yourself?\"\n\nHe looked up to her with wide eyes, totally perplexed.\n\n\"I... well, virgin. No frame of reference. But that... just.... wow,\" he said.\n\n\"You are too cute, Mister Jack Terry.\" She rolled over, and Jack gave a small gasp of shock when she turned him around to face away from her as if he weighed nothing. Suddenly they were spooning, but she was the large spoon, and he was tucked snug against her pelvis. She propped herself up on an elbow, and leaned forward to rest one of her breasts along his shoulder.\n\nHe was the small spoon, and she was using his body as a breast rest. She even sighed warm noises into his ear, and hugged him closer to her to her stomach. All he could do was snuggle back into the crevice of her body, let her take control, and just melt into her.\n\n\"So, how do you feel Julias will respond to all of this? You killed his sire, and now you are my lover. We may have put him in an unusual situation. He is likely to replace Viktor on the Invictus council, so he will be forced to make difficult decisions.\" Her hand drifted up and down his side, his legs, his abs, and circled the lines of his chest. She really liked to touch his muscles, he guessed. He'd have to thank Julias later for all those grueling nights being forced to exercise and eat well when he was still alive.\n\n\"He doesn't know that we're... lovers.\" He hesitated on the word, but it only made Antoinette laugh softly. He'd never imagined using the word before. \"Should I tell him?\"\n\n\"Yes. He is your sire. Do not betray his trust.\"\n\n\"He doesn't know I killed Viktor either....\"\n\n\"That is perhaps more difficult, but I know the other Invictus right hands wanted Viktor killed.\"\n\n\"They did?\" Jack said, and turned to blink up at the Daeva leaning over him.\n\n\"Viktor did not return from his latest Torpor the same man. He was not always so cold or destructive.\" She let out a weary sigh and continued to stroke Jack's chest. \"I once considered him an ally, but both his childe and I saw who he was becoming. Julias and his companions will be thankful... though do not expose my plot to him, if you please.\"\n\n\"So... what do I tell him?\"\n\n\"You killed Viktor because he threatened your life, and my own. It is true, is it not?\" She leaned down and gave him another kiss, this time on his earlobe. \"At the time, that is all you knew.\"\n\n\"That is true... sneaky.\" He grinned to himself. He did not like half-truths, but this one was harmless. The Prince merely gave Viktor and Tony the rope to hang themselves with. Look at you Jack, already dancing the Danse Macabre.\n\n\"Do not think that is the only reason you are here in my bed, little Ventrue.\" She gave him a hard pinch on his nipple, and he let out a yelp. \"I found you intriguing even when we first met. How could Julias have picked such a small, feeble creature for his childe, I thought to myself.\"\n\n\"Thanks,\" he said with a grumble.\n\n\"And then, when we met at the Bloodlust, I knew why. You, my little Ventrue,\" she leaned down again and grazed his ear with her lips, \"have quite the spark in you. And that spark is mine now.\" Her lips encased his lobe again, and he shivered against her with delight.\n\n\"I was so terrified of you... I still am.\"\n\n\"And yet, that only seems to spur you on.\" She hugged him closer to her with her hand on his chest. Her grip was strong, damn strong, immovable even, but Jack didn't struggle. He shivered a little at the feel of her naked skin against his back, and the thought of how she was literally the most powerful, deadly thing in the entire city and then some, pushing her naked body into his.\n\n\"Tell me,\" she said, \"is there a gift you would like, for your actions against Viktor and Tony?\"\n\nA gift? He hadn't really thought about it. He'd assumed his current position, literal and figurative, was reward enough.\n\n\"I uh... don't know. I never really did want for big things. Julias chastised me for lack of ambition.\"\n\n\"Well, you are Ventrue now. Ambition is in your blood. Come, whatever sneaks its way into your mind,\" she said. Her fingers kept tracing the indentations of his abs and chest, like he was a canvas for her to paint.\n\n\"Can... can I sleep here today?\" he said. His hand rested against his stomach where Viktor had sliced him open. The wound was gone, not even a scar, but the scars of Rebecca's stabbing stayed. Had he really been through so much? He could still remember the feel of his insides spilling, bone breaking, skin burning. Next to Antoinette though, the images faded.\n\n\"To sleep next to me?\"\n\n\"I'm sorry, I just... little scared lately. Rebecca got me, and then Viktor... but.... I really like it here, with you. I know it's... I know Kindred don't normally... yeah it's too much to ask. I- \" Her finger found his lips and silenced him.\n\n\"You have earned my trust, little Ventrue, and I understand.\" She guided his head to turn and look at her, and he found himself shocked. For a moment she looked sad, but her eyes drifted down and her smile opened. \"You may sleep next to me today. And future days.\" She hugged him close again, and this time she kissed his crown and nestled her head atop his.\n\n\"It has been a long time,\" she said, \"since I have trusted anyone but Daniel, and he is only a friend. That you would waste a gift on something so little, just to be closer to me?\" For a moment, he thought her voice was caught in her throat, as if ready to cry. She didn't though. He knew she wouldn't, perhaps she even couldn't, ancient as she was. She hugged him closer still though, and sighed with relaxed joy into his ear. \"Are you trying to woo me?\"\n\n\"... yes.\" He smiled. The Prince was moved by his request. To him it seemed such an obvious thing. He'd killed for her, fought for her, like a fool in love; was it so strange that he'd want to spend time just sleeping next to her?\n\n\"Be careful, little Ventrue. If anyone found out you were by side during the day, it would create opportunities for enemies. Kindred are powerful things, and some can control your thoughts, your body, even your memories.\"\n\n\"Shit, then... I shouldn't risk your-\" Her fingers found his lips again.\n\n\"And I have been Prince of this city for decades. It is not my safety that worries me, it is yours.\"\n\n\"... then I'll risk it.\" Fool in love. Yep. If there was one way he was going to die, it'd be head over heels in love.\n\nAntoinette let out another sigh of contentment, and rolled Jack toward her, onto his back. Before he knew what was going on, she had locked her lips against his, and half of his body was covered in her white hair as she leaned over him. Her eyes were closed this time, and her hands were bracing her weight against the sheets with her breasts pressing to his chest. His own hands drifted up her arms and then along her back, and his eyes eventually drifted close in the kiss as he succumbed to her touch.\n\n\"You are under my protection now, Jack,\" she said between kisses, \"and I will kill anyone that threatens you.\"\n\nHis eyes opened again in surprise, but hers were still closed, absorbed in the sudden intimacy. Her words scared him to all hell. \n\n... he kinda liked it. "
    ],
    "authorname": "NovusAnimus",
    "tags": [
        "vampire",
        "vampire romance",
        "supernatural romance",
        "blood",
        "violence",
        "seduction",
        "vampire sex",
        "vampire novella",
        "vampire drama",
        "sex"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/my-little-ventrue-ch-10"
}