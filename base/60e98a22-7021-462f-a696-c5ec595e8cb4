{
    "title": "Life was Good!",
    "pages": [
        "As Jill threw her purse and keys on the table in the entrance hall, she heard the familiar sounds she expected to hear when she came home for lunch. Her husband was in the bedroom, with one of the teenaged neighbor girls---or their mothers---doing what he did best...fucking. From the high pitched squeals she bet that it was one, or possibly even two, of the younger ones. Mike was responsible for arranging his late morning fucks; Jill generally scheduled his afternoon trysts. She contemplated joining them but thought better of it since she had to get back to the office for an appointment soon after lunch. Still, she couldn't resist a quick look.\n\nIt wasn't as if Jill didn't enjoy sex with Mike; he was astounding in bed. At thirty-two he was devastatingly handsome with a chiseled muscularity and a cock that seemed always ready for action. That amazing cock! Jill had seen her share of porn movies; Mike's cock would have embarrassed most of the actors\u2014and thrilled the females. Mike's cock was huge; it was just shy of ten inches long and thick...so damned thick! It was also, she had learned early on, always ready for action. Mike was a health nut and a physical fitness freak; his stamina was legendary. The amount of cum he could produce, over and over, gagged all but the most experienced cock suckers. She knew this well; she loved sucking Mike's cock---and had done so a few hours earlier prior to going to work.\n\nShe had also sucked her husband off the night before as soon as she had gotten home, then fucked him, the 'regular way' before they went to sleep, then given him her ass a few hours after midnight. That was their routine five days a week; on weekends you could double---or even triple---the schedule.\n\nShe and Mike had dated in college and married soon after. They were very much in love and would almost certainly spend the rest of their lives together. They had two beautiful children. They enjoyed each others company over others and were the very best of friends. \n\nThey had arrived at this unusual arrangement even before they were married. Jill had never wanted another man and would never cheat on her husband. Certainly she wouldn't go somewhere else for sex...sex with Mike was the most amazing sex she could even imagine. He was a sensitive and caring lover who knew how to push all of her buttons. He could make her cum with his mouth and tongue until she passed out from sheer rapture. \n\nShe was the envy of every other young wife in the neighborhood and most of her female friends. Mike was a sweetheart. He was a fantastic father. He was a very successful writer who provided a significantly upscale life style for his family. Jill worked because she wanted to, because she enjoyed it, and she owned the business. It also gave Mike privacy to write. If she had stayed at home his writing would have suffered...they would have simply fucked constantly. No matter how many women Mike fucked, and there had to have been thousands, Jill was his absolute favorite piece of ass. She knew that what was going on in the bedroom was sex and nothing more. She also knew that no one woman could possibly satisfy Mike's sexual requirements. She also understood that if Mike wasn't fucking, he was writing. The better the fucking, the better the writing! \n\nWhile Jill knew that she was getting all of her holes delightfully serviced each day more often than her friends and neighbors were in a week or even a month, she had long ago realized that she needed help; once she invited a friend from work, a neighborhood wife or a baby sitter to sample Mike's incredible cock, they became addicted. Even her own mother, who had fucked Mike on numerous occasions, was in awe. As were her sisters, cousins, the cosmetic girls down at the mall---Mike had serviced them all.\n\nJill went into the bedroom to check out the action. It was the tall blond eighteen year old two doors down. Mike had her in his favorite position with her long legs pinned against her tits lying on her back, with her tight little cunt perfectly presented on the special wedge pillow that was intended for just this purpose. She marveled as she watched that incredible cock pistoning into the young woman at blazing speed.\n\n\"Hi, Naomi, how are you? Is my husband attending to your every need?\" Jill inquired, given the young woman a soft kiss on the lips and a little bit of tongue as she stroked and admired the young woman's fine young tits.\n\n\"Oh, yes Mrs. Johnson. I've already cum four times...I'm real close again, oh fuck that cock is so big.\"\n\n\"How's work, hon?\" Mike said, turning and smiling as his wife offered him a kiss---a kiss which did not remotely slow his rapid paced reaming of the young school girl.\n\n\"Great, dear, I won't be here too long, I've got a meeting right after lunch.\"\n\nJill examined the young woman being serviced by her husband. She was very cute and looked so young. On numerous occasions Jill would join her husband in his endeavors, occasionally donning a strap on, sucking a young muff or allowing her own exquisite little cunt to be serviced. Checking her watch she made a decision. She quickly removed her panties, leaving her thigh highs in place. Grabbing the young woman's hand, she placed it on her rapidly moistening slit. Climbing over the girl's head and pulling the hem of her short skirt up, she lowered her juicy little slot over the girl's face. She felt Mike lean forward and insert his long tongue in her ass hole.\n\n\"How about a little head Naomi; I'd really like to cum on your face before I go back to work.\"\n\n\"Oh, Mrs. Johnson...I thought you'd never ask!\" Naomi replied and proceeded to give Jill's nearly bare little twat an expert oral massage. She was very good, Jill thought. She should be...Jill and Mike had taught her the finer points of muff diving quite awhile back. Jill was very orgasmic. The combination of the hot little tongue on her clit and Mike's long probing one up her shitter had the desired effect; Jill came quickly and removed her body from the middle of the action, albeit regretfully.\n\n\"You want some of this load, baby?\" Mike asked his loving wife. Knowing how much she enjoyed his cum in her flat little tummy.\n\n\"No thanks dear. I don't really have time to change if I get some on my suit. Where do you want it Naomi, in your precious little pussy, your mouth---or your ass?\"\n\n\"My mouth and my tits! Come on Mr. Johnson give me that big load of sweet cream.\"\n\nMike removed his massive organ from the little girl and started to stroke.\n\n\"Need a little help there, hon?\" Jill asked.\n\n\"Always babe, you stroke my cock like no other woman in the world.\"\n\nIt took three long two handed strokes from Jill's experienced hands and Mike shot the first massive string from the bulbous head of his cock. That cock head was huge\u2014easily the size of a billiard ball, Jill thought to herself. Jill stroked eight more times and easily half a cup of white viscous fluid splattered young Naomi from belly to mouth. Unable to resist the enchanting flavor of Mike's special sauce, Jill took his fat cock head in her mouth and removed the last traces. Naomi had gotten more than half of the load right where she wanted it, in her mouth and was now scooping the rest off of her tits and tummy and swallowing it down as if it was her favorite flavor of ice cream. Women could not get enough of Mike's cum; it was a delicacy treasured by all who had sampled it. It tasted almost exactly like sweet cream with a hint of chocolate and Grand Marnier. \n\nJill noted, as was the norm, that Mikes massive tool was still hard...very hard. She certainly hoped that young Naomi was prepared for the ass fuck that was sure to follow. Normally Mike would need to cum at least four times in succession before his dick would soften, and even then it would still be serviceable.\n\n\"Are you staying for the next event, Naomi?\" Jill asked.\n\n\"No I've got to go to school; we're on afternoon sessions. My mom's coming over in about half and hour. I can't take that monster up my butt---yet. I've been practicing. Mom loves it in her ass---hell she prefers it---and dad won't butt fuck her.\"\n\nNaomi's mom was a neighbor and good friend of Jill's. She had given birth young and was only thirty-five and had a body every bit as tight and fine as her daughter's. Naomi cleaned up and dressed for school, giving both Mike and Jill a less than platonic kiss as she scampered out the door. Mike and Jill enjoyed a quiet lunch together, talking about their own children, Mike's writing and Jill's morning at work. Theirs was a special marriage.\n\nAs Jill kissed her loving husband goodbye at the door, she heard Mandy, Naomi's mom drive into the long driveway.\n\nThe two women greeted each other affectionately at the entrance to the large home.\n\n\"You just missed your daughter, Mandy. You and Mike have fun. I have to get back to the office.\"\n\n\"Are you sure you can't stay? It's always more fun when you're part of the show.\"\n\n\"Nope, got a meeting. Maybe next time. You are the best damned pussy eater---other than Mike, of course---in the neighborhood. And I really get off watching my husband long dick another woman's shitter, but I've got work to do. Enjoy the ass fuck!\" Jill knew that Mandy would more than enjoy having Mike's massive fuck tool rammed up her tight little ass. Most women needed a little help to cum while being butt fucked; Mandy, like Jill, was completely anally orgasmic.\n\nJill was a stunningly attractive woman with cover girl beauty and the perfect body. She was without a doubt the most attractive woman in the neighborhood or at her office. When she walked through a hotel lobby men literally stopped talking and gasped. Few men had the nerve to hit on her; most knew she was out of their league. She rebuffed the few brave ones who tried to make a pass with her usual charm and humor. Occasionally there would be a persistent one and for those she had a standard retort.\n\nShe would reach into her wallet and show them a picture of her loving husband. \"He's six two, 190 pounds and built like a Greek God. He's a successful writer who has had at least one book on the best seller list for over a decade, and is a millionaire several times over. We've been madly in love since we met when I was a freshman in college. He's a fantastic dad to our children and my very best friend in the world. He satisfies and excited me in every way imaginable.\"\n\nPausing to let the words sink in, she would hit them with the coup de gras. \"His cock measures almost ten inches long, is as big around as a forearm and, bluntly is always hard as a rock. He makes me cum at least five times a day---more often on weekends. He fucks my mouth, pussy and ass, depending on my mood. He made me cum with his mouth three times before I left the house this morning and then, just for good measure drilled my tight little ass hole in the shower. Of course he also fucked me twice during the night and I sucked his cock twice. So, exactly what is that you think you have that would interest me?\" That usually took care of things.\n\nOne of the first things Jill had to deal with at the office was the calendar, or more accurately, Mike's fuck calendar. This was Jill's office; she owned the business. She had early on decided to hire only women and only attractive women. The twenty women in the office ranged in age from eighteen to just shy of forty and all were physically fit, thanks to the on premises fitness center. Every single one of them was a head turner but all were top rate employees with exceptional job skills. Jill had personally designed a unique interview and evaluation process to ensure that any woman she hired had a very good chance of ending up in Mike's bed. \n\nOn average, Mike fucked three women each day in addition to Jill. It added up to roughly twenty loads of cum per day from Mikes amazing organ. Less than that and Mike's writing suffered. It was a normal daily routine for Mike to write for two hours after Jill left for work in the morning. Then he would need his 10:00 AM fuck session, then another hour of writing, then his noon time fuck, writing from one to three another fuck session from three to whenever and then off course Jill would come home between five and six and immediately blow him. \n\nAfter the kids were down for the night Inga, the part time Swedish au pair would spend the night---always in bed with Jill and Mike. It was with Inga that Jill made the most use of her strap on which was a perfect anatomical duplicate of Mike's cock. Inga loved double penetration; depending on the mood, Jill would vigorously fuck her lightly freckled, milky white little ass from behind while Mike serviced her little blond cunt from below. Inga was wonderful with the children but was also a delightful submissive who lived to please her employers. Life was good.\n\nThe year before, Jill had arranged a special birthday present for Mike. She and Mike were totally open in the discussions of which women were his favorites. There was a little eighteen year old brunette who lived one block over. There was a twenty six year old who worked for Jill. There was a thirty year old neighborhood wife down the street. There was a woman who was just shy of forty who worked at the mall. And then of course, there was Jill. \n\nNo matter how many different sexual encounters Mike had, they both knew that Jill was his absolute favorite fuck mate. She knew ever single one of his hot buttons and was extremely accomplished in bringing him to screaming orgasms. She did her exercises every day and milked his huge tool like no other woman could. It had been serendipity that Mike and Jill had found each other. She knew from conversations that she was far hornier, almost constantly, than her friends or other women she knew. What really fascinated her was the fact that no matter how many other women Mike screwed, he couldn't keep his hands off his gorgeous young wife. After coming more than a dozen times with at least three different women during the day, he couldn't wait to jump his wife's bones the minute she came home.\n\nThey had had a contractor come in and build a special giant bed in their oversized master suite. There was a shower that could accommodate six easily. There was a hot tub of equal proportions. There was a selection of special sex cushions, sex swings, an alphabetized selection of sex toys, mirrors everywhere and special chairs made for sex.\n\nSo, for Mike's last birthday Jill had shared Mike with the three other aforementioned women---plus Inga, whose feeling would have been hurt had she been left out. Both Mike and Jill had a special place in their hearts for Inga. Inga was the only person Jill knew who could excite her almost as much as her husband did. She had been perfectly trained from a tender age to perfectly meet the couple's sexual needs.\n\nThe birthday night had been very special. At one point two of the women---the eighteen year old brunette and the woman from the mall---laid on top of each other in a loving embrace with their cunt locked together as Mike services both women at the same time from on top never missing a stroke as he alternately inserted his massive cock into each of the women's dripping little muffs. He had fucked the two women for close to half and hour while Jill worked the slim vibrating butt plug in and out of her husband's butt. The neighbor's wife stood astride the two women and Mike services her slot with his talented mouth. Inga had eaten Jill's exquisite little cunt and brought her off three times during the engagement. It total, Mike fucked all of the women---including Jill---in all three of their delightful orifices.\n\nJill's favorite had been when they all decided to make love to the twenty-six year old from Jill's business. It was a heartwarming picture as four women and one exceptionally talented man brought the gorgeous creature to a series of shattering orgasms. Jill used one of the large glass anal dildos and fucked the young woman's tight little shitter with abandoned. The woman from the mall sucked on one tit while the neighbor's wife took the other one. Inga made love to her face with her mouth. Mike, of course, plundered her drippy little cunt with that amazing cock. They switched positions over and over. In the end, all of the other women were completely fucked out and Mike, still hard, gently took his loving wife's astounding little ass for the second time of the evening.\n\nThey had drifted off to sleep; Jill awoke to find Inga servicing Jill's dripping pussy with her usual expertise. Soon, Mike awoke and plunged his again rock hard tool deep into Inga's delightful rump. Jill knew that Inga liked Mike's thick cock in her little Swedish ass almost as much as Jill did. Life was good. \n\nIt was after that night that Inga moved in with them and became a permanent fixture in their marital bed. Both Mike and Jill loved the young Swedish beauty very much and her addition allowed Jill to get a little more sleep than in the past---although not very much more. Inga had become almost as insatiable as Mike and Jill were. While Jill was distinctly heterosexual, she absolutely loved girl sex with Inga. Mike understood and would often simply watch the two beauties bringing each other exquisite pleasure. Of course, Mike would be hard---he almost always was---and watching the two women he cared for so much making love would bring him to action. After the girls got each other off each knew that Mike's relentless tool needed to be serviced; both women did so with animalistic abandon.\n\nBack to the calendar, or the, 'be serviced by Mike', roster. There was a new girl in the office who had just come of age who had been pestering Jill to include her in the rotation. Jill was always cautious not to send a girl to Mike's bed who was not prepared. She had made that mistake once, early on, and the poor woman had passed out when she had first viewed Mike's enormous cock. She wouldn't make that mistake again. Several of the other women in the office had briefed young Debbie on what to expect. Jill had interviewed her several times and provided her with one of the anatomically correct silicone, 'Mike dicks' to allow her to practice and to ensure that she was ready for Mike's extreme girth and length. Jill asked Debbie to come into the office for her final interview.\n\n\"Show me your ready, Debbie, and today's the day.\"\n\nDebbie beamed with pride as she removed her tight shirt and short skirt. Jill was pleased to see that she had already removed her panties before entering the office. Bras were not a required part of office attire. Debbie had an almost perfect young body; her ass was a tad fuller than Jill's but she knew that Mike would enjoy manipulating her young breeder hips as he serviced her. Her young breasts were exquisite, also larger than, Jill's, and absolutely suitable for tittie fucking. A doe eyed little blond with full lips, a wide set jaw and beautiful blue eyes. Perfect, Jill thought to herself.\n\n\"Show me.\" Jill commanded, handing Debbie one of the silicone implements.\n\nDebbie proceeded to insert the huge silicone tool into her mouth, shoving it to the back of her throat. Removing it from her mouth, she them inserted it into her bare little pussy and proceeded to fuck herself with it for several seconds.\n\nMoving close to Debbie, Jill took the big toy from her hands and liberally coated it in Mike's favorite anal lubricant.\n\n\"Now the butt, young lady.\"\n\nDebbie turned around with her full firm ass facing Jill but before she could insert the dildo into her tender ass, Jill interceded.\n\n\"Let me help a little.\" Jill said, kneeling down and spreading young Debbie's fleshy butt cheeks with her hands.\n\nJill began lavishing oral attention on Debbie's darling little crinkle, ultimately inserting her own nimble tongue deep inside the young woman's anal orifice. Grabbing the tool from Debbie's young hand, Jill inserted it quickly into her rectum---less gently than she knew her dear husband would do with the real thing. Debbie accepted the rapid anal invasion with barely a whimper. Fingering the young woman's sopping little cunt, Jill continued to fuck her rump with the silicone implement. Debbie came in seconds. Jill was pleased. Realizing that she had never put her own panties on after Naomi's excellent work at home, Jill moved in front of Debbie and offered her own wet little cunt to the young novice. If the little bitch could suck pussy, it was very likely that she would also be an adept little cock sucker.",
        "\"Yes ma'am.\" Debbie replied without being even told what to do. \n\nJill was ecstatic when she discovered Debbie's oral expertise. My God, she thought to herself, this little slut is almost as good---not quite, of course---as her beloved Inga. Jill had made her decision. Debbie would be on the roster today; checking her watch, she realized that Naomi's mom would have already finished up and that Mike would now write for two hours before he would again need to be satisfied. Remembering her office calendar, Jill realized that she would be able to leave the office early and take Debbie home personally for her initiation. Jill absolutely knew she wanted to share the young girl with her husband the first time...and maybe other times in the future. As her mind wandered, Jill came from Debbie's excellent oral talents, grinding her tightly trimmed little cunt into the young woman's willing mouth to get the last vestiges of a second orgasm out of her system. Dropping her skirt and raising the young woman to her feet, Jill gave her a long and passionate kiss as she fingered the girl's cunt and ass one last time for good measure.\n\n\"Excellent, Debbie! You're on the roster---today. Be ready to leave with me at 4:00 PM. We'll go home together. I always like to be involved in any girl's first time with Mike.\"\n\nRecovering her clothing Debbie was almost jumping for joy as she again kissed Jill---and reached under Jill's skirt to finger her pussy---and then scampered out of the office. Life really was good!\n\nJill checked her watch; Mike would now be writing but would take a coffee break in exactly thirteen minutes. She would call him then to inform him of the new participant. Mike loved fresh meat...as did Jill. For most women, the first time Mike inserted his massive stick in their hole of choice it was almost like being a virgin and being fucked for the first time. Even the silicone implement did not prepare them from the real thing. Additionally, Jill had noted that the dildos she and Mike had had custom made were actually slightly smaller than the real thing. Mikes cock seemed to be growing a little larger with each passing year.\n\nAs Jill and Debbie settled into the soft leather of Jill's roadster, Jill turned and spoke. \"You're a very pretty young lady, Debbie. Mike and I are honored that you've chosen to be a special part of our lives. Is your little pussy already wet? I think it is! Mike and I can easily smell wet young pussy and yours is very wet, of that I am sure.\"\n\n\"Yes ma'am, it surely is. But, ah, Mike will fuck my little mouth first, won't he?\"\n\n\"Of course dear, all the way to the back of your throat. Then your tight little cunt and finally, the main event...your ass. Are you---well other than the dildo practice 'back there'---an anal virgin?\"\n\n\"Yes ma'am, I am but I've dreamed about being sodomized the first time for so long! I'm really looking forward to it.\"\n\nAs Jill escorted young Debbie through the front door of their expansive home, she too was excited. She would be present when Debbie got her first glimpse of Mike's amazing appendage. She loved the look of shock, awe and bewilderment on a woman's face the first time. She also knew that after Mike's first session with new, fresh meat he would be particularly randy for the rest of the night. She was glad she had ordered a very large quantity of industrial strength anal lubricants. Her own exceptional little butt hole was in for a long night of servicing. Life was so good!\n\nTo relax young Debbie, Jill suggested that the three of them enter the massive hot tub in the bathroom. She was pleased that Debbie showed no fear or hesitation as she quickly removed her clothing and displayed her full milky butt to the couple. Mike asked her to turn around and spread her cheeks and immediately began orally servicing the young woman's anal opening. Jill thought, what the heck and went down on her knees to service Debbie's bare little pussy creating the classic Debbie sandwich. It was always smart with the new ones to get that first nervous orgasm out of the way. Debbie did not disappoint, cumming within a matter of seconds. Jill was looking directly into the young woman's eyes as Mike grabbed Debbie's hand and pulled it behind her for her first contact with the amazing organ. Her eyes grew wide. She slowly turned to view the object her hand had discovered.\n\n\"Oh my God! What an amazing---fucking huge---cock!\" Debbie exclaimed. As she examined it like a child with a new educational toy, she fell to her knees and placed the head at the entrance to her mouth.\n\n\"Can I just suck on it for a little while before you fuck my mouth...please?\"\n\n\"Certainly, my dear.\" Mike replied, softly. \"You're here for your pleasure as much as for mine---ours. If you like you can make me cum with your beautiful little mouth. Since this is the first time, your jaw may tire quickly. When you're ready for me to cum, just raise your hand.\"\n\nDebbie proceeded to suck the massive organ with youthful enthusiasm; she had obviously practiced well, swirling the head with her little pink tongue and taking the fat, long cock far deeper than most first timers could. As Mike had predicted, her jaw began to tire and she raised her hand after about five minutes of exceptional cock sucking. Jill knew that Mike could have lasted for well over an hour even with a first timer but also knew that he had the absolute control to cum---or not---whenever he wanted to. He quickly flooded the young woman's eager mouth with his standard massive load of sweet cream. Debbie gurgled and gagged a little but in the end didn't spill a drop. Jill was very proud of her!\n\n\"Oh my God...it tastes like...\"\n\nJill interrupted her. \"Sweet cream with a hint of chocolate and Grand Marnier?\"\n\n\"Exactly.\" Debbie replied gleefully.\n\nJill decided to personally ensure that Debbie's sweet little cunt was properly prepared and lubricated for Mike's cock, positioning the young woman's full buttocks on the edge of the hot tub and diving in for a quick swipe of the tongue on her juicy little slot. Very sweet and very ready, Jill thought to herself! Mike continued his assault on her obscenely stretched young mouth, forcing the massive tool to the back of her throat and the sweet young thing gurgled, gagged and choked at the invasion. Wordlessly she switched to the young woman's mouth as Mike withdrew and prepared to penetrate her tight little muff. Holding her athletic, milky white legs in the preferred position, Mike slowly inserted his still rigid cock into the young woman to the accompaniment of numerous oohs and ahs and a look of genuine surprise as the penetration progressed.\n\n\"Very tight, hon...very tight indeed. Are you doing okay, Debbie?\" Mike inquired.\n\n\"Abso-fucking-lutely!\" Debbie exclaimed in rapture.\n\nBalls deep, Mike commenced a slow deep penetration, ultimately increasing speed as his muscular body achieved the perfect rhythm. He was moving so fast that his cock was a blur, but Jill reveled in the perfect view she had of the girl's stretched little cunt as she accepted the biggest cock she had ever had---or ever would have. \n\nHalf an hour later, Mike came with a roar, flooding the young woman's birth canal with his incredible juice. Jill recovered a measure of the enchanting fluid from the young woman's gaping cunt and shared it with Debbie in a deep, affectionate and probing kiss. As Mike sat back in the corner of the hot tub, Jill noted with approval that his fuck tool had only slightly softened and was still almost twice as long as the average in its current state. She knew that it would take as long as ten minutes for Mike to recover completely, more than long enough for Jill to flip the delightful young creature over and use her mouth and tongue to prepare her little shitter for the next phase.\n\nLavishing attention on the girl's delightfully tight little back door, Jill used her magic fingers on the girl's dripping little cunt to bring the young woman to another screaming orgasm. Grabbing the always available bottle of their favorite anal lube, Jill inserted the long nozzle into her little hole and squeezed the plastic container to ensure deep and adequate lubrication. Debbie was ready. Looking over at her beloved husband, Jill realized that he was also ready. His cock was, again going through one of its growth spurts; she would measure it later but was sure that it now had passed the ten inch mark. How big could it ultimately get?\n\nMike particularly enjoyed the visual stimulation of watching his massive organ split a young woman's cheeks from behind. As he carefully inserted his cock between Debbie's fleshy butt cheeks, Jill hovered inches away from the site; she too found this view particularly arousing. As the bulbous head passed Debbie's tight anal ring, the young woman gasped. As the amazing organ continued its inevitable journey inside the young woman's tight little hole, a dreamy smile came across her sweet young face. He was in, balls deep, tickling her butt crack with his public hair. \n\nMike began a slow, deep stroke as the young woman became more comfortable with the massive invasion of her most private hole. Soon he was pistoning into her delightful little rump at his normal blazing pace. Jill worked several finger into the young woman's sloppy little girl hole while gently working the girl's fine little titties with her other hand. Twenty minutes later, Debbie had cum at least three times and Mike sensed that it was time. As he looked at his wife, she nodded in agreement. With a deep roar, Mike unloaded another massive load inside the young woman's body. Debbie came again as she felt the splash of viscous fluid on the walls of her rectum.\n\nSince Debbie had to leave early to attend night school, there wasn't time for the usual fourth cum that Mike so needed. That was okay with Jill; it simply meant more cock for her. After Debbie departed, Mike carried Jill to their marital bed, placed her long tanned legs against her chest and shoved his gigantic organ into Jill's tight little shitter in one quick thrust, just the way Jill liked it. Thirty minutes later, Mike came deep in her ass. As he removed his cock from her delightful little ass, he pushed her legs up and sucked his magic juice from her gaping ass hole, then shared the mixture of Jill's ass funk and that amazing fluid with Jill in a tender, probing kiss. Life was good!\n\nLater that same evening after the children were in bed, Inga and Jill grabbed the tape measure and confirmed Jill's earlier suspicions. Mike's cock had indeed grown; it was now just shy of eleven inches long---and almost the same in circumference. He serviced his two favorite women in the world numerous times through the night. Again Jill had been correct; after fucking a novice for the first time, Mike always needed more fucking to follow. By Jill's count, and she can be forgiven for losing track, Mike came eight more times that night, sharing his special tool with both women equally.\n\nThe routine of their life seldom varied but never got boring. Occasionally there would be a surprise. One such surprise occurred several days later when Jill exited her car in their driveway. A stunningly attractive brunette, probably in her late thirties, was waiting for Jill. She had a look that said she was unhappy. The angry woman quickly introduced herself and got down to business.\n\n\"I'm Bambi Jackson. We live several blocks way. Your husband is having an affair with my daughter, Thumper!\"\n\n\"You're daughter's name is Thumper?\"\n\n\"It's a nick name, actually. You don't seem to be very upset about the fact that your adulterous husband is fucking my nineteen year old daughter.\"\n\n\"What's your daughter's real name?\" Jill inquired.\n\n\"\"Fawn. Her name's Fawn.\"\n\n\"Oh, of course, what a delightful young lady! She looks just like you. Let me check my Blackbery. Oh yes, Fawn...ah, Thumper, has been over to the house several times.\"\n\n\"But aren't you upset that your husband is dicking another woman?\"\n\n\"Bambi, my husband, as you put it, dicks a lot of other women. I keep his fuck calendar. As a matter of fact I myself have enjoyed your daughter's sexual proclivities. She is an exceptional little muff diver and her own little pussy is honey sweet. She also really likes my strap on and goes nuts for double penetration. So what's your point?\" Jill replied with a hint of irritation.\n\nThe look of shock and surprise on Bambi's face made Jill wish she could snap a picture.\n\n\"Thumper says your husband's cock is...\"\n\n\"Almost ten inches long? well actually it's started to grow---again. It's now almost eleven inches long.\"\n\n\"She also said his cum tastes like...\"\n\nSweet cream with a hint of chocolate and Grand Marnier? Yes I know. Why are you here? Your daughter is of age; I am well aware of her activities in our marital bed. Thumper, Fawn or whatever really seems to enjoy my husband's cock...in her mouth, cunt and ass. She certainly wasn't seduced or forced. What do you want?\"\n\n\"I want to see it.\"\n\nPardon me?\" Jill replied, but as her keen olfactory senses began to sense the distinct scent of rapidly moistening cunt, Jill knew exactly what Bambi meant.\n\n\"I want to see his cock.\"\n\n\"Well, this is highly unusual---and you're certainly not on the schedule---but Mike should just be finishing up with his afternoon session, let me see, that would be, Missy Davis---do you know her?\"\n\n\"Why yes, I do. She's one of my best friends...I had no idea.\"\n\nAt that moment the front door opened and a gorgeous red head also in her thirties exited the house grinning from ear to ear.\n\n\"Bambi! I had no idea you were on the roster. From what you've told me about your sex life with Bob---needle dick, I think you called him---you're in for an amazing treat.\"\n\nJill noted the increased aura of sexual arousal emanating from Bambi's crotch, mixed with the freshly fucked essence coming from Missy's nether region. As Missy gave Jill a less than platonic kiss the remnants of Mike's sauce entered her mouth. Many women would use a mouth wash after sucking a big cock; none did so after sucking her husband off; the flavor was simply too enjoyable to lose. As Missy said her goodbyes to her good friend Bambi, Jill escorted the stunned woman through the front door.\n\n\"Have a seat, Bambi. I'll go talk to my husband.\"\n\nMike was back at the computer, madly typing out his next chapter. Jill hated to interrupt him but needed to explain the problem now sitting in the living room.\n\n\"Give me ten minutes, babe...I'm on a roll here. Entertain our guest, if you don't mind.\"\n\nJill returned to the living room. \"Can I offer you something to drink, Bambi? My husband is just finishing up a chapter in his latest book and I don't want to disturb his train of thought. He'll be out in ten minutes or so. Why don't you and I get acquainted?\"\n\nBambi accepted the offered glass of Chardonnay; Jill sat on the love seat next to Bambi and examined her closely. She was really quite beautiful and obviously took good care of her body.\n\n\"So, Bambi. You want to fuck my husband?\" No sense in beating around the bush; there really wasn't time. The kids had to be picked up from school in an hour.\n\n\"Well...I...no, I just want to see it...the cock, I mean.\"\n\n\"Bambi, I don't think you're being entirely truthful. I have very keen senses---particularly my sense of smell. I can clearly smell your pussy---very nice scent, by the way---and you are more than a little aroused. Let's see, there's another aroma I sense...what is that? Oh, I know! It's one of my favorite lubricants, the one with a hint of Jasmine. But, Bambi, it's typically thought of as exclusively an anal lubricant. What on earth could you have in mind lubing up your shitter before accosting me in the driveway? I'm pretty sure that I'm looking at a woman who came over here today to get laid.\"\n\nBambi had been caught and was more than a little embarrassed. Sex with her husband, Bob was absolutely awful---when it occurred---which was seldom. She had not had an orgasm with her husband and his pitiful little cock---ever. He had never become adept at getting her off with his mouth and found anal sex to be dirty---even perverted.\n\nJill noted that Bambi was wearing a delightfully short skirt sans panty hose. Her amply boobies were projected upward by a demi cut push up bra. From the intensity of the increasing aroma from her cunt and ass, Jill was positive that the woman had forgotten her panties. She decided to explore.\n\n\"Bambi, your not wearing any panties are you?\"\n\nBambi shook her head, then uncrossed her legs nervously. The hem of her provocative little skirt was barely an inch from her moist little quim.\n\n\"Show it to me, Bambi, show me your pussy.\" Jill said in her best, commanding, business voice. Bambi raised the skirt several inches exposing her glistening little treasure.\n\n\"You have a beautiful pussy, Bambi. Show me what's inside.\" Jill again commanded.\n\nBambi reached down tentatively and parted the lips to her girl hole.\n\n\"I'm betting that you are quite adept at getting off with your fingers. Show me, Bambi.\"\n\nBambi began to massage her love button, alternately inserting several fingers inside her steamy hole.\n\n\"Would you like me to help?\" Jill inquired, as she herself became increasingly aroused at the delightful picture in front of her. Bambi nodded.\n\nJill moved to the new woman and raised her to her feet. As Jill softly explored Bambi's full mouth with her own she replaced Bambi's fingers with hers.\n\n\"Do you like eating a woman's pussy, Bambi?\" Bambi moaned and nodded again. Jill removed her thong panties in a flash.\n\n\"Show me what you've got---bitch!\" Jill, ordered, sure that Bambi had just enough sub in her to do as she was told in a sexual situation. Bambi did not disappoint, sinking to her knees and expertly lapping Jill's special place with enthusiasm. Oh, my, Jill thought to herself! This one was very adept. Jill came quickly as was her normal highly orgasmic nature.\n\n\"Turn about is fair play, Bambi---and you've certainly earned it! On the coffee table! Hold your legs up! Slide your cute little ass over the edge.\" And with those instructions, Jill went down on Bambi.\n\nWhat a delightfully sweet\u2014and unusually tight---pussy Bambi had with the distinct flavor of hazelnuts and vanilla ice cream. Inserting one, then two fingers into Bambi's tight little ass hole, Jill confirmed that the woman had indeed lubricated her back door with expectations. It took Jill only a couple of minutes to bring Bambi to a whimpering, moaning, sobbing orgasm. Jill lapped up every available drop of her delightful essence, then shared it with the woman's via a deep and probing kiss.\n\nMike had observed at least the culmination of the girl exchange from the doorway, not wanting to interrupt the two very busy women. Finished with Bambi, Jill turned expectantly to her loving husband.\n\n\"She's very ready, dear. This cunt is delightfully slimy and she lubed her little shitter before she arrived. Her oral skills are more than acceptable; she definitely is here for more than a look. I need to leave in a few minutes to pick up the children---but not before you show it to her...that's always my favorite part. Mike, this is Bambi. Bambi, this is my husband Mike.\"\n\nWith no preliminaries Mike quickly doffed the thin, nylon shorts he often wore around the house. He was hard...very hard. He had obviously enjoyed the girl show that Jill and Bambi had put on.\n\nBambi's hand shot to her mouth as she viewed, for the first time, Mike's engorged fuck tool.\n\n\"Oh my God.\" She said, \"I had no idea...I thought my daughter was exaggerating...kids always exaggerate...that's fucking amazing----it's gigantic!\" And with that, Bambi moved to Mike and grasped his massive cock with both of her hands, softly stroking its full length---and girth---with delight. She turned toward Jill, a pleading look on her face.",
        "\"Okay Bambi---but just this one time. Next time you need to wait your turn and be on the schedule. If you're exceptional you'll get favorable scheduling---but you must know that the competition is fierce! I need to go pick up the kids. I'll be back in an hour. Have fun kids---and don't do anything I wouldn't do!\" And with that, Jill grabbed her purse and keys and scampered out the door.\n\nAfter Jill exited, Mike took charge. \"Off with the clothes, Bambi.\"\n\nBambi removed her scant garments. Mike was very pleased. Bambi had long, firm legs, excellent tits and a delightful little bubble butt. Mike moved up behind her as she twirled around displaying her wares, caressing the tight cleft of her fine ass and running his fingers along her tight little brown eye. Within seconds he was probing her anal canal with two fingers and was please that Bambi got the message and was gently fucking his fingers with her taunt little butt.\n\n\"Is that where you want it first, Bambi?\" The woman moaned and nodded.\n\nStill standing behind her, Mike placed the massive head of his cock at her anal barrier. \n\n\"You're not a virgin back here, are you? But it's been awhile since you had a cock in your ass hasn't it? But you've been practicing, haven't you? I bet you found Fawn's practice toy and tried it out on your own sweet little ass, didn't you?\" Bambi nodded again.\n\nMike quickly popped the gorgeous woman's anal ring with his billiard ball sized cock head. Bambi gasped but began a slow, rhythmic rotation of her tight little hips as if attempting to screw her ass onto Mike's cock. Mike let her proceed at her own pace as she became more comfortable with the fullness. Soon he was balls deep in Bambi's tight little rectum. \n\nMoving her over to the sofa he had her lie over the high side arm. The sofa had been specifically designed for this purpose and for Mike's height, allowing him maximum anal penetration and an elevation that did not require him to either bend his knees or rise up on his toes. Actually, every piece of furniture in the house had been designed specifically with some sexual activity in mine. Jill and Mike often referred to this as the anal fuck sofa.\n\nAfter he was sure Bambi was comfortable, Mike increased his pace, fully penetrating Bambi's delightful posterior on each and every stroke. Bambi was a talker; Mike liked that.\n\n\"Oh, Jesus...fuck, oh God it hurts so fucking good! It's been too long...ream me baby! Oh yes! Drive it deep. Make me your anal slut...fuck that ass...oh shit!\"\n\nFortunately there was no shit...Mike was not into scat. Bambi had obviously cleaned her little pooper appropriately before arriving. He jammed his giant pole into the willing woman for a long time...after all, he had already cum more times than he could remember that day. He had perfect control of his orgasms, but after shooting over a dozen loads in less than eight hours, he knew that Bambi was in for a serious ass fuck. \n\nShe didn't show any sign of wanting him to cease and desist but he also knew that her little hole would be more than a little tender the next day. Still, she had come for, and requested an ass fuck and Mike was going to give Bambi her money's worth. Almost thirty minutes later, Mike dumped his usual quota of hot cream deep in Bambi's hot bowels. She had cum several times. As he lifted her up and presented his nasty cock to her for cleaning, she took it deep in her mouth without hesitation, ravenously cleaning every vestige of his delightful cream and her own ass juice from his dick.\n\nMike started a slow mouth fuck and was pleased to see that Bambi took all of his organ all the way to the back of his throat. He had held back one last squirt as a special reward for Bambi. After a few minutes of delightful skull fucking he squirted that last string precisely on her tongue. She swallowed it, grinning from ear to ear. Another very satisfied woman, Mike thought to himself. Maybe this is my destiny?\n\n\"How long do you need to rest before you fuck my pussy?\" Bambi asked expectantly.\n\n\"Not more than ten minutes.\" \n\nMike replied, stroking his massive tool which had only slightly deflated. Several years earlier Mike had found out during his annual physical that his body produced an unusually high amount of the very same compounds present in several of the more popular ED medications. His doctor, Sheila, had marveled at how large his cock was, but more important how easily it became very erect. Most men were a little embarrassed at having a female doctor---and a very attractive one at that---examine them intimately and would deflate and shrivel. The first time Sheila had inserted her talented digit inside his ass as part of the examination, Mike's cock had grown rock hard and was standing at a forty-five degree angle.\n\nDr. Sheila had asked him probing questions about his sex life and had been astounded---and aroused---when he told her that he routinely got off more than fifteen times each day.\n\n\"When was the last time you, ah, had sex?\" Sheila inquired, coyly.\n\nChecking his watch, Mike replied. \"Thirty minutes ago, Doctor.\"\n\n\"And how many times since you woke up this morning?\"\n\nMike thought for a second, adding up the figures in his head. \"Seven or eight?\"\n\n\"And when do you anticipate having sex again, Mike?\" Sheila had asked, now openly flirtatiously.\n\n\"As soon as you strip out of that darling little lab coat, Doctor. Your choice, where do you want me---mouth, pussy or butt?\"\n\n\"Have you got time for all three?\" Sheila asked expectantly.\n\nChecking his watch again, Mike asked Sheila an important question. \"How much longer do you need for the exam, doctor?\"\n\n\"I'm done. You're in amazingly good health. I just need to do a detailed examination of your sexual performance. How's that sound?\" The doctor asked, disrobing as she spoke. To Mike's delight, Doctor Sheila wore absolutely nothing under her lab coat.\n\n\"Well, you scheduled two hours for my physical, and you've only taken thirty minutes, so I'm confident that we have ample time.\"\n\nBeing a health nut, Mike decided after that day that monthly physical exams just made prudent sense. Since Sheila also liked girls, Jill switched doctors and signed up for monthly exams as well---sometimes scheduling them at the same time as Mike's exams. Doctor Sheila was an absolute anal freak and particular liked taking Mike's massive cock up her rear while devouring Jill's sweet quim. Going to see the doctor could be so damned rewarding, Mike thought to himself.\n\nBack to Bambi; it had been less than ten minutes, but the cock was already nearing its usual forty-five degree angle. As Bambi licked her lips expectantly, Mike went over and picked her up effortlessly and carried her to the massive master bedroom. Mike decided on the larger wedge pillow which would be very comfortable for Bambi but would also elevate her slippery little hole to the right angle for maximum penetration as well as giving Mike perfect leverage. Sliding her tight little ass to the edge of the wedge and sliding the wedge to the edge of the bed, Mike inserted the head of his gargantuan cock into Bambi pretty little pussy, encouraging her assistance in holding her long legs out of the way.\n\n\"I want it hard...rough, even...is that okay?\" Bambi asked.\n\nMike leaned forward to kiss Bambi, roughly squeezing both of her nipples in the process. She cried out but the ear to ear grin never left her face.\n\n\"Treat me like a slut.\" Bambi requested.\n\nMike drove his big cock to the depths of Bambi's birth canal. The rapid motion took the attractive mother of two by surprise. She was a talker; Mike bet that she also liked to be talked to.\n\n\"Take it deep you fucking little whore! You like being drilled by that big cock, don't you, slut? Show me what a nasty little bitch you can be. Moan for me slut, show me you need this big cock!\"\n\n\"Oh, yes, baby, fuck this little adulterous slut. Make me a real women! Oh God you're so fucking deep.\"\n\nChecking the wall clock on the opposite wall, Mike figured he had really only about twenty minutes to service Bambi's girl hole before he needed to get her cleaned up and dressed. One of the advantages to this particular sex cushion was that Bambi's tight little ass was also in the perfect position. Withdrawing his cock from her hot little cunt, Mike quickly inserted his rigid organ back in her still distended anal hole. She showed surprise, but not displeasure. Making his decision, Mike decided on a course of action.\n\n\"I'm going to fuck both your holes at once you nasty little ass whore!\"\n\nAs he had so often done in the past, Mike set up a perfect motion, alternately penetrating Bambi's tight little pooper and her surprisingly hot little cunt on alternate strokes. Mike never missed a beat. Bambi played with her erect little nipples and came more times than Mike could keep track of. As the magic twenty minutes came to a close, Mike asked Bambi the always important question.\n\n\"Where d you want it, bitch?\"\n\nMy mouth, cum in my mouth...please\" Bambi implored.\n\nMoving up on the bed, Mike looked down at Bambi's mouth, hanging open like a little birdie waiting for breakfast. Jamming the head of his cock into her oral opening, Mike stroked two long strings into Bambi's mouth, then returned to her cunt to dump the final load.\n\nAs Bambi looked at him quizzically, Mike explained.\n\n\"Just in case your husband decided to eat your little cunt when you get home, I want to leave him a special treat.\"\n\nBambi laughed as she thought about her nearly impotent husband Bob sucking another man's cum out of her pussy. She'd make him go down on her. He was too fucking dumb to know that he was eating another man's joy juice.\n\nBambi cleaned up with some warm wash cloths which Mike provided and was dressed and presentable and out the door as Jill was driving up with the children. Once the kids came home from school and their after school activities, life revolved around them and their world until they were put to bed around 9:00 PM. Jill and Mike were truly doting parents and very involved in their children's development. Life was good!\n\nAfter dinner, Inga arrived home from night school. The children absolutely loved their live in au pair and the feeling was mutual.\n\nAfter the kids were down, Mike listened to the delightful sounds of his two favorite women showering together...and pleasuring each other. He was a little tired; after all he had enjoyed an unscheduled sexual adventure with Bambi and knew that he would probably not be up for servicing Inga and Jill at least three times each during the night as was their custom. He was pleased that the two delightful creatures who meant so much to him were working off some of their own sexual tensions together in the shower.\n\nThe two beauties tumbled into the bedroom in all of their God given nakedness and proceeded to continue their carnal activities from the shower. Mike drifted off to sleep for about fifteen minutes. When he awoke, he was, as usual, bone hard and ready for action. Inga was taking the full length of his fat cock deep in her throat and Jill had planted her delightful rump over his face. Inserting his longer than normal tongue deep inside Jill's tasty little ass, Mike contemplated the decisions facing him.\n\nJill's ass or Inga's? Which tight little cunt first? Fuck it. He was completely revived and rejuvenated after his brief nap. He'd fuck both of his special lovers, as he so often did in all of their delightful holes. Lifting Jill off his face and sliding up from under her, he noted the look of disappointment on Inga's face as her favorite cock was taking from her sweet little mouth. Quickly sizing up the situation, she laid back to give Jill perfect access to her sweet little cunt. Positioning Jill on her knees and spreading her knees slightly, Mike impaled his loving wife, his favorite piece of ass with his big fuck tool. God she had a talented pussy, Mike thought to himself! Normally he would have saved Jill for his second pussy fuck; as good as Inga was, there was no one who compared to his loving wife, Jill. Oh, well, Mike thought to himself, variety is the spice of life...and life was good! "
    ],
    "authorname": "Dinsmore",
    "tags": [
        "anal",
        "oral",
        "atm",
        "girl on girl",
        "huge",
        "loving wife"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/life-was-good"
}