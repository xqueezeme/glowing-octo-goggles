{
    "title": "I Will Love You Forever Pt. 2 Ch. 19",
    "pages": [
        "Note: As always, thank you all for reading and thanks to donalde for beta reading. I also wanted to make a correction for chapter 18. I made Warden Ellis a republican and he should have been a democrat. The south at that time was primarily democratic. A reader was kind enough to email me to inform me of my error- thank you for that. \n\n******\n\nPatricia wasn't wearing the lavender gown when Kenji got home. As soon as she heard the car in the driveway, she checked on the kids and ran down the stairs. By the time Kenji had the car in the garage and was at the door leading into the kitchen, she was waiting for him anxious to see his reaction to the newest gown.\n\nWhen he came in with his bags, Kenji froze. His mouth fell open and he let the bags fall to the floor. The gown was a deep red, but was as sheer as the lavender one. The panties that came with it weren't crotchless, but they were as sheer as the gown. This gown was also much shorter than the others something that Patricia hoped that Kenji would like. He liked to tease her by slowly pulling the gown up and over her legs and thighs as he followed its path with kisses.\n\n\"That isn't lavender,\" was all he could say as he looked her up and down not once but twice.\n\n\"You don't like it?\" Patricia asked as she did a slow turn modeling for him.\n\n\"It is beautiful-you are Kirei,\" Kenji murmured.\n\n\"It was supposed to be part of your Christmas gift, but I decided to give it to you early.\" Patricia said. \"Are you sure that you like it?\"\n\n\"I like it very much,\" Kenji replied walking over to her and stroking her arms. \"I think that this has become my new favorite.\"\n\n\"They're all your favorites,\" Patricia replied laughing. \"Why don't we take advantage of the fact that you're home early and go upstairs?\"\n\nKenji didn't argue. He gave her a quick kiss and went back for his bags. He didn't trust that Marie would leave them alone-she was as light a sleeper as Niko was a sound one. As much as he wanted to strip and begin making love, he wanted to shower first. He was meticulous in his hand washing at the hospital, but he needed to be sure that he wasn't bringing anything home with him.\n\n\"I will be back in ten minutes,\" he said as he rushed off.\n\nPatricia lay on the bed and waited relishing the happiness that she felt that Kenji was home. He didn't have to be at the hospital until New Year's Day. Instead of planning a party, they had decided to spend New Year's Eve quietly with the kids. As she waited, she thought about Mai and hoped that she got the message that Kenji was off limits. She also hoped that Kenji had gotten into a different group. She neither liked nor trusted Mai. She pushed the thoughts of Mai from her mind and thought about the man in the bathroom wishing that he would hurry. It felt as if he had been gone for much longer than ten minutes.\n\n\"What are you thinking about?\" Kenji asked when he walked in.\n\n\"Nothing important,\" she replied. \"I'm just glad that you're home.\"\n\n\"I am glad to be here- are you sure that there is nothing else?\"\n\n\"Nothing that I care to talk about right now,\" Patricia replied. \"Are you going to get into bed?\"\n\n\"I am just enjoying the view,\" Kenji replied as he stepped out of his slacks and hung them up. He got into the bed with her and held her for several minutes. He couldn't wait to give her the diamond ring and to show her the floor plans for the homes that he thought that she would like. His goal was within reach. In less than two years he would be done with school and preparing for boards. He had already started. He took a portion of each evening to study.\n\n\"What are you thinking about?\" Patricia asked as she pinched a nipple and then kissed it.\n\n\"I will tell you later,\" Kenji replied. I like what you are doing.\"\n\nPatricia took the nipple inter her mouth and sucked on it. Kenji lay still and let her play only stopping her when her hand reached his waist. \n\n\"I want the first touch to be from being inside of you.\"\n\nPatricia lay back and waited expectantly. After looking at her for a few minutes, Kenji began to take the gown off of her starting with the thin straps. He took his time removing the gown exploring her body with his mouth as if it was the first time that he was seeing and touching it. He toyed with her nipples as he kissed the sweet spot behind her ear.\n\n\"That feels good,\" Patricia breathed and moved against him. It still amazed her that after almost eight years of marriage that they still enjoyed making love. When she was finally naked, Kenji did a quick check to make sure that the diaphragm was properly placed. As he slid his long fingers inside of her, Patricia cried out and then moaned as he deliberately brushed his fingers across her clit.\n\nSatisfied that it was in place, Kenji pulled Patricia on top of him. He wanted to be able to suck on her nipples while he was inside of her. He bit his lip to hold back a moan as Patricia slowly but surely impaled herself on him. Instead of lying still for a moment as he usually did, he began to thrust into her as he reached down and fingered her nub.\n\n\"Kenji...\" was all Patricia got out before she came with Kenji following her a few thrusts later. She laid her head on his chest and caught her breath. Kenji rolled to his side holding her close.\n\n\"Tell me about your week...\" he said kissing her sweaty forehead.\n\n****\n\nMai was having second thoughts about mailing the letter but it was too late. It was done. In retrospect, she realized that she should have called. She thought about writing a letter telling Shotaro to disregard the first one and decided that it didn't matter. He would disregard the letter anyway. She looked at the clock and grimaced. In four more hours, she would be at her sister's home and under the critical scrutiny of her father.\n\nShe didn't understand it. She didn't understand Kenji. What was it that made him so different? What made him brave enough to go against everything that he had been taught to believe? What made Patricia so different that she also went against her family and popular opinion? Why was she herself so afraid to defy her father? It was more than because of the money issue- she was afraid of him. But surely Patricia had been afraid too... Kenji had gone to the camps and then there was the rampant racism against all things Asian whether they were Japanese or not. The Korean War certainly wasn't helping things-but it could have been worse. They could all be locked away again.\n\nHer questions didn't stop Mai from wanting Kenji. Instead it made him all the more appealing to her. Vera and then Ani's warnings came to mind. She knew that they were right but still her interest was piqued. What did the black woman have that a Japanese woman didn't? She could almost understand a passing curiosity. She could even understand him sleeping with her to satisfy that curiosity but he had married her. He loved her, but what could they possibly have in common? Culturally they had to be worlds apart and she found it hard to believe that Patricia was anywhere near Kenji's intellect which brought to mind their children. How intelligent were they? Were they of average intelligence or were they fortunate enough to have inherited their father's intellect?\n\nMai spent the rest of the morning trying to understand Kenji and Patricia's relationship and why she couldn't seem to let it go. She couldn't seem to make herself accept the fact that Kenji was unavailable or that he was truly happy with the black woman. He had come to represent something to her-freedom. With someone like him, she would be able to walk away from her father. Patricia and the children on the other hand were nothing more than obstacles to be pushed aside. She wondered about Kenji's family. How had they accepted what he had done? If they were anything like her father, they probably disowned him.\n\nThe clanging of the alarm clock brought her back to reality. She sighed as she got up from the small bed and began to gather her things. The one thing that her father didn't tolerate was lateness no matter the reason. As she packed she tried to clear her mind of thoughts of Kenji. No good could come of it and Ani would be watching her as well as her father would be.\n\nShe was dressed and ready by nine and in the lobby by nine fifteen. Her father was walking through the door by nine- twenty with a scowl on his face. \"Now what?\" Mai thought to herself. Instead of greeting her, her father took her bags and walked out fully expecting her to follow him. Mai hurried behind him wondering what the problem was, but she knew better than to ask. He would tell her in his own good time and not before.\n\nThe drive to Ani's house was uncomfortably silent. Mai stole little glances at her father trying to read him. They arrived at the house; he got out without speaking and took her bags in. Mai followed him in, looked at Ani with a question in her eyes and was rewarded by Ani looking away.\n\n\"You and I must talk,\" her father said coldly as he handed her bags to her.\n\nSuddenly Mai understood what was happening. Ani had talked to their father, but what could she have said that he was so angry? Her heart pounded as she went to the living room and sat down. Ani followed them carrying a tray containing tea. Jiro wasn't home from work yet- something that Mai was grateful for.\n\n\"Explain yourself,\" her father said ignoring the cup of tea set before him.\n\n\"I am sorry father, but what is it that I'm supposed to be explaining?\" Mai asked feigning innocence.\n\n\"Do not play stupid!\" her father exclaimed. \"It does not become you.\"\n\n\"Father I...\"\n\n\"I had a very disturbing conversation with Shotaro while you were away- what is this about asking him to break the engagement?\"\n\nMai's mouth was dry. How did he know? She couldn't believe that Shotaro had actually told her father about that conversation. And he hadn't gotten the letters so how did he know?\n\n\"What did he tell you?\" Mai asked.\n\nHer father smiled but it didn't reach his eyes. He was in a word-furious.\n\n\"What he told me is of no consequence. What you tell me is. Did you ask him to break the engagement?\"\n\n\"Father, let me explain...\"\n\n\"I will take that as a yes,\" he interrupted. \"How much does the intern Takeda have to do with this?\"\n\n\"Nothing-I...\"\n\n\"Do not lie to me!\" he bellowed. \"I saw the way in which you looked at him! There was lust and jealousy written all over your face! It is bad enough that you are trying to break tradition but because of someone who is married? And to make matters worse he married an inferior. I understand that they have two children- what of them? Half breed or not he has an obligation to them! Were you planning to deprive them of their father?\"\n\nMai looked at Ani and knew that she had talked. That had to be it. That's what prompted her father's call to Shotaro. He had more than likely asked Shotaro a direct question about their discussion that she assumed no one knew about.\n\n\"Father...\"\n\n\"Quiet!\" he shouted. \"This is what will happen. Shotaro will return in two weeks' at which time you will marry. After the wedding he will return to Boston and complete his residency. He will then return here-he has been offered a position at UCLA that he has yet to accept. From this moment on, you will spend your nights here. Either me or Jiro will take you to the hospital and will pick you up.\"\n\nMai couldn't stop the tears from running down her face. At that moment she hated Ani, her father and Shotaro.\n\n\"Father please- do not make me do this! Shotaro does not love me any more than I love him! He loves another... please!\" she begged.\n\n\"The decision is made,\" he replied. \"I have also taken it upon myself to talk with your instructor. When you return to the hospital you will no longer be in the same group as Takeda. In fact, you will no longer be on the night rotation...\"\n\n\"YOU CAN'T DO THIS!! YOU CAN'T... you...\"\n\n\"It is already done,\" her father said \"There is another option if you choose not to comply. It is an option that we previously discussed. Either you do what you are expected of you or you are on your own. Choose.\"\n\n\"I have no choice do I?\" Mai asked bitterly.\n\n\"I am pleased that you are seeing reason now if you will excuse me, I am going for a walk.\"\n\n\"Mai... I had to tell him,\" Ani tried to explain when they were alone. \"He kept asking me about Kenjiro and I told him what I knew about his wife and children. He already knew about your feelings for him.\"\n\n\"How did he know about my conversation with Shotaro?\" Mai asked. \"Were you spying on me?\"\n\n\"No! At least not intentionally, but Mai I warned you that no good could come of this!\"\n\n\"So you told him? You couldn't keep your mouth shut?\" Mai asked.\n\n\"Mai listen to me,\" Ani said moving closer to her. \"You aren't thinking. If you were you would know that this is for the best. Father is trying to protect you...\"\n\n\"No he isn't,\" Mai broke in. \"He's trying to control me and protect the Kabata name. He cares nothing for our happiness. It is all about appearances.\"\n\n\"What are you going to do?\" Ani asked.\n\n\"What can I do?\" Mai replied. \"It is as I said, I have no choice, but Ani; I hate you, father and Shotaro. I will never forget your part in this.\"\n\n\"Mai! Be reasonable! I did it for you! I wasn't trying to hurt or betray you. I only want you to be happy.\"\n\n\"Forcing me into a marriage that I do not want is making me happy?\" Mai asked sarcastically. \"Threatening my professional career is making me happy?\"\n\n\"Be honest,\" Ani said. \"This isn't about your career or being forced to marry Shotaro. This is about your obsession with Kenjiro Takeda and your jealousy toward his wife. Marrying Shotaro interferes with your pursuit of a married man. So am I glad that I said something? Yes I am and I would do it again if it would save you as you seem incapable of saving yourself. Allow me to ask you a question, if you truly believe that you do not want to marry Shotaro and that you want to be free of father, why not leave?\n\nThousands of students work their way through school without the benefit of their family's money. Why don't you walk away? That way you can be free to pursue Kenjiro Takeda or anyone else of your choosing. You won't walk away and do you know why? Because you know that what you are wrong. I actually doubt that you are really in love with him. You are attracted to what he represents. You see him as your rescuer...\"\n\n\"I am through talking about this,\" Mai said standing up. \"Do not call me for dinner; I will not be joining you.\"\n\nMai went to her room and locked the door behind her. She meant it when she said that she hated Shotaro, her father and Ani. She lay on the bed furious.\n\n\"There has to be a way out of this.\"\n\n****\n\nSaul whistled as he worked. The tips were good and he would be off for two days after the current shift was over. An application to UCLA lay on his desk at home, his family was still safe and the quiet Isadora Hughes still hadn't blown him off. In fact, she had almost smiled at him once. Just thinking about it made him smile. The only things that marred his good mood was Harry who was no longer speaking to him and what he felt was lack of progress on the Warden Ellis case. He shook off the negative feelings wanting nothing to interfere with the good ones. He smiled at the young woman with a small child as he helped her with her luggage.\n\n\"Merry Christmas ma'am!\" he said cheerfully.\n\n\"Merry Christmas to you too!\" she replied.\n\nThat was how the rest of his shift went. By the end of it, he had collected almost five dollars in tips to add to the communal tip jar. At the end of the shift the money would be divided between all of them. He hoped that everyone did as well as he did-he had plans for the extra money.\n\nFinally the shift was over. He rushed to the office to pick up his pay and to wait for the division of the tip money. As he suspected, everyone had done well. A few minutes later, he was on his way home with his share of the tip money and his pay in his pocket. He had already sent money to his family for Christmas, the extra money that he had was going to be spent on Cora, Joshua and Reggie. The store was closed but the owner lived above it and agreed to meet him after store hours. Saul tapped on the back door and was immediately let in.\n\n\"Are they still here?\" Saul asked.\n\n\"I sat them aside after you left last week,\" the store owner replied. \"My wife even wrapped them for you-no extra charge.\"\n\nHe handed Saul the three small packages and gave him the total which turned out to be less than he had been originally told.\n\n\"Merry Christmas,\" the man said when Saul questioned him about it. \"I did well this season so I gave you a little discount.\"\n\nSaul thanked the store owner, wished him a merry Christmas and made his way home. The smell of roasting turkey hit him before he was to the house. He slipped in the front door and slid the gifts under the small Christmas tree before going to his room to change. He glanced at the UCLA application and smiled. He could only afford one class, but it was a start. Reggie encouraged him to start with a basic English composition class.\n\n\"It will give you a good foundation for your other classes and it won't overwhelm you.\"\n\nAt first Saul didn't agree. He wanted to start off with something more difficult but after thinking about it, he decided that Reggie was right. When he came out of his room, he heard the familiar voice of Noah Jackson. The man had become just as much of an enigma to him as he had to Isadora. He had once asked him where he came from and got an evasive reply. After that he didn't ask anything that could be construed as personal.\n\n\"Merry Christmas Mr. Jackson,\" Saul said when he walked into the living room.\n\n\"Merry Christmas to you!\" Noah replied with a smile. \"Dinner smells wonderful doesn't it?\"\n\n\"Yes sir it does,\" Saul replied as he headed toward the kitchen to help with preparations.\n\n\"Saul-have a seat,\" Noah said. \"It's alright; you're the main reason that I'm here.\"\n\n\"Me sir?\" Saul asked confused.\n\n\"Yes you. Please sit down, I have something to discuss with you. I was going to wait until after dinner but Cora says that dinner is still an hour away.\"\n\nSaul nervously sat down and waited.\n\n\"Reggie tells me that you have an application for UCLA.\"\n\n\"Yes sir, I was going to fill it out tonight.\"\n\n\"Are you still thinking about the ministry?\"\n\n\"Yes-nothing else appeals to me.\"\n\n\"Well, the world can always use another man of god; the spoken word can be a very powerful thing.\" Noah replied with a smile. \"Let me ask you a question, if there was a way for you to go to college all expenses paid-would you take it?\"\n\nSaul hesitated before answering.\n\n\"My father used to tell me that nothing is ever free especially when it comes to money. So my question to you is this; what would I have to do in order for this to happen?\"\n\n\"You're a very smart young man,\" Noah commented. \"Most would have just said yes and then asked questions later. What if all you had to do was to keep doing what you're doing?\"\n\n\"I don't understand,\" Saul said even more confused. \"I'm not doing anything special. I go to work, come home and study.\"\n\n\"Saul,\" Noah said after a moment's thought, \"you are doing something. The beauty of it is that you don't see it as anything extraordinary. That makes you as they say the real deal. Let me explain...\"\n\nSaul listened amazed as Noah told him that he had been watched.\n\n\"I was watching the day that you stepped up to help a black co-worker...\"\n\nSaul didn't know what to say. Noah was right- anything that he did, he did it without thinking about it and he saw it as nothing special.\n\n\"There aren't many young men who would do what you've done,\" Noah said. \"The final test was Isadora Hughes. I saw how you looked at her at the train station last year. The question was what you were going to do about it. If you weren't going to pursue it, I would have asked you why but seeing as you are pursuing it, it's a moot question.\"",
        "\"What does that have to do with school and what does Isadora have to do with anything?\" Saul asked.\n\n\"Isadora has nothing to do with it,\" Noah replied. \"She was merely part of the test and no-she doesn't know anything about it and she doesn't know that I'm talking to you. Saul-you have what I call the spark. Isadora has it-many people have it but in some it burns so bright that it can be seen for miles...\"\n\n\"I don't get it,\" Saul interrupted.\n\n\"Every so often I run into someone who has the spark,\" Noah continued. \"Sometimes it's because I look for it and sometimes it finds me. You are the latter. When I find people like you and Isadora-people who will one day make a major contribution to society, I try to help them by funding their way through school. All you need to do in exchange is to continue to do what you're doing. When you finally reach your goal-the pulpit- you preach what you've lived and when you can, you help someone else as you have been helped.\"\n\nSaul was speechless.\n\n\"I do have to confess that you're the first white person that I've helped and I realize that in some ways I've been practicing my own form of discrimination. Thank you for pointing that out to me and you have my apologies. I know that this is a surprise to you so take some time to think about it. I should add that you will need to quit your job...\"\n\n\"I can't do that,\" Saul said. \"I help to pay the bills here and I send money to my family back home.\"\n\nNoah closed his eyes in thought and then opened them.\n\n\"Joshua and Cora will receive a stipend for housing you. It will be more than enough to pay the bills. As far as your family is concerned-we'll work something out.\"\n\n\"I mean no disrespect,\" Saul said, \"but I won't do anything until I know that my family is going to be fed. I'm all they've got and I won't leave them hanging so that I can go to school.\"\n\n\"You're a good man,\" Noah said meaning it. \"Consider your family taken care of. Will you think about my offer?\"\n\n\"I'll think about it,\" Saul replied thinking that there still had to be something more to the offer than he had been told.\n\n\"Good- what do you say to helping Cora getting the food on the table? I don't know about you, but I'm hungry.\"\n\n*****\n\nWarden Ellis looked over at his pregnant wife with distaste. He held the ugly tie that he had gotten as a Christmas gift in his hands and wished that he were somewhere else. Even his office at the prison was preferable to being home.\n\n\"Teddy? Can you come help me?\" Hazel called from the kitchen. \"I can't reach the bowl on the top shelf.\"\n\nEllis grimaced. He could barely stand the sound of her voice and hated it when she called him \"Teddy\". If he didn't want to run for public office so badly, he would have left her kid or not.\n\n\"I'll be right there!\" he called back forcing cheer into his voice.\n\nHazel's family was coming to spend Christmas day with them; his family was coming as well. It was becoming a farce. Under the advice of his campaign people, photographers would be there to take pictures for the local newspaper.\n\n\"A picture says a thousand words,\" they replied when he objected.\n\nEllis sighed and made his way to the kitchen where Hazel and their new maid were making the Christmas dinner. Ellis looked at the maid who in his opinion was breathtakingly beautiful with her caramel colored skin and then at Hazel. He knew that the maid knew that he was watching her by the way that she looked away- he could have sworn that she blushed. He hadn't wanted a maid, but gave in after Hazel and his advisors had insisted on it saying that appearances were everything. Today was the first time that he had actually seen her as she was always gone before he got home.\n\n\"It's up there,\" Hazel said pointing to the shelf that was much too high for her and the maid. \"While you're here, can you go to the basement and bring up a few jars of the pear and peach preserves? I would send Millie but I need her up here.\"\n\n\"Of course darling,\" Ellis replied. Even to his own ears he sounded false.\n\nHe went to the basement to retrieve the preserves and to think. He was going to have a lifetime with a woman that he didn't love and a child that he didn't want. And if Hazel had her way, she would be pregnant again soon after this baby was born. He felt sick just thinking about touching her pale white skin. For a brief moment he wondered if it was worth it and then wondered how he could make things more tolerable. \n\n\"Teddy! Hurry! They'll be here in two hours!\" Hazel called down the stairs.\n\nEllis took two jars of each from the shelf and went back up the stairs disturbed. He sat the jars on the counter, glanced at the maid and left the kitchen without speaking. Hazel was so busy that she didn't notice. He shut the door to his office, sat in his chair and looked down at his lap horrified.\n\n****\n\n\"What you up to boy?\" an inmate who was old enough to be Andrew's father asked.\n\nAndrew didn't reply but kept doing his sit ups.\n\n\"If you're planning to escape-forget it. You won't make it.\"\n\nAndrew ignored him and began counting out loud, \"one-hundred fifteen, one-hundred sixteen...\"\n\nHe kept counting long after the man had gone. This was his second Christmas on 'the rock' and like the last Christmas, it was a difficult day. Christmas had always been his favorite holiday. He loved helping his mother in the kitchen as she baked cookies and pies. His stomach growled as he remembered the dinner that included a turkey with all the trimmings and the sandwiches made from the leftover meat.\n\nHe had woken up from a dream that he was at home in his own bed. When reality set in, he made a decision. He would be gone by the next Christmas. If he died in the attempt to escape, then so be it, but he was leaving this place. He began making serious preparations the second he made that decision. Now as he was on his two-hundredth sit up, he realized that it was something that he had always intended to do. All of the daydreaming of other places had been a precursor to making that decison. He stood firm in his decision to get as far away from California as he could get. He had heard something about a group called \"the French Foreign Legion\" and wondered if it was real or something that made for a good story. The next chance he got, he would see what he could find out.\n\nHe was now at the point where he could receive letters and hoped that he didn't hear from his parents. He had meant it when he told them to forget that they had a son. He also hoped that they didn't visit- he didn't want to see the pain and disappointment on their faces again. Once had been more than enough. He had long ago accepted that the fact he was in prison was his own doing and no one else's.\n\n\"Hindsight is a bitch,\" he grunted.\n\nHe finished his sit ups and began to run in place. By the time he was finished, it was time to get ready for work. He had a job in the prison kitchen that he rather enjoyed. As he had from the beginning, Andrew stayed to himself and spoke to no one. As he dressed, he realized that he was going to have to change that. The first person he had to find was someone who had made an escape attempt. He had to know what he had done wrong. With something to focus on, Andrew felt better. He left his cell and went to the kitchen to begin his shift. What was amazing, he would realize later was not once did Kenjiro Takeda enter his plans. He now hated no one. Andrew wished that he had adopted that attitude much sooner than he did. If he had, he would be doing his internship now. Christmas dinner would be a reality instead of something that he dreamt about.\n\nThat thought prompted another- was it possible to get a medical degree in another country? His mind whirred with excitement. If he escaped, it was still possible to make a life for himself somewhere else. He wouldn't be able to return to the states, but there would be a life. In his mind he began to make a checklist and he set a date for his escape-one year from now- Christmas day. He was either going to be on his way to another part of the world or he was going to be dead from the attempt.\n\n****\n\nWhile Patricia was still asleep, Kenji quietly showered, dressed and went downstairs to make breakfast. Before he started, he went out to the car and got the gifts to place under the tree. The gift for Patricia he kept in his pocket. He didn't want one of the children to accidentally open it. The floor plans to the house he put in a large envelope and placed it under Patricia's plate.\n\n\"Papa!\" Marie squealed as she ran into the kitchen. \"You're home!\"\n\n\"Good morning pretty one,\" Kenji greeted picking her up. \"Are you hungry?\"\n\n\"May I open my gifts?\" she asked ignoring the question about her appetite.\n\n\"Not until after breakfast,\" Kenji replied kissing her cheek and sitting her in her chair.\n\n\"Good morning papa,\" Niko said with a bow. \"Welcome home.\"\n\n\"Good morning Niko,\" Kenji greeted bowing in return. \"Do I not get a hug or are you now too big for such things?\"\n\nNiko grinned and threw himself into Kenji's arms. \"I missed you papa- do you have stories for me?\"\n\n\"Yes I do,\" Kenji replied with a smile. He was struck by the difference in their children. Marie was definitely the artist of the two. She was also impulsive and loved gifts. Intellectually she was every bit as bright as Niko but didn't have his natural curiosity that reminded him so much of Patricia. Niko was as steady as Marie was impulsive. He couldn't draw a straight line without a ruler, but he had the drive to learn. He could have cared less about gifts as long as Kenji and Patricia fed his curiosity. \"After we have breakfast and open our gifts I will tell you one. After that we need to help mama get things ready for Christmas dinner.\"\n\nPatricia stood in the doorway of the kitchen watching her family with a smile on her face. She waited for a minute before walking in.\n\n\"Breakfast smells good,\" she said kissing Marie, then Niko and finally Kenji. \"Thank you for making it.\"\n\n\"You are welcome Kirei. Please sit and let me make your tea.\"\n\nPatricia sat down and saw the envelope under her plate.\n\n\"Kenji what's this?\" she asked taking the envelope from beneath the plate.\n\n\"Open it,\" Kenji said as he sat her tea in front of her and then fixed the children's plates.\n\nPatricia looked at him and then carefully opened the envelope. She took out the stack of papers and brochures and looked up at him.\n\n\"These are floor plans- we can't possibly afford to move...\"\n\n\"Not yet,\" Kenji said, \"but we will. In less than two years I will be practicing as a doctor. Soon after that we can begin to think about our first home that we will buy with our own money. The floor plans and brochures are just a reminder that all that we hoped and planned for is coming to pass.\"\n\nKenji knelt beside Patricia's chair and took her hands in his.\n\n\"Kirei, I am going to be able to care for you and our children as a husband and father should.\"\n\n\"Kenji- you have always taken care of us no matter the cost to you,\" Patricia said squeezing his hands. \"You have always loved and protected us and if we had to stay in this house forever-it wouldn't matter. But I understand. I just want you to know that it doesn't matter where we live as long as we're happy and Kenji- I'm happy.\"\n\nKenji ran a finger down the scar that Vernon Monroe had given her long ago and smiled at her. The same sparkle that had drawn him to her was in her eyes and he fell in love with her all over again.\n\n\"I have something else for you, but let's give the children their gifts first.\"\n\n\"I have something for you too,\" Patricia said kissing his forehead.\n\n\"The red gown wasn't it?\"\n\n\"Nope, you'll see.\"\n\nAn hour later, Marie was happily drawing and Niko was reading the manual to his chemistry kit. Kenji and Patricia sat on the couch holding hands quietly watching. \n\n\"I'll be right back,\" Patricia said. \"It's time to give you your gift.\"\n\nKenji watched her disappear into the library and then come back out a minute later holding a small box.\n\n\"Thank you Kirei,\" he said as he opened it. \"A watch... it's beautiful and as with the pen, I will think of you every time I use it. Now it is my turn. Close your eyes and hold out your left hand.\"\n\nWhen she complied, Kenji took the ring box out of his pocket, opened it and removed the ring. He kissed the small diamond and slipped it on to the finger that she wore her wedding band on.\n\n\"Open your eyes,\" he said softly.\n\nPatricia opened her eyes and looked down at her left hand.\n\n\"Oh... Kenji... it's beautiful! You shouldn't have...\"\n\n\"Yes I should have-it looks beautiful on your hand. Kirei, I love you and this ring is but a small token of that love.\"\n\n\"I love you too- thank you!\"\n\nAfraid that she was going to lose the ring, Patricia took it off and put it on the chain that held the necklace that Kenji had given her for her birthday several years before. After dinner and the cleanup done, she would put it back on her hand and like the necklace; not take it off again.\n\n***\n\nIsadora sat at her desk thinking about them-especially him wondering if he ever thought about her and what he and his friends did to her. She knew from the letters from Mr. Whitman that he was still in town. He had married and had a child on the way. He was being heralded as a rising pillar of the community and had political aspirations. The political aspirations didn't surprise her. She had aspirations too and he was a part of it. Aware that she needed to change her dark thoughts to something more pleasant, she reread the letter from her brother.\n\nShe was amazed with how well written it was. He had come a long way since she had last seen him. The last time she talked with Noah Jackson about his schooling, he had told her that it was in the works but would say no more. After rereading the letter, Isadora took out one of the law journals that Mr. Whitman sent her and read through it. She still fluctuated between being a defense attorney or a prosecutor. Today it was a defense attorney- her people needed representation but on the other hand, the Klan needed to be prosecuted.\n\n\"I still have time to decide,\" she muttered as she looked through the journal. Finished with the journal Isadora thought about the only white man that attended church. Reluctantly she admitted that she both liked and admired him. Not many white people would step foot into an all-black church and be comfortable. All she knew about him was his name and that he had come from one of the Carolinas. She told herself that's all that she needed to know and left the room to help Bella finish the Christmas dinner preparations. \n\nShe was surprised by the fact that Noah Jackson wasn't going to be there. \n\n\"He was already invited to someone's home,\" Bella told her when she asked.\n\nIsadora knew no more about the man than she did when she first met him- that wasn't exactly true. She knew that he had been married and that there had been a child. She only knew that because during last year's trip; he had talked in his sleep. The sadness in his voice when he said the two female names had almost made her cry. From his murmurings she deduced that they were both dead. She hadn't asked him about them deciding that if he wanted her to know; he would tell her. But it was more than that- he would expect her to share something just as personal.\n\nAs she mashed the potatoes, Isadora had a thought. The woman who had helped her with her problem- was she still alive? She wasn't that old when Isadora last saw her but she wasn't in the best of health either. She would be needed to prove that there had been...\n\n\"Did those potatoes do something to you?\" Bella teased.\n\n\"What?\"\n\n\"I asked if those potatoes did something to you,\" Bella said. \"You're mashing them like you're angry about something- are you alright?\"\n\n\"I'm fine,\" Isadora said with an apologetic smile. \"I was just thinking about home.\"\n\n\"I understand, I still miss home too,\" Bella replied.\n\n\"Do you ever think about going back?\"\n\n\"At first it was all we thought about,\" Bella replied. \"But remember the only person that we knew when we got here was Mr. Jackson. We didn't meet the people that we stayed with until we arrived. They were like us- Mr. Jackson found them and brought them here.\"\n\n\"Where are they now?\" Isadora asked.\n\n\"They went back to Georgia soon after me and Lenny graduated. This was their house or I should say that they lived here. Mr. Jackson owns the house.\"\n\n\"Bella-where does his money come from? I know that Mr. Whitman helps him but he's only one person and I know for a fact that while he's well off- he isn't rich.\"\n\n\"I don't know and I've never asked,\" Bella replied. \"All I know is that Lenny and I wouldn't have an education without him and neither would you.\"\n\nIsadora had to admit that what Bella said was true, but she still had questions. She let the subject drop and Bella brought up one of her own.\n\n\"What do you think about that white man coming to church?\"\n\n\"I don't know,\" Isadora said. \"He has the right to go to church where he wants.\"\n\n\"I agree with that- he's handsome for a white man.\" \n\nIsadora blushed and made no comment.\n\n\"Don't tell me that you haven't noticed,\" Bella pressed.\n\n\"As a matter of fact I haven't,\" Isadora replied her tone sharper than she had intended. \"I go to church to worship and not to look at men no matter what their color is.\"\n\n\"Then I suppose you haven't noticed the way that he looks at you when he thinks no one's watching.\"\n\n\"No I haven't and I think that you're imagining things,\" Isadora replied.\n\n\"Uh huh and I suppose that every woman in church is imagining things too,\" Bella said with a chuckle.\n\n\"Bella- even if what you're saying is true, it's something that can't and won't happen.\"\n\n\"Why not?\" Bella countered. \"Times are changing...\"\n\n\"Because I don't want it to happen!\" Isadora exclaimed. \"I don't want to be with any man and I don't care who it is! I have plans that don't include a man or children now can we drop it?\"\n\nIsadora angrily wiped the tears away from her cheeks. If Bella thought that something had happened to her, she now had confirmation.\n\n\"Isadora, what happened to you? And there's nothing that you can say that will convince me that nothing happened. I told you before that you can talk to me about anything and I meant it. Whatever you tell me stays between us.\"\n\n\"I don't want to talk about it,\" Isadora said softly. \"I can't talk about it.\"\n\nBella put her hand over Isadora's and gave it a gentle squeeze.\n\n\"You are such a strong, beautiful and intelligent woman,\" she said. \"You will do well in your professional career. I can even see you sitting on the Supreme Court, but Isadora even the strongest of us needs someone to help carry our burdens. I have an idea of what happened to you and I can understand not wanting to talk about it. But what will holding it in accomplish? At any rate, if you decide that you want to talk; I'm here.\"\n\nIsadora nodded and walked away. She no longer had an appetite.\n\n****\n\nThe week sped by and it was already time for Kenji to go back to the hospital. He and Patricia had finally talked about Mai.\n\n\"I plan to stay away from her,\" Kenji said. \"There are only a few more weeks left in this rotation and I will make sure that we are not in the next one together.\"\n\nPatricia was relieved but wanted Kenji to understand that it wasn't him that she didn't trust-it was Mai.\n\n\"I know that Kirei,\" Kenji said. \"I don't trust her either. If I have to, I will speak to her again and in much stronger terms.\"\n\nSatisfied, Patricia changed the subject to something more pleasant.\n\n\"Joel and Penny will be here in a few months. Niko will have to share a room with Marie while they're here.\"\n\n\"I am not sure of how he will feel about that,\" Kenji said. \"He has grown accustomed to his privacy. Perhaps they could stay with Abby-she would enjoy the company.\"",
        "\"I'll talk to her about it,\" Patricia said. \"I can't wait to see them! We'll have to plan a welcome home party for them.\"\n\n\"They would enjoy that-Kirei meet me for lunch tomorrow.\"\n\n\"Alright... what's going on?\"\n\n\"Nothing- it will just make the week go by faster.\"\n\n\"I'll be there,\" Patricia replied. She was glad for the invitation. She hoped to see Mai and say a few things to her.\n\nAfter lunch, Kenji kissed Patricia and Marie goodbye. He had already said his goodbyes to Niko before he went to school.\n\n\"Remind your father that Paul is expecting him for a checkup tomorrow morning.\"\n\n\"He knows and he's fighting it,\" Patricia replied, \"but mom will make sure that he goes.\"\n\n\"Good- I will see you tomorrow,\" Kenji said kissing her again. \"I love you.\"\n\n****\n\nMai started to pack her bags and then remembered that her father would take her to the hospital in the morning. In a fit of anger, she threw the bag back into the closet and got dressed. She hadn't spoken to Ani or her father since before Christmas and the only one that it really seemed to bother was Ani. It bothered Jiro only because Ani was unhappy. There was a time when Mai thought that she and Jiro were friends but she could now see that she had been wrong. Jiro refused to look at her and only spoke to her when necessary. Instead of making her feel worse, it only fueled her anger.\n\nShe was supposed to be returning to the hospital but thanks to her father, she was no longer on the night rotation. Her next night rotation would happen while Kenji was on days which meant that there was still a chance that their paths might cross. The only way that it wouldn't happen was if her father somehow interfered. She didn't put it past him-after all; he did manage to get her rotation changed.\n\nShe undressed and put on her pajamas- she wasn't going to eat dinner. She had no desire to pretend to respect the people that she lived with. She sat on the bed prepared to lay down when she heard her father's voice at her door.\n\n\"Get up... dinner is waiting.\"\n\n\"Please excuse me, I am not feeling well,\" Mai said.\n\n\"Now,\" her father said. \"We have plans to make.\"\n\nShe knew what those plans were- her forced marriage to Shotaro. He was already on the train and would arrive in a few days. She held a little glimmer of hope that he would refuse to marry her, but she knew that it wouldn't happen. He wouldn't have left Boston if that was the case. She wondered what he told the woman that he was in love with. Surprisingly, she felt for her. It had to be as difficult to lose someone to tradition as it was to be forced upon someone because of it. Her anger at Shotaro rose. How could he do this to the unnamed woman if he loved her? Kenji's name popped into her mind.\n\n\"Mai-now,\" her father said through the door. He didn't yell, but his tone told her that he expected obedience. A flicker of defiance rose and then quickly died. She wasn't gone to win this round-she wasn't even going to win the war.\n\nThere had to be a way out.\n\n*****\n\nHiroshi couldn't say when he started feeling not quite right. He was always tired even though he slept well. At first he thought that it was because he had been working longer hours since he opened a second nursery. Now he wasn't so sure. He heard Dai in the kitchen talking with Hiro-in retrospect he wished that he hadn't named his son after his deceased son, but it was too late to change it.\n\nHe rolled out of bed wishing that he could sleep more, but he had too many things to do. Besides, it would only worry Dai who was already telling him that he needed to slow down. He was finally coming to the conclusion that she was right. There was no need for him to continue to work so hard. The house was paid for as were the businesses. Their financial future was secure. There was even cash set aside in case there was a repeat of history.\n\nAs he dressed for the day, Hiroshi thought about Kenji and felt a pang of regret. It was more than that; he felt shame at his actions. Kenji and Patricia had forgiven him but he still felt guilty. His guilt extended to the way that he had treated Hana while they were married and her arrest because of his activities. There was nothing that he could do to change the past, but he could do something about the future.\n\nHiroshi left the bedroom and went into his office which was located down the hall from their bedroom and next to Hiro's. Dai encouraged him to take one of the downstairs rooms but he wanted to be close to Hiro's room. It was silly he knew, but in his mind he would be there to protect Hiro in a way that he had never really protected Kenji. He closed the door behind him and called his attorney. By the end of the phone call, he felt much better. The guilt wasn't gone, but he felt better.\n\n****\n\nKenji went the to the conference room and sat down. One by one the other members of his group trickled in. He looked at his watch when he realized that Mai hadn't come in yet. It wasn't like her to be late. Dr. Vincente came in a few minutes after seven and began the pre-round conference. \n\n\"Before we begin, I want to inform you that one of our group-Dr. Kabata won't be rejoining us. I'm not sure of the circumstances, but she will be going to a day rotation...\"\n\nKenji breathed a sigh of relief. The chances of running into Mai had just significantly decreased- at least for the time being. There was always the possibility that they would have a day rotation together but he would deal with it when and if it happened.\n\nAfter the conference, Dr. Vincente pulled Kenji aside.\n\n\"Do you know what's going on with Dr. Kabata?\"\n\n\"No I don't,\" Kenji politely replied. \"I haven't seen her since Christmas eve.\"\n\n\"Alright, I also wanted to discuss something else with you. Have you decided on what area of medicine you would like to practice?\"\n\nKenji told Dr. Vincente about his and Patricia's plans.\n\n\"Have you ever considered surgery?\" Dr. Vincente asked.\n\n\"I had given it some thought,\" Kenji admitted, \"but I do not feel led in that direction. I enjoy family practice.\"\n\n\"I can see that and you're very good at it, but does it present enough of a challenge for you? Let me be frank-you have one of the finest minds that I've ever seen. When we round, I see how you examine the equipment and wonder how it could be made better. When we discuss a surgical patient, I can see the wheels turning. You try to figure out how to simplify the surgery and yet arrive at the same results. That, Dr. Takeda is the mind of a surgeon. I happen to know that Dr. Coleman will be looking for a resident to study under him. I would like to recommend you.\"\n\n\"I... I am honored,\" Kenji said with a bow.\n\n\"Will you at least think about it?\" Dr. Vincente asked. \"It means extra time added to your residency so discuss it with your wife and let me know.\"\n\n\"How much time do I have in which to decide?\"\n\n\"Six weeks, but the sooner I know, the better.\"\n\nKenji's mind raced. What to do? He had been set on being finished in a year and a half but if he did this it would add another year or two. He wasn't concerned about what Patricia would say-he already knew. He took a deep breath and calmed. He didn't have to make a decision now, he had time and he wouldn't make a decision without talking to Patricia first.\n\n\"Hey Kenji!\" Jared, one of the residents in his group called. \"Over here!\"\n\nKenji walked over to the table carrying the lunch that Patricia had packed for him and sat down.\n\n\"So what kind of hot water are you in?\" Jared asked as he took a bite of his sandwich.\n\n\"Excuse me?\"\n\n\"Vincente-what did you do?\"\n\n\"Nothing... he was just offering a piece of wisdom,\" Kenji replied. \"Why would you think that there was a problem?\"\n\n\"Well, historically anyone who has a private audience with 'his greatness' doesn't come out of it unscathed. So...if you're not in deep shit then you're in for something good. Care to share?\"\n\n\"No,\" Kenji replied. He wasn't about to talk about his conversation with Vincente with anyone but Patricia.\n\n\"Okay... so what's going on with Mai? Where is she?\" Jared asked.\n\n\"I don't know,\" Kenji replied.\n\n\"Really? I thought you two were two birds on the same tree branch.\"\n\n\"Dr. Kabata and I are colleagues only,\" Kenji said firmly. \"We do not socialize in or outside of the hospital. Does that answer your question?\"\n\n\"Geez, relax,\" Jared said holding his hands up in surrender. \"I was only asking.\"\n\n\"Please excuse me,\" Kenji said as he stood up.\n\n\"Hey I'm sorry, I didn't mean to offend you,\" Jared said.\n\n\"Your apology is accepted-I need to call my wife and say goodnight to my children.\"\n\n****\n\nMai was miserable and angry. Ani had tried to talk to her again in spite of being told to go away. Finally Mai had let her in so that she could have a moment's peace.\n\n\"Say what you must and then leave,\" Mai said. \"I have to be up early.\"\n\nAni sighed and sat on the bed. She understood Mai's anger although she didn't agree with it.\n\n\"I know that you are angry with us and I understand but Mai, you have to understand our position too. I have seen this before-not to this extent because you always came to your senses. Contrary to what you believe, father loves you and only wants the best for you.\"\n\n\"You keep saying that,\" Mai said, \"but I don't believe it. I will concede that you and he are right concerning Kenji...\"\n\n\"Kenji?\" Ani broke in. \"Has he given you permission to be so informal with his name? From what you've told me your interaction has been primarily on a professional basis. Has something changed?\"\n\nMai kicked herself; she had slipped up again but recovered.\n\n\"You did not allow me to complete his name. As I was saying you and father are right concerning Kenjiro Takeda. I still disagree about this marriage to Shotaro. Ani, how would you have felt if Jiro loved another when he married you? How would you feel if he only smiled when he thought about her?\"\n\n\"As I said, I understand...\"\n\n\"How could you?\" Mai asked angrily. \"How could you possibly understand? You have always been the good daughter! You do as he and tradition says without question. You have never aspired to be anything more than someone's wife and mother nor have you ever wanted to be free to make your own choices. It is much easier to let someone else decide for you. You are fortunate in that you and Jiro love each other. Shotaro and I do not care for each other nor will we ever care. In spite of that, we will be the dutiful children and marry as tradition and our families say we must. We will grow old together and at the best come to tolerate each other. At worst-we will hate each other...\"\n\n\"Then walk away,\" Ani said quietly. \"You say that you have no choice, but you do-walk away and find your way alone. As to my choices, to some degree you are right. It is easier to have someone make decisions for you and yes, all I ever wanted to be was a wife and mother. There is nothing wrong with that if that is what one wants and chooses. You are also right in saying that I don't understand how you must feel but that doesn't make what you are doing right. Have you thought about them? Have you given thought to what will become of his children if you do manage to take him away from his wife?\"\n\nMai's silence was Ani's answer.\n\n\"Mai-I think that it is best that you marry Shotaro. You can choose to love him as I have chosen to love Jiro. If you will allow it, you can be happy but as long as you cling to this unreasonable idea of you and Kenjiro Takeda that happiness will not happen. You already have a man to woo away from another-Shotaro.\"\n\nMai had no response other than to kick Ani out of her room. After Ani was gone, Mai locked the door and didn't come out until it was time for dinner which had been an uncomfortable affair. She listened while her father talked/dictated what was going to happen with her life. She silently listened without offering any resistance-it would have been pointless. By the end of the meal, the wedding would be planned with one concession-she and Shotaro would live in a small apartment near the hospital since they would both be working there.\n\nShe understood what was happening. Her father conceded to the apartment because of Shotaro and for no other reason. It was probably something that Shotaro had insisted on. She was getting one prison in exchange for another.\n\n\"I have already located an apartment for you and Shotaro. The rent has been paid for a year in advance. After that, you will join Ani, Jiro and I in a home that I will purchase...\"\n\nMai stopped listening. It didn't matter. When the time came she would do as she was told with the exception of one thing. She wouldn't give up her dream about Kenji. It didn't matter that it was unreasonable nor did it matter that he loved his wife and children and wouldn't leave them. He was her secret fantasy. In this fantasy there was no wife and children- there would only be them. It wouldn't be Shotaro that she was marrying in a little over a week-it would be Kenji...\n\n\"Mai!\"\n\n\"Yes father?\"\n\n\"Did you not hear me?\"\n\n\"Yes father.\"\n\nHer father continued to talk-making demands that Mai absently agreed to. After dinner she went to her room, closed the door and lay on the bed fully clothed. She had no more fight-for now.\n\n****\n\nShotaro smiled at the woman lying next to him on the small cot on the train. He couldn't believe it when she said that she would come with him even after he explained what was happening. The woman, whose belly was only just beginning to swell, smiled back at him and took his hand in hers.\n\n\"It's going to be fine-I promise.\"\n\n\"This is not fair to you or our child,\" Shotaro said softly. \"This is not what I wanted for us.\"\n\n\"I know that, but Shotaro; it isn't fair to her either.\"\n\n\"No... you are right, it isn't, but it is hard to go against what you have been raised to believe.\"\n\n\"But yet here you are with me,\" the soft voice replied. \"You've already gone against what you were taught.\"\n\nShotaro hesitated. He hadn't thought about it in that light. Sharon had started out as a distraction- a way to settle his curiosity but then the unexpected had happened. He fell in love with her. No one including his friends knew about her-they couldn't. Word would get back to his family and he wasn't ready for that. The plan had been to finish his residency, get a job someplace other than Boston and then break the engagement to Mai. He thought that he had another year at least to put things into place.\n\nThe change in the wedding date had come as a complete surprise to him. Now it had been moved up yet again. He had gone into a panic until Sharon calmed him telling him that it would work out. On the bright side, the job at UCLA was a good thing. He hadn't planned on applying there, but was now glad that he did. What he hadn't told anyone with the exception of Sharon was that he had worked out a deal with UCLA. He would finish his residency there if they agreed to put him in a two bedroom apartment that was close to the hospital. Much to his surprise, they had agreed. He quickly finished up any business that he was doing for Mai's father and began to make plans for moving. He had already shipped most of his things and then Sharon's when she agreed to go with him.\n\nNow he had a decision to make. The pregnancy had changed things-for the better he decided. When they boarded the train, he had every intention of marrying Mai but the closer to California they got, the less certain he became-until now. He could not and would not marry Mai. He wasn't going to deny his child a father and its mother a husband.\n\n\"What is it?\" Sharon asked.\n\n\"I am not going to marry Mai,\" he replied. \"I will not dishonor you, our child or her by marrying her. I will not have you and our child remain a secret as if I am ashamed of you.\"\n\n\"Your family...\"\n\n\"Will be furious and will more than likely disown me but I have you and I have our child. I also have a means of supporting you. I should have broken the engagement a long time ago.\"\n\n\"Are you sure about this?\" Sharon asked.\n\n\"I am sure,\" Shotaro replied as he experienced his own sense of relief. \n\nSharon closed her eyes in relief and said a silent prayer of thanks. She had known that Shotaro was agonizing over what to do. She knew what she wanted him to do, but felt that she couldn't say anything. If he wanted to break the engagement to the other woman, he had to be the one to decide with no input from her.\n\nWhen he told her that the wedding date had been moved up her heart sank. It had been him that told her that they still had time to figure things out. When he told her that the wedding date had been changed once again, she had been the one to calm him by telling him that for better or worse; she wasn't going anywhere.\n\nWhen they left Boston, she hadn't told anyone that she was leaving. Her friends and family didn't know about Shotaro although they suspected that she was seeing someone. She hated Boston with a passion. She hated the accents and the cold winters. If she never went back, it would be too soon. She was making plans to leave when she met Shotaro. She knew that she was an object of curiosity for him, but then she was just as curious about him. She had never been with a Japanese man before and it intrigued her. It wasn't long before they felt more than curiosity about each other. They proceeded slowly and Shotaro, to his credit had been upfront with her. Now they were having a baby and were on their way to the west coast.\n\nShe snuggled closer when Shotaro kissed her forehead and touched her stomach. She didn't want to talk about the other woman, but they had to.\n\n\"When will you talk to them?\" she asked.\n\n\"As soon as we arrive and you are settled,\" Shotaro replied. \"Once that is done we will marry. Sharon- do you not want to contact your family? They must be worried.\"\n\n\"Trust me when I say that they aren't,\" Sharon replied. She wanted to talk about them even less than she did Mai. Shotaro had been her one bright spot in her otherwise sad, dreary and often lonely life. Her main reason for not talking about him was that she didn't want to share him. No matter what was happening at home, there was always him. If she told them about him, they would find a way to spoil it for her like they did everything else. She felt safe with him. She felt loved and would take him any way that she could.\n\nShotaro let the subject of her family drop. He knew it was a very unpleasant topic for her and she had told him enough that he understood why she wanted to leave.\n\n\"I think,\" Sharon said, \"that she will be relieved.\"\n\n\"Yes, of that I am certain,\" Shotaro replied. \"It is her father who will be the problem.\"\n\n\"Maybe not,\" Sharon replied. \n\nShotaro could only hope that she was right although he doubted it. He knew Mai's father well.\n\n\"Get some rest now,\" Shotaro urged. \"The drama will begin soon enough.\"\n\n****\n\nMai stood at the front door and waited for her father to take her to the hospital. She was exhausted emotionally and physically and for once hoped that she wouldn't run into Kenji. It had nothing to do with the bags under her eyes but she didn't think that she could face his cool indifference to her.\n\nHer father came out of his room, gave her a curt bow before putting on his hat. She saw Ani peeking at her and ignored her. Ani was now the enemy. Neither Mai nor her father spoke as he drove her to the hospital. There was nothing to say-he had made his decision. As soon as he pulled up in front of the hospital, Mai jumped out of the car and ran inside. She went to the conference room hoping that it would be empty. But it wasn't. Vera was sipping on a cup of coffee while she looked at her notes. \n\nMai sighed. Vera was just as bad as Ani and her father were if not worse.\n\n\"Good morning!\" Vera said looking up. \"I heard that you were off of the night rotation. What happened?\"",
        "Mai couldn't believe that word had gotten around so quickly. She scrambled for something to say but couldn't come up with anything that would sound believable. She opted for the truth.\n\n\"My father intervened,\" she said as she sat down in the chair next to Vera.\n\n\"Your father? Why...Kenjiro isn't it?\" Vera asked. \"He figured something was going on didn't he? Mai...\"\n\n\"Do not say it!\" Mai said angrily. \"I am tired of hearing I told you so! I am tired of being told what I can and cannot do with my life and what I should feel!\"\n\n\"I was going to say that I'm sorry that things are so hard for you,\" Vera said after a brief hesitation. \"I can't even begin to imagine what it's like to have someone tell you who to marry and to have no control over your life.\"\n\nMai was surprised at the empathy that Vera was showing and said so.\n\n\"Mai-I've been where you are,\" Vera said with a sad smile. \"Not the forced marriage thing but wanting someone that I couldn't have. Like Kenjiro, he was married but there were no children-thank god. I chased him until he finally gave in and well... let's just say that it wasn't what I thought it would be. He never stopped talking about his wife and how good she was to him. It didn't take me long to realize that he still loved her-he had never stopped loving her. I tried as hard as I could to get him to forget her...\"\n\n\"But he didn't,\" Mai said softly.\n\n\"No Mai, he didn't,\" Vera said, \"but I held on thinking that all he needed was time to see that I was far better for him than she could ever be.\"\n\n\"What happened?\"\n\n\"He yanked me aside and told me a few hard facts of his life. The thing was; he didn't do it in private. He humiliated me in front of the other students in my class. He made it seem like I was some lovesick puppy and that he had done everything possible to dissuade me. By the time he was done, I looked like the village idiot who was stalking a married man and he came out of it smelling like a rose. I was not only heartbroken; I was hurt and the topic of conversation for weeks.\n\nI know that Kenjiro has spoken to you-yes that got around too but no one knows what he said. He's distanced himself from you-Mai-that should tell you something. I don't know him well enough to say whether he would humiliate you in front of others-somehow I doubt it, but do you want to find out? If you don't want to marry the man that your father picked out for you then don't, but find someone else to fall for and leave Kenjiro alone.\"\n\n\"Maybe it will work for us,\" Mai said. \"Maybe I can make him forget her...\"\n\n\"You aren't listening!\" Vera exclaimed exasperated. \"What will you do when he calls her name while you're making love? That's what happened to me on more than one occasion and it hurt like hell. What will you do when he won't stop talking about the things that they did together? And do you seriously think that he's going to forget about his children? Mai- open your fucking eyes! The man doesn't want you! Even I can see that!\"\n\nThe door opened and an intern walked in ending their discussion. Mai heard what Vera said, but she wasn't listening.\n\n****\n\nKenji got to the cafeteria early and bought something for breakfast that he could take to his room. On his way back, he stopped and called Patricia.\n\n\"Good morning Kirei, did you sleep well?\"\n\n\"I slept ok... I missed you pulling the sheets though,\" she replied laughing.\n\n\"Me? I thought that was you,\" Kenji teased back. \"Kirei I have something that I need to discuss with you over lunch. Do you have time to make sandwiches for us? I want to talk about this privately.\"\n\n\"Is there something wrong?\" Patricia asked thinking about Mai.\n\n\"No Kirei, all is well. It's just that we have a decision to make regarding our future plans.\"\n\n\"I'll pack a lunch,\" Patricia said. \"Where should I meet you?\"\n\n\"In the lobby and by the way, Mai is no longer on the night rotation. I don't know what happened, but I am pleased.\"\n\n\"Me too... Niko wants to say goodbye before he goes to school.\"\n\nKenji spoke to Niko and then Marie before hanging up and going to his room. He took a quick shower and ate his breakfast while he read through his notes from the night and studied for the boards. Before he knew it, it was time for lunch.\n\n****\n\nWhile Patricia waited for Kenji, she thought about what they needed to discuss. She decided that whatever it was, it couldn't be bad. For one, he didn't sound upset and two- he wouldn't give her bad news at the hospital- he would have come home. That left something good-it had to be. As she waited, she watched a group of interns walk by taking note of the exhaustion on their faces. In a few years that would be her with that look on her face and she couldn't wait. She still wanted to study neurology- she still wanted to know if anything could have been done for Ralph and others like him. Kenji had encouraged her to do what she wanted but she still hadn't decided.\n\nShe frowned when she saw Mai walk by with another woman and wondered if Kenji's news had something to do with her. No she decided, he told her that they were no longer in the same group. She had to admit that she was curious as to what happened. She couldn't see Mai making the decision to change groups on her own. She watched Mai and the other woman walk in the direction of the cafeteria and was glad that Kenji had asked her to pack them a lunch.\n\n\"Ohayo-hello Kirei,\" Kenji said as he bent down and kissed her cheek.\n\n\"Ohayo-Kenji you haven't been to sleep yet have you?\" \n\n\"No,\" Kenji replied giving her a sheepish grin. \"I was studying and lost track of time.\"\n\n\"Kenji...\"\n\n\"I know and I promise to take a nap after we have lunch and talk.\"\n\nKenji led her to the cafeteria bought them drinks before leading her outside where there were several tables. They sat at the one furthest away from the entrance and ate lunch.\n\n\"Thank you Kirei, that was so much better than the dry sandwiches here.\"\n\n\"You're welcome so what's the big secret?\"\n\nPatricia listened as Kenji told her about the conversation with Dr. Vincente.\n\n\"So you see,\" Kenji said, \"it will add almost another two years to my residency.\"\n\n\"Do you want to do it?\" Patricia asked.\n\n\"I don't know although the idea does intrigue me, but what I want is your input. This decision affects you and the children.\"\n\n\"I think... I think that you should do what's going to make you happy. If you want to switch to surgery then I'm behind you.\"\n\n\"I will only be one of many that will be recommended,\" Kenji said. \"There is no guarantee that I will be chosen.\"\n\n\"So why not go for it then?\" Patricia asked. \"If you're the one that's selected then it's supposed to be.\"\n\nBy the end of lunch the decision had been made. \n\n\"I need to get going and you need to get some sleep,\" Patricia said as she gathered up the trash from lunch. \n\n\"You still have a little time,\" Kenji said looking at her wistfully and taking her hand. \"Don't go yet.\"\n\nPatricia stopped what she was doing and looked at him.\n\n\"Are you alright?\"\n\n\"I'm fine,\" Kenji replied. \"I was just thinking of how fortunate I am to have a wife such as you. I hear the others talk about their wives and it is usually less than complimentary. They are all anxious for their husbands to graduate so that they can begin to make more money than what we are being paid. Thank you for being who you are and for staying by my side.\"\n\n\"Where else would I be?\" Patricia asked smiling at him. \"I just hope that I don't become one of those wives that get talked about in less than complimentary terms.\"\n\n\"That will never happen,\" Kenji said his expression serious.\n\n\"I hope not-so what happened with Mai?\"\n\n\"I don't know nor am I concerning myself with it,\" Kenji replied. \"Will you have lunch with me again on Thursday? We can then go home together.\"\n\n\"Sounds like a plan, now go get some sleep.\"\n\nKenji walked Patricia to the front lobby and kissed her cheek.\n\n\"I will talk to you later tonight. Kiss the children for me.\"\n\nKenji watched Patricia walk away and then turned to go inside. Mai was waiting for him.\n\n\"Hello Kenjiro-how are you?\"\n\n\"Dr. Kabata, how are you?\" Kenji asked careful to keep his tone impersonal.\n\nMai blinked... Dr. Kabata? What had happened to calling her by her given name? She glanced back at Vera who had the \"I told you so' look on her face, but still she persisted.\n\n\"Did you have a pleasant holiday?\"\n\n\"Yes, if you will excuse me, I need to prepare for tonight.\"\n\nKenji walked away not liking the fact that he had been so blunt, but he knew that it had to be that way. He had seen something in Mai's eyes and he couldn't give her the slightest glimmer of hope that they could ever be more than colleagues. Being friends was no longer an option.\n\nMai watched in bewilderment as Kenji walked away. Had her father said something to him? That would explain it but unfortunately, she had no way of finding out without asking either him or her father directly. It didn't occur to her that Kenji was deliberately choosing to be cool toward her- she just wasn't thinking.\n\nVera stood back helplessly watching her friend throw herself at a man who obviously didn't want her. She had done what she could. It looked as if Mai was going to find out the hard way just as she had.\n\n****\n\nKenji's shifts passed quickly. He waited until the end of his last shift to talk to Dr. Vincente about his decision.\n\n\"Good! I was so sure that you'd say yes that I already gave my recommendation. Is your wife alright with this?\"\n\n\"We have discussed it and she supports me,\" Kenji replied. \"When can I expect an answer?\"\n\n\"As you know there are several candidates,\" Vincente replied. \"Each of you will meet with Dr. Coleman and then he'll decide. Personally, I think he'd be a fool not to choose you... good luck.\"\n\nKenji went to his room to pack and to wait for Patricia so that they could have lunch together and then go home. He hadn't seen Mai since they last spoke and hoped that she finally got the message. He was studying for boards when he heard a tap on his door. Thinking that it was Robert arriving early, he opened the door.\n\nMai.\n\n\"I want to know if my father spoke to you,\" she said before Kenji could say anything.\n\nKenji stepped outside of the room and closed the door behind him but not before Mai saw the pictures of Patricia and the children on the wall. She now knew what Kenji was looking at whenever he opened his notebook.\n\n\"Why are you here?\" Kenji asked his tone cool.\n\n\"I want to know if my father has spoken to you,\" Mai replied.\n\n\"Why would he speak to me?\" Kenji asked confused. \"I do not know your father.\"\n\n\"You have been almost rude to me for the past few weeks and I want to know why. I thought that perhaps my father had something to do with it.\"\n\n\"I have not spoken to your father,\" Kenji said. \"My almost rudeness as you call it is for another reason.\"\n\nMai looked around to see if anyone was listening before she spoke.\n\n\"May I come in? I think that we have a misunderstanding...\"\n\n\"No you may not come in,\" Kenji interrupted. \"I do not want you or anyone else to get the wrong impression. Dr. Kabata, I feel led to explain to you in much stronger terms than before that I am a married man. I love my wife and my children too much to dishonor them. I have no romantic feelings for you or any other woman. The only woman that I want to share my bed with is my wife. I plan to grow old with my Kirei and watch our children have children- do you understand? There is no possibility that I will ever leave them. I must ask-no tell you to turn your attention elsewhere.\"\n\nMai felt as though she had been slapped. Her face burned with embarrassment and anger. She looked around when she thought she heard someone. She wanted no one to witness her humiliation. She looked up at Kenji and didn't see the gentleness that was usually in his eyes. What she saw bordered on anger with a touch of pity.\n\n\"I hope that we will not have to talk about this again,\" Kenji said as he opened the door to his room, stepped inside and closed it in her face.\n\nMai stood in front of the closed door in disbelief. She whipped around when she heard a door close. Someone had heard the entire thing. She slunk away from the door wondering who had heard the conversation between her and Kenji and how long before the entire hospital would hear about it. She went into a bathroom, washed her face and tried to regain some semblance of control. If she appeared upset it would only invite questions from her father and Ani.\n\n****\n\nShotaro opened the door to the apartment to let Sharon in while he carried in their luggage. She was already exploring the kitchen when he came back.\n\n\"What do you think?\" he asked hugging her from behind.\n\n\"I think that I like it,\" she replied turning in his arms, \"and I love you.\"\n\n\"I love you too,\" Shotaro said. He found it strange at how easily the words rolled from his lips. Before Sharon he never would have said those words. It would have been implied. With her he found that he had a sense of humor and that he relaxed. At the hospital, he had been aloof, curt and often considered rude but she had changed that too. He was still aloof but much more relaxed and quicker to laugh. When asked about the change, he only smiled. \n\nHis stomach clenched at what he was about to do, but it had to be done. He had no idea of what consequences if any Mai would have to pay, but this is what she wanted too. Even if she had changed her mind, it would change nothing. He wasn't going to marry her.\n\n\"I could go with you,\" Sharon said kissing his cheek.\n\n\"No, I need to do this alone and all of the stress is not good for you or the baby.\"\n\n\"I'm not made of glass,\" Sharon retorted. \"What's the worst that they could do to me? Call me names? In case you've forgotten-I'm used to that.\"\n\n\"I haven't forgotten and that is why I want you to stay here,\" Shotaro said hugging her closer. \"There is no need for you to go through that.\"\n\nSharon looked at Shotaro who wasn't much taller than she was inches at five feet six inches and searched his face. She was worried. She was worried that when it came down to it, he wouldn't be able to walk away from family and tradition. She began to mentally prepare herself for the fact that she would have to share him.\n\n\"Sharon-I will be back so try not to worry,\" Shotaro said stroking the side of her face.\n\nHe loved the feel of her skin against his and wished that he didn't have to leave. But the sooner he left, the sooner he would be back. The sooner he could take her to bed and sample the taste of her light brown skin-skin that had been the source of mistreatment for her. Her mother was a white woman and her father black. Her father was one of the many men who died loading explosives on a ship during the \"Port Chicago disaster\" in 1944. With no place else to go and no way to support their daughter, her mother had gone back home to her family in Boston. Sharon had been sketchy on the details, but Shotaro got the picture. \n\nHe gave her a kiss and then released her. The cool, aloof Shotaro was back to do what needed to be done. It was then that Sharon stopped being afraid. He was coming back to them.\n\n*****\n\nMai paced her room like a caged lioness. The feeling of being trapped grew with each passing moment. Shotaro had arrived and was on his way to finalize the plans for the wedding. Suddenly she had the overwhelming need to vomit. She grabbed the nearest trash can and vomited the lunch that her father insisted that she eat. For the briefest of moments she considered killing herself. She was still hurt over the way that Kenji had spoken to her and now Shotaro was coming. It made things all too real. Just as she was debating, her father tapped on her door.\n\n\"Come out, Shotaro is here.\"\n\nShe took a deep shaky breath and blinked back tears. She took a sip of water, swished it around in her mouth and then spit it out. Taking another deep breath and saying goodbye to the life she wanted, she went to the living room.\n\n\"Ohayo-hello Shotaro, welcome,\" she said with a bow.\n\n\"Ohayo Mai,\" he replied with a bow of his own.\n\nMai looked at him. He was the same cold man that she had seen not long ago. A tear escaped her eye and ran down her cheek. If he noticed, he gave no indication of it. He was a handsome man, and when he smiled; he could be considered gorgeous. Mai had to wonder about the woman that he was in love with. What was she like that she could make him smile?\n\n\"Let's sit and finalize the plans for the wedding,\" her father said. \"Ani, please bring the tea.\"\n\n\"Please,\" Shotaro said softy, \"I do not care for tea. I have something to say.\"\n\nMai's head snapped up at his tone. Hope leapt into her heart-maybe...\n\n\"Please may we sit?\" Shotaro asked.\n\nWhen they were sitting, Shotaro delivered the news.\n\n\"Kabata-san, there is no easy way to say what I am going to say except just to say it. I cannot marry Mai. There is another that I love and she carries my child. I cannot and will not dishonor her, Mai or my child by going through with this wedding. I apologize-but...\"\n\nMai's father stared at Shotaro in shock and then disbelief. A moment later, a look of fury was on his face. The veins of temples throbbed as he turned to look at Mai.\n\n\"This is your fault!\" He screamed at Mai. \"You have made no effort to make this pairing work! Instead you set your sights upon a married man! And you!\" he said to Shotaro are dishonorable! You have not only dishonored me, you dishonor yourself and your family! You agreed to marry...\"\n\n\"Excuse me,\" Shotaro interrupted, \"but I agreed to nothing. My family agreed to this marriage. I had no say in the matter just as Mai had no say. This is no more her fault than it is mine.\"\n\n\"What of your parents? Do they know of this?\" Mai's father asked angrily. \"What will they say of your betrayal?\"\n\n\"No, but they will know soon,\" Shotaro replied. \"And I have no doubt that they will be as angry if not angrier that you are.\"\n\nMai's father swore in Japanese and glared at Mai. It was clear to her that he was holding her solely responsible for what happened. She didn't care as long as it got her out of the marriage.\n\n\"Get out Shotaro,\" he said angrily. \"You are no longer welcome in my home and trust that I will be speaking with your father.\"\n\n\"Mai-I am sorry for any distress that this has caused you and regret that I did not speak sooner,\" Shotaro said as he stood up.\n\nMai kept her head down to hide her smile. She was free-or so she thought.\n\nA moment later, Shotaro was on his way back to Sharon. He felt pounds lighter. He hadn't realized just how much of a weight the pending marriage to Mai had been. He hadn't realized until he met Sharon how much of his life hadn't been his own. His father had chosen his profession for him, decided what school he should attend- all without asking him what he wanted. Fortunately, he liked being a doctor and was very good at it although his bedside manner was a lot to be desired. Sharon had helped him with that too. Shotaro suddenly realized something and wondered why he hadn't seen it before- he had been unhappy. Had he married Mai... he didn't want to think about it. All he wanted at the moment was to go back to the apartment and begin making plans with Sharon. He would deal with his family later.\n\n****\n\nMai kept her head down too afraid to look up. She knew that her father would see the look of relief on her face and that would only make things worse.\n\n\"You are a disgrace,\" he said. His voice belied the fury that he felt. \"You have dishonored this family...\"\n\n\"Father I was not the one to break the engagement,\" Mai reminded him with her head still bowed.\n\n\"That is true enough, but did you not approach Shotaro with the idea? Do you deny that you did nothing to find common ground with him?\"\n\nMai's head snapped up. She met her father's angry glare with one of her own.",
        "\"I admit I did not want to marry Shotaro, but he did not want to marry me either. Did you now hear him? He loves another! They are having a child together! What of his infidelity to me? Is that not reason enough for me to want to break the engagement?\"\n\nMuch to Mai's surprise, her father laughed. It wasn't a happy laugh. It was a laugh filled with anger and disgust.\n\n\"How stupid do you think me to be?\" he asked still chuckling. \"You have always been the schemer but you get away with nothing. You wear your emotions on your sleeve- did you think that I did not notice your relief at Shotaro's announcement? You sat there with your head bowed to hide your smile. You think that you have won? Shotaro's infidelity does not enter into this- his family will address that. What we will deal with is your failure to uphold an agreement and the dishonor you have brought to the Kabata name.\"\n\nSomething in her father's tone made Mai nervous.\n\n\"You disgrace yourself and the Kabata name by throwing yourself at a man with a wife and children. That the woman is black is neither here nor there...\"\n\nMai looked at Ani who was holding Jiro's hand. Her father knew too much and it couldn't have come from Ani. There was only one answer- she was being watched but by who?\n\n\"Oh yes... I am aware of your-pursuits just as I am aware of his reaction to them.\"\n\n\"You are spying on me?\" Mai asked in disbelief.\n\n\"Call it what you wish,\" he replied. \"If the marriage had gone as planned the issue would have been resolved.\"\n\n\"Father...\"\n\n\"You will remain silent and listen,\" her father said sternly. \"You will be allowed to continue your residency only because I have spent a lot of money on your education. You will continue to spend your evenings here. If you see Kenjiro Takeda you will stay away from him. You are not to even speak to him unless it is hospital related...\"\n\n\"I am not a child!\" Mai shouted, \"And I am tired of being treated as such!\"\n\nAgain her father laughed. \"I suppose that you think it is mature to have a schoolgirl's crush on a married man? You are not thinking and so I must do it for you. That is something that a parent would do for a child who is too stupid to know what is best for her.\"\n\nMai's bead spun as she tried to figure out who was spying on her. She thought about Vera and then decided that it couldn't be her. She wouldn't do that to her-they were friends.\n\n\"All you had to do was be the dutiful daughter as Ani was and is...\"\n\n\"I AM NOT ANI!\" Mai screamed at the top of her lungs. \"I am not like her! She likes being controlled and all she ever wanted was to be a wife and mother. I am happy that her marriage is a happy one but Shotaro and I would not have been that way-can't you see that or are you just thinking about how our marriage would benefit you?\"\n\nMai didn't realize that her father had moved until she felt the sharp sting of a slap to her face. She was speechless. While her father had been a stern man, he had never physically punished them. A look or a sharp word was all that it took-until now. She cupped her hot cheek with her hand and stared at her father.\n\n\"You will go to your room while I decide what to do,\" he said his tone cold.\n\n\"Father, I apologize for my insolence...\"\n\n\"I do not care to hear your apologies, leave my sight.\"\n\nMai went to her room and locked the door behind her. It was only a matter of time before Ani came knocking and she didn't want to see her. Her stomach roiled and she dry heaved as she tried to figure out what her father was going to do. She shouldn't have talked back much less yelled at him and his refusal to hear her apology didn't bode well for her.\n\nShe lay on her bed and whispered a prayer to Amaterasu-omikami --the goddess of the sun and universe for help as she cried. A short time later, the anticipated knock on the door came. When she didn't answer, there was a tentative turning of the door knob.\n\n\"Mai... let me in.\"\n\nMai didn't answer. She turned on her side and cried herself to sleep.\n\n****\n\nSaul finished filling out the application for UCLA just before it was time to leave for church. He still hadn't given Noah an answer about school. On the face of it, it sounded good; but there had to be more to it than just being himself. He mentioned Noah's offer to Reggie who wondered what he was waiting for. Joshua and Cora asked him the same question. What he needed was to talk to someone who had been helped by Noah. He had to know that there were no strings attached. He could only think of one name.\n\nIsadora.\n\nHe had been trying to come up with a way to talk to her other than saying hello and now he had a way. He glanced at the application again before getting up from his desk to finish preparing for church. As he did so, he thought about how he was going to bring the subject of Noah Jackson up.\n\nBreakfast was on the table when he got to the kitchen. He could tell by the expression on their faces that they were waiting for him to tell them that he had made his decision.\n\n\"Good morning!\" he chirped as he sat down at the table.\n\n\"Good morning,\" Cora replied, \"So?\"\n\n\"Cora!\" Joshua exclaimed trying to shush her.\n\n\"I want to know what my boy has decided!\" she exclaimed.\n\nMy boy.\n\nSaul felt tears forming in his eyes and wiped them away. He knew that he was cared for, but the words \"my boy\" told him that he was loved. He cleared his throat before replying.\n\n\"I'm still thinking about it. I'll make my decision soon. I just want you all to know that I love all of you and consider you family. Thank you all for your help and kindness.\"\n\n\"We love you too,\" Cora replied.\n\nWhat Joshua didn't know was that bringing Saul home had literally saved her life. She had sorely missed the son that had died and needed someone to mother. Joshua gave her that when he bought the skinny, hungry white man home. Saul had filled out and had filled an empty place in her heart. She loved him as if he were a son born to her.\n\n\"Now we'd better eat or we'll be late,\" she said as she passed Saul the eggs.\n\n**\n\nThey walked into the church and Saul looked around for Isadora. He finally spotted her sitting off to the side and to the back of the church. He made a beeline for the empty chair next to her but was beaten to it by another man. The man looked over at Saul and winked. Saul now had competition for Isadora. He was gratified to see her scoot her chair away from the man that he finally recognized.\n\nSaul hadn't seen him in a while and tried to recall his name. Lucas...Lucas...Newton-that was it. He was one of the remaining few that still had issues with Saul attending the church. Saul had pretty much forgotten about him since Lucas usually sat in the back and made a point of not speaking to him. Saul thought he knew what was happening. Lucas had picked up on his interest in Isadora and was going to compete for her although he hadn't been interested in her before. He knew that the current interest was only because he-Saul-a white man was interested in her.\n\nHe found another seat and debated what to do. The only thing to do was to try to catch her after church before she hurried away. As soon as the benediction was over, Saul rushed to the back of the church where Isadora was trying to break away from Lucas. He immediately knew where Lucas had gone wrong-he had moved too fast.\n\n\"Good morning Isadora, Lucas,\" he said politely.\n\nLucas gave him a dirty look but Isadora actually smiled. Saul didn't know if it was because she was glad to see him or if it was because he was rescuing her from Lucas, but he didn't care. All that mattered was that she smiled. It wasn't the little polite one that she had given him weeks before-this was a full-fledged smile that lit up her face.\n\n\"Good morning,\" Isadora said genuinely glad to see anyone that would run interference for her. Truth be told, Lucas had made her nervous with his questions about what she liked to do in her spare time.\n\n\"I don't have much spare time,\" she replied. \"I'm busy with classes.\"\n\nHis response to her reply made her want to slap him.\n\n\"Classes? What's a beautiful woman like you doing in school? You should be home having babies.\"\n\nShe knew that Lucas knew that he has screwed up by the look that she gave him.\n\n\"Of course, it's a new day isn't it?\" he asked. He fell silent when she didn't reply.\n\n\"Shit,\" he thought to himself. He was about to apologize for his statement when Saul walked up to them. What he didn't like was that Isadora had smiled at him. He felt like a third wheel then Saul and Isadora began to talk as if he wasn't there. They didn't seem notice when he walked away.\n\n\"Thanks,\" Isadora said when Lucas was gone.\n\n\"You're welcome,\" Saul replied liking the low, smoky sound of her voice. \"I was hoping to talk to you for a few minutes if I could. It's about Noah Jackson,\" he added when he saw her tense.\n\n\"I know him, what about him?\" she asked warily.\n\nSaul told her about the offer and asked if there was more to it.\n\n\"It's as he says,\" Isadora replied, \"although I'm not aware of any other white people that he's helping.\"\n\n\"I would be the first if I accept,\" Saul replied.\n\n\"Why wouldn't you accept?\" Isadora asked. \"You only have to agree to help others in any way that you can. No money exchanges hands and besides, he must have seen something in you if he made the offer. Did he ask you what you wanted to study?\"\n\n\"Yes. A long time ago,\" Saul replied. \"He made the offer on Christmas day.\"\n\n\"Why haven't you accepted?\" Isadora asked and then blushed. \"I'm sorry-that's none of my business.\"\n\n\"No apology needed,\" Saul replied. \"It was a valid question. When he talked to me he mentioned your name. I wanted to talk to you before I committed myself to anything. The other issue is that I need to make sure that my family back home is taken care of before I do this. I'm pretty much the breadwinner.\"\n\n\"Again, I'm sorry, I didn't mean to pry,\" Isadora said.\n\n\"May I ask what you're in school for?\" Saul asked thoroughly enjoying their conversation.\n\n\"Pre-law, you?\"\n\n\"The ministry,\" Saul replied. \"I just finished filling out the application for UCLA this morning.\"\n\n\"Good... maybe I'll see you around campus then,\" Isadora said. \"Take care.\"\n\n\"I'm going to school,\" Saul murmured as he watched Isadora walk away. \"And I'm going to marry that girl,\" he added.\n\n*****\n\nWarden Ellis sat at his desk unable to concentrate. Part of the problem was Hazel. She called him every hour on the hour for one asinine reason after another. He was beginning to hate her. It took conscious effort on his part not to snap at her or to tell her to leave him the fuck alone. He could tell by the tone of her voice that she was expecting him to have sex with her-something that he wasn't looking forward to. He sometimes had a problem achieving and then maintaining an erection. In those instances, he took care of his horny wife with his mouth. He had it down to a science. On a good night he could make her come in less than five minutes and then plead exhaustion when she offered to reciprocate. That would work for as long as she was pregnant, but after the baby came...The other reason for his inability to concentrate had something to do with a young black woman by the name of Millie Rhodes. Just the thought of her made his groin tingle in a way that no one never could. This was not good. The maid had to be fired and the sooner the better. The problem was going to be convincing Hazel. He looked at the clock; he had to wait another fifteen minutes to leave for home. If he left sooner than that, he would see the maid. Instinctively he knew that he had to stay away from her. He blushed with confusion and shame as he felt his cock harden. No white woman had ever affected him like this-for that matter, no woman had ever affected him like this. Just to be safe, he waited another ten minutes before leaving thus eliminating any chance of seeing Millie.\n\nHazel met him at the door with a worried expression on her face.\n\n\"You're late!\"\n\n\"I'm sorry dear,\" he said hoping that he sounded appropriately contrite. \"Is dinner ready?\"\n\n\"It's warming in the oven, I ate early-I hope that you don't mind, but I just couldn't wait any longer.\"\n\n\"Mrs. Ellis? Is it alright if I leave now? I'll miss the last bus if I don't,\" a voice called from the kitchen.\n\nEllis froze as the soft voice hit his ears. What was she still doing here?\n\n\"Of course! And thank you for staying,\" Hazel replied. \"Oh and why don't you take the day off tomorrow? I think that we've gotten everything done.\"\n\n\"Are you sure?\" Millie asked, \"I don't mind coming back,\" she said as she walked into the living room.\n\n\"That won't be necessary,\" Hazel replied. \"Enjoy your day off.\"\n\nEllis watched Millie as she gathered her things and left. His cock was rock hard and throbbing. Taking Hazel by the hand, he led her to their bedroom where to her surprise and delight; he fucked her the way that she liked not once, but twice.\n\nAfterwards Hazel would wonder what had gotten into him and he knew Millie couldn't come back.\n\n****\n\nIt was another two weeks before Kenji saw Mai again. He still didn't know what happened nor did he care. It looked as if his being blunt was what was needed in order to persuade her to look elsewhere. His relief however was short lived. She looked different... unhappy but he didn't ask her what the problem was. To do so would only invite trouble. \n\nHe made his way to the lobby to wait for Patricia who was bringing their lunch. He had some news for her. He was meeting with Dr. Coleman at the beginning of next week and he was uncharacteristically nervous now that the appointment was made. He was deep in thought when he heard his name.\n\n\"Kenjiro, hello.\"\n\n\"Dr. Kabata,\" Kenji said cautiously.\n\n\"How are you? I have not seen you since we last talked.\"\n\nWhen he didn't say anything, she continued.\n\n\"I left the evening rotation because my father gave me no choice. He demanded that I leave the night rotation and move to a day one.\"\n\nMai didn't know what she was expecting, but she expected more of a reaction than she was getting.\n\n\"I was also betrothed but he broke it off-he says that he is in love with someone else and that they are having a baby together. Of course- my father blames me and wants me to stay away from you-he has someone watching me.\"\n\nThis got a response, but not the sympathy that she hoped that her story would generate.\n\n\"I am sorry for your difficulties, but if you are being watched; why are you talking to me?\"\n\n\"I just wanted to offer an explanation for my behavior,\" Mai said glancing around. She still hadn't figured out who the spy was.\n\n\"Thank you for explaining it, now I must ....\"\n\n\"Am I that repulsive to you?\" Mai blurted out. \"Would it have been different if my skin was dark?\"\n\nIt wouldn't occur to her until much later and it was too late that all she had to do was to ask Kenji how he had defied tradition. She would also realize that she would have had a good friend in Patricia if she had made different choices. The questions that she had just asked had permanently alienated him for all time and had taken away the support system that she needed to break away from her father.\n\nKenji stood up when he saw Patricia walk in. Without saying anything, he walked away to meet Patricia at the door.\n\nMai stood watching as Kenji greeted Patricia with a hug and a kiss. She felt a surge of jealousy and turned away when she saw Patricia looking at her. She walked to the cafeteria and found a table in the corner. She didn't want to be seen. She had already heard the whispers whenever she walked by a group. She held her head high and acted as if she wasn't being talked about, but inside she seethed.\n\nShe watched as Patricia found a table while Kenji went to get their drinks. She took the opportunity to watch Patricia. She wanted to see if she saw whatever it was that Kenji saw-but she didn't and that seemed to make things a little harder to swallow. Suddenly, Patricia was standing and walking toward her. Mai stood up to leave but was intercepted by another resident and by the time he left; Patricia was waiting to talk to her.\n\n\"Don't leave yet,\" Patricia said. \"We need to talk.\"\n\n\"I am sorry, but I must...\"\n\n\"Sit down,\" Patricia said her tone cool. \"What I have to say won't take long.\"\n\nMai looked around to see if anyone was watching and sat down.\n\n\"I'm not going to beat around the bush,\" Patricia said her tone icy. \"You've had your eyes on Kenji ever since you got here. He sent you subtle messages which you didn't seem to understand, but you did-you're not a stupid woman. I know that he talked with you and explained that he has no romantic interest in you but yet you persist. I also know that the last time he spoke to you he left no room for interpretation of what your relationship with him is-there is none. Now, listen to me and listen good- I know that you think that you're in love with him but you aren't. It's the fact that he's with a black woman and you want to be rescued...\"\n\n\"That...\"\n\n\"I'm not done,\" Patricia said her tone cold. \"As I was saying, there are two things at play here. One is me and two you want to be rescued- maybe you think that you're rescuing Kenji, I don't know and I don't care. What I do know is this- you need to look for another knight in shining armor because my husband isn't it. There are plenty of single men here who would be more than happy to play that role. Do I make myself clear?\"\n\nWhen Mai didn't reply, Patricia stood up and looked down at her, \"I'm taking that as a yes,\" she said and walked away. \n\nMai sat at the table for a long time trying to decide on what to do. After several minutes, she realized that she was out of options. In some ways she was worse off than she was before Shotaro broke the engagement.\n\n\"Hey, are you alright?\" Vera asked as she sat down in the seat that Patricia had just vacated.\n\n\"No,\" Mai said softly, \"no I am not,\" she said looking over at Kenji and Patricia.\n\n*****\n\nKenji sat in the office waiting room waiting for his interview with Dr. Coleman. Up until a few minutes ago he had been nervous, but now he was calm. He had taken the 'I'll be fine with whatever happens' approach. What also helped was that he knew that Patricia would be fine with whatever happened too. A few minutes later, the door to Dr. Coleman's office opened. A tall, but large man stuck his head out and told him to come in.\n\nKenji followed him in, took the offered seat and waited. He met the doctor's assessing look with one of his own. The doctor also had to meet his approval as much as he had to meet his. He started with the doctor's face, lingered on his blue eyes and made his way to the hands that rested clasped on the desk and then unclasped and lay flat. No tremor Kenji noticed.\n\n\"I've heard good things about you,\" Dr. Coleman said. \"I also heard that you hadn't given surgery as a profession any serious thought. Why is that?\"\n\nDr. Coleman listened to Kenji's explanation and said nothing for a long time when he was done. When he spoke it was to ask a question.\n\n\"Have you discussed this with your wife? If I select you, it will add another two years to your residency. It also changes your plans to practice together.\"\n\n\"We have talked,\" Kenji replied. \"If you offer the position to me, I will accept.\"\n\n\"She has no qualms about living on a resident's salary for another two years? I know my wife did. She wasn't happy that we had to put off buying our first home.\"\n\n\"My wife is very supportive of my decision,\" Kenji said. \"We have decided that if the position is offered then it was meant to be. If I am not offered the position-then we will continue as we have planned.\"\n\nDr. Coleman clasped his hands together and gave Kenji another long assessing stare.\n\n\"Paul Mynt and Dr. Vincente were right about you. You're a very cool customer- a surgeon needs a cool head. I'll make my decision sometime in the next few weeks. Thank you for coming. Wait, one more question- is it true that you thought to sterilize the equipment that you were going to use to deliver your child in mason jars?\"",
        "\"Yes,\" Kenji replied.\n\n\"What gave you that idea?\" Dr. Coleman asked.\n\n\"It only made sense,\" Kenji replied.\n\n\"That was good thinking,\" Coleman said. \"Thank you for coming,\" he said by way of dismissal.\n\nKenji hurried back to the hospital lobby to call Patricia. He passed Mai and Vera, but kept going. He felt Mai's eyes on his back and ignored it.\n\n****\n\nThings hadn't settled down for Mai. If anything they were getting worse. Not only was the topic for discussion about what Kenji said or didn't say to her, it was also about her talk with Patricia. To make things worse, she still had to go home every evening and listen to her father's rants about what a failure she was. The only good thing was that he hadn't stopped paying for her education. She did have a little money, but it was nowhere what she needed in order to do as Ani had suggested-walk away. \n\nShe and Vera were on their way to the conference room when she saw Kenji rush by. There had been rumors circulating about him too but they were of the good variety. Supposedly he was being interviewed by the head of surgery for the resident surgical position. If he got it, she wouldn't see him unless it was by accident. Part of her hoped that he got the position-it would make things easier for her. But on the other hand...\n\nVera looked at Mai and shook her head. So far other than approach Kenji a few days ago, Mai had pretty much behaved herself, but Vera felt the need to alert Mai's father. She hated what she was doing and had originally said no. But when Mai's father offered to move her into a nicer apartment that was closer to the hospital and pay the rent for a year...how could she say no? She had been sharing an apartment that only had one bathroom with three other female residents to save money. Two of them were on night rotation and the other two were on on days. Since it was a two bedroom, they shared the beds. The idea of a place of her own was too much to resist. He sweetened the pot by adding a stipend which meant that she could quit her part time job. She didn't want to think about what Mai's reaction would be if she found out.\n\nTo ease her conscience, Vera didn't ask any questions. That way she wouldn't have to report what Mai said. She could say that she saw Mai talking to Kenji for a moment before he walked away-that couldn't get Mai into trouble would it? There was a phone in her apartment compliments of Mai's father so that she could call without anyone listening. The next phone call was scheduled for the evening. Vera had been hearing the rumors about Kenji too and hoped that he got the position. In spite of her betrayal, she liked and cared for Mai as a friend.\n\nMai was walking in front of her and when Mai stopped short, Vera ran into her.\n\n\"Mai?\"\n\nWhen Mai didn't answer, Vera peeked around her to see what the problem was. All she saw was a Japanese man sitting way in the back of the room.\n\n\"Mai? What's the matter? Who is that?\"\n\nSlowly Mai moved forward. She had expected Shotaro to be long gone back to Boston. She sat her notebook on a table and walked up to him.\n\n\"What are you doing here?\"\n\n\"Hello Mai,\" Shotaro said.\n\n\"What are you doing here?\" Mai asked again.\n\n\"I am finishing my residency here,\" Shotaro replied. \"I will join the staff at the end of it.\"\n\n\"What about your... what about her?\"\n\n\"She came with me. I have already secured a place for her to live...\"\n\n\"Wait... you brought her with you? What were you going to do? Go between the two of us?\"\n\nShotaro saw no reason to lie or to sugar coat what his plan had been.\n\n\"I was going to marry you and keep her in an apartment,\" Shotaro said. \"That was the plan until we were actually on the train, but I changed my mind. I love her and I did not want to marry you. The child also changed things.\"\n\n\"Does my father know that you are still here?\" Mai asked shocked that Shotaro had planned to continue his infidelity. The woman was here? She had actually agreed to be his mistress?\n\n\"No and it is of no concern of his. I am sorry that I allowed this to go on for as long as I did. It is my hope that you will find someone with whom you can be happy.\"\n\nMai walked back to her seat without responding. She ignored Vera who was looking at her clearly curious about who the man was and how Mai knew him. Vera sincerely hoped that whoever he was, that he could help Mai by distracting her away from Kenji.\n\nAfter the conference, Mai stayed sitting. She needed a few minutes to compose herself. Finally she got to her feet and left the room. First rounds would be an hour giving her time for a cup of tea to calm her nerves. She walked to the hospital lobby and for the second time that day, she stopped short. Shotaro was talking to a young woman of obviously mixed heritage. She almost discounted it thinking that maybe he was assisting her with something and then she saw it-the smile- and she knew who the woman was. Something deep inside of her gave way as she watched the tenderness in which Shotaro touched the woman's hand.\n\nSomething had to give.\n\n*****\n\n\"Finally a damned break!\" Nick exclaimed. \"Are you sure that Ellis doesn't know anything?\"\n\n\"I'm sure,\" the voice on the other end of the phone said. \"He's getting ready to run for public office- he thinks he's safe.\"\n\n\"And the man who will talk to us, where is he?\"\n\n\"He's safe but here's the best part, he thinks that he can get a few of his buddies to talk to us as well.\"\n\n\"What does he want in return?\" Nick asked.\n\n\"A front row seat when Ellis goes to trial,\" the voice replied.\n\n\"How familiar was he with Jacob Lincoln?\"\n\n\"According to him, Jacob Lincoln was a saint. He says that Lincoln taught him and a few others how to read and write. He also encouraged them to better themselves.\"\n\n\"Alright,\" Nick said. \"Keep me posted and call me or Will anytime of the night if anything new pops up.\"\n\nNick hung up and began to write a note to Saul.\n\n\"Call me.\"\n\nHe made a quick call to Will who let out a loud \"Yes!\" They talked for a few minutes before hanging up. It was time to start getting their ducks in a row.\n\n*******\n\nBy the end of 1952- Martin Luther King is pledged as Alpha Phi Alpha. Malcolm x, nee Malcolm Little is released from prison after serving six of a ten year sentence. He meets Elijah Muhammad in Chicago and converts to the Nation of Islam.\n\nThe Governor of Georgia-Herman Talmadge criticizes television shows for making blacks and whites appear as equals.\n\nEleven black students go for the first day of school at Claymont High School in Delaware. They are the first black students in 17 segregated states to integrate an all-white public school. The next day, the superintendent is informed that the students will have to leave as the decision is being appealed. The superintendent, the faculty and the school board refuse and the students remain in school.\n\nCongressman John F. Kennedy then only 35 years old, runs for the senate. His campaign was managed by his younger brother Robert.\n\n*\n\nKorean War\n\nThe Battle of Heartbreak Ridge occurs. It is a month long battle that was a part of several major battles known as \"The Punchbowl\". Over 3,700 hundred Americans and an estimated 25,000 North Koreans and Chinese died during the battle. POW list are exchanged but then North Korea backs out. There are riots at Koje-do prison camp and the fight for Hill 851 also occurs. The communist hold the \"1952 POW Olympics\" at Camp 5, Pyuktong.\n\n*\n\nThe McCarran-Walter act makes it possible for first generation Japanese Americans to become naturalized American citizens."
    ],
    "authorname": "kalamazoo707",
    "tags": [
        "japanese man",
        "black woman",
        "racism",
        "post ww2",
        "historical romance",
        "romance novella",
        "drama"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/i-will-love-you-forever-pt-2-ch-19"
}