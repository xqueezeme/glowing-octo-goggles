{
    "title": "In Black and White Ch. 02",
    "pages": [
        "The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nPart 7 - The Search Is On \n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded reporterette at 7:00am, Friday, September 30th, from in front of City Hall. \"Channel Two News has learned that the Town & County Police are searching for a missing County High School student! Priscilla Dejeune has not been seen since school let out yesterday afternoon!\"\n\n\"Priscilla is the daughter of Bill and Audrey Dejeune, and she is an Honors student at County High School.\" said Bettina, as an inset picture of Priscilla appeared on the screen next to Bettina. \"The Police are asking for your help in looking for Priscilla, and ask that any leads be phoned in to the TCPD hotline.\" A phone number appeared at the bottom of the screen, which was to the TCPD's hotline during emergencies like this.\n\n\"In other news,\" went on Bettina, \"Town & County Councilpersons Kelly Carnes and Thomas Cook have demanded that Coach Grimes of BTW High School be suspended from coaching his team tonight against County High. The State High School Sports Association, or S-H-S-S-A, has declared that Coach Grimes has not been convicted of any crime, and insinuated that the charges against him are racially motivated. They have refused to act to suspend the coach.\"\n\n\"Meanwhile, Chief Moynahan of the Town & County Police has warned that his Officers will be ready to make arrests of any troublemakers at the football game tonight. Asked if his Police Force was making any special preparations for potential violence, Chief Moynahan said that his officers were well-trained to be prepared for any eventuality...\" Bettina then gave way to Nick Eastwood, who talked about college football and the University Bulldogs's upcoming game.\n\n\"Who authorized the Police to ask for the Public's help on Priscilla?\" I asked Cindy as we drank our coffee in the MCD room. \"I'm not necessarily complaining, but it would be nice if I had been informed that was going to happen.\"\n\n\"Commander,\" said Cindy, \"I am not trying to pass the buck here, but I don't know, either. I'll find out and let you know.\"\n\n\"Why didn't Bettina say anything about Benny Hill being missing?\" asked Detective Theo Washington. His words hit me like a crowbar to the face.\n\n\"I don't know.\" I said as that realization, and its implications, set in. \"And I will be calling Bettina to come correct on that.\"\n\n* * * * * * * * * * * * * * * *\n\nAt 8:00am, as the Police were undergoing shift change, the 'Crowbar-level' team was in my office, watching the KSTD broadcast. Priya's news was almost identical to Bettina's: a blurb on Priscilla Dejeune, and some commentary on Coach Grimes suggesting race as the reason for the charges against him.\n\n\"In both Priya's and Bettina's broadcasts,\" I said to everyone, \"what do you notice?\"\n\n\"They're virtually identical, which is nothing new.\" said Lt. Teresa Croyle.\n\n\"And not one word about Benny Hill, as Theo pointed out earlier.\" said Lt. Wes 'Coldiron' Masters.\n\n\"Exactly!\" I said. \"Neither station said a word about Benny Hill, who is also missing. Captain Ross, who put that out about Priscilla?\"\n\n\"I talked to Commander Harlow herself, sir.\" said Cindy. \"She said it was no one in our Police Department, and she suspects Scott Peterson, who is now the Sheriff's Press Relations Officer. She's going to confirm that and get back to you on it.\"\n\n\"Hmmm...\" I said. \"Again, I don't mind that being done, but it was PDQ, if you ask me.\" Of course, 'PDQ\" means 'pretty damn quick'.\n\n\"And again, only about Priscilla.\" said Cindy. \"Not one word about Benny.\"\n\n\"Sir,\" said 'Coldiron', \"speaking of these disappearances, we have nothing on either Dejeune or Hill. Hill's car was found in that strip mall lot you suggested Precinct 2 look into. Priscilla's cell phone was found last night, in a trash dumpster on the north side of Town, not too far from Town Fitness Centers. No camera coverage of that area, unfortunately.\"\n\nI nodded. \"That's enough for me to go to the FBI now, instead of waiting.\"\n\n* * * * * * * * * * * * * * * *\n\n\"Hi Don.\" said FBI Special Agent in Charge Jack Muscone as he came into my office at 9:30am. \"So you're calling in the FBI on this?\"\n\n\"Yes.\" I said. \"It's not quite 24 hours, but with all the implications of Benny Hill being missing and the obvious evidence that something is wrong, I'm jumping the gun just a little bit.\"\n\n\"That's a good thing, actually.\" said Muscone. \"U.S. Senator Samuel Russell has called the FBI offices three times already, and he's on his way here now. Apparently the Dejeunes are friends of his, or maybe supporters, and he wants immediate action.\"\n\n\"Sheesh.\" I said. \"Well, what's going to happen now?\"\n\n\"You keep looking locally.\" said Muscone. \"Clark Webster's Missing Persons team in the City is on the way, and my boss will likely walk in at some point in time. Webster knows not to fuck with you, by the way, so if he's non-cooperative, just let me know.\"\n\n\"Thanks.\" I said.\n\n* * * * * * * * * * * * * * * *\n\nThings began heating up rapidly. At 11:00am, the Dejeunes came to Headquarters, accompanied by Reverend Dr. T. Alford Martin, head pastor of First United Methodist Church. They were also accompanied by Charles Macland. He was in his forties, tall and slim with brown hair, and he was the Dejeunes's business lawyer as well as personal friend. He lived in the City, where he had a thriving legal firm. One distinction about him was that he always wore three-piece suits, i.e. he always wore a vest as part of his attire.\n\nNot long afterward, U.S. Senator Samuel Russell came in with his entourage of fawning sycophants. State Senator Katherine Woodburn was also there as part of his group, despite them being of opposite political parties. And FBI Special Agent in Charge Clark Webster came in with his FBI Agents that I remembered from the 'Point Hollow' case... and I was glad that my Officers were on the job looking for these kids: woe betide their safety if those mindless robots were their only hope.\n\n\"Mr. and Mrs. Dejeune,\" I said, going to the front lobby, \"why don't you come to the Pastor's Room?\" The Pastor's Room was a small converted breakroom near the side entrance where we Officers came in from the gated parking lot. It had two unisex bathrooms, a water fountain, vending machines, television and plenty of chairs. It was where the Chaplains could meet with families or Officers, and it kept the family away from the Press.\n\n\"Everyone who wishes to join the family in the Pastor's Room needs to sign in and get a visitor's badge.\" I said. As I turned to go, Katherine Woodburn's harsh voice called out.\n\n\"Surely Senator Russell needs no visitor badge, Commander.\" she said. I turned and looked at her, then at Senator Russell.\n\n\"Everyone who is not a Town & County Police Officer, Sergeant.\" I said to the Duty Desk Sergeant. \"And absolutely no members of the Press.\" With that, I went back behind the Duty Desk and stalked down the hallway.\n\n* * * * * * * * * * * * * * * *\n\nI knew it would not be long, and soon my assistant Helena was buzzing me. \"Sir, the Chief has asked you to come to his office.\" she said.\n\n\"On my way.\" I said. As I went out, I looked over at Helena. She was wearing a tasteful dress with a skirt that went just below her knees, and high heel pumps. She looked elegant and gorgeous, and I had to take my mind off of sexy thoughts about her and concentrate on the much-less-sexy business at hand.\n\nThe Chief's assistant had me go straight into the small conference room, so I knocked on the door and went in. Inside was the Chief, who looked like he needed rescuing from two politicians.\n\n\"Have you met Senator Russell, Commander?\" asked Katherine as I closed the door behind me.\n\n\"No, I have not.\" I said, shaking the U.S. Senator's outstretched hand. \"Senator.\"\n\n\"Yes, I finally get to meet the Iron Crowbar.\" said Russell. \"I heard all about your successes this past summer.\" He was an imposing man, almost as tall as myself but not as broad-shouldered, and he had that air of authority befitting someone of his prestigious level of United States Senator. But I did not feel that aura of sheer power that the FBI Deputy Director had, and that I might be known to project at times.\n\n\"Everyone, please have a seat.\" said Chief Moynahan as I politely shook Katherine's hand. We all sat down, the Chief at the end, me to his left, and the Senators on the other side, their backs to the door.\n\n\"The Dejeunes are longtime friends of mine, Chief.\" said Senator Russell. \"I share their deep concern over their daughter's disappearance. So what are you doing about it, so far?\"\n\n\"Senator Russell was asking if you had contacted the FBI, Commander.\" said Moynahan.\n\n\"Yes, Chief, I have.\" I said. \"Special Agent Clark Webster, who came in with your entourage, is being briefed by my Officers now.\"\n\n\"Good.\" said Russell. \"They're a good Missing Persons team, and I have great faith in Special Agent Webster's abilities. I'd like for the FBI to take over the investigation of Ms. Dejeune's disappearance.\"\n\n\"Senator,\" I said, \"we have not one but two missing teenagers, and we're working with the FBI on both cases. We're working jointly with them to find both these kids as quickly as possible.\"\n\n\"I'm sure your officers are diligent,\" said Russell, \"but the FBI has resources available to them that local police don't have. And they're experts in solving these types of cases.\"\n\nSeeing the slightest bit of flushing on the back of my neck, Chief Moynahan said \"The Iron Crowbar and his Officers are pretty expert in solving many crimes, as well, Senator. Including a recent missing persons case where murder was involved.\"\n\n\"Yes, but it was the FBI who found most of those students, and out of State.\" said Katherine Woodburn.\n\n\"If Ms. Dejeune is now out of the State,\" I said, \"then there is little I can do. But if she, and Mr. Hill, are still here in the County somewhere, then who better than my Police Force to find them?\"\n\n\"I know of your reputation, Commander,\" said Senator Russell, \"but I'm sure you agree that the FBI would be the better choice, here.\"\n\n\"No, I do not agree.\" I said, letting some 'authority' creep into my voice. \"The FBI does not know the terrain and the streets of this County better than I do, nor my Officers. They do not know the people, the contacts, the confidential informants, as well as we do. A cooperative effort between the TCPD and our FBI friends will work best. And while the FBI is there if State lines were crossed, the TCPD will continue working this case on the local level.\n\nThe United States Senator was not used to being responded to in this fashion. His eyes glanced over to the Chief.\n\n\"You heard the Iron Crowbar, Senator.\" Moynahan said in reply to the glance. \"He is the very best, and if those kids are in the County, he is their very best hope.\"\n\n\"Who runs this Police Department, Chief Moynahan?\" Katherine Woodburn asked, acid in her voice, attempting to humiliate the Chief in front of the U.S. Senator, and me.\n\n\"The Iron Crowbar does, Senator Woodburn.\" said Chief Moynahan with alacrity, not even playing her game. \"I just run interference for him with politicians who think they know better than him, but in reality do not. You know the Iron Crowbar's record of success as well as I do, Ms. Woodburn. I would be a fool to impede him in any way... as would you.\"\n\n\"Thank you, Chief.\" I said, getting up. \"And speaking of running this Police Force, I'm going to go check on their progress right now, if you'll excuse me.\" The Chief nodded, and not waiting for further word, I exited the conference room.\n\n* * * * * * * * * * * * * * * *\n\nI went to the Main Conference Room and entered. Inside were Captain Ross and Special Agents in Charge Jack Muscone and Clark Webster. One look at Cindy's ruggedly pretty face told me all I needed to know about how this meeting was going.\n\n\"Welcome, Commander.\" she said. \"I was just trying to get Special Agent Webster up to speed on our investigation.\" The 'trying to' part of her words spoke volumes.\n\n\"Oh, let's not twist our words trying to be nice about it.\" I replied, sitting down. \"Mr. Webster here is trying to take over the case, and is not respecting the abilities of the Town & County Police Force. I would add that he is under severe pressure from U.S. Senator Russell, who is sticking his Senatorial nose where it does not belong.\"\n\n\"Four hundred years ago...\" said Jack Muscone, trying not to laugh. Webster's face was turning red.\n\n\"We're not disrespecting you nor your Police Force, Commander.\" said Webster. \"But yes, I have a United States Senator crawling up my ass about this, and time is of the essence in finding Ms. Dejeune.\"\n\n\"And what about Benny Hill?\" I asked.\n\n\"Oh... yes, him too.\"\n\nCindy's voice cut in: \"Agent Webster has not been very interested in being briefed about Benny Hill, Commander.\" It was nothing less than an accusation.\n\n\"Well, you better get interested, Mr. Webster.\" I said. \"While I have every desire to find Priscilla Dejeune alive and well, finding Benny Hill may be far more important in keeping people in this County safe from potential riots.\"\n\n\"What?\" Webster asked sardonically. \"Are you kidding me?\"\n\n\"No, he's not.\" said Jack Muscone. \"Racial tensions are already high over Benny's disappearance and the legal treatment of Coach Grimes. This is where local LEOs like the Iron Crowbar know their people better than we do, Clark. He's not kidding; finding Benny Hill is extremely important.\"\n\n* * * * * * * * * * * * * * * *\n\nI went into the Pastor's Room, with Detective Joanne Cummings Warner in tow. I saw that Mrs. Williams of the Senior Citizens 'Crowbar Crew' was there; she knew the Dejeunes through the Methodist Church.\n\n\"Ah, hello, Mrs. Williams.\" I said, shaking her hand. \"I hope you're doing well.\"\n\n\"Why thank you, Commander,\" said Mrs. Williams, \"and I hope you and your family are doing well, also. Such a sad time right now, however.\"\n\n\"Yes,\" I said, sitting down next to Charles Macland, across from the Dejeunes. \"I came to tell you what is going on, so far. The FBI is now involved, so we have their tremendous resources available to us. Unfortunately, there is nothing new to report since we found Priscilla's cellphone.\"\n\n\"The FBI?\" asked Macland. \"Do you think she's been taken out of the State?\"\n\n\"I don't know.\" I said. \"But it's customary to bring the FBI into Missing Persons cases. They can look across State lines, and like I said, they have resources and expertise in their Missing Persons Bureaus. They usually don't come in for 24 hours, but because of my relationship with them, I've gotten them to get an early start on your daughter's case.\" The Dejeunes nodded, trying to hold out hope.\n\n\"Mr. Macland,\" I asked, \"you are the family lawyer?\"\n\n\"Yes, but I'm here as a personal friend.\" said Macland.\n\n\"Let me speak with you in the hall for a moment.\" I said. He followed me into the hallway.\n\n\"Sir,\" I asked, \"as their attorney as well as their friend, have you heard of any threat to them, or to their daughter?\"\n\n\"No sir.\" said Macland. \"They've said nothing, and there's been no problem that I know of with their businesses. I'm mostly a real estate and contract law attorney, but they've said nothing on a personal level, either.\"\n\n\"Okay, thank you.\" I said. \"If you do hear anything, please let me know immediately.\"\n\n\"I will.\" he said. As I was about to walk away, Macland said \"Commander, I didn't want to say this in front of the family, but... the more time that goes on without finding her, the chances of her being found go down, don't they?\"\n\n\"Oh, we'll find her eventually.\" I said. \"The urgency is in finding her alive. If she's being held and has no water, we've got two to three days left, at most. I'm hoping we'll find her sooner than that.\" I went down the hall as Macland returned to the Pastor's Room.\n\nPart 8 - Political Machinations \n\n\"All right, what do we have?\" I asked. I was in the secure basement areas with the Mouseketeers, they being Myron and Mary Milton, and Detective David Krueger. No interfering politicians could come down here, to my great relief.\n\n\"Nothing, sir.\" said Mary. \"Sandra Speer of the FBI is also working it from their end. Since finding Benny's car and Pricilla's cellphone, we don't have much of anything. There have been no ransom demands to the Dejeunes, and no contacts with BTW High School, who we'd expect to be called regarding Benny.\"\n\n\"Krueger, what's the gambling line on the game?\" I asked.\n\n\"Still County High minus three points.\" said Krueger. \"Even game with County getting home field advantage of three points. However, the bookies are still not touching this one. If Hill shows up, BTW would be favored; if not, it's probably about right where it is now. But because of his disappearance, this game has been taken off the boards.\"\n\nJust then, Captain Cindy Ross appeared in the room. \"Sir,\" she said, \"I just got word from the Courthouse that an injunction was filed to stop Coach Grimes from coaching in tonight's game. Judge Folsom gave the case to Judge Watts, who squashed it like a bug.\"\n\n\"Who represented the Prosecution?\" I asked.\n\n\"Krasney himself.\" said Cindy. \"Thomas P. Cook and Kelly Carnes were sitting right behind him in the Courtroom, too, and it's believed they pushed Krasney to file the injunction. There were no defense attorneys present; Bernadette Gillem has filed a complaint that she was not notified of the hearing.\"\n\n\"Hoo boy, this is going to get ugly.\" I said. \"Okay guys, let me know if you hear anything. Captain Ross, let's go to my office.\n\nWe made our way upstairs, and once inside my office I took out the bug-killer and activated it. \"Cindy,\" I said, \"I want you to tell Jenna Stiles what happened this morning. I want her to be able to use Krasney's end-run against him. Not letting the defense know is what 'Miami Vice' would call 'major uncool'.\"\n\nCindy smiled, and it was not a good smile to see. \"I will be sure to do that, sir.\" she said with some passion in her voice. \"By the way, Jack Muscone asked me to leave the meeting with him and Webster. I think a one-way conversation might have taken place once I left.\"\n\n\"Good.\" I said. \"One more thing: I want you to get Krueger to check out the Dejeunes themselves, as well as Mr. Macland and any other friends visiting them... well, maybe not Mrs. Williams, but you get the gist of what I want. It may come to nothing, but I am simply out of leads and ideas.\n\n\"No problem.\" said Cindy. \"That Macland guy... he gave me a vibe.\"\n\n\"The tried-and-true 'smarmy' vibe?\" I asked with a grin. Cindy nodded vigorously in agreement... and did not smile...\n\n* * * * * * * * * * * * * * * *\n\nI made a rare appearance in Classroom 'C', which was the Vice Squad's meeting room. Inside, Lt. Teresa Croyle had SWAT Team leaders and Uniformed Sergeants from all the Precincts. I sat down in a chair against the far wall and just listened as she briefed them on the Police Force's strategy for security at the football game.\n\nAfter she finished, she said \"Commander, is there anything else?\"\n\n\"It's an excellent plan.\" I said. \"I would like you to add one small contingency to it: have some armored Uniformed Officers, not SWAT, but regular Officers with armor under their shirts and over their shirts, to be ready to be on the sidelines and the football field if needed... during the game.\"",
        "\"During the game, sir?\" Teresa asked.\n\n\"Yes.\" I said. \"And tell the State Patrol to be ready for crowd control, as well. If the game gets ugly, I will not let the grass grow under my feet, and I will take control of the situation.\"\n\n\"Nothing new under the sun, there.\" said Sergeant Rudistan in his mischievous way.\n\n\"Guys,\" I said, \"this is a potentially serious situation. I appreciate Lt. Croyle being proactive in developing contingencies, and I want all of you and your Officers to realize that this is something that can get out of hand if we don't pay attention to detail. Okay, y'all keep up the good work.\" With that, I left the room.\n\n* * * * * * * * * * * * * * * *\n\nI was about to go find Jack Muscone to see if he was interested in a Double Cheeseburger lunch at the Cop Bar, when Cindy came and got me. \"Something's going on in the Press Area.\" she said.\n\nWe went into the lobby and down the hallway to the Press Room. The dias had been moved from the raised podium area, and some chairs placed there. The parents of Priscilla Dejeune were in two of the chairs, and FBI Special Agent Clark Webster in another.\n\n\"Ah, Commander,\" said John Hardwood of KXTC, who was positioning the cameraman in place, with Bettina Wurtzburg walking up to the stage. \"We're going to have a news announcement asking for help in finding Ms. Dejeune. Can we ask you to join us on stage?\"\n\n\"Yes, Commander, join them.\" said U.S. Senator Russell. I could see what was going on.\n\nI raised my voice and said \"Are you also going to be asking for help in finding Benny Hill?\" Silence was instantaneous.\n\n\"Well...\" said Hardwood, \"of course we are. And if you'll sit with the others, we'll come to you personally for that request.\"\n\n\"Come on, Commander, time's a'wastin'.\" said Katherine Woodburn.\n\nWith great reluctance, I allowed myself to be seated on the stage next to Webster, with the Dejeunes on his other side. Bettina led them through the filming, with the parents pleading for help and Clark Webster asking for the Public's help.\n\n\"Okay, that's a wrap!\" yelled Hardwood. \"Let's go!\"\n\n\"What?\" gasped a shocked Bettina.\n\n\"Hey!\" I called out, getting up, \"what about coming to me?!\"\n\n\"Sorry, not enough time.\" replied Hardwood with a sneering grin. \"Let's go guys!\" The cameramen began to secure their equipment.\n\n\"You turn those God-damned cameras back on!\" I yelled, going after Hardwood, who was trying to run out of the room. He was met at the door by a platinum blonde with a green crowbar. Ten Uniformed Officers, including Sergeant Rudistan, were right behind her.\n\n\"You heard the Commander.\" Cindy said. \"Get back in there.\"\n\n\"No.\" said Hardwood. \"We're done here.\"\n\n\"Get out of his way!\" yelled U.S. Senator Russell. \"We've got to get this on the air!\" Bettina and the parents sat dumbfounded.\n\n\"You said you'd come to me, so I could talk about Benny Hill!\" I said, coming up to Hardwood. \"I expect you to keep your word.\"\n\n\"I lied to you, Commander.\" said Hardwood, fronting me. \"What are you going to do about it? Hit me with that crowbar in front of all these people?\"\n\n\"How about I put you in jail?\" I asked, going for my gun. \"And if you resist arrest, I'll shoot your sorry ass dead, right here in front of all these people.\"\n\n\"Wait, Commander!\" yelled Bettina, knowing that I was serious. \"Let me talk to him! John, let's go into the Interview Room!\"\n\nAs they left, I said \"Rudistan, escort the parents back to the Pastor's Room.\" Once they were gone, I said, \"Ross, have these Officers escort Russell and Woodburn out of my Headquarters, and do not let them back inside.\"\n\n\"Hey, who the fuck are you to tell me where I can and can't go?\" snarled Russell. \"I'll have your badge and bury your fucking ass so deep under the Station they'll never find you!\"\n\n\"Like the CIA tried to do?\" I shot back. Russell recoiled violently at that. \"I don't give a shit who you are, Russell.\" I continued fearlessly. \"This is my Headquarters, and you're no longer welcome in it. You heard me guys, kick this Senator's racist ass out, and if he resists, shoot him dead.\"\n\n\"He's not kidding, Senator.\" said a voice coming into the room. It was the Deputy Director of the FBI, Jack Muscone's boss, who had just arrived. \"You have no place here.\"\n\n\"Your boss will be hearing from me soon.\" snarled Russell.\n\n\"I hope so.\" said the DepDirector, unfazed.\n\n\"Let's go, Senator.\" said Katherine, realizing that reinforcements had arrived, and that the Iron Crowbar was well-defended, both physically and politically. She escorted Russell out of the building.\n\nOh yeah, I.A. recorded what was said in the Interview Room, and Lt. Curly Goodwin had no problem letting me listen to what was said\n\nBettina: \"John, you promised him! What the heck are you doing?\"\n\nHardwood: \"Yeah, I lied to that sanctimonious bastard to his face. It's a great story if Benny Hill misses the game, especially if there is violence at the game over it! And besides, I'm not helping that nigger kid and that nigger school in any way!\"\n\nBettina: \"I'm telling you to go back in there and keep your promise.\"\n\nHardwood: \"I don't care if you fire me, I'm not going to do it. And the cameramen will walk out on you, too.\"\n\nBettina: \"Okay, then, you're fired. And they will be, too.\"\n\nShe ended up having to fire the cameramen, who refused to cooperate.\n\n* * * * * * * * * * * * * * * *\n\nInside the Chief's office, the FBI DepDirector said \"I've already called my boss about it. He said that Russell is not a popular Senator, and his huff and puff will be ignored. By the way, Commander, I notified your wife as well as her bosses. Senator Russell would be very unwise to try to get at you through her, or vice versa.\"\n\n\"No doubt about that.\" I said. \"But we're wasting time, here. The game is tonight, and we've got to find this kid...\"\n\n\"Mr. Crowbarrrr,\" said the Chief, \"let's just worry about finding him, even if it's not in time for the game. Now let's think about this: motive, means, opportunity. Turn on that great brain of yours, and think of who might be responsible for this boy's disappearance.\"\n\nThe Chief was right. I'd been too distracted, and perhaps distracted on purpose. I began breathing to calm myself down, as taught by Dr. P. Harvey Eckhart, and then worked hard to let my mind release all the clutter and just flow.\n\nI don't know how long it was, but when I came out of my reverie, I could feel the two pairs of eyes watching me. But I had an answer for them:\n\n\"Gamblers.\"\n\nPart 9 - Game On \n\nThe same KXTC Radio announcer who broadcasts the Independence Day Triathlons and Little League baseball games was broadcasting the football game.\n\n\"And it's a big night here at County High School, home of the Falcons, as they host cross-County rival Booker T. Washington High, both teams undefeated. BTW has been led all season by sensational quarterback Benny Hill, but he Police and FBI report that Hill has still not been found, and Coach Grimes will have to lead his team into the game without their star player. They are still a strong team, and County High will have its hands full.\"\n\n\"And as we get ready for kickoff, it's a beautiful early Autumn evening. Ten thousand people here, filling the stands, ringing the field, about 60% of them in the Red and Silver of County High, and the rest in the Black and Silver of BTW High. And there is a very large Police presence here, along with State Troopers, keeping the sides separated and on their respective sides of the Stadium. Police Commander Donald Troy has made it clear that he will tolerate no violence tonight, even as his Police Force continues their search for young Benny Hill.\"\n\nIt was very obvious from the start that the game was going to be ugly. On the second play of the game, one of County High's defensive linemen, David E. Rudolph, tackled the BTW running back by a blatant face mask, viciously twisting the player's head around. Yellow flags immediately flew, and the County High crowd booed the ref loudly. A late hit on the BTW backup quarterback, Stevie Carter, also was flagged. The referees were not going to tolerate dirty play, it was quickly realized.\n\nWhat was not realized is that these were not the regularly scheduled referees for this game. I asked the SHSSA to collect a random crew from all over the State and send them to me; they replaced the regular officiating crew, who I suspected had been bribed. Whether or not that was the case, it was just another example of Your Iron Crowbar thinking far past the criminals...\n\n* * * * * * * * * * * * * * * *\n\n\"And there goes Stevie Carter!\" yelled the radio announcer. \"Thirty-two yards for the Kings's touchdown! With 3:01 left in the game, it's 23-20, with the extra point try to come!... And, oh my goodness, the Falcons' players crashed the line and hit the King's\n\nkicker very late, there's another penalty flag, the twelfth of the game for County High... the kick was good, though, and the score is 24-20, Kings. They're playing really tough without Benny Hill, but can they stop the Falcons?...\"\n\n\"The clock is winding down, 2:20 to go, and the Falcons have driven to midfield. Quarterback Rex Rutherford goes back to pass... and it's intercepted! The safety Miller grabbed the ball out of the air, and he's running it back, 50, 45, and he's tackled right there... and another yellow flag as a County High player comes in as spears Miller after he was down... it's Rex Rutherford called for the spearing... and the referee has ejected Rutherford for the flagrant foul!... the County High coaches and players are surrounding the referees shouting and screaming... and there goes yet another flag...\"\n\nThe ball was finally paced on the Falcons' 15 yard line after multiple penalties. The Kings simply ran into the line. I came down to where Lt. Croyle had some of her officers near the fence opening that the Kings would use to get to their locker room.\n\n\"You guys, come with me.\" I said. I had a vibe about this one, and brought the officers with me as Teresa went and collected another group to help her. We walked inside the fence along the sidelines, and our presence was noticed by the crowd... but apparently not by County High's lineman Rudolph. As the Kings ran into the line, he grabbed the runner's face mask and viciously twisted his head around, then picked the player up and piledrived him into the ground, earning Rudolph his third flag of the game.\n\nThe Kings had had enough. They went after Rudolph, and in retaliatory response the County High players began throwing closed-fist punches. That brought both benches out, and soon it was a vicious fight, as bad as the Bulldogs-Engineers college game fight the year before. And that brought out Your Iron Crowbar and a lot of State Patrol and TCPD Officers.\n\nThe Police formed a line, throwing players back and ordering them back to their benches. Rudolph was about to throw a punch, then realized that it was me standing in front of him... one of the few people larger than him on the field right now. I ordered him to get back to his bench, and he wisely complied.\n\n\"And it's chaos on the field, ladies and gentlemen.\" said the radio announcer. \"Punches thrown, brawls, helmets flying... and there is Police Commander Troy coming out... his Officers are forming a line between the teams, separating fighters... they're not playing around, billy sticks are being used to pry players apart... oh, one player almost punched the Iron Crowbar, that would've been an ugly mistake... he's backing off now... Commander Troy and his Police are now in control... wow, did they ever take fast action to prevent it from getting worse... there are Police all over the place, making sure fans stay separated and calm... now the Police Commander is calling the referees to midfield...\"\n\nOrder was restored, and I went to the head referee and told him to have his officials bring the two head coaches to midfield, where we were. Coach Grimes came out quickly enough, but the County High coach was reluctant, until my crowbar pointed at him, and two TCPD officers began walking to him to enforce my edict.\n\nOnce I had them at midfield, I said \"You officials keep calling a fair game. Throw flags on any future personal fouls. As to you coaches, get this straight: I am not going to have a riot here with 10,000 people. I am not going to see anyone get hurt. The next player that gets a personal foul will be arrested for criminal assault, and his head coach will, also. Do I make myself clear?\"\n\n\"You got no place here, Troy!\" shouted the County High coach. \"This is a game! Get off the field!\"\n\nI squared up to him, my crowbar poking him in the chest as I said \"This is my County, asshole, and I will enforce the law here! I will not tolerate further criminal activity, nor anything leading to a riot. One more foul outta your players, and your ass is in my jail tonight. You better get your head out of your ass, or I'll rip you a new one!\"\n\nI turned to Coach Grimes. \"Same story for you, Coach. Keep it clean, no retaliation. After the game, get to your locker room and get on the buses so I can escort you out of here.\"\n\nWith that, I stalked off the field, my Officers following me and watching for trouble. I got mostly cheers, but there were a few boos and jeers, as well.\n\n* * * * * * * * * * * * * * * *\n\n\"And that will do it.\" said the announcer. \"The Kings have eked out the win against the Falcons, 24-20. The Kings players are under Police guard as they go to their locker room. The County High Falcons players retreat to their locker room in shame, not only the shame of their dirty play tonight, but having lost to the Booker T. Washington High School Kings for the first time in well over a decade.\"\n\nThe school buses to take the Kings home came to the door of the locker room, but County High fans were blocking the road out, and threatened to become an ugly mob. A line of well-armed Police marched down the avenue, forcing the crowd back and to the sides. And in the middle of that avenue was one Lieutenant Teresa Croyle. Her face under her helmet showed that she was brooking no violence.\n\nThe Kings rapidly boarded their buses, protected by a police cordon as the County High fans jeered at them. An occasional plastic drink bottle flew, but for the most part it was just noise. Then everyone saw the Police SUV, blue lights flashing, back into the avenue until it was in front of the first bus. Another Police SUV was coming up behind the buses.\n\nTeresa had moved out of the way to let me by. I stopped and said \"Get in.\" She got into the passenger seat. When the buses were ready, we began moving out. The Kings's buses were escorted out of the area and to the main road, where an escort of TCPD cruisers took them the rest of the way to their School.\n\nA huge crowd greeted the Kings players at BTW High School. The Police in the cruisers called for more Police, and more vehicles were sent, but it was mostly a celebration and was loud but peaceful.\n\nThe Media was all over it. Priya was interviewing one Kings player who said \"Yeah, it was ugly out there. They were calling us the 'n-word' all night, and playing dirty, scratching at our eyes. Worst thing I've ever seen...\" No mention that the Kings players had been doing some stuff themselves...\n\n* * * * * * * * * * * * * * * *\n\nIt was nearly midnight. I was sitting at my desk, alone, only the light from the streetlights and the moon filtering in. I was totally exhausted.\n\nI did not know what to think. I had seen a lot of hatred this night. And not just a few people or a few football players... by a huge number of people, on both sides. I remembered the Fire Department and the EMTs, and wondered why people chose to hate so much... and so needlessly.\n\nI heard my door open and looked up. Chief Sean Moynahan came in, with two shot glasses. I did not need words to open my bottom drawer and bring out a bottle of rye whiskey. I filled the two glasses, we toasted and drank. I refilled the glasses as the Chief sat down.\n\n\"Busy day today.\" he said. \"You kicked a U.S. Senator's ass, got John Hardwood fired from KXTC, drilled the FBI's Missing Persons Bureau, and prevented a riot at the football game. I might add that I am very pleased with your quick and decisive action there, and the Sheriff is pushing back hard on those saying your interference was overbearing and unwarrrrantedddd.\"\n\n\"Thank you, sir.\" I said simply.\n\n\"All right, go home, get some sleep.\" ordered the Chief. \"We'll find those kids tomorrow, then figure out the rest of it...\n\n* * * * * * * * * * * * * * * *\n\nWhen I got home to the Mountain Nest, Laura was still awake. She was wearing a gray housecoat and Uggs booties.\n\n\"I'll heat up some leftovers.\" I said, trudging to the kitchen.\n\n\"I'll come help you with that.\" she said. As she fixed me a plate of leftovers and I microwaved it, she said \"Washington, D.C. is excited at your name again.\"\n\n\"The party never stops.\" I replied, my voice showing the emptiness of my emotions. Laura smiled sympathetically.\n\n\"Senator Russell is getting some flak about butting his head into your missing persons case.\" she said. \"His reaction to your comment about the CIA after he threatened you showed us some things. We're watching him much more closely now... as is our friend, Jack Muscone's boss.\"\n\n\"I guess it was the Deputy Director that overheard those comments and told you?\" I asked. Laura nodded. I said \"He got there just in the nick of time.\" We said no more as we ate our late supper. Though I had not eaten properly this day, I barely finished my food; I was too wired up, too tense.\n\n\"So, Darling,\" Laura said as we put the dishes in the sink, \"why don't we go to bed. I'm sure you remember what to do with this.\" She opened her housecoat, revealing her magnificent naked body.\n\n\"Oh my goodness.\" I said, sliding my arms around her waist. \"It's all over for me if I am ever unable to take advantage of this.\" We made our way up to the bedroom, where a lot of my stress was released in powerful climaxes as we made love...\n\n* * * * * * * * * * * * * * * *\n\n\"Oh, Commannnddderrrrrr....\"\n\n\"Angela, you've got to be kidding...\" I thought, knowing I was on the edge between a deep sleep and REM dream-sleep. I was seeing the darkened bedroom, and Angela on all fours, hovering just above me.\n\n\"Oh, you love theose uphill battles, don't you, Commander...\" Angela whispered. \"But you have those teenagers to find... the answers will come, my darling Commander... let your mind go.... the answers will come...\"\n\nI may have fallen back into the deep sleep I needed, but I do remember dreaming... I was in a room, people all around the various gambling tables... Jaime Silver hosting the event... hearing him come up to me and saying \"Oh, Commander, would you like to gamble the lives of those teenagers against catching me?...\"\n\nPart 10 - Re-Search \n\nI came into the office at 5:15am, Saturday, October 1st. At 6:45am, I was at my desk, poring over a Google Maps map of the Town, which had my own overlay upon it, an overlay of various camera coverages, when Cindy came into the office.\n\n\"So, I see that you didn't get a lot of sleep.\" I said, pointing at the coffee pot. One pot had already been consumed, and half of another.\n\n\"I got some, but it was fitful.\" said Cindy, pouring herself a mug full of the elixir of life. \"I had this dream that I was in a casino with Jaime Silver, and he was taunting me about those kids... what?\" She was seeing the weird look on my face.\n\n\"Nothing.\" I said. \"But I really would like to know where Jaime Silver is right now. I would put out an APB on him, but that would possibly alert him that we're after him, and I really don't have probable cause... beyond your dream.\"\n\n\"True, that. So what are you doing now?\" Cindy asked.\n\n\"I'm trying to determine camera coverages of the area around County High School.\" I said. \"The school itself covers about everything in their parking lots and on their grounds, and there's a bit of street camera coverage on the road leading away. But then there are spots where there's no coverage.\"",
        "\"Think Priscilla was kidnapped outside the school?\" Cindy asked.\n\n\"No, she could scream out and people would have noticed.\" I replied. \"I think she was picked up by someone she knew. And that someone knew enough to pick her up in one of these dead zones.\"\n\n\"Wow, knowledge of all that shows some pre-planning.\" Cindy said.\n\n\"Exactly.\" I said. \"And a lot of potential theories are squashed, leaving us with only a few truths supported by the data...\"\n\n* * * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Channel Two News!\" yelled the lovely redheaded reporterette at 7:00am, Saturday, October 1st. \"Channel Two News is following up on the near-chaos at the Kings-Falcons football game last night. The Kings managed to hang on for the 24-20 win, even without their star player Benny Hill, but it took Commander Donald Troy of the Town & County Police to take the field and stop a fight between the players!\"\n\nFilm footage of Your Iron Crowbar at midfield with the referees as Police kept order was being shown. Bettina continued \"The County High coach said that Commander Troy threatened to arrest players and coaches, outrageously injecting himself and the Police into the game. County Sheriff Daniel Allgood defended his Police Force, saying that tensions were high and getting uglier, and Commander Troy reacted decisively, as he always does, to quell the growing problem.\"\n\n\"Meanwhile,\" said Bettina, \"both High School administrations are coming under fire; County High for the on-field violence and at least ten personal foul penalties, and BTW High for allowing Coach Grimes to continue coaching despite criminal charges being brought against him earlier in the week. One thing is for sure: what we saw of these two schools is merely one small part of the growing tensions between blacks and whites, not only in this County, but all over the State and the Nation.\"\n\n\"Democrat candidate for Governor Jack Lewis praised Commander Troy for his fast and decisive action. Roll tape.\" The tape showed the SBI Director saying \"Commander Troy took fast and decisive action to use Police to break up the fight between players, and his actions calmed things down and allowed the game to continue.\"\n\n\"Governor Jared also praised Commander Troy's actions.\" said Bettina. People got to see Lewis speak, but there was no tape of the Governor, nothing else said... one of the many ways the Media shows bias for the Democrats over the Republicans, I thought to myself.\n\n\"And speaking of politics, Public Policy Polling is showing that Director Lewis has overcome his deficit against incumbent Governor Jared, and now holds a 48-46 lead, within the margin of error. Karl Frazier says that that the Evangelicals are deserting Jared in droves over the Jeremy Moreland legal case and Governor Jared seemingly wavering on the Right to Life issue!\" Bettina seemed at her happiest reporting this, I thought to myself.\n\n\"And one final note.\" said Bettina. \"Today, October 1st, KXTC becomes a Fox affiliate. This will bring the fair and balanced coverage of Fox News, as well as NFL football and Conference college games!...\"\n\n\"Fox, fair and balanced?\" Cindy snarled. \"Really?\"\n\n\"They're in the pockets of the Republican Establishment, as the other networks are in the pockets of the Democrats.\" I said tiredly. \n\n\"Now that the game is over,\" said Cindy, \"if Benny was kidnapped, you think they might let him go?\"\n\n\"I am praying for that to be the case.\" I said. \"But I don't know... if he saw any of the perps' faces, they might not release him. And of course, he might be dead already.\"\n\n\"Any new news on Priscilla?\" asked Cindy.\n\n\"I got an email from Jack Muscone.\" I said. \"The FBI has really jumped on this case, probably because Webster is feeling Congressional heat on it. But they're not finding anything. There's nothing about the parents that suggests ransom, blackmail, or any financial problems. She was a pretty simple, ordinary girl, no issues with the law or with drugs, and they don't know what she might have seen or heard that would get her in trouble with anyone.\"\n\nJust then there was a knock on my door. Mary and Myron came in.\n\n\"You two look as tired as I feel.\" I said. \"Whassup?\"\n\n\"We've been going at it in shifts all night.\" said Mary. \"Four hours sleep apiece. But it might be worth it. We think we've found some stuff.\"\n\n\"Good.\" I said. \"What's that?\"\n\n\"Girl named Jayne Hallerton.\" said Mary. \"Nineteen years old. She graduated from County High the Spring before last, and is a Sophomore at the University, and on the women's basketball team. She and Rex Rutherford were lovers in high school, and I can say that definitively because other students caught them having sex in the wrestling mats storage room. Rex, by the way, was the County High quarterback last night, and the one thrown out of the game for spearing the BTW player after being intercepted.\"\n\n\"What's Jayne's connection to Priscilla?\" I asked. \"Families know each other?\"\n\n\"They do, but I can't find anything to show they are particularly close friends.\" said Mary. \"Jayne's name came up as being seen with Priscilla a couple of weeks ago at the Mall, per some other students our Detectives talked to yesterday. And Rex and Priscilla were having lunches together at the High School cafeteria the past two weeks. He told friends she was helping him study for Science classes, and they all thought he was banging her.\"\n\n\"Okay, so maybe we ask Rex to 'assist us with our inquiries'.\" I said. \"But do we have anything else at all to go on about this?\"\n\n\"Maybe.\" said Myron. \"We were running some facial recognitions to see if we could get footage of her and Priscilla at the Mall or anywhere else. We didn't get that, but we got something else... Jayne's face came up at a couple of ATMs, one here in Town on several occasions, and one in the City near City University a couple of times.\" \n\nHe handed me the file as he continued: \"She was getting money, usually $100 at a time, from an account in the name of 'Wilcox Court Reporting'. Not in her name in any way. Now there is a legally registered company called 'Wilcox Court Reporting, LLC.', and the name of the sole officer on it is 'Terry Wilcox'. But the twelve people in the DMV files named as 'Terry Wilcox' are not of the same address as the one on file for the LLC, which is basically a State Parcel Service mailbox center, and they all have different occupations not related in any way to Court Reporting.\"\n\nI examined the file Myron had put together. \"And none of the people named 'Terry Wilcox' live anywhere near this part of the State. Still, we can pass this on to the FBI, and they can go talk to them.\" I sat back in my chair, my back beginning to ache, and tried to think about this development.\n\n\"Sir,\" said Cindy, \"think this might be a University booster funneling money to a basketball player?\"\n\n\"Is she that good?\" I asked.\n\n\"She's not a starter, but gets pretty good playing time.\" said Mary. \"She's six feet tall, too; your wife would like her.\" I had to smile at that one.\n\n\"She's drop-dead gorgeous, too.\" said Myron.\n\n\"Which means the Commander would like her.\" Cindy said. A red crowbar was tiredly waved in Cindy's general direction.\n\n\"Which bank is this account with?\" I asked.\n\n\"City & Counties Bank.\" said Mary.\n\n\"All right.\" I said. \"Dig like crazy on this. Someone had to set up that account, and it's obvious that money is being funneled to Jayne through it. Let's see if we can find out who 'Terry Wilcox' is.\"\n\n\"Let the FBI know?\" Mary asked.\n\n\"Oh, absolutely.\" I said. \"But tell Jack Muscone's team. If the Missing Persons people complain, I'll tell them we've been all over City & Counties before, in connection with Westboro, so I gave it to Jack and his team first.\"\n\n\"Think this is some sort of Westboro remnant?\" asked Cindy after Myron and Mary had left.\n\nI shook my head. \"I don't think so.\" I said, trying to think. \"City & Counties Bank had a lot of legitimate business. But... court reporting... that's an interesting one...\"\n\n\"What about Benny Hill?\" asked Cindy.\n\n\"Let's just imagine that Jaime Silver is involved.\" I said. \"The Kings still won the game, so all those who took County and three points lost their money... and Silver was taking that a lot before it all shut down. So he owes some people some money. Let's get our eyes and ears out there and see what we can find out...\"\n\n* * * * * * * * * * * * * * * *\n\nAt 9:00am, Lt. Teresa Croyle knocked on my door, and I had her come in and sit down.\n\n\"I'm egregiously going over my boss's head again.\" she said.\n\n\"That's fine; Captain Ross is following up on some stuff. Whaddya got?\"\n\nTeresa said \"Definitely some excitement going on around Jaime Silver. People are looking for him. Serious people, if you know what I mean. Weinstein is one of them; seems Silver borrowed from him to finance his booking operation, and now Silver can't make his full book, much less pay Weinstein back. In addition, T-Square put out word that Silver might be behind the kidnapping of Benny Hill, and he wants his Regiment to 'talk' to Silver.\"\n\n\"I'm sure that's a conversation Silver will not want to have.\" I said. \"Okay, put out word that the Iron Crowbar has dibs on Silver until Benny Hill is found... and that any cooperation in finding the kid will have the Iron Crowbar' gratitude.\"\n\n\"Wow, that's a big one.\" Teresa said, fully understanding what my words meant.\n\n\"I want this kid found... alive.\" I said. \"Let me know what you find.\"\n\nOnce Teresa was gone, I got out my burner and made a call. \"Hi, Eddy.\" I said. \"I need some very good bounty hunters. Know a couple that might be the best?\"\n\n* * * * * * * * * * * * * * * *\n\n\"They brought Coach Grimes in.\" said Cindy, who was on the cellphone. \"The D.A.'s Office is offering him a deal: he'll drop all charges if Grimes resigns as football coach, retires as a teacher, and agrees to never work in any school in this County again.\"\n\n\"What?!\" I shouted. \"That's a load! Does Grimes have representation?\"\n\n\"Yeah, Mike Todd is there.\" said Cindy. \"He's a good lawyer, but... Don, Paulina is the Prosecutor on this, and she is really tightening the screws on Grimes. If he doesn't take this, she's going to go full-court-press and charge him to the max... Don? Hello? Hello?\"\n\n* * * * * * * * * * * * * * * *\n\n\"Jack, where are you?\" I asked into the cellphone.\n\nIt was nearly noon, and my stomach was beginning to take command over the tension in the rest of my body. Double cheeseburgers were sounding really tasty right about now.\n\n\"At the Federal Building.\" said Muscone. \"But stay there, I'm coming to your office now. We might have something for you.\"\n\nSome minutes later, the FBI Special Agent in Charge himself appeared in my doorway with a file folder. \"Here,\" he said, \"check this out. We got it from the City & Counties Bank over in the City. This customer was depositing $1000 into the account of 'Wilcox Court Reporting'. Eight such deposits. The name on the deposit slips was 'Terry Wilcox'.\"\n\nI looked at it. It showed the results of a camera behind the tellers at one of the branches. Though grainy, I could easily tell who the customer was...\n\n\"Oh my God.\" I said.\n\n\"Oh, Priya is breaking into the broadcast.\" said Jack. I looked up.\n\n\"This is Priya Ajmani, Five-Alive News at Noon!\" shouted the gorgeous Indian reporterette. \"Five-Alive News has just confirmed that Coach Grimes, head coach of the Booker T. Washington High School football team, has resigned his position as head coach, and will retire after over forty years of teaching high school. In exchange, the District Attorney's Office will drop all charges against Coach Grimes for housing children in his home without notifying Child Protective Services!\"\n\nPriya's next words were staggering: \"This all came about as the Town & County Police Force, led by Commander Donald Troy, discovered Coach Grimes's criminal actions earlier this week and reported it to County Welfare Services, who reported it to CPS. This is Five-Alive News, bringing you all the news you have a right to know!\"\n\nMy God. So Priya worked her words carefully, not actually engaging in libel, but making it sound like I personally threw the Coach under the bus. And here I was, trying to keep a kid out of danger, failing in that, and now looking for him and a teen girl while trying to prevent another 'Providence Springs' here in this Town & County.\n\nHave I mentioned that I have an absolutely unappeasable hatred of the God-cursed Press?\n\nTo be continued.\n\nSo, who is responsible for the disappearances of Benjamin Hill and Priscilla Dejeune? Will they be found in time? Who really was responsible for the actions against Coach Grimes? And what will Your Iron Crowbar do about it all? Conclusion next chapter... "
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "hot wife",
        "mystery",
        "crime drama",
        "police drama"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/in-black-and-white-ch-02"
}