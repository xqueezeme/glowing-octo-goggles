{
    "title": "Succubus Summoning 201",
    "pages": [
        "/**\n\nAUTHOR'S NOTE\n\nThis is the start of the next story arc in the \"Succubus Summoning\" series. It's not necessary to read the whole of that (101-114) to enjoy the sex scenes in this, but it might help make the bits in between make a lot more sense.\n\nYeah, I know this was supposed to be out around six months ago. Life, work, random kidnappings to the nether regions of hell, etc, etc. \n\n*/\n\nPhil Rowling stared up at the walls of Wargsnouts College for Warlocks. The gothic structure stood atop a small rise and extended into the moonlit sky like a twisted black fang. It dominated the skyline like any number of Dracula's castles from old B movies. Had the college grown to imitate fiction or had fiction drawn inspiration from it? It was hard to say; the college was at once both vibrant and alive, and immeasurably ancient.\n\nPhil remembered the first time he'd set eyes on it. Roald Garner, who Phil would later learn was one of Wargsnouts' recruiting officers, had brought him out to a deserted patch of wilderness next to a dark, silent lake.\n\nPhil's thoughts had been awhirl at the time. Not only had he found out magic was real, he'd been told he was going to be taught how to use it. Of course he'd still had doubts, and those doubts had returned with a vengeance when Garner had stopped and announced they'd arrived. \n\nArrived? Where? There was nothing here. So it was lunacy after all, he'd thought with a crushing sense of disappointment.\n\nIt hadn't taken much persuasion to get Phil to come out here. A non-life of flipping burgers wasn't anything he wanted to go back to.\n\nGarner tapped him on the shoulder, smiled and pointed to the top of hill. And there it was, a gigantic black edifice suddenly appearing out of what Phil would have sworn was nothing but empty night sky.\n\n\"It was always there,\" Garner said, enjoying Phil's expression of confusion. \"Like the rest of our world you only had to open your eyes to see.\"\n\nHe meant worlds. Phil learnt what most people considered hell was really a series of dimensions separated from our reality by a thin membrane. Warlocks derived their power from the denizens\u2014daemons\u2014that inhabited these adjacent realms. Wargsnouts taught its students how to summon these beings and get them to do their bidding.\n\nIn theory.\n\n\"I thought it would look more impressive,\" Verd\u00e9 said, bringing Phil back to the present.\n\n\"Forget that,\" Rosa said. \"Just think of all those yummy sex-starved students.\" Her blue eyes gleamed.\n\nRosa and Verd\u00e9.\n\nVerd\u00e9 wore a diaphanous green robe cinched tightly around her narrow waist. The V of her neckline plunged right down, revealing the lush valley of her cleavage. The dress was slit at the side all the way up to her waist, perfectly designed to show off her toned and supple legs. Her long green hair flowed down over her shoulders.\n\nRosa was slightly taller and her fiery red hair was cropped in a cute little bob. She wore a shiny red latex body suit with cut out sections over her flat midriff. The rubber stretched taut over her disproportionately large breasts.\n\nBoth currently had an arm around Phil's waist. From that description it made him sound like a gangsta pimp or lothario porn director, posing with a sexy floozy on each arm, but that couldn't be further from the truth.\n\nIn theory, Wargsnouts' lessons were supposed to teach the students how to summon and control daemons. In practise, they were mostly about how to avoid being eaten, charred, crushed, shredded, mangled or otherwise killed in some ghastly fashion by the daemons they attempted to summon.\n\nIn Phil's case the lessons had not exactly been a success.\n\nRosa and Verd\u00e9 were succubi. Incredibly sexy, but not human. They had horns, a tail and bat-like wings. None of which detracted in any way from the supernatural seductiveness they radiated.\n\nA man waited for Phil about halfway up the hill. He looked like a greasy child molester dressed in tattered black wizard's robes. A normal person would have dismissed him as a socially inadequate escapee from a Sci-Fi and Fantasy convention.\n\nNormal people thought magic\u2014and daemons\u2014didn't exist.\n\n\"Welcome back Phil, my boy,\" Stine, the lecturer most students dubbed the Scrote, said. \"Glad to see you made it back okay.\" He flashed Phil a smile that was missing half its teeth, with the remainder yellow and rotten.\n\nNo help from you, Phil thought.\n\n\"And I see you've brought a pair of delectable succubi back with you.\" The Scrote leered at Rosa and Verd\u00e9. \"Well done, boy. They're my favourite type of daemon, if you didn't already know.\"\n\nIf Phil didn't already know, he could take a good guess from the way the Scrote's gaze was currently riveted on Rosa's breasts.\n\n\"So useful in so many different ways,\" the Scrote continued.\n\nAgain, Phil could take a pretty good guess at what some of those 'ways' were. The Scrote was indeed a filthy animal.\n\nRosa and Verd\u00e9 didn't seem to mind. They smiled, posed seductively and pouted their lips. Succubi were every socially awkward man's dream. They just didn't care.\n\nIt was why Phil and Jake had borrowed the Daemonica Malefique and summoned them in the first place. They thought they knew what they were doing. After all how dangerous could it be, summoning a daemon whose principal attack was to have sex with you?\n\nJake's absence was answer enough to that.\n\n\"What happens now?\" Phil asked.\n\n\"Why, you continue your studies, my boy,\" the Scrote said. \"Getting your daemon...daemons...\" he corrected, although to Phil it looked more like he was counting Rosa and Verd\u00e9's breasts rather than the succubi themselves. \"...is only the first stage. Now you need to learn how to train them to do your bidding.\"\n\nRosa arched her eyebrow and looked at Verd\u00e9 with an amused expression.\n\n\"And this would be your special program?\" Phil said.\n\n\"Exactly, boy. You got it in one,\" the Scrote said with another rotten-toothed leer. He leant forward to whisper conspiratorially. \"But keep it quiet though. These lessons aren't exactly on the main curriculum.\"\n\n\"What about my other lessons?\" Phil asked.\n\n\"Other lessons, pfah!\" the Scrote said. \"You've already got your daemon, lad. Do you really want to waste your time picking Stinkhorn and dissecting Flocculocculm toads?\"\n\nHe motioned to a less well-travelled path that branched off the main road leading up to the college. Instead of leading upwards the path curved down and around the side of the hill.\n\n\"You're in the advanced stream now, boy. We do things at a faster pace.\"\n\nAnd what happened to those that fell behind? Phil suspected he didn't want to know the answer to that.\n\n\"Follow the path and one of my darling succubi will direct you to the lecture hall for your first class,\" the Scrote said.\n\n\"That human is very adept at dealing with succubi,\" Rosa said as they walked down the hill.\n\nVerd\u00e9 stopped and looked back. \"Oh yes. I see,\" she said. \"Very sneaky.\"\n\n\"See what?\" Phil asked. All he saw was the Scrote, looking a little like a vulture as he stood on the side of the hill.\n\nRosa and Verd\u00e9 looked at each other and shook their heads.\n\n\"Humans,\" Verd\u00e9 said. \"Always looking and seeing nothing.\"\n\n\"Occulora exnida tanja vaarsta Magique,\" Rosa said, and then swatted Phil on the back of his head hard enough to knock him off balance.\n\nWhen he lifted his head back up the world looked different, as if he was staring through a pair of weirdly polarised goggles. The world seemed brighter, as if everything was traced with a spectral glow. Wargsnouts itself wasn't so much lined as painted. The whole building was incandescent with a strange\u2014Phil would have said purple, but that was only because it was the closest his mind could come to comprehending it\u2014light.\n\nThe same light flickered around the outline of the Scrote's silhouette and ran across his body in thick lines. The lines were concentrated around his crotch, so much so that it looked to Phil like the greasy warlock was wearing underwear lined with fluorescent tubes.\n\n\"What's that?\" he asked, turning back to Rosa.\n\nImmediately he had to look away, his eyes screaming in pain. The afterimage of a figure glowing brighter than a sun was still super-imposed on the back of his eyelids.\n\n\"Whoops, sorry,\" Rosa said. She whispered some words and tapped Phil on the shoulder.\n\nHe blinked, trying to clear the grey dots floating in front of his eyes. Was that Rosa? It felt like a camera flash had gone off in his face.\n\n\"I had to up the juice a little to get past the cloaking magic he's using,\" Rosa said with an innocent smile.\n\n\"What's under his robes?\" Phil asked, his vision clearing.\n\n\"A safety valve,\" Verd\u00e9 said.\n\n\"Safety valve?\"\n\n\"When we have you in our luscious pussies and you start coming and can't stop, what does it feel like?\" Verd\u00e9 asked.\n\n\"Like a tap's been turned on and I can't turn it off,\" Phil answered. Several nights in the company of the succubi had left Phil extremely familiar with that feeling.\n\n\"That's it exactly,\" Verd\u00e9 said. \"That's how we feed. We use sex to keep the conduit open and then draw the life energy out of our victims.\"\n\n\"But not Stine?\" Phil said, looking up at the warlock standing out against the evening sky. The lines of illumination were no longer visible to him.\n\n\"No,\" Verd\u00e9 said. \"He has his emergency shut off valve. He can have sex with a succubus and she can make him come, but then his protective magic will activate and force the tap shut. No matter how hard she tries, a succubus will only be able to take as much energy as he's willing to give her.\"\n\nThat sounded pretty damn useful to Phil.\n\n\"Can I learn that?\" he asked.\n\n\"Absolutely not,\" Rosa said. \"I hate feeding in little dribbles.\"\n\nThe succubi put their arms around Phil and together they continued down the path. Around the corner a surprise was waiting for Phil. In contrast to the shallow slope of the other side, this side of the hill was sheer and rocky, almost a flat cliff face. There was little natural about the rock formations. Instead of extending upwards into the sky, Wargsnouts had gone downwards, worming through the ground beneath it and hollowing out the hill like a Swiss cheese. Phil looked at the fantastic array of windows and doors carved out of the solid rock of the cliff face and was awed. This was a part of the college he hadn't seen before or even knew existed. Like an iceberg there was far more to Wargsnouts than the grand building sitting on top of the hill.\n\nStine's succubus stood outside one of the side entrances. Phil didn't need to see her black bat wings, horns and tail to identify her as a succubus. Like Rosa and Verd\u00e9 she possessed an aura of sex appeal that was too strong to be natural. \n\n\"Ooh, a Bedmistress of the Palace of Infernal and Iniquitous pleasures,\" Verd\u00e9 said, \"and a fairly high ranking one at that. You can tell by the length of her pink plume.\"\n\nWhich one? Phil thought.\n\nThe succubus had three\u2014two extending from the bustle of a long, elaborate black dress that looked like it belonged in a decadent period drama and a third tucked behind her right ear that curled up and over her silky black hair. Decadent was a word that fit her well. Period drama dresses were supposed to preserve the modesty of the young women who wore them by covering up as much of their flesh as possible. This...failed. The dress was open at the front and revealed long elegant legs clothed in stockings and a garter belt. The daemon had a perfect hourglass figure and a tight bodice of black lace drew attention to rather than covered her pale, curvaceous breasts. Burlesque was the other word that came to mind.\n\nFor all of her considerable sex appeal, the daemon was icy and aloof. She barely deigned to even acknowledge Phil's presence. Women like her never needed to make an effort. They were rocks amorous suitors dashed themselves broken and bloody against.\n\n\"I'm...um...Phil Rowling,\" Phil said. \"I'm one of Stine's new students. And these are my succubi, R\u2014\"\n\nBefore he could introduce them, Verd\u00e9 stepped forward and curtsied before the elegant succubus like an excited schoolgirl.\n\n\"Greetings ma'am. It's an honour to meet such a distinguished and high-ranking daemon as your iniquitous self.\"\n\nThe daemon looked flattered and also a little puzzled.\n\n\"Which House of Ecstatic Sin do you serve?\" she asked. \"I see no insignia I recognise. Which Circle of Lust do you hail from?\"\n\n\"One of the really out-of-the-way circles,\" Verd\u00e9 answered. \"You wouldn't have heard of it.\"\n\n\"Just a pair of lesser-realm hell-sluts,\" Rosa added with a broad smile.\n\nThe succubus dropped her icy demeanour and turned her seductive attentions fully onto Phil. He felt it immediately. It felt like his whole body was gripped tightly in a velvet glove as her blue eyes stared into his. She leant closer until her perfume enveloped him. Phil shivered as he felt her hand slip through his robes and press against his crotch.\n\n\"You should work on the strength of your summons, young man,\" the succubus whispered to him. \"Then you might attract a pleasure daemon of appropriate rank and breeding.\"\n\nHer hand stroked up his cock with a featherlight caress that sent electricity crackling across his nerve endings. Phil let out his pent-up breath and shuddered as he involuntarily ejaculated into her hand. The succubus's supple lips turned up in an amused half-smile and she continued to stare into his eyes as she brought her hand up and licked his semen off the palm.\n\nThen she released him with no more afterthought than if he'd been a momentarily diverting butterfly. She motioned him through the door and to the left. Phil walked away, his legs still jangling in the aftermath of the unexpected orgasm. Phil felt no pleasure from it. Instead he felt soiled, as if he'd just been milked like a cow.\n\n\"Hey, did she just diss us as having no class,\" Rosa said once they were through the door.\n\n\"Very haughty, the Bedmistresses of the Palace of Infernal and Iniquitous Pleasures,\" Verd\u00e9 said.\n\n\"Never liked those stuck-up bitches,\" Rosa said. \"Always looking down their noses at lesser daemons.\"\n\nPhil's lessons on the politics of Hell had been as muddled and incomprehensible as his lessons on the geography of Hell. He hadn't even heard of the Palace of Infernal and Iniquitous Pleasures and had no clue how the ranking hierarchy of succubi worked.\n\n\"Don't you have a castle?\" he asked.\n\nA very big castle. They'd kept him prisoner in it for the past month or so.\n\n\"Um...well...that...\" Rosa said.\n\n\"It's not exactly our castle,\" Verd\u00e9 explained. \"We're sort of borrowing it.\"\n\n\"Indefinitely,\" Rosa added with a smile.\n\nGreat, so I'm master to members of the squatter class of succubi, Phil thought. And barely that. It said a lot about his summoning skills.\n\n\"N\u00ffte worked in the Palace of Infernal and Iniquitous Pleasures for a while,\" Rosa said.\n\n\"Yeah?\" Phil could see that. N\u00ffte, another of the succubi that shared Rosa and Verd\u00e9's castle, had a similar icy beauty to the succubus on the door.\n\n\"They made her leave. A disagreement between her and the management over what constituted pleasure.\"\n\nPhil could also see that. N\u00ffte terrified him.\n\n\"This must be it,\" Verd\u00e9 said.\n\nThey walked through into a largish waiting area. Phil saw lots of other students. They all looked a similar age to Phil's eighteen, or maybe slightly older. They were also dressed in everyday normal clothes\u2014jeans, T-shirts, hooded sweaters. Phil felt like a weirdo in the tatty and singed warlock's cloak he was wearing. He supposed he should be thankful for at least that. He had a suspicion if Rosa had her way he'd be wearing nothing at all.\n\nPhil's entrance garnered some interest as they saw his robes and mistakenly thought he might be one of the staff. Then they saw his face, realised he looked as confused and bewildered as them, and lost interest. They resumed conversing amongst themselves in little groups.\n\nIt could be a scene from any university...if you ignored the daemons.\n\nThere were a lot of daemons, around one for each student by Phil's reckoning. The daemons came in a riotous mix of different shapes. Some were recognisably humanoid; others were far more alien combinations of octopoidal tentacles and bristling, chitinous plates. Some were so abstract as to almost defy description: like a squat pile of pink flesh with a large mouth\u2014its only feature\u2014in the centre, or a floating collection of riveted iron plates that endlessly slid over and around each other in a chaotic ball-like shape.\n\n\"Hey, you got a succubus too?\"\n\nPhil was approached by a young man. He didn't look like the sort that would need to seek out a succubus. He was tall, muscular and had a strong jaw covered in the beginnings of a slightly disorganised beard. Dirty blonde hair framed an easygoing face with green eyes. Not the typical Wargsnouts student, Phil was thinking, until he saw the burn scar that extended down the right hand side of the man's neck and under his T-shirt, presumably the result of some arcane mishap or other. \n\n\"I'm Eric,\" the young man said, offering his hand.\n\n\"Phil,\" Phil replied.\n\nEric's other arm was around a very attractive girl. She looked to be in her late teens and she had the slim figure, golden tan and lovely smile of the archetypal cheerleader-next-door. She wore a cut-off pair of denim shorts that showed off her long, supple legs and an open shirt with the tails tied together above a flat belly.\n\nShe was a daemon.\n\nIt wasn't easy to tell. She was using some kind of magic to mask her features. Whenever Phil looked at her directly he saw only a nubile young hottie. The dainty little horns poking up out of her silky blonde hair only appeared when he shifted his gaze so she was no longer the focus.\n\n\"They're the best, aren't they,\" Eric said, giving the girl a little squeeze. \"So much more than just a pet.\"\n\nHe turned his head and kissed her on the cheek. To the outsider they looked like a young couple in love.\n\nPhil wasn't an outsider and he could see the succubus's eyes. They were flat and black. There was no love in those eyes, only hunger. It was like staring into the cold gaze of a bear or wolf. He shivered.\n\n\"See you around, Phil,\" Eric said, moving away, his arm around the sylph-like succubus at his waist.\n\n\"I fear for that young man's soul,\" Verd\u00e9 said later while they sat on a bench at the back of the room. Over on the other side, Eric had his arms around his succubus and they were making out as if the rest of the room didn't exist. \"I don't think he has his succubus fully under control.\"\n\nShe turned her head. Rosa had pinned Phil to the back wall and his arms were waving up and down as she passionately kissed him.\n\nCan't breathe. Can't breathe.\n\n\"Rosa!\" Verd\u00e9 said. \"Don't show up our master in front of all these people.\"\n\n\"Um...sorry,\" Rosa said, breaking off the kiss and allowing Phil to suck in a gulp of air.\n\nVerd\u00e9 sighed and shook her head in exasperation.\n\nPhil was not the only one having problems with his daemon. A stick-thin girl with droopy blonde hair looked at him with a sympathetic expression. A fat brown imp sat on top of her head. It pulled faces and made a series of increasingly obscene gestures. The girl smiled apologetically. The imp blew a raspberry, jumped round to moon them with a pimply ass and then finished up by turning back, pointing a prodigiously large cock\u2014for its small size\u2014in their direction and stroking it with a warty hand.\n\nThe Scrote entered the room. The girl whispered something to her imp and they both turned to face the black-robed lecturer.\n\n\"Come on, come on,\" the Scrote said, beckoning them to the door before scampering through ahead of them.\n\nPhil walked through into a medium sized lecture theatre with dusty old seats. Down below was a stage with warped wooden floorboards. Phil snuck into a seat up in the darkness of the back row and Rosa and Verd\u00e9 sat down on either side of him. He sensed a little ripple of anticipation running through the students. It reminded him of the excitement and trepidation he'd felt when sitting down to receive his first lessons in magic. It had only taken a week of bone-dry lectures to grind that initial excitement into dust. Wargsnouts was a school. Worse, Wargsnouts was a school stuck in the mores and methodology of two centuries back. Phil didn't know what to expect from the Scrote though. He didn't seem to share the same necessity for care and caution as the rest of the college.",
        "\"Greetings, greetings,\" the Scrote called out, flashing them a rotten-toothed grin. \"Welcome to my Advanced Studies class. Up there,\" he said, pointing up in the direction of the main building several floors above them, \"they wouldn't dream of letting you attempt to summon daemons until after at least three years of study.\n\n\"But you've already summoned your first daemon, so we can dispense with all that crap and get right down to real business and the real business is power.\n\n\"Power and control. That is the essence of a warlock. The planes of Hell adjacent to our own realm of existence represent a near limitless source of power. Power waiting to be tapped by the experienced warlock. Your daemons are the key to that power. Control your daemons and the world will open up to you like a succulent, juicy oyster. I will teach you that control.\"\n\n\"Our new friend would be wise to pay more attention to his words,\" Verd\u00e9 said.\n\nPhil turned to where she was looking and saw Eric was also sitting up on the back row, on the other side of the hall from them. His succubus was down on her knees between his legs. Eric closed his eyes and tipped his head back as the succubus bobbed her head up and down on his cock. She wasn't bothering to hide the little black nubs of her horns this time. Eric ran his hands through her silky blonde hair and pursed his lips in little oohs of pleasure as she twisted and bobbed her head, working his cock with the skill of an experienced porn star.\n\nNo one else in the lecture theatre seemed aware. The succubus continued her enthusiastic blowjob, her mouth making liquid shlupping sounds as she swallowed the whole of the student's length. Phil continued to stare, unable to look away. \n\nHis view was suddenly blocked off by a close-up view of Verd\u00e9's lush cleavage. He lifted his head up and looked into her face. She looked cross.\n\n\"Ahem,\" she said.\n\n\"Umm...\" Phil said.\n\n\"I think someone's feeling neglected,\" Rosa said.\n\n\"If you're in the mood you only have to ask,\" Verd\u00e9 said, her cross expression melting into a mischievous smile.\n\nVerd\u00e9 put a knee across Phil's lap and leant against him. Her soft breasts pushed against the side of his face. Her heat and scent, strong like exotic flowers, enveloped him. His heart picked up a few beats and he felt the blood racing through his temples.\n\n\"What, here?\" Phil said. The lecture hall was maybe a quarter full with students and their daemons.\n\nVerd\u00e9 slid down his body and pressed her moist lips against his ear.\n\n\"Don't you think it's arousing,\" she whispered in his ear, \"having sex with all these people around, completely unaware. Just think of the excitement, knowing it only takes one person to turn their head to catch you.\"\n\nHer hand slipped into his robes and encircled his cock. He jolted in the seat as electricity crackled at her touch.\n\n\"Shameless,\" Rosa tutted.\n\n\"We can't let ourselves be shown up by a snooty Bedmistress from the Palace of Infernal and Iniquitous Pleasures or Little Miss Love Pet,\" Verd\u00e9 said.\n\nPhil glanced over to where 'Little Miss Love Pet' was still enthusiastically blowing Eric. The student's knuckles were white against the armrests and his eyes shut in ecstasy. He trembled as his 'Love Pet' sucked a sizeable ejaculation from his balls.\n\n\"A blow job in public is so...ordinary,\" Verd\u00e9 said. She brought Phil up to full hardness with a few delicate squeezes of her hand. \"We can be more adventurous than that,\" she whispered, her supple lips close enough to brush against the side of Phil's jaw.\n\nUh oh, Phil thought. He suspected he was about to become the did-you-see-what-that-guy-got-up-to-on-the-back-row-in-the-Scrote's-class guy. \n\n\"Shouldn't I be paying full attention to the lesson?\" he asked. It was feeble, even by his standards.\n\n\"That's okay,\" Rosa said. \"Leave it to me.\"\n\nShe put on a pair of bookish spectacles and smiled at Phil. Where did she get them from? Phil thought. She was wearing a one-piece latex bodysuit that fit her like a second skin.\n\n\"I'll take notes for you,\" she said.\n\nPhil didn't have time to ponder that. Verd\u00e9 put a hand on his chin and twisted his head until he was staring into her sparkling green eyes. She pulled his robes aside to expose his crotch. His cock, never one to obey the wishes of his mind, bobbed up like a mushroom. Verd\u00e9 turned around until her back was to him. Her prehensile tail wound around Phil's cock and carried on from her hand.\n\n\"Let's be really daring,\" Verd\u00e9 whispered back at him, her green eyes twinkling.\n\nShe lifted up the back of her dress to get the gossamer green fabric out of the way and show off the naked and luscious swell of her bottom.\n\n\"I want you to fuck me in the ass in the same room as all these people,\" Verd\u00e9 said.\n\nShe reached behind her and spread her ass cheeks, displaying the tight little bud of her anus to Phil.\n\n\"My, my, someone's really in a filthy mood,\" Rosa said.\n\nAs ever with Rosa or Verd\u00e9, it wasn't a request.\n\nVerd\u00e9 sat down in Phil's lap until the head of his cock was pressing up against the tight sphincter of her asshole. She wriggled and pressed down. Phil took in a sharp breath as the elastic ring of her anus gave enough for the fleshy head of his cock to slip inside her warm ass.\n\n\"What happened to the importance of keeping control?\" Phil asked.\n\nVerd\u00e9 wriggled some more as she took more of Phil's erection inside her ass. He closed his eyes. She was so tight. And warm. Her silken flesh bunched against and contracted around his cock, welcoming him deeper into the secret depths of her body. Verd\u00e9 sank further down his shaft until her soft buttocks were resting on Phil's lap and his throbbing erection was all the way inside her quivering flesh.\n\n\"Ah yes, control,\" Verd\u00e9 said.\n\nPhil trembled helplessly beneath her as the muscles of her ass squeezed and contracted around his member. She played his cock as if it was a musical instrument and she a virtuoso musician. She reduced Phil to a quivering bundle of mindless sensation in a matter of moments. She rocked and rotated her hips, letting his sensitive glans slide against her walls with short little motions.\n\n\"I'm not an exhibitionist by nature,\" Verd\u00e9 said.\n\nRosa suppressed a giggle.\n\n\"Normally I'm very shy,\" Verd\u00e9 continued.\n\nRosa snorted.\n\n\"So if any of these people should turn around and see me engaged in this vulgar act I would be extremely embarrassed. So mortified I might, in my shock, do something highly unfortunate...\"\n\nWithin her ass, Phil felt her flesh bunch up and squeeze against the head of his cock. It was as if he was pushing up against a warm and lusciously soft cushion of flesh.\n\n\"...such as accidentally gulping down the entirety of my unfortunate master.\"\n\nThe sinfully pliable and moist organ squeezed around the tip of Phil's cock and gave a gentle little suck.\n\nPhil barely managed to strangle the loud moan that threatened to erupt from his throat. It was only a soft little suck, barely more than a peck of a kiss, but he'd felt its force in every corner of his being. Should Verd\u00e9 want to, Phil had little doubt she could empty him inside out with one final, explosive ejaculation.\n\nVerd\u00e9 twisted her head to smile at him. \"Is that enough control for you?\"\n\nPhil squeaked his affirmation.\n\n\"Good, then let's proceed,\" Verd\u00e9 said.\n\nThe fleshy organ within her ass released the tip of his cock and Phil slumped back in the chair as if a tether had been cut. Verd\u00e9 rose up in his lap before coming back down with a little wiggle of her hips. Phil's cock glided against the wet and supple walls of her ass. So tight, he thought, so tight and juicy.\n\nDon't moan out loud. Don't moan out loud.\n\nVerd\u00e9 sat down in his lap. Her soft buttocks pressed against his crotch. She wriggled her body against him, setting off a chain of pleasurable detonations all the way down his shaft. She grabbed his hands from where they lay quivering on the arm rest and brought them up to press against her exposed breasts. The erect points of her nipples rubbed against the palms of his hands and he felt the soft weight of her tits in his hands.\n\nThe rest of the lecture theatre continued to listen to the Scrote's lesson. It was surreal to Phil. There they were, all the students, either stifling yawns or listening studiously while the Scrote ran through his material, and all of them completely unaware of what was happening on the back row behind them. He was fucking Verd\u00e9, in the ass, in the same room as all these people. It did give him a buzz.\n\nDon't moan out. Don't moan o\u2014\n\nVerd\u00e9 arched her spine and pressed her hips back against him. The walls of her ass squeezed and fluttered against him.\n\n\"Urk.\" A strangled little gasp, thankfully barely audible, slipped out between Phil's lips.\n\nThat buzz might just be terror.\n\nSensing she'd found a sensitive spot, Verd\u00e9 attacked it without mercy. Her muscular walls tightened around his cock, holding him firmly in place while she stoked Phil's sensitivity higher with slight, almost imperceptible, rocks of her hips. Within her, Phil felt her supple flesh rub and squeeze against just the right spot to send seismic tremors of pleasure rippling through his body. Her tail slithered down between his legs and she used the tip to tickle the underside of his balls and then playfully nudge against his anus.\n\n\"Fascinating,\" Rosa said, intently following the lecture.\n\nNext to her, Phil writhed and squirmed in the chair as Verd\u00e9 used her delectable ass to drive his body crazy. He tried to stay quiet. It was ridiculous. It shouldn't be a problem, but the more he focused on it the harder it seemed to be. He held his breath as he dwelled on it and that only exacerbated the problem as now his lungs were full of air he needed to release slowly and silently rather than in a sudden grunt or gasp. Not so easy with Verd\u00e9's nubile body writhing in his lap.\n\nNo noise. No noise.\n\nWhat was he so worried about anyway? He knew the rules to these little games now. He was master. They had to stop if he ordered them to.\n\nA sound\u2014half sigh, half splutter\u2014escaped him. It wasn't loud, barely more than a whisper, but it attracted the attention of a girl sitting two rows down in front of them. She started to turn her head...\n\nVerd\u00e9's posture changed. She pressed her hips down harder, driving his cock all the way inside her. He came up against that sinful cushion of flesh and shivered as it engulfed the head of his cock. Her hands squeezed down harder on his, pinning his hands to the yielding cushions of her breasts. The tip of her tail pressed back against his asshole, more forceful this time, preparing to enter him.\n\nHe knew then she was serious. Deadly serious.\n\nPhil held his breath. His heart thudded in his chest like a drum. So loud Phil thought the whole room must be able to hear it. The girl continued to turn her head in their direction.\n\nHe felt Verd\u00e9 tense on top of him, like she was preparing to draw a very deep breath.\n\nLook away. Look away.\n\nThe Scrote chose that moment to raise his voice, either wishing to emphasise the current point or maybe rouse bored students from their slumbers. Phil was thankful whatever the reason. The nosy girl's attention was drawn back to the stage down below.\n\nPhil let out his breath. Silently.\n\nVerd\u00e9 relaxed above him. She released his hands and leaned back against him, an arm sliding up against one side of his face while her smooth cheek brushed against his other.\n\n\"Isn't this a rush?\" she breathed against his cheek.\n\nIn the same way as jumping off a very tall building with a parachute of uncertain effectiveness, Phil thought.\n\nHe didn't get much of a chance to gather his breath. Verd\u00e9 changed position. She sat up, gripped the arms of the chair and then began to thrust back at him harder and faster. Phil closed his eyes and tried to keep control of his breathing as his cock slid back and forth in her ass while her soft buttocks crashed against him. He was thankful he'd picked a seat that didn't squeak and was able to withstand Verd\u00e9's assault with nothing more than barely audible creaks. Given the general decrepitude of Wargsnouts that was practically a miracle on its own.\n\n\"Verd\u00e9's really getting into it,\" Rosa said.\n\nA little too into it Phil thought. Sighs soft and breathy were gradually increasing in volume.\n\n\"You do know she's a real screamer when she gets into it,\" Rosa whispered in his ear.\n\nWhat? Wait! How could this be fair? Phil thought. He wasn't the one making the noise.\n\nPast experience and Rosa's smirk told him it didn't matter.\n\nA louder and huskier sigh caught the attention of the nosy girl again. Before she could look around her friend said something to her, pulling her back.\n\nIt was only a temporary reprieve. Verd\u00e9's sighs were steadily growing louder. It wouldn't be long before they tipped over into full-blown moans. Then it wouldn't only be the nosy girl he'd have to worry about. Every student in the lecture hall would be looking up to see Phil engaged in anal intercourse with his succubus. That was shocking even by Wargsnouts standards. Probably.\n\nNot as shocking as what would follow it. Verd\u00e9 would make him cry out with one final soul-shattering orgasm and then she'd gulp down his life and soul, leaving behind a corpse shrivelled up like a prune.\n\nHe had to stop.\n\nControl.\n\nHow? He didn't have any control. Verd\u00e9 was the one fucking him. He was sitting in a chair and couldn't even get out as Verd\u00e9 slammed him back in with every thrust. Each stroke and he felt his cock push up harder against that deliciously wicked bulge of flesh within her.\n\nHe had to do something fast. It was getting harder to think over the pleasurable sensation of his cock pushing into her luscious ass. His balls were tingling in anticipation of the release.\n\nMaybe if he made her quiet.\n\nHe brought his hands up in an attempt to gag her.\n\nBad idea.\n\nVerd\u00e9 was a succubus. Succubi had fangs.\n\nPhil bit his tongue to stifle a yelp as Verd\u00e9 sank her fangs into his hand. \n\n\"And she says I'm the feral one,\" Rosa sniffed.\n\nFangs filled with aphrodisiac venom.\n\nPhil struggled to reel his consciousness back down as it rose on a perfumed updraft of exotic bliss. Her aphrodisiac venom raced through his veins and coagulated in his balls, driving the activities of his testicles until his sac felt bloated and swollen. The muscles in her ass bunched around and stroked up and down his cock, the sensation magnified by her venom. It took nearly every ounce of Phil's will to stay quiet.\n\nIt wouldn't be enough. Verd\u00e9's breathy sighs were growing into husky moans. Already he fancied he could see ears pricking up amongst the students below them.\n\n\"Never had you down as an exhibitionist,\" Rosa chuckled in his ear. \"You must really want to give them a show.\"\n\nNot me! Phil wanted to protest out loud. Verd\u00e9 was making all the noise.\n\n\"Pity there won't be an encore,\" Rosa murmured.\n\nVerd\u00e9's eyes were closed. She had a hand down between her legs and was rubbing it against her clitoris. She was going to bring herself to noisy orgasm in front of everyone in the room and Phil couldn't stop it. Her ass tightened around his cock, drawing him deeper into sinfully moist tissues that squeezed and suckled on his tip, eager to drink deep.\n\nWait! He was right before. He didn't need to stop her, only make her quiet.\n\n\"Globdak nida silencum,\" Phil muttered under his breath.\n\nHe didn't get a chance to see if the spell was successful. Verd\u00e9's quiet sighs finally tipped over into first moans, then a shrill cry of ecstasy as she reached orgasm. Phil was not far behind her as the quivering fleshy walls of her ass finally took him over the edge. He tried to stay silent, but an involuntary cry escaped his lips as his cock erupted inside her. He spurted a thick load of sperm into the smothering flesh bunched around his member. Verd\u00e9's ass milked him with steady pulses as he emptied his balls inside her.\n\nHis own cry was irrelevant. No one in the hall\u2014and probably most of the college\u2014could have failed to hear Verd\u00e9's scream of pleasure. It was out of Phil's control now. Either Verd\u00e9 stopped or she kept on sucking out his cum until there was nothing left of him.\n\nShe stopped. Her soft flesh mopped up the last drops of ejaculate from his tip and then withdrew. Her ass dilated and released his spent manhood.\n\nPhil opened his eyes. The rest of the lecture theatre was not standing up on the backs of their chairs. Nobody was staring at them with naked disgust, or egging them on with whoops and hollers. The students were following the Scrote's lecture as before. None of them were looking up in their direction.\n\nVerd\u00e9 sat on the arm of Phil's seat and leaned against him, a contented smile on her face.\n\n\"Mmm, I enjoyed that,\" she murmured in his ear.\n\nIt had worked. There was a strange distortion in the air around them that made it look a little like they were staring out of a goldfish bowl. The boundary of Phil's silence globe.\n\n\"I told you he'd figure it out,\" Verd\u00e9 said.\n\n\"I suppose he's not completely stupid,\" Rosa conceded.\n\nPhil slumped back in his chair and tried to get his jangling nerves back under control. As usual, the succubi's idea of non-lethal sex left him feeling like he'd been subjected to several weeks of hard labour.\n\nActivity below indicated the lecture was over. The hall was filled with noise as the students collected their belongings together, got up and prepared to leave.\n\n\"That was really interesting,\" Rosa said, referring to the lecture. \"It's totally incredible what the humans know.\"\n\nPhil started to get up. He turned his head towards the exit and stopped. Eric was still sitting in his seat on the back row.\n\nAt least Phil thought it was Eric.\n\nThe man that had introduced himself had looked maybe a year or two older than Phil. The corpse sitting in the chair looked like it wasn't a single day short of a century. All the life and vitality had been sucked out of the body. The hair was snow-white and the skin was wrinkled and shrivelled like old leather. It was still clutching the arms of the seat like a victim of the electric chair. There was no sign of Eric's succubus. Having drunk her fill, 'Little Miss Love Pet' had departed to regions unknown.\n\n\"Oh dear,\" Verd\u00e9 said. \"I did say I didn't think he had his succubus fully under control.\"\n\nAnd I do? Phil thought. His legs shook like spaghetti as he stumbled out of the lecture theatre.\n\n/**\n\nAUTHOR'S NOTE\n\nSo begins the new arc. Unfortunately my current circumstances mean I'm unlikely to update the new chapters more frequently than once every month, but I'll try and stick to at least that if I can.\n\nFollow me on twitter for news, updates and ever more fantastic excuses for why I've fallen behind schedule again.\n\n*/"
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "magic",
        "anal",
        "exhibitionism",
        "lecture",
        "warlock",
        "fangs",
        "demon"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-201"
}