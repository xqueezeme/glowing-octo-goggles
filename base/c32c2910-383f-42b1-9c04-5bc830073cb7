{
    "title": "A New Way of Seeing Things Pt. 02 Ch. 19",
    "pages": [
        "Standard disclaimers.\n\nThis is a story about sexual exploration and, open relationships. Open relationships can and do happily exist; but they are not for everyone. If you do not believe it is at all possible for open relationships to exist without damage to any and all involved parties, please do yourself a favor and don't waste your time reading this. . Also, this story takes place in a world where STDs don't exist and only babies planned for and wanted do\u2014in other words, a fantasy world. Any resemblance to real-life people is purely coincidental. \n\n*\n\nThe days before Thanksgiving were hectic. The business focused its efforts on customers needing working kitchens in time for the meals that would be prepared in them while Gwen readied the house for KD and Cricket's stays. \n\nShe was in town with a particularly busy schedule that Wednesday morning, her first stop the bank to pick up the check for the new truck loan they had taken out. Andrew had passed his Journeyman's test the week before, and true to their word, they were putting the oldest of their vehicles in his hopefully capable hands. But that couldn't happen until Tim's new truck (ownership had its privileges, he had replied when Mike asked why he got the latest addition) had been delivered. We should have done this weeks ago, Gwen grumbled to herself as she hurried into the lobby. We're way too busy, and Andrew might have been some help on his own. \n\nCheck in hand, Gwen's next stop was Murphy Motors, where a smiling young receptionist ushered her into the office of the dealership's business manager, Margaret Murphy. Tim had given Al Murphy the details of what was needed, this year's model of what Nelson Plumbing had purchased the last two times, and the truck was due in the next Monday. \n\n\"Gwen, how nice to see you again.\" Margaret said, rising from her desk. The older woman, easily four and inches taller and fifty pounds heavier than her customer, offered her hand. Most of those extra pounds were likely in her breasts, Gwen thought\u2014larger than even Natalie's, and the very conservative business suit and jacket she wore could only mask so much. As she had overheard one of the contractors say at a Chamber of Commerce meeting, no man in town would pay less than full price if Margaret Murphy would begin negotiations by taking her top off. \n\nBut the dealership's business manager had always been careful to show less, not more; her style and bearing had always impressed Gwen as how a successful business woman should present herself. And that made Tim's assertion that it had been her partying naked on a boat with other naked men and women that much more unbelievable. Pictures of children and grandchildren covered the wall behind her as well as civic and business awards she had accumulated over the years. By all appearances, she was a very proper wife, grandmother, business and community leader. No, it couldn't have been her. \n\n\"We'll have it ready early next week,\" Margaret confirmed as they filled out the paperwork. \"Are you guys working normal hours on Friday?\" \n\n\"Tim likes to give everyone the day off after Thanksgiving, so no scheduled appointments. He'll cover any emergency calls\u2014it's mostly grease-clogs and broken garbage disposals, things like that, anyways. I'm guessing the dealership is open?\"\n\n\"We're retail, so I'm afraid so,\" Margaret said with a shrug. \"Never can tell when someone wants to give a car for Christmas. We'll both be here on Friday, but I'm taking Saturday off.\"\n\nDoing something fun?\"\n\n\"I promised Al I'd clean out the boat,\" the blonde said with groan and a roll of her eyes. \"It got used hard this summer, and I never really got a chance to clean up the cabin.\" \n\nBoat? Gwen's belief that it could not have been the woman before her out at the so-called \"party cove\" was tested. \"Oh, I didn't know you two had a boat.\"\n\n\"Oh yeah, had one for quite a while now.\"\n\n\"Where do you two normally go with it?\"\n\nThe well-built blonde fidgeted uncomfortably. \"Oh, here, there, wherever's close and we can put in.\" \n\n\"Oh\u2014well, Cleaning up doesn't sound like much fun.\"\n\n\"Not as much fun as using the boat was, no.\" \n\nGwen could not help but imagine what the woman on the other side of the desk might look like without her business attire, without anything at all. She carried the few extra pounds well, and they probably only made her more voluptuous in the flesh.\n\n\"We'll call you as soon as the shop finished prepping it.\"\n\nGwen was startled out of her daydream. \"Sorry?\"\n\n\"We'll call you as soon as the shop finished prepping it,\" Margaret repeated with a smile. \"I'm guessing you were just going over the list of things you had to do before tomorrow, weren't you?\" \n\n\"Oh, sorry, I guess I was,\" Gwen lied, putting the woman's clothes back on. The last of the paperwork was completed without any further mental lapses, and they said their goodbyes. She slid behind the wheel of her SUV and quickly reviewed her schedule. Alison's, grocery store for a few last-minute things, then home in time to greet KD. \n\nGwen had promised her daughter she would check their apartment while they were spending the holiday with Jason's family outside of Chicago. Bring in the mail, water the plants, make sure everything was in order. Certainly nothing seemed amiss when she let herself in, the small living room quiet save for the ticking of a clock as she set the envelopes and flyers down on the table and began looking through the rest of the apartment before returning to the kitchen to begin watering. \n\nHer hand brushed the mouse on the computer desk as she leaned over to reach a potted palm, the laptop next to it whirring to life and the sudden noise in the still apartment startling her. They must have forgotten they left it in sleep mode, she thought as she carefully spilling water on the machine. I should probably shut it down for them. The display sprang to life, a picture of Dancer filling the screen and giving away the computer's owner. Gwen pointed the mouse to the start button, then hesitated. Maybe Ali wanted it left on for some reason. I can leave it alone and it'll just go back to sleep. The Slut used this time to scan the screen for anything of interest, settling on the My Pictures folder. Might be fun to look at the wedding photos again, Gwen reasoned, but both Lady and Slut knew the real attraction, one screaming about the unthinkable invasion of privacy while the other egged her on. \n\nGwen had snooped on her daughters before, but the Lady insisted this was different. It was in your own home then, and you were looking for things Alison and Kathryn Deanna shouldn't have had. This is nothing more than satisfying your perverted curiosity. She got to look at your pictures, and don't forget she found your toys, the Slut argued convincingly, what's a little peek at her husband's cock? There's probably nothing in there to see, anyways.\n\nYour son-in-law's genitals, the Lady huffed pointedly, emphasizing the last word, and if there's nothing in there there's no need to look. Once seen, it can't be unseen, she was reminded in the same voice used to warn her daughter. Gwen thought for some time before siding with the Slut and settled into the chair. Just a quick look, she told herself. I still have to go grocery shopping. There were more folders to click after the first, all named after places and events, and one labeled 'us'. Gwen took a breath and held it, again debating the wisdom of her action, then expelled as she clicked. There were dozens of files inside, the ones on the screen all named 'abjf' and numbered. Gwen double-clicked on abjf1. \n\nShe breathed a small sigh of relief at the picture of a slightly younger, fully-clothed Jason standing in what appeared to be Ali's college dorm room. There, satisfied? The Lady pleaded. Please shut down the computer and go get milk. The store is going to be packed! The Slut urged her to press the button again. With a click, Jason's shirt was now off, hamming it up for the camera in a muscle-man sort of pose, his chest and abdomen showing the results of his competitive swimming. Another click and his jeans were in the process of being removed, his back to the camera and a very brief pair of underwear his only cover. And then they were gone too, the young man's back still to the camera, his legs slightly spread and arms curled above his head in a classic pose, a very muscular backside topping well-defined thighs and calves. Gwen guessed correctly as to what the next photo revealed. Jason held the same pose, but had turned to face the camera. He grinned as his penis stood proudly at attention amidst a nest of black curls, pointing to the ceiling while his testicles hung heavily beneath. \n\nOkay, you've seen his thing, now can we go? The Lady begged, but Gwen ignored her. Nobody would ever know, and it was exciting to see this side of her son-in-law; she couldn't stop just yet. Another click of the mouse and he was now holding his penis, his hips thrusting it towards the camera in a rude sort of offering. Gwen clicked back and forth between the two photos for some time, admiring, before moving on to the next one. Jason disappeared, replaced by a fully-clothed Alison standing in the same spot her boyfriend had been in, his jeans still on the bed behind her. She was laughing uproariously and crossing her arms in front of her in apparent reaction to Jason's display and request. Gwen couldn't resist\u2014she wanted to know if her daughter was able to maintain her virtue in front of this presumably still-naked man. Alison was still in her school sweatshirt and jeans in the next photo, again laughing but now vamping for the camera, her hand behind her head while a knee was bent and brought over the other leg. The next was of her backside, hands on her hips and torso bent forward slightly to push her bottom out towards the camera. In the next, she had bent all the way over to prop herself on the edge of the mattress while she spread her legs slightly, her denim-clad rear now the center of attention. She teased the camera for several more shots, the sweatshirt riding up to reveal the skin of her lower back and the top of an aquamarine thong. \n\nAnd then she was facing the camera again, the sweatshirt gone and a lacy white bra peeking out from behind the hands and forearms the laughing girl was again using to preserve her modesty. Her modesty was gone in the next photo but her laugh remained as she returned to her vamp pose, her back arched to present her bra-covered breasts. Her jeans joined the photographer's on the bed, Jason taking the opportunity for more unveiling shots as Alison shucked them off. Again she bent over, hands on the bed, the thong disappearing into the cleft of her bottom and the gloom between her legs. Her bra was next, Alison holding and offering her pert breasts to the camera, her face a sexy pout. And then even the miniscule cover of her thong was gone, the cleft of her hairless vulva clearly visible between her legs. The hands on her cocked hips and the look on her face seemed to be saying she thought this had gone far enough. \n\nThe Lady thought so too but Gwen clicked, curious if that truly was the end of it, quickly discovering it wasn't. The camera now pointed down Jason's rippled abdomen to his erection and Alison kneeling beneath it, her eyes closed as she delicately kissed the underside of his foreskin-shrouded head. Gwen knew she should stop right there\u2014this was perversion far beyond what she had ever stooped to before, and that was saying something\u2014but couldn't. The photos fascinated her and she had to know exactly how this ended. \n\nRampant arousal somehow made it possible to distance herself from the knowledge she was looking at her daughter performing oral sex on her future son-in-law. Gwen studied the pictures as she would those of a horse and rider, evaluating and appreciating the form and enthusiasm being displayed for potential use in bettering her own performance. The staff disappeared between the young woman's lips while her barely-visible hand fondled the sac beneath; her eyes looked into the camera with slutty sultriness she would never have guessed Alison capable of. \n\nThe wet length reappeared, one of Jason's hands pulling the loose skin back to fully expose the angry crimson head it while the other still held the camera. Alison still kneeled below, face upturned with a patient expression, eyes closed, waiting. \n\nA thick pearl-white line glistened on the lips of the now scrunched-up face in the next photo, over the bridge of her nose and on into her cornsilk-blonde hair. Each subsequent picture added another line or two, and then he was back in her mouth, Alison's face no longer contorted but her eyes remaining closed as she cleaned her man's still-hard length. Another click, and the scene changed to her daughter casually lying on her dorm room bed, again fully dressed but in different clothes, apparently the start of another photo opportunity. \n\nEnough, the Lady commanded, and a quick glance at the time forced Gwen to agree. The Slut begged for a just a few moments to relieve the sexual pressure the picture show had created; her alter ego sternly pointed out the time, the fact that she was in her daughter's apartment, and that the cause of her excitement had been her daughter's performance as excellent reasons to forego \"even a quickie\". Despite her arousal, Gwen knew she should just get going. With a sigh, she began to shut down the computer, then stopped. Maybe they do want it running, she remembered, and left it as she found it, carefully closing the folders she had opened. \n\nHer delay at Alison's meant a delay getting to the grocery store, and the presence of so many others trying to get their last minute preparations had her waiting in line, reflecting on what she had seen and what she now felt. Guilt had always been the price she paid for sexual desire, at least until recently; now it was back with a vengeance after the indecency she had just committed. The guilt was doubly strong, both for her invading Alison and Jason's privacy, and also from the arousal caused by their performance. Her sexual urges would be handled the old-fashioned way, she decided as she stared at the back of the woman in front of her, by waiting for them to subside rather than giving in to her perverted lust. \n\nGwen managed to get home moments before the first truck did, with KD pulling into the yard only a short time after that. Her arousal was subdued but not forgotten as she and Tim caught up with their daughter, enjoying each other's company until late in the evening. The pace of the past couple of weeks took their toll, and despite the Slut's continued urgings for \"just a quick one\", sleep came moments after they lay back in bed. \n\nHer dreams that night were vivid and outlandish, of unspeakable sexual acts and impossible situations. To her dismay the urge to satisfy her cravings were even stronger than the day before, but guilt and common sense prevailed, and with a daughter already in the house and a guest arriving shortly, a nightgown-and-bathrobe-clad Gwen shuffled out to the kitchen to begin the morning routine. \n\nTim was already out getting chores done by the time KD stumbled out of her room, the sweats-clad girl kissing her mother on the cheek and flopping into a chair by the kitchen table. Gwen set a cup of coffee in front of her and returned to making breakfast. \"I see you brought your laundry home,\" she said over her shoulder.\n\n\"As usual,\" KD agreed. \"Don't worry, just laundry in them this time,\" she added in a lower voice.\n\nGwen smiled to herself, assuming she was referring to the items that had been at the bottom of her bags the last visit. \"I wasn't worried then, and I'm not worried now,\" she said as she set a plate of bacon down. \"You're an adult, and I was glad to see you're staying safe and taking care of yourself.\" \n\n\"Alison's right\u2014this new Mom takes some getting used to. But I'll do my best,\" KD sighed theatrically, taking a piece of the bacon and chewing slowly. \"You do know what that was in my bag, right?\"\n\nGwen turned and faced her daughter. KD had always been a good child, but she was also the more mischievous of her children, occasionally making seemingly innocuous comments or asking innocent questions with the intent of discomfiting her straight-laced mother. This time, Gwen was determined not to give the young woman at the table any satisfaction. \"Of course I do.\"\n\nKD would not let it go. Her mother had somehow gained the upper hand that night she had caught her daughter bringing it back into the house from the pool, and that could not go unchallenged. \"So, what was it?\"\n\n\"It was a dildo, Kathryn Deanna. Apparently a life-like representation of someone your friend knows. We talked about the last time you were home, remember? And there were some condoms. Why?\"\n\nHer daughter broke into a grin and acknowledged that her attempt to embarrass the woman at the stove had apparently failed. \"Sorry, sorry, I just can't get over that my mom knows what a dildo is! That is so cool!\" \n\nGwen willed her face to remain expressionless. \"Of course I know what a dildo is. I have two of my own.\" She turned back to the scrambled eggs, only then breaking into her own grin at the look of shock she had put on her daughter's face. \n\n*** Cricket was relieved to find she was appropriately attired when she arrived that morning, the dark blue knee-length dress in line with Tim's suit and Gwen's own dress. KD had on a skirt and blouse, Gwen reminding her daughter that her grandmother would expect something over the white shirt to hide the very obvious lace bra underneath. \n\nGwen's young friend was for the most part warmly welcomed by her family, only Irene Curran privately grumbling about Thanksgiving \"being for family\" before finally admitting she was nice enough, even if she was using the Firm's resources free of charge and had brought a wine of dubious vintage. Natalie hushed her mother-in-law by reminding her the young woman was of very limited means at the moment, and had been polite enough to bring something even when told she didn't have to. \n\nNorm Curran's formal bearing loosened as the Scotch and Waters flowed and Cricket thanked him effusively for Mr. Gambini's help, at one point the silver-haired lawyer even offering the young woman the chance to begin a new career in a fast-track position at his firm. Natalie and Adam exchanged knowing, nervous glances as to his intent, but Cricket gracefully declined, stating her desire to stay in the financial field. \n\nThe young woman stayed over as planned that evening, helping to tend to the horses. KD had plans to go down into town that evening to meet up with friends and asked Cricket along, offering to introduce her to some of the male talent that had come into town for the holidays, but the young woman was content to stay in her sweats on the couch and watch TV with her hosts. She was in bed well before them, but only after yet again thanking Gwen and Tim for her first real Thanksgiving, boldly giving them both heartfelt hugs. \n\nThe click of the guest room door closing was also the thud of Gwen's resolve failing. \"We should go to bed, too.\" \n\nTim glanced at the woman standing over him, then back to the TV. \"You go ahead, honey. I'm gonna catch the weather and then I'll be in.\"\n\nShe gently laid her hand on his denim-covered crotch. \"We should go to bed, too.\"\n\n\"Uh yeah, I guess we should.\" \n\nGwen led the way, waiting until Tim had closed the bedroom door behind him before peeling off her robe and nightgown. \"Get undressed,\" she quietly instructed the bemused man standing in front of her. He smiled at her uncharacteristic impatience as he stripped down. \n\nShe was on her knees in front of him as his jeans were discarded, not giving him enough time to even remove his socks. Gwen kissed the tip of his semi-erect member, the length hurrying to answer the unexpected call to action. It was still working into form when she engulfed it, her hand weighing his pouch.",
        "Tim was surprised with both her boldness, especially with a guest in the house, and his wife's enthusiasm for her task, her head bobbing back and forth in rhythm to her fist sliding back and forth. Don't fuck it up, just go with the flow, he told himself. Maybe she'll let me bend her over the bed, guest be damned. The improbable fantasy of Cricket walking in unannounced to witness her friend being soundly fucked made him grunt in appreciation at the attention his cock was receiving. \n\n\"You ready?\" Tim asked, trying to remove himself from Gwen's mouth so he could position her in plain view if the door did somehow open. \n\nThe kneeling woman let him slide from her lips, holding on to his shaft to prevent him from escaping. \"Do you think you could finish like this?\" \n\n\"Well, yeah, but...\"\n\n\"Then I want you to. It won't take long for me after, either. Just tell me when you're ready, alright?\" Gwen didn't wait for his response, taking him as deeply as she dared without gagging, her fist advancing then retreating before her lips.\n\n\"Gettin' close,\" Tim muttered after one particular flurry of her tongue on his glans. \n\nGwen has anticipated his announcement and removed him from her mouth, planting one more kiss on the spongy head and settling back on her haunches. Placing her hands on her thighs, she closed her eyes and turned her face up towards him. \"I'm ready.\" \n\nHe looked down at her uncertainly. \"You mean you want me to...on you?\"\n\n\"Mm-hmmm,\" she replied softly, never opening her eyes. \"Natalie said a lot of men like to do that, and you seemed to like it when you did it accidentally that time, so...unless you'd rather not.\"\n\n\"No, no,\" Tim said hurriedly, grabbing his cock and beginning to stroke. \"I'm sure as hell not gonna argue with Natalie. I just never thought in a million years you'd ask me to do that.\" \n\n\"Then do it. Mark me.\" \n\nGwen waited with a patient yet expectant expression, listening to the sound of his labored breathing, the wet slicking noise of his fist urgently stroking his length just inches away. The sound of his soft grunt reached her ears an instant before the first jet of his orgasm landed on her cheek and across her eye. Despite her mental preparation she recoiled a bit from the force and heat, unaware her expression was identical to the one Alison had made. Gwen's mouth opened in surprise, only to quickly close again as the second spurt fell across her lips and onto her tongue. She tasted the saltiness of his spend as his ejaculation continued to pelt her, weakening with each burst. Sensing he was empty, she took him back in her mouth, feeling him shiver as she cleaned him. \n\n\"Don't open your eyes,\" he warned as he withdrew himself from her mouth and hurried to the bathroom. \"Let me get you something to clean up with.\" He returned in time to see her discarded nightgown being used as a towel. \n\n\"Wow, you had a lot!\" She exclaimed with a laugh. \"Or maybe it just felt like a lot.\"\n\n\"It's been a while, remember? So, now your turn?\"\n\n\"If you're able to,\" Gwen said politely, \"but only if you want to.\" Still on her knees, she looked up at her husband. Please want to, please, she silently begged. \n\n\"Well, he's not going to be much help for a little while,\" Tim said, looking down at his softening manhood, \"but he's not the only game in town. Any requests?\"\n\n\"Whatever you want to do...\"\n\nTim's expression grew serious and he nodded. \"Get up,\" he ordered, offering her a hand, \"lay back on the bed.\" She took a step back and sat down, scooting back to get her body on the mattress. \"Far enough,\" he said, pulling her towards him while kneeling between her spread knees. He pulled until her sex was close to the edge. \"So beautiful,\" he murmured after spreading her, softly planting a kiss on her sex. Gwen understood and appreciated his fascination. \n\nTim was patient with her needs, his recent orgasm removing his own urgency as his tongue teased and explored while his calloused palms toyed with her breasts. He sensed when Gwen grew close, her hips twitching and bucking as he circled her clit, her tiny hands forcing his head down into her slit as she came. \n\nHe looked up when the pressure on the back of his head lessened. \"Was that alright?\"\n\nThe guilt was still there, strengthened by the knowledge she had failed to wait out her perverted lust, but the need for release was gone, and she enjoyed the afterglow of its arrival and departure. \n\nGwen lifted her head and smiled at the face still between her legs. \"It was wonderful. Could you come up here and hold me for a little bit?\" \n\n***\n\nGwen made sure Cricket got a proper breakfast before she left for work the next morning, the young woman wishing she could stay and spent the day riding with Gwen and KD. \n\nThe ride gave mother and daughter a chance to talk more freely than they perhaps ever had before, KD cautiously revealing more of her hopes, fears and feelings as she discovered she was truly being listened to rather than judged, Gwen touched to have her daughter's confidence. It was during the quiet periods in between that she tried to sort out exactly what had happened that afternoon at Alison's apartment.\n\nAlison... She had always been such a good girl. I would never have guessed she could be like that! She's still a good girl, the Slut admonished, she's also a healthy young woman with a young husband who have their own wants and needs. They were doing just fine keeping their private life private until you snooped. And you had a pretty good idea what you were looking for. You were hoping for Jason, and you just got more than you bargained for. \n\nHer invasion of their privacy, as well as seeing her own daughter like that had wracked her with guilt, but even now the it was slowly loosening its grip as she rationalized it away by agreeing it was Jason and not her daughter that she had really hoped to see. \n\nAs the guilt lessened, a thrill combined with perhaps a sense of relief grew. To the world and even their own parents, Alison and Jason seemed like such a normal couple. But they had a secret side to them, like Natalie, and KD, and probably Al and Margaret Murphy, and, and...definitely herself. The realization that people she thought of as normal, even admirable, had their hidden desires and activities, just like her, made Gwen think of her secrets a little less like weaknesses and more like a part of being a somewhat normal, if more vulnerable, person.\n\nThere was one more quick ride up the hill the next morning before KD said her goodbyes and headed back to school. Tim left shortly after his daughter did, heading to the next town over to get a restaurant's dishwasher back on line before the dinner crowd. The house was quiet again, and Gwen ran through her afternoon's possibilities. There was work in the office, and chores around the house...Alison and Jason were due back tomorrow evening. Maybe she should check in at their place one more time to make sure they were not walking in to any unpleasant surprises? \n\nThe Lady managed to squelch Gwen's impulsive desire for nearly an hour before she was overcome. She could feel the guilt returning and knew another look would come with a high price to pay, but her need to see if there was more to the young couple than she had already discovered was very powerful. She made a cursory sweep of the apartment upon entering, satisfying her excuse for coming in the first place, then again sat down and woke the computer. \n\nSoon she was deep into the saved photos, the changes in location and hair styles, both head and pubic, telling Gwen this shared hobby had started back in college and continued right into the apartment she now sat in. Many of the pictures were of Alison in various stages of dress or poses ranging from suggestive to incredibly lewd\u2014the photographer seemed to especially like her on her back spread wide in invitation or on all fours, rear-end high in the air-- but there were more than enough of Jason in similar states to keep the entranced woman looking for more. There were pictures of them together as well, close-up action shots of his penis buried in her, or Alison using vibrators and dildos remarkably similar to her own. \n\nThe Lady was relieved when she finally reached the end of the pictures, confident it was a good time to make their retreat and go home. Gwen closed the viewer, coming back to the folder. There was another, labeled 'home movies'; inside were several files. She hesitated only briefly before clicking. \n\nThe video player launched, and the screen was filled a view of the camera looking down on the back of a naked woman, her hips propped up by a couple of pillows. The face was not visible, but Gwen knew it had to be Alison. A man's voice, Jason's, rumbled from behind the camera. \"This is my wife's incredible ass,\" he announced, his free hand casually slapping a cheek before pulling it aside and further exposing the rosebud hiding between the globes. \"Look at that cure little asshole. And today, I'm going to fuck that ass for the very first time.\" \n\n\"C'mon, can't I pay up some other way?\" a whining voice mixed with nervous laughter asked. \"Maybe a blowjob?\"\n\n\"A deal's a deal. I delivered on my end, and now I'm gonna deliver on your end.\" He laughed at his joke and slapped the cheek again for emphasis. \n\nAlison's nervous laughter and pleading continued. \"Just go easy, okay? Stop if I say stop?\" \n\n\"You won't even know I'm there,\" her husband lied. The photographer shifted and laid his erection between her pale cheeks, his foreskin catching on her skin and pulling back as he slid his length forward.\n\n\"Stop!\" Alison shrieked, forcing her hips down into the pillow away from him. \"You can't just put it in like that.\" \n\n\"I could if I pushed hard enough,\" Jason said with a patient laugh. \"But that wouldn't be very nice, so don't worry, I've already got it covered.\" His body shifted again and his penis withdrew, replaced on screen by a hand holding what appeared to be a small bottle of liquid. It was liberally squirted on her crinkled muscle. \n\n\"Don't!\" she shouted again. \"We should put a towel under us so we don't mess up the comforter.\"\n\nDespite the situation, Gwen smiled at her daughter's practicality. \n\n\"I'll wash it,\" Jason replied as the bottle disappeared off screen. The now-empty hand returned, his index finger extending to rub the oil around a bit before slowly pushing into her tight ring, up to his knuckle. \n\n\"Easy, easy...\"\n\nHis finger withdrew to the tip then slid in again, gently stroking until Alison seemed to relax a bit and take the digit without too much discomfort. \"Ready for the something a little bigger?\"\n\nAlison laughed nervously. \"You're a lot bigger. Bigger than my spreader, too.\"\n\nJason laughed again. \"Flattery will not get you out of paying up.\" He shifted, lining up the tip of his exposed cock head with her puckered ring. Gwen watched in amazement as he pushed forward ever so slightly, the spongy pink helmet flattening until the muscle widened to accept at. \n\n\"Ow-ow-ow, easy, easy...\" a vibrator buzzed to life, presumably from underneath the prone woman. \n\nThe penis slowly disappeared, reminding Gwen of a snake entering a ground squirrel's burrow in search of prey. Jason's hips finally made contact with his wife's buttocks. \n\n\"Are you all the way in?\" Alison asked, her hips beginning to twitch from the vibrator's attention despite the thing buried in her rear end.\n\n\"All the way,\" her husband reassured her. \"Why, you want more? How's it feel?\"\n\n\"I feel like I should've married somebody with a smaller cock. I also feel...full. How is it for you?\"\n\n\"You're lucky it's me and not Marcus...\"\n\n\"Marcus would not be allowed back there in a million years! He'd kill me!\" \n\nJason laughed. \"You might walk funny for a while. Fuck, you're a snug fit. I always thought your pussy was so tight you could rip my dick off if you wanted to, but gawdamn, this is even tighter...\"\n\nThe woman beneath him took a deep breath. \"Okay, I'm ready if you want to keep going, but really slow, and stop if I say stop, okay?\" \n\n\"I think I'm gonna want two hands for this...\" the picture bounced and rolled as Jason turned off the camera and ended the clip.\n\nGwen tried to process the incredibly arousing scene she had just witnessed. Alison had allowed herself to be taken back there! What kind of service had Jason performed that would make that a worthy trade? Whatever it was, her son-in-law had been seemed quite happy with the exchange and anxious to get to his part of the bargain. Could it really be that much better for him than normal lovemaking, that much more exciting? And who was Marcus? She searched her memory for an old boyfriend or acquaintance of her daughter but came up blank. Maybe she had named her dildo like Natalie had? Gwen shuddered at the thought of one of her own splitting her open back there. \n\nHer own feelings on the act itself were secondary to the excitement caused by witnessing it. The guilt would not be enough to make her \"wait it out\" this time; she needed relief. Again the Slut suggested the bed in the next room, maybe even take a look in the nightstand to see if it might contain some things to help her along. Gwen shook her head at that thought\u2014she was not ready to do that in her daughter's bed with her daughter's things and hurried home. \n\nGwen knew Tim would not be there to help her when she arrived and had already committed to taking care of things without him. He was there in her fantasy however, and she lay over the pillows she had stacked up as he roughly ordered her to show him her ass. She would never volunteer that opening to him, of course, but if he were to demand it, she would have to comply. \"I want this,\" he announced in her imagination, and her finger was his as it toyed with her rosebud, circling and stroking, making her shiver as the nerve endings tingled and her fearful lust grew. \n\n\"I'm going to fuck you,\" fantasy Tim announced, his unspoken preference clear. Gwen found her rabbit and somehow managed to slip it under her body and on to her clit. A couple of swipes from her sex back to her rosebud gave her finger the lubrication it needed to gently push in to the second knuckle as she imagined Tim groaning with pleasure while he took what was his and bulled his way in. She came, spasming around her finger as the vibrator did its work.\n\nTim wondered about the mound of pillows on the bed when he returned later that afternoon and headed for the shower. Gwen never left the bed unmade. He forgot all about it once she joined him under the steaming spray. "
    ],
    "authorname": "BusyBadger",
    "tags": [
        "masturbation",
        "toys",
        "photos",
        "anal",
        "video",
        "daughter",
        "son-in-law",
        "blow job",
        "facial"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/a-new-way-of-seeing-things-pt-02-ch-19"
}