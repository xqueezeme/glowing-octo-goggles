{
    "title": "Miss Callahan Ch. 05-06",
    "pages": [
        "Chapter 5\n\nI'm so disoriented that it's not until I'm in the parking garage of Altitude's building when I remember that I didn't drive today, and I don't have any of my stuff from upstairs. I probably should have taken a breath and thought things through, but I just had to get out of the office.\n\nNot even Jackie's confused questions stopped me or the handful of texts she's sent since running out. I can feel my pocket buzzing incessantly, no doubt all from Jackie.\n\nI know I'll need to go back to the office eventually. I can't leave my team suddenly without notice or without a real reason to be gone. They did just see me after all. I guess I could pretend to be sick, but I still need to go up and get my bag, which has the keys to my apartment.\n\nI lean back against the wall by the elevator and try to steady my breathing, but I can feel my heartbeat slamming against my chest.\n\nShe's married. Married. I want to believe that it's not true and Guy was just confusing her with some other EVP. But I know that's probably just wishful thinking. I saw the look Lauren gave me right before Guy announced her new position. She was scared I was about to find out.\n\nI'm just so stupid. Of course she has a wife. Someone as successful and beautiful as Lauren doesn't stay on the market for long.\n\nI've always been one to leave others to make their own mistakes. It's not my responsibility to be faithful to their partner since I didn't make the commitment. But thinking about some poor wife back in Texas makes my stomach clench. I will myself not to even think about the reality that she might have children as well.\n\nEven after all the moments I reminded myself not to grow feelings for this woman, I did. It's been so long since I've allowed myself to feel anything more than lust for someone and I should have been more careful.\n\nIt's literally been less than a week that I've known her and half of that time we were working or having sex. I shouldn't be surprised that I know nothing about her when the first real, intimate conversation we had was last night.\n\nBut Lauren made me feel things. The gentle way she treated me last night and this morning felt special. Maybe I was reading into things because of who she is. I wanted to believe there was some connection there.\n\nI promised myself after Grace left me a heartbroken mess in New York that I'd focus on my career and leave romance to other people. Casual sex every now and then, plus my trusted vibrator, was enough. Coming back to Seattle was supposed to be a fresh start.\n\nI just need to re-focus on my goals. That's been working out well until Lauren came to town with her perfect fucking face and talented hands and mouth. The Interplay win all but guarantees my promotion to Senior Vice President, something I've been working towards for two years, spending grueling hours in the office and at events.\n\nI take one more deep breath with my eyes closed and resolve myself to going back up to the office, making up a lame excuse, and getting out of here. There's a couch at home with my name on it and I desperately want to get out of this fucking dress.\n\nA new wave of anger rolls through me. What felt like sweet gesture after sweet gesture this morning is now feeling much different. I still feel like Julia Roberts in Pretty Woman, but much closer to the sex worker part and less the swept-off-her-feet part. I can't help but feel like Lauren must do this a lot on busines trips, despite what she said last night.\n\nThe ding of the elevator makes me open my eyes and I'm suddenly staring into her haunting green ones. Lauren pauses upon seeing me right outside the elevators, but then steps out tentatively. She doesn't get close to me, which I appreciate since I don't know how I'd respond to her touch right now.\n\n\"Ems,\" she says quietly. \"Please talk to me.\"\n\n\"Don't call me that,\" I say back. I know it's childish, but she has no right to use such an intimate nickname.\n\n\"Ok,\" she says. \"But you need to talk to me.\"\n\n\"I don't need to do anything,\" I snap back angrily. \"You're not my dom and you're definitely not my girlfriend.\"\n\nShe doesn't say anything back, which is infuriating and also telling. If I had something to deny, I wouldn't be waiting for the other person to start the conversation.\n\n\"Just tell me so I can move on from whatever this was. You're married?\"\n\n\"Yes, but it's so much more complicated than that. Let me explain.\"\n\nI feel an instant flash of anger at her words. \"Let me explain,\" was exactly what Grace said to me when I walked in on her and her now-boyfriend. Not that this situation is in any way similar, but I can't help the feelings that roll through me.\n\n\"Sure. Explain how you forgot to mention to me that little bit about having a wife back in Austin. Maybe there wasn't time in between fucking me here or having your hand down my pants at the client's office.\"\n\nMy voice is low, and I can hear the ice seeping into my tone. Perhaps I'm overreacting. It's not like Lauren owes me anything. But the whole thing just feels tainted and dirty and I can't believe she didn't tell me this huge thing.\n\nI don't even know if I would have denied her had she told me the truth. But at least I'd have known what I was getting myself into.\n\nLauren takes a couple steps closer to me, but not close enough to touch. My anger seems to have had the desired effect, and if she was a dog, I think I'd see a tail sticking out from between her legs.\n\n\"I am married. But I filed for divorce before I left Austin. She's not moving here. It's just me,\" she says.\n\n\"How soon before you left?\"\n\n\"Why does that matter?\"\n\n\"Maybe I'm curious how quick of a rebound I was.\"\n\nI suppose it doesn't really matter when she filed for divorce. She has every right to sleep with whoever she wants if what she's saying is true. But I still can't shake the anger and hurt, and it overpowers any logical thought. Lauren should have told me everything, so I wasn't blindsided like this.\n\nBefore answering, Lauren takes another small step towards me and studies my face. Her own face looks pained. As if she doesn't want to answer. Which is answer enough for me.\n\n\"Two weeks before. That's why Guy doesn't know. It's a bit of a sensitive situation for Altitude so I haven't told anybody here yet. Though I'm sure they'll find out soon. Now that she's been served.\"\n\nThere are so many emotions swirling through my mind, creating a fog and I truly just don't know what she means. I see a door on the other side of the garage and know that it's another exit out to the street. I consider just leaving, but my curiosity takes over.\n\n\"What do you mean it's sensitive for Altitude?\" At this point the anger has left my voice and in its place is just confusion. After getting so little sleep the last two nights and the drama of this morning, I'm suddenly exhausted.\n\nLauren doesn't speak for a full minute. She's looking down and playing with the front button of her blazer. A blazer that only an hour ago, I wanted to rip off her body and leave on the ground of this very garage. But now I just notice how sad she looks.\n\n\"Her name is Olivia Ellison,\" she says in a low voice.\n\n\"Eliison?\" I say the name back, knowing full well what that name means to Altitude and our Austin office. \"As in Ellison Tech?\"\n\n \n\n\"Her father is Richard Ellison. CEO and President of Ellison Technologies, Ellison Finery, and the Ellison Family Foundation. He's stepping down. And Olivia is taking over.\"\n\nEvery new piece of information sends my mind in a different, confused direction. \"Your wife is Altitude's largest client?\"\n\nAs I ask the question, the absurdity of the situation hits me. To think I could ever actually have this woman is almost absurd. She's married to the heir of one of the biggest family dynasties in the country. She must be a billionaire. I'm still paying off my student loans.\n\n\"My ex-wife,\" Lauren says in response.\n\nI give a short, harsh laugh. \"Not yet.\"\n\nI try to sort through all the thoughts and questions racing through my head, but something Lauren just said comes to the forefront.\n\n\"You said 'now that she's been served.' You mean you didn't tell her you filed? What did you do, just jump on the first flight you could find and grab a role in a different office?\"\n\nMy voice is raised slightly and the anger that had subsided for a moment is back. She may be telling me the truth, but quite frankly, her truth just makes this whole thing worse and worse. Even if she's leaving her partner, how could she not talk to her about it?\n\n\"You don't understand, Emma.\"\n\n\"Clearly not,\" I snap back.\n\nShe looks at me seriously before taking a deep breath and continuing. \"Her dad is one of the most connected and powerful men in Austin. He would have ruined my career had I stayed there. I needed to find a way to secure a role in a new office before Olivia and her family found out and did something drastic to me or the account itself. This could have lasting, hugely negative effects on Altitude.\"\n\nI've seen Lauren put on her professional face where the stoic businesswoman reigns. But the coolness with which she spoke about her father-in-law and wife was confounding. I feel like we're suddenly in a meeting with the cut and dry attitude she's taking.\n\nBefore I could say anything, she continues. \"I needed to give the Austin office a chance to keep that business. As you said, it's the largest US client we have. When I decided months ago that I was going to file, I worked with the west coast leads on a plan to move offices so Olivia couldn't use me as an excuse to fire Altitude. It probably won't save the account. But that's why I'm here.\"\n\n\"I see. How clever. All business then.\" I hate myself the second the words leave my mouth. I am hurt, but now I sound like a desperate schoolgirl, waiting for validation from her crush.\n\nI push off the wall and start to move to the door on the other side of the garage. I need air. As I pass her and get closer to the door, Lauren calls out my name.\n\n\"Emma. You can't say anything about us. I'm sorry, but this can't get out yet.\"\n\nPart of me thought she was stopping me for some big reveal as to why this isn't a shit situation. Like in a romantic comedy. But all she wants to do is tell me to keep quiet.\n\n\"There's nothing to say. There is no us,\" I say as I keep walking to the door. I'm at the door when I hear her voice again.\n\n\"Emma, wait. It's just that Guy and others here don't know yet. I have no idea what Olivia will do now. But she's a shark. I promise you, she is. I'm trying to protect you too. I don't know what she'd do if she found out about this,\" she says as she points back and forth between us.\n\n\"Don't worry, I won't tell anyone about our dirty little secret.\" I have my hand on the handle when I decide to turn back. I'm done feeling like I can't be honest because I mighty scare her away. There's nothing between us now anyway.\n\n\"You could have just told me you know. Instead of making me feel like this. I know it was stupid to begin to actually like you. I know I was just a business trip fling. But I'm not some clingy child. I would have understood.\"\n\nI don't give Lauren a chance to respond and am out into the alleyway attached to the garage in no time. But I don't get far before I feel a hand grab my arm and spin me around.\n\nLauren moves into my space so much that I have to move backwards and I can suddenly feel the alley wall behind me. Her body is pressing lightly into mine and I'm a sandwich between her and the wall.\n\n\"Emma,\" she breathes out and stares into my eyes. She looks like she wants to say more, but she just stays there, looking at me with an intense gaze. I can feel her breath on my face.\n\nI'm in a sudden war with my mind and body. Part of me wants to push her away and get the hell out of there. The other more insistent part wants to grab her so I can feel her lips on me one last time.\n\nMy body wins out and I feel my hands coming up and cupping her face, bringing her mouth onto mine in a rushed, sloppy kiss. It takes only a second for Lauren to respond as she puts her hands on either side of me on the wall and deepens the kiss.\n\nI move my hands so their pressing into her back and pull her further into me so we're completely flush together. I can't tell who lets out the first moan as I feel her tongue slide against mine. She doesn't tease me at all. She moves her tongue all around my mouth as if tasting every part she can get to.\n\nMy brain is screaming at me to stop but I have no power to do that at this point. As I feel Lauren's right hand leave the wall and move down my dress, I help her by hurriedly moving my hands down to the hem of the dress and pulling it up so she has easy access to my bare pussy.\n\nEverything is moving fast and I'm desperate for her touch, but as her hands reach my thighs, she pauses her movements. I know what she's looking for and despite the emotions whirling around my head, I can't stop my need for this woman. I take her hand and guide it to my pussy.\n\nWith my consent, she lets out a sound akin to a low growl, drops her head onto my shoulder and dips her fingers into my wet folds. I close my eyes and lean my head back against the walls as I allow the feeling of her fucking me to erase everything else in my mind.\n\nI can't even be bothered to worry about the fact that we're in an alleyway right outside my office building. All I want are her fingers filling me up, her breath against my collar bone, coming out stronger with every thrust she makes. The scratching of the wall behind my head only intensifies my arousal.\n\nI begin to lightly push my hips up to meet her fingers, trying to chase the release that feels imminent. As she moves her hand so she can flick her thumb over my clit, I know I'm going to come.\n\nI let go of my dress since her hand is holding it up and I grab on to her shoulders for support. \"Faster,\" I pant out.\n\nShe moves her hand expertly so she can pump in and out faster and faster. As she fucks me, she moves her mouth up my neck, licking and sucking her way to my ear. When she gets there, she lightly bites down on my lobe.\n\nThe sensation sends me over the edge, and I try to stifle my scream by putting my face into her shoulder. She holds still, not removing her hand as my head stays there, both of our breath coming out in ragged spurts.\n\nAfter I trust my legs to hold me up, I move my hand so I can grab her wrist and I pull her out of me. I straighten up on the wall and bring my dress down my legs, so I look a little more presentable.\n\nLauren is looking at me with such concern and tenderness that I almost want to reach out and tell her that it's all ok. But I still don't feel that and now I'm just angry at myself for giving into her again.\n\nI lightly push her off me, so I have some space without the temptation that having her close always seems to elicit. I look deep into her eyes, trying to remember this last time that we'll be more than co-workers. She'll be more than my boss.\n\nShe reaches out her hand to touch me, but I move back so she's too far away. Touching only leads to kissing and kissing leads to wall fucking.\n\n\"You were never just a business trip fling, Emma. You have to know I like you too,\" she says slowly and carefully, as if willing me to understand her words.\n\n\"That's the last time you'll ever touch me, Lauren,\" I say back.\n\nI can see a flash of hurt cross her face at the harsh way I said her name. She's probably become so used to her touch, or even a look, making me quiver that she's not used to the steel I know how to infuse into my voice when I need to.\n\nI just need to get out of this disgusting alley. Away from those green eyes that are only making my heart clench in pain.\n\nI move past her, careful not to let our shoulders touch. I can feel tears starting to sting in the corner of my eyes, but I take a breath and hold them back. The last thing I'm going to do right now is let Lauren see me cry.\n\n\"Emma, wait,\" she says, but this time I don't turn back. I keep walking until I'm out onto the bright street and feel at a loss for what to do. I know I need to go get my bag, but the last thing I want to do is see people. Or run into Lauren again.\n\nI take out my phone to see eleven texts from Jackie asking why I left so abruptly and telling me she stole a bottle of champagne from the admin's desk.\n\nI shoot her a quick text asking her to bring my bag down. I never take sick leave so I'm hoping Jackie will believe I really am sick with the way I've been behaving. Even if I wanted to talk to Jackie about all of this, Lauren's words remind me that I can't.\n\nI head to a coffee shop near the office so I can wait for her. I sit down at a table without ordering anything. Right now, my stomach couldn't handle caffeine and sugar anyway.\n\nI can't stop my mind from replaying what just happened in the alleyway. My body is still tingling from the orgasm and obviously isn't in the same turmoil that my mind is. I try to sort through the facts. Maybe that will help make all this feel less complicated.\n\nBut the facts don't do anything but make me feel like some supporting character in someone else's much bigger, much more interesting story.\n\nI rattle off what I just learned in my head.\n\nLauren is married to our agency's biggest client. She's moving here to avoid losing that client for the company and having her career decimated by her wife and/or her father-in-law. She filed for divorce without even giving her wife a heads-up. And she slept with me because she could.\n\n \n\nThe truth is, Lauren never promised me any kind of commitment. I didn't even think I'd see her again until our conversation last night in bed. But that was enough to put a seed of hope in my mind. Learning that I'm just another agency girl hurts, but I may as well learn it now before I make even more of a fool of myself.\n\nI need to focus back on what's important and that's my promotion. Lauren's presence in this office can't impact that. We worked well together before anything happened, and we'll just have to go back to that.\n\nI can handle looking at her perfect body each day without undressing her with my eyes. I'm a fucking professional.\n\nMy thoughts are interrupted by Jackie coming in and sliding into the seat across from me. She puts my work bag down on the ground by my chair.\n\n\"How're you feeling?\" she asks.\n\n\"Just a headache, but I was feeling a little faint and needed some air. I'll just work from home.\"\n\nI hate lying to Jackie and it's clear that she's not buying my little \"headache\" excuse.\n\nShe looks at me quietly for a moment before she asks in a low voice, \"Did you sleep with her last night?\"\n\nI had a feeling she didn't buy that I'm sick, but I wasn't expecting her to come out and ask that. I don't say anything as I try to decide how to answer her.\n\n\"I know you, Ems. You're never sick and if you were, you wouldn't just run out of the office and make me bring you your bag,\" she said. \"So, tell me. Was it last night?\"\n\n\"Yes,\" I say back in an almost whisper.\n\nLauren's ask for secrecy is still rolling around in my head. I don't want to keep lying, but it's probably less complicated for everyone if she assumes it started last night. Plus, I really don't want to tell her I fucked Lauren in both our office and her rental car outside of a pitch.\n\n\"And I assume she didn't tell you that she's married? Based on the way you sprinted out of there after Guy's announcement.\"\n\n\"No,\" is all I say back.\n\nJackie looks like she wants to ask more questions, but for now she keeps them to herself. Jackie's never one to keep opinions inside for too long though, so I know I'll get them eventually.\n\n\"That was pretty fucked up of her,\" she says.\n\n\"She's getting a divorce.\"",
        "I don't know why I feel like I need to defend Lauren in any way. She did lie to me about a lot of things and now is asking me to just be quiet about all of it.\n\n\"You still had to find out during a staff meeting.\"\n\nJackie is right and saying all the things I already feel and have voiced, but I suddenly feel exhausted and want nothing more than to go home, curl up on my couch and zone out in front of the tv.\n\nAfter thanking a slightly concerned Jackie for my bag, I get up and the leave the coffee shop to do just that.\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nI step out of the shower and immediately feel a bit better than before. Showers always help me clear my head and restabilize. Instead of wallowing in sadness over a woman I barely know, I'm going to get some much-needed sleep and then get back to what matters\u2014my career.\n\nWhatever Zen I found in the shower immediately dissipates as I look down at my phone on the bathroom counter. Lauren's name is on the screen. I saved it into my phone this morning after she left for the office, but even if I hadn't, I only know one number from Austin.\n\nI stare down at the device before picking it up to read the text.\n\n \n\nLauren: Boarding my flight. There are more things I want to say to you. I'll be back next week. I hope you'll let me see you outside of the office. \n\nI can see three dots move under her text, indicating she was typing something else. But then the dots disappeared. I assume that's all she's going to say when the dots reappear.\n\nThe arrogant and articulate Miss Callahan is apparently a little tongue tied. But then she sends another text.\n\nLauren: I meant what I said. I like you. Much more than I expected to. I'm sorry I didn't tell you everything, but please see me next week so we can properly talk xo\n\n \n\nI stare down at the text and ignore the water dripping down my back. She's coming back. Which I guess I should get used to considering she's moving here. But all the resolve I felt a moment before is now replaced with dread.\n\nI put my phone down, deciding to ignore her texts.\n\nHow can I feel confident about my promotion when the woman who will be one of the main deciders in that happening is someone I let dominate me?\n\nI have one week to figure out how to be in the same office with Lauren without my heart rate going through the roof. As I look at my reflection in the mirror, I half expect to see something different. But I look the same. My blonde hair is darkened from my shower, but my blue eyes are as bright as ever.\n\nAnd I'm reminded that it's all about appearances in my field of work. I can see her and not lose my shit. I know I can. I just need to focus. Focus on work and friends and find someone else to satisfy my other needs.\n\nAn hour later, as I slide into bed after brushing my teeth and washing my face, I do my usual, final email check before going to sleep. Clients love to email at the end of the night, and I hate waking up to situations I didn't know about.\n\nMost of the emails are from my team, giving me updates from the day. But the newest email is what catches my eye. It reads:\n\nSubject: E. Tech Proposal Kick-Off\n\nI stare at the screen without opening it. It's not even an email, it's a calendar invite for a meeting tomorrow morning. As I click on the email, I can see the others that are invited to the meeting. It's with me, Guy, Michelle Lee, Jackie....and Lauren.\n\nMy stomach explodes in butterflies and knots. Why am I suddenly meeting about Ellison Technologies? That's not even my account. The Seattle office doesn't have anything to do with that account.\n\nFor what feels like the hundredth time today, I can feel my heart rate pick up again.\n\nThis can't be a coincidence. A meeting with Lauren and other leads about Ellison Technologies? My hand itches to text Lauren and ask if she knows anything but she's on a plane and that feels inappropriate now.\n\nDid her ex somehow find out about me? I shake my head at that thought. There's no way anyone knows about what happened between us.\n\nThe part about a proposal is also confusing. What does that have to do with Ellison and our Seattle development team? We don't handle Southwest business growth.\n\nI know I should go to sleep, but despite how tired my body is, my mind is now a mess of thoughts and questions.\n\nIt's probably a good sign that the meeting isn't with HR. Guy and Michelle both being there implies this is business related. But there's just too much confidence for it be anything good.\n\nI almost want to text Jackie, but I don't want to get into the whole conversation about Lauren again and Jackie has a \"no work past 9pm\" rule. That's the bright side of not having clients. Jackie is a central resource so her main responsibility is towards out internal team. She probably hasn't even seen the meeting invite yet.\n\nInstead I open my phone browser and type in \"Olivia Ellison.\" More search results come up than I was expecting, and I instantly regret my decision to look. But at this point, I can't look away.\n\nOlivia Ellison isn't just the heir to one of the largest family fortunes in the country, she's absolutely gorgeous and seems successful in her own right.\n\nOne of the top results is a \"40 Under 40\" article, which features Olivia as the lead-in image.\n\nHer eyes are green like Lauren's, but much darker. Almost like looking into a dense forest. And her striking features are set-off by beautiful raven hair she wears in a tight ponytail in this photo. She has a much fiercer look than Lauren and isn't my type, but I can see the allure with her incredibly full lips and confident gaze. This woman screams money, sophistication and elegance.\n\nI scroll down the article so I can see what's said about her. Reading the blurb doesn't help matters.\n\nOlivia Ellison (Ellison Family Foundation) has proven that she's more than a family name. Starting her career at Brooke &amp; Stone in 2003, this PR maven managed to grow the firm's technology business exponentially while at the helm of some of their most recognizable campaigns. Since then she's taken the Southwest market by storm, consulting for big agency names including Altitude, Smith Corps, and Donnelly &amp; Schneider, most recently winning the coveted annual PR Person of the Year award through the PRSA. Rumor has it she'll be at the helm of a much larger organization soon, and we expect to see great things from her. \n\n \n\nI close the article and go back to the browser. But it's more of the same. There's article after article about Olivia and her family.\n\nHaving worked in PR and marketing for 15 years, I know how the media can spin a story. But right now, I can't seem to find any fault in the woman. All I see are posts about her successful consulting business and her charitable work through her family's foundation.\n\nIt would be so much easier to dislike this woman if there was some scandal I could read about or something dirty her family has done. But while Ellison Tech may not be my client at Altitude, I know enough about them to know that they're generally respected among my co-workers in the Southwest.\n\nIn many of the photos I find of her, she's standing with father, who looks equally imposing, but in just as many, she's standing next to Lauren. It's those photos I spend too much time on. I'm still struck by her beauty every time I lay my eyes on her.\n\nThey make a gorgeous couple and the Austin media outlets seem to adore them together. There's picture after picture of the two at fancy events and parties.\n\nBut in every photo I look at, I can't see the tender Lauren I saw last night in bed. Or the one with the glint in her eye outside the client's office. The two of them look polite with each other, pleasant maybe. But something seems almost wooden about their poses.\n\nAs I look at the clock, I notice it's past 1am and I have to be up early for whatever this meeting is about. I set my phone on my nightstand and lay down on my pillows, which seemed much more inviting before I went down that ill-advised internet rabbit hole.\n\nI close my eyes, forcing myself to go to sleep. Whatever tomorrow's meeting with Lauren brings, I'll handle it then.\n\nI just hope to god it's not a video call.\n\n \n\nChapter 6\n\nIt's a fucking video call.\n\nI should have known when I saw the meeting room change from Guy's private office to one of our video conference rooms. We generally use those for calls with our other offices or when clients are remote.\n\nAnd sure enough, as I enter the conference room, one of Guy's admins is setting-up the video technology, which can only mean one thing since the rest of us will be here in person. Lauren will be on the big screen.\n\nI know I shouldn't care, but I'm instantly glad for the extra time I took on my hair and make-up this morning. I usually do that when I need to feel refreshed and ready for a grueling day.\n\nIt may be petty, but I'm smiling inside at the thought of her seeing me in this particular pantsuit. Lesbians generally love me in this one.\n\nI'm the first one in the room so I take one of chairs in the middle of the table, knowing Guy or Michelle will likely take the seat at the head. I'm engrossed in email catch-up when I see a mug of coffee set in front of me.\n\nI look up to see Jackie leaning against the conference table right next to me, blowing casually on her own mug of coffee.\n\n\"I see somebody came dressed to impress today,\" she says as she looks down at my tight, fitted black blazer.\n\n\"Not really,\" I say as I turn my attention back to the screen. Something about Jackie's teasing tone bothers me. I'm just not in the mood this morning.\n\nJackie seems to get that and simply sits down next to me, opening up her own laptop. After a few minutes of silence, she leans into me and whispers quietly.\n\n\"What do you think this is all about?\"\n\nThe butterflies I had kept at bay until now erupt in my stomach at her words. I asked myself that same question all last night as I was trying to sleep and came up empty.\n\n\"I have no idea,\" I say as I turn to Jackie. She's looking at me tentatively, as if she doesn't know what to say or how to act around me right now.\n\n\"Ems, what's going on? You look a bit tense. Are you worried about seeing Lauren?\" she asks.\n\nI look up at the clock and see we still have five minutes before the meeting starts and it doesn't seem fair that Jackie is going into this completely blind. Suddenly Lauren's request for secrecy seems ridiculous in the face of this meeting. If things were reversed, I know Jackie would confide in me.\n\n\"All I know is that Lauren is married to the daughter of Ellison's CEO. And now they're getting a divorce,\" I tell her in a quick whisper.\n\nJackie's eyes widen, but just as she's about to launch into what was most likely going to be an avalanche of questions, we hear the door on the far side of the room open.\n\nMichelle and Guy both walk in, but the jovial man who made his announcement about the Interplay win and Lauren's move at yesterday's staff meeting, is nowhere to be found. This version of Guy looks like he hasn't slept all night.\n\n\"Hey, you two, thanks for joining us so last minute,\" he says as he takes a seat across the table from us.\n\nHis usually perfectly coiffed hair is disheveled. Michelle joins him on that side of the table, looking equally stressed but much more put together.\n\n\"Lauren will be calling in momentarily so let's wait for her before we begin,\" Guy says.\n\nThere's a moment of awkward silence while we wait for Lauren to call in where nobody talks. Which is odd in itself since there's usually small talk before this kind of internal meeting, but both Guy and Michelle look agitated.\n\nAfter a minute we can hear the console in the middle of the table beep and Guy's admin comes shuffling over with a remote to make sure the video comes in. Lauren's face is suddenly on the screen.\n\nI barely get a proper look at her before I turn away from the screen to look at Guy and Michelle. That's the only way I'll get through this meeting. Avoiding looking at the screen as much as I can.\n\n\"I guess introductions aren't needed here. You all worked closely together this week,\" Guy says.\n\nI can hear Jackie give a small cough next to me and I have to stop myself from kicking her chair. I still keep my eyes from the screen, which may look weird, but I'm just not prepared to see Lauren that big.\n\n\"I'll get right to it then. We received a Request for Proposal late last night from Ellison Tech and we're bringing you two in to lead the pitch process,\" Guy says.\n\nA million questions enter my brain and my resolve to keep my eyes from the screen is broken the second the words leave his mouth. I quickly snap my head to look up into Lauren's face.\n\nLike Guy, she looks like she hasn't slept much, but unlike Guy, she still looks stunning in her crisp, white button up shirt. The top two buttons are undone, and I have to stop myself from letting my gaze land on the soft, tan skin there. It's even harder stopping my mouth from watering at the sight.\n\nDespite the fact that she's been traveling, her hair looks as shiny and styled as if she had spent the morning at a salon. But her eyes don't hold the same mischievous glint I've come to associate with them. It's her eyes that show just how exhausted she is. The same sadness I saw in the parking garage yesterday is resting just under the surface of her stoic face.\n\n\"I'm a little confused. Why would an RFP for Ellison be sent to this office?\" I ask.\n\n\"Technically it wasn't,\" Michelle says. \"It was sent to our west coast development team since our offices have the largest technology practice. Lauren and I came together late last night with the leads in LA and San Francisco to discuss who makes sense to lead this pitch. We decided you two make the most sense given your background in both winning new business for Altitude and the technology space.\"\n\n\"Wouldn't the Austin office still be involved since they handle all Ellison business? This feels like we're stepping on their toes a bit.\" Jackie asks.\n\n\"Not for this one. Ellison has some specific stipulations,\" Guy says carefully.\n\nSomething about his tone makes me nervous. Everything about this feels weird.\n\nI look up at the screen to Lauren, who has been uncharacteristically quiet so far. In my experience, Lauren is usually the one to take the lead in meetings. And considering her new, regional role, she's technically senior to both Guy and Michelle.\n\nBut Lauren merely gives me an intense look as Guy and Jackie continue talking. Her frown deepens as we continue looking at each other and it's not until I feel a kick of my chair from Jackie that I'm able to shake myself from what probably looked like a corporate staring contest.\n\nI turn back to the conversation in time to hear Guy explain Ellison's guidelines.\n\n\"Anyone involved has to sign a non-disclosure agreement. We won't even be given product details until we do that. They'll get a list of who's signed. Nobody who currently works on Ellison business can be in on this.\"\n\nI don't even know where to go with my next question. I have so many and my mind feels like it's moving too fast for my mouth. Ever since I found out about Lauren's marriage, everything feels like it's getting out of control. I'm suddenly being brought in to pitch the very woman Lauren didn't tell me about?\n\nLuckily Jackie isn't in the same emotional turmoil as I am and seems equally confused by the situation unfolding itself in front of us.\n\n\"I think it's safe to say the both of us are a little confused about this whole thing,\" she says to Guy and Michelle. I've noticed that Jackie has barely looked up at the screen to Lauren.\n\n\"I get it,\" Guy says. \"We had no idea this would be coming in last night. But this project is as high stakes as it gets for us. It could impact every retainer we have with them.\"\n\n\"What do you mean?\" I ask.\n\nFinally, I hear Lauren's authoritative voice chime in. I take a moment to sip my coffee before looking over at the screen. Watching Lauren speak is as sexy as watching most women take off their clothes. It's so low and commanding and I hate the way she still affects me.\n\n\"The Ellison family care about optics. It's why they've done so well through the years. Altitude is their Agency of Record and rightly so considering our size and experience. We're in that contract for another year and a half for Ellison Tech, Ellison Finery and the Foundation. They won't just fire us without a reason, it would be their own PR nightmare. So they're opening up the playing field to our competition.\"\n\n\"Whatever agency wins this business, they will most likely be awarded the other retainers once our contract is up,\" Michelle says next.\n\n\"Do we know what the product is?\" I ask.\n\n\"It could be something related to expanding their cloud services,\" Lauren says. \"Or It could be something bigger like an AI product, which they've been rumored to be working on.\"\n\nThere's a beat of silence as both Jackie and I just sit there, looking across the table. Finally, Jackie says what I've been thinking since I received the meeting invite last night, but definitely didn't have the courage to bring up.\n\n\"Why aren't we addressing the real elephant in the room? Or will that be in the NDA?\" she asks.\n\nI've always admired Jackie's talent of getting straight to the point without pissing off her superiors. People here tend to give the creative leads more leeway in behavior than if you're on the client services or development team, where you're expected to be more buttoned up.\n\nI avoid looking at the camera and turn my eyes to Guy and Michelle on the other side of the table.\n\nGuy gives what he probably thinks is a casual smile, but just comes across as a bit strained. \"What elephant is that Jackie?\"\n\n\"That Lauren is married, or was, married to the client. That elephant, Guy\" Jackie responds with a simple smile of her own. She's still avoiding eye contact with the screen.\n\nWhen Guy and Michelle don't respond and purely give each other a small look, I decide to jump in. Jackie's combative tone is making me nervous and I really don't want to give anything away to Michelle and Guy about my relationship with Lauren.\n\n\"It's not a huge secret. And it's easily found if you use Google,\" I say in a less aggressive tone than Jackie is taking, hoping they'll just move past the fact that Jackie had no way of knowing Lauren's marriage is ending.\n\nI don't know what Lauren has told them, but I assume she hasn't mentioned anything about me. I've been in the agency world for long enough to know that Michelle and Guy are not just going to come out and tell us everything. They'll assume we don't know anything more than whatever it is they tell us. Jackie is making it hard to keep up that fa\u00e7ade.\n\n\"We're no longer together. But my past relationship won't affect your workflow,\" Lauren suddenly says, and all of our heads turn to the screen. Her face is unreadable.\n\nIt's obvious that Lauren, Guy and Michelle all decided not to discuss the personal aspect of this with someone as junior as a Vice President and a Senior Designer. Despite the fact that we're only in this situation because of the personal relationship between Lauren and Ellison.\n\n\"Lauren will be able to advise from afar, but she can't bill her time to the development retainer, she can't be in the room, and she can't be given details that betray the NDA,\" Guy says, obviously trying to steer the conversation off the subject of Lauren's marriage.\n\nGuy and Michelle treating us like children is infuriating. They should just be transparent about the fact that this is just a long game for Ellison to eventually fire us from all their business.\n\n\"But it doesn't seem like we're in a great position to win this right?\" I ask, not able to hide a hint of anger from my voice.",
        "I asked the question even though I know the answer. Of course this is some kind of set-up to fire us from the business. I've never heard of a client doing something like this when they already have an agency of record.\n\nThis is about Lauren. And maybe she was right about Olivia. Because this is a pretty clever way of finding a rock star new agency, while making the optics of firing your old, loyal agency much less unethical.\n\n\"Altitude is the largest agency in the country and one of the global leaders. There are no other agencies at our level in the Southwest. Ellison can't just fire us because of a personal issue,\" Lauren adds a bit defensively.\n\n\"But they can create a fake contest and fire us because of that?\" Jackie shoots back, finally staring Lauren down on camera.\n\nJackie's never been one to back down to anyone based on title and stature in the company and it seems even Lauren Callahan doesn't scare her.\n\n\"It's not a contest and it's not fake. It's a pitch, just like any other,\" Lauren says with steel in her voice. \"We may not have known that we wouldn't automatically get the new business, but we did know they had been working towards something big. If we create the best pitch, the best strategic thinking, we can still win this. Olivia and Richard won't be the only deciding factors.\"\n\n\"So, what now?\" I ask, trying to relieve some of the tension between Jackie and Lauren.\n\nI have no logical reason to need them to like each other, but since Guy and Michelle seem to be at a loss as to how to handle this meeting, I feel like I need to move us along.\n\n\"Now you sign your life away,\" Guy says smiling at us as he slides over NDAs. Normally I would appreciate his attempt at levity, but right now my mind is a mess of questions and dread about what we're getting ourselves into.\n\n\"And then?\" I ask.\n\n\"And then we have a kick-off as a team. You won't be alone. We'll assign two members of the development strategy team to help with research and things like that. They'll sign an NDA as well. Once we have the details, you'll be mainly working out of Anchor to keep things confidential and away from the rest of the office,\" Guy says.\n\nAnchor is the largest conference room in the office. Each Altitude office names their conference rooms based on features of that city. Most of the Seattle rooms have some aquatic or mountain theme. Luckily the room we'll be in has a gorgeous view of the water.\n\n\"There's not much more we can do until we get the actual proposal from them and know more about the process. Historically Ellison has two rounds of in-person pitches, so we expect numerous trips to Austin for that,\" Guy says as he begins to shuffle his papers together.\n\n\"I'll leave Michelle to witness your signing of the NDAs and she'll send them on to Ellison today. Lauren, we'll see you next week!\" he adds excitedly, as if she's not coming because she's basically being run out of her own city.\n\nI find myself looking up at the screen one last time. Lauren is looking directly at me and says, \"I look forward to seeing you.\"\n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nJackie has another meeting, so she leaves as soon as we finish up with Guy and Michelle. No doubt she'll be barging into my office once she's done to discuss what just happened.\n\nI keep my Friday calendar fairly clear, so my day is light with meetings. It gives me a chance to catch up on all the work I missed while I was in meetings all week or focusing solely on a pitch.\n\nAs I sit down at my computer, I can feel my stomach clench at the prospect of what I now need to do. Guy and Michelle will figure out a way to take most ongoing projects off my plate, but there's still a lot of administrative things I need to figure out since I was due to be in a handful of pitches over the next few months.\n\nBefore I can get deep into anything, I hear the phone on my desk ringing. I look down and can see, \"L. Callahan,\" flashing across the screen. I consider not answering it for a moment\u2014 she doesn't know if I came back to my office after all, but the fact is, we do need to talk.\n\nI don't even bother saying hello.\n\n\"I can't believe you put me in this position.\"\n\n\"I love your pantsuit,\" she says as if I had greeted her in a friendly manner.\n\n\"Lauren.\"\n\n\"I'm not sure I know what position you mean. The one where you have the opportunity to win Altitude one of the biggest pieces of business the Seattle office has ever seen?\"\n\n\"Cut the crap, Lauren. There are plenty of development leads that could pitch this. Why did you put me on this?\"\n\nThere was silence on the line for a moment and I'm pretty sure I can hear her sigh slightly. I'm not sure if she was expecting some big thank you from me, but this entire situation feels like one big mess that could have been avoided if I had just gone home that night instead of to my office with this infuriating woman.\n\n\"No, Emma. You're wrong. You are the only person who I think has the chops to handle this. Whatever you may think about me, I've seen you from start to finish on a pitch and you're the only one who can get this done.\"\n\n\"You know we're set-up to lose this,\" I say back angrily.\n\n\"Not necessarily. Ellison Tech is a global conglomerate. Olivia and her father hold a lot of power, but not all of it. They have stakeholders. A board. Investors. People who won't let Olivia burn down the castle because she's mad. Altitude has proven their worth to Ellison. She's just doing what she can to get the upper hand.\"\n\n\"And now I'm a pawn in your divorce. Wouldn't this be easier with someone you don't have a history with? Considering who we're pitching?\"\n\n\"I wasn't flirting this week when I told you that you won us the Interplay business. You are exceptional. Better than I am. If there's going to be someone to pitch this business, it needs to be you. You won't have any contact with either Ellison until the pitch. And that's just a show, like any other pitch, Emma.\"\n\n\"Jackie knows,\" I say.\n\nThis time I can definitely hear her sigh. \"I gathered that based on her attitude during the meeting. I chose her because of her work on Interplay. But I can find another creative lead if you think it will be a problem.\"\n\n\"It won't. Jackie is a professional. And she is the best. If I have any shot in hell of getting this done, I need her.\"\n\n\"And me? Will you need me Emma?\"\n\nHer voice sounds sultry, almost arrogant and my body betrays me by letting out a shudder. The anger I felt yesterday isn't as potent, but It wouldn't take much to push me over the edge again.\n\nIt doesn't matter that Lauren left her wife. I was still a complete rebound that didn't know she was a rebound. And now my new boss is my ex-lover.\n\n\"Considering your close ties to the account, I'm sure your advice will be invaluable, Lauren. Thank you for this opportunity of a lifetime,\" I say back with more snark then I meant to infuse into my tone.\n\n\"Emma.\"\n\n\"Look, we have to work together. Not just on this, but ongoing. Let's just keep this professional. I need to focus on how we're going to convince your ex-wife not to give away the millions of dollars that come to this agency. And I need your help to do that.\"\n\n\"And you really think we can just be professional?\"\n\nLauren's voice is low, but it doesn't sound like she's trying to be quiet. It has the same husk I've heard before and I can't do anything but clench my legs together.\n\n\"Putting aside everything else, you're my boss now,\" I say as I lower my voice even more.\n\nThe door may be closed, but I still feel like I need to be careful talking like this while people are working on either side of my office walls. I don't have the luxury of Lauren's most-likely massive EVP office.\n\n\"No. I'm Michelle's new boss. Michelle is still your boss. It would be inappropriate for an EVP to manage a VP,\" she says dismissively.\n\n\"Oh, that's what's inappropriate Lauren?\"\n\n\"I hate when you say my name like that.\"\n\n\"Like I'm your co-worker?\"\n\n\"Like you hate me.\"\n\nI pause at that. Part of me wants to just confirm her suspicion. This whole thing would be easier if I could just hate her. For lying to me. For putting me in this stupid situation. But I don't hate her. I hate how she's made me feel.\n\n\"I don't hate you,\" I say quietly. \"I'm just. I'm just so mad at you. You've really put me into a shitty situation here.\"\n\n\"You can do this. I promise you. I know how Olivia's business works. She has so many more people to answer to than just herself. And yes, she will do what she can to sabotage us. But I have my own connections with her board and some ideas I don't think she would ever see coming. Just, trust me, please.\"\n\nI want to believe her. That she has some recipe up her sleeve to fix this and help me win. But I also know better. This is a no win for me. I'm being set-up to fail and my impending promotion feels like it's slipping further and further away.\n\n\"I don't know if I can do that.\"\n\n\"This is just another Interplay. Forget about who's going to be behind the table. This is what you and I do best. We win pitches. Let's just figure out how to win this one.\"\n\n\"This is so much different than Interplay!\" I say and I have to take a breath because I can feel my anger rising again.\n\nIt wouldn't be so bad if she wasn't acting so blas\u00e9 about the whole thing. She's acting like I was handed a golden egg on a silver platter and not what it is in reality\u2014 a disaster pitch waiting to happen.\n\n\"It can be, Ems. We played well together once, we can do it again,\" she says, and I can hear the faintest bit of husk in her voice.\n\n\"This isn't Interplay. Things are different.\"\n\n\"They don't have to be,\" she says and now I can hear a definite husk in her voice. I hate how much my body responds to it.\n\n\"Lauren,\" is all I can say back.\n\nI can't do this with her in general, but especially not right now while I'm at the office trying to shift around my entire workload.\n\n\"Now that is how my name should be said,\" she says back.\n\n\"Stop it. Now.\" I catch myself before I say 'please' to her. I can't give her the satisfaction I know that word will elicit.\n\nThere's a beat of silence on the phone before she speaks. When she does, her voice sounds much more like her professional self than before.\n\n\"It wasn't just the Interplay pitch that caught my eye. Remember this week when I told you that I'd heard a lot of good things about you?\"\n\nOf course I remember that moment. It was right before she asked me if I was a bottom and fucked me in this very chair. I can't help but squirm a little as I sit there, remembering all the moments of that night.\n\n\"I figured you were just trying to get laid,\" I say back in a neutral tone, trying not to betray the fact that I'm squeezing my legs together even tighter.\n\n\"Well I wasn't,\" she says firmly. \"I've been working with the leads on the west coast for months now, preparing for this move. I've seen the numbers and the busines we've won over the past two years. There's one name at the top of each of those proposals. Your name. I knew more about you than you can imagine before I got here. I was already a fan girl, Emma.\"\n\nAll I can do is let out an audible sigh into the phone. I want to believe her words so much. And part of me is flattered. Despite everything that has happened, and the fact that we'll probably lose the Ellison retainer because of her, Lauren is still the most impressive person I've met at Altitude. Her validation of my professional talent means something.\n\nAnd I desperately wish that this was just another pitch for me. But it's not. This is a Hail Mary to save an account that is doomed and was the second Lauren decided to leave her wife.\n\nThinking about that causes something Lauren said in our meeting earlier to pop into my head.\n\n\"You said during the meeting that Ellison must have been working towards this product for a while. When did they decide not to automatically hire Altitude?\"\n\n\"I honestly don't know. But the timing seems suspect. She wouldn't have been able to come up with this plan in the two days since she's been served. From what we've gathered, some of the agencies involved have known for a while. We were the last to be told.\"\n\nWhen I don't say anything, she continues. \"Look, there's so much I want to explain. But not like this. Please see me. I'll be there on Wednesday. Michelle will be setting up an official kick-off for the new team. I can't be in that because of the NDA, but I'll be there to advise how I can.\"\n\n\"Wednesday?\"\n\nLast night she said she'd be here in a week, and even then, I figured it was for a quick trip before going back to Austin. Usually office moves across the country take a few months. But it seems nothing is normal in this situation.\n\n\"Ellison's move has shifted my timeline. I have no reason to stay in Austin and it's better for Altitude if I don't. Guy's unplanned announcement yesterday didn't help. Word got back to Austin pretty fast.\"\n\n\"You mean Olivia's move. Word got back to Olivia.\"\n\nI internally cringe at my words the moment they leave my mouth. Not only do I sound petulant, but I'm the one trying to keep this as professional as I can. Olivia and Lauren's relationship shouldn't matter to me. I need to focus on the account itself. Somehow, I need to find a way to make Altitude indispensable to Ellison.\n\n\"Let me take you to dinner,\" Lauren says brushing over my comment without even acknowledging it.\n\nThis woman is infuriating.\n\n\"As co-workers?\" I ask knowing very well what her answer will be.\n\n\"No,\" she says back.\n\n\"Then, no.\"\n\n\"And if I agree to keep it to just a friendly co-worker dinner?\"\n\nI look at the clock on my computer and see that it's not even 10am. I can already feel a familiar pressure forming behind my eyes. Something that always happens when I feel stressed and overwhelmed.\n\n\"Let's just see how things go after the kick-off,\" I say. \"I need to go, I have a meeting.\"\n\nI usually hate lying, even little ones, but I need to get off this call before I agree to something that I shouldn't.\n\n\"Emma?\"\n\n\"Yes,\" I say back in almost a whisper. Every time she says my name like that, I'm scared of what will come next.\n\n\"I haven't been able to stop thinking about you. Have dinner with me.\"\n\nI don't say anything, and she just waits. I can feel my heart racing after hearing her words. After everything, I can't deny that I still want her. I can't go there again, especially now we're in this mess at work, but it doesn't stop the blood from rushing to my head in want.\n\n\"I'll see you Wednesday, Lauren.\"\n\nI force my hand to hang up the phone before she has a chance to wear me down with another declaration or invitation.\n\nThere are very few things I have clarity on this morning, but one thing is absolutely clear\u2014 my body still aches for Lauren. Her eyes, her voice, everything about her presence makes me shudder with want.\n\nAnd that's why dinner is absolutely out of the question. I know exactly where dinner will lead. My disloyal, traitor of a body would see to that.\n\nThe weeks ahead of me are going to be a grueling test of agency survival as it is. I need to focus on the impossible task of helping Altitude retain one of our biggest accounts and win Ellison's new business in the process.\n\nThis morning when I woke up all I thought I had to do was move on from Lauren's insane allure and get my SVP title. The goal has changed a bit, but I still need to focus on that. And maybe Lauren is right. Maybe this can be done.\n\nI mean how hard can it really be to convince my boss slash ex-bedmate's soon to be ex-wife to not fire us?\n\nAs the overly complicated question rolls through my head, I already know the answer and all I can do is slam my head down on my desk. Fuck. \n\n~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\n\nI'm on glass number two when I hear my apartment intercom buzz. I've spent the last twenty minutes looking for something on TV to numb my mind but can't seem to concentrate on anything. As I get up to let Jackie in, I can already feel the effects of the champagne go to my head.\n\nI unlock the door after pressing the buzzer so Jackie can just come in once she's ridden the elevator up to my floor.\n\nI go to the kitchen and grab a second glass. I don't have the ingredients to make her go-to Manhattan, but I know she doesn't really care what she drinks as long as it's not water. In fact, I don't think I've ever seen Jackie drink water.\n\nJackie comes in as I'm heading back into my living room and she throws her coat and shoes off, leaving them on the floor like she owns the place. I have to chide myself for thinking about Lauren's reaction to clothes so haphazardly thrown about.\n\n\"Oh thank god, I hope those are both for me,\" she says as she grabs one of the glasses out of my hand and takes a long sip with her eyes closed. \"I needed that,\" she breaths out and hums.\n\n\"Apparently,\" I say as I move to the couch. \"But I'm afraid to say, this glass is mine, you lush.\"\n\nJackie moves over to the couch and plops down, throwing her head dramatically backwards onto the back as she does.\n\n\"You're right. You need that drink more than I do. What the actual fuck just happened today?\"\n\nI take a sip before answering. I'm beyond tired, but I couldn't say no to Jackie when she asked to come over for a quick drink. It might be good to talk this out with someone other than Lauren.\n\n\"Our new boss left her wife, who's our client and that client now wants to fire us. You and I are the Wonder Woman and Super Girl of saving the account. Oh, and I fucked said boss. I think that covers it?\"\n\nJackie sits up slightly. \"Wait. Who am I? Wonder Woman or Super Girl?\"\n\n\"Wonder Woman, obviously. I'm blonde.\"\n\nShe scoffs. \"I don't think hair color should define what superhero we can be. You have Wonder Woman energy.\"\n\n\"Beyond the fact that you saw the movie in theaters a million times because of Gal Gadot, what do you actually know about Wonder Woman?\"\n\n\"First of all, I saw it twice in theaters. Secondly, nothing. But Gal Gadot looks too much like me. I don't want to fuck myself. Unless it's my vibrator doing it,\" she adds.\n\n\"I'm pretty sure you just complimented yourself,\" I tease back.\n\n\"And you. I said I'd rather fuck you than myself too.\"\n\nI've always appreciated Jackie's openness about sex. There are very few topics she shies away from. But there are also times she makes subtle comments about being attracted to me and I can't tell if it's a joke or real.\n\nWe haven't been romantic in more than two years and I hope she doesn't still feel anything because our friendship really does mean a lot to me. Working the job that I do, it's often hard to find friends who understand the hours I put in and the travel I have to do for pitches.\n\nBut I've also noticed that Jackie has been a bit more bristly than normal this week, and it's usually any time Lauren comes up.\n\n\"Refill?\" I ask moving off the couch to get the bottle of champagne. For some reason Jackie's behavior is making me a little nervous and I'd rather not talk about sex.\n\n\"Please,\" she says.\n\nShe raises her voice slightly as I leave the room so I can still hear her talk. \"I still don't get why Olivia Ellison doesn't just fire us. I mean, that's what I would do if I was a billionaire and my wife left me for some floozy.\"\n\n\"Am I the floozy here?\" I ask as I come back to the living room and sit back down on the couch. I pour us each a healthy portion. \"What even is a floozy?\"\n\n\"I don't know,\" she says and takes a sip. \"But you're definitely the floozy in this situation.\"\n\nI move on from the floozy comment since I know Jackie and soon, we'll be on Google looking up the exact definition if I don't. And I already know I'm not a floozy. Whatever that is.\n\n\"Anyway. I can only guess that she can't fire us from our contract without some kind of legal ramifications. Not to mention it might look bad as the first move as new CEO to fire the best firm in the country because you got dumped,\" I say.",
        "Jackie narrows her eyes slightly at me as she takes another sip. \"Is someone feeling a little defensive of Lauren now?\"\n\n\"No. I'm just trying to make logical sense of all this. And the fact is, if I were Olivia, the best way to ethically stick it to my ex would be to give away a multi-million-dollar piece of business to someone else. Clean and easy. No lawsuits or features on Page Six.\"\n\n\"I don't know. I think I'd just fire my ex,\" Jackie says.\n\nThere's a moment of silence where we both sip our wine before Jackie smiles at me. \"So.... what does this Olivia Ellison look like? Hot as Lauren?\"\n\n\"No,\" I say much too fast, causing Jackie to raise one eyebrow. \"I mean, she's beautiful. But a little intense looking.\"\n\n\"Mmhm. Or you just have a fatty crush on her wife.\"\n\n\"Ex-wife,\" I say again too quickly.\n\nJackie doesn't tease me this time. Now she's giving me a quiet, serious look.\n\n\"Ems, you can't sleep with her again. This pitch will be hard enough for you, for us, knowing it's probably just a set-up to fire us. We can't get involved in the personal side of this. You know that right?\"\n\nShe places her hand on my leg and squeezes lightly.\n\n\"I know that,\" I say. \"I'm not interested in her anymore. This situation killed that.\"\n\nAs the words leave my mouth, even I can tell they don't hold much conviction.\n\nThe last thing I'm going to do is tell Jackie that I've already gone there with Lauren again. In the shadows of our office building no less. But I have a feeling she'll give me an even bigger lecture if she knows that I didn't just give in to Lauren again after finding out about Olivia\u2014 I instigated sex with her.\n\nJackie doesn't call me out on anything though. She simply squeezes my leg again and moves to get up off the couch.\n\n\"I told Sarah I'd meet her for a drink at the Rose. You want to join us?\" She moves over to the door and begins to put on her shoes. I move over to her coat and pick it up off the floor for her.\n\n\"No, you go ahead. I'm exhausted from the week. Tell Sarah hi for me.\"\n\nOnce she has her coat on and is at the door, she stops before leaving and turns around.\n\n\"You're coming out with me soon, ok? You need a life besides work, Ems.\"\n\nI give a harsh laugh at that. \"Jackie, I don't think either of us will have a life for the foreseeable future.\"\n\nShe moves over and pulls me into a hug. \"We've got this. I mean, I don't know that we do, but I'll be there with you the whole way. Okay?\"\n\n\"Ok,\" I say as I bring my arms up to hug her back. I can feel her push her body more fully into mine as she moves her face, so it's turned slightly into my neck.\n\nWhen I think I can feel her inhale slightly, I move backwards as gracefully as I can, not allowing the hug to go on any longer. As I pull away and look at my friend's face, I can see a glimmer in her eyes that looks hopeful. She gently pushes my hair behind my left ear.\n\n\"Jackie..\" I say quietly.\n\nBut she cuts me off with a quick smile that feels bit forced and tight.\n\n\"I'll text you tomorrow to make sure you didn't get married to your couch,\" she says in a teasing way, but the tone still doesn't hold her usual lightness.\n\nAnd with that she leaves my apartment. I stand at the door for a moment after she goes. I'm relieved I didn't have to let Jackie down tonight, but more than a little worried that I might have to eventually.\n\nWhich is probably stupid. Jackie and I could probably be good together if we tried again. There just wasn't enough passion for me last time. And now that I've been with someone like Lauren, I don't know that there ever could be.\n\nI'm putting the glasses in the dishwasher when I hear my phone buzz by me on the counter and I'm almost scared to look at it in case it's something from Jackie I don't want to address.\n\nAs I clean up my kitchen, I try to ignore both the phone and the small kernel of hope growing in my stomach that maybe it's not Jackie, but another troublesome woman.\n\nI shake my head at myself for even thinking that. I know I should just be mad at Lauren, and I am, but I also can't stop thinking of how beautiful she looked on our call today.\n\nI move back to the couch with my phone and only once I'm settled into the cushions do I allow myself to look at the name on the screen. Lauren.\n\nMaybe I'm growing a sixth sense for when she's texting. Or maybe I have no life and Lauren and Jackie are the only people who text me.\n\nI pick up the remote and pretend to look for something to watch, forcing myself not to open the text right away. Somehow this makes me feel like I have a semblance of control. But after aimlessly scrolling through movies, I finally throw down the remote and pick up my phone.\n\nLauren: Are you up?\n\n \n\nI could easily just ignore her. I ignored her texts last night without a second thought. I could be out at a bar or club. It is a Friday night after all. But like so many other moments I've had with Lauren, I go against that inner voice of reason and my fingers move to my keyboard.\n\nMe: It's 8:30. I'm not that old.\n\nLauren: No? Then tell me what you're wearing. \n\n \n\nLauren's reply comes immediately. And if I hadn't had the phone call with her earlier, I would have been shocked that she's flirting. But Lauren Callahan apparently doesn't back down and that tail she had between her legs yesterday in the parking garage is now confidently back at attention.\n\nMe: None of your business.\n\nLauren: Fine fine. I'll just use my imagination.\n\n \n\nI have a small smile on my face despite myself. I don't have a chance to respond to that, not that I knew what to say anyway, before she texts again.\n\n \n\nLauren: Italian or French?\n\nMe: ...what?\n\nLauren: For dinner on Wednesday. Do you prefer Italian food or French? I need to know what kind of place to reserve.\n\nMe: Except I never said yes to dinner.\n\nThere's a longer pause this time before she responds. I can see the message dots reappear a few times before her next text comes in.\n\n Lauren: I think you want to say yes. \n\nEmma: You are so cocky.\n\nLauren: Not tonight. But that's something I can arrange if you're into it.\n\n \n\nI roll my eyes even though she can't see it. Lauren has a special talent for innuendo.\n\nMe: You're impossible.\n\nLauren: Perhaps but you're also flirting with me.\n\nMe: How am I flirting?\n\n \n\nI know she's right. I can feel the smile back on my face and I do what I can to block out Jackie's warning and my own logical brain telling me to end this conversation.\n\nLauren: You're still talking to me aren't you?  \n\nShe sends a wink face emoticon before sending another quick text.\n\nLauren: You still haven't answered my question on cuisine. Perhaps a diner with pancakes sounds better?\n\nLauren texts exactly the way she speaks. Almost formal in her cadence, but with a subtle confidence. It's hard not to get sucked in.\n\nI close my eyes for a few moments as I lean my head back against the couch. Lauren is relentless and I wish I could say I hated it. I wish I could just go to bed, make it to Wednesday, keep my head down and get my work done.\n\nBut every time I see her name flash across my screen and my body shudders with excitement, I know that shaking off my desire for Lauren won't be that easy.\n\nI pick my phone up and text her back feeling bolder than before and needing a real answer. Not this superficial banter.\n\nMe: Why do you want to have dinner with me so bad? \n\nLauren: Because I like you Emma. \n\nI can see she's typing so I wait.\n\nLauren: And there's more to say. About everything.\n\nMe: You mean about your stupidly gorgeous ex-wife?\n\nI regret typing that as soon as my finger hits send. Not only does it sound jealous, but it stops the quick back and forth banter at once. Which I shouldn't care about, I tell myself.\n\nI'm about to set my phone back down when I see Lauren's name flash across the screen, but this time in a call, not a text. I can feel my stomach drop and my hand shakes slightly as I stare at the name. Slowly, as if it might bite me, I press the answer button.\n\n\"Hi,\" I say as I put the phone to my ear.\n\n\"Hi,\" she says softly.\n\nThere's a beat before she speaks again. Her voice is low and I'm suddenly picturing her lying in bed in a dark room as she speaks to me. I wonder if she sleeps naked like she did at The Four Seasons or in pajamas or lingerie. I'm guessing lingerie. No. Stop. No guessing about that.\n\n\"Do you remember our first meeting this week?\" she asks.\n\nOf course I do. Lauren was already notorious at Altitude and she breezed into the room that day fitting every image I had of her, smelling and looking like the epitome of sex.\n\n\"Yes,\" I say back quietly.\n\n\"That's not the first time I saw you. I had gotten into the office early from the airport. As I was making an espresso in the kitchen, I saw you get off the elevator.\"\n\nShe lowers her voice slightly. \"Red blouse, black skirt, unsuccessfully innocent ballet slippers. Your beautiful blonde hair falling into your face as you tried to carry your bag and coffee. You looked sexier than anything I've ever seen. And I was so distracted, I bumped into one of the office's interns and got a chest full of strawberry yogurt and granola.\"\n\nI can't help but let out a small laugh at what she just revealed. It's hard to believe I could ever drive Lauren to clumsiness, but the image of an intern ruining what was most likely an expensive outfit of the one and only Miss Callahan was too good.\n\n\"I'm sure that intern thought they were fired,\" I say.\n\n\"Close. Luckily, I had my suitcase. After seeing you, I switched to the outfit I had reserved for the pitch. Because I wanted to impress you. Because you're stupidly gorgeous, Emma.\"\n\nI'm now coming to associate this dizzy feeling in my head to the after effect of things Lauren says to me.\n\nI do my best to not let her hear my breath hitch at her last words. Lauren is smooth and I have to remind myself that she works in PR and to tread lightly. If there's anything Lauren can do, it's be persuasive. I know, because I play the same game.\n\n\"You're going to an awful lot of trouble to get me to say yes to dinner,\" I say back.\n\n\"Is it working?\"\n\nI smile into the phone. She's infuriating but Lauren can't help but be charming.\n\n\"Not yet, but you can keep trying.\"\n\n\"I accept that challenge.\"\n\n\"I'm absolutely going to regret saying that.\"\n\nAnd we're flirting again. I need to end this call before I give into that low, sexy voice. The small laugh she lets out seals the deal and I know I have to get away from her voice immediately.\n\n\"I should go,\" I say over her laugh.\n\n\"Hot date?\" She asks teasingly but think I can also hear a hint of seriousness behind the question.\n\n\"With my couch. She's not really my type, but emotionally we really click.\"\n\n\"You and your couch click? I see. What's her name?\"\n\n\"Couch.\"\n\n\"How original. I'd like to meet Couch. See what I'm up against.\"\n\n\"I haven't even said yes to dinner yet.\"\n\n\"But you will say yes.\"\n\n\"I'm going now, Lauren.\"\n\n\"Emma.\"\n\nI don't say anything, but I also don't hang up yet. Mainly because my heart is racing at the way she says my name. The way she always does when she's about to say something important.\n\n\"I've never spooned...or held a woman for an entire night. Not even Olivia. Just you.\"\n\nI'm instantly thrown back to her hotel bed. The gentle way she held me all night, lightly caressing my hair when she would wake, kissing the back of my head and pulling me in tighter. I can't remember the last time feeling that good with a woman.\n\n\"Italian,\" I say quietly as I hang up the phone.\n\nI shouldn't have said that and agreed to whatever I just agreed to. But Lauren's words roll around my head like some intoxicating sonnet and I don't know how much longer I can keep being angry before my body wins out.\n\nI need to know more about what happened with Olivia. Maybe that will provide some clarity.\n\nAnd what's the worst that could happen over a plate of pasta?\n\n \n"
    ],
    "authorname": "FemmeyFemmeFemme",
    "tags": [
        "bdsm",
        "dominance",
        "erotica",
        "hot",
        "lesbian",
        "office",
        "romance",
        "seattle",
        "sex",
        "submission"
    ],
    "category": "Lesbian Sex",
    "url": "https://www.literotica.com/s/miss-callahan-ch-05-06"
}