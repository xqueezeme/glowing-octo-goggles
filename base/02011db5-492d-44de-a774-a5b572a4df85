{
    "title": "Dented Ch. 03",
    "pages": [
        "Another huge THANK YOU to Lovefreely1993 for helping me edit this and helping me figure out how to keep this chapter more in line with the others. Of course, all the characters in this story are fictional, do not intentionally represent any persons living or otherwise, etc. etc. No animals were harmed in the writing of this. All characters involved in sexual activities are 18+.\n\n*****\n\n\"Well, fuck,\" I said, staring at my sister. She stood naked in the doorway, looking down the hallway towards the other end of the house. Maggie, our once tormentor and now best friend, had fled from our room after being caught spying on us.\n\n\"Yep,\" Jess said, tossing a pair of shorts my way then grabbing a t-shirt for herself. I put them on and followed her towards Maggie's room. \n\nWhen we got to her room, we could hear the sobbing through the door. \n\n\"Maggie?\" I called, knocking on the door.\n\n\"Go away!\" \n\n\"Maggie, can we come in please?\" Jess called back.\n\n\"Leave me alone!\" \n\n\"Maggie? Honey? We really need to talk.\" Jess said sternly, \"And we all know this really can't wait.\"\n\nMaggie didn't respond, so Jess just shrugged and tried the door. Surprisingly, the knob turned and the door swung open.\n\nMaggie sat on the bed, knees pulled up, head tucked between them. Jess calmly walked over to her bed and sat in front of her. I stood beside Jess and tried to look unconcerned. Truth was I was terrified, and my mind raced with the different possible outcomes, none of which were pleasant. Worst case, she'd tell the world and we'd have to lie and say that she was still trying to destroy the family through scandal. Even if we were believed, the stigma would hang over us forever. People would always look at us and wonder. Best case, she'd stay quiet but our friendship would forever be tense and tenuous, balanced precariously on the secret she would hold.\n\nI wanted to throw up.\n\n\"Maggie.\" Jess started, reaching out to touch her knee. When she did, Maggie jerked back a bit, like she'd been shocked by Jess' touch.\n\n\"Maggie, we're not mad.\" Jess continued. It was true. We weren't mad. We were scared shitless. Well, I was anyway.\n\n\"Yeah, right,\" Maggie said sarcastically. \n\n\"What did you see?\" I asked, my voice thicker than I had imagined.\n\n\"The two of you... having sex.\" Maggie sighed in resignation.\n\n\"Yes,\" Jess admitted.\n\nMaggie looked up at Jess, surprised. \n\n\"We're not going to lie to you or try to make up some story.\" Jess took my hand. \"We're in love.\"\n\n\"I know,\" she said, then started sobbing again.\n\n\"How long have you known?\" I asked when she regained some composure.\n\n\"For a while now. Since the night we, you know, kissed.\"\n\n\"Ah. How?\"\n\n\"Afterwards I couldn't sleep. I wanted... I needed to be with you. I thought you might've felt the same way, so I snuck up there. Wanted to surprise you. That's when I saw you two.\"\n\n\"Is that why you've been acting so different lately?\" Jess asked.\n\n\"Yeah. I guess.\"\n\n\"You guess? There's more, isn't there?\" Jess asked as if she knew the answer.\n\nMaggie nodded. \"I...I love him!\" Maggie cried, looking over at me with tears in her eyes. \n\nThere it was. After that night when I'd given her a massage, I was pretty sure I knew what she was going to say before Jess interrupted us. Still, hearing it for the first time was a bit of surprise. Especially in this situation.\n\n\"I know,\" Jess said softly, leaning over and hugging her. Jess surprised me even more with that revelation. Maggie melted into her arms, sobs wracking her body. Jess held onto her for several minutes while Maggie slowly recovered.\n\n\"I'm sorry,\" Maggie said, sitting up and wiping her eyes. I handed her a tissue from a nearby box and she unapologetically blew her nose. \"I thought you would be alone that night. I figured it was now or never. I was so shocked. Then I was angry, scared, then I was sad, but mainly I was just confused.\"\n\n\"Why didn't you say anything?\" I asked.\n\n\"How the hell do you start that kind of conversation?\" she chuckled dryly. \n\n\"But it wasn't a one-time thing, was it?\" Jess asked.\n\n\"...No,\" she admitted, blushing.\n\n\"Okay, how could you know that?\" I asked Jess, trying to figure out how she divined this.\n\n\"Because of that,\" Jess said, pointing at Maggie's ankle monitor.\n\n\"You tracked her movements?\" \n\n\"Nope. Don't think I can do that. But what I can do is see pretty well in the dark. And that thing has a blinking light.\" \n\nI looked at the monitor for a moment, and sure enough, a tiny green LED light flashed occasionally.\n\n\"That's a pretty small light,\" I noted.\n\n\"Yeah, but it really stands out in a dark room when your eyes are dark-adjusted. I saw the flash a couple of times and put two and two together.\"\n\n\"Oh, God.\" Maggie whimpered as she realized that Jess had known for a while now.\n\n\"I didn't know we had an audience,\" I said. Maggie nodded, not looking at either of us.\n\n\"We should have put on a better show.\" Jess joked, trying to lighten the mood.\n\n\"Oh, it was a good show,\" Maggie said, then started crying again.\n\n\"Shhhh,\" Jess said, laying down beside her. \"We're not mad at you, honey.\"\n\n\"Not at all,\" I said, laying on the other side, so Maggie was sandwiched between us.\n\n\"I find that a little hard to believe,\" she said, sounding very small.\n\n\"It's true,\" I said.\n\n\"Relax,\" Jess said, hugging her tightly. \"We're not upset or mad.\"\n\nMaggie lay between us and closed her eyes, I could tell she was trying to calm down while at the same time come to grips with everything that had happened.\n\nWe lay like that for a few minutes as her sniffles subsided. Soon, her breathing fell into the rhythmic pattern of sleep. I looked over, and Jess had fallen asleep as well. All this excitement must've worn them out. I shrugged mentally, then rested my head as best I could and let myself fall asleep along with them.\n\n*****\n\nI woke up the next morning and my arm was completely numb. Maggie was sprawled out me and my arm was trapped underneath her. One of her legs was draped over mine and her body was molded against me. Jess had apparently gotten up in the middle of the night and moved to my other side. She was curled up against me as well, her arm draped across my chest.\n\nAll in all, there are worse ways to wake up.\n\nA stirring beside me drew my attention over to Maggie. She was awake and looking up at me.\n\n\"I'm sorry,\" she whispered.\n\n\"What for?\" I whispered back.\n\n\"For watching you two as much as I did. I shouldn't have.\"\n\n\"So why did you?\"\n\n\"I dunno. I would tell myself every night I wouldn't go, then every night I'd find myself watching.\"\n\n\"We should have made sure the door was fully closed I guess.\"\n\n\"Yeah.\" she nodded slightly as a blush rose across her face. \"But I'm glad you didn't.\"\n\n\"Oh? Why's that?\" I teased.\n\nShe didn't answer that. Instead, she blushed even more and looked away.\n\n\"Not saying anything? Does that mean you...? You know?\"\n\n\"Hush. A single girl has needs.\" We both laughed a little as she shook her head in embarrassment. \n\n\"Every time?\" I asked, my arousal growing at the image of her masturbating to Jess and me.\n\n\"Every. Time.\" she breathed into my ear. \n\nMaggie's leg rose up mine until her thigh brushed against my erection. We both inhaled sharply as her leg pressed into it, and she swallowed hard as she looked at me.\n\n\"I meant what I said last night, Jace. I love you. I have for a long time. I know you don't feel the same way, but I had to say it.\"\n\n\"Oh, Maggie,\" I said, moving a stray hair away from her face. I looked at her, feeling emotions I knew I shouldn't for her, emotions that conflicted with how I felt for Jess. Emotions I couldn't deny. \"I wouldn't be so sure about that.\"\n\nWithout any prompting, she leaned in and kissed me. This time, I kissed her back immediately. Her tongue slid around my lips as she pressed against me, squishing her breasts against my side. After a minute, she broke the kiss and lay back beside me.\n\n\"I had to do that,\" she said.\n\n\"I know. I'm glad you did.\" I said.\n\n\"Me too,\" Jess said, making both of us jump. Maggie let out the breath she'd gasped, then slumped and buried her head against my side. \n\n\"God, kill me now,\" she mumbled.\n\n\"It's okay, Maggie,\" Jess said, reaching over and rubbing her shoulder.\n\n\"No, it's not,\" she said, lifting her head. \"He's yours but for some reason, I can't control myself.\"\n\n\"Listen,\" Jess said as she stood up and stretched. \"Why don't we all get cleaned up? It's been a long night and I think we'd all feel better after some showers and clean clothes.\"\n\nWe both nodded in agreement. Maggie untangled herself from me, and blood rushed into my arm. Pins and needles!!\n\nAs I coaxed feeling back into my fingers, Jess and I left her bedroom and headed for ours. We showered separately, not wanting to aggravate the problem any more than it already was. We met Maggie in the kitchen. She had changed into a sweatshirt and jeans, and the sight took my breath away. She really was beautiful, and I immediately felt guilty for thinking it.\n\nSitting down at the table, we just stared at each other for a few moments.\n\n\"Okay.\" Jess began. \"Spill. No holding back today, okay? This goes for all of us.\" We all nodded.\n\n\"So,\" Jess said gently to Maggie. \"I know you love him. He has feelings for you as well.\" \n\n\"Jess-\" I started to protest, but Jess shushed me.\n\n\"It's okay, baby.\" she kissed my cheek. \"I've known for a while. As I've said before, I know what we have and what we do is unconventional, to say the least. I'm not jealous or upset.\"\n\n\"You're not?\" I asked in disbelief.\n\n\"Not at all.\"\n\nJess took my hand and gave it a squeeze. She gave me a sweet smile, and I couldn't help but smile back. From the corner of my eye, I saw Maggie close her eyes and nod.\n\n\"I'm sorry, I can't do this. I'll call my parole officer Monday morning,\" she said defeatedly. \"See if I can go back to Logan.\"\n\n\"The hell you will!\" Jess and I both exclaimed.\n\n\"I have to!\" she cried. \"What choice do I have?! I'm in love with a man who is completely committed to his sister. And to top it all off, I'm literally shackled to their house and can't leave.\"\n\nShe looked at Jess.\n\n\"Jess.\" Maggie said, \"There's no way I'm going to take him from you, and I can't... I won't ask him to choose me over you. And I can't stay here, because I know you two will try to be nice and stop the 'sexy-time' with each other. But it won't work and we'll just be right back here.\" \n\nMaggie took a deep breath. \n\n\"Besides, I've seen your attacks and how he's the only one who can help. I've also seen how he cares for you. How he'd do anything for you. He will never leave you, and I will never ask him to.\"\n\nShe stood, tears starting to fall from her blue eyes.\n\n\"You've become a sister to me and I love you. I couldn't hurt you if I tried, and taking him away would be disastrous for you. You don't need to worry about anything. I won't say a word to anyone, but I can't stay here. If I do, I get to watch the only two people I have ever really cared about be together.\" She sighed then added. \"Without me. And that will kill me.\"\n\nMaggie turned to go, but I rushed to my feet and stopped her. I pulled her to me, and she buried her face into my chest, sobs wracking her body. I held her in my arms, comforting her as I could. Jess walked over and hugged us both from behind Maggie.\n\n\"Maggie,\" Jess whispered. \"You're not going anywhere. This is your home.\"\n\nMaggie lifted her head. \"So what am I going to do?\"\n\n\"Do you know why Jace and I make love?\" Jess asked.\n\n\"You're in love and it feels good,\" she said defeatedly.\n\n\"Yes, that's part of it. Another part is that he kind of has to.\"\n\n\"I'm, sorry? What?\" she asked, confused.\n\n\"The only reason my attacks haven't been more frequent and severe is because when he cums inside me, he stays with me. Inside me. It's like a part of me knows he's always with me in the most intimate way.\"\n\nI started turning red at this point. We'd never discussed this with anyone else, and opening up like this, especially this graphically and almost scientifically, made us extremely vulnerable. \n\n\"So it's even more impossible for him to be with me,\" she said, now thoroughly defeated.\n\n\"No, it's not,\" Jess said, and Maggie turned her head to look at her. \"I can't be his girlfriend. I can't take him out, show him off, do all the normal things that couples do. Same for him; he can't do that with me. He can do that with you, however.\"\n\n\"But what about you?\"\n\n\"I know it's a lot to ask. I know I'm putting you in an impossible situation, but would you be willing to... you know... maybe... share him?\"\n\nI was about to protest this. After all, didn't I get a say in this matter?\n\n\"What, like alternate nights or something?\" Maggie asked incredulously.\n\n\"Or a schedule.\" Jess nodded. \"I'm flexible.\"\n\n\"Hey-\" I started, but Maggie interrupted me.\n\n\"No.\" she said, turned around in between us and facing Jess. \n\nJess looked shocked and a little crestfallen. I could see her struggling internally, trying to think of a way to fix this. Her mouth moved but no words came out. \n\n\"Jess, I really appreciate that offer, but I don't want him part-time.\" her tears started again. \"I don't think I could handle being in another room while knowing he's with you. I'm sorry.\"\n\nMaggie pulled herself away and ran down the hall and into her room, shutting the door behind her. Jess started to go after her, but I held her back. \n\n\"I think I need to be the one to talk to her,\" I said.\n\n\"Yeah. Okay,\" she said understandingly. \n\n\"I'll be good, I promise,\" I said kissing her.\n\n\"Jace, I'm serious. I'm not mad. Hell, I'm the one kind of encouraging it.\"\n\n\"Which is just a little odd, I gotta admit.\"\n\n\"Well, I'm not saying that I wouldn't be a tad jealous.\"\n\n\"That's only because you like her boobs too.\" I teased back, earning me a smack on the arm.\n\n\"Maybe,\" she admitted, smirking. \"Now go talk to her.\" she started walking to our bedroom. \"I'll just busy myself thinking of you... and her... and those magnificent boobs.\"\n\nI rolled my eyes then headed towards Maggie's room. I knocked once, waited a breath, then opened the door.\n\nMaggie was coming out of her closet with several shirts. On the bed was a large canvas bag that she was starting to fill up with clothes.\n\n\"What are you doing?\" I asked\n\n\"I told you, I can't stay. It's too much. It's all just too much.\"\n\nI walked over and took the clothes from her. Looking defeated, she sat on the bed and looked up at me.\n\n\"What am I supposed to do, Jace?\" she asked, fresh tears forming in her eyes. \"Tell me, please.\"\n\nI sat on the bed beside her, taking her hands in mine.\n\n\"You stay.\"\n\nMaggie looked away, shaking her head.\n\n\"I don't know if I can. I love you, Jace. I have for a long time now.\"\n\n\"How long?\"\n\n\"It's not like I can pinpoint the date or anything. It happened back when you two would come and visit me at Logan. I don't even remember half of what we talked about, but I do remember you. Even when you were sick or were busy, you made time to come visit me.\"\n\n\"Well, Jess was there too.\" I reminded her.\n\n\"Oh, I love her too.\" she said, \"And honestly if it was just her I'm sure I'd've made a move on her already.\" she smiled wryly at me, \"But you took my heart first.\"\n\n\"I didn't know you also had feelings for Jess,\" I asked surprised.\n\n\"Three years in a women's prison,\" she said matter of factly. \"You learn a few things about yourself.\"\n\nI chuckled at that, shaking my head. We were silent for a few moments. Maggie's grasp on my hand was tight as if she were afraid to let go. \n\n\"We don't want you to leave.\" I softly said eventually. \"I don't want you to leave.\"\n\nMaggie looked at me, imploring me to go on.\n\n\"Jess is right.\" I admitted quietly, \"I do love you.\"\n\nWithout a word, Maggie leaned in and kissed me. I returned it, wrapping my arms around her as we fell back onto the bed. She fell mostly on top of me, repositioning herself to straddle me as we kissed.\n\nI slid my hands along her back, pulling her against me. Her sweatshirt rode upwards, and my fingers started to caress her bare skin. I loved how smooth and soft she felt in my arms. \n\nMaggie sat up, breaking the kiss briefly. In one swift motion, she pulled her sweatshirt up and off. Her breasts hung free, the pale white skin topped with barely tan nipples that stood erect. She reached down and pulled my shirt up. I helped and wiggled out of it as best I could. \n\nShe ran her hands up and down my chest, her fingers running through my chest hair. I reached up, cupping her breasts in my hands and feeling their weight. They were firm, but not hard in an artificial kind of way. \n\n\"Wow. You really do have some perfect boobs.\" I muttered as I slowly massaged them.\n\n\"You sound surprised.\" she smiled as I massaged her chest.\n\n\"Well, I've never really seen them. Jess did though. She mentioned it.\"\n\n\"She did?\" Now it was Maggie's turn to be surprised.\n\n\"Mmhmm. More than once.\"\n\nMaggie exhaled a shuddering breath.\n\n\"Was that from I'm doing or what I said?\"\n\n\"Maybe a little of both,\" she said, leaning down to kiss me again.\n\nHer chest pressed against mine, warm and soft. Maggie started grinding her hips against me, rubbing my confined cock against her. A cloud of lust began filling my mind. God, I wanted her right then. But now wasn't the time, and somehow I managed not to strip her right then and there.\n\nHer hips sped up and she started grinding against me a little harder. Her movements became more erratic as I realized she was about to orgasm. I reached between us, squeezing her breasts and gently pinching her nipples.\n\nThat pushed her over the edge, and she went stiff on top of me. Her legs trembled slightly as she climaxed, moaning softly into my mouth. I held her close, bucking my hips against hers to help her along. She slid off of me and lay beside me, resting her head on my shoulder.\n\n\"Oh shit,\" she said embarrassedly. \"I don't know what came over me. I'm sorry.\"\n\n\"It's okay.\" I said reassuringly, \"It was amazing.\"\n\nShe kissed my cheek, then put her head back on my shoulder. \"So what now?\"\n\n\"I don't know,\" I admitted, then my raging hard dick said the next thing for me. \"It's not like you'd be able to join us, anyhow.\"\n\nThe fantasy of being in a threesome is something most teenage guys have and never grow out of. I was about to apologize for that crude remark.\n\n\"Yeah, I don't think Jess would go for it.\" she sighed.\n\nWait, what did she just say? It took me a few heartbeats to process that.\n\n\"Well, I was mainly referring to you.\"\n\nMaggie just shrugged. \"I dunno,\" she said.\n\nI immediately thought of the dirty talk Jess was giving me last night. A crazy idea started to form.\n\n\"Wait. Are you saying you'd be okay with it?\" \n\n\"Maybe,\" she said, blushing fiercely. \"Yeah, I guess I would be.\"\n\n\"But wouldn't that still be sharing?\"\n\n\"Well, it'd be more than just sharing, wouldn't it?\" Maggie said. \"It would be more a part of. Included.\"\n\n\"You're serious, aren't you?\"\n\nShe thought about it for a moment, seriously weighing her options.\n\n\"Yeah. I am. I love you, Jace. And if I can't have you all to myself then that would be the next best thing.\" she had a thoughtful look on her face. \"Hell, it might even be better. I'd get both of you. But like you said, I don't think she'd go for it.\"\n\n\"I have an idea,\" I said, sitting up. \n\n*****\n\nI walked out of Maggie's room and into our bedroom room. Jess was sitting there, scrolling through her phone. She looked up at me, smiling as I sat beside her. Her eyes betrayed her smile; inside them, I could see the beginnings of a small storm. She wasn't sure how this was going to go and was afraid she was going to lose me.\n\n\"Well?\" she asked anxiously.\n\n\"Well, she's not packing her things anymore,\" I said.",
        "\"She was packing? Damn.\" \n\n\"Yeah.\"\n\n\"So what happened?\"\n\n\"We mainly just talked.\"\n\n\"Mainly?\" she said, a sly grin on her face.\n\n\"Mainly,\" I said, giving her a kiss. It felt odd, kissing her so soon after kissing Maggie. \"She's resting right now.\"\n\n\"Oh? What else happened?\" she asked\n\n\"You just want all the juicy details, don't you?\" I teased, leaning closer to her.\n\n\"Maybe. A girl's got needs.\" she teased back.\n\n\"Oh?\" I slid my hand up her leg until my hand pressed against her covered pussy. \"What kind of needs?\"\n\n\"The kind you're going to have to take care of if you keep doing that,\" she said seductively. \n\n\"Doing what?\" I asked innocently as I started massaging her through her jeans. \"This.\"\n\nHer only response was a shudder that ran through her. Jess ran her fingers through my hair before laying back on the bed. By laying down, her jeans were looser and I was able to slide my hand inside. Her back arched as my fingers found her sensitive clit and began massaging. \n\n\"Should we be doing this right now?\" she asked shakily.\n\n\"We've got some time. And I can see in your eyes that you may need this.\"\n\nShe nodded, acknowledging her own need. I slid my hand further down and pushed a finger inside her. \n\n\"Oh God!\" she cried out.\n\n\"Shhhh.\" I mimicked her from last night. \"Don't want to wake the kid.\"\n\n\"Oh you're really funny,\" she said in between breaths.\n\n\"You're already wet. You were thinking about it while I was in there, weren't you?\"\n\n\"Yes,\" she whispered.\n\n\"But not jealous?\"\n\n\"No.\"\n\n\"Why not?\" \n\nJess opened her eyes and looked at me. \"Because I love you. And her too, I suppose. I want you both to be happy. And if someone else is going to have you, I'd rather it be someone I care about and I know will be good to you.\"\n\n\"I'm not going anywhere,\" I said, speeding up my massaging of her clit. Her body trembled underneath me.\n\n\"But-\"\n\n\"Shhh,\" I said, kissing her gently. \"But I can tell you liked the idea of me and her. Wet girl.\"\n\n\"A very wet girl,\" she said.\n\nAs I moved my fingers inside her I watched as her body moved and shook with me. Years of experience taught me how she orgasmed. After a few minutes, I knew it was time to take the next step.\n\n\"So what do you like better? The idea of me and her, or the idea of you and her?\"\n\n\"Mmmmmm.\" she moaned as her hips started to shake.\n\n\"Oh, you do like that, don't you?\" I slid my fingers around her clit as her juices coated quickly coated them. \"What about all three of us? Me inside you while you lick her?\"\n\n\"Oh God!\" she said, panting.\n\n\"Do you like that?\" I asked\n\n\"mmhmm!\"\n\n\"Do you want that?\" I whispered in her ear.\n\n\"Yes! Fuck!\" she cried out as she came, her body spasming against my hand.\n\nI looked back at the door and nodded. Maggie stood, watching. A fire burned in her eyes as she quietly walked into the room. I withdrew my hand and stood up pulling Jess with me. She slowly opened her eyes, expecting me to be looking at her. Instead, she was face to face with Maggie. \n\n\"Magg-\" Jess started to exclaim but was cut off.\n\nMaggie put her arms around Jess' neck and pulled her down into a kiss. \n\nJess' went stiff and her eyes widened in shock. Maggie's tongue ran across Jess' lips, and Jess relaxed, closed her eyes, and melted into Maggie. I watched in hormone infused awe as their kiss grew deeper and more passionate. I could see their tongues working at each other as Jess' hands slid down Maggie's back and gave her butt a squeeze. Each moaned gently as their hands caressed each other and their mouths worked together. My erection strained painfully against my pants.\n\nAfter what seemed like both an eternity and a split second, Jess broke the kiss and held Maggie at arm's length.\n\n\"I... I didn't know you swung that way,\" Jess said, trying to catch her breath. \n\n\"For you, I would.\" she chuckled ironically. \"To be honest though, I prefer penis to vagina.\" \n\nJess' face twisted as she tried to keep from laughing, but failed. \n\n\"But only if you're okay with this,\" I said to Jess.\n\nI walked up behind Jess and wrapped my arms around them both, sandwiching Jess between Maggie and me.\n\n\"Jace?\" Jess looked over at me. \"Did you plan this?\"\n\n\"Some of it,\" I admitted. \"She helped.\"\n\n\"Jess, I'm grateful that you're willing to let me borrow your brother, but I don't want to just borrow him. I want to love him.\" She gave Jess another kiss. \"I want to wake up beside him.\" Kiss. \"I want to make love to him.\" Kiss. \"I want everything, but I won't deny you everything too. I can't.\"\n\nMaggie took a deep breath before continuing. \"It's hard for me to open up like this. Where I come from, we didn't do that. We didn't tell or show each other we loved them. And to be honest I don't think they did, but anyway. Yes, I love your brother. And I also love his sister. Luckily for me, you two are a package deal.\" \n\n\"Jess?\" I said. \"Are you sure about this? I mean, don't get me wrong, watching you two kiss was a dream come true, but I don't want you to do something that you're not comfortable with.\"\n\n\"I'm not uncomfortable,\" she said, uncertainly, untangling herself from us and sitting back down on the bed. \"But I'm not exactly comfortable either. I guess I'm confused.\"\n\n\"What are you confused about?\" Maggie asked.\n\n\"I just didn't plan for this,\" she admitted. \"Not outside a fantasy at least.\"\n\n\"You always have liked to plan things out,\" I said. \"That whole thing earlier about not being able to be my girlfriend. How long have you been thinking about that?\"\n\n\"A long time now,\" she admitted. \"If we were in different positions or jobs with a different family maybe we could've pulled it off. But we have...\"\n\n\"Obligations.\" I finished for her as she nodded.\n\n\"I've been really worried that someone would figure us out. I'm sure there's plenty of office gossip already. Eventually someone's going to start looking into us and that is something we cannot afford.\" she took a deep, steadying breaths, \"I've been trying to figure out a way to find someone else for you and still be a part of it, but each time I thought of it I just never saw how it could work.\"\n\n\"Unless his girlfriend already knows about you two, right?\" Maggie interjected.\n\n\"Something like that, yeah.\" Jess nodded. \"But I didn't know anyone I could trust that much. I thought about Amy for a second - an old friend of mine,\" she explained to Maggie. \"But she's married now so she's off the table.\"\n\nJess looked at Maggie. \"I figured if anyone would understand it would be you, especially after I knew you were watching us. I was really, really scared after I saw you that first night. Jace, I'm sorry I didn't say anything, but I didn't want you to worry. Plus you had a lot on your mind already, so I was trying to figure out what to say when I saw Maggie come back the next night. And the next. And the next.\" \n\nMaggie turned a cute shade of pink as Jess counted off the nights.\n\n\"After I saw that you still liked Jace even after all that, I thought you might actually be okay with what he and I were doing.\"\n\n\"I don't just like Jace.\" she corrected. \"I love him. But I'd be lying if I said I didn't have some feelings for you as well, Jess.\"\n\nJess looked a little surprised. \n\n\"And that kiss? How quickly you kissed me back? I think you have feelings for me as well. You don't kiss someone like that unless you do.\" Maggie said.\n\n\"Did you suspect? You know, beforehand?\" Jess asked softly.\n\n\"Kinda, yeah. I mean, how long did you know I was watching you two again?\" Maggie asked, and Jess turned red. \"You could've locked that door at any time, especially after you knew I was watching. But you didn't. Why?\"\n\nJess just shrugged and looked at me apologetically, knowing she'd been found out.\n\n\"You wanted me to watch, didn't you?\" Maggie teased playfully.\n\n\"Maybe,\" Jess admitted. I just shook my head. \n\n\"My dirty girl,\" I said, giving her a hug.\n\n\"Your dirty girl,\" she answered, kissing my cheek.\n\nMaggie smiled at our display of affection. \"There's no way I would even attempt to break you two up. After talking to Jace a little while ago, we thought that maybe...\"\n\n\"If you can't beat 'em, join 'em,\" I said.\n\nJess looked at me. \"So is that why you did that little bit of dirty talk?\"\n\n\"Well, you've done it enough to me,\" I said, grinning. \"I figured turn about was fair play!\"\n\n\"Why didn't you just ask me out-right?\"\n\n\"Jess,\" I said, taking her hand in mine. \"I love you. I also know you pretty well. You have a tendency to analyze and over-think things. It's what makes you so good with the tech side of our business. But this wasn't something that I wanted you to over-think. I needed to know what you desired, and I figured that was the best way to get it.\"\n\n\"Well... I can't argue that,\" she admitted.\n\n\"Now that you've had a chance to cool down, tell me. Are you sure you want this?\"\n\n\"Having my best friend and my boyfriend? Together?\" She smiled deviously. \"Hell yes.\"\n\nMaggie and I let out a collective sigh of relief before Jess spoke again. \"With a couple of conditions.\"\n\n\"What conditions?\" Maggie asked nervously.\n\n\"For starters, no secrets. Not between us. I don't want someone getting jealous or upset or anything that would break us up. I think we have to be open and honest about what we're thinking and feeling.\"\n\n\"Always,\" I said. Maggie nodded as well.\n\n\"Secondly, if anyone has any reservations or concerns, speak up. We need to all be comfortable.\"\n\n\"Deal.\" Maggie and I both said.\n\n\"So?\" Jess asked, looking at us. \"What now?\"\n\n\"Nothing,\" I said, getting surprised looks from both of them. \"Let's just take the rest of the day to come to grips with what's going on. Everyone take some quiet time and think about it. Really think and make sure it's what you want.\"\n\n\"And tonight?\" Maggie asked.\n\n\"Tonight is up to you,\" I said. \"You know where we'll be.\"\n\n*****\n\nAfter this morning we'd all gone to our separate corners to reflect on everything. Even though Jess had long ago \"moved\" into my bedroom, we had kept hers as a decoy. Lately, she mainly used it as a large closet. She had stayed in her room all morning long. Likewise, Maggie had holed up in her room, as I did in mine. \n\nAll day I had to keep reminding myself that life wasn't a teenage fantasy, that a shared relationship was difficult to maintain. I did some quick internet searches, but those quickly devolved into either porn sites or fake testimonies obviously written by someone who had no idea what they were talking about. Frustrated, I frisbee'd the tablet onto the bed.\n\nThe teenager in me was screaming at the adult part to stop worrying and enjoy it. The rational part of me couldn't stop worrying. Could we make it work? What if someone got jealous? What if they realize they don't need me anymore? \n\nIt wasn't like I could call any friends and ask for advice. 'Hey, I'm thinking of starting a three-way relationship between my sister and the girl who threatened us and now lives with us wearing an ankle monitor. What do you think?' would either get the cops called or get me hung up on. \n\nI slowly came to the realization that Jess would never lie to me, even to spare my feelings. She'd always been blunt and honest with me. If she said she was okay with it, then I should take her at her word. Likewise, Maggie had been upfront and honest with both of us. If they said they were okay with it, why shouldn't I believe them?\n\nAfter several hours, a growling sound interrupted my thoughts. I looked around, trying to find the source of the noise before realizing that I hadn't eaten in quite a while. Sighing, I left my room to heat up some leftovers for everyone for dinner.\n\nAbout halfway through getting the pasta and meatballs warmed up, I heard someone enter the kitchen. I looked up and saw Jess standing there, smiling at me. She came up behind me and wrapped her arms around me.\n\n\"Hey,\" she said, resting her head against my back\n\n\"Hey.\" I rubbed her arm. \"You okay.\"\n\n\"Mmhmm.\" she sighed contentedly.\n\n\"I gotta know since it's just us right now.\" I turned to face her. \"Are you sure you're okay with all this?\"\n\nShe nodded, then sat down at the kitchen table. I turned the heat down to simmer and sat with her.\n\n\"Jace.\" she started. \"When we first started, I finally felt whole again. Every time we made love, I felt that. But I knew it couldn't last forever. Neither of us are stupid or overly idealistic. Let's face it, nobody would accept a brother and sister relationship like this, no matter what the reason. I knew we couldn't keep it up forever, and that eventually you'd have to find a 'real' girlfriend.\"\n\nJess reached over and took my hands, kissing my fingers gently.\n\n\"I meant what I said earlier. I knew that when you did things would change. Probably not for the better, at least not for me, but they would have to change. I just wasn't sure how it would work, you know? I mean, it's not like I can think of any girl who would be okay with you occasionally heading to my bedroom to give me a vitamin J injection.\"\n\n\"A what?!\" I laughed.\n\n\"Sorry, it's what I think of it sometimes.\" she giggled before continuing. \"Anyway, I knew that would put us in a really bad spot, but I guessed we'd work something out. Doesn't mean it wouldn't kill me knowing you were with someone else and had to keep us secret.\n\n\"When Maggie came in our lives, I wondered if she would be the one to take you away from me. I liked her; thought she was kinda cute and everything, but I wasn't sure if you did. Then I saw how you looked at her and how she looked at you. And it was weird, because I thought I'd be jealous or something, but I wasn't. I started to see her through your eyes.\"\n\n\"I felt so guilty,\" I confessed. \"God, I still do.\"\n\n\"For what?\"\n\n\"Starting to have feelings for her while still in love with you. Like a two-timing scumbag.\"\n\n\"Jace, baby, nothing about our relationship is conventional. Why would that be any different?\"\n\n\"You know I still love you. I'm still in love with you, right?\"\n\n\"Of course! I will never understand how people think that love has to be binary or some finite amount. That if you love someone that somehow means you can't also have feelings for someone else! Love is boundless, and I truly believe that you can love multiple people at the same time. Hell, parents do it all the time with their kids.\"\n\n\"Yeah, but loving someone and being in love are two different things.\" I pointed out\n\n\"Are they really?\" Jess asked decisively. \"I don't think they don't have to be.\"\n\n\"You never really answered my first question. Are you okay with this? With three people together?\"\n\n\"If all three people are good with it, then sure.\"\n\n\"So you think we can make this work?\" I asked.\n\n\"If anybody can, it's us,\" Jess said, smiling. \"Now come on. I'm starving!\"\n\n*****\n\nThat night, Jess and I left the bedroom door open as we crawled into bed and turned the lights off. We were both buzzing with anticipation and nervousness. \n\n\"Think she'll show?\" I asked.\n\n\"I hope so,\" Jess said, then looked over at me. \"Yeah, I said it. The more I've thought about it the more I'm kind of excited.\"\n\nI reached over and ran my hands across her body. Like me, she had decided to skip any clothes tonight. She spread her legs as my fingers drew closer. She was soaked already!\n\n\"You really are, aren't you?\"\n\nHer response was reaching over and grasping my engorged cock.\n\n\"I'm not the only one, hmmm?\"\n\n\"Don't forget we were interrupted last night,\" I reminded her. \"And it's been a pretty sexually charged day. I've been ready for hours!\"\n\n\"Poor baby,\" she said, slowly stroking me. \"Need some relief?\"\n\nI didn't say anything. I pulled her to me and kissed her. She responded in kind, kissing me back as she slid on top of me. \n\nBefore much more could happen, a shadow at the doorway caught my attention. Maggie stood there, clutching at her long nightshirt as she watched us. Jess followed my gaze and smiled when she saw Maggie.\n\nNo one moved for several seconds, everyone a little unsure what to do. Slowly, Jess got off of me and walked over to Maggie. Maggie stood transfixed, staring at Jess' naked body as she approached. Jess reached out and took Maggie's hand, pulling her into the room. \n\n\"I'm glad you're here,\" Jess said, giving Maggie a hug. \n\nMaggie hugged her back.\n\n\"You two sure you still want me here?\" Maggie asked, worriedly.\n\nInstead of saying anything, Jess reached down and lifted Maggie's shirt. Maggie raised her arms, allowing Jess to strip her. I smiled when I saw Maggie was wearing the same pale blue panties she had on the last time I saw them. Moving towards the center of the bed, I gave Maggie room to lay down. \n\nShe climbed in beside me and pulled the covers up over her. Jess quickly got into bed on the other side, leaving me sandwiched in the middle. \n\n\"I could get used to this,\" I said, trying to break the tension in the room. I at least got a few laughs from the girls.\n\nMaggie rolled over to me. I slid my arm underneath her, pulling her closer and enjoying the feel of her against me. She ran her fingers over my cheek then rested her forehead against mine. Gently, she kissed me. The kiss grew hotter and more passionate as her hand slid down my chest and stomach. As she neared my cock, her eyes grew wider as she realized I was naked just like Jess was. \n\nI felt another hand on me and saw Jess watching us. \n\nSensing Maggie's apprehension, Jess took her hand.\n\n\"Here,\" Jess said, guiding Maggie's hand to my cock. She touched it gingerly, lightly running her fingers over it. A tremor ran through me when she took hold of it firmly and began stroking it while we kissed.\n\n\"What do you want me to do?\" Maggie asked me.\n\n\"Whatever you want,\" I replied.\n\n\"Anything?\"\n\n\"Anything.\"\n\nMaggie slid down me and disappeared under the covers. Before I knew it, I felt her lips kiss the tip of my cock. A couple of more kisses, then she wrapped her lips around my cock and took me into her mouth. I gasped as she began working her head up and down my shaft. \n\nJess leaned over and kissed me, her tongue darting into my mouth to play with mine. We kissed for a bit before she squealed in surprise.\n\n\"Oh God, Jace. She's touching me.\" Jess breathed.\n\nJess lay back, resting her head on my shoulder. Maggie pulled the covers off, apologized for being hot, then resumed her work on us both. I watched her blonde hair fall around her face as she slowly slid up and down on me. Jess' moans pulled my attention over to her, where I saw Maggie's hand furiously rubbing Jess' clit. Jess' body started to tense up and I could see her legs start to tremble. \n\n\"Oh fuck, Jace.\" she breathed. \"Oh God, baby. She's gonna make me cum.\"\n\nAs soon as she said it her back arched and she cried out as her orgasm washed over her. Maggie's hand continued to rub for a few seconds more, then shifted as she slid two fingers inside Jess. Jess cried out again as Maggie's fingers worked inside her. She looked over at me, her eyes wide in surprise pleasure. As Maggie's fingers moved and curled inside her, Jess started beathing harder. I reached around her, taking her breast in my hand and squeezing it as best I could. Maggie's mouth was making it difficult to concentrate. \n\n\"Oh sh-\" Jess gasped. \"Don't stop Maggie. Don't stop. Uhh. I... I... Ahhh!\"\n\nI watched as Maggie drove my sister to her second orgasm. Jess thrashed on the bed as Maggie's fingers continued their magic inside her. I could hear Jess' wet sounds slosh out of her as she climaxed.\n\nJess was a sweaty mess laying against me, breathing heavily in my ear. Her still twitching body pressed against mine, sending small jolts through me. Hearing and seeing my sister pushed over the edge twice like that was all I could take. \n\n\"Maggie, I'm gonna cum,\" I warned her through gritted teeth, giving her the chance to switch to her hand.",
        "Instead, she sped up and sucked on me a little harder. I wasn't able to hold it back any longer. I groaned loudly I unloaded my cum into Maggie's eager mouth. I threw my head back into the pillow as she worked her mouth with my pluses, milking out every drop of cum she could.\n\n\"That was a lot,\" she said after swallowing. She continued to slowly stroke me as she looked up at me.\n\n\"uh huh.\" was all I could manage.\n\nMaggie slowly pulled her fingers out of Jess, causing Jess to moan softly. With a devilish gleam in her eye, she smiled at me as she made a show of licking her fingers clean. My cock pulsed again her hand, surprising us both.\n\n\"Come here,\" I said, pulling Maggie up. Jess and I made room and Maggie crawled in between us. She lay on her side, facing me.\n\n\"Did you like it?\" she asked me.\n\n\"I loved it,\" I said, kissing her. \"And you.\" I rolled her onto her back. \"Your turn.\"\n\nJess didn't give her any time to protest as she locked her lips onto Maggie's. Maggie moaned as Jess slid her hand up and cupped Maggie's chest. Maggie returned the favor, squeezing Jess' breasts and trapping her nipples between her fingers.\n\nI pulled on Maggie's panties and she lifted her hips to let me slide them off. Hesitantly, Maggie opened her legs for me, allowing me to see her pussy for the first time. She kept everything fully shaved between her legs, and I could faintly smell the shaving cream and soap she'd used before coming to our room.\n\nI kissed her mons, then lightly kissed down one thigh and up the other. She was gyrating her hips slightly as if beckoning me to go further. I kissed the outside lips gently and heard her gasp softly. Her hands reached down and held her lips open. Her clit, larger than Jess', stood out. I kissed it, then gently sucked it in between my lips. She tasted incredible; I alternated between sucking and licking her clit and lapping up her juices. Slowly, I slid two fingers inside her like I had seen her do to Jess earlier. Her pussy was tight and squeezed my fingers as I worked them inside her.\n\nMaggie's moans grew more and more frequent as I continued working on her. Her hips began bucking against my mouth so frantically I had to use my other hand to hold her down.\n\n\"Oh fuu-\" she started to cry out, but her orgasm stopped any sound. Her face contorted as her pussy clamped around my fingers and a small flood of fluid poured out of her. As her orgasm reached its peak, she found her voice and cried out as she collapsed onto the bed. She lay there twitching as my fingers slowed down. I gave her clit one last hard lick which caused her to spasm involuntarily. \n\nJess held her as she came down, kissing her forehead. She saw me looking up at them, then motioned for me to take her place. Jess scooted over and I moved up in between them. Maggie rolled over to me, smiling like an idiot.\n\n\"Holy shit.\" she breathed. \"I don't think I've ever cum like that.\"\n\n\"It's always better when it's with someone you love,\" I said, realizing that it sounded a lot dopier out loud than it did in my head. \n\n\"I don't think I can do anything else tonight,\" Maggie said, her eyes drooping. \"I'm exhausted.\"\n\nShe started to get up, but I held her in place.\n\n\"Where do you think you're going?\" I asked incredulously.\n\n\"I just thought-\"\n\n\"Stay.\" Jess and I said together.\n\n\"With us.\" I said, then added, \"With me.\"\n\n\"You're definitely a part of this family now,\" Jess said. \"You're stuck with us.\"\n\nMaggie lay down beside me as a tear rolled down her cheek. She wiped it away and sniffled a little. \n\n\"Sorry,\" she said softly.\n\n\"You don't have anything to be sorry for,\" I said, kissing her. \n\nWith Maggie on one side and Jess on the other, I lay on my back and closed my eyes.\n\n*****\n\nWe all woke suddenly to Jess' phone ringing. She fumbled for it before finally answering.\n\n\"Hello? What? When? Shit. What's the impact? What did the vendor say? Uh huh. Okay. I'll be there in a few minutes.\"\n\n\"That did not sound good,\" I said, sitting up.\n\n\"It's not. The servers are down.\"\n\n\"Which ones?\"\n\n\"Uh... All of them.\" She said helplessly. \"The HP rep is on his way in, but I need to be there.\"\n\n\"Need me to go in too?\"\n\n\"No, I don't think so.\" Jess sighed as she got out of bed. \"All the processes finished before the crash, so right now it's just recovery and validation. But keep your phone nearby just in case.\"\n\nI grabbed my phone and looked at it. No messages or notifications.\n\n\"Wonder why I didn't get anything?\" I mused out loud.\n\nJess scrolled through her phone for a moment before nodding.\n\n\"The notices are still going to your old admin,\" she said as she started gathering up her clothes. \"Really Jace, she retired four weeks ago. You really need to replace the position.\"\n\n\"I know, I know,\" I said, properly chastised. \n\nJess tapped a few things on her phone.\n\n\"I'm guessing she had routed all notifications to you through her. Her credentials were purged last weekend, so they all died before they got to you.\"\n\nShe quickly threw on some jeans and a sweatshirt.\n\n\"I gotta go. If I need you, I'll call.\" \n\nJess kissed us goodbye, then was out the door.\n\n\"You two have fun,\" she called out as she hurried to her car.\n\nThe house was eerily silent as Maggie and I looked at each other. She bit her lower lip slightly as she moved closer to me.\n\n\"So what do you want to do?\" I asked innocently.\n\n\"I know what I want,\" she said, running her hand down my chest. \"Just not sure if you want it too.\"\n\n\"Let me guess,\" I said, pulling her to me. \"You want me to kiss you.\"\n\n\"Uh huh.\"\n\n\"To touch you?\"\n\n\"Yeah.\" she breathed.\n\n\"What else?\" I asked, almost whispering it into her ear. \"Tell me what you want.\"\n\n\"I... I want you... Inside me.\" she bit her lower lip as she looked up at me.\n\nI didn't have time to respond. Her hands immediately slid down to my dick, grasping it as she started to stroke me. I lowered my head and began kissing her breasts, gently sucking on each nipple while I massaged the other. She moaned and ran her free hand through my hair, pulling it slightly as my tongue slid across her nipple. Her body trembled as my hand slid down to her thighs, caressing the soft skin between her legs. She parted her legs as my hand began to slide up and down her lips. I slipped my finger inside her, causing her to take a shuddering breath. \n\nMy finger found her clit, already slippery with her juices. I rolled her onto her back as my hand continued to work on her pussy, rubbing a little faster and harder than before. \n\nHer body slowly began to respond to my touch. At first she was still, just laying there with her eyes closed. Then she started breathing harder and heavier, and soon I could feel her legs start to slightly shake and tremble. I knew she was closer when she started to moan.\n\n\"Oh God.\" she whispered. \"I'm so close.\"\n\nI didn't say anything. I just smiled and started rubbing her faster. Her pale breasts flushed pink as she neared her orgasm.\n\n\"Oh God don't stop.\" she said breathlessly, repeating it over and over. \"don't stop don't stop don't stop don't stop. ahhh... ahhhh... AHHHHH!\"\n\nI held on to her as she came, feeling her body spasm against mine. I slowed my hand, only gently touching her clit. Each stroke caused her breath to catch. \n\n\"Stopstopstopstop.\" she said quickly, trying to catch her breath. \"That's a great way to wake up.\"\n\nI kissed her, then moved to kneel between her legs. I looked down, taking in the sight of her spread beneath me. She looked up at me and smiled, then her eyes drifted down to my engorged cock pointing at her slit. She looked a little worried.\n\n\"You okay?\" I asked. \"Are you sure you want this?\"\n\n\"Yeah,\" she said, voice trembling.\n\n\"I don't want you to do something you're not ready for,\" I said, ready to stop if she wanted me to.\n\n\"I'm ready. It's just.\" she started.\"Well... This will be the first real dick I've had inside me.\"\n\nI paused for a moment, letting that sink in. \"Wait a minute. You said you preferred guys to girls. If I'm the first, how would you know?\"\n\nMaggie gave a small, self-conscious laugh. \"Well, I've done stuff with my mouth and hands to a couple of guys before. And I enjoyed that more than anything with a girl. Plus I've seen stuff on the internet. I've used toys on myself, and the women at Logan can be pretty inventive when it comes to strapons.\" She looked up at me. \"Just never had the real thing.\"\n\n\"So are you absolutely sure you want this?\" I asked.\n\n\"Yes.\" she nodded emphatically as she reached down to guide me into her. \"I want you to be my first. But...\"\n\n\"But what?\" I asked concerned.\n\n\"I'm not on any birth control. Just wanted to make sure you knew that.\"\n\n\"Good to know,\" I said, leaning back.\n\n\"Yeah. I've always been pretty regular and there's not much need for it in a women's prison,\" she said dryly.\n\n\"So what do you want to do?\"\n\n\"I still want you inside me. You just won't be able to cum inside me.\"\n\n\"It's a bit risky. Are you sure?\"\n\n\"Positive,\" Maggie said, pulling me closer to her. \"I trust you completely.\"\n\nI leaned over Maggie as she positioned my tip inside her soft folds. I slowly pushed a little into her, then pulled back out, drawing her juices out with me each time. Maggie's eyes were closed and she sighed each time I pushed into her.\n\nIn moments, I was fully ensheathed inside Maggie. When our hips met, Maggie looked up at me with small tears in her eyes.\n\n\"Does it hurt?\" I asked, concerned.\n\n\"Not at all.\" she shook her head slightly, causing a tear to roll down her cheek. \"It feels amazing. Better than I could have hoped. Better than any toy, that's for sure.\" \n\nMaggie wrapped her arms around my neck, pulling me down to her. We kissed as I began slowly thrusting into her.\n\n\"I'm glad... you're my first,\" she said in between thrusts. \"I want you... to be... my last... my only.\"\n\n\"You realize what that means, right?\" I asked, slowing down. \n\nMaggie pulled me onto her, obviously comfortable with my weight on her, and wrapped her arms around my neck. She looked up at me, eyes shimmering with barely contained tears.\n\n\"It means that you'll never leave me and I'll never leave you. That I'll have a family that I love and who loves me. A place where I belong.\"\n\n\"Are you absolutely sure you want to be part of this crazy family?\" I asked.\n\n\"One Hundred Percent,\" she said, emphasizing each word with a quick kiss. \n\nI kissed her fully, her lips parting to meet mine as our tongues lightly touched. I resumed making love to her, slowly sliding in and out of her. She pulled her knees up, letting me push deeper into her.\n\nBreaking our kiss, I leaned back onto my knees, letting me look down at Maggie. Her bright blue eyes were only half opened as I thrust into her. I glanced down and watched as her labia wrapped around my shaft, spreading them apart and showing me her glistening clit. Each thrust caused her breasts to bounce slightly. I reached down, taking hold of one in my hand, squeezing it and playing with her nipple. \n\nI licked my thumb, then reached down and placed it on her swollen clit. As I pressed down and rubbed my thumb in tiny circles, Maggie moaned and arched her back.\n\n\"Oh God.\" she breathed. \"You're gonna make me cum, Jace.\" \n\n\"Good. Cum for me.\" I replied gently, speeding my thumb up and pressing a little harder.\n\nMaggie's hips bucked against mine, and I moved my other hand to hold on to her. I started thrusting harder and faster, trying to match her gyrations. Then, in a howling cry, she came. Her back arched up and her legs went stiff. I continued rubbing her clit and plunging into her through her orgasm, Her tight pussy spasmed around my cock, almost bringing me to the edge. I stopped my motions, afraid of cumming too soon. Her muscles continued twitching around my shaft and I had to pull out before I came, causing Maggie to gasp in surprise.\n\n\"I want you on top,\" I said as I cooled down a bit and my impending orgasm subsided. \n\nI rolled onto my back and Maggie quickly climbed on top of me. In a flash, she had slid me back inside her and rested her hands on my chest. We lay like that for a moment, my cock fully ensheathed inside her while we kissed. \n\nSlowly, she began to move up and down my shaft, eyes closed and her mouth slightly open, a slight smile playing at her lips. A soft sigh escaped each time our bodies came together.\n\n\"Getting close again?\" I asked.\n\n\"No, not really.\" she smiled down at me. \"I just love the feeling of you inside me. Besides,\" she started moving faster. \"I want you to cum.\"\n\n\"It won't be much longer if you keep that up.\" I cautioned her.\n\nShe squeezed her muscles around my cock as she bounced up and down on me. I reached up and took her breasts in my hands, squeezing and massaging them. In moments, I felt the familiar pressure build up inside me.\n\n\"I'm really close,\" I warned her.\n\nTo be honest, I wasn't sure what she was going to do. A part of me was worried she'd stay on top, getting me to cum inside her unprotected. \n\nI was surprised that a part of me was okay with that.\n\nAny fears were put to rest when she jumped off of me and took me into her mouth. Using her hands, tongue, and lips, she started sucking and stroking me at the same time while she gently squeezed my balls. Already close, this pushed me over the edge. I cried out as I came, feeling my cum flood Maggie's mouth. As the last pulses died down, she tenderly kissed the tip and gently squeezed the last drops of my cum out.\n\nShe didn't make a funny face or do any show of forcing herself to swallow my cum. She just crawled up beside me and rested her head on my shoulder.\n\n\"I love you,\" she said, kissing my chest.\n\n\"I love you too.\" \n\n*****\n\nWe eventually got out of bed and went into the shower. We were both spent from this morning, but that doesn't mean we didn't enjoy ourselves. We spent a long time under the shower, slowly washing each other. I spent extra time washing her, letting my soapy hands run all over her exposed skin. Her monitor was supposedly waterproof, but we still tried to keep it from getting too wet. When she knelt down to wash my legs, she hesitated when she got to my damaged calf.\n\n\"It's okay,\" I told her. \"You don't have to get that one.\"\n\n\"No, it's not that,\" she said, looking up at me. Her wet hair was plastered around her head. \"I was just... nevermind.\" \n\nI sat down on the shower floor beside her with my back against the wall. Maggie scooted between my legs, leaning her back against my chest. The warm water rained down on us as I wrapped my arms around her and kissed her neck.\n\n\"Tell me,\" I said.\n\n\"It's stupid.\"\n\n\"Now I really wanna hear it.\" I poked her.\n\n\"It's selfish.\"\n\n\"But...?\"\n\n\"Well, seeing your leg reminds me of my brother.\"\n\n\"Yeah.\" I agreed, grimacing at the unpleasant memories.\n\n\"It's twisted, I know. But thinking of him reminds me of my parents and how awful they were. How they pushed and pushed, and how that shaped my decisions. In a weird way, if it wasn't for them and how screwed up they were, we never would have met.\"\n\n\"You don't know that,\" I said.\n\n\"Given the life father wanted, I'm pretty sure it's a safe bet. I wouldn't have you and Jess. And I feel terrible for it, but in a way, I'm grateful for the twisted path that got me here.\"\n\nI held her for a moment, thinking about what she'd said.\n\n\"If getting my leg torn up is what it took to have you here with us, I'd make that sacrifice again in a heartbeat.\"\n\nShe sniffed, and I looked down at her. \n\n\"You know, you really don't need to cry,\" I said, hugging and rocking her. \n\n\"They're happy tears,\" she said, laughing a little. \"I'm just not used to them.\"\n\n*****\n\nThat afternoon Maggie and I were laying on the bed relaxing. She was resting against me, reading her Kindle while I was looking through a few business journals. Her fingertips idly traced a lazy pattern around my thigh. I'm pretty sure I read the same paragraph six times and I couldn't tell you a single thing it was about. My free hand began moving up her side and under her t-shirt. She looked over at me, a gleam in her eyes as her fingers crept up the leg of my shorts.\n\n\"Jace?!\" we heard Jess call out from the living room. Maggie and I both jumped in surprise. We had expected to hear the garage door open when she came home. Instead, she came in through the front door. \n\nI briefly wondered why she did that, then the answer hit me with a cold chill. Coming in the front door was quicker. \n\n\"Oh shit.\" I breathed as I stood up.\n\n\"What?\" Maggie asked, alarmed.\n\nBefore I could answer, Jess burst into the room. She was out of breath, but not frantic. She wasn't having a full blown attack, but she was close. Really, really close.\n\nJess hurried over and pounced on me, knocking me back onto the bed. Maggie joined us, wrapping her arms around Jess.\n\n\"It's okay, Jess,\" I whispered.\n\n\"We're here,\" Maggie said as she ran her hand up and down Jess' back.\n\nWhen Jess had attacks in the past, Maggie had kept her distance. Now she willing inserted herself in the middle of it. That's when I realized that Maggie was definitely here to stay. \n\nIt took several minutes before Jess was herself again. She lay straddling me while Maggie and I rubbed her back. Eventually, she looked up at me and then over to Maggie, who was laying beside us. Maggie didn't look upset or scared. She was concerned for Jess.\n\n\"What happened?\" I asked.\n\n\"We got everything back up and running,\" she explained, resting her head on my chest, \"and I was on my way home. I was wondering if you two had... you know. And that got me thinking about the last time we'd been together. Then I realized that you didn't cum. It's been a while since you did inside me. That triggered something.\"\n\n\"Sorry,\" I said, then realized I was apologizing for not cumming. It felt a little weird, to be honest.\n\n\"It's okay,\" Jess said, taking a deep, cleansing breath. She smiled at us reassuringly. \"I'm fine now.\"\n\n\"Good.\" Maggie kissed Jess' cheek. \"We were worried about you.\"\n\nJess looked at the two of us then asked with a hint of a tease in her voice. \n\n\"So? What did you two do while I was gone?\"\n\n\"Ummm. Uh. Well...\" I stammered.\n\n\"You did?!\" she asked excitedly.\n\n\"We did,\" I admitted with a sigh.\n\n\"Well? Details!\" she said, sitting up but still straddling me.\n\nMaggie looked at me questioningly.\n\n\"Well, we did agree on no secrets,\" I said.\n\nMaggie shrugged then proceeded to tell her what we did. She was blushing the entire time and I know I was too. While she was telling the story, I was watching Jess' reactions, trying to gauge how bitter or jealous she was going to be.\n\n\"That sounds awesome!\" Jess exclaimed when Maggie finished. \"I'm very happy for you!\"\n\n\"Really?\" Maggie and I both asked, surprised. \n\n\"I was worried you'd be pissed or something,\" Maggie admitted.\n\n\"To be honest, I was a little worried about that myself,\" Jess admitted. \"But I'm not. I'm truly happy for you.\"\n\nJess wiggled her hips against me, grinding into me a little.\n\n\"And just a little horny,\" she said mischievously, then looked at me apologetically. \"I'm sorry, but I really need you, Jace.\"\n\nJess stood up and began to take her clothes off. \n\n\"Oh, okay.\" Maggie chuckled surprised. \"Just like that, huh?\"\n\n\"Sorry, Maggie,\" Jess said as she unbuttoned her jeans and slid out of them. \"Does this make you uncomfortable?\"\n\n\"No, not at all. I just didn't expect you to be so... you know... open about it.\"\n\n\"No secrets, remember?\"\n\nJess grabbed the waistband of my sweatpants and pulled them down, freeing my growing cock. She leaned down and took me into her mouth, sucking and stroking me to full hardness.\n\n\"I think someone is going to get lucky again today,\" Maggie said, grinning at me. She pulled my head to hers and kissed me. \"I've been wanting to see this up close for a while now.\"",
        "When Jess had me hard and wet enough, she climbed up and positioned herself over me. Maggie watched raptly as Jess angled my cock then slid down, moaning softly as I filled her.\n\n\"Wow,\" she whispered, shifting her gaze constantly between me, Jess, and where we were joined. \"You two are actually doing it.\"\n\n\"You've seen us before.\" Jess reminded her.\n\n\"Yeah. From a distance. This is so much better.\"\n\nMaggie alternated between caressing both our chests as Jess rode me.\n\n\"It's okay.\" Jess said, struggling to form a sentence as I started thrusting into her.. \"You can... touch yourself... if you want.\" \n\n\"I'd rather touch you,\" she said hungrily.\n\nMaggie straddled my legs, pressing her chest against Jess' back. She reached around and between us, finding Jess' sensitive clit. I felt her fingertips slide across my shaft occasionally as she rubbed.\n\n\"Oh fuck, Maggie.\" she gasped. \"Right there. Oh, God.\"\n\nJess trembled as Maggie rubbed, and I could feel her muscles inside clench and spasm around my cock. I slid my hands up Jess' chest, cupping her breasts and squeezing them in time with my thrusts. My own orgasm was getting closer, and I was trying to think of anything to postpone it.\n\n\"Oh God, Maggie. I'm gonna cum.\" Jess gasped as her body shook with her climax. Maggie nuzzled Jess' neck as Jess came in a throaty, rumbling growl. She bucked against me then fell forward, catching herself on the bed before our heads crashed into each other. She was breathing hard, smiling as I continued to slide in and out of her.\n\n\"Cum inside me, Jace,\" she whispered. \n\nAs Jess continued to tremble on top of me, Maggie moved her hand behind Jess and began massaging my balls. She looked over at me, smiling as she starting rubbing the part of my shaft that wasn't inside Jess. Well, that did it. Unable to hold back, I thrust one final time as I unloaded inside Jess. I felt Maggie's fingers pressing against me, feeling my cum race through with each pulse. \n\nI heard Maggie moan and caught a glimpse of her other hand inside her pants, furiously rubbing herself. She rolled off of Jess and me, then curled up against me as the three of us cooled down. \n\nJess lifted up and I flopped out of her wetly. Maggie watched as a few small ribbons of my cum dripped out of Jess and onto my leg.\n\n\"Wow!\" Maggie breathed. \"You really cum inside her.\"\n\n\"You doubted?\" I asked.\n\n\"No, but it's one thing to hear about it. It's another to actually see it.\"\n\n\"You still okay with it?\"\n\n\"Okay? I love it.\" she looked over to me. \"And I love you.\" \n\nMaggie raised up enough to give me a kiss. Our lips met gently for a long and tender kiss.\n\n\"Hey,\" Jess said wearily, raising her hand. \"Don't forget about me!\"\n\n\"Never,\" I said, kissing her in an identical way. \n\n\"Me too,\" Maggie replied, giving Jess a kiss when we separated.\n\nI got up and headed to the bathroom to clean myself up. I looked back at the bed and saw Maggie and Jess climbing under the covers and cuddling. As I watched them snuggle together under the blanket, it suddenly hit me.\n\nMy life was had just gotten a lot more interesting.\n\n*****\n\nI knocked on the giant wooden doors, and the voice inside called \"It's open!\"\n\nI knew Dad would be in here, as he was most afternoons. He blocked out his calendar every day from 3:30 pm on so he could enjoy the rest of his day in relative peace.\n\nI walked in, finding Dad sitting in a large chair looking out onto DuSable Harbor and Lake Michigan. Being sixty floors up gave one a commanding view.\n\n\"Jace!\" he exclaimed when he saw me. \"Come in! I was just finishing up some work.\" \n\nI chuckled at his code phrase for being caught doing nothing. He waved me over and poured me a few fingers of a bourbon he was enjoying. I swirled the amber liquid in the crystal glass, savoring the aroma before taking a sip. This was the good stuff. I sat in the chair beside him, sinking into the soft leather.\n\n\"One day.\" he said, mimicking Mufasa, \"All of this will be yours.\"\n\n\"Circle of life?\"\n\n\"Exactly.\" he laughed, taking another sip. He looked over at me, expectantly. \"I love having you come up and visit me, Jace. You know you're welcome any time, but I get the feeling you have something to talk about.\"\n\n\"I do.\" I nodded. He was pretty sharp.\n\n\"Given your hesitation, I gather you think I won't be too happy.\"\n\n\"Probably not,\" I said, getting ready to deliver the news.\n\n\"Alright,\" he said cautiously, draining the last of his Bourbon before pouring another glass. \"Now I'm ready. Spill.\"\n\n\"It's Maggie.\" I started, and Dad inhaled sharply.\n\n\"Ah,\" he said gravely. \"Go on.\" \n\n\"Well. We're kind of... dating.\" I said, readying myself for the explosion. \"Well, no, it's more than just dating. I love her, Dad. And she loves me.\"\n\nDad just sat there, looking into his glass. He gently swirled it around like he was trying to divine hidden truths in the liquid before taking another sip.\n\n\"Yeah, I thought this could happen,\" he said, smiling at me.\n\nThat was not one of the responses I had planned for.\n\n\"Not how I thought you'd react,\" I admitted.\n\n\"What were you expecting?\"\n\n\"Not sure. Anger? Denial? Telling me what a huge mistake I'm making?\"\n\n\"Jason,\" he said, turning to me. \"You're not a little kid anymore. Neither of you are. I can't tell you what you should and shouldn't do. But I know you've got a good head on your shoulders. More than that, you have a good and decent heart.\"\n\nHe stood up, walking to the window to look down at the world below.\n\n\"I'm not going to lie. I hated their family. Still do really.\" He sighed, looking off into the distance. \n\nI could see him struggling with something. A moment later, he resolved whatever internal conflict he was having and let it out. \n\n\"More than that, I hate myself. For failing you and your sister,\" he said, visibly upset.\n\n\"Dad, you didn't fail us!\" I protested.\n\n\"No, Jace, you're wrong. You see, I come from a time where a man is taught that his primary responsibility is to provide for and protect his family. Above all else, that is his main job. And I didn't do that. That bastard took you from us right under my damn nose!\"\n\nHe took another drink, steadying his nerves and trying to calm down.\n\n\"Worse, he took your futures from you. I love Jessica so much, but I know there's no chance she'll ever have a real relationship. She won't get married. She won't have kids. She's told us as much. She's accepted it and is just fine with it, but it's never sat well with me or your mom.\" He paused for another sip, but I didn't say anything to fill the void.\n\n\"It hasn't been easy on you either. Your leg aside, I know it's been hard having a girlfriend with Jess constantly needing you.\"\n\n\"It's made for some interesting moments,\" I admitted a little too freely. Maybe this stuff was stronger than I thought it was.\n\n\"Oh, I can bet.\" he laughed, then he'd up a hand. \"No details, please.\"\n\n\"No details.\" I was laughing a little too. \n\nDad was silent for a moment, collecting his thoughts again.\n\n\"You weren't there immediately afterward. You didn't see their family. I never saw Maggie during all that. I guess they had the sense of mind to keep her out of it. So you never got to see those awful people.\"\n\nHe turned to me, resting on the credenza in front of the window.\n\n\"They never said they were sorry. Never wondered how you two were or anything. They just wanted to know how many zeros to put on the check to make the whole thing disappear.\" He shook his head angrily. \"I thought we were done with them, then she threw that brick through the window and everything was suddenly fresh again.\"\n\n\"She's not the same person she was all those years ago, Dad.\"\n\n\"I know. Your mom seems to like her.\"\n\n\"You never have come by to meet her.\"\n\n\"I haven't. It's just hard for me, you know?\"\n\n\"I do. But I'm amazed how she was able to change. The person they raised, the person who threw that brick, the person who went to jail, that person isn't Maggie anymore.\"\n\nDad looked at me, nodding slowly as he thought about what I said. He turned back and looked out the window, now shaking his head.\n\n\"God, I can't imagine what it was like growing up with them for parents.\"\n\n\"Maggie's told us about it.\"\n\nI spent the next several minutes detailing out what Maggie had told us about growing up in that house and being compared to us. I finished by talking about how they abandoned her when she went to Logan.\n\n\"Jesus.\" he breathed, sitting back down in his chair heavily. \"No wonder she was so screwed up.\" He looked over to me. \"You said you love her?\"\n\n\"Yes.\"\n\n\"How's Jess with all this?\"\n\n\"They're like sisters now,\" I said, smiling at what that term meant for our situation.\n\n\"Really? She's that okay with it? And Maggie understands how Jess needs you?\"\n\n\"Oh yeah. Jess had a major attack a while ago when I was late getting home. Maggie saw first hand how it is. She's also had a few minor incidents, and Maggie knows how much Jess needs me. She's fully aware that Jess will always be a part of my life. Our lives.\"\n\nAnd our bed, but I didn't say that.\n\n\"That serious?\" Dad asked, his eyebrows raised.\n\n\"Yeah.\" I nodded. \"Yeah, it is.\"\n\n\"Well, okay then.\" \n\nDad stood up, and I stood up as well. He reached out and gave me a hug with the mandatory man-pat on the back.\n\n\"I love you, Jace.\"\n\n\"Love you too, Dad.\" \n\n\"If you truly love her, if you can put aside your anger and all that for her, if Jess can accept her, then the least I can do is give her a chance.\"\n\n\"Thanks, Dad,\" I said.\n\nWe let go, and I turned to walk back to my office.\n\n\"I promise I'll come by and meet her soon,\" he said as I reached the door.\n\n\"No need,\" I said, smiling at his confused look. \"I hired her as my admin assistant. You can see her when she starts next Monday.\"\n\nDad looked shocked for a moment, then bust out in a guffaw that carried through the heavy doors as they closed behind me.\n\n*****\n\nThe three of us huddled around the cell phone on the counter, holding hands as we anxiously listened to the speaker.\n\n\"So.\" continued her parole officer. \"Looks like your year is up. Tomorrow morning at 12:01 am, the monitor will be turned off. The light will glow a steady blue, and you'll be allowed to remove it. We'll send a courier to pick it up tomorrow afternoon.\"\n\n\"Yes, sir,\" Maggie said, almost bouncing off the walls.\n\n\"You will, of course, be on probation for several years, but you'll be free to do what you want and go where you want.\"\n\n\"Thank you, sir.\"\n\n\"You're welcome. Congratulations,\" he said before ending the call.\n\nAt midnight, we gathered in the living room. Mom and Dad had come over to join us as we watched the ankle monitor's light. At 12:01, it flashed green, yellow, red, then green once more, then finally turned a bright blue that stayed on.\n\nMaggie sat in the chair, choking back the tears as I knelt on the floor and pulled her foot to me. With a screwdriver, I found the locking mechanism and worked it free as we had been instructed. A year of wear had made the clasp corroded so it took a bit of work to get it to pop open, but I was able to get it after a few tries.\n\nThe monitor clattered to the floor, pulling the band with it. An odd stillness filled the room as everyone looked at the plastic device and a magnificent realization took hold.\n\nMaggie was free.\n\nShe looked at me, then fell into my arms crying. Jess and Mom were crying too, and even Dad had to wipe at his watery eyes. Maggie sat back in the chair, drying her eyes and admiring her now free leg. I rubbed the skin where the monitor had been. It was paler than the other ankle but just as smooth as the rest of her.\n\n\"It looks so different,\" she said as tears started to well in her eyes again. \"It looks normal.\"\n\nStill on my knee, I reached into my pocket and pulled out a small box. Maggie was so focused on her ankle that she didn't see it at first, but Jess did and grinned at me. Jess and I had discussed this at length and she even helped with planning and design. Mom, who I'm sure had an idea this was going to happen, still ooh'ed in excitement. She was bouncing on the sofa and was energetically tapping Dad's leg as if he wasn't paying attention already.\n\n\"Maggie I know you just got one shackle off,\" I started, \"but I was hoping you'd be willing to put another one on.\" \n\nI opened the box, revealing the engagement ring inside. It was a white-gold band with three strands of metal interwoven. In the center were three diamonds in a cluster. One strand and one stone for each of us. Maggie held her hand over her mouth, her chin trembling and her eyes dripping tears.\n\n\"I love you.\" I continued. \"And I want you to be in my life forever. Will you marry me?\"\n\nMaggie tackled me, knocking me to the floor. It was sheer luck that I managed to hold onto the ring box.\n\n\"Yes! Yes! Yes!\" she sobbed, face buried in my neck.\n\nJess immediately knelt down and wrapped her arms around us. Mom joined in as well, sandwiching me in the middle. Dad remained seated but nodded at me in approval with his lips pressed together. He took out a handkerchief and dabbed at his eyes. That was about as emotional as Dad usually got.\n\nHours later, when everyone had gone home, the three of us lay in our bed. Maggie's nude body was formed against mine. Jess was spooned behind Maggie, her brown hair draping down and clinging to Maggie's. Maggie rested her hand on my chest and she kept looking at the ring, a perpetual smile playing on her lips.\n\nThe sun was rising soon, but we didn't have any plans for the rest of the day. I kissed Maggie tenderly, then leaned over and kissed Jess. I reached under the pillow and pulled out another box. Maggie smiled as she realized what it was for. Inside was a ring made especially for Jess. It was a narrow Platinum band with three stones spaced evenly around it. Again, one for each of us.\n\nWhen Maggie and I had discussed the possibility of getting married, we had come up with this idea for Jess. I was surprising them both tonight.\n\n\"Jess, as much as I want to marry you as well, and I'm sure Maggie would too, we can't. But we don't need a legal document or a big ceremony to commit our lives together, do we?\"\n\n\"No.\" she whispered shakily.\n\n\"We make an odd family, but we want you to have this and know that it will be us, the three of us, always.\"\n\nJess took the ring and put it on her right hand. She kissed it, tears brimming in her eyes. Maggie took Jess' hand and also kissed the ring, then pulled her down and kissed her passionately. Jess' hand reached over and held mine as they kissed, pulling me over. \n\nI caressed Maggie's soft skin, sliding my hands in between her and Jess to massage her full breasts. The back of my hand rubbed across Jess' nipple, and I heard soft moans from both. Jess' hand slowly moved down as she angled her hips away. I felt a shudder run through Maggie as Jess' fingers caressed Maggie's labia, slipping inside and sliding against her swollen clit. \n\nMaggie's head fell against Jess' shoulder as Jess sped up slightly and kissed Maggie's forehead. I reached down behind Maggie and gently pushed a finger inside her. She gasped as my sister and I simultaneously pleasured her. As we both moved within her, her body started to writhe between us. She rolled her head over and looked at me. She pulled me to her, kissing me. Our tongues danced across each other for a moment as I slid a second finger into her. Jess was massaging her clit faster and harder as I pumped my finger into her. Maggie's head jerked away as her orgasm coursed through her, crying out and shaking in between us. The muscles inside her spasmed against my fingers as a flood of her juices coated them. \n\nAs the last spasms shook her Jess and I withdrew our hands. I rolled Maggie onto her back, and Jess quickly scrambled down between Maggie's legs. I watched in unabashed lust as Jess pushed Maggie's legs up and apart and lowered her head into Maggie's center. Maggie's back arched and held onto Jess' head as Jess began sucking on her clit.\n\nThe sights and sounds were more than enough to send my cock into full rigidity. I moved behind Jess to stand at the foot of the bed. As I ran my hands along her upturned ass, she raised it and spread her legs open for me. I ran the tip of my cock between her lips, drawing out her moisture and making sure I was fully coated before trying to push into her. \n\nI didn't push hard or fast into my sister, not wanting to distract her from pleasuring my fiance. I was enjoying the sight as Maggie's hips started thrusting against Jess' mouth. Maggie looked up at me, then down at Jess, breathing hard as Jess brought her closer to another orgasm.\n\n\"Oh fuck,\" Maggie said hoarsely, looking at me. \"God I love you. I love you both so much.\" \n\nMaggie's hands ran through Jess' hair, holding her in place as Maggie started to tremble and jerk. I felt Jess' hand reached between her legs and start to rub her own clit, trying to match speeds with her tongue. Her fingertips brushed against my shaft, sending shivers racing through my spine.\n\n\"I'm going to cum Jess.\" Maggie cried, \"Don't stop. Make me cum baby. God, make me cum. Yes, yes, yes, ahhhhh!\" \n\nMaggie's face contorted in a soundless cry as she came. Then she threw her head back, screaming out and thrashing against Jess, who was holding on and trying to keep her tongue against Maggie's clit. \n\nJess' hand kept rubbing, and I could feel her pussy tighten around me. Her back arched, and I had to change my angle to keep inside her. Jess was no longer licking but was resting her head against Maggie's thigh. Maggie was caressing Jess' hair, quietly urging her to cum as well. I sped up a little, hoping she'd be able to cum before me. \n\nJess buried her head in Maggie's slit once more, moaning as she came. I held her hips against me, making sure I stayed inside her. Maggie's eyes fluttered as her sensitive clit was stimulated by Jess' heavy breathing.\n\nRecovering, Jess rolled over and lay there panting. I took in the sight of my two beautiful girls, both on their backs, their pussies glistening and their bodies flushed. Maggie saw me looking and raised her arms, inviting me. I crawled up to her, lowering myself when I was in position. Between Jess' juices coating my cock and Maggie's thoroughly soaked pussy, I slid into her easily. She wrapped her legs around my hips and used them to push me into her.\n\n\"I love feeling you inside me,\" she said, kissing me. \n\n\"Mmmm. I love it too.\" I kissed her back, thrusting into her. \n\nBeside us, Jess propped up on her side and smiled. She reached over and tweaked Maggie's nipple before squeezing and kneading her soft breast. Maggie, already sensitive from earlier, closed her eyes and bit her lip as she started to cum. I kept pumping into her as she neared.\n\n\"Cum for me, Magpie,\" I said, using my pet name for her. \"Cum for both of us.\"\n\nMaggie exploded underneath me, her hand clawing at my back waves of pleasure rippled through her. I slowed down, feeling my own orgasm getting closer as Maggie's pushed me nearer to the edge.\n\n\"I'm about to cum,\" I warned, expecting Maggie to let me up. She had tried birth control pills, but they really made her sick. She didn't like the idea of IUDs or anything else inside, so she remained unprotected. Since Jess was a willing recipient, it usually wasn't a concern.\n\n\"Stay here,\" she said as I started to pull out. \n\n\"Are you sure?\" I asked.\n\n\"Mmhmm.\" she nodded. \"I want to feel you cum inside me.\" she breathed. \"Make me yours forever.\"\n\nJess giggled as I sped up again, getting closer and closer. Her hand snaked behind us, massaging my balls as they tightened as my orgasm hit. Crying out, I drove myself deeper into Maggie as my semen rushed out. Maggie tensed too, feeling my cum rush into her. I held on to her, my body trembling as the last spurts of cum shot into her unprotected body. When I regained my senses, I pushed myself up and over her. She looked up at me, smiling.",
        "\"Now I'm yours,\" she said, smiling. \"Now I'm home.\"\n\nI looked at my two girls and smiled. I knew that we'd be together forever, and there was nowhere else I'd rather be.\n\n*****\n\nEPILOGUE\n\nMy wife pushed one stroller through Millennial Park while Jess pushed the other. Of course, Maggie and I eventually had twins. Our two one-year-old girls, Katie and Kristen, giggled as their drivers made the strollers bob and weave around the walkway.\n\nA chill had entered the air, promising fall would soon be here. I walked behind the two girls as David, our three-year-old son, pulled at my hand to catch up.\n\n\"Com'on Daddy!\" he pleaded, pulling me ahead until I was between Jess and Maggie.\n\n\"I think little-man is hungry,\" Jess said.\n\n\"Uh huh, Mama.\" David nodded while looking up at Jess.\n\n\"Where do you want to eat?\" Maggie asked\n\n\"Over there, Mommy.\" David pointed to Park&Grill across the way. We'd eaten there before and he loved their chicken fingers.\n\nJess looked down and beamed at David. She loved being a sister to Maggie and the second mother to our kids. We figured there'd be some interesting explanations eventually, but for now, all they knew is that Mama and Mommy and Daddy all loved each other and, more importantly, loved them very much.\n\nAs we approached the restaurant, Maggie stopped short.\n\n\"Oh shit.\" she breathed, making David's eyes go wide since Mommy had said a bad word.\n\nI looked where she was staring and saw a couple exiting the restaurant. They were nicely dressed, but you could tell the clothes were old and worn. He was yelling at someone I assumed was the manager, who was trying desperately to calm him and defuse the volatile situation. The woman, who was looking at the manger with utter contempt, glanced over at us. Her eyes narrowed, then she gasped as recognition took. \n\nShe grabbed the man's arm, who looked at her then over at us. The same looks passed through him, and he started walking over towards us, pulling the woman with him. The manager, apparently now forgotten and seeing her opportunity to escape, quickly went back inside.\n\n\"Margaret.\" the man said sneering when he approached us.\n\n\"Mother. Father.\" she answered coldly, bristling at the name she hated. \n\n'Oh shit' was right! Her parents! Jess and I exchanged a brief glance of concern. I reached down and took Maggie's hand. Seeing this, her father turned to glare at me.\n\n\"I know you, don't I?\" his breath was pungent of garlic and wine. \"Who the hell are you?\"\n\n\"Yeah, you do know me,\" I replied coolly, trying to keep my composure. \"I'm Jason and this is my sister Jessica.\"\n\nHis eyes went wide and his mouth dropped. His wife's mouth likewise hung open. He looked down and saw the kids, one of whom was hiding behind my legs. He pieced it together.\n\n\"Yeah. My family.\" Maggie said proudly, taking my arm in hers. Jess stood on the other side of Maggie, putting her arm around her. \"Our family.\"\n\n\"How-\" her mother began, but Maggie cut her off.\n\n\"You wanted soooo badly for us to be like them,\" Maggie said. I could hear a tremble in her voice as she restrained herself from screaming at them. \"You thought they were perfect. And you know what? You were right! They are perfect. They are the best people I have ever, ever met. And the best people I could ever love. They helped me through the worst part my life and gave me a second chance.\"\n\n\"You married him.\" her father stated, stunned. Her mother looked down at Maggie's rings, and I could all but see the calculations run in her mind as she figured their value. I watched as her eyes flickered to Maggie's necklace and earrings as well, even down to her shoes. Anything of potential value was itemized and appraised. Everything except her own daughter. Then she looked over at our children.\n\n\"We have grandchildren?\" her mother asked, her eyes starting to light up. It was starting to creep me out the way she was staring at our kids, almost as if they held the key to whatever it was they'd failed to do with their own kids years ago.\n\n\"No!\" Maggie said, silencing them immediately. \"You abandoned me. Told me that you no longer had any kids. So you don't get to call them your grandkids. You don't get to have anything to do with them. That's reserved for my real Mom and Dad: Jace and Jess' parents. Who have accepted me despite everything and shown me the love you two never could!\"\n\nMaggie took a deep breath, reigning in her emotions. \n\n\"You? You get to remember this moment as when you finally realized everything you could've had.\"\n\nMaggie looked over at me. I squeezed her hand reassuringly. She turned back to her parents.\n\n\"And everything you lost.\"\n\nForcibly, Maggie pushed past them, one stroller in front of her, and headed into the restaurant. Her Father looked at me as if at a loss for words for the first time in his life. \n\nI reached down and picked up David, who eagerly jumped into my arms. He'd never seen Mommy that angry, and this entire situation had him upset. Jess took my arm, steadying herself and using me for support. If anything was going to bring on an attack it would be this. As if sensing that Mama needed him, David reached for her. She took him from me, and I saw the storm in her eyes fade. I smiled when I saw that. My son also could help her. She held him close and I took the stroller from her.\n\nNot used to be ignored like that, Maggie's father loudly cleared his throat. I turned my attention back to Maggie's parents. I met her father's stare.\n\n\"Now you listen-\" he started.\n\nAt one point, years ago, I had envisioned what I would say to them if I ever ran into them. I had a whole speech prepared, one that would have been Oscar worthy. It was big and dramatic, filled with a litany of insults and slights against him, his parenting abilities, and his worthiness of being called a man. At that moment, standing there face to face with him, I couldn't remember a single thing I had planned. So instead I just winged it.\n\n\"No!\" I interrupted. \"You listen. Maggie told us everything. Everything you did to them. Every sick, deranged, twisted thing. We know about the note your son left that you never told the police about. I'm pretty sure that could be called withholding evidence. While it may not mean much in a criminal court, I'm pretty sure my team of lawyers would have a field day with it in a civil court.\"\n\nHer father's face went pale as he took a small step away from me. \n\n\"I would strongly suggest that the next time you see us, you stay away,\" I said through gritted teeth. \"If you see us on the same sidewalk, you cross the street.\" I leaned closer to him. \"I will never give you a chance to hurt my family ever again.\"\n\nI took a deep breath, trying to calm myself down.\n\n\"I'm done with you,\" I said to them. \"If I haven't already made it abundantly clear, I would recommend you not try to contact us.\" I narrowed my eyes at him. \"I'm not kidding about that team of lawyers on retainer.\"s\n\nWith that, Jess and I pushed the stroller and walked past them to get some lunch. We never looked back to see what they did.\n\n*****\n\nThat night, Mom and Dad said they came over for dinner, but it was mainly so they could spoil their grandkids. David loved climbing over Dad, who made exaggerated noises and flailed around with him. It reminded me of how he used to play with us when we were little. \n\nLater, Dad and I sat outside by the pool enjoying a cold beer together. I recounted the episode today with Maggie's parents. As I did he shook his head in pity and disbelief. \n\n\"Hard to imagine how two people could be so wrong when it comes to kids nowadays,\" he said\n\n\"Yeah, but Maggie turned out okay in the end.\" \n\n\"Thanks to you and Jess,\" Dad said, raising his bottle in salute. \"I gotta admit, I was wrong.\"\n\n\"About?\"\n\n\"I remember telling you that you couldn't fix some people who were broken, and I was convinced you couldn't fix her. You proved me wrong.\"\n\nI looked back at the house, seeing Mom, Jess, and Maggie in the kitchen. I could hear the peals of their laughter echoing outside. Maggie caught my gaze and flashed the \"I Love You\" sign with her hand, then turned her attention back to their conversation. Jess, seeing mine and Maggie's little exchange, also looked at me. She flashed the \"Peace\" sign, but we knew what it really meant. \"Me too.\"\n\nBeing by the pool, with a slight chill in the air, I was reminded of a similar conversation Jess and I shared years ago. I smiled at the memory, taking a long pull from my bottle.\n\n\"Well, yes and no Dad. What you were actually wrong about was Maggie being broken. She was never really broken. Because if she was broken, then the same could easily be said about me and Jess. The three of us were all shaped by Maggie's parents in some way. Her directly; us indirectly. In the end, Maggie's like me, and she's like Jess. And none of us are broken.\"\n\nI paused for a moment, remembering what I said to Jess years ago. Dad was looking at me expectantly. \n\n\"We're all just a little...dented.\"\n\nThe End.\n\n******\n\nAUTHOR'S NOTE\n\nI want to thank everyone for reading the Dented series. This was a story I've had in my head for several years in some shape, form, or fashion. It's taken a while for me to figure out the best way to get it written, and I hope that it's been enjoyed. I know there was some initial resistance to the idea of Maggie joining the twins, so I hope that the resolution has helped allay any concerns.\n\nAs for what's next, to be honest I'm not sure. One thing I do know is that with the time gaps in Dented, there are plenty of opportunities for \"Dented Tales\".\n\nThank you again for reading!"
    ],
    "authorname": "mycuriousnature",
    "tags": [
        "romance",
        "taboo",
        "incest",
        "brother",
        "sister",
        "romantic"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/dented-ch-03"
}