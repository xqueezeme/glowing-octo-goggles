{
    "title": "Life is a Carnival",
    "pages": [
        "This story takes place in the summer of 1978. The title was borrowed from a song written by Rick Danko, Levon Helm and Robbie Robertson and performed by The Band, but the tale itself belongs to Billy Morton and his special friend.\n\n***\n\nChapter 1: The Carnival comes to Colonie.\n\nThere was a time in this fair land when carnivals used to travel up and down the east coast of the United States during the warmer months, following the good weather as they pitched their tents in small towns for a week at at time.\n\nThe rides were put up and taken down time and time again, and although their safety may have been questionable, I don't recall any accidents in the years that the outfit stopped in our town, and they provided entertainment back in the days when there wasn't a Six Flags around every corner, and watching TV meant a choice of 2 or 3 channels at best.\n\nThe people that traveled with these rag-tag caravans were more entertaining than the rides were, and we used to enjoy making fun of the motley looking crew as they tried to hustle us into playing their rigged games. Since they seemed to corral plenty of rubes into losing their money on games of no-chance, I suppose that in the end they got the last laugh.\n\nThey arrived on Sunday to set up so they would be ready to operate on Monday through Saturday before breaking it down late Saturday night and moving on to the next town. By daybreak Sunday morning they would be gone again until the next July. I knew the routine because they held the carnival just down the road from my house, on a field that was unused the rest of the year. \n\nOut of the twenty or so years that I lived there, one year stood out for me for a very special reason. It was the summer of 1978, and the O.C. Buck Shows were making their annual visit to Colonie, New York in July. Many of my friends had just graduated high school and some of us were going to college, while the others were just living from day to day with no real plans for the future.\n\nWe had summer jobs during the day, and the nights were spent chasing girls or drinking beer. If you had the beer, the girls would follow, for the most part. I was hopeless, though. Shy and insecure, I didn't usually bother chasing girls because I knew they wouldn't let me catch them, so I concentrated on sports. While I would have much preferred talking about getting into Diane Lambert's pants, I settled for knowing how many doubles Chris Chambliss had. \n\nThe first night that the carnival was open, tradition dictated that we all flocked as a herd to check it out. Why we felt the need to do that, I'm not sure, because it was the same thing every year. Same rickety rides, and the same crooked games run by people with few teeth and fewer scruples, but our attendance was a ritual that reflected the boredom of our lives in the dog days of summer.\n\nI remember being on The Scrambler that first night, when for some reason, it started running slow and never sped up, which made for a boring ride. They stopped it, and called for somebody named Ken to come fix it. Naturally, we hooted and hollered and bitched about it, and sat in the cabs while a guy jumped the low fence that surrounded the ride and weaved through the metal maze to get to the mechanical part in the center.\n\nIt was a skinny guy in a tank top and bib overalls that jumped up on the thing and started cranking something around with a wrench. For a skinny guy, he had pretty big muscles with tattoos bulging on his arms, and he was really busting his ass to do whatever it was he had to do to get the ride going again.\n\nHe jumped down and went back around the fence to a board where the operator ran the controls. The operator stepped aside to let the mechanic play with the controls for a minute, and the ride started moving again right away, only this time it started whirling around at top speed, and we all cheered this Ken guy for a job well done, He gave us a half-hearted wave in response to our ovation, and after watching the ride spin long enough to make sure it really was fixed, headed off to parts unknown.\n\nAs I flew by this Ken, I noticed something strange. I thought I was seeing things, but regardless, I couldn't wait for the ride to stop so I could ask the guys if they had noticed what I did. They hadn't, and thought I was crazy, or just seeing things when I told them about it.\n\nI hadn't been crazy or hallucinating, and after asking a couple of questions of the single-toothed ride operator, I confirmed that my observation had been right on. The guy Ken that had fixed the ride, was not Ken after all. It was Kim, and Kim, as I had noticed in a fleeting glimpse from my perch in the ride, was a girl.\n\n***\n\nChapter Two: Kristy McNichol.\n\nHappy to prove to all my friends that I was an astute observer, I gave them all the word that the Ken had in fact been Kim and was a girl. They were not impressed, which shouldn't have surprised me, but for some reason did anyway.\n\n\"Who gives a shit?\" was the response from Dan.\n\nI did. I thought it was neat that a girl could do something mechanical like that - something none of us would have had been able to do in a million years - and besides, I thought she was cute.\n\n\"You would,\" I was told. \n\nI did, and as a matter-of-fact she reminded me of that girl on television. Kristy McNichol; haircut and all.\n\n\"Kristy McNichol is a dog too, and besides, whatever he or she is, we're talking about a fucking carny here, Billy!\" Tommy opined derisively, and his human laugh track Dan howled in agreement.\n\n\"Check her out closer,\" I pleaded. \"Don't you think she's cool looking? A little like Mackenzie Philips too, maybe.\"\n\n\"Mackenzie Phillips? One look at her and I can't get a boner for a week!\" Tommy insisted, to a roar from some of the guys.\n\nI should have known better than to admit to being attracted to somebody, let alone somebody not classically attractive, but my mouth had worked faster than my brain once again. Should have learned my lesson by now, I remembered with considerable anguish, as I recalled that time back in school saying that I thought Lois Randall was beautiful. \n\nLois was what some might call a hippie, but I preferred to think of as more of a free spirit, similar in build to this Kim girl but in a more feminine package, and after mentioning I thought that she looked cute I was ridiculed and had to hear about my questionable taste for months afterward. How long would I be forced to pay for this latest expression of my taste, I wondered?\n\nMy friends didn't want to chase after this Kim girl, so I didn't say anything else about it, but instead kept an eye out for her as we walked the grounds. At least it hadn't rained, so the walking was easier than it would become after a storm, when you would have to clomp through the thick mud and soggy hay they used to absorb it.\n\n***\n\nChapter Three: Billy's Girl.\n\nWe were screwing around with the guy that was operating one of those rigged games - you know the one where you try to shoot out a red star on a card using BB guns with crooked sights - leading him on by pretending that we were actually considering letting him hustle us, when my friend saw her.\n\n\"Hey Billy,\" Dan called out. \"There's your girlfriend over there.\"\n\nSure enough, it was Kim. She was pulling a hand truck loaded with boxes, and I stared at her bicep with the tattoo of an anchor on it, thoroughly fascinated. I don't know whether or not it was because she was doing stuff that you would normally consider man's work, but she was hypnotizing to me, and so I found myself following her as she delivered the supplies.\n\nMy group of friends proceeded to follow me, in an effort to make me feel as embarrassed as possible. Obviously I was not the most popular guy in the group, but this was common practice with all of us at the time. Giving each other a hard time was a way of life, and we all took pretty much as much as we gave, and this was apparently going to be my turn yet again.\n\nKim had stopped the hand truck at the french fries stand and was effortlessly passing cases of cooking oil up to the counter person. How sexy she was, I thought to myself while watching her work. She was wearing a white tank-top t-shirt under a pair of bib overalls, and as she lifted things her formerly skinny biceps bulged and the muscles rippled beneath.\n\n\"Hey, it is a girl,\" Jerry proclaimed loudly. \"You can see her tits from the side! She's got hangers!\"\n\n\"Oh, now I see why Billy boy is all hot and bothered,\" Dan observed. \"Check out her pits!\"\n\n\"Lois Randall revisited,\" chimed in Tommy, who knew me too well. \n\n\"Maybe she's got hair on her chest too.\"\n\n\"Ask if it grows down to her balls.\"\n\n\"Fuck all of you guys!\" I snapped before stomping off in the other direction, violating the cardinal rule of hazing. Never let them know they got to you.\n\n\"Don't go Billy,\" Dan yelled. \"We'll set you up.\"\n\nI hurried away as Dan yelled over to the poor girl, who was about to become an innocent victim of my friends immaturity, \"Hey Kim! Billy over there has the hots for you!\"\n\nKeeping my head low, I ducked behind one of the kiddie rides and made myself scarce for a while, hoping that the girl hadn't seen my face. I spent the better part of an hour avoiding that entire area, which wasn't easy to do considering the carnival grounds weren't that vast an area to begin with, and tried to calm myself down.\n\n***\n\nChapter Four: Let me please introduce myself.\n\nAfter I had sulked for an appropriate length of time, I allowed my best friend Barry to catch up with me. Barry had mercifully refrained from razzing me earlier, and out of the five of us in our group, he had always enjoyed the most success with the ladies, and had tried to set me up with girls many times in the past. It wasn't his fault that I always chickened out or screwed up royally, and once again he was stuck consoling me. \n\n\"You can't let them get to you like that,\" Barry opined, and as usual he was right.\n\n\"Ah, I'm not really mad, it's just that sometimes they get to be too much.\"\n\n\"Fuck them. Everybody going to be going their own way pretty soon, and we'll be in college, and then you'll be around plenty of females.\"\n\n\"Yeah, but every time I get a chance to be with a girl, those guys try to screw it up for me, even before I get to do it on my own. I can't imagine what they must have said about me to her.\"\n\n\"They tried to be funny, but that girl shut them up pretty quick, especially Dan,\" Barry noted. \"She doesn't take any crap from anybody, but afterward I had a few words with her.\"\n\n\"So, are you meeting her afterward?\" I asked, knowing that after a few words with Barry the charmer, girls were usually on their backs with their toes pointing upward shortly thereafter.\n\n\"No, nothing like that,\" Barry said. \"I told her that a friend of mine really thought she was cute, and he wasn't immature like the rest of our pack, so she said that if you want to talk to her, you should go find her when they start to shut down around 11 or so.\"\n\n\"Don't you think she's cute?\" I asked Barry, searching for support. \n\nBarry shared some of my interests in certain types of girls - hell, he had confided to me that he had gotten into Lois Randall's pants just after I had confessed my lust for her, although he swore me to secrecy on that.\n\n\"She's cute in a way, but she's a little rough looking for my taste,\" Barry admitted. \"Hey, I can appreciate where you're coming from though. She's got an edge about her, or something like that.\"\n\n\"How old is she?\" I wondered aloud.\n\n\"My guess is that she's about our age, although that's a tough call. She could be 30 for all I know, but with the tattoos I guess she'd have to be at least 18. You going to go after her?\"\n\n\"Yes,\" I said. \"Maybe, I guess. After all the wise-asses are gone maybe I'll be less nervous.\"\n\n\"Be careful though, man,\" Barry cautioned me. \"This is a traveling carnival, after all. I mean, look at everybody that works here. They all look sort of the same - like they all are related or something.\"\n\n\"Not Kim,\" I said. \"She's different.\"\n\nThis was going to be the girl that turned my life around, and I was determined to introduce myself to her that night.\n\n***\n\nChapter Five: Hello.\n\n\"Excuse me,\" I said in my most manly voice.\n\nThe first night of the carnival was winding down, and minutes ago I had spotted Kim striding across the midway, dragging a canvas sack full of something.\n\n\"What's up, sport?\" Kim said, not slowing down a bit as she glanced up at me.\n\n\"I just wanted to introduce myself,\" I said, trying to keep up with her. \"I'm Bill - Billy.\"\n\n\"Hey Bill Billy,\" Kim answered. \"Wotcha want?\"\n\nGood question. This was my chance to flee, as always, when dealing with girls who surprised me by allowing me to engage them in conversation.\n\n\"Oh, I just wanted to say hello. I was on the Scrambler before - you know - when it slowed down and you fixed it?\"\n\n\"Which time?\" Kim snapped. \"The thing's a fucking piece of shit, like everything else around this fucking freak show.\"\n\n\"Oh,\" I replied, taken momentarily aback by the language coming out of her, and realized that it would be impossible for her to know which repair time it was that I was referring to, and furthermore, she really didn't care.\n\n\"I was thinking that maybe when you get done working we could maybe talk or something.\"\n\n\"About time,\" Kim snapped. \"I was beginning to think this was the celibacy capital of the world.\"\n\n\"Huh?\" I asked, not knowing what she meant and not real sure what the word celibacy meant either.\n\n\"Sure, kid,\" Kim answered as we reached her destination. \"Get us some beer, and meet me over by the Giant Rat in a half hour,\" she instructed me, and without further adieu she quickly disappeared.\n\nI knew where the Giant Rat was, having already paid a quarter to see the rodent, which wasn't quite what had been advertised by the banner or promised on the banner that flapped above the booth, which showed the rat being about the same size as the alleged rat tamer, who was cowering in fear while cracking a whip in the rodent's direction. Finding that ripoff would pose no problem for me.\n\nThe beer was the problem. The drinking age was 21 and I wasn't. Old enough to drink, smoke and join the service and die, but not old enough for beer. The nearby store was hopeless, as they knew my age all too well, and had already closed for the night by now anyway.\n\nThe alternative was the beer tent, and I couldn't get in there either. I know that because we had all tried earlier that night and failed. I didn't think well under pressure like this, and I didn't have many options.\n\nI knew my old man had quarts of beer in the refrigerator - good old Rupert Knickerbocker - and I was known to pinch one on occasion, but the sound of me coming in the house would probably get the folks up, and keep me in for the night.\n\nI had nothing. Faced between not going back to see Kim, or returning to face the music, I chose the latter. Not used to making manly decisions, I surprised myself by going over to the Giant Rat and waiting for Kim, proving at least that I really thought she was cute enough to humiliate myself by admitting my failure at her assignment.\n\n\"Where's the brew, Sport?\" Kim asked, arriving almost an hour later and seeing me empty handed.\n\nThis was the first time I had seen her empty handed too. No tool belt around the waist and no hand truck in tow, and she had dropped the front of her bib overalls down as well.\n\n\"Uh... er... well... er...\" I stammered.\n\nActually, I suspect I sounded even more addled than that, but you get the idea. My nervousness was caused by two factors; the first being that I did not have the beer, and the second, far more compelling reason for my babbling, was that I was trying not to stare at Kim's tits, which were on display rather brazenly right in front of me. Trying and failing miserably to ignore them even by my standards at the \"don't stare like a pervert\" test, I simply stood and gawked at her.\n\nThe shirt she was wearing under the overalls was a white tank-top t-shirt - the same kind that my old man wore under his regular shirt during the day and sometimes by itself after getting home from work, much to my mother's dismay. Kim's tits were unsupported and hung down near her waist, and the outline of her nipples was plain to see through the cotton as well.\n\nAll those incredible womanly treasures showcased in a grimy, sweat-stained man's t-shirt made me weak in the knees and light in the head, as well as lost to the world.\n\n\"Hey! Sport!\" Kim barked, snapping her fingers down at breast level in an effort to get my attention. \"You awake or just slow? Where's the beer?\"\n\n\"Uh... couldn't get any,\" I finally said.\n\n\"You broke?\"\n\n\"No!\" I protested, holding up a crumpled five dollar bill. \"It's just that I'm not 21.\"\n\n\"So what? You got no fake I.D. either, Sport?\" Kim asked, shaking her head at my incompetence, and after grabbing the money out of my hand, went over to the beer tent, climbing under the rope and disappearing inside.\n\nA minute later she emerged with a six pack of Schlitz Tall Boys. Five of them she carried by the loose plastic ring, and the one missing was in her other hand, almost drained by the time she got back over to me.\n\n\"You got a place to go?\" Kim asked, and after I shook her head she led me back behind the Giant Rat trailer.\n\n\"To go?\" I asked. \"You mean a place to live? Uh - sure. I live down the road with my folks.\"\n\n\"Well, that won't work will it? Make yourself at home, Sport\" Kim said, waving at the two plastic milk crates near the canvas wall and then tipping the beer can high, draining it, and throwing the can into a barrel. Kim let out a loud burp as she pried another can of beer out of the rings and tossed it to me before getting herself another one.\n\nI sat down and opened the beer, and then tried to suck the foam out of the opening as it erupted, while Kim sat down next to me and poured the beer down her throat like it was water.\n\n\"Wow, you can really drink beer!\" I said, admiring her drinking style.\n\n\"Work hard, drink hard, and party hard,\" Kim answered.\n\n\"I didn't think you were old enough to buy beer,\" I said.\n\n\"I'm not, Sport.\"\n\n\"How did you...\"\n\n\"Attitude, Sport,\" Kim said assuredly. \"Act like you don't expect to be questioned and you won't be.\"\n\n\"That's cool,\" I said, watching Kim fire another empty into the barrel. \"So, do you go to school?\"\n\n\"School?\" Kim chuckled. \"Yeah, O.C. Buck University. So, you want to party?\"\n\nDid I want to party? \n\n\"Uh, yeah, this is cool,\" I answered, and got a weird look in response.\n\n\"How old are you, Sport?\" Kim said as she looked at me with a look that was part-curiosity and part-amazement.\n\n\"Old enough!\" I proclaimed proudly.\n\n\"Old enough for what?\" Kim laughed. \"Cub Scouts?\"\n\n\"Everything,\" I said with a lot of bravado that didn't really exist. \"Old enough for everything.\"\n\n\"I seriously doubt that!\" Kim answered with a laugh. \"You got any weed?\"\n\n\"Grass? No, but I can probably get some,\" I said hopefully, having smoked it but never having bought it before.\n\n\"So why did you want to meet me in the first place, Sport?\" Kim said.\n\n\"Well, you know, I thought maybe - I dunno,\" I mumbled.\n\n\"You think maybe that we could make out, and maybe feel each other up or something?\" Kim said, leaning into me and laughing.\n\nIt was like she was reading my mind. That was exactly what I was hoping for.\n\n\"I guess,\" I confessed, putting my arm around her shoulder, barely missing her head with my elbow as I swung it around.\n\n\"You're a trip, Sport,\" Kim replied, shaking her head at me.\n\n\"I'm not much good at this,\" I answered.\n\n\"I kinda figured that out already,\" Kim said.\n\n\"I always get nervous around pretty girls,\" I went on, trying not to start stuttering or bawling or something stupid like that. \"I was hoping that maybe I would be different around you, because you aren't from around here and you don't already know what a loser I am.\"",
        "\"Pretty?\" Kim said derisively, and for some reason looked at me like I was putting her on.\n\n\"Well, of course you are,\" I said.\n\n\"You're cute, Sport,\" Kim said, patting me on the knee and rising to her feet. \"Not ready for prime time yet, but there's something about you that I like, for some reason.\"\n\n\"Are you leaving?\" I asked, scrambling up to my feet before she ran off.\n\n\"Long day, Sport,\" Kim replied. \"And while you're a bit on the naive side, at least you've got more testosterone than anybody else around here so far.\"\n\n\"Can I see you again?\" I asked hopefully, following her over to the side of the trailer.\n\nKim stopped and turned back to me, and I had to put on the brakes to avoid colliding with her, so close was I on her trail.\n\n\"Why? You want to be my boyfriend? Want to take me to the Prom?\" she said with a chuckle, and it seemed like at least I was amusing her, if nothing else.\n\n\"No, the Prom was back in May, and I didn't go,\" I said. \"If you were around here then, I would have asked you.\"\n\n\"I never went to any Proms either, Sport,\" Kim said, in a voice which for a second had become nearly as melancholy as mine had been. \n\n\"Then can I - see you again - I mean?\" I repeated, and the desperation in my voice must have been as pathetic as it was obvious, but I didn't really care at this point.\n\nKim had grabbed the remaining 2 beers and was swinging them lazily at her side as we talked, and now she was looking at me and setting them down on the ledge.\n\n\"Not at night,\" Kim said. \"Look, if you want to come by during the afternoon one day, maybe around noon or so, I'm around. It's quiet then.\"\n\n\"Tomorrow at noon?\" I asked hopefully, and when Kim nodded, I wanted to jump up in the air.\n\n\"Take this with you, Sport,\" Kim said, and before I knew what was happening, she had put her right arm around my neck and kissed me.\n\nCalling it a kiss would be an understatement. Kim's mouth covered mine and she thrust herself into me, and her tongue was dueling with mine while her lips were almost trying to suck the life out of mine. I could feel her breasts rubbing against me as I struggled to keep my mouth attached to hers.\n\nSuddenly, I felt her hand around the front of my pants, her fingers searching - searching and at last finding my dick through the fabric. Thank goodness it was hard or else she might never have found it, but Kim was grabbing the little bulge my dick had caused in the denim and was pulling on it.\n\nNot for long, however. A couple of tugs and I let out a little gasp, and as I jerked back and bent forward at the same time, my dick exploded.\n\nKim had leaned back when she heard my odd noises, and now she was being treated to the sight of me having an orgasm, my body spasming around while she kept playing with the lump in my pants until I calmed down.\n\n\"Damn! Just like that, Sport? You'd be the quickest date in history. You really gotta get out more,\" Kim said with a laugh after letting go of my unit, and said goodnight to me, walking back out onto the nearly deserted midway with the remaining beers in her hand.\n\nI followed her after my legs felt more able to support me, and I was grateful that there were few people remaining on the grounds to see the big stain that covered the front of my pants, although if my friends had been still around I admit that I might have been flaunting it as a badge of honor.\n\nBriskly walking home, I hustled to my room and gingerly pulled down my formerly white underwear, which were saturated with my cum, as were my pubes. After contemplating my scrotum, and trying to figure out how a puny sac like mine could have produced what seemed to be a pint of semen, I cleaned up and went to bed.\n\nAfter staring at the ceiling for an hour, I let my hand slide under the covers, knowing that I would never get to sleep like this. After replaying the evening in my mind while yanking another orgasm out of myself, I finally was able to drift off, dreaming of Kim and tomorrow.\n\n***\n\nChapter Six: Our house.\n\nThe dreaded rain had come that morning, which combined with the inevitable crowds trampling through the field later would turn the carnival grounds into a quagmire before long, and when I went hunting for Kim it was already well on the way to becoming a swampy mess. \n\n\"Didn't expect to see you, Sport,\" Kim had declared as I tracked her down around the cotton candy stand, covering stuff up with tarps. \"Kind of a shitty day for socializing.\"\n\n\"We - I - thought maybe we could go to my house and hang out,\" I said, or asked, whichever it sounded like. \"I live just down the road.\"\n\n\"Anything is better than swimming in this crap,\" Kim said after looking at the puddles that were forming all around us. \"Lead the way, Sport.\"\n\nI had brought an umbrella, and despite her making a face when I opened it, Kim let me hold it over her as we walked down the street. She was wearing the same stuff she had last night, which was fine with me, because she was so sexy just the way the was. That shag haircut and those sexy arms with the awesome tattoos drove me wild.\n\n\"Hey, you've got a really nice house here, Sport,\" Kim said as she followed me inside our family's very modest home.\n\nKim looked around like it was a museum, and while the place and the furnishings were alright, in retrospect neither were all that much to brag about, and I probably realized that fact even then.\n\n\"The real nice houses are up the road the other way,\" I informed Kim. \n\n\"Looks good to me,\" Kim said, and I shrugged my shoulders, supposing that if you were neighbors with the Giant Rat, even our modest dwelling was a significant step up the housing scale.\n\nAfter Kim had taken a tour of the house, which took about a minute, she asked me if I had any beer. The old man had a bunch of quarts of cheap beer in the refrigerator and some in the pantry in reserve, and I had already planned on pinching one or two if Kim had asked.\n\nI opened one of the quarts up and went into the cabinet for a couple of glasses while Kim looked around the laundry room off the kitchen.\n\n\"We don't need glasses, Sport,\" Kim informed me as she took the bottle from me. \"Unless you've got a problem with my back wash.\"\n\nI had no problem with anything Kim did, and after she took a long belt of the brew, she handed it back to me.\n\n\"You guys got a washing machine too?\" Kim said. \"Hey, would you mind if I washed my clothes while we're hanging around?\"\n\nKim asked, but was already undoing her bib overalls and taking them off as she spoke.\n\n\"While they're washing, is it okay if I took a shower? Noticed that you have one.\"\n\n\"Uh - yeah, sure,\" I said, as a whirlwind of things began happening.\n\nKim was steeping out of her overalls, and then peeling off her panties and tank top - right in front of me!\n\n\"Here you go, Sport. You can do the honors, because I don't know how to work one of those damn things. Be right back.\"\n\nThe next thing I knew, Kim was in the bathroom, turning on the shower, and I was standing in the middle of the kitchen with a pile of Kim's dirty clothes in my arms. \n\nThat could not have just happened. Did I really just see Kim naked and watch her prance around without trying to hide anything?\n\nI took the clothes into the laundry room while I tried to regain my composure, dumping some Tide into the drum while turning on the machine and adjusting the settings. Kim's clothes did not add up to much, but I took a careful inventory and examined each item as I went along.\n\nOne pair of panties. Pink. Very worn and slightly discolored. The first pair of worn panties I had ever touched, outside of my Mom's, and those sure as hell didn't count. Bringing the panties up to my face, I inhaled deeply, and the slightly rank and pungent aroma immediately made my dick hard. \n\n\"You're a sick fuck, Billy Morton,\" I noted in a whisper, but took another deep hit anyway.\n\nThe wife-beater t-shirt had seen better days. It was stretched out and had stains around the armholes, and that so offended me that I also breathed in the scent of Kim from the shirt as well. Her sweat smelled so sweet that it was like perfume to me. \n\nThe overalls were worn and tattered, with grease stains and rips galore. I emptied the pockets before tossing them into the washer and put her belongings on the table; 17 cents, a piece of paper with a phone number on it, a wad of tissues and a condom.\n\nA condom? I held up the square, foil wrapped condom and was stunned. I had seen them before, of course, and had bought them once as well, had tried them on and had eventually masturbated into most of them of them. Even carried one around in my wallet in case I ever needed it, but I think that one had simply rotted away long ago. \n\nWhat was a girl doing with one, though? Was she planning on me having sex with her? Did she want me? I had maybe three hours before my mother would get home. That would be plenty of time, I guessed, so I waited and listened for the shower to turn off and for Kim to emerge.\n\nIt had all happened so fast before, that it seemed unreal. The way that Kim just peeled off her clothes - even though she had her back to me most of the time - was so unlike the way girls around here acted.\n\nAnd what a body Kim had! She was obviously the most beautiful girl I had ever see completely naked, since she was the first. Even through she had broad shoulders, she was pretty slender, and had a cute ass on her as well, including a tattoo of a bumble bee on her right butt cheek. Her legs were skinny but nice, and she had a rose tattoo on her left ankle.\n\nHer breasts. I wish I had gotten a better look at them, but from the brief glimpse I had gotten earlier made them appear to be pretty big, especially since the rest of her was so skinny. I only hoped that I could get a better look at them when she came out of the shower.\n\n***\n\nChapter Seven: You got another towel?\n\nI didn't have long to wait. After the shower got turned off, it was only a minute before the door opened and Kim came out. Naked.\n\n\"You got another towel, Sport?\" Kim asked. \"The ones hanging up in there are all damp.\"\n\n\"Uh - yeah,\" I said, having forgotten that company wasn't expected, and I went to the linen closet to get a couple for her.\n\nUnable to stop looking at her, my foot caught on the leg of a kitchen chair, and I almost fell on my face. That got Kim to cackle as she watched my lame behavior, but I hardly cared.\n\nWhile I got the towels, my eyes did a visual examination of Kim. She had a big triangle of hair between her legs, dense and medium brown in color, and her breasts, while not full, hung low and had nice fat crimson nipples on them. \n\n\"Thanks, Sport,\" Kim said, taking one of the towels and using it on her hair, vigorously rubbing her dripping locks.\n\nHer slender arms upraised, I was afforded an unobstructed view of the deep hollows of her armpits, and the modest wisps of auburn hair that sprouted from their centers. Certainly nothing like the wild jungles that Lois Randall sported, and unlike Dan's cryptic comment from the night before, not more hair than I had. The fur looked really sexy on her, though, and I enjoyed watching her tits jiggle and sway as she dried her hair.\n\n\"Like what you see, Sport?\" Kim asked, having been watching me drool while staring at her.\n\n\"Oh, I'm sorry,\" I said, looking away and feeling my face flush with embarrassment.\n\n\"I didn't say look away,\" she told me. \"I asked if you liked what you saw. You must not have too many women around these parts. You got the look of an inmate who has been incarcerated most of his life.\"\n\n\"No, I've never been in jail,\" I assured her, looking back to see her rubbing the towel through her bush and inner thighs. \n\n\"Didn't think you had the convict look,\" Kim said with a chuckle. \"Does this bother you - me standing here naked in front of you like this?\"\n\n\"Bother me - er no.\"\n\n\"So, what do you want to do while my clothes dry?\"\n\n\"Uh... you know, my father wears shirts like yours, and he's got some that don't fit him,\" I said, walking away from a naked girl like an idiot and going into my bedroom to rummage through the back of my dresser. \"Uh - he outgrew them and he gave them to me. They're almost new, but I don't like them, so if you want them...\"\n\nI pulled out a few of the tank-tops and went back toward the kitchen, but Kim was standing in the doorway after I turned.\n\n\"Here,\" I said, holding out the shirts for her.\n\n\"You really want me to put clothes on, Sport?\" Kim asked, dropping the towel and standing there, moist and beautiful and naked.\n\nI lowered my hand that held the shirts, mainly because it showed how badly my hand was shaking, and tried to think of something to say. Of course I didn't want her to get dressed. I wanted to stare at those incredible banana tits all day. Speak, damn it.\n\n\"Cat got your tongue, Sport?\" she asked with a snicker. \"Since I'm already naked, and we've got some time to kill, I figured you might want to ball me.\"\n\n***\n\nChapter Eight: Wrap it.\n\n\"Well?\" Kim asked.\n\n\"Yeah. Sure,\" I replied at last, my voice rising like a goose.\n\n\"Thought you might like that idea,\" Kim said, and came over to me and pulled my shirt over my head.\n\nShe smelled so sweet now as she stood next to me, running her hand over my bony, hairless chest before going down to my belt and deftly undoing it. My jeans followed suit, and Kim giggled as she knelt down to pull my jeans off of my ankles.\n\nMy dick was standing out straight, pressing against my fruit of the looms, which was likely the source of Kim's amusement, but she was already moving on. Her hands were under the elastic, and I felt them sliding down under Kim's urging. My dick sprang upwards after being freed, and I was so happy that I had taken the steps I had done early that morning after taking a shower, so that Kim could see me at my very best.\n\nWhat I had done that morning, after emerging from the shower, was to take some measures to try to mask my shortcomings a bit. I had a hard-on, of course, and as I looked at my reflection in the mirror, I was reminded that I had not been overly blessed in the genitalia department.\n\nI assume that Mother Nature, or the creator, or whoever was in charge, had taken an interest in me from the start. It was determined that what this kid with the faint acne scars on his cheeks that still lingered around, and the over-sized ears, along with the skinny body and insecurities galore needed, was a small dick.\n\nNot incredibly small, but not nearly big enough to suit me. I always claimed to have the standard six inches, but to get that would take some creative measuring and a generous scorekeeper to credit me with much more than 5. It wasn't very thick either, and I suppose the only saving grace was the fact that it was always hard, or so it seemed.\n\nThat morning, as I looked at my dick, I came to the conclusion that if I shaved the hair around the base of my dick, that it would look bigger. This was a painful decision, since I had waited forever for the hair to grow and had so little of it to begin with, but I went ahead with the defoliation.\n\nI didn't do a very good job on it; much like when I tried to make my sideburns even and went back and forth to try and fix them until they no longer existed, I shaved around trying to create a perfect circle, and ended up clearing a lot of area, in addition to nicking myself.\n\nNow, as my dick sprang around crazily, hard and proud, the fruits of my labors were realized. I looked huge, at least to myself. Kim looked down and gave me an odd look, her smile curling up on one side of her face.\n\n\"You got a wrapper for that weapon, Sport?\"\n\n\"Huh?\"\n\n\"A baggie. A rubber.\"\n\n\"Oh,\" I said. \"I did have some.\"\n\n\"Used them all up, I'll bet,\" Kim observed.\n\n\"Uh - you had one,\" I remembered. \"In your jeans pocket.\"\n\n\"Did I?\" Kim said. \"Looks like you're in luck, Sport. Go get it.\"\n\nLike an obedient puppy, I raced out to retrieve the condom. This was a pretty unusual thing for me to do, running around the house naked with my boner springing around wildly, but there was no time to worry about that. I had less than three hours to become a man, and who knows how long it would take me to make love with Kim?\n\n***\n\nChapter Nine: The moment.\n\nI got back to my bedroom, where Kim was waiting me for me, sitting on the edge of my bed. I smiled and waved the condom package at her, and then proceeded to try and open the thing. After watching me fumble with it for a minute, she took it from me and put it to her mouth, tearing a corner of it before pulling it out of the wrapper.\n\n\"Don't want to lose the magic of the moment, Sport,\" Kim said as she grabbed the base of my dick and brought the rubber up to the crown.\n\nLooking down, I watched Kim's hand holding the base of my cock firmly while she rolled the condom slowly down my erection. The combination of seeing her holding my dick and the feel of the rubber rolling down the shaft, was so good, and apparently became too good for me to handle.\n\nI blurted out for Kim to stop - to wait a second - but in fact it was already too late. To my horror, I began to ejaculate into the condom as my body bent over like I had been kicked in the gut. Spurt after spurt filled the vessel while Kim sat there and held on to me with an amused look on her face.\n\n\"Good for you, Sport?\" Kim said as she gave my dick a couple of tugs, managing to milk a couple more drops out of me before pulling the rubber off me.\n\n\"I'm sorry,\" I said in a shattered voice, and if my shaking body didn't indicate how devastated I felt, the tears welling up in my eyes probably did.\n\n\"Quite a blast there, Sport\" Kim quipped, squeezing the load of semen down to the tip of the tube. \"You must have had that stored up for me.\"\n\n\"All my life,\" I said in a barely audible voice, and when I glanced down at Kim while trying to keep the tears from starting, she mercifully refrained from any wise cracks.\n\n\"Hey Sport,\" Kim said, rolling up and onto her side on the bed and patting the space next to her. \"Come here.\"\n\nI joined Kim on the bed, and she put her arm around me and gave me a hug. The press of her breasts felt so nice, and the feel of her pubic hair against my withered pecker made me feel a little less sorry for myself.\n\n\"Never been with a girl before, huh Sport?\" Kim asked, and I nodded.\n\n\"Kissing and stuff,\" I interjected. \"But nothing like this, you know? I wanted it to be so special.\"\n\n\"Life's like that sometimes,\" Kim said, rolling over onto her back and looking up at the ceiling. \"Someday you'll look back on this and laugh.\"\n\n\"Not anytime soon,\" I said.\n\n\"Well, you got me all warmed up, Sport,\" Kim said, rolling onto her back and putting her hands behind her neck. \"If you want to play.\"\n\n***\n\nChapter Ten: Playing with Kim.\n\n\"You mean?\" I asked, getting onto my knees next to Kim, and it occurred to me that I didn't know what that meant. \n\nI looked at the lithe goddess beside me, her ribs and hip bones showing as she stretched out on the bed, and already felt a little stirring taking place in the limp noodle that hung between my legs. If I got to stare at Kim for a while, I knew I would get a boner in no time, but Kim didn't seem to want me to merely look.\n\n\"Well, you've got a pair of hands, and a mouth, don't you Sport?\" Kim asked, the wry little smile appearing in the corners of her mouth.\n\nWhether she found me amusing, or just a joke, was hard for me to tell, but at least she had given me a clue as to what to do.\n\n\"You really like them, don't you?\" Kim asked, after my hands went to her breasts, and I nodded while I kneaded the spongy orbs. \n\n\"They're really nice - big,\" I said while I squeezed the pliant flesh, enjoying the pebbled skin of her puffy aureolas against my palms.\n\n\"Don't know how big they are, Sport,\" Kim sighed. \"Banana boobs. That's what you get when you never wear a bra.\"",
        "I was going to offer Kim one of my mother's bras, but realized that not only would it probably be too big on Kim, but it would be insane to cover her up in any way, because she looked so sexy letting them swing freely in those wife-beaters.\n\n\"Really sexy,\" I said, continuing to roll her loose breasts around on her chest. \"Everything about you is really sexy,\" I added as eyes drifted to the wisps of hair that nestled in the deep valleys of her underarms.\n\n\"Kinky little devil, aren't you Sport?\" Kim asked as she noticed where I was looking.\n\n\"Did you... uh... want to use my Mom's shaver?\" I offered for some reason.\n\n\"Do you want me to?\" Kim asked, and smiled when I hurriedly shook my head no.\n\nI blushed, but let go of her breasts for a second and let my hands slide up, stroking the soft sprays of hair for a second before going back to her teats.\n\n\"Not something you would have seen at the prom, I'll bet,\" Kim quipped. \"I'm no freaking debutante, that's for sure.\"\n\nI would have loved to have taken her to the prom, but after the way she had spoken about it, she probably would have thought that stuff childish, so I shrugged.\n\n\"I don't know much about proms or debutantes,\" I said, not even knowing what a debutante was. \"I just know you're the prettiest girl I've ever seen.\"\n\n\"Mmmm... you've got a way about you, Sport,\" Kim cooed, and parted her thighs a little. \"If you want to play a little lower, that would be cool too.\"\n\nLower. I knew what that meant. My eyes had been so distracted elsewhere that I had barely looked towards her pussy, which was hidden somewhere under that spacious triangle of hair that was so wide that it had fanned out a bit to the insides of her thighs. There was even the faintest little trail of hairs that went from the timberline of her bush to just under her navel.\n\nI had played with a few breasts before, but this was my first experience with anything below the waist, and I was clueless. My hand went down, the tip of my finger following the treasure trail down to the delta. The hair was thicker and more coarse than the hair under her arms was, and the bush had a little spring to it as I ventured lower.\n\n\"Feel the wet, Sport?\" Kim asked, apparently recognizing my confusion. \n\nI nodded, my fingers gliding down into the very wet center of the bush, where her opening was.\n\n\"Slip your finger in,\" Kim said, and I plunged my index digit into a very moist cavern, causing Kim to lurch a bit.\n\n\"Here, Sport,\" Kim said, reaching down and directing my finger up a bit, until it made contact with a little stub, causing her to groan.\n\n\"Right there,\" Kim sighed. \"That's it. Feels good.\"\n\nI kept rubbing eagerly, enjoying Kim's writhing on the bed, and by the time she reached up and began squeezing her own breasts, my dick had sprung back to life.\n\n\"Tongue - better than a finger,\" Kim panted, her breathing growing more rapid and her voice a little hoarse. \"Right where your finger is now.\"\n\nKim's legs were spreading wider as I watched, and I crawled between those thighs, sprawling down on my belly with my face scant inches from the glistening valley my finger had just been in. \n\nThe first thing I noticed was the smell; a strong and musky aroma that shocked me for second, but only a second, because Kim had grabbed my head and pulled me close to her.\n\nThe taste was as strong as the smell, and it was nothing like I had imagined it to be like. A tart and pungent taste that made my body shiver as Kim moved my head up and down, directing my tongue to the area she wanted it.\n\n\"There!\" Kim suddenly yelped, when my probing tongue finally hit the right spot. \"There!\"\n\nKim let go of my hair, and as she did I looked up for a second through the dense forest that surrounded my face. She was clawing at her tits, and as my tongue lapped faster and faster, I felt my dick tingle again as it ground into the bedding.\n\nI think we must have cum together, and as I shot my load into the sheets I tongued her faster and harder, my arms wrapped around her thighs as I buried my face into her pussy.\n\nUnsure whether I should stop or not, I kept going, and my tongue was screaming for a rest when I felt Kim's hands tearing at my hair while her body shook. She pulled me away from her after that, and I crawled up the bed and joined her.\n\n\"Not bad, Sport,\" Kim said, pulling a stray hair from my cheek - one of hers - and as she shifted around, she made a face and looked down toward where her leg had apparently come onto contact with my spunk.\n\n\"Feels like somebody got themselves off down there. Too bad,\" Kim said.\n\n***\n\nChapter Eleven: Too bad.\n\n\"I didn't do it - I mean I didn't mean to,\" I explained. \"I just got excited.\"\n\n\"That's cool,\" Kim replied. \"Too bad though, because I was planning on getting you off now.\"\n\n\"Get me off?\" I asked.\n\n\"You know,\" Kim answered, taking my thumb and bringing it up to her mouth, and after her lips slid up and down a couple of times, I did know, and must have looked as distraught as I felt.\n\n\"I couldn't help it,\" I said, realizing what I had just lost out on.\n\n\"You seem like a guy with a lot of energy, Sport,\" Kim said, smiling as she slid down toward the bottom of the bed, and as she continued to look up toward me, took my limp and sticky dick in her hand, or to be more accurate, held it between her thumb and index finger.\n\n\"Ooh!\" I groaned, feeling the coarseness of Kim's tongue as she licked the crown of my dick.\n\nSeeing my reaction, Kim smiled and took my withered stem in her mouth, sucking on it while keeping her eyes open. I was completely limp, but she continued to suck on my dick, taking it out to occasionally lick the tip and around the ridge of the crown, smiling a devilish little grin as she watched my reaction.\n\n\"Getting bigger - getting harder, aren't you sport?\" Kim cackled after taking my dick out of her mouth and checking out the progress she had made in that area. \"You're quite a stud, Sport. You're going to get it up again.\"\n\nBack she went, sucking and licking, all the while looking up at me with those twinkling eyes. There wasn't a sexier woman on the face of the earth at that moment, and as her hand began milking my balls, I felt my dick get hard again.\n\n\"Gonna cum, Sport?\" Kim asked after pulling away from me momentarily. \"Let me know when you're gonna, okay?\"\n\nI nodded, and Kim went back to work. Up and down her mouth went on my glistening pale dick. It may not have been real big, but it was never bigger than at that moment, and it wasn't more than a minute later when I felt my orgasm rise up from my toes.\n\n\"Kim... gonna cum!\" I screamed, looking down and clutching at her, trying to get her mouth off of me in time.\n\nShe wanted to know when I was going to cum, but not because she was trying to avoid it. Just the opposite; because after I announced my impending orgasm, and while I looked down expecting to see my dick spurt all over the place, Kim's mouth swooped down and practically swallowed my cock, burying her face in my pubes while I started ejaculating violently.\n\nKim was swallowing as fast as I was spurting, and kept right on sucking hard - practically siphoning the cum out of me - as I thrashed around on the bed while making the most bizarre noises imaginable. I managed to pull my spent tool out of her mouth eventually, pulling her up to be and putting a bear hug on her, smothering her neck and shoulders with kisses.\n\n\"You're a trip, Sport,\" Kim said, shaking her head at my enthusiastic reaction. \n\n\"I love you so much!\" I said, not caring how stupid I sounded or how goofy I must have appeared to be. \"Can I see you again tonight?\"\n\n\"Not tonight, Sport.\"\n\n\"How about tomorrow, then?\" I asked hopefully.\n\n\"You've got a shower, and you've got beer,\" Kim shrugged, sliding out of bed and heading toward the bathroom, that cute bottom of hers wiggling as she went. \"Why not?\"\n\n\"Get some rubbers too,\" Kim said before disappearing around the corner. \"Might as well corrupt you completely.\"\n\n***\n\nChapter Twelve: Shopping.\n\nMinutes after Kim left, my Mom had come home and started to make dinner. I asked permission to use the car to go to the store. Making up some bogus reason, I was given the keys and drove to the local drug store. I had bought condoms once before, and I had found it a traumatic experience, since you had to ask the druggist for them.\n\nThis time was no picnic either, but unlike last time, when the prospect for using them with a girl was dim, this time I was inspired.\n\n\"No, make it two dozen,\" I announced to the druggist, who raised an eyebrow but said nothing while ringing up the purchase.\n\nStocking up would avoid having to come back again, for a while at least, and ordering two dozen wasn't any more traumatic than ordering one. Besides, I planned on wearing Kim out tomorrow, so they weren't going to go to waste. I went over to the carnival after getting back home, and I saw Kim and waved to her, but she was really busy and didn't have time to talk much.\n\nMy friends were there, wandering the grounds. The place was the predictable muddy mess from the earlier rain, which along with the oppressive humidity kept the crowd down, and made it a miserable night for most of us walking around. I was the exception, because I was walking on air.\n\n\"Barry,\" I whispered. \"I gotta talk to you.\"\n\nI wasn't going to tell anybody else, but Barry was my closest friend, and I had to confide in somebody or else I would scream. The other guys wouldn't understand, and would probably make fun of me, but I could trust Barry.\n\n\"You aren't going to believe what happened,\" I told Barry, after I managed to coax him away from the rest of the guys, who were trying to shoot baskets at a hoop that seemed really small.\n\n\"I know something happened, Billy,\" Barry said. \"You look like you're about to explode out of your skin. Is it that girl - what's her name? Kim?\" \n\n\"Yeah,\" I nodded eagerly.\n\n\"Well?\"\n\n\"Last night, we had some beer behind the Giant Rat and we messed around a little, and then I invited her to my house today.\"\n\n\"You dog!\" Barry said, slugging me on the arm and grinning as wildly as I was, looking as happy for me as I was for myself, and his reaction reminded me how great it was to have a real friend.\n\n\"Well, she took a shower and then she asked me if I wanted to - you know - make love to her.\"\n\n\"And?\"\n\n\"Well, she was putting a rubber on me, and I was so excited that I came while she was putting it on me,\" I said sheepishly. \"That was the only one she had.\"\n\n\"Bummer,\" Barry said. \"You need one?\"\n\n\"No, I just bought two dozen,\" I admitted, causing Barry to burst out laughing. \"That wasn't all though. She let me play with her - all over - and then she had me go down on her.\"\n\n\"Alright!\" Barry said. \"Bet you liked that.\"\n\n\"Hell yeah! Well, while I was doing that, I looked up and she was playing with her tits, and I blew another load, and I didn't even touch myself. That was so hot watching her cum.\"\n\n\"Amen to that!\"\n\n\"Then she said that it was too bad I couldn't have waited, because she was going to get me off. Give me head. Then she did anyway!\"\n\n\"Did you...\"\n\n\"Oh yeah! It was amazing! She's so beautiful, Barry. Her body is amazing. Tomorrow she's coming back to my place again, and this time we're going to do it.\"\n\n\"I'm so happy for you, Billy,\" Barry said, his face confirming that, and after he hugged me I had to fight back the emotions that threatened to spill out of me. \"I still think you make too much out of this virgin thing, but I'm glad for you.\"\n\n\"Don't tell the guys... I mean, I know you wouldn't say anything to Kim, but those guys? Who knows what they might say?\"\n\n\"My lips are sealed, man. You know me better than to even have to ask.\"\n\n...\n\nChapter Thirteen: The next day.\n\nI was ready to go at 6 the next morning. I shaved, which was akin to shoveling the driveway in summer, and splashed on some of the old man's Old Spice for good measure. Looking as good as I would ever be, I watched the Three Stooges while waiting for my parents to go off to work, trying to get the clock to move faster by sheer willpower. The old man gave me a scare by sneezing a couple of times, and mentioning something about coming down with something, but he went to work as usual.\n\nNot able to wait until noon, I went over to the carnival grounds and wandered around the muck, watching the sleepy little village wake up. For some reason, the thought of traveling around the country and working in a place like this seemed like a great life to live. Had to be better than living in Colonie for the rest of my life, I figured.\n\nCloser to noon, I saw her. Looking even more beautiful than ever, she emerged from a trailer pulling up the straps of her bib overalls, wearing one of my old man's shirts I had given her.\n\nShe waved at me as I approached her as fast as the mud would allow, since it was so deep that it practically sucked my sneakers off each time I lifted a foot.\n\n\"You're bright and early, Sport,\" Kim said, stretching and yawning. \"I gotta do a little work on the grounds first, though. Nobody in their right mind would want to come here and walk through this shit to spend money. Not even people here in... where the hell is this? Syracuse?\"\n\n\"Colonie,\" I told her. \"West Albany. Sort of on the edge of both.\"\n\n\"All the same to me, Sport,\" Kim said. \"You see one field - you've seen them all. Look, go back to your place and I'll be there when I get done here, okay? I remember where you live. Probably take me about an hour.\"\n\nAfter offering to help and getting turned down, I did as she asked and went home. The hour was more like an hour and a half, and I was climbing out of my skin when Kim finally arrived, caked in mud.\n\n\"Really need that shower today, Sport,\" Kim announced, peeling off her clothes as soon as she entered the kitchen.\n\nI got Kim fresh towels and threw her clothes into the wash before running into my bedroom and stripping off my own clothes and pulling down the covers. It took me a while to get one of the condoms out of the wrapper, which made me doubly glad to be getting this all out of the way now.\n\n\"What do you think, Mick?\" I asked of the picture of my childhood hero Mickey Mantle, who had been hanging on my wall since I was 5 and was now looking at me with his bat over his shoulder, and I could almost see him nod in approval at the sight of me slipping the rubber onto my boner. \"About time, right? Bet you thought this day would never come. You and me both.\"\n\nI heard the water get turned off, and I reclined on the bed, trying to look suave and confident, naked with my latex wrapped dick pointing at the ceiling. After what seemed like forever, Kim came into the room, naked and carrying a quart of the old man's brew that she had helped herself to.\n\nLooking at me, she burst out laughing, shaking her head before drinking out of the bottle and offering me some. I declined, wanting to be on the top of my game even though I didn't have the slightest idea if I even had a game.\n\n\"Inviting your friends?\" Kim asked, looking at the boxes of rubbers on my night stand.\n\n\"No,\" I said. \"Just wanted to be sure I had enough.\"\n\n\"You're a trip, Sport,\" Kim said. \"I'm still a little wet, but not in the right places.\"\n\nI wasn't sure what she meant, but after she climbed on top of the bed and straddled my face, I got the idea. Kim's pussy tasted just as sweet as ever, and after she started writhing on my face and moaning a little, she climbed off and went onto her back.\n\n\"Showtime, Sport,\" Kim announced, spreading her legs and waiting for me. \"Put me through the headboard.\"\n\nI scrambled up to my knees and moved over between Kim's thighs, my dick bouncing around like crazy. I moved close to Kim's pussy with my dick in hand and got busy.\n\nBusy might not have been the right term for what I was doing. I rubbed my cock through her bush, desperately trying to find the opening. She was hairy, but she wasn't THAT hairy; not so hairy that I shouldn't have been able to find it, and she was certainly wet enough now from me licking around down there as I did, but I was shaking so much that I was making a mess of it, just as I had feared I would.\n\n\"Easy, Sport,\" Kim said, mercifully not laughing at my pitiful efforts, but looking at me with eyes that seemed to be telling me that it was alright. It was going to be okay.\n\n\"Here we go,\" Kim said softly, and as she spoke I felt her hand on my dick, guiding me gently to her opening. When I felt myself sliding inside of her, and felt the warmth surrounding me as I went all the way inside of her, it felt like the weight of the world had been lifted off my shoulders.\n\n\"That's it, Sport!\" Kim said, cupping my ass cheeks in her hands and holding on tight. \n\nKim moaned and groaned and made me feel like I was the most incredible lover in the world. In and out of her I moved, trying desperately not to cum right away, despite how badly I wanted to do just that.\n\nSuddenly, Kim was writhing around, much like she had down yesterday, only this time I got to watch her face up close as she cried out, the veins in her neck bulging and her face turning red as I kept pounding away inside of her as hard and as fast as I could.\n\nWatching Kim, and seeing what I was doing to her, was too much. I came seconds after she did, my cries joining hers in a symphony that made me glad our neighbors were probably at work.\n\nAs I held myself up over Kim, my arms keeping me off of her body, I looked down at this beautiful girl. Any thought I had been entertaining that she might have been faking it, or just putting up with me to make me feel good, evaporated when I looked at the glazed look in her eyes when she looked up at me.\n\nIn my typical goofy fashion, I did something that she probably didn't expect. I started crying. Bawling like a baby, and when she saw what I was doing, Kim looked at me exactly like you would expect a normal person to do.\n\n\"What the hell is wrong, Sport?\" Kim asked as I fell onto her, hugging her and kissing her like a lunatic. \"It was good. Really good.\"\n\n\"I know,\" I said, laughing like a loon while the tears continued to flow. \"I'm crazy. It's just that I was so scared, and I wanted it to be good for you.\"\n\n\"Well, you are crazy,\" Kim agreed, returning my hug. \"In a cute way though.\"\n\n\"It was good for though? Really?\"\n\n\"Hell yeah!\" Kim said. \"You should retire right now, because that was as good as it gets for me. I hardly ever cum from fucking. At least not like that.\"\n\nIt wasn't fucking, I was tempted to tell her. It was making love. I loved Kim, and I was determined that by the time the carnival left town, she would be in love with me too.\n\n***\n\nChapter Fourteen: More.\n\nI only had a couple of hours before my Mom would get home from work, but I was determined to not waste a minute of it. Kim soon discovered, if she hadn't from the day before, that while I was far from being the most well endowed guy in the world, or the best looking, I did have something going for me.\n\n\"Sport, you're fucking insatiable,\" Kim said after we had just made love for the fourth time that afternoon, this time with me doing it doggie-style.\n\nI wasn't sure what that word meant, and it was about then that it struck me that Kim was pretty smart, seeing as how it wasn't like she went to school with the carnival or anything. I wasn't sure how much you could really learn from her mythical O.C. Buck Academy, as she had called it, so my curiosity got the best of me and I asked.\n\n\"I read the dictionary when I'm bored,\" Kim said when I asked her what insatiable meant and wondered aloud about how she knew all these words. \"It was something I started doing a while back whenever I had nothing to do. Interesting stuff in there, Sport. You can pick it up and start anywhere.\"\n\n\"Well, I guess I should try to do that, seeing as how I'm starting college in a couple months, or at least I was planning to.\"",
        "\"Wish I had,\" Kim said with a wistful look in her eyes as she looked up at the ceiling. \"Wish I had - that covers a lot of things for me. You got any brothers or sisters?\"\n\n\"Me, no,\" I said. \"Wish I did. A brother especially. Funny how all my friends wish they didn't have brothers and sisters.\"\n\n\"That's human nature,\" Kim told me. \"We always want what we don't have, or what somebody els has.\"\n\n\"I'd love to live your life,\" I told her, while tracing the outline of her anchor tattoo with my finger. \"It's so exciting.\"\n\n\"It's bullshit, Sport,\" Kim said. \"All hustle and bullshit. No place to call home most of the time. Living like a gypsy and smelling like a pig most of the time.\n\n\"You smell delicious,\" I assured Kim, nibbling under her arm as I spoke, which was a habit I had taken up and something that Kim seemed to enjoy, judging by the way she would squirm and sigh in response.\n\n\"Not without your shower, Sport,\" Kim told me. \"Usually, it's just a whore's bath most of the time.\"\n\n\"I wish we had air conditioning like some of the other houses around here do,\" I lamented as the sweat oozed out of my pores.\n\n\"You've got a lot of wishes for a guy that has a whole lot going for him. At least you have a fan,\" Kim noted, seeming to think that the old wheezing contraption was making a difference in the sauna that my bedroom had become. \"Of course, if we relaxed like this a little more often...\"\n\n\"Do you think that I could get a job over there?\" I asked hopefully.\n\n\"You mean, when we break down?\" Kim asked. \"Yeah, Come by Saturday night after midnight. Hard work and shitty pay if you want it.\"\n\n\"No, I mean all the time,\" I said. \"Like you do.\"\n\n\"You have got to be kidding, Sport,\" Kim said. \"Leave all this to travel up and down the east coast most of the year? Besides, what would you do?\"\n\n\"I dunno,\" I said, trying to think of something I could do over there. \"I can cook a little.\"\n\n\"Well, you can cook me something if you want,\" Kim said. \"I don't think you'd like the life after the newness wore off though. Trust me, it sucks. I'm doing it only because I don't know anything else. I'm busting my ass, hustling and squirreling money away as fast as I can, and when I get enough, I'm gone.\"\n\n\"Where are your parents? Do you have brothers and sisters?\" \n\n\"Good question,\" Kim snapped. \"That's one I ask all the time. The answer is, who the fuck knows?\"\n\n\"You don't know?\"\n\n\"I know that my parents used to work for the carnival, and they carted me around with them every year. I remember being with them until I was about 12, and then all of a sudden, they were gone. They left me with a couple of people here. I used to call them my aunt and uncle but I guess they're as close to parents as I had. They retired last year, and now except for a few friends I'm all alone.\"\n\n\"I'm sorry,\" I said, realizing that I had upset Kim with the question that was obviously a touchy subject.\n\n\"Not your fault, Sport,\" Kim said. \"I have to vent every once in a while. No harm done and besides... what's the fucking difference?\"\n\nKim was looking down at my dick, which was hard and poking her on the hip.\n\n\"I tell you that sorry tale about my miserable orphan life and you get a hard-on over it?\"\n\n\"It wasn't the story, Kim,\" I told her. \"It's just that I'm crazy about you.\"\n\n\"Well, you are crazy,\" Kim said, looking over at the clock as she grabbed another rubber. \"When does your mother get home?\"\n\n\"Twenty minutes at the earliest,\" I declared. \n\n\"Well, that means this will be the last time today,\" Kim said as she put the rubber on me. \"Of course, knowing you, maybe not.\"\n\n\"Tomorrow?\" I asked hopefully, as Kim pushed me back down on the bed before straddling my crotch and expanding my education a little more.\n\n\"You still got the shower and the brew, I'll be here,\" Kim said, groaning as she put my cock between the lips of her sex and eased slowly down.\n\n***\n\nChapter Fifteen: Kim comes early.\n\nAfter I walked Kim back to the carnival, I told her that I wanted her to come over earlier tomorrow. She protested that she worked late every night and liked to sleep late, but I kept asking - pleading - and she finally relented, telling me that she would.\n\nThat evening, I stood with my friend Barry as we hung out around the Haunted House, telling him of my exploits as we watched Kim doing something to the Giant Ferris Wheel, which was not giant as Ferris wheels go, and now was not moving.\n\n\"Five times,\" I said in a low voice. \"It was like I couldn't get rid of my boner. Every time I came it would come back to life.\"\n\n\"Glad you got that over and done with,\" Barry said. \"I think you were putting too much thought into being a virgin anyway. There's more to life and love than putting notches in your headboard.\"\n\n\"Easy for you to say,\" I told him, knowing that if he was keeping track all of his life, his headboard would have been whittled away to a stack of toothpicks by now. \"Anyway, I don't want to have sex with a whole bunch of girls. Just Kim. I think I'm in love with her.\"\n\n\"You always fall in love with your first one,\" Barry said. \"I think that next week, when this zoo leaves town, you'll have forgotten all about Kim and be ready to track down a local girl for yourself.\"\n\n\"I don't think so,\" I said. \"She's so great. She's got a sexy body, and she lets me do anything I want. She's smart too. She's got a vocabulary that you wouldn't believe.\"\n\n\"That's cool,\" Barry said. \"I just think she's a little fast for you, if you know what I mean.\"\n\n\"I'm learning,\" I told Barry.\n\n\"That's not what I meant,\" Barry said. \"Never mind, though. Enjoy yourself man. You deserve it.\"\n\n\"You know what the word insatiable means?\" I asked him. \"I bet you don't. Kim does. She said that's what I am.\"\n\n\"In that case, I guess it means that you're a horny dude who can't get enough of her,\" Barry replied. \"Right?\"\n\n\"Close enough,\" I admitted.\n\nI wanted to talk to Kim, but she was busy and then I couldn't find her, so I went home and tried to get a good night's sleep in anticipation. With that in mind, I only masturbated once before retiring for the night.\n\nThe next morning, the old man was sniffling still, and when Mom suggested he stay home, I wanted to scream at her. Fortunately, Dad was one of those types that wouldn't stay home from work unless he was near death, so I was elated when they both headed for work.\n\nWith them out of the way, I went to work. By the time Kim arrived, sleepy-eyed and muddy, I had everything almost ready.\n\n\"This better be good to get me up this early,\" Kim said, looking a bit grouchy from getting up at the ungodly hour of ten in the morning, but when she sniffed and looked around, her demeanor changed. \"Smells like your Mom cooked something good.\"\n\n\"Go take your shower,\" I suggested. \"I'll get your clothes washing for you.\"\n\nI watched Kim shed her clothes, relishing the view of her glorious naked body once again.\n\nThe bumble bee on the butt, the anchor on her bicep and the rose on her ankle reminded me that I needed to get a tattoo myself. Something like a big heart with KIM somewhere on it. It would probably hurt like hell, but at least she had a short name, I said with my peculiar brand of logic.\n\nI dug out another fresh t-shirt from my old man's collection and set it on the bathroom hamper before grabbing her dirty clothes and going back to work in the kitchen. Kim emerged from the bathroom shortly, looking majestic as she emerged from the cloud of steam that billowed around her, drying her hair and wearing the t-shirt and nothing else.\n\nThe t-shirt hid little, coming down just to the timberline of her lush pubic triangle, and I came to the conclusion that the only sight in the world nearly as erotic as Kim naked would be Kim in that wife-beater.\n\n\"Having company?\" Kim said as she watched me putting the food on the table.\n\n\"No. This is for you. Us,\" I explained, and even though Kim said I was crazy, she didn't hesitate as I pulled a chair out and motioned for her to sit.\n\n\"You did all this yourself, Sport?\" Kim asked as she started piling food on her plate.\n\nI had, and in retrospect I may have gone a bit overboard. My old man had taken the family to a Howard Johnson's for something called a brunch, and I guess since that day I had been inspired by the concept of having a whole lot of food to choose from, so I had done a little shopping for this occasion.\n\nThe stacks of pancakes and french toast, the pound of bacon, along with breakfast sausages, toast, and a dozen eggs scrambled, probably could have fed the entire carnival crew. Kim did her best to finish it off herself though, and for such a skinny girl she could sure put food away.\n\n\"Stuffed,\" Kim said, leaning back into her chair as she flipped her fork onto her plate. \"That was great, Sport. Can't believe you went to all that work. It was very magnanimous of you to prepare such a prodigious feast.\"\n\nThere was still a lot of food left over, but we had eaten quite a bit, and I even knew what Kim meant, proving that my vocabulary wasn't all that bad. \n\nAs for me, I was full, but has something else on my mind, and if my vocabulary was better I could have come up with a more eloquent way of putting what was on my mind than I did.\n\n\"Would you... uh... like to lay down and rest after all that?\" I managed to ask.\n\n\"Lie down and rest?\" Kim said with a raised eyebrow. \"Is that what you really mean?\"\n\n\"Well, you know. I was just, you know,\" I mumbled, but Kim was already on her feet.\n\nKim came over and grabbed me by the hand, almost skipping as she led me to my own room. How I loved her when she was like this, I thought as I trailed that cute bumble bee down the hall.\n\nMoments like this, she wasn't the wise-cracking and cryptic woman that worked at a carnival. Instead, she was a wacky and goofy kid, acting about as innocent and crazy as I was, and I loved this girl so much I could neither explain or contain how I felt.\n\n\"Not unless you want to, Sport,\" Kim said as she saw me reach into my drawer for a rubber.\n\n\"Really?\" I asked.\n\n\"I never did it before without one,\" Kim said, tugging down my underwear and helping me get them off. \"I'm curious about how it feels.\"\n\nI hadn't either, of course, but when I went myself slide into Kim, I discovered that it was a whole different ballgame. Without the condom, I could feel her pussy surrounding my dick, her muscles contracting and enveloping me, almost as if she was devouring my dick as I fought the inevitable.\n\n\"It's okay, Sport,\" Kim said after I finished way too soon. \"That felt nice.\"\n\n\"Didn't want to cum that quick,\" I lamented.\n\n\"I'll bet you'll last longer next time,\" Kim said. \"You learn fast. You can save those baggies for your next conquest.\"\n\nAlthough I don't know how skilled I had gotten, I do know that it felt so good that I wanted more, and if she thought I was resilient before, Kim soon found out that I had only scratched the surface.\n\n\"I need another shower Sport,\" Kim announced as she got up from the bed and looked at the clock, having learned my parents schedule quickly. \"And you're a mess too. These sheets have got to go before tomorrow.\"\n\n\"Tomorrow?\" I asked/said excitedly, and Kim looked at me like she was surprised at her commitment to coming back Friday.\n\n\"Sure, why not?\" Kim said. \"Just go easy on the food. I think it might have slowed you down a little.\"\n\nI must have looked alarmed at that, because Kim shook her head as she told me that she was being sarcastic, before she walked off to the bathroom while I looked at the carnage that was my bed.\n\nThe sheets were stained with blood. MY blood, which came from my knees having had layers of skin removed because of friction. My back was burning too, and my hands and elbows were red and sore as well. I wondered why Mom didn't use those dryer sheets that were supposed to make your laundry softer, because a guy needed a gentler surface if he was going to do this kind of thing all day. \n\nI had lost count somewhere along the line, but we had to have made love at least seven times in the five hours we had been in bed, and when we weren't coupled that way, it seemed we were kissing or sucking or touching each other in some fashion. This is the life, I thought to myself. The life I wanted to live. Working with Kim and playing around with Kim, and when we weren't at work, we would be in bed together.\n\n\"I love you, Kim,\" I said as I walked back to the carnival with her.\n\n\"I know you do, Sport,\" Kim answered. \"You're a cool guy. See you tomorrow, right?\"\n\n\"Maybe later tonight?\" I asked hopefully after she gave me a kiss and headed off to work.\n\n\"Working, Sport,\" she called back. \"Gotta hustle.\"\n\n***\n\nChapter Sixteen: Friday on my mind.\n\nThat Friday was one of the more unusual days of my life, although it didn't start out that way. I had made Kim a more modest meal when she arrived, partly because our pantry was depleted from my previous cooking and partly because I felt really horny. When I told Kim about my elevated desire she could only roll her eyes.\n\n\"You realize that there might be something wrong with you,\" Kim said as she polished off the grilled cheese sandwich and leaned back from the table. \"Come here.\"\n\nI got up from my chair and obediently went to Kim, who unbuckled my jeans and let them fall to the floor, and after yanking down my underwear, proceeded to gobble my dick for dessert right there in the kitchen. I managed to last almost a minute before my knees buckled and I came.\n\n\"There, now that should tide you over until I get out of the shower,\" Kim said, getting up and getting undressed on her way to the bathroom.\n\nI grabbed the clothes off the floor and bought them over to the washing machine, but waited on getting them going until Kim turned on the shower, and instead of starting the machine I stripped down and went into the bathroom.\n\n\"Why am I not surprised?\" Kim remarked when I peeked around the shower curtain.\n\n\"Can I come in?\" I asked timidly.\n\n\"Sure,\" Kim chuckled. \"I'm surprised you didn't think of this before. What are you going to do? Watch me, wash me or fuck me?\"\n\n\"Uh... can I do all three?\"\n\nIn fact, I didn't watch her all that long. The temptation to touch that lean and slick body was too strong, and Kim didn't seem to mind when I offered to soap her down, but instead just stood there with her hands holding her hair behind her while I soaped all those favorite parts of her.\n\nI lathered those beautiful banana boobs until her nipples had fully blossomed, soaped those furry underarms of hers with loving care and scrubbed that magnificent bush as slowly and sensuously as I could, while Kim smiled and enjoyed my attention to detail.\n\nAfter kneeling down and scrubbing her feet, getting between each toe with the precision of a diamond cutter, the effect of being at eye-level with Kim's pussy started to get to me. Kim noticed this when I got up and poked her with my erection, and laughed.\n\n\"Wanna do it in here?\" Kim asked, and I nodded like an eager puppy. \"Better hurry before the hot water goes.\"\n\nKim went to the end of the tub and bent over, touching her toes and exposing herself to me. Through the steam and the spray of the shower I looked at the bumble bee on her butt as I spread her cheeks and stuck my dick into her from behind.\n\nI held on to Kim's hips as I thrust into her hard, enjoying the grunt that she let out with each slap of our wet skin. Even though I hadn't gotten the washing machine going yet, we still ran out of warm water at the end, and it was a crazy sensation to be having my back blasted by water that grew increasingly cooler.\n\nCovering Kim's body with my own as best I could, I finally came as I milked her dangling breasts, squeezing the slippery orbs while I came.\n\n\"Kill that fucking water, Sport!\" Kim squealed as the freezing spray cascaded over us, and I managed to turn it off with minimal fumbling before we jumped out of the tub and collapsed in each other's arms while gasping for air.\n\nAs we looked at each other, soaking wet and shivering, I concluded that Kim never looked so incredible. Water dripping from her her, and with a twinkle in her eye and a smile that lit up the dim room, she looked so alive and radiant that she made my head spin. I could not believe how lucky I was, and what a wonderful week this had been for me.\n\nAs we looked at each other and laughed, Kim suddenly jumped into me and kissed me. Really kissed me, and that wasn't something she usually did. Not like this, and as we hugged and kissed each other passionately, I thought that maybe - just maybe - Kim had fallen in love with me too.\n\n\"I love you so much,\" I told her for the umpteenth time.\n\n\"I'm never going to forget you, Sport,\" Kim said, squeezing my ass before slapping it hard.\n\nThat wasn't an \"I love you\" but it was something.\n\n***\n\nChapter Seventeen: Meat Loaf\n\nAfter we dried each other off, I got the clothes washing before we headed into my bedroom. Kim had put on another of the wife-beater t-shirts my old man had unknowingly given her, since there was no sense in her getting dressed even if she had something to wear.\n\nWe listened to the radio while we relaxed in bed, commenting on the various songs as they came on. Kim hated disco, which further enamored her to me, and we lamented the fact that you couldn't get away from Saturday Night Fever, whose music seemed to be blast out of every speaker at the carnival.\n\nAfter lamenting the sad state of music as we saw it, Kim's eyes suddenly lit up when \"Paradise by the Dashboard Light\" came on the radio. I liked the song, but Kim went nuts, and we went from singing along with it to screaming it at each other, and by the time we came to \"We're gonna go all the way tonight's the night,\" we were. \n\nNot even the sound of Phil Rizzuto's voice could slow us down, and by the time Meat Loaf had wrapped things up, we had slid to the floor in a tangle of bedding. Kim came so loudly she had drowned out the music and sent a shiver down my spine as the feral nature of her cries made me cum along with her.\n\n\"LOVE that song,\" Kim said while we tried to get up on our feet again.\n\n\"I know,\" I told her as I looked at the claw marks she had accidentally made on my shoulders during it all.\n\n\"Oops!\" Kim said, running her fingers along the scrapes.\n\nI didn't care, and actually felt like they were an award of sorts. As I watched Kim pad out of the bedroom, still clad in the t-shirt with her butt wiggling, I felt on top of the world.\n\nThere was a thumping noise out in the kitchen, and Kim said something that I didn't hear.\n\n\"What?\" I yelled out, and all I heard was another muffled noise before Kim came back into the room with a quart of beer in her hand.\n\n\"I couldn't hear what you said,\" I told Kim as she closed the door behind herself.\n\n\"Wasn't talking to you,\" Kim said with a shrug. \"I was talking to your old man.\"\n\n\"What?\" I hissed, and my eyes must have bugged out like Marty Feldman's.\n\n\"Think it was your old man.\"\n\n\"He's home?\"\n\n\"If he looks like you 30 years and 50 pounds from now and has a gray uniform on, he's home.\" \n\n\"Shit!\" I whispered loudly. \"He saw you? Like that?\"\n\nKim shrugged her shoulders and took a belt from the bottle of beer before nodding.\n\n\"What did he say?\" I asked, refusing the offer of a drink.\n\n\"He said hello,\" Kim nonchalantly replied.\n\n\"What did you say?\"\n\n\"I asked him how he was doing, and he said he was fine but he had a cold,\" Kim explained.\n\n\"What did he say about you? He had to have seen you.\"\n\n\"Oh, he definitely saw me,\" she chuckled\n\n\"Did you cover up?\"\n\n\"With what, Sport?\"\n\n\"I'm screwed,\" I said, plopping back on the bed and waited for either the bellowing voice to beckon to me from the living room, or for the bedroom door to fly open.\n\n\"Relax, Sport,\" Kim said. \"He seemed cool. Here. You need this more than I do.\"",
        "This time I accepted the drink, and after draining it, I straightened Kim out.\n\n\"My Dad is not cool,\" I told her. \"No Dads are cool, and mine is even less cool than most.\"\n\n\"You're making way too much out of this, Sport,\" Kim assured me as she sat down next to me. \"Besides, he's got a sense of humor.\"\n\n\"He does? Not when a naked girl is wandering through the house he doesn't. With a quart of his beer, no less!\" I added.\n\n\"He smiled at me when he saw me taking the beer out of the refrigerator,\" Kim said. \n\n\"I can't believe my old man saw you naked and hasn't come in here.\"\n\n\"He didn't see me naked,\" Kim said, pulling on the fabric of the top. \"I had his shirt on.\"\n\n\"Okay, he saw you half-naked. Wearing his t-shirt and drinking his beer.\"\n\nFrom the living room, I heard the sound of the TV. Match Game was on, and that was a good sign. Maybe he wouldn't embarrass me or come storming in here after all. Must be the cold, I presumed.\n\n\"You'll laugh about this next week,\" Kim informed me. \"Probably the two of you will piss your pants talking about it years from now.\"\n\n\"Maybe,\" I said softly as Gene Rayburn and Charles Nelson Reilly wise-cracked away. \"I just can't imagine me and the old man talking about the way he saw your ass when he met you.\"\n\n\"No, he saw my pussy when he first saw me,\" Kim said as she corrected me. \"He saw my ass after we spoke and I walked away. That's when I knew he had a sense of humor.\"\n\n\"Why?\" What did he say?\" I asked.\n\n\"He said, buzzzz.\"\n\nIt took Kim standing up and sticking her tattoo in my face for me to figure it out, and we had to stifle our giggles for a time, although that probably wasn't necessary, because the old man was half-deaf and the TV was blasting.\n\n\"Shit,\" I exclaimed suddenly. \"Tomorrow - they're both gonna be home all day. My Mom and Dad. They don't work on Saturday.\"\n\n\"Wouldn't matter, Sport,\" Kim told me. \"Saturday's the busy day. I'm working from sunrise all day, right up until we pull out Sunday morning, so I wouldn't have time to come over here anyway.\"\n\n\"You mean...\"\n\n\"This was it,\" Kim said with a shrug, and her face twisted as she saw my reaction to that news. \"Hey! You aren't gonna start bawling again, are you?\"\n\n\"No,\" I snapped, hating how easily Kim could see right through me. \"Maybe late tonight?\"\n\n\"Friday night is prime time for me,\" Kim explained. \"If this place ever livens up, that is.\"\n\n\"Who do I see to get a job with you guys?\" I said, my father coughing as Tom Kennedy explained the rules of the game show \"You Don't Say\" that had just begun. \"I want to be with you forever.\"\n\n\"Sure you do,\" Kim retorted. \"You want to leave all this to travel around like a bum hustling for a buck? You're nuttier than you look.\"\n\n\"Then you stay here,\" I suggested. \"With me.\"\n\n\"Here? Me and you living in this room?\" Kim asked, waving around the little box we were in. \"Besides, I don't think your folks would be crazy about that concept.\"\n\n\"Hey,\" Kim said as she probably sensed how much I was not expecting this to ever end, for some reason. \"I'm gonna miss you too. Gonna miss your shower and your cooking too. This thing too.\"\n\nKim's hand snaked down between my legs and grabbed my limp noodle, giving it a couple of tugs as she nuzzled into my neck.\n\n\"Want to do it one more time?\" Kim asked, and even though I was pouting my dick began to stiffen in her hand. \"That's it. Get nice and hard for me.\"\n\n\"I feel lucky about this time,\" Kim said as she climbed up onto me and put me inside of her. \n\nI always felt lucky every time, so I didn't know what she meant by that, but once Kim started writhing around on top of me, her titties rolling from side to side as she ground herself into me, it didn't matter.\n\n\"Cum for me, Sport,\" Kim said after she came. \"Fill me up.\"\n\nObediently, I did, and as my dick spurted away inside of Kim, she clamped her muscles around me, almost as if she was trying to keep me deep inside of her, and as she rolled off of me she curled into a fetal position and smiled.\n\n\"That was so good,\" Kim said, and for a second she seemed to be getting emotional, so I reached over and held her tight, hugging her until it was time for her to go.\n\n***\n\nChapter Eighteen: The Load-out.\n\nKim was right about Friday night. With the mud drying up in the field and the oppressive humidity returning to the area, the carnival grounds were a madhouse. Roaming the place with my friends like always, I kept my eye peeled for Kim, but she was always scurrying around from ride to ride trying to keep them going.\n\nWe did almost collide one time, when Kim came from out behind the Giant Rat exhibit, pulling the strap of her overall up over her shoulder.\n\n\"Hey!\" Kim yelled as she flew by, on her way to fix something or other, and that was all I saw of her that night, because she disappeared as the crowds thinned out.\n\nSaturday I got called in to work, and since I had begged off the rest of the week I felt obligated to go in. Besides, if I wasn't going to spend the day with Kim, what difference did it make, so I spent the afternoon being depressed at work instead of moping around at home.\n\nSaturday night was even worse. After I went up the street to the grounds and started walking around with my buddies for the final times of the year, my stomach was tied up in knots. Even the greasy french fries that were a guilty pleasure of mine did nothing to brighten my mood.\n\n\"I'm going crazy,\" I confided to Barry as I watched Kim on the other side of the midway, working on the electrical panel of The Scrambler yet again. \"I love her so much.\"\n\n\"Billy, I know it hurts,\" Barry said. \"It'll pass. You had a week you'll never forget.\"\n\n\"I'm gonna try and hook up with this outfit,\" I explained to him. \"Get a job.\"\n\n\"What about school?\" Barry asked. \"College starts in a few weeks.\"\n\n\"COMMUNITY college,\" I said derisively to my best friend, who was going to a real college, as I often reminded him. \"It can wait. Besides, we both know I'm no genius.\"\n\n\"You're way smarter than you think you are,\" Barry explained. \"When you apply yourself you're just as smart as anybody. Too smart to throw it all away like that.\"\n\n\"They're going to Poughkeepsie next,\" I said, starting to walk toward Kim, who was pulling an empty hand truck as she went down past the basketball game with the tiny rims and toward the Giant Rat.\n\n\"And you're going to Hudson Valley,\" Barry reminded me. \n\nKim turned and looked around before ducking behind the Giant Rat, and I wondered if she was looking for me. Sometimes she would sneak back there for a beer, she had told me, and that place had a special spot in my heart anyway so I started to follow her back there.\n\n\"Billy, we've got to talk,\" Barry said, grabbing me by the arm and leading me away.\n\n\"Can't we later?\" I asked, barely avoiding colliding with some old guy who cut in front of us.\n\n\"Now,\" Barry said. \"It's important.\"\n\nFor an hour Barry talked, and for the life of me I couldn't make any sense out of why this was so important that it couldn't have waited. He ended up talking about the same stuff we always talked about, and while I fidgeted and tried to pay attention, my mind was elsewhere. If it was anybody else I would have just walked away, but this was Barry, so I listened.\n\nBy the time we headed back to the midway the crowds had started to thin out. I ducked behind the Giant Rat but all that was there was some litter and some empty beer cans. Probably Kim's, I figured, as I rejoined Barry and the guys for one last circuit for the year.\n\nOne by one the booths and rides shut down as the patrons and suckers went home, until the lights dimmed for one last time. They began breaking down the rides in the semi-darkness, and I watched from a distance, unable to let go.\n\nIt was after 3 a.m. when the trucks started to pull out of the field, and I walked over to where Kim was finishing disconnecting the electrical connections, never having lost sight of her while they closed up shop.\n\nShe looked tired - weary and covered with grease, but still every bit as attractive as she was the first time I saw her. Kim seemed surprised to see me, and shook her head as she tossed the heavy cables into the back of a truck that was idling - one of the last vehicles still there.\n\n\"Hey, Sport. What are you doing here?\"\n\n\"Wanted to say goodbye, kind of.\"\n\n\"I thought we did that yesterday,\" Kim said with a grin.\n\n\"I'm going to see you again,\" I told her.\n\n\"Who knows?\" Kim said,using the back of her hand to push her hair back off of her face. \"If I'm still with this thing next year, and we come back up here, maybe we'll get together again. You're a good cook.\"\n\n\"That's too long,\" I said. \"I'm going to see you in Poughkeepsie next week.\"\n\n\"Is that where I'm going next?\" Kim asked. \n\n\"I've been thinking about this, and I'm going to see if they will hire me here.\"\n\n\"Sport, go to college,\" Kim said, ignoring the tap of the horn from the driver waiting to leave West Albany in the rear view mirror just as badly as I did. \"We had fun, and hopefully next year around this time both of our lives will be better than they are now.\"\n\n\"But you and me...\"\n\n\"I had a blast, Sport. Really. Try and remember me. I know I will remember you.\"\n\nA kiss on the lips and she was gone. I waited until the taillights had disappeared down the road before I let it out, and while I'm sure that it must have been a pitiful sight to the remainder of the caravan that passed by the crying kid in the middle of the now-deserted field, I didn't care.\n\n***\n\nChapter Nineteen: Poughkeepsie.\n\nI asked my father's permission to take the car. Initially, I was just thinking about taking the car and driving to Poughkeepsie without approval - you know the theory about begging forgiveness being easier than asking permission - but instead I got up enough guts to ask to borrow the car for a little while.\n\nSurprisingly, my father gave me the keys, and didn't really question me about it, which was a good thing. If I had told him I was taking our piece-of-crap Mercury Comet 100 miles down the Thruway to Poughkeepsie, there was no way he would have gone for it.\n\nMy plan was simple. After talking with the weasel who ran the O.C. Buck operation - a Snidely Whiplash look-alike I had spoken to a couple of times during the course of their stay - and making sure I could get a job, I would track down Kim and tell her the good news. Then I would drive back home and back my bags and catch a bus back down. The rest would take care of itself.\n\nThe ride down was uneventful, but when I arrived at the carnival grounds, I had a bit of a culture shock. Like Dorothy, I soon figured out that I wasn't in Kansas anymore, and Poughkeepsie was not West Albany.\n\nThe grounds were near a very urban neighborhood, with none of the open fields and trees that buffeted the field that the O.C. Buck Shows had just left. The people were different too. Not many of the simple country bumpkins with kids in tow. The people looked rough and dangerous to me, even though nobody did or said anything to me to make me feel that way. I saw more black people in the first two minutes than I had my entire 18 years before then.\n\nThe carnival midway was set up differently too, crammed tightly into a much smaller area than they were allotted back home. While that took away a lot of the easy going feel the carnival had the week before, it did make it easier to find the general manager.\n\nHalf paying attention to me while his eyes darted around, I asked him if her remembered me and without waiting for an answer, told him that I wanted a job and was willing to do anything.\n\n\"Sure,\" he said before scurrying away to break up an argument between an irate customer and the guy running the squirt gun game, and just like that I had a job starting the next night.\n\nBuoyed by the easiest job interview I had or would ever have, I searched for Kim to tell her the good news. Figuring that she would be around the troublesome Scrambler, I immediately headed in that direction. \n\nThe usual single toothed guy was running the ride, and seemed unmoved by my presence there, although he did give me a nod of recognition when I came up to him and asked him if he knew where Kim was.\n\n\"Eh!\" he grunted, shrugging his shoulders as he looked around the area, paying as little attention to his job as ever. \"She was here about 20 minutes ago - you check the Rat?\"\n\n\"No,\" I said.\n\n\"Wait there long enough, she'll show up there,\" he said with a laugh that sounded evil.\n\nI walked quickly in the direction he waved, and as I approached the truck with the big canvas banner of the Giant Rat, my heart raced as I tried to imagine the reunion we would have when I found her.\n\nKim was there.\n\n***\n\nChapter Twenty: Finding Kim.\n\nBefore I made it around to the rear of the exhibit, I could hear the slapping sounds. It didn't register at first, but when I went around the corner, it all made sense. I had found Kim, and when I first saw her, my immediate reaction was to find something - a club or something to use to help her, but I quickly figured out that she wasn't being attacked.\n\nKim was leaning over a saw horse, with her bib overalls down around her ankles, and standing behind her was this guy who looked like The Incredible Hulk. This enormous giant was behind Kim, holding her by her bony hips while he thrust into her with a savageness that equalled the thunderous sounds that their bodies made with each collision.\n\nKim let out a whimper each time the behemoth slammed forward, and the giant grunted right along with her. Then he let out a guttural groan and his thrusting stopped soon after. I had only been there for about 30 seconds, but that was a half-minute too long for me.\n\nThe brute pulled himself off of Kim and saw me for the first time as he pulled the condom off his now-flaccid cock, and after giving me a sneer he flung the cum-filled sheath to the ground, brushing past me while putting his cock away and rejoining the crowds on the midway.\n\nKim was slowly pulling up her overalls when she saw me, and in the relatively dim light she squinted to see who had been there watching.\n\n\"You want some too?\" Kim asked, shoving some crumpled bills into her jeans pocket as she waddled toward me, but I just stood there with my mouth open, unable to speak.\n\n\"Sport?\" Kim said, recognizing me in the brief second I was facing her. \"What the...\"\n\nI spun away, throwing up violently as I staggered away from Kim, tripping over a support rope and nearly landing on my face before grabbing onto the back of the truck and continuing to hurl.\n\n\"What are you doing here, Sport?\" Kim asked me, putting her hand on my back as my body kept dry-heaving long after I had emptied my stomach.\n\n\"I told you,\" I said after catching my breath, wiping my mouth with the back of my hand. \"I told you I was coming to see you.\"\n\n\"Shit, everybody says that,\" Kim said, rubbing my shoulders as my tears started to flow.\n\n\"I'm not everybody else.\"\n\n\"I guess not,\" Kim said softly.\n\n\"How could you... what were you doing with him?\"\n\n\"What was I doing?\" Kim snorteded. \"Hell, Sport. You ought to know what that was. We did enough of it last week.\"\n\n\"But why? Why with him?\"\n\n\"Why? You can't figure out why?\" Kim asked as she reached into her pocket. \"It ain't for love. That's for sure. It's for this. It's for making enough to get out of this before I end up being one of these lifers around here.\"\n\nKim took out the wad of bills, straightening out the little pile before sticking it back in her pocket.\n\n\"I got myself a job here,\" I said, watching Kim reach under the truck and grab a can of beer, popping it open and handing it to me. \n\nI drained that beer as fast as Kim ever did, glad to get the sour taste out of my mouth, and as I looked at the ground around the saw horse, littered with condom wrappers and beer cans, I felt like the biggest fool alive, and told Kim so.\n\n\"No, you aren't,\" Kim said leading me away from the area and out to the midway. \"You're just naive, and that's not a bad thing either. I figured you had to have known the score.\"\n\n\"I didn't think you were a - you know,\" I said, not able to say the word.\n\n\"Well, now you know,\" Kim said. \"Good thing too. You can go back home and forget about me. I'm flattered you went all that way to see me, but trust me. I'm not worth it. Find yourself a nice girl.\"\n\n\"I already did that,\" I said. \"I still love you, no matter what.\"\n\n\"Well, you need to get your head examined,\" Kim said, laughing as she put her arm around my shoulder.\n\n\"You don't have to do this,\" I said.\n\n\"I don't plan on doing this forever,\" Kim told me, and suddenly I realized that we were leaving the grounds. \"I know you don't understand, but I used you.\"\n\n\"You mean the food and stuff? I don't give a...\"\n\n\"Not just that,\" Kim said. \"Maybe you'll figure it out someday. Maybe not. Either way is fine. When I met you I saw my chance to get out of this life. I needed a reason - something that I thought you could provide. The stuff we did together, I never did with anybody else. Not ever. Not the way we did it. I had a feeling about you - thought you were special. Still do.\"\n\n\"Then we could get married or something,\" I suggested. \n\n\"I need a fresh start. Get myself a GED and try living like a human being,\" Kim said. \"And you - you need to get your butt to college - bear down and kick ass in school.\"\n\n\"This?\" Kim said as she waved her arm at her world, with the spinning rides and the blinking lights. \"This is not what either one of us needs. Life is not a carnival. At least I hope not.\"\n\n\"Look, I've got to get back to work,\" Kim said, melting me with her eyes just like always. \"If I'm still with this loony bin and we end up back in Colonie, we can get together again, okay?\"\n\n\"I guess,\" I said.\n\n\"Believe in yourself, Sport. You're special,\" Kim said, giving me a kiss on the cheeks before turning away.\n\n\"Don't you even know my name?\" I blurted out, causing Kim to stop after only a few steps. \" I mean, you always call me Sport, and my name is...\"\n\n\"Billy,\" Kim said, frozen and looking up before turning around, and as she did I saw the tracks of the tears that were trickling down her cheeks. \"Billy Morton. You live on Exchange Street and your birthday is May 17th. You like the Yankees and your best friend's name is Barry.\"\n\n\"The 'Sport' thing - guess that's just a defensive mechanism for me. I try not to let anybody in. Sometimes I slip up, I guess,\" Kim confessed as her lips quivered a bit. \"When you think of me, please try not to think about what you saw back there. Think happier things, okay?\"\n\nWe kissed again, and we kissed like it would be the last time, which it would prove to be. Then, after wiping her cheeks dry, Kim smiled weakly and spun around to head back to the carnival, and she didn't turn around again. \n\nThe ride home was eventful, mainly because I was so distraught that I didn't pay attention to the gas gauge and ran out on the Thruway. Thanks to a helpful fellow motorist, I was able to get home as the sun rose, making it back only 10 minutes before my father had to go to work.\n\nRed-eyed and tired, I handed him the keys and waited for the explosion, which for some reason didn't come. Grateful for that, I tiptoed into my room and fell onto the bed, not waking up until late afternoon.\n\nWhen I woke up, I called Barry, and started to tell him the story of my trip to Poughkeepsie. When I got to the part I dreaded telling him about, he stopped me.\n\n\"I figured out that you didn't know about her during that last night up here at the carnival,\" Barry said. \"It was kind of common knowledge.\"\n\n\"Guess I was blind,\" I admitted.\n\n\"Love is, I guess. No harm done, right?\" Barry asked. \"You had fun, I know that.\"\n\n\"Well sure, but did you - you know?\"\n\n\"Me? No,\" Barry said, and I knew Barry well enough to realize he wasn't in the habit of paying for things like that.",
        "\"Did any of the other guys?\"\n\n\"I don't know,\" Barry said, and I got the impression that Barry may have known more than he was saying. \"What difference does it make? It sounds like with you and her, it wasn't that kind of relationship, was it?\"\n\n\"No,\" I said. \"Still, I wonder whether or not to go to a doctor. To checked out for - stuff?\"\n\n\"You wore protection, didn't you?\"\n\n\"At first,\" I explained. \"After a couple of days though, she told me that I didn't have to.\"\n\n\"Interesting,\" Barry mused.\n\n\"What do you mean?\"\n\n\"Just interesting,\" Barry said.\n\n***\n\nChapter Twenty One: Next year.\n\nI didn't forget about Kim, but had managed to get over her, just as was predicted by Barry and even Kim herself. I was anxiously waiting for the carnival when it came back the next summer, because I had a girlfriend to take with me. Lois Randall - THE Lois Randall, who I had become confident enough to ask out that fall after the Kim episode, and with whom I had managed to begin a steady relationship with.\n\nWhen the carnival arrived, I waited as long as I could before wandering casually up to the grounds. The thought of Kim coming up to the house would be awkward, especially if Lois and I were there as we often were.\n\nThe field was a bit soggy from the rain the night before, so business was slow. I went to look for the general manager to apologize for not coming to work that next day last year, but he was nowhere to be found, so I headed for The Scrambler, where the now totally toothless operator was leaning on the control panel.\n\n\"Kim?\" he said with a quizzical expression, sort of remembering me. \"She didn't come north with us this year. Think she quit. Somebody said she got knocked up or something. Might want to ask at the cotton candy booth. She was friends with the lady that runs it.\"\n\n\"Too bad,\" the guy called out after I headed back across the field. \"She was the only one who could get this fucker to work.\"\n\nAlmost sprinting by the time I got to the cotton candy stand, I asked the young woman at the counter if she was the one that was friends with Kim, but she shook her head no.\n\n\"Maybe my Mom knows,\" she said, and then called out to a heavy set woman who was wrestling with a big sack of sugar.\n\n\"Are you the woman who knows Kim?\" I asked.\n\n\"Who wants to know?\"\n\n\"I do, I mean, the Scrambler guy said that you might know about her. Where she is and all.\"\n\n\"I mean who are you?\"\n\n\"Billy. Billy Morton.\"\n\nA little smile appeared in the corners of the mouth of the woman's weathered face, and after looking me up and down she told the girl she would be right back.\n\n\"Follow me,\" the woman said, and as she strode across the field to a trailer parked along the woods, I peppered her with questions about Kim.\n\nWas it true what the guy had said? Where is she? How is she? How can I contact her?\"\n\n\"You sure have a lot of questions,\" the woman said with a laugh as she disappeared inside the trailer for a moment, emerging with something rectangular in a brown paper bag.\n\n\"Kim said she figured you might come around looking for her,\" the woman explained to me as she gave me the package. \"She told me to give you this.\"\n\nThere was a book inside of the bag. A dictionary.\n\n\"But what about...\"\n\n\"Kim told me to tell you that she's doing fine,\" the woman said, holding up her hand to ward off my questioning. \"Last time I saw her, well, I can tell you that she's never been happier.\"\n\n\"And that's all you're getting out of me,\" she concluded.\n\n\"This isn't fair,\" I protested.\n\n\"Maybe not,\" the woman admitted. \"Neither is life sometimes, but that's the way it is. Kim's fine, and it looks like you're well too, so I'll tell her that when I see her over the winter.\"\n\n\"You can ask all day,\" the woman finally said as she put an end to my attempted interrogation of her. \"And that's still all you get from me. Sorry.\"\n\nI went back home, my head spinning with all of the pieces of information and rumors I had gotten from my visit to the carnival site. A dictionary wasn't what I was looking for, but as I opened the book I noticed that Kim had written something inside of it.\n\nShe had nice handwriting, which for some reason surprised me, and I had to smile at the beginning of the personal note which was addressed to me, not Sport. It was short and to the point.\n\nBilly,\n\nSomething you might be able to use. Not much of a gift, I know, especially compared to the gift you gave to me, but there's a lot of interesting stuff in here so read it when you have time. When you do look at it, think of me. Okay? I will never forget you.\n\nLove, Kim\n\np.s. Who knows? Maybe we'll meet again.\n\nSo there it was. A note that didn't answer any more questions than it raised, and left me just as confused as ever, if not more so. It told me next to nothing, but that was the way Kim wanted it, and that was the way it was going to be.\n\n***\n\nChapter Twenty two: Since then.\n\nWhen the carnival arrived next year, and the year after, I visited it, not sure if I wanted to see Kim there or not. Seeing her would have been fun for me, but it would have also meant that she was stuck back in a place she didn't want to be.\n\nAfter a few years, the carnival stopped coming, and the field became the site of a new big box store that we couldn't live without. After that went belly-up, the place became one of those gigantic home handyman stores where it takes you an hour to find a box of nails.\n\nThat went under too, and when I last saw it the deserted and decaying building was collapsing under its own weight, another monument to our disposable construction these days. \n\n\"This building is not empty - It's FULL of opportunity!\" the faded real estate company's sign out by the road claims, but all it is now is an eyesore.\n\nA lot of water has gone over the dam in the 30 or so years since that special week that summer, but there were a couple of things related to those magical days that will always stay with me.\n\nOne was back several years ago, and took place in the backyard of that house on Exchange Street. My folks were just about to move down to Florida, and it was sort of a farewell to that little house where I had spent my first 20 years.\n\nIn revisiting that tiny bungalow for the final time as a man in his 30's, I was stunned at how small the place really was. Everything, especially the bedroom where my life changed so dramatically, was in miniature. Mickey was still on the wall, yellowing and curling but still The Mick.\n\nSitting on the patio enjoying a beer with my father, I watched him watching my 2 daughters trying to elude being captured by their mother, the former Lois Randall. \n\n\"That must be why you're going south,\" I suggested. \"I don't think you would be able to catch them much longer when we stuck you with babysitting.\"\n\n\"Ah, I could corner them and call for reinforcements,\" he said. \"Your mother still has some quickness left in her.\"\n\n\"I see the land up the road is still for sale,\" I said. \"They should tear that thing down and bring the carnival back in.\"\n\n\"Ah, the carnival,\" Dad said. \"You used to practically live over there for that week.\"\n\n\"You know, there was something I wanted to ask you about,\" I said tentatively, bringing up a subject that I had avoided all of those years. \"Do you remember one summer...\"\n\n\"The bee girl!\" Dad said, his eyes twinkling as he looked around for Mom's presence.\n\n\"I can't believe you remember that,\" I said, amazed at how sharp the old man still was.\n\n\"Hard to forget something like that,\" he added. \"She was something.\"\n\n\"To this day I can't believe you didn't blow up over that,\" I said, finally saying what I had been dying to say for years. \"It seemed like everything I ever did that was wrong, you would find out about and rip me a new one over it.\"\n\n\"Probably seemed like that to you,\" Dad said. \"Maybe I was a hard-ass at times, but I tried my best.\"\n\n\"But then she - Kim,\" I continued. \"I mean - there was a half-naked girl walking around the house drinking your beer and you didn't say a word.\"\n\n\"Guess I didn't think it was such a bad thing,\" Dad said. \"You were always so shy and never seemed to have many girlfriends. It wasn't like you had women marching through the house all the time.\"\n\n\"Kim was the first,\" I told Dad, motioning out to my wife who was giving our littlest one Sandy a bear hug. \"And Lois was the second, and I suspect will be the last.\"\n\n\"You beat me by one then,\" Dad said, nodding up at the woman passing behind us on the way to join her daughter-in-law and her grandchildren in the yard. \"Guess by today's standards we're pretty square.\"\n\n\"I guess,\" I replied.\n\n***\n\nEpilogue.\n\nLike I mentioned earlier, there was a time in the fair land when carnivals traveled up and down the east coast during the summer months, but they don't come around here anymore, at least not like they used to. \n\nThese days I've noticed that they set up these little fairs in the far corners of the parking lots of shopping malls that aren't doing so well. A few rides and games of no-chance, run by people that look a little more like business people than they used to, but walking around a little patch of concrete just isn't the same as wading through mud in the middle of a field.\n\nWhen I come across one of these little traveling road shows, I invariably stop to have a look around. This used to bring squeals of joy from our girls, but when My Little Pony got replaced by the Jonas Brothers in their lives, the visits now draw only dramatic groans and rolling eyes.\n\nInvariably I look over the people running the games and rides, not really sure what I'm hoping to see. Do I want to see a middle aged woman with a tattoo of an anchor on her arm, or am I hoping not to see her? Probably the latter. Do I want to know what happened to her? Yes. Not knowing has always haunted me, and probably always will.\n\nIn the end I think I want Kim to live in my mind exactly the way I remember her during that one incredible week in the summer of 1978. Every time I hear \"Paradise by the Dashboard Light\" on the car radio I sing along, and in my mind, Kim is harmonizing right along with me. My allergies must be responsible for the watery eyes that follow.\n\nThankfully I'm not as incredibly naive as I used to be. I think I've managed to learn a few things over the years; for example, the Giant Rat was actually something called a Coypu, or Nutria. It's not a thing you'll see on display much these days at your local fair, I suspect. My vocabulary has increased quite a bit since then as well, and many of those words came from that dictionary I still have to this day. \n\nYou can learn a lot of words from a dictionary, I've found, but there's no way to measure how much you can learn from another person. There's also no way to know how much your life can be changed as a result of knowing somebody either. \n\nI know how much Kim meant to me, and how much she changed my life for the better. As for what Kim would say about our brief time together, I have no way of knowing and likely never will. All I can do is hope - hope with all my heart that she's happy and life worked out for her too.\n\n*******\n\nThank you for reading. Comments are always welcomed. I hope you enjoyed the story.  "
    ],
    "authorname": "davidwatts",
    "tags": [
        "banana boobs",
        "armpit hair",
        "natural woman",
        "shy guy",
        "experienced woman"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/life-is-a-carnival"
}