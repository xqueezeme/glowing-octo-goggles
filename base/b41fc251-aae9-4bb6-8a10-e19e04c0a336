{
    "title": "Return of The Slender Man Ch. 03",
    "pages": [
        "This story is part of an ongoing series. The chronological order of my stories is now listed in WifeWatchman's biography.\n\nFeedback and constructive criticism is very much appreciated, and I encourage feedback for ideas.\n\nThis story contains graphic scenes, language and actions that might be extremely offensive to some people. These scenes, words and actions are used only for the literary purposes of this story. The author does not condone murder, racial language, violence, rape or violence against women, and any depictions of any of these in this story should not be construed as acceptance of the above.\n\nSpecial note: There are *NO* sex acts involving anyone under 18 years old in this story, nor in any of my stories.\n\nThe Slender Man was <s> created </s> discovered by Victor Surge Knudsen.\n\nPart 17 - Red Hot\n\n\"Whaa! Uhhh!\"\n\nI coughed as I woke up, the strong smell of ammonia filling my nostrils. I looked up to see Fire Marshal Zoe Singer kneeling above me, having administered the smelling salts.\n\n\"Uhhh... what happened?\" I asked as I realized I was lying on my back in the yard of Point Hollow, just a few feet away from the copse of trees.\n\n\"Just lie still, Commander.\" I heard Cindy Ross's voice say. \n\n\"How long was I out?\" I asked, as vivid images seemed to crowd my mind.\n\n\"Just a few seconds.\" said Zoe. \"The time it took us to get to you after you smashed Slender Man on the head.\"\n\n\"Where... where is he?\" I asked, looking around. Seeing nothing, I tried to get up.\n\n\"Easy, Commander...\" started Cindy. I was having none of it.\n\n\"Help me up.\" I ordered. When no one moved, I said a little more angrily \"Help. Me. Up!\" Seeing that I was going to try to get up anyway, Teresa and Hugh Hewitt moved in and helped me to a sitting position, then on up to standing. My legs could barely hold me, and the Officers didn't let me go.\n\n\"Where is he? Where is the bastard?\" I asked.\n\n\"We don't know.\" Cindy said. \"He disappeared.\"\n\n\"Walk him to the ambulance.\" Zoe ordered as I gaped, unable to speak. Teresa and Hugh helped as I walked slowly to the ambulance. My legs didn't want to respond to me, they seemed to be herky-jerky and all over the place. But by the time I got to the ambulance in the driveway, I was recovering the use of them.\n\n\"Where are the kids?\" I asked, more calmly this time.\n\n\"They were all evacuated,\" said Teresa, \"and they're being taken to the Hospital. You gave us time to get them out of there, sir.\"\n\n\"And Slender Man is gone?\" I asked. \"What happened?\"\n\n\"Sir,\" said Myron, who had come up to me, \"we all saw you swing your crowbar and hit that guy on the head. And then everyone says that some kind of flash of lightning blinded him or her. When we could see again, you were lying on the ground, and the Slender Man was gone.\n\n\"We are getting statements from everyone here.\" said Teresa. \"Including the ambulance drivers and staff, and the Fire Marshal herself. By the way, sir, what do you remember?\" At that point, I realized that I was being videotaped.\n\n\"Slender Man came out of the woods.\" I said. \"I heard Myron say there were heat signatures of the kids in the woods, so I rushed the Slender Man. We were fighting, and then he was lifting me off the ground... and then... I swung my crowbar at his head... where is my crowbar, by the way?\"\n\n\"Can't have the Iron Crowbar without his Palladium.\" Cindy said. That pawky sense of humor must be her defense mechanism, I realized as she said \"I'll go get it.\" I watched as she went over to where I'd been laying and look around. A second later, she bent over...\n\n\"AAUUGHH!!\" \n\nCindy had screamed as she picked up the crowbar, and dropped it like a hot potato. Zoe had rushed over.\n\n\"That thing is burning hot!\" Cindy exclaimed as Zoe examined her hand. Fortunately, the burns were very superficial.\n\nTeresa went over and held her hand out over my crowbar. \"Damn, it's emanating heat. Serious heat, like a stove top. Someone get some tongs or an oven glove or something...\"\n\nPart 18 - Back to Back\n\n2:00am, Saturday, April 21st. I was lying on my back on a gurney, having just had an MRI. Admiral Cordell and Dr. Morgan were looking at the results, along with X-rays.\n\n\"Don, I don't know what is going on,\" said Dr. Cordell, \"but with you, I've learned to expect the unexpected.\"\n\n\"How's my back?\" I asked, fearing the worst. My back was hurting, fire seeming to shoot up and down my spine. Slender Man had fucked me up pretty badly.\n\n\"That's the rub, Don.\" said Cordell. \"Your back... seems to be healed. Your injured vertebrae are about like they were before, but the bones seem better stitched together. The disc implant between them looks to be in good shape, and again more tightly packed than before.\"\n\n\"Well, I did walk to the ambulance and into here.\" I said.\n\n\"Despite this.\" said Dr. Cordell, holding up my 'girdle'. A hole had been burned through it... completely through it. \"Your back looks the same way; there's a burn on the back of it, which we bandaged up.\" My outer armor also had a hole through it, as did the black shirt I'd worn.\n\n\"And an even stranger thing, Don,\" said Dr. Morgan, \"is that it looks like your spinal cord was severed, and then repaired completely. It's fine, but it looks like the nerves were spliced together again after being cut in two.\"\n\n\"Miracles of modern medicine.\" I quipped.\n\n\"Modern medicine well in advance of our time.\" replied Dr. Morgan. \"Seriously, we do not have this kind of technology anywhere on earth.\"\n\n\"Here, sit up.\" said Dr. Cordell. He helped me to sit, then had me turn so that my legs were hanging over the side of the gurney. \"Lift your left leg.\" I lifted my left leg, unbending my knee. \"Now the other one.\" he said. My right leg kicked up. But pain shot up by back both times.\n\nJust then we were joined by another doctor, and she was good looking. \"Hi.\" I said. \"You're very pretty. Can I take you to dinner?\" Cordell and Morgan chuckled.\n\n\"You most certainly can, after you get out of here.\" said Dr. Laura Fredricson with a smile. She then turned to the other doctors. \"How is he?\"\n\n\"We were just telling him...\" said Cordell. \"He seems unhurt, but miraculously so.\" He explained the details to Laura, and showed her the X-rays, MRI scans, and the damaged armor. Laura was shocked.\n\nThe examination room was getting crowded as Teresa came in. \"I brought your cane.\" she said. It was my sword cane. Teresa understood that a Clan Troy samurai had to be armed at all times, and she was taking care of her people.\n\n\"Doctors,\" said Laura, \"why don't we talk outside.\" They all left, leaving me and Teresa alone.\n\n\"Sir,\" Teresa continued, \"Dr. Mickelson asked if he could examine your crowbar, and I let him. It's cooled off a lot, but he said it's emitting a lot more alpha particle radiation as well as sigma radiation. They're going to wrap it in lead foil before giving it back to you.\"\n\n\"That'll work.\" I said. \"I've got a couple left that the kids gave me... and speaking of kids, how are our rescued kids doing?\"\n\n\"They're all physically fine.\" said Teresa. \"Dr. Yates is getting the last of their statements. Laura also talked with some of them. None of them seem mentally worse for wear, either... except Zack Ridley. He's going to be undergoing a lot more tests.\"\n\n\"Good.\" I said. \"Silver lining to this cloud: Zack needed a psychiatric examination before the Slender Man ever came for him---\" Just then I heard a child crying in the hallway.\n\n\"That's Susie Haskins.\" Teresa said. \"She's upset because you got hurt rescuing her and the other kids.\"\n\n\"That will not do.\" I said, putting on the black scrubs someone had brought over my hospital gown. \"Help me up, please.\" I then moved to get off the gurney, and Teresa helped me. I was able to walk with use of the cane, though my back was shooting fire into my whole body with every step.\n\nGoing into the hallway, I went into the waiting room right across the hall. Susie was crying as she sat next to Cindy. Father Romano was also in the room.\n\n\"Mighty spry today, sir.\" Cindy said. That pawky vein of humor...\n\n\"I want to know,\" I said as I sat down in a chair next to Susie, \"why this young lady is crying.\"\n\n\"Because you got hurt rescuing us.\" Susie said.\n\n\"Well, Miss Haskins,\" I replied, \"as you can see, I'm not very badly hurt. Just aggravated an old back injury. So I appreciate the sentiment, but please don't cry for me, okay.\" Susie tried to dry up her tears.\n\n\"Can her parents take her home, Captain Ross?\" I asked.\n\n\"Yes, she's been interviewed.\" said Cindy. \"We'll talk to her again Monday, after she's gotten some sleep and some good food. I'll take her to her parents.\" \n\nAs they got to the door, I called out \"Miss Haskins!\"\n\n\"Yes sir?\" Susie asked as they stopped. I looked levelly at her.\n\n\"All the other kids and my Police Officers are telling me that you took care of the other kids, kept them from being upset with your positive attitude, and even protected them from the Slender Man.\" I said. \"That is both courage and leadership, and I shall not be forgetting your example of it.\"\n\n\"Thank you, sir.\" Susie said. \"I... I didn't want to let Mrs. Veasley down... or Captain Ross...\"\n\nI saw the emotion spring into Cindy's eyes, and Teresa's, and it was hard to not display some myself as I said \"I am sure that Mrs. Veasley is looking down on you now from Heaven above, and she is very proud of you, as am I. I'll let Captain Ross make her own statement.\"\n\n\"I'm very proud of you, too.\" Cindy said, hugging Susie. They left and went down the hall.\n\n\"Father Romano,\" Teresa said to the Catholic Police Chaplain, \"this man never quits, be it rescuing children or inspiring them.\"\n\n\"Yes, we are fortunate to have his own examples of courage and leadership.\" said the good Father.\n\n\"Yezzzzzz, we are.\" said Chief Sean Moynahan as he came into the room. \"Commander, you are AWOL from the examination room. Let's go.\" I got up, using the sword cane, and was escorted back to the exam room.\n\nOnce inside, Chief Moynahan asked Teresa to excuse him and me, and she left the room. \"Commander...\" he began, shaking his head, \"you are limitlessly brave. You have no fear, and sometimes I wished you did. I have two problems right now. First, and this is unofficial... why did you go up there without informing others?\"\n\n\"I was checking out the lead, sir.\" I said. \"I did call for backup once I got there and determined that Slender Man and the children were there.\"\n\n\"And how did you know?\" asked the Chief.\n\n\"My dashcam got interference and flicked out.\" I said. I didn't mention that the vibe I felt had been overpowering.\n\n\"Yes, it's a good thing you made that call for backup,\" said the Chief, \"or I would be forced to take disciplinary action. This is official: next time, if there is a next time, make damn sure you take people with you instead of calling them after the fact. I've already told your Captains that, too.\"\n\n\"Yes sir.\" I said.\n\n\"And there is one other thing.\" said Moynahan. \"I talked to the doctors about your back. They say you're okay, essentially unhurt, but that it's a fragile thing, and you need to take it easy and fully heal up. I know, I know, that's Doctor-speak, which you should be used to, being married to one.\" I nodded, another vibe coming to me about what was coming to me...\n\n\"This will hurt, but it is for your own good as well as the good of this Police Force.\" said Moynahan. \"I cannot risk losing you, or having you incapacitated. Therefore, you will not compete in the Police Boxing Matches next month.\" A pain worse than my back filled my heart and soul, and I felt my head sagging as I looked down.\n\n\"I'm sorry,\" said the Chief, \"I know how much you wanted to get back in there and kick ass... but I would be derelict in my duty if I let you risk being badly injured.\"\n\n\"I understand, Chief.\" I said miserably, not looking up.\n\n\"I think your wife is going to convince them to let you go home.\" said the Chief. \"Give your videotaped statement to Goodwin before you leave. I'll see you later today, or Monday.\" With that, he left me alone in the room. Susie was no longer crying... but I was...\n\nPart 19 - Heroes And Villains\n\n3:00am, Saturday, April 21st. The kids were at The Cabin with their brothers, with Molly and my mother taking care of them, and Buddy and Bowser supervising. Laura had made up the sofa-bed in the greatroom so that I wouldn't have to climb the stairs. She helped me to lie down on the very stiff foam-like liner, with a thin pillow under the small of my back for further support.\n\nMy wife was wearing the blue scrubs she'd been wearing at the Hospital, which had seemed to be reassuring to the children as she helped examine them. She eased onto the bed with me and snuggled up next to me, her head on my shoulder and her breasts pressed into my side.\n\n\"So, just between us,\" she said, her voice little more than a whisper, \"what happened?\"\n\n\"What all of the Police said.\" I replied. \"Slender Man was between me and the kids, so I rushed him. Got in some good blows, too. But then those... tentacle-like things picked me up, and he started shooting electricity or something into my back and my legs went limp. I swung at his head and solidly connected, and there was this huge flash of light... and the next thing I know, I was lying on the ground.\"\n\n\"Zoe said you asked how long you'd been out.\" Laura said. \"Did you think it was longer than it really was?\"\n\n\"You must be psychic.\" I said in a jovial voice, seeing where she was going with this.\n\n\"No, just a psychiatrist that knows my husband better than he realizes.\" Laura replied. \"So, did you have a dream, or some kind of out-of-body experience?\"\n\n\"Well...\" I said, \"sort of a dream, I guess. You'll think I'm crazy if I tell you.\"\n\n\"Too late. I already think you're crazy.\" Laura said. \"You attacked the Slender Man tonight. You actually attacked him. So spill it.\" I chuckled, then began.\n\n\"Okay.\" I said. \"You know how Carole and Marie like to watch 'The Flash' and 'Supergirl' and 'Legends of Tomorrow' on TV...\"\n\n\"Oh yes.\" said Laura. Indeed, Tuesday nights were big in the Troy household, as Carole would wear her Wonder Woman suit and Marie her Supergirl suit, and we'd watch 'The Flash' live, then 'Supergirl' and 'Legends' on DVR.\n\n\"Well,\" I said, \"I was dreaming that I was one of them, and that I had the power of every member of the Legion of Superheroes...\"\n\n\"You do dream big, don't you?\" Laura replied with a smile.\n\n\"Well, if I'm going to dream, I might as well dream big.\" I said. \"Anyway, I had the power of Triplicate Girl, who became Duo Damsel in the comics after one of her three selves was killed. I had to split into three persons... one stayed there; one went into the Speed Force, which was getting pissed off after The Flash escaped it; and the third... was me, the Iron Crowbar, coming back into this world.\"\n\n\"Well, that explains how your back miraculously healed.\" Laura said, and I could not tell if she was going along with me or being derisive.\n\n\"As I was about to come back,\" I continued, undeterred and unperturbed, \"one of the Legends of Tomorrow, White Canary, handed me my red crowbar and said 'This belonged to your grandson.'. I said something like 'And it will again.', and then I was waking up with Zoe putting smelling salts in my nose. And then Cindy got burned when she touched my crowbar. I thought it was hot just from exploding Slender Man's faceless head, but... who knows?\"\n\nLaura didn't say anything. I realized she had fallen asleep. I closed my eyes, but nothing happened. I still felt the heat and pain in my back, but no visions came to me, not The Flash nor the Legion of Superheroes, not The Slender Man, not even the Black Widow, Angela Harlan. Nothing came to me... but when I opened my eyes, the light of early morning was coming through the windows...\n\n* * * * * * * * * * * * * * *\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded MILF reporterette from in front of Police Headquarters at 8:00am, Saturday, April 21st. \"In a daring rescue and a confusing series of events, the seven missing children were found and recovered alive and well by Commander Donald Troy and the Town & County Police Force!\"\n\nBettina started as I watched from the bed: \"It is believed the children were being held in the area around Point Hollow in the northwest corner of the County. The Point Hollow grounds were searched by Officers and by drone coverage several times, so Police are speculating that the Slender Man was keeping them on the other side of the State Line, and that he brought them back over the line sometime last night.\"\n\nBettina continued: \"Just after midnight last night, Commander Troy confronted the kidnapper, who was described by the children and at least twenty Police Officers as being very tall, wearing a dark suit and tie, and having no facial features. They also said that Commander Troy engaged the Slender Man in personal combat, giving Officers time to evacuate the children, who had been hidden in the grove of trees near the Point Hollow house.\"\n\n\"At this point,\" Bettina continued, \"the story becomes unclear. First, watch this video taken by the TCPD at the scene. Roll tape.\" Tape rolled, showing me running and the Slender Man barely visible at the right of the screen. Then the tape went fuzzy as that drone/interference sound started up. Through the static, once could make out me swinging my crowbar around. Then a huge burst of light flooded the screen, and that was that.\n\n\"It appeared,\" said Bettina, \"that lightning struck Commander Troy as he was apprehending the Slender Man. Now look at this.\" The camera panned to show Detectives McGhillie and Theo Washington. McGhillie was holding up my 'girdle', and the hole that had been burned into it was obvious. Theo was holding my outer armor, which was also damaged.\n\nAfter Bettina pointed out the burnt holes, she turned to the camera and said \"Commander Troy was struck by the lightning in the same vertebrae where he was shot months ago. Doctors are saying that he is relatively uninjured, and that it is a miracle he wasn't badly hurt or even paralyzed.\"\n\n\"Meanwhile,\" Bettina finished, \"the children were examined at University Hospital and found to be unharmed physically. Most of them were in good mental spirits as well, saying that young Susie Haskins, one of the kidnapped children, took charge and kept everyone calm. Captain Cindy Ross issued a statement praising young Susie for her courage and leadership in the face of the horrific circumstances.\"\n\n\"However,\" said Bettina, \"the criminal, known only as 'Slender Man', disappeared completely. It is believed he got away as everyone was blinded by the lightning blast and Commander Troy was knocked unconscious. The TCPD and FBI are continuing their manhunt for the criminal...\"\n\n* * * * * * * * * * * * * * *\n\n\"Yes,\" said the Chief as he sat in my office with me at 12:00 high noon, \"that's the official story. Lightning strike, freak thing. It covers everything, from the damage to your armor to the perp getting a-way. And it make some sense... unlike the truth, which makes no sense even though everyone saw it happen.\"\n\nIn case you're wondering, the Chief was in my office, instead of me in his, because he had come in to chew my ass out for being at Headquarters instead of resting at home. I took the asschewing sitting in my chair, and once he was out of breath from using every word he'd learned in his years in the U.S. Army Air Cavalry, I asked him to sit down and tell me what was going on with Bettina's news report.\n\n\"Our biggest problem,\" continued the Chief, \"is explaining how the Slender Man managed to get away. Rescuing the children is great, wonderful... but there is still fear out there that he is going to come back and kidnap more children.\"",
        "\"I tend to doubt that, sir.\" I said. \"He took his shot, and that was that. He left the kids where they could easily be spotted, instead of in the house where it wouldn't have been as easy to detect them. And he got his faceless head busted open... well, I think he did...\"\n\n\"I'm not the one you're going to have to explain things to.\" said Moynahan. \"There will be a Board of Inquiry on Monday and the Council meeting on Tuesday. Captain Ross insisted on you being put in for a Purple Order and the Star of Gallantry, so I did... but I'll tell you right now that the Sheriff did not endorse it as he passed it along, and many on the Council are deeply skeptical of just what happened...\"\n\n* * * * * * * * * * * * * * *\n\nI had pored over every piece of video that had been recorded, be it from drones or dash-cams or other devices. All were the same: whenever the Slender Man came into the picture, things got fuzzy and staticky. Some Police dashcams remained clear, but were aimed where they did not show Slender Man nor my fight with him.\n\nAll ended with that brilliant white-hot flash of light as my crowbar came down upon Slender's head. I could not tell in any video if I had damaged him. And of course... no video showed where the body went, alive or dead, or un-dead as the case may be.\n\nThen I read every Police report... including my own... and was somewhat amazed at how closely they agreed. People never see things the same way at accidents or crime scenes; the trick was to figure out what was real amongst all the 'noise'. But this time, it almost seemed as if the reports were choreographed, though I knew they were not (due to my own being one of the reports that matched all the others).\n\n* * * * * * * * * * * * * * *\n\n\"Patricia Ridley was released from the Hospital.\" said Cindy as she sat in my office with me a few minutes after the Chief left. \"She got much better as soon as she heard Zack had been found and was okay. The doctors have informed her that Zack needs to continue to be checked out and interviewed. Dr. Yates said that Zack's answers in his first interview were very strange at best, and almost frightening at worst. Nothing you and I didn't know already, of course.\" I nodded.\n\n\"The other kids seem to be okay, and will be checked out once or twice more, but Dr. Yates anticipates no further problems with them.\" said Cindy. \"They're watching Alton Taylor, Rachel Fourier, and Marie Pressman closely, as this is the second time they've been abducted. But the kids seem to be handling it fairly well.\"\n\n\"What about Bart Tomlin?\" I asked.\n\nCindy grimaced. \"He's still in the Hospital. He still raves whenever he wakes up. Physically, he's fine. We told him Tommy had been rescued, we showed him video of Tommy being put in the ambulance, then Tommy's videotaped statement to Dr. Yates. Didn't do a bit of good. The doctors are not sure they want Tommy seeing his father like that just yet, so they haven't taken him to see Bart.\"\n\n\"What will happen to Tommy?\" I asked.\n\n\"DFACS was called this morning.\" Cindy replied. \"They expressed huge reservations about allowing Tommy's mother to have custody of him. His mother is not acting like she wants custody of him, and the man she's living with now is not the most savory of characters. Fortunately, Bart has a sister who lives in Hamilton County, and she is going to take Tommy in.\"\n\n\"Good.\" I said, very relieved to hear that for Tommy's sake. \"Any injuries, besides my back and your hand burn?\"\n\n\"Harumph.\" Cindy said, holding up her hand, still red where she'd picked up the crowbar. \"That's not a burn, that's a suntan.\" I chuckled. Cindy went on: \"And word is that the Council is very divided on whether you were actually injured or not. What does it take to get you a Purple Order? They fought like hell against your last one.\"\n\n\"And I don't object.\" I said. \"I'm not trying to break Teresa's records, and I don't really want anyone else doing so, either.\"\n\n\"For the sake of the Force and what those awards mean,\" Cindy said, \"you should get one if you deserve it. And I saw you lying there on the ground, then trying to walk at the Hospital. You deserve one, and a Star at worst, another MOV at best.\"\n\n\"MOV is not going to happen.\" I said. \"Last time, I was shot before rescuing the kids, then the building blew up on me. You, Teresa, and Roy Easley incurred severe injuries when you got yours. This time?\" I just shrugged, holding out my hands...\n\nPart 20 - Plots and Pussy\n\n\"He did it again!\" said the beautiful Priya Ajmani happily as she met with State Senator Katherine Woodburn in Woodburn's office at her home. \"The Iron Crowbar rescued all the kidnapped children.\"\n\n\"Yes, that is very good.\" said Katherine. \"And the Iron Crowbar was not too badly damaged, either. I'm assuming he can still get it up, and fuck your sweet little pussy with that iron hard cock of his.\"\n\n\"And your sweet pussy, too.\" Priya said, giving it right back to Katherine. The older woman smiled.\n\n\"What is the Media saying about the perp getting away?\" Katherine asked.\n\n\"Not much.\" said Priya. \"Almost everyone was affected by the lightning strike, either blinded or felt the electricity of it. The kids in the woods were shielded by the trees, but didn't see anything. So we're giving Commander Troy and the Police a pass on that one, unless the kidnapper shows up again or another child disappears.\"\n\n\"That's okay.\" said Katherine. \"Commander Troy is about to be hip-deep in a world of shit, as it is. \n\n\"The Mullen probe?\" asked Priya.\n\nKatherine nodded. \"And 'probe' is the right word... Mullen is going to shove it so far up the Iron Crowbar's ass he won't be able to walk normally again.\"\n\n\"Do you really want the Iron Crowbar taken down?\" Priya asked. \"He's done more to make this County safe than anyone else.\"\n\n\"As soon as we have control of the Governorship, the State Legislature, and the SBI again,\" Katherine said, \"then the Iron Crowbar can go about his business solving crimes in this County. Until then... he needs to know his place and step out of our way...\"\n\n* * * * * * * * * * * * * * *\n\nIt had not taken Dean Allen very long to set up an apartment for himself in Westphalia. He had accessed his late daddy's money, which had been sitting there drawing interest for several years now. The index funds some of that money had been in were doing well, as well.\n\nChaplain Steven Ikea was sitting in the living room, listening with disgust and contempt to the moans of the woman in the bedroom. She was a tramp, a cheap whore, and Dean Allen was vigorously fucking her with his modest size. He'd already come once into the rubber he was wearing. The prison had been minimum security, but he still had not had any pussy while incarcerated there. \n\nOnce out, however, he found that State Senator Richard Langdon had sent him a 'gift', this babe with metallic red hair, a great pair of legs, and a mouth that sucked cock like she could suck a golf ball through a garden hose. He'd also made a distinct point to offer Ikea a prostitute, but Ikea arrogantly declined.\n\n\"Oh yeah,\" gasped Allen as he fucked the prostitute hard and deep, the loud *CHOCK!* *CHOCK!* *CHOCK!* of the slaps of flesh on flesh carrying through the flimsy walls of the apartment and to the ears of the Rev. Ikea. The girl was pulling her legs back and lifting them, giving Allen better access to her pussy. He took advantage, driving into her harder and deeper with relentless thrusts.\n\nHe felt his nut rising again, and while he wanted to prolong this fuck, he knew he needed to blow his wad and get back to business. He pressed harder into the girl, driving his hips forward and back as the painful ecstasy in his loins demanded release... then finally burst into a wet explosion of more semen into the tip of the well-used condom.\n\n\"UHH!!\" Allen gasped as the pulses rocked his body. He grunted and groaned as the last of his semen was drained from his balls, then collapsed on the girl in a sweaty, panting heap.\n\n* * * * * * * * * * * * * * *\n\nThe girl came out of the bedroom, dressed, as Dean put his clothes on. She came up to the chair Ikea was sitting in, lifted her right leg and set her high-heel-booted foot on the armrest, and said \"Sure you don't want a piece of heaven, honey?\"\n\n\"Do you know the Lord?\" Ikea replied sourly, looking up at her. It was a line that worked very well to redirect her attention. She smirked at him.\n\n\"You don't know what you're missin', little man.\" she said, a play on the fact that Ikea was actually tall and not a small man in stature at all... though between the legs, not so much.\n\nAfter the girl left, Dean came out of the bedroom. \"That was good, I needed that.\" he said. \"So, what's next?\"\n\n\"We're going to your home County.\" said Ikea. \"You have a meeting tonight with State Senator Katherine Woodburn, your father's successor, as well as a few local friends. She is an integral part of our plans to regain control of the SBI... which is a prerequisite for destroying the Iron Crowbar and Captain Croyle...\"\n\nPart 21 - Inquiries and Inquisitions\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded reporterette at 7:00am, Monday, April 23d. \"Fox Two News has learned that the Board of Inquiry investigating the rescue of the kidnapped children in what is being called the 'Slender Man' Case will take place this morning at 10:00am. The Board is tasked with ascertaining exactly what happened at Point Hollow Friday night, and making recommendations to the Council about possible awards and citations.\"\n\n\"In other news,\" Bettina said, \"Sources tell Fox Two News that Town & County Solicitor Miriam Walters is considering entering the District Attorney race! She will have to do this before noon, May 7th, the day before the primaries, but in reality would need declare by May 4th, to give other candidates time to file for the Solicitor position.\"\n\n\"And in State news,\" continued Bettina, \"Legislators of both Parties eagerly await the beginning of State Independent Counsel Robert Mullen's probe into Governor Val Jared's alleged abuse of power and coverups. Asked for a timetable for bringing Commander Donald Troy in for questioning, Mr. Mullen says that he will begin issuing subpoenas for documents and witnesses within a few weeks. He also says that his probe should move along swiftly if he receives cooperation from the witnesses he calls...\"\n\n* * * * * * * * * * * * * * *\n\n\"Gimme twenty dollars... gimme twenty dollars... gimme twenty dollars... gimme twenty dollars...\"\n\nThat is what greeted me when I walked into MCD just before 7:00am, courtesy of Detective Joanne Warner and her computer speakers. Everyone laughed as I shook my head sadly and availed myself of some good Navy coffee, courtesy of Detective Jerome Davis.\n\nThen came the Bettina broadcast. After it was done, Cindy said \"Wow, they're already trying to bury the story. What gives with that? They just don't want to give Commander Troy and the Police any credit?\"\n\n\"They don't know what to make of it.\" said Teresa. \"Neither do I, for that matter.\"\n\n\"No, I think Captain Ross is right.\" said Teddy Parker. \"That was a 'give Commander Troy no credit' press report... and followed by a slanted report suggesting that Commander Troy won't cooperate with the State Independent Counsel.\"\n\n\"Their idea of 'cooperation',\" said Cindy, \"is for Commander Troy to immolate himself so they can get rid of him.\"\n\n\"All right, guys,\" I said, \"let's just not talk about the Independent State Counsel anymore. It is what it is, and it will be what it will be. In the meantime, get ready for the Police Boxing Matches. My email for signing up will go out to-day.\"\n\n\"Can Slender Man enter the Police Boxing Matches, sir?\" asked Sergeant Rudistan with great joviality. \"Then again, he needs practice after the way you beat him down silly Friday night.\" There was a general acclaim.\n\n\"Sure, he can enter.\" I said. \"And be arrested on the spot. In the meantime, you guys better start wondering where your spots in the brackets will be. And rumor has it that the guy making the brackets can be bribed with jelly doughnuts.\"\n\n\"And here they arrrrrrre.\" said Chief Moynahan, bringing in two boxes. I pulled rank and went first, getting one each of the raspberry and boysenberry filled doughnuts. The rest disappeared faster than the Slender Man had vanished...\n\n* * * * * * * * * * * * * * *\n\n\"This Board of Inquiry is convened.\" said Mr. Silas, the Chair, at 10:00am sharp. With him were the usual Board suspects, Mr. Fitzgerald and Mr. Finneran. I sat at the defense table, as the official subject of the Inquiry.\n\nMany of the Police Officers at the scene were brought to the stand to testify, and clarify questions regarding their Police reports. They all stuck to their stories, and trick questions by Finneran could not compel them to change their stories.\n\nThen Cindy was brought up, and Mr. Fitzgerald asked her about her burns from the hot crowbar. Cindy said she had no idea why the crowbar was so hot, and made it clear she was just speculating when she suggested that the Iron Crowbar was holding it when the burst of light erupted on the videos.\n\nThen Teresa Croyle was brought up, and Mr. Finneran, who hated Police as badly as Malinda Adams and Maxine Watts, grilled her. \"Why were you at that scene, Captain Croyle?\"\n\n\"I was leading the SpecOps unit,\" said Teresa, \"which went in and got the children out of the woods while Commander Troy was engaging the Slender Man in personal combat.\"\n\n\"That's my point.\" said Finneran. \"The SpecOps unit has a full Lieutenant that can lead them, is that not right?\"\n\n\"Lieutenant Hewitt is the leader of the SpecOps team.\" said Teresa. \n\n\"Making your presence there obsolete and unnecessary, is that not right?\" persisted Finneran.\n\n\"That is not correct.\" said Teresa. \"I also was in charge of all the Uniformed Officers at the scene, from setting up the perimeter to coordinating the evacuation of the children, to protecting the CSIs afterwards.\"\n\n\"How'd that perimeter work?\" snarled Finneran. \"The perp got away.\"\n\n\"Yes, he did.\" said Teresa. \"I take responsibility for that, in not getting the perimeter completely around the property.\"\n\n\"Yes, and you should be held responsible for that serious breach.\" said Finneran. \"But back to the point of my question... why were you there at all? Does Commander Troy not get it that you have six Purple Orders, and getting another one will likely end your Police career?\"\n\n\"That is speculation on your part, and I don't accept your premises.\" said Teresa.\n\nLast to be questioned was me, sitting at the 'defense' table. \"Commander,\" said Finneran, \"I've brought this up many times and will continue to do so: why was Captain Croyle at the scene?\"\n\n\"Because it was and is her job to be there.\" I said. \"And before you continue that useless line of questioning, Mr. Finneran, I'll tell you what I've told you before: it's my job to direct Captain Croyle's actions, not yours, and I'll heed my own counsel and continue to ignore yours completely.\"\n\n\"Is there any need to get hostile, Commander?\" asked Mr. Silas, trying to convey a warning in a subtle way. 'Subtle', Your Iron Crowbar is not.\n\n\"Yes, Mr. Silas.\" I said. \"As long as Finneran continues to insult my Captain, who earned each of those Purple Orders she's received, and as long as he continues to 'not get it' that I don't respect his opinion, however often it's repeated, concerning Captain Croyle's deployment to the field, then yes, I am going to continue to openly challenge his false assertions.\"\n\n\"Oh boy.\" Silas muttered under his breath, but where the microphone still picked it up. \"Okay, Commander, here's where we have some problems: you engaged this Enemy in personal combat, distracting him so that Captain Croyle's team could evacuate the children to safety. That's the good part. Then we have the reports that lightning struck you in the back, burned through two pieces of very good Police armor, burned into the skin of your back... but you're otherwise not injured. Care to explain that?\"\n\n\"I have no explanation for the things beyond my control, such as lightning strikes.\" I said. \"Beyond attacking the Suspect, I am not clear on what exactly happened, either.\"\n\n\"Why did you attack the Suspect?\" asked Finneran.\n\n\"Because he was between me and the children.\" I said.\n\n\"Why not have your Officers do it?\" Finneran snarled.\n\n\"Because they were rescuing the children.\" I said. \"Oh... and because Captain Croyle took the safety of the children into consideration first, which is what she should've done, and had those Officers go for them instead of the Suspect.\"\n\n\"Keep showing your ass and trolling me if you like.\" snarled Finneran, who then raised his voice and said clearly: \"I'm asking because one day... and one day very soon... Captain Croyle might be 'Commander Croyle', and taking your place after you're indicted and suspended.\" Gasps filled the room at that shot.\n\n\"My reply is the same as Captain Croyle's earlier.\" I said with Rudistan-'ish' joviality. \"I don't accept the premise of your statement.\"\n\n\"Okay, this is getting us absolutely nowhere.\" said Silas. \"Commander, do you have any idea at all where the Suspect might've gone?\"\n\n\"No sir.\" I said. \"If I did, I'd be there arresting him instead of sitting here... or I'd be telling the FBI where to find him.\"\n\n* * * * * * * * * * * * * * *\n\nAt 3:30pm, Cindy, myself, and Teresa were called into the Chief's office. We were admitted formally by his secretary, which was my first clue. My second was observing the Chief's face as he sat behind his desk as we walked in.\n\nI came up to the desk and came to attention. Teresa, seeing my action, did the same. Cindy was about to grab one of the chairs, but a slight wave of my hand stopped her.\n\n\"Ahhhh,\" said Chief Moynahan, \"the Commander saved you, Captain Ross. He saved you. I have not invited you to sit down. This part of the meeting is the formal reprimand part, what is known in the Cavalry as your 'asschewing'.\" Cindy quickly came to attention.\n\n\"I just got out of a mee-ting with Mr. Silas of the Board of Inquiry and Sheriff Allgood.\" said the Chief. \"The gist of it is that while I believe you, Commander Troy, will be Police Commander here much longer than Allgood will be Sheriff, you guys cannot continue to... what was that word... 'troll' Mr. Finneran at Boards of Inquiry. Mr. Silas even tried to give you a pretty direct warning, Commander, and you did not take heed of it.\"\n\n\"Folks,\" continued the Chief, \"Mr. Finneran is definitely a jerk and hostile to Police, and especially hostile to Police Officers that have achieved some great things with this Police Force. However, he does have political support in this County, namely Malinda Adams and Kelly Carnes on the Council; and Councilman Reginald B.F. Lewis genuinely believes that Finneran has the interests of the black community that comprises Mr. Lewis's constituents. Mr. Silas was very unhappy at the exchanges that occurred today, and while he will do what he can to rein in Mr. Finneran, he and the Sheriff fully expect me to rein you in. So... no more crap. Act correctly and respectfully at Boards of Inquiry as if you were a witness before a Jury. Do I make myself clear?\" \n\n\"Yes sir!\" came a small chorus.\n\n\"Okay, have a seat.\" said Moynahan. We did so. \"The Council meets tomorrow night. Is there anything you want me to tell them?\"\n\n\"Yes sir.\" I said.\n\n\"What's that?\" asked the Chief.\n\n\"I need a new girdle, sir.\" I said with a straight face. Cindy and Teresa tried to hold back, but failed; they broke out laughing. It became contagious, and quickly.\n\n* * * * * * * * * * * * * * *\n\nThere was another 'Board of Inquiry', so to speak. On Tuesday afternoon, April 24th, a large contingent of young people filled the lobby of Police Headquarters. They were all from England, and were 'Slender Man' hobbyists. And they wanted to interview me and others about the sightings of the week before.",
        "\"Put them in the Press Room.\" I said to Cindy when she came to inform me. \"I'll talk to 'em.\"\n\n\"Whaaa?\" Cindy gasped. \"These are like Star Wars groupies, except they follow all things Slender Man.\"\n\n\"At least they have something to follow.\" I said. \"Call Dr. Mickelson and ask him to come down, as well.\"\n\nI went down the hall and to the Press Room, and in a rare occasion actually enjoyed going in there. I found the young 'Slender Man' sycophants to be respectful, they asked good questions which I tried to answer to the best of my abilities, and they paid attention to what was being said. Then Dr. Mickelson arrived, and I excused myself. I understand that Dr. Mickelson had an attentive audience for over two hours, and he was loving every minute of the attention he was getting as he gave his lecture on Sigma radiation and the Slender Man...\n\n* * * * * * * * * * * * * * *\n\nTuesday, April 24th, 8:30pm or so.\n\n\"Alright, the second reading of the bill is passed, by the same numbers as before, and the motions are carried.\" said Mayor Larry Vaughan, the People's Choice. \"Our next item of business is to allocate funds to buy Commander Troy a new kevlar 'girdle'. There is no doubt that his old one was damaged badly by the lightning strike.\" He held up the 'girdle'; everyone was stunned by the damage.\n\n\"Money well spent; it worked well.\" said Edward R. Steele, whose adopted daughter Marie was Carole's friend. \"I move to make an emergency appropriation to buy a couple of replacements.\"\n\n\"I second the motion.\" said John Colby.\n\n\"Why bother?\" sneered Kelly Carnes. \"The Iron Crowbar is going to be indicted and suspended by July 4th.\"\n\n\"You know that for sure?\" asked Dagmar Schoen scornfully. \"How?\"\n\n\"I keep my ears open, Ms. Schoen.\" Carnes said haughtily. \"It's all over the place: Mullen is aiming to have Troy gone by July 4th, if not earlier.\"\n\n\"Commander Troy is not the only person who could wear a protective 'girdle'.\" said John Colby, steering the conversation back on track. \"Anyone else with a bad back and needing protection from Enemy gunfire could use one. So it'll still be money well spent.\" After some more back-and-forth, the motion carried 9-1.\n\n\"All right,\" said the Mayor, \"and our last item is the Board of Inquiry report of the kidnapped children's rescue. The finding is 1-1, with Mr. Silas abstaining and voting 'Present'. He adds a note that he found it simply impossible to get an accurate picture of what happened. He believes the Police and children were truthful in their statements, but none of them can really explain what happened.\"\n\nKelly Carnes took it up. \"Mr. Finneran stated strongly that he does not believe the Police statements, and says the children couldn't see anything. He thinks the Police are covering up something, though he does not say what that something is. But he's skeptical of the official Police story, and frankly, so am I.\"\n\n\"For a rare one time,\" said J.R. Goldman, \"I agree with Mrs. Carnes. We don't really know what happened, though I think the Police told what they knew, and truthfully. I don't think they know what happened for sure. That lightning burst, or whatever it was, is on videotape, so something happened.\"\n\n\"The other issue\" said Susan Weston, \"is that Chief Moynahan put Commander Troy in for a Purple Order and Star of Gallantry, for being injured by the lightning strike, or whatever it was, and for engaging the Slender Man in personal combat in order to distract the kidnapper and let others get the kids out of there. The Board's actual vote was out that; they indemnified the Commander's actions, 2-1. With the tie vote, we have to decide for ourselves.\"\n\n\"They attached the doctors' reports.\" said Kelly Carnes. \"The doctors all said that Commander Troy's back was no worse than it was before that day, that there was no further damage to his previously injured vertebrae, and indeed in some ways it looked like his back was stronger than before. So while he had a burn on this back that did not cause lost time, there's no back injury to justify a Purple Order.\"\n\n\"Wow, I agree with Ms. Carnes twice in one meeting.\" said J.R. Goldman. \"Edward, what is the world coming to?\" Steele shrugged in good natured agreement. Kelly Carnes looked daggers across the table at Goldman.\n\n\"What about the Star?\" asked Colby. \"There is no doubt in my mind that Commander Troy was more than a little brave in taking on the Slender Man as he did, and his actions enabled the rescue of the children.\"\n\n\"Yes, but does it rise to the level of a Star?\" asked Susan Weston. \"Again, we're not sure what even happened. Rushing a perp is normal for Police Officers, especially if they're not being shot at. Yes, he helped get the kids out of there, but I'm not seeing this action as especially significant.\"\n\n\"Commander Troy and his fellow Peace Officers have set a high bar for themselves.\" said Malinda Adams. \"Yes, he was brave. But we've seen many brave acts, which is one reason I thought we were agreeing to ratchet down the level of awards being given out. Detective McGhillie was a fine example of someone deserving the Star of Gallantry. Does this rise to that?...\"\n\nPart 22 - Epilogue\n\n\"This is Bettina Wurtzburg, KXTC Fox Two News!\" shouted the lovely redheaded MILF reporterette at 7:00am, Wednesday, April 25th. \"Fox Two News has learned that the Police and Fire Department promotions have been approved by the Town & County Council!\"\n\nBettina: \"None of the proposals made by the TCPD and TCFD were turned down, and the ceremonies will take place next Tuesday, May 1st. As part of the promotions, several offices at TCPD Headquarters will be renovated over the weekend. The Police are not saying what changes will be made, with Commander Troy saying only that some surprises are in store for us.\"\n\nMore Bettina: \"Also, the Council denied the application of a Purple Order for Commander Donald Troy. They cited that doctors could find no new and significant injuries to his back, despite possibly being struck by lightning right on the spot of his previous injury. The Council did approve new armor to replace the damaged vests Commander Troy was wearing last Friday night when the freak lightning strike occurred as Commander Troy engaged the Slender Man in personal combat.\"\n\n\"And in what is called the most exciting season for the Police Department,\" Bettina said, \"Commander Troy put out the call for entry applications for the Police Boxing Matches! Defending Freestyle Champion Teresa Croyle has stated that she intends to successfully defend her title against all comers, despite having been seriously wounded last Christmas Eve when she rescued little Carole Troy from the deliberately set explosion at the Ward Harvester Warehouse. But she will have serious competition, including previous champion Captain Cindy Ross...\"\n\n* * * * * * * * * * * * * * *\n\n\"Slow news day.\" said Cindy Ross as we drank coffee in MCD. \"We just heard more about the Police Boxing Matches than we did about State-level politics.\"\n\n\"Yeah, what's that about?\" muttered Jerome Davis.\n\n\"It usually means something is up.\" said Teresa Croyle, ever cynical. \"When politicians and the Media stop talking, they're usually doing something bad behind the scenes.\"\n\n\"You got that right.\" I said.\n\n\"You moving out of your office, Commander?\" Micah Rudistan asked jovially. \"Giving it to the new Deputy Chief, whoever that will be?\"\n\n\"You should be worrying more about your own office... or lack of one.\" I replied, drawing some 'ooooooh's. \"But they're renovating over the weekend, so I'm taking the personal stuff home and they can move the furniture themselves. And that does remind me, I'm taking Friday off so I don't have to deal with that mess.\"\n\n\"Gonna work on those Police Boxing Matches brackets while you're at home, Commander?\" Joanne Warner asked brightly.\n\n\"Naw, I've got those figured out already, unless someone surprises me by not entering, or somebody comes correct with a huge bribe.\" I replied. \"Right now, mischievous Detectives are in spots 94-97.\"\n\n\"Awesome!\" Davis all but shouted. \"That'll make my win the biggest upset championship in history!\" That tore the lid off Police Boxing Matches banter hell...\n\n* * * * * * * * * * * * * * *\n\n\"Okay,\" I said to Cindy and Teresa as we gathered in my office after the coffee klatch. \"Laura and I are leaving Friday to go to our property on Lake Watchacoochie for the weekend. We'll be back late Sunday night. Molly and my mom are keeping Jim and the boys and the dogs, and the Steeles are keeping Carole. Unless there is something involving the kids, or a true, blow-the-doors-off emergency, solve the problem yourselves and don't call me.\"\n\n\"Wilco, sir.\" said Cindy. \"So Wanda and Carl are going to the Lake with you?\"\n\n\"Not with us, but they'll be meeting us there.\" I replied. \"Cal and Drusilla Romano, too. I guess you'll be covering at the gym?\" Cindy nodded.\n\n\"And getting paperwork done.\" she said. I nodded.\n\nTurning to Teresa, I asked \"What about you, Teresa?\"\n\n\"With Cindy's offices... current and new... being renovated,\" said Teresa, \"she's being kicked out the door, too. So I'm the one on call. If the criminals will take a weekend off, I'll get to spend the time undoing the damage Todd and his people are doing with the wedding plans.\" Cindy and I both chuckled at that.\n\n\"Wow, that's coming up so fast.\" Cindy mused. Teresa nodded vigorously in agreement.\n\n\"Yes, yes it is.\" I said. \"Y'all ready for Promotions Day next Tuesday?\"\n\n\"Like everyone else, we're taking bets on who the Captain of Detectives will be.\" said Cindy. \"The odds will change tremendously depending on if Claire Michaels or Lorena Rose come through our doors Tuesday.\"\n\n\"You guys are good.\" I said, then grinned and added: \"And like Rudistan, sometimes too good for your own good...\"\n\n* * * * * * * * * * * * * * *\n\nThe Slender Man would never again appear in any more of my dreams or visions. He would never appear in my Town & County again in my lifetime... with one small exception, which I will discuss in a near-future story.\n\nThe Slender Man Fan Clubs around the world would contact me about him, and I would reply with as much information as I could give. Tourists came, and for a while we had to have one patrol on duty at the Point Hollow location at all times. One added benefit of the attention was that several Cosplay and other conventions were held at the Convention Center off Courthouse Square or the University's facilities, bringing lots of money into the local economy.\n\nAs I thought of that, I was remembering the visit from Dr. Mickelson after his conversation with the young people from England:\n\n\"We've put your crowbar through a myriad of tests.\" said Dr. Mickelson. \"Astatine has been identified, as well as sigma radiation. The spot on the ground at Point Hollow where you hit Slender Man on the head is also pretty warm, as far as the sigma radiation goes.\"\n\n\"My crowbar was lying there for a few minutes.\" I said. \"Is that the cause of the residual ground radiation?\"\n\n\"Could well be.\" said Dr. Mickelson. \"I also checked with the University's Weather Service. They said there were no lightning strikes at Point Hollow or anywhere in the County at the time you were up there.\"\n\n\"Cool beans.\" I said, very sure that that was true. \"By the way, do I get my crowbar back?\"\n\n\"Oh yes.\" said Dr. Mickelson. \"I brought it with me, in fact; the young folks from England were looking at it. I'd suggest you keep it in the lead foil we wrapped it with for a few years. The half-life of the isotopes is about a year and a half, so in fifteen years or so, it'll be back to normal.\"\n\nWhen a radioactive substance decays, it takes a certain amount of time to be half of what it originally was. That time is called the 'half-life' of the substance. After ten half lives, the radiation is reduced to essentially background levels. So for a substance to have a half-life of one year means that in ten years the radioactivity from that isotope will be essentially gone. The red crowbar I used to defeat the Slender Man would be safe again within a couple of decades.\n\nAnd my dream while unconscious on the ground at Point Hollow was prescient: that red crowbar would one day be given to and be used by Detective Donald Troy... Donald David Troy, Jim's son...\n\n...and my grandson.\n\nFinis."
    ],
    "authorname": "WifeWatchman",
    "tags": [
        "drama",
        "crime drama",
        "police drama",
        "slender man",
        "iron crowbar",
        "horror",
        "prostitute"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/return-of-the-slender-man-ch-03"
}