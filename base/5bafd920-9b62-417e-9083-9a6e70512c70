{
    "title": "A Big Shiny Blue Marble Ch. 56",
    "pages": [
        "***Still moving stuff around but picking up speed now, we return to where Jerrthi has begun a rather late career as a news reporter on Merren.\n\nThanks to the Xer unit that she's been embedded into, she's finding a few things to help her get over the depression of losing her mate to the soulless machinery of the Merren government. \n\nA couple of those things are 1) the adventures that her old journalism school chum Ronkahh just seems to fall into and of course, 2) there's the commander of the Xer unit himself. 0_o\n\n------------------\n\nJerrthi found that in spite of everything, she was having a great time with Xhan. He could manage the dual roles of being the unit's commanding officer - which was a little like being a father figure -- while still being able to enjoy himself and not sound like a father figure.\n\nThere were things going on that she doubted that he could allow, and yet he passed it all off with a little comment every time. Jerrthi hadn't known where to look as she stood next to him while they spoke for a little while with his counsel, who had loosened up considerably, now that she was taking a break from the attentions of two large Xer gunners, one of which was there with her and nibbling on her neck as they conversed while Jerrthi tried not to stare as his large pawed hands roamed over her very freely.\n\nThe female Xer didn't even flinch as she laughed and chatted. When she noticed Jerrthi looking at her, she smiled warmly and said, \"They're the forty-third. They're famous for this, though there are so few of them here. Even so, it is not something to be missed.\" \n\nShe noticed a little blood in the fur over her shoulder and she smiled back, \"You didn't say anything to me about a proposal.\"\n\nHer hand came up to hold his head against hers, \"Don't tempt me like that. I might just accept.\"\n\nXhan introduced her to Troxi, one the unit's electronic countermeasures wizards, and the two found a lot of common ground instantly before Jerrthi looked around a few minutes later and found Xhan standing near the bar, trying to order a drink each for them while doing his best to ignore the way that Ronkahh and TWO Xer females were carrying on back on top of the bar now. \n\nIt amazed Jerrthi so much, that she had to spin around and look back to see that Troxi was gone then, only maybe a minute after they'd been chatting. She spun back and looked at the bar again.\n\nTroxi was one of the girls dancing with Ronkahh, her gently striped and light gray fur making her look quite attractive as she danced with a big happy smile, bending down low now and then to blow kisses to the throngs of males and females who were there partying. Whenever she did that, she seemed to hold still for a few seconds while several pawed hands reached to stroke her bottom from the other side of the bar.\n\nTheir dancing went far past being only suggestive and more than once as Jerrthi watched, Ronkahh ground her way down along the front of one of them, but she didn't come back up for more than a minute while the Xer girl held Ronkahh's head against her furry crotch to the cheers of everyone and it was plain what was going on. \n\nJerrthi didn't know anyone here well enough to even notice it when a single coal-black female came to a decision and stood up to walk a little closer to the center of things. But Jerrthi did see it when the girl bent over a table and began to watch Troxi dance. Her slender hips moved and swayed along with what she was watching and it was only seconds before she was being enjoyed from behind by a male.\n\nJerthi couldn't believe what she was watching. \n\nBut the second one of Ronkahh's dancing partners saw it and she jumped down and waded through the others to move up and stand second in the line then. Before Xhan could return with their drinks, the male had finished very quickly and the female stepped up.\n\nTroxi stood behind the first female and ground her hips into her a little as she spoke, all while holding the dark female down with a hand placed in the center of her upper back. As Jerrthi stared, the standing one slipped her hand between the other one's thighs and began to manipulate her. The result was instant -- the recipient beginning to moan and buck back far more than she had earlier. Jerrthi looked at the expression on the other small female's face as she held her head just a little off the tabletop and faced Jerrthi with her eyes closed in momentary pleasure.\n\nJerrthi was struck by the beauty of them both, but she noted the short spiky mane on the one who stood bent over. Just then, the female opened her eyes and Jerrthi saw that one was the normal golden tone which was predominant among the Xer, but it was the other one which caught her eye now, since it was a bright blue.\n\nThe moment passed as Xhan returned a few minutes later with their drinks. Jerrthi thanked him and nodded at the goings-on with a smile, \"They play very hard, your people. Does this have to do with the risk of death finding them at any time?\"\n\n\"No,\" he replied, looking a little confused, \"They are letting out the tension of the hearing. They were afraid that I would lose this command and they might get a new commander then who might not allow them this as I do. We have not been together that long and we work really well as a team.\n\nIt surprised them until they found out who I am. I have an uncle who commanded the entire forty-third brigade at one time where I hold only this one small unit. But I am beginning just as my uncle did. I remember all of his lessons to me and I wouldn't change a thing.\"\n\nHe looked at her seriously then, \"If I must ask it of them, I know that for this enjoyment, they would give me more than their blood. I know it must sound strange to a Merren civilian, but that is the way of it.\"\n\nHe smiled then, \"Your friend Ronkahh seems to have fallen right in with them.\"\n\n\"Well of course,\" Jerrthi smiled, \"She has always prided herself on being the very finest party slut there could ever be.\" \n\nShe looked up and said, \"And I did not mean it to sound disparaging in any way. It's not something that I could ever do, but if you knew her and went to school with her, you'd know that she comes from a home where there was very little laughter and love. This is how she makes up for what was missing then. I can even admire her for it in a way.\"\n\nThe music changed then to something slow and very old-fashioned and Xhan asked Jerrthi if she wanted to dance with him. She nodded and found herself almost swept off her feet in his arms.\n\n\"Where did you learn to dance to music like this?\" she asked him a little dreamily from where her head rested on his shoulder. \n\nHe smiled, \"My mother used to have a dancing school. Do you like it?\"\n\n\"Mm-hmm,\" she sighed as they glided and twirled.\n\n\"How did you learn to dance this way, Jerrthi?\" he asked and she smiled.\n\n\"I took dancing lessons once upon a time.\"\n\n---------------------\n\nA little later, they walked for a while outside for a breath of air, looking at the stars.\n\n\"Do you suppose that we can see the light from the sun of the system where Bronn is from here?\" she asked.\n\nHe shook his head, \"It is too far from here and the sun there is a small and unimportant one. To be seen as a star in our sky, it would have to be many times larger than it is. Why do you ask?\"\n\n\"Oh, nothing,\" she replied, \"It was only a thought.\"\n\nIt had been only a thought, she told herself. She was a little glad to hear his reply as what it had been. The way that she was beginning to feel, it came as a small relief to her to think that if she couldn't see where Bronn was, then he wouldn't be able to see her as well.\n\nAs they walked back, there head quiet groaning coming from some low bushes and as they passed by, they couldn't help but see.\n\n\"Psst, hey, Jerrthi, they told me that we have to be here the day after tomorrow for some tests.\"\n\nJerrthi rolled her eyes as she chuckled, \"How did you get from in there to out here, Ronkahh? We've only been out here a few minutes.\"\n\n\"Ya gotta know the flow,\" her friend said, \"and if you follow that, you'll always be where the best part of the party is, and I've got the best nose for that.\"\n\n\"Ronk-ahh? \"a voice whined a little plaintively as they watched a striped gray and very feminine Xer tail rise up to float across Ronkahh's face for a moment, \"C'mon and put your nose back in my party.\"\n\n\"I, uh,... I gotta go,\" Ronkahh smiled a little sheepishly.\n\n\"We understand,\" Xhan chuckled as he took Jerrthi's arm to lead her back, \"Hello Troxi.\"\n\n\"Good evening, Section Officer,\" the striped Xer said politely before she giggled a little and reached for Ronkahh's horns again.\n\n-----------------------\n\nArrax lifted his bowed head and looked at the goddess who stood before him, \"I understand and it will be done.\"\n\nHer soft smile didn't waver as she stepped forward and laid her hand on his shoulder, \"Our thanks, valued servant. The time of our need draws near.\"\n\n-----------------------------------\n\nTirran looked up from his display when he heard the clawed footfalls coming up the rear ramp, so he turned and smiled at Arrax, \"Just about there.\"\n\n\"Good,\" the large male nodded, \"Any issues?\"\n\nTirran smirked a little, \"Uhhh no. Hustle off to somewhere that's barely on my charts, pick up some unidentified folks, haul ass off to another speck on a map display and pick up a lot of weight to fly against the headwind that I'll find at any flight level where there's even atmosphere on this mudball and come back. \n\nI have no idea who I'm supposed to pick up in either location and I hope nobody has to pee, since this bird doesn't have the facilities for more than like six. Everything else was ripped out for the type conversion.\n\nWhat could go wrong?\"\n\nArrax listened and gave it the required amount of consideration.\n\n\"Nothing out of the ordinary for you then. Let's go,\" he grinned as he sat in the second-pilot's seat and began to strap in.\n\n-----------------------\n\n\"You may act in my place as you see fit,\" Dakhete told Yasmin in a serious tone, \"I do not know what might come, so I give you one-half of the army. You may use it all, but if I have need where I go, I may take the other half, so give thought to this before committing the whole force.\"\n\nYasmin nodded, \"I'd much rather go with you. I was a little upset when they changed their plans.\"\n\n\"Khyan cannot go,\" the queen reminded her young prot\u00e9g\u00e9, \"He must remain to rule his kingdom. Why not pool everything between you and just stay with him?\"\n\nYasmin smiled then,\" Thank you, Dhakete, she said as she bowed, \"I owe you much.\"\n\nThe Kandake smirked, \"You owe me nothing, gazelle, but only try to pretend better for me. Did you not think that I had the thought that it is what you would do anyway?\"\n\nShe turned to go then, \"This is not what I would have wanted in how it is to go. Sha-sha and I must journey alone with the others. Saddiq has the same cares as well as a people who need him as Khyan. Farewell.\"\n\nYasmin watched her friend as she walked off to an uncertain future before she turned and walked in the other direction.\n\nAs Dakhete walked, she saw Sha-sha waiting for her with several others. Together, they walked until they stood looking over a small plain. They spoke quietly among themselves until a large dark shape appeared over the horizon.\n\nIt settled down with a quiet rumbling whine and then a large ramp opened before them and they began to walk again. As they neared it, they saw a pair of creatures which bore a resemblance to Maahes and Anubis, as well as his wife Inpewt waiting at the bottom of the ramp. The creatures bowed low to them all -- especially to the gods as they walked aboard.\n\nThere was no one there to see it as the large craft rose up into the heavens, turning slowly before it slid almost soundlessly over the horizon once more.\n\n-----------------------\n\n\"What is it which is to come for us?\" Makhad asked as he shuffled his feet a little in the dirt out of boredom.\n\n\"I don't know,\" Natasha squinted as she looked out over the land with the late afternoon sunlight in her eyes, \"I have never seen anything like what was described to me.\" \n\nShe reached up to touch the side of his face with a smile, \"but I see that there is something that your kind is not good at here. I am just as impatient to have this done as you, but if you look around us, you will see most of my kind standing still, and most of yours looking as though they cannot stand here for much longer. I thought that you were very patient watchers.\"\n\nBefore he could answer, Sheel came to them, with Khyan's sisters and their mates, \"It is something that we can do, but to stand as though we wait on the kindness of others is hard for us.\"\n\nNatasha put her arm around Sheel and kissed her in the polite manner as she smiled, \"it's no easier for us. Most of us don't believe that there is anything coming at all and that it was all a rumor.\"\n\nTwenty miles out from the pick-up point, Tirran stared at his display, set at a little magnification. What he saw out there made him want to step it up a lot more to zoom in better, but he knew that at this distance, the distorting effect of the mirages from the heat of the sun on the earth wouldn't help him at all, so he just flew on, slowing as he did.\n\nIn another minute, he had a clear view as he swung around to set down and drop the ramp.\n\n\"What in the nine hells are those?\"\n\n\"Friends, \"the goddess Inpewt said, \"Large and powerful friends.\"\n\nTirran pressed a sensor on his panel, \"Shaevre, please tell them that it would be a good idea to pee or whatever they do before they get aboard. I have no facilities for them here.\"\n\nShaevre acknowledged as the large creatures approached and she stepped forward.\n\nTirran sat back in his seat and looked over at the goddess Inpewt, \"And I don't even want to think about it anymore.\"\n\nHe looked over at Arrax, \"This won't work, if we have to carry them AND the ones that Rosa led anywhere. We'll be leaking piss out of every seam. It's just numbers and probability. Somebody always has to go any given moment.\" \n\nAnubis looked on, \"Does this servant always have these sorts of cares?\"\n\n\"I was not aware of any,\" Arrax smiled, \"But now I begin to think of it as a sudden obsession of his.\"\n\nTirran swiveled his seat away as he muttered quietly, \"Fine. We'll just lift off and accelerate home; us them and a few tons of transonic pee.\"\n\nNinety minutes later, he watched as they all plodded off toward the portal doors leading into the mountain. He suddenly had the thought that at least a hundred of them needed to go by now, by the standards of his own off-the-cuff rules of probability and he wanted to bang his head against the control console for a moment.\n\nBut he felt the touch of the goddess on his shoulder and he looked up into her lovely eyes.\n\n\"Servant,\" she smiled, \"You have done us a great kindness today and,\" she smirked at her husband, \"I wish to thank you for it and tell you that what you think of is not your concern any longer.\"\n\nTirran looked at her blankly for a second and then he chuckled, \"You're right. Thanks for telling me, but now I have to go.\"\n\nHe stood up and walked away as the others prepared to disembark. Walking to door of the nearest 'air-potty', he cursed and laid his head against the wall as the indicator blinked at him that the holding tank was at full capacity.\n\nTirran ground his teeth together and cursed.\n\n\"Not my problem anymore, huh?\" he groaned, \"And just where am I supposed to dispose of eleven hundred liters of dirty urine?\"\n\nHe walked to the flight console and looked at the monitors, switching views to look all around him. There was a slope to the land that led away from the portal and Tirran began to smile.\n\n----------------------\n\nJerrthi and Ronkahh walked out of the training center feeling a little disconnected from reality after the cursory physical examinations and all of the emergency training videos which they'd had to absorb. As well, it felt downright weird to be wearing the Merren flight suits in the bright sunshine and carrying the helmets they had been handed.\n\nRonkahh was fuming quietly at the treatment which her friend had received as well. She was from one of the most common species which occurred in the make-up of the Merren diaspora whereas Jerrthi was from one of the smallest of the minority groups. To her mind, it meant that her friend ought to receive, if not some sort of special consideration for her slightly different body type, then at least a measure of respect since she was a little rare.\n\nSo it fried her tail a little to hear the way that Jerrthi had been addressed and treated. The staff had made noises to her about returning her gear when their stint with the Xer was completed. When Jerrthi had asked if they wanted hers as well, the female had almost sneered and said, \"Well the helmet was a custom job, made to fit your head and horns. I doubt we'd ever have a use for it. We've never had a member from the Grottoids before. You can keep the flight suit as well. We don't really want to see it back.\"\n\nRonkahh's reaction had been instant.\n\n\"What did you call her?\"\n\n\"Excuse me?\" the low-ranking female asked, nervous suddenly.\n\nRonkahh's eyes glittered a little, \"You heard me. What the fuck did you just call my colleague here? You called her a Grottoid. That's what I heard you say.\"\n\n\"I ... um, I said no such thing,\" the female Merren said, beginning to backpedal.\n\n\"It's alright, Ronkahh,\" Jerrthi said quietly, not wanting to make a scene.\n\n\"No it's fucking not,\" Ronkahh said as she held up her helmet which she'd been attaching the small camera onto, \"This was running while I was screwing around trying to find the best place to mount it. I always keep a cam running if I can.\"\n\nShe leaned closer to the staff member, \"If I find your remark on here when I sit down to edit everything, I'll lodge a formal complaint against you. It won't be a Grotto Dweller's complaint, either. It'll be from somebody just as mainstream as you. I've done it before and I'll see that you cook for it, so learn to watch your mouth.\"\n\nOutside, Jerrthi had tried to calm Ronkahh down, and had been a little successful. \"It just grates me, that's all. Sorry if I embarrassed you.\"\n\n\"I don't think you know what you just said,\" Jerrthi smiled, \"It's me, remember? All those stupid things that you and I did while we were out recording all of the nutty assignments that they'd given us back at school? I'm still used to you, Ronkahh.\"\n\nThey stopped as they saw a large male Xer in a flightsuit walking toward them, a bright and garishly adorned Xer helmet on his hip under one muscled arm. He was on the far side of a group of about seven Merren pilot trainees who stood in a long gaggle and carelessly blocked the walkway between two yellow lines which were there to keep pedestrians orderly. \n\nHe stood head and shoulders above them all and Jerrthi could just see that bright helmet through the crowd.\n\nIt became clear in a moment that the Merren were being rude, but the Xer didn't seem to mind. He walked up to them and stopped, wishing them all a pleasant morning.\n\nNot one of them even looked over.\n\nSo he said, \"Excuse me, please,\" in a loud barking growl, but it was still very polite. Jerrthi could have sworn that three of them jumped, and the rest moved aside hurriedly. They glared at him, but he only smiled at the two females which he was there to guide back as he passed through them.\n\n\"Whoa,\" Ronkahh said under her breath, \"Look at that one. I didn't see him at the party the other night.\"\n\n\"Yeah, you did,\" Jerrthi smirked, \"You jumped off the bar into his arms naked several times, once to talk to me when you first saw me. I heard you ask him to, uh, embed you.\"\n\n\"I, ... oh fuck, I did?\"\n\n\"Uh-huh,\" Jerrthi smiled, \"I don't know if he did, though. All the other times I saw you, you were under tables or crawling around on your hands and knees.",
        "Oh, and you were in the hedge with somebody named Troxi. I met her earlier and we had a great chat.\"\n\nRonkahh groaned as the male came up to them and his brilliant smile shone down on them.\n\n\"Good morning, Ronkahh,\" he bowed, \"and to you as well, Jerrthi.\"\n\nHe continued smiling as he spoke, \"I don't know if you remember me. I am Flight Officer Arshan. I have been sent to bring you to the Xer operations center here. You are to go on a familiarization flight with us this morning, now that you appear to be ready for it.\"\n\nJerrthi exchanged a few pleasantries with Arshan while Ronkahh mostly spent the moments looking uncomfortable and then they were off, walking on either side of the large male.\n\n\"Are you a pilot?\" Jerrthi asked, and he nodded, \"I am, though in our tasking here, I am second-pilot for our craft, the one which you are to ride along in, since we have the extra seating for you in it. My role is to fly when Doona, who is the leader of our attack flight needs to rest or in the event of an emergency. The rest of the time, which is mostly, I oversee the operation of the craft and monitor its state while handling the defensive weapons if we are engaged.\"\n\nHe stopped and looked over at Ronkahh as his expression became one of concern, \"Are you not feeling well today, Ronkahh?\"\n\n\"Huh? Oh, I'm fine, uh, Arshan, fine. It's nothing that a little quiet regret won't fix in time.\"\n\n\"What do you regret, if I might ask?\" he said, \"I enjoyed your laughter very much the other evening and this marks a sudden change. As far as I know, you did nothing to feel badly about if that is your concern. All of us were having a good time. There are no unkind thoughts of you in my mind -- or anyone else's, as far as I know.\"\n\nThe Merren female groaned again, \"I'm afraid I must have made quite a fool of myself that night.\"\n\n\"Your memory of events must be a little foggy from the drink,\" he said, \"You did nothing to regret that night. I would have stopped you beforehand if you were about to engage in anything which might have had lasting effects. \n\nIt was my task that night to watch over you and that was what I did. We are different, but I watched over you as I would for my own sister. You would have come to no harm.\" \n\nHe leaned down a little toward her, \"Nothing was done for which you should feel badly. You were only playing and feeling good. There was no harm done by your actions and you did not mate with any male. I would have interceded quietly then, to make certain that it was what you wished for.\"\n\n\"You -- you would? Why?\"\n\nHis smile was back full force in an instant, \"We are different species, Ronkahh. I was there for your welfare and to make sure that you would not engage in any coital acts with a male, since there is a possibility of being bitten. Such a thing is not to be done with a Merren of any kind while the participants are under the influence, though I believe that Merren do not come to any harm from it -- other than the marks. It would be a shame to wear the mark of a male that you didn't really know.\"\n\n\"You were with me the whole time?\" she asked nervously and he nodded.\n\n\"Often from this close, but I was never more than a little away from you regardless. You were in my arms for brief periods several times, for which I thank you. I have never held a Merren female.\"\n\nHe looked away then for a moment as he watched a Merren craft whistling past some distance away, \"I found it very pleasant, surprisingly so. Thank you for that, Ronkahh, and thank you for your kisses as well.\"\n\nShe chuckled then, feeling much better suddenly, \"It's a shame that I don't remember. I'd have thought that I'd remember doing something as nice as that sounds. Don't mention it, Arshan. I'd do that for you anytime. Just ask.\"\n\nArshan grinned then, seeing that she was back to being more like the pretty Merren that'd he'd loved to feel against him that night, and her kisses, though wet and drunkenly sloppy, were memorable to him as well. \n\nHe suddenly saw a chance for a bit of payback as far as the Merren trainees were concerned.\n\n\"Oh, I'd almost forgotten. May I see your helmets? I've brought you both a little something for before you begin.\"\n\nHe pulled a few stickers from his pocket and began to put them onto their helmets one after the other in a prominent position. \"I had these ones here made up for you. After the other evening, it was decided that you be made welcome among us at any time. We rarely accept outsiders -- even other Xer - so it is a little unusual. These others are never seen on a non-Xer's helmet, but we are far from home now and we all decided it.\"\n\nHe fumbled for a few moments first with one helmet and then the other, but when he held them up, each one bore its owner's name in bold Xerian script over the dark visor and above that, there was an emblem -- a larger version of what each of the unit wore around their necks.\n\n\"First of the Forty-third,\" Jerrthi said in a little awe, and Arshan smiled a little softly as they both bowed a little,\" It's an honorary thing, but we've all accepted you, so you're stuck with them. I think you must be the only non-Xer who have been accepted by a Death hound unit anywhere.\"\n\nHe ignored the others, but he did see the Merren trainees who stood nearby stare at the helmets. As he handed them back, he said, \"Big rule about these - never wear them around on the ground if you aren't getting aboard or climbing down. It's considered bad luck, and it's something that Merren aircrew do. Come along and we'll get started.\"\n\nAs they passed the group, Jerrthi noticed something and so she decided to give Arshan the opening, \"Is wearing your helmet on the ground a sign of something or anything like that, Arshan?\"\n\nHe nodded, \"It's the sign of a trainee who needs to show that he thinks he's important. We like to see it since it makes us laugh. The unit sticker is never given until after you've flown a mission where you have killed something, but as I said, you're in with us now. If anyone asks you to return your helmet, come see me, and I'll remove the stickers.\"\n\nAs they walked away, the two female Merren pilots groaned and wished that they'd get to fly one time with the famous Xer group, especially if the tall one there was along. Several of the others removed their helmets quietly.\n\n\"How many are there in a normal crew for the attack craft?\" Ronkahh asked.\n\n\"The normal compliment is three for that type; the first-pilot, the second-pilot, and the countermeasures specialist. You'll meet them all when we get there. If we carry no munitions load, aside from what is always there for emergency use, we can also carry about ten ground fighters, though it is almost never done, because it would mean moving slowly to set down and lift up again in the middle of a fight. Attack craft are too expensive and needed for that.\n\nThe crews are always kept together,\" he said, \"It makes for a better bond between them. They begin to resemble a sort of family group within themselves, and they do most things together, even off duty.\"\n\nRonkahh looked over, \"What did you mean when you said 'emergency use'?\"\n\n\"We're not like normal units,\" he said, \"We always carry a few things for self-defence. For regular Xer craft to be here, they have to come unarmed. We don't. It's not much, but it means that any Death hound craft is able to fight at any time, in any arena.\"\n\nThey walked straight into a hangar when they arrived, and Arshan took them right to their ride, a dull gray thing which sat on the ground looking as though it was annoyed to find itself at rest. There were small markings which identified the craft as a Xer warship on it as well as a few stenciled unit markings, but on each side, the Xer skull was visible though it was muted in the matte paint job.\n\nTheir pilot Doona was already aboard and she nodded in a cursory manner, apologizing a little as they watched her helmeted head swivel while she prepared for their flight. She seemed to always be doing several dozen things at almost the same time.\n\nAs Arshan got them seated, a smaller Xer bounded aboard and set a large folder aside for the moment so that she could help him. \n\n\"Hi,\" she said cheerily, \"It's Jerrthi, right? Great to see you again.\" When Jerrthi had replied, she turned to the second visitor and smiled warmly.\n\n\"Hey, Ronkahh. I was so happy to hear that you're with us today instead of crawling along in the air inside of the Command rig. You up for some fun today?\"\n\nAs awkward as Ronkahh seemed to find herself wanting to feel today, it was hard not to share in the girl's infectious mood, so she threw the last of her gloom away and grinned, \"I sure am. I'm happy to see you too, Troxi. What do you do in here?\"\n\nThe girl laughed, \"Mostly, I'm here to ride along and pester everyone with my sauce so that nobody gets enough peace to doze off.\"\n\nThey heard Arshan's quiet chuckle as he nodded before resuming his spoken instructions to Jerrthi and guiding her in getting situated and strapped in.\n\n\"Other than that,\" Troxi said, \"I'm here to keep nasty things from finding us. There won't be anything like that today, so I'm just here for the ride.\"\n\nA little later, the two friends sat side by side, strapped in to ejection seats as the Xer close-air pilot wrung their ride out fairly hard. There had been no allowances made for much in the way of gentle familiarization flights for the two journalists and so while Xhan's group got in a little air time over a Merren gunnery and bombing range to stay sharp, the girls tried to work out how to report from the air in the middle of things.\n\nThe buzz of information which flowed through the earpieces of their helmets was like sitting inside a working trash compactor to them, but somehow the pilot heard the call to them and in there somewhere, Jerrthi could make out Xhan's voice sounding clipped and tight in her right ear.\n\n\" -- two hundred left of the last pass. I want it right in the little hole there where the ground drops a bit.\"\n\n\"Copy on the little hole,\" Jerrthi saw the bottom half of Doona's grinning face when she looked to her right to see where her wingman was.\n\n\"Inbound in three. \" she said as she stood the dark gray attack craft on its ear to bring them around again.\n\nJerrthi's neck muscles felt as though her head weighed a ton as she forced a look over to where Ronkahh sat with a big smile on her pretty face. Jerrthi was struggling with the overflow of information which her senses brought to her brain while Ronkahh just threw her a shit-eating grin.\n\nAt least the helmet cams were a success, she thought. She just wondered if their viewers would be able to make anything out of the high-speed jumble that they'd be seeing if the unit went into action. \n\nThe next time that she listened in, she heard some of their pilot's instruction s to her flight, \"- and then it's down in the plants on the way in. We're supposed to assume that they'll have rockets during the real thing on Ethens, so it's gonna be in on the down low, pop up for the release point, and then we scoop dirt out of there. Five, you're in first. Everybody else in reverse order. I'll hang back to evaluate.\"\n\nThere were sounds of acknowledgement from the rest of the group as they came around and began to sink lower. Jerrthi felt the tickle in her chest and she could have sworn that her internal organs were floating freely inside of her as the craft fell out of the sky.\n\n\"Mud flight's on station,\" Doona declared. \n\nJerrthi couldn't see what the objective was so she asked.\n\n\"I can't make you see it if I just say the third bush from the right,\" the pilot said a little gently, \"Just watch where the others drop their stone eggs and you'll see it then by the dust. They're not explosive, but they make the dirt fly a little anyway. Just watch for it.\"\n\n\"Stone eggs?\"\n\n\"Yeah,\" Doona said, \"All we've got today are training bombs. They're just made of cast paving material, the same as you walk on but they're shaped like the regular bombs. They're dumb as uh, rocks. No eyes or ears or guidance. We're doing it the old-fashioned way today.\"\n\n\"Mud from Mother, acknowledged,\" Xhan's voice came over the air, \"You're cleared. Go.\"\n\nThe pilot echoed the command over the flight's net and Jerrthi watched as the other craft rocketed away from them, still falling before they raced out over the valley floor.\n\nThe others streaked in very low -- low enough to disturb the dirt on the ground and in a few seconds. Jerrthi saw it as they seemed to jump upward and then they dropped low again before climbing hard to leave the area. There were small explosions of dirt from the ground as the bombs landed, some of them tumbling a little as they bounced, but there was a sudden strident warning ringing in Jerrthi's ears from the compartment behind them.\n\n\"I've got action,\" the countermeasures specialist said, urgently, \"Ranging signals and .... Height-finder coming up. There's guns out there.\"\n\nDoona got on the communicator to warn her flight, and the five craft scattered, dropping out of the sky again to hide in the ground clutter.\n\n\"There isn't supposed to be anybody out here!\" she yelled as she switched comms to tell Xhan.\n\n\"I hear a lock on somebody,\" Troxi said, \"and ... they're firing.\"\n\nJerrthi watched as some glowing orbs seemed to float up from the ground toward one craft for a few moments and then there was nothing.\n\n\"Gimme a map, Troxi,\" Doona said, \"Come on, a map, a map, a map.\"\n\nTroxi reached for her positional console, needing to pull location information as her systems plotted known positions of what was active out there.\n\n\"There might be some miscommunication,\" they heard Xhan say, \"Merren range control is trying to identify and they've issued a cease-firing command.\"\n\n\"That's shit,\" they heard Doona snarl over the internal, \"They're not controlling anybody out there. Some range control.\"\n\nBack on the flight's net, she called out,\" Anybody hit? I want status reports.\" \n\nShe switched to internal, \"Trox, a MAP!\"\n\n\"Got the weapons plotted on an overlay. Control units too. On your Nav screen now,\" the voice said.\n\nOne after another, the other craft called in to report that they hadn't been hit until there was only one left to hear from.\n\n\"This is Three. I have some damage, but it seems to be slight. We heard it hit.\"\n\n\"Three, this is One. Meet me at five thousand,\" their wingman said in a gravelly male voice, \"Slow and steady climb so I can assess. Anybody hurt?\" \n\n\"Negative,\" came the response.\n\nThey held a low orbit as they waited and the pilot studied the slowly rotating image which Troxi had put onto her display. The orientation of the image turned with the circling of the craft.\n\n\"Fuck-slits,\" Doona muttered over the internal, \"Nasty Merren fuck-slits. Bet this is a fuck-you over Xhan winning his case.\"\n\n\"Our riders are Merren,\" Arshan said to remind his first-pilot.\n\n\"Oh, ... I'm sorry Jerrthi. You too, Ronkahh, I didn't mean -- I'm already thinking of you as us.\"\n\n\"It's alright,\" Jerrthi replied, \"You mean they fired over something like that?\"\n\n\"It's not big stuff,\" Doona replied, \"I'd bet on it and I'd also bet that there'll be the most insincere apologies when we get back. The Merren military is always a little hostile for the way that their bosses always contract us. If they were any good, we wouldn't get the call, would we?\"\n\nShe looked at her fuel cell state and then she switched off her identification beacon, \"Troxi, warm up the stealth suite and the jammers. We're going for a ride and we're going in faded. Arshan, can we mess up their guns with our emergency load?\"\n\n\"Roj, Boss,\" the girl at the rear said with her smile easily heard over the internal.\n\n\"Sure, Doona,\" Arshan smiled, \"Converting Troxi's overlay to targeting now.\"\n\n\"Hang onto your skirts, ladies,\" the pilot grinned back, \"They'll be floating a little in a bit.\"\n\nRonkahh almost squealed as they dropped suddenly,\" I love it!\"\n\nJerrthi suddenly remembered that she hadn't eaten breakfast and now she was a little glad of it, \"What are you going to do now?\"\n\n\"Gotta make my own run,\" she heard in her ear, \"I'm just gonna do it a little differently. I'm going to play this as though it was intended to be a live-fire training exercise with a mistake made in the middle of it. That's what I expect to hear from the Merren ground people when they lie to me, so this will just be us adapting to the changed rules as we saw them. \n\nWe've heard of this shit being done to visiting Xer units before. They've even killed somebody and they just smile and nod and mouth their apologies and regrets. I'm just going to play it the other way today. They want to shoot at us, well, we can adapt to that. I've heard no call to tell me to abort yet, and unless I do, I'm going to do what the book says and the unit has always done.\"\n\nJerrthi saw Doona shrug her shoulders from where she sat, \"You give Death hounds a target, that's all we need.\"\n\n\"Six, this is One. I'm looking at Three from underneath. The maintenance folks are gonna scream at this, but I don't see any fluids leaking. There's a few rips, small stuff that we'd have avoided if we knew our friends were gonna be shooting at us.\"\n\nDoona's finger keyed her microphone, \"One from Six. Walk him home, and I'll meet you on the ground. Everybody else, form up again and hold an oval behind the southern ridge at two thousand. Meet me on the encrypted channel. Six out.\"\n\nSeven minutes later, they flew as though they were on an invisible racetrack stretched out in single file as Doona outlined what she wanted. As the others continued around afterward, Doona broke off and rolled in the other direction.\n\n\"Now, Troxi,\" she said over the internal, \"Fade us now. If you pick up their scans, I want you to shut them down. No, check that. I want you to burn them down if we have the juice for it before they get a lock. Jam them so hard their threat processors melt.\"\n\nRoj,\" came the laughing reply and right then, Jerrthi's horizon began to tumble as the craft rolled down to smooth out over the valley floor and the scenery shot past them in a blur as they accelerated so hard that Jerrthi's vision began to go gray.\n\n\"Mud Six, from Mother. Lost you. Report.\"\n\n\"Recycling transponder,\" Doona lied, \"Wait one.\"\n\nXhan was about to reply with more questions, but he turned when he felt a hand on his arm. He saw the face of his master leader -- an older and very savvy Xer, who looked into his young commander's face and shook his head. Xhan got it and held his tongue.\n\nThe pilot checked the map which Troxi had provided and she even saw the layout of the command bunkers. She made a minor course adjustment and then she pulled the control stick back and leveled a little higher off the deck as she jammed her throttles forward for the different approach. \n\n\"Hide us well, Trox. This is gonna hurt them more than it'll hurt us.\"\n\nThey were in a long turn around the far side of a ridge and Doona held them at a seventy-five percent turn with the throttles back a bit. It made holding her head up difficult for Jerrthi for as long as it lasted. As they came around, Doona added power and they were dropping again to level off screaming across the flats.\n\n\"Your turn, Arshan,\" Doona smiled over and she had just the time to see him grin and nod as he acknowledged.\n\nAir to ground missile racks rotated into view on the underwing monitors that Ronkahh and Jerrthi could see.\n\n\"Get ready to evade,\" the second-pilot said,\" We're hidden, but they'll know where we are once these are on the way. They'll be busy though, I'll be holding off almost until we're inside the yard. Surely somebody's gonna have the shits.\"\n\n\"I've got searches,\" Troxi said, quietly, \"They're looking for somebody -- us, I guess. No search-to-scan conversions yet.\"\n\n\"That's ok, baby,\" the pilot purred back, \"You see any height-finders up, I want you to smoke them. We'll be in and gone before they can blink.\"",
        "\"My finger's holding down the button, Doona,\" Troxi replied, \"If they're even seeing us at all, they're looking at seventeen ghosts spread out over the whole range and we're not the one in the middle, either.\"\n\n\"Arshan,\" Doona said, \"Do it.\"\n\n--------------------\n\nThere was no one in the command bunkers as they streaked in, but there were cameras.\n\nTheir optics wound in and out as the operators sent commands to try for a visual. But nothing came, not even the telltale blur which their own craft would have left. Their method was to try to catch and combine signals from different arrays to make up a workable target picture for the weapons aiming to lock onto, but it wasn't working. The Merren equipment hadn't been purchased from any Merren supplier. It had come as part of a defense deal with the Xer several cycles ago. It was outdated to what the Xer were using even then, or it wouldn't have been offered for sale. \n\nNow it was even older, since it was used for training both attackers and defenders. Compared to what it faced in the systems on board the Xer attack craft, it was as effective as swinging a shovel at a swarm of hornets.\n\nThe Xer craft was coming in on mostly the inertia from its high-speed dash into the area, so there was little to track in terms of particle trail and there was no telltale smoke from hydrocarbon combustion. All that there was here was an eerie hiss which the audio sensors could pick up a little of but not track. And even that faded away when Doona pulled back on the power.\n\nThere were multiple threat alarms in the next instant as the systems detected the launch and direction of the inbound missiles.\n\nThe officers in the Merren range control offices were fit to pull their horns out.\n\nMissiles from out of nowhere and with no data recorded ...\n\n----------------------\n\nThe sensor arrays on the ground noted the release of multiple inbound threats, but even as the guns swung to seek them, the missiles were inside of the circle of defense and of twenty-four missiles, twenty-three found their targets. The last one slammed into a sensor array, destroying it anyway. Arshan retracted the racks and as they flew on, Doona switched comms to the flight's channel.\n\n\"Mud flight from Six. You're in,\" she said, and four more cloaked craft shot onto the range, the second-pilot in each one selecting sensor arrays to engage. They all knew of the single surviving gun and it received a little of everyone's considerable attention.\n\nThey began to call in as each one left the range to head for the rendezvous point and find a space to join the rest of the flock.\n\nDoona twitched around to a different heading and they shot ahead, hustling across the plain, nothing clearly visible this low and fast but the straight ahead view. At the perfect moment, her visor display flashed an icon and Doona pulled back. \n\nThe craft vaulted higher, climbing suddenly while Ronkahh and Jerrthi felt the sudden lift against their backsides like a kick there.\n\n\"Anything, Trox?\"\n\n\"Nothing, Boss. I think we got it all, but I'm still checking.\"\n\n\"Jerrthi, Ronkahh, at the end of this, I'm going to pull up a little hard, so you might want to clench your cheeks a little beforehand and I hope that you're not too prone to hemorrhoids. I'm going to loft my training bombs and you'll feel it as little upward kicks as we get lighter, but we'll be upside down then. \n\nOh, and you might pass out.\" \n\nShe was too busy to look back, but she grinned to herself anyway, adding, \"Don't worry, it'll only be for a moment or two until the suits can equalize.\"\n\nThey climbed a bit more, and then the world turned over from Jerrthi's view as they rolled upside down and Donna pulled the power off abruptly.\n\nThe almost-silence was so strange as they coasted.\n\nAs she saw the marker that she'd set on her panels light up, Doona hit a series of switches and her bombing racks swiveled forward and down with a whine. Her speed began to drop due to the increased drag, but that was alright, she thought. That was what her on-board systems were there for -- to figure stuff out for her. She armed her automatic release and pulled up just a little.\n\nJerrthi heard the little thumps and clacks as the bombs left and then the racks whined up and disappeared as Doona pulled hard and Jerrthi saw only the valley floor then.\n\nThey were pointed straight down and she heard and felt the change as Doona poured on the power once more.\n\n\"Here it comes,\"Arshan said in a grunt as they flattened out just meters above the plain and rocketed away in the opposite direction. Several seconds later, Doona's practice bombs landed, each one throwing up a little cloud of soil. \n\nThrown high as they'd been as they'd been released, they'd arced over in a long curve to impact in the middle of the depression that Xhan had marked as their target, but there was no longer any Merren infrastructure there to record the event.\n\nJerrthi looked over at Ronkahh and she could almost smell her excitement.\n\n\"Fuck, \"the party girl said, \"This is so ... I almost want to play, uh, I mean, ... well the suit and the stupid straps won't let me, you know?\"\n\nThe pilot grinned at that, but said nothing for a few more seconds as she checked her fuel cell state. \"Rear camera, Troxi,\" she said, and the specialist acknowledged.\n\n\"Can't tell from the angle, but it looks to me like they landed right in there.\"\n\n\"You mean, in the little hole,...\" Doona grinned.\n\n\"Right in the little hole,\" Troxi laughed.\n\n\"Got an overhead, Troxi? I'd at least like to see my score, you know.\"\n\nThey heard quiet laughter from the rear for a moment and then it was quiet back there, but Jerrthi spoke then.\n\n\"Don't do it Troxi, \"she said, \"Somebody will think of checking the satellite access records. The Xer ID for this craft will be recorded and they'll know which craft accessed it and they'll know it was this craft.\"\n\nTroxi pulled her hand away from the communications console, \"You know that, Jerrthi? I mean, for sure?\"\n\n\"Yes, Jerrthi said, \"A Watcher will find that if they ask for it. I used to be one.\"\n\n\"Thanks, Jerrthi,\" the pilot said, \"I'll be in deep enough for this as it is.\"\n\nShe bounced them around a little to be on the safe side so as not to present an easily tracked target to any sensors located on the ridge which now loomed larger in the windscreen. \n\nThe craft shot upward and then coasted over the ridge in a slow longitudinal roll. Jerrthi's head sagged down with the inertia and she felt the quiet gurgle in her throat as her chin tried to meet her chest for a moment.\n\nAnd there was an odd sound in the cockpit as well.\n\n\"ooooooooOOOOOOOO-HOOOOOOOOOOOooooooo,\" they heard.\n\n\"What was that?\" Troxi's voice came over the internal.\n\n\"That was Ronkahh,\" Jerrthi smiled.\n\n\"That was ... \" \n\nRonkahh was at a loss for words, something which Jerrthi could testify happened less often than double-sun days, she was sure of it.\n\n\"I mean, I ... oh, I .... Ahhh, I can't even say it.\"\n\n\"You were just about there, weren't you?\" Doona chuckled, \"It was the same for me my first time. It's a thrill huh?\"\n\n\"A thrill?\" Ronkahh gasped a little, \"I think I wet myself.\"\n\nDoona laughed then, really laughed for a few seconds, \"Ronkahh honey,\" she said shaking her head, \"I think I'm in love.\"\n\nJerrthi's eyes opened wide at that and then it hit her. She hadn't really gotten a look at the pilot's face before the helmet was on and the visor hid her eyes. \n\nThis was the other girl who'd been dancing with Ronkahh the other night, she was sure of it now.\n\nThey were home free on the other side of the low mountain which served as the backdrop for the range. As they slid lower, Doona eased her throttles forward and they were flying again, staying in the shadow of the mountain.\n\n\"Any threats, Troxi? Any searches, anything?\"\n\n\"Not even a sniff, Boss.\"\n\n\"Good. It's too bad about the overhead, though. I doubt the Merren range shits are gonna validate my score, but -- \"\n\n\"If Troxi will help me a little later on,\" Jerrthi said, \"and if Xhan will give his permission, I can access that from his command craft from the base. The ID won't do a Watcher any good, since it couldn't have been Xhan's craft which did the damage. All we have to do is convince him.\"\n\n\"Are you joking?\" the pilot groaned, \"He's going to skin me for this. I doubt he'll even listen long enough for me to ask.\"\n\n\"I'll ask for you,\" Jerrthi smiled, \"I don't know if he'd do it, but I don't think he can be mad at me.\"\n\n\"I'll get it saved if we get a chance,\" Troxi crowed, \"I'm gonna hang it over the bar, but not tonight, ' kay?\"\n\n\"Good girl, Trox, you're the best, as I've always said.\"\n\n---------------------------\n\nThere was a huge three-way dust storm made of the incident with the base commander becoming involved as well. Xhan was instructed by his command chain to remain where he was. It took several weeks to iron things out, but it came to pass that the officer who had been sent to represent Xhan at his original inquiry was back officially with instructions to help him through the unpleasantness of this and act as an informed witness whenever he had to speak to any Merren officer about any matter whatsoever.\n\nThe range officers as well as the gunners were replaced within a week and after that, relations began to improve again as Merren workmen undertook the repair to the facilities.\n\nBut before that, on the day of the training flight, not long after the Merren military had lost almost all of the facilities which had been at the range and what was visible there now lay twisted and destroyed, Jerrthi walked into the maintenance hangar where the repairs of the damaged assault craft were being undertaken. \n\nShe looked around and wondered why there were so many Merren people there and asked Doona, who looked to be standing in a little shock.\n\n\"Oh them,\" she smiled, \"I don't know how it works, but wrench-twisters everywhere seem to be like this. They find commonality with their opposite numbers right away and want to help. While they get it done and party like crazy afterward, our biggest issue then becomes espionage, since they're in here and crawling all over our stuff.\"\n\n\"Why do you look so ... I'm not sure what that expression is that I see on you,\" Jerrthi said.\n\n\"I went to see Xhan,\" the pilot said, \"I expected him to tear my ears off over what we did to that range, but he hugged me instead!\"\n\n\"Hugged you?\"\n\nDoona nodded, \"Not in a perv kind of way. We're all like families, kind of concentric families, like a pebble thrown into water. That's why we're all so tight among us. Anyway I got there and stood in front of him to tell him that I was sorry if it caused him any trouble, but he started laughing and then he hugged me.\n\nHe said that he was prepared to remind higher\u2014higher in the Xer command chain that the Merren had a history of that sort of \"sudden accidental engagement\" by their facility gunners at this base, but they mentioned it first and commended him for our actions, saying that what we did was right out of the unit's mission statement.\n\n'That's what we do,' he told me, and that it's published publicly in any of ten thousand different places anywhere we've been. So he hugged me again and said that he was commended and he passed that right on down to me and all of the crews. \n\n'The forty-third doesn't take shit from anybody,' he said, 'least of all Merren ground-huggers', and then he asked me if I knew anything about the right way to uh, ... \"\n\nShe looked at her boots for a moment,\" Well, let's just say um, romance a certain kind of Merren girl.\"\n\nJerrthi stared for a second then then she laughed, \"What did you tell him?\"\n\n\"Xantham, do you really want to hear that?\" Doona asked and Jerrthi nodded, \"What do you think?\"\n\n\"Well,\" she smirked, \"I told him I didn't know and that he might want to look that kind of thing up someplace first before he puts his foot into anything. I told him that I just know about the regular kind, like Ronkahh and that to romance them is easier than farting when you sneeze.\"\n\n\"Why did Xhan, um,...\"\n\n\"Why did he ask me if I knew?\" Doona grinned, \"Well I have bedded a few, they say, if you listen to the rumor mill around here, though I can't say that I've been successful with your friend yet, but hey, in a few hours, it won't matter and it's as good as done anyway while we're standing here.\"\n\nJerrthi was confused and her face showed it.\n\n\"I heard that she didn't remember Arshan keeping her out of trouble at the party the other night,\" Doona smiled, \"She didn't remember kissing him, so she told him to just ask her if he wanted any while she was paying attention, I guess.\"\n\n\"I remember her saying something like that to him this morning, that all he had to do was ask her,\" Jerrthi said.\n\n\"Uh-huh, see her around anywhere? Arshan asked her like an hour ago, so I'm guessing that she's pretty pleased with him now. He's my wingman, you might say.\n\nHe and I are tighter than anything and Mud Six crew plays together. I'm thinking I'll get my chance.\"\n\nThere was a triumphant laugh through the open door then as Troxi came running in waving a piece of paper, of all things.\n\nShe jumped up on the bar and waved it around.\n\n\"It's a satellite shot of the range,\" she yelled.\n\n\"Right smack in the middle is the little hole -- the famous little hole -- and this shot proves that Mud Six nailed it! We fucking suppositoried the little hole! Nobody's EVER done it before! \n\nXhan's pleased and he sent it on to higher. Doona won't get credit from the Merren, but Forty-Third HQ sends its regards and will record the perfect score into the unit records for the way that we smoked them right in there- right in their fucking little hole -- or little fucking hole or however you want to say it.\" \n\nThere were yells and cheers then as Doona wandered over along with Jerrthi and now stood in a little pleased shock.\n\nTroxi saw Doona and jumped off the bar into her arms, \"You're the fucking greatest, Boss,\" she grinned.\n\n\"I dunno,\" Doona smiled, \"it wasn't all that tough after you jammed them into the ground. We didn't have one threat after that.\"\n\nTroxi kissed Doona in her joy and slid off the pilot. She turned and thanked Jerrthi before she ran off to go and look for Ronkahh, \"I gotta find a hammer and a nail, ot a tack or something,\" she grinned, almost hopping as she ran off.\n\n\"Did you have anything to do with that picture?\" Donna asked and Jerrthi nodded, \"I just asked Xhan and told him that I didn't really understand the why of it, but that it seemed important that I get the shot for Troxi. He gave his permission and I pulled it off the satellite memory from the command craft, once they got me in front of the screen and keyboard for that. It seemed to impress Troxi some,\" she shrugged, \"and I was happy to help.\"\n\n\"It wasn't exactly all that tough because it was a Merren range and they're pretty dumb, but I guess you can shine up your helmet stickers now,\" Doona winked, \"You were there when the First killed something.\"\n\nJerrthi walked away as the other crews walked over to see the photo. She headed over to the next building, which was used to house the Xer command while it was there. Wandering around for a while, she came to Xhan's office, the place where he ruled this wild and unlikely bunch of extroverts and she found the door open. He wasn't at his desk, but after peeking around a little, she found the office bathroom and heard the shower running.\n\nShe'd spent enough time with him over the past few days to be able to recognize that one silhouette that she saw in the shower glass out of a crowd, she smirked to herself. Xer never wear very much unless they're in a hostile atmosphere, she thought. \n\nWell some hot water in a closed-in place was about as friendly a place as there could be to a Grotto Dweller like her. She'd just want it a little darker, that was all.\n\nXhan wasn't thinking about anything much as he washed the sweat of the day off his frame. He was puzzling over how to approach what he saw as a delicate problem. \n\nHe knew and understood what it was that Jerrthi was carrying, but he'd found over the past little while that he had difficulty in getting her out of his thoughts. He didn't care anymore, but at one time, he'd have never had the sort of thoughts that he was having these days. Back then, it was all about finding only one kind of bitch for himself, and that was the furry kind.\n\nHe smirked to himself. It showed him just what kind of idiot that he was. He was now having difficulty in thinking of her as anything other than the lovely female that he saw her as. Even in the most polite Xer manner, she wasn't a bitch to his mind. He wasn't even sure yet how her kind mated -- well, besides the obvious. He felt a little lost, not knowing the finer points of what might be expected of him if he ever got a chance at that heart.\n\nOther than the long hair on her lovely head, Jerrthi didn't have a single hair on her body. He'd suspected as much, but the bit of research that he'd been able to undertake had confirmed it, though he'd felt like a bit of a deviant as he'd looked it up.\n\nAll that he knew was that she felt so good in his arms. She wasn't big at all, but he was beginning to see that he wanted to be the one to keep that little naked body warm and it came to him that it wasn't only that she was somewhat exotic to him. He just cared that much.\n\nHe looked up as the lights went out. All that he had was the almost complete darkness and a little light from the little window through the thick curtain that he'd never moved. He was about to shut off the water when the glass door slid aside and Jerrthi stepped in.\n\n\"May I join you, Section Officer?\" she smiled.\n\nXhan had to draw a breath and think for a second before he said anything stupid. \"You're heart-stopping in your beauty to me at any time,\" he smiled, \"But I think that I had better warn you, Jerrthi. As much as I want you here, Xer can see very well in the dark.\"\n\n\"I was counting on that,\" she nodded, \"I wanted to be with you and so I came looking. I know it's after-hours now and I had a hope that your staff might have gone for the day. Now, I can't believe my luck, Xhan. \n\nHere you are, just where I wanted to be. After a day zipped up in a flightsuit, well, it's not normal for someone like me to wear as much as that even in a place like an office. To spend a day sweating in a mobile tent just wilts me. I had thought of using the shower in the empty barracks where Ronkahh and I are quartered, but it's filthy. I'd have cleaned it out myself if I didn't need to get clean this badly.\"\n\nShe stepped over to him and put her arms around him, pulling him backward gently so that she was under the stream of hot water. He looked down as she tilted her head back under the shower with her eyes closed.\n\nShe let go of him to run her fingers through her hair for a moment and then she brought her head forward again. As she did, she looked for something and she saw it just before he shifted his gaze to look into her eyes again. He'd been staring at her little breasts.\n\nShe turned around and raised her arms. Xhan looked at her back and couldn't imagine anything nicer in a female shape as his eyes drifted down over her body. \n\nHe suddenly realized that she was speaking to him.\n\n\"Are you still in here, Xhan?\"\n\n\"Yes,\" he said a little awkwardly, \"I'm sorry, I missed what you said. Could you repeat it for me?\"\n\nJerrthi chuckled a little, \"I was asking where the soap was. I don't see it. You must have been using something, you smell so nice.\"\n\n\"Thank you,\" he almost stammered as he looked around for it, \"Uh, here.\"\n\nIt was still in his hand.\n\nShe took it from him to soap her underarms without turning around, \"Please don't leave,Xhan. I want to talk to you, if this isn't too awkward a place for you, that is.\"",
        "\"No, uh, ... no this is fine,\" he said.\n\n\"Well that's good then,\" she smiled at the wall in front of her. \"Here, would you mind, um, washing my back and, you know, any other thing that you think might be in need of a little of your ... attention while I try to figure out what I want to say so that I don't sound like a fool?\"\n\nHe took the soap back and began on her back, telling himself that it was all that he'd have the nerve to do. \n\n\"How could you ever sound like that?\" he asked and she replied, \"Oh, trust me, Xhan, I do it all the time.\"\n\nJerrthi liked the feeling so much that she leaned forward and groaned as she hung her head under the stream again. \"That feels so good.\"\n\nThis was something that she'd never done with Bronn in all of their time together. Grotto Dwellers are as fastidious in their cleanliness as any other Merren type, but because of their distant past, they tended to be a little private in their bathing habits. They'd had to be, one of any couple standing watch while the other washed.\n\nBut Jerrthi had come to a decision of sorts and she'd also done a little research on the habits of the Xer, so she was trying to fit this together as best she could. She knew that the Xer quite often washed each other, so now here she was, trying to fit in a little, though she felt very strange doing it this way. At least she felt that she could draw a little comfort from the way that her body seemed to appeal to Xhan as she felt his hands sliding the soap over her bottom now.\n\n\"It sure doesn't look like it to me,\" she said, \"but I'm not actually trying to seem sluttish in any way. I've been a mess for a few weeks now. As hard as it is to bear, I've slowly come to accept what I've lost, or what was taken from me, I guess. You've been a bright spot for me the last little while, Xhan, and I'm so thankful for you.\n\nI think that, if we hadn't met, I'd have carried my sorrow for a lot longer. It's not gone yet. But I've gotten to where I think I'd be a fool if I just ignored the fine person who cares for me the way that you do. I've never had this kind of good fortune. I know how I look, but it gets me more passes from people that I plainly would just rather avoid, to tell you the truth.\n\nWould you be a dear and wash my legs please -- if I can ask it of you?\"\n\nHe couched then and she continued as he worked.\n\n\"So I wanted to come to you to complain a little about the dirty shower in the barracks there, but I also wanted to tell you that I've decided to come out of my shell again. I find that the Xer are such sociable people and Ronkahh and I have been made to feel very welcome here among you all.\n\nI see that most of you have some sort of emotional attachment with one or more of the others here, like the way that Doona is with Arshan and Troxi. It's very different to me, but I see that they care about each other very much. Where I'm from, a relationship like that would be ... well, exotic to say the least, but now I just see it as what it is, people in a deadly business who cling to each other to help each other through. I enjoy seeing the little swirls of it as they interact. I like to see it now.\n\nThen I thought of you, Xhan. It seems I'm always thinking of you these last days. I wanted to learn of what sort of relationship that the leader of this part of the First surrounds himself with, but I've learned that you don't have anyone, do you?\" she asked as she turned around.\n\nHe was still on his knees and now he looked forward and then he slowly looked up into her eyes.\n\nJerrthi chuckled as she remembered something, \"As I was here looking for you, I saw your computer and the notes that you were making about what I am, the kind of place where we come from and all of that.\"\n\nHe groaned a little there at her feet, so she reached down to hold his ear gently and touch it with her thumb. \n\n\"Don't look so nervous, \" she laughed softly, \"the mating behavior that you were reading about would only apply between myself and another of my kind. I'd never do that in your presence.\" \n\nHe watched her roll her eyes and look embarrassed just to be speaking of it with a male who was right there, so to speak.\n\n\"Why?\" he asked as he reached out and ran a finger down the line between her leg and her mound, amazed at her hairlessness.\n\n\"Because it wouldn't mean anything to you, Xhan. It's just something done for another Grotto Dweller and almost always in the pitch black darkness, though not always, I guess. I'd be afraid to appear crude to someone like you, so I'd never do that. \n\nWe're different,\" she smiled, \"and I think there's enough to celebrate --and try to learn about in our differences as it is. I've never showered or bathed with anyone else before, as an example, but you're not alone in trying to figure out the one that you're interested in, you know. I'm just as guilty of looking up Xer mating habits as you are of looking up mine.\n\nYou are interested, aren't you?\"\n\nHe smirked then, \"Jerrthi, look at me. I'm not some drunken hound trying to sniff around at a party, though ... I guess I must look like it right now, don't I?\n\n\"Sort of,\" she smiled down, \"but it's just another thing that goes along with trying to accommodate each other.\" She ran her fingers through his wet fur for a moment, \"I don't know if you'd be doing this with a Xer female if you were in a relationship with one, but I don't think I'd mind very much right now if ... you ...\"\n\nShe sighed then as he moved forward to kiss her. His hands on her hips felt wonderful and she wanted to lean against something right then.\n\n\"I probably would be doing this right now if I was in that sort of relationship,\" he said softly as he dragged his lips over her soft skin, \"if it had gotten to the point where we were lovers. I've figured out that you're a very unique sort of ... \"\n\n\"Bitch?\" she hissed.\n\n\"No,\" he said, \"I was struggling with that definition just before you stepped in here with me. It doesn't apply. The structure would have to be different, I think, because I'd want to allow you the difference. I'd probably want to be more like a male Grotto Dweller for you, well, except in that one regard. \n\nWhy? Would you want to be a Xer bitch? I'm not sure that you're built for it, which is why I'd want to make the allowances in the first place.\"\n\n\"I don't know, \"Jerrthi sighed, \"I have nothing to relate it to. Could we try it a little in either way? I mean that I'd never wet on you, of course. But I'm interested, Xhan. That's why I'm in here in the first place, as well as wanting to be clean. I've already learned the joys of having the one that I'm interested in wash me. That's actually a big step for me.\"\n\nShe inhaled then as his tongue found her and quickly moved to the core of her. Jerrthi looked down at his closed eyes, thrilling a little to see as well as feel those teeth of his on her body. He opened his eyes and she found herself looking into them and she found that she could see far down into him like this.\n\nHer eyes widened then to see the hope in him, so after a good long look, she nodded silently and caressed his head. \"I want the same thing,\" she almost whispered, \"Do you want to try and see where we go?\"\n\nHe didn't answer, not wanting to move. He just nodded very slightly and to Jerrthi, he might as well have shouted it. He moved her and she went along until her back was to the wall. Xhan raised his muscular arm and placed his hand dead center on her breastbone, pushing back until she leaned against the wall. \n\nReaching out, she moved the shower nozzle so that the stream cascaded down the front of her and then hoping that he wouldn't drown, she held onto his head as he licked so that she could coo to him over how wonderful it was.\n\nXhan was listening to her. He heard her soft little sounds and he felt a bit of a sting form the way that the position of his body hadn't completely shielded the throbbing tip of what had emerged from his sheath, so he moved a little until he couldn't feel it.\n\nJerrthi bucked against him a little as she moaned, loving this and the comparative wildness that she felt from it. It wasn't what lay in him. She knew that. He was holding back out of consideration for her relative fragility in comparison to what he was, but by the same standard, Bronn wouldn't have done it this way at all. She tried to clear her mind and in the doing of that, she found her bliss at the end of a long Xer tongue. \n\nAs she hugged him to her belly while she struggled to regain some sort of normal breathing pattern, she thanked him in that small soft voice which now thrilled him to hear. When she had it together, she spun them a little slowly so that he was against the wall now and she crawled a little higher up the front of him. When she got there, she seized his head and kissed him as hard as she dared, loving the way that it felt to feel his teeth against her face and her own against his. They were different, but they reveled in it now. \n\nShe moved her attention to the side of his neck, wanting to feel and smell his wet fur. She rubbed her face against his shoulder and chest.\n\n\"I've never seen that,\" he said as he looked at her looking back up at him. She attacked his face again while they both groaned.\n\n\"I don't know if I can take the punishment you can give,\" she hissed needfully into his ear and she licked deep enough inside to make him shudder, \"but I'll try -- I swear that I'll try, Xhan. Fumes and spray,\" she cursed gently in her way, \"I need you so fucking much. Xer.\"\n\n\"I'll try,\" he groaned, \"Not to hurt you. I never would want to ... but, ... Oh, Jerrthi ....\"\n\nShe was back rubbing her body against his all the way down until she was faced with his version of what he'd been faced with. Jerrthi had seen many of these in the past few day, but they'd all been tucked safely away inside of their sheaths. She took his balls in her hand and opened her mouth to take that shaft in without a backward glance. She'd never felt this way in her life before.\n\nBronn had offered a safe sort of life as a pair and she'd appreciated it at the time. It was what she wanted for them then. Right now, she doubted if it even interested her. She had the leader of a bunch of polite and rather genteel killers here in her mouth. The thought caused her to groan as she had it and she rose on her knees to get more of him in. \n\nShe sucked and bobbed, she leaned forward, pressing herself against that stone-hard abdomen. She leaned against that hard belly with her ear, listening to him breathe and loving the fur against her skin.\n\nShe settled down only a little, finding herself dead center in front of him on her knees, reaching for his hard hands to bring them to her horns. She opened her eyes again after a moment spent just enjoying the feel of them there as he curled his fingers around them. He didn't force or even try to guide her. He just held them. \n\nPraise The Balance, she thought, he's fucking perfect.\n\nShe looked up and moved her head back, licking him in a long stroke with some of that thing there against her nose and later her cheek.\n\n\"Promise not to hurt me,\" she said. It wasn't a plea, or a question. \n\nIt was a direct statement.\n\n\"Promise to be gentle for a Xer and rough for a Grotto girl.\"\n\n\"Promise,\" she said, licking it again, \"and I promise to try very very hard to break your back, Xhan.\"\n\nHe hung onto her horns and watched her as she watched him while she sucked it in as far as she could to squeeze the thickest part of his root with her lips.\n\n\"See? I can take all of you in my mouth,\" she grinned, \"I didn't even think I could. Come on, Baby. Come on. Promise.\"\n\nJerrthi didn't even feel like herself right now and she didn't care if she ever returned to the old Jerrthi again. She'd found a way to move ahead, rather than remain in mourning and she wanted it now. She didn't even know where her words were coming from but she let him go right then and she smiled up at him as she held it against the side of her face.\n\n\"I don't want to be a Xer,\" she said, \"I can't be a Xer. But I want to be LIKE a Xer bitch to you. Promise me Xhan, and I swear I'll do my very best for you.\"\n\n\"Make me your -- \"\n\nHe pulled her up then and almost slammed her back against the wall.\n\n\"You don't know what you're asking,\" he growled as he raked her throat with his long teeth.\n\n\"Yes I do, \"she growled right back in Xerian as she grabbed his head to look right into his eyes. What she'd seen earlier was still there. \n\n\"I want that,\" she said, \"I know it probably can't be, but I want to get as close to that as I can.\" She twitched her hips up and down against him and he moaned in response.\n\n\"We might end up there, I dunno, \"she said in a tortured voice, \"probably not, but I want to try for that. I'm not asking for anything but a shot as us together, you and me as fast or as slow as we go. We've been dancing around it for two weeks. Instead of just a fuck on your couch, I'm saying you can have more. Just ... Just promise me that I have a chance.\"\n\nHe pressed her against the wall and she tried to backpedal to get a little higher, \"Promise me, Xhan. Make me your bitch. It won't count. I'm not a Xer. I don't have anything anymore. Give me what you are, just a little.\" She was crying now, and the strain of speaking in Xer to him was making t worse.\n\n\"I'm tired of feeling dead,\" she sobbed, \"I want to feel alive the way I feel right now, Xhan. I want to live my life with my cunt on fire for you. I doubt it'll last long, but god-FUCKING dammit, I need to feel this!\"\n\nHis hips dipped low then as he pressed against her and then he was into her in one long push. Jerrthi wanted to scream when he hit the end of her and she went to her tiptoes to find a little comfort.\n\n\"Is this what you want?\" he snarled at her from right up close.\n\nShe whimpered quietly as she nodded, \"Yes,\" she whispered, a little fearful of what she might have just unleashed in him.\n\nHe reached under her to help lift one of her legs a little. \"Wrap your legs around me then, Jerrthi,\" she smiled softly as he kissed her, and he kept right on as he dragged those sweet lips of his against her again.\n\n\"I understand, Jerrthi,\" he said, \"and I promise. I'd do anything for you,\" he said as he thrust in and out of her gently, \"I can do what you want, that's easy, and I promise not to hurt you.\"\n\nShe felt his teeth against her throat for a long moment as he pressed her head back a little and then his voice went on from there someplace, \"I don't even know if we can do this or for how long, to be honest. But it can't be real until it gets to one point. I also promise to let you know how I feel before then.\"\n\nShe lowered her head when she had the room for it and looked into his eyes, \"Can I be your --\"\n\n\"Girlfriend if we like each other and we get that far,\" he said, and then he stopped suddenly as he looked into her eyes for a moment.\n\n\"Alright,\" he nodded as he began to go at this a lot more forcefully, \"I can take you there.\"\n\n\"Promise me,\" she moaned as the feeling came back to her, \"as much as you can and I'll accept it. Oh, Xhannnnn,\" she called , and then she stopped abruptly as she felt his teeth closing around her throat. \n\nHer ribs heaved as her hand flew to his head, but she wasn't trying to pull him away. He was amazed to feel her trying to get more of her throat in there, so he tried as her other leg wrapped around him and he began to really nail her to the wall.\n\nJerrthi bucked and moaned and finally she screamed into his ear and he let go of her neck to grab one of her horns and take her ear in his teeth as he came. He thrust into her with every contraction of his and she rode up and down several inches each time. It passed then and they looked at each other.\n\n\"You're sure ... \" he said and she nodded, \"I am.\"\n\n\"You know what's involved?\"\n\nShe nodded again, \"I just want to try. You find somebody Xer that you want and ... \"She looked away.\n\n\"Jerrthi,\" She didn't look at him.\n\n\"Hey, Jerrthi,\" he jiggled her and it tickled her somewhere and she flinched and smiled at him for a second.\n\n\"I don't know,\" she said, \"I'll try to back away if that happens, alright?\"\n\nHe thrust a little slowly then as he spoke, \"You can't know it all. I can't do that if we really get going. I mean I could, but not if it's real. I wouldn't.\"\n\n\"Push again,\" she whispered, \"You feel so good in me. I want to be your girlfriend, I guess, I -oh!\n\nOHhhh, ah ,ah, ah ,ah, fuck, this is great, ah ohh.\"\n\nIt made him chuckle and she finally smiled, \"Ok, now I insist on getting a chance at this.\"\n\n\"OK.\" he smiled.\n\n\"What do you mean, 'ok'?\"\n\n\"I mean, ok. Jerrthi. I'll give it a shot.\"\n\nShe looked at the ceiling and bucked her way through the next round, \"You said A shot. I'm getting a lot more here.\"\n\n\"I'm trying to show that I'm sincere,\" he shrugged.\n\nShe would have laughed but she felt the next round then and she rode through them looking into his eyes. She adjusted her grip on him and sighed, \"Any more?\"\n\n\"You don't want any more?\" he asked.\n\n\"Fuck, Xhan,\" she said, \"I want all you have. Are you nuts? This is about the best fuck I've ever had. Thank you.\" She kissed his nose.\n\nHe smiled, \"Well I'm sure this is the best I've ever had, so we're even.\"\n\n\"Do you have any more?\" She asked and he opened his mouth to speak but the water ran cold then.\n\nThey got out of the shower then and dried off before they got dressed again and went to dinner in the officer's mess building.\n\nXhan found a section that was kept as more of a dining room instead of a cafeteria, so she asked him to stay back a little around the top of the staircase.\n\nShe sort of swivelled in wearing her flight suit and asked if she might have a table over in the dining room and the man in charge -- well, he couldn't have been called the ma\u00eetre d', since it wasn't really a restaurant, told her yes.\n\nAs she looked past him to see Xhan walking toward her the man said that it wasn't allowed to seat a Xer or any kind, officer or not, in the dining room.\n\nJerrthi pulled out her press pass and clipped it on. \n\n\"Is that so?\" she asked, \"I've recently done a rather revealing piece on the sheer size and number of Xer forces employed in Merren service. Given the relatively tiny size of the Merren military, I was quite surprised at the amount of mail that I got demanding that our military be disbanded, since they were a waste of money anyway, and that it cost such huge expenditures to keep facilities. \"\n\nShe glared at him, \"and here you are telling me that two people can't sit in a huge - and EMPTY -- dining room because my companion here is a Xer, is that it?\"\n\nThe got the table.\n\nAs they talked about all manner of things, they found that it had just gotten a lot easier and it felt so pleasantly familiar to them that it took no effort at all. They could converse in either Merren or Xerian and they found that their talking between them just did that, switching back and forth without a thought to them.\n\n\"What are you going to do tonight?\" he asked and she shrugged, \"Well I was thinking that I ought to go back to barracks and clean out that disgusting shower, but I don't want to.\"\n\n\"That shower wouldn't look like that anywhere near a Xer facility. We're not any cleaner than you are , likely, but think about it. Imagine the drains in a facility which houses a lot of what I am. So we stay on top of things like that.\n\nIn fact, I'd bet that if this base wasn't in decline the way that it is, it would be kept cleaner regardless. You can't house a bunch of any kind of fighting force and ignore things like that. I'll make my complaints to the Merren in the morning. I'm sure that it'll only take them a week to clean.\"\n\nHe watched her face and he could almost hear what she'd say, so he held up his hand and chuckled, \"It's unusual, but then we're not the usual outfit. Why not stay with me? I've got a little house all to my lonesome.\"",
        "\"Deal,\" she smiled.\n\n\"What about Ronkahh?\" he asked and Jerrthi grinned, \"Why do you think I'm so eager to accept your offer? I've actually been sleeping alone, the only person in a building made to house eighty people since the night of the party. Ronkahh has been sleeping in a different place every night. She refuses to sleep in that barracks. We spent one night there before she left and we slept together and believe me, it wasn't fun for either of us. We hung onto each other because we didn't feel safe.\n\nI think she's going to be sleeping with the crew of Mud Six from now on, since they seem to have accepted her -- and she's been to bed with them all already, I guess.\"\n\nXhan smiled, \"That little pack is shared between Doona and Arshan, with Doona as number one. That's just how it works for them. I ought to put a stop to it, but we're not on a Xer base, so nobody cares. Besides, they're one of the top crews.\"\n\nHe looked over at Jerrthi, \"You're sleeping with me then,\" he said, but then he realized what he'd said, \"I mean --\"\n\n\"I'm sleeping with you then,\" she grinned, \"and thank you.\"\n\nXhan actually dropped his fork then, stunned by what he'd heard. His mind raced to try to think of the polite way to address the situation and he did all that he could think to do, being the young officer and well-bred Xer that he was.\n\nHe lowered his head to Jerrthi and told her that he felt honor from her words, since it was the truth.\n\nThey took a walk after dinner and went to the barracks, where Xhan agreed that the showers were filthy and decrepit, so they grabbed all of Jerrthi's gear and walked to his quarters.\n\n\"There is something that you must know,\" Xhan began a little uncomfortably as they walked to the little house where he was quartered. It was only a single- bedroom sort of affair, but it was the smallest place on a quiet street in the section reserved for married Merren officers. As such, it was a little plain, but at least he didn't have to care for the grounds. \n\nHe'd found the child of a Merren officer -- a boy of about fifteen who, although he found the Xer to be a little fascinating and stood a little in awe of Xhan, his slight fear and mistrust of the large male didn't get in the way of his want to earn a little gold, so he took care of the lawn and weeded the tiny flower beds fastidiously for Xhan.\n\nXhan sighed a little, \"As you said, we might not even get there, Jerrthi but there are issues to, ... well even being the girlfriend of one of us.\"\n\n\"I'm aware of several,\" she smiled, \"I know that Xer are often either very free or very possessive of the ones they care for. I was only suggesting that since we like each other and everything, that we give it a try -- within the confines of what you and I would feel comfortable with.\n\nI sure don't want your mark on me -- not at this early stage anyway, and for a few good reasons. By the way, thank you for not hurting my ear in the shower. I know that Xer males often want to hang onto something of a female's at that time, so you were very considerate to me.\"\n\n\"There's something else,\" he said.\n\n\"It might embarrass you to be seen with me as a non-Xer in front of your family?\" she asked, \"We're not anywhere near that point, are we? I thought we'd just figure that out if and when we got there -- if we do.\"\n\n\"No,\" he said, \"it's not that at all, though I suppose that it might be an issue at some point -- if we get there, as you say. But I know the way that I feel right now. It used to be so important to me once, but it's not at all anymore. \n\nIf I ever meet my famous uncle again, I know that he'd take one look at you and grin at me. I can almost see it in my mind. He'd smile at you and bow very politely and then he'd clap his hand onto my shoulder and say something like -- 'Well, Xhan, I see that you have finally learned what is what, what counts and what is unimportant.' And then he'd want to know how you ever learned to put up with me.\"\n\n\"Well that would be an easy thing,\" Jerrthi said, \"You're well-mannered, polite, HANDSOME, and great to be with. There's nothing tough about it. I was thinking more about your parents and how they might feel.\"\n\n\"My father died in the service,\" Xhan replied, \"I come from an old and high family. My mother would probably faint from shock, but then she'd recover and get over it in a few moments. She's a stuffy socialite, but it's only because she has to be in some respects. You could win her over more easily than you did me, and if any of her snotty friends made a sound after that, well, she'd probably pin their ears back for them. If she found that she could like you and she could see that we were happy -- \"\n\n\"If we get that far,\" she reminded him with a little grin and he nodded.\n\n\"But that's not the thing. It probably won't even happen, but, well, we live by the unit doctrine and in that huge and thick tome somewhere, it states that if a group of Death hounds find themselves in a situation where they're stuck in a place and cannot return to Xer, then there are measures to be taken to maximize the probability of their survival.\n\nWhen the unit is formed, there are assignments made. It's not much more than a cursory look at the traits and characteristics of each member. If there is no known pairing for a person, then one is made. They're only on a list in a database somewhere and don't mean a thing unless it happens that the unit finds itself separated with no means to get home.\n\nBut if it does happen, then the pairings are to be used as a starting point so that we have our family orders and can begin to um, proliferate wherever we find ourselves then. There are certain skill groupings which lend themselves to this. \n\nThat's why the crews of the attack craft are the way that they are, for example. Where there is a natural attraction, they do this anyway.\n\n\"I see,\" Jerrthi said, \"so does the unit commander here have such a pairing as well?\"\n\nHe looked over, wondering a little why she seemed to think that it was a little entertaining, somehow. \n\nNodding, he said, \"I do. It was assigned when I arrived. There was a female communications specialist who was drawn into the unit at the same time. Her section suffered losses in its last venture and so it was assigned to a rear area for refit and retraining while it was brought up to strength again. \n\nShe knew nothing of this assignment or even much about us, but she was assigned to us because she didn't want to spend a long time while all of that was going on, so she put in for re-assignment and could meet the minimum standards for what we are. I think that I'd have done the same thing in her situation. \n\nAnyway, she's in my command and we've met a couple of times in the course of our duties, that's all. She's rather pretty and young, much the same to my mind as Troxi, but a lot less, ... uh, .... \"\n\n\"Bubbly?\" Jerrthi asked and he nodded, \"Close enough, I guess. \n\nHer craft was shot down and she was the sole uninjured person. She tended to the injured as she could, but when they were found by enemy units, she defended everyone until they were rescued. She has some issues, such as being prone to being startled if one approaches her that she is not aware of, but she is very good in her role. \n\nIt's unfortunate, but she's a little hard of hearing in her right ear. She received cursory training in the normal weapons, but she was on board a landing shuttle, taking a section of fighters into the fight when they were hit and crashed. When it came time to act, all that she found around her were guns called megs which belonged to the dead and the wounded. She couldn't find her own weapons.\n\nSo she fought off the attackers very bravely, using only megs, one after another as she shot through their magazines. She could find no headsets and so the hearing in her right ear suffered from the noise levels. She was wounded several times, but from what I saw, she has recovered and the scarring from the procedures is minimal, the fur having grown back nicely.\"\n\n\"Is there an emotional attachment between you?\" Jerrthi asked and he shook his head, \"None, though we can admire each other, I guess. I hold her in high regard and she thinks that I am a high-born whelp who is privileged and wet behind the ears, though we are the same age. \n\nI only mention it so that you know that I am being honest. If we are deployed, there is still nothing changed. Cerrith is a true trooper and goes by the book. She comes from a low background and has a chip on her shoulder from it. In the normal state of affairs, she has few friends and is more of a loner, not having really had the time to fit in yet.\n\nAs I was saying, if we are deployed, she is still only a crew member to me and I am her commander. It only changes if we are lost or have no way to contact Xer or return to it. Then she becomes my ... well I suppose that we would need to see what might be made of it, but on paper at least, we would be paired.\"\n\nThey walked on for a bit until they came to where Xhan was staying. As they went inside, He asked Jerrthi if there wasn't some sort of comment that she had to make.\n\nShe shrugged, \"I don't think it changes anything for me, Xhan. It's only a procedure to be followed in the worst case, from what you've said, though the fact that somebody in Xer high command even thought of something like that shows me yet again that you are a very interesting people.\"\n\n-------------------\n\nAs they made love that night, Jerrthi found that Xhan wasn't always a beast in bed and she loved it no matter how he was. She sighed when she looked up at him and she thought that he had to be the finest male anywhere. As she felt him moving in and out inside of her, she raised her legs and reached for his very fine Xer backside, pulling him with every thrust and feeling the muscle groups under his fur along his side with the fingers of her other hand.\n\nHe was slow and very loving to her and Jerrthi appreciated that aspect from him then, going with his motions and rocking him as far as she could. Her orgasms were so very nice to her this time, and she found a want in herself that this really could work for them because she'd never had a lover like Xhan. \n\nWhen his own release came, Jerrthi begged him to lie on her a little lower. When he did, she wrapped her legs around him tightly and held on to him with her face buried in the thick fur of his neck while he held her ear in his teeth again and once more, she felt his gentle bite there and the way that if felt to her just heightened everything for her. \n\nThey lay there looking at each other and kissing softly as he moved just enough to assure that Jerrthi would get more from him and she sighed and smiled through every one.\n\n\"Good?\" she smiled up at him and he nodded before he asked her. Jerrthi stretched and sighed, unknowingly giving Xhan a thrill for the way that she looked right then and she told him that she was very happy with what they'd found.\n\n\"I know that you can have another way to look,\" she said in a whisper, \"but I didn't see any pictures where I was looking. What's it like? I read that your fur becomes harder then and sharp.\"\n\nHe nodded, \"But I can soften it as well.\"\n\n\"Can we do it that way sometime?\" she asked, \"I think it sounds really ... \"\n\n\"Primitive,\" he said.\n\n\"I was gonna say nice,\" she smiled and she listened as he explained it to her a little doubtfully.\n\n\"You're not putting me off with that, you know,\" she said, \"I guess that we need to get a lot farther along before we try it, that's all.\"\n\nHe looked uncomfortable and she kissed his nose before she whispered, \"I know that if it happens, that's when you'll bite me to make me yours and I'll have the scars then. I'm a little nervous about it, Xhan, but I'm not put off. We'll just have to see.\"\n\n\"Jerrthi,\" he said, \"I would probably tell you that you are insane to want that.\"\n\nHe smiled then and sighed as he felt her tongue slip into his mouth playfully for a moment. \"But the more time that I spend with you, I can see that you are more amazing to me every moment, every time that I look at you. Maybe we can do it.\"\n\nAfterward, she thought about it as she looked out of the window from the vantage point of the bed.\n\nShe'd gotten the video segments that Jayne had sent her and she felt better about Bronn. That had begun her lonely slide, however. \n\nNow she had somebody who was totally different, but she knew that she could probably be happy with him. She found herself looking forward and not back, and so with a single tear, she said goodbye to Bronn. When she reached up to wipe her eyes, she found that Xhan had been looking at her. He didn't need to say it.\n\nJerrthi told him and he pulled her to him and held her until she drifted off to sleep in his arms.\n\n------------------------------\n\nThe next morning, Xhan woke Jerrthi up early. \"Sorry to have to do this to you, but I should have mentioned that there are more exercises on for today. The attack craft will stay here, but we will be landing and offloading fighters and then picking them up again. You can stay here in bed if you wish, or you can come along. It's your choice, Jerrthi.\"\n\nShe was out of the bed like a shot and reaching for her flightsuit, \"I'm gonna really need to wash this poor thing soon. I just need to pee and find my deodorant and I'll be ready.\"\n\nHe smiled at her, \"I admire the way that you jump right up, but ... do you have a hairbrush?\"\n\nShe looked at him, \"Well, yeah, but ... \" \n\nHe pointed to the mirror on the wall and she was laughing at the way that she looked then.\n\n\"'Kay, I need to brush my hair a little. It's a little too obvious what I was doing last night, I guess.\"\n\nAs it turned out, they had time for a brief shower each and even had time to brush their teeth as well, but as they stepped outside for the ride to the flight line, that was when the looks began, and it started with the Merren neighbors.\n\nJerrthi was checking her camera battery status as they rode, but she did manage to get Xhan's ear to ask him quietly what was wrong.\n\n\"Hmm? He asked as he looked over, \"Nothing. I think that the rumors start now. Will you be alright with that?\"\n\nJerrthi didn't much care and she said so. \"Where am I going to be for this?\"\n\n\"You're on the command ship with me. You can be anywhere you want for a time, but I don't want you near to the weapons areas once we're in action. The engineering and drive spaces are out too, I'm afraid. You've got a camera. Stay near me if you have any doubt.\"\n\nHe smiled and spoke to his master leader, the Xer who was there to advise him and act as the unit's Sergeant Major -- if it was a human unit in the present time.\n\n\"Isn't that right, Ter'l?\"\n\nThe Xer looked back with the smallest smile as he nodded to Jerrthi, \"Correct, Section Officer,\" To Jerrthi, he growled, \"We try to keep Xhan from hurting anything too much.\"\n\nShe stared for a moment and then she laughed as his smile widened, \"I served under Xhan's uncle, Arrax a time ago. Xhan's alright and he'll do fine. I'm just here to guide him a little if he needs it.\"\n\nWhen she looked over, she saw Xhan sitting with a curious look on his face. \"I met Ter'l when I really was a whelp and my uncle brought me to where the First was housed then. I've known him -- or of him for most of my life.\"\n\nHe blinked and then looked at Jerrthi, \"This is the first time that I've ever seen him smile.\"\n\nThe hard and wizened fighter nodded, \"This is the first time that I like your taste in females, sir.\"\n\n----------------------\n\nJerrthi found that she really liked Ter'l because he could be many things and play many roles, switching effortlessly between them. To her, he often seemed the perfect older gentleman, or even a little like a friendly uncle as he guided her around and was quick to grab her elbow if he needed to get her away from some hazard that she hadn't seen and couldn't know. \n\nHe was kind enough to tell her when they were in an area where she shouldn't be filming and she respected that, but she was astounded at the transformation that she watched before her eyes when he gave the briefing to the fighters before they left.\n\nHe seemed to turn into a dragon then and it was obvious that he was both loved and feared at the same time.\n\nBut everywhere that Jerrthi looked, she saw the same thing. She had gone from being the journalist and reporter who was along with them and there to report on what she saw to the rumored love interest of the unit's leader.\n\nShe was in a little shock at the speed that the word had flown.\n\n\"Don't worry about it,\" Ter'l said gruffly as he brought her a hot cup of something to drink just as they rode over the outer fence of the Merren base, \"It's a natural thing. There'll be some rumors out of it, some bad, most good. You shouldn't give it any more than it's worth -- which is nothing.\"\n\nHe sat down in a seat next to her in his section of the command module and listened for a moment to the communications traffic in his earpiece. Satisfied with what he'd heard, he looked at Jerrthi again.\n\n\"Shut that camera off and I'll spell it out to you,\" he said with one of those soft smiles that she was sure never saw the light of day very often. \n\n\"Section Officer Xhan is considered by many to be one to watch in his career. He didn't have much of a start, but when he came back here after a stint with the Diplomatic corps, he was slotted in with the First. Family connections, I guess.\n\nMost of the First -- and there are a lot of us -- didn't think much of him, other than he's good-looking to the females, I guess. But he showed his stuff right out of the gate. That's why he was given this command -- to take a small, but strong reactionary force to work a contract to the Merren. It's not lightly done, but he got the nod and we thought we had a soft touch for a leader -- and we were all wrong.\n\nHe's not only fit the role of the leader here, but he's got a bunch of tough dogs on his side now and believing in him. You're getting the eye today because we're like any other family, I guess. The rumors would fly no matter what -- since it's Xhan.\n\nBut you and your buddy, whatever-her-name-is, -\"\n\n\"Ronkahh,\" Jerrthi smiled.\n\n\"Sure, \"he grinned, \"You two are in with the bunch now, like it or not. Everybody's mooning over you and ... \"\n\n\"Ronkahh,\" Jerrthi smiled again, even wider.\n\n\"Right,\" Ter'l said, scowling a little, \"That girl can almost drink ME under the table, and Arshan's had a hell of a time keeping the lads off of her. I've already had to kick a few tails over it -- which I've got to thank her for, since it was really enjoyable. \n\nThere were already a couple of 'arteests' here who wanted to paint some nose-art on a couple of the assault craft -- naughty poses of you two, mostly. It just shows that you've got credibility with them over the Merren range thing and the way that you just fit right in with us. \n\nA lot of these tough-looking shits here would have been filling puke sacks in the back of Mud Six yesterday. Doona can almost make that thing dance if she's got a mind to. \n\nYou've earned some respect, and that's bitch--hard to do with us. We even laugh at the Xer press people when they ask to come with us.\n\nBy the way,\" he said, looking at the bottom of his cup, \"How close are you to the old ways of the Grottos?\"\n\nShe looked over at him, wondering what he was talking about now. He'd lost her and she said so.\n\n\"Had me a Grotto girl who loved me once,\" he said, \"long time ago now. I wanted to pair with her for the long go, but she had some work to do for her family first. You know what I mean, I guess.\"\n\nJerrthi nodded, \"But there are hardly any of us around anymore. I'm long out of touch, but I'm not aware that there are any of the working families left at all.\"\n\nIt was her standard answer whenever anyone asked about the subject of what her kind had earned their fame at -- if one could call it that.",
        "\"Might be so,\" he nodded, \"and then maybe not. Anyway, it was true love, honey. She had me on the line right to my tail. We were gonna leave; me getting out of the service and her getting out of the trade. That was our plan, but she got herself killed before we could go.\"\n\nHe sat back and sighed, \"I can say that I've never been the same since. Guess that's why I stick around here instead of retiring. These kids are just that to me. They're like my whelps and I keep them in line and watch out for them if I can, Xhan included.\"\n\nHe leaned in again, \"So, do you know or not?\"\n\nJerrthi looked over and thought about it briefly. What she was about to tell this old war dog was something that not even Bronn knew about her. His family had some of the trade in the past, but it was nothing to what hers had done.\n\n\"I still train, but I've never worked. It's something that I sort of nod to while I use it to keep fit. I used to have a trainer in my clan and he worked in his day. He always said that I'd have been able to work the dark trade, as we call it.\"\n\nTer'l smiled then, \"Good to know.\"\n\nHe reached over to a compartment under the bench seat and pulled out a long bag.\n\n\"This is something that I've kept around forever -- or so. It was a gift to me from my girl a long time ago. I want you to have it. Don't open it here. I can see by your eyes that you can guess what's in here. Just sling it over your shoulder and look later. Make like it's a part of your gear.\n\nYou might even find that you'll need them for more than just to keep your hand in,\" he said, his smile disappearing.\n\n\"I don't know what you mean,\" Jerrthi said, \"but thank you for this, Ter'l. If it's what I think it might be, this bag is illegal, you know.\"\n\nHe waved his hand as though at a fly, \"This ship is illegal as it is right here. All of the attack craft are illegal as hell for what we carry. The sidearm on my hip is illegal, and the megs on those landing craft out there are illegal here too.\n\nWhat's in there is nothing more than what Grotto Dwellers always used to carry in the dark trade. You're right about the legality, though. The Merren are idiots. They'd ban a paring knife. But what's in there would get you time on Xer.\n\nWhat's in there is about the only thing that'll get through a Xer's hide when we're on four feet, other than about a half a magazine through a meg. Just keep it out of sight, Jerrthi.\n\nYou only had to impress three people when you showed up here. You've got Xhan in the bag and that's a no-brainer since I can see from here how he feels about you.\"\n\nHe smiled very softly for an old soldier then, \"You charmed this old dog even before today.\n\nBut ... has he said anything you about the one he's supposed to pair with if we go down and can't get back?\"\n\nJerrthi smirked, \"Yes. He told me that it doesn't mean anything unless that happens, why Ter'l?\"\n\nOh, nothing -- unless that happens. Think about it a second. If you were one of us and had been selected to be the, I dunno, paper bitch of the commander, and when you saw him, he turned out to look not too bad, how would you feel about an attachment of his to somebody else, even if there was nothing going between the two of you?\"\n\n\"I dunno,\" she said, considering, \"I probably wouldn't care much, unless that person was suddenly around a hell of a lot. Maybe I would then, but even so, I doubt it. As I understand it all, it's not like I'd have any sort of hold on him, is it?\"\n\nHe leaned forward then and Jerrthi was startled to hear him speak in the proper language of the people from out of her past -- even the correct dialect was her own.\n\n\"Think like a Xer. That one has been unhappy since she came to us and she had her reasons, I guess. It helps her standing to be the one selected for Xhan in the emergency procedures. She could have expectations. I've seen ot before. Your arrival and Xhan's interest in you have helped nothing for her, and she's standing right over there, looking at you.\"\n\nHe finished the last of his drink and took her cup to bring them away. He was still speaking in her dialect as he turned to go.\n\n\"She didn't see what I handed you, but while we've been talking, she must have figured out who you are, I'd guess. \n\nShe's been boring holes in you with her eyes for the past two minutes.\n\nYou have a friend in me, Grotto,\" he smiled over his shoulder, \"But my job is to dry tears and kick asses and keep fighters from shooting their feet or each other. I try to watch a little over seventy people. I just can't be everywhere.\n\nShe's a veteran Xer killer and you're not. Think about it.\"\n\nJerrthi tried not to be obvious about it when she turned her head as though just looking at everything which was going on in the command module there. \n\nThrough the thin crowd of many specialists, each one there to perform his or her tasking for this effort, her eye fell on a person who gave her a rather haughty look for one--half second before she turned away, looking at nothing as her hand reached up to adjust the tiny controls for the volume of the chatter which passed through her helmet and she began to speak as part of her tasking there.\n\nJerrthi saw the standard Xer aircrew helmet with the name \"Cerrith\" emblazoned on it just under the Death hound patch.\n\nFor just an instant, Jerrthi saw one blue eye just as the girl turned toward her station."
    ],
    "authorname": "TaLtos6",
    "tags": [
        "demon",
        "bomb",
        "missle",
        "anubis",
        "ninja",
        "assassin",
        "attack"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/a-big-shiny-blue-marble-ch-56"
}