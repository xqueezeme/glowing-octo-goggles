{
    "title": "Coppernicous Pt. 04",
    "pages": [
        " If you are looking for a quick jerk, please continue looking. This is a longer story with development of characters. I debated between first time and romance, for there are elements of both here, and decided first time was the better choice. This can be a stand-alone story, but it will be more enjoyable if you read parts 1-3 first. I hope you enjoy. Comments and emails are welcomed. I strive to respond to all emails that have a return address.\n\n Special thanks to Grand Teton for editing and making this tale readable.\n\n\n\n\n\n With school back in full swing and volleyball practice and the upcoming sand volleyball season at hand a lot of the teasing settled down. Saturdays were still \"no bra\" days around the house, and the \"no knot\" rule on the bikinis still held, but the girls didn't have the time or energy to tease as much. \n\nBecause Katharina had signed a contract to coach next year she was ineligible for the sand volleyball season, much to Coach Thorson's disappointment. For the first time in her life, Kat was not upset about being out of competition. Sand volleyball, while fun, was not her forte. Coach Thorson had been able to keep her scholarship for the spring semester for her though and made her an assistant coach. Coach Jan Wembley, one of her assistants, had taken maternity leave, since her baby was due the first week of the sand volleyball season, and Kat was an excellent replacement.\n\nI became something of an unofficial trainer slash manager slash gofer for the team. It was an unpaid position, of course, but when Darlene asked for my help, how could I say no?\" \n\nThe girls whispered about Darlene and me for a while, because of the way Darlene's eyes followed me around, and the look she got whenever my name was mentioned. Diedra thought it funny, and she gave me all kinds of grief. \"You're nothing but a cradle robber, Toomas, going after someone as young as Coach Thorson. Why, she's the same age as your oldest daughter.\" She would giggle and grin at me, even when I countered about spending the week with her. \"Oh, but I'm mature,\" she would say. All I could do was shake my head. The rest of the girls may have slowed down the teasing a little bit, but Deidra did not in the least.\n\nKatharina had met a young man during the Thanksgiving break when she volunteered at a food pantry. I was impressed when she brought Jimmy Newnan around to meet me. He was completing work for a Masters in Business Administration, focusing on non-profit functionality with a view toward consulting with small to mid-sized non-profits to develop cost-effective methods of attracting volunteers, raising and managing funds, and most of all protecting themselves from litigation. Two more opposite people cannot be imagined, but there was an obvious spark between them, and I was most happy for her. It had gotten to the point that though they had not moved in together it seemed any time Kat was not on the volleyball court or working with the team in some capacity she and Jimmy were together. I started asking her for a date to have dinner with her every week or two, or else I wouldn't even see her except at practice.\n\nIt was funny, but it seemed the rest of the team hardly dated. There was no prohibition of dating from Coach Thorson by any means, but her drive for a winning team was contagious, and the girls all seemed to have volleyball and school first and foremost in their thoughts. I spent most evenings tutoring one girl or another in physics, math, or chemistry, and often more than one. I didn't mind in the least. In fact, I enjoyed it very much. \n\nSince my week with Deidra and dealing with my grief issue, followed by the night with Darlene, I found I was able to remember my Marja with pleasure instead of pain. Oh, I missed her desperately, but I recognized she was gone, never to return, so I returned to living my life. I did not pursue any of the girls, but I was now mentally able to more freely enjoy the teases, the hugs, and the kisses I received from nearly all of them. \n\nBreasts were nearly always unfettered whenever I tutored the girls, and I no longer hid, or tried to hide, my enjoyment. Darlene felt her position required a bit more decorum though, which was a bit of a disappointment, but she did participate in \"no bra Saturdays\" to my delight and her semi-embarrassment. \n\nAfter the first year the team moved to the house, Coach Thorson instituted a policy of no guys in the girls' rooms. They were welcome in the living room and den, dining room, and even in the game room/arcade I set up in the basement, but Coach was adamant about no boys going beyond that point other than for special functions, such as a bonfire and party at the swimming pond. Those functions had strict time limits, though, were alcohol free, and always ended at a reasonable hour.\n\nOf course, the girls would occasionally stay off-site with a boyfriend, and Coach had no problem with it as long as it wasn't a time that conflicted with something with the team. Her driving force was winning volleyball games. She didn't want anything going on at the house that would distract from the main purpose.\n\nMy office was open to the girls, too, if they needed to talk. They all liked to think they were mature, grown-up young women who could handle anything, but you would be surprised at the number of times I would have a young lady sitting with me on my couch in the office, crying her eyes out, needing some \"Daddy\" time. \n\nMore than one of them, particularly the younger ones, came to me looking for help with planning their futures. Classes might not be going well for them, or they would find the area of study they pursued to be of less interest than they had at first thought. I never told them what they ought to do, but I would ask questions until they came up with their own answers. \n\nAll in all I found life to be fuller and more enjoyable than it ever had been while running my own company, constantly striving for the next dollar. \n\nIt was the fourth week of the new semester when Lynn, the senior setter on the regular volleyball team, knocked on my office door on Thursday evening. I knew instantly something was wrong when I looked up from some paperwork I was doing and saw she was wearing a button-up shirt buttoned all the way except for the top button. I could also tell she had on a bra, which ever since the bonfire and the institution of \"no-bra Saturdays\" she had never worn one around the house.\n\n\"Come on in, Lynn. You don't have to knock. What's wrong?\"\n\nLynn sat down on the edge of my couch and wrung her hands in her lap nervously. \"Can I ask your advice, Toomas? I can't go to my Dad with this, but I don't know what to do.\"\n\nI got up from my desk chair and walked around to the couch. I noted the way she was seated up against the far arm of the couch, so I sat against the other arm, leaving as much space between us as I could, and turned toward her to see what I could do for her.\n\n\"I . . . I don't, uh, I don't know how to ask this, Toomas, but I don't know where to turn, and you've always been here for us.\" Tears started to spill over from her eyes, so I stepped over to the desk and picked up a box of tissues I kept ready for such an exigency. I set the whole box down on the cushion next to her.\n\n\"Thanks.\" She sniffed as she pulled out a couple of tissues to blot at her eyes. \"I've been seeing this guy, and . . .\" She blushed deeply, which I found surprising, for she was not in the least reserved around me normally, and was one of the bigger teases. \"Well, anyway, Shawn has been pushing me to do things I don't, I don't want to do with him.\" Her voice was muffled by the tissues she had buried her face in. \"I tried to tell him 'No,' but he wouldn't take 'No' for an answer. He even . . . he, he, . . .\" Tears were flowing again and she hiccoughed when she tried to continue.\n\n\"You don't have to say, Lynn. It's OK. What can I help you with? I'll do anything for you that I can. You know that.\"\n\nSniff, \"I know. That's why I'm here. I couldn't . . . I couldn't talk to my own Dad. I tried! I really tried! But he wouldn't listen to me. I'm supposed to go to Shawn's frat mixer tomorrow night. He told me his roommate was going out of town, and I was going to spend the night in his room with him. I said 'No,' but he said I owed him. After . . . after he ripped the buttons off of my shirt last night trying to get to my, to my . . .\" Again she broke down in sobs.\n\nI sat there seething in rage, but I kept my voice quiet and calm. \"It's OK. You don't have to say what he did. I understand, Lynn.\" I wanted to reach out to her to comfort her, but I wasn't sure how she would react to being touched by a man at this point, so I kept to my end of the couch.\n\n\"I told him, I told him I wasn't going to go with him tomorrow, but he said I had to. That he had told his frat brothers about me, and that I was going to be there. He's coming to get me, and he told me I'd better be here and ready if I knew what was good for me.\"\n\nFor the first time, Lynn looked up at me, with her mascara running down her cheeks and her other makeup smeared on her face from the tissues. \"What do I do, Toomas?\" It was a wail, and she threw herself from her end of the couch down to mine and into my arms.\n\nAll I could do was hold her as she sobbed and sobbed. Gently I rubbed her back with one hand while I cradled her head against my shoulder with the other. \"He's got a gun,\" she half-whispered, \"and he said he would shoot me if I didn't go with him.\" My hand stopped in mid-stroke on her back. This was something else.\n\n\"Don't worry, my dear. You are in my home, and no one is going to take you from my home if you don't want to go.\" I tipped her head back so I could look her in the eyes. I needed to know I was getting through to her. \"Do you understand me, Lynn? No one means 'No one.' I don't care if he has a gun or not.\"\n\nLynn's arms tightened about me and the sobs started up again, but this time they were more of relief, I think. Who can tell with a girl crying on your shoulder, but they sounded different to me. \n\n\"He said nobody could do anything to him, 'cause his father is a big man in the mob in Miami, that he owns the cops.\"\n\n\"That's OK, my dear. We aren't in Miami. He doesn't own the cops here, and he doesn't own me. Would you like me to call campus security so you can press charges for what he already did to you? I don't believe you could do anything about him threatening you, but you could mention it.\"\n\nShe shuddered and shook her head. \"I don't dare. You don't know how mean he can be.\"\n\nI waited until she had settled down somewhat before asking, \"Why then are you going out with him?\"\n\n\"He didn't act like that at first. He drives a really nice car, and he's got money, so when he asked me out the first time I thought it might be fun. He was nice to me the first couple of dates, but then he started being demanding. Then last time he got rough.\" A shudder ran through her, but by now she was cried out, and having passed her burden along to me she seemed to strengthen. \"Thank you, Toomas. I knew you would be here for me.\" She leaned in and gave me a soft kiss on the cheek, then stood and walked unsteadily out the door.\n\nI waited until Lynn had gone through the house toward her room and then I went upstairs and knocked on Coach Thorson's door. I had forgotten she had gone home for the weekend because her father was having bypass surgery on the morrow. The situation was all in my lap, now.\n\n***************\n\nFriday afternoon Lynn got home from her one o'clock class and she came to me crying. \n\n\"I told him today I was not going out with him tonight, and not to come by here. He told me he was going to come for me, that I was going, or else. I'm scared, Toomas!\"\n\nWhile we talked her cell phone rang with a text message. \"It's from him. He said he's coming at six o'clock, that I'm to be ready or he'll cut me up so that nobody else will ever want me.\"\n\n\"Don't erase that. He's a real piece of work, isn't he? Really knows how to woo a woman.\" I pulled her into a hug, knowing she needed the support and encouragement. \"Come in the office with me. I'm going to call my lawyer and see what we can do.\" I led a shaking Lynn into the office with me and then pushed the door shut behind us. I normally wouldn't have the door closed with one of the young ladies in there alone with me, but I didn't think in this case we needed anyone else hearing what was going on.\n\n\"Johnny? What are you doing answering your own phone? Don't tell me Phyllis went out and got a real job?\"\n\n\"Very funny, Toomas. Actually, she is off this afternoon seeing her doctor. She's expecting and had to go in for a sonogram.\"\n\n\"That's wonderful news! Tell her I said congratulations. I'll try to drop by and tell her myself in a few days.\"\n\n\"She would appreciate it, I'm sure. Now, I just started the timer. What can I do for you?\"\n\n\"I'm sure you did, you old pirate. Look, I've got a young lady here who has been threatened by a former boyfriend. What do we have to do to get an order of protection?\" I heard a deep sigh on the other end of the phone.\n\n\"You'd better let me talk with her, and I'll get things started. How serious is this threat?\"\n\n\"I think it's real. He said he's coming to get her this afternoon. I saw the text.\"\n\n\"Stupid one, isn't he? Toomas, the problem is, even if I had the paperwork filled out right now it would have to go before a judge, which will take at least two weeks. Is she there? I can take a statement from her and get it started, but you'd better do something on your end. We can't even call the cops, most likely, because he hasn't done anything yet. I'll try to pull some favors and see if I can get squeezed in sooner, but you know how that goes.\"\n\n\"Thanks, my friend. Here's Lynn.\" \n\nI handed the phone to Lynn and told her I would be right back, then I left and went to my room to prepare for what I hoped would not happen.\n\n*************\n\nFifteen minutes later, I made my way back to the office to find a teary-eyed, and very scared young lady hanging up the phone.\n\n\"Thanks, Toomas. He's really nice, and he said some nice things about you, too.\"\n\nI shook my head. \"If he said nice things about me, he must have been hitting the sauce without Phyllis there to make him behave.\" I grinned to let her know I wasn't serious, and then continued. \"I want you to go on out to practice. Don't let on to anyone there is any problem. OK? Under no circumstances do I want you to answer the door if the bell rings tonight. Are we clear on that?\" \n\nLynn nodded her head.\n\n\"Good. I want you to stay out of sight. Please tell Kat I need to see her as soon as practice is over, but don't say why. OK? Don't make it sound like there's a problem. Just tell her. Now, you scoot on out of here. Things will be fine. Trust me, OK?\"\n\nLynn got up from my desk chair and walked over to me in the doorway. She hugged me straight on, pressing fully against me. \"Why, Toomas? Why do you care about us like you do?\"\n\n\"Why not? Don't try to make me out to be some kind of a saint or something, but you all live under my roof, and besides, I kind of like you.\" I grinned down at her, conscious of stirring. \"Now you get on out there and practice. Don't worry yourself about things. OK?\"\n\nLynn pulled my face down and gave me a kiss on the lips. \"You know, I think a girl wouldn't have much trouble falling in love with someone like you. Your wife was a lucky woman.\" Another kiss and she started to break away to go to practice. \"Wait a minute. You changed clothes? Why are you all dressed up?\" She fingered my sports coat and looked down at my dress slacks.\n\n\"Why? Can't a guy look decent once in a while without it being a federal case?\" I grinned, but would say no more. I gave her cute little ass a swat and pushed her out the door for practice.\n\n***************\n\nKat came to see me shortly after practice ended. \"What's up, Daddy? Lynn said you needed to see me?\"\n\nI nodded. I had been thinking how to approach matters with her about the threat, but I didn't feel I could or should tell her about Lynn's situation. Some things are just better left private.\n\n\"I would like you to kind of keep the girls out of the living room area this evening. I can't really say why, but I think it would be best. Would you do that for me?\"\n\nKat looked at me curiously, but she knew I wouldn't say more than that.\n\n\"Say, what are you all dressed up for? Going out on a date or something?\"\n\nI just smiled. \"You never know until you know.\"\n\n\"Well, if you are going on a date, you should have shaved first. Scruffy looks good on some guys, but not when there's more grey than brown.\"\n\nMy hand flew to feel my face, which was not scruffy. Just a little five o'clock shadow. I could hear her giggle from the hallway as she went to take a shower before dinner.\n\n**************\n\nDinner was even more raucous than usual as the girls all pestered me about who was my date that I was all dressed up for. I grinned and went along with it, not saying anything more, letting them have their fun. Before long they were guessing different teachers and professors, trying to pair me up with someone they knew. I saw Deidra looking at me questioningly, but I didn't respond to her either. \n\nJust before dinner broke up I called for everyone's attention and asked if Kat had said anything about avoiding the living room area. There was a chorus of assent, along with a firestorm of questions. \"I'm sorry, but I don't think I should say any more at this time. Just do me a favor for this one evening, OK? Also, I'll answer the door if the doorbell rings.\"\n\nSomeone called out, \"If you are wanting to keep her secret from us, you ought to go somewhere else, Toomas. If you have her come here, we'll find out. Maybe we'll sneak in to watch you make out. You know, so we can learn how it's supposed to be done.\" That got a good laugh. I joined in, though laughing was not the emotion I felt at the moment.\n\n**************\n\nSix-thirty rolled around, and my stomach was tied up in knots. Shawn still had not shown up. I didn't expect anything to really happen, but the uncertainty was getting to me. I sat at my desk, going over the same page of figures again and again, forgetting the numbers I had entered in my computer well before I got to the bottom of the page, so I had to try again. With all of the girls avoiding the living room it was so deathly quiet I could actually hear the clock on the wall, and a fly buzzed around the room irritating me to no end. \n\nI reached for my shirt pocket to pull out a cigarette, but then shook my head in disgust. I had quit smoking fifteen years ago! It's amazing what stress can do to a person.\n\nSix-thirty-five, and the doorbell rang. My heart lurched as I pushed my chair back and walked out of the office to get the door. My hands were sweating, but when I looked at them to check, they weren't shaking. At least that was good.\n\nI looked out the peephole, but didn't see anyone, which wasn't unusual. My house has a double front door, so if someone rings the bell and then steps over in front of the other door they often don't show when one peeps out.\n\nI turned the knob and pulled the door in, to see a tall, thin, black young man in the doorway.\n\n\"Hi, Mr. K! I haven't seen you around in a while!\" He stuck out a big hand to shake. \"I'm here to pick up Tamique. Is she around?\"\n\n\"Well 'Hi,' yourself, Rudy. It has been some time! Come on in the house, and I'll get Tamique for you.\" I walked down the hallway with my heart pounding in my throat. I hadn't thought about other guys coming by to pick up one of the girls. I told Tamique that Rudy was there for her and made my way back to the living room. Rudy was sprawled across one of the couches. He lifted a hand as I came back into the room.\n\n\"Say, Mr. K., I wanted to say 'thank you, so much,' for the great recommendation you gave me. Mr. Johnson already had the hiring paperwork filled out when I went in for what I thought was an interview.\"",
        "\"No thanks are needed, Rudy. All I told him was if I still owned the company I'd get you under a contract as soon as possible before someone else grabbed you. You will be a good fit over there, and I know they need someone strong in chemistry to take over the lab in a couple of years. Johannes Martin is planning to retire in two years, which will be just about enough time for you to get your feet wet and be ready to take it over. Remember, now. You call on me any time if you have problems. I'm not going to get involved in the business, but if you have issues in the lab that I can help you with I'll be happy to do it.\"\n\n\"Gee, thanks, again, Mr. K. I don't know what I've done to deserve it, but I really appreciate your confidence.\"\n\nTamique came around the corner just then and I used her as an excuse. \"Really, all I wanted to do was keep Tamique around here.\" I gave her a big grin at her questioning look. \"You kids have a good time tonight. Don't forget to send me a wedding invitation.\"\n\n\"Invitation, hell. You're going to be standing up with me, Mr. K. You can count on it!\"\n\nRudy interned with me the summer I lost Marja, and even through that tough time I recognized what potential he had. I encouraged him to pursue his masters in chemical engineering, and told him to come see me when he was ready for a job. Of course, I sold the business to my management team while he was in his first year of master's study, but I put in a good word with Tom Johnson for him. \n\n************\n\nI settled back down in my office and tried running those numbers again, but I gave up in disgust when I couldn't even remember where they were supposed to go when I got done crunching them. I pulled up Solitaire and it beat me three games in a row. My mind just was not on the present.\n\nAgain the doorbell rang, and I got up and made my way into the foyer. Another sigh of relief when I recognized Micah Gentry. He's not the kind of guy I would want dating Kat, but I guess everyone has their own tastes. He's not a bad guy, just not one I would choose. \n\n\"Come on in, Micah. I'll get Sheryl for you.\"\n\nMicah just nodded and half lifted a hand. He wasn't much for talking, but I guess I wouldn't be either if I had a chain running from my lower lip to my nostril. I shook my head in wonderment, as I always did, when I went to find Sheryl. \"To each his own,\" I thought. Then another thought crossed my mind. \"I wonder how he kisses her with that thing in the way?\"\n\n**************\n\nTen minutes to seven, and I finally started to relax. Some guys are all talk, and it looked like maybe Shawn was one of them. He told Lynn he was coming by at 6:00, and it was fifty minutes later than that. I started to take off my coat and get more comfortable, but a nagging sixth-sense wouldn't let me. \n\nI actually started getting some work done balancing my checking account, with the numbers sticking around in my mind long enough to put them down on paper. I'm old fashioned, that way. If I can't read it on paper it isn't real to me. I like using the computer well enough, but a paper record fits me. My chair creaked as I leaned back and let out a big sigh, only to have it interrupted by the doorbell. \n\nWith a different kind of sigh I padded my way quietly to the door. Again, nobody in sight when I checked the peephole. I decided right then I had to make a change in that. I started to open the door, only to have it shoved into my face, and an angry guy pushed through. \n\n\"Get out of my way, old man. I'm here to get Lynn.\" He started for the back hallway, but I stepped in front of him, blocking his progress.\n\n\"I don't believe she wants to see you,\" I said. \"She told me so herself.\"\n\n\"That bitch doesn't know what she wants, and it doesn't matter. I already told her she is going. Now get the hell out of my way before you get hurt, old man. Who do you think you are, anyway? You're not her old man.\" Again he started to push by me, and again I blocked his progress.\n\n\"It's house rules: No men beyond the living room area. I'll let her know you are here.\"\n\nFrom the look in his eyes I knew he was high on something, and he was not rational by a long shot. I wanted to keep things peaceful if I possibly could, but there was no way he was going to be reasonable.\n\n\"I said, get out of my way, you son of a bitch. She's my woman, and nobody tells me what I can or can't do.\"\n\nHis hand went under his jacket, and I reached around behind my back. His hand came out, holding a .40 caliber Glock, and he fired, but he didn't take the time to line up his shot properly, shooting like a street punk, sideways. He hit me in the upper thigh as I pulled my hand from behind my back and I returned fire with my 1911 Colt .45 ACP pistol. I took the split-second to line up my shot, and he dropped at my feet like a rag doll as my shot went through his chest.\n\nMy leg gave way, and I crashed into the wall, to slide down to the floor. I felt nothing yet, but I knew it was coming.\n\nScreams sounded from the back of the house, and I saw Kat burst around the corner, her .40 cal Glock in hand.\n\n\"Daddy!\" she screamed and ran to me. \"Are you badly hurt?\" She dropped down on the floor and put pressure on my bleeding thigh. \"Call 911,\" she yelled down the hallway. \"I need an ambulance, right now!\"\n\nThe next thing I knew, Deidra rushed around the corner. She took control of the situation immediately. \"Get his pants off him, now!\" She turned back toward the back hall and yelled, \"Keep Lynn back there! Somebody bring me the first aid kit!\" Without even hesitating for a moment she whipped her tee-shirt over her head and used it to stanch the bloodflow as much as possible. \"I think he may have nicked your artery, Toomas. You're bleeding pretty badly. \n\nNext, she stripped my belt out of the loops of my pants and wrapped it around my leg just above the wound and cinched it tight, then began twisting it round and round, fashioning a tourniquet.\n\nKat sat and sobbed, but Deidra took charge of her, too. \"Kat. I need you to put pressure on the wound. We've got to stop the bleeding, or we'll lose him.\" Things were starting to get a little fuzzy looking to me about that time, and I felt like I was in a well listening to people talking above me. In the distance I could hear sirens, and the last thing I remember seeing was Deidra's bare breasts hanging above me as she twisted tighter on the belt.\n\n*************\n\nOf course, I don't remember any of this, being unconscious on the floor, but Kat told me about it later. Deidra kept pressure on the tourniquet while Kat put pressure on the wound. Deidra yelled for one of the other girls to come open the door for the EMTs.\n\nWhen they came through the door carrying the gurney, Deidra snapped at them, \"Forget about the gurney! I've got a bleeder here. It looks arterial!\"\n\nThe first guy dropped his end of the gurney and hurried over to take a look at me, but paused when he saw Deidra's bare breasts.\n\n\"What's the matter? Never seen boobs before? Forget them and take care of Toomas right now! You're going to need some blood expanders. He's nearly bled out.\"\n\nThe medic averted his eyes from Deidra and started working on me. He checked my blood pressure and pulse, which was thready. \"I need two units of Dextran, STAT,\" he ordered, and checked my tourniquet.\n\n\"You did a good job on this tourniquet, Miss. If you hadn't, he wouldn't have made it. With any good luck at all he'll be OK.\"\n\nWith that he took Deidra's blood sodden shirt from Kat and checked the wounds before putting a proper pressure dressing on them. \"It looks like the bullet went cleanly all the way through. There shouldn't be a problem with infection, hopefully. I'm not going to give morphine since he is already unconscious. I'll leave that for the emergency room, later. I presume this is your shirt? More good thinking, and I apologize for staring at you when I came in. It's just not often I see a beautiful topless girl caring for my patients.\"\n\nDeidra, with everything under control, became self-conscious about her condition and crossed her arms over her chest.\n\n\"My name is Pete. Pete Honeycutt. Could I call you later and take you to dinner or something?\"\n\n\"Why? Because you saw my boobs and you think you might get another look?\" Deidra was irate, Kat told me.\n\n\"Actually, no, although they are nice. It's because you have the good sense to know what to do in a trauma situation. That and your good looks give me all the reason I need to want to get to know you better.\" He had me stabilized, and his partner was holding a unit of Dextran overhead, running it into me as fast as it was possible to do. Pete took my blood pressure one more time and then reached into his pocket for his cards. He gave one to Deidra and then asked her for her number, which he wrote on the back of another and put it into his pocket. \n\nMore sirens could be heard in the background. \n\n\"Unless you want to make an impression on a whole bunch of cops, you might want to go and get a different shirt.\" Pete grinned up at her. \"Of course, if you don't want to, I'm sure they wouldn't mind. I know I wouldn't.\"\n\nDeidra quickly fled from the room, although the smile she gave Pete showed interest.\n\n************* \n\nIt was several hours later when I awoke, disoriented, with my arm tied down and tubes running into it. I had a tube running to my nose that irritated me to no end. \n\nI struggled to free my arm, and to brush the tube from my nose, to no avail, but the attempt quickly brought a nurse to hover over me and try to calm me.\n\n\"You are OK, Mr. Kz . . .\" She was obviously struggling with my name. \n\n\"Toomas,\" I rasped through a dry throat. \"I don't go by Mr.\"\n\nI got a relieved smile. I don't know why, but people have trouble with my name. \"Thanks, Toomas. You are in the ICU at St. Albans. Do you remember why you came here?\"\n\nI tried to remember, but nothing came. There was no reason I wanted to go to St. Albans. I had work to do around the house. My brow furrowed as I tried to think, but my brain was not cooperating at the moment. I shook my head.\n\n\"That's all right. It will come back. I buzzed for the surgeon when I saw you stirring. He should be here momentarily to speak with you. I'll call your daughter to come in, too.\" She started to step away, but I detained her.\n\n\"Please. Water?\"\n\nThe nurse nodded and picked up a cup with one of those bending straws that I hate and held it to my mouth. \"Just a sip, now. Enough to wet your mouth and no more.\"\n\nI took a deep pull on the straw and swallowed, and she pulled the cup back away from me before I could get any more.\n\n\"No more, just now. I need for you to awaken fully first.\"\n\nA knock at the door, and it popped open to admit a doctor in surgical scrubs. He nodded at me curtly and the nurse scurried out the door to return moments later with a dark-eyed, scared-looking Kat in tow. Meanwhile the doctor examined my chart carefully, glancing up at me from time to time until the nurse returned.\n\n\"Well, Mr. Kz . . .\"\n\n\"Toomas,\" I broke in.\n\nHe nodded, brusquely. \"You gave us quite a fright there for a little bit. Do you recall why you are here?\"\n\nI shook my head, \"No.\"\n\n\"That is OK. Your memory will come back in time.\" He paused and looked down at my chart before continuing. \"You very nearly bled out. Had it not been for your daughter here and the other young lady putting a tourniquet on your leg when they did we would not be having this conversation. You are very fortunate the femoral artery was not damaged, or they could not have saved you. On the other hand, one of the branch arteries was severed, which was almost as bad, but with the tourniquet and immediate infusion of dextran by the paramedics you were stabilized until I could operate.\"\n\nHe took a deep breath before continuing, and Kat stepped up to the bed and she squeezed my fingers gently. Things were starting to come back to me now.\n\n\"We were fortunate in that I did not have to harvest any of your vein tissue, but I was able to stretch the artery enough to graft it back together. Now, you will remain in ICU for two to three days until we are certain the surgery was a success, and then you will be moved to another room for a few days. You will wear this cast for about three weeks to prevent movement of the thigh, and to allow the artery to properly knit without being pulled apart. There is a chance of a hematoma of the femoral artery due to bruising, but the cast should prevent this. We will monitor you very closely, which is why you will remain in ICU. Do you have any questions?\"\n\nI shook my head slightly. \"Not at this time, doctor. Thank you.\" My voice was a croak, and Kat, after looking at the doctor for permission, held the straw to my lips.\n\n\"Just a couple of sips, now. Hold it in your mouth for a couple of minutes to allow the tissues to absorb the moisture.\" The doctor held up his hand after I got a couple of swallows, and Kat pulled the straw away.\n\n\"You may have five minutes with your daughter, and then I think it would be better if you rested for a while, Toomas. You are a very fortunate man that you had someone who knew what to do or you wouldn't have made it. I don't understand why you people have to settle your differences with guns.\" The disgust on his face was palpable.\n\nKat jumped to my defense immediately. \"Wait a minute, doctor! My father didn't go looking for a gun-fight, but if he hadn't been there when he was, one of my friends would have been killed, and possibly more of us! Sometimes guns are necessary to prevent evil, and I'm so glad Daddy was there.\"\n\n\"Nevertheless, I think guns are evil things and ought to be outlawed. Five minutes, and no more, understand? Nurse, call me immediately if anything changes.\" With that the doctor stormed out the door.\n\nKat leaned over the bedrails and kissed me on the forehead, and I felt a couple of teardrops. \"You scared me so badly, Daddy. Deidra, too. The poor girl wanted so badly to come in, but they would only let in family. I don't think Lynn has quit crying since then. In fact, the whole team is out in the waiting room. They all wanted to donate blood for you.\"\n\n\"Thanks, Kitten. By the way, what were you doing coming in there like the Angel of Death with your pistol?\"\n\n\"I knew something was going on when I saw you wearing your sport coat, and when I saw the little bulge from your gun when you bent over I thought I ought to have mine handy. If you thought you needed to have yours . . . well, I thought you might need backup.\"\n\nI nodded my understanding and felt an unutterable weariness settling over me, and my eyes drooped. \"I'll see you a little later,\" Kat whispered, and she left the room.\n\n**************\n\nI don't know how long I slept, but when I woke I found Kat sitting by the bed next to Greta, my eldest daughter. When they saw me open my eyes Greta jumped up to try to hug me, but all of the tubes, wires, and the bed rail got in the way. She managed to rest her cheek against my forehead, and she broke down and sobbed.\n\n\"Easy, now girl. You're not through with me yet.\" I was frustrated with both hands restrained so that I couldn't even reach up to comfort her.\n\n\"Why, Daddy? Why?\" Greta pulled back a little bit, also frustrated at my inaccessibility. \"You could have been killed.\"\n\n\"You would have done the same, had you been in my place. You should have seen Kat burst into the room like the cavalry coming to the rescue. It wasn't just me.\"\n\n\"But it was all over when I got there.\" Kat didn't want her sister's attention drawn to her. \"What was going on, anyway?\"\n\nI sighed, knowing this was coming. \"I don't know how much I really should say, and it doesn't go beyond this room. How about giving me me a drink first, please?\"\n\nKat put the straw up to my lips and I got a couple of swallows before she pulled it back. \"The nurse said not to let you have but a swallow or two at a time. Now, no more stalling.\"\n\n\"Lynn came to me and told me the guy she was dating was being abusive, and he threatened to kill her when he picked her up for a party. She said his father was a big-wig in the mob in Miami, so I thought it would be a good idea to have a gun, just in case. I really didn't think it would come down to that, but the guy was high on something, and there was no reasoning with him. He pulled out his gun and shot first, but he didn't know what he was doing. He was lucky to hit me at all.\"\n\n\"Johnny Walker has been by to talk with me a couple of times. You are going to have to talk with the police as soon as you get out of ICU, but Johnny says you don't have anything to worry about.\"\n\n\"It was self-defense. I had no choice. If I hadn't stopped him, he would have killed Lynn, and maybe more.\"\n\nThe nurse came in just then and told the girls they had to leave, that they had been in the room more than the allotted time already. Both of them kissed me on the forehead and said goodbye and I closed my eyes to sleep. I was that tired!\n\n**************\n\nMid-day the next day, after the surgeon came in for a final visit, the nurse started unplugging some of the wires and unstrapped my arms so that I could finally move about some. You have no idea how good a good stretch can feel! I had been bored out of my gourd with nothing to do except watch TV, which I hate with a passion. I did sleep a good bit, but you can only do so much of that. When they rolled me down the hallway to the elevator and down to the next floor and into a private room I felt like I had just been pardoned from prison!\n\nIt took a little while to get settled in, but then my girls were all in the room with me, and I finally got a chance to reassure them I was going to be OK. Greta was the one most upset by the policeman standing guard outside in the corridor.\n\n\"Are you sure you aren't under arrest, Daddy?\"\n\n\"Gretchen,\" my nickname for her as a little girl, \"I'm not under arrest. Sure, I have to talk with the police about what happened, but it was self-defense, and I'll be OK. I don't know why he is there, but I know I'm not under arrest.\"\n\nAs it turned out, we didn't have to wait long to find out, either. Johnny Walker knocked on the door and came in. He shook my hand softly, as if afraid I was breakable in my condition. \"Toomas, my friend. I don't like seeing you here.\"\n\n\"I don't like being here either, you old pirate. What brings you around, anyway? Not that I'm not glad to see you, but every time I see you it seems it costs me money.\" I gave him a grin to soften my jab, and he took it that way.\n\n\"I'm just a poor ambulance chaser who got wind you might need representation in just a few minutes, or my little bird at the police department doesn't know what he's talking about.\" \n\nHe sat down gently on the end of the bed and grew somber. \"Look, I know you had to do what you had to do, but in a case like this I thought it better to be pro-active, and be here for you rather than have to have you refuse to talk until you have me here. It just works better all around. Lieutenant Halvorson from the homicide department will be here in about fifteen minutes. He's already been to the house and interviewed Kat.\" She nodded in agreement. \"He also talked with your partner and the deceased man's girlfriend. . . .\"\n\n\"She was not his girlfriend!\" Kat broke in just before I could. \"She didn't want to see him, and told him so.\"\n\n\"OK, OK. She told me that, too. It is just the way it is being reported in the news, and stuff. They had been dating, right?\"\n\n\"They went out a couple of times,\" I agreed. \"But there was nothing there, and the guy was threatening her. You know that. You started the paperwork for the protection order, remember?\"\n\nJohnny waved a hand in agreement. \"I know. I know. I'm just laying it out the way the police will, and the way the media has been. There has been a lot of pressure being applied by the kid's father, and he has some powerful connections here in town. That's why there's a cop in the hallway, for your protection. I really don't think you are in danger, but the police department didn't want to take a chance.\"",
        "Just then there was a knock on the door and it swung open to reveal Lieutenant Halvorson. I waved for him to come in. \"Hi, Bill,\" I called out. \"Or since you are here on business, should I call you Lieutenant?\"\n\n\"Hey there, Toomas. Bill is fine. Yes, I'm here on business, though I don't think there is much business to be done. I just need a statement from you about what happened out at your house. I'm glad you have your watchdog here,\" he nodded at Johnny. \"I'm not even going to read you your rights, because unless you tell me something really absurd, I already know it was self-defense. Set your mind at ease. How about walking me through it for my records.\"\n\nI looked at him, surprised. The police never rule anything out before they have everything covered.\n\n\"I know, it's unusual, but there is more to this case than you know. It's cut and dried the way it came together for us. I just have to have your statement to finalize things. Do you mind if I record this for later transcription? I'll have someone bring it by for your signature tomorrow sometime.\"\n\nAt my nod of agreement he pulled out a small recorder and spoke into it briefly, setting up the details of our meeting, and for the next fifteen minutes he walked me through everything that transpired.\n\n*************\n\nMy daughters sat quietly and listened as I went through the whole ordeal. I had wished they would be asked to leave, but when they weren't I decided they could learn about what happened all at once rather than me having to answer questions interminably.\n\nI love my daughters, don't get me wrong, and I'm glad they cared enough to race home when Kat called them to say I'd been shot, but they can be overly concerned at times. (I shall be charitable here.) I knew they were concerned about my deal with Deidra, too, although Kat talked to Jenny and had her on-board with the idea. The other two, well, let's just say they were dubious. I wasn't up to fighting that battle right now, though, so after the Lieutenant left and Margarite broached the subject I pled exhaustion. \n\nJohnny had stepped out into the hallway with the Lieutenant, and he stepped back into the room just as I was begging off on the question. He picked up on it quickly, and I was glad he did.\n\n\"You were asking about the young lady your dad is going into business with? That is the smartest thing I've seen him do, and I've been his attorney for how many years? That young lady is going places, and your dad was smart enough to understand it. Don't worry about her getting into his pockets, 'cause I can assure you, she will be putting more into his pockets than she ever takes out.\" \n\nI left it to them to talk it out for a few minutes, and I closed my eyes to rest. The murmur of their conversation was enough to lull me into a light sleep. \n\nMy little nap lasted no more than a few minutes. An imperious knock on the door startled me awake, and the door swung open without an invitation to admit a scrawny little pipsqueak of a man wearing a suit and carrying a briefcase. His arrogant attitude was obvious in the way he looked down his nose at me while he marched the short distance to the bed.\n\n\"Mr. Kze . . .\"\n\n\"It's Toomas. I don't go by mister, especially from someone who can't pronounce it. Who are you, and what do you need?\" \n\nHave you ever met someone you automatically didn't like? This twerp was such for me.\n\n\"I'm John Squires, attorney for the university, and I'm here to tell you your contract with the university is suspended immediately. The women's volleyball team will be moved to other facilities by the end of the week. You have violated the school's no gun policy in any of its facilities, plus you have caused the death of one of the students. Your actions, sir, are reprehensible and inexcusable. This is also notice to you of intent to sue for damages for the harm you have brought to the good name of the university. I have been in contact with the victim's family, and they are bringing a wrongful death lawsuit against you, and the university will participate in their suit.\"\n\nBehind him I could see Johnny start to stand. His face was red, and the veins were bulging in his neck, but I raised a hand and stopped him before he could speak.\n\n\"Are you here on behalf of Dr. Anderson, the president, and have you conversed with Dr. Cook in the athletics department about this?\"\n\n\"No, I have not. As legal counsel for the school I had no need to consult with them. You have violated school firearms policies, killed a student, and brought ill-repute on the university. We don't need your kind. I went by the property, and you don't even have any of the signs on your doors that say guns are not allowed, in contravention of regulations.\"\n\n\"Might I suggest you go back to your office and read my contract with the university? My home does not belong to the university, nor does any of the property. It is my home, and I do not fall under any of your foolish gun rules. No, I don't have any signs on my doors proclaiming my home as a target-rich environment, as all of the school buildings do. It is my home. I have leased rooms for young ladies on the volleyball teams, and I have also made the grounds available for their training, but it is my property, not the school's, and you have no business here today. Had I not been prepared for the perpetrator's attempt on the life of one of the young ladies who lives in my home it would be she who is dead today, and possibly others along with her. Is that what you prefer?\"\n\n\"I hope you will bring a lawsuit against me, for I will counter-sue you personally for overstepping your bounds and for unprofessional conduct, as witnessed by Mr. Johnny Walker, my attorney, and the president of the local bar association. I suggest, sir, that you walk out that door with a lot less arrogance than when you walked in it, and you don't let it hit you in the ass when you close it. I shall call Dr. Anderson and discuss our conversation with her. I would suggest you might want to dust off your resume, because you will not be needed by the university any longer once Dr. Anderson hears of your hubris in coming here as you did. Now get out of here, you pompous ass, before I have security throw you out!\"\n\nI reached for the phone on the bedside table as a no longer arrogant lawyer slunk out the door.\n\n*************\n\nGreta, Margarite, and Jenny spent most of the day with me, and it helped pass the time, but to say I was bored was beyond question. Kat couldn't stay because of classes, to her disgust. She wanted to cut the classes, but I put my foot down. The other foot, that is. \n\nI had a cast on my thigh to protect the wound, so I couldn't get up and around. I thought it was overkill, but the nurse told me it was because of the arterial damage, and because they were concerned the femoral artery might let go. If that happened I'd bleed out in minutes, so I had no choice. They weren't going to take it off of me anyway.\n\nCoach Thorson called off practice the first afternoon I was allowed to have visitors, and the whole team piled into my room, with the exception of Lynn. They had to get approval for all of them to be in the room at one time, and Kat went a long way to get it approved. The head nurse got a little huffy when she asked Coach Thorson what their relationship with me was, and Darlene said we all lived together.\n\nThe only one not there was Lynn. Darlene told me she was at the house in bed, under sedation. She didn't think I would want to see her, anyway, and she said she was going to drop out of school and go home. I pointed over at Greta and said, \"Go get her. Tell her I want to see her, now, and don't take 'No' for an answer.\" \n\nKat started to get up to go with her, but I waved her back into her seat. \"No, Kat. If you go she won't take you seriously.\" Margarite and Jenny both jumped up to go along, and went out the door behind Greta at my nod of approval.\n\nI spent the next half hour telling the girls what happened, and answering their questions as best I could, careful to leave Lynn's involvement out of the situation as much as I could. The last thing she needed was anyone from the team putting a guilt trip on her.\n\nIt was a groggy Lynn that came through the door, with Greta holding her by the arm reassuringly. Lynn had her head down, and tears in her eyes. I could hear her arguing with Greta in a stage-whisper. \"He doesn't really want to see me. I almost got him killed, and it was my fault.\"\n\n\"Lynn,\" I called across the room. \"Come here, sweetheart. Yes, I do want to see you. It was not your fault, and I'm glad I was there.\" I patted the side of the bed, hoping she would take me up on the offer and not be stand-offish. \n\nFor a moment Lynn hesitated in the doorway, then shuffled over by the side of my bed, eyes downcast. She wouldn't meet my gaze, but stood and sniffled as tears coursed down both cheeks. \"I'm so sorry I got you into this, Toomas. I'm so, so sorry. I wish I was dead.\" It was a whisper, followed by a sob, and Lynn collapsed on the floor. \n\nWith my leg in the cast the way it was, and the ubiquitous IV in the arm on the other side of the bed there was no way I could reach her, but Kat and Greta both knelt next to Lynn on the floor and embraced her, whispering in her ear.\n\n\"Lynn, honey, it was not your fault, and I am glad you aren't dead. Look at me, sweetheart,\" I said softly. Coach Thorson quietly shooed the rest of the girls from the room, and I gave her a silent nod of thanks. \"Lynn, if you had not told me about Shawn you would be dead, and possibly some others of the girls would have been hurt, if not killed. Would that have been better?\"\n\nLynn shuddered where she knelt on the floor and sobbed even more. I grabbed the box of tissues from the bedside table and handed them off to Kat, then I looked over at the door, where my charge nurse stood with a concerned look on her face. I waved at her and held my finger to my lips before motioning for her to leave and close the door. \"Later,\" I mimed to her with a \"Please?\" She looked doubtful, but after a quick glance at Jenny, she relented and backed out of the doorway and pulled it closed gently.\n\n\"Lynn,\" I said softly, trying to break through the grief. \"Please, sweetheart, look at me for a minute.\" I remained silent for a few moments to allow my calmness to communicate with her. \"Sweetheart, if I'm not sorry this happened to me, why should you be? Hmmm?\" \n\nSurprised, she looked up at me with wide eyes for a moment before looking back down at the floor. \"You can't mean that,\" she mumbled. \"You're just trying to be nice and make me feel better, but you can't.\"\n\nKat broke in. \"Lynn, do you think my daddy would have sent my sisters to get you if he didn't mean it? I know Daddy better than that. If he didn't want you here he would have said to keep you away, not to send for you. He's going to be OK, and so will you, but you have to stop blaming yourself for something that isn't your fault.\" Kat gently wiped the tears from Lynn's face and then whispered, \"Talk to him. He's never lied to me yet, nor to anyone else I've ever known. He's not going to lie to you, either. He really does care about you.\"\n\nLynn lifted trembling eyes up toward me and I gave her a gentle smile and patted the bed again. \"Please, sweetheart, I don't like talking down to you. Sit up here by me for a minute, OK?\"\n\n\"Are . . . are you sure?\"\n\nI nodded and patted the bed again.\n\n\"But, . . . but, after that awful man from the university came by the house today I didn't think you would want to see me.\"\n\nI cocked an eyebrow questioningly. \"Man from the university? Little arrogant man? Attorney?\"\n\nShe sniffled again, and more tears welled up. Kat handed her another tissue. \"He said I was going to be kicked out of the university, and the team was going to have to move away from your house, and that your contract was being revoked.\" \n\nI had to listen carefully to understand what she was saying, her voice was so broken with sobs.\n\nI patted the bed again, and Lynn finally sat gingerly on the edge. I put my hand over hers and said, \"He was by here and threatened me, too, but he didn't tell me he had accosted you. Now I'm really getting PO'ed at him. I kicked him out of this room, and Johnny Walker was here to witness it. Now I know I'm going to bring charges against him for unprofessional conduct.\"\n\nMy voice softened, and I continued, \"the biggest thing is you, and how are you doing? I don't want to hear any more of this junk that this was your fault, because it wasn't. I am the one who made the choice to meet him at the door, not you, and I'd do it again. People like that are not fit to have in society.\"\n\n\"But it's not fair for you to get shot for me. I'm responsible.\" Lynn dabbed rather ineffectively at tears that flowed down her cheeks and dripped onto her shirt. Kat handed her a couple of dry tissues and took the wet ones from her hand. \"I have to live with that. You could have died.\"\n\nPerhaps it was poor amateur psychology on my part, but I decided the soft approach wasn't going to work with Lynn. I gave her hand a squeeze and a little tug to get her attention fully on me, and made her look up into my eyes. \"Now listen here, young lady, and listen good.\" My voice was firm, yet still soft. \"I'm the one who chose to be there, not you. You didn't tell me to meet him at the door. I chose to do that. You didn't choose to put the gun in his hand. He did. Could I have died? Yeah, I could've, and I almost did. If I had, I'd have died happy, taking that piece of refuse out with me, but Kat and Deidra were there to take care of me, and that made the difference. Don't be giving me any more of your 'It's my fault' junk. You hear me? By the way, did you know Kat had her gun out when she came running in there?\"\n\nLynn's head snapped up and she turned to Kat, who nodded.\n\n\"Kat figured out something was going on because I had on my sport coat so no one could see my gun, and she got hers. Kat thinks you are worth defending, too.\"\n\nLynn suddenly leaned upward on the bed to wrap her arms around me and sob on my shoulder, but the tears and sobs were different now, and I knew she was going to be OK. Finally as she paused to catch her breath she gasped out, \"I just didn't know. They wouldn't let me out of my room, and I just didn't know what was going on until the policeman came back to talk to me. I should have been out there with you.\"\n\nMy hand stroked her back comfortingly, and with a sigh she nestled her head back down on my shoulder like a little girl. \n\nMy daughters had remained silent the whole time, but now they sensed things had turned the corner, and they gathered around the bed, and next I knew I was in the middle of a group hug. I know that for the longest time they had reserves in their mind about my \"harem\" as Kat jokingly called it in private with me, but now it seemed they were at peace with the situation.\n\n***************** \n\nI had been in the hospital room for three long, tedious, days and was in the process of saying goodbye to Jenny, Greta, and Margarite, when the doctor came into the room.\n\n\"Toomas, I have some good news for you, and some bad news. We are releasing you from the hospital tomorrow, but we have to find a nursing facility for you. You obviously cannot be up and about on your own, and you have no one at home to care for you. Is there any particular nursing home you would prefer? If so, we'll try to find a bed there for you.\"\n\nMy spirits sank. A nursing home is the last place I ever wanted to go. I remember when my father had to be in one the last year of his life, and how he called it the penitentiary. I know, I know, they are necessary, and most of them take good care of their patients, but I don't like to be at the mercy of anybody else. I like to be able to care for myself.\n\nGreta, my blessed Greta, spoke up. \"What sort of care does he need, Doctor? He doesn't really need a nurse, does he?\"\n\n\"Well, technically, no, but he will need someone qualified to care for a bed-bound patient. He's not going to be up and about until the cast is removed, and he needs someone who can tend to his bathing and other personal needs. I'd be a lot more comfortable if it were someone who knew enough about medicine to be on the lookout for any complications with his wound. It is covered, but if there were problems, it would be better if someone was able to recognize them.\"\n\nGreta turned to her sisters, ignoring me completely, as she took charge of my situation. \"What do you think about Lynn? She told me she has worked as a CNA in a nursing home for the last two summers.\" She turned to the doctor. \"Would a CNA be sufficient, Doctor?\"\n\nHe nodded. \"Yes, if she is available enough. He really needs someone available around the clock, though.\"\n\n\"I think it would be good for Lynn. It will give her a chance to give something back, and I think it will help her self-respect a lot. What do you girls think?\" Again, Greta left me out of the conversation. I tried to interject, but Greta shushed me. \"Daddy, we'll make sure you are taken care of properly. Just leave it to us, OK?\"\n\nWell, it really wasn't OK, but it was obvious I had no say in the matter at all, and thinking about it, it would be nicer to be at home. I wasn't sure about having one of my girls responsible for bathing me and caring for my bodily functions, though.\n\n\"Doctor, how soon do we have to have an answer on where he is going? Would tomorrow be too late?\" Margarite was obviously going along with her sister.\n\nJenny settled the issue for us all by calling Kat on her cell and getting Lynn's number. A quick text to Lynn to confirm she was not in class and a group call on speaker to Lynn, and it was all settled. \n\n\"Doctor, we'll get him set up at home. Is there anything we need to have set up for him?\" Jenny, the organizer took over this function.\n\n\"Well, it would be best to have him in a hospital bed, and you will need a wheelchair for getting him to and fro. You will want to arrange for an ambulance to get him home. There is no way he can be moved in a passenger car with that cast on his leg. After the cast is removed in two and a half weeks he will be able to get around on crutches, but I would be a lot more comfortable if the young lady is able to continue to provide care, at least for another week. She is a student at the university, no?\"\n\n\"Yes, Doctor.\"\n\n\"Could other of the students living there at the home be available in case of need while this young lady is in class or elsewhere?\"\n\nJenny smirked at the doctor. \"From what I've seen around the house, I think they will be lining up to take turns. If I didn't know my father as well as I do, I'd think he had something going on out there.\" She and her sisters got a good laugh as I tried to protest. \"Oh, hush, Daddy. You will enjoy it, and you know it. We can still find a cheap nursing home for you if you want.\"\n\nI surrendered, but I had some serious misgivings about putting myself in the care of all of the girls, as helpless as I was. I could only imagine the teasing I would get now!\n\n*************\n\nIt turned out to be late afternoon before I was able to make the transition home. The medical supply place my daughters called was late in delivering and setting up the hospital bed. Jenny and Margarite both had to leave the previous night, but Greta was able to arrange to stay another day, so she was there to handle the transfer to the house. I had no more than gotten settled in the bed in my office, where Greta had it set up so stairs would not be an issue, when Lynn came rushing in from school. The first thing she did was to give me a big hug and kiss on the cheek.\n\n\"I'm so glad to have you home, Toomas! Thank you for letting me help care for you. I felt so helpless with you gone.\"\n\nMy location left us with one problem. We didn't have a call button system like they have in the hospital or a nursing home. How was I to be able to call Lynn, or one of the other girls, if I needed her? ",
        "I think Lynn read my thoughts, for she said, \"I'm going to sleep on your couch, so I'll be right there close if you need me, Toomas. All you have to do is call my name. We girls have worked out a schedule so that one of us will be on duty here 24/7. You are getting the best care in the world, and you deserve it for what you did for me.\"\n\n\"Now don't be starting any hero stuff, Lynn. I'm not having it.\"\n\n\"You are my hero,\" she said softly, and she took my hand and squeezed it gently. \"You will always be my hero.\"\n\nI knew better. I'm no hero, but how do you explain that to a woman? All I did was what any man ought to do for someone under his care. I lifted her hand to my lips and kissed it gently. \"I'm no hero, but I'm glad you are here. I'll try not to be a bother. Remember, your school comes first, and volleyball comes second. Those are your priorities. I'll get along fine.\"\n\nLynn shook her head \"No. I sat down with Coach Thorson and Dr. Cook, and I left the volleyball team for the spring season when I found out you were coming home. I'm too small to be very good in the sand, so I wasn't going to be playing all that much anyway. Dr. Cook said it would be OK to keep my scholarship since I'm going to be caring for you.\"\n\nGreta stepped up by the bed and gave me a little kiss on the cheek and half a hug. \"Goodbye, Daddy. I've got to go, or Kat won't be able to get me to the airport on time. I love you. We'll be back to check on you in a couple of weeks, OK?\"\n\nI pulled her down so I could kiss her cheeks, then I took her hands in mine and squeezed them. \"I love you girls, too. Thank you so much for coming. Tell Brian I said thank you for letting you come.\"\n\n\"Silly man. You know you always come first, Daddy. Brian knows it, too.\" She squeezed my hands back and stepped away, wiping an eye as she did so. \"You do what you are supposed to do, and don't you give Lynn any grief, do you hear me? I don't want to hear you caused a problem with your arteries.\" She gave Lynn a quick hug. \"Thank you, Lynn. Now you have my number. You call me if this becomes too much, and one of us will get back down here and help out somehow. You have to keep your grades up.\"\n\nLynn agreed, and Greta hustled out the door, for she was behind schedule and the plane wouldn't wait.\n\n************\n\nThe girls all came into my office/bedroom to welcome me home as they got out of class, before they went out to volleyball practice. Deidra stopped in to see if there was anything special she could fix me for me first evening home, but I told her I didn't need anything special. Darlene was the last one to stop in, just before she went down to the volleyball courts for practice. \n\n\"I've been in a meeting with Dr. Cook and Dr. Anderson for most of the afternoon, Toomas. They both wanted to know if it would be OK for them to call on you in the morning. They want to express their thanks for what you did.\"\n\n\"No thanks are needed, Coach Thorson.\" Lynn was in the room with me, so I didn't feel right about being personal. \"They are more than welcome to stop by anytime, though. I'd be most happy to see them, and I have a couple of matters I need to discuss with Dr. Anderson.\"\n\n\"I know. That is one of the major items on today's meeting agenda.\" Darlene took a deep breath. \"They both are concerned you won't want to have the team stay here next year after what the school attorney did.\"\n\n\"Please set their minds at ease. You have become almost like family to me, and you did a lot to bring me out of a deep funk. Having you around has been good for me.\"\n\n\"Good. That takes a lot off of our minds. I've got to get out to practice now, or we'll fall even further behind.\"\n\n\"You tell those girls I expect them to get busy. Tell them not to worry about me, unless they don't play to their best ability. If they slack off I'll be very upset. I might have to paddle them if they did that.\"\n\nI got a laugh out of the coach at that. \"I'm not going to tell them that! There are a couple that might find it enjoyable!\" She gave me a grin and winked at Lynn, who had a matching grin on her face. She made her way out the door, and I turned my head toward Lynn.\n\n\"Well, Lynn, I guess this is what you signed up for, but I need to use the 'duck.'\" I know my face was flaming with embarrassment, especially when Lynn started to reach under the sheet with the portable urinal. \"I can take care of it myself, thank you.\" I swear Lynn looked disappointed as I did my duty and then handed it over to her. \"This is where having someone I don't know doing this would be so much easier. I hate having to make you do this stuff.\"\n\n\"I'm glad it's me! I owe you a lot more than this. Be right back, Toomas. I'm gonna change into my scrubs. Do you need anything else before I go?\"\n\n**************\n\nMy doorbell rang, and I started to get up to answer it without even thinking. I heard footsteps down the stairs, and voices at the door, and then I was surprised to see Lieutenant Halvorson stick his head in the doorway.\n\n\"Toomas, may I intrude on you for a minute?\"\n\n\"Certainly, Bill. What's up?\"\n\n\"I was hoping to see Lynn, too. Is she around?\"\n\n\"She should be momentarily. She just left to change clothes. She drew the short straw and has to care for me.\"\n\n\"I did not!\" came from the doorway behind the Lieutenant. \"I wanted to, and you know it!\"\n\nI had to grin at her as she stood there with her hands on her hips, looking ever so fierce in her burgundy scrubs. \n\n\"Is something wrong, Officer? Why do you need to see me?\" In spite of her bravado, there was a little tremor in her voice, and fear was in her eyes.\n\n\"Actually, I came around here to say 'thank you,' to you two. You have broken up a pretty substantial cocaine ring.\"\n\n\"Grab a chair, Bill, and sit down. Now, how did we break up a drug ring?\"\n\nLynn pushed my desk chair over to the Lieutenant, and he sat down. I patted the edge of my mattress, and Lynn settled uneasily on the edge after looking uncertainly at me.\n\n\"We towed that punk kid's car in to the impound lot to hold until his family could come up to claim it, and after we did our usual processing, it sat there overnight. Johnny Hanrahan, one of our K9 officers was training his dog in there the next day. We hide samples of drugs in various vehicles we are holding and use them to train our dogs. Johnny was leading Roscoe, the new pup into the area, and all of a sudden the dog sat, right by the punk's car. Johnny knew we didn't have anything hidden in there, so he tried to get Roscoe to move on to one of the target cars, but the dog wouldn't move.\" \n\n\"Johnny called one of the evidence techs out and they tossed the car. There were two hidden compartments built in, and we pulled out two kilos of pure cocaine out of one and fifteen thousand dollars in cash from the other one. After doing a little checking on the kid and some of his associates we were able to crack a pretty good size ring. We got lucky, I'll admit it, because when we picked up the one guy his cell kept ringing and we kept answering.\"\n\n\"Young lady, you are very lucky you had the good sense to talk with Toomas. We also found out the kid was part of a sex-trafficking ring. He would go out with a girl a couple of times and have sex with her, then would coerce her into prostitution and he would use her as a mule to move his drugs around. We were able to free six girls, all because you had good sense, and someone you could turn to for help. They didn't have that.\"\n\nLieutenant Halvorson stood to leave. \"Toomas, if you were an officer, you would be getting an award and a commendation. We can't do that for you as a civilian, but I want you to know you have our thanks. I'm sure you will be getting a letter from the chief in the next few days saying so, but I wanted to tell you personally.\" He stepped over and gently shook Lynn's hand, then mine before turning to leave.\n\nAt the door he paused. \"Oh, by the way, if you see a patrol car out on the road a little more frequently than you are used to, it isn't an accident. We don't think they will do anything, but we are stepping up coverage of this area for a while, just in case the kid's family wants to try something.\" He waved his hand at his forehead in a mock salute, then turned and made his way out the door.\n\n**************\n\nBy the time Bill left, I was pretty tired. I left Lynn to fuss about the room a little bit and closed my eyes to rest. There was a lot going on, and it was going to take me a few days to get back into the swing of things as far as the house went. Of course, Darlene was handling the girls well enough, but I had to make some arrangements as far as maintenance and such while I was laid up. I mulled over who I knew that I could call in. Several companies came to mind, but I just wasn't satisfied with any of them. Next thing I knew, I was dreaming. \n\nI really don't know how long I was out, but a recurring dream cycled through my head over and over. I tried to interview maintenance companies, people I knew well, but they kept changing, morphing from one person to the other. I was frustrated, then I would feel a soft kiss on my forehead from above me, and a whisper in my ear, \"Toomas, I love you.\" What that had to do with maintenance I couldn't understand.\n\n**************\n\nMy nap ended when practice ended. All of the girls on the team trouped into my room, wearing those little bikinis they wear for beach volleyball, and I got a hug and kiss on the cheek from each of them, just like usual. The thing was, I didn't normally get this treatment after volleyball practice. Sure, sometimes I'd get a hug and kiss on the cheek from them when out at the swimming pond, but normally when it was everybody they were dressed normally. Of course, Little Toomas noticed all of the skin when I hugged them back one-armed. I wasn't wearing anything under the sheet, because it was too difficult to try to use the \"duck\" or the bedpan if I had underwear or pajamas on. More than one of the girls giggled as a little tent formed, and a couple of them made their hugs a little extra nice.\n\nDeidra, as usual, kissed me on the lips, to the enjoyment of the others. Nobody knew what was going on between the two of us, but they marked it up as her just being cheeky, I think. \"Can I take care of that for you?\" she whispered in my ear, before pulling away with a Cheshire cat grin and a wink.\n\nLynn hovered about, protectively, the whole time, and I noticed her eyeing the sheet and a couple of times she licked her lips or sucked the lower lip between her teeth. After the team all left the room, Lynn was talking to me and dropped her pen on the floor. She looked up at me before bending to pick up the pen, but she fumbled it a time or two before she picked it up. Her Vee-neck top sagged down, allowing me a clear view down between her bra-less breasts all the way down. I didn't see the nipples, but almost could. I know it was intentional, for her face was a bit flushed, and there were two small bumps from her nipples that hadn't been there before. I noticed she also looked over at my sheet out of the corner of her eye before turning away and muttering something about needing to do some homework.\n\nMeantime, I lay there trying to think of anything to keep from getting totally hard. Being bed-bound like this was going to cause some problems I hadn't foreseen. Maybe I would have been better off going to a rehab facility. The way these girls teased me, I was going to embarrass myself completely, because there was no way I could rub one out to give myself relief with Lynn hovering over me in the room all of the time. It was a quandary, indeed.\n\n***************\n\nAfter dinner things settled down to almost normal. I tried to do a little work on my laptop on the bed-table while Lynn studied over on the couch. More than once I heard a frustrated sigh as she was working on a particular problem. \"What's the matter, Lynn? Can I help?\"\n\n\"I just don't get this equation. It doesn't make sense!\"\n\n\"Bring it over here and let me see what you are struggling with.\"\n\nShe got up from the couch and walked across the room to my bed, but just as she got there she dropped her notebook with all of her loose papers all over the floor. She let out an exasperated sigh, set her book onto my table, and bent over to pick up her papers. \n\nI really don't think it was intentional this time, but as she bent over from the waist to pick them up, again, her top ballooned open and I was treated to another view. I did not look intentionally. I was looking at her papers frustrated I couldn't help pick them up for her, when I saw down her top. This time as she moved back and forth picking up all of the stray papers her breasts wiggled enticingly within the shirt, teasing me that a nip would appear. I tried to look away, but I was mesmerized by those luscious looking swells. \n\nI think she realized the show she was giving me when she had about half of her papers gathered, for she glanced upward and then seemed to fumble more with them than she had been. This time, unlike the time she dropped the pen, she got a smile on her face when she looked over at the bulge lifting the sheet, and there were prominent pokies in her top. \n\nNothing was said by either of us. I was embarrassed to no end that I had looked as I had. The flush on her face indicated embarrassment on her part, but along with it, there seemed to be arousal, and she repeatedly licked her lips self-consciously while I explained where she was going wrong on her equation. I noticed, too, that she leaned over the bed a little more than was totally necessary to see the work, and in so doing her left breast nestled against my arm.\n\nI couldn't focus my thoughts on what I was working on after all of this, so I closed the computer and just lay back on my pillow and dozed.\n\n******************\n\nIt was just before I was ready to turn in for the night that I had to use the bedpan for the first time. Because of the cast situation, I was not able to properly clean myself afterwards, and I had to submit myself to Lynn's ministrations. I know I was as red as I've ever been, to Lynn's amusement. \"Toomas, yours is not the first ass I've wiped. Everybody has one, you know.\"\n\n\"I know, but that doesn't mean I have to like having you do it. It's degrading for me to make you do something like that.\"\n\nShe finished cleaning me with a moist cloth, and then just for fun she pinched one cheek lightly. \"I always wanted to do that in the nursing home, but they wouldn't let me, and then, too, I didn't have such a cute little tushie to pinch!\" She carried the bedpan into my ensuite bath, laughing at me the whole way.\n\n\"I ought to pull you across my lap and spank you for that, young lady! If I only could, I would!\"\n\nA gale of laughter wafted out of the bathroom over the flush of the toilet. She stuck her head around the door and laughed, \"You'd better be careful about that. I might like it, and then where would you be?\" She stuck out her tongue and then ducked back into the bath to finish cleaning up.\n\nShe still had a big grin on her face when she stepped back into the room. \"Are you about ready to call it a night? You look tired.\" \n\nI admitted to being exhausted.\n\n\"I can imagine. You've had quite a day, today. I should have put you to bed a while ago, but I knew you needed a little more time to get your mind settled at being home.\" She placed a hand on my forehead, experimentally. \"You don't feel feverish, but I think I'll do your vitals anyway.\"\n\nLynn stuck a thermometer in my mouth and then wrapped a blood pressure cuff around my arm and checked my pressure and pulse.\n\n\"You have a little over ninety-nine on your temp, but with all that's been going on, I'm not surprised. BP's pretty good. I'd like to see your pulse a little stronger, but it's not bad. I may check you a time or two during the night, just to be sure.\"\n\nLynn turned on a small lamp behind my head so she could continue to study and then turned out the overhead light. \"Now, don't you hesitate to call me if you need anything, do you hear me? If I find out you needed something and didn't want to wake me I'll be pissed, and I'm not kidding.\" She leaned in and kissed me on the forehead. That soft kiss was on my mind as I drifted off to sleep. Somehow, it felt familiar, and I liked it.\n\n****************\n\nThe worst part of having that cast on was having to stay on my back. I couldn't roll over on the cast, and if I tried to lie on my other side it was too heavy on my good leg and it would hurt. I certainly couldn't sleep on my stomach, which is my favorite position.\n\nI don't know how many times I awakened during the night, but one time when I did I glanced over at the couch, where Lynn was sleeping. She was on her side, with her back toward me. I saw she had changed into a long sleepshirt for the night, but she had kicked the sheet down, and the shirt had ridden up, exposing her little pink panties and thighs in the soft light of the lamp. I had to tear my eyes away, and I chastised myself for looking. It wasn't right for me to be perving a young lady who was there to care for me. I turned my head and tried to go back to sleep, but the vision remained in my mind and dreams for the rest of the night.\n\nIt was six o'clock when Lynn woke me to start the day. I know she was not normally up that early, but in order to have me ready for the day and get herself off to a nine o'clock class we had agreed it would be best. I was surprised to see her dressed in that same sleepshirt that had stirred dreams during the night, but at least this time it did extend to mid-thigh. Two nipples made their presence known, although they were not poking out with excitement. \n\nI had a bit of morning wood and needed to relieve myself pretty badly. I had to avert my eyes from Lynn when she gave me the duck, though, or I'd never have been able to piss. Fortunately, she went into the bathroom to draw water for my sponge-bath and my morning wood subsided enough that it wouldn't embarrass me when I handed off the duck.\n\nLynn told me to take off my shirt while she emptied the urinal. To say I felt vulnerable is a monumental understatement. I sat there naked with just a thin sheet over my lower body while a young lady prepared to bathe me. \n\nLynn started on my back, letting the head of the bed down while I sat up with difficulty. I must say, the soft cloth, warm with soapy water did feel soothing after hours of lying there, sweating into the sheets. Next, she raised the bed back up part-way and had me lie back while she gently washed my face and neck and then my chest and abdomen. I protested that I could do all of that, but she just hushed me and said to relax and enjoy it. I did put my foot down, figuratively, at her washing the private areas, though. I wasn't ready for that much humiliation. \n\nShe caught me by surprise then, and lowered the head of the bed again and rolled me up onto my side carefully and flipped the sheet off so she could get to my backside, which she washed thoroughly, including my ball sack, much to my protest, but all I got out of her was a giggle. She washed my legs well, even from that vantage point, leaving me with a raging erection that ached before she dried me off carefully, and then lowered me back onto the bed.\n\n\"I'll leave you to take care of the rest, then, since you insist. At least it is standing up where you can get at it well enough.\" She laughed until tears ran down her face at my expression. \"I'll just go and get my shower while you take care of that part. Too bad you can't come and wash my back.\" With a wink she whisked into the bathroom, and I heard the water start. She didn't bother closing the door. After all, I couldn't even get out of the bed, and the sound of the water splashing as she did her ablutions and her humming nearly drove me wild.\n\nI quickly washed myself, and although I wanted dearly to give myself some relief I wasn't sure that I had the time, and besides I had nothing to catch my seed with. ",
        "Lynn came from the bathroom a few minutes later, already dressed and brushing out her damp hair. \"I hope you don't mind if I bring some shampoo and conditioner and bodywash down here, Toomas. Your shower looks like a bachelor's.\" Her face paled as she realized what she said and I felt a stab in the heart. I took a deep breath and let the pain slide away. I knew what she was saying, and I guess in a sense, I was a bachelor of sorts.\n\n\"You can bring anything you need, Lynn. Personally, I don't need any of that stuff, but you are welcome.\"\n\n\"We need to get your bed changed quickly before I have to go, and you need a shirt before your company arrives.\"\n\nI would have thought the shirt was first on the priority list, but not to Lynn. She started stripping the bottom sheet loose and then started putting a clean one underneath it somehow before rolling me sufficiently to get them both to the other side of the bed. Meanwhile, I was holding the top sheet over myself desperately to maintain what little shred of dignity and decency I had left.\n\n\"Relax, Toomas. Yours wouldn't be the first one I've ever seen, although I'm not trying to see it.\" She did pause, holding back her thoughts for a moment before giving me a cheeky grin and saying, \"Although, I must say most of the men I've cared for in the nursing homes didn't have one that stood up nearly so nicely as yours does!\" She giggled delightedly as she saw my face flame red.\n\nIt was only moments and she tucked in and threw a fresh top sheet over me and then pulled the soiled one out from under the new sheet. I was puzzled when she took a light blanket and tucked it in the foot of the bed before spreading it up and over me. \n\n\"Why the blanket today?\"\n\n\"Because you've got some bigwigs from the university coming to see you at ten o'clock, and I didn't think it would go over well with them if you are tenting the sheets at them like you have been at all of us girls.\"\n\n\"So why didn't you give me the blanket yesterday when all of the team was around?\"\n\nShe cocked one eye at me. \"Really? You don't think we enjoy it? Why do you think some of the girls tease you so much? We like to look, too, you know, and you are safe. We know you wouldn't hurt us.\" Lynn's eyes pooled for a moment, then she dropped her head and stepped toward the bed. She grabbed my hand in both of hers and brought it up to her cheek. \"I'm sorry if I took it too far, Toomas. We all love you. I don't want to hurt you.\" \n\nLynn dropped my hand and dropped her head to my chest, reached around me with both arms, hugged me as best she could, and began crying. I did the only thing I knew to do with a crying girl. I took her into my arms and held her there, my mind racing with wonder.\n\n\"P-part of it is that I want to pay you back for what you did for me. I owe you . . . I owe you my life.\" She lifted teary eyes to look up at me. \"I owe you everything, and you can have anything you want from me. Anything.\" She was hiccoughing from her tears as she said it.\n\n\"Lynn, sweetheart, listen to me,\" I said softly to her. Feeling her body pressing against mine after all of the other stimulation was doing me no good for what I needed to say, and I didn't want to give the wrong impression. \"You owe me nothing. What I did I would have done for any of you, or for any other woman as far as that goes. I'm glad I was able to protect you, but I want nothing from you for what I did.\"\n\n\"But maybe I want it . . .\"\n\nThere was a knock on the door, and Lynn quickly stood and wiped the tears from her eyes before calling, \"Come in.\"\n\n***************\n\nDeidra opened the door, carrying a breakfast tray. I could smell bacon, and my stomach growled, bringing a giggle from Lynn.\n\n\"Thanks, Deidra. I should be back a little after eleven, but I'll have my phone on if you need me for something.\" She leaned over the bed and kissed my cheek. \"I'll see you in a little bit, Toomas. I showed Deidra what she needs to do if you need the bedpan or urinal. I'll be here for lunch.\" With that she pinky-waved at me and hurried out the door to make class on time.\n\n\"How did you sleep last night, Toomas? Are you in pain?\" Deidra set the breakfast tray on my bed table and rolled it over in front of me.\n\n\"I slept well, considering. I can't wait to get this blooming cast off my leg so I can roll over. Other than that I slept well, and I don't hurt much.\"\n\n\"Would you like something for pain, or would you rather wait until after you eat?\"\n\n\"Nothing, thank you. It's not bad.\" \n\nI picked up the coffee cup first of all. I was amazed that I had been civil with Lynn while being bathed and the bed changed. Normally I'm on the grouchy order until I get my first cup of coffee.\n\nWhen I uncovered my breakfast plate I was surprised to see a steak and three strips of bacon to go with what looked like half a dozen scrambled eggs and hashed browns.\n\n\"I'm supposed to eat all of this? Are you trying to fatten me for slaughter or something?\"\n\nDeidra snickered. \"Your meals are going to be heavy on protein for a bit, Toomas. We have to build your blood supply back up. Eat what you can. If it is too much, just leave it. You've lost weight, and you need to gain some of it back, too.\"\n\n\"Did you fix this?\"\n\nA little bit of a blush and a nod.\n\n\"Thank you.\" I cut into the steak, and found it just as I like it. Marja used to say if it had a little Mercurichrome and a Band-Aid it would have a good chance of surviving, but I liked it juicy. This one didn't even need any steak sauce.\n\n\"This is excellent! What did you do to it? I taste a little something, but I can't tell what.\"\n\nDeidra smiled the way I only saw her smile when her food was mentioned. \"I just did a little marinade of my own making, but I only let it sit in it for about half-an-hour instead of overnight like people normally do. It's just enough to give a hint of flavor without hiding the beef. I'm glad you like it.\"\n\n\"What's in it?\"\n\n\"I can't say. I may be patenting it later if it is successful in the B and B.\"\n\nI cocked an eyebrow at her, only to get a cheeky grin in return. \"I'll fix it for you anytime you like, but I'm not telling.\"\n\nI dove in and started eating as if I had not eaten for weeks, but then, I can't really call hospital food, \"eating\". Before I knew it, the plate was empty, as was my second cup of coffee. Then it hit me. She said she had marinaded the steak for half-an-hour. That meant she had to have gotten up early to do all of this.\n\n\"What time did you get up to do this, Deidra? Not that I'm complaining, but this wasn't necessary.\"\n\nShe gave me that smile again as she removed the tray from the bed table. \"I didn't do it because it was necessary. I did it because I wanted to.\" She bent down and gave me a gentle kiss. \"When one loves someone, one does what one can to make the other happy.\" She picked up the tray and made her way out the door, and I couldn't help noticing the sway in her hips, and the wink she gave me let me know she knew I was watching.\n\n***************\n\nI tried working on my laptop while waiting for Drs. Cook and Anderson to arrive, but I kept getting distracted by Deidra's legs where they were stretched out on the couch. I don't think she caught me looking at her, but knowing her, I'm certain that even though she was reading for a class she was intentionally giving me a show. She had on a short skirt, and was lying so that I couldn't see up it, but could just see her legs extending. She had music on her mind, though, because one leg kept bouncing with the beat. I did my best to keep my mind on what I was doing, but it was difficult. I was actually relieved when I heard the doorbell. Deidra swung around on the couch to stand up, and flashed me before giving me a wink and a grin. I knew then the whole charade had been for my benefit. \n\nI was starting to get a royal case of blue-balls from all of the teasing, and had no way of relieving myself. With round the clock care like I had I couldn't rub one out, and the girls were dead set on teasing me without mercy. I know Lynn would like to take care of it for me, thinking she owed me, and for that reason, above all others, I couldn't allow her to do it. No way was I going to take advantage of her vulnerability and feelings of guilt. Sure, she was as cute as a button, but I'm not that kind of a guy. \n\nI straightened the blanket and lifted a knee when I heard the front door open and Deidra speaking with Dr. Cook. It was only a minute or two later when Deidra led them in the door of my office slash bedroom. Of course, I knew Dr. Cook well, but I had not had the pleasure of meeting Dr. Anderson before. Both ladies wore business suits, with skirts near the knee. \"Toomas, I'll just be in the kitchen; if you need anything, Dr. Cook can call me.\" With that Deidra ducked back out the door.\n\n\"Toomas, Dr. Anderson tells me you two have not met. Please allow me to introduce you.\"\n\n\"That's not necessary, Helen.\" Dr. Anderson stepped to the side of the bed and shook my hand. \"I'm Alma Anderson, and I'm pleased to make your acquaintance, Toomas. I cannot thank you enough for what you did for Lynn.\" Her hand was soft in mine, and I noted she seemed in no hurry to let mine go. \"If it had not been for you, who knows what could have happened.\" Her shoulders shuddered, and she slowly slipped her hand free.\n\n\"Dr. Anderson, please. I'm no hero. I just did what had to be done, what I would have done for my own daughter. Lynn is a member of my household, and I could not do less for her.\"\n\n\"Res ipsa loquitor,\" murmured Dr. Anderson. \"Please, Toomas, it's Alma.\" At the quizzical look on my face, Dr. Anderson said, \"Latin. 'The facts speak for themselves'.\" The ladies seated themselves on the couch, just as Deidra stuck her head back in the door.\n\n\"I'm sorry, but I didn't think to ask if you would like coffee or a soft drink. What can I get you?\"\n\nThe ladies said coffee would be fine, and I just lifted my cup. Deidra ducked back out the door, returning moments later with a tray laden with a coffee silver coffee set I had forgotten I had. \n\n\"I made a strudel. I hope you will enjoy it.\" Deidra poured coffee for each of us, and then served us a healthy serving of her warm strudel. I had no doubt as to whether or not I would enjoy it. The more I saw of Deidra the more impressed I was with her. If her grace and aplomb in serving the ladies was a harbinger of what was to come with her bed and breakfast I knew I was sitting on a gold mine.\n\n\"Umm. This is delicious! Don't tell me she cooks for you as well as going to school and playing volleyball!\"\n\n\"Not as often as we would like, Alma. She will be staying on for a couple more years working on a second degree in business and culinary arts. To be honest, I think she will be able to teach the teachers.\"\n\n\"I could believe it!\" Dr. Anderson paused and cleared her throat and sipped at her coffee before continuing. \"We in the university owe you a huge apology, Toomas, for the actions of our attorney. Please believe me that we had no knowledge of his actions until after the fact.\" She had shifted forward to the edge of the couch, which forced her skirt to slide upward a good three inches on her thighs. It was nothing improper, but she does have nice legs. \"If I had known of his plans I would have stopped him long before he did anything.\"\n\n\"Please set your mind at ease. He said as much when he came to the hospital and barged in my room. I appreciate your concern, but you have no need.\" The look of relief on Dr. Anderson's face left no doubt of her concerns. \"My attorney, Johnny Walker, was in the room with me when he interrupted our conversation, so he was a witness as well. Johnny's the president of the local bar association, and he is in agreement with me a complaint should be filed against Squires, but Johnny doesn't know about what the twerp did to Lynn before he came to the hospital.\"\n\nThe blood drained from Dr. Anderson's face and Dr. Cook joined her on the edge of the couch.\n\n\"What did he do to Lynn?\" almost whispered Dr. Cook. \"I didn't know anything about that.\"\n\n\"He came out here to the house while a crew was trying to clean up the damage. That's why you had to walk around those tarps on the floor out there. They will have to replace the flooring and repair the wall where I fell against it, but that is a different matter. Your attorney, Squires, wasn't it?\"\n\n\"Former attorney,\" Dr. Anderson said softly.\n\n\"As I was saying, he came out to the house and barged in unannounced and uninvited and told Lynn she was going to be expelled from the university, that our contract was being revoked, and that the girls would all be relocated by the end of the week. He also accosted my daughter, Katarina, and called her a blood-thirsty gun nut for coming in to back me up. He said he was going to press charges against her for having a gun in a gun-free zone. Generally, he made an ass of himself. I might have overlooked what he did at the hospital, but I cannot, and I will not overlook what he did here at the house. Johnny is pressing charges against him as we speak, and I will sue him for damages.\"\n\nDr. Anderson's face was blanched, and sweat had beaded on her forehead.\n\n\"Surely, you don't hold the university responsible, do you, Toomas? I assure you, there is no action being taken against Lynn for any reason, nor against Katarina. Your contract is in no way endangered, and I'm in hopes we will be able to have a good relationship between us for many years to come.\"\n\nI held up a hand to quiet her. \"Be at ease. I know the university had nothing to do with him. I got a call from Johnny last night, and this doesn't leave this room, please. The reason Squires did what he did was he has also been representing Shawn's family interests here in town. There is a very good likelihood we will be able to tie him to illegal activities with them as well as conflict of interest. \n\n\"As for our contract, I'm more than comfortable with it, and I have enjoyed the last three years, too. What that misbegotten spailp did has no bearing on our relationship.\"\n\nDr. Anderson gave a big sigh of relief and patted her forehead dry with a tissue before shrugging out of her suit jacket. All I can say is, whoever made the sweater she had under it had her in mind, for when she pulled her jacket off her back she had to push her chest out, which tested the sweater to the max, and it was now I who had sweat beading his forehead.\n\nDr. Cook broke into the conversation. \"What can we do for you, Toomas? I know the girls love living at your place, and they can't say enough good things about you. Is there anything we can do for you while you are laid up? Do you need help with the grounds or anything of the sort?\"\n\n\"If you would care to do something about the grounds and any light maintenance for the next few weeks it would be much appreciated. I had planned to make some calls tomorrow to find someone to care for the grounds until I can get back on my feet.\"\n\n\"Consider it done. The athletic department will be most happy to care for that for you. We should have been doing it all along, anyway.\"\n\n\"You said the flooring had to be replaced, Toomas?\" Dr. Anderson took charge again.\n\n\"The way I understand it is blood cannot just be cleaned up from hardwood flooring, so it has to be taken up and replaced. My insurance is taking care of that for me, and the rest of the damage repair.\"\n\n\"I want you to send all bills, medical bills, too, that insurance doesn't cover to the university. It is the least we can do. Anything we can do to help, we want to. I will also be wanting to speak with Lynn and extend the university's apologies to her for our former attorney's actions. I assure you, we will not only cooperate with you in your actions against him, we would like to join them, if you will allow us.\"\n\nI nodded my agreement, and then with our business done, we got acquainted and had a good time talking together for the next hour. I was really sorry to see them go when they left.\n\nAlma gave me her card, after scribbling her cell number on the back, when she left. \"Call me anytime I can be of service, Toomas.\"\n\n\"Perhaps I could give you a call and invite you to dinner once I'm on my feet again?\"\n\n\"I'd be delighted.\"\n\n**************\n\nLynn bustled in the door as soon as she got back from class to find Deidra back in the same position on the couch she had been teasing me from before Drs. Anderson and Cook visited. Deidra had also managed to lose her bra once they were gone. \n\nLynn kissed me hello, but this time, to my surprise, it was a peck on the lips instead of on the cheek. \"Give me just a couple minutes to change into my scrubs and I'll be back in to care for you, Toomas. Is there anything you need me to bring back for you?\"\n\n\"I think I'm doing OK, Lynn. Thank you. You don't have to hurry. I'll be fine for a while.\"\n\nDeidra sat up on the couch and swung her legs around, making sure I noticed them, and then walked to the other side of the bed and leaned down to hug me and give me a big kiss before she left. \"You don't know how hard it is to study in here with you, wishing I was in that bed, too.\" Her whisper was faint in my ear, and her breath tickled, causing Little Toomas to twitch.\n\n\"He's done all right while you were gone, Lynn. I offered him a sponge bath after the bigwigs left, but he said you had already given him one. Lucky you!\" She gave me a wink and watched Lynn's face get red.\n\n\"Nothing went on when I bathed him. He did all of the private stuff himself!\"\n\nDeidra laughed merrily. \"You lose. You just call me anytime you need it done right, Toomas, and I'll take care of you.\" My face was flaming by this time. Lynn's was turning dark, but not with embarrassment this time, and she started sputtering.\n\n\"Hey, I'm only kidding, Lynn. Take it easy. I know he's your patient.\" Lynn started to calm, but I don't think she took the teasing very well. She certainly didn't waste any time going to her room, changing into scrubs and getting back.\n\n*****************\n\nI had no worries about my care. The girls practically fought over who got to be there for me whenever Lynn had to be in class. The only problem I had was with Lynn. She seemed to be more and more agitated with each day that she had to leave me in another girl's care. She knew full well how much they were teasing me while she was gone, and I do believe she was jealous. \n\nShe never wore a bra, but then, neither did any of the others. It seemed she was constantly dropping things so I'd have an opportunity for a good view when she bent to pick them up, but there was no spark to it. She acted like she thought she had to do it in competition with the other girls, but she was getting no joy from her actions. Meanwhile, I had a severe case of blueballs.\n\nFinally, I decided I had to do something. I couldn't let Lynn go on this way. I was going to try some amateur psychology. I had no idea what I was doing, but I really couldn't pull Deidra in on this one, and I didn't know who else Lynn could talk with. Most of the team was gone Thursday and Friday for a tourney, so I had a better chance to get Lynn alone. \n\nI waited until after dinner on Thursday evening, when everyone else was studying, and, fortunately, I had no requests for tutoring. \"Lynn, would you shut the door for me, please?\" \n\nShe looked surprised, for unless she was bathing me or something of the sort I had an open door policy whenever I had one of the girls in the room. I waited until the door was closed and then patted the bed next to me. \"Could you come here for a couple of minutes? I'd like to talk with you about something.\"\n\n\"Did I do something wrong?\"\n\n\"Not that I know of. I just want to talk, and I don't want to be interrupted.\" I patted the bed again down by my waist, and I waited until she sat down gingerly on the edge. I reached for her hand and held it, stroking it gently. \"Lynn, sweetheart, tell me what is wrong. What has you upset? Have I done something to offend you?\"",
        "Lynn wouldn't look at me, but hunched over, looking at her feet. \"No, you haven't done anything, Toomas.\"\n\n\"Then what is the problem, sweetheart? Are you upset because I shot Shawn?\"\n\nHer head snapped up and she looked me in the eyes. \"Not for a moment! I'm glad you did! I owe you my life, and I don't have any way to repay you, other than to care for you, and that isn't enough.\"\n\n\"Is that the problem? Having to care for me?\"\n\nShe shook her downcast head, tears dripping from her cheeks. \"I want to. I love being with you and caring for you, Toomas.\" She lifted her tear-streaked eyes and looked at me. \"I want to quit school so I can care for you all the time instead of going to classes, but I have to let the other girls in here instead, and I know how they tease you, and they are all prettier and sexier than me, and you hardly know I'm even here.\"\n\nHer chin dropped to her chest and tears flowed in earnest. I reached out and took her chin in my fingers and turned her face toward me. \"Do you really think that? You think they are prettier and sexier than you, and that I don't notice you?\" A gulping sob, a sniffle, and nod of her head was my answer.\n\n\"You haven't looked in a mirror in a while, have you?\" Again, I pulled her chin around toward me. \"Lynn, you are a lovely young lady. You have caught my eye every time you've been around since you first moved here. You're cute as can be, and you don't have to worry about anybody else being more attractive.\"\n\n\"You're just saying that.\" \n\nI shook my head, and was surprised to have Lynn launch herself at me, wrapping her arms around my neck, sobbing on my shoulder. All I could do is put my arm around her and hold her to me. That was no sacrifice at any time, though I felt a little guilty about enjoying the embrace under the circumstances.\n\nIt was only a few minutes before the sobbing settled to a few heavy sighs, with Lynn burying her face into my neck and snuggling closer, or at least trying, and she didn't release the death grip she held on my neck. A last sigh, and then the breathing became slow and rhythmic. She had cried herself to sleep. All I could do was hold her carefully, keeping my hand in a safe place so she wouldn't waken and think I was trying to take advantage. Little Toomas didn't pay attention to where my hand was, though. All he noticed was a cute young lady in my arms, snuggling her breasts against my chest, her breath tickling my neck, giving me goosebumps . . . and some lascivious thoughts. It took only a few minutes and Little Toomas was standing at attention and my poor aching balls were complaining.\n\n****************\n\nSomething awakened me from a sweet dream, leaving me disoriented, not knowing where I was or what was happening until I realized a warm, moist feeling of movement on my penis. In the near dark it took me a moment to discern what was happening, then I groaned and tried to push Lynn's head away, but she was not about to let me. In the darkness, I could just see her eyes looking up at me, and I heard her moan, although I felt it much more than I heard it. Her tongue was stroking beneath the crown, and her fingernails very lightly scraped at my tender balls drawn up tightly against my body. I could feel the impending release and gasped out a warning just before I erupted in the most wonderful, yet painful, ejaculation I have ever experienced. \n\nSo much teasing in the last few days, and no opportunity to get release, had me in a painful state that could only be remedied one way. I pulsed and pulsed, overflowing Lynn's mouth, though she valiantly tried to swallow everything. \n\nWhen I finally finished, Lynn pulled off her top and used it to wipe up the overflow before kissing the head of Little Toomas lightly. Then she dropped her top to the floor and crawled back up to snuggle her face against my neck again with a sigh of contentment. \"Feel better, now, Toomas? Thank you, for letting me do that for you. I love you.\" Then she snuggled her bare breasts against me and settled down to go back to sleep. Dumbfounded, I was right behind her, but this time my hand was on her breast\u2014where she put it.\n\n*************\n\nLynn's alarm went off at six o'clock the same as every other morning, and I woke up with her in the same position in which we had gone to sleep. The little minx murmured something into my neck and then kissed it tenderly, sending goosebumps down my arm. I disengaged my hand from her breast guiltily, but couldn't keep myself from looking as she reluctantly disengaged.\n\n\"Don't go anyplace.\"\n\nLynn slipped off the bed and turned off her alarm, then turned to face me unashamed. \"Thank you, Toomas. That's the best sleep I've had since you got shot.\" She glanced down at her soiled top lying on the floor and giggled. \"You sure had a lot built up in there, didn't you?\" Then she covered her breasts lightly with her hands. \"I should feel embarrassed to have you see me like this, but I'm not. Nobody has ever seen them before.\" She slipped her hands under her breasts and lifted them, as if offering them to me.\n\nShe knew she had my full attention, especially when her hands slid down across her flat belly to her waistband, then down further, taking the pants with them, letting them drop to her feet. She never took her eyes off of mine while she kicked them and her panties to lie with her top. One quick step and she was back beside the bed, throwing back my sheet. \n\n\"Now, we're not going to have any more arguments about me giving you a proper bath, are we?\"\n\nI knew I should have said something, should have stopped her somehow, but I was mesmerized by her actions and it seemed I had no voice. Especially when she climbed back onto the bed and straddled me. There was no foreplay. She grabbed hold of Little Toomas and settled herself down over him slowly until she had settled against my pelvis.\n\n\"Toomas, you have no idea how I've dreamed of doing this for so long.\" Her breasts came down to cuddle on my chest, and her arms went about my neck. \"I'm glad I don't have a class until eleven, today,\" was what I heard whispered in my ear, just before she nibbled on the lobe. \"I'd a lot rather do this than go to class.\"\n\nI finally found my voice, and my guilty feelings took over. \"Lynn, we shouldn't be doing this. Isn't this against your Hippocritic Oath, or something? You shouldn't be doing this with your patient, should you?\"\n\nLynn giggled, and the feeling on Little Toomas was exquisite. \"You silly man, you. Doctors take the Hippocratic Oath, not CNA's. Are you unhappy with your treatment?\" She sat up on me to look me in the eye, leaving me looking at her luscious breasts instead. \"I suppose you can fire me if you don't like the way I'm caring for you, and your daughters can find a nice cheap nursing home for you.\"\n\nShe giggled again and began slowly slipping up and down on little Toomas. \"My vibrator isn't nearly as big as you are! I had no idea how good this could feel.\"\n\nMy hips tried to respond to her movements, but with that heavy cast where it was, I couldn't move much, and what movement there was, was uneven and lopsided. I'm sure the cast had to have chafed Lynn's leg, but she didn't complain. Her hand flew to her clitoris and she gasped, \"Please, Toomas. Play with my boobs. Pinch my nipples.\"\n\nGuilty though I felt at doing so, I gladly complied, fondling both delectable breasts, tweaking her nipples between thumbs and fingers. I knew I wasn't going to last long, though I tried as best I could to give her opportunity. It didn't work. I gave out a big grunt and tried to drive myself through her, nearly tipping us over, as I came, spewing a huge load.\n\nWhen Lynn felt my first shot of come, she drove herself down onto me, while trying to stay on top as we twisted. Her finger, trapped between our pubes, pressed onto her clitoris tightly enough to push her over the edge, too, and she collapsed on me, whispering my name over and over, but this time, the tears I felt on my neck were happy tears."
    ],
    "authorname": "SonofCallicious",
    "tags": [
        "exhibitionism",
        "coeds",
        "no bra",
        "teasing"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/coppernicous-pt-04"
}