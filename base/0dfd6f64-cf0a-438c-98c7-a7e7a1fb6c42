{
    "title": "The Twelve Vitali Ch. 10",
    "pages": [
        "Authors note: Hello everyone. Thank you to everyone who has voted and left comments, they mean the world to me and motivate to write more. I appreciate your support more than you all know. Thank you once again to Paul who continues to be my second set of eyes. ~ellie. \n\n*****\n\nCat was getting ready to go out to the Donati family concert when Pete arrived with a courier package for her.\n\n\"What's this?\" Cat frowned, checking the label and opening it.\n\n\"A courier just dropped it off,\" Pete said curiously, as Cat pulled a Tamagotchi pet from the small courier bag with a small card.\n\n\"I wanted one of these so badly when I was a kid,\" she laughed and opened the card. \"Thought you might like some company while you were painting and this little guy is pretty quiet and shouldn't disturb you too much. Matteo.\" she read.\n\n\"I didn't even know they sold these anymore,\" Pete commented. \"You're not going to open it?\" he asked as she went to put it away.\n\n\"If I opened it now I'd play with it all night, and I doubt you'd be very happy with a date who was more interested in a digital pet than anything you had to say,\" she laughed. \"I can open it later,\" she grinned.\n\n\"In that case, thank you for your consideration,\" Pete smiled.\n\nCat had a wonderful time at the concert, and she found that they were in the company of at least one of the brothers or cousins of the table during the night. They were all performers, some reluctantly took the stage, but they all had talent. The family were jovial, and she laughed so much throughout the night that her sides and cheeks hurt. She was glad that Pete had made an effort to get her to leave her little cabin for the evening. She'd managed to clear her head and think of something besides her painting. She kissed Pete's cheek and thanked him for a wonderful night after the concert, then she went to bed to get some much needed sleep rather than painting anymore.\n\n\"Eight days,\" she said to her digital pet the following morning, \"Do you think I can keep you alive and get all my work done in eight days?\" The truth was she was surprised at how much she could do with a firm vision in her mind and a dedicated space in which to work. She put the small digital pet down, smiling at the fact that Matteo had chosen something to send her, something from a childhood memory rather than an expensive or flashy gift.\n\nMatteo had taken up so much of her time, and even when he wasn't in the apartment with her she had thought of him constantly. Now she had to consciously remove him from her thoughts again and try to immerse herself in the painting as she had done so easily for the last week when she had believed he had moved on after she asked him to leave. She closed her eyes and let her mind wander into that daydream state she had created where she belonged to a large, loving family, just like this. In her dream, these men were all her brothers.\n\n*****\n\n\"Eight days to go,\" Matteo said, walking into the project manager's office where David sat at his desk trying to catch up on all the work he'd missed yesterday.\n\n\"You realise she's mad at me too, now?\" David groaned.\n\n\"What for?\" Matteo chuckled. \"Talking to me? You haven't done anything wrong. I've barely seen you at all today! But I am going to have to send another ransom demand, so if you'll just hold this card up so I can take a photo,\" he grinned. \"Then you can say I tortured the information from you. Do you want me to punch you to make it look real?\"\n\n\"You can't punch an employee,\" Hilary said, standing at his side. \"I could get a make-up artist if you need the effect so badly.\" She added with a perfectly straight face and droll tone.\n\n\"What are you going to do when none of this works? She wasn't sounding very impressed when I talked to her, or should I say listened to her yell at me when she called,\" David tried to reason with the man who had to face the fact that his sister couldn't be made to do anything she didn't want. Ned had tried that, as she pointed out to him in the angry phone call after he had contacted her for Matteo, and it made him rethink what his boss was doing.\n\n\"I can be pretty persuasive when I want to be,\" he shrugged.\n\n\"She can be pretty stubborn when she wants to be,\" David countered.\n\n\"Yeah, that's true, but let's go with the premise that she finds me irresistible,\" Matteo grinned.\n\n\"I hate to point out the obvious, but she seems to be resisting you quite well. Just wait until she gets back, then you can talk to her face to face,\" David shook his head, trying not to smile as Hilary sniggered at his observation. He was trying to be tactful and not call him a stalker, like Ned, because he liked this man, not to mention the fact that Matteo was his boss.\n\n\"I'm not used to having to wait for what I want. Ask Hilary, I'm prone to tantrums, the fact that I agreed to ten days is a big step forward for me. The old me would have been on a plane crashing the Donati gathering and making her talk to me,\" he chuckled.\n\n\"Man, you need to take a chill pill,\" David tried to keep the frustration out of his voice and feeling like he needed help to make Matteo see the mistake he was making. \"Why don't you come to Footy training with Frankie and me tonight? I'm helping him with a junior team, and we go for beers after. It will help take your mind off stalking my sister, which I have to admit makes me more than a little uncomfortable, given her history.\"\n\n\"Stalking?\" Matteo was horrified by the word. \"I'm not secretly following her around. I called her and told her I want to see her and talk to her.\"\n\n\"And she said no,\" David said pointedly. \"There's a fine line between an ardent admirer and creepy stalker guy.\" He shook his head. \"Her ex-boyfriend liked to get his own way too, and when she finally said no enough times for him to hear it he almost killed her, and I want to believe you're not that guy, but then you admit you're not good at being told no and accepting it. You get what I'm saying, right?\"\n\n\"I hear you, and I swear I'm not that guy,\" Matteo said, shocked and appalled that David felt the need to protect his sister from him.\n\n\"Then give her the time she asked for. Send her a text, if you have to, and let her know you're thinking of her, but, seriously, dude, you have to calm down. She didn't say no, she just said not yet,\" David reminded him, trying to take the edge off his words.\n\n\"Okay, I hear you,\" Matteo felt deflated. \"No more pumping you for information or ransom threats. Are flowers okay? Just a bunch, not a truckload,\" he qualified.\n\n\"She likes roses,\" David sighed, seeing that Matteo needed to do more than just send a text, and worrying about the fact that his sister seemed to attract obsessive men who couldn't hear the word no.\n\n*****\n\n\"I think I need to see Romy again,\" Cat mused aloud as she stared at the almost complete portrait of the twelve Donati men.\n\n\"Why is that?\" Pete asked from his customary late night position on the far side of the room behind her painting where he couldn't see the canvas.\n\n\"Something just doesn't feel right about who he is in the scheme of things. I know he's important, he's the HR guy, but I'm not sure I have the whole picture,\" she tilted her head from side to side as she looked at the figure of Romy sitting on the stone staircase. Her modern vision of the knights of Camelot was a fusion of modern day warriors and steampunk themes. The tailored trousers and contrasting silk vest Romy wore over a white-collar shirt seemed somehow wrong, and she felt she was missing something about him.\n\n\"I can help with that,\" Pete offered. This could be an opening to other conversations he'd like to have with Cat in the longer term, so he closed the book he'd been distracted by as he watched her and turned his full attention to what she was saying. \"What is troubling you?\"\n\n\"He's a lawyer, but for the family he is the human relations manager, the two just don't seem to go together somehow,\" Cat frowned.\n\n\"There are a lot of layers around human assets in our family. Use the tried and true onion theory. At the edges, the skin of the onion are the people we come into contact with in our daily lives; in my case, the other doctors who work in my clinics, the nurses and admin teams I get to hire with only a basic background check being done. The closer you get to the centre the higher the need for thorough background checks, and in some cases non-disclosure statements, like yourself,\" he explained.\n\n\"So, he does the background checks?\" she asked. Remembering one had been done on her by not only this family, where she was close to the centre, but also the Vitali family when she had become involved with their inner circle.\n\n\"No, that would come under Ben's role as Watchman. Ben's intelligence and spy shit man,\" he chuckled. \"Romy is more, perhaps, involved in recruitment, and has access to all background checks as well as requests them. I guess there is a bit of an overlap there with Ben and Romy. The most important work comes with the recruitment of the people who choose a life of serving our family and the contracts they are offered in return for complete servitude.\"\n\n\"Like the maids and cooks?\" she asked, trying to follow what he was saying.\n\n\"Yes,\" he confirmed, \"But unlike normal employees, who do a day's work and get paid a day's wage, the people who serve our families as maids, cooks, gardeners, nannies, sell themselves to us for a set number of years for a very lucrative pay off at the end. They choose a life of being owned like the slaves of olden days, except at the end they get a large payout. No one is forced or coerced, and if they choose to leave early there are clauses in the contracts that allow that. Most, though, stay and take another contract, sending the money they get at the payout to relatives or investing it for their retirement,\" he continued to explain seeing her shocked expression.\n\n\"Romy runs a training facility for these people and creates the contracts for individuals depending on their skill base and how long the contract will be for. For housekeepers, or nannies, that could be quite a long time. For the Kept it is more detailed and requires more training than the other household staff,\" he tested the waters to see if she had heard of a Kept.\n\n\"The Kept are like Mistresses, right? So, they get training in what? Kinky fuckery?\" she asked unselfconsciously as she took in what he was saying. The whole idea of slavery was strange, but if these people chose to sell a few years of their lives to families who clearly looked after and cared for their staff then who was she to judge them.\n\n\"Sure, kinky fuckery works,\" he chuckled. \"Though I have to believe you have read fifty shades of grey more than once using that term.\"\n\n\"Well, I had to know what everyone at work was talking about,\" she laughed lightly, not denying the accusation. \"So, you're telling me that Romy has his own red room of pain where he trains these girls in kinky fuckery and then sends them to work for family members?\"\n\n\"I don't believe Romy trains them, no. There is a facility where he employs trainers, as well as a medical staff that I assist with. Romy does Pro bono work for the public prosecutor, which puts him in a unique position to recruit sex workers and or drug addicts who have found themselves on the wrong side of the law. He offers them a safer, more secure workplace with a great benefits package and a large windfall at the end of their contract. Again, they are free to choose what they will or won't do. Not every Kept enjoys the red room of pain, and those that do rarely enjoy all of the kinks and fetishes of that type of kinky fuckery,\" he said quite openly. \"Most Kept retire after a few years as very rich women.\"\n\n\"It sort of sounds like he preys on the vulnerable in society,\" Cat pursed her lips considering his words.\n\n\"It's a very long recruitment process, they are given six months to clean up and get healthy while testing the waters before contracts are signed and the real training begins. Trust me when I say no one is ever forced or coerced into such a lifestyle. More often than not he and his trainers have to turn away girls who seek out the opportunity to serve the family in this way. There are thorough psychological analysis, health checks and counselling available to every candidate,\" Pete defended the recruitment program for the Kept. \"It's a very small operation, most of the recruitment and training is done by another family who have a specialist training facility and hospital set up for rehabilitation and training. It's where we send family members who may have developed drug habits or require a more intense trial before joining our family. Peri went there before marrying Josh.\"\n\n\"I guess it's safer than street corners or violent pimps,\" she remembered a few of those working in her old neighbourhood. \"Members of your family have to do training as Kept?\" She asked, and then wondered if she was wrong to accept what he was saying about those that chose a life of being an indentured servant. He was talking about desperate people selling themselves into slavery.\n\n\"For the women who join our family, it is more about deportment and public speaking, creating that public persona of a lady in all facets of their life. I expect that if she was engaged to a man who enjoyed a true Dominant and submissive relationship some training in that area might be involved. Would it help you to understand if you talked to one or two of the Kept yourself?\" he offered.\n\n\"The Kept get special training, but everyone who works for the family has some training?\" she asked after a minute, unsure if she did want to meet a Kept face to face and going onto less taboo topics.\n\n\"Yes, there are certain protocols expected from those who serve the family. Did you watch Downtown Abbey at all? That Victorian era type of hierarchy of upstairs for the family and downstairs for the servants?\" he asked.\n\n\"Ah, I get it,\" she nodded. Thinking of them as servants and Mistresses rather than slaves was slightly more palatable to her.\n\n\"Would you like to talk to one or two?\" he asked again, wanting to clear up any misconceptions.\n\n\"No, but I think I would like to peek into a real-life red room of pain,\" she giggled and picked up her palette again, swirling her brush into the black and yellow before adding a touch of white.\n\n\"That could be arranged. There is a private club attached to the training facility, I could escort you there once we are back in the city,\" he offered perhaps a little too eagerly. \"You would have to pose as my submissive for the night though. I promise no kinky fuckery unless that was what you wanted, but then I may not be the man you would want to be there or enjoy a night of kinky fuckery with,\" he said in an enquiring tone. It was as if he was daring her to admit she might be attracted to him or that she intended to see Matteo again.\n\n\"Let's leave that thought on the back burner,\" she laughed and blushed slightly. \"I'm curious, but I'm not sure I'm that curious,\" she continued to laugh. She added a gold fob watch poking from the pocket of the rich vest and a long gold chain looping from it dangling to Romy's thigh in the painting. In his hand he held a black cane surmounted by a jewelled handle, and she resisted the urge to give him a hat tilted jauntily on his head. Her mind stayed on the training of the Kept, and she couldn't help thinking of him as a pimp now, even though she knew that wasn't a fair comparison from what Pete had said.\n\n*****\n\n\"Honestly, Matt, I'm starting to think you're stalking me now,\" David chuckled, looking up as Matteo walked into the project managers office. \"The guys are starting to tease me about being the bosses pet.\"\n\n\"You are,\" Matteo shrugged. \"You're the first guy around here in years who isn't afraid to be honest with me and tell me when I'm an idiot. Most people just do what I tell them without any arguments. Not that I want anyone else to start telling me that my brother is a prick and I'm an asshole, but it's been a refreshing change. I'm not here about your sister, by the way. I took your advice and I'm not being the stalker guy. I came to see how your orientation night went at University.\"\n\nThe truth was that Matteo was having difficulty not being the stalker guy and flying out to the Donati property to make Cat talk to him. Each day she remained there in isolation he felt her slipping further and further away from him. So he tuned into what her brother was saying in the hopes of hearing something she might have said about his scholarship.\n\n\"It was weird, because it's just me at the moment, but most of my classes will be with the second-year quantity surveyor cohort. They aren't due back until the second week of February, so I have a little bit of time to wrap my head around the course materials,\" David said. He had never been much of a scholar, but life was tough back then, and he had more reason to want to study these days.\n\n\"That's great. You're the first one going through this scholarship program, so I'd like lots of feedback so we can make changes if necessary,\" Matteo said.\n\n\"Sure. Now would you like to tell me why you're really here?\" he asked.\n\n\"I really was here to ask you about the scholarship, I have a lot of resources tied up in that, and I need to know it's working right from the get-go,\" Matteo said. \"It doesn't hurt that I like your company as well and thought you might like to go to a pre-season game.\"\n\n\"Hell yeah, I do,\" David grinned.\n\n\"Don't you want to know who's playing?\" Matteo chuckled again.\n\n\"Sure, but pre-season games are hard to come by, so I'd watch Swans get their asses handed to them by the Lions and be happy,\" he said easily, showing his dislike of the non-Melbourne teams.\n\n\"Cats and Bombers,\" Matteo chuckled. \"I'll text you the details.\"\n\n\"You are stalking me!\" David burst out laughing. \"But right now, I don't really care.\"\n\n\"I'm not a stalker, you mentioned the Cats when we went out to see Frankie, and I always go to the Bombers pre-season,\" Matteo said defensively. \"I'm not that guy!\"\n\n\"I wasn't complaining that time,\" David continued to laugh. \"You can stalk me all you want if it gets me to Cats games.\"\n\n\"I have work to do,\" Matteo grumbled and walked out of the office. He honestly did like David and the fact that, like his sister, he spoke his mind unreservedly. Being friends with him was no hardship, and if it got him closer to Cat again, then it was a win-win for everyone.\n\nHis mind ran over the email response he had got from her after he had sent the flowers and asked her to still use her work email that she had when she had worked for Vanessa. He hadn't been surprised to find her response came from a Gmail account instead. He had, however, been surprised at its content.\n\n\"Dear Matteo,\n\nThank you for the roses, they are lovely and brighten up my little corner of this busy gathering. I have been working non-stop with little time to truly enjoy the festivities. Pete makes sure I go outside at least once a day and has been a good friend to me here.\n\nI have also become friends with Bianca, who visits me almost daily. She would love to see you before she returns to Prague if you come up to Brisbane once the gathering is over. She claims you are her favourite nephew, although I find it hard to believe she could possibly be your Aunt.\n\nDavid tells me he is no longer concerned about losing his job because of me, thank you for that. Though I am sure you were never seriously considering it, were you?\"\n\nI will call you when I have returned to the city and we can make a time to talk. You were right, we do need to talk, but I need to finish what I came here to do first, and I hope you understand how important this is to me.\n\nBe well, Matteo.\n\nCat.\"\n\nMatteo had read the short email so many times he knew it by heart. It was warm, he thought, despite the content being not what he wanted to hear. He considered her friendship with Pete, but knew the man was married to his job and had a Kept that he'd had a relationship with for over a decade, which seemed to fill that void in his life without any complications. Perhaps as he grew older Pete was finally preparing to settle down with a family of his own and Cat was someone that appealed to him. Perhaps he was just being nice to a girl who needed a friend. He wasn't sure what to make of it.",
        "He wanted to at least call Bianca and find out about Pete and Cat, but he had taken David's warning to heart, and he didn't want to be the obsessive stalker guy; especially when officially he and Cat were not a couple anymore. Not that they had been for very long, but he felt like he had loved her for a lifetime with her in those few short weeks. He had been as big of an idiot as Ricco had been to let her walk away, he realised that now, and he needed desperately to fix everything with her.\n\nFacing his demons or demonesses, if he was honest, had been cathartic, but it had been Theresa and her honesty about loving his fathers, even though she knew she lived in the shadow of Maria, which caused her heartache every day, that he realised what he had done. He didn't want the woman he loved, or at least thought he could love, thinking that she was a pale imitation of Nik or his mother just because they'd been the ones to hurt him so badly he had shunned opening himself up to loving again and being vulnerable to heartache.\n\nWhat he wanted was a chance to show her how much she had come to mean to him, and that, despite his best efforts to remain aloof, he wanted this relationship with her, messy emotions and all. He didn't want to tell her in an email, and he knew he didn't want to say anything over the phone now and was grateful that she had shut down his attempts to contact her when he had first returned from the Kimberley. He needed to see her and look into her eyes and touch her and demonstrate what he was feeling.\n\nHis email response to her had been equally as warm and full of pleasantries without touching on the subject they most needed to speak about.\n\n*****\n\n\"Do you love him?\" Pete asked directly one evening as he sat in the chair opposite her painting.\n\n\"I think I was falling in love with him,\" she smiled thinking of Matteo. \"He's a good man. It's not just all about big business for him, he gives back to the communities he works in, he makes sure his buildings are beautiful and have green spaces. He tries to employ locally and gives internships to the underprivileged who don't have ivy league educations, and he a genuinely nice guy,\" she finished lamely.\n\n\"Not bad to look at either, or so I've been informed by many of the female members of my family,\" he chuckled.\n\n\"I find you fascinating on so many levels, and I would like us to be friends. If I'm honest, I wouldn't mind seeing if there could be something more between us, but I'm a realist, and I can see that the relationship between you and Matteo is far from over. I like the women I get involved with to be devoted to me and only me. So, as your friend, I am going to help you, and him, get over some of the biggest hurdles in your relationship and offer you both a lifetime of owing me for your ultimate happiness,\" he smirked at her. \"I'm going to tell you the truth about Matteo and his destiny and what would be expected of you if, as I suspect, he has come to his senses and wants to reclaim you as his.\"\n\n\"Reclaim me? I'm not a possession people can pick up and put down!\" Cat argued indignantly.\n\n\"No, you're not. You are, however, dealing with a large group of Alpha males and should see why I might have said that, especially given some of our conversations. Matteo has been brought up in a very similar fashion to all of the men you have been dealing with over the last few weeks. If you think about it you will see why I used that term, Alpha, rather than dominant,\" he smiled again. \"These men may not be as obvious about it as their fathers were, but each and every one of them is a dominant man in this family, and people give way to them and allow them a certain amount authority over their lives in exchange for being close to the inner circle that is the table. The twelve are equals, but they stand above everyone else here, including their wives, except perhaps Peri, but she is submissive by nature, and behind closed doors that strong, confident woman kneels at the feet of her husband and her lover and allows them the domination they seek.\"\n\nCat tried to wrap her head around what he was saying. Peri was amazing, Cat couldn't imagine her being a submissive, not with the definition she had in her mind of what it meant to be one.\n\n\"I have to keep a close eye on her because her personality borders on masochistic where she will push herself to do everything and be everything to everyone until she collapses. Both Josh and Dante will step in and make her slow down from time to time. Dante is hopeless at giving her real limitations, but Josh is able to put severe restrictions on her and limit her business and family commitments where and when necessary. Still, she will, on occasion, drive herself to that point of exhaustion in order to please everyone,\" Pete explained.\n\n\"She does always seem extremely busy,\" Cat adjusted her thinking, realising Pete had not meant the word submissive as a purely sexual thing.\n\n\"As I understand it you are not on any time schedule to get this portrait done. Yet you lock yourself away in here every day working non-stop while a festival is only a few feet away from where you could be enjoying yourself and interacting with the very people you claim to be here to get to know,\" Pete pointed out. \"Tell me what drives you to work so hard on this?\"\n\n\"I know how eager Peri is to have this done, and I found I was distracted easily when I was in the city and trying to work,\" she admitted.\n\n\"Distracted by a domineering man?\" Pete smiled knowingly. \"Not all domination is sexual, though by nature one would expect it. Just as not all submissives are sexual masochists. You're a woman who will give in to situations she may not always like if it is for the benefit of others. You put your needs aside to make a life for your brother who gave you little in return, and even now you worry that your actions may have hurt his career and feel guilty about that. You looked after a mother for years that showed you little love and attention. You, like Peri, have great potential given the right circumstances to use your capacity for putting others first to become a well loved and respected figure in both the Donati and Vitali families.\" He paused registering the shock on her face.\n\n\"So, I will ask you again. Do you love him? If you love him, I will tell you all of the obstacles that you will face in trying to be the woman he and his family want and need,\" Pete said seriously.\n\n\"The rational side of my brain would ask how I can answer that after only a few weeks, I barely know him,\" she said, stunned by what he had just said about Peri as well as herself.\n\n\"The emotional side? Your heart tells you what?\" Pete pushed her.\n\n\"That I do, or at least I could if he would let me,\" she sighed sadly.\n\n\"Is that what you want?\" he tilted his head. He needed a commitment from her before he went any further.\n\n\"Yes, I think so, but...\" she began to make another excuse.\n\n\"It was a yes or no question,\" he cut her off. He stood and walked toward her, \"There is a lot you need to know, and though I have no doubt you would learn over time, I am willing to help you speed up the process, not so much for you but for him. It's time he moved on, and it seems he finally wants to, with you.\"\n\n*****\n\nCat had been working on the portrait solidly for three weeks, and as the last of the extended family packed up their belongings for the long trek home, she paced nervously in her cabin. Whether she was ready or not she and the painting were returning to the city today. She had shown only Peri, who had deemed it complete and told her to stop being too critical of her own work. Any further embellishment would be redundant now. The men, themselves, would view it in a few days time once it had been framed and hung in the House of Lorraine, and she waited nervously for the steward and his men to come and box up the canvas for transport to the city.\n\nCat resisted the urge to lift the cover and seek out tiny blemishes in her work to fix and went back to packing her belongings for the trip back to the city. She had to decide what she would take with her on the flight and what supplies he would have delivered by mini-movers. She had stayed an extra week and knew that Matteo had not been happy about having to wait to see her, but he had respected her request to wait until she returned to the city before they saw each other again.\n\nShe wasn't sure what would happen when she returned to the city. Peri had offered her more work immediately after seeing the completed portrait. Pete had also hinted that he would like to maintain the close open friendship they had enjoyed during the gathering. Her mind, though, was wound up in seeing Matteo again, and she couldn't make any plans until she talked to him. She had thought that the pain of missing him would diminish as the days stretched out and she had little contact with him, but she missed him even more from those small snippets of information about work and his life that she gleaned from his emails.\n\nDavid had become Matteo's friend, she knew that much, but David had refused to talk to her about him and had told her that he had cut Matteo off similarly from talking to him about her. He didn't want to be in the middle of anything weird, and he'd already told Matteo to back off and give her the space she had asked for. Cat smiled thinking of David, she missed him so much, but when she had first come to Brisbane she had packed up her life indefinitely and left her brother to get on with his without their co-dependency being an issue. It was the right move, she knew, for both of them, but she couldn't help but want to see him and talk to him properly.\n\nShe was lost in thought when the steward arrived, and she supervised the packaging of the canvas closely. She apologised for being pedantic as she made them adjust the way it sat within the slim box one last time before letting them leave it and all the sketch books she had used in its creation. They would be delivered directly to a gallery Peri had picked out for its initial showing. Then she picked up her bags as she followed them from the cabin.\n\n\"I love it!\" Peri had enthused when she saw the worried look on Cat's face. \"I can't wait to show Josh and D.\"\n\n\"I think I'd rather not be there when the men come to view it,\" Cat said, feeling awkward. First impressions were everything, and people rarely hid their initial thoughts behind plain veneers. She wasn't sure she wanted to see the disappointment in any of the men's eyes about the way she had portrayed them on this canvas.\n\n\"But you have to be there. It turned out even better than I suspected it would. It is fantastically amazing!\" Peri exclaimed. \"You must want to see their faces as they take it all in.\"\n\n\"Maybe if I can hide somewhere and watch from the sidelines,\" she acquiesced.\n\n\"I'll take those for you,\" Pete said, seeing her struggling with the bags as she walked beside Peri.\n\n\"You can hide behind Pete, you seem to have been doing that for the last few weeks anyway, so no one will be surprised,\" Peri laughed easily. \"But I'd like to show just the two of them first, because Dante has the framers at Lorraine, so he will probably see it before anyone else, and I would hate to do that to Josh. So, when we land we'll head into the city and meet them at the House of Lorraine.\"\n\n\"I'd like to meet with the framers,\" Cat agreed. \"Can I have my bags dropped off at the apartment on the way?\"\n\n\"Why don't you go ahead with Pete while I settle the babies in at home and I will meet you there,\" Peri smiled. \"I'm sure he won't mind giving you a lift to your apartment.\"\n\n\"She gets the hint, Peri, but she has unfinished business with Matteo in the city. Just give it a rest for now,\" Pete chuckled. \"I know you'd love to see me settled down with a wife and babies like everyone else, but I am happy, trust me,\" he kissed her cheek and moved toward the plane with Cat's luggage.\n\n\"Too pushy?\" Peri asked Cat, who could do nothing but laugh at Peri's crestfallen expression.\n\n\"He's been a really good friend to me, Peri,\" Cat said eventually. \"That's as far as it goes though, he doesn't want to start anything with a girl like me who is still hung up on her ex.\"\n\n\"It's just that you already feel like part of our family, and it was nice seeing Pete relax and enjoy himself with someone for a change. He's usually the odd one out, not that anyone would ever intentionally make him feel that way,\" Peri explained.\n\n\"Maybe you should just believe him when he says he's happy,\" Cat suggested gently. \"He probably doesn't feel that he is the odd one out until you point it out to him.\" She tried to make things easier for Pete rather than rebuke Peri.\n\n\"You're probably right,\" Peri nodded as they boarded the plane. \"Still, it was a nice thought, even if I got it completely wrong.\"\n\nPerhaps everyone had the wrong impression of her friendship with Pete, Cat thought, and became concerned with the fact that because most of the family had returned to the city days ago that someone may have said something to Matteo. He wasn't expecting her back for another few days, and if she said nothing and arrived at her apartment with Pete it could make him believe that those impressions were true.\n\nShe picked up her phone and typed in a quick text to tell him she was arriving back in the city today but would be in meetings until late. She suggested they meet in the next day or two whenever he had free time to make the trip to Brisbane. She wanted no misunderstandings between them when they finally got to talk about what had happened before she left.\n\n\"I've been patient and don't want to wait any longer to see you again. I will be there later tonight.\" Matteo's text came back to her almost immediately, and she felt butterflies flare to life in her stomach at the thought of seeing him again. She didn't reply. What could she say without starting an argument, which she didn't want to do. Rather than the ten days he had given her, she had taken thirteen, and she knew that it had been disappointing for a man who was used to people doing what he said when he said it.\n\n*****\n\nRicco watched as his brother's face lightened and a rare smile began to appear. He didn't have to guess who had just texted Matteo, and he felt a small twinge of jealousy. When he'd heard about the breakup he had considered his fathers' about predictions of the future Jacobi envisioned as not being the only future for this family more seriously. He had wondered if he should consider living a life of his own if it eventually could include Cat. He knew she was a long way from forgiving him, but the possibility had danced temptingly through his mind more often since returning from the Papillo.\n\nThe discussions about their father's unhappiness that two of their sons had dismissed the memory of Alessandro's existence so easily had been just as harsh as any of the other trials his siblings had gone through. Jacobi's worldview had been seriously altered, and he had become withdrawn and introspective. It did not mean that they couldn't ascend to be the leaders of the next table, but with the knowledge that everyone on the current table had always viewed Matteo as the second son, Jacobi's unshakable belief in his destiny had been destroyed.\n\nSurprisingly, Maryanne had seemed relieved by the news and had suggested that they just live their lives as best they could and, when the time came, their fathers and uncles would make the right choices, just as they had on her family table. She had reasoned that it had never been their choice and, despite what happened, Jacobi was a born leader, and his destiny would incorporate that.\n\nRicco had been surprised when she went on to admit that she felt they had been unfair to him, expecting him to live a half-life while not fully including them in theirs. Now pregnant, she suggested that she and Jacobi have an extended baby-moon, and when they returned they could talk properly to Ricco about their future together. That moment, above all others, had made him think he could, in time, pursue Cat again if Matteo's plans did not work for them.\n\n\"I take it that was Cat?\" Ricco asked, masking his feelings with an affectionate smile.\n\n\"It was,\" Matteo couldn't help grinning. \"She's finally going back to the city, so I'll fly up this afternoon. If you can cover a few things for me while I'm gone for a day or two?\" he asked hopefully.\n\n\"My work was backed up too while we were in the Kimberley,\" Ricco reminded his brother.\n\n\"I'll let you have the artwork you want for your office in HQ,\" Matteo negotiated. \"Even if Vanessa threatens to disown me.\"\n\n\"Deal. What do you need?\" Ricco chuckled. He'd wanted the wildflower paintings that Cat had painted when they had first started dating. He wanted them badly enough to double his workload for a couple of days if he didn't have to argue with his sister over them.\n\n\"That was easy. Want to tell me why you want them so badly?\" Matteo asked, raising an eyebrow. \"I'm assuming they are one of the series Cat did for the building.\"\n\n\"The wildflower series. Cat painted them when we first started dating, and I taught her how to ride a horse at your place on the coast,\" Ricco shrugged. \"I like them and what they represented at the time.\"\n\n\"Well, that's not awkward at all. It could be worse, I suppose, they could be hanging in my office!\" Matteo grimaced. \"I'd like us all to be close,\" he said at last, thinking over what his parents had said since the New Year and their taking control of his and his sibling's lives. \"I'll have to get used to the fact that you still care about her and she more than likely still cares about you, and you'll have to get used to the fact that I won't give up until she's mine.\"\n\n\"Sounds about right,\" Ricco didn't bother arguing the point anymore. He'd given his brother the go-ahead when they had first started dating, and if he lifted a hand now to try and stop them reconciling, when she obviously wasn't opposed to the idea, then she would never forgive him, and he wanted her forgiveness in the long term. Even if there could be nothing else between them, he wanted her friendship and goodwill. He hated the thought that she would hate him for treating her like a Kept woman.\n\n\"You still good with that?\" Matteo asked, wondering if he could or would stop pursuing Cat if Ricco asked him not to reconcile their differences.\n\n\"I'm never going to be completely happy having to see her with someone else,\" he shrugged. \"I guess I still get to see her if she's with you. If one of the Donatis' decided to move in on her, that would be tough to take. She's been pretty friendly with Pete, from what I hear.\"\n\n\"Did you also hear that she was a gold digger that dumped you because you wouldn't commit and began dating me straight away? Maybe the gold digging conspirators have decided Pete's just as eligible,\" Matteo smirked, not buying into the rumours. He had been irritated by the comment and thought it beneath his brother, but he smiled regardless. He would finally get to talk to her, and much more than that tonight, and there was little anyone could do to dampen his spirits at that moment.\n\n\"I'll give Hilary a call and work it all out. You call the pilot and grab your bag. I'm sure you have it ready to go,\" Ricco grumbled.\n\n\"Thanks, Ricco, I love you, brother,\" Matteo said, coming to his feet and embracing Ricco before leaving and making travel arrangements.\n\n******\n\n\"What I'd like to do,\" Roz, the curator of the Donati gallery said as she walked through the space she had put aside for the small show Peri had in mind. \"Is frame up some of your sketch work, which I have heard are very good, and place them along the walls leading to the final portrait. Cat had talked about giving the sketches to the men who had been so good about sitting for her so often during the Gathering. She had books upon books of sketches done since New Year's Day over a month ago.\"",
        "\"I didn't realise you'd want to display the sketches as well,\" Cat said.\n\n\"They won't take long to frame, I'm assuming they are all standard size. If you can bring them with you tomorrow, we can spend the day choosing which ones we will use.\"\n\n\"I think maybe we should look them tonight. It's just that I've been putting off some things while I was out at the property painting and I'm not sure how much time I will have tomorrow to spend on the sketches,\" Cat said honestly. She made Matteo wait, and she didn't know how the conversation would go later tonight or if she would feel like dealing with all of this tomorrow depending on that outcome.\n\n\"Do you think they would have arrived yet?\" Roz asked.\n\n\"If they went with the movers, then they won't be here for a while yet, and we can get them to drop your equipment here if you like. I'll get D. to call and get a time of arrival for you,\" Peri suggested. \"I'm sure we can work around your schedule.\"\n\n\"We can talk about the framing without the sketches here,\" Roz said encouragingly. \"I assume they are pencil sketches, not charcoal or pen?\"\n\n\"They are here. The sketches came in a separate box with the portrait in case anything happened to it and I needed to make repairs,\" Cat said nervously. They walked through the warehouse space to where the canvas's were being unboxed for the framers.\n\nCat allowed herself to get pulled along by the enthusiasm of the other two women, and she stayed until both Josh and Dante entered the room and told them they had to at least stop for dinner. It was only then that she realised just how late it was and wondered if she should message Matteo to let him know she was still stuck in meetings.\n\nCat walked over to where her bag sat and pulled out her phone. She'd forgotten to turn her phone back on after the flight, and she grimaced as she saw Matteo had left two messages for her. Not that she would have answered him during the flight or the meeting, but she still felt dreadful that it was almost eight O'clock and she was still here. At least she would have tomorrow free this way, whether that was a good thing or not was yet to be seen.\n\nShe scanned the messages as she walked back through the buildings, realising that they were all interlocking by a series of corridors, and found herself in the offices of House of Lorraine where the smell of food reminded her it had been almost eight hours since she had eaten. Reading the messages, she discovered that Matteo had arrived this afternoon and met with Josh and Dante about their building development, and he had told her just to message him when she was done with her meetings.\n\nShe began typing a message when she stopped and looked up. Josh and Dante were here. Did that mean Matteo was here too? She looked around the offices and saw him walking slowly toward her looking even more handsome than she remembered. She smiled nervously; this was not what she had planned for when she saw him again.\n\n\"Hey, I was just about to message you,\" she said, plastering a smile on her face and trying not to let the butterflies in her stomach combine with her hunger to get the better of her.\n\n\"Hi,\" he slid a hand around her waist and leaned in to kiss her cheek before stepping back, wishing he could have just pulled her to him and kissed her properly, making her remember how good they had been together.\n\n\"I wasn't expecting to see you here,\" she said.\n\n\"I had time to kill, and, despite appearances, Dante needs all the help he can get when he's babysitting Josh while Peri is busy,\" he smirked.\n\n\"I'm right here,\" Josh groaned.\n\n\"We know,\" Dante said in a deadpan voice. \"We're the babysitters, and Peri promised us rewards if we kept you safe while she was busy. You didn't have a nap this afternoon, though, which is probably why you're getting cranky.\"\n\n\"I thought he was cranky because we didn't feed him yet,\" Matteo frowned.\n\n\"Cat, come get some food, I know you must be starving,\" Josh invited and put a hand around her waist, guiding her to the small buffet they had set out. On his way, he gathered Peri on the other side of him and grinned evilly at Dante and Matteo. \"Now, ladies, what can I get you to drink?\"\n\n\"You've got to admit that was smooth,\" Matteo chuckled.\n\n\"He's a one-trick pony. He pulled that stunt on the Battaglia once and got away with it. Now he pulls it out whenever he's feeling picked on. The women fall for it because he's so pretty,\" Dante said disgustedly. \"You know you don't have to go along with that every time, Peri,\" he complained.\n\n\"What can I say? The man knows what women want,\" she laughed. \"Right now we want food and something to drink. Thank you, Josh, for being so, considerate.\" Peri kissed him softly.\n\n\"Thank you, Josh, I could really use a glass of wine if you have it,\" Cat played along, kissing his cheek.\n\n\"I don't think I'd mind so much if he weren't so pretty,\" Matteo commented as Josh walked past them to the wine the caterers had brought with them.\n\nThe teasing banter continued throughout the meal as they sat in and around the large desk in Dante's office. Cat was glad to have a single chair, and she sat with her plate on her lap, playing with her food despite being hungry. For his part, Matteo seemed to be giving her some space, or giving himself space. She watched as he interacted with everyone in the office except her. She had believed when he called her that he intended to offer her the proposal again, but now she realised that he must have another reason. Maybe he had realised giving her the apartment was a mistake and wanted it back. Maybe he needed her to sign a non-disclosure statement after all. Maybe he wanted what Ricco wanted and for her to stay hidden as a Kept.\n\nShe thought that she would be able to tell him that she understood why he didn't want to risk his heart again. She thought that maybe they could renegotiate the agreement, but as she watched him she knew that she had been one of the many women who had let him down, and he wouldn't forgive her so easily. She sighed and took her plate back to the buffet thinking to find a rubbish bin there to get rid of the now cold food that she'd barely touched.\n\n\"You barely touched the food. Didn't you like it?\" Matteo asked from behind her.\n\n\"I guess I wasn't as hungry as I thought,\" she said quietly. \"I can grab something later if I get hungry,\" she said, schooling her features and turning to face him.\n\n\"Dante said you and Peri were in there since lunchtime with Roz, you should eat something. You'll need your energy later, I don't want you falling asleep when I'm trying to talk to you,\" he said, the corners of his mouth turning up into a tentative smile. \n\n\"I don't know how long we're going to be here,\" she said, looking to where Roz and Peri sat deep in discussion again. \"Maybe we should talk tomorrow instead.\"\n\n\"No!\" he growled. \"I have been patient. I have waited. I stayed away when you asked me to. We will talk tonight. Whether you want to or not! Now, what would you like to eat and I will go out and get it for you,\" his tone was commanding and made Cat look up at him, forgetting to mask her surprise.\n\n\"Maybe we could pick up a pizza on the way home?\" she asked softly. \"I don't want to seem ungrateful for all of this.\"\n\n\"Then don't drink any more wine on an empty stomach, please,\" he instructed, taking her glass from her hand and putting it on the table. \"I want you to hear and understand everything I have to say tonight.\"\n\n\"Okay,\" Cat said, suddenly unsure of everything she had thought she knew about this man.\n\n\"If you have work to finish I suggest you do it soon before my patience wears out entirely!\" his voice was a low growl, as if he was angry with her, and she could sense a tension in him that she hadn't seen earlier.\n\n\"Matteo, I...\" she began.\n\n\"Have work to do, I know,\" he finished her sentence for her. \"I will wait until you are done as long as you are not planning on pulling an all-nighter,\" he added. \"You really should eat something else,\" his voice softened slightly. \"Please?\" he added as an afterthought.\n\n\"Cat,\" Peri interrupted them. \"Roz and I were thinking that we might call it a night after all and begin again in the morning. I know you said you had plans tomorrow, but I think we have a good handle on which sketches you'd agree to us adding to the exhibit, and you can have the right of veto before we let anyone else see them.\"\n\n\"Considering I just got back today I will have to check on my plans for tomorrow. If they don't pan out I will be here,\" Cat tried to sound normal, despite the fact that her heart had begun to pound in her chest. \"I'll let you know if Mick is able to courier those few pieces up to go with the sketches and portrait. Maybe I should just come in, regardless. I could make it for an hour or two in the afternoon, maybe,\" she said. \"I'm just not sure how it's all going to work because I've been out of town for so long.\"\n\n\"It's fine, Cat, we'll work it out. This isn't our first showing here, there is no need to be so anxious,\" Roz said, reaching out to touch her arm. \"If we have questions, we'll call, and you will see it in enough time to make changes before we open to the family and public if all goes well.\"\n\n\"I'll give you a lift home if you're ready then,\" Matteo offered. \"You seem tired. It's been a long day for you, hasn't it.\"\n\n\"Thanks, that would be nice, as long as you don't mind leaving now,\" she said awkwardly.\n\n\"What am I going to do, stay here on my own? I guarantee they aren't going to let Peri go home alone,\" he chuckled, pointing to Josh and Dante.\n\n\"Oh, I didn't think,\" she mumbled. \"I'll just grab my bag and be ready to go. I'll call in the morning and let you know what my plans are, Roz,\" she said after grabbing her bag from beside the chair she'd vacated. In reality, the sketches all belonged to Peri anyway, and if she wanted to display them, she could. She'd asked Mick to courier the few paintings she still had at home to the museum, and she'd already approved their reframing and use. There was no real need for her to be at the gallery, but she felt like she should be, and if things didn't go well with Matteo tonight, she might well need the distraction and excuse to leave the apartment in the morning.\n\nMatteo placed his hand gently on the small of her back and guided her out to a bright yellow car that looked like it would be more at home on a race track than the city streets.\n\n\"Did you rent a car while you're here this time?\" she asked as he helped her into the car.\n\n\"It's one of Larry's fleet. He was bragging about it over New Years. Apparently they only made two hundred and fifty of these, and it's one of the few high-end sports cars who's production base is in Australia,\" he said as he climbed into the driver's seat and brought the engine to life with a loud rev.\n\nCat hung onto the edge of her seat as they sped through the city, her knuckles turning white as he took corners at alarming speeds making her think they might roll or skid out of control. Neither she nor Matteo spoke as he drove as if it was a race to make it to her apartment. He pulled into the underground parking garage without seeming to slow down, and Cat closed her eyes and braced for impact as the tyres squealed across the slick surface. It took her a moment to realise the car had stopped and Matteo had shut off the engine.\n\n\"Are you insane!\" Cat yelled, reefing open the car door and stepping out, shaking slightly from the terror of the ride home. \"You could have killed us!\" She stared at Matteo for a minute as he too stepped out of the car, and then she stormed toward the elevator.\n\n\"That car is a precision machine, and I was in full control at all times, there was no risk of crashing, because that's what I do! I assess the risk and remain in control at all times! I couldn't have become the man I am today without that ruthless sense of control over everything in my life!\" he yelled back at her, stalking toward her as she backed up against the elevator doors. He heard the lift jolt behind them, and his hand snapped out to grab her arm before she could fall back as the doors opened.\n\nCat gasped, her eyes wide as she almost fell but for his vice-like grip on her arm. Righting herself, she let him push her into the elevator and stood in shock, not only at the car ride home but by the fact that he had yelled at her. She wasn't sure if she was afraid of him or grateful to him for saving her from falling, even though he had caused her to be in that position in the first place. He was definitely mad now though, she realised, and she tried to steady her nerves as the elevator opened again and he propelled her down the corridor to her apartment, still clutching her arm.\n\nHe unlocked the door and pushed her inside, finally letting go of her arm. She instinctively rubbed at the muscle he had gripped so tightly.\n\n\"Sit!\" he growled and pointed at a chair. \"Be warned, if you try to lock yourself in the bathroom again I am fully capable and in the right frame of mind tonight to break the door down!\"\n\n\"You're not acting like a man in control of anything right now,\" she said, bravely standing with her hands on her hips in the face of his demands.\n\n\"Why? Why can't you just do one thing that I ask without having to argue or negotiate?\" He ran his hand through his hair advancing on her.\n\n\"Fine, I'll sit!\" she hissed, putting her hands up in front of her as if to keep him away. He saw the fear in her eyes then and hated himself for putting it there.\n\n\"I am not that guy!\" Matteo raged in the face of her obvious fear of him at that moment. \"I'm not a crazy stalker guy who's going to beat you and rape you!\" The fact that he felt like doing just that then made him realise just how frustrated and angry he was, not with her but with himself. He blew out a large breath and picked up his phone to order pizza for her, knowing that she hadn't eaten much at all today.\n\nCat looked at him in horror. She never accused him of being like Ned, but he seemed so angry with her, and the ride home had terrified her. She watched him order her a pizza with everything and visibly begin to take hold of his raging temper as he concentrated on the small device in his hands.\n\n\"I would never accuse you of being like Ned,\" she said softly into the silence that enveloped them. She didn't want to fight with this man, she wanted to talk to him, to tell him she knew why he wanted the business partnership, and understood that what he had been through as a child would leave its scars on anyone's life. Her mother hadn't loved her, but she had never tried to murder her.\n\n\"Why not? David did!\" he hissed. \"Pizza will be here in twenty minutes. I restocked your refrigerator this afternoon, but you should eat before having a beer or wine. Would you like juice or something?\" he offered as if distracting himself by the contents of her refrigerator which he opened.\n\n\"David?\" she asked, wondering why David would have said such a thing. She stood and walked toward the kitchen where he stood. \"Why would David accuse you of being like Ned?\"\n\n\"He said there was a fine line between being an ardent admirer and crazy stalker guy and that I was making him question which side of the line I was on when it didn't look like I was going to give you the space and time you had asked for,\" Matteo admitted. \"I think he might have actually kicked my ass if I hadn't stopped trying to make you talk to me while you were at the Gathering.\"\n\n\"David threatened you?\" she asked incredulously.\n\n\"Not in so many words, but the implication was there. David loves you, I expect that using him to get to you when he didn't even know we had been involved was a bad move on my behalf, but I was not in the best place at the time, and I wanted... needed,\" he corrected himself, \"To talk to you, and you wouldn't answer my calls!\"\n\n\"I'm here now,\" she said, keeping her voice soft in the face of his anger which seemed to be rising again. \"Why weren't you in the best place at the time?\"\n\n\"Are you?\" He growled. \"You finally text me that you're back and I find you working late and then trying to put off seeing me until tomorrow, and then tomorrow there would be another excuse, no doubt!\" he let his frustration and anger show fully again. \"Are you here now and ready to talk?\"\n\n\"Yes, I'm here, and I'm listening, but all I'm hearing is that you're angry with me. Is that what you want to talk to me about? You wanted to make sure I knew that you were mad at me for saying no to your business proposal?\" She asked, letting her disappointment show in her voice. \"Well, I know now, so don't bother dragging this out anymore. I get it, you hate losing, but I am not a business deal to be won or lost. How stupid do I feel thinking that you had missed me, even just a little bit, when all I could think about while I was away was how much I missed you. You're angry, I deserve that. I'm sorry I let emotions get in the way of your perfect plan. I was prepared to work it out, renegotiate somehow, but I can see that's not going to happen now. Just go, Matteo, you've made your point,\" she said sadly and began to walk away from him to the other end of the studio space.\n\nMatteo watched her, his mind reeling. She had missed him. She had come back prepared to work it out with him. She was asking him to leave because she couldn't see or understand why he was so angry, not with her but with himself and the situation he had once again created because he couldn't face his own feelings for her.\n\n\"I'm not angry, I'm terrified,\" he admitted, following her from the kitchen area, and found he had to pull up as she turned to face him with tears in her eyes that he hadn't seen before. \"You terrify me.\" He accused, and took her in his arms and kissed her. \"Don't ask me to leave again,\" he murmured against her lips before deepening the kiss again and holding her tightly to his body. He held her like that, kissing her for a long time before finally letting her up for air. She hadn't resisted, and that gave him hope that he hadn't fucked everything up entirely.\n\n\"What are you scared of?\" she whispered breathlessly as he finally drew away from the kiss.\n\n\"You, and the way you make me feel. You're erratic and unpredictable, I can't risk manage you. You make me feel things I had thought I had buried long ago. Things I didn't want to feel. I missed you more than I wanted to admit before I even left that day. You make me feel out of control, and I hate that!\" he admitted. \"Being in the gallery tonight, the drive home, even this fucking pizza,\" he looked at his vibrating phone. \"I can control those things; I have absolutely no control when it comes to you.\"\n\nHe answered his phone and went to the door to get the pizza from the delivery guy as Cat stood stunned by his admission and watched as he moved so effortlessly in the space. He waited impatiently at the door as the night guard let the guy in and up in the elevator while Cat went back to the kitchen and gathered plates and napkins, taking them to the table.\n\nHer stomach was still tied in knots, and the last thing she wanted to do right now was eat, but she knew he would tell her to eat, and if it gave him a small sense of control she would force herself to eat a piece. Everything she had learned from Pete about the men of the tables spun around in her mind, and she tried to sort through the best way to approach the conversation they had to have before they could move forward or part forever.\n\n\"Eat something, please,\" he said when he returned to her and put the box on the table between them. He watched as she sat down and took a large piece from the box and bit into it before he moved to the kitchen to grab them both a beer.\n\n\"I want this, I want you, messy emotions and all, but there are things about my family and my future that you need to know. There are things that come with loving and having a future with someone like me,\" he confessed without going so far as to admit he loved her. Once he had told her everything, about his future, his family expectations and the possibility of having to allow Ricco into their relationship, then he would fully open his heart. Until then he needed to guard the small amount of self-preservation he had left because he wasn't sure he could cope with being rejected by her twice.",
        "\"Your family would expect me to complete a trial,\" she said as if it was common knowledge. \"As you're the second son they would probably expect you to send me to the Battaglia, like Joseph Donati did to Peri.\"\n\n\"That's a very real possibility,\" he admitted, surprised at her knowledge, but considering where she had just been and who she had been working with he realised he probably shouldn't be surprised.\n\n\"And being the second son there is a high probability that you will inherit your father's place as leader of your family?\" she asked, but already knew the information thanks to Pete.\n\n\"There is the possibility, but I have six brothers who also feel a very real possibility of inheriting the chair. Jacobi and Rafael are both born leaders. I don't believe it will be me,\" he said carefully, wondering who had told her so much. \"I had almost forgotten how straightforward you can be,\" he chuckled.\n\n\"But if you are chosen, as the next leader, would I need to let someone else into my bed like Peri does, or would it be like having a close, affectionate brother living with us where sex wasn't part of equation?\" she asked. \"I've heard that is the preference of some of the families.\"\n\n\"You sound very well informed,\" Matteo said carefully.\n\n\"I've spent the last month getting to know a family just like yours intimately. I know each of those men now and their roles and responsibilities to their family. They were open and honest with me, for the most part, and if I needed clarification, Pete explained things to me. I understand how important family is to them and you.\" She said in explanation. \"I know what would be expected of me this time if you offered me the partnership again and I took it.\" She took another bite of her pizza, unsure of what he was thinking now and not wanting to say anything else until he had said something.\n\n\"What if I didn't want the business agreement but I still wanted the partnership?\" he asked tentatively. \"What if I wanted more? A real relationship, messy emotions and risk and all the things that scare me that I want with you? My reasons for wanting and needing a fake fianc\u00e9 haven't changed. Only now I want it for real if you think you could still care about me.\"\n\n\"I do still care. If I didn't care I wouldn't be trying so hard to understand you and your family and what this all means for me, for you, for us,\" she sighed. \"If we can work things out between us, do you think your fathers would consider sending me to the Donati for my trial rather than the Battaglia?\" she asked. \"Pete has said he would oversee it,\" she said without thinking about the implications of that for Matteo.\n\n\"You and Pete became very close while you were there,\" his eyes narrowed, and his voice hardened slightly.\n\n\"He was a good friend to me at a time when I really needed one, he never would have violated the trust I put in him by betraying how I felt about you,\" she said stiffly, feeling his disapproval. \"Bianca became a friend too, and also answered my questions about you. You should thank her, because she is the main reason why we are here talking like this right now.\"\n\n\"Oh, and what did Bianca tell you that I should be so thankful for?\" Matteo asked, almost dreading the answer.\n\n\"She told me about Alessandro and your mother,\" Cat said, looking him directly in the eye. \"It's no wonder you don't trust women. I get it now. I understand why you felt you needed to protect yourself with the business proposal. I came back to renegotiate with you because it makes sense now. I didn't understand why it had to be that way before, but with your history with Nik and the expectations of your family, I get it. You were protecting me as much as yourself.\"\n\nMatteo sat staring at her dumbfounded and said nothing. Part of him hurt that Bianca had told Cat about the damage Maria had caused, the other part of him was glad she knew now and it had helped her understand him and his family a little better and made her more open to what he would have to ask her.\n\n\"For all your talk about honesty, perhaps if you had told me about your mother, as well as the story about Nik, you might have had a better chance of staying in control of this relationship. Instead, I have found out the things I needed to know about you and your destiny from another family,\" she sighed and put the last bite of her slice of pizza in her mouth. \"And I didn't have a team of investigators do it for me so that I didn't understand the context!\"\n\n\"That's hardly fair, Roberto requested that background check, I did take advantage of it, however,\" he admitted.\n\n\"Yet I'm still here,\" she said. \"Eating pizza and trying to find out what you really want from me rather than just assuming or believing everything I have been told. Tell me what you want, Matteo. I know what being in a relationship with you involves now. I think there is still room for negotiation, but I need to know what it is that you want. Do you still want a business partnership?\"\n\nThis had not gone at all like Matteo had been expecting. In the three weeks she had been gone, Matteo had gotten to know and try and understand this woman through her brother and pouring over the details of the investigation done on her by his family. He had talked to Ricco, as painful as that was for both of them, and even spoken to Vanessa about her. It had not occurred to him that she would be doing the same thing and was in a better position to get the information she wanted than he had been. Once again, she had left him speechless.\n\n\"No,\" he said abruptly and saw her flinch. \"I don't want a business anything. It was wrong of me to expect that of you and then sleep with you. It was messy and complicated.\" He paused.\n\n\"I see. So you're not even open to negotiation anymore?\" she asked, not quite ready to give up on him yet, despite his words. She'd come too far and said too much now to walk away.\n\n\"Of a business partnership? No.\" he shook his head. \"I want more. I want the relationship without all the messiness and uncertainty. I want to know you're mine, and not because of the money or a contract you have signed, but because you want to be with me.\"\n\nCat bristled momentarily until Pete's words about possessiveness and belonging came back to her. Of course she wanted to be his, why else would she be sitting here having this most bizarre of conversations as his moods swung from anger and frustration to those of care and concern from one heartbeat to the next.\n\n\"Cat, say something, please,\" Matteo grumbled, running his hands over his face.\n\n\"You don't want a contract at all?\" she asked.\n\n\"No, I just want you,\" he said. \"I want you to marry me for all the same reasons I asked in the first place, it's true, but also because I have very real feelings for you I can't deny no matter how hard I try.\"\n\n\"I worked really hard on the conditions I wanted to be added to that contract. What am I supposed to do with those now?\" she tried to keep a serious tone to her voice, but knew, even if she wasn't smiling, that her eyes were dancing in delight at his words.\n\n\"You had conditions?\" he asked, clearly confused by what she was saying. \"You want the contract? The partnership?\"\n\n\"I thought it was the only way to get you to fuck me again,\" she said casually, shrugging her shoulders as if it wasn't a big deal, but couldn't help the corners of her mouth turning up in a suppressed grin.\n\n\"You what?\" he choked out as if he couldn't believe what she had just said.\n\n\"Quite a few of my new conditions involved fucking, which, as you said yourself, you're very good at,\" she finally let her cheeky grin show.\n\n\"Such as,\" he tilted his head, enjoying the cheeky grin and feeling like they had overcome several hurdles already.\n\n\"We are both fairly high energy people. Do you think an average of once a day is enough?\" she asked, feeling her laughter bubble up as once again he blinked at her.\n\n\"I'm not sure your stats are correct there, Miss Leone. I would never think once was enough, but then I haven't even managed that in the last few weeks.\"\n\n\"No wonder you sound so frustrated, Mr. Vitali. Perhaps I could help you bring your personal data back on track,\" she offered. She stretched her leg under the table and ran it up the inside on his leg to rest in his lap against his cock.\n\n\"That's a bit presumptuous of you, Miss Leone. I haven't even sighted these amendments to the original contract that you speak of,\" he captured her foot and began to massage it before he totally lost his mind and took her over the table they sat at.\n\n\"Let's just say that in theory my horizons have been broadened, particularly in relation to the trial and the training of the Kept and I am highly curious,\" she admitted, but blushed a little. \"Tell me, do you have a red room of pain, as fifty shades fans would call it?\"\n\n\"I think you asked me that when we first discussed the agreement, and I said I would happily build you one if you had an interest in that direction,\" he mused. \"If we are being honest, I may have to insist on building you a special room like that, now that I know you are curious and expect that the practical application of those ideas will be as alluring to you as you seem to find the theory,\" he added. \"It seems Pete gave you quite a lot of instruction and information. I am pleased that it seems to have stayed theoretical.\"\n\n\"I can see that,\" Cat flexed her foot as he held it over his lap, her heel grazing over the bulge in his pants. The idea of Cat bound and vulnerable to him was almost too much for him, and he groaned, standing up and leaning over the small table to kiss her deeply, his arms locking under her shoulders as he pulled her up to its shiny surface. She knelt on the table as he clutched her face between his hands and kissed her roughly, bruising her lips as if attempting to devour her.\n\nHis hands worked to remove his own shirt, feeling the constraints of it before starting on her clothes. There was no finesse in his movements as he practically tore the fabric from her body in his urgency to possess the woman who made him feel so much, so deeply, in such a short amount of time. He lay her on her back, his mouth never leaving hers as he growled at the awkwardness of their positions and swung her legs so they hung either side of his thighs.\n\nCat let herself revel in his need for her, matching it with her own. What she had done with her sexual overtures was calculated to speed up their coming together like this and ease the tension so they could talk, really talk, about what a future might hold for them if they stayed together. His mouth left hers and he trailed kisses and small nips down her throat and over her breasts as his hands worked to lower her jeans. She lifted her hips to help him as the kisses went ever lower, eventually teasing at the junction of her thighs where her arousal was beyond merely obvious. His warm breath there as he kissed her thighs made her shudder.\n\nMatteo groaned at the scent of her arousal and knew he would not be able to hold back at all as he reclaimed his possession of her body. Discarding her jeans, he ran his hands up her legs and stood, unfastening his belt and dropping his pants to his knees. Not even bothering to kick them off, he entered her roughly, bending over her to push his hand under her shoulders, curling his fingers around beside her neck as he began to fuck her hard and deep. Neither lasted long, and they came explosively within minutes. Matteo didn't move, instead resting his head on her breast and breathing heavily.\n\n\"I've been falling in love with you too,\" he murmured softly against her breast. \"I need you, I need this.\" He felt her hands tighten around him and smiled. Gently kicking off his pants, he picked her up and carried her into the bathroom.\n\nCat said nothing as he placed her on her feet and ran the shower for them. She watched him curiously as he tested the water and then drew her to him and kissed her again. She tried to find the right words to say, but everything that came to mind seemed so clich\u00e9, so she clung to him and his kisses as they softly washed away everything that had come before this moment so they could start fresh again.\n\n\"What happens next?\" she finally asked.\n\n\"I'm going to make love to you, and then I'm going to ask you to marry me,\" he said softly between gentle kisses along the side of her neck and below her ear. \"After that, we are going to talk about your curiosity and the red room fantasy I will build for you,\" he chuckled in a deep husky whisper.\n\n*****"
    ],
    "authorname": "xelliebabex",
    "tags": [
        "argument",
        "stalker",
        "art/artist",
        "dominant/submissive"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-twelve-vitali-ch-10"
}