{
    "title": "Mines of Sonhadra - Stage 04",
    "pages": [
        "(Fair Warning ~ This gender swapped, action/adventure, sci-fi hentai litRPG features elements of non-consensual sex, sex with aliens, monsters and other non-humans, tentacle stuff, seduction, coercion, dominance and submission, male/female sex -well kinda, maybe however you want to classify the gender-swapped sex...on top of the violence, fantasy elements, and plot stuff... Or it may not...every chapter's a little different. Before we get started, I would also just like to send out a huge THANKS to everyone who is leaving such positive feedback and comments! It means so much to me! And THANK YOU to everyone who is reading and enjoying this series, Lex and I are so excited having you along for the ride! And if you're new here, thanks for reading and please enjoy! ~Karin Mac)\n\n2-4: The Boss's Pit\n\nThe Zauknoid audience booed my victory enthusiastically.\n\nLeaning against the stockade, feeling my achy slit leak hot juices down my quivering legs, I had a hard time disagreeing. I had been trapped in that device mere moments before, but without it now, I would have collapsed right there. \n\nI could feel the weight of my breasts heaving as I struggled to catch my breath and calm my nerves. Brushing damp green hair back from my face, I tried to remind myself just how relieved I would be once my head cleared. However, at that moment, my mind was still buzzing with orgasmic energy, swimming in a soup of submissive urges pumped in by the game and fogged by the INTELLIGENCE penalty from having my PAIN maxed out, so there was no quelling my disappointment. In fact, hanging on the verge of my fourth climax after Draknut had failed to impregnate me, I was having a hard time even remembering I was supposed to be a man.\n\n\"Well done, BREEDER!\" The Pit Boss congratulated me.\n\n\"G-go to hell,\" I gasped meekly.\n\nHe smirked, reaching out to reattach the leash to my chain-link-collar. \"Actually, we Zaunkoid do not believe in an afterlife.\"\n\n\"Because you're all soulless computer programs?\"\n\nThe Pit Boss looked at me with cold, oval eyes as the gray bristles of his goatee lifted in what seemed to be a knowing grin. He gave the leash a tug and my mind flooded with an irresistible compulsion to obey. I came to him in abject compliance, and his grin widened showing a row of pointed teeth. It was almost like he was trying to illustrate my so-called-soul's susceptibility to his computer program.\n\nI knew the Pit Boss was an NPC, unlike the ZAUK soldiers who were basic MOBs. That meant he could think and react outside of a set program pattern...but was his AI that advanced? Usually even NPC's were programed to ignore any direct reference to their programming.\n\nStanding there with his cold red glare slithering over my naked female body, I was swept by a fresh sense of vulnerability. Knowing I couldn't fight or resist him in any way, especially with the leash keeping me submissive and docile, I couldn't help but drop my own gaze in deference. I wrapped one arm across my chest, dropping the other to cover my prim mound, hoping that a bit of modesty might counteract those callow feelings.\n\n\"Come, BREEDER,\" the Pit Boss said, clearly enjoying the sight of me wilting before him. \"You've earned another dip in the bathing pools!\"\n\nAnother tug of the leash and I trotted obediently after him. The few hundred ZAUKs surrounding the pit jeered and ogled as I passed. As we crossed into the dimly lit tunnel at the back of the arena, I was beginning to feel my strength return. \n\n\"No one warned me Draknut would have tentacles,\" I said, my head clearing as the STAMINA and INTELLIGENCE penalties ended. \"So what's this CHAMPION like?\"\n\nThe Pit Boss walked briskly, tugging my leash periodically to make sure I kept up. \"He is the most virile and fertile of the Sonhadran Zauknoids!\"\n\n\"Sonhadran Zauknoids?\" I echoed. \"So the Breeding Pits are different for each level, er world, huh?\" It seemed obvious, but hadn't occurred to me before.\n\n\"There are Zauknoids on most planets, yes,\" he agreed. \"With their own Breeding Pits.\"\n\nThis realization started me wondering about the other creatures I'd encountered in this game. The creepy bug men back in Birtle's dungeon for example, what would have happened to me if they had maxed out my Stim Points?? On second thought, maybe I didn't want to know!\n\nHe led me back to the cavern with the hot spring bathing pools. where I had failed a bonus round the day before. While I didn't relish the idea of trying to resist being molested by a group of horny ZAUKs, I knew I needed to do better today. Something told me I was going to need the extra Stim Point bonuses when I faced the Breeding Pits' CHAMPION.\n\n\"Everybody out!\" the Pit Boss thundered, dragging me down to the pool side. \"Out you slime!\"\n\nThe six or seven ZAUKs meandering about, jumped as if they'd been startled and then quickly scurried out of the room. \n\n\"What's going on?\" I asked, turning to find the Pit Boss leering at me.\n\n\"I must say, BREEDER,\" he hissed, licking his lips. \"After watching you the last two days, you truly are one hot piece of ass!\"\n\nBATHING POOL - BONUS ROUND 2 suddenly appeared in the air over his head. RESIST THE PIT BOSS FOR BONUS STIM POINTS!!\n\nShit.\n\nHe yanked me forward and I couldn't resist practically falling into his arms. I squirmed, helpless as his spindly limbs enfolded me. Rough fingers tickled up the back of my neck, snagging a handful of hair and jerking my head back. Was he going to kiss me? \n\n\"I've been dying to taste you since you first arrived!\" he groaned.\n\n\"Ugh! Hands off you piece of slime-uulk!\" A snakelike tongue slithered over his pointy teeth and into my mouth mid-protest. \n\nI squealed in disgust, feeling his slimy tongue writhing against mine! He moaned hungrily, letting it squirm over my lips, before licking the side of my face. My stomach twisted into a knot, but I couldn't push away. Skinny as he was, I still wasn't a match for his strength. As the feel of his tongue on my skin sent shivers down my spine, he reached up to unclip the leash. Then he shoved me backwards into the pool!\n\nI plunged in with a surprised yelp. As good as the warm water felt, I came up quick, trying to stay focused. I still needed those bonus Stim Points!\n\n\"It's been some time since a BREEDER made it past Draknut,\" the Pit Boss said from the edge of the pool. \"That's what I'm supposed to say,\" suddenly his face twitched awkwardly. \"But there's something special about you!\" \n\n\"Oh really?\" I asked. \"And what's that?\"\n\nHe removed his coveralls, tossing them away and revealing his spindly body. He was taller than me and built like one of the ALPHA Zauknoids, huge groping hands, long arms and torso, with a prominent green cock between his stubby legs. I backed away as he sank into the water with me.\n\n\"You're not like the rest,\" he went on. \n\n\"What do you mean? How am I not like the rest? The rest of who?\"\n\nHis face did that twitchy thing again. \"I simply must have you before the CHAMPION breeds you!\"\n\nAs he came forward, I knew what I had to do but hated the idea. It was tough enough getting used to this feminine body without having to play seductress in these sexual encounters. Unfortunately, those were the only skills and attributes LEX seemed to have.\n\nI let the Pit Boss back me up against the side of the pool. When he reached out for me, I slipped under those big hands and threw my arms around his neck. Using my TEASE skill, I latched onto his neck, kissing and sucking at his rubbery flesh. I sensed a little shiver crawl through his shoulders, as his arms wrapped around my hourglass figure. \n\n\"I'll admit,\" he murmured. \"I did not expect you to be so receptive!\"\n\nI moaned against his neck, running my tongue from his clavicle, up his throat, to what passed for a chin on these aliens. He shifted in my arms, big hands crawling down my back to grab my ass. I still wasn't used to having a such a big, round booty, so I was keenly aware of my firm fullness in his grip. He squeezed tightly, sending a little tremble down the backs of my thighs. He pulled me closer, and I instinctively wrapped my legs around him.\n\nAs I was distracted nibbling on his neck, the Pit Boss pressed my back against the side of the pool. His hands left my backside, sliding up along my hourglass curves to my chest. I realized too late, grabbing at his wrist just as his grip closed around my tits! He pushed me back, squeezing the fleshy orbs and when his rough thumbs swiped over my nipples a starburst of tingles filled my chest making me gasp!\n\nTEASE BLOCKED flashed before my eyes. Crap, didn't realize that could happen!\n\nAs his grip tightened on my firm flesh, warmth flushed through my chest and my Stim bar began to climb (SP: 1-2). He continued playing with my nipples, teasing them into hard pink nubs (SP:3-4-5). My neck and cheeks flushed hotly and I had to swallow a moan as he fondled me (SP:6-7-8).\n\n\"Nice tits!\" he groaned. \"The nicest tits!\" \n\nFeeling my sensitive nipples rolling between his fingers sent a wave of heat cascading down my stomach, ending in a needy quiver between my thighs (SP:9-10-11). Caressing his sinewy arms, I tried to pull his hands away. He basically ignored the feeble effort, and I couldn't hold back a moan as he responded by kneading my plump bulbs even more firmly (SP:12-13-14). \n\nKeeping me pinned against the side of the pool, the Pit Boss lifted my left breast to his mouth. Leaning down, he clamped his bristly goatee around my stiff, defenseless nipple (SP: 15). Feeling his sharp teeth nipping the delicate nub sent butterflies dancing through my stomach (SP: 16-17). Then his slimy tongue swirled around the sensitive areola flooding my chest with achy tingles (SP: 18-19). Whimpering and squirming, I was helpless as he switched to my right breast, driving me crazy all over again (SP: 20-21-22-23-24)!\n\nI was moaning shrilly as his teeth and tongue continued to torment my rosy bud (SP:25). Even in the warm water, I could feel my pussy getting slick and slippery as my legs quivered against his sides (SP: 26-27). \n\nDid he have me already? That easily?? Even though I had just been thoroughly plowed by Draknut in the arena, part of me was aching for the Pit Boss to fuck me now too!\n\nTwisting desperately, I forced myself to squirm out of his grasp. His big hands groped after me, but I thrashed and kicked, slipping away. I swam to the far side of the pool, gasping a few calming breaths (SP: 26-25-24). \n\n\"Where are you going?\" he barked. \"I know you were enjoying that!\" \n\n\"N-no, no way!\" I lied, pushing sopping green hair out my face (SP: 23-22-21-20). \"How could I ever enjoy being with a freaky alien like you!\" I glanced over his head: PIT BOSS StimP: 12.\n\n\"Come back here and I'll show you how!\" he grinned, lunging for me.\n\nI ducked out of the way, but his limbs were too long and snagged me by the arm (SP: 19-18-17). I tried to pull free, but he yanked, dunking me under the water. I came up sputtering and disoriented, but at least my Stim Points continued to drop (SP: 16-15-14). I hadn't lost yet!\n\nBig yet...I thought as he pulled me back in.\n\nNow with my back to his chest, his arms snaked around my body pinning mine to my sides. One hand went straight back to my breast, squeezing the fleshy orb firmly (SP: 16-15-16). The other hand reached down, pushing between my thighs to grab my pussy (SP: 17). He began to knead my smooth, pliant labia, while doing the same to my firm, round boob (SP: 20). Warm electricity crawled up my spine, arching between his two fondling hands. I felt him spreading my lips to stroke my sensitive clit, at the same moment his fingers seized my stiff, achy nipple (SP: 25)! \n\nI moaned loudly, quivering in his arms and melting against his body. Fuck he was good! I didn't stand a chance...\n\nI could feel one finger sliding through my slippery petals, searching for a soft spot. I knew if he got that digit inside me, it'd be all over! So once again, I summoned my will power and twisted, writhing out of his grip! I retreated to the opposite side of the pool, this time hearing him splash after me (SP: 24-23-22).\n\nI maneuvered out of his way just as he pounced (SP: 21-20-19)! I was surprised and more than a little impressed at just how smoothly my feminine curves seemed to glide through the water (SP: 18-17-16). Feeling like I'd found something of a rhythm, I was able to keep away from the Pit Boss now using my high AGILITY score (SP: 15-14-13-12-11). We splashed around, playing the tensest game of cat and mouse I'd ever been involved in (SP: 10-9-8-7-6). \n\nEventually, he learned my pattern and outsmarted me, feigning a lunge only to snag me as I dodged the wrong direction. I thrashed and writhed, feeling so stupid for letting him catch me! He quickly overpowered me. Hearing my feminine whines somehow made me feel even more helpless as he dragged me back to the side, shoving me chest first over the edge.\n\n\"Let me go!\" I squealed impotently.\n\nHe grabbed my left wrist, twisting that arm behind my back to hold me in place. His free hand reached straight between my legs, and before I could so much as squirm in protest, he shoved his long, thick finger into my vagina (SP: 8)! I whimpered, feeling each knuckle slide all the way inside me (SP: 9-10-11). He thrust twice, making me moan each time (SP: 12).\n\n\"See,\" he gloated, wiggling his finger inside me (SP: 13). \"You do like this!\"\n\nI whined in frustrated denial, unable to keep my body from quivering around his penetrating digit. I knew it was over as he started pumping that finger in and out of me (SP: 14). I could feel his erection brushing my thigh as he fingerbanged me (SP: 15). It was just a matter of time before he stuck it in and fucked me silly!\n\nRealizing his dick was pressed against my right thigh, I reached back with my free arm and grabbed it! Instantly, the Pit Boss groaned, and his grip loosened slightly. I squeezed gently and began to stroke, gasping softly as his finger slid out of my cooch. I sensed his strength draining and freed my other arm. His hardon swelled in my hand, and he became incredibly responsive. Using his cock like a handle, I turned and guided the Pit Boss against the side of the pool, then up so he was sitting on the edge.\n\nThe heat from his erection permeated my soft palm, racing up my arm and making my mouth water. I maneuvered between his legs, and without waiting or teasing, devoured his big green cock (SP: 17)!\n\nNot nearly so massive as Draknut, the Pit Boss slid easily to the back of my throat, gagging me (SP: 18). I pulled back, sucking as I did and savoring the long moan this drew from him (SP: 19). Closing my plump lips around his rigid shaft, I began to bob my head, only errantly noticing BLOWJOB begin to glow in my periphery. The thick member continued swelling against my tongue, spreading my jaw a bit wider (SP: 20). The heat from his erection blushed my cheeks, and I grew more eager, bobbing and sucking excitedly (SP: 21-22-23-24-25)!!\n\nThe Pit Boss fell back, moaning loudly and coating my mouth in precum (SP: 26). The taste sent a rush through my torso that left my nipples aching and my pussy gushing (SP: 27). I moaned with his cock still in my mouth and the reverberation caused his hips to buck, forcing his cock down my throat and gagging me again (SP: 28-29). I pulled back, gasping a breath and sputtering on the thick web of precum and saliva streaming from my lips. \n\nAs I swallowed the stiff green rod once more, I felt his legs tremble against my sides (SP: 30). Absorbing his energy, my curvy figure shivered in response, making me moan and gag as I deepthroated his rock-hard cock again (SP: 31).\n\nI no longer cared that my Stim Points were about to max and I was about to lose the bonus. I only wanted his cum! Draknut may have denied me, but the Pit Boss would not!\n\nGripping his hips in my dainty hands, I pushed down sliding his cock into my throat and gagging (SP: 32). I did it again, feeling the veiny, rigid shaft glide over my velvety tongue as he plunged down my throat (SP: 33). I gagged, whining desperately for my reward! Sucking hungrily, I drove down, gagging again as his dick filled my tight little throat. I gagged around the smooth head, pressing down to hold it in my warm, yielding throat as long as I could! \n\nThe Pit Boss shuddered beneath me, sending a quiver through his cock that tickled my esophagus and gagged me one last time. Finally he moaned, spraying hot cum down my throat! The sensational burst of heat in my chest sent an orgasmic rush through my body, making me climax as well! As I pulled back to gasp for breath, he filled my mouth with warm, salty, sticky, delicious ooey gooey cum! I swallowed my mouthful of spunk gratefully and sank back into the delightfully warm pool to catch my breath. \n\nAs I floated on my back, head still buzzing blissfully, an unexpected message appeared above me: THE PIT BOSS STIM POINTS HAVE BEEN MAXED OUT!! Followed by the surprising but more than welcome: YOU WIN!!  Then LEX STIM POINTS +15  And finally: BONUS ROUND COMPLETED!!\n\nMy Stim Bar flashed red 34 then cleared (SP: 0). I had thought for sure he had me! I guess I assumed his max was too high for me to catch up, even with my BLOWJOB doing double Stim Points. Wait! What even was his max?\n\nThe Pit Boss was already crawling towards his coveralls when I looked at the already fading: PIT BOSS StimP: 0. Guess, I missed it. Oh well, by tomorrow I'd be facing The CHAMPION and hopefully be on my way out!\n\n\"Well...well...well done, BREEDER,\" he groaned, pulling his clothes back on. \"Now, come here to be leashed...you've certainly earned your rest this evening!\"\n\n\"I'm getting real sick of being called 'breeder',\" I pouted in the middle of the pool. \n\nSure, I hadn't been a woman for that long, but the objectification of this game was already wearing on me. It was bad enough that everything in this game seemed designed to molest or otherwise sexually exploit me, being stuck in a section trying to forcefully impregnate me was even more degrading.\n\n\"I say so with the utmost respect,\" he balked. \"Breeding young ZAUKs is an honor and a privilege!\"\n\n\"Not to me!\"\n\n\"No, I suppose not,\" his face did that weird twitch again, it almost looked like he was trying to hold back his words. \"Would you prefer sow or broodmare?\"\n\nI didn't bother to respond, just kept pouting.\n\nStepping to the edge of the pool, the Pit Boss held out my leash. \"If I have to come in and get you,\" he began, his face twitched weirdly again, then split in a sharp toothed smile. \"I'll get to punish you.\"\n\nWhat was up with his face? Some kind of glitch? Regardless, I didn't want to find out what kind of punishment would be in store for me, so I swam over and climbed out of the pool.\n\n\"There's a good, sow,\" he said, clipping the leash back on. \"This way!\"\n\nAs he led me through the tunnels back to my cell, I realized I still had the taste of his cock in my mouth. Outside the heat of the moment, with my Stim Bar zeroed, I couldn't help but wonder what was happening to me. My stomach twisted with guilt, and it was like I could feel his warm load still sloshing around in there. I'd been so willing, eager even, did I really enjoy sucking cock this much? Or was this game getting that deep in my head? \n\nThe more I thought about it, the murkier things seemed to get. I was feeling pretty confused and despondent by the time we reached the cell. I walked in without even looking for Eyla and knelt dejectedly at my manacles. \n\n\"It seems you're learning your place, sow,\" the Pit Boss gloated, stooping to bind me. \"It is easier this way,\" he assured, locking the shackles around my wrists. \"And after you mate with the CHAMPION tomorrow, you will certainly be the pits' prized broodmare!\"",
        "\"Can we go back to 'breeder'?\" I mumbled.\n\nHe straightened with a grin, petting me before he left. \"As you wish, BREEDER!\"\n\nI stared at the floor, until the door had shut. \n\n\"Long morning?\" I heard Eyla ask quietly. \n\n\"You could say that.\"\n\n\"So...are we...sister-wives?\" her voice was light.\n\n\"No,\" I replied without looking up. \"I survived Draknut...but afterwards the Pit Boss took me to the bathing pools and...\" I trailed off, embarrassed to admit what had happened. \"...and let's just say I survived him too.\"\n\n\"Oh, I didn't realize there was another bonus round,\" she said, and for the first time I realized her voice sounded strained and tired. \"Well, at least you're not pregnant...yet...\"\n\n\"Yet...\" I echoed finally turning towards her.\n\nI nearly jumped out of my skin when I realized there was another figure standing there. My eyes climbed from his black boots, up his long legs and past his gray tie and vest combo, to see a familiar sharp featured face, topped with unkempt brown hair. \n\n\"Crowther!\" I snarled, recognizing him instantly. \"You son-of-a-bitch!\" In a flash of rage I tried to stand, but my manacles yanked me back on my padded ass!\n\n\"I know I owe you a huge apology!\" he said quickly, holding out his hands in surrender. \"I just didn't know what else to do!\" I couldn't help but notice he wasn't talking in that bullshit accent now.\n\n\"Didn't know what else to do?\" I seethed. \"Other than leave me to be raped and captured, and imprisoned down here as a Zauknoid broodmare?? How about, oh I don't know, fucking anything else!?\"\n\n\"I know, I know, but please understand, after Eyla was taken, even after I located the Devil's Mines,\" he explained quickly. \"I couldn't figure out where the Breeding Pits were, there are miles of tunnel dug around here, I needed...\"\n\n\"You just needed to fuck me over!\"\n\n\"Lex, I know you're pissed,\" Eyla interjected. \"And you have every right to be, but...this is the boyfriend I told you about and he's here to rescue us!\"\n\nI looked past Crowther to where she was laying against the wall, drenched in sweat. Her pretty face was clenched in pain and she was clutching her tummy. \n\n\"Eyla are you...?\" I began.\n\n\"In labor?\" she groaned. \"Yes.\"\n\n\"Jesus.\"\n\n\"Yeah, and he,\" she nodded to Crowther. \"Has to leave before the nursery ZAUKs come in to 'help' me,\" she went on. \"So please, let him explain-quickly-so we can all get out of here...and then I promise I'll help you kick his ass for what he did!\"\n\n\"And I'll deserve no less,\" Crowther said, squatting down across from me. \"But I do have a plan here, not a great one maybe, but it's something.\" \n\nI noticed his eyes drift down my chest, and remembered I was still completely naked. Amid a slight rush of embarrassment, I crossed my shackled arms trying to cover my breasts and shifted my hips to conceal my prim, little slit. When his eyes snapped back to my face, I couldn't help but feel a slight pang of guilt remembering the times I had unashamedly ogled women back in the real world. \n\n\"Fine,\" I spat through grit teeth. \"What's your plan?\"\n\n\"After doin' some research I found out that there's a key that unlocks them collars,\" he pointed to the chain around my neck. \"After, if, you win the third contest then the CHAMPION takes it out and sets you free, declaring you to be too hot of a piece of ass for breeding or some such.\"\n\n\"If I still have to win the final Stim Battle to get the key,\" I snapped. \"What the hell do we need you for?\" \n\nEyla groaned in pain, trying to stifle the noise.\n\n\"Well there in lay the problem,\" Crowther went on, his phony accent starting to return. \"He doesn't give you the key, just sets you free, you don't even get your gear back till you leave the pits, so I dare presume you're in no position to fight him and take it...that, my dear, is where I come in!\"\n\nChewing my bottom lip, I glanced at Eyla. Holding her stomach and grimacing in pain, more focused on silencing her groans. I assumed once the ZAUKs heard her, they'd come in to deliver the...baby? I still didn't know exactly what was growing inside her...\n\n\"So I still have to go win the third and final Stim Battle before you can rescue us?\" I pointedly rolled my eyes as dramatically as possible.\n\n\"Well, I was thinking more along the lines of sneaking into the arena,\" Crowther explained. \"And then if you can get him to show you the key, I'll swoop in right there and take it off the big lug.\"\n\n\"Alright,\" I sighed. \"That's the first sensible thing you've said!\"\n\n\"It takes me a while, admittedly,\" he replied. \"But I get there eventually.\"\n\n\"Don't try to be cute,\" I grumbled.\n\n\"Great! All on the same page now?\" Eyla gasped, the urgency clear in her voice.\n\n\"Right, right,\" I said. \"Alright, get the fuck out of here so she can give, erm...birth...\" Just saying it twisted my stomach.\n\n\"Right!\" Crowther said, rushing back to her side. \"I promise I won't be far away!\" He kissed her on the forehead, dashed to the door, peeked out cautiously, then disappeared into the darkness beyond.\n\nI turned back to Eyla, concerned. \"Shit, are you-\" before I could finish she screamed! The sound bounced around the little stone chamber painfully. I would have plugged my ears but my hands were chained to the floor.\n\n\"Fuck!\" she grunted. \"It-it's fine...I'll be fine.\"\n\nAnother agonizing scream ripped through her lips. Seemingly before she had even finished, two ZAUKs scurried through the door.\n\n\"Oh deary me,\" one said. \"She's about the pop!\"\n\n\"Nice tits!\" the other agreed.\n\nI watched as they eased her onto the floor. Eyla laid back, breathing heavily and spread her legs. One of the ZAUKs, apparently programmed with some kind of midwife routine encouraged her to push. The other positioned between her legs, so I couldn't quite see what was happening. Eyla screamed and groaned, but it was all over fairly quickly.\n\n\"Don't look, Lex,\" I heard Eyla say, even as relief flushed through her voice. It was too late though, I couldn't look away.\n\nThe ZAUK between her legs straightened and turned towards me, cradling a squirmy larval Zauknoid, more like a tadpole than a baby. It had an oval head with big pink eyes, but the rest of it was a slimy, worm-like tail. My jaw and stomach dropped in unison. The midwife ZAUK hurried over, making cooing noises as she wrapped the larva in a white cloth.\n\n\"You should be very proud,\" the ZAUK said to Eyla. \"He'll grow up to be an ALPHA for sure!\"\n\nWrithing on the floor, gasping for breath, Eyla couldn't begin to reply. With that the ZAUKs left and it was all over. She crawled over and curled up in a ball against the wall, still breathing heavy. I didn't know what to say for a long moment.\n\n\"You okay?\" she asked after a while.\n\n\"Shit...are you?\"\n\n\"The labor maxes my PAIN, so it drains my STAMINA,\" she explained. \"I'll be fine in a little bit.\"\n\n\"I see,\" I was still a bit at a loss for words. \"Wait, just your STAMINA?\"\n\nShe shrugged and nodded. I vaguely remembered that Lex's character profile listed \"pain threshold\" as a weakness, that must be why my INTELLIGENCE was also affected. \n\n\"So, can I just say,\" I began pushing that thought for another time. \"You seem pretty fucken cool about having just given birth to an alien worm?\"\n\nEyla chuckled tiredly. \"Don't know if 'cool' is the word, it did kinda freak me out the first time,\" she explained. \"But actually, it does make things easier, not like it's a cute baby MOB or anything confusing...weird alien larva? Reminds you it's all just a game.\"\n\nJust a game? I guess I understood a little better. Hell, her body was already back to sporting six-pack abs under a pair of perky boobs. \n\n\"Game or not,\" I said. \"Think I'll try to avoid the experience.\"\n\n\"I mean...\" Eyla smiled. \"By no means was that intended as a recommendation!\"\n\nAfter a bout of relieved laughter, we both seemed content to sit in silence for a while. My mind drifted back to contemplations of what effect this game was having on me. \n\nBeing in the body of a woman, if I was exploring my feminine side or learning a few new things about myself, that was one thing. Making me into a submissive sextoy by incepting irresistible compliance and overwhelming desires, was entirely different. How could I possibly know the difference? \n\nOnce Eyla felt more recovered she apologized again for what Crowther had done to me. Assuring me it was out of character for him and, echoing some of my personal concerns, that she thought the game might be influencing him to act more like his avatar: the \"treacherous assassin.\" \n\nIs that what was happening to me? Was the game pushing my mind closer and closer to the mindset of the seductive, femme fatal that Lex was meant to be?\n\nEven after our conversation had petered out, I didn't sleep that night. Not that I was able to settle on any answers by the time the Pit Boss returned in the morning. \n\n\"I hear congratulations are in order,\" he said to Eyla, throwing the door open. \"Three strong ZAUKs, two of them ALPHAs, you are indeed a proud mother of the Zauknoids!\"\n\n\"What's this?\" Eyla asked, pushing herself up off the floor. \"You've never congratulated me before...\"\n\n\"No? I-I should have,\" he replied, his face was twitching again. \"Regardless, did you rest well? Draknut is eager to breed you again!\"\n\n\"Yeah, I'll bet,\" she said. \"What's going on here? What's wrong with your face?\"\n\n\"He was doing that yesterday after I beat Draknut,\" I said.\n\n\"My face?\" he questioned, reaching up to touch the wrong side. \"Fe-feels fine...fine...\"\n\n\"Really?\" Eyla glanced from him to me. \"That's odd, I've never noticed it before.\"\n\n\"I'm taking this BREEDER to the arena now,\" he said, kneeling and beginning to unlatch my manacles. \"We'll return for you afterwards.\"\n\nEyla and I exchanged nervous glances as the Pit Boss hauled me to my feet. Despite all her \"just a game\" optimism, I could clearly see her fear and disgust at the idea of another Zauknoid pregnancy. I still didn't trust Crowther, nor the reliability of his information and subsequent plan. \n\n\"Don't be long,\" she said, forcing a smile through her trepidation.\n\n\"Yeah,\" I replied as I was dragged from the chamber. \"Be right back.\"\n\nAfter a night mulling over the effects this game was having on my mentality, I felt particularly cowed and helpless as the leash flooded my mind with compliance. Not that I had any choice but to follow obediently, despite the icy pit forming in my stomach. What little confidence I had seemed to drain away as we reached the arena. The cheering, raucous crowd of ZAUKs seemed to have grown, filling the stands from wall to wall.\n\n\"Guess they really come out to see the CHAMPION,\" I said meekly as I was led to the center of the pit.\n\n\"Yes, indeed,\" the Pit Boss replied. \"Especially for such a special event!\"\n\n\"Special? What do you mean special?\" \n\nThe Pit Boss replied with a sharp toothed smile, sweeping his spindly arm in and overly dramatic gesture. I followed his pointing finger to the X-rack and realized someone was chained to it. Dressed in black and gray, with messy brown hair, it was Crowther. He looked up at me, the apology clear in his eyes, since he couldn't speak having been gagged as well.\n\n\"Shit!\" I gasped. \"Oh you idiot!\"\n\n\"I caught this impotent squib skulking the tunnels last night!\" the Pit Boss howled to the audience, inciting a round of scathing boos. \"You know him, BREEDER?\" Before I could say anything, a yank on my leash brought me to my knees. \"Do not deny it!\" As the crowd cheered and jeered, the Pit Boss leaned down and pulled a gleaming, golden key from the pocket of his coveralls. \"I suppose you thought he could help you retrieve this?\"\n\n\"If that's the key to our collars,\" I replied, figuring there was no sense in lying. \"Then yes.\" \n\n\"She admits it!\" he shouted to the boos of the crowd.\n\n\"I thought the CHAMPION held that?\" \n\n\"I hold it now!\" The key was hung on a thin leather necklace, which he slipped over his big oval head. \"But I will give you the chance to win it!\" \n\n\"What do you mean?\" I asked. \"What chance?\"\n\nHis face began to twitch again. \"I told you, you are special,\" he began. \"And special BREEDERs require special breeding...\"\n\nThe Pit Boss took a step back, displaying those pointed teeth in a malicious grin. The crowd's cheers became nearly deafening. I turned to see a figure lumbering into the pit with us. It had the head of a Zauknoid, ovular with big almond shaped eyes, but its skin was golden. This creature was about the same height as Draknut had been, only it had four arms ending in the oversized hands of a ZAUK. As it sauntered towards us, my eyes dropped to his crotch, where he had two huge cocks!\n\n\"Allow me to introduce the CHAMPION!\" the Pit Boss gloated. \"The most virile and fertile among us!\"\n\nUnable to speak past the lump in my throat, I looked from the CHAMPION to the Pit Boss, my mouth hanging open in shock. \n\n\"You'll have to open a bit wider than that I'm afraid,\" he said mockingly. \n\n\"If I beat him,\" I struggled to regain my composure. \"You'll give me the key and let the man go?\"\n\n\"Special breeding,\" the Pit Boss reiterated. \"You're very special remember?\" His facial twitching grew more severe than it had been before. \"If you can resist The CHAMPION and myself...yes, I will give you the key to set both of your friends free, you do wish to take the other BREEDER with you as well, do you not?\"\n\n\"I do,\" my shoulders slumped. \"And if I can't 'resist' you both?\"\n\n\"What else?\" A broad smile split the gray bristles of his goatee. \"You'll be claimed as The CHAPMION's prized broodmare and have the honor of mothering an army of ZAUKs!\" Without waiting for my reply, he reached up and unfastened my leash.\n\n\"Are those my only options?\" I asked, getting tentatively to my feet.\n\n\"Well,\" the Pit Boss began, stripping off his coveralls. \"You could always submit to us willingly and take your place as top broodmare with some pride?\"\n\n\"Yeah, right.\"\n\nBREEDER STIM BATTLE! Appeared in the air between us in big red letters that flashed as if they were glitching.  ROUND THREE!!\n\nStaring at the two naked aliens and the three cocks in front of me, the ice in my stomach crept up my spine. Like most guys, I'd always fantasized about having a m\u00e9nage a trois, preferably with two lovely ladies. I never even considered the possibility that not only would there be two guys in my first three way, but that I'd be the girl! \n\nI continued to back away as they advanced, trying desperately to formulate some kind of plan. I started to circle towards the Pit Boss. I'd already beaten him in the bonus round, so maybe if I could keep him between me and the champ, I'd stand half a chance. He took the bait as I let him close in on me, moving into position between me and his two-dicked partner.\n\nSuddenly my back hit the wall and panic shot through me! I hadn't been baiting him in, he'd been backing me up. The Pit Boss was on me in an instant, seizing my wrists and pinning them to the wall.\n\n\"Got you!\" he hissed, leaning in. \n\nI tried pushing away but he easily held me in place. He extended his tongue slowly, no doubt enjoying the revulsion that played across my face. I squirmed helplessly as it slithered over my lips and forced itself between them again. I whined in disgust, feeling the slimy tentacle writhe against my soft tongue, then slide deeper to tickle the back of my throat.\n\nPushing down my revulsion, I began sucking his tongue. Reaching out with one leg I stroked the side of his hip, trying to draw him a little closer. He drifted in, continuing to wiggle his tongue in my mouth as I sucked on it. His warm package pressed against my mound, but he wasn't hard yet. Hooking my leg around his thigh, I pulled him closer and rolled my hips against his pelvis. My sensitive pussy couldn't help but absorb the heat rushing through his package as I ground against him (SP:1).\n\nOn the other side, I noticed the CHAMPION watching us intently, one hand on each cock, and a hand for each set of balls.\n\nThe Pit Boss leaned into me, pressing against the fullness of my plump breasts. His tongue thrust more eagerly into my mouth like an excitable lover. I sucked a little harder, feeling his cock stiffen between my legs. As it extended along my seam, I rubbed back and forth feeling my soft pussy lips clinging around the growing shaft, sending subtle tingles crawling through me (SP:2). Grinding my hips and thrusting my tits against his chest, I even manufactured a soft whimper, continuing to suck his slimy tongue.\n\nMy efforts were rewarded as he let out a begrudging moan and his shoulders slumped, loosening the grip trapping my wrists. I writhed against him with my entire body and TEASE flashed in my periphery. I spit out his tongue, finally able to pull my arms free and flung them around his neck. The Pit Boss melted into my embrace, and I immediately nuzzled in to start kissing and licking his neck. \n\nI glanced up right as the CHAPMION was grabbing my wrists. \"Think I better get some of that!\" \n\nHe pried my arms loose, trying to pull me away. I quickly wrapped both legs around the Pit Boss, holding on for dear life! PB grabbed my ass, his big hands squeezing as he turned me away from the wall. Before I knew what was happening, I was sandwiched between them, with the champ already holding my arms. The Pit Boss grinned as I tried futilely to get free. His grip tightened on my round little booty, letting me know it was my mistake that put me in this position.\n\nThe CHAMPION's extra hands slid along my curvy sides, firmly cupping my breasts (SP: 3). Maintaining his grip on my lower body, the Pit Boss leaned down slathering my nipples with his slimy tongue, even as the champ began to knead my supple tits (SP: 6-9-12)! Heat rushed through my chest making me gasp, and I realized what kind of trouble I'd be in if they continued to double team me!\n\nSquirming, yet completely unable to get free, a moan slipped past my lips as my nipples stood up into little pink top hats (SP: 15). Right away, PB nipped one of my rosy buds with his sharp teeth making me yelp in surprise and pain (PN: 2, SP: 16). He moved to the other, teasing, letting me feel the pointed tips graze the defenseless nub before biting down (PN: 4, SP: 17). \n\nI squealed in agony and kicked reflexively! He stumbled back, caught off guard, and as I fell one arm slipped free from the CHAMPION's grasp. Immediately I scrambled up on my knees and grabbed both his cocks, one in each hand! Still not quite sure what I was going to do, I began pumping and licking at their bulbous heads, each in turn. \n\n\"There's a good BREEDER,\" he groaned, reaching down with all four hands; caressing my shoulders, playing in my hair, and tickling the back of my neck (SP: 18). \n\nI could feel both cocks swelling in my hands, the heat of them seeped up my arms, stirring an eagerness in my chest (SP: 19). I wasn't quite ready as one of the four hands pushed on the back of my head, guiding me towards one of his cocks. As the shapely head parted my lips, and the veiny shaft slid over my tongue, a rush of excitement tumbled down my torso to slick my little pussy (SP:20).\n\nAs I began to suck and bob, one of his hands guided my pace while another coiled into my hair, and the others continued to stroke my neck and shoulders (SP: 21-22). Even as I closed my plump lips around his shaft, the CHAMPION bucked his hips forcing his cock deep into my mouth (SP: 23). His four handed grip tightened, taking full control as his cock began to thrust too hard and fast for me to manage.\n\nBLOWJOB BLOCKED BY FACEFUCK flashed in my periphery! Shit, I hated learning this stuff on the fly! What did facefuck mean?!\n\nHe showed me. \n\nAll I could do was whimper helplessly, as the CHAMPION's rock-hard member pumped in and out of my hot little mouth (SP: 24-25-26)! Try as I might to suck or lick, his stiff, warm rod plunged heedlessly down my throat (SP: 27). I couldn't even resist as he pulled out to begin alternating cocks (SP: 28-29). I tried to keep up, slobbering embarrassingly as I gagged on each of his dicks. Finally, I had no choice but to give in, letting my jaw go slack as he fucked my face (SP: 30)!",
        "The crowd cheered wildly watching their CHAMPION dominate me.\n\nSuddenly, I felt a fifth hand grab my shoulder and pull me free from that four-handed grip. I fell on my side, half choking on a mouthful of spit and precum, as the Pit Boss interjected himself between us.\n\n\"Now now, don't be greedy!\" he said.\n\n\"Out of the way!\" the champ shouted. \"That BREEDER belongs to me!\"\n\nWilling myself to stand, I hugged the Pit Boss from behind, reaching around to grab his cock. As soon as I began stroking his engorged member, the Pit Boss leaned back against me, letting out a throaty groan.\n\n\"Do this my way, boys,\" I began. \"And there'll be enough of me to go around!\"\n\n\"Come to me and you will cum for me!\" the champ demanded.\n\nHe lunged to either side trying to get at me, but using my cock-handle, I kept the Pit Boss between us. I pumped his cock, watching his Stim Bar climb: PIT BOSS StimP: 14-15-16. Still I knew I couldn't keep this up for long, my legs were already wobbly and having a hard cock in my hand just seemed to make me wetter. I needed to clear my head, figure out some way to keep one of them isolated so I could max him out and then...a finger slid through my pussy lips and electricity surged through my hips and thighs (SP: 31)!\n\nI had been so focused on avoiding the CHAMPION, I hadn't noticed the Pit Boss reaching back between my legs. He squeezed my pussy and lightning shot down my legs, buckling my knees (SP: 32). I had to cling to him just to stay standing, even as he began firmly kneading my sensitive labia (SP: 33). Electrifying warmth crawled through my stomach and into my chest as he stroked and teased my sensitive petals (SP: 34). \n\nHe slipped out of my grip easily and I couldn't resist as he turned on me. I moaned helplessly as two of his fingers found my soft spot and pushed inside me (SP: 35). I felt myself gushing, soaking his hand as those thick digits began thrusting deep inside my hot little cunt (SP: 36). My legs trembled as I felt his knuckles gliding in and out of my tight, wet tunnel (SP: 37). All I could do was whimper as each thrust grew harder, plunging deeper, making my hips buck involuntarily (SP: 38)! Erotic lightning raced up my spine, making my head spin as the Pit Boss fingered me (SP: 39).\n\nSuddenly the CHAMPION pushed between us. Without the Pit Boss holding me up, I collapsed immediately. I could hear them arguing over me, but with my head still spinning I couldn't quite make out what they were saying. My legs felt weak, my pussy was hot and dripping, even my breasts ached and tingled with erotic energy. As I lay there gasping for breath, I realized I had already lost. I was only ten points from my max Stim Points, and I hadn't even had a chance to do much of anything to the CHAMPION yet.\n\n\"...Watched you long enough,\" the Pit Boss was growling. \"There's something special about this BREEDER and I have to fertilize her!\"\n\n\"I am the CHAMPION of these Pits!\" the other replied. \"I have the right to her!\"\n\nForcing myself to focus, I struggled up onto my hands and knees and crawled away from them. The stockade wasn't far off and I made my way towards it.\n\n\"Wait,\" I heard the CHAMPION bark. \"Where'd she go?\"\n\n\"There!\" the Pit Boss spotted me immediately.\n\nI pulled myself up on the wooden contraption as they closed in together. The Pit Boss moved a little quicker, and as he reached out for me, I grabbed his wrist and yanked him forward! He shouted in surprise, stumbling into almost perfect position. I grabbed the top half of the stockade to slam it shut...but he caught my arm, blocking the attempt easily and shoving me backwards. I stumbled, crying out in frustration and falling back on my round ass.\n\n\"Clever BREEDER,\" the Pit Boss grinned at me as he started to straighten.\n\nThen to my utter surprise, the CHAMPION grabbed him by the back of the neck. Using three arms he forced the Pit Boss into the stockade, shutting and locking it with the fourth! The Pit Boss howled in a rage but was securely bound by the device.\n\n\"I am The CHAMPION,\" the four-armed ZAUK gloated. \"Now I will claim what's mine!\"\n\nSeeing my door crack open, finally, I scrambled to my feet and pounced on the CHAMPION's back! I wasted no time, burying my face in his neck, biting, sucking and licking his rubbery gold skin. He groaned immediately, and TEASE appeared in my periphery!\n\nWrapping my legs around him, I pressed my breasts against his back, writhing with every curve. He let out a moan and I felt a shiver crawl through his massive frame. He took a few lurching steps away from the stockade and its seething captive. My delicate fingers tickled across his chest, as I pushed in devouring his tender flesh. My soft tongue slid over his clavicle, and I felt his shoulders drooping. I had him!\n\nTwo of his hands caressed down my legs, then closed tight around my ankles. As he began to pry my legs apart, he seized my wrists with his other hands. I clamped down on his neck, sucking hard in a desperate attempt to distract him. I felt one hand leave my wrist, only for it to coil into my hair. I whined in helpless frustration as he pulled my head back and TEASE BLOCKED flashed through my periphery.\n\nI kicked and squirmed defiantly but didn't stand a chance against his dominating strength. He wrestled me to ground easily. I was barely able to keep track of his four hands, much less resist them in any way. Before I knew it, I was pinned beneath him. He'd managed to capture both my wrists in one hand, holding them down over my head. Two more hands immediately began groping my breasts, while the last one reached between my legs!\n\n\"This isn't fair!\" I whined, powerless beneath him. \"Let me up! No, please, stooohhhhuungh!\" My protests peeled off into a helpless moan as his fingers wiggled into my hot, wet slit! Hot tingles crawled through my hourglass figure as he stroked and kneaded my sensitive pussy lips (SP: 40)!\n\nI felt so small as his big hands tightened around my plump breasts, sending a wave of heat through my chest and neck (SP: 41). My heart thumped a little faster as he squeezed the firm flesh, teasing my hard, sensitive nipples with rough thumbs (SP: 42). I squirmed, feeling every supple curve quiver with sensual energy (SP: 43). He overpowered my feminine body so completely, panic began clawing at the edge of my mind. Strong fingers peeled open my defenseless slit, finding my clit and stroking the hot little nub (SP: 46)! My hips bucked and my head spun as white-hot lightning shot down my trembling legs (SP:47)! I moaned helplessly as the CHAMPION took full control of my body (SP: 48). In mere moments he'd max my Stim and turn me into his willing, submissive broodmare. I whimpered in frustration, knowing it was already too late, as strong hands continued kneading my achy tits (SP: 49). His thumb pulsed against my swollen clit, as he slid one then two fingers into my gushing vagina (SP: 50!)! \n\nCompletely overwhelmed, I came before he could even begin finger-fucking me! Writhing, squealing and bucking against his penetrating hand, orgasmic energy rushed through me! \n\nThe Zauknoid crowd roared in approval, watching me quiver and cum beneath their CHAMPION! His fingers slid out of me and he jumped to his feet, roaring in triumph! Our audience echoed his elation, their cheers reaching a fever pitch!\n\nOnce again; YOUR STIM HAS BEEN MAXED! Flashed before my eyes, then: PREPARE FOR BREEDING!\n\nAny strength and will power I had left vanished as a flood of submissive desires melted my brain into soft pink mush!\n\n\"Come and breed me, my CHAMPION!\" I whimpered, forgetting everything except the yearning I suddenly felt. \"Take me! I'm yours!\"\n\nThe CHAMPION wasted no time swarming on top of me! All four hands crawled over me, electrifying my skin wherever they touched. I squirmed and whimpered, surrendering to his strong grip as he took control of me once more. He rolled me onto my side, stroking his thick fingers through my drenched slit. Those digits slid through my tingling lips, spreading my hot juices into the crack of my shapely ass.\n\n\"I am the most fertile of all the ZAUKs!\" his hot breath hissed across my neck. \"And you belong to me now!\"\n\n\"Yes, yes!\" I whined. \"Fertilize me, my CHAMPION!\"\n\nIt wasn't until I felt his grip tighten, pinning down my hips and legs that I realized what was about to happen. His two dicks began prodding my two holes! A rush of dread cut through my mind, not enough to undercut my incepted yearning, just enough to force a fearful whimper through my lips.\n\nThe CHAMPION surged forward and I screamed as he double penetrated me! White heat seared through my body as my pussy and my ass stretched around his rock-hard cocks! I groaned, my head already spinning from the intense pressure! \n\nMy PREGGERS Bar lit up immediately, this time accompanied by a red flashing: DOUBLE PENETRATION x2!\n\nI mewled in sweet agony as his hips bucked and he started fucking me. My own curvaceous hips began to ache immediately. I could feel the scintillating slide of his rigid member thrusting deep into my vagina. At the same time the hot pressure of his other rod plunging deep in my ass! Waves of pleasure and pain crashed through my body with every powerful thrust (PREGGERS: 2-4-6-8-10!)!\n\nAnother orgasm crawled through my hourglass figure! I trembled against his hands, which kept me tightly pinned. My pussy gushed hotly and my ass relaxed all at once.\n\n\"Oh fuck! Oh yes! Oh fuck!\" I moaned feeling myself opening to his twin members. \n\nHe leaned in, pounding his hips against my ass and the backs of my thighs, driving both cocks into me as deeply as he could. I moaned, squirming as the unrelenting slide of his two steel rods built up pressure, spreading through my hips, into my stomach. My breasts and nipples ached from the intense heat flooding my chest. Every thrust rocked my body, sending erotic shudders through every curve as I felt his cocks sliding inside me side by side (PREGGERS: 12-14-16-18-20!)!\n\nAs I climaxed again, spasms began to ripple through my hips and booty. My ass and pussy clenched and squeezed around the two hard members plowing into me! I squealed and moaned as white-hot ecstasy seared through my chest and head!\n\n\"Oh my god!\" I screamed. \"Oh fuck oh yes!!\"\n\nI had no hope of resisting the DOUBLE PENETRATION of the CHAMPION! The smooth, hot glide of the cock in my ass built irresistible pressure throughout my curvaceous body. The rigid pump driving every vein and ridge through my sensitive pussy sent pulses of orgasmic energy with every thrust. I moaned and begged and whimpered as my entire body felt stretched and electrified by the driving, plunging, swelling pair of dicks (PREGGERS: 22-24-26-28-30!)!\n\nSuddenly he plowed into me so deeply I thought for sure the two massive cocks would split me up the middle! The CHAMPION growled and deep inside my body I felt the hot, sticky rush as he filled me with cum! The sudden rush of warmth, the deep pressure, sent and electrifying wave of orgasmic energy shuddering through every curve on my body. \n\n\"Oh my god! Oh YES! Fill me up, my CHAMPION!!\" I squealed and moaned as the two cocks continued to pump hot spunk into my ass and womb.\n\nWhen he finally pulled out, every nerve and muscle in my body went numb and I slumped deliriously onto the ground.\n\nYOUR PREGGERS HAS BEEN MAXED! Appeared above me. BREEDER STIM BATTLE - 3/3 followed by: YOU LOSE!! And then inevitably the big red letters reading: YOU HAVE BEEN IMPREGNATED BY THE ZAUKNOID CHAMPION!!\n\nNext...Tunnel Chase."
    ],
    "authorname": "KarinaMacoy",
    "tags": [
        "gender",
        "bender",
        "blowjob",
        "litrpg",
        "swap",
        "aliens",
        "interspecies"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/mines-of-sonhadra-stage-04"
}