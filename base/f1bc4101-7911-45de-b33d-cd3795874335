{
    "title": "Trick or Trini",
    "pages": [
        "[Author's note: This story is a sequel to \"Trini Plays a Trick,\" my entry in last year's April Fool's Contest. You can read it on its own, but it's probably more enjoyable if you've read the earlier story first.]\n\n*\n\nApril to October is a pretty long time to spend working up the courage to call somebody. So even though I'd had this feeling, giving Wyn my card on his April Fool's birthday, something about the long, hot slide of summer left me convinced he'd either chickened out or lost interest.\n\nWhich meant when my phone rang two days before Halloween and the screen said \"Wyndham Tate,\" it took me a minute.\n\n'Wyndham.' Wyndham. Nnnn ... Wyndham? This was my personal line, and I keep a tight-ass wrap on the number, so anything short of instantaneous recognition threw me. \"Who the fuck do I know named Wyn \u2014\"\n\nOh, shit! Really???\n\nI jabbed the answer icon with one dark finger and put on my smoothest voice. \"Wyn, sweetie! What's up?\"\n\n\"Uh ... Trini?\"\n\nGoddamn, he's so fucking adorable! My heart did some jumping-jacks, and I realized how much I'd been bullshitting myself, shrugging off the fact he hadn't called all these months. \"Yeah, doll. Kinda jazzed that you're ringing me on this number and not the other one. What took you so long?\"\n\n\"Really?\" I could hear the nerves and surprise and jolt of pleasure in the word. \"Thanks, that's ... oh, sorry about not ... I've been ...\"\n\nI laughed, with my head back and everything tingling. \"Ooh, I'd forgotten how cute you are when you're nervous. Keep going!\"\n\nHe sort of cleared his throat, or maybe it was an attempt at a chuckle. A short pause sounded like his handsome, just-slightly-too-round face going all pink and blushy. \"Man. I really hoped I'd be cooler about this.\"\n\n\"Honey, cool does not get me hot. You're knocking it out of the park. Please tell me you're asking me out.\"\n\nSilence. Then, \"Jesus, you're awesome, Trini. So, yeah ... sort of.\"\n\n\"Sort of? Oh, child, don't tease. Are you or aren't you?\"\n\nThis one was identifiably a throat-clearing. \"Yeah, definitely. You're going to think this is a wacky idea, though, and I know it's really last-minute and you're probably busy, so I have a backup if \u2014\"\n\n\"Yes.\"\n\n\"What?\"\n\n\"Yes. I'm saying yes. What are we doing and when?\"\n\n\"Haha ... great! Uh ... so, my aunt just had emergency gall-bladder surgery.\"\n\n\"Fuck. You are sweeping me off my goddamn feet. Is she okay?\"\n\n\"Yeah, yeah, she'll be fine, she's just pissed she's not going to be able to eat spicy food any more. But the thing is, her house is like the Holy Grail for kids in her subdivision on Halloween. She's got \u2014 I mean, crazy-huge buckets of full-sized Snickers bars and Kit-Kats that she gives out every year, and since she's going to be in the hospital another couple days ...\"\n\n\"Wait. Wait, our date is going to be handing out candy to neighborhood kids in the suburbs?\" Without giving him a chance to answer, I went on, \"I love it. But how are we supposed to get away with fucking under those conditions?\"\n\nLong pause. \"Well, I wasn't assuming there would necessarily be ... fucking, you know, on the first date.\"\n\nI just shivered at the words 'first date' and then gave a cackle into the phone. \"Oh, there will be fucking. But I guess we can hold off until the candy runs out.\"\n\n\"I, uh, also figured we'd go to dinner afterwards.\"\n\n\"Perfect. Stuffing the kids full of Snickers, then fucking, then dinner, then more fucking.\"\n\n\"Christ, Trini. I think I need to hang up now and go whack off.\"\n\n\"Me too, baby, but when and were are we meeting up Monday night?\"\n\n\"I can pick you up if you text me an address. It's in Huntington Beach, and we'll need to get there before sunset, so ...\"\n\n\"Fabulous. I'm in Anaheim. You can get me around five, and if traffic's good, it'll give me time to blow you in your aunt's house before we have to set up for the trick-or-treaters.\"\n\nHe coughed, and for a second I wondered if I was overdoing the sex talk. Well, tough shit, Wyn. You shouldn't have made me wait six months with nothing to do but daydream about screwing your brains out.\n\n\"I'm going to assume you're at least partly joking there or else I might get a speeding ticket or crash the car in traffic on the way.\"\n\nThat got another laugh out of me. \"Oh, honey, you just assume whatever you need to assume. I'm hanging up now so I can text you this address.\"\n\n\"Trini, wait \u2014\" he flashed.\n\n\"Yeah?\"\n\n\"I'm just \u2014 I'm super-glad you really meant it. When you gave me your card and said I should call.\"\n\nI smiled at that. \"Sweetie, I give my card to just about anybody who'll take it, and I always say they should call. But I don't write this number on the back unless I mean it.\"\n\n\"Well ... I'm glad.\"\n\n\"Yeah, me too,\" I told him. \"Monday at five, then.\"\n\n\"Absolutely.\"\n\n* * *\n\nSo, I one-hundred percent, no exceptions, cross-my-heart-and-hope-to-die do not date customers. It's bad business and even worse as a dating strategy. But Wyn wasn't a customer \u2014 not really. True, his douchebag friends had hired me for his birthday, and true, he had fucked me that night, and true, I'd gotten paid for the evening. But the deal and the plan had been to humiliate Wyn ... make him think he was about to lose his virginity to a smoking-hot hooker, then video him at the moment he realized he'd been suckered into bed with a she-male. The two of us actually doing the deed had never been part of my negotiations with Pete and Jack.\n\nThankfully, we'd managed to turn the tables on his laughing-hyena pals \u2014 and even more thankfully, it involved Wyn doing a downright amazing job stuffing me full of cock. He was so sweet, and he showed so much character, and he made me feel so good, it went from being a morally queasy job to one of my best nights ever. So when it was finished, I did something I never do: I gave him my card, wrote my personal number on the back, and told him to call me \"for business or pleasure\" anytime he wanted \u2014 but that he had to choose one or the other and stick to it.\n\nAnd he picked me.\n\nThis meek, cute, good-hearted, conventional-seeming guy had decided he'd rather date a transgender prostitute and find out who she really was than put her in his contact list as a source of reliable, mind-blowing, on-demand sex-for-hire.\n\nIt flat-out gave me goosebumps. When I got off the phone, I felt like my eyes would pop out of my head.\n\n\"Okay. I have a date. So what do I do ... what do I do ...?\" First, I got my ass off the sofa. Then I tightened up the silk sash on my kimono. Then I put my hands on my hips and stared down at my purple-painted toenails. \"Shit, Trini, you know how to get ready for a fucking date, don't you?\"\n\nOnly I realized I didn't. Not for a date like this. Oh, I could gussy myself up and be ready to short-circuit Wyn's brain with electric sex-appeal. I could vamp. I could go get a mani-pedi tomorrow. I could pull out all the stops that needed pulling to guarantee the evening would end with me bent over something and him buried balls-deep exactly where I wanted him.\n\n\"Stop that!\" I told the front of my kimono, bulging rudely out to block the view of my toes at the thought of Wyn giving it to me. The kimono didn't listen, so I looked up and started pacing, hands still dug-in at my waist.\n\nWhat I didn't know how to do was get ready to spend an evening with a guy from a whole different world, sitting and chatting about things you can sit and chat about when a drivewayful of grade-school witches and ghosts and Power Rangers could show up and overhear any second. What I didn't know how to do was ...\n\n\"Oh, shit. I so have to change my costume plan!\" Wyn's aunt's neighbors' kids probably would not appreciate the bikini-with-a-bulge fairy godmother outfit I'd put together for Yoli's big Halloween bash. \"Oh, shit. And I've got to tell Yoli I'm ditching her shindig.\"\n\nMaybe calling Yoli will switch off my panic mode. I turned back to the couch to get my phone, went to the favorites screen, scrolled a little, hit the right entry.\n\nRing. Ring. Tense and impatient, my toes curled in the fluffy white throw-rug in front of the sofa. Ring.\n\n\"Triniiiii!\" Yoli's trademark squeal dashed away a chunk of the anxiety, just like I expected. \"How's my favorite African wild-woman?\"\n\n\"Hi, Yols,\" I said, breathing a little easier. Then I thought, Holy shit, he's got me so I can't even remember how to breathe right! \"Listen, babe \u2014 there's a problem with me and your party Monday night.\"\n\n\"Oh no! What's the probla, chupacabra?\"\n\n\"Well ... he called.\"\n\nA little gasp came through the phone. \"No! Yes! You see? I told you he would. Deets, deets, mi chocolate sweets!\"\n\nAs I ran down the details, her oohs and ah-hah!s calmed me down even more \u2014 or maybe they didn't calm me down as much as they turned me from freaked out to all warm and giddy.\n\n\"And all this time you didn't believe me when I said not to worry!\" she said once I finished.\n\n\"I know,\" I said. \"I was just sure it was all me being silly.\"\n\nYoli laughed. \"You were being silly. That's how I knew there must be something real going on. You get silly about lotsa things, Trini-bo-bini, but you don't get silly about men \u2014 especially not ones you only met once.\"\n\nI couldn't help nodding, but ... \"That still didn't mean he was going to call.\"\n\n\"Of course it did!\"\n\nHer voice sounded like she had more to add, so I waited.\n\n\"El amor,\" she said. \"El amor es todo.\"\n\n\"Haha, now who's being silly?\"\n\n\"Both of us! Now, what's your plan \u2014 besides breaking my heart by skipping the party?\"\n\n\"I don't have a plan. Just a giant boner and a totally inappropriate costume for handing out candy in the suburbs.\"\n\nYoli laughed again. \"Okay, chica. So what you do is, go take care of your boner, then drive to the costume store and see what speaks to you.\"\n\n\"But I don't even know what he likes. This is so crazy \u2014 I don't know a goddamn thing about him!\"\n\n\"Right. And that is why you listen to your heart. Go to the store. Find something there that reminds you of you, and reminds you of him. That's all it will take, no?\"\n\n\"Ohh, I hope you're right.\"\n\n\"I'm always right!\"\n\nI nodded slowly. \"Okay, Yoli. Thanks.\"\n\nShe made a kissing sound and hung up, leaving the tent in the front of my kimono to remind me that at least one part of her advice needed to be followed immediately.\n\n* * *\n\nI smacked a suction-cup dong to my shower wall and backed into it thinking about that night. Those smart, blue-green eyes of his looking at me, seeing something he found gorgeous and amazing. Then the heat of anger and decision in them when he learned about the April Fool's trick and decided not to sit still for it. The way he took charge, said what he wanted, threw aside his virgin nerves, and slid into what should have been scary, foreign territory like he owned it.\n\nAnd oh, the way he felt pushing into that territory!\n\nThe dong plugged me up nice and firm, about the right size because I'd bought it just for that reason a week or two after I met him, when the big horsey one I'd been using before didn't work right for my fantasies anymore. Folded over at the waist, with my hands on the glass enclosure in front of me, I humped that toy for all it was worth, until the lube ran down my little nut-sack and dripped off.\n\n\"Yes, Wyn ... Jesus, baby ... drive it into me ...\"\n\nI'd had to be restrained, that one time we shared together. He'd never put his dick in anyone, much less a well-skilled professional like myself, and neither of us wanted it to be over too fast. So until the very last bit, I'd kept it super-slow and gentle, stopping whenever he got too close and made his little almost-there noises, then moving again when I heard and felt him ease back from the edge of spewing. It had been some of the most beautiful sex I'd ever felt \u2014 and for sure the most beautiful I'd ever had on-the-clock. Because he appreciated it. Because he didn't just want to enjoy it, but wanted me to enjoy it.\n\nAnd because, virgin or no virgin, he ended up making me enjoy it. A lot.\n\nBut I hadn't been able to do what I really wanted, which was to put my whole body into fucking the shit out of him. And the whole week afterward, I'd burned and ached for him to call and give me a chance to. And then the second week, I calmed down a little but still kept doing my best to recreate what I'd felt with him that night, with his buddies in the other room waiting for him to run out gagging in disgust and humiliation, while instead the two of us had the most fantastic time in bed and ended up embarrassing the hell out of them with a trick of our own.\n\nAnd probably at least a half-dozen times a month since then, I'd done something like this: impaling myself on a slicked-up dildo, calling out his name, pretending to lead him by the penis into ever-improving heights as a lover. Slamming back against him rapid-fire, milking his delicious cock will all my considerable talents, and finding myself pole-vaulting toward orgasm quicker and more easily than I could remember doing in years.\n\n\"Oh, Wyn. Oh god, it's so good. Oh, god!\"\n\nIn my head, he lowered his mouth to my earlobe and sucked it a moment as he plunged in and out of me, before whispering, Here, I'll make it feel even better.\n\nThen I made my hand into his hand and caressed my breasts as he drove up into me \u2014 one and then the other, squeezing, kneading, tugging the nipples. At the sound of my accelerating gasps, that hand glided lower, down across my abs, along the swell and curve of my belly, until it wrapped itself around my straining, needy cock and jerked and pumped and \u2014\n\n\"Oh, GOD, WYN!!!\"\n\nI spouted and gouted all over the floor of the shower, filled up with the glory of him and then emptied out into the oblivion of pure pleasure. Throbs of complete delight rolled through me, one after another after another, to the imagined sounds of him crying my name and coming himself.\n\nFor a bit I just hung there panting, holding myself up with my hands on my knees, the suction-cup dong still wedged deep inside me. Finally, when I had my breath back, I thanked Yoli for the good advice, slid off, and turned on the shower to wash up.\n\n* * *\n\nMonday afternoon, I met Wyn at the drive for my building after waiting three minutes in the lobby for him to pull up. Waiting is generally not my style, of course. I'm a lot more used to letting the guy cool his heels before I come down for a date. Only tonight, I didn't want to add even a tiny extra twinge to my suitor's nerves. I already expected him to be plenty nervous-puppy cute, and besides, there were those kids in his aunt's neighborhood who'd be let down if we were late.\n\nAnd that blow-job I was drooling to give him if we got there early.\n\nSo I headed for the elevator at ten to five, realized I'd forgotten some of my accessories, went back to my apartment, grabbed them, and still arrived at eight till. It meant standing around in the lobby in my costume, but hell, it was Halloween \u2014 and it's not like I haven't been seen passing through that lobby in way more outrageous get-ups than this one. Some of my neighbors went by in biz clothes on the way in, some others in costumes of their own on the way out.\n\nAnd then a brassy, sassy Tesla Model S turned in off the street, and I hurried out in my high-heeled boots to meet it.\n\n\"Oh my sweet lord,\" I gasped when he came around the front of the car. \"What have you been up to since April?\"\n\nHe laughed and looked embarrassed \u2014 two things he did equally wonderfully. \"I guess I've been to the gym a couple times.\"\n\nHad he ever! I just stared him up and down as he got closer. He hadn't been tubby or anything, back in April. But I'd have called him ... on the soft side. Enough of a middle that you could predict where it was headed, if its owner didn't watch the beer and ice cream over the next ten years. Well, the middle had vanished, and either he'd bulked up his shoulders or started walking with them a little squarer and more confident. Even his adorable roundish face had gone a little leaner, into out-and-out handsome territory.\n\n\"Babe, you are killing it,\" I told him.\n\n\"Thanks,\" he said, with an awkward grin and a scratch to the back of his head. \"Um, I like your costume.\"\n\nI struck a pose, turning sideways to him with my laser pistol out and my free hand at the waist of my red miniskirt dress. \"Pshew! Pshew! I'm set on 'stun.'\"\n\nHe laughed, and I tucked the plastic gun back away and practically jumped over to wrap him in a hug. It took him by surprise \u2014 he barely managed to get his hands around to my shoulders before I realized I must be overdoing it.\n\n\"Sorry,\" I said, letting my hold loosen and easing back to look him up and down again. \"I just can't believe how glad I am to see you!\"\n\nHe blinked a little, then managed to say, \"Geez, it's not like I'm amazing looking the way you are.\"\n\nMy insides turned all chocolate-covered-caramel-on-a-hot-sidewalk gooey. I couldn't help myself; I had to lean in and kiss him, just a quick smooch on the lips, but full of a happy, shocking spark at the same time.\n\n\"Oh, yes, you are,\" I told him. \"But we can argue about it on the way there. Take me to suburbia!\"\n\n\"Yeah, sure,\" he said, burning bright red from the kiss. \"Here, let me get this for you ...\"\n\nHe side-stepped to open the door for me \u2014 more boy-scoutish than suave and gentlemanly \u2014 and I slid in, my planet-sized poofball curls brushing the inside of the roof. The car had a spotless interior, new-smelling and luxurious.\n\n\"Ready? Watch your fingers and toes,\" he cautioned me. I smiled up at him, and he closed the door.\n\nDamn, he's had that hair done right since last time too, I thought as he passed in front of the hood to his side of the car. With his crisply cut new do to look at, I had a hard time remembering exactly how it had been before, but the change made the difference between stylin' brunette and ran-a-comb-through-it brown.\n\n\"So I'm disappointed you don't have a costume!\" I mock-pouted as he got in and pulled his door shut.\n\n\"What?\" He looked at himself, then tugged at the long sleeves of his white button-up shirt. \"No, this is a costume. I just left the vest and my blaster belt in the back seat.\"\n\nGlancing behind us, I saw a folded black vest and a belt and holster, with a much blockier plastic gun in it than the one that came with my red space-chick mini-dress.\n\n\"Blaster, huh? I figured you'd have the lingo down better than me. I'll stick to calling mine a laser-pistol, though. You can be all manly with your 'blaster.'\"\n\nHe laughed, and the car surged forward, pushing me back in my seat without making a sound.\n\n\"Holy shit! These things are quiet!\"\n\n\"Sorry \u2014 the oomph kind of sneaks up on you without the internal combustion going along with it, right?\"\n\nAs he looked around us and maneuvered out into traffic, I watched him \u2014 careful, precise, nothing brazen or brash in his movements, but still not quite the same meek-postured kid I'd led into that bedroom back in April.\n\n\"Yours is a phaser, by the way,\" he went on. \"Not as clunky or manly as 'blaster,' more elegant and civilized. Just in case you want to use the right lingo.\"\n\n\"I'll try to remember.\"\n\nWe got to a light, and he looked me over as we waited for it to turn. \"So you picked that out because you figured I'd be into sci-fi?\"\n\n\"No, a friend of mine said I should find something that reminded me of both of us. I kinda thought this might be your thing, and I liked the movies all right myself. I just didn't watch them like I meant to be in a trivia contest later. However ...\" I nodded toward the light, which had gone green. \"... a tight red skirt definitely reminded me of me.\"",
        "He grinned and got us moving again.\n\n\"Anyway, obviously I hit the bullseye, based on your costume, right?\"\n\n\"Sort of,\" he said. \"We're from different universes, you know.\"\n\nFor a second my heart tripped over itself. Then I realized his expression was way too casual to mean it how I'd taken it. \"Oh, our costumes \u2014 right, I knew that.\"\n\nHe laughed.\n\n\"No, really, I did!\"\n\n\"I believe you. It's just really cute that you were worried about it. I expected me to be the worried one tonight, not you.\"\n\n\"Well, I mostly just did it to be cute. Worried isn't my usual gig, but cute is in my repertoire.\" I watched him drive some more, my pulse still not quite calmed down. I decided that meant I ought to risk a second or two being serious. \"Actually ... if you want the truth, mixing up my sci-fi movies doesn't worry me. I thought you meant you and me. Being from different universes.\"\n\n\"Dang,\" he said, \"I wish I was on my toes enough to bust out the metaphors like that. Of course we're from different universes. But you don't think that's a bad thing, do you? I mean, wearing that costume, you're supposed to be all about exploring universes, right?\"\n\nMy gooey-candy insides came back. \"Yeah, don't you know it. And what about you?\"\n\n\"Oh, I've been working a lot on my exploring the last few months, for sure.\" He glanced over just long enough to make eye contact, hooked his thumb toward the stuff in the back seat, and smirked. \"But tonight, I'm a scoundrel.\"\n\n\"Ooh, that's how I like them! So scoundrelize me. What's the bad-boy spaceman version of Wyn got planned for tonight, once the candy's all passed out?\"\n\n\"Uh ... well, I'm kinda making this up as I go along. So whatever mood hits me, I guess.\" We floated through traffic at the silent pull of his Tesla's electric motor. The other cars vanished for me, but I saw Wyn checking his rearview mirror and keeping an eye on our surroundings. He shook his head a nudge. \"Maybe I shouldn't have gotten your hopes up saying 'scoundrel.' The parts I'm sure about aren't all that scoundrel-ish, really.\"\n\nThat made me smile and squeeze his shoulder. \"Take your time finding your naughty side. What things are you sure about?\"\n\n\"Shit, I didn't think you'd put me on the spot. Okay, well, I'm sure I'm going to thank you, for one thing. I guess that's a good one to lead off with: thank you. Really.\"\n\n\"You're welcome,\" I said, turning a finger in my hair and smiling at him. \"For what?\"\n\n\"Tons of stuff.\" Traffic hit a crawl and let him look over at me again, a little longer this time. \"Making me realize somebody awesome could want me to be happy, even if it was just for one night. Showing me a complete stranger had it in them to be kinder than my so-called friends that I'd known for years. Letting me pretend I was some kind of stud when I had no idea what I was doing.\"\n\n\"Oh, doll-boy, I am going to stop you right there. I may have been screwing you on Jack and Pete's dime, but that doesn't mean I faked even a second of how much I enjoyed the things you did to me.\"\n\nSeeing his Adam's apply bob with a swallow, I glanced down and sure enough spotted an appealing bulge get started in his pants. Wyn, though, ignored the action going on in his crotch and kept talking.\n\n\"And that's exactly the kind of thing I mean,\" he said. \"It's like you won't let me be the loser I spent most of my life thinking I was. You made me feel like I was better than I ever thought, and then to top it off, you gave me your card with your number on the back and made me realize I didn't have to stop feeling that way. And I haven't. Not in the whole seven months since then.\"\n\nThe certainty and sureness in his voice wowed me. I felt pretty damn good about myself right then. But I did also wonder, in a fascinated kind of way, So why on Earth didn't you call until now?\n\n\"Anyway,\" he went on, \"that's some of the stuff I have to thank you for. Not to mention, you know, the mind-blowing sex part. I kind of assumed it was mostly so good because it was my first time. But I've, uh, had a fair amount of sex since then \u2014\"\n\n\"Oh! You are a scoundrel, then, aren't you!\" A mysterious, sweet little scoundrel with something up his sleeve. I better bite my tongue and let him take his time getting to whatever it is.\n\nHis face colored. \"Not like, use-'em-and-lose-'em sex or anything. Mostly second- and third-date sex. Some of it was good, but nothing compared even a tiny bit to you.\"\n\nAll glow-y, I just had to reach over and pinch his cheek. \"Careful, mister scoundrel,\" I said as I did it and then sat back. \"That kind of talk will go straight to my head.\"\n\n\"It should,\" he said, rubbing the cheek. \"But I'm pretty sure it doesn't really \u2014 I'm pretty sure you already know you're fucking awesome in bed.\"\n\n\"Okay,\" I smirked. \"Guilty as charged. Anything else you're thanking me for?\"\n\n\"That's more or less it,\" he said. \"And it's honestly all one thing: you flipped some kind of switch in me. It's not like I'm a different person or anything, but I'm on now. I get it. Things make sense.\"\n\n\"I'm betting that's a lot more you and whatever you've been doing since April than me taking it up the ass one time on your birthday.\" Two can play at this let-me-tell-you-how-great-you-are game. \"And you do realize this puts a shitload of pressure on me next time we go to bed. Because I damn sure must have out-done myself last time.\"\n\n\"Well, I mean, you did, but does it help any that I think you'd have flipped that switch even if the sex part had just been okay? All you have to do if we, uh, go to bed again \u2014\"\n\n\"When we go to bed again.\"\n\n\"Okay, so, just to keep from having an argument at the very start of our first date ... when we go to bed again, all you've got to do is just be you. Smile the way you smile. Look at me the way you looked at me that night. Say the kind of things you say, like you're saying right now.\"\n\nI tried to think of some new smart-ass reply. But all I came up with was, \"Sure, honey. I can do that.\"\n\n* * *\n\nWe didn't get to his aunt's house in time for me to blow him. Dammit.\n\nAfter a stop-and-go drive spent chatting on which of those movies we each liked most and who our favorite characters were and then probably too much of me drooling on about the virtues of Karl Urban, the sun had sunk almost all the way to the horizon. We pulled into a subdivision where the neighborhood streets had that washed-out look of dusk to them, in time to see a couple of early-starter kids already dotting the sidewalks in their costumes, loot-bags hanging empty from their tight little fists.\n\nI sighed. \"Guess we're gonna have to get right to the candy handing-out.\"\n\nWyn laughed. \"If I didn't know better, I'd think you're hornier to get it on than I was that night at Pete's. Here, hang for a second while I get the garage door.\"\n\nWe wheeled into the driveway of a swank-looking, upper-middle-class-ish place \u2014 very domestic but also professionally landscaped like its neighbors to either side. Wyn hopped out to work a keypad to one side of the door, then got back in right as it finished rolling up.\n\n\"Sorry,\" I told him. \"I thought you were cute enough to eat right up before, and now you're turning out twice as scrumptious as I remember. Not that I want you thinking I'm a total slut, but ... if you remember, I am actually a total slut.\"\n\nThe Tesla came to a stop next to a silver Mercedes in the garage, and he shut the motor off and turned to look at me.\n\n\"What?\" I asked, not sure how to read his expression \u2014 mostly a smile, but ... kind of searching for something.\n\nHe shook his head. \"I'm just thinking how lucky I am that my aunt stocks up on candy bars and not lollipops. I'd be in real trouble if I had to spend the next couple of hours with you in arm's reach of a bunch of lollipops.\"\n\nI gave him a wide-eyed moue of enthusiasm. \"Child, it's like you've known me my whole life!\"\n\n\"Come on. My aunt said the candy's in the pantry.\"\n\nWe got out and went through the interior door, which opened straight into a combo utility room and pantry, washer and dryer at one end, shelves of food and household supplies lining both walls. Sure enough, below one of the bottom shelves sat a couple of bushel-basket-sized plastic witch's cauldrons, so full of chocolate bars the lids wouldn't close all the way.\n\n\"Damn, she expecting a whole army of kids to come through?\"\n\n\"That's the impression I got.\"\n\nIt took some heaving and hauling for us to get those giant pots out to the top of the driveway. Then Wyn fetched us some folding chairs from a corner of the garage. A ghost and a princess dashed up and thrust their pumpkin-shaped candy pails at us before we'd even settled in, shrieking, \"Trick or Treat! Trick or Treat!\"\n\n\"You're in luck,\" I told them. \"I am equally good at both of those!\"\n\nWyn laughed from behind me where he was setting the chairs up, so I aimed my bottom at him and bent full at the waist to grab a couple of Snickers and drop them in the kids' buckets. They squealed out their thank-you's and ran off to meet their parents at the base of the driveway. I waved to the adults, who waved back \u2014 the dad with more enthusiasm than the mom.\n\nArranging myself casually and alluringly into my chair, I watched my date head back into the garage.\n\n\"I have to finish getting dressed,\" he explained in response to my curious look, then opened the back door of the Tesla to grab the rest of his costume.\n\nI raised my voice so he could hear me with his head tucked down into the car's interior. \"If I only had a dime for every time a guy has said that to me!\"\n\nHe came back smiling but a little red-cheeked, shrugging his way into the vest and then buckling on his laser-pistol gun-belt.\n\nBlaster, I reminded myself.\n\n\"So,\" I said as he sat down. I had my legs all the way out, crossed at the ankles, and his gaze climbed up along them on its way to meeting mine. \"Here we are.\"\n\n\"Yeah.\" He scratched the back of his head, then wiggled in his camp-chair and adjusted his holster, trying to get comfortable.\n\n\"What should we talk about?\"\n\nHis eyes looked into mine like splashes of a tropical, aquamarine sea, wavering forward and back as if a breeze kept pushing them away from a shore they wanted to reach.\n\n\"Well, considering that I'm probably way more curious about you than you are about me \u2014\"\n\n\"Why would you say that?\"\n\nHe looked genuinely surprised. \"Come on, seriously? You have to admit, you're just intrinsically more interesting than I am.\"\n\n\"What, because I'm a t-girl? Or because I'm in the escort business?\" I glanced up and down the street to make sure no candy-hunting brigades had gotten within earshot, then lowered my voice anyway just in case. \"I'm not gonna complain if you say it's because I'm hot as hell ...\"\n\nHe laughed, a little deeper in his throat than normal. \"You're definitely hot as hell. Jesus. I don't know, I guess it's just because you know who you are, and you own it. And I'm just kind of a wishy-washy, still-trying-to-figure-it-out ... I don't know what.\"\n\nI reached over and teased at his sharp-cut bangs. His eyes followed my fingertips as I did it. \"See, from where I'm sitting, you're on a journey. You're making a move. And the fact that you're not sure where it'll take you? That's interesting.\"\n\nHe didn't say anything, just looked like he was processing the idea as I relaxed back into my chair.\n\n\"Look, can I ask you something?\" My eyes flicked up along the sidewalk. \"And you can answer after this next gaggle of kids gets their swag.\"\n\nHe followed my glance to the knot of super-heroes halfway down the block. \"Um, sure. Fire away.\"\n\n\"Why'd you call my personal line, not the one on the front of the card?\"\n\n\"Hmm. Uh ...\"\n\nThe sound of kiddie footsteps turned from a patter to a stampede.\n\n\"Trick or treat!\"\n\n\"Oh, goodness, the super-criminals better watch out! Look at you muscle-y things!\"\n\nA little Iron Man posed and flexed, but the rest just held out their bags.\n\n\"Here you go,\" said Wyn, reaching out with a fistful of candy. \"Nice costumes, guys.\"\n\nThey thanked us and trucked on into the deepening shadows of sunset. I giggled a little at the kid with the giant hammer and red cape skipping away as he went.\n\n\"To be honest,\" Wyn said once they'd cleared off, \"I really didn't think about it. Calling you to pay for sex ... I mean, I'm not judging or anything, I just didn't have any interest in that.\"\n\n\"Okay,\" I said. \"But why you didn't call the front number only half answers my question.\"\n\n\"Right ...\" He took a minute, looking down the driveway at nothing, before going on. \"So right then, that night, driving home and lying in my bed and high on not being a virgin anymore, I totally bought that you wanted me to call you, for real, as a person.\"\n\n\"I did,\" I insisted, furrowing my eyebrows. \"I wouldn't have \u2014\"\n\n\"No, I'm sure you did \u2014 I mean, I think there was probably an element of pity in it, but \u2014\"\n\n\"Stop that. You're not being fair to yourself.\"\n\nHe laughed. \"That's kind of my thing. But my point is, the next morning, I wasn't so positive it was real. Maybe the number you wrote was just made up, or maybe a different work line. Maybe it's just good business to make the guy think you're for real interested in him. Maybe you wanted to be nice and boost my confidence but figured I wouldn't be brave enough to call either way.\"\n\nI crossed my arms and waited, itching to interrupt him even though he sounded like he was going somewhere with this.\n\n\"Oop. More trick-or-treaters,\" he said, eyes going past me along the street.\n\nI scowled, but it was hard to keep a grumpy expression when the kids ran up.\n\n\"Trick or treat! Trick or treat!\"\n\nAs Wyn doled out the Snickers, this little pink-tu-tu ballerina looked me up and down and said, in a shy voice, \"I like your costume.\"\n\n\"Thank you, sweetie!\" I reached out and patted her head. \"I like yours too.\"\n\n\"My mom picked it,\" she said. \"But next year I'm going to ask for one like yours.\" Then she curtseyed and ran off with the rest of them.\n\n\"Oh, god, that's so adorable ...\" I watched her and her pack scurry off, trailed by a couple of housewifey types, one pushing a stroller. \"All right, so coast clear. Go on. You spent the whole next day convincing yourself I didn't mean it.\"\n\n\"No, that's not how it was. It was more like I didn't want to be fooling myself. This voice kept telling me I should just throw the card away, because even if it was real, what could possibly come of it? And what I finally decided was, who cares what might come of it. The fact was, I didn't want to throw it away. I wanted it to be real, even if real just meant I'd encountered this cool, unusual person who thought it might be nice to talk to me again.\"\n\n\"Or fuck you again,\" I said, \"but not for money.\"\n\n\"Sure.\" He laughed. \"Of course I wanted that to be real. And after what I wanted wrestled around with my not wanting to fool myself, I thought, 'What if the real piece of fooling myself is the idea that I should throw the card away? What if that's the thing I'd be an idiot to convince myself to do?'\"\n\nI waved both hands downward along my torso. \"Honey, have you seen this? I sure hope you know you'd be an idiot to give it a pass.\"\n\n\"If you'll stop being sexy a minute, there's a lot more I'd be an idiot to pass on. If there was even just a small chance of you being as nice as you seemed, only a total dipshit would have thrown your card away.\"\n\nI got the flutters and put my hand over my heart to calm them down. \"Well that's sweet, but if you mean it ... why'd you wait so long?\"\n\n\"Research.\"\n\nI laughed at him. \"What?\"\n\nAnother gaggle of kids came up before he could answer. Two of them had on the boy version of my space uniform, and I felt obligated to get in a shootout with them before we handed over the candy.\n\n\"Pshew! Pshew!\" I called out after the spacemen as they rushed off. Then I put my gun in my lap. \"Where were we? Oh, research. What, you mean like, how HRT works and what the stats are for STDs in sex workers?\"\n\n\"No,\" he said, shaking his head. \"I mean like, how does it feel to have sex with a vagina instead of doing it anal, and can I hold my own in a dating situation and make relationship decisions with my brain and not my dick. What happens when I push myself to lose some weight and get in shape? How does the world look when I decide to figure out what I want and go for it, not just keep dog-paddling along whichever way the current takes me? I could have called you that very next day, and it would have been what I wanted to do. But I wouldn't have known if I wanted it because it was what I really wanted, or just because something exciting dropped in my lap and I let it overwhelm me. Pretty much every girl I dated in college went that way \u2014 Pete or Jack would send somebody at me they weren't interested in themselves, I'd flip out over her, she'd use me to hang around near Pete and Jack until it became clear they weren't having what was on her menu, and then she'd move on. I wanted to be sure that if I flipped out over you, I was flipping out over you, not just over the fact that somebody was paying attention to me.\"\n\n\"Wyn,\" I told him, \"you are my new hero.\" He rolled his eyes at that, so I went on. \"No, seriously. That's probably the most rational reason for not calling a girl I've ever heard in my life.\"\n\n\"Thanks, I guess?\"\n\n\"And you're telling me the vaginas didn't stack up?\"\n\nHe laughed and turned red, which even though it was full dark now I could see because his aunt's house had these motion sensor lights that came on at the drop of a pin. \"If it won't make you insecure, vaginas are pretty damn awesome.\"\n\n\"Child, I've been there, done that, so no, vaginas don't make me insecure.\"\n\n\"Really? You've ...\"\n\n\"Sure,\" I said. \"I'm into guys personally, but I'm professionally bi. They're maybe not the worst thing to poke your equipment into ...\"\n\n\"Trick or Treat! Trick or Treat!\"\n\n\"Eep!\" My head jerked around. Thankfully, it didn't look like the oncoming swarm of zombies, firemen, and axe murderers had been close enough to hear me. We banished them with fistfuls of candy, then had to deal with another round of super-heroes.\n\n\"Now what was I saying?\" I asked once quiet returned to our driveway. \"Oh, yeah. I can sort of see the attraction. So you tried on enough to figure out what kind of fit you were looking for?\"\n\n\"Basically. I tried on enough to figure out I'm more interested in who's attached to a hole than what its original purpose was.\"\n\n\"Ha!\"\n\n\"Plus ...\"\n\n\"What?\"\n\n\"Well, most of the girls I went out with this summer ... it took some doing to get them to come, and when they did, maybe I could really tell sometimes and maybe I couldn't. But when I had you in my hand, and felt you swelling up and then exploding ... damn, it blew my mind.\"\n\n\"Ooh, la,\" I said, licking my teeth and squirming in my chair. \"You're giving me such a bulge in my skirt ...\"\n\n\"Kids,\" he warned, nodding in the direction of an approaching herd of footsteps. We doled out more candy, and then some more, and then some more, before he could go on.\n\n\"So,\" he said at last, \"that's why I called your personal number \u2014 because I wanted you to be real. And that's why I waited \u2014 to make sure that whatever I ended up feeling would be real too.\"\n\nWow. I didn't even know what to say.\n\nWyn took the silence as an opportunity and gave me a look. \"Now, can I turn it around and ask you something?\"\n\n\"Only fair, I guess.\"\n\n\"Why does somebody as smoking-hot and polar-ice-cap cool as you give a guy like me her personal number and then even remember doing it, seven months later?\"",
        "\"Oh, that's easy,\" I said. \"You turned an ugly thing I wasn't sure I ought to be doing into the funnest, most satisfying night I've had in years. When you met me at that door, I felt like I was as beautiful a sight as you'd ever seen \u2014 not just sexy or sizzling, but really and truly beautiful. And you kept making me feel that way. Even after I told you what was up and you got hellacious pissed at those asswipes you called friends. Even after \u2014 especially after you got your dick up my ass and most guys would've been out of their heads with losing their virginity, you kept acting like I mattered. You wanted me to feel good \u2014 needed me to feel good. I fuck a lot of guys, and I'm not saying none of them ever care about whether I get off, but whether they're all about themselves or they like their sex mutual, the string of them blurs together after a while. I like my job \u2014 sometimes I love my job. But it's a job, you know? And you weren't.\"\n\nHe nodded and said, \"Hmm,\" and then some more kids came up.\n\n* * *\n\nOnce the sun went all the way down and the spooks really started to come out, it only took about forty-five minutes or an hour for us to blow through those buckets of Kit-Kats and Snickers. Of course, I'll admit I gave out two and sometimes three at a time when Wyn had his hands full and wasn't keeping an eye on me. I figured if the aunt had her heart set on being so generous, limiting it to one per kid would defeat the purpose.\n\nAnd take longer than I wanted it to.\n\nOut of candy, we shut things down ahead of eight o'clock and carried the empty plastic cauldrons back in the house, where as soon as we set them on the pantry floor, I took hold of Wyn's arm and pulled him close.\n\n\"So. Trick or treat.\"\n\n\"God, I honestly don't know,\" he said. \"'Treat' sounds fantastic, but I was in on that trick you pulled on Pete and Jack, and that was pretty amazing too.\"\n\n\"Well, while you're trying to decide ...\" I put one hand in his hair and ran the other down his waist to his belt and then over to the handle of that toy gun. Tugging up on it, I said, \"Oh, look. Your blaster has come out of its holster.\"\n\nWyn swallowed as I slid down to my knees in front of him, rotating the black pistol up from its holder so that the trigger hung at his hip and the barrel pointed out at me. My other hand trailed slowly southward across his chest, his abs \u2014 then turned and swept around to grab his ass, while I leaned over open-mouthed to breathe right at the tip of that black plastic barrel.\n\nI flexed and pursed my lips, not quite making contact with the gun, gaping wide to waggle my tongue millimeters from its end, then puckering to all but brush against it.\n\n\"Oh, geez,\" he said.\n\nI leaned forward and took the flared nozzle in, plugging it with my tongue so that when I sucked, there was a complete seal and my cheeks curved inward from the vacuum.\n\n\"Nnnnn,\" I said through my nose. His breathing sped up as I dug my fingers into his ass-cheek and worked at the end of that toy.\n\n\"Shit, that's so hot. I can't tell if this is trick or treat.\"\n\nI popped loose and looked up at him. \"Let's see if I can help you figure it out.\"\n\nGoing down on the blaster again, I drew spiraling curves with my index finger along his butt, around his thigh, up around his bellybutton, down to his belt buckle, which I tugged at for just a second, and then onward to his fly. He breathed even faster, while I swirled my mouth around the gun at his hip. After a few fingertip-flicks up and down at his zipper, I reached for my own holster and got my blunt-ended phaser pistol loose, raising it up to his crotch to press against and then circle the bulge there.\n\n\"Ahh ... Trini, that's ...\"\n\nI pulled free again and met his eyes, rubbing the rounded tip of my toy weapon gently up and down his erection.\n\n\"Pshew, pshew, pshew,\" I whispered. Then I gave the blaster a long, slow lick. \"I think this one's out of ammo. Maybe you have a backup concealed ... somewhere?\"\n\n\"Uh-huh ...\"\n\nI tucked his pistol back in the holster and patted it, then tugged open the buckle of the gun-belt and let it drop. Still caressing his hard-on with my ray-gun, I slowly undid the belt that held his pants, unbuttoned them, ticked the zipper inch-by-inch downward. Then, as I reached for the y-front of his undies, Wyn cleared his throat.\n\n\"Hey, Trini? Before we get to that, do you think you could come up here and, uh, kiss me for a minute?\"\n\n\"Oh, shit, am I going too fast, sweetie?\" I half-jumped up, heels putting me a hair taller than him so I was looking down into his eyes. \"I'm sorry, you've just got me so worked up \u2014 I swear, maybe ninety percent of my masturbation the last six months was \u2014\"\n\nBut his arms went around me and he pulled me close and kissed me, eyes closed, so that everything went away and I was just being held and tasted and wrapped in feeling. It went on and on until I made a little sound in my throat. I couldn't even tell you exactly what it was. But Wyn pulled back and looked at me.\n\n\"Only ninety percent?\" he asked. \"I'm going to have to up my game, obviously.\"\n\nI laughed so hard I snorted and had to bite my lower lip in embarrassment. Then I said, \"Kiss me some more.\"\n\nHe did \u2014 gently and passionately at the same time. He had one hand at the small of my back and the other swaying back and forth across my shoulder blades. My tits felt his chest crushed against them, rising and falling with the strength of his breath. I realized I still had my laser pistol in one hand, pressed flat against his spine while my other hand tangled itself in the short hair at the back of his head. I let the phaser gun drop and clatter to the floor, then used the free hand to pull him closer by the tailbone so I could grind against him and feel the rigid arousal in his crotch with my own. He moaned past my lips with his tongue extended through them.\n\nThe hand at the small of my back went down to my ass. The other one joined it. I rolled and humped with my pelvis at their urging. Then his fingers dug into the cloth of my skirt, bunching it up, scraping it higher and higher to expose the thighs above my nylons to open air. He got hold of the hem, lifted it even farther. Another tug, and a wiggle of his hips, and he had it up high enough for the root of his cock to rub straight against my panties.\n\n\"Uhh ... niiiice ...\" I moaned, helplessly breaking our kiss. His mouth slipped along my jaw and nibbled its way down my throat. I tried to dip my head and get back to it, but he kept going, sucking at my collarbone, then kissing down the low neckline of the dress to my cleavage. And before I knew it, he'd gone to his knees. \"Oh, fuck \u2014 now who's moving fast? Where are you going, sweetheart?\"\n\nHe grinned up at me. \"Where no Wyn has gone before.\"\n\n\"Are you sure you \u2014 nnhhhhh ...\"\n\nWith one hand keeping my skirt aloft, he cupped the other to my now-engorged shaft, hefted it, rubbed it. \"Fuck, that feels so good ... but you really don't have to \u2014 ooh!\"\n\nHe squeezed just right.\n\n\"I know,\" he said. \"But you don't think you're the only one who's been having masturbation fantasies the last six months, do you?\"\n\n\"Apparently not,\" I breathed. He got his fingers in the waistband of my panties and worked them down until the beefy beast jumped out.\n\n\"Wow,\" he said, watching it rise and throb right in front of his face. His left hand moved to my root and encircled it. That grip made me surge to peak stiffness and rolled a drop of precum out of my tip. \"This thing is really hard.\"\n\n\"Uh-huh. I have a good endocrinologist and a crazy mad natural libido. Now, you're going to have to do something down there or switch places with me, sweetie, because \u2014\"\n\nHe licked.\n\n\"Fuck, yessss,\" I gasped. Wyn kept his eyes on mine and made little tasting movements with his lips.\n\n\"Not bad,\" he said. His hand squeezed. Another bead swelled out of me. He opened wide and leaned forward, taking my crown in but not making contact with anything but his tongue, which he ran back and forth along the bottom of my shaft, then rolled in little waves to lollipop me. Finally, he sealed down and sucked in his cheeks, easing me deeper and deeper into the warm, soft heaven of his mouth.\n\n\"I'm so not used to this,\" I panted. \"It's always me getting the knee-calluses.\"\n\nHe popped loose. \"It's kind of fun. You may have to get used to it.\"\n\nThen he went down on me and bobbed several times, never breaking eye contact, his nose flaring cutely as he breathed.\n\n\"Jesus, Wyn, you do your research on this part too?\"\n\n\"Nn-nnh,\" he said around me, shaking his head slightly in a way that slid me back and forth between his cheeks.\n\n\"Well you're a fucking natural then. Ahh, that feels so good. Yes, baby, come on, suck me ...\"\n\nHe really went at it with gusto, milking me with his hand, sloshing on and off with his mouth. A couple of times I saw him go too far and squint a little at the start of a gag. But he never pulled all the way off, just slowed and went shallower for a few strokes until he got his rhythm back.\n\nIt felt fantastic.\n\nA few minutes in, I was going crazy. \"Wyn, honey ... I'm getting close ... oh, god. But I've just got to get your cock in my mouth. Please? Can I lie down and \u2014 mmh, fuck, uhh \u2014 have you drop that sweet thing ... into my throat while you get me there?\"\n\nHe slowly released me, letting my damp shaft cool and throb in the open air with only his hand still around the base.\n\n\"Sure.\"\n\n\"Oh, god, thank you.\" I dropped to my butt and lay flat, pulling at his legs to hurry him into place as he switched around, then wrestling his pants and briefs loose to free that stiff, pale length of wonder right over my face. His lips slid down almost to my root, making me gasp. With all my strength, I yanked his ass down and raised my head to gorge on him. He moaned around my rod and started bobbing with a vengeance.\n\nHoly shit, it feels so good. I'm going to come so fucking fast ...\n\nNormally, I might have tried to hold back, get us to come at around the same time. But right then, there wasn't a prayer it would work. Unlike my usual on-the-job work sex or off-the-clock play sex, I wasn't focused on making someone else feel good, or getting myself to feel good. My whole world had turned into the gliding, wet, delicious, wonderful understanding of someone else wanting me to feel good.\n\nAs his cock plunged in and out of my mouth, I groaned and thrust up past his lips, hearing him murmur encouragement around my probing, joy-swollen shaft.\n\n\"Mm-hmm,\" he said, \"mm-hmm, mm-hmm ...\"\n\nHe wants me to come. He wants me to come in his mouth. Oh god, I'm going to ...\n\nAnd then I was there.\n\n\"MMMMMMMhhhhh!\"\n\nFuck, Wyn!\n\nThe orgasm curved my whole body up against him, a skyscraper arch with a cock fountain at the top, gushing, gushing, shooting cum into the clouds like a lightning rod pulling down a gazillion volts of electric charge. And he stayed on me the whole time, swallowing, squeezing with his hand in time to my throbs until the last one finished and I collapsed to the floor.\n\nHis cock left my mouth, and he slowly released mine and turned around to lie beside me as I gasped and tried to recover.\n\n\"So I guess that was okay, huh?\"\n\nI laughed and pulled him to me and kissed him, feeling the hard floor of the pantry beneath me more and more with each ebb of reality back into place.\n\n\"Oh, baby, yes,\" I said. \"Way more than okay. Put a pair of boobs on you and you'd steal all my customers away.\"\n\n\"I don't think my legs are as nice as yours, but I'll take your word for it.\"\n\n\"Hmm.\" I smiled at him, put a hand to his cheek, watched his blue-green eyes watching mine. Then I patted his face and let go. \"So what do you want me to do for you?\"\n\n\"Well, if you brought condoms and lube, I wouldn't mind going in the spare bedroom, getting naked, and having sex with you.\"\n\nI gave him a couple of wide-eyed blinks. \"Condoms? Lube? Oh, darn, I can't believe I forgot those.\"\n\nHe laughed, stood up, and gave me a hand to my feet.\n\n* * *\n\nIn the spare bedroom, I had him unzip me and help me out of the dress. His hands glided over every inch of my flesh as the cloth left it. Then they unhooked my bra and found the full, dark globes of my breasts as I slipped free of the straps and cups.\n\n\"Naked-naked?\" I asked, letting him fondle me from behind while I got my panties the rest of the way down and off. \"Or would you like to fuck me in these boots and stockings?\"\n\n\"Oh geez,\" he said. \"Is dating you going to involve a lot of ridiculously hard questions like that?\"\n\nI stepped away and turned, heart lumping off-kilter in my chest. Not wanting to show it, I gave him a provocative lift of one eyebrow. \"It's going to involve a lot of ridiculously hard something. 'Ridiculously hard' will for sure be a major theme.\"\n\nHe smirked, shook his head, looked me up and down with amazed eyes. I put my hands on my hips and cocked them fiercely to maximize the effect: three or four inches taller than him in the high-heeled boots, my long, satiny legs wrapped in leather and dark nylon, a mostly faded erection hanging from my clean-shaved crotch under the soft curve of my tummy. Big, round breasts. Even bigger, rounder explosion of hair curling out from my head. Confidently squared shoulders. He took it all in and took his time about saying anything.\n\nWhen the silence went on long enough, I said, \"So ... you're planning on dating me, then?\"\n\nHis eyes jumped straight up to mine. \"Well ... yeah, if that's not being presumptuous. I mean, I assume there's a lot more to you than a couple of hours of conversation and some hot sex. And I haven't even had a chance to tell you all about my accounting job yet.\"\n\n\"Ooh, accounting,\" I said, moving closer again. \"I will totally let you bone me several times a week if I get to hear about accounting.\"\n\n\"It's mostly done with spreadsheets these days,\" he said. His hands went to my waist as I started unbuttoning his shirt. Then he nodded toward the bed. \"If you want a demonstration, I'll be happy to spread you on those sheets right now.\"\n\n\"Ha!\" I said. Then I leaned in and kissed him until I had the shirt off. \"Made a decision about the boots yet?\"\n\n\"Yeah, the boots are staying on this time. You said there'd be more fucking after dinner, right? We'll do it without the boots after dinner.\"\n\n\"Nice,\" I said. I picked my purse up from the floor where I'd dropped it while undressing. Wyn got his shoes and socks and pants off while I took out the condoms and my little bottle of lube. Damn, he has definitely toned up since April, I thought. He didn't quite have a six-pack, but his belly had gone from soft to tight, and his pecs had more heft and definition. Not that any of this could entirely distract me from the main view: his still-very-hard cock jutting out, begging for attention. I let my eyes linger on it. \"Oh, dear. I'm afraid I'm going to have to suck on that some before it can go in my ass.\"\n\nHe watched me close in on him. \"Okay. If you insist.\"\n\nWithout touching him yet, I got to my knees and set the lube and condom box on the carpet. The anxious beam of his dick pulsed with every heartbeat, inches from my mouth.\n\n\"Mm, mm, mmm,\" I said. \"You may have to push me off to get me to stop.\"\n\nHe opened his mouth to say something back, but before he could, I gave a lunge and deep-throated him, no hands. All the way down, nose in his pubes, I tensed and loosened and rolled and squeezed every muscle in my throat, cheeks, lips, tongue.\n\n\"Holy shit,\" he gasped. \"I don't want to push you off ... but that's going to make me come really fast ... if you ... keep it up ...\"\n\nI rolled my neck back and slipped off of him. \"I don't mind if we save the boots-on fucking for after dinner and the boots-off fucking for after breakfast.\"\n\n\"Whatever you want,\" he said. \"I'll do whatever you want me to.\"\n\nI took about half a second, then wiped my mouth and hopped to my feet, condoms and lube in hand again. \"I want you to bury it in me and give me the rump-hump of my life.\"\n\n\"Yes, ma'am.\"\n\nI know what I'm doing with condoms, so in about two seconds, I had him bagged up and ready to ride. He hummed appreciatively at the quick coating of lube I gave him with one hand, and then I reached behind myself and wiped the remainder in my crack.\n\n\"Now,\" I said, stepping around him to the bed. Legs straight, I leaned over and put my hands to the mattress, poking my bottom out in his direction. \"Like this? Or \u2014\" I crawled hands and knees to the center of the bed. \"\u2014 like this? Or like this?\" For the final choice, I rolled over and hiked up my legs, hands behind the knees, spiked heels way up in the air.\n\n\"Uh, can we start off the first way and end up the last way?\"\n\n\"Perfect,\" I said. A heartbeat later, I was back off the bed and presenting my wet and ready backside to him.\n\n\"Jesus, Trini. You are so hot.\"\n\n\"Uh-huh,\" I said. \"Get to it, mister.\"\n\nHe stepped in behind me, and I set my feet wide and got ready to loosen everything up. With my hands on the mattress, the best I could do was get him in my peripheral vision, even with my shoulders and neck twisted. So I couldn't really see his expression, but I could hear in his breathing how excited the site of my waiting ass made him\n\nThen his tip brushed against me, and I lowered my head and closed my eyes and found my own breathing racing too. His palm spread flat across my tailbone. The reservoir at the end of the condom tickled my sphincter, then pressed in.\n\n\"Oooh ...\"\n\nPressed harder.\n\n\"Mmm ...\"\n\nHis hand slid from my tailbone to take hold of my waist.\n\nHe pushed.\n\nIntruded.\n\nPopped through as I relaxed.\n\nI let out a \"Guhhh ...\" and he gave an \"Uhfff!\" and then he was in and sliding, sliding, sliding deeper within me.\n\n\"Oh Wyn, fuck, yes ...\"\n\n\"Uhhh \u2014\"\n\nHis pubic hair brushed against my crack, compressed, and flattened, until his crotch rested completely flush with my bottom and I felt the bulge of his cockhead rooted inside me at maximum depth. He held me there, in bliss, both of us panting, his hands seized tight to my waist. Then he pulled a couple inches back out and did it again.\n\n\"Uh-huh, yeah,\" I said. \"Goddamn fuck me like that.\"\n\n\"Mmh!\" he grunted, feeding me another thrust. \"Ngh, Jesus ...\"\n\nEach push rocked me harder and faster against the edge of the bed.\n\n\"Yes! That! Ohfuck, yes!\"\n\n\"Uhh,\" he said. \"Uh-huh ... Trini, it's so good ...\"\n\nBam! Bam! Bam!\n\n\"Yes, Wyn, pound it in there, sweetie!\"\n\nThe way he tooled in and out of me hit my prostate just right and got my own cock swelling back up again. I remembered that first night, on his birthday, his hand coming around to grab hold of me ...\n\n\"Ahh \u2014 god \u2014 I have to stop ...\"\n\nHe pulled out, gasping and doubled over with his hands on his knees.\n\n\"Whoo, geez. Almost ... lost it there ...\"\n\nWhen I looked at him, he grinned weakly and said, \"Sorry!\"\n\n\"Sorry? Shit, honey, that was some prime stuff there. You ready for me to get on my back?\"\n\nHe nodded, still getting his breath back. I threw aside the comforter that covered the bed, arranged some pillows, and gave my sexiest squirm getting into place. For good measure, I brought the lube bottle with me.\n\n\"Boots on, legs up,\" I said, pulling my thighs up and open and aiming my heels for the ceiling. \"Whenever you're ready.\"\n\nHe crawled onto the bed and maneuvered into place before my lifted bottom. The pole of my erection hadn't gone back down yet, and he stared at it, took hold of it as he lined himself up.\n\n\"I like how your hand feels on me,\" I breathed. He stroked me in response, then eased his hips forward, dimpling my asshole inward. \"Ooh ...\"",
        "\"Fuck, that's good,\" he said when I relaxed enough to let his head slip in. Then he scooted and thrust and penetrated farther.\n\n\"Mm-hmm,\" I said. His hand pumped at my shaft. I found the lube bottle and gave it to him. \"If you don't mind ...\"\n\nHe grinned at me and clicked the cap open. Still stroking my rod, he turned the bottle up and drizzled hand and dick alike, so that each sweep of his grip along me slickened and glided more sweetly.\n\n\"You are adorable,\" I told him.\n\nHe closed the bottle and worked still more of his cock up into me. \"You too,\" he said. \"And beautiful. And sexy. And ... oh, god, that's good.\"\n\nBy now I'd gotten my hips rolling. The feel of his hand milking me and his cockhead exploring my insides set all my glands on fire. After the fantastic stand-up drubbing he'd just given me, this would not take long at all.\n\nI could see in his face the same was true for Wyn. His lip trembled. His cheeks and forehead relaxed with a faraway delight.\n\n\"Yes, Wyn,\" I whispered to him, my eyes narrow with pleasure. \"Fuck me.\"\n\nHis silky grip slipped up and back, up and back. His other hand moved to my breasts, circling a fingertip around a nipple, then trapping it between two joints, then kneading and rolling in time to his thrusts.\n\n\"God,\" I said. \"That's doing it ...\"\n\n\"Uh-huh.\" He stroked into me harder, faster.\n\n\"Ohhhh, yessss ...\"\n\n\"Uh-huh.\" Harder. Faster.\n\n\"Wyn ... ah ...\"\n\nHarder.\n\nFaster.\n\n\"Ah \u2014\"\n\nMy eyes rolled up in my head.\n\n\"FUCK!\"\n\nThe heat of my own cum splashed all the way to my breasts, where his hand still caressed and played.\n\n\"Oh shit, Trini ...\"\n\nI felt every hot, white strand leave me and fall back again, felt his hand spread the slippery jettings across my chest. Then ... felt him blow loose inside me.\n\n\"Uhhhh-HUHhhhh!\"\n\nMy ass clutched his throbbing member tight as I watched him buck hard against me in ecstasy. It was the most beautiful thing I could imagine. And when it stopped and he groaned and turned his eyes back down to me and smiled, it became even more beautiful.\n\n\"Come here,\" I said, pulling him down to kiss me. He responded with an easy, sweet passion that gave me shivers. The play of our tongues and the softening fullness of his cock inside me made me delirious.\n\nFinally, he took a deep breath and broke the kiss to look at me.\n\n\"See?\" he said. \"I'm thinking the whole 'different universes' thing is not going to be a problem at all.\"\n\n\"Maybe not,\" I agreed, shifting a lock of hair from his forehead. \"Blasters, phasers, accounting, sex-work ... we may be able to make them fit together.\"\n\n\"I have faith in us,\" he said. \"We're talented individuals. So where do you want to go for dinner?\"\n\nI looked down at my semen-coated tits and belly. \"I may be too sticky to go out for dinner.\"\n\n\"I could help you shower.\"\n\n\"Okay, deal.\" I watched him a few seconds more, then said, \"Wyn?\"\n\n\"Yeah?\"\n\n\"I'm sure glad you had such asshole friends.\"\n\n\"Haha, me too. We'll have to thank them for introducing us sometime.\"\n\n\"Maybe send them a bag of candy.\"\n\n\"Or pictures of us in the shower.\"\n\nI laughed. \"Okay, get off me and let's get to work on that.\"\n\n\"In a minute,\" he said, giving me another kiss. \"Or two.\" "
    ],
    "authorname": "IanSaulWhitcomb",
    "tags": [
        "halloween",
        "candy",
        "costumes",
        "star wars",
        "oral sex",
        "anal sex",
        "blowjob",
        "escort"
    ],
    "category": "Transgender & Crossdressers",
    "url": "https://www.literotica.com/s/trick-or-trini"
}