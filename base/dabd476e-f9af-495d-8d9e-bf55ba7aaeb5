{
    "title": "Doing The Doctor's Daughter Ch. 03",
    "pages": [
        "This is the last of a three chapter series. It brings together characters from previous stories. For good continuity, Chapters 1 and 2 should be read first. For full effect, also read FLASH MOB ORGY, especially Ch. 2, which introduces the sexy voyeur Dr. Erica. Just click on my name and go to the link for these background episodes, and please don\u2019t forget to vote. \n\nMy neighbor Erica, a stunning, 26-year-old East Indian resident physician at a nearby hospital, dropped by my office late in the week and offered to take me to a picnic lunch. I hadn\u2019t seen her for a month, since we\u2019d spent an amazingly hot night together. By chance, she\u2019d met and talked with Cindy, a horny, 18-year-old ice skater that I\u2019d taken to bed, then later discovered was having an incestuous relationship with her wealthy doctor father. Erica was quite open with me about her desire to meet privately with the insatiable Cindy and me, since she was gathering material for a project on human sexuality as part of her Ph.D. in psychiatry. Of course, Erica\u2019s interest went much beyond the academic. She was a phenomenally sensuous and beautiful woman, as well as a shameless voyeur. \n\nSo, we adjourned to a nearby, sunny park to plan an upcoming Saturday meeting with Cindy. As always, Erica was dressed breathtakingly. She wore a short, rust-colored skirt that accented her smooth, caramel-colored legs and a tank top of the same color that highlighted dusky brown shoulders and stretched over her full, 36-C breasts. On her feet were a pair of black sandals with straps that caressed her ankles from instep to calf. Her long black hair cascaded down her back and glinted in the sunlight. As we sat on a blanket in the midst of several acres of green grass, the sights and sounds of mothers with trams and barking dogs chasing frisbees provided an easy backdrop for our serious conversation. \n\n\u201cI have spoken with Cindy several times this week, Jay,\u201d she said in her elegant, accented English. \u201cShe appears to be quite taken with you,\u201d apparently aware of much that had transpired between the girl and me.  \n\n\u201cYou know me, Erica,\u201d I responded lightly. \u201cAlways willing to please!\u201d\n\n\u201cDo not be coy, Jay. You forget,\u201d she said, \u201cI have been a willing recipient of your charms,\u201d referring to an earlier tryst we\u2019d had. \u201cPlease tell me what you know of her.\u201d\n\n\u201cWell. For one, she\u2019s one of the most physically appealing young women I\u2019ve met,\u201d I said. \u201cShe has a very lurid sexual imagination, and is willing to act on it. And, she\u2019s a compulsive liar.\u201d\n\n\u201cMm-hmm,\u201d she acknowledged. \u201cIs there anything else?\u201d\n\n\u201cUuh, how to put this?\u201d I hedged, not wanting to gossip, but realizing that Erica\u2019s quest for information had at least some professional basis. \u201cShe tried to blackmail me last Sunday if I didn\u2019t\u2026didn\u2019t \u2018bed\u2019 her. And\u2026,\u201d I hesitated for the longest time, \u201cI\u2019ve caught her performing an incestuous act with her father.\u201d\n\n\u201cMmm,\u201d Erica said, as she handed me a pita bread sandwich from her basket, filled with some exotic lamb and vegetable mixture. \u201cI have done some quiet inquiry into the life of her father, who in the past has been a very successful plastic surgeon.\u201d\n\n\u201cAren\u2019t they all successful?\u201d I asked, cynically.\n\n\u201cThe fact is, Jay, that he has had a lot of personal troubles,\u201d she responded. \u201cHis son, Cindy\u2019s elder brother, was killed while driving drunk and all of his attention has gone to Cindy. To make it worse, his wife has nearly abandoned him because of his doting on his daughter and \u2013 with the added burden of his heavy drinking \u2013 this has assisted in a hideous breakdown of the family.\u201d\n\n\u201cSo that\u2019s why Cindy said she could do no wrong with her father,\u201d I said, suddenly aware of the depth of the pathetic story.\n\n\u201cExactly!\u201d Erica said. \u201cShe has taken the place of his wife in all respects and, though she feels guilty about the prurient details, she dictates his life,\u201d she continued, handing me an unopened bottle of Pinot Noir and a corkscrew to open it. \n\n\u201cPoor kid,\u201d I said, genuinely sorry for the twisted circumstances of Cindy\u2019s development.\n\n\u201cThe damage is done, Jay. Only with lifelong therapy will Cindy be able to function as anything but a Jezebel,\u201d exclaimed Erica. \u201cAnd, she sees you as a very strong man \u2013 somewhat above her \u2013 who is only occasionally affected by her wiles\u2026in the bedroom. You challenge her and she wants to conquer you. She will not stop trying to force you to do her bidding, so long as you allow it.\u201d\n\n\u201cSounds as if I should cut off all contact\u2026and immediately,\u201d I said, handing Erica a glass of wine and pouring one for myself. I decided not to tell her about my physical discipline of the girl the previous weekend.\n\n\u201cThere is one more thing,\u201d she said. \u201cAn immediate termination might make her psychotic, like the woman in that movie\u2026Fatal Attraction. She just got a contract with Holiday on Ice, skating for a year, and will be leaving soon. After that, she plans to go away to college, mostly to escape her incestuous family environment. When she leaves for her tour, you must wish her all the best in her life and offer to be her friend and confidant. But, never again be her lover, if you know what is good for you.\u201d\n\n\u201cI agree. That\u2019s kind of how she rationalized our first fling two weeks ago,\u201d I said. \n\n\u201cShe has no intention of ending the relationship, Jay. She is obsessed with you. If she is encouraged by you beyond Saturday \u2013 after she leaves \u2013 she might do anything to stay in physical contact with you\u2026returning in a year to make your life unbearable,\u201d Erica concluded. \u201cAnother pita?\u201d she asked, handing me one, for which I thanked her. \n\n\u201cOther than professional curiosity, what\u2019s your interest, Erica?\u201d I queried.\n\n\u201cWell, Jay,\u201d she looked down, embarrassed, \u201cI am not normally attracted to women but, like you, I find her extremely beautiful\u2026so fresh\u2026so inviting. And, I have selfish reasons\u2026very naughty ones\u2026for wanting to remain your\u2026friend.\u201d Hesitating, she said, \u201cYou know my interest in watching people make love, no\u2026have sex. I want to observe you two on Saturday. I also want to help her have a final sexual experience with you that embeds in her mind that she doesn\u2019t need power over a man to love him.\u201d \n\n\u201cShe doesn\u2019t know what \u2018love\u2019 is,\u201d I asserted. \n\n\u201cTrue. But I suspect that you do not either,\u201d she said. \u201cOtherwise, why would you be such a roue\u2026such a rake?\u201d\n\n\u201cYou\u2019ve got me there,\u201d I admitted. \u201cMore wine?\u201d I asked, which she declined with a shake of her head. I poured myself another glass.\n\n\u201cI have a question, Jay. Not really off the subject,\u201d she said. \u201cDo you like my skirt, or merely what\u2019s underneath it?\u201d she smiled. \u201cYour hot eyes have been looking my crotch so long you have made me wet!\u201d she stated, devilishly, opening her legs lustily so that I could see a moist spot on her orange, silk thong. \u201cI so enjoy the earnest, hurt expression on your face when you glimpse my private parts. I can hardly wait until Saturday!\u201d \n\nBusted! I thought. \u201cOkay, what are we gonna\u2019 do then?\u201d I asked.\n\n\u201cMake your studio, its video and digital cameras available, and I will bring snacks\u2026and my equipment,\u201d she said. \u201cCindy knows of my research interest and is fully aware that we will be recording intimate activities. Some may be rather...kinky. You will know what to do. Oh, and bring some wine\u2026some of this nice Pinot. But we must not allow her to get drunk.\u201d \n\nI glanced at my watch and Erica noticed it. \u201cYou have to get back to your office,\u201d she said.\n\n\u201cI really should,\u201d I said. \u201cWhat time on Saturday?\u201d I asked, rising to stow the picnic trash and fold the blanket.\n\n\u201cAbout noon. Cindy will come to my place earlier, and I will prepare her,\u201d she said, carefully. \n\n\u201cNoon it is,\u201d I agreed, thinking that Erica\u2019s therapy might be a bit too intrusive to be professionally clinical. \n\nAs we walked back to the office, Erica linked an arm through mine and said, \u201cYou know, Jay, we are much alike. Both have intellective turns of mind, yet are extremely devoted to sensual pleasures. I feel fortunate in knowing you, and want it to continue,\u201d she murmured, looking up at me.\n\n\u201cLikewise, I\u2019m sure, Doctor,\u201d I said, somewhat discomfited by her compliment, since she, herself, was becoming a bit possessive of me.\n\nAs I left her at her door to enter my nearby office, she said, \u201cUntil Saturday, my dear,\u201d and gave me her characteristic finger-wagging wave. My heart beat rapidly as her jasmine scent wafted past my nose.\n\n************ \n\nI arrived at the studio Saturday an hour early to set up. In the center of the room, I replaced the dirty spread on the 8\u2019x8\u2019 futon-covered platform and linked several video cameras, each focused on the futon from a different distance, to VCRs with four hours of blank tape. I also loaded one handheld videocam. Spider mikes, plus one omni-directional suspended overhead, were placed discreetly in plants and on equipment cases to make them unobtrusive. I did a volume check on each. Digital cameras with spare batteries were at the ready. I\u2019d never before done anything resembling a pornographic production, so was a bit out of my element.\n\nI set the thermostat at 70\u00b0, made a pot of coffee and poured a cup, opened a bottle of wine to let it breathe, and \u2013 growing restless \u2013 stepped outside for a cigarette. It was about 12:20 when Erica and Cindy walked under the overhanging trees toward the studio. Each carried a small duffel bag. Erica also had her picnic basket, and \u2013 but for their racial difference \u2013 the women looked as familiar as sisters, engaged in lively conversation. They spied me, smiled and waved, and Erica said something I couldn\u2019t hear to Cindy, which caused the girl to giggle. We embraced, with Erica issuing a muffled sigh. Cindy whispered, \u201cMmm, God, you feel so good\u2026,\u201d letting her arms linger too long around me. I invited them in, locking the door behind us. \n\nI\u2019d dressed very simply: a navy sport shirt and khakis with topsiders. Cindy wore a pleated, plaid micro-mini skirt in blue-gray tones that showed her fine, muscular legs almost to her crotch. On top she wore a sleeveless, gray, ribbed sweater that stretched over her bosom so that the ribs over her breasts were twice as wide as those, say, across her tummy. She wore black dancing slippers on her small feet. Her makeup made her look more mature than her years, yet still young. Her eyes were lightly done with blue shadow and her lipstick was a dark pink. In her ears were small, gold hoops. She didn\u2019t look like a Jezebel\u2026or a porn star, I mused.\n\nErica was a bit more exotic. She wore a very tight, light green, silk blouse with billowy long sleeves. It fit snugly over her ample breasts, torso and hips, and a pair of skin-tight black satin pants hugged her legs most attractively. On her slender feet were black sandals. She\u2019d pulled back her long hair on the sides and fastened it with a bow clip at the back of her head that matched her top. Green shadow and black liner enhanced her eyes. Diamond studs pierced her ears. \n\nI offered coffee and both declined, seeming anxious to get down to business. I quickly stifled my cigarette breath with some spray before proceeding.\n\nMostly to Erica, I pointed out the equipment and how to operate it. I was especially solicitous of Cindy though, since she was the primary research subject. Erica quickly understood the simple instructions and we made ourselves comfortable on the futon, eager to follow her direction. She asked for music and, at her request, I turned on a classical station to very soft volume. She then asked Cindy to just be comfortable. Cindy sat, butt-on-heels, on her knees, rather stiffly, and said, \u201cI\u2019m a little nervous\u2026ya\u2019 know\u2026with the cameras and stuff.\u201d \n\n\u201cWhy?\u201d Erica asked. \u201cBecause Jay is here? You and I have talked at length about your life, Cindy. Jay is your friend. You have nothing to hide from him,\u201d she said, convincingly. Turning to me, she said, \u201cJay, see if you can help make Cindy comfortable, please.\u201d \n\nI leaned back, almost reclining, and took Cindy\u2019s hand and opened it, bringing it to my lips to kiss her damp palm. I licked it slightly and moved my lips across her wrist, tickling it, to which she shivered, whimpered, and closed her eyes. I moved further up her pale arm, slowly to the inside of her elbow, where I softly kissed a pulsing vein. I brushed it with my moustache hair, and she shivered again, emitting a slight moan as goose bumps formed. I then pulled her off her knees, toward me, and she unfolded her body against me, looked down and, opening her mouth slightly, kissed me most gently. I felt the futon move slightly as Erica rose to switch on the fixed cameras and linked mikes. Cindy then took the initiative and molded her body to me, breathing heavily and probing my mouth with her tongue. I pulled her rigid little form on top of me and she clamped her legs around one of mine to hunch her vulva against me as she moved her head back and forth to kiss me more deeply and fill my mouth with her sweet saliva. She was heating up very quickly.\n\nI stroked down to her waist, over her hips, and pulled up her short skirt to reveal a black thong. She moaned as I caressed her silken butt, pulling her cheeks apart slightly to feather her crack with an exploring finger. She clenched her rectum as my digit touched it and once again hunched her mound against me. I pulled the front of her skirt up to her waist so that her thong-covered pussy was in contact with my pants and felt hot moisture through the material. I pulled the thong to her knees and felt her oozing juice already, though we\u2019d just begun. Conscious of our being taped, I knew that any rapid disrobing might disrupt the continuity, so I proceeded slowly. \n\nBut Cindy was following a different program. She wanted to cum, and she wanted it soon. She commandeered my mouth again, this time roughly as she panted, and her muscular hips began thrashing against my clothed groin, which had swollen with my first prominent erection of the day. She began grunting into my mouth, drooling all over it with her feverish tongue lashings, and squealed as she reached a touching, girlish orgasm, much like one I\u2019d experienced with a virgin dacades before. Her little body stiffened as she peaked, and she broke contact with my mouth, wailing, \u201cAhh-aah! Ahh-aah! Ahh-aah! Ohhhh, ohhhh, oooh, oooh, mmm, mmm, mmm\u2026Jaaay,\u201d and collapsed on my chest, with spittle running from one corner of her mouth. She clutched at me, holding me by the shoulders, and it felt as if she were trying to burrow inside me for protection. She lay on me, moaning, for quite a few minutes.\n\nIt was Erica who broke the silence. Coming to the futon, she whispered, \u201cThat was beautiful, darlings. Now, please undress\u2026slowly.\u201d\n\nI kicked off my shoes and slowly removed my pants, now soaked in front by Cindy\u2019s effusions. She peeled off her sweater, showing her flushed, post-orgasmic upper chest, and her fulsome tits bounced as they struggled to stay bound by their black bra. I reached to unclasp its front and she groped for my erection through the fly in my boxers, grabbing it quickly. As she dropped to my crotch, I stripped off the shorts and she took me in her mouth. I spun her around, with her still on top, and unzipped her skirt, pulling it and her thong off her thrashing legs to render her naked. In a flash I\u2019d unbuttoned my shirt but had to leave it on as she rapidly pushed her yawning pussy down onto my face. Sometime since I\u2019d last seen her the girl had shaved her pubic \u201clanding strip\u201d to leave just a small \u201cV\u201d of short, black hair above her slit. Most attractive, I thought, as I regarded her baby-smooth quim, its pink lips dribbling clear, girlish nectar. I clamped my mouth over her small, swollen opening and slowly sucked teaspoons full of her succulent juice into my mouth as she deliberately moved her velvety lips up and down my rigid cock with agonizing slowness.\n\nErica was tripping around us, capturing close-ups with a digital camera. She was like a dark, playful sprite, murmuring encouragement to us as she focused first on Cindy\u2019s artful fellating of me, then on my tonguing of the girl\u2019s cunt, which now flexed open to reveal her erect clit and flowery inner lips. Her smelly juices flushed out to cover my face, encouraging me to probe ever more deeply into her clasping hole. Erica moved so closely to my head, snapping away at my licking of Cindy\u2019s snatch, that I was distracted. But it made no difference to Cindy, whose crescendo of moans was no doubt pushing the sensitivity meters on the microphones into the red overload zone. I moved my head up and began poking my tongue at the girl\u2019s tight pink anus, which tasted slightly of mint, and caused her to squeak abruptly in her throat and pull off of me. Of course! Erica had given her an enema before they\u2019d arrived and then used some of her medicated, nerve-enhancing gel on her rectum! I glanced quickly at Erica and she smiled and whispered to me, diabolically, \u201cYes, Jay! She is very clean\u2026and very ready!\u201d snapping another shot at my surprised look.\n\nAt that point, Cindy began hunching her clit against my chin, grinding it hard enough that her lips opened to me and immediately allowed insertion of two fingers into her cunt. I pulled them apart as she ground against me, peering into her vagina to witness her internal muscles begin pre-orgasmic spasms. She then lifted her mouth off me and strained her head and neck upward to groan peals of rapture, which prompted Erica to leap around to the girl\u2019s face and capture her look of joy as she ascended. \u201cOh-aah!\u201d she screamed. \u201cOh-aaah! Hahhh! Oooh-ah! Mmm-aah! Mmm-aah! Ohh\u2026ohhh\u2026ohhhh\u2026oooh\u2026ooohmmm\u2026oohmmm\u2026mmmm\u2026mmmmnn\u2026mmnn,\u201d she continued, pounding her tender flesh down on my chin, driven by the substantial muscles in her ass. Erica then stood back to photographically capture Cindy\u2019s rapidly twitching loins as they gradually lessened their spastic fusings with my sucking mouth.  \n\n\u201cBeautiful, Cindy!\u201d she said, \u201cBut, look at Jay! He has helped you\u2026not because you demanded it, just because he wanted to!\u201d Tenderly moving Cindy off of me, Erica put the camera aside and slowly slid her mouth down on my erect, red member, looking at me with taunting black eyes as she did so. Pulling off to wank me, she murmured, \u201cLet us be nice to him!\u201d at which Cindy moved her head forward and, still panting, began to lick at my balls and trade long, wet mouths full of me with her lascivious East Indian ally. I groaned as they placed their lips on each side of my cock and began coordinating their movements, sliding them up and down its length with tongues lashing at its pulsing head. Until now I\u2019d thought that the good doctor was merely going to observe. \n\nErica knew exactly what she was doing. Her therapy session notwithstanding, she was preparing my imagination for a supervised afternoon debauch in concert with this compliant nymphet and wanted to capture all of the images electronically. She knew now that I would cum, and handed me the digital camera as I approached my orgasm, knowing that I\u2019d assist her in her record-keeping. All four of their gentle hands covered my genitals, everywhere that their dribbling mouths were not. The soft, fluttery touches of their fingers and slurping tongues stroked my bloated balls, my taint, my full, erect member and lingered to lightly squeeze the palpitating head, eager to coax the steamy harvest of seed from me. It was all I could do to keep my eyes open and point the camera as, suddenly, the ropes of thick cum rocketed from my prick to cover both of their faces. Crying joyously, they competed with one another for each shot as I grunted loudly and snapped away, spattering hot strings of spunk into their hair until, finally, Erica took me in her throat and would not be dislodged by Cindy\u2019s whining entreaties. She looked into my eyes and I watched the muscles in her throat milk me of the last few drops, as if making a point with her stare that she would not be denied sensual sustenance by a mere teenage girl\u2026a wanton, young pretender. She was in control, and wanted to indicate as much. I shuddered a few times and groaned the end of my orgasm, stretching my taut limbs to relax, which prompted Cindy to do groan disappointedly. ",
        "We lay together for a while, caressing one another, until Erica rose, wiped herself clean, walked to the master panel and switched off all but one of the video cameras, the one focused on close-ups. \u201cNow, perhaps some refreshment, then, back to work,\u201d she said, pointing for me to open some sodas from her picnic basket. I poured myself a glass of wine and doffed my shirt, finally leaving me naked, and Cindy grabbed it, smoothing it out in a deliberate way as Erica said, \u201cI would like to interview you on camera, Cindy. \u201cYou may slip something on, if you wish. I know you brought other clothing.\u201d\n\n\u201cUh-kay,\u201d Cindy mumbled. \u201cI\u2019ll just wear this,\u201d she said, possessively, slipping comfortably into my navy blue shirt. It was her color. \n\nI rose from the futon and \u2013 why I don\u2019t know \u2013 put on my boxers and went to the master panel to fiddle with adjustments. Erica remained clothed\u2026though delectable, totally at ease. I sensed that I was about to see a true professional at work. She sat on a high, drafting stool out of camera range and crossed her legs, one swinging languorously up and down as she posed her questions. Within a few minutes she\u2019d gathered information on Cindy\u2019s privileged though troubled life through high school, and then began probing for facts about her sex life. I switched on another camera to get a half-foreground perspective of the girl fetchingly propped up on one arm with shapely legs to the side. The close-up camera recorded each nuance of her face as she struggled to respond to some painful questions.\n\nShe admitted that she and her father had been fucking \u201cfor a while.\u201d He\u2019d introduced her to mind-altering drugs, particularly when first he\u2019d approached her incestuously. She\u2019d rebelled at this, given her athletic discipline and her fear of addiction, citing his alcoholic behavior. He\u2019d engineered dalliances with a few of his friends, plying her with liquor, and had watched her perform on all occasions, which she\u2019d considered first exciting, then hopelessly perverted. But, though she was convinced that he truly loved her \u2013 and she, him \u2013 she also believed that she owed him\u2026that her body was currency for the comparatively lavish lifestyle that he provided her. It was this element, I thought, that had made her a power freak. As long as she was willing to pay, using the only means of exchange at her disposal \u2013 her body \u2013 then she could demand anything she wished. This dynamic grew in intensity as her dad\u2019s drinking habits increased in severity and she became more demanding in terms of her material desires. \n\nI felt repulsed at hearing of her father\u2019s sordid usage of Cindy, which doubtless had gone on for\u2026how many years? At the same time, I was puzzled by the fact of her relative inexperience in some matters, particularly her ingenuous fellative and anal skills. \u201cAnd what about Jay?\u201d Erica questioned. \u201cHow does he compare with other men you have known?\u201d I was embarrassed at this line of questioning, but Cindy appeared completely at ease in responding.\n\n\u201cJay\u2019s different,\u201d Cindy answered, brightening. \u201cHe gives a lot of himself. I mean\u2026with Ginny\u2026and Carol\u2026and now, me. With me\u2026God!\u2026he\u2019s so\u2026like, patient! Oooh, he\u2019s so\u2026cool!\u201d she giggled. \u201cAn\u2019 he\u2019s always doing things that make people feel good! Like the ice show\u2026he didn\u2019t even get paid! Daddy wondered why! So did I!\u201d \n\nI was thankful that she\u2019d mentioned something about me other than my sexual prowess.\n\n\u201cIs that what you are doing now? Paying him for what he has done?\u201d Erica asked. \n\n\u201cNooo. I want him. Ooh, he\u2019s so hot! Sooo good to me, an\u2019 I still can\u2019t figure out why,\u201d she said, somewhat self-contemptuously. \n\nI was silent, fiddling with the controls. This little girl still didn\u2019t see me as a dirty old man, I thought, ruefully. Well, she\u2019ll learn as she gets older. People are paid in many ways. When she learns this I\u2019ll be well out of her life, just a distant memory of her perverse teenage years. \n\n\u201cVery good, Cindy,\u201d Erica stated. \u201cNow, what would you like to do for the rest of the day?\u201d \n\nThe girl blushed bright red and muttered, looking over at me, \u201cWell, ya\u2019 know, you\u2019re so easy ta\u2019 talk to an\u2019\u2026like\u2026umm, it\u2019ll be a long time \u2018til I see Jay again\u2026\u201d.\n\n\u201cI understand,\u201d said Erica, walking over to me and, beckoning Cindy to follow her, stood up to bathe me in her jasmine breath. Looking in my eyes, she whispered out of Cindy\u2019s earshot, \u201cYou owe me now, Jay. We make good partners, my magnanimous, studly American friend.\u201d\n\nCindy caught up to us and our three skins met, bodies hugging and rubbing against one another. My cock began to swell and rise again, and Erica pushed my boxers to the floor. \u201cThis is nice, eh, Cindy?\u201d she asked, fondling me softly as the blood filled me. Cindy mewled the high, cooing sound that is her trademark as Erica placed the girl\u2019s soft, hot hand on me and stepped away to bring her duffel bag to the counter. She opened it and extracted, first, her speculum. She then withdrew an electric vibrator in the shape of a Norelco shaver with a plastic nob on it, a connection that could accommodate a number of latex attachments, which she soon produced. In addition, she pulled out an 18\u201d long, double-ended, flexible dildo, black in color, and a traditional rigid plastic dildo that was battery-powered. \u201cThese I use when pleasuring myself, Cindy. I want to videotape you using them,\u201d she said, evenly. \u201cYou told me that you liked to masturbate.\u201d\n\n\u201cYeah, but, Jay\u2019s here,\u201d Cindy countered. \u201cWon\u2019t\u2026?\u201d\n\n\u201cIt will help my study, Cindy, and bring you much pleasure,\u201d said the calculating doctor, leading Cindy toward the futon and looking at me. \u201cJay? The cameras?\u201d, she said, signaling for me to activate them all while she plugged the vibrator into an extension chord. I slugged down the remains of my wine and switched on the cameras. Erica positioned Cindy comfortably amid several cushions, stroking her young body softly with long, caramel fingers. The girl\u2019s chest began to rise and fall with her breathing and she looked worried, contemplating Erica\u2019s calculating therapeutic manner. \u201cNow, we\u2019ll start with a simple clitoral stimulation,\u201d said Erica, fastening a short, brush-like attachment to the small appliance. \u201cJay, will you provide us with an inducement?\u201d she asked, smiling back at me.\n\nDoing the only thing I could at the moment, I wrapped my fingers around my lengthening cock and stroked it, as Cindy reclined and accepted the humming vibrator. I switched the monitor to the close-up camera and a 21\u201d image of her cunt appeared, with flowery lips oozing sweet nectar. She placed the brush against her clit and I jerked myself more quickly, with Cindy responding by gasping and twisting open her mouth jaggedly as a few early spasms hit her. \n\nCindy was well on her way, as Erica then came to me and, up on tiptoe, kissed me deeply so that Cindy could see her tongue entering my mouth and her hand wanking me slowly from balls to glans. The sight caused Cindy to cry out in desperation, \u201cAh! So\u2026good! Oh, Jay! You\u2019re fu\u2026fuck\u2026ing\u2026ME! Ooh! Yeah! ME, Jay! Ooh, gonna\u2019\u2026cum! Yeah! YEAH! AH! CUM-MING! CUMmm\u2026ING! Oh, JAY! FUCK\u2026ME! PLEASE! Nn-gaAH!\u201d I looked at the monitor and saw the girl\u2019s engorged lips part and ooze a stream of drippings from her slit. Erica looked back at her and quickly went to where she was lying to comfort her. As the troubled teenager twitched, moaning in her throes, Erica gathered her in her arms and gently held her and placed her head against her fulsome clothed bosom, which Cindy nuzzled like an infant as she descended from her joyous peak.   \n\nErica murmured to her, \u201cJay is a wonderful man, Cindy, but he is spoken for. You can not buy him. You can only have him for today. Then you must go on with your life,\u201d she soothed. Turning to me she said, \u201cOh, Jay, I want to see inside Cindy. Please bring the speculum and the toys,\u201d which I quickly retrieved from the counter. The atmosphere of trust was amazing. Cindy had bonded with Erica in a way that perhaps is only in the province of womanhood. She immediately dropped on her back and spread her legs, accepting the speculum into her vagina in a moment. She moaned as the doctor and I both looked inside her barely-legal depths and I was astounded at the multitude of muscles that writhed before me. They appeared as miniature snakes coiling around one another in a subterranean passage. \u201cPlease tongue her, Jay.\u201d Erica urged, as she kept the speculum in place. \u201cCindy, darling, if I cause you any pain, please tell me,\u201d as Cindy closed her eyes and reached up to knead her own breasts and twist her nipples. I leaned forward and brushed the girl\u2019s clitoris lightly with my tongue, then began a quick, flicking lingual rhythm, lapping at her as softly as a butterfly as she thrust her alabaster legs apart even more widely, opening her blushing pink cunt completely to us both. \n\nThe atmosphere of sex was thick in the air. Cindy had cum a couple of times and the flesh surrounding her crotch had collected a thin sheen of dried, odorous effusions. Yet she looked as baby-like and virginal \u2013 but for the small \u201cV\u201d of her pubic patch \u2013 as she had when arriving. I welcomed her rich smell and, contrary to reason, her juices appeared thicker. Grateful for any at all, I lapped them up while she strained to close the spring-loaded speculum as she was brought to another orgasm. I slid my hand under her thrusting bottom, as she mawled her tits, and stuck a finger slowly into her ass. That set her off, and she screamed a series of shrieks like a large, wounded bird as she came: \u201cAwwwk\u2026awwwkh\u2026awwwkkkh\u2026awwwnngh\u2026awwwnngh, awnnngh, nnngh, nnnmm, mmmm, mmmnn, ooooh, oooh.\u201d When she\u2019d peaked, I pulled back to look in her spasming vagina and it reminded me of a pile of drowning worms, desperately trying to escape a flood in late fall. She turned on her side after her climax, groping for me to join her, and Erica released and withdrew the speculum to close up the heavenly cleft between her trembling legs. I held, kissed and nibbled at the totally limp girl for quite a while.   \n\n\n\nErica said quietly, \u201cWe must eat! We need energy!\u201d and moved to open her picnic basket. \n\nCindy rolled to one side and groaned, \u201cOh, I can\u2019t! I\u2019ve gotta\u2019 keep my weight down for the shows! They weigh us every week an\u2019 we get in trouble if we gain!\u201d\n\nYeah, I thought cynically, these ice show girls are \u201cprofessional figure skaters\u201d by definition, but in reality are \u201cprofessional booty shakers.\u201d Their producers want them to lose muscle mass and deflate themselves to sexy waifs. And, if it takes becoming an anorexic to stay with the troupe, then so be it. The ones who don\u2019t tow the line have to bribe their bosses with blow jobs and fucking. The health of my prospective daughter-in-law Ginny had suffered from a similar regimen when she was with the Ice Capades.\n\n\u201cI\u2019ll just have another soda,\u201d Cindy said. \u201cCan I put on one of my new costumes while you guys eat?\u201d she asked.\n\n\u201cOf course, Cindy, but have a couple of these brownies to go with that liquid sugar. Only two, because they\u2019re \u2018medicated\u2019,\u201d Erica said with caution, looking in my direction to clue me as to their cannabis content while handing me a sandwich.\n\n\u201cMmm-kay,\u201d said Cindy, popping one in her mouth and opening her duffel for her costume. It consisted of a blue, sequined bikini bottom, held together at the hips by two large, plastic rings, with three snaps that fastened between her legs. The blue, sequined, under-wired top covered her breasts just over the nipples and aureoles, stretched around her back, and was anchored by two spaghetti straps linked to a dog collar that snapped around her neck. She\u2019d put on a pair of crotchless, fishnet pantyhose before slipping on the bottom. \u201cThese are mine\u2026not part of the costume. Daddy got \u2018em for me,\u201d she giggled, blushing at me. Over her shoulders she fastened a blue and white sequined cape. She\u2019d even brought her skates, lacing them up and leaving the wooden protectors on the blades. Then she put on a long, black wig that curled behind her neck to the middle of her back, and a peacock-like headdress that complemented the colors in her cape.  \n\nWow! I thought, as my eyes devoured her. She looks like a Vegas showgirl! I stood up, unconscious of my nakedness, to pour Erica and I some wine and discovered that the 5\u20196\u201d little girl had grown to a height of 6\u20194\u201d with skates, wig and headgear! I coughed, nonplussed, and Erica looked at me, bemused. \n\n\u201cRight!\u201d said Erica. \u201cYou are gorgeous, Cindy\u2026and I believe we have had enough snacks. Have another brownie, darling. Would you like one, Jay?\u201d \n\n\u201cI\u2019ll pass,\u201d I said, going to the VCRs to see how much videotape we\u2019d used. There was plenty left before we had to reload them. Invigorated and suddenly very stimulated by this child-woman\u2019s beauty, I wanted to proceed. \u201cJust walk around and give us a show, Cindy,\u201d I suggested, as she began to pirouette and prance, turning repeatedly as if she were on ice. I recorded all of her breathtaking moves with the hand held videocam as Erica snapped away with the digital. She reminded me of a great bird, swooping serenely with her cape, her incredible musculature articulated by the strenuous movements. \n\nAfter several minutes of posing, Cindy sat on the futon, placing her legs in a folded position as only skaters and ballerinas can do, and blushed, suddenly realizing that she\u2019d become high on Erica\u2019s brownies. She giggled a bit and looked up at me with deeply glazed eyes, saying, \u201cOoh, Jay\u2026I\u2019m sorry to show off. I\u2019m so horny\u2026can we\u2026uhh\u2026fuck?\u201d\n\n\u201cAll in good time,\u201d Erica soothed. \u201cCome to the counter, Cindy,\u201d she said, grabbing the vibrator, a couple of latex attachments and the long, double-ended dildo. Cindy strode to the counter and Erica seated her on the high drafting stool. \u201cNow, we will use one of these,\u201d said the doctor. \u201cJay, pick one for her.\u201d I did, an 8 inch long studded model, the end of which stirred 360\u00b0 in a slow circle when empowered, I discovered. \u201cGood choice,\u201d Erica said, as she smeared her medicated gel on it. \u201cJay?\u201d she invited, indicating that she wanted me to embrace Ginny, which I did, standing in front of her as she perched on the edge of the high stool. \n\nAs I kissed her she moaned and stabbed my mouth with her pointed little tongue, slurping noisily as her legs opened, inviting my now erect cock to poke her covered vulva. Her arms pulled me toward her, but not before I unsnapped the crotch of her costume bottom, exposing her moist cunt through the crotchless stockings. My fingers went to her moist labia and she groaned loudly, hunching toward me. Erica turned on the vibrator and placed it in my hand as we clinched again, this time to place the buzzing toy at her opening. It slid easily into her and she gasped, pulling back to look me in the eyes as I pushed it home. She exhaled ecstatically as it began its stirring and reaming, deeply within her tender box. She planted both skates on the floor and, using them for leverage, pulled her bottom off the chair and began very slowly moving her hips forward and upward at the same time, then backward and down to allow the attachment to work outward past her G spot to her opening. \n\nI just held the tool for her. She moved to meet it, stimulating her fiery inner tissues and causing deep, rasping breathing as her excitement grew. Wantonly, she climbed to a drugged plateau that centered in her clasping cunt, and was conscious only of the twisting, serpentine probe that awakened thousands of internal vaginal nerves. She moaned continuously, gripping me strongly around my neck and sucking my tongue into her mouth as if she wished to swallow it. Then she began a succession of vaginal orgasms\u2026easy, languorous climaxes that built one upon another, as if they were slow waves washing clean the besmirched shoals of her incestuous libido. She stood, legs frozen in place, and continued to orgasm, gasping nonsensical words into my mouth, the only recognizable one being my name. \n\nAt that point, Erica began to slide one end of the gelled 18\u201d rubber dildo into her rectum. One gasp as it slid inside her sphincter was all I heard \u2013 felt, really \u2013 as the doctor\u2019s gradual and insistent pushing inserted it as far as it could comfortably go in Cindy\u2019s ass. After a moment she screamed: \u201cEeeeyeaaaah!\u201d from deep within her lungs, and I pulled the electric toy from her vagina, laying it on the counter. She whimpered, frustrated, and pulled her legs up, locking her skates around my waist, and planted herself squarely on my erection to slip back and forth greasily. Showing her satisfaction with an \u201cMmmm,\u201d I placed her back on the stool and she put her elbows on the counter to brace herself. Lifting her cunt up flat to meet me horizontally, her rectum \u2013 still stuffed with the dildo \u2013 was now bared so that Erica could resume her work. Handing me the free portion of the monster, the doctor then grabbed the digital camera to record the coupling as I probed Cindy with two tools, one my own and the other quite artificial. Other than Cindy\u2019s repetitive moans, the only sounds in the room were the slapping of my loins against her costumed thighs, the slick, jellied sound of the dildo plumbing her colon, and Glazunov\u2019s Petite Adagio from The Seasons playing softly on the radio.\n\nCindy was very stoned now and screwing like a mink. Her eyes were slitted, flashing at me ravenously as I plunged into her with my probe. She once again began muttering my name and, raising her skated feet up to rest them on my shoulders, leaned back further to open her flawless pink pussy more to my plundering loins. She then climbed quickly to her peak as I slipped past her cervix, now clearly deadened by Erica\u2019s medicated gel. And\u2026where was Erica? Of course, she was recording our outrageous coupling with the videocam. Could I cum? I wondered. I wanted to, but remembered Cindy\u2019s boundless appetite and figured I\u2019d save it for later. Cindy then began grunting, \u201cJay! Uh! Uh! Uh! Jaaay! Ooh\u2026Jay! Mmmmgh\u2026Jay! Ohhh. Fuck! Jay!\u2026I\u2019m, I\u2019m, I\u2019m\u2026cumm\u2026cummm\u2026cummm in\u2026me! Aaaaaagggggh! Aaaaawwwwwgggh!\u201d Then she stiffened and squeaked a high note once, the corded muscles in her thighs trembling of their own involuntary accord, her hands gripping the edge of the counter, and collapsed backward, moaning and gasping for air. \n\nAfter a few moments I pulled her to me and carried her to the futon, where she lay dazed and mewling. I then removed her headgear, wig and skates, and massaged her legs, hoping to dispel cramps, which elicited thankful purrs. My sticky, smelly cock began to droop and I covered Cindy with a blanket in case she wanted to nap, while Erica and I spoke in hushed tones. It was only just before three o\u2019clock and the afternoon had so far been unusually exciting. There was more to come, I thought, as Erica joined me next to the supine girl, kissing me and stroking my body gently. She whispered to me, \u201cI want you both very much right now, but must maintain my professional distance.\u201d\n\nI got up and checked the VCRs, reloading them with new tapes and checking the batteries on the digitals. The equipment was taken care of, and it was time for refreshment. Cindy roused and had another brownie, though didn\u2019t need it, Erica had a soda, and I drank some wine, glad for the respite. Cindy removed the rest of her costume. She looked so tasty and comfortable with us, I thought, and I was deeply grateful for Erica\u2019s assistance in this delightful interlude. At this moment I truly believed that I liked the little teenage minx, and was sorry that I probably wouldn\u2019t see her again.   \n\nAs if to punctuate my thought, Cindy found the jar of gel and lubed herself with it, also laving it on her ample breasts. Erica seemed content just to sit on the bed and watch us for the moment, which was fine with me. Though I had hours of video footage and an untold number of still shots of this stunning girl engaged in sexual acts, I wanted to imprint on my memory the feel of her in a final fling. From the first moment I\u2019d seen her at her father\u2019s house, I\u2019d considered her body worthy of cloning. Now I wanted to partake of its ultimate desserts and satisfy my raging appetite for her sweetness. Were I a cannibal, I would have eaten her at this moment. ",
        "And she probably would have obliged me. We embraced, locking our sucking mouths together, and our limbs entwined as our bodies flexed and surged at one another. Each of us placed a hand on the organs of the other as I became rigid in response to her oozing moisture. Of course, she heated quickly, huffing and gasping as her flesh yielded with alacrity to my searching hands. Then I realized that Erica had retrieved the double-ended dildo and it was there for my use. Cindy\u2019s eyes flew open and she moaned disappointedly as I eased one end into her gash instead of my cock. She then smiled as I raised her buttocks to slowly push the other end inside her anal sphincter. Leaning back, I led one of her hands to the toy and she began inserting more of both ends into her two orifices, muttering vulgarly at its rude intrusions. \u201cOooh, God, Jay! I\u2019m gonna\u2019\u2026 take one of these\u2026with me and\u2026think of you\u2026every time I use it! It\u2019ll remind me of\u2026 your big cock! Oooh\u2026God, that feels\u2026so good!\u201d she mumbled, as her hand pushed on the loop formed by both embedded ends, driving it deeply into her vagina and colon. \u201cYou love\u2026watching me, huh! You\u2019re so\u2026dirty! God, I lo-o-o-ve it!\u201d she keened, as her strokes became more rapid, bringing her to the brink of another orgasm. \n\n\u201cGod, Jay! Can\u2019t stop!\u201d Cindy whimpered, \u201cGotta\u2019 cum! Gonna\u2019 cum! Yeah\u2026oh, yeah! I\u2019m\u2026gon-na\u2019\u2026cum\u2026NOW! YEAH! YEAH! AWW, JAY! Cumm\u2026mming, cummmming, Jay! I\u2019M\u2026Uuuuuuuhhhhh\u2026uuuuuuuuhhhhh\u2026\nuuuuuuuhhhhh\u2026mmmmnn\u2026mmmmnn.\u201d As she thrashed through her climax, I grabbed her by the hips and closed her legs around the dildo, trapping it deeply inside her so that its ribbed shaft quivered with each of her palpitations. \n\nWhen she was finished, I pulled one end out of her anus and looked at Erica. I was now the director. I crudely flipped Cindy over, spreading her legs and lubing the end of my cock with the residue of gel that had run out of her ass. Pushing into her, she groaned deeply and rose to her knees to allow me full access to her dark passage. I plumbed her deeply for five minutes or so, then looked at Erica\u2019s gorgeous brown face as she observed my cock entering and exiting Cindy\u2019s clenching pucker. I wickedly grasped a handful of Erica\u2019s dark hair and tried to guide her mouth onto my throbbing knob to suck the jellied juices from Cindy\u2019s ass off of it. She pulled away and rasped, \u201cLater, Jay\u2026please!\u201d I then plunged into Cindy\u2019s pussy, reaming her deeply as her vagina continued its ceaseless clasping from another long orgasm. The screams she rent pierced our ears and rang off the walls. I hoped that her paeans brought to her mind those she and Erica had heard three weeks before as Ginny, Carol and I fucked our brains out.\n\nI thought, then, that I should cum. My cock was getting sore and my balls and prostate ached. So, I moved to Cindy\u2019s head and she raised up, taking me directly into her gullet as she stood on all fours. Her mouth and throat formed a straight, wet, velvet pipe into which I could plunge. But I was in no hurry. This had to last. I slowed and on each out stroke pulled completely out of the girl\u2019s lips, which prompted her to begin a lewd conversation: \u201cOoh, yeah, Jay! Fuck\u2026my mouth! I know\u2026you love\u2026my mouth! Fuckggh...m\u2019\u2026mouff\u2026gllk\u2026hard\u2026cockggh\u2026yeah! Nnnng, sluuup\u2026fk\u2026glllk\u2026my\u2026mmkgkth! Cum! Cum! Cunnghlk!\u201d Her jaw tired after a while and her teeth began abrading my cock, so I dropped to my back and told her: \u201cPlease\u2026tit fuck me, baby!\u201d I gasped. And, quick young woman that she is, Cindy pressed both of her C-cup breasts around me, forming a fleshy passage to massage my throbbing prick. She drooled a glob of spit in the crevice forming a mixture of saliva and goo that greased my pole as I slipped repeatedly upward to her now smiling face.\n\n\u201cGet up on your knees, Jay,\u201d said Erica, panning closely with the videocam to capture our slippery movements. I did so, and Cindy rose to press her breasts more tightly around my now vertical cock as it plunged toward her mouth. She looked up at me and broke into a loving half-smile, her eyes glistening, and began flicking my rubbery glans with her tongue as it probed above the firm tit flesh that she held together with her small hands. \u201cDo him well, Cindy,\u201d Erica encouraged, as my buns flexed rhythmically, driving me toward what I felt would be a paralyzing orgasm.\n\nThen Cindy began thrusting her cloven tits up and down, alternating with my thrusting movements. She cooed and mewled soft nothings, pinching her nipples as she applied sublime friction to my gnarled barb. Her tongue now met me with each upstroke and the spongy knob grew dark red as occasionally she\u2019d capture me between her lips. My thighs started to tingle, signaling an impending eruption, and soon reached my groin as I threw back my head and spurted the first shot vertically into the air, which curled down to land on Cindy\u2019s black bangs, causing her to squeal with joy. \u201cAaaagh, shit!\u201d I grunted, as another glob jetted up to decorate her ski-jump nose. She then gobbled me, allowing two more shots to fill her mouth, after which she wanked me with both hands, easing the remainder out on her shining face and erect, pink nipples while I ecstatically groaned my completion. She then hugged me as she\u2019d done the week before, with her head in my crotch and arms around my butt.\n\nLooking straight up at me, she murmured sloppily, \u201cThink of me like this, Jay,\u201d as she opened her mouth to reveal its load of cum. \u201cI\u2019ll always remember your taste,\u201d she said, pointedly swallowing the creamy seed. I gently stroked her short black hair, incoherently mumbling my satisfaction.  \n\n\u201cFantastic, darlings!\u201d said Erica, turning off the videocam and putting it down. \u201cI am finished for today.\u201d\n\nCindy adjourned to the bathroom for a minute after scraping and eating the leftover cum from her face. I\u2019d begun to dress when she emerged and registered her disappointment, saying, \u201cGod! I don\u2019t want this ta\u2019 end! Oooh, but my mom\u2019s back in town an\u2019 we\u2019re goin\u2019 out ta\u2019 dinner tonight. \u2018Cuz I\u2019m leaving tomorrow.\u201d I felt genuine sorrow as she began covering her sensuous body with her clothing. When dressed, she stood and packed her duffel with her costume, then came to me. \u201cCan I stay in touch, Jay?\u201d she asked, with searching, round eyes. \n\n\u201cSure, honey,\u201d I said quietly. \u201cHere\u2019s my card; address, numbers, email address\u2026everything\u2019s on it. I look forward to hearing about your adventures. I\u2019ll walk you to your car,\u201d hugging her and leading her outside.\n\n\u201cBye, Erica,\u201d she said, hugging the doctor. \u201cOoh, God, thanks! You\u2019ve taught me so much!\u201d she said, as I walked her out. The parting scene at the car was a bit teary, and discomfiting as she professed her affection.\n\nWhen I returned Erica was lying on the futon. She\u2019d removed her sandals, let down her hair, and had undone the top several buttons on her top to reveal the generous swells of her magnificent breasts, unfettered by a bra. She was dreamily smoking a cigarette and said nothing. I poured a cup of coffee, gesturing with the pot to see if she wanted some. She shook her head, declining it, and stubbed out her cigarette, then began to slowly undress until naked. Looking at me, she said, \u201cPlease rewind the VCRs, Jay, and let us watch the tapes.\u201d Then she very slowly fingered her purple-lipped vagina and ass with her mysterious gel, which caused me to look at her, surprised. \u201cWell,\u201d she purred softly, \u201cYou did not really think that I was merely going to watch, did you?\u201d   \n\nThis concludes the Cindy saga. I hope you\u2019ve enjoyed reading it as much as I have writing it. Please let me know with your votes and feedback."
    ],
    "authorname": "jay.palin",
    "tags": [
        "yeah jay",
        "cindy comfortable",
        "girl erica",
        "erica rose",
        "jay make",
        "began grunting",
        "ice show",
        "black sandals",
        "nice cindy",
        "east indian"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/doing-the-doctors-daughter-ch-03"
}