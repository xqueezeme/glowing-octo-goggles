{
    "title": "An Undeniable Passion Ch. 23",
    "pages": [
        "Late the next morning, Virginia was supervising the cleanup of the house when there was a knock on the front door. She opened it to find Thomas standing on the verandah. She stiffened when she saw him but invited him in.\n\n\"How are you feeling my dear?\" he asked, leaning forward to kiss her cheek. He looked at her with surprise as she avoided his lips and took his coat instead.\n\n\"I'm feeling much better, thank you. Is that why you're dropping by?\" she asked, leading him into the sitting room.\n\n\"Yes, I was a bit concerned since you didn't say goodnight before you went to bed last night. And you said you were suffering from a headache earlier.\"\n\n\"Yes, I had something on my mind, that was causing some worry,\" she murmured.\n\n\"I tried to see you before I left, but Stratford wouldn't let neither I nor Doris up to your room. He quite rudely insisted that we leave, as a matter of fact,\" he said indignantly.\n\n\"And why did he do that?\" she asked him.\n\n\"I'm certain I have no idea,\" he replied.\n\n\"Yes you do, and so do I,\" she snapped.\n\n\"My dear, what do you mean?\" he asked nervously, worried that Drake had told her about his confession and that she believed him. Well, he could easily turn that to his favor.\n\n\"You know very well,\" she said evenly.\n\n\"Dearest, I'm sure I don't know what you're talking about,\" he replied calmly.\n\n\"Do you deny that you're only courting me for my money?\" she asked bluntly.\n\nHe looked at her, affecting an expression of profound surprise and shock. \"Of course I deny it! I care about you a great deal and am not interested in your money. I'm sure you know that I'm quite well off myself and am not in need of any money that you may have,\" he assured her.\n\n\"I did suspect that you were wealthy, but I'm beginning to think otherwise.\"\n\n\"You're beginning to think otherwise? Whatever would give you that idea?\" he asked, doing his best to appear thoroughly baffled.\n\nLooking him straight in the eye, she stated simply, \"You.\"\n\nHe now was truly confused. \"Virginia, what are you talking about?\"\n\n\"I was on the upper terrace during your conversation with Drake last night. I heard everything,\" she said, watching for his reaction.\n\nThe blood drained from his face and he felt sick. He had known how he would handle it if she had said that Drake had told her, but she had heard it all straight from him. His mind worked feverishly, desperately trying to think of an explanation for what he had said. \"My love, I only said those things to anger him. I'm sure you know there is no love lost between he and I and I was only trying to get a rise out of him.\"\n\nShe rose and looked down at him. \"I don't believe you. And I think you should go.\"\n\n\"Please Virginia, listen to me. I truly didn't mean anything I said. I'm sorry if you got the wrong impression, but...\"\n\n\"I would like you to leave now,\" she said interrupting him.\n\n\"I demand that you listen to me,\" he stated, refusing to rise from his seat.\n\n\"And I demand that you leave,\" she replied firmly.\n\n\"I am not leaving until we resolve this misunderstanding,\" he said, his voice rising. He heard a quiet cough behind him and turned to see Drake standing in the doorway.\n\n\"I believe Miss Templeton asked you to leave,\" he said quietly.\n\nThomas took one look at the anger burning in Drake's eyes and decided not to press the issue any more today. Finally rising, he turned back to Virginia. \"Please, my dear, give it some thought before you make any rash decisions. I'll come back in a few days and we can talk about it.\"\n\n\"I don't need to think about it. Good bye Thomas.\" She turned and swept out of the room, leaving through the door leading to the back hallway.\n\n\"Ogilvy,\" Drake said, standing aside so that Thomas could pass.\n\nHe roughly brushed past Drake and retrieving his coat from a couch in the foyer he quickly left the house, climbed into his waiting carriage and was gone. Drake watched him leave and then went to the library, suspecting that he would find Virginia there. She was curled up in a chair, with a blanket pulled around her.\n\n\"Is he gone?\" she asked.\n\n\"Yes,\" he replied, kneeling by her chair and stroking her hair.\n\n\"Thank you,\" she whispered.\n\n\"I thought he might not like what you had to say and would need some encouragement to leave, so I made sure I was around.\"\n\nThere wasn't a fire in the grate, so he quickly set about lighting one and soon a rosy glow settled over the chairs and sofas gathered around the fireplace. He sank into the chair next to hers.\n\n\"Drake, I was wondering. Since Billy's going to be gone for such a long time, would you mind staying on in the house with me?\"\n\n\"Stay here? Just the two of us?\" he asked, surprised that she would risk such an impropriety.\n\n\"Yes. Just the two of us. Oh, I know it isn't proper, but I don't care. I'd feel safer with you here. Especially now, with Thomas likely so angry with me. Both of us really.\"\n\n\"Yes, I'll stay, if that's what you want.\"\n\n\"Thank you,\" she said, looking at him gratefully.\n\nHe smiled back at her but was wondering in his mind how long it would be before she was mad at him again.\n\nThomas stormed in the front door of his house, shouting for Doris. He quickly strode into the library and poured himself a large brandy. Doris calmly walked in the door and saw him gulping the liquor.\n\n\"What is it Thomas?\" she asked worried. Her usually flustered manner was nowhere in evidence, she was calm and very much in control.\n\n\"That damn Stratford! Ruined, it's all ruined!\" he exclaimed, taking another gulp of his drink.\n\n\"What are you talking about?\" she asked, still calm, but beginning to feel a sense of dread creeping over her.\n\nTrying to catch his breath, he said to her, \"Do you remember the conversation I overheard at the Christmas Ball between Stratford and Virginia?\"\n\n\"Yes, but...\"\n\n\"He knew I was below! He arranged it so that I would hear them. So that I would know about what happened between them!\" he almost shouted.\n\nPuzzled at what he was talking about, she asked, \"But I don't see how...\"\n\n\"Then last night, I foolishly told him that we're destitute and I'm only interested in her for her fortune...\"\n\n\"But you said that even if he told her, she wouldn't believe him,\" she reminded him.\n\nHe looked Doris straight in the eye. \"He didn't have to. She was on the upper terrace. She heard everything.\"\n\nThe blood drained from her face. Trembling, she sank into a nearby chair. \"How did you respond?\"\n\n\"I tried to talk my way out of it, but she wouldn't listen. And then he showed up and told me to leave.\" He took another large gulp from his glass.\n\n\"Thomas, what are we going to do? She was our only hope,\" she said with despair.\n\n\"I know sister, I know.\" He poured himself another drink. \"Do you know what upsets me the most? I was very much looking forward to breaking her. She's so strong willed and that moment when she fell completely beneath my control would have been so sweet. Now I shall never know it.\"\n\nDoris was lost in thought for a moment and said slowly, \"Perhaps you still have a chance.\" She looked up at him, hope glimmering in her eyes. \"Appeal to her romantic side. Tell her it was the money at first, but now you've discovered that you've fallen in love with her and can't live without her. Say you don't care about the fortune, that it's hers and always will be. Then when you marry her, you simply change your mind and take it for yourself. She'll belong to you and therefore will have no power to get it back.\n\nHe looked at her thoughtfully. \"That just might work. I'll give her a few days before I go talk to her.\" He smiled to himself as he took another sip of his drink.\n\n\"Well don't wait too long. I'm going to have to let some more maids go this week. If I have to let many more go, I'll be doing the laundry myself.\"\n\n\"Can't you just fire the senior servants and hire new, young ones at a starting wage to save money?\"\n\n\"You're only suggesting that because you've deflowered every maid we have and you want a fresh batch to prey upon,\" she said with disgust.\n\nHe laughed wickedly. \"Oh sister, you know me too well. Who were you planning on dismissing?' he asked.\n\n\"Some of the chamber maids. We don't really need so many.\"\n\nTaking another long sip of his drink he said, \"I'll take care of it.\"\n\n\"You?\" she asked surprised. \"You've never taken part in any staffing functions before.\"\n\n\"Well, this time I shall. Let's begin right now. Send in the first one.\"\n\nShe stared at him suspiciously before leaving the room. A few minutes later there was a timid knock at the door. At his summons a young maid of about twenty entered. She bobbed a quick curtsey.\n\n\"You wished to see me sir?\" she asked, clearly nervous at being summoned.\n\nThomas looked her up and down, trying to recall his previous encounter with her. He suddenly remembered, it was in his study. He smiled at the recollection. She had put up quite a struggle.\n\n\"What is your name, lass?\" he asked.\n\nShe looked up at him with surprise, obviously startled that he didn't remember her name after what he had done to her. \"Rosy, sir,\" she said, her face coloring.\n\nHis arousal was evident as he asked her to close the door behind her.\n\nTen minutes later he was buttoning his breeches as the young woman lay across a large desk, pulling down her torn skirts and quietly sobbing. Thomas had been rough with her, venting his frustrations with Virginia.\n\n\"Quit your blubbering,\" he snapped at her. \"And get off my desk.\"\n\nShe slowly slid from the table and went to leave. She was almost at the door when he spoke. \"By the way, you are discharged immediately. Pick up your final pay from the head housekeeper.\"\n\nShe stopped and turned her tear streaked face to him. \"Discharged, sir?\" she asked, clearly surprised.\n\n\"Yes, discharged. Pack your things and go,\" he said impatiently.\n\n\"Yes, sir,\" she said quietly, turning and leaving the library.\n\nDoris came in a few minutes later, her disapproval clear on her face. \"Did you discharge her?\" she asked.\n\n\"Yes, I did,\" he said with a wicked grin.\n\n\"Shall I send in the next one?\" she asked, not looking at him.\n\nHe took a sip of his drink before replying. \"Give me an hour before the next.\" He took out a cigar and lit it.\n\nShe glared at him before sweeping out of the room. Thomas tipped his head back and blew the smoke at the ceiling. He was very much looking forward to the remainder of the afternoon.\n\nVirginia was running down a dark hallway. Someone was chasing her, but she didn't know who it was. Blindly, she stumbled along trying to keep her mounting terror in check, when upon turning a corner, she saw a light up ahead. Silhouetted against it was a man. He was tall, with broad shoulders and she somehow knew that he represented safety. She ran towards him and fell into his strong arms. Her pursuer disappeared into the shadows behind her as she looked up into warm golden eyes. She suddenly bolted awake from the dream. She was lying on the couch in the library, covered with a blanket. Drake looked over at her from the billiards table where he was playing by himself.\n\n\"Are you alright?\" he asked, coming and sitting beside her.\n\nShe looked up at him, momentarily confused. \"Yes, yes, I think so. Just a strange dream,\" she said shaking her head. \"I didn't realize I had fallen asleep. What time is it?\"\n\nHe glanced at the clock over the mantle. \"It's almost one. You've been asleep for a couple of hours.\"\n\n\"Billy and Elizabeth haven't come back, have they?\" she asked, sitting up.\n\nDrake rose from beside her and walked back over to the billiards table. Chuckling he said, \"I don't think we'll see them until this evening, or perhaps even tomorrow morning.\"\n\n\"What are you doing?\" she asked.\n\n\"Practicing. If I'm to be living with you I had better improve my game,\" he replied, teasing her.\n\n\"Why? Would your tender male ego be bruised if I continually beat you?' she asked, teasing him back. \"Don't worry, I'll let you win every now and then.\"\n\n\"May I remind you, I won fair and square last time?\" he asked indignantly.\n\nShe laughed. \"There was nothing fair or square about that game.\"\n\nHe looked down at her skirts and spoke in a low voice. \"Yes, you're right.\"\n\nShe walked over to the cue cabinet and removed one. \"How about we play again? No tricks or distractions this time?\"\n\nLeaning on his cue, he asked, \"What shall we play for?\"\n\n\"I'm feeling rather confident today. How about the same stakes? We play to 30 and if I win, you have to stop calling me V, and if you somehow manage to win, I will kiss you.\"\n\n\"Sounds good. Ladies first,\" he said setting up the balls for her.\n\nThey played seriously, without taunting or distracting each other. The game was tied at 29 as she bent to take her shot. She neatly scored a winner, raising her score to 30 and winning the game. She laid her pool cue across the table and Drake momentarily hung his head.\n\n\"Well it looks like you've finally gotten your wish, my dear Virginia,\" he said to her.\n\nShe approached him, and looking up into his eyes, she replied, \"I don't want you to stop calling me V. I've grown rather accustomed to it.\"\n\nHe took her arm and gently pulled her to him. \"Well if you forfeit your prize, does that mean I get to claim mine?\" he asked in a husky voice.\n\n\"Since we're playing so fairly...\" His lips captured hers before she was able to finish her sentence. She immediately fell into the kiss, running her fingers into his hair and pressing against him. He pulled the pins from her hair and it cascaded down her back like a waterfall of fire. He gripped her tightly as the kiss deepened. His body was aching for her but he knew better than to take her upstairs. He was certain that she wouldn't resist, but a voice in his head spoke through the whirl of passion and warned him that she would only be angry with him again after. He gently pulled away from her, smoothing her loose hair back from her face and peering at her through his own hair, hanging in his eyes. He could see the passion and desire clouding her eyes.\n\n\"Don't stop,\" she murmured, turning her face up to his, offering her lips to him..\n\nHe swallowed hard and stepped back from her. \"No, we had better stop or things will go too far,\" he whispered to her.\n\nShe opened her eyes and blinked several times. The clouds in her eyes cleared and she stared at him. Looking away she said in an unsteady voice, \"Yes, I suppose you're right.\" She stepped away from him and went back to the couch where she slowly sank down.\n\nDrake chuckled as he pulled his hair back. \"If you continue to forfeit your prizes I may not bother improving my game.\"\n\n\"I'll make sure to ask for something I really want next time,\" she said with a smile.\n\n\"And what would that be?\"\n\n\"I'm not sure yet,\" she said thoughtfully. \"I'll have to think about it.\"\n\nBy nightfall, Billy and Elizabeth still hadn't returned to the house and Drake again spent the night in the room across the hall. Knowing that she was just a few feet away kept him from sleeping easily that night. He didn't know, of course, that she tossed and turned for a good hour as well before finally drifting into a fitful sleep.\n\nThe next morning, Virginia sat in the sitting room staring into her cup of coffee, when she heard horses out front. A few minutes later Billy and Elizabeth stumbled in the front door, laughing and kissing.\n\n\"Well good morning, you two,\" she called out to them.\n\n\"Morning, Ginny,\" they replied in unison, smiling broadly, walking into the room. They fell into a chair together, Elizabeth sitting on her new husband's lap. They began kissing again as if she weren't in the room.\n\nShe shifted uncomfortably in her chair, not sure if she should leave them alone or not.\n\n\"Well, well, you two certainly are a happy pair of newlyweds.\" Drake was striding into the room laughing at the young couple. They both smiled up at him, Elizabeth blushing.\n\n\"Thank you for the use of your home, Drake,\" Billy said.\n\n\"Think nothing of it. It is your house after all,\" he smiled back at him.\n\n\"Well, you can go back now and get out of Ginny's hair. I'm sure she's looking forward to having the house to herself finally.\"\n\n\"Actually, I've asked him to stay here while you're gone,\" she said.\n\nBilly and Elizabeth both looked at her with surprise. \"Are you sure that's wise? What will Thomas think?\" Billy asked.\n\nShe stood and walked to the front window. Looking out, she said in quiet voice, \"It's over with Thomas. I discovered some rather upsetting things about him and have since ended it with him.\"\n\nBilly came up behind her and put his arm about her shoulders, giving her a sympathetic squeeze. \"I'm sorry, Ginny.\"\n\n\"Thank you, but it's alright. At least I found out now and not later when it may have been too late to do anything about it,\" she said with forced cheer. \"So, when do you leave?\"\n\n\"In two days, Thursday. We haven't even begun to pack!\" Elizabeth exclaimed. \"I'm so excited about the trip. I've never really been anywhere before.\"\n\n\"I'm sure you'll have a wonderful time,\" Virginia said with a smile.\n\n\"This time you can sit back and relax and watch all the sailors doing the hard work and not have to get in there with them,\" Drake said.\n\n\"Sometimes I miss working on the ship,\" Billy said. \"But with Lizzy by my side, I won't be tempted. She's all the temptation I can handle.\" He gave her a quick kiss.\n\nThey soon left to Elizabeth parents' home so that she could pack for their honeymoon. Virginia and Drake were still in the sitting room, enjoying a late breakfast.\n\n\"Do you miss being on your ship?\" Virginia asked him.\n\n\"Not really. I'm used to spending months at a time away from her.\"\n\n\"Do you miss Liverpool?\"\n\n\"I little bit. I had some friends there that I miss, but I would rather be here with you than back there with them,\" he said smiling at her. \"Do you miss it?\"\n\n\"I miss the familiarity of it. Not as much anymore, because I'm used to it here now. And of course I miss Violet terribly. But I guess what I really miss is just my life before Father died and before Charles. When we had money and it was just Violet and I enjoying ourselves, being young and carefree.\"\n\n\"But look at what you have now. You have a house, land, wealth. Even if your money in Liverpool hadn't all been lost, you wouldn't have all this. You'd be looking for a husband to provide that for you.\"\n\n\"If things had stayed the same in Liverpool, I'd be looking for a husband to provide me with love. That's all I ever really wanted,\" she said wistfully.\n\nHe almost pressed the point that that was what he was offering her, but decided against it. He would let it rest for now.\n\n\"I'm going to go back to the house and collect my things. I'll be back in a couple of hours,\" he said wiping his mouth and picking up his dishes to take to the kitchen.\n\n\"I'll come with you if you don't mind. I should take away the wedding night decorations.\"\n\nHalf an hour later they were riding out to the small house in the cart. \"When do you think you'll be able to begin the expansion?\" she asked, huddling in her winter coat.\n\n\"Well, I'll have to wait until the weather gets a bit warmer. With all the rain here during winter it wouldn't be a good time to start. So I guess it will be in the spring.\"\n\n\"Probably before Billy gets back. Have you two talked about what he wants done, or rather what Elizabeth wants done?\" she asked with a smile.\n\n\"Yes, we've gone over that. I have a fairly good sense of their wishes.\"\n\n\"Can I help?\" she asked.\n\nHe looked at her with surprise. \"Well I guess so. I didn't think you would be interested.\"\n\n\"Well of course I'm interested,\" she replied as they pulled up outside the out-building.\n\nHe helped her down and said, \"I think I can find something for you to do.\"\n\nThey walked inside and looked about. The young couple had left the house very neat and tidy. The romantic decorations were still up, along with the vases of flowers. She fingered one of the blooms. \"I should have figured out a way to bring these back to the house. They're so pretty and were rather expensive, it seems a shame to just leave them here.\"",
        "\"We'll figure something out,\" Drake said, pulling out his large trunk. \"Should we leave all the furniture here or take it back to the house?\"\n\n\"Oh I think it should be fine to leave it all here, don't you think?\" she said, walking into the bedroom. She was pulling down the lace canopy from over the bed when a hole in the weave caught on the top of one of the tall posts. She tried to flip it off but it was too high.\n\n\"Drake, could you help me with this?\" she called out.\n\nHe came to the door of the bedroom and standing in the doorway watched her struggle with the large piece of delicate fabric. \"I've always dreamed of you calling to me from a bedroom, but was hoping for a more romantic scene,\" he remarked.\n\nShe tried to give him a stern look, but couldn't help but smile, glancing up a the caught piece of lace. He walked up behind her, standing so close she could feel his breath on her cheek.\n\nShe drew in a shaky breath. \"Could you help me get this down, please?\" she asked quietly.\n\nHe lifted his arms around her and neatly flicked the sheet of lace and released it from the bed post. As it gently floated down to the bed, he slowly lowered his arms, wrapping them around her. He nuzzled the back of her neck, burying his nose in her hair, drawing in deep the fresh, sweet scent of her. He pulled her close and just held her, enjoying the feeling of her close to him. \"You asked me earlier if I missed being on my ship and I said no. That wasn't entirely true,\" he said softly in her ear.\n\n\n\"You do miss it?\" she asked with a slight tremor to her voice.\n\n\"I miss being on it with you. Even though we spent half the time angry with each other, it was the best crossing I've ever experienced. I miss having you close. I miss seeing you in my bed, lying there asleep, your hair fanned out about you. I miss falling asleep and waking up with you in my arms. Seeing you every morning and every night. Do you miss any of it?\"\n\n\"I try not to think about it,\" she replied in a whisper. \"Well, when you've moved into the house you'll see me every morning and every night.\"\n\n\"But not in my bed,\" he said.\n\n\"No, not in your bed,\" she said pulling out of his arms. She reached for the lace sheet and began to fold it. He stood back and watched her for a moment before turning to the bureau and emptying the drawers into his trunk.\n\nHe piled his belongings and some items from the house into the cart. They managed to wedge the vases of flowers in between items and headed back to the house.\n\n\"Are you sure you want me there, across the hall from you?\" he asked her.\n\n\"Yes, why not?\"\n\n\"Well, perhaps you would prefer me on another floor. We could easily turn the music room into a bedroom.\"\n\n\"No, I would prefer to have you close by. Are you uncomfortable being so close? Maybe you'd rather sleep in the other bedroom?\" she suggested.\n\n\"No, I guess Billy's room is fine. It is bigger isn't it?\"\n\n\"Yes, it is. Why did you ask if I wanted you across the hall?\"\n\n\"Well, rumors are going to circulate having me in the house in the first place, and right across the hall from you, well tongues are really going to wag.\"\n\n\"No one will know where in the house you're sleeping and even if they do know, I don't care what people think of me. I spent too much time in Liverpool worried about what I said, did or even wore, scared that someone wouldn't approve. I shall do what I please now, and it pleases me to have you living with me, sleeping across the hall.\"\n\nPulling up outside the house, he said as he helped her down, \"I'm glad it pleases you. I'm certainly pleased as well.\"\n\nThey began to carry the items inside, setting up the vases of flowers throughout the house. Drake hauled his large trunk upstairs but would have to wait until Billy emptied the wardrobe and bureau before he could unpack. He walked across the hall to Virginia's room where she was arranging a particularly large bouquet of flowers. He watched her for a few moments as she was silhouetted against the dying light coming through the window. He knocked on the door. \"Am I allowed in?\" he asked.\n\n\"If you promise to behave,\" she said with a smile.\n\n\"You already know about me and my promises to behave around you,\" he warned her in a suggestive voice.\n\n\"Yes, I do,\" she said, finishing with the flowers. \"I'm finished in here for now. There is something I would like to talk to you about. Downstairs.\" She picked up a lantern and after lighting it, walked past him in the doorway and began to make her way down the hall.\n\nThey settled in the library, and after Drake built a fire, she hesitantly said, \"I'd like to talk to you about the way we...tend to...behave...around each other.\"\n\n\"The way we tend to behave? What do you mean?\" he asked, puzzled.\n\n\"Well, quite frankly, the way we tend to end up in each other's arms or sometimes... in bed together,\" she replied. \"If you are to live here, that cannot happen.\"\n\n\"But it's so pleasant when it does. Do you not enjoy being in my arms, being in bed together?\" he asked her quietly.\n\n\"Actually, I usually find it upsetting and confusing. Please, can you promise me it won't happen?\" she pleaded.\n\n\"I can only promise to try on my part. Must I remind you that the times we have ended up in bed together, you were the instigator?\" he said with a smirk.\n\nShe blushed, and reluctantly admitted that he was right. \"But, you must do your part and not lead me towards that path. Which you must admit you do,\" she admonished.\n\n\"As I have said before, I can only try. You know how I feel about you and how tempting you are. And since I value my reputation for not breaking my promises, I only promise to try,\" he said.\n\nShe eyed him warily, wondering if that would be enough. Since she would rather have that than be alone in the house, she relented. \"Alright, I can accept that.\"\n\n\"When will this promise come into effect?\" he asked, rising from his chair.\n\n\"What do you mean, when will it come into effect? Don't promises come into effect the moment you make them?\" she asked, as he approached her chair.\n\n\"Not necessarily,\" he said extending his hand to her.\n\nNot sure what he was talking about she hesitated before allowing him to help her out of her chair. She stood before him, wondering what he was going to do.\n\n\"If I have to promise to try and behave myself, I would like to have a few moments before I am bound to that,\" he said softly, looking down into her eyes.\n\nShe suddenly realized what he meant, but before she could say anything, he wrapped his arms around her and pressed his lips to hers. These were their last unrestrained moments together and she also took advantage.\n\nSoon both their hair was released and flowing freely as they pressed against the other and kissed hungrily. Drake suckled her bottom lip before she threw her head back, exposing her throat to him. He trailed his tongue up from the hollow at the base to the tip of her chin and buried his hand in her hair bringing her head back down so that he could kiss her again.\n\nShe tugged at his jacket and waistcoat, pulling his shirt out from underneath. She needed to feel his skin against her palms one last time. The buttons of his waistcoat were quickly undone and she sighed deeply as she slid her hands up under his shirt. His skin was warm and soft over the hard muscles beneath.\n\nTaking his cue from her actions, he was soon tugging on the laces to her dress. He loosened them enough to pull it down over her shoulders and trailed his tongue along her flesh there, placing kisses along the way. She moaned her pleasure and pulled off his coat and waistcoat, before pulling his shirt off over his head. She could feel his arousal pressing against her hip and gently pulled away. She trailed her fingers gently over his bare chest, trying to calm her breathing.\n\n\"Perhaps, now would be a good time for those promises to come into effect,\" she murmured breathlessly.\n\nWith great effort he let her pull away. He was moments away from scooping her up in his arms and carrying her upstairs. His eyes hungrily swept over her, her hair undone, the wild curls flowing over her shoulders, her breasts heaving beneath the loosened gown. He stepped towards her, running his hands along her bare shoulders. \"One last time, V, just this one last time.\"\n\nShe stared into his eyes, knowing what pleasures awaited her. She knew how he could make her feel and she did want that. But at what cost? If she didn't expect anything from him in return, how could she get hurt, she thought. She could give into him now and then that would be the last time. Deciding the risk was worth the cost, she pressed herself against him. \"Yes,\" she murmured against his mouth. \"Take me upstairs.\"\n\nHe looked down into her eyes. \"Are you sure? You won't be angry afterwards?\"\n\n\"No. Take me, just take me,\" she breathed.\n\nHe captured her mouth again in a passionate kiss, tightly wrapping his arms around her. She expected him to pick her up and carry her up the stairs, but instead he walked her backwards until she was stopped by the billiards table. Breaking the kiss, he stared down at her breathlessly before turning her to face the table. Pressing on her back, he bent her over until her cheek rested against the smooth felt. Her skirts were quickly lifted and pantalets tugged down, fully exposing herself. Virginia lay against the table, barely able to catch her breath, her pulse racing as Drake's strong hands caressed her soft flesh.\n\n\"Oh Virginia,\" he whispered, kneeling between her spread thighs, breathing in the musky scent of her. His large hands slid across her bottom, caressing the soft flesh, before sliding down her thighs to her knees and then back up again, tickling the sensitive insides of her legs. He smiled at her gasp as his fingers gently spread her before he tipped his head back and slowly slid his tongue through her soft folds.\n\nVirginia's hands curled into fists, a small cry escaping her lips as Drake's tongue sent her senses reeling. Oh, how was she to stay away from him when she knew he could make her feel this way? His fingers sought and quickly found the small nub nestled between her folds and her climax was almost immediate, her thighs clenching as she went up on her toes, her head rising from the soft felt of the table top, a loud cry piercing the air.\n\nSuddenly Drake pulled her upright, tugging on the already loosened laces of her gown, letting it pool around her feet. She quickly shed the remainder of her garments until she stood naked before him. His hands skimmed over her, barely touching her burning flesh, worshipping her with his eyes. Finally, pulling her to him, she sighed as she felt his bare chest press against her breasts, the slightly rough fabric of his breeches against her soft thighs as his lips pressed against hers before he again turned and pressed her down against the billiards table.\n\nShe readily spread her thighs and closing her eyes, imagined they were once again on his ship. The only thing missing was the cool night air against her naked flesh. With a sudden thought her eyes flew open. \"Drake,\" she spoke as his fingers were about to sweep away any chance of coherent thought.\n\n\"Yes, my dear,\" he purred.\n\n\"Can we...go out on the balcony?\" she shyly asked.\n\n\"The balcony?\" he asked, puzzled at her request. \"Why do you want to go out there?\"\n\n\"I want to feel the cool air on my skin, like I did on your ship,\" she replied, her cheeks flushing pink.\n\nHe chuckled at her request, \"Alright, let's go. But put your shoes back on first.\"\n\nRising from the table she slid her feet into her shoes before Drake picked her up in his arms and carried her from the room, up the stairs to the balcony off the ballroom.\n\nMinutes later she was bent over clutching the stone railing as Drake stood behind her, gripping her hips, driving into her. Virginia had her eyes closed, imagining they were on his ship, the night air cooling her heated flesh, transporting herself back to a time when it didn't matter what happened in the morning.\n\nBilly and Elizabeth arrived back at the house well after dark. After a quick inspection of the main floor they figured that Drake and Virginia had gone to bed early.\n\n\"I guess we'll be sleeping in the guest room. Drake will be in your room, won't he?\" Elizabeth asked.\n\n\"Maybe he's still up,\" Billy replied heading up the stairs.\n\nThey arrived upstairs and found both the guest room and his room empty. \"Maybe he went back to the out-building,\" he said, before hearing a sound from across the hall. He crossed to Virginia's door and listened. He distinctly heard laughter, both Virginia's and Drake's. He stared at the door surprised and confused. He couldn't believe they were in there together again. With a sigh he turned back to his room, shaking his head.\n\n\"What was it?\" Elizabeth asked.\n\nHesitating, he said jerking his head towards the other room, \"They're in there...together.\"\n\nElizabeth looked across the hall in surprise, her eyes wide. \"Oh,\" she said in a small voice. A sudden gleeful shriek came from the other room and they both started.\n\nBilly looked at Elizabeth with hungry eyes. He wrapped his arms around her and tumbling backwards onto the bed, he said, \"Come on, let's see if we can make more noise than them.\"\n\nDrake slowly drifted awake and was momentarily confused. It was still dark and for a moment he couldn't remember where he was. It was then that he noticed the sweep of coppery curls across his chest along with a slender arm. He gently pushed the hair out of Virginia's face and gazed down at her. She was back. He wrapped his arms around her, hugging her tight and placed a kiss on her head. She murmured and hugged him back. She sleepily opened her eyes and looked up at him for a moment before giving him a lazy smile and then drifting back to sleep.\n\nIt was a gray morning, with wet snow spattering the windows when Virginia awoke. Her head was still resting on Drake's shoulder and she sat up slightly and looked down at him. She had never awoken before him. Every morning on the ship he had already gone when she opened her eyes. She took this opportunity to examine him as he slept. She had always heard about how innocent and youthful people look when they sleep but he still looked just as manly and roguish. She gently ran her finger along his jaw feeling the roughness of his stubble. She leaned forward and trailed kisses down his neck and across his shoulder. She pulled the blanket back and began to kiss his chest. He moaned softly in his sleep and clumsily put his hand on her head. She felt his chest rise as he drew in a deep breath. She rested her chin on his chest and looked up at him as his eyes fluttered open. He looked confused for a moment and then looked down at her.\n\n\"Good morning,\" she said.\n\n\"Good morning,\" he replied with a smile, pulling her up to him. He kissed her gently and she snuggled back against him. \"Did you sleep well?' he asked, hugging her.\n\n\"Yes, I did, and you?\"\n\n\"Yes. I awoke in the night to find you snuggled up to me. I can't tell you how much I missed that.\"\n\n\"Do you realize that this is the first time we've ever woken up together? On the Aurora you were always gone when I awoke.\"\n\n\"I didn't know what I was missing,\" he said, kissing her again. \"Have those promises come into effect yet?\" he asked, his hand sliding down her side under the blankets.\n\nShe sighed deeply, feeling a tingle begin in her belly at his touch. \"Not quite yet,\" she whispered, reaching for him under the blankets as well.\n\nAn hour later, Drake was slowly coming down the stairs when he heard a knock at the door. He was wearing only a loosely belted housecoat and was just going to ignore whoever it was when it opened and Thomas stood staring at him. His eyes swept over Drake, taking in his loose hair, bare chest and legs and correctly guessing that he was wearing nothing else.\n\n\"What are you doing here?\" Thomas asked him curtly.\n\nDrake contained his anger at the other man and calmly replied, \"Going to make coffee,\" as he continued down the stairs and turned towards the kitchen. Over his shoulder he continued, \"for Virginia and myself.\"\n\nThomas took a step into the house, rage bubbling up in his chest, when suddenly Virginia appeared on the upper level, also clad only in a housecoat, her hair in wild disarray. \"Drake, could you also bring...oh my goodness, Thomas!\" she exclaimed, noticing him standing below. She backed away from the railing, clutching her thin garment more closely around her.\n\nThomas' gaze quickly flicked from her to Drake and back again. \"Well, I see you didn't waste any time did you?\" he said snidely.\n\n\"I guess she wasn't that upset to lose you,\" Drake replied, matching his tone.\n\nThe two men glared at each other for a moment, before Virginia finally spoke. \"What do you want, Thomas?\"\n\nHe tore his eyes from Drake and looked up at her. \"I came by to talk to you about the other night and to see if I could make you understand but I see that it's useless to try. You've obviously moved on,\" he said, his eyes flicking back to Drake.\n\n\"It wouldn't have mattered whether Drake was here or not,\" she said to him. \"I know what I heard. Now, could you please go, and don't come back again.\"\n\nHe knew this was going to be his last chance. \"But Virginia, please, can't we talk about this?\" He glanced at Drake before looking up at her again. \"Please. Yes, it was the money at first, but I don't care about that anymore. I've come to realize that I love you, I can't live without you. You can keep the money, I don't want a penny of it, I just want you.\" He looked up at her with his most sincere expression.\n\nShe looked down at him, into his eyes. She could see the desperation there, but was there love as well? Was he being sincere? She looked at Drake, who was glaring at Thomas with murderous eyes. Still clutching the robe tightly, she slowly came down the staircase. Thomas approached the foot of the stairs but she stopped halfway down when she could clearly see that he was lying. The desperation was still in his eyes but behind it all she could see was deceit. He didn't love her.\n\n\"Drake, could you please bring some toast up with the coffee? Goodbye, Thomas.\"\n\nShe continued to stare at him and saw the desperation turn to a flame of anger. His hands balled into fists and he placed a foot on the bottom stair. Drake took a step forward and with a glance at him, Thomas turned and walked out the door, slamming it behind him. She slowly sank down to sit on the steps as Drake rushed to her side.\n\n\"Are you alright?\" he asked, wrapping his arms around her.\n\nShe nodded and looked up at him. \"Thank you for being here. I wouldn't have wanted to face him alone.\"\n\nThey heard his horse pounding down the drive before he stood and said to her softly, \"Do you still want toast and coffee?\"\n\nShe smiled up at him. \"Yes, please,\" before standing herself and heading back up the stairs.\n\nDrake put the coffee and toast on a tray and carried it up the stairs. He was just about to open the door to Virginia's bedroom when the door to Billy's opened. The younger man had obviously just awoken. He was wearing a nightshirt with an open robe over it. His hair was sticking up and he squinted at Drake. \"Mornin' Drake,\" he yawned, shuffling past him.\n\nSmiling at his retreating figure, he replied, \"Good morning, Billy.\" The door was ajar and he called inside, \"Good morning, Mrs. Forrester.\"\n\nHe heard her giggle and call out, \"Good morning, Mr. Stratford.\"\n\nWith a chuckle, he opened the door to Virginia's room and entered with her breakfast.\n\n\"Are the newlyweds here?\" she asked.\n\n\"Yes,\" he replied handing her a cup and a plate with her toast. \"And this time Billy was neither shocked nor angry to see me. Neither was Elizabeth as a matter of fact.\"\n\n\"I think he told her everything shortly after you arrived back,\" she said biting into her toast. \"He had to confess that he and I aren't cousins so I think he just told her the whole story.\"",
        "\"How did he know the 'whole story'?\" he asked her.\n\nShe looked at him sheepishly. \"Because I told him.\"\n\nHe stared at her in surprise. \"You told him?\"\n\n\"Well, I needed someone to talk to and he was the only one that I could trust who wouldn't judge me,\" she pouted. Softening, she looked up at him. \"You chose a good man to look after me in your absence.\"\n\n\"I'm glad it worked out so well, for both of you,\" he said, gently stroking her hair back from her face.\n\nShe stretched in the bed and sighed. \"I want a bath, but I don't feel like hauling all that water up here,\" she said.\n\n\"I'll do it for you,\" he said, kissing her temple.\n\nShe clutched at his arm. \"No, I want you to stay here.\" She slid back down into the bed and said wistfully, \"I want a bunch of maids to appear with my big tub and buckets of steaming water and then you and I could take a bath together.\"\n\n\"Why don't you hire some maids, then? You can afford it. You shouldn't have to do all the work in this house yourself.\"\n\n\"You're right. Maybe I will, but in the meantime,\" she pulled the covers back and began to climb out of bed.\n\nDrake gently pushed her back and drew the blankets over her. \"You stay here. I'll prepare your bath for you.\" He stood and began to dress. He pulled his shirt over his head and asked, \"You don't happen to actually have a tub that big, do you?\"\n\nShe smiled at him. \"As a matter of fact, yes, I do.\"\n\nHe returned her smile and gave her a quick kiss. \"Well then, I'll make sure to prepare enough water.\"\n\nThey both sat in the steaming water, she between his legs, her back pressing against his chest. Drake was squeezing his fists in the water, causing it to spout into the air, much to her delight. Kissing her on the neck, he wrapped his arms around her. \"So, when are these promises we talked about going to take affect?\"\n\nShe let out a low grumble and tipping her head back onto his shoulder, she said, \"How about tomorrow?\"\n\n\"Why don't you just marry me, V? Then we don't have to worry about any promises.\"\n\nShe lifted her head and squeezed her fists in the water, trying to make it spout. \"I'm not sure I'm quite ready to marry you yet,\" she replied. Unable to create any spouts, she asked, \"How did you do that?\"\n\n\"Yet?\" he asked with a smile. \"You mean, you might marry me someday?\"\n\n\"Perhaps,\" she teased. \"Show me how to make the water squirt up.\"\n\nHe moved her hands closer to the surface and she squealed with delight as the water spouted from her hands. He slid his hands around her waist and then up, cupping her breasts, pushing them higher until her nipples emerged from the water. The cool air caused them to harden immediately and he gently pinched the dark pink nubs. She let her hands sink into the water as she sighed happily, enjoying the feel of his hands on her breasts. Releasing one breast, his hand slid down over her stomach to between her thighs. Breathlessly, she parted her legs for him and his fingers slid lower, slipping through her soft folds. Sliding her hands along his thighs, her nails gently scratching him, she again tipped her head back against his shoulder, moaning with pleasure.\n\nIt was afternoon before they finally emerged, cleaned and dressed from her room. They were about to start down the stairs, when he grabbed her by the waist and pulled her close, his hands sliding lower, cupping her bottom as he placed a lingering kiss on her lips. \"I wanted to get one more in before this grace period is up.\""
    ],
    "authorname": "opels",
    "tags": [
        "drake",
        "virginia"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/an-undeniable-passion-ch-23"
}