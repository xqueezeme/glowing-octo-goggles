{
    "title": "Hell's Kitchen",
    "pages": [
        "\"What did 'The Chef' say, Mom?\"\n\nHer mother smiled then said, \"Look at you. Ten years old and worrying about your mother.\"\n\nShe gave her daughter a hug and said, \"Just one more reason for me to love you so much!\"\n\nHer daughter returned the hug then said, \"Nice try, Mom. Now tell me what he said.\"\n\n\"Persistent, too.\"\n\nHer daughter, Charity, crossed her arms, tilted her head, and waited for an actual answer.\n\nHer mom sighed then told her, \"He said he's looking at bringing someone else in.\"\n\n\"What? That's so unfair! Mom, you've worked there for five years waiting tables then two more as a hostess. And you've taken cooking classes. You're on time, you're smart, you're good with people, and you deserve a chance!\"\n\nFelicia Warren did deserve a chance. She'd just turned 40, two days after her daughter had turned ten, and all the things Charity just said were true. Felicia was too modest to admit it, but she knew she drew a lot of repeat business to the upscale Seattle restaurant. Admittedly, most of it was because of her looks, but if that brought customers back, it brought them back. \n\nNo one believed she was 40. No one. Well, maybe not 'no one'. There were some obvious exceptions like Charity, her family, and her closest circle of friends who knew the truth. Felicia was exceptionally blessed with great skin and a very attractive face. She'd worn braces as a girl and sported a perfect smile that seemed to be a part of her as she was almost always pleasant and upbeat.\n\nShe was also heavily into diet and exercise after her husband of ten years, Marty, walked out two years after Charity was born because she just couldn't lose the 40 pounds she'd gained during pregnancy. Looking back, she knew why. She was deeply depressed and ate from the time her husband went to work until he came home, always careful to hide the evidence. \n\nHe was a shit for abandoning her for having put on some weight, but three months after he walked out, his leaving had served as the boost she'd needed to take care of the problem that was destroying her life. After having to force herself to get to the gym for the first three months, Felicia found herself looking forward to going as the depression lifted and the weight came off.\n\nWithin six months, she found herself attracting more and more attention as she got back into shape, and by the time she could once again wear a size 6 dress, she was being openly hit on by all kinds of men. Younger, older, black, white, Hispanic, and Asian, and even a few women let her know they were very interested her. But her then-three-year old daughter was her priority whereas dating was not. \n\nA huge side benefit was finding the energy to keep working out and work full-time, and after spending a couple of years waiting tables in a crappy restaurant, she applied for a similar job in a more upscale restaurant and was hired on the spot. She had no doubt whatsoever her appearance played a big role in her getting the job, and she'd paid very careful attention to it ever since.\n\nShe threw herself into her work knowing advancement was often slow as very few people quit because the money at a restaurant of this caliber was very good. But she'd kept at it and had moved up to essentially being the maitre'd which meant even more money, money she used to take cooking classes (in her 'spare' time) with the hope of one day being hired on as a chef.\n\nFelicia was willing to take any chef position just to get her foot in the door. She didn't care if she only made salads as long as she had the word 'chef' somewhere in her job title. \n\nJust before she left work, she asked The Chef, a man named Daryl Phillips who was the head chef, the GM, and the owner, if he'd consider taking her on as a trainee since one of his chefs had been offered his own kitchen in another upscale restaurant in Portland, Oregon.\n\n\"Felicia, you're an incredible asset to my staff. You're talented, hard working, enthusiastic, and let's be honest, your smile has made a lot of money for this establishment.\"\n\n\"I sense a 'but' coming,\" she'd said forcing one of those amazing smiles.\n\nThe Chef sighed, ran a hand through his thinning hair, then said, \"Yes. There is a 'but'. I know you've been taking classes, and your work ethic is legend. But I have to go with my gut, and it's telling me to go with another applicant.\"\n\n\"I see,\" was all she said.\n\n\"If there was a second spot...\"\n\n\"May I just ask what his qualifications are?\" Felicia inquired tactfully even as she interrupted\u2014something she knew better than to do but did anyway.\n\nChef Phillips gave her an evil look but didn't chide her for cutting him off. He did, however, answer her question in his typical direct fashion.\n\n\"Felicia, I don't work for you, so I'm under no obligation to explain myself to you. Who I hire is my business and mine alone. However, I will tell you I see a lot of promise in this young man, and because cooking is more art than science, I am very confident he will become an excellent chef.\"\n\nAt that point, she knew that was all the explanation she was going to get. There was no need to get the second part of that speech which was, \"If you don't agree with my decision, I'm sure there are many other restaurants who would love to have you.\" He'd probably end it with an offer to write her a glowing recommendation, but she knew the next restaurant would call, and if she walked out, the verbal recommendation wouldn't be so glowing.\n\nFelicia also knew Chef Phillips was as good as they get, and he would never bring someone on board who might jeopardize all the years he'd spent building and reinforcing his reputation. And ultimately, she knew he was right. It was his kitchen and she worked for him. That he was so direct was still difficult for her to take, but take it she did.\n\n\"I understand,\" she told him politely. \"Thank you for your time.\"\n\nHe didn't reply, but she could tell by his eyes the conversation was over so she stood up and walked out. Or rather back to her same old job, one she was nevertheless grateful to have.\n\nRaising a child on her own was no easy task. Trying to do it without a decent job was even harder. Her ex-husband did pay child support, but it was barely enough to cover the basics for Charity, and Felicia was doing her best to save for college while paying the bills and taking cooking classes two nights a week while her mom watched Charity after school until she got off work late at night. The last thing she needed was to lose a job that paid quite well knowing how hard it would be to find something comparable.\n\nSo for now, she would be the best at what she was while continuing to prepare for the future; a future she dearly hoped would one day include not only a better job, but also a man she could both love and trust; one who would love her and her beautiful daughter as his own. She'd put finding one on the back burner for years, but after this latest huge letdown, Felicia was beginning to think perhaps it was time to maybe 'shift gears' and try looking again.\n\nIf past experience was any predictor of future success, Felicia knew she had a very difficult task ahead of her. Being a very attractive woman, she had no problem getting dates. The difficulty was finding someone who really, truly wanted a ready-made family, and she would never, ever settle for anything less. It wasn't enough for a future husband to tolerate 'raising another man's child'. He would have to be someone who'd want to be a dad to Charity while accepting the fact he could never be her father. It was a tall order to fill, but one on which she would never compromise even if that meant living alone until Charity was in college. \n\nIn the meantime, Felicia occasionally found someone attractive enough and nice enough to take care of her own physical needs in a no-strings kind of arrangement. Most of those rendezvous took place when Charity was spending her one weekend a month with her father. Otherwise, she either did without or when desperation won out, she would 'take things into her own hands' as a kind of last resort. Lately, the method of last resort was her one and only resort and that was getting very old.\n\nFelicia's train of thought was interrupted by her daughter who said, \"Mom? Are you listening?\"\n\nThe truth was she hadn't been, and she didn't try to pretend she had.\n\n\"No. I'm sorry, honey. I guess I'm a little more upset at being shot down than I let on. I wasn't paying attention and I apologize. What did you say?\"\n\nCharity wanted to know if she had to spend the weekend with her father, a comment that really took her by surprise.\n\n\"But you like spending time with your father,\" her mother said.\n\n\"Not since he started dating this...this...new girl,\" Charity said.\n\nHer daughter was exceptionally mature for her age. She was ten but sounded and reasoned like someone much older. She was kind, polite, thoughtful, and very sweet. For her to even say something this...uncharitable...was very unusual.\n\n\"What new girl?\" her mother asked.\n\nCharity did a 'Valley Girl' kind of voice as she replied, \"Oh, you mean...Jennifer?\" her voice rising at the end of the sentence.\n\nFelicia tried not to laugh, but it was too funny to ignore.\n\n\"How old is this one?\" her mother asked.\n\n\"I don't know. Maybe around 20 or so,\" Charity said.\n\n\"Wow. Let's see. Your father's last bimbo...sorry. Girlfriend...was 25. What's next? A high school girl?\"\n\nFelicia really did try not to criticize her ex in front of their daughter, but between his having dumped her for gaining weight, and his penchant for very young woman, it was sometimes her 'mission impossible'.\n\nCharity laughed loudly before her mom apologized.\n\n\"That was very mean and immature of me,\" she said.\n\n\"Yes, but it was all true,\" her daughter replied. \"So do I have to?\"\n\nBased on the custody agreement, he had a right to see his daughter two nights a week and have her one weekend a month. Then again, he'd been taking less and less interest in exercising his parental rights, so perhaps she could convince him to reschedule or just skip this month altogether. Doing so would mean she'd most likely have to wait another four or five weeks to...relieve some stress...but as badly as her body ached, her need to put her daughter first always won out and always would.\n\n\"I'll text him and see what he says,\" Felicia told her.\n\n\"Thanks, Mom! You're the best!\" Charity said before giving her a hug. \n\nShe still got hugs regularly, but Felicia knew that wouldn't last. Yes, girls tended to be more affectionate for longer amounts of time than boys, but even girls wanted their space and independence so she'd take as much as she could get for as long as she could get it.\n\nMarty typically took a day or more to get back to his ex-wife, but this time the reply was almost immediate.\n\n\"No problem. I'll catch up with her next month,\" was his terse reply. \n\nFelicia could feel the relief in his words, and she felt both happy and terrible for her daughter and found herself hating him just a little bit more. Being bitter did nothing good, and most of the time she avoided feeling that way, but when he put his girlfriends above his daughter, it pushed her right to the brink and beyond.\n\n\"I'll let her know. Have fun with...Jennifer,\" she replied regretting it as soon as she hit 'send'.\n\nA follow-on text surprised her even more.\n\n\"You mean Heather?\"\n\nThis time, Felicia didn't take the bait as she realized he'd already moved on to some other new, young bimbo. To herself she said, \"Whatever\" and didn't bother replying.\n\nAfter being off the next day, Felicia went to work and within seconds of arriving, the young, attractive girl who'd taken her place as a server before being promoted grabbed her and said, \"You have got to check out the new chef!\"\n\n\"Why? What's the big deal?\" Felicia asked as she put her things away.\n\n\"The big deal? Just wait. You'll see,\" the girl said with a smile.\n\nTwo minutes later, it made sense. Daryl was walking around with someone who looked like he might be in his mid-20s\u2014maybe\u2014and Felicia understood her replacement's comments. He was an exceptionally good-looking young man. \n\nHer first thought was he must have gotten lost on his way to a photo shoot. She'd seen many, many attractive men before, but this guy was uniquely...hot.\n\nHe was tall, had very thick, dark hair, high cheek bones, and the most gorgeous face she could remember seeing in...maybe ever. Every so often he smiled or laughed and Felicia had to admit he was gorgeous. \n\nHer next thought was he was probably either French or Italian and had just graduated from some very prestigious European cooking school. She'd been trying not to stare, but when she finally noticed he was staring back, she shook her head, looked away, and turned around.\n\n\"Ah, I see you noticed Felicia,\" she heard Daryl say loudly. \"It's kind of hard not to, huh?\"\n\nThe younger man didn't answer, and even with her back turned, Felicia knew they were coming toward her.\n\n\"Felicia! I'd like to introduce you to my new sous chef.\"\n\nShe forced herself to turn around then smiled brightly as she extended her hand.\n\n\"Felicia Warren, this is Noah Phillips. Noah, our maitre'd, Miss Felicia Warren.\"\n\nHe shook her hand as she said to him, \"Noah Phillips doesn't sound French or Italian,\" as the realization he was a family member hit her hard.\n\nThe younger man smiled and said, \"No. Sorry. Bellingham, Washington. Born and raised.\"\n\nShe ignored his reply then said, \"Sous chef. I'm impressed.\"\n\n\"To be honest, I just feel very fortunate,\" Noah said. \"The Chef is taking a huge risk on me. I hope he won't be disappointed.\"\n\n\"Nonsense!\" Chef Phillips said as he slapped Noah on the back. \"I know talent when I see it.\"\n\n\"I think you mean 'potential' in my case, but that was very kind of you to say, Chef,\" Noah told him while looking at Felicia. \"Oh, and he's right about you being hard not to notice.\"\n\nFelicia was already predisposed not to like this guy no matter how nice or good looking he might be. But he if was to also turn out to be humble in spite of his looks, it would be very hard to hold a grudge.\n\nAgainst her will she found herself smiling as she said, \"Thank you. That's very kind.\"\n\n\"It's also very true,\" Noah said with a smile of his own. \"I'll look forward to getting better acquainted.\"\n\n\"Just not now,\" Chef Phillips said. \"I have more people for you to meet and then we need to get you into the kitchen and unlearn any bad habits you've picked up. The good news is you're young enough it won't take me long to set you straight.\"\n\nHe nodded to Felicia then took his young charge with him as they headed toward the other end of the restaurant.\n\nOut of nowhere, Felicia's replacement said from right behind her, \"See what I mean?\"\n\nToo mesmerized to be startled she said without turning around, \"I do. He's very handsome.\"\n\nThe rest of the night Felicia wasn't sure whether she was resentful or jealous or possibly even something else she couldn't put her finger on. She still wanted to know the new guy's qualifications because being hot had nothing to do with being able to run a kitchen. \n\nFour hours later she went to the break room which was close to the kitchen and tried not to laugh when she heard Chef Phillips laying into his new assistant.\n\n\"Don't make me regret hiring you already!\" was the first thing she heard. That was followed by, \"If you can't make a simple gravy sauce, you can get yourself the hell out of my kitchen! I wouldn't feed this shit to my cats, and they'll eat anything!\"\n\nFelicia had been on the receiving end, too, but never like that. But were she to have been given this opportunity, she couldn't help but think she'd be the one getting yelled at. And as much as she wanted and needed the job and the money, she didn't need that kind of grief in her life so she closed the door and tuned everything out for a few minutes and just relaxed.\n\nWith ten seconds to spare, Felicia got up and opened the door and heard, \"And if you can't go six hours without having to take a piss, just keep on walking!\"\n\nShe saw Noah coming her way and when he was next to her said, \"Welcome to Hell's Kitchen.\"\n\nHe wasn't smiling now as he said, \"Is he always like that?\"\n\nFelicia laughed then told him, \"No. Sometimes he gets angry. And when he does, watch out.\"\n\n\"Oh, goody. Gee, great. Thanks for the warning.\"\n\nHe turned after taking two steps then said, \"No. Seriously. I really appreciate that. You're the first person who's said a kind word to me all night.\"\n\nShe wanted to say something else sarcastic but couldn't. The truth was she felt sorry for him. Yes, that was how Chef Phillips treated everyone, but Felicia didn't have to like it.\n\n\"Oh, sure thing. We all need a little support every now and then,\" she said in a kind way.\n\n\"Chef Phillips told me you wanted my job. I hope you don't hate me,\" he said rather sheepishly.\n\nFelicia forced a smile then said, \"I kinda did until I heard The Chef laying into you. Now I'm kinda glad you're here.\"\n\nShe paused then said, \"Kind of.\"\n\nNoah finally laughed as he said, \"I'm glad you're here, Felicia,\" just as The Chef's voice boomed out, \"How long does it take to take a fucking piss?\"\n\n\"I believe that would be me,\" Noah said as he turned to take care of business.\n\n\"Good luck,\" Felicia told him sincerely.\n\n\"I'll need it!\" Noah said as he hurried down the hall.\n\nMercifully, no one could hear a sound from the kitchen in the dining area, so Felicia was able to pretend all was well the rest of the night. She went to grab her coat around 2am and heard Chef Phillips still giving the business to Noah as she went by his office.\n\nOn her way back it was dead silent, and she noticed Noah standing there with a dazed look on his face. He finally saw her and smiled.\n\n\"Felicia. Hi. Mind if I walk you out?\" he said politely.\n\n\"No, but you don't need to do that,\" she told him just as politely.\n\n\"Oh, no. I wasn't implying you needed an escort. I was only hoping to spend a few seconds with someone...\"\n\nHe got very quiet before whispering, \"Sane.\"\n\nFelicia was very tired but couldn't help laughing.\n\n\"Come on. My car's out back,\" she told him.\n\nAs he opened the door at the rear of the restaurant for her, curiosity got the best of her.\n\n\"Do you mind me asking where you went to cooking school?\"\n\n\"Oh. That. Well, you see, I didn't exactly go to cooking school. Not formally anyway.\"\n\nFelicia stopped walking, turned toward him, then said, \"Are you serious? You have no formal training?\"\n\n\"I didn't say that,\" Noah replied with a weak smile. \"I just didn't attend a formal cooking school.\"\n\nFelicia was too dumbfounded to speak and that wasn't lost on Noah.\n\n\"I was a cook in the military,\" he explained.\n\n\"You've got to be kidding,\" she said hardly believing her ears.\n\n\"That I was a cook or that I got hired with that as my background?\"\n\n\"Yes,\" she said for both.\n\n\"I also worked at a couple of other restaurants before being hired,\" he told her.\n\nThat helped, but it wasn't enough. People just didn't get hired at restaurants of this caliber without real, substantial resumes.\n\nFelicia shook her head in disbelief, something else Noah didn't miss.\n\n\"And...Chef Phillips is my uncle,\" he finally admitted.\n\n\"You've got to be kidding!\" she said again, shocked beyond words. \"Do you have any formal experience in high-end restaurants?\"\n\n\"Um, well...one night,\" he said even more sheepishly than before.\n\nHe was smiling but Felicia wasn't.\n\n\"I have a daughter I'm raising by myself. I've worked here for years, and I've been taking formal classes. I needed this job. I deserved a shot at it. But did I get the chance? No! And why? Because Chef Phillips believes in nepotism! He hired his...nephew with no experience over me. So please excuse me if I'm just a little bitter!\"\n\n\"I...I think you're beautiful. Does that help? Even a little?\" he said with that same boyish innocence.",
        "Just when she was feeling good about hating him again she couldn't. She wanted to, but her better self wouldn't let her.\n\n\"Do you have a family to support?\" she asked in a gentler tone of voice.\n\n\"I do. My mom isn't doing well, and I take care of her. It's not the same as a child, I know, but I needed the job, too.\"\n\n\"Is...is she ill?\" Felicia asked not wanting to know the answer as she felt guilty for being so judgmental.\n\n\"She is. Very. She has...ALS,\" Noah told her. It wasn't a request for pity, it was just a statement of fact.\n\n\"Oh, my God. I'm so sorry.\"\n\n\"Me, too. She's still able to talk, but she can't get up anymore or really even feed herself. Her insurance pays for some things, but it isn't nearly enough.\"\n\n\"Don't I feel like an ass...idiot,\" Felicia said.\n\n\"Why? I took your job, and the only reason I got hired is because my uncle's sister is dying. I'd hate me, too,\" Noah told her.\n\n\"I don't...hate you,\" she said sincerely. \n\nShe looked at him then said, \"Well, not anymore.\"\n\nShe tried to smile which cause Noah to smile.\n\n\"You're a very nice person, Felicia, and I appreciate that.\"\n\n\"Thank you. I haven't exactly been all that nice to you, but I promise to make up for it from now on.\"\n\n\"Hmmm. Nice and beautiful,\" he added with a genuine smile.\n\n\"Thank you, again, Noah. It was very sweet of you to say. Speaking of sweet, I have a daughter waiting for me. She's asleep, of course, but my mom is home watching her, so I really need to get going.\"\n\n\"Yeah. Sure. Of course,\" he said.\n\nAfter Felicia unlocked her door with the key fob, Noah reached around and opened it for her.\n\n\"Just in case you still have just a smidgeon of hate for me left inside,\" he told her with another smile.\n\n\"I do apologize for jumping to conclusions. We all have our crosses to bear, and all I could think of was how heavy mine was. This really put things in perspective for me.\"\n\n\"I don't envy you, either. I can't imagine raising a child alone. But I can tell your daughter is very lucky to have such a great mom.\"\n\n\"Sometimes I wonder, but again\u2014thank you,\" she said as she got in.\n\n\"Felicia?\" he asked just before closing the door.\n\nShe looked up at him and waited.\n\n\"Would you ever maybe want to, you know, maybe go get a cup of coffee or something sometime?\"\n\nShe looked at him then narrowed her eyes and said, \"We serve some of the best coffee in town right here.\"\n\n\"True. I just thought maybe you might like to um...maybe um...you know...\"\n\n\"Are you asking me out?\" she said, her voice filled with incredulity.\n\n\"Um, no. Not really. I was just thinking it might be nice to talk to the one person who's been...kind to me,\" he told her.\n\n\"Oh, I...I guess I just assumed. Sorry. I'm not thinking very clearly. That was a ridiculous assumption.\"\n\n\"Okay, in all honesty I was asking you out. But it's just coffee so it's no big deal, right?\" he admitted.\n\n\"Wait. So you are asking me out?\" Her eyes were wide with disbelief as she looked at him. \n\n\"I was, but if you'd rather not, I'd much rather you just say 'no thanks' rather than...\"\n\nBefore he could finish his thought, Felicia asked, \"Why in the world would someone who your age who looks like you want to go out with someone who looks like...well, someone who's my age?\"\n\nHis reply caught her off guard, as he smiled and said, \"Finding girls to go out with is easy. Finding someone I respect and can trust isn't. I already respect you and I feel like I can trust you. I was thinking if perhaps you could learn to trust me...\"\n\n\"What? That we'd get married and ride off into the sunset?\" she said in a polite-yet-mildly sarcastic kind of way.\n\n\"No. No sunset. Just maybe live happily ever after,\" he told her with a sheepish grin.\n\nFelicia had to laugh again then said, \"Good night, Noah. Or rather, good morning.\"\n\nHe closed her door then waited for her to leave before going over to his own car and heading home not knowing what new developments he might come home to where his Mom was concerned.\n\nNoah had done a lot of reading about ALS and knew that at some point, his mom would begin having difficulty swallowing. It was called 'bulbar onset' and it often caused other problems with the respiratory system. Those whose first symptoms were bulbar in nature tended to be on the lower end of an already short life expectancy range of 2-5 years. Yes, there were exceptions to the rule like the late Professor Stephen Hawking, but most patients died within the expectancy parameters, and his mom had been diagnosed just over 18 months ago and was fading quickly.\n\nHe also knew that ALS patients were in full possession of their mental faculties and fully aware of what was happening while helpless to stop the disease's relentless progression. He'd tried to imagine laying there fully conscious, unable to move, and near the end, unable to even swallow, and feeling like he was drowning in his own saliva. \n\nHe shook off the feeling as he pulled into the driveway of his mom's home then went inside to check on her. There were no discernible changes, but Noah understood that his mom's motor neuron disease was slowly but surely killing her by destroying her muscles ability to function one cell at a time.\n\n\"Hey there,\" she said as best as she could when he walked in.\n\n\"Hi. Can I get you anything?\" he asked knowing not ask her how she was doing.\n\n\"I just want to talk to you while I still can,\" she told him in a voice that was already weak with some letters no longer being clear and distinct.\n\n\"Okay. Sure,\" he said sitting down next to her.\n\n\"Please don't interrupt me, okay?\"\n\nImmediately concerned, Noah only said, \"I won't.\"\n\n\"I can no longer get up. Before long, I won't be able to even move. My speech will be completely gone soon, too. Very soon, I'll need full-time care.\"\n\nBreaking his promise Noah said, \"Then we'll hire a nurse.\"\n\nHis mother, Grace Phillips, held up her hand with great effort and shook her head. \n\n\"No. That's what I wanted to talk about,\" she told him.\n\n\"Okay. I'm sorry. Go ahead,\" Noah said as he strained to understand every tortured word his mother spoke.\n\n\"I don't want to live like that, Noah. I don't want you watching me waste away into nothing. I...I want to take control of this while I still can,\" she said staring into his eyes.\n\n\"Mom. Don't talk that way, okay? We have options. We can...\"\n\nShe shook her head the slightest little bit and said, \"No. There aren't options, plural. There's only one option. For me, at least.\"\n\n\"Are you thinking about...\"\n\n\"Assisted suicide? Yes. I am. And before you start in, it isn't your decision to make. You understand that, right?\" she said, every word an exercise in itself.\n\n\"Yes, but what if they...\"\n\n\"Come up with a cure? Please. People have said that for as long as ALS has been ravaging human beings. Maybe one day. Maybe years from now. But so few people have it that it gets no real funding or research. Money goes to heart disease and cancer and rightly so. No one wants to die, Noah. But sometimes living is a fate worse than death. Living with ALS is just that.\"\n\nNoah had been a U.S. Marine, but he'd been a cook. He's closest brush with death was a bad case of ptomaine poisoning in a field mess they'd set up out in the desert in Yuma, Arizona, during a six-week, Marine Corps version of Top Gun called WTI or Weapons and Tactics Instructor's Course. \n\nHe'd never been in combat or heard a shot fired in anger. Even so, he thought he was a pretty tough guy until he sat there feeling helpless knowing his mom was right. Asking her to go on living for him so he could feel good about himself wasn't just wrong, it was immoral.\n\nHe'd never given any real thought to assisted suicide before, and what little passing thought he'd given was minimal. He believed life was precious and valuable but not 'sacred' and now that push had come to shove, he knew that each individual had to have the right to die on their own terms. \n\nHe would always oppose euthanasia where some doctor or panel of bureaucrats made life or death decisions for others, but the individual should have the right to make that decision for him or herself. He was also no fan of government-run healthcare. The Veteran's Administration or VA was a perfect example of a horribly inefficient system, and the last thing he wanted was for everyone to share in that kind of misery.\n\nHe didn't remember when or where he heard it, but a saying of Winston Churchill's came to mind that said: \"The inherent vice of capitalism is the unequal sharing of blessings; the inherent virtue of socialism is the equal sharing of miseries.\"\n\n\"What do you want me to do?\" he asked as he shook off those thoughts.\n\nIt took her several minutes to say what would normally take maybe a minute to say, but he understood.\n\n\"Okay. I'll take you there tomorrow,\" he promised. \"But we have to go before work, okay?\"\n\n\"Oh, yes. Work. How was your first day with my baby brother?\" she asked trying to smile even though she no longer could.\n\n\"Let's just say I'm glad it's over and leave it at that.\"\n\nShe was too weak to reply, but he knew she understood. Outside of the kitchen, Daryl was a wonderful human being. But at work, his desire for perfection was so strong it crowded out all of his good points and turned into what Noah would call either a raging asshole or possibly a dick with feet. Either one seemed equally fitting.\n\nWhen he shared both of those names for her brother with his mom, she came as close to laughing as she could. That she couldn't only reinforced his growing belief she might be right. \n\nAssisted suicide was now legal in Washington, or Washington 'State' as the rest of the country called it. So before he left for work the next day, his mother had what she needed to live and later die with dignity. She wasn't ready to go yet, but now she had the ability to live without the fear of getting to the point where she was no longer in control. She wished her nephew a good day and told him to tell her brother to be nice or she'd drag herself down there and teach him a lesson in manners.\n\n\"I'd pay to watch, Mom,\" he told her before kissing her on the cheek. \"You call me immediately if you need me, okay?\"\n\nShe couldn't hold a cell phone, but she could still turn it on and press the 'call' button, and Grace insisted on being independent long after Noah felt that was wise.\n\n\"Oh, sure,\" she said trying to sound positive but barely able to speak. \n\nHe'd been in 'Hell's Kitchen' an hour before Felicia came in and had already endured a tongue lashing and a half dozen on-the-spot corrections. When Noah saw her, he'd forgotten about how foolish he'd felt when she hadn't taken his offer seriously very early that morning. He was well aware he was a lot younger than her, but he'd only asked her to have coffee, not marry him. \n\nAs she walked by, she didn't see him, but most definitely saw her. He'd dated, or rather hooked up with, more than a few attractive women, so it wasn't like Felicia was the most beautiful girl, or in her case, woman, he'd ever seen. It was more that she was quite likely the most attractive with 'attractive' being defined as...well, maybe...desirable. But not in some lurid, physical way. She was a woman who exuded class and charm, but she wasn't the least bit pretentious. She was just very appealing and therefore...desirable.\n\nThere was most definitely a physical component to be sure, but Noah found himself very attracted to her for reasons he couldn't quite explain. But the attraction was there and until she told him 'no' in no uncertain terms, he was going to keep trying to get her attention and hopefully win her trust. \n\nAnd yet he had to ask himself, that were he able to do that...then what?\n\nThe 'what' was something he could worry about later. For now he was content to take in her long, silky, soft, dark hair along with her very tight waist and amazingly tight butt as she walked on by.\n\n\"What the hell are you staring at?\" both he and Felicia heard. \n\n\"How much am I paying you to gaze at Felicia's ass?\" Daryl roared.\n\nShe whirled around and saw Noah quickly look down at whatever he was preparing as though he was guilty.\n\n\"Good afternoon, Noah!\" she said with a cheerful-but-smug while waiting for him to look back up.\n\nWhen he did, she was still smiling and kept smiling until he said, \"Oh, hello.\"\n\nFelicia stood there for another moment trying to figure him out. He was extremely good looking, and most guys who looked that good were also self-confident to the point of cockiness, a trait she loathed in men. But Noah had a kind of shyness about him that didn't fit with his external appearance. \n\nAnd then she remembered his offer to have coffee sometime. As tempting as that might be, there was no possible future with someone that young, and being a co-worker just made things that much more difficult. Keeping some distance between them seemed not only reasonable but prudent as she turned around and went to put her things away.\n\nFelicia rarely interacted with Noah for the next several days and then really only for business as they discussed an order or some special request. That wasn't the case with his uncle The Chef, who was all over his nephew day in and day out.\n\nOn the fifth day since he'd essentially asked her out, Felicia was a bit surprised to see him outside when she left around 2:15 in the morning. He was leaning up against the building just staring up at the stars, something that wasn't possible most nights in that part of the country due to the ever-present cloud cover.\n\n\"You okay?\" she asked as she stepped outside and saw him.\n\n\"Huh? Oh, sure,\" he said when he caught sight of her.\n\n\"That didn't sound convincing,\" she said pleasantly.\n\n\"Sorry. I don't want to dump my problems on you.\"\n\n\"Oh, I see. Your uncle. I get it,\" she told him.\n\n\"Uncle Daryl? Sorry. I mean\u2014Chef Phillips? No. It's not him. I can deal with him. As a matter of fact, I'm learning so much it's scary. I gotta hand it to him, the man knows cooking.\"\n\nFelicia could sense something was really troubling him and since it was unseasonably warm for early September she didn't mind stopping and talking. The weather would turn cold any day now and stay that way until the following June, so this was very pleasant indeed.\n\n\"I um...I didn't mean to ignore you when you, you know, asked me to have coffee with you. I just didn't think it was a good idea,\" she finally told him.\n\n\"That's okay. I understand,\" he said back. \"I'm just this...kid to you. Some upstart who took your job. A guy who has no real business being in the kitchen let alone as the sous chef when there's someone else in there with more talent.\"\n\nHe finally smiled at her then said, \"I'm neither blind nor stupid, Felicia.\"\n\n\"I have a few minutes. If you want to talk, that is,\" Felicia told him.\n\n\"No, that's okay. It's really personal, and you have your um...your own cross to bear, right?\"\n\n\"Using my words against me?\" she asked sweetly.\n\n\"No. Not at all. I meant that sincerely. I'm sure you have more than enough on your plate without me adding to it.\"\n\n\"Okay. But if you decide you'd like to talk, please let me know, okay?\" she told him sincerely.\n\n\"I would like to talk, I just don't feel like I should burden you with all this,\" he replied.\n\nShe glanced at her wristwatch then said, \"Come on. Let's go back inside and sit down in the break room.\"\n\n\"Are you sure?\" Noah asked hoping she was.\n\n\"Not really, but...I guess I trust you enough to sit down and talk,\" she said with just a touch of playfulness.\n\nFive minutes later, Felicia understood.\n\n\"My goodness. That's so awful, Noah. Has she decided when yet?\"\n\nFelicia was very delicate in posing the question as she tried to imagine being in his shoes. What if her mom told her she planned to take her own life and had asked her to help her do it? Could she? Would she?\n\n\"Noah, my heart is breaking for you,\" she finally told him.\n\n\"Oh, no. I'm fine. It's my mom. Mine is breaking for her. I know this is the right thing, I just can't stand the thought of it.\"\n\n\"I get it,\" Felicia told him. \"Assisted suicide is legal here now, but your mom is the first person I've heard of actually contemplating it. I...I don't envy you.\"\n\n\"It is, but it just feels so wrong, you know? How am I supposed to sit there and hold her hand while she drinks this...this potion...that's going to kill her? We're supposed to protect life not take it, right?\"\n\nFelicia thought back to three years ago when they'd had to put their family dog down. She knew she'd be there to hold him as he died, she just didn't know how awful it would be. His eyes rolled up then he turned toward her as though he was saying, \"You're the only person who can help me. Please save me!\"\n\nAnd yet she was the one who'd given the okay to take his life. His body was racked with cancer and he was in terrible pain, but at that very moment, it had torn her heart out no matter how much she knew she was doing the right thing. And Noah was being asked to assist in doing this with a human being; the woman who'd given birth to him and loved him. Someone he loved enough to give up his freedom to care for.\n\n\"Would you like me to be there for you?\" Felicia heard herself saying before she realized it and was already wishing she hadn't.\n\n\"I can't ask you to do that,\" he said finally looking at her. \"Thank you for offering though.\"\n\nTrying to lighten the mood, Felicia said, \"After blowing you off about having coffee, offering was the least I could do.\"\n\n\"Or you could reconsider,\" Noah offered now trying to smile. \"About the coffee.\"\n\n\"I don't know, Noah. I mean, we work together, and I'm, well, I'm not exactly your age or even close so...\"\n\n\"I forgive you,\" he said trying to be serious.\n\n\"You forgive me?\" she asked sitting up straight.\n\n\"Yes. It's not your fault you were born a year or two before me,\" he said even more seriously.\n\nFelicia made a loud 'pffft' sound then said, \"You mean a decade or two before, right?\"\n\n\"Oh, so now it's my fault, huh?\" Noah said keeping up the shtick. \"Okay, fine. Be that way.\"\n\nFelicia couldn't help but laugh before sighing loudly then saying, \"Okay. Coffee. One time. But that's it. Deal?\"\n\n\"Deal,\" Noah said finally smiling and offering his hand to shake.\n\nFelicia gave him the eye before taking it and once they shook hands, Noah said, \"Deal on the coffee. Not on the 'one time' thing. That's TBD.\"\n\n\"TBD?\" she asked.\n\n\"Sorry. To Be Determined. As in...it depends. As in...we'll see how things go. Once we...\"\n\n\"Okay, okay. I get it,\" she said trying not to laugh again.\n\n\"When's your next day off?\" he asked.\n\n\"Hah! Like you don't know,\" she said pretending to be bothered. \"I saw you looking at the schedule.\"\n\n\"Fine. You caught me. But can you blame me?\" Noah asked.\n\n\"Yes. I can blame you. But I won't. At least not yet,\" she informed him. \"If the coffee isn't any good, then I'll blame you.\"\n\n\"The gauntlet has been thrown down. Okay. No problem. I do love a good challenge.\"\n\n\"Challenge? You'd have to have some chance of winning something for it to be a challenge. This is a one-time thing. One cup and we're done. That's it.\"\n\n\"You still didn't tell me when your day off is,\" he reminded her.\n\nFelicia sighed then smiled. \n\n\"The day after tomorrow,\" she said much more quietly as she picked up her things again.\n\n\"Okay. I'm looking forward to it,\" he told her.\n\n\"Well, that makes one of us,\" she said trying to sound snooty but not pulling it off too well.\n\n\"I'm gonna win you over, Felicia. That's a promise.\"\n\n\"Sounds more like a case of mental delusion,\" she quipped as she headed out. \n\n\"Nope. Sane and sound,\" he called out as she walked away. \"You'll see.\"\n\n\"Gee. Lucky me,\" she said as she walked out without him.\n\nShe was just getting to her car and digging out her keys when she heard the sound of footsteps running her way, causing her to shriek.",
        "\"Noah! What in the world are you doing? You nearly gave me a heart attack!\" she said when she realized who it was.\n\n\"Sorry. I didn't mean to scare you. You um...you left your cell phone on the table,\" he said as he held it out to her.\n\n\"Oh, my goodness. Be still my beating heart!\" she said, her free hand over it before reaching out to take the phone.\n\n\"I must be more tired than I thought,\" she said as she took it. \"Thank you. Very much.\"\n\n\"You're welcome,\" he said. \n\nThere was an awkward moment of silence before Felicia said, \"Well, goodnight.\"\n\n\"Goodnight. And thank you for listening, Felicia. That was very kind of you,\" he said quietly.\n\n\"Well, I'm glad you trusted me enough to share something so personal,\" she replied sincerely.\n\nThat was followed by another awkward moment after which Felicia said, \"What is it? Why are you looking at me like that?\"\n\n\"I...I can't help it. You really are beautiful,\" he told her in that 'aw-shucks' way of his.\n\nFelicia was very tired and yet her body responded to whatever signal her brain sent it. She hoped it wasn't evident to Noah as the feeling surged and spread forcing her to break eye contact.\n\n\"I...I really need to go,\" she said as she fumbled for her keys.\n\n\"Oh, right,\" Noah said as he backed up a step. \"I'll um...I guess I'll see you tomorrow then.\"\n\n\"Right. See you tomorrow,\" she said back after finding her keys and hitting the 'unlock' button.\n\nNoah stood there and watched her drive away and found himself experiencing this overwhelming feeling of wanting to be with this beautiful, older woman more than he'd ever wanted anything before in his life. But not just physically. There was something about her that was almost beckoning to him. It was like the lure of a siren's call he couldn't and didn't want to ignore. He wasn't quite sure how to explain it, but he was very sure he was experiencing it.\n\n\"Are you sure you'll be okay?\" he asked his mother two days later before leaving to pick Felicia up at her place. She'd initially told Noah she thought it would be best to meet him someplace, but he'd poured on the charm and after two additional tries she gave in and relented, telling him where she lived. \n\n\"Yes,\" his mother said but only the 'yeh' sound was really audible. In just those few days her voice had degraded unbelievably fast. Her 'esses' and 'ings' at the end of words were missing and others were becoming harder to understand.\n\n\"I won't be that long. I promise,\" he told her.\n\nShe managed to shake her head then said, \"Go. Have...fun. Live...life.\"\n\nHe kissed her cheek then stood up. She tried to grab his hand but couldn't.\n\n\"What is it?\" he asked.\n\n\"Soon,\" she said, only it came out more like 'oon'.\n\nHe squeezed her hand but didn't speak.\n\n\"Noah?\" she asked weakly.\n\n\"Yes?\"\n\n\"Is she pretty?\"\n\n\"My date?\"\n\n\"Uh-huh.\"\n\n\"She's beautiful, Mom. She's gorgeous, in fact.\"\n\n\"Take...a...picture, okay?\" she said even more weakly. \"Then show me.\"\n\n\"I will. I promise,\" he assured her.\n\n\"Go,\" she said before closing her eyes.\n\nAs badly as Noah wanted to spend time with Felicia, he couldn't shake the feeling that accompanied that one word\u2014soon. He knew what she meant, and the thought of it tore him up inside even as a part of him couldn't wait to see this woman he found himself unable to stop thinking about.\n\nHe did his best to put his 'game face' on when he walked up to the door, but Felicia could tell something was wrong as soon as she saw him.\n\n\"Do you maybe want to come in and talk instead?\" she asked after they said hello.\n\n\"Would you mind?\" he asked.\n\n\"No. Not at all. Come on in.\"\n\nHe saw a pretty, young girl peeking around the corner and smiled at her before she darted off.\n\n\"Charity?\" her mom called.\n\n\"She's in here, honey,\" another female voice called.\n\n\"Mom? Can you send her out please?\" Felicia called back. \"My daughter is dying to meet you, but I told her it was just a friend from work and we were just having coffee.\"\n\nThe girl came back into view and Noah smiled again then waved. She raised her hand slightly but didn't speak.\n\n\"Charity? This is my friend from work. His name is Noah. Noah, this is my daughter, Charity.\"\n\n\"It's a pleasure to meet you, Charity,\" he said with a smile.\n\n\"And you say...\" her mom prompted.\n\n\"Hello. I'm pleased to meet you, too,\" she said very quietly.\n\n\"I've never seen her so shy before. You okay, honey?\" her mom asked.\n\nShe was staring at Noah as she said, \"Yes.\"\n\nFelicia bent down and said, \"He is kind of handsome, huh?\"\n\n\"Mom!\" Charity said, the apples of her cheeks flushing a bright red.\n\n\"Well, he is,\" her mother told her.\n\n\"If that was a compliment, I'll take it,\" Noah said. \n\nHe looked at Charity then said, \"Just between you and me, I can tell you got your mom's beautiful looks.\"\n\nThe little girl's cheeks turned a darker shade of red as her mom said, \"And now you say...\"\n\n\"Thank you,\" Charity said feeling all kinds of things that were new to her.\n\n\"You're welcome,\" Noah told her sincerely.\n\n\"Oh, sorry,\" Felicia said. \"Let's sit down in the kitchen and I'll make some plain old store-bought coffee if that's okay.\"\n\n\"It sounds perfect,\" Noah told her.\n\nCharity was still staring and when her mother noticed she said, \"Doesn't Nana need you in the family room?\"\n\n\"I guess,\" the girl said as she realized she wasn't invited to join them.\n\n\"You look like you could use something a little stronger than coffee,\" Felicia said once her daughter left.\n\nNoah looked at her and said, \"I'm getting my butt kicked at the restaurant, but my big hope was to make some kind of positive impression on you, and here I am doing just the opposite.\"\n\n\"Or perhaps by displaying the kind of concern and compassion you're showing for you mother, you may just be making some headway,\" Felicia said with a slight smile.\n\nShe turned around and opened the refrigerator then told Noah, \"Hmmm. This looks bad.\"\n\nShe held up a bottle of white wine that was nearly empty. She sniffed and recoiled. \n\n\"Whew! Smells like vinegar.\"\n\nFelicia poured the rest in the sink then said, \"Come on. We're going out. But not for coffee. And don't worry. We won't be late.\"\n\n\"Wait. You're driving?\" Noah said when they got outside and Felicia produced her keys.\n\n\"Is that a problem?\"\n\n\"Not normally, but I do need to get home as soon as possible.\"\n\nHe hesitated then said, \"This probably isn't going to work. Well, not tonight anyway. I'm really sorry, Felicia.\"\n\n\"Don't be,\" she told him in a kind voice. \"I understand. Completely.\"\n\n\"Oh. Before I forget. I kind of promised my mom I'd show her your picture. Do you mind?\"\n\n\"No. Not at all,\" she said knowing that under any other circumstance it would have creeped her out.\n\nShe smiled the best smile she could as Noah clicked off a couple of quick snaps.\n\n\"Felicia?\" he said after taking them.\n\n\"Are they bad?\" she asked assuming that was his concern.\n\n\"No. They're great. How could they not be?\" he told her. \n\n\"Then...what's going on?\" she asked.\n\n\"Would you possibly be willing to come with me?\"\n\n\"To...meet your mother?\" she asked not sure she understood.\n\n\"You have no idea what it would mean to have someone other than me just to be around her. I mean, my Uncle Daryl stops by a couple times a week, but...\"\n\n\"I'd love to,\" she told him, having heard enough to know how important this was. \"But I want to follow you, okay?\"\n\n\"Yeah, sure. That's fine. And thank you,\" he told her unable not to smile.\n\nAs they drove along Felicia wondered if Charity or anyone else would care about her this much. She hoped so, but the fear of not knowing was unsettling. She knew we all have to face death, and that many times there could be a lot of pain and suffering beforehand. Facing it alone or with only strangers around her seemed unbearable. \n\nFor now she found herself hoping to be of some small comfort to this woman she'd never even met; a woman whose life was nearing its end. A life she planned to take\u2014soon\u2014a word that came to her without Noah's having specifically mentioned it.\n\nNoah pulled in first then helped Felicia with her door before showing her inside then asked her to wait so he could tell his mom they had company.\n\n\"Is it her?\" she asked with great difficulty.\n\n\"Yes. I took some pictures, but I thought you might like to meet her. Is that okay?\"\n\n\"Yes,\" she tried to say. Noah saw a twinkle in her eye and told her he'd be right back.\n\n\"Come on in,\" he said to Felicia.\n\nAs she walked into the woman's bedroom, Felicia saw a frail woman not that many years older than her. She fought off tears and her own deep-seated fears and smiled the best smile she could muster up.\n\n\"Hi, Mrs. Phillips,\" she said as the woman tried to reach for her hand.\n\n\"Heh...oh,\" she said trying to pronounce the word 'hello' to greet her.\n\n\"I'm so glad to meet you,\" Felicia told her as she took her tiny hand in both of hers.\n\nNoah's mom glanced at her son then said, \"You were right. She's a very beautiful girl.\"\n\nIt was barely understandable, but Felicia got it and thanked her.\n\n\"Come closer,\" she told her son.\n\nHe stood next to Felicia and bent down to listen.\n\n\"Tomorrow,\" she said.\n\n\"What? You mean...tomorrow...for...\"\n\nHis mother managed a slight nod. \n\n\"I'm...going...fast...now,\" she tried to say.\n\nHe looked at Felicia and said, \"I'm sorry. I shouldn't have asked you to come here.\"\n\n\"No. Noah. It's okay. I'm glad I came.\"\n\nShe looked at his mom and said, \"You're very brave. I...I don't know if...\"\n\n\"It...okay,\" Grace told her. \"I'm...not...brave. I just can't...live...like this.\"\n\nFelicia gently squeezed her limp hand and fought back tears again.\n\n\"I understand,\" she said.\n\n\"Drink,\" Grace said.\n\n\"Are you thirsty, Mom?\" Noah asked.\n\n\"No. You two. Have...one drink...with me.\"\n\n\"Mom, you can't drink alcohol. You can't swallow it. You know that.\"\n\n\"No. I'll watch. I want to see my son happy one more time, okay?\"\n\nFelicia's eyes filled with tears causing Noah to again think this was a terrible mistake.\n\nShe shook her head then followed him to the kitchen where she quietly said, \"I'm not upset that you asked me to come. It's...just so hard to take from the standpoint of knowing how much you love her and that you're powerless to do anything.\"\n\nNoah hadn't cried since he was a small boy, but the feeling of helplessness overwhelmed him. His eyes also filled with tears, and Felicia was so moved and hurt so badly for him that she reached over and put her hand on his.\n\nNoah stood there with his head down doing his best to compose himself as Felicia moved closer and let go of his hand and put it on his back. She ran it up and down hoping to be of some comfort as he swallowed hard and took several long, deep breaths.\n\n\"Whew. This is...this is just so hard,\" he told her.\n\n\"I know,\" she said quietly. \"Is there anything I can do?\"\n\nNoah shook his head then stood up straight and took another deep breath. \n\n\"Just being here is more than enough,\" he told her.\n\nHe turned to face her, and when he did, Felicia thought she might start crying.\n\nNoah forced a smile then said, \"What would you like to drink?\"\n\nThere was some Scotch left in a bottle that had been there forever, and Noah poured some over ice for Felicia then did the same for himself.\n\n\"You okay?\" she asked before they headed back in to see Grace.\n\n\"No, but I really am glad you came, Felicia. Thank you.\"\n\nOn the verge of crying again, she set her glass down then put her arms around Noah and hugged him. He did the same then hugged her back.\n\n\"Are you okay?\" he asked.\n\nWithout letting go she said very quietly, \"I love my mom so much. You're here dealing with this, and I'm feeling sorry for myself just thinking about my mom going through this years from now when it's yours who's dealing with it...\"\n\nNoah pulled back then put his hands on her shoulders.\n\n\"That's not going to happen. With your mom,\" he assured her as he looked right into her eyes.\n\n\"No. Not...ALS. That's very unlikely. But...but just...anything, you know?\" she said as she looked up into his.\n\nFor the briefest of moments, there was no age difference between them. Work and all of its problems didn't exist, either. It was just two people\u2014two human beings\u2014sharing one of the deepest connections two people could share.\n\nFelicia had no intention of saying the words that came out of her mouth, but she was unable to stop herself from saying them as she continued looking into his eyes.\n\n\"I was telling the truth when I told Charity you were very handsome.\"\n\nNoah smiled for the first time in a while then touched her cheek as he said, \"And I meant it when I told you you're very beautiful.\"\n\n\"Which time?\" she teased playfully.\n\n\"Each,\" he said very quietly.\n\nInexplicably, Felicia found herself wanting Noah to kiss her as badly as he wanted to do that, but neither of them was aware of the other's feelings, so he gently ran his thumb along the apple of her cheek, smiled, then said, \"Shall we?\"\n\nGrace followed their movement as they came back into view before sitting down across from where she was laying down.\n\nFelicia smiled and Grace said the best she could, \"Noah thinks you're beautiful. I agree.\"\n\nUnderstanding her was difficult, but Felicia got it and thanked her again.\n\n\"I want my son to be happy,\" Grace managed to say one word at a time.\n\nFelicia didn't respond.\n\n\"Do you have children?\" Grace asked.\n\n\"Yes. A daughter who's ten. Charity.\"\n\n\"Pretty name,\" Grace said.\n\n\"My mom is watching her,\" Felicia explained.\n\n\"Oh, okay. That's very nice,\" Grace replied before saying, \"Drink up.\"\n\n\"Oh, right.\"\n\nFelicia turned to Noah expecting him to possibly offer a toast.\n\nHe had no idea what to say at first then said, \"To my mom. To the woman I love more than anyone on earth.\"\n\nFelicia went to clink her glass with Noah's when Grace spoke.\n\n\"No. To finding the woman you'll love more than me,\" she said with great effort as she looked right at Felicia.\n\nDeeply touched, Felicia said very sweetly, \"I'll drink to that.\"\n\nShe and Noah touched glasses then took a sip.\n\n\"That's actually very good,\" Felicia said.\n\n\"Glenlivet 15,\" Grace said. \n\nHad Felicia not seen the bottle, she'd have had no idea what was said.\n\n\"It's very smooth,\" Grace added.\n\nFelicia set her glass down then said, \"I should really go. You two probably need to talk and I...\"\n\n\"No. Stay,\" Grace said barely above a whisper.\n\n\"Sit with me?\" Grace asked to clarify what she meant.\n\n\"Of course,\" she said as she moved closer to the large couch she was laying on then sat on the edge.\n\n\"You, too,\" she said to Noah who sat right next to Felicia.\n\nThey both strained to listen as Grace said, \"I won't be here to see my son get married so I want to imagine that. Is that okay?\"\n\nFelicia fought off tears as hard as she could and said with the best smile she could muster up, \"Yes.\"\n\nNoah put his arm around Felicia and moved his face to where he was almost cheek to cheek with her as they looked at his mother.\n\n\"So beautiful,\" she said to Felicia before saying to her son, \"So handsome.\"\n\nBecause her mind was fully intact, Grace was well aware of how uncomfortable this woman she barely knew might feel, and after just a few seconds said, \"Thank you.\"\n\nThere was so much more she wanted to say but knew that wasn't possible. She also knew there was very little chance this woman who was obviously older than her son would ever be his wife, but Grace was well aware this would be the last woman she would ever see her amazing son with, and she was grateful Felicia had given her this precious memory.\n\nThe truth was Felicia didn't feel uncomfortable at all. Her heart was breaking and yet some part of her was thankful that Grace had asked her to do it. And when Noah went to take his arm away she said, \"Not yet, okay?\"\n\nShe reached up and took his hand and held it as the three of them sat there together in what seemed like the most natural and normal thing in the world.\n\nFelicia saw Grace tear up, and that made her do the same. She reached out with both arms and held the frail woman in front of her as both of them cried. Noah fought off tears of his own as he sat there trying to understand what all of this meant.\n\nBarely able to talk, Felicia whispered, \"I love you, Grace.\"\n\nNoah heard his mom whisper back, \"I love you, too, Felicia.\"\n\nIt had been many years since Felicia had been to church, but something she'd once heard came back to her. She knew she couldn't recall it completely, but the words 'greater love hath no man' kept swirling around in her mind as she realized love was the only gift she had to offer this woman she'd only just met who'd chosen to end her life the very next day.\n\nFelicia dried her eyes then reached for a tissue from the box next to Grace then dabbed hers, too.\n\nFelicia sat there and held Grace's hand for another minute before saying, \"I...I really do need to go.\"\n\n\"Yes. Go ahead,\" Grace told her.\n\n\"Thank you for letting me spend some time with you,\" Felicia said as she fought off another round of tears.\n\n\"No. Thank you for coming,\" Grace said.\n\nMaybe it was wishful thinking, but Felicia couldn't help but believe Grace's eyes were twinkling. True or not it was comforting to believe they were, and if she'd done anything\u2014anything at all\u2014to be of any help, then it was worth every second she'd spent there.\n\n\"Good night, Grace,\" Felicia said as she and Noah stood up.\n\n\"Goodbye, Felicia,\" she said, slurring her name so badly it was unrecognizable.\n\nFelicia understood why Grace said 'goodbye' rather than 'goodnight'. \n\nSwallowing hard, she said, \"Goodbye, Grace.\"\n\nShe let go of her hand and smiled at her as she turned to leave.\n\n\"Come on. I'll walk you out,\" Noah told her.\n\nOn the front porch, Noah said, \"Thank you for coming. That meant a lot to my mom.\"\n\nHe paused then said, \"And to me, too.\"\n\n\"I still don't know how old you are, but I do know you're incredibly brave and strong,\" she told him. \"I don't think I could be that strong.\"\n\nNoah smiled then said, \"I...I won't be coming in tomorrow for obvious reasons. I'll give my uncle a call and let him know that tomorrow's the day.\"\n\nUnable to avoid crying again, Felicia's tears fell, and she put her arms around Noah again and just held him as she cried.\n\nAs he held her back, he marveled at how the human mind worked. Just several feet away, his mother was laying inside knowing she had less than 24 hours to live. And yet here he was holding this incredibly beautiful woman in his arms and wishing he could make love to her. He knew he should feel guilty for having those kinds of thoughts when his mother was so ill, but he also knew that his life would go on, and that one day he would meet the woman his mother had just imagined him with.\n\nAnd that's when he thought that it was at least possible he'd already met her.\n\nFelicia slowly pulled away and did her best to smile.\n\nNoah smiled back, and she said, \"Not so beautiful right now, huh?\" referring to her mascara-stained face.\n\nHe gently put a hand on her cheek then told her, \"You're even more beautiful to me now.\"\n\nShe wanted to move away but couldn't. She didn't want to let him kiss her when he slowly began leaning closer to do so, and yet her lips parted to meet his when he did. The kiss wasn't long or deep, but it was still...amazing.\n\nWhen their lips slowly parted, Felicia couldn't look back up at him.\n\n\"Goodnight, Noah,\" she said quietly.\n\n\"Goodnight, Felicia. And thank you again.\"\n\nShe lay in bed that night unable to sleep as she recalled the events of the evening over and over. What made sleep impossible was knowing that Grace was going to die in a matter of hours, and that nothing on earth could stop it. She recalled the kiss several times, too, but chalked it up to emotions-gone-wild and having nothing to do with physical attraction.",
        "When she arrived at the restaurant the following afternoon, she was and wasn't surprised to see the closed sign in the window. Next to it was a handwritten note that said, \"Closed indefinitely due to a death in the family.\"\n\nFelicia blinked back tears yet again as she stood there and reread it before turning around to leave, wondering whether or not Grace was still among the living.\n\nShe was but only for a few more minutes. Unable to eat solid food, Grace had eaten what little she could swallow after it was pureed and fed to her through a straw that morning; her last meal in this mortal plane.\n\n\"One o'clock,\" she'd told her son and her brother. \n\nThere was no need to ask what she meant. Her final request was to have them talk about old times. It didn't matter what. Grace just wanted her final memories to be about the wonderful life she'd lived as her brother told stories about them growing up together, getting in trouble, sneaking out to meet a boy or girl, as well as reminiscing about other family members and friends.\n\nNoah chimed in wherever he had a common memory then spent some time talking about his life at home, his time in the service, and the way his uncle ran 'Hell's Kitchen.'\n\nGrace couldn't laugh or really even smile, but she knew her brother and the way he was at work.\n\n\"Be good to my son,\" she told him.\n\n\"I will, Gracie,\" he promised through tears.\n\n\"I think he's in love,\" she managed to say.\n\n\"Noah? In love? With who?\" Daryl asked.\n\nShe cut her eyes toward him, and he smiled.\n\n\"Who? Who are you in love with?\" his uncle asked.\n\n\"It's okay,\" his mom said. \"Tell him.\"\n\n\"Mom, I don't know if I'm...in love with her. We barely even know each other.\"\n\n\"I know,\" she said. \"I saw it. She likes you, too.\"\n\n\"Wait. Are we talking about...Felicia?\" Daryl asked.\n\n\"Yeh...F'i'a,\" Grace croaked, unable to say her name.\n\n\"She...she's my age, for Christ's...\"\n\nHe stopped and said, \"Sorry. For goodness sakes.\" \n\nShe was six years younger than him, but Noah didn't know that so he let it pass.\n\n\"Love knows no bounds,\" Grace told him with much difficulty.\n\nUnwilling to argue, Daryl nodded and said, \"No. No, it doesn't.\"\n\nThey talked right up until one then, during a moment of silence, Grace said, \"It's time.\"\n\nNoah had been told what to do, but his uncle said, \"No. Let me do this...Noah.\"\n\nIt was the first time he'd used his nephew's given name since he'd hired him, but it was the right thing to do.\n\nNoah explained what the doctor had shown him, and Daryl took care of it then poured the liquid into a glass and added a straw. Grace would drink as much as she could then slowly drift away until death came and released her tormented body from the grip of this terrible disease.\n\nWhen they came back, Grace saw them on the verge of being emotional and said, \"No tears. Just smiles, okay?\"\n\nIt was a tall order, but both men tried after hugging her and holding her and telling her how much they loved her. They sat on either side of her then Daryl held the drink and Noah placed the straw between her lips.\n\nThey watched the liquid being drawn up then enter her mouth then heard her swallow. This happened four more times before she pushed the straw away with her tongue.\n\n\"Hold me,\" Grace whispered.\n\nDaryl sat the glass down as he and his nephew held her as her breathing became shallow and slow and continued holding her until it stopped. When it did, Daryl gently closed his sister's eyes as his own were flooded with tears. \n\nNoah cried, too, as they sat there with her until they could stand it no longer.\n\n\"I'll call the coroner,\" Daryl said quietly as he dried his eyes the best he could with his sleeve.\n\nWithin an hour, a medical examiner arrived and formally pronounced the time of death after verifying the prescription the doctor had written. Noah kissed his mother's forehead goodbye before Daryl did the same as two men gently placed her body on a gurney and covered it with a white sheet.\n\n\"So now what?\" Daryl asked as they wheeled his only sister away.\n\nGrace's only child said, \"I don't know. I honestly don't know.\"\n\n\"I'm here for you, okay? Whatever you need?\" his uncle said as he put an arm around his nephew's shoulder.\n\n\"Thanks,\" was all Noah could say.\n\nFelicia found herself wanting to talk to Noah in the worst way to see how he was doing and to confirm what she was almost certain had happened had indeed happened. The thought of losing her own mother made her so sad that when she got to her mom's house where Charity went every day after school, she hugged her.\n\n\"Is everything okay?\" her mom asked.\n\n\"No,\" she replied.\n\n\"You're supposed to be at work, so does this mean you lost your job?\"\n\n\"Oh, no. The restaurant is closed today,\" Felicia told her.\n\nHer mother, Anna, knew the restaurant never closed. Not even on Christmas Day.\n\n\"What's wrong, honey?\" her mom asked.\n\nFelicia sat down and started crying as she tried to explain the emotional roller coaster she'd been on since being passed over for the sous chef position up through the evening with Noah, Daryl, and Grace.\n\n\"I'm so very sorry,\" her mom said sincerely. \n\nShe watched her daughter closely then asked, \"Are you imagining that being me one day?\"\n\n\"I...I'm trying not to, Mom, but I can't help it. Just the thought of...\"\n\nShe couldn't say 'losing you' without melting down, but her mom understood.\n\n\"Well, let's hope that's a long way down the line, shall we? For now let's focus on you and that family who lost their loved one.\"\n\n\"You're right, Mom. There's nothing I can do for Grace now.\"\n\n\"Or about the future,\" her mother gently reminded her. \"All of us have to die, honey. You know that. But we knowingly hide that truth in the back of our minds until we're forced to confront our mortality. Losing someone we don't know well does that. It makes us think about losing someone close to us as well as our own lives. It's a very unpleasant thing to think about, but another person's death causes us to do so.\"\n\n\"It's still sad,\" Felicia said, knowing there was no use arguing because her mom was right.\n\n\"Sadness is our way of knowing we care. It's easier said than done, but we should try and celebrate a person's life rather than mourn their death.\"\n\n\"Mom? You are the smartest person I know,\" her daughter said with a faint smile.\n\nHer mom smiled back then said, \"I don't know about my being smart, but I've tried to pay attention, and perhaps I've managed to accumulate some small amount of wisdom over the years.\"\n\nFelicia had to hug her mother again, and this time her mom knew why. When Charity got home, she wasn't so lucky as her mom smothered in her in hugs and kisses leading her daughter to ask her mom if she'd lost her mind.\n\n\"No. I haven't gone crazy,\" she replied. \"I just needed to hug my baby. That's all.\"\n\n\"Mom? I'm ten, okay?\" Charity said.\n\n\"Yes. Yes, you are, honey. But you'll always be my baby.\"\n\nThen she hugged her close one more time without sharing the sad details with her daughter.\n\nFelicia flinched when her phone rang early the following morning.\n\nIt was Noah, and she found her hands trembling when she answered it.\n\n\"Hi, Noah,\" she said not wanting to say something like 'how are you' to him.\n\n\"Hi, Felicia. I...I wanted to call you to let you when the funeral will be,\" he said quietly.\n\n\"Noah? My heart its breaking for you,\" she told him before he could provide the information.\n\n\"Thank you. Mine, too,\" he said. \n\nShe could tell he was the verge of being emotional so she said, \"Go ahead. I'm listening.\"\n\nHe gave her the date and time as well as the location, and Felicia assured him she'd be there.\n\n\"Is there anything I can do now? Anything at all?\" she asked.\n\n\"No. Not really. It's just so good to hear a friendly voice,\" he replied.\n\n\"How's your uncle doing?\" she asked.\n\n\"I can't really tell. But I can tell you he's been extremely quiet since, you know.\"\n\nShe wanted to ask how close he'd been to his sister, but that didn't matter. She was his sister and he was obviously hurting.\n\n\"I know it would be silly to offer to cook for you, but I'd be happy to if you'd like,\" she offered.\n\n\"I'm not really hungry, you know? But it would be nice to have someone to talk to.\"\n\n\"Just say when and I'll be there,\" Felicia told him without hesitation.\n\n\"Anytime is okay. Well, I have to go to the funeral home at 1 o'clock. But other than that...\"\n\n\"Would you like to have a friend go with you?\" she asked. \"I know your uncle will be there, but I'm available if you need me.\"\n\n\"Actually, he's not going. This whole thing has really affected him. In fact, I've never seen him like this before. He asked me if I could handle it without him, and I told him I would. So if that isn't too...macabre for you, then yes, I'd love your company. Oh, and the restaurant is closed again today, but we're paying everyone's salary so hopefully that helps.\"\n\n\"Shall I meet you?\" she asked without saying a word about money, the last thing on her mind.\n\n\"Not unless you'd prefer that. I'd rather come pick you up if that's okay.\"\n\nFelicia knew he had her address and told him she'd be ready. She called her mom and asked if she could be there when Charity came home, and her mom told her she'd be delighted to.\n\nShe wasn't sure if anything but black was appropriate then realized this wasn't the funeral so anything not too bright and cheerful-looking would be fine. After looking for the perfect outfit, in the end she gave up and opted for a dark-blue sweater and a black skirt with a pair of two-inch heels after doing her hair and makeup. \n\nFelicia was too mentally occupied to notice that she could still wear a skirt that was four inches above her knee without drawing any negative attention. In fact, she still quite often drew a lot of very positive attention from men between 20 and 60 as her legs were downright shapely and sexy.\n\nThe last thing she was expecting when Noah arrived was a compliment, but that's exactly what she got when he saw her. She invited him in, but he stood there for a moment just looking at her causing her to ask if something was wrong.\n\n\"No. Nothing. I just can't believe how amazing you look,\" he told her.\n\nHis voice was quiet, and there was no hint of flirting. It was just a sincere compliment which touched her deeply.\n\n\"Thank you, Noah. That's so kind of you to say.\"\n\nWhen he still didn't move she said, \"Did you want to just go ahead and leave now?\"\n\n\"Is that okay?\" he asked.\n\n\"Of course. Let me just grab my purse. Is it cold enough for a coat?\"\n\n\"I...I don't really know,\" he said rather absentmindedly even though the temperature had dropped nearly 20 degrees from that warm evening when he'd been looking up at the stars.\n\nFelicia grabbed hers just in case, and to her surprise, Noah took it and helped her put it on. She thanked him for that, too, then locked the door and followed him out to his car.\n\nThere, he opened her door, and she couldn't help but smile.\n\n\"You sir, are a true gentleman,\" she told him as he waited for her to sit down.\n\nHe smiled but didn't reply before going around and starting the car.\n\nFelicia tried not to stare, but she couldn't help but notice how sad his eyes were. The reason why was obvious, but it still hurt her to see him hurting like that. Almost instinctively, she reached over and took his right hand which was resting on the shift lever.\n\n\"I...I just feel terrible for you, Noah,\" she said when he glanced her way.\n\n\"Thank you. You have no idea how much it means to me just having you come with me.\"\n\nHe tried to smile but it didn't quite work. Felicia looked back understandingly and squeezed his hand.\n\nWhen they arrived at the funeral home, Felicia got that sick feeling in the pit of her stomach as thoughts of death and what went on at such places welled up inside her.\n\n\"Is this where your mom is?\" she asked as Noah parked the car.\n\n\"Yes,\" was all he said before telling her he'd come around and get her door.\n\nHe also offered her his hand and helped her stand up, and for the first time since he'd kissed her, she felt whatever it was she'd felt before. She quickly looked away and let him close the door then slid her arm inside his as they headed toward the entrance.\n\nThe funeral director was waiting for them, and Felicia could tell immediately he'd practiced this routine so many times he had it down to a fine art.\n\n\"Mr. Phillips. I'm so sorry for you loss,\" the older man began.\n\n\"Thank you very much,\" he replied.\n\nThe man smiled, looked at Felicia then asked, \"Are you Mrs. Phillips by any chance?\"\n\n\"What? Me? Oh...um, no. I'm...I'm just...\"\n\n\"She's...\"\n\nNoah looked at her then said to the director, \"My best friend.\"\n\nFelicia smiled as that same feeling warmed her heart.\n\n\"It's a pleasure to meet you both even under such difficult circumstances. If you're ready, we can go ahead and get started.\"\n\nThe large number and styles of caskets to choose from was very surprising, but even more so was what they cost. Noah had no idea how much a funeral would be, but he did know his mom had a meager $10,000 insurance policy. From the looks of things, that wouldn't even pay for a decent casket. Then again, he didn't need the 'Cadillac of caskets', just something decent.\n\n\"Have you asked about the burial site yet?\" Felicia asked very quietly as they browsed the samples.\n\n\"No. Why?\" he asked.\n\n\"Oh, my,\" Felicia said. \"They cost money, too.\"\n\n\"Do you have a ballpark amount?\" Noah asked.\n\n\"Two thousand\u2014minimum,\" she said. \"Unless your mother was a veteran.\"\n\n\"No. No, she wasn't.\"\n\n\"So maybe up to three thousand?\" he asked.\n\n\"I'd say that's a reasonable number.\"\n\n\"I had no idea these things cost so much,\" he said as they looked and asked questions.\n\n\"My mom would be very upset if I spent a lot on a casket, but I'm not laying her to rest in a pine box, either,\" Noah said quietly.\n\n\"We need to ask the funeral director what his costs are then go from there.\"\n\nNoah was stunned when the man told him $7,500 without blinking an eye. With a burial plot at any of several cemeteries he contracted with, the total would be just under $12,000.\n\nNoah chose a 'decent model' from the 'Memories' collection then signed the contract and put the required downpayment on his credit card, and with that their business was done.\n\nAs they headed back, Felicia said as cheerfully as she thought would be appropriate, \"How about letting me take you to lunch?\"\n\n\"I am a little hungry finally, but I can't let you pay.\"\n\n\"Dutch?\" she asked.\n\n\"Okay, but this does not count as our date,\" Noah said, smiling for the first time all day.\n\n\"Oh, right. Coffee, wasn't it?\" she asked as though she'd forgotten. She smiled then added, \"As in real coffee.\"\n\nNoah smiled weakly then surprised when he said, \"Felicia, I'd really like the chance to get to know you better.\"\n\nAs bad as she felt for him and all he'd been through, she felt like she had to say something.\n\n\"Noah? I have a ten-year old daughter. And...well, I was older than you are now when I had her.\"\n\nShe spoke softly and carefully hoping not to make him feel any worse.\n\n\"I know you have a daughter. I believe I met her,\" he replied just as quietly. \"Did you forget that already?\"\n\nFelicia smiled but didn't laugh.\n\n\"No, I didn't forget. But the bigger issue isn't Charity.\"\n\n\"Oh, right,\" Noah said. \n\n\"So you understand then?\" she asked very gently.\n\n\"Sure. If we don't share the same views religiously or politically, that could potentially be a huge problem,\" he replied very seriously.\n\n\"What? What are you talking about?\" she asked.\n\n\"The bigger issue you're so concerned about. Is it politics? Or maybe you don't like sports?\"\n\nIt took a while, but Felicia finally got it.\n\n\"Ha, ha!\" she said trying to sound sarcastic.\n\n\"I mean, what else could it be?\" he asked as though it couldn't be age. \n\n\"I don't really follow politics, but if you hate sports, that would be an issue. A big issue. You don't have to like them, of course. You'd just have to be okay with letting me watch and play them.\"\n\nFelicia found his reply playful and sweet so she let it go\u2014for now. \n\nJust an hour later when they finished eating, she felt like she'd really gotten to know him, and for some reason the age business no longer seemed like the huge issue she'd made it out to be. It still mattered to be sure, but it didn't bother her like she'd initially assumed it would. Even so, she reminded herself they'd only had lunch, that it wasn't a date, and she was only there to be supportive of a fellow employee in his time of need. \n\nSo why then did she keep getting that feeling every time he smiled at her? And worst of all, when he dropped her off, why did she want him to kiss her again so badly?\n\nWhen he didn't, she felt a groundswell of disappointment which reminded her she was 40 and he was...gorgeous. She didn't know Noah was actually 26, but she was absolutely certain he was well under 30 making any chance of a relationship impossible. So again, why was she now feeling unbelievably sad as though she'd just lost someone dear to her? And why was she unable to think about anything other than the way she was feeling?\n\nGetting a big hug from her mom and her daughter, who'd just gotten home from school, made her feel a whole lot better.\n\n\"So how did it go?\" her mom asked.\n\n\"Where did you go, Mom?\" Charity asked before her nana could answer her mother.\n\nThis wasn't a subject she wanted to broach with her daughter, but it was the perfect opportunity to do so, and once she started, her mom joined in and offered her perspective.\n\n\"That's so sad,\" Charity said when they finished.\n\nShe surprised her mother and her grandmother when she asked if she could go to the funeral.\n\n\"Yes, of course,\" her mom said. \"I think Noah would like you to be there.\"\n\n\"He's really nice,\" Charity said.\n\n\"Yes. Yes, he is.\"\n\n\"And...he really is cute,\" her daughter said.\n\nThis time Charity didn't blush, but her mom thought she might for the briefest of moments. She didn't, but she had a flash of some kind hit her, and that, too, made her wonder where it was coming from and what it meant.\n\nFelicia sat next to Noah who sat beside his Uncle Daryl while Charity and her mom sat next to The Chef during the funeral service. She also stood by him later at the cemetery where Grace was laid to rest.\n\n\"That was a beautiful service,\" Felicia told Noah once it was over.\n\n\"They did a very nice job,\" he agreed.\n\n\"Well, I suppose I should let you go,\" she told him, not knowing what else to say.\n\n\"Could we...could we maybe talk?\" Noah asked before she could take a step or say another word.\n\n\"Sure. I...I'd like that,\" Felicia told him.\n\n\"I can take Charity, honey,\" her mom told her. She'd come along, too, to pay her respects even though she'd never met Grace.\n\n\"I can give Felicia a ride home,\" he told her mother.\n\n\"Then it's settled. I'll take my granddaughter and you two can spend some time together.\"\n\nNoah bent down and said to Charity, \"Thank you so much for coming. My mom would have liked you very much.\"\n\n\"I was honored to come,\" she said very sweetly. \"I'm so sorry you lost your mom.\"\n\n\"Me, too,\" he told her with the best smile he could muster before her nana took her hand and led her away.\n\nIt was chilly outside but not yet cold and raw as it so often was that time of year.\n\n\"Anything specific?\" Felicia asked once they were alone. Daryl was still there talking to some of the other employees, but Noah and Felicia were otherwise by themselves.\n\n\"Do you mind if we walk and talk?\" he asked as he nodded toward the paved walkway between rows in the cemetery.\n\n\"No. It'd be nice to keep moving,\" she told him.\n\n\"Do you believe in life after death?\" he asked her after taking a few steps.\n\n\"I...I don't know. I guess I hope there's such a thing. Do you?\"",
        "\"No. Or at least I never really have. To be honest I haven't thought about it all that much. But now, for obvious reasons, I guess I find myself hoping there is, too.\"\n\n\"I wish I had a better answer for you, but the truth is, I find it all so confusing. I was raised Catholic, but it wasn't that big of a deal, you know? I haven't been to church in, gee, 25 years or so?\" she said.\n\n\"Wow. I was maybe a year old them,\" he said without thinking about the age difference between them.\n\nFelicia sort of laughed then said, \"Oh my heavens! I was just getting to the point where I didn't see you as someone so much younger, and then you say that.\"\n\nNoah also laughed halfheartedly then stopped and turned to face her.\n\n\"That's something else I wanted to talk to you about.\"\n\n\"My age?\" she asked, not sure what he meant.\n\nNoah kind of lowered his head for a moment then looked at her and said, \"No. Not that.\"\n\nFelicia's heart started beating fast as he moved a little closer. Then when he reached out for her hands, it began racing. She wanted to ask what he was doing, but she didn't say a word. She just stood there and let him take them.\n\n\"All this has taught me that life is short, Felicia. I suppose I knew that before, but this really brought that home.\"\n\n\"That makes perfect sense,\" she told him as her eyes met his.\n\n\"I don't think it's a secret that I find you very attractive, but in case I haven't made clear, I'm also very attracted to you,\" he explained.\n\n\"But, Noah, we're so much...\"\n\n\"Please. Let me finish, okay?\" he said very gently as her interrupted her.\n\n\"Sorry,\" she said sincerely as she broke eye contact.\n\n\"I know our age difference bothers you, but I'm hoping you'll at least try and overlook it long enough to give me a chance to show you I'm not...mentally...as young as I am chronologically.\"\n\nShe glanced at him once while he spoke but looked away again immediately.\n\n\"Please don't laugh, okay?\" he said prefacing his next remark.\n\n\"I won't,\" she said quietly as she looked up at him again.\n\n\"It took losing my mom to realize not only that life is short, but that I'd very much like to have you in mine.\"\n\nFelicia went to speak but Noah said, \"Just a little more. Please.\"\n\nShe stood there looking at him and waited for him to finish.\n\n\"I've never met anyone like you before. I've never met anyone who really even interested me. But I...I can't stop thinking about you, Felicia. Even now, after just burying my mother, all I can think of is you.\"\n\nHe paused then slowly raised a hand and gently touched her cheek and said, \"You are the most amazing woman I've ever met. You're smart, you're kind, you're caring, and you're...unbelievably beautiful.\"\n\nFelicia had had several thoughts running through her mind to counter whatever he might tell her, but after hearing that, she couldn't think of a single thing to say.\n\n\"I really like you, Felicia. A lot. And I would very much like the opportunity to get to you know you better.\"\n\nHe smiled then said, \"And with any luck, maybe, just maybe, you might feel the same way about me.\"\n\nShe wanted to say, \"Noah, you've just been through a traumatic event. That, not me, is causing you to say these things.\"\n\nBut she couldn't. She couldn't because she was suddenly aware that was exactly how she felt about him, too.\n\nSo instead, she smiled back and said, \"How do you know I don't already feel that way about you?\"\n\nNoah smiled the first real, genuine smile she'd seen since before she'd met Grace, and after he did, he leaned closer to kiss her. When he did, she put her hands on his shoulders and raised up to kiss him back.\n\nThis kiss lasted for three or four seconds, and it may well have been the best kiss either of them had ever experienced.\n\n\"So now what?\" she asked sweetly.\n\n\"I believe you owe me a date,\" Noah replied.\n\n\"Oh, right. I believe I do,\" Felicia said with a smile.\n\n\"Coffee?\" he asked.\n\n\"Yes, please!\" she replied as she shivered in the chilly air.\n\n\"I know just the place,\" he told her.\n\nOn their way out, they saw Daryl standing by his car.\n\n\"Noah? You got a second?\" he called out.\n\n\"Do you mind?\" he asked Felicia.\n\n\"No. Of course not. Better not keep The Chef waiting.\"\n\nHe handed her his keys and suggested she go warm up the car rather than stand outside any longer.\n\n\"What's up?\" he asked his uncle.\n\n\"I uh, I was hopin' we could maybe talk,\" Daryl told him.\n\n\"Sure. Anything important?\"\n\n\"It can wait. I saw you and Felicia. You know...\"\n\n\"Right,\" Noah said knowing what his uncle meant.\n\n\"She's pretty amazing.\"\n\n\"Yes, she is.\"\n\n\"Well, I don't want to keep you. But maybe later tonight or tomorrow morning?\"\n\n\"Yeah. Sure. I'll give you a call first and then stop by.\"\n\n\"I won't be sleeping\u2014again\u2014tonight so...anytime, kid, okay?\"\n\nThe car was starting to warm up when Noah got in, and it felt good after being outside for the last hour or so.\n\n\"Anything important?\" she asked before immediately saying, \"That's any of my business, of course.\"\n\nNoah turned toward her then said, \"I don't want to have secrets between us.\"\n\nShe smiled then he said, \"He just wants to talk.\"\n\n\"You said you've never seen him like this before. Do you think he's okay?\"\n\n\"I don't really know. He puts on this tough guy mask at work, but that's not really him. And I know losing his sister was as hard on him as it was on me losing my mother. But what exactly he wants to talk about I can't really say.\"\n\n\"The restaurant's been closed this whole time. It's none of my business, but that business is so competitive...\"\n\n\"I understand. It's a good way to lose customers in the long run as well as those who maybe stopped by the first time and found it closed. Hopefully, they'll be understanding, but yes, it is a very tough business.\"\n\nWhen he sat there staring at her after he finished speaking, Felicia asked, \"Are you okay?\"\n\nHe kept looking and said, \"Me? Sure. I'm fine. I just can't believe how beautiful you are.\"\n\nHis words not only spoke to her heart, it was as though they somehow managed to penetrate her very soul. She couldn't stop staring at him, either, and for the first time she realized she not only had feelings for him, but that she might actually be falling in love with him.\n\nIt was so crazy she wouldn't dare say those words out loud, but it was one of those rare moments where she felt like his 'spirit' was communicating directly with hers even though she had no idea whether or not souls or spirits even existed.\n\nWhen he leaned over to kiss her again, Felicia didn't hesitate to move closer to let him.\n\nLike the previous kisses, this one was also very pleasant, but unlike them, this one seemed somehow\u2014charged. It was as though this spiritual communication was now joined with the physical, and more than anything, Felicia found herself wanting to be with him in the worst way. It was as crazy as the thoughts she'd had about him just moments ago, but it was every bit as real.\n\nAs if he was somehow reading her mind, Noah quietly said, \"Would coffee at my place be okay?\"\n\nIt took all of her willpower not to say they could skip the coffee, but she didn't say that.\n\n\"That sounds nice,\" she replied instead.\n\nAn hour and two cups of coffee later, this 'electricity' between them had continued to grow. They'd been sitting on the couch next to each other as they sipped coffee and talked.\n\nAt some point, Noah set his cup down then said, \"Do you believe in love at first sight?\"\n\nShe set hers down, too, as her heart began to race again.\n\n\"I don't know. I suppose it's possible,\" she said. \"Why do you ask?\"\n\nShe turned her head and looked at him as he said, \"I never used to, but...\"\n\n\"But?\" she asked in a whisper.\n\n\"But since the first time I saw you, I...I think I do.\"\n\nWhen she didn't answer, Noah assumed it was too much too fast and began trying to explain.\n\n\"Shhh,\" she said as she put a finger over his lips.\n\nShe smiled then told him, \"I can't say I felt that way 'at first glance' but I have to admit that after what we've been through together recently it might just be possible 'at...second thought'.\"\n\nNoah laughed quietly then said, \"I'm not quite sure what that meant, but I think I like the way it sounded.\"\n\n\"I'm not that good with words,\" Felicia said with a very sweet smile. \"I'm much better with showing someone how I feel.\"\n\n\"Oh. I see. Well, I definitely like the sound of that.\"\n\n\"Then you'll love what I have planned to show you even more,\" she said before pulling him close and kissing him; slowly at first then more passionately as tongues danced and soft moans were heard.\n\n\"Come on. I know a better place for you to show me.\"\n\n\"Then by all means, please take me there,\" she said as she playfully bit his lip.\n\nNoah stood up, put his arms underneath her, and carried her to the bedroom where she showed him exactly how she felt.\n\n\"I'm glad you showed me how you feel,\" he told her as she lay in his arms an hour later.\n\n\"I'm glad you let me find out...how you feel,\" she said with a happy smile just as she 'felt' him again.\n\nNoah laughed then said, \"How do I feel?\"\n\nFelicia moaned as he grew in her hand and said, \"Wonderful,\" as she rolled over on top of him and took him again as soon as he was fully ready.\n\nWhen he dropped her off later that evening, he turned to her in the car and said, \"Now it's my turn to ask, 'What next'?\"\n\n\"If you have to ask, I didn't show you how I feel very well,\" she replied with a sweet smile and another kiss.\n\n\"May I see you again tomorrow?\" he asked.\n\n\"Yes,\" she told him. \"You may see me anytime you like.\"\n\n\"I'd like to see you all the time,\" he said as though it was a warning.\n\n\"Oh, so I'm not the only one who feels that way,\" she remarked with another smile.\n\n\"I'll text you, okay?\" he told her.\n\n\"Ah, yes. People don't call anymore, do they?\" she replied as though texting was a big letdown.\n\n\"I can call. I just don't like calling,\" he told her.\n\n\"I'm not going to say a word about people, you know, your...\"\n\nNoah laughed then said, \"You're right. My generation doesn't like to call.\"\n\nShe laughed, too, and went to reply when Noah said, \"Uh-uh! Not a word from you, young lady.\"\n\nFelicia looked down as though she'd just been scolded at school, causing Noah to laugh again.\n\n\"God, I love y...being with you,\" he said as he reached over and touched her pretty face.\n\nFelicia got serious and said, \"I love...being with you, too.\"\n\nHe kissed her then walked her to the door, and told her how much he loved...being with her again before taking her home.\n\n\"Yeah. Me, too. Sweet dreams,\" she told him at her door.\n\n\"Felicia?\" he said.\n\n\"Yes?\"\n\n\"Thank you. For everything.\"\n\nShe knew making a joke wouldn't be funny so she told him it had all been her pleasure.\n\nSo when Noah did make a joke, it only made her love...being with him...even more.\n\n\"Yes, it was all your pleasure. Or at least it sure seemed that way from my vantage point.\"\n\nFeeling emboldened, Felicia said, \"Well, you have a very big...point, Mister.\"\n\nNoah laughed then said, \"Goodnight,\" before kissing her again.\n\n\"Night,\" she said quietly before going inside.\n\nBefore leaving, Noah texted his uncle and asked what time worked best for him.\n\n\"I'm just making something to eat. If you stop by now I'll make enough for two.\"\n\nFelicia knew her mother well enough to know she knew something was going on. The smile on her face told her everything she needed to know.\n\n\"He's very handsome,\" her mom said before saying anything else.\n\nNot wanting to admit what had just happened, Felicia tried countering with, \"He's awfully young, don't you think?\"\n\n\"It doesn't really matter what I think, honey. What do you think?\"\n\nEvidently, her mother knew her daughter just as well.\n\n\"You love him, don't you?\" she asked without judgment.\n\n\"I...I don't know, Mom. I mean, I do like him.\"\n\nShe looked right at her mom as she pulled her coat off then added, \"A lot. And yes, he's very good looking.\"\n\n\"And?\" her mom asked.\n\n\"And...charming and thoughtful and very caring.\"\n\n\"And?\" she asked again.\n\n\"And...I'm not sure. I suppose that's up to him.\"\n\n\"Really? Why would you say that if you really like him?\"\n\n\"What?\" Felicia asked, not really following.\n\n\"Well, what if you're too passive and don't let him know how you feel? There's nothing wrong with telling a man you like him. Or...really like him, just in case he's not quite sure.\"\n\nFelicia laughed then assured her mom she wouldn't hold back without telling her the degree to which she'd just 'given in' not that many minutes ago.\n\nCharity came downstairs and saw her mom and ran over to her and hugged her waist.\n\n\"Mom?\" she asked as she held her.\n\n\"Yes?\"\n\n\"Is Noah your boyfriend?\"\n\nFelicia saw her mom smiling then heard her quietly say, \"She's very perceptive.\"\n\n\"What makes you ask that?\" she asked Charity.\n\n\"I don't know. I guess maybe I was kind of hoping you'd say 'yes'.\"\n\n\"Oh. Um...you wouldn't mind if he was?\" she threw out.\n\n\"No. Of course not. Why would I?\" she asked as she looked up at her mother.\n\nShe led her daughter over to the couch and said, \"You don't think he's too young?\"\n\n\"He's not young,\" Charity said matter of factly. \"Not to me.\"\n\nHer mother and grandmother both laughed.\n\n\"Why is that funny?\" she asked.\n\n\"It's not funny, sweetheart. We...it's...okay, maybe it was a little bit funny,\" her mom said without explaining why.\n\n\"Well, it's okay with me if Noah is your boyfriend,\" she told her mom before leaning over and hugging her waist.\n\nThen she looked up and asked again, \"Is he?\"\n\nFelicia smiled and said, \"No. Well...maybe. We'll see, okay?\"\n\nCharity hugged her again then said, \"That works for me!\" causing the grownups to laugh again.\n\nShe ran back upstairs and Felicia's mom asked, \"So...is he?\"\n\n\"Is he what?\" she asked back pretending not to get it.\n\n\"Oh, please!\" her mom said.\n\nFelicia smiled then said, \"Yes. At least I think so.\"\n\n\"Oh, honey! I am so happy for you!\"\n\n\"Really? You don't think I've lost my mind or...worse?\"\n\nHer mom hugged her and said, \"No. Of course not. If you really like him and he's good to you then it makes sense, right?\"\n\n\"And the fact that he's, you know...\"\n\n\"Gorgeous?\" her mom teased.\n\n\"Mom! Stop. You know what I mean.\"\n\n\"I do. But he's a grown man with a good job who works hard and who cared for his mother until the very end. So tell me how many men of any age would willingly do that?\"\n\nFelicia thought for a moment then said, \"Well, when you put it that way...\"\n\n\"Just follow your heart, honey. And don't ignore your head.\"\n\nFelicia laughed and hugged her mom and told her how much she loved her.\n\n\"Right back at you, sweetie,\" her mom said.\n\nNoah wasn't only curious about what his uncle had to say, he was really getting concerned about him. He'd never been so quiet and withdrawn, and it was beginning to worry him.\n\n\"Thanks for coming over, Noah,\" he said as he asked his nephew to sit down.\n\n\"Yeah. Of course.\"\n\nHis uncle rubbed his face with both hands, exhaled loudly, then said, \"I've spent most of my life building up my business, and it's done better than I could have ever expected.\"\n\n\"That's a direct reflection on your skill as a chef and your sense for business,\" Noah told him without any hint of 'sucking up'.\n\n\"Thanks, kid. But your mother's death really hit me. I can't stop thinking about, you know, my own time, and...\"\n\n\"Hey. Hold on. You've got a lot of years left, Uncle Daryl.\"\n\n\"Maybe. But no one ever really knows. And the last thing I want is to look back and ask if it was all worth it. What good will numbers in a bank account mean once I'm gone? You know the old saying, right? They don't put luggage racks on coffins.\"\n\nNoah had heard it several times and nodded in agreement.\n\n\"So...I think I want out. While I'm young enough to do all the things I never did. Hell, I'm pushin' 50 and never even been married. But when you work 80-90 hours a week, you can't possibly devote your life to someone let alone kids. I don't know if I want rug rats, but I'd definitely love to have a woman in my life.\"\n\n\"So what are you thinking?\" Noah asked.\n\n\"I want to sell the business, and I want you to have it\u2014if you're interested.\"\n\n\"Wow. That's...that's huge.\"\n\n\"It's a ton of never-ending responsibility. I'll hang around and help you in the kitchen until you can run it on your own, but I want out.\"\n\n\"How long do think it'll take until I'm that good?\"\n\n\"Oh, no more than ten or twenty years,\" his uncle said with a straight face.\n\nThen for the first time in days, Noah saw him laugh.\n\n\"No, seriously. I'd say another four months or so? Give or take.\"\n\n\"But what about the business side?\"\n\n\"We've got someone there already who'd be a fantastic general manager.\"\n\n\"Felicia?\"\n\n\"Yeah. Felicia. She's obviously not interested in me, and Lord knows I've dropped enough hints, but she clearly is interested in you. Why, I have no idea, but she is.\"\n\nDaryl knew exactly why she was, and as much as it pained him to admit he couldn't compete with his nephew, it was a fact; an undeniable fact, at that.\n\n\"So maybe discuss this with her and see what she says. Then we can talk finances.\"\n\n\"Are we opening back up tomorrow?\" Noah asked.\n\n\"Yeah. I'm ready now so we'll hit it hard again first thing.\"\n\n\"This is a lot to take in,\" Noah said as he stood up.\n\n\"We've got time. I want out, but I don't want to bail and leave a mess. Nor do I want to sell it to someone I don't know. However, if you don't want to own it but you'd like to stay, I can make that a contingency in the sale.\"\n\n\"Felicia, too?\"\n\n\"Yeah. Sure. Okay, I can do that, too,\" his uncle said with a smile. \"Now come here you big lunk, and give your uncle a hug.\"\n\nNoah couldn't ever remember hugging his uncle before. Even after returning home from four years on active duty, they'd only shook hands. Obviously, Grace's death had really had an effect on him, and from all accounts, a very positive one.\n\n\"Let me know, okay? No hurry, just don't drag your feet,\" Daryl told him.\n\n\"I'll talk it over with Felicia tomorrow,\" he promised.\n\n\"Hey, you two gettin' serious?\" Daryl asked.\n\n\"Yeah. I think maybe we are.\"\n\n\"I'm envious. I gotta be honest about that. But I'm also happy for you. She's an amazing woman, and that little girl of hers is great.\"\n\n\"I couldn't agree more,\" Noah said.\n\n\"Take care, Noah,\" Daryl said as he slapped the younger man on the back.\n\n\"Hey, did you just call me Noah?\"\n\n\"I did, why?\"\n\n\"I don't know. I was just getting used to 'numb nuts', 'shit head,' and all the other names you've laid on me.\"\n\nNoah laughed but not Daryl.\n\n\"I, uh, I'm really sorry about that, Noah. That's not gonna happen again. You have my word.\"\n\n\"I won't hold you to it,\" Noah said jokingly just before saying 'goodnight'.\n\nWhen he got home, Noah texted Felicia who reached for her phone so fast it startled her daughter.\n\n\"Sorry, honey,\" she said as she grabbed it and read the text.\n\n\"Hi, beautiful. I just talked to my uncle and he wants to sell the restaurant. Don't panic! We'll both still have jobs. But this impacts both of us, and we need to discuss it. When would you like to get together? Oh, before I forget, I can't stop thinking about you and how amazing you are, Felicia.\"\n\nHer heart went pitter patter when she read, \"Love, Noah.\"\n\n\"It's from your new boyfriend, isn't it?\" Charity said.\n\nWhen her mom looked at her she said, \"I can tell by the way your lips moved when you read it.\"\n\n\"What?\" her mom asked.\n\n\"You did this smiling thing twice. So it has to be from Noah.\"\n\n\"You are too smart,\" her mom told her. \n\nIt was only 7:30, and Felicia really, really wanted to see him again so she asked Charity if it would be okay if Noah came over.\n\n\"Duh. Of course it would,\" her daughter said with a happy smile.",
        "Felicia texted Noah and asked if he could come over now and before she could set the phone down she read, \"Be right there!\"\n\nCharity giggled when her mother ran upstairs to brush her hair and touch up her makeup as though the house was on fire.\n\n\"I...just want to look nice. That's all,\" after she asked her daughter why she was laughing.\n\n\"You always look pretty, Mom,\" she assured her.\n\n\"You are so sweet!\" Felicia told her hoping that was true.\n\nIf the way Noah reacted was any indication, it might just be.\n\n\"Every time I see you I'm taken aback by how beautiful you are,\" he said when she let him in.\n\nCharity heard and giggled again. \"See? I told you so!\"\n\n\"What did she tell you?\" Noah asked.\n\n\"Oh, nothing,\" she told him as they stood there wondering whether or not it was okay to kiss.\n\n\"My mom wants you to kiss her,\" Charity said as she walked toward the door. \"It's okay. I want you to kiss her, too.\"\n\n\"Oh, well, we can't argue with that, can we?\" Noah said.\n\n\"I don't think it would be wise,\" Felicia replied as he put his hands on her shoulders and kissed her softly.\n\n\"See? You are pretty!\" Charity said as though the kiss proved it.\n\nBefore they could even sit down, Charity asked if they could play a game. Before he mom could say 'no' Noah said that sounded like a great idea, and since it was a Friday, they ended up playing Monopoly until 10pm.\n\n\"Okay, Miss Money Bags,\" her mom said after she wiped both of the adults out. \"Time for bed. An hour past time for bed.\"\n\n\"Okay!\" she said cheerfully, surprising her mom. \n\nShe also surprised Noah when she walked over and hugged him.\n\n\"I'm glad you're my mom's new boyfriend,\" she said after letting go.\n\nAbout to die of embarrassment and correct her daughter by telling her he wasn't actually her boyfriend yet, Noah said, \"I am, too. I like your mom very much.\"\n\nCharity skipped away leaving Felicia sitting there next to Noah.\n\n\"So are we? Boyfriend and girlfriend?\" she asked.\n\n\"I hope so. I'd like that very much.\"\n\n\"You're sure about that?\"\n\n\"Uh-huh. Very sure,\" he told her.\n\n\"Then you wait right here. I'll go tuck in the big winner and be right back.\"\n\nIt was nearly two in the morning when they finished discussing everything they could think of to discuss about the restaurant, and since that was the time they normally got off work, neither of them was all that tired.\n\n\"Would you maybe like to stay a while longer?\" Felicia asked as she snuggled up close.\n\n\"If I stay, I'll want a repeat of this afternoon, and since Charity's here...\"\n\n\"My bedroom is downstairs and she sleeps like the d...\"\n\nFelicia stopped and said, \"Noah. I am so sorry. I didn't mean to imply that...\"\n\nHe smiled and said, \"It's okay. And if...it's okay...then I'd love to stay a little longer.\"\n\nIt was four in the morning when he got up to leave.\n\n\"I'm glad you stayed,\" Felicia told him as he held her.\n\n\"I just wish I didn't have to leave.\"\n\n\"Me, either,\" she said, her head buried in the crook of his neck.\n\n\"Felicia?\" he asked quietly.\n\n\"Yes?\"\n\n\"Is this...are we...moving too fast?\"\n\nShe looked up at him and said, \"No. Not for me. Is that how you feel?\"\n\n\"Not at all,\" he said as he looked right into her beautiful eyes. \"Not even close.\"\n\n\"Well, maybe we could discuss finding some way so you don't have to leave one of these times.\"\n\n\"I'd like that. Very much,\" he told her before kissing her goodbye.\n\nShe walked him to the door, and when he kissed her again he said, \"Good night...honey.\"\n\nFelicia smiled happily and said, \"Goodnight...sweetheart.\"\n\nNoah very much wanted to say, \"I love you,\" but didn't. What he didn't know was that Felicia wanted to hear him say it more than anything else in the whole world. \n\nBoth of them were very tired when their shift started, but it was that wonderful kind of tired only two lovers could appreciate. They'd agreed not to keep their relationship a secret, but they also agreed to only show affection in private. So when Felicia found Noah in the break room when she got to work, she was thrilled when he closed the door and kissed her and told her again how beautiful she looked.\n\nBut the biggest change came when the entire evening passed without a single outburst from The Chef. He not only stopped yelling, he was patient and more concerned that Noah get it right than with berating him for making a mistake.\n\nHe'd sat the entire staff down and explained what was going on before the first customers arrived, less the new 'office romance', and assured everyone that they would still have a job regardless of who ended up buying the restaurant. There were sighs of relief and nervous congratulations to The 'new' Chef who'd smiled and been polite to everyone. That it lasted the entire night was a welcome bonus.\n\nThat it continued for as long as Daryl was there became the new normal even as Noah explored various financial options. Making it possible was his mother having left the house to him, a house she'd owned outright for the last five years. A house in a highly overvalued Seattle real estate market that was worth (or rather appraised at) a whopping $1.2 million dollars.\n\nThe equity in the home was well above the amount Noah needed to buy his uncle out, and still have a significant amount of money leftover. By the time the house was ready to be sold, he and Felicia were living together in her home, freeing up Noah's monthly expenses for the modest place he'd been living at in a city where apartments were rented for 80% above the national average.\n\nHe'd told Felicia he loved her for the first time the day he moved in, and she'd said it back to him immediately. Then, when just three days later, Charity also told him she loved him, Noah's eyes welled up with tears, but for a very different reason than when his mother had ended her life. That had been the saddest day of his life, but hearing this sweet, young girl tell him she loved him was by far the best.\n\nIn terms of timing, things couldn't have been better. It had taken them a little over three months to get the house completely ready, and in that same amount of time Daryl told his nephew he was confidant he could run the kitchen by himself. Felicia had also been in training to be the new GM, and Daryl turned those reins over to her the same day he gave the kitchen to Noah.\n\nThe three of them went to closing together on the house then moved across the hall to transfer the business from 'The Chef' to Noah who had no interest in that title.\n\nDaryl handed him the keys, hugged him, then wished him luck.\n\n\"I'll still be around if you need me,\" he assured his nephew.\n\nHe then gave Felicia a hug and told her she was more than ready, too.\n\n\"Thank you for everything, Chef,\" she said.\n\n\"Daryl, okay? No more 'chef' stuff for me. I had a good run, but it's your turn now.\"\n\nNoah took his beautiful girlfriend's hand and promised his uncle they'd take good care of the restaurant, and they did just that.\n\nWith the help of a local marketer who helped them increase their business, the restaurant had never done so well. So well, in fact, that just four months after Noah took it over, he asked the most beautiful woman he'd ever known to marry him in the place they'd first met.\n\n\"Yes, yes of course I'll marry you,\" she said without hesitation. \"How could I not when I love you so much?\"\n\nNoah kissed her and held her close and said, \"This is where it all began.\"\n\nFelicia pulled back, looked around, and said, \"Yes, it is. Right here in...Hell's Kitchen.\"\n\nShe smiled at her handsome, young fianc\u00e9 who said, \"A lot has changed, huh?\"\n\nFelicia looked at the beautiful diamond ring on her hand and said, \"Yes. Yes, it has.\"\n\nCharity was thrilled beyond words to be her mom's 'co-Maid of Honor' along with her nana. And Daryl was honored to come back from a long stint somewhere in northern Alaska to be his nephew's best man.\n\nJust when Felicia was beginning to think life couldn't get any better, she learned she was pregnant, and when Noah and Charity were both overjoyed with the news, she realized life had just gotten even better\u2014again."
    ],
    "authorname": "komrad1156",
    "tags": [
        "may-december romance",
        "old woman",
        "young man",
        "romance",
        "romantic",
        "mature"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/hells-kitchen-1"
}