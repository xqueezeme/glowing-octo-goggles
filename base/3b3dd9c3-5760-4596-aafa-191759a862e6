{
    "title": "When We Were Married Ch. 06B",
    "pages": [
        "AFTERMATH\n\nSeptember 23, 2005\n\nMy name is William Maitland. Officially I'm an Assistant State Attorney in Jacksonville, Florida. Unofficially I am THE State Attorney as far as day to day functioning goes, or I was. I think I must be dying. I've been shot by a crazed cop among a whole gaggle of other armed cops who weren't able to save me.\n\nMy friends, the few I have, called me Bill. My wife, when I had a wife, called me Bill. \n\nI'm pretty sure the cop who shot me, Shawn Smith, who has made an unfortunate habit of shooting men in the back, got in a head shot because I'm bleeding like crazy, I can't see for the blood running in my eyes and I'm down on the ground. I'm trying to move but it feels like I can't move my arms and legs.\n\nI wonder curiously how long it takes to die and wondered whether you really know what's going on as your life drains away.\n\nI remember, somewhat incongruously, a great movie called \"American Beauty\" I saw a few years ago, which ends with the main character shot in the head and dying and he says the moment of dying lasts for an eternity. \n\nIn the movie the main character says that moment of dying is the afterlife and you spend an eternity reliving your life before the lights go out forever.\n\nI wonder if that's somehow the truth of it and when I will start the long journey back through all the moments of my life. \n\nIt must have started already. Through a blood red haze, I see the features of the woman I have loved for 20 years, who convinced me she loved me and then destroyed me by giving her body and love to another man. It would be alright if I could relive the days when we met and when we had a happy marriage.\n\nIt's too bad I don't believe in reincarnation or second chances. If I could go back and learn from my mistakes I would never have taken a job in the prosecutor's office. \n\nA man I respect told me once that we are all tools in God's hands and that I had served a greater purpose as a prosecutor by alleviating human suffering and balancing the scales of justice.\n\nIn God's eyes, he indicated, that role was greater than that of a husband to the beautiful Debbie and father to Kelly and BJ. I had sacrificed the chance of mere happiness to serve God.\n\nI don't really believe in God and less in Heaven, but if I'm wrong and I wind up on a cloud somewhere staring up at the face of the Almighty, I already know I'm going to tell him to go fuck himself and just give me back the life he took from me, and if he's going to punish me for blasphemy, well let him try to hurt me more than he'd already done.\n\nI don't think even God could do that.\n\nI know he can't as Debbie's beautiful face comes closer. Tears stream down her face and I wonder if somehow I'm dead and watching from heaven.\n\nAs memories war within me, I know I hate her. God, how I hate her, but for now I'll just love her and her memory for a while. Maybe I'll just do it forever, if that \"American Dream\" flick has it right.\n\n############################## \n\nSeptember 23, 2005 -- 8:12 p.m.\n\n\"Let go of me, you bastards, let me go.\"\n\nShe struggled against the two men grabbing her arms and trying to keep her away from the bloody scene on the FOP floor. One was black and one was white. She was crying; watching the figure she knew so well covered in blood and spasming on the floor under the grip of two or three cops trying to hold him down.\n\nThere were bodies all over. Bill lay there with his head covered in blood. A figure that must be Shawn Smith lay sprawled on the floor a few feet away. He was bathed in blood oozing from what appeared to be a dozen places. Fortunately, he lay face down because there was a large hole oozing blood and white stuff from the back of his skull.\n\nA big black man sat on the floor to the right of Bill and the men with him. A white cop was holding him as he leaned back and another pressed his hand down over the black cop's hand pushing down on his abdomen as blood flowed out around their fingers.\n\nA tall, thin cop with thinning brown hair was being held up by two men. He breathed in and out with gasping sighs. A big bald cop was saying, \"Breath in and out, don't force it, Phil. You're going to pass out if you panic and you need to stay awake. Hang in there. Rescue will be here in a couple of minutes, no more.\"\n\nDebbie tried to kick one of the cops holding her in the balls but he turned so her kick glanced off the side of his leg.\n\n\"Let me go you sons of bitches. Let me go. That's my husband.\"\n\nThe cop holding her left arm stared at her and for just a moment relaxed his grip on her and that was enough. She wrenched her arm out of his grasp and jerked hard enough to pull free of the other cop. She threw herself down on Bill's bloody body.\n\nThere was so much blood, so much damned blood.\n\nTwo of the cops that had been holding his lower body down fell back and she pulled his head toward her. She felt the mass of blood that made the back of his head slippery to the touch but she forced herself to pull him until his head rested against her shoulder.\n\n\"You fucking idiot,\" she screamed in anger and fear. \"Why? Why?\"\n\n\"Just....stupid...I guess.....\"\n\nShe almost dropped him, bouncing his head off the concrete floor, but she managed to recover and put her arms around him to cradle his head, letting him lean back so she could see his eyes open through the film of blood that covered his face.\n\n\"Bill, you're alive!\"\n\n\"Jesus Christ,\" said one of the cops that had been holding his legs down. \"Jesus H. Christ I thought you were dead. I though the twitching was your last dying...\"\n\nBill looked straight at him and incredibly a faint smile flickered on his bloody lips.\n\n\"Reports....of....my....\" \n\nHe took a deep breath and blew out bloody bubbles.\n\n\"....death.....were.....\"\n\nSomehow she read his mind and knew what he was trying to say. Being married and together for 20 years made it nothing magical. She just knew him and how his mind worked.\n\n\"Greatly exaggerated....\" She said.\n\nHe smiled at her and somehow that made the tears flow even harder.\n\n A black cop moved her hands away from the back of his head and held a handkerchief to the bloody mess there. Patting away the blood revealed a long gash almost deep enough to put a finger into, running from near the right side of the back of his skull to near the right temple.\n\nShe couldn't make herself, but the cop pressed in and a moment later said, \"It's deep but it didn't penetrate the skull. No messy brain stuff leaking out. Maitland, you're the fucking luckiest bastard that ever walked the earth.\"\n\n\"Then why...\" she asked, unwilling to believe yet, to hope that what she saw wasn't the reality of it. \n\n\"There are more blood vessels and they're closer to the surface around the head, neck and face than anywhere else in the human body. You bleed a hell of a lot when you have a bullet put a groove this size in your head, but I don't think he'll bleed to death. We need to mop up the blood. I'll get some rags from the bathroom. We need to clean him up enough to make sure there aren't any more bullet holes in his head, or anywhere else. Can you keep him supported until I get back.\"\n\nShe didn't answer, just held him tighter in her arms. Even now, there was a part of her that was pissed off at him. Why the hell had he risked his life, risked the life of his children's father, the life of his ex-wife's ex-husband so cavalierly. It was as if he didn't care what he was risking, as long as he was \"doing the right thing.\"\n\nBut those were only words. She had talked with him often enough about his last memories of his father's leaving to know why they resonated so deeply in his mind and heart. For good or ill, they had scarred and shaped the man he'd grown to be.\n\nBut, goddammit, she thought, at some point you have to grow up. You couldn't be a crusader going out to battle evil and not caring if you lost your life in the process. You could when you were single, but when you married, when you brought two lives into the world, you lost the freedom to throw your life away in grand gestures and it seemed like he'd never grown up enough to realize it.\n\nShe had only been halfway sarcastic when she referred to him as \"Saint Bill,\" to her mother and children. She had thought sometimes that it was like being married to a secular saint. Everybody looking in from the outside would 'oooh' and 'aaahh' about how wonderful it was to be married to such a noble creature. \n\n But what it meant in reality was that she had never had more than a portion of him. No matter how much he swore he loved her and their children, actions proved more than words. When it came to the way he lived his life, for the last ten years he'd shown over and over again that he cared more for living up to the mythic legend of his father than he cared for the welfare of the people he said he loved the most.\n\n She held him tight to her chest, cradling his head against her breasts, and she knew that if they hadn't torn each other's hearts out he'd have joked about the chance to feel her up making nearly dying worth while.\n\nBut they'd never joke like that again. She could still hold him against her and be glad that she wouldn't have to call Kelly and BJ and tell them their father had died in her arms.\n\nHe was trying to twist in her arms and she tried to hold him still. She understood why the cops had been trying to hold him still. There could be other injuries, damage to the spine and the general rule was to keep victims as still as possible in such situations, but he kept twisting.\n\n\"Bill, try to stay still. Even if the bullets didn't hit anything vital\" - and here she couldn't help smiling down at him \"and if they only hit your brain they didn't hit anything vital - you shouldn't be moving. Stay still till rescue gets here.\"\n\nHe returned a weak smile and managed to raise one trembling hand and wiped at the blood in his eyes.\n\n\"I feel....like shit....and I'm dizzy....but I'm not dying.\"\n\nShe let him twist around and he saw the cops holding up the man they'd called Phil.\n\n\"Oh shit!\" he said softly. \"Phil! Phil!\"\n\n His voice was still weak but the big bald man helping to hold Phil up heard and pointed to Bill. Phil looked up, saw him and his eyes widened in surprise.\n\n\"I thought you were dead.\" His voice whistled as he spoke and then he coughed up blood. He was gasping for air.\n\n \"What?\"\n\n The bald headed guy said, \"One of Shawn's bullets must have collapsed a lung. At least he didn't hit his heart. He'll make it. We all thought you'd bought it.\"\n\n Bill looked over at the black cop whose skin was starting to go a shade of pale gray while a current of blood kept gushing out around the white and black fingers trying to hold it back, now pushing hand towels against the growing tide of red.\n\n\"James?\"\n\nThe black cop looked over at Bill and shook his head.\n\n \"You know you're a real pain in the ass, don't you Maitland? Or a pain in my gut, anyway.\"\n\n \"...I'm sorry...\"\n\n James took a deep breath, then spit on the floor.\n\n\"It's all on him, and he paid for it.\"\n\n \"What...\" \n\n The big bald cop glanced over the bleeding corpse on the floor, then at Bill.\n\n \"You're alive because of Phil. I think his shot hit Shawn in the neck, enough anyway to where the bullet that was going to splatter your brains all over this room hit the back of your skull and skidded. But Shawn would not go down. He turned and hit Phil while I was pumping into him along with a half dozen others.\n\n\"He turned his gun on me and I thought I was dead when James hit him. We must have stopped firing because we didn't hear anything until Shawn stuck his Glock into James' fat gut and fired. When James fell back we unloaded and he finally went down. Son of a bitch. We had to put two into his brain to finally bring him down.\"\n\nThe bald cop looked at the body leaking body and brain matter onto the floor and Debbie thought for a minute a hint of sadness flashed across his face.\n\n \"He was a tough son of a bitch. Stupid but tough. Anyway, that's what I remember happening. Things were popping kind of quick.\"\n\nBill turned his head slightly and looked up at Debbie. She had grabbed a couple of paper towels and was wiping the blood off his face. He swallowed hard.\n\n\"Damn...I'm dizzy, Babe.\"\n\nShe made herself not respond. He was still in shock. 'Babe' didn't mean what it once had.\n\n\"You're going to be okay, Bill. You've got a hard head, but that bullet must have shaken you a lot.\"\n\nHe closed his eyes and then they snapped open as he stared into her eyes.\n\n\"What....what are you doing here, Deb?\"\n\nHer heart flipped in her chest. This was the question she feared. How could she answer it?\n\n\"I......Dennis Leary told me you were going to meet with the cops here tonight.\"\n\n\"And?\"\n\nHe was slipping back into that damned interrogator frame of mind.\n\n\"Why are you here?\" \n\nHe wouldn't let it go.\n\n\"You remember I said you don't have the sense to be afraid of things you should be afraid of. I guess....I just wanted to be close by.\"\n\n \"And you were going to be my bodyguard?\" \n\n \"No, you bastard. I...I was worried about you. You happy now? You got it out of me. I was worried about you. You've got two children that love you and you don't have sense enough to protect yourself for them.\"\n\n\"So you were here for our kids?\"\n\n\"Why do you have to be a prosecutor right now, Bill?\"\n\n\"I'm just trying to understand. Why are you crying for someone you don't love anymore?\"\n\n She closed her eyes and when she opened them the room was swarming with cops and rescue EMTS and firefighters and high level Sheriff's Office officials. Two rescue types were leaning down and trying to separate her from Bill but she held him tightly.\n\n\"I said I didn't love you that way anymore, Bill, not that I didn't love you.\"\n\nThey were pulling him away from her and she had to get out the last words.\n\n\"I came here tonight, Bill, because I know you. I know you better than anyone else. You did what you always have done because you're the kind of man you are. I just....forgot....who you were. For a while.\"\n\nShe released him, pulling her bloody hands away while two techs leaned him down on a rolled up blanket. She leaned over and kissed his bloody forehead.\n\n\"I'm sorry I forgot, Bill.\"\n\nHe looked up at her and for once she couldn't read him.\n\n\"So am I, Debbie.\"\n\nThen the room descended into organized chaos as rescue personnel swarmed the three wounded men and tried to shoo away the men who'd been caring for them. Debbie stepped back and looked at her hands and dress. Jesus Christ she was a mess. In minutes she knew the television crews would be swarming outside. She needed to call Kelly and BJ. If they heard the first reports that their father had been shot and she showed up on a newscast covered in blood it would not look good.\n\nAs she watched the techs clean off his head and face, turn him gently and inspect him for other injuries, she could see that there appeared to be only the deep gouge from the right back side of his head running almost to his temple. It was a flesh wound. He'd live, and she realized she was just now letting out the breath she seemed to have been holding since the second she'd heard the first shots.\n\nSo the vision was false. It had seemed so real but it was just her mind playing tricks on her. \n\nThey had brought in rolling stretchers, lowered one and, with three men helping, lifted him onto it. Then they raised it to waist level and while talking on their radios began pushing him toward the entrance. She started to walk toward him then stopped.\n\nWhen it was happening, when everything seemed to have changed forever, she had held him without thought. It was as if the last six months - the last four years - had never happened, but they had. \n\nNow, as she thought about walking to him and holding his hand, she found herself wondering how that would look to the men around her. If they knew what had happened, would they think the spectacle of the cheating wife holding her wounded husband's hand was just a show for the crowd?\n\nShe walked beside him without touching him.\n\n\"Do you want me to ride with you - in the ambulance - to the hospital, Bill?\"\n\nHe looked back at her walking slightly behind the stretcher.\n\n\"No, that's okay.\"\n\nShe'd expected it, but...\n\n\"I'll be okay, Deb. I want you to find Kelly and BJ. Let them know I'm okay. They're liable to say I'm dying on the television and radio casts.\"\n\nHe focused in on her eyes.\n\n\"I'm good, Debbie, really. I'll be alright. I won't be quite as cute as I used to be, but...\"\n\nIf she had said what was really in her mind, she was afraid she'd break down again so she forced a grin and said, \"Well, no great loss then.\"\n\nHe grinned back.\n\n\"Bye Deb. Kiss the kids for me.\"\n\nThen they were pushing him out the front door and she was alone with a host of strange men. They were checking her out and, for the first time in her memory, it made her feel uncomfortable, but she walked over to where the big bald cop stood.\n\n \"I wanted to thank you, and tell your friend Phil thanks for me too. In case you weren't aware, I'm Bill's ex.\"\n\n He stared at her and took in her breasts but the smile on his face didn't reach his eyes.\n\n \"I know who you are. I've seen you with him around the courthouse, before you screwed around on him.\"\n\n\"We got a divorce. It happens. But I still want to thank you for what you did.\"\n\nHe shook his head.\n\n\"I'm divorced. Most cops wind up divorced. Fact of life. But Maitland wasn't screwing around on you, best I hear. You screwed his head. I kinda blame you for this. If you hadn't messed him up, I don't think he would have come down on Shawn like the wrath of God. He might have been more of a human being.\"\n\nShe stared him down.\n\n\"Doesn't matter what you think about me. He has two kids that didn't do anything to your friend. Thank you for them.\"\n\nShe turned and walked out. If he had said anything in reply she didn't hear and didn't care.\n\n###################### \n\nSeptember 24, 2005 -- 6 p.m.\n\nI lay back in a hospital bed in the St. Vincent's Medical Center trauma ward. I was laying on my side which was not all that comfortable, because a fairly good plastic surgeon had stitched up the back of my head last night after they had brought me in. \n\nThe bullet that Smith had tried to put into my brain had come just close enough to breaking through my skull - about as close as the width of a sheet of typing paper one doctor had said - that they felt duty bound to run CAT Scans and MRIs and all that other crap to make sure there wasn't any damage up to and including possible swelling of the brain as a result of the trauma. \n\nThen there was the little matter of a concussion and a coma after my defense of Debbie had nearly gotten me killed the first time. I hadn't thought about that in a long time and it had never caused any residual problems except for a tendency to get headaches if I spent too much time reading or didn't get enough sleep. But that's what they invented Tylenol for and I'd never worried much about it. \n\n Another ongoing effect has been what they called painless migraines, where brightly colored light flashes migrate across my field of vision. These were also triggered by exhaustion or overuse of my eyes and I'd had doctors tell me they might be inconvenient but not dangerous.\n\nHowever, the doctors who examined me in the St. Vincent's emergency room and the specialists up in the head trauma ward were concerned that brain damage could have been caused by the compound effects of the old and new traumas. \n\n So, for the last 24 hours, they'd put me through every damned diagnostic test I'd ever heard of and some I hadn't. They'd sewed up the back of my head after implanting some artificial cow bone to fill in the large groove so I wouldn't look like a real freak, and kept me from having more than half an hour of uninterrupted sleep at any one time.",
        "I kept drifting off from time to time. In snatches of dream pieces of the previous night and today came drifting in and out of my consciousness.\n\n############### \n\nNoon:\n\n\"Dad. Dad.\"\n\nBJ and Kelly walked quickly across the private room that the Big Man had procured for me. Debbie walked behind them. Three nurses hovered around. My head was covered in bandages where the plastic surgeon had tried to repair the damage from Smith's bullet. The drugs they'd given me kept me flashing in and out. \n\nI could read the looks on both their faces so I smiled at them.\n\n\"It's okay. I look a hell of a lot worse than I really am. I just got a graze across the back and side of my head and they went and sewed it up..\"\n\nWhen they reached me, BJ grabbed my hand, the one with a needle stuck in it, while Kelly stood behind him and grabbed the other.\n\nI couldn't help tears appearing in my eyes.\n\n\"It's okay, guys. It's lucky your mom was there last night. Everybody thought I was dead until she showed up and brought me back to life.\"\n\nBoth of them looked back at her where she stood silently. I read the glances and I could almost feel sorry for her. She'd ended her life with me and she'd done damage I hadn't realized to her relationship with the children. I'd wanted her to pay for what she'd done, and only now did I realize that she really was paying for her actions and might for a long, long time.\n\nThere was a time I would have loved it, but those emotions had been growing more muted as time went by and I realized that I wanted her to have a good relationship with them. It didn't take away or change anything between us, but they needed a mother.\n\n\"Dad, you gotta stop doing stuff like this,\" BJ said, \"I got enough flak about you when they started calling you the Angel of Death, but now - I'm never going to get any action if every girl I try to hook up with is afraid that Heaven's going to be watching us every step of the way.\"\n\n Kelly half-heartedly slapped him on the shoulder.\n\n\"He's such an idiot Dad, but he's right. You gotta stop getting into situations like this. I'm supposed to worry about keeping gold diggers and whores away from you, not letting them take advantage of you because you've been out of the scene for so long, without having to worry about whether some cop is going to shoot you.\"\n\nI'd been able to stem the flow of tears without looking too stupid. I shook my head as much as I could and said, \"I'm sorry guys. I never expected things would turn out this way but it's what I do. Nothing like this will probably ever happen again.\"\n\n\"He's right,\" Debbie said, the first words she'd uttered since entering the room, as she walked up to my bed. \"We were married for nearly 20 years and he's worked as a prosecutor for more than 10 years - nothing like this has ever happened before. It probably won't ever happen again.\"\n\nWe exchanged glances that the kids didn't pick on and I knew she knew about the Welaka Cannibal and his threats, and probably other things I'd always foolishly thought I'd protected her from. I'd come to realize she knew more about my life than I'd ever thought. Maybe if I hadn't tried to protect her...\n\nI shut the thought off. What was done was done and I couldn't change the past.\n\nThe phone rang. They were supposed to screen my calls and leave messages at the front desk because the damn thing had rung almost continuously most of the night until the hospital administration let the nurses on call know to hold ALL calls and simply give me a list every few hours, and that only because I'd insisted. Ninety percent were media calls, a few were from people at the State Attorney's or Public Defender's Offices and one was from Sheriff Knight. Nothing that I couldn't call back on. \n\nA moment later an attractive brown-haired nurse, who looked to be in her late 30s or early 40s, walked in quickly and leaned over, whispering in my ear.\n\n\"The call was from a gentleman who said you would know him as The Old Man.\"\n\nShe stared at me with the first beginnings of alarm on her face.\n\n\"He told me my home address, what music my daughter is listening to on her IPOD in her bedroom, and....\"\n\nTears welled up in her eyes and she leaned in closer, whispering with a glance at Debbie and the kids.\n\n\"He......told me.....about the affair I'm having with a friend of my husband. We've only met on Fridays when my husband is out of town. Nobody in the world knows about it except...the man and myself. The....Old Man said if you didn't pick up his next call my husband will receive photographs of ....my friend and I...\"\n\nShe stopped.\n\n\"Please take the call. I love my husband, no matter what you might think. I can't...he would...\"\n\n\"I'll take it. Get out and don't worry. He's....he likes cruel practical jokes. He won't do anything to you. Trust me. I've known him for a long time. He was just trying to get my attention.\"\n\nDebbie had heard part of that and her eyes showed her alarm. I motioned to her and the kids. \n\n\"I'm sorry, guys, I have to take this. Give me a moment, but don't leave.\"\n\nIn thirty seconds the phone rang again. I picked it up. There was a brief silence, a clicking sound and then a faint static and I heard his voice.\n\n\"Hello, Mr. Maitland.\"\n\n\"Hello.\"\n\n\"I trust you are recovering. Our sources within the hospital's medical department said your wounds were not believed to be life threatening but they are taking no chances.\"\n\n\"That was a cruel thing you did.\"\n\nThere was a dry laugh.\n\n\"You might have heard, I can be cruel if the occasion calls for it.\"\n\nI knew he had killed many men and women, had watched men tortured to death, had men and women torn apart in front of him by other men and animals in medieval torments.\n\n\"As far as I know, those have all been for business, for matters that you considered crucial to your survival. Tormenting this poor woman wasn't worthy of you.\"\n\n\"What did I do, Mr. Maitland? I did not threaten her family or herself physically. I merely let her know that her betrayal of her husband, that poor, blind, hardworking idiot of a husband, has not gone unnoticed. Do you think that if I, through my contacts, could not discover her adultery in a few minutes, that her poor, blind husband will never stumble upon it?\"\n\nThere was a short silence. Again the static on the line and the clicking.\n\n\"You think that was cruel? To give her a chance to save her marriage, to possibly spare her husband from...the pain that you know all too well? Tell me what I did that was so terrible?\"\n\nHe was as intelligent as he was cold blooded and possibly even a little more dangerous because of all that. When you have almost limitless power and no moral compass at all, there were no limits to what you could do.\n\n\"Why are you calling?\"\n\n\"Just to check in. When we heard that you had nearly been killed, I was notified and we investigated. This appears to be merely the act of an unhinged man so there is nothing for me to do. I am glad that you came through mostly untouched. I am told the bullet wound should leave no appreciable scar.\"\n\n\"As always, your sources are impeccable. I'm grateful that you are continuing to watch over me.\"\n\nThere was another silence, longer this time.\n\n\"You know that I have never loved anything in this life, except for one person. And now there is nothing I love because he died without heir and my line died with him. But he died with dignity and in peace because of you. You didn't know who he was and had no reason to treat him as you did, but you did because of the man you are. I can never repay the debt I owe you in this life, but I can try.\"\n\nThere was another long silence and then I said, \"I'm sure you've heard of the Mexican Cartel whose man is scheduled to be tried in the U.S.\"\n\n\"Yes, and the Cartel has already moved against anyone they think will take part in that prosecution. I think I know more than you do.\"\n\n\"Yes?\"\n\n\"They are already planning ahead and there is one thing they fear.\"\n\nWhen I didn't respond, he said, \"That is you. The Angel of Death has acquired mythic status among many of the poor in Mexico and nearby countries. The Mexicans are queer for anything having to do with death, and the Angel of Death overlays the pre-Columbian myths about death gods. The Cartel leadership is hoping the trial doesn't come to your office.\"\n\n\"They're frightened of a media myth?\"\n\n\"Myths are real to those who believe in them and, if the trial does come to you, the Cartel faces a very real danger.\"\n\n\"They face a danger?\"\n\n\"They cannot allow you to prosecute their man. They would lose so much face rivals would pop up because the myth of their invincibility will have been shattered.\"\n\n\"If they kill me that would solve that problem.\"\n\n\"True, but if they try and fail....\"\n\nI thought about that, then, \"It's still a long way between here and there, but it brings up a point we need to discuss.\"\n\n\"You need say nothing. If they move against your family, they will pay.\"\n\n\"And I will be your man and you will own me.\"\n\n\"Yes.\"\n\n\"Acceptable. If they hit my family, my life is over anyway. And if they hit me...\"\n\n\"Protection of your family is guaranteed if we have to kill every last one of them.\"\n\n\"Then it is agreed. I'd appreciate your keeping an eye on things for me. And if they take out my family and myself....unleash hell upon all of them.\"\n\n\"To the last drop of my blood and all who follow me.\"\n\n\"Goodbye.\"\n\n\"Goodbye, Mr. Maitland.\"\n\nI hung up the phone softly. Whenever I had spoken with him, on the few occasions it had occurred, I always felt like I had crossed over into another realm of being, as far as you could get from the real 9-5 world that most people live in. It wasn't a pleasant experience but it wasn't anything I'd asked for. I had simply showed mercy to another human being and wound up being ensnared in a dark and deadly world that I wanted no part of.\n\nBut the Old Man who felt he owed me a debt couldn't be persuaded or threatened into leaving me alone. It was like walking through a dark wood and finding a huge and dangerous wolf dogging your tracks and leaping to engage anything that threatened you. You might not want or need his protection, but how did you call him off? It was a trick I hadn't figured out in more than seven years. Maybe I never would. Until he died, and hopefully those who followed wouldn't feel the obligation he did.\n\nBut for right now, that presence of a huge, dark and dangerous criminal organization that had my back, as I glanced at my ex-wife, son and daughter, made me feel better about my life.\n\nAs I gestured and they walked back toward my bed, Debbie said quietly, \"Who was that?\"\n\n\"Just a....man who was concerned about my welfare. He's a friend, of sorts.\"\n\n\"I think everybody in the world must have heard about what happened,\" BJ said excitedly. \"I tuned into a French broadcast channel I caught on my friend's Direct TV universal channel and caught a news broadcast. I couldn't understand what they were saying-\"\n\n\"You would have if you'd paid attention in your French classes,\" Kelly interjected. As usual, BJ ignored her.\n\n\"The only class you paid attention to was Sex Ed.,\" BJ said, continuing, \"Anyway, they showed Dad's picture and some of the shots of people being taken out of the cop shop and I heard what I thought was 'The Angel of Death' in French and I know I heard his name -- William Maitland. France! They were showing it on French television. Can you believe that?\"\n\n\"Yes, I can believe that and I am sure that there are people in France who will be fascinated to hear about your father's brush with death - some people in particular.\"\n\nAll of us picked up the ice in her voice. The two younger Maitlands couldn't help smiling. I kept my face neutral. I'd known she was jealous of Aline, but I hadn't realized how jealous.\n\nThe timing of what came next couldn't have happened again in a million years. It was impossible, but sometimes impossible coincidences do happen.\n\nThe phone rang. I ignored it, but a moment later the attractive nurse stuck her head back in the door.\n\nI guess after the last time she wasn't taking any chances.\n\n\"Mr. Maitland, there's a lady, French I think, on the phone. She says her name is Aline. You want to take her call? I've got her on hold.\"\n\n\"Send her call through.\"\n\nIt was as if Debbie and I were the only people in the world. \n\nI remembered the last time she had looked at me like that. It was when she had walked in on Amy Sunderland and me fucking on CC's yacht. I had felt guilty for no good reason then but I didn't feel guilty now. I just played back the memory of her going to Doug's aid the night of that UNF ceremony and made myself feel what I'd felt then.\n\nI held her gaze while I said, \"Hello, Aline.\" \n\nThere was a terrible hurt in her eyes but I made my heart a stone. She had no right to be hurt by anything I did anymore.\n\n\"Bill, are you alright?\"\n\nI had thought the pain of losing this woman had gone, but it was as if the morning she had left me alone had never happened. It didn't help that she sounded like she was in the next room.\n\n\"I'm good, Aline. Better than good since I'm alive. My son just told me the shooting was on the news in Paris. I couldn't believe it was that big a story.\"\n\n\"As always Bill, you underestimate yourself. The attempted murder of The Angel of Death, a shootout between a rogue police officer and a whole room full of armed officers, has been around the world, I believe.\"\n\n\"What did Philippe have to say about my brush with death?\"\n\n\"I.....I don't know, Bill. He is...he is still at his office. I heard about what they are calling The Massacre when I logged onto the news. Andre is with friends so I took the subway into downtown Paris and found a public phone.\"\n\n\"You didn't want to call me on your home phone or cell? Why?\"\n\nThere was a long silence.\n\n\"I....you must have known that Philippe was with me when I wrote you that email. It -- I would have written it differently if I were alone and not afraid he would find it.\"\n\n\"What do you have to be afraid of, Aline.?\"\n\n\"I...Bill...it's different. I...\"\n\n\"What is it, Aline? What aren't you telling me?\"\n\nFor the first time since the shooting I wasn't thinking about myself or Debbie.\n\n\"Bill....it's just that....you remember I told you that I wouldn't know if our marriage would survive until I could look into his eyes. I have looked into his eyes. We have talked. I have been honest with him and I still don't know. For the first time in our lives, I look at him and his eyes are closed to me.\"\n\n\"You were honest with him. About...everything?\"\n\n \"I was too honest. I know he is hurt, although he hasn't said anything. Both of us have been with others. I thought - I hoped - that we could move beyond....my time with you. He has no reason to be hurt.\"\n\nFor the first time I heard anger in her voice.\n\n\"God knows, he has been with many other women and, although he claims to have been discrete, I know who they are - many of them. I've seen them, seen the look in their eyes when we are together. I've lived with that because I've had to. And now - now - because I have been with one man he knows, he is acting the wounded martyr.\"\n\n\"I'm sorry, Aline. I didn't mean for...what we had....to damage your marriage.\"\n\n\"It's not your fault, Bill. None of this is your fault. Philippe and I set the ground rules. We agreed, without many words, but we had an understanding. And he is the one who has broken that agreement! I will not feel guilty for doing what he has done times beyond number.\"\n\nThere was a long silence. I looked up and saw BJ and Kelly exchanging glances. They could only hear my side of the conversation -- much of it -- but they were old enough to put the pieces together. I looked beyond them to Debbie. If looks could kill I would have been only a radioactive spot on the bed in which I lay.\n\n\"So....what..\"\n\n\"Is going to happen? I don't know, Bill. I do not wish to hurt you, but I still have feelings for him. We have made a life together and there is Andre. I cannot just walk away but, I do not know if he wants to be with me. Perhaps only time will tell.\"\n\nShe was silent again. Then:\n\n'I have no right to ask. I am with another man. I have told you that I love him. I am in his bed. You owe me nothing at all, but....If....I know I hurt you when I left that morning. But I could not say goodbye and leave. I took the coward's way out.\n\n\"I have done nothing but cause you pain on top of what your Debbie has done to you. Still, if...\"\n\n\"What I feel for you hasn't changed, Aline. I can't say what will happen if you decide to come back, but I know what I feel right now.\"\n\n\"I love you, Bill Maitland. I am in another man's bed and his life, but I love you. Take care. Don't take foolish chances with your life, because it is precious to me.\"\n\n\"I love you too. Take care. Au Revoir.\"\n\nI met the eyes of my children and I knew something important had changed in an instant. They looked at me very differently than they had when they'd walked into the room minutes before. Their mother and I were divorced and they were old enough to understand what that meant. They had seen Aline in the flesh and the way I looked at her, but there must have been something in the back of their minds, some memory of when our marriage had been good, that left a faint hope.\n\nAnd now it was gone.\n\nI looked into Debbie's cold eyes and saw that they glistened. I remembered the look of contempt she had shown me as she stood with her tall young stud boyfriend in the UNF Arena. I remembered how small, old and alone I had felt in that moment. Only a stubborn core of anger had pushed me not to walk away with my tail between my legs.\n\nI remembered her telling me to pay someone for sex because it was obvious I was not man enough to attract any woman on my own merits.\n\nI remembered the first nights I had spent on the River listening to cars in the night, lying alone in a strange bed and knowing the woman I'd loved for half my lifetime was in another man's arms. And there was nothing I could do about it.\n\nThere was a part of me that wanted to comfort her. Maybe I couldn't kill it out. Maybe I would always love her, but there would be no comfort now. She had brought all of this on herself. I had pulled myself out of the pit with no help from her. Let her find her own way.\n\nWe stared at each other until she finally lowered her eyes and walked out of the room. BJ and Kelly looked at her as she left and then Kelly bent down to kiss me on the cheek and BJ squeezed my hand.\n\n\"We'd better go,\" Kelly said, gesturing toward the doorway.\n\n\"Yeah, go on. All this has been a shock for your mom, too. She thought I was dead or dying last night.\"\n\n\"That's not what she's upset about,\" Kelly said.\n\n\"I know but, anyway, I'll probably be out of here by tomorrow. I'll call you guys and keep you up to date. Okay?\"\n\n############# \n\nSeptember 26, 2005 -- 12:30 p.m.\n\nThey had already checked me out. A young doctor and an old doctor had given me the results of all the tests that they'd tormented me with for 48 hours. Boiled down, they couldn't find anything wrong with me. Other than a lingering headache and a slight ringing in my ears which they said was to be expected when someone fired a high powered pistol at your head from a few feet away, bouncing the bullet off your head.\n\n The headache would probably go away in a day or two and the ringing might last a week or two but it would go away, said the older balding doc with a fringe of white hair running around the back of his head between his ears making him look like a wise old Greek philosopher.\n\n The tall dark-haired young doc, who the nurses couldn't keep their eyes off, had stepped in after the old doctor and warned me, \"Apparently you've managed to avoid all of the bad effects of having your brains rattled twice in a lifetime. You could have died 20 years ago and there's evidence on the CAT scan of some residual scarring from that old injury, but nothing serious. And you got past this one.",
        "\"But,\" he said, stepping close to me and lowering his voice as if we were the only two people in the room, \"I'd be remiss if I didn't tell you that anytime you start shaking up the brain you're messing with things you shouldn't mess with. I was told that you've been doing some amateur boxing.\"\n\n\"Yes.\"\n\n\"I won't tell you that you can't keep doing it, but I'd strongly suggest that you ALWAYS wear headgear. And if you ever drive a motorcycle, never, ever get on one without a helmet. You've been a very lucky man, Mr. Maitland, and you might stay lucky, but I wouldn't bet it all on staying that lucky. Understand me?\" \n\n I thanked him and asked him in passing how Officer Howser and James were doing. I knew they'd both been admitted, but I hadn't heard anything about either one since Saturday.\n\nI knew in the instant that I asked the question - I just didn't know which one it was, but his face closed up. The old doc stepped forward. I guess he'd had more experience at it than his younger colleague.\n\n\"Sergeant Howser appeared to be responding well to treatment. His system suffered stress from the bullet wound and the collapsed lung was a strain on his heart. He had some problems that had never surfaced but they would have responded to medication. His physicians expected he'd been able to leave today.\"\n\n\"But?\"\n\n\"Apparently, his wound resulted in a blood clot forming in his lung and it made its way to his brain last night. There was no warning - no way to really anticipate it or take action until it was too late. He suffered a major stroke at 2 a.m. It was....quick....if that makes a difference. I hope it did, for his sake. It is possible that it happened in his sleep and he was never aware of what was happening.\"\n\nI felt myself sitting back on the hospital bed. The young doc stepped forward and grabbed my shoulder. \n\n\"Are you alright, Mr. Maitland? Sit back and take a few deep breaths. You can lay back on the bed for a moment if you're dizzy.\"\n\n Phil Howser was gone. Why the hell had I agreed to meet with him, when I knew I was never going to change my mind about Shawn Smith. He'd still be alive today if I hadn't agreed to help him with a little internal politicking to keep his members happy.\n\nIt wasn't my fault, I knew. None of us had any idea what Shawn Smith was going to do. But, yet - he had saved my life, and it had cost him his. \n\n\"I'd like to see his room.\"\n\n\"His body was removed early this morning.\"\n\n\"I'd still like to see it. Is another patient in there?\"\n\n\"No,\" said the old doc.\n\nI stood at the entrance to the semi-private room where Phil Howser had breathed his last. The hospital bed he had died in was fresh and the sheets were tight and starched. I remembered the way he'd looked in the last moments before Shawn had burst in, relaxed and happy and holding court with his buddies.\n\n\"He liked you, you know.\"\n\nI didn't want to turn and face her, but I made myself. She was a little shorter than me, a heavy set brunette with brilliant blue eyes and a normally ruddy complexion. Now she was pale and bloodless.\n\n\"I'm sorry, Ms. Howser. God, but I'm sorry.\"\n\n\"It wasn't your fault, Mr. Maitland,\" she said, looking around the room with the same expression I'd probably had. As if we neither one could believe that he still wasn't around here somewhere.\n\n\"He knew Shawn was wrong. He needed to pay for what he did. He just couldn't say it because they were both cops. But...he told me a few times that guys like you were the only good thing about those 'candy assed pencil pushing shysters in the SA'.\"\n\n\"That sounds like Phil. Are you...are you okay? Is there anything I can do?\"\n\nShe looked back at me and licked her lips.\n\n\"No, I'm not okay. Both our kids are out of town. Bert is in the Army on a tour in Iraq and Molly is working at Jackson Memorial in Miami. She's an emergency room nurse. She's flying home tonight. I think Bert will be coming in in a couple of days. So it's just me. \n\n\"Used to be me and him. \n\n\"Now....it's just me.\n\n\"It feels....wrong.\"\n\n\"If there's anything I can do....\"\n\n\"There's nothing anyone can do, nothing.\"\n\n When she turned away and began to shudder silently, I stepped away from her and left the room. I could hear her crying I walked to a nurse's station and rang up Cheryl. Two of our female ASAs would be at the hospital within a half hour and would stay with her until her children showed up. She wouldn't have Phil, but she wouldn't be alone.\n\n###################### \n\nI was going to go by and visit James anyway, but I found that I had a bad feeling about him because of what had happened to Phil. I found out where he was and went up to his floor, in the intensive care unit. I know a gut shot is dangerous, but I wasn't sure why they'd have him there three days after the shooting.\n\nAs I approached the room a nurse moved to intercept me.\n\n\"I'm sorry, visitors aren't being allowed to see Mr. James.\"\n\n\"My name is Maitland. I'm the Assistant State Attorney who was shot Friday. James saved my life. Could you let me in there for just a moment to say hello?\"\n\nAn older nurse stepped toward us and had heard me.\n\n\"You can go in, Mr. Maitland. His wife is in there with him, but we can bend the rules for just a moment. But...\"\n\n\"What?\"\n\n\"He's not well. He's running a high fever right now. He might not be too coherent.\"\n\n\"Why?\"\n\n\"I won't bore you with the full name, but it looks like he's infected with one of the two or three super-resistant strains of bacteria that you find in a lot of hospitals today.\"\n\n\"Resistant? That means-\"\n\n\"Only that it's going to be hard to knock down. We're hitting him with super doses of antibiotics. It will kill every bacteria in his body, hopefully, which will leave him vulnerable to anything around him for a few days or weeks until his natural resistance builds back up. If we can keep him alive, and if he's tough enough, he'll make it.\"\n\nI noticed the 'ifs'. She wasn't being super-optimistic. I had known that bullets to the stomach or abdomen are bad news because they are good sites for all kinds of opportunistic infections. But a super bug on top of that? I decided I'd have somebody light a candle for him beside the ones I'd had lit for Dunleavy and O'Collins at the downtown Catholic church. \n\nAnd I'd say an extra prayer. Most of the time I think it's just praying to a fantasy. But on the one in a million chance there was somebody or something up there actually listening, it couldn't hurt, and he deserved it.\n\nI walked in behind her. He was a horse. He seemed to dwarf the bed, but he was tangled in cord and tubes. His skin still had that sickly gray sheen. A pretty black woman about a third his size held a cup with a straw up to him holding the straw to his mouth.\n\n\"C'mon baby, you need to drink. Just sip a little.\"\n\nShe didn't notice I was in the room until I had approached James from behind her. Sweat covered his face and there was the smell of male sweat in the room. He must have soaked through his hospital gown. And he was a big man so he could sweat a whole bunch.\n\nI didn't register at first. I imagine so many doctors and nurses streamed through here that she was used to strangers walking in. But then she recognized me.\n\n\"You haven't done enough?\"\n\nSomething about her tone roused the big man and he forced his eyes open. There was almost a smile on his lips.\n\n\"Maitland. God damn.\"\n\nShe was a very pretty woman. Deep, black eyes, lips that didn't look natural with the hard line that had frozen them now. Hair straight and down her back. She was petite but everything was there in abundance. James had been a lucky man until he ran into me.\n\n\"Mrs. James, I'm very sorry for what happened. I never meant for any of this to happen.\"\n\n\"I'm glad to hear that. I'd hate to think that you meant to put my husband into this hospital bed while you walk out of here.\"\n\n\"Elexus.\"\n\nJames managed to put a little strength into his voice.\n\n\"Baby, don't be that way. Maitland didn't shoot me. It was all Shawn. If the asshole hadn't been screwing around with that white woman..\"\n\nHe started to cough and then spit up green slime. Elexus James put the cup down and grabbed a cloth. A nurse behind me bustled toward him and helped him sit forward. He coughed and spit for a moment and then calmed down. The nurse helped him lay back on the bed.\n\nAfter a moment he opened his eyes again and said, \"Got to tell 'ya, Maitland. I feel like shit. Probably look like shit too, right?\"\n\nI smiled at him and said, \"You're still a fine figure of a man, James. I imagine the wife has to beat the nurses off you with a stick.\"\n\nHe lay back and closed his eyes, \"...only in my dreams.....only in my....\"\n\nAnd then he apparently drifted off and I could hear him snoring in a moment.\n\nI stood there but I couldn't think of anything else to say. Elexus James just continued to stare at me with a look that would have skewered me to the wall if it had had physical force.\n\nFinally, I said, \"James. I hope you feel better.\"\n\nI reached over and took one his huge hands in mine. His skin was clammy and warm. I squeezed it twice, then let it go.\n\n\" Mrs. James, if there's anything I or the State Attorney's Office can do, call us.\"\n\nI turned to walk out. She caught me before I hit the door, touching me on the shoulder.\n\n\"I'm sorry, Mr. Maitland. I know....I know...you didn't do this. You didn't put him here. But, we've been together since I was 13 and he was 16. I used to sneak out to meet him after my parents fell asleep. We've been together 20 years. Never been another man in my life. Never wanted anyone else. And they're not saying it, but - he could die. I never been so scared in my life. I don't know what to do. I don't know - if I even want to live if he goes. But we have a daughter. I can't leave her. I'm so damned scared.\"\n\n \"I know you're scared. The only person I've ever lost was my father when I was a little boy and I didn't know enough to be scared, but I know what you're feeling.\"\n\n\"The thing is - they thought I was dead and I survived. James is a big, strong guy. The nurse told me they're hitting him with every antibiotic they have. It depends on his will to live and he's got you and his daughter to live for. I think he'll make it. That's not much, but you have to have faith that he'll walk out of here. He's a good man. If there's any justice, he will.\"\n\nI left her there holding his hand and wishing to God that my words would turn out to be true.\n\n September 26, 2005 -- 3:45 p.m.\n\nI walked back into the floor where my office was located and noticed the hush that swept through in my wake. Secretaries stopped their telephone conversations and stared at me. A couple of Assistants stepped out of their offices to stare at me also. \n\nAs I approached Cheryl's desk she stood up and I stopped. She came around the desk and hugged me - hard!\n\nShe was wetting my shirt, my black shirt. The Big Man had insisted on black a while back and I'd given in. I bought all my outfits in black, except for a couple of casual wear things, shorts and that kind of thing. Today I was dressed in black slacks, a black button down shirt and a black dress coat.\n\nFinally I pushed her away.\n\n\"What is this, Cheryl. You're acting like I almost died or something.\"\n\nFunny, but I felt tears welling in my eyes. I was turning into a fucking woman myself.\n\nShe sniffed.\n\n\"Don't make jokes, Bill. You could have died.\"\n\n\"I could get hit by a car crossing the street from the parking lot on my way into this building. It was pretty dramatic, I'll grant you that, but it's over, Cheryl. Now I just have to survive the media onslaught.\"\n\n\"God, tell me about it,\" she said, pulling back and checking out the bandages that wrapped the back of my head in a swath. \"We've had over 200 calls from media outlets all over the world. There hasn't been much time to get any work done today. Of course, Mr. Edwards isn't TOO unhappy.\"\n\nI grinned at her.\n\n\"As long as they spell his name right, right?\"\n\nI didn't wait for her to answer, but headed for my office. I opened the door and stopped. There was a tidal wave of paper on my desk, telephone notes and post-its. I pulled up the first few - New York Times, Sky News, the U.K. Guardian, then I started wading through the rest of the pile.\n\nSix months ago I'd been an unknown Assistant State Attorney in a big/little Florida City/Town. My fellow lawyers here and there might have known me, but as far as a public presence, I was happily unknown. I had never wanted to be famous. Oh, I had the stray daydreams of fame and fortune but I'd never really needed that.\n\n I had a wife I loved, two kids who were turning into insufferable pains in the asses as they were supposed to in their teens, a job I believed in and sufficient income. Who needed more than that.\n\nNow I was the fucking Angel of Death and people around the globe were apparently vicariously living my life for me. I knew I'd have as much luck withdrawing back into my personal world as I'd had of convincing the Old Man to leave me alone.\n\nCheryl stuck her head in my door.\n\n\"We have another call. It's CBS in New York. You want to take it?\"\n\n\"No, hold all my calls, all of them. If you think it's one I might want to take, stick your head in the door.\" \n\nI sat down at my familiar desk and put my head in my hands, then buzzed Cheryl and asked her to get somebody to go down and get me a Starbuck's Cappuccino, mostly foam, and then tried to collect my thoughts.\n\nTwenty minutes late my door opened without a knock and I looked up curiously. There was only one person who did that and I didn't expect him.\n\nAustin Edwards walked in carrying my Cappuccino and handed it to me across the desk.\n\nHe sat down in the chair across from me and we looked at each other curiously for a minute or so. In the meantime I sipped the foam and licked it off my upper lip.\n\n\"Are you trying to steal my job?\"\n\n\"That's been the plan for the last 10 years. When did you figure it out?\"\n\n\"It's pretty obvious, based on the media interest and the calls I've been getting. I think some people want to put you in for Sainthood. Others just think I should abdicate, walk away and leave the office to that heroic Angel of Death who has no fear.\"\n\n \"It is kind of overwhelming. I feel like I'm going down a mountain with no way to stop.\"\n\n \"Get used to it. Calvin Coolidge and Teddy Roosevelt became public heroes and look what happened to them. You should start practicing your speeches.\"\n\n\"Not going to bother. Look, Austin, this is your bag. You're the guy with the ideas of making a better world, serving the public and all that other crap. All I am is a lawyer who knows how to talk and deliver a final argument. I like what I do and I think I'm pretty good at it. I'd be out of my depth doing anything else.\"\n\n\"Like they say, if you can learn to fake modesty, you can do anything.\"\n\nI gulped more steamed milk.\n\n\"Do I have to move up my timetable for looking around for another job? Since there won't be a trial, I could start sending out resumes anytime. At your pleasure.\"\n\nHe shook his head and looked down at his fingers, which he'd steepled in front on him on my desk.\n\n \"No, whether you stay or not is up to you. Maybe you'd be uncomfortable working with me now. I won't ask you to stay on if things have gone too sour for you to be able to keep working here.\"\n\n\"Not up to me, Austin. You told me when this was over you wanted me to move on. Odds are you're still going to be hurt by this, so what's changed?\"\n\nHe stared into my eyes. I felt the old awe come over me for a minute. I'd been a fledgling prosecutor when he had hired me, mentored me and finally gave me a chance to do something that very few men or women my age and with my experience got to do. He'd been the man I looked up to and tried to model myself after. Even now, I thought that in a lot of ways he was a better man and a better attorney than I'd ever be.\n\n\"You know, I hope you know, that it was more about my opinion of the case than pure politics. I really thought there was serious doubt about whether we should be pursuing him. I honestly thought you'd gotten your personal problems mixed up in this case and the thing - with Debbie - had made you harder than you used to be.\"\n\n\"You know as well as I do the power we wield. We can crush people if we want to, and get away with it. I'd always thought you'd done as good a job as anybody I ever saw in using the power of the office the right way. After Debbie, I really thought you were just pissed at life in general and that was coloring the way you thought and your decisions. Now...\"\n\nHe looked down at his hands, then back at me.\n\n\"I need to know, for my own peace of mind, that you know I wasn't willing to sell my soul to reach the Governor's Chair. It wasn't all political calculation.\"\n\n\"I know that, Austin. I knew it was a close call and that an honest man might come down differently than I did. I knew the political end of it bothered you, but it was more than that. If it had been simply that I thought you were trying to cover your ass, protect your run next year for Governor, I would have walked, right then, and gone public, because I couldn't have kept working for you. But I know you better than that. You forget, I've worked for you for 10 years. I know the kind of man you are. You're more than just another politician.\"\n\n\"So you want to stick around?\"\n\n\"Until you ask me to leave.\"\n\nI finished slurping the rest of the Cappuccino and licked the foam mustache off my upper lip.\n\nHe stood up.\n\n\"By the way, I've already had a preliminary poll run and it matches the calls I've had. There are a lot of African Americans in this community who are happy we didn't let a cop get away with murder, regardless of his color, and what Smith did shooting at his own fellow officers has pretty much eliminated all of the support he had at the Cop Shop. The general public just thinks we prosecute bad guys no matter who they are or where they work, and that's what they want. \n\n \"The only problem I see is that more people are starting to know your name than mine. \"\n\nBut he smiled when he said the last.\n\n\"So doing good paid off?\"\n\n\"Looks like it.\"\n\n\"Who would'a thought?\"\n\nHe was almost to the door when he stopped and looked back at me.\n\n\"A little birdie told me that you rode to the hospital without Debbie, who was there somehow when this was going down, and I think she was kind of wanting to ride with you.\"\n\nI nodded.\n\n\"And I believe your French girlfriend called you in the hospital. Is she flying back to your side?\"\n\nI just shook my head no.\n\n\"So you're in between romantic entanglements?\"\n\n\"On the administrative chart, where does being nosy about your subordinates' romantic lives fit?\"\n\n\"A good administrator is always concerned about his staff being happy and content. A happy and contented staff is a productive staff. Managerial science 101.\"\n\n\"If it will allow you to rest easier at night, no, I don't have anybody in my life right now. As far as important relationships go, I'm batting zero for two.\"\n\nHe put his hand on the doorknob. \n\n\"I just thought you should know that a female member of my staff has been very interested in your personal life since your -- blowup -- with Debbie occurred. She waited patiently for you to get past Debbie only to see Aline des-Jardins swoop in and grab you. Now that you're between women, I thought you might think about at least asking her out for a coffee or something.\"\n\n\"Do I know this lady?\"\n\n\"You see her every time you come up to my office.\"\n\nA couple of things kept me quiet for a moment.\n\n\"Are we talking about-\"\n\n\"Yes.\"\n\n\"Austin...I...we....she...\"\n\nHe just waited me out.\n\n\"Okay, Austin, assuming you're serious. One, why in the hell would she need to have you run interference for her. Every male in this building would give his left nut, or both, to have a chance at her. She probably is wined and dined every night. She sure as hell doesn't need me. Secondly, why didn't she pick up the phone or come by here. And lastly....what about...I mean....you....\"",
        "\"First. Yeah, any male with normal hormones and equipment would like to be with her. But she doesn't go out with every male who wants her. Secondly, why the hell do you think? Most women don't like chasing men. You think she does? Somebody that looks like her doesn't want to chase a man. And lastly...\"\n\nHe gave me a small smile.\n\n\"And lastly, things aren't always the way they seem. Think about it.\"\n\nHe walked out the door leaving me with my mouth gaping open. Before I'd had the chance to do more than shut it, he stuck his head back in and said, \"By the way, how about letting Chambers and Hennessy handle the day to day stuff for the rest of the week while you focus on doing as many media interviews as you can humanly fit into your schedule. At least for the rest of the week. You're hotter than hot right now. Let's strike while the iron is hot and get those television, radio and newspaper interviews done, AND, be sure to mention how the driving force behind the office, the guy who pushes you to chase these bad guys, is Austin C. Edwards. Okay?\"\n\nI just grinned at him. Why in the hell he wanted the headache and aggravation of the public spotlight and the demands of public life I'd never understand. But if it made him happy...\n\n\"You got it boss.\"\n\n#################################### \n\nSEPTEMBER 27, 2005 - 3P.M. \n\nI walked up to the desk in front of Austin Edwards' office with feelings I'd never had before on that walk. She looked up from a document and smiled.\n\n\"Good morning, Mr. Maitland, or should I say, Mr. Angel....\"\n\n\"Don't say that Myra.\"\n\nThe smile vanished.\n\n\"I'm sorry Bill. I heard about that policeman. I shouldn't have tried to joke about people dying. I just thought....\"\n\n\"It's okay, Myra. Everyone can't walk around in sackcloth and ashes forever. It's the past. I'm just glad I'm standing here right now. I might not be anywhere.\"\n\n\"I'm glad you're here and...Mr. Edwards said you guys have...you're going to stay on.\"\n\n\"For the foreseeable future.\"\n\nShe looked at his office door.\n\n\"I don't have you down to see him. You want me to call or you could just go in.\"\n\n\"I didn't come to see him.\"\n\nIt only took her a second, then her smile changed.\n\n\"Then why are you here?\"\n\n\"I generally take a coffee break at Starbucks about this time of day. Is there any chance you could take off for a few minutes and let me buy you a Cappuccino or something? You do like coffee, right?\"\n\nThe smile vanished and something that was almost a smile flickered on her perfect lips.\n\n\"Why?\"\n\n\"Why what?\"\n\n\"We worked together for more than seven years and you've never offered to buy me coffee before, much less a Cappuccino.\"\n\n \"For most of that time I was married. Might look bad, a married man taking the hottest woman in Jacksonville down for coffee, much less a Cappuccino.\"\n\n\"The hottest woman in Jacksonville?\"\n\n\"Alright, Northeast Florida.\"\n\nShe took a deep breath and I marveled.\n\n\"Why now?\"\n\nI took a moment.\n\n\"I'm divorced and free. No entanglements. There's nothing wrong with a single man asking a single lady to have a coffee with him.\"\n\n\"No entanglements?\"\n\n\"None at all and why, if I may ask, am I getting the fifth degree about a Cappuccino?\"\n\nShe took another deep breath and watched me as I watched her.\n\n\"A woman has to be careful who she goes out with -- even for something as simple as a cup of coffee. Something simple can change your life.\"\n\nI tore my eyes away from her bosom.\n\n\"Well, I understand that. It's okay. If you're busy we can do it another-\"\n\n\"I'm free. Let me buzz Mr. Edwards and let him know I'll be out for 15 to 30 minutes.\"\n\n We went down the elevator and out to Starbucks, running the gauntlet of amazed stares. Nobody but Austin Edwards was ever seen with Myra Martinez in the courthouse, much less a man in black with a bandaged head. I tried to walk behind her a little because her movement was a symphony.\n\n We had three people in front of us but the male barista on the left hand side of the counter somehow maneuvered to wait on Myra before anyone else and grudgingly took my order as well. \n\nThere were only five stand-alone tables for the Starbucks crowd and they were all occupied but, as we stood with our Cappuccinos, four young men at the nearest table decided they had business elsewhere, motioning to Myra that she could have their table. They got up but it took them a long time to leave the area.\n\n \"I wonder what it must be like to be you?\"\n\nShe looked beyond me and I saw Debbie standing with Dennis Leary and a female PD across the entrance to the courthouse. Leary was staring at us, trying his best to conceal a smile and Debbie followed his gaze to our table.\n\n\"You lived with someone like me for 20 years. You ought to know what my life is like, except I haven't had anybody like you in my life.\"\n\nA parade of emotions ran across Debbie's face, Leary said something to her and she shook her head and started walking toward us.\n\nMyra just smiled sweetly.\n\n\"Hello Bill. Ms. Martinez.\"\n\n\"Hello Ms. Bascomb. You're looking very, professional, today. I admire a woman who knows how to - mute - her female assets for her job.\"\n\n\"I'm sure you do. You might think about it yourself - just a suggestion. Bill, I'm glad to see you're feeling better. Has Aline called you since Saturday. I thought it was very touching when you told her you still loved her in the hospital. Don't you feel a little guilty about keeping the poor girl hanging like that?'\n\n\"Not that it's any concern of yours anymore, but I haven't talked to her, Debbie. And yes, I'm feeling better. Thank you for your concern.\"\n\nLeary walked up behind her and tapped her on the arm.\n\n\"Ms. Bascomb, we have that meeting upstairs. I don't want to rush you, but...\"\n\n\"You're right, Dennis,\" she said, turning and running her hand down his arm and giving him a smile that should have roused erections for miles around. \"Thank you for reminding me.\"\n\nShe looked back at Myra and I and said, \"Well, have a good day, both of you. I'm going to.\"\n\nShe walked away ostentatiously twitching and Leary looked back at me and winked, then followed her.\n\n\"She is so damned jealous she could spit,\" Myra said. \"I'm sorry, I shouldn't have deliberately antagonized her like that.\"\n\n\"If she's going to work around here and stay under my ass, she's going to get used to seeing me with other women. Speaking of which, what about the Big Man?'\n\n\"What about him?\"\n\n\"I don't understand what's going on. I thought you and he...\"\n\n\"Have I asked you about Aline? Or that policewoman?\"\n\n\"No, and there's nothing going on with Aline, if you're interested. She's back with her husband and son. I don't expect to ever see her again. But, I thought, everyone thinks.....\"\n\n \"That I'm his private brand?\"\n\n\"More or less.\"\n\n\"What I do, and have done, in my personal life is just that - personal. But the fact that everyone thinks we are an item cuts down on the distractions. I don't have to spend half my time fending off every horny attorney and cop in the downtown area. If there's somebody I like, I see them away from here.\"\n\n\"Well, I'm glad to know you haven't been a nun.\"\n\n\"Not quite,\" and she grinned.\n\nShe picked up her Cappuccino and sipped. I did too and because as usual mine was mostly foam, I had a milk mustache when I put it down. Before I could move she leaned forward and ran her finger along my upper lip, collected the foam, popped the foam and her finger in her mouth, and licked it off.\n\nI just stared at her and wondered if I'd be able to get up and return to my office in less than a couple of hours without starting all kinds of rumors.\n\n\"You shouldn't do things like that.\"\n\n\"I didn't want that delicious foam to go to waste.\"\n\n\"Don't be offended, but I'm not going to be able to stand up anytime soon.\"\n\n\"I'd be disappointed if you could.\"\n\n\"I know we're just flirting here but, Bill, I just wanted you to know up front, this is just playing. I'm not a wham bam kind of girl. I like to know guys before...anything happens.\"\n\n\"You don't know me after seven years? Not that I have anything against going slow.\"\n\n\"I know the office Bill, Mr. Maitland, the Ice Man. I'd like to know the other you.\"\n\n\"That works for me. The next couple of weeks are going to be hectic, anyway. Austin has me lined up for media interviews all week and I'm actually going out of town for a couple of days. And next week won't be too much better. He says we have to strike while the iron is hot, that we may never have this much media exposure again. So...\"\n\n\"So why today?\"\n\n\"I just wanted to let you know I'd like to see you when time permits. My life has been a roller coaster the last eight months. I don't know from one day to the next what's going to happen, but I don't want to lose the chance...to ...get to know you away from the office.\"\n\n\"Take another deep drink,\" she said, pointing to my Cappuccino. \n\nI had no idea why, but I did. When she used her finger again to stroke the foam from my lip and work the finger in and out of her mouth with sucking sounds and a few sighs of enjoyment, I had to fight to avoid making a mess in my pants.\n\nShe took the finger she'd been sucking like a professional porn actress and rubbed it against my lip.\n\n\"We're going to take it slow, but I just wanted to let you know it will be worth your while when we do get to know each other.\"\n\n'I never had any doubt,\" I said as I looked around and tried to think of the dullest book I'd ever read to make it possible for me to get up from the table and walk her back to her desk.\n\n############################### \n\nOctober 1, 2005 -- 11:55 p.m.\n\n\"oooohhhhhhh...\" she said, letting out a long shuddering breath. She lay against him, her breasts flattening against his chest, feeling his hard maleness beginning to soften.\n\n\"That was nice,\" he said, laughing.\n\n\"Only nice?\"\n\n\"On a scale of 1 to 10 in niceness, that was a 200,\" he said, catching her lips with his and she let their tongues tangle for a minute. Then, as he was sliding out of her, she let herself fall to his side and rested there comfortably. They hadn't been together that long, but already he felt comfortable and - safe. That was the only way to describe it. She felt like she'd known him a lot longer than the brief period since that first day at UNF.\n\n He wasn't Doug. Hell, she wondered if Doug had even been human. She sometimes thought looking back that he must have been half Satyr. He could go and go and go. She had sometimes thought he would literally fuck her out of her mind. But Clint Abbott was...\n\nShe kissed the side of his jaw and he glanced over at her with a small smile. He'd never have been able to read her mind but, while he wasn't Doug, he was a nice guy with a really, good, hard cock and he knew how to use it. He wasn't superman, but he was a good, hard man. Like the song said, they were hard to find, and harder to hold onto.\n\n \"Have I told you lately how glad I am I bumped into you that day?\" she asked, licking his face and ending up tangling tongues again.\n\n\"Likewise, Debbie Bascomb.\"\n\nHe ran a hand down to her breast, hefted it in his and let the flesh run through his fingers, squeezing the nipple as it filled and milking a groan out of her.\n\n\"You ready for another round? Keep that up and I will be.\"\n\nHe reached down and pulled his limp, wet cock up, then let it fall against his stomach.\n\n\"Hell no, you'll have to call in reinforcements.\"\n\nShe gave him a glance without thinking and he just shook his head and kissed her.\n\n\"I was teasing, Deb, teasing. Someday you're going to have to stop being so sensitive about it, The day will come when you and Doug and Bill will be old news, old gossip, and no one will care anymore. The Scarlet 'A' will fade.\"\n\nShe buried her face against his chest. Her emotions were all over the place. Bill's near death experience had stirred up memories and feelings that had been strangers to her for years. It hadn't made her fall back in love with him. There was still too much anger there. And seeing him flirting with that fucking cow at the Starbucks had left her pissed for the rest of the day.\n\nBut it had reminded her of why she'd loved him in the first place. \n\nMore than anything else, she felt sorrow. Sorrow that they'd both changed so much, lost what they had had long ago.\n\nShe wondered if she'd ever have that again. Clint was...Clint was a friend, a good guy, a man she admired and liked, but there was no fiery, burning love. Not what she'd had with Bill in college and after. She had never for a second felt for Clint what she'd felt in Bill's bed in that shabby apartment the first night they'd fucked.\n\n Lying there naked, her skin against his, caressing the cast of his mangled right hand, she'd felt like someone who'd been blind from birth and suddenly could see. After months of being friends, of spending hours and hours with him, he had suddenly become a stranger. \n\nShe had looked over at his familiar face, the half smile on his lips, and felt an emotion she could only guess at. It felt like what she'd known as love, but it was different. And it was only when he opened his eyes and smiled at her, and she felt a fear she'd never experienced before, that she realized for the first time what real love felt like. \n\n She had never really cared about guys before. They came and they went. New ones would always come along and the bittersweet pain of crushes was enjoyable, coming and going. But this was....she realized this boy could hurt her. Hurt her more than she'd ever been hurt before.\n\n Her first impulse was to roll out of the bed and get away from him, get the hell out of there and find two or three or more guys to fuck. To fuck and suck and fuck again until she forgot all about this night.\n\n But when he reached for her, she went to him.\n\n Clint brought her back to the present by rolling away from her and sitting up on the side of the bed.\n\n\"I need a beer. You've dehydrated me, woman. You want some wine, or a beer?\"\n\n\"Wine will do.\"\n\nWhen he came back he handed her a glass of white wine and sat down naked and cross-legged on the bed.\n\n\"You going to spend the night?\"\n\n\"I should probably go home. I have some things I need to do to get ready for Monday. Kelly is at my mom's and BJ is with friends, as usual, but I should go home.\"\n\nHe sighed theatrically.\n\n\"I know. I'm just a piece of meat to you. You use me and then want to spend the night in your own bed. It's so degrading.\"\n\nShe reached over and grabbed his limp cock, squeezing it and finding a sudden tension but then it went soft again. Hell, he'd cum twice in the last several hours and he was in his 40s. She was amazed she'd left him with any life in it.\n\n\"And that's a prime piece of meat, my friend, no doubt about it. But I don't want to break it. Besides, there will be plenty of other times when I'll be happy to abuse and degrade you. Trust me.\"\n\nHe gave her an odd look.\n\n\"Actually...\"\n\nShe thought about it for a second.\n\n\"Don't tell me. Are you breaking up with me? You've bedded the campus sex symbol and now you're moving on?\"\n\n He took a sip of his beer and looked her square in the eyes.\n\n\"I'm not breaking up with you, but I am moving on.\"\n\n\"What are you talking about?\"\n\nHe put the beer down on the side table and slid down to lie beside her.\n\n\"I was planning on telling you, but you were so fucking hot tonight, as you always are, that I just - put it off. I'm taking an early leave from my contract with the university. It was going to expire in April anyway, but my contract was written so either side could break it without penalty. I'll inform the university on Monday and they should be able to get a lecturer in to replace me for the rest of the six months or so left on the contract. There are always writers who want a place to hang their hat and a regular paycheck for awhile.\"\n\n\"But why?\"\n\n\"Something's come up.\"\n\n\"Just like that - something's come up?\"\n\n\"You know I alternate between fiction and freelancing articles. Well, about two weeks ago the company that has given me a fair number of longer freelance articles contacted me about another assignment.\"\n\n\"You couldn't wait until your contract expires? You told me once there are always new assignments coming along. You've got a good reputation and you're not hurting for cash. Why this one? And why give up a cushy writer in residence assignment?\"\n\n\"Not for this one.\"\n\nIn answer to her unspoken question, he said, \"There's not a lot of time to waste on this one and it could mean really big bucks. There's this little piece of hell tucked away in central Africa. It's claimed by two or three countries. There are some mineral rights, some diamonds, maybe some oil. There are three or four government armies and about a half dozen private armies tangling with each other on any given day.\"\n\n\"The worst of the worst, they say, is a local warlord. Some say he's a former French mercenary, others that he's a Brit. Whatever, he's a son of a bitch. They say he eats babies, but that's probably just propaganda he puts out. For sure, his favorite execution method is tying a man's hands and putting him over a sharp pointed spike anchored in the ground. The point of the spike is....aimed right at the...asshole. It's high enough that you can't touch the ground with your feet. You can try to hold yourself up with your hands, or use your thigh muscles to keep a grip on the stake. But eventually gravity does its dirty work.\"\n\n\"Oh, God.\"\n\n\"Exactly. He's covered whole fields with dozens, some say hundreds, of men -- and women -- planted on those spikes. A real class act.\"\n\n\"But what does that have to do with you?\"\n\n\"Here's where the story gets interesting. As you might expect, the poor bastards who live in this little corner of hell have been human fodder for every gang of marauders passing through. They eat the locals' food, rape their women, and enlist their men and boys in their armies. Like something out of the 12th century. Naturally, the local residents are sheep. Their resistance was broken a long time ago.\"\n\n\"Until a couple of years ago. Stories started coming out about this Saint who had shown up out of nowhere. The people are primarily Roman Catholic going back to the 17th and 18th centuries when Catholic missionaries were active in the area. The stories said this Saint, a woman, could heal the sick, raise the dead, calm storms. All the typical Saint-type stunts. But - and this is where it gets good - they said that wherever she passed, flowers bloomed. Whole gardens of beautiful flowers. Now that's something you don't hear about too often.\"\n\nDebbie just stared at him.\n\n\"You believe this? Flowers grow where this woman walks? Sounds like something out of a fairy tale.\"\n\nClint rubbed his hands and took a chug of his beer.\n\n\"Of course. Can't be true, but the people there believe the stories. They believe it enough that they've started resisting the top warlord and the other asshole mercenaries working the area. They're refusing to cooperate, killing mercenaries who get caught away from their buddies. They're letting themselves be tortured and killed rather than give any information about the resistance. \n\n\"It's driving the tough guys crazy. Nobody's ever stood up to them, and then this WOMAN of all things shows up and suddenly the natives develop backbones. So every army there has a bounty on the head of the woman they're all calling 'The Saint of the Flowers'.\"\n\n\"What does all this have to --\"\n\nHe just looked at her and she knew. \n\n\"No.\"\n\nShe sat up and without realizing what she was doing slapped the beer bottle and it sailed across the room spraying beer in its wake. She swung at his face with a open palm and he barely caught it.\n\n\"Debbie...\"\n\n\"Damn you, Clint Abbott. You stupid bastard. Is every man in the world a motherfucking moron with a death wish?\"",
        "He enveloped her with his arms and held her while she tried to hit at him.\n\n\"Debbie, don't go crazy on me. It's not what you think.\"\n\n\"Let go of me, let go of me before I scream rape and get your sorry ass thrown into jail. I should do that anyway. Keep you from killing yourself.\"\n\nBut he wouldn't let her go and finally she stopped struggling.\n\n\"You're going to do it, aren't you?\"\n\n\"The company has contacts and they think they can get me into the country with an experienced war correspondent/journalist. The guy is good, from what they say, and has been in and out of a dozen war zones without getting a scratch. If we can interview 'The Saint of the Flowers' and her followers, get pictures, we can write our own tickets. It's a joint enterprise. He'll have his clients for short articles and I'll be contracted to get a book out of it. It could make me a pile of money. Enough so I wouldn't have to work again if I didn't want to.\"\n\nShe pulled away from him and the vision of Bill covered with blood filled her mind.\n\n\"Or you could end up a rotting corpse in an African field with a spike up your ass and crows eating your eyes out and hyenas fighting over what's left. Are you insane?\"\n\nHe reached out and touched her face gently.\n\n\"I know part of this is because of what happened with Bill, but I'll be with experienced people and people get murdered on the streets of Jacksonville. I don't intend to die in an African field. I intend to walk away with a book that will get me on The Morning Show and Today, and probably Oprah.\"\n\nThey held each other in the center of the bed and she could hear cars faintly as they roared past on the highway. It was hard to believe there was a world that could hold butchery and Saints outside this room, but it was real.\n\nAfter awhile he said, \"I shouldn't be more than a few weeks or a month or two but, whatever happens, I'm not coming back here.\"\n\n\"Why?\"\n\n\"You remember when we talked about you and Bill and not having closure. You reminded me that I seem to be hung up on a woman who cheated on me and died nearly 20 years ago. I got to thinking about it and you were right. It's been almost two decades and I've never had a serious relationship with another woman. There's something wrong there.\"\n\nThe moment stretched out.\n\n\"When I come back, and I will come back, I'm going back to Palatka. I never said goodbye properly. I was too hurt. I'm going to put a really nice tombstone up in her memory and try to say goodbye. And then look around for someone I can love - the way you loved Bill.\"\n\nHe just smiled at her.\n\n\"Don't say it. We're friends. We're good friends, but that's all you feel for me and all I feel for you. I want more. I want what I had. I'm going back to Palatka and I'm going to put up a tombstone that reads, 'Here Lies A Most Beautiful Lady,' from the Masefield poem, and I'm going to move on with my life.\"\n\nThey were lying together and after awhile she told him, \"Turn the lights out. I changed my mind. Do you mind if I stay the night?\"\n\nAs they lay together in the darkness and she eventually felt him relax in sleep, she wondered how it had happened. \n\nShe'd always had men in her life, attracted them without effort. And now the man she'd loved for half her life was in another bed, the man she'd left her husband for was halfway across the country, and a man who was probably the best friend, male or female, that she'd ever had was going to go off a half world away and get himself killed.\n\nIn the darkness she wept quietly for everything that had been lost and would be lost.\n\n################################ "
    ],
    "authorname": "DanielQSteele1",
    "tags": [
        "marriage",
        "court action",
        "divorce",
        "crime",
        "cheating"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/when-we-were-married-ch-06b"
}