{
    "title": "Women's Studies Ch. 02",
    "pages": [
        "Have you ever been lying in bed with someone and your arm falls asleep, but you don't want to move and wake them up? Not because they're ugly or anything, but because you're afraid that when they wake up the spell will be broken. Well it's 6am and I've been like this for about 20 minutes. Agony aside, this felt pretty incredible.\n\nMy older sister Audrey was lying on my chest with an arm and a leg draped over me, wearing only a white lacy bra. Her bare pussy only slightly warmer than the rest of her was resting gently against my upper thigh. Her hair was a wild, sprawling, tangle of a mess, trapping in the heat from our bodies and her breath.\n\nLast night had been the perfect storm. The combination of alcohol, circumstance, and bad decisions. I'm of the strong opinion that my dressing in women's clothing for the last few days had blurred the lines of my identity for the both of us. I certainly couldn't see the scrawny looking guy I was used to seeing when I look in the mirror anymore. Well, at least not when I was wearing clothes. My dick and flat chest had a way of giving me away when they weren't being cleverly disguised by my new attire.\n\nMy sister, being admittedly bisexual, must have been having a pretty rough time, constantly seeing me as Lexi. I do look pretty incredible as a girl, especially after the makeover she gave me, and all the clothes she bought me.\n\nAfter a few more minutes I couldn't stand it anymore. The pins-and-needles effect on my arm was beyond ordinary pain and I had to do something. As gently as I could I tried to slide out from under her without disturbing her sleep.\n\n\"Ugh. S'too early, Lexi. Come back to bed,\" she mumbled not yet fully awake.\n\nI smiled as I finished easing out of bed. At least she's not freaking out about last night, I thought to myself. That was something I had thought about a bit since I had woken, that in her sober, morning after state, she would be pissed at me for not stopping things before they went too far. Then again, she's not fully awake yet.\n\nOnce in the bathroom I closed the door and stripped off my dress. Still in my bra, I examined myself in the mirror. My makeup was a mess, and my hair had a wild look to it, but still looked great in the asymmetrical cut my sister chose for me. It was longer on my left going about three to four inches below my jaw, whereas the right side flowed perfectly into my jawline. Bot sides were cut at angles that made my hair shorter in the back than the front. With my hair a mess, you could see more of the jet-black hair that would normally be covered by the platinum blond on top.\n\nI was no longer surprised by the fact that I was wearing a bra with small fake breasts in it, or of the odd contrast made by my slowly growing erection between my legs. It was the price I would have to pay if I wanted to attend an all-girls university, and with the full scholarship they had given me, attending was definitely worth the price. I hadn't thought so at first, but I was beginning to see now that it was. As long as I didn't get found out that was. That would be unbearable. With a sigh I pulled out my fake breast inserts and took off my bra leaving me once again a scrawny feminine looking man with a girl's haircut and makeup.\n\nI quickly turned from the mirror feeling loss and disappointment as I stepped into the shower. Washing myself, I left my erection to deflate on its own as I continued to think about my life. I enjoyed being \"Lexi\" (my girl persona), but that disappointment I felt while looking at myself in the mirror after taking off all of my clothes was disconcerting. I might be pretending to be a girl, but this was only temporary and then I would return to being me.\n\nAfter my shower I dried off and applied lotion to my smoothly waxed skin and, avoiding the mirror, I stepped back into the main room and found myself some clothes to wear. I quickly decided on a pair of white lace cheeky panties with black trim and a white bra along with a charcoal gray pleated skirt that ended mid-thigh. I topped it all off with a tight white t-shirt with black designs on it, and a pair of wedge sandals. If Audrey had been awake, I'm sure she would have approved.\n\nWith my fake boobs in place, and my cock discretely tucked away, I sat down to apply my makeup and style my hair. Not going for anything too dramatic this early, I went for a barley there look with my makeup and only a little eye shadow.\n\nFeeling sufficiently presentable I slipped out of the room quietly, letting Audrey get some sleep, and took a stroll down the street to a bagel shop for some breakfast for the two of us. If Audrey woke up pissed about last night, this might slow down the onslaught. I know that bagels won't make up for incest, but that's all I had to work with currently.\n\nWith two coffees and a bag of bagels, I made my way back to our room feeling more nervous each step. Surprisingly, it had nothing to do with being dressed up as a slightly slutty girl in public. It was because I would have to face my sister about what happened last night. We had always been close growing up, even with our age difference, and I couldn't help but worry that she would hate what we had done last night, or worse hate me.\n\nOnce back in our confined room the smell of the coffee seemed to wake Audrey. I watched as she stretched out like a cat letting the covers slip from her body, leaving her naked except for her white lace bra. It was hard not to drink in her beauty and sexuality. As a Playboy model, she was definitely worth appreciating.\n\n\"Hey,\" she said sleepily. \"Did you go out?\"\n\n\"Yeah, I got us some breakfast,\" I replied meekly.\n\nMy sister sat up on the bed completely uncaring about her state of undress and reached out for me to hand her one of the coffees I was holding. Handing her the cup, I sat on the opposite bed facing her unconsciously leaving my legs parted in a very unladylike way. As Audrey sipped at her coffee, I tried to find a way to bring up what happened last night. Not really finding an easy way to start, I settled on just being direct.\n\n\"Last night...\" I began.\n\n\"Yeah...last night,\" Audrey said, letting out a long breath. \"I was drunk and I'm sorry. I shouldn't have done that to you\"\n\nShe was sorry? \"Wait, what?\" I asked, confused. \"You're not mad at me?\"\n\n\"Why would I be mad at you? I basically threw myself at you.\"\n\n\"Um...because I didn't stop you?\"\n\n\"If you did, I would have choked you out and done it anyway,\" she said jokingly.\n\n\"You damn near did that anyway,\" I said, remembering our encounter.\n\nWith that my sister smiled in a satisfied way. With that faraway look in her eyes, she was likely reminiscing on the events of the previous night as well.\n\n\"Listen, I know we shouldn't have done it, but I liked it. I probably shouldn't have but when I see you like this, you make me all kinds of horny,\" my sister said, staring at my crudely open legs. \"I told you before, if something feels good then do it. That definitely felt good. And if the dry cum on my back is any indication, you enjoyed it too. What I'm saying is, I don't feel bad about it, and you shouldn't either.\"\n\nMy sister, she has always been the blunt one. Never shy to just come out and say exactly what she was thinking or feeling. She was right though; it did feel good. From the way she was talking, it seemed like this might not be just a one-time thing that we never spoke of again.\n\nWe sat quietly across from each other eating our bagels and drinking our coffee. When I had finished my own bagel I finally noticed where she was staring, and how slutty I looked sitting with my legs open in this skirt. Feeling a little bold, I started to open and close my legs; small motions that slowly grew bigger until there was no way she could fail to see my panties.\n\n\"Do I really make you feel that way?\" I asked. \"I mean...you know...like that?\" I couldn't bring myself to say horny for some reason. I knew I was having an effect on her. She still hadn't looked up from my crotch.\n\nAudrey was just finishing her bagel, but she still looked hungry. I recognized the look, and it wasn't food she wanted.\n\n\"Audrey?\" I said again, still slowly working my legs. \"Audrey!\"\n\n\"Yeah?\" she said, snapping out of her daze.\n\n\"Like what you see?\" I said with a little laugh. I was loving the ways you could tease as a girl. It was so much fun, and made me feel powerful.\n\nAudrey smiled and got a mischievous shine to her eyes. Before I realized what happened she had hopped up from her bed and pushed me backwards onto mine and was straddling my waist. She had flipped up my skirt and was casually grinding her bare pussy onto my pelvis.\n\nShe was definitely a sight to see. Sitting straight up, coffee cup still in hand, she worked herself on me in slow delicate motions. Still wearing only her bra and smile, she rode me taking sips from her coffee every now and then.\n\nSomehow this seemed more intimate than last night. Sure, last night we actually had sex, but this was different. It wasn't primal or raw. It was playful and sensual, free and untainted. I could tell she was enjoying herself and not just on a carnal level, but in a way that said that she was happy and amused by our situation. She had a relaxation that you would expect to see between two seasoned lovers who were completely comfortable with themselves and their partner.\n\nAfter continuing her steady pace for about five minutes, she started to show signs of her impending climax. Her breathing became faster and she had her eyes closed tight. Within moments sweat began to bead on her skin and her motions became slightly jerky.\n\nWhen her orgasm hit, I realized I was holding my breath in anticipation. She shook, and her legs clamped onto my hips. After she rode out the wave of pleasure coursing through her body, she opened her eyes and smiled at me again. Not saying a word, she finished the last of her coffee and hit the front clasp on her bra to free her breasts.\n\nThe two halves sprung apart to reveal a glorious pair of breasts with tight little pink nipples. Even without her bra, they didn't show the slightest hint of sag, as if they'd been welded on. I reached out to touch one, but my sister was too fast. With her free hand she slapped mine away and eased herself off the bed laughing.\n\n\"Not this time lover girl. I need a shower...or have you forgotten the mess you made all over me last night?\" she finished, giving me a wink as she closed the bathroom door.\n\nMy cock was aching. Knowing I had some free time, I quickly freed it from the tape and panties and set myself up to take care of my star player while Audrey took her shower.\n\n**********\n\nOnce my sister returned from her shower, she teased me relentlessly. She would strut her stuff naked, continuously bending over for something and adding much more sway to her hips than usual. She was like a post card of the promised land; I could look all I wanted but there was no way I was ever going to step foot there. I didn't press it after she foiled my first advances. I didn't want to be one of those guys, or girls rather, who reeked of desperation...even though I was. I could tell it was having an effect on her as well. The perpetual gleam of arousal around her sex told me she was having almost as tough of a time as I was, leaving our small room filled with the unmistakable aroma of fresh arousal.\n\n\"I've got to go out for a bit,\" Audrey announced after several hours of torment. \"I might be a while, so you do your own thing for lunch.\"\n\nAudrey was just finishing up at the mirror with her makeup and hair. A half an hour earlier she had finally deigned to don some clothing; a tight white tank top that bordered on transparency, and a very short pair of cut off jeans that contained all but a whisper of the bottom curve of her majestic ass. The silhouette of her navy-blue bra was undoubtedly part of a strategic plan to draw attention to her assets, and even clothed I couldn't seem to take my eyes off of her.\n\n\"You don't want any company?\" I asked, breaking my eyes away from her body as she turned to face me. Sure, she probably saw me looking in the mirror, but it's rude not to look someone in the eye when they are speaking to you...or so our mother says.\n\n\"No, you just hang out and relax. You've been doing so great. Just take it easy.\"\n\nShe was being a little weird, but I brushed it off. With all of her teasing I could really use some private time to take care of business.\n\nTrue to my purpose, as soon as the door shut to our room, I slipped quickly out of my shirt and skirt and got onto my bed, facing the big mirror we used to apply our makeup. Sitting up on my knees, with them spread sexily, I drank myself in. My white lace bra and matching panties with black trim, my stomach flat and toned, my hair and makeup bringing out my natural feminine beauty...looked incredibly hot. I kept my eyes glued to myself and slowly traced my hands down my body before slipping them into my panties. I eased my semi-erect cock from its tucked position, hooking my panties underneath my balls to allow for full access.\n\nWatching myself as I did all of this was extremely erotic. My motions were slow, and sensual, and every time I looked up her eyes were glued to mine. It felt like I was seducing myself, and it was most definitely working.\n\nI slowly started stroking my now severely engorged shaft, and she started as well. The faces she made had a serious effect on me. The way her lips parted as she gasped for breath, the way she bit her lip or shifted her hips; her body flowed with the will of her pleasure, like a fallen blossom down a river. When she started making high pitched moans, and her stroking became faster, it became a contest; to see who could hold back the longest.\n\nThe moaning became louder, spaced between frantic gasps for breath. At the peak of the mountain top we held back as long as we could, far longer than we thought possible. With a rushing in our ears and pain raging against our refusal to release, we finally succumbed and were swept under by a tidal wave of bliss. With each rope our abs spasmed, wrenching our muscles. Eternity stretched out, and like elastic, snapped back to a moment, and it was over.\n\n\"Holy shit that was hot!\" came from my right.\n\nStill dazed, cock in hand, it took me a second to process. When I finally came to my senses, I realized it was Audrey standing just inside the doorway to our room. Like a deer in the headlights, I didn't move a muscle as I looked at her. I didn't even blink.\n\n\"I um forgot my uh...my purse. I forgot my purse,\" she said, a bit winded herself. She stepped quickly to the table next to the TV and snatched up her purse and made a quick exit.\n\n\"FUUUUCK!\" I screamed in humiliation the second the door closed, before falling onto my back. How long was she standing there? How much did she see? What did she think about seeing me obviously getting off to looking at myself in the mirror? Well she did say it was hot. Fuck my life!\n\nI lay there for a while, trying to catch my breath and coax my heartrate to something resembling normal after that awe-inspiring orgasm. No matter what I tried, I couldn't shake off the feeling of having just been caught dick in hand like some grade schooler with his first erection.\n\n\"At least I came,\" I said to the empty room, genuinely glad that something that good wasn't stopped by my sister's untimely return. Truth be told, this wasn't the first time one of us walked in on the other, and it literally wasn't anything either of us hadn't seen before. Still, it was a very private and intimate thing to have someone walk in on.\n\n*** *** ***\n\n\"It took me forever to find these in a store locally,\" Audrey said with a mix of exasperation and joy.\n\n\"Took you forever to find what?\" I asked looking up from the Maury Povich show. My attention was now split because I had just spent the last 20 minutes waiting to see if these train-wreck-people were in fact the fathers of these children. I normally try to avoid this kind of thing. It's so disgustingly wretched and it always ends up sucking you in like a swirling vortex of white trash entropy.\n\n\"You are...99.99% the father.\" Those faithful words rang out in the air like the trailer park battle cry that they were.\n\n\"Who's the daddy? You're the daddy bitch! Suck it douche bag! Haha!\" I'm not proud of this moment. Television like this drops your IQ two points for every minute you watch. Thankfully it's not permanent. If this motel had decent cable, I would have been safe from this seedy hurricane of what-the-fuck.\n\n\"Well good for them,\" Audrey said, switching off the T.V., thus snapping me out of my celebration and back to the real world.\n\n\"I got you a special gift baby sis,\" she said, and proceeded to pull a sizable box out of a non-descript bag. \"These puppies will be your new best friends!\"\n\n\"Are those..?\" I asked, looking at the picture on the box. There were two breasts featured prominently on the picture and written above it were the words Aphrodite Breast Forms. Audrey had mentioned these once before when I was having trouble with my inserts.\n\n\"Yes, they are!\" she beamed excitedly.\n\nI was stripped all the way down to my underwear in seconds bouncing up and down on my knees on the bed. I'm not sure exactly why I was so excited. They weren't going to make my breasts look any larger than they were already. Maybe it was a mix of the feeling of getting a new present, and the hope that these would be more comfortable and manageable.\n\nAfter some preliminary tests, we found the right placement for them on my chest. Next, we made a few marks on my skin with some eyeliner for reference. Audrey helped me prep my skin using alcohol pads to remove the oils, and then we applied the adhesive to the forms. When the adhesive started to become tacky, we pressed them firmly to my chest one at a time and held them in place for several minutes. Once they felt like they were holding in place on their own, I put on an extra tight sports bra to keep the pressure on them for a while longer.\n\n\"They match your skin tone very well,\" Audrey exclaimed. \"You should only need minimal makeup to blend the edge, and no one will notice a thing. Invest in some waterproof stuff just in case.\"\n\n\"How long will they stay on?\" I asked, cupping the new globes attached to my chest.\n\n\"About a week,\" she replied. \"When you get settled into your dorm and see what the privacy situation looks like. Find a day during the week where you can do it consistently, and just make that your day to remove them, clean them, and reapply them. You'll have to get all the glue off of them before you can put them back on or they won't stick as well. Also, they won't come off in the shower so there's no worry there,\" she finished.\n\nThis was definitely a boon in my favor. Out and about in public, I was sure I could pull this off with my other fake breasts, but with these I wouldn't have to worry about my roommate seeing me without them. Not that I planned on sleeping naked, but accidents do happen.\n\nThese forms felt heavier than the inserts. Just standing for a few minutes with them was giving me a small strain on my back. Nothing drastic, but just one more thing I would have to power through. I had finally gotten to the point where it no longer hurt to walk in heels, it figures something else painful would come up. Being a woman hurts.\n\nAfter an hour of wearing my tight sports bra, I figured they were on as tight as they would ever be. I carefully slipped the sports bra off and looked myself over in the mirror. They didn't make me any bigger than my inserts had, but they looked amazing. Better than that, they jiggled when I moved.\n\n\"Okay girly, quit fondling yourself for a couple minutes while we get back to business,\" Audrey quipped. She quickly applied some makeup to the top edge of the forms and easily blended them flawlessly into my skin. In a few short minutes I couldn't even tell that they were fake. This was amazing. I spent the next ten minutes shifting my position in the mirror to see how I looked. Finally, I decided it was time to put my clothes back on and see how they looked from that perspective.",
        "Even fully clothed, I could see a difference. While the inserts did their job, the forms not only filled in the space where my breasts were supposed to be but made them seem fuller and in a more rounded shape. Thankfully my bras still fit after we had just bought so many of them. I loved the way they made me look and even with the added mass, it felt like a weight had been lifted that I had not even noticed I was carrying.\n\nAudrey was rather quiet the rest of the day. She just sat against the headboard of her bed smiling at me while I played with my new toys. Oh, and play I did. They had a very natural bounce to them which I loved watching and found new and interesting ways to induce that desired effect.\n\nFinally wearing myself out, I plopped myself down on the bed next to Audrey, leaning my head against her shoulder.\n\n\"Thanks for my boobs. They feel great.\"\n\n\"You're welcome sweety, just don't over work them. You don't want one to pop off,\" she said, giggling slightly at the imagery of that. \"You should be fine though.\"\n\nWe spent some time just lying next to each other for a bit. She rested her head against mine while I absentmindedly traced my fingers around my breasts. The way they were glued to me made them really feel like a part of me, and the fact that they didn't slide a bit was a great comfort.\n\n\"So, do you want to go out and take them for a test drive?\" Audrey asked some time later.\n\n\"I was actually thinking of staying in and really putting these babies through their paces,\" I said, turning my head so that I was whispering into her ear. \"I would really like to know if these things are built for speed and endurance.\"\n\nI turned my body to face her, and slowly began to caress the soft skin of her leg with my own while I traced her jawline with my thumb. \"Come on sis. Give a girl a hand?\" I whispered just before I licked her slowly from the bottom of her neck, ending with a little flick on her ear lobe.\n\nWith a little growl she pushed me over, following me in our roll, and landed straddling my waist. Really wanting to get things going before she put on the breaks again, I sat up, wrapping my arms around her and pulling her into a kiss. It started out soft and gentle, growing more passionate, and eventually landing somewhere in a fevered, lust induced rage with Audrey biting my lip hard while she ground herself furiously against me.\n\nWhen the pain on my lip became too much, I grabbed a fist full of her long hair and wrenched it hoping she would release me when the pain became too much for her. With another sexy growl she let go, smiling, and attacked my shirt. I followed suit until we were both completely topless. As we kissed again, Audrey's breasts pressed against mine and a small moan escaped her lips and into my mouth.\n\nWith no warning, Audrey shoved me to my back and started licking and sucking on my neck. It felt fantastic, but I was becoming painfully hard and needed to release myself. Desperate to move things along, I forcefully rolled her over and pinned her down. With my free hand I reached between us, using the back of my hand to apply pressure to her covered pussy, while at the same time maneuvering my fingers in my own panties to pull my cock from its tucked position.\n\nJust as I had maneuvered my cock into a more comfortable position, Audrey pushed me off of her. Before my mind could go back to the dark place, of her rejecting me, her hands flashed to her jean shorts, clawing at her buttons. By the look in her fevered eyes, I knew there would be no turning back on her part. Her need infecting me, I quickly helped strip her of her remaining clothes.\n\nUncovered, the scent of her familiar sex filled the air. The heady aroma had a magnetic effect on me; I just had to taste it. Hooking one of her legs with my arm, and using my other to apply gentle pressure to her smooth stomach, I let her scent pull me in. Skipping the teasing portion, I took one long swipe with my tongue from her weeping hole all the way to the top, finishing with a devilish flick against her clit.\n\n\"Oh Lexi!\" she moaned. \"Don't stop, baby.\"\n\nStopping was the farthest thing from my mind. Lowering my head, I got back to work. I eased off of my direct assault and focused on savoring every inch of her sex. Careful to avoid her clit, I lapped at her folds and probed her hole as deep as I could with my tongue. She tasted delicious, and I drank her in just as soon as more came out.\n\nWhen Audrey couldn't take it anymore, she violently took two fists of my hair and positioned my mouth just over her clit, forcing me onto it. Feeling her need, I could no longer deny this goddess. I attacked her clit with everything I had, bringing her moans to a whole new level.\n\nOnce she started to slowly buck her hips against my mouth, I reach down to help push her over the edge. Two fingers easily slipped into her gushing pussy, and I set to work slowly massaging the roof of her desperate hole. The effect was immediate. Her moans rose in pitch and her hands gripped me tighter as she fucked her hot cunt into my face.\n\n\"Fuck. Fuck. Fuck!\" she cried with each thrust onto my face.\n\n\"I'm gonna...Fuck!\" she screamed. \"CUMMMING!\"\n\nI continued my assault, not letting up for a second, leaving her to twitch and spasm every time my tongue touched her clit.\n\n\"No more! Please, no more!\" she cried laughing. Her legs clamped tight against my head trying to get me to stop the sweet pain of pleasure. I relented, leaving her a quivering mass of post orgasm flesh.\n\nI crawled off the bed and slipped off my panties, leaving my gray pleated skirt where it was. My fully erect cock lifting the bottom hem was a mix between hot and comical, and I couldn't decide which.\n\nEasing back in between my sister's thighs, I kissed her gently on the lips, making sure to keep my cock from touching her just yet.\n\n\"Fuck,\" she sighed. \"I don't know how a girl could experience that mouth of yours and not want to fuck you.\"\n\n\"Aww, you really think so, Sis?\" I asked lowering my hips to let my bare cock brush against her soaked flower.\n\n\"Only if you're gentle,\" she teased.\n\nShe has to be joking, I thought. She's about as gentle as a pit bull on a choke chain. \"Oh definitely, I'll be so gentle you won't even know I'm there,\" I joked, slowly rubbing my shaft against her pussy.\n\n\"No need to be that gentle,\" she cooed. \"A girl likes to know something's going on.\"\n\n\"How about...I'll be as gentle as you are?\" I countered, lining my cock up to softly kiss the opening of her hole.\n\n\"Promise?\" she asked smiling wickedly.\n\nWithout further ado, she wrapped her legs around me and buried me deep inside her in one quick motion. The force threw me forward, flat against her, and I let out a very un-Lexi-like grunt. Needing no further direction, I began to give it to her with long powerful thrusts. With every stroke I pulled out slowly, leaving just the tip, only to thrust back into her. The force of my pelvis slamming into hers made her body jolt with each contact. From the claw marks she left on my back, she was loving it. And if that wasn't signal enough, her moans and squeals of delight that she made every time I hammered into her took care of that.\n\nI felt like an all-star. I was really giving it to this goddess, and I felt like I could last for hours. With every thrust our bodies slowly made our way across the bed towards the headboard.\n\n\"I'm getting close. Just like that,\" she moaned. Fuck...don't cum. So close,\" she panted.\n\nDon't come? Ha, I'm only getting started. \"Cum for me baby. Cum on your sister's cock.\"\n\n\"Oh fuck, I love my sister's cock!\" she cried \"Fuck meee!\"\n\nTaking one of her nipples into my mouth, I gave it a gentle bite while I pinched the other.\n\n\"Harder!\" she begged.\n\nI bit down as hard as I thought I could without breaking skin, and viciously twisted her other nipple. That must have done it for her. Letting out a long wordless scream, she wrapped her legs tight around me, holding me deep within her. Trapped in her blessed temple, I ended my punishment on her nipples and rested myself on top of her, reveling in the pleasure of her post orgasm spasms gripping my cock.\n\n\"That was some ride stud,\" she said, releasing her grip on me.\n\nI slid smoothly from her and lay down next to her, letting her catch her breath.\n\n\"Gentle my ass,\" she said, breaking a long silence.\n\n\"Your ass?\" I asked joking. \"I didn't know that was an option...I still got some left in the tank if you want to go there.\"\n\n\"Haha!\" she laughed. \"How did you not cum from that? You were really giving it to me.\"\n\n\"Oh, you loved it,\" I teased.\n\n\"Hummmm,\" she hummed in a satisfied and appreciative way.\n\n\"I hope you don't plan on leaving me hanging,\" I said, leaning in to kiss her cheek.\n\nGetting up, I stood on the bed and unzipped my skirt and pulled it off. Standing there next to her I swung my hips letting my cock sway back and forth.\n\n\"I think someone wants some attention,\" Audrey said, sitting up and getting on her knees.\n\nShe firmly grasped my proud erection at the base and started licking up and down the sides, cleaning her juices off of me. Smiling, she looked like a girl with her favorite lollipop, and it was really working for me. After one long lick from my balls all the way to the tip, she slipped me smoothly into her mouth and hummed. The vibrations did wonders for my situation. She continued humming as she pumped me in and out of her mouth while making corkscrew-like strokes on the rest of my shaft.\n\nI really wanted to cum in or on her mouth, but I wasn't done yet. With a moan of regret I pulled my cock from her lips and got onto my knees to kiss her. Taking a quick nibble on her lip, I pushed her sideways where she landed on her hands and knees. Perfect!\n\n\"Are you going to punish me?\" she pouted looking back over her shoulder. \"Have I been a bad girl?\"\n\n\"Yes, you have!\" I said, giving her round ass a smack. \"Teasing your sister this morning.\"\n\nI lined myself up behind her, feeling like she was the perfect height for me, and pushed into her wet slit with a bit of force. Looking up, I could see us both clearly in the mirror, and the sight of it made me harder, if that was possible. With my breast forms I looked just like a girl, and the two of us were beautiful. Audrey's long blonde hair hanging around her face, with her breast hanging below her, and me behind her buried to the hilt. We caught each other's eyes in the mirror and smiled at each other.\n\n\"So, are you going to punish me or not?\" my sister asked.\n\nShocked out of my daze, I smacked her other ass cheek. \"You got somewhere to be?\" I asked giving her another smack.\n\nBefore she could reply I started stroking into her, giving her an occasional slap to one of her cheeks. Getting a firm grip on her hip bones, I began to pick up my pace. Her breasts swung back and forth with each pump. Even my breast were going to work; bouncing away in cadence with each smack of my hips against my sister's ass.\n\nReally getting into her kink, I reached forward and grabbed a fist full of her hair, arching her neck and back further while I continued to hammer away at her flowing cunt. I lost myself in the sound of her moaning, like a siren's call waiting to drag me down to its depths.\n\nStarting to feel the distant signs of my orgasm, I let loose her hair and resumed my grip on both of her hips. I picked up my pace, moving harder and faster. My orgasm was in sight and I wanted it. Audrey collapsed onto her stomach and started to frantically rub her clit beneath us. Her eyes were closed now, and I could barely hear her whispered chanting. \"Don't stop. Don't stop. Don't stop.\"\n\nI don't know how much longer she needed, but I knew how much longer I had. In about ten seconds tops I would be spent. We were both breathing hard and sweat was dripping off of us. We had been at this for quite some time, and with the finish line in sight we were both desperate. With my legs trembling, I reached out for all of my reserves.\n\nAudrey still hadn't cum yet and I was on borrowed time. Without even thinking about it, I licked my thumb, getting it nice and soaked, and pressed it against her cute little pucker just as I started cumming. My digit slipped in, right down to the root as I continued to frantically ram my cock into her. Thrusting wildly, it was like I was trying to batter down the walls of her cervix as I emptied myself inside of her.\n\nAlmost when I thought I couldn't take anymore, she started panting and shaking with her orgasm, having lost her energy to scream a while back. With the sure knowledge of my victory, I collapsed back onto the bed. We both spent the next several minutes dazed, trying to catch our breath, until eventually we just passed out.\n\n*** *** ***\n\nThe next few days consisted of us shopping for other necessities for Lexi. I needed a more feminine bed set, as well as other replacements for things that clashed with my new femininity. Most of it didn't really seem necessary to me, but Audrey enjoyed the shopping. We also picked up feminine supplies which thoroughly confused me.\n\n\"Do you really see me needing to use tampons or pantie liners?\" I asked with a hushed whisper.\n\n\"No, but you will be expected to have them,\" she pointed out. \"Just keep a couple in your bag. You would be surprised how often you might get asked for one.\"\n\nAfter that we moved to bathroom stuff, shampoo, conditioner, body wash...and here I was used to using shampoo in place of all of those. Good-bye Head and Shoulders. Hello Herbal Essence and Tresemme.\n\nAfter that was done, we spent a considerable amount of time going through all of my boxes and replacing my boy stuff with my new girl stuff. Needless to say, our room looked like a disaster. We could have qualified for FEMA support.\n\n\"Um...what am I going to do when I go home for break?\" I asked realizing that my guy clothes were now gone.\n\n\"I got you covered,\" she said pointing to a bag in the corner. \"In that duffle bag are two pairs of jeans, your skate shoes, socks, six shirts and your Broncos hat. Just stop somewhere and change on your drive back.\"\n\n\"That should work I guess,\" then thinking some more, \"What if mom comes here?\"\n\n\"Haha!\" she laughed. \"Then you, Sis, will be one busy girl.\"\n\n\"Not funny,\" I said, being serious now.\n\n\"The best defense is a good offense,\" she said. \"Call home frequently so she doesn't worry, and that way you will know if she even thinks about coming to see you. If she starts giving signs that she might, start talking about how busy and stressed out you are. Give her no impression at all that things are going well. Also, as a backup, plan out things you can do over any weekend that will keep her occupied and away from campus. And under no circumstances are you to tell her which dorm you are staying in. If she has that information she can just show up. Without it she will have to call you to find out where you are, and you can tell her you're out, and meet her somewhere else,\" she lectured, as she finished packing the last of my things.\n\n\"So, dodge questions and comments about visiting me, and counter with anything that I can use that would sidetrack her, while implying that her coming would be bad for my grades. Got it,\" I summarized.\n\n*** *** ***\n\nThe Saturday that the dorms would open quickly neared. I began to feel excited and a little depressed. While I looked forward to finally starting my classes and put all this work I had done to good use, I would be sad to see Audrey go. We had grown really close, and it wasn't just the sex. That was definitely fun, don't get me wrong. She was playful, and aggressive, as well as more than a little adventurous. Sometimes one of us would be clearly in control, while other times we would both fight for dominance like a caged match of sexual fury. Thankfully all the bite and claw marks could be hidden with clothing...well most of them.\n\nIt was the night before I would be moving into the dorms and we were just recovering from one of our more vicious sessions. For some reason the right amounts of pain made the pleasure so much better, and Audrey could play my body to perfection.\n\n\"Do you fly out tomorrow?\" I asked, still catching my breath.\n\n\"No, Sunday night. Why?\" she asked.\n\n\"Just curious, I guess. To be honest it felt like you brought a little something extra to that last performance,\" I admitted. \"Thought you might have been trying to literally fuck me to death before you had to go.\"\n\n\"I might have been at that, but no I'm not leaving until Sunday.\"\n\n\"Still, it wouldn't be a bad way to go,\" I mused.\n\n\"You mean getting fucked to death by your porn star sister while you are done up like a girl with fake breasts and all?\" she asked, giggling against my chest.\n\n\"Well I would hope that you would at least try to butch me up a little if that happened. You know, take off the breast forms at least,\" I joked. \"I wouldn't mind if you had to tell them how I died though.\"\n\n\"Oh, really now?\" Audrey asked.\n\n\"Yeah, write that shit on my tombstone. Here Lies Alexis Allen. Fucked to death by his sister. Died a Hero's Death. What a champ! Hero of Greenwood High School. Died with a smile...\" I eventually trailed off. \"You know, something to that effect.\"\n\n\"Haha. I'll make a mental note of that,\" she said, slapping my stomach playfully.\n\nWith that we fell asleep to get some much-needed rest for the move.\n\n*** *** ***\n\nI woke up to a very pleasant surprise. Audrey had my entire cock in her mouth with her nose pressed into my pelvis. She was holding her breath like a champ as she flexed and relaxed her throat muscles around my cock. Noticing I was awake, she looked up and gave me a wink. After a few seconds she let her tongue slip out of her mouth licking further down, not letting up on her throat ministrations for a second.\n\n\"Ahhh!\" she exclaimed pulling my shaft from her mouth. \"Morning!\"\n\nLarge globs of saliva were dripping from her mouth and my cock, some of them still connected between them. She quickly got back to work licking and sucking me back into her mouth. If she was doing something wrong, I couldn't tell. It's what I imagine being in heaven would feel like. Pure bliss, warm and soft...and not lacking even the smallest measure of pleasure. It was a good thing that I was getting this blow job, because there was no way I was getting into heaven.\n\nWhen she started humming, I almost lost it. I knew I wouldn't be able to hold back much longer. I reached down and gently gripped her hair. Not to interrupt or alter her motion, I just needed to hold some part of her.\n\n\"I'm close,\" I warned her.\n\nShe looked up at me, smiling with just her eyes, and kept going, not changing her rhythm or technique a hair. She seemed to be getting more excited as she watched my face betray my impending release. When I was seconds from cumming I closed my eyes only to jerk them back open as I felt a slippery digit press its way into my ass.\n\n\"What the..! Holy shit!\" I cried as she smashed down on my prostate. And then I started to explode.\n\nLooking at Audrey, she still had my spurting cock in her mouth, and a cruel look on her face as she silently shook with laughter. Every time I thought I was done cumming she would ravage my prostate further, prolonging the experience. When she finally finished swallowing my cum, she slipped her finger out and just sat their laughing.\n\n\"What the fuck was that, Audrey?\"\n\n\"What? You don't like a little surprise ass play?\" she quipped, still laughing.\n\n\"Shit Sis, that's a no-fly zone. That entire area is off limits, okay? Exit only.\"\n\n\"Looked like you enjoyed it to me,\" she smirked. \"Besides, if you play with someone else's ass you should be prepared to expect the same.\"\n\n\"Are you talking about last week?\" I asked. \"You seemed to enjoy it.\"",
        "\"So did you, Lexi,\" she shot back playfully.\n\nShe was a little right. It was uncomfortable and strange, but whatever she did with her finger had an unprecedented effect. Still, it was not the point.\n\n\"Okay, I get it. No more surprise ass play,\" I laughed. \"I need a shower, I feel violated.\"\n\nAfter I dried off, I pulled off my breast forms and reapplied them. It had been a week, and this was not the day for shit to go wrong. After they were firmly secure, I finished getting ready. While Audrey went to work on herself, I went down to the motels laundromat to wash all of our dirty clothes. We weren't going to the dorm until the afternoon and I would rather have everything clean on my first day. In between loads of wash, I began slowly packing my stuff back into my car, assisted by Audrey after she was ready. Finally, around noon everything was clean and packed away. The only things left in the room were Audrey's.\n\n\"There is definitely more stuff in there than before,\" I said, examining the packed backseat of my car. As it was, I wouldn't be able to use the rear-view mirror. \"It's doubled at least.\"\n\n\"Well what did you expect? We all don't wake up and look this great,\" she joked. \"It takes hard work and the right accessories.\"\n\n\"Tell me about it,\" I said, giving my breasts a squeeze.\n\nWe picked up some lunch at a place called Danny's Fish and Chips. There was a bit of unspoken nervousness in the air as we ate quietly in a corner booth. We both knew that the final test was near, and the culmination of our combined efforts would be severely tested. Not just once I moved in and met my dormmates, but for the next few years. Or until I dropped out...or God forbid, was kicked out. A trip out to the mall or dancing was one thing, but I was going to be living with these girls 24/7. From now on I needed to buckle down and keep my shit together.\n\nWhen we returned to my car, we spent some time savoring the air conditioning, both of us lost in thought. Things to remember: Don't let your boobs fall off. Don't let your wiener flop out. Don't forget your voice. Sleep on your back so you don't mess up your boobs while you sleep. Wear a tight sports bra to sleep just in case you roll over during your sleep. Wear a pair of those cute sweatpants to bed so you can somewhat hide your morning wood. Check your makeup frequently. Under no circumstance sleep with anyone from school. That last one would be tough. The list rolling through my head was really a lot longer, but those were the highlights.\n\n\"You ready Lexi?\" Audrey asked.\n\n\"I don't know,\" I answered honestly. \"But in the end it doesn't matter because it's time.\"\n\nI sucked it up, checked my makeup in the mirror, and made sure my boobs and cock were where they were supposed to be, and then I put the car into gear to make my way to Evens Hall.\n\nFounded in 1947, Mayweather University made you feel like you were stepping back in time. Beautiful old buildings made of red brick and faced with white marble columns left you feeling like you were taking a walk around a downtown city capitol. The buildings were all neatly placed around a grass quad large enough to play two games of football in tandem. The quad was broken up by cobblestone pathways and at the very center stood three flag poles with the country, state and another flag with the Mayweather coat of arms. Simply put, it was a sight to see. Even the new buildings, that were made to accommodate the growth, were made to reflect the old-world craftsmanship.\n\nAfter finding a space close to Evens Hall, we each grabbed a bag and made our way to find my new room. The inside was just as amazing as the outside, with real plaster walls, wood paneling and rich crown molding, it was enough to overwhelm the senses at first glance. Even the fixtures were antique-looking, which they probably were. Discovering that my room was on the second floor, we made our way up a beautifully carved wooden staircase and found ourselves facing a wide hallway.\n\n\"This place is amazing,\" I said.\n\n\"Yeah it is,\" she replied. \"You should have seen the shithole I had to stay in back in Miami. What room is yours?\"\n\n\"The lady said 204 room 3, whatever that means,\" I replied.\n\nTaking a guess, I went left. Making my way down the hall I noticed two things. The first was that I was going in the right direction based on the numbers on the doors. The second was that it seemed like this school only accepted very pretty girls. Most were athletic, but some had a curvy plumpness to them that was very appealing. Not overweight by any measure, just...fuller.\n\nFinding the door to 204, I hesitated. Not from nerves, the beauty of this place had shocked that right out of me. I was still a bit confused about if this was my room or not. It said 204, but the lady said 204 room 3. Before I could even decide to make a move or not, the door opened.\n\n\"Oh, hello. I'm Holly. Are you looking for 204?\" she asked.\n\n\"Yeah...I think. 204 room 3?\" I replied making it more of a question.\n\nThis Holly was pretty cute. She was a little taller than me with strawberry blond hair, freckles and dark green eyes. Definitely of Irish descent. She also seemed a little older, and I was relieved to see that she was dressed in a pair of tight low-rider jeans and a tight gray tank top. I was a little worried about how the dress code would be at an all-girls university. Funny how I had committed to becoming a girl to go here and forgot to check on something like that.\n\n\"This is the place!\" she confirmed, stepping out of the doorway to let me in. \"Your room is on the back right.\"\n\n\"Thank you, Holly. I'm Lexi, and this is my friend Dreya,\" I said, introducing us.\n\nI was still a little confused. She said my room was on the back right? Wasn't this the room? Confusion ended when I took it all in. There was a large common area that reminded me of a studio apartment. It was a large wide-open space with a lounge area, as well as a dining table, and a full kitchen. There were even a few smaller tables spread around, most likely for studying, and of all things a full-size washer and dryer. There were two doors equally spaced on each side with numbers on them, and on the door on the far right was the number 3. The bedroom had two twin sized beds, two small desks, as well as individual closets and dressers for our possessions.\n\nAlso, in my room was a pale skinned beauty. Her perfect alabaster skin was a striking contrast to her dark brown hair and green sundress. It was as if her dress molded itself to her form, accenting every curve while at the same time lending her an air of innocence. My God, those legs must go on forever, I thought as my eyes followed them up to her prominent hips, and then further to the slight cleavage of her full breasts. I was brought back to reality by a nudge from Audrey.\n\n\"I said, my name is Abigail,\" she repeated.\n\n\"Oh, I'm sorry. Where are my manners? I'm Lexi, and this is my friend Dreya,\" I replied, shaking her hand and desperately trying not to blush, or let on that I was really checking her out.\n\n\"It's nice to meet you Lexi, and you as well Dreya.\" Curiously her eyes lingered on Audrey for a lot longer than seemed necessary.\n\n\"I see you've got the left,\" I said, breaking the silence before it became too awkward. \"That suits me just fine.\" I set my bag on the bed.\n\n\"It would be nice to get to know you more, but I need to get the rest of my stuff. After?\" I offered.\n\n\"Sure thing Lexi...Dreya,\" she replied.\n\nOnce Audrey and I reached my car again she burst out laughing. \"Could you be more obvious?\"\n\n\"What are you talking about?\"\n\n\"You were looking at her like she was a snow cone. Haha!\" she quipped.\n\n\"Oh really? You mean the way she was looking at you then?\" I shot back.\n\n\"I don't think it was that. I've seen that look before. I think she may have recognized me but hasn't quite figured out from where yet,\" she sighed.\n\n\"Don't worry about it,\" I said, grabbing a couple more bags. \"What's our motto?\"\n\n\"Lie till we die,\" she replied.\n\n\"Yup,\" I agreed. \"You know we have to be some of the weirdest fucking siblings on earth.\"\n\nAfter several more trips we had moved all the bags and boxes up to my room. It was tiring work and we both collapsed on my small bed to catch our breath and relax for a few minutes.\n\nWhile we were bringing up my stuff, I noticed more and more people showing up on campus. I wasn't sure how many girls went here, but it seemed like it was going to get crowded. During our trips I did find out more about the dress code. For the most part there wasn't one, so long as you avoided Whore Couture or Stripper Chic you were in the clear. This was a relief. After finding out how hot I looked as a girl, I didn't want to have to start dressing like a nun.\n\nAbigail was very quiet while she finished setting up her side of the room. She did keep shooting Audrey some glances. Whether she recognized her or not, I was fairly sure she, at the very least, played for both teams. If she recognized Audrey somehow it would be because she had seen pictures of her, and those would have been of her naked. And if she didn't recognize her from somewhere, then she was definitely attracted to her.\n\n\"What do you say babe? You want to help me put this stuff away?\" I asked, giving Audrey a gentle prod in the side.\n\n\"Ugh, fine. And then I want a nap,\" Audrey said, sitting up. \"You wear me out girl.\"\n\nUnpacking was actually pretty easy. We hung up all the dresses and shirts in my closet, and all my underwear was poured into the top drawer of my dresser. Skirts received another drawer, and the last was reserved for sports bras and sweatpants. All of the shoes just ended up in a pile at the bottom of my closet. My makeup and hygiene products didn't need to be unpacked because they had their own carry cases, which worked out just fine. After making up the bed with hot pink sheets and a black down comforter, we collapsed back onto the bed.\n\n\"Nap time, Lexi,\" Audrey declared as she snuggled into me.\n\n\"You don't mind do you Abigail?\" I asked. \"We're exhausted.\"\n\n\"Not at all, we can catch up later,\" she smiled. \"There is a mandatory dorm meeting for our unit tonight at six though.\"\n\n\"That shouldn't be a problem,\" I responded. \"We only need an hour or two.\"\n\n\"Don't mind us girl,\" Audrey reassured her. \"We can sleep through an earthquake.\"\n\nA few minutes later we were asleep.\n\n*** *** ***\n\nLuckily when we woke up there were no awkward problems. Well there was some drool on my shirt from Audrey, but no loose erections or groping in our sleep. Shutting off the alarm on my phone, I sat up and sorted myself out. After smoothing out my clothes and fixing my makeup I made my way out to the common area leaving Audrey to sleep a little more.\n\nSeeing a group of five girls sitting in the lounge area on the sofas and armchairs, I figured that was where the meeting was happening and made my way over. They were all beautiful in their own way, and I was hoping I would be able to keep it in my panties. I'm going to need to invest in stronger tape and tighter underwear, I thought.\n\n\"Well it seems like we are all here,\" Holly said, flipping her strawberry blond hair over her shoulder. \"Well at least all of us that arrived today,\" she amended\n\n\"My name is Holly, and this is Jessica,\" she introduced, pointing to a slender darker skinned girl with shoulder length black hair and nice round breasts. \"We are your dorm supervisors. We are basically here to make sure things don't get too out of hand and you guys don't burn the place down. The rules are pretty much what you would expect. No alcohol or drugs in the dorms. No open flames. No fighting. And don't get caught with a boy in your room,\" she said, eyeing each of us in turn. I noticed some smiles on the other girl's faces once they realized the extra emphasis she put on the word caught.\n\n\"If it's dangerous, or your mother wouldn't approve, just don't do it,\" Jessica chimed in. \"Also, these next points are guidelines really. \"We operate on a 'don't ask don't tell' philosophy. Do not tell us your age, sexual orientation, political party affiliation...nothing. We don't want to know. For all we know you are all 21-year-old virgin nuns.\"\n\nI knew exactly where she was going with this. Some of the other girls didn't seem to quite understand though. I figured a private chat with them afterwards would be appropriate.\n\n\"All of this out of the way, it's tradition to go to The Library the weekend before classes start to let loose a little. For those of you who don't know, that is the name of a popular club just off campus,\" Jessica explained. \"We should be heading out around 9pm if you would like to join.\"\n\nWith that, it seemed like the meeting was over. Jessica and Holly went back to the room they shared leaving me and the three other girls to ourselves.\n\nHaving already met Abigail, I introduced myself to the other two girls, Skylar and Kennedy. Skylar was about my height but there the similarities ended. Her D breasts looked huge on her slender body and she had powerful thighs, and an ass to match. Her eyes were a cold blue that worked well to set off her pretty smile, and she had the most incredibly long blond hair flowing all the way down to her ass.\n\nKennedy was taller, with gray eyes, and vibrant auburn hair down to the middle of her back. Her breasts were slightly smaller than Skylar's, but her body seemed perfectly proportioned, and she was in fantastic looking shape. She kind of reminded me of Ariel, but with slightly darker hair.\n\n\"So, did you guys catch everything she said?\" I asked.\n\n\"Yeah I think so,\" Abigail said, and the other girls agreed.\n\n\"What about what they didn't say?\" I asked.\n\n\"You mean about getting caught with boys in our rooms?\" Kennedy asked.\n\n\"There was that, but I was more thinking about the other thing. They don't want to know how old we are. That way, if they see us drinking off campus, they don't have to report it because they can assume we are old enough\" I said to some appreciative smiles. \"They basically said that they aren't going to be hard asses on us, but if we get caught because of our own stupidity then they will have to do something about it.\"\n\n\"That's so awesome!\" Skylar exclaimed.\n\n\"I wouldn't get too out of control with it though, and if you get in a bind ask someone for a Cold Charlie,\" I advised.\n\n\"What's a Cold Charlie?\" Abigail and Kennedy asked on top of one another.\n\n\"That's not like a Hot Carl is it?\" Skylar asked going in a totally different direction.\n\nI couldn't help but laugh at that. \"No,\" I started, trying to control my giggles. \"A Cold Charlie is when you stick your helmet on the end of your rifle and wait for an enemy sniper to shoot at it so you can figure out where he's at,\" I explained. They looked even more confused than when I started. For fuck's sake. \"It's a distraction.\"\n\n\"That makes much more sense,\" Skylar said.\n\nWith the meeting done I went back to my room to get ready for the night, and to wake up Audrey. I really need to watch what I say. These girls probably think I'm weird or just nuts.\n\n\"Dreya, wake up,\" I said as I shook her. \"Wake up. We're going out tonight.\"\n\n\"What time is it?\" she asked.\n\n\"It's about 6:30. You have a couple hours,\" I assured her. Knowing her she would want to change and would require some time to pull together her club look. \"Take my car and meet me back here.\"\n\n\"Wear your red dress,\" she said, getting up. After retrieving my keys, she gave me a hug and kissed me on the lips. \"I'll be back in a little bit. Stay out of trouble,\" she finished, giving my ass a playful smack.\n\n\"I'll do my best,\" I joked back as she left my room.\n\nHaving the room to myself, I decided to change quickly while I had some privacy. As luck would have it though, the moment I was down to my underwear Abigail walked in.\n\n\"Oh...Sorry,\" she said awkwardly, trying to look anywhere but at me while I scrambled to cover myself with my dress.\n\n\"It's okay. My fault I guess,\" I said, quickly slipping into my dress and zipping it up. \"I should have said something before I started taking my clothes off.\"\n\n\"No. It's no problem, we're both girls here, right?\" she stated.\n\n\"Yeah. Of course,\" I said awkwardly. \"I'll just grab my makeup and leave you to change.\"\n\n\"No need. We are going to be spending a lot of time in this room together over the next year. Might as well get it out of the way from the off.\" With that, she unzipped her dark green sundress and let in fall to the floor.\n\nShe stood there blushing in her black demi-cup bra and matching thong. I was speechless, and having a hard time looking away. Finally getting my shit together, I picked up my makeup bag and sat at my small desk to begin touching up my makeup for a more evening club look. I couldn't help but notice Abigail cross into the view of the small stand mirror I was using as she went to her closet to find something to wear. Her ass was simply spectacular, and the way she stood slightly on the balls of her feet even though she was barefoot showed off how well toned her legs were.\n\n\"Do you think this is too much?\" Abigail asked.\n\nTurning slightly, I watched as she held up a black strapless cocktail dress made out of black lace. It flared at the hips and looked to be rather expensive.\n\n\"I don't know if it is or not, but you should wear it,\" I said still staring.\n\n\"You think so?\" she asked sounding hopeful. \"I don't really get many chances to wear some of the nicer things that I have.\"\n\n\"Go for it. I don't know what the dress code is for something like this, but who cares,\" I said, encouraging her. She obviously wanted to wear it, and felt like she needed someone to say it was all right.\n\n\"Thanks Lexi,\" she said, turning away from me and slipping it on.\n\nI went back to my make up and let Abigail do her thing. I didn't quite get why she was thanking me. If she wanted to wear the dress, she should. Something about her seemed off. Not in a bad way, but just some part of her that I couldn't quite place.\n\n*** *** ***\n\n\"I got a little gift for you,\" Audrey told me. I had gone out to meet her in the parking lot when she came back from getting ready. She was wearing a tight black halter top dress that showed a generous amount of her ample cleavage and ended with a wavy A-line skirt. God help me, she looked ready to fuck something.\n\n\"Wow, you look...\" I stalled.\n\n\"Slutty?\" she offered.\n\n\"That too. I was going to go with great, or sexy, or something like that.\"\n\n\"No, it's okay. I was going for slutty,\" she said with a smile.\n\n\"Slutty it is then,\" I said, giving her a hug and a soft kiss on the lips.\n\n\"Here,\" she said handing me an envelope. \"Use it well, and don't let your friends see it or they might ask too many questions.\"\n\nOpening the envelope, I found a brand-new Colorado state ID. It was my sisters ID.\n\n\"I ordered that before we drove out here, and had a friend forward it to our motel,\" she explained. \"This way you can fully enjoy the college experience.\"\n\n\"Thank you so much!\" I said, shocked.\n\n\"Just try not to get into trouble with it. Nobody should question it, we look so much alike and that picture was taken a few years ago. And if anyone asks if you are that Audrey Allen, just give them shit about accusing you of being a porn star slut and tell them there is no relation...It's what I do,\" she said laughing.\n\nWe talked a little longer waiting for the rest of the girls to come down. About nothing important really, we were mostly avoiding bringing up Audrey leaving tomorrow.\n\nFive minutes before nine we began to hear a ruckus coming from the direction of several of the dorm buildings. A minute or two later a mass of women came into view around several corners and began to gravitate into one huge group heading in the direction of The Library. It looked and sounded like the beginnings of a riot. There must have been at least 200 girls dressed to impress. All of the noise was from the older girls singing an old sea shanty from the 1800's, 'Roll Boy Roll'.",
        "Sally Brown, she's the gal for me, girls\n\nRoll girls, roll girls roll\n\nSally Brown, she's the gal for me, girls\n\nWay high, Miss Sally Brown\n\nShe's lovely on the foreyard, and she's lovely down below, girls\n\nRoll girls, roll girls roll\n\nShe's lovely 'cause she loves me, that's all I want to know, girls\n\nWay high, Miss Sally Brown...\n\nIt seemed that they had changed some of the words, making it pretty vulgar, and very lesbian. Some of the younger girls were blushing, listening to a song implying girl on girl sex being sang by women from an all-girls school, but surprisingly some of the younger ones seem to be jumping in for the refrain. If some of these girls hadn't expected there to be a little girl on girl activities in college, let alone an all-girls one, they were in for a surprise.\n\nAudrey and I joined the mob and we made the five-minute walk to the club. As we approached, I noticed four huge bouncers standing at the front entrance and a line of almost fifty people (mostly men), being held back from entering. It seemed that the girls from the University had first dibs. Just another perk of being Lexi, I thought.\n\n\"Under 21 on that side,\" one of the giants shouted. \"21 and over on this side.\"\n\nThe bouncers all had ID scanners and were checking faces to their pictures, so Audrey and I split up hoping to avoid someone from noticing that they had seen the same ID twice. I was a little worried that they would see through me. Not that I was a guy using a girl's ID, but that I didn't look exactly like my sister's picture with my new haircut. All of that anxiety was for naught though. They quickly passed me into the club and gave me my wristband.\n\nThe club was just as I remembered it from my first day in town. Hardwood floors and wood trimming on the walls, complete with a wooden L shaped bar. The ambiance definitely suited its name and reminded me of an old library, but without the shelves. There was a barrier in between the dance area and the bar to keep the underage crowd away from the alcohol and a smattering of tables in both sections.\n\nIt was eerily quiet as the rest of the girls came in. No music was playing, and the house lighting was up, making the bar overly bright. Once all the girls were inside, one of the older girls climbed up to the stage.\n\n\"Good evening ladies,\" she began. \"Welcome to The Library, and welcome to Mayweather.\" She paused for the cheers to calm down. \"A couple of announcements to make before we get things rolling. Number one is that, thanks to the great placement of our favorite watering hole, our school has one of the lowest drunk driving percentages in the nation. This place is like our home, so respect it and the people who work here. They treat us like family and provide a great place to come and lower our stress levels.\"\n\nSome of the younger students held back, but the older ones let loose, cheering the club and staff. Apparently, they knew how great this place was.\n\n\"One thing our school isn't so great with is pregnancy.\" There were a few agreeing murmurs from the crowd now. \"This is not a boarding school that locks you down, you can leave the campus whenever you want. You don't need to get as much sex as you can out of your system before classes start Monday. That being said, use protection. If you need some ask me or a dorm supervisor. It's awkward, I know, but so is having to explain to your guidance counselor that you're dropping out in February because you're six months pregnant.\" She let that hang out there for a few seconds to make sure everyone soaked it in. \"With all that out of the way...let's get this party started!\" she shouted.\n\nAs soon as she finished, the lights dimmed, and the house music came on with a cheer from the girls. It also seemed that the outsiders were now allowed in. I wasn't quite sure what to think about a bunch of guys swarming a club clearly co-opted by an all-girls college. As a guy I thought it was a good idea, but as Lexi it seemed a little more than skeezy. They probably thought we were all desperate and that it would be like fishing with dynamite.\n\nAudrey and I found Abigail with Kennedy and Skylar. They had obviously had their own fake I.D.'s and were already starting on their first round. Both Skylar and Kennedy were sporting tight little black dresses, showing off their form perfectly. While Kennedy's dress was strapless, Skylar's had a halter top needing a little more support for her larger breasts.\n\n\"I absolutely love your dress Abigail\" Audrey exclaimed. \"You wear it very well too.\"\n\n\"Thank you,\" she said, blushing and looking down.\n\nI was seriously worried that she knew who Audrey was now. It was either that, or a severe girl-crush. A girl-crush we could handle, but if she put it together, she would notice my same last name. I would prefer that everyone knew as little of my personal life as possible.\n\n\"Drinks!\" I said loudly. \"We need drinks!\"\n\n\"What do you want hun?\" Audrey said getting up.\n\n\"A rum and coke...A stiff one,\" I amended, only to hear some giggles from our party.\n\n\"So, what do you guys think so far?\" I asked, trying to break the ice.\n\n\"It's great so far,\" Skylar said first. \"It's a full scholarship, so I wouldn't complain even if it was horrible.\"\n\n\"The campus looks amazing. It's like walking through a picture that someone took of the past,\" Abigail said. Then more quietly. \"My mom went here, and it looks just like she described it.\"\n\n\"It's definitely interesting,\" Kennedy commented slamming the rest of her beer. \"There is some potential, I'll give it that.\" Exactly what potential was left unsaid.\n\nWith Audrey's return the conversation digressed towards fashion, makeup and boys. After a few drinks the girls were quite frank about their sexual past which caught me off guard. Some of their admissions were a surprise, like the fact that Abigail was still a virgin. That gorgeous, and still untouched? At this day and age she was damn near a unicorn, a mythical creature you only hear tell of in traveler's tales.\n\n\"The only sex I've had has been with Fred, my vibrator,\" she admitted with a little blush. \"He is quite good though. Never leaves me hanging.\"\n\nOther reveals were not so surprising, such as Skylar having quite a lot of experience, starting her freshman year in high school. Kennedy was quiet for the most part but from the looks she was giving all of us she was playing for the Girls Team, and didn't want to spook the deer before she could get us used to her touch.\n\nOnce we were sufficiently drunk enough, we made our way onto the dance floor and commenced to dance as only drunk girls could. With liberal grinding and our hands in the air, we shimmied and shook celebrating our womanhood. By now I was drunk enough to forget that I was a guy and just let myself enjoy the experience.\n\nAt 11 o' clock the house music was replaced by a DJ who spun his turn tables, his beats working us up into a lather. He seemed to specialize in rock and hip-hop mashups which fit the mood perfectly.\n\nKennedy seemed to be having the time of her life, sandwiched in between Audrey and another girl with long thick black hair that I had yet to meet. She was beautiful though with striking blue eyes and seemed to be rather free with her hands on Kennedy's body. My sister seemed to have picked up on the score and was having a good time giving Kennedy a thrill.\n\nThroughout the night we slipped back and forth between the bar and the dance floor trying to either maintain or increase our alcohol levels. I know Skylar was increasing. She had two guys wrapped around her fingertips making sure she didn't want for anything. Seeing where that was heading, I stopped by a fishbowl at the bar and grabbed a condom courtesy of Durex's generous donation to the health department and made my way over to her.\n\n\"Hey babe!\" I said giving her a hug and discreetly slipping the condom into her halter. \"Just in case.\" I whispered, patting it over the cloth. She just smiled at me, not really able to say anything with her guys next to her. I really hope she will only need one or they're going to have to share, I thought to myself laughing at the visual of the second guy having to wash it out before reusing it.\n\nWanting some sister time, I co-opted Audrey with Kennedy. It was a great time all-in-all, even with some minor incidents. Some girl trying to give Abigail shit about her dress being the worst.\n\n\"Don't you think you're a little over dressed?\" She said snottily. \"Think you're too good for us or something?\"\n\n\"Oh, she is too good for you sweetheart,\" Audrey said in her most sympathetic voice, mocking her.\n\n\"Are you jealous?\" I asked on top of her. \"Do you wish you were wearing that dress...or do you just wish you could get her out of it?\" I paused to let it sink in for her drunk brain. \"Quit being a bitch and go find some friends.\"\n\n\"Don't worry, you look great doll. Everyone in here wants a piece of you,\" I said to Abigail. \"Even the guys.\"\n\nAfter that little mishap, she seemed to gain a little more confidence. Probably realizing that we were friends, and had her back, she began to open up...or it could have been the shots of tequila my sister kept buying for us. Either way, she squeezed in with us and Kennedy and really let herself go. What began as a semi-erotic dance session between girlfriends slowly deteriorated into grinding and heavy petting. This was a situation I was not yet mentally equipped to handle. I knew this from experience and I really wasn't ready for Lexi Junior to make her famous debut.\n\n\"I need a little break,\" I yelled to Audrey over the music. \"I'll be back in a couple minutes.\"\n\n\"I'll come with you,\" Audrey said producing a round of 'Awws' from the other girls. She was definitely the life of our little party. Slipping her arm into mine we made our way off the dance floor.\n\n\"Getting a little too worked up out there?\" she asked discreetly.\n\n\"That obvious?\" I asked.\n\n\"To me yeah. You looked a little panicked there for a second,\" she said with a chuckle. She found the inconvenience of my erections highly amusing. \"You want to take a walk outside?\"\n\n\"Yeah, some fresh air would be nice,\" I told her, letting her lead me out the back.\n\nIt was pretty late, but it was still incredibly warm out. It was about as warm outside as it was surrounded by all of that body heat on the dance floor. The back of the club was quiet and dimly lit. Audrey, still with her arm in mine, led us away from the dumpsters and towards the far end of the back of the club.\n\n\"Kennedy really seems taken with you,\" I said, trying to sound casual.\n\n\"Jealous?\" she shot back\n\nWell that failed I thought. Aloud, \"Maybe a little,\" I admitted.\n\n\"Don't worry Lover Girl, I've got plans for you and they don't involve sharing,\" she said, pushing me to the side of a storage house set a little way from the building. \"At least not yet.\"\n\nWith me pressed against the wall, she kissed me hard, grinding herself into me. Unsatisfied with what she felt, her hand dipped down as fast as a viper under my dress and fished into my panties freeing my cock. After the walk and now this blitzkrieg on my genitals, I was still growing, and she was rough with her encouragement with both her hands and mouth. She had a firm grip on my hair, pulling my head to the side as she licked and bit on my neck and shoulder like some psychotic vampire slut, all while mercilessly tugging on my growing cock.\n\n\"AHHHH! Fuck!\" I let out, grabbing her and flipping our position, slamming her forcefully into the wall. While she was still processing what happened I reached under her dress and slipped her panties down her legs. Having no pockets, I hooked them into the waist band of my own underwear. It was done in a flash and I was back on her, pressing my lips to hers, and letting my fingers toy with her wet sex. The insides of her thighs were already slick with arousal, and the smallest touches brought her moans vibrating into my mouth.\n\nNot able to wait, she grabbed my shoulders and jumped up, wrapping her legs around my waist. I could feel the heat of her pussy radiating just above my cock. I thought for a half a second about teasing her, but this wasn't a time to fuck around. All of that dancing and grinding was all the foreplay either of us needed right now. I pressed her against the wall and slid her down slowly until I felt her wet folds press against my tip. Once I was sure we had aligned, I let her down hard and fast.\n\n\"Oh!\" she said in surprise, as I quickly buried myself to the hilt inside of her. She did an admirable job of staying quiet as I began working into her hard and fast. Normally very vocal about her pleasure, she kept herself to quiet moans into my mouth occasionally broken by a small chant...or maybe it was a prayer, of 'fuck me, fuck me, fuck me.'\n\nNormally I don't think I would have been able to hold her weight for this long, but with her pressed hard against the wall, and her legs holding onto my hips so well, she made me feel like superman. I was the Lance Armstrong of fucking...except I had two balls. I could go for miles!\n\n\"Oh God\" she whispered squeezing her eyes shut. \"Ah, ah, uuuuunn!\" she screamed, muffling the sounds by biting down on my exposed shoulder.\n\nI didn't even slow my pace for her, I just continued railing into her like this was going to be my last pussy. Which it might very well be with me having to keep my dick a secret. This fuck was like an apology and a celebration for my star player and he was making the most of it.\n\nWhen she recovered, she eased up and let go of her animal like grip on my shoulder and smiled at me. I couldn't help it, I just started laughing. I didn't know what it was exactly, but it just snuck up on me. It might have been the fact that I was a guy dressed as a girl screwing a girl behind a nightclub in a way that I've never dreamed of, or it could be that she was my sister who just so happens to be a Playboy Playmate. Or maybe it was as simple as how cute and dazed she looked after I just fucked her through an amazing climax. It could have been all of it or none of it, I just didn't know. She must have felt the humor as well because she started laughing too.\n\n\"Some detour our lives took, huh?\" I asked still fucking into her.\n\n\"You're telling me,\" she said, pulling me in for another kiss. I wasn't going to complain. I loved the feel of her lips on mine, and how soft her tongue was, and how I could feel her smile while our lips touched.\n\nIt didn't take long for her to start moaning into my mouth again. I could feel her pussy flexing around my cock, a steady rhythm slowly coaxing me towards my own orgasm.\n\nOur sweat and fluids were making our hips and thighs slick, making it harder for Audrey to grip me. I held her tighter and continued my rapid assault on her velvet folds, her pulsating pussy steadily milking me. Audrey seemed to be reaching her crescendo again and I was right behind her. I tried to savor this moment, of the both of us on the cusp of orgasm. The beauty of our connected bodies desperate and screaming for release. Waiting for that moment that signals no return, guaranteeing us our moment of bliss.\n\n\"Hey guys, I was looking all...Oh shit. My bad.\" I looked quickly and saw it was Kennedy. Shit. Fuck. Fucking fuck. Mother fucking...FUCK! My articulate mind failed me.\n\n\"Don't let me interrupt you ladies.\" Kennedy had already turned around and was rounding the corner before I had paused for more than a moment.\n\nI looked down and saw that we were blessedly covered by the skirts of our dresses, and without missing another beat I got back to nailing my sister.\n\n\"Oh fuck. Did she see?\" Audrey asked moaning.\n\n\"You mean did she see that I'm a girl with a nice big cock who was fucking her sister good?\" I whispered into her ear.\n\n\"Oh, fuck baby,\" she cried out. \"Don't fuck with me.\"\n\n\"She saw two hot girls having a go at each other behind a club. That's all,\" I assured her. \"But don't think for a second I won't fuck with you sis.\"\n\nHer orgasm nearing again after the shock, she became more frantic, desperate not to let this one slip through her fingers. Thrust after thrust, I gave her all I had. Making sure to drag my pelvic bone across her clit at every opportunity. Hoping to help her along, I started whispering in her ear dirty little things about how hot she looked with her sister's cock fucking her. How I wanted to share her with Kennedy and watch her devour that young girl's pussy while I fucked her from behind.\n\nThis recital was even working for me. I was panting into her ear, out of breath. She felt so amazing and tight around me, and her pussy was still doing that squeezing thing around my cock, but now at a more rapid pace...\n\nAnd then I told her how I wanted to seduce Abigail with her and watch that innocent beauty taste her first pussy...Audrey's pussy.\n\nAudrey came.\n\nHer voice was gone with exhaustion and she was left with only a silent scream, like wind through the trees. With her pussy walls contracting in spasms, assaulting my cock, I was done. Three thrusts after she started cumming I began blasting her insides with my seed, painting her cervix a pearly white.\n\nWe held each other tight, unmoving, waiting for the rapture to finish washing over us, not daring to move and risk ending it prematurely. Finally, I eased out of her and we both slumped against the wall with exhaustion.\n\n\"Oh God, I could use a cigarette after that,\" Audrey said. Then she started laughing hysterically. \"I have cum and pussy juice...running down my legs. I'm covered in sweat...and I smell like a whore house...and you're barely in a better state than I am.\"\n\nAfter having a nice laugh together, she calmed down again and I fished her panties out of the waist band of my own. Getting a good look at them, they were a black mesh G-string with the smallest amount of cloth conceivable. I handed them back to her, receiving another small laugh.\n\n\"I don't think these are going to be of any help after the mess you made of my pussy,\" she said. \"You don't happen to have some napkins hidden in there somewhere, do you?\"\n\n\"Nope,\" I apologized.\n\n\"Let's get out of here,\" she said after another long pause. \"I can't go back in there like this.\"\n\nI took her hand in mine and we left. We made our way around the outside of the club and headed back towards my car in the campus parking lot.\n\n\"You know we're pretty fucked up as human beings, right?\" she asked as we walked in the night.\n\n\"You're telling me,\" I said.\n\nWe walked to my car in silence, hand in hand like lovers, with Audrey clutching her panties in her off hand and my sperm and her fluids running down her legs, shining in the moonlight.\n\n*** *** ***\n\nHaving sobered up during our spirited and public romp, Audrey was okay to drive and, we went back to her motel. I had thought about staying in my dorm room, but if this was her last night here for a while, I wanted to spend it with her.\n\nWe had sex again that night. Not like crazed animals like usual, but as lovers. It was slow, gentle and deeply sensual, and afterward we held each other as we fell asleep. It felt like a goodbye and a thank you all at the same time. Audrey had shown me so much and awakened something within me that I didn't know if I would be able to let go of. And I don't just mean the sex. She had found Lexi, and in a way freed me from my miserable life as Alex. I knew I would see Audrey again, and not just tomorrow before I took her to the airport. She would visit, and I would see her at home on holidays. Even knowing this, it still felt like a huge loss.\n\nWe slept late and Audrey had to rush and shower all of our sex off of her before her flight, which left me no time for one myself due to the checkout time.\n\n\"It serves you right,\" Audrey said to me as she hurried to do her makeup and hair. \"You got us into this mess.\"",
        "\"Hey now, you're the one who threw me into the wall and went all Lorena Bobbitt with the hand job,\" I defended.\n\n\"Okay, so it was my fault,\" she conceded. \"But you don't have to get on a plane smelling like the rejection bin at a sperm bank. So, I got the shower.\"\n\n\"Fine,\" I said exasperated, leaning into the mirror trying to do something with my makeup. It was really bad. We're talking page one rewrite.\n\nWith her bags packed, and in my car, she checked out and then we headed to the airport. I walked with her to the security checkpoint and we had our sad little goodbye promising to see each other again. After she made it through security, I took a deep breath and let it out before making my way back to the parking garage.\n\nWhen I got into my car I sat and thought about Audrey, and how much I was going to miss her. It was such a wild ride, and for now at least it was over. I found myself wondering what to do now. She had been a rock in my life, and a shield all rolled into one. I didn't know how I was going to do it, be Lexi without her. I was beginning to feel myself freaking out.\n\nJust when I thought it might be too much, I found a folded note on the passenger seat.\n\n'If it feels good, do it.'\n\n June 2013\n\nHer centerfold quote. I couldn't hold back the smile if I tried."
    ],
    "authorname": "Son_of_Battles",
    "tags": [
        "incest",
        "brother",
        "sister",
        "cross-dressing",
        "masturbation",
        "party",
        "all-girls",
        "college",
        "public",
        "sex"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/womens-studies-ch-02"
}