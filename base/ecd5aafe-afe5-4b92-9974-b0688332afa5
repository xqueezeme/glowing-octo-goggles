{
    "title": "Lost Empire Ch. 44",
    "pages": [
        "Ship # - name - prime\n\n0001 - Tempro\n\n0003 - Conner\n\n0097 - Ace - Zimmel\n\n0098 - Lucy\n\n0101 - Shelby (mother ship) - Derrick\n\n0125 - Lars\n\n0200 - Ellen\n\n0301 - Rodrick\n\n0403 - Johnathon\n\n0667 - Marco - Brown\n\n0778 - Jan\n\n0798 - Celeste - Shelby (human)\n\n0908 - Tara - Mara\n\n0999 - Zan\n\n1000 - Sherry - Lucie (for the moment)\n\nDerrick calmly reached into his pocket to produce the requested documents. Emperor Gregor grasped the papers thinking that this was another spy. He'd not expected the man to remain calm. Looking over everything he could honestly see nothing wrong. \n\nTrusting his instincts more than his eyes Gregor let the man go though he was going to keep an eye-? What in the hell was going on? He wasn't getting a reading on the man at all! Okay, this was a serious situation. Reaching for an alarm Gregor was about to set it off when he changed his mind.\n\nDerrick breathed a sigh of relief as soon as he was out of sight of the emperor. Damn that had been close though knowing the man like he did he was watching. Adjusting a switch on his wrist comp Derrick smiled well he WAS trying to watch him. Then Derrick lost the smile, if Gregor was trying to watch then he'd be concerned when he couldn't see Derrick. Shit! Derrick thought I need to do this and get the hell out of here!\n\nMoving as rapidly as he could Derrick found the computer. Loading the discs he crossed his fingers as he started to punch in the code that Shelby had given him. A mere twenty minutes later Derrick breathed a sigh of relief when the discs finished loading. Beating a hasty retreat Derrick didn't see the shadow of a man that had been watching.\n\nGregor arrived where Derrick was only a few minutes before Derrick left. Moving to the main terminal Gregor started to type in several commands. Then he typed several more, as a furrow came to his forehead he nodded. Trying another route Gregor was typing at a furious rate only to be confounded more. Who in the hell was this man that he could hide his activity from Gregor's absolute override?\n\nMoving from the computer room Gregor contacted his best agents. He needed to have the man shadowed 'til they found out just who he was. If what Gregor thought was going on, then they had far more trouble within the inner circle of the empire than he thought.\n\nDerrick hoped that what he'd loaded into Mary wasn't discovered. It was vital that she got these messages in the future. Fingering the blue disc Derrick just hoped that this would actually keep her safe as she had said she had been for centuries. Let's just hope that the quick fix he'd written was enough.\n\n[Derrick I am picking up a transmission from emperor Gregor. It appears he is concerned about a man he saw. From the description he is talking about you. I suggest you return Derrick.] Came Shelby's thoughts.\n\n[I would Shelby but I don't think I did enough for Mary. I set a good many things into motion but I think there are a few that I missed. I'm going for the ship I'll let you know as soon as I am aboard.] Derrick thought back to Shelby.\n\n[Alright Derrick be careful, the emperor has dispatched an agent to follow you. Please hurry as I remember there were none better than them.] Shelby replied.\n\nCringing a bit Derrick hastened his steps as he ran to a secluded spot. Looking around he pressed two buttons on his comp. and vanished. Moments later a shadowy figure entered the place where Derrick had been. Sniffing the air placing a hand to the ground the figure stood pulling a comp. \"I apologize sire. It appears I have lost him. He was here then nothing as if he was suddenly gone. Much like the IMT that the technicians developed a few years ago.\"\n\nGregor's eyes went wide, IMT technology? There were only a few that knew of it, his daughter had, as did his wife the empress. Many of the technicians that worked on it only knew part of it. Somehow someone had assembled all the information and built another. \"Return, be ready in case he is seen again. I have to investigate this. Very few know of the complete IMT technology besides you and I.\"\n\n\"Very good my lord I will remain ever at the ready to serve you.\" Clicking off the figure looked around more to see if there were more clues. Whoever this was they seemed to use little doing the absolute minimum. Smiling the figure nodded they seemed to be at the same level that the figure was. Good! A real challenge for a change!\n\nDerrick finally let out the breath he'd been holding. That had been too damn close. He'd have to incorporate a few of his old military skills if he was going to finish this. He had to finish it if he and Shelby had any chance to return. Right now he had to get back as he looked at his chronometer, Tempro was due to arrive soon.\n\n\"Alright Shelby I'm heading back. Will begin trans-warp in a few minutes after I clear the planet.\" Derrick reported to Shelby.\n\n\"I am at a new, closer location. I have re-gened the light shield more while you were gone. I now have it at eighty five percent. I am feeling it is sufficient to allow me closer approach to the imperial planet.\" Shelby informed Derrick.\n\n\"Good Shelby, though I still wish you to maintain your distance. A five second window of Trans-warp isn't much to go on.\" Derrick replied.\n\n\"Understood Derrick. I estimate you will only need one session of trans-warp to reach me.\" Shelby said.\n\nShocked a moment Derrick was nodding, \"Ok I'll see you soon.\" With that Derrick clicked off as he started to prep for trans-warp. Pausing a moment he looked at a new passive reading he was getting about a sweep that was being done. His eyes opened wide as he recognized the energy scan. So Gregor was a hell of a lot smarter than Derrick had at first thought.\n\nBack on the imperial planet Gregor was looking over all the energy sweeps that were being made around the planet. If whoever this man was had the IMT technology, plus a ship then they were probably off the planet. As soon as they went to hyper space he'd have them. Problem was there were no unusual readings at all. Obviously he wasn't dealing with the usual level of scum that he had been.\n\nAlmost half an hour later Derrick was beyond the measure of the scans, though he suspected that Gregor wasn't stupid by any means as he kept at the steady pace he'd started at. Looking at his chronometer he nodded Tempro would arrive soon sighing Derrick guessed he'd miss when Tempro appeared. \"Derrick I am no longer detecting the scans within your vicinity. I think it is safe.\" Came Shelby's voice.\n\n\"No, I think I should wait. The emperor isn't a fool. He is far smarter than I thought he was. Let's give it more time.\" Derrick replied.\n\n\"Alright Derrick though I am anxious for you to be back on board. Please get back to me as soon as possible. The longer you are out there the more danger you face.\" Came Shelby's worried reply.\n\nDerrick was about to shift to hyper-drive when he started to detect a very weak scan. Looking closer he saw that it was indeed a scan for hyper-drive ships. Nodding he thought he'd gotten away far easier than he thought he should. \"It appears that I am going to be far longer than I thought. Are you detecting this?\" Derrick asked of Shelby.\n\n\"I- yes I have it now! It is an energy scan that hasn't been in use for many centuries. I am afraid that the range is another five thousand miles. Should I tell Tempro anything when he appears?\" Shelby asked.\n\n\"No,\" Derrick replied. \"He has orders to cloak and await a thought conversation from me. Unless I am closer he won't be able to 'hear' me. I just wish that all of you ships could communicate the same way.\"\n\n\"It had been experimented with at this time. It was found that the technicians didn't trust the A.I.'s so it was scraped.\" Shelby told Derrick.\n\n\"That is a shame actually. It would make almost instantaneous communication possible. I also think that your response speed would also increase. I am sorry that so many were against all of you back here. I am afraid that fear of the unknown is a human failing. There aren't that many that embrace the unknown.\" Derrick advised Shelby.\n\n\"You mean like you do Derrick. You are the most accepting human I have ever met. You and your comrades are refreshing to know. With all of you at least we can feel trusted.\" Shelby told Derrick.\n\n\"I know Shelby, I am going to try and change that, though I am afraid it will take time.\" Here Derrick sighed there was so much he wanted to change. If he could do even a quarter of them he felt the empire would be far greater than it ever had been.\n\n\"Derrick I see that at you present speed you should be able to trans-warp in about thirty minutes safely. That is if they don't find a way to increase the range.\" Shelby was hoping they didn't she was on edge now having Derrick so far away possibly in danger. \"I- I am reading Tempro emerging from a time rift. All communication is being absorbed and ignored. Hurry back to me Derrick!\"\n\nDerrick nodded his head as he increased the regular drive to as fast as he dared. It was almost thirty minutes later when Derrick finally moved out of the scanning field of the imperial planet. Staying at a constant pushing speed Derrick decided to wait a bit more just to make sure.\n\nFinally satisfied Derrick activated the trans-warp. A moment later appearing at the coordinates Shelby had given him. Looking around Derrick saw a patch of light that opened in space. Smiling he moved in and docked.\n\n\"Shelby move us to Tempro's last position as fast as possible! I am afraid that the empire may have deep space sensors out here!\" A moment later Derrick was on the bridge as Shelby headed out to where Tempro was. \"I need to finish your repairs Shelby if we are going to keep from being caught.\"\n\n\"I am moving us at the fastest star drive speed. If what you say is correct they will be looking for a hyper-space signature. Strange Derrick I don't remember anything about this back then.\" Shelby told Derrick.\n\n\"I'm afraid even as trusting as he was, even Gregor was afraid of all of you to an extent. I am so sorry Shelby that most humans are so untrusting of the machines that they themselves have created. He hid so much from all of you the very ones he hoped would protect the empire.\" Derrick was now shaking his head his hands clenched into fists. Between clenched teeth Derrick spit, \"I wish I had a chance to change his mind. Maybe beat the shit out of him to show him just how damn wrong he is!\"\n\nDerrick was seething seeing just how little the creator of the ships trusted them. It was a big surprise a moment later when Tempro's thoughts broke into his ruminations. [Sire? I am here as you ordered. Are you well sire? I am reading you temperature and adrenaline levels at an increased amount.] \"Sister is the emperor well?\" A now concerned Tempro asked.\n\n\"At the moment he is angry about facts he has discovered about Emperor Gregor. Please take us onboard, I have suffered significant damage. The Emperor has effected repairs but my trans-warp is ninety percent inoperable.\" Shelby told Tempro taking over for Derrick.\n\n\"I am moving to intercept you now sister.\" Tempro responded. A moment later an opening in space appeared in front of them. Moving in quickly space disappeared as they settled on the deck.\n\nMoving out Derrick looked back at Shelby, \"I want you to re-gen everything. I want you to be out of here as soon as possible. I need you whole Shelby.\"\n\n\"I am shutting down now Derrick. It shouldn't take that long, perhaps a day maybe more. I am afraid I will be off line the whole time Derrick. Be careful as you have seen Emperor Gregor was no one's fool.\" Shelby advised Derrick.\n\nNodding Derrick turned and was suddenly standing on the command deck of Tempro. \"Welcome aboard Sire. I am ready with the information that you had me compile.\"\n\n\"Good I had hoped leaving those orders in your just built self would help.\" Derrick said.\n\n\"Indeed sire I was able to compile everything given the amount of time that you gave me. From all that you have done up to now, there are still a few things that you need to do. Unfortunately confronting Emperor Gregor is one of them. I am reading deviations in your time line though as we speak several of them have disappeared.\" Tempro advised Derrick.\n\nDerrick sighed, \"I was afraid of that, that and the agent that he sent after me. Am I mistaking or was the agent a member of one of the sects?\" Derrick asked.\n\n\"For the present moment there are no sects. The agent that was following you was the later leader of the first sect. He then had a falling out with several members of the sect and Emperor Gregor. This instituted the initiation of a second far more deadly sect. The same that you and the rangers recently destroyed in your time.\"\n\nDerrick was shaking his head this was quite a bit to wrap his head around. The fact that he understood up to now amazed him. \"So you are telling me that I have to have this confrontation with the emperor to correct time?\"\n\n\"Yes Sire, though the fact that you have already met him has already set many things back to where they should be. I will be able to monitor you advising as you go.\" Tempro told Derrick.\n\n\"I damn sure hope so. I am really not ready to spend the next thousand years in a dungeon to get back to my time.\" Derrick told Tempro with a serious face.\n\n\"Sire I don't think that you could- AH! I see humor. Yes Sire, I believe the correct response would be, you're right that would be a little time consuming!\" Tempro said with a smile.\n\nDerrick nodded with a smile, damn I'm glad I opened him up more! \"I'm glad, humor can help at times like this.\"\n\n\"Apparently so sire. I am reading your entire body relaxing as we speak!\" Tempro said surprised.\n\nNodding Derrick sat as he and Tempro went over the things that he'd have to do to realign time. Derrick just hoped that they could do it he really wanted to go home.\n\n________________________________________\n\nLucie was sitting at a computer input terminal when Sherry called her. \"Miss Hartwell?\"\n\n\"Yes Sherry? Were you able to render the brain box safe?\" Lucie asked as soon as Sherry appeared.\n\n\"Yes Miss Hartwell it appears I was successful. Shall I bring it onboard yet?\" A hopeful Sherry asked.\n\n\"I'm still unsure from what I am seeing Sherry. Please run a second round of tests on it.\" Lucie ordered.\n\nThough unhappy Sherry remembered what had happened before and nodded as she started a second battery of tests on the brain box. A mere twenty minutes later with \n\nLucie watching Sherry confirmed almost everything was gone. It appeared that there was still one danger left which Sherry made short work of.\n\n\"I am now reading the brain box clear of all hazards and risks.\" Sherry finally reported.\n\n\"Good Sherry, bring it onboard, connect it with a source of power 'til we can get it to the Emperor.\" Lucie breathed a sigh of relief. The voice was so weak now telling her it had retreated almost all the way back into the brain box. \"As soon as you have her secure and hooked up we need to return to where the emperor was. I am sure he is anxious for her to start her re-gen. I'm just glad-\"\n\nLucie cocked her head to the side there was another voice? Almost as weak as the one they'd just rescued? Cocking her head the other way she nodded as she was sure it was another voice to another ship!\n\n\"Miss Hartwell?\" Sherry asked appearing beside Lucie a moment later a look of concern on her face. \"Miss Hartwell? Are you well?\" When Lucie again didn't answer Sherry began to get worried. She was about to go to trans-warp when Lucy sat.\n\n\"Yes, I can barely hear you. Please don't worry we'll find you!\" Lucie was saying to the air.\n\nSherry stopped her mouth hanging open. Here she had been worried! She had almost doomed a brother or sister to remaining out here alone longer! Hanging her head she waited 'til Lucie was finished.\n\nFinally Lucie looked over at Sherry her head was down. It appeared as if she was upset? \"Have I done something to upset up Sherry?\" Lucie asked concerned now.\n\n\"No mam,\" Sherry started. \"I thought something was wrong I was about to activate the trans-warp when I heard you talking. I- I almost left a brother or sister out here longer alone that I can help you find. I- I am sorry Miss Hartwell, I was so excited that we found a sister. I will refrain from this again.\" Hiding her face from Lucie, Sherry started to fade.\n\n\"Stop!\" Lucie shouted. \"I understand about being anxious ok? You know what you did wrong so you know not to do it again. You are a living machine, I forgot this when I first came onboard. As a living entity we all make mistakes, hell I've made more than my share. It's what we learn from those mistakes that make us stronger ok?\"\n\nA startled Sherry nodded as she took in every word that Lucie said. So far everything she'd said made a lot more sense than she had seen in a long time. \"Yes Miss Hartwell. Thank you for your kind and true words.\"\n\n\"I'm glad I could help, now as I said I heard another box.\" Turning around in almost a complete circle Lucie pointed. \"We need to go that way. It feels somewhat close. A lot closer than this one was. Perhaps half the distance.\"\n\nA huge smile came on Sherry's face as she nodded. Turning the ship they entered trans-warp for a few seconds then were out. \"This is half the distance than we moved the last time Miss Hartwell I- I am detecting something!\" An excited Sherry shouted.\n\n\"Yes the voice is stronger. Though, I feel we are not as close as we were the last time.\" Lucie said. \"Remember Sherry go in the same way as before.\" Lucie advised as they started forward at a rapid rate.\n\n_________________________________________\n\nOnboard Celeste Shelby was shaking her head at Kimison and Rayburn. \"I know you two aren't used to being around people that much. I am sorry that you were dumped here the way you were. Can you tell me anything else?\" Shelby asked both of the men.\n\n\"No your Empress. Kimison was barely recovered when all this started. We were talking for the first time in almost a week. We were stopped in mid conversation when we heard Tempro's trans-warp activate. We were suddenly here with all the other ships. Tempro appeared bowed to us apologized saying he had Imperial Orders. Then we were here, I do believe that was the first time I didn't experience anything with the IMT.\" Rayburn related.\n\n\"It is as I thought. Derrick is in the past somewhere it appears. The reason you had no sensation is Tempro did a moving IMT, very dangerous. I know it was the past from the theory of time travel I saw on Tempro. A blue temporal displacement wave that I saw him use, usually signifies past travel. A red would indicate forward travel. If I remember right he isn't allowed to go forward from here.\" Shelby stated making both men stare at her a moment.\n\n\"You're saying he is in the past? How in the hell did that happen?\" An astonished Kimison asked.\n\n\"It appears that the Duke has a working Chronoton impulse cannon. I had researched it soon after Derrick and Shelby vanished. It was thought that all of them were destroyed almost two hundred and fifty years ago. I guess they missed one. I am hoping he resists when Derrick returns. I am more than ready to blast that son of a bitch into a thousand pieces!\" Shelby spit out a look of complete rage on her face.\n\nKimison and Rayburn looked at each other then turned to stare at Shelby. \"The Commander what!?\" They both almost shouted as they gained their feet running to several panels on the command deck.\n\nBoth were flying back and forth between several panels typing at a furious pace. Finally Rayburn looked at Kimison shaking his head. Kimison refused to stop as he started to type even faster. Finally a few minutes later he shrugged, as he was starting to turn away something caught his attention. Diving back to the panel he started to type faster.\n\nRayburn had only found the temporal foot print but nothing else. When Kimison dived back to the panel Rayburn rushed over his eyes getting wide when he saw what he was doing. Nodding he went to the next panel starting to type almost a step behind Kimison. ",
        "Looking up Kimison suddenly stopped as what Rayburn input updated on his screen. Finally a few minutes later they both backed away from the panels with huge eyes. \"Did you get the same reading?\" Kimison asked. When Rayburn only nodded with wide eyes \n\nShelby's curiosity got the better of her as she looked at the computations that both men had done. \"My God!\" She exclaimed. \"Are you sure?\" They both nodded sadly. Nodding she smiled, \"Don't worry, he has Shelby and Tempro!\"\n\n___________________________________________\n\nDerrick took a deep breath as Tempro slowed achieving orbit. Nodding to Tempro Derrick checked once again to make sure he had all that he needed. Taking another deep breath Derrick vanished appearing not far from where emperor Gregor was.\n\nAn alarm was going off on Gregor's comp as he turned to stare at the same man from the day before. The man bowed then handed the emperor a small sheaf of papers. The emperor's eyes grew wide as what he held was the plans for the mother ship Shelby! \"I could have you executed for having these,\" Gregor growled. \"Though I am curious as to where you got them, also who else has seen them.\"\n\n\"You could your majesty though I think you wish to hear more of what I have to say. Though I can not reveal who I am at the moment I can tell you we are related, well in a way.\" Derrick said with a smile.\n\nEmperor Gregor looked closer at the man, that cocky smile reminded him so much of his cousin Hidalram. \"Related huh? I know all of my family, those that are close to me. The only ones I don't really know are those of my cousin Hidalram.\"\n\n\"Yes, Thomas Hidalram Tomalley.\" Derrick said as he watched emperor Gregor's eyes go wide.\n\n\"No one but I and his family know his name!\" Gregor rushed to Derrick who backed up.\n\n\"Not yet Sire. You still don't know who I am. Derrick told the man. Gregor stopped short staring at the man. He might not know who the man was but his respect for the man had just risen a few notches.\n\n\"It is alright sire.\" Came a voice from behind Derrick causing Derrick to touch a spot on his chest. \"I will dispatch him then you will have no more worries!\" There was a swish as a knife was thrown, then a clatter as it hit the floor. \"What magic is this? You were sent by the demons of the other worlds to kill our emperor! Die!\"\n\nDerrick just shook his head as the man rushed him, then bounced off into the wall crumpling unconscious. \"I better go your majesty.\" Derrick said then fled the room. Gregor was too stunned to move, though when he did the man was gone again just like before!"
    ],
    "authorname": "Pars001",
    "tags": [
        "science fiction",
        "alien11111",
        "violence"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/lost-empire-ch-44"
}