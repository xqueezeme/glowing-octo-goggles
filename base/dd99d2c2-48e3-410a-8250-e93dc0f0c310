{
    "title": "Dax & Lulu: Married Ch. 02",
    "pages": [
        "Hello Party People -- I tried my damndest to get this in before years end and just could not get it done; it has been a crazy bumpy holiday ride, distractions from every direction. \n\nBesides which I personally hate reading a two or 3 pager and didn't want that for my readers.\n\nTurns out that a perfectly respectable 13 pages in Word = 2 online pages. The struggle is real y'all. \n\nAlso, a word of caution for would be thieves: I have the printed and original hard copy of the first story originally written in 200? printed out and have a witness as to when I originally wrote said story.\n\nOn this very site I've read from numerous authors about being ripped off and finding their stories posted elsewhere. Its caused more than a few of my favorite Literotica authors to cease posting. Which is a real shame. \n\nIf I see or hear of any of these stories out there without my permission, I will bring the swift and full fury of the law. \n\nHappy Reading!! \n\nDax & Lulu Ch. 2\n\n\n\nIt's always better on holiday\n\nSo much better on holiday\n\nThat's why we only work when\n\nWe need the money -- Franz Ferdinand \n\n***************\n\nDax is up to no good. His smile was sly this morning as he got me up bright and early, fixed us a light breakfast, and promptly packed me off to the spa to be coiffed, waxed, massaged, polished and buffed to within an inch of my life. Promising me an excellent meal upon my return. \n\n\"Go take care of yourself today b\u00e9b\u00e9.\"\n\nIndeed, when I walk in the door five hours later, the house smells divine. Tins and tins of my new favorite Puerto Rican takeout are in the oven on low - nice and warm and waiting for me. \n\nHow hungry does he think I am, there's enough here for several people. \n\nNevertheless I open the containers and quickly gobble a few spoonfuls of pigeon peas & rice, suckling pork and Arroz con Pollo before going in search of my loves.\n\nOn our bed I find the three of them asleep. Him in the middle propped up asleep flanked by the two. A large hand on each little back, their chubby cheeks resting on his stomach. \n\nBorrowing a page from his book, I snap a pic with my phone. My new screen background. \n\nGoing into my dressing room I lock the door and sit down to pump. Jacinta thought of everything. This is a much better pump than the one recommended by the hospital lactation nurse. I am now down to a solid 15 minutes of pumping versus 30-35 with the old pump. I'll be sure to tell Eddie and Lili about this if I can get up with the two of them.\n\nWhile I wait, I scan emails on my phone. \n\nSomething is in the air. My birthday is in 2 days and except for MM and Uncle Junie everyone seems to be too busy, missing in action or unable to converse for extended periods. Can't even get June on the phone. June is always available.\n\nWho in the hell is ringing our doorbell like crazy? Looking down through the living room window, there look to be like 20 people on my stoop! \n\nLili, Max, Jackson and baby Izzy-Lou; Eddie, Lenny and baby Paco; Uncle Jack & Arlene; Hanni and Relia; MM & Junie; June & Riley; Matt & Gertie; Antreas & Ariadne, and Byte! Oh my goodness, where on earth are we going to put a dog?! Our family, Hell just about everyone is here too.\n\nWell it's not like we don't have room.\n\nOpening a window, I lean out to address the crowd. \"We don't want any.\"\n\n\"Let us in Aunt Lou!\" Jackson grins up at me. My babyfriend is now a snaggle-tooth, and I missed it!\n\nI can hear Byte barking as I run down the stairs. Questions are just whirling in my head. Mainly, how in the hell are they all here at the same time? \n\nOpening the door I am instantly surrounded as they crowd right in. I don't blame them, its August in NYC and it is broiling out.\n\nIt's only been a few weeks but I have missed my family.\n\n\"What are you people doing here?\"\n\n\"We came to be obnoxious tourists.\" Says Uncle Jack.\n\n\"We came to party Liebchen. Besides, we are still on our honeymoon.\" Says MM looking at her Junius adoringly.\n\n\"Well considering the group size, that must have been some plane ride not to mention the cab here.\"\n\n\"Dax got us a private plane here.\" \n\nMy husband slips his arms around me and whispers, \"Happy almost birthday, b\u00e9b\u00e9.\"\n\nJune enthuses. \"It was fantastic Lou! You should have seen it, I am sure people thought we were like royalty or celebrities or something.\"\n\nRiley gives an exaggerated eye roll. But June continues:\n\n\"No lines, no crowds, no waiting, and best of all, no stress! Showed up to the private terminal, and went from parking to take off in 15 minutes. No chaos, just ease and convenience. No cattle-call boarding and, planeside luggage service. Complimentary beverages and snacks, Champagne! \n\nFirst class-style legroom, Riley wasn't cramped at all; Comfortable leather seats and full flight attendant service. I may never fly commercial again. \n\nOur baggage was waiting planeside when we landed. 5 Shiny black mini-vans brought us straight here. We were in Richmond an hour and a half ago. We stopped at JFK and picked up Antreas, Ariadne and Gabi and kept right on going.\"\n\n\"Fantastic. But where is the luggage?\" Asks Lou.\n\n\"I had them bring it in through the other entrance b\u00e9b\u00e9. The drivers were nice enough to bring it up and I got us some domestic help for the weekend and its being unpacked and put away right now.\"\n\nDomestic Help?!\n\n\"You need a real job. You have way too much time to get up to all manner of things around here, and this place is too big to keep a proper eye on you.\" \n\nLou eyes him with mock suspicion. \n\nI love how thoughtful he is, but seriously, Dax is out of control with the planning, doing and executing.\n\n\"What can I get you folks to drink?\" Asked Lou.\n\nBefore anyone could reply, several wait staff stepped forward with various trays of refreshments. Everyone drifted to the deep green sofa in the salon. \n\nLou turned to her husband.\n\n\"Dax, sidebar.\"\n\nLou jerked her head towards the foyer.\n\nDamn it. He gave a tight grin to some of the more curious folk.\n\n\"You know I do not like strangers in my home. What the hell?\"\n\n\"I know baby, but it's just for a few days. I want you to relax and not have to worry during your birthday.\"\n\nI know he means well but . . .\n\n\"Just keep me in the loop on these things. Ok?\"\n\n\"Yes, dear.\"\n\nHe kisses her cheek and hugs her.\n\n\"Mmmmhmmm.\"\n\nDespite the grandeur of their new home, Lou did not want to become those people. Her plan was for them to remain laid back paying no mind to formality whatsoever. A little impossible to do if strangers were all over the place.\n\nSpotting Matt across the room with another surprise, Dax beckons him over.\n\n\"Now keep an open mind, because I have another surprise.\"\n\nMatt hands him a cat carrier.\n\n\"Zora! What are you doing here girl?!\" The delighted smile is instantly back on his wife's face.\n\nOnce freed, Zora zoomed over to butt her head against me in greeting, but immediately returned to Dax and after weaving through his legs, fell down paws up for a belly rub, writhing and purring with shameless satisfaction.\n\n\"Zora, Nooo! Get up from there! That is a disgraceful display. What have you done to my lovely wild girl? You tamed her?!\"\n\n\"Just like I did her mother. I petted and fed her just so, and BAM! Just like that it was over. Pussy is pussy - if you feed it and stroke it and treat it just right, it will follow you and do all manner of things.\"\n\nHe elbows Matt who howls with laughter. \n\nThankfully the elders are in the kitchen\n\nLou blushes hard, but it wears off quickly.\n\n\"Is that right?\"\n\n\"Yep.\" Said a smugly grinning Dax.\n\n\"I tell you what Mr. you had better retract that statement quick fast and in a hurry, or you will be spending all kinds of time with Ms. Zora.\"\n\n\"Come on now, Lou.\" Dax gives her a little goose and a kiss.\n\n\"Humph. Your comedy routine is going to cost you dearly. You will be riding the sofa with nothing for company but Palmina and Fistina and Zora looking on. Keep it up.\"\n\nSide eye from her.\n\n\"And you will be right there with me. We have an arrangement.\" \n\nThe arrangement is that we sleep in the same room, no matter what else is going on.\n\nLou gives him another saucy look. \n\n\"Yeah? Sounds like that falls under a marriage statute, you should have got that in writing.\"\n\n\"Verbal agreements are binding, Lou.\"\n\n\"You'd have to prove it, you cheeky bastard or get me to admit to it and there were no witnesses. You got no papers, no recording and no tape.\"\n\n\"Fucking Lawyers.\" He grumbled.\n\n\"A brave effort.\" \n\nShe gave him a small consolation kiss before drifting off with the ladies to another area, leaving the men to talk. \n\nThey marvel at the new home.\n\n\"Dax did all this?\" Asks Eddie, looking wildly impressed by everything.\n\n\"Yep, pretty much. I added a few touches here and there but this is pretty much all him.\"\n\n\"Well, damn. Is there anything he can't do?\"\n\n\"Laundry. The man shrank several of my favorite sweaters. There were some very warm and well-dressed street urchins roaming Richmond last winter as a result.\"\n\nWhether or not Lou is in earnest about being upset behind the laundry incident is questionable as she is all smiles, fondly recalling the shrunken sweater he had her wear over her swollen belly while riding him to furious completion that Christmas morning on the living room sofa wearing nothing else but her socks, as the tree lights twinkled happily in the background.\n\nThe gray alpaca cashmere sweater he picked out in London.\n\nBirthday Morning\n\nHer 31st birthday dawned clear, bright and hot. You could virtually see the heat pushing against the windows from the outside. \n\nShe turned over and found herself alone in bed, no Dax in sight. No doubt off preparing more surprises.\n\nLou took herself to the bathroom and washed up before sitting down to pump. A quick shower and she ventured out to find her family already assembled at the long dining room table on the second floor.\n\nThey've all made themselves at home more or less.\n\nJackson is chasing the animals or rather a very patient Byte as Zora has gotten away.\n\nLili and Eddie are discreetly feeding their two under cover of Aurelia's exquisitely woven linen coverlets, and speaking with Ariadne.\n\nDax, Lenny, Matt and Uncle Jack are in deep conversation about god knows what.\n\nAn evidently very jetlagged Harry is passed out in one of the sun chairs overlooking the backyard.\n\nAntreas is making those fabulous greek potatoes with calamari & fried oysters.\n\nJunius and MM are helping with breakfast but mostly bickering amongst themselves.\n\n\"Stop pestering me and close the frigidaire Junie. You forgot last week and we had to replace an entire weeks' worth of groceries.\"\n\n\"It's not a frigidaire 'Nelle.\" \n\n\"You know exactly what I meant, now close it.\" Says MM curtly.\n\nShaking my head, I help myself to a large glass of guava juice before venturing to the stove to try helping Antreas who shoos me away.\n\nI manage to score some bacon and fruit before snagging my nephew for cuddles as he whizzes by.\n\nThis is what I call a birthday, no phone calls to make, everyone, almost all of my very favorite people in one place. \n\nUncle Eugie and his wife as well as Milton and the Mrs. should be here by the time the party starts. \n\n-----------\n\nFrom the private backyard the mouthwatering and tantalizing smell of roasting meats wafted through the neighborhood.\n\nJacinta, with the assistance of John Wayne had arranged a Brazilian birthday feast of Churrasco, Grilled baked pineapple, Pao de Queijo, Hearts of palm salad, Feijoada, Moqueca, and Brazilian braised pork with passion fruit and peppers. \n\nWithin and without, the food, tropical flowers and foliage were arranged accordingly. The soothing sounds of Bebel Gilberto were being sound tested and set quite a mood.\n\nSatisfied finally that everything was fastidiously perfect he went and found Lou in her office.\n\n\"I still can't believe it. Married with children, the original bad girl herself.\" \n\n\"I know right?!\" \n\n\"Alright Duchess, where are these babies you made? I have got to see this. I'm betting they're little owl eyed bullfrogs if the voices on you two are anything to go by.\"\n\n\"My babies are not mutants, thank you very much! I may be biased, but they are absolutely gorgeous, just you wait and see. Brace yourself though, they're roly poly - big babies, the pediatrician has said they are already to start on solid foods and they have taken to it with gusto. They sleep the night through now thank god.\"\n\n\"Here they are.\"\n\nTwo tiny caf\u00e9 au lait, red haired cherubs quietly sleeping in their respective cribs. John Wayne looked completely enraptured.\n\n\"You know, I've never really seen a baby up close and personal, they're spectacular Lulu,\" he said in awe. \n\nHe pulled up a rocking chair to watch them and just like that he was a goner.\n\n\"Are they going to wake up soon?\" He asked excitedly.\n\nLou laughed softly. \"They should. If not, I usually wake them so that they sleep the night through.\"\n\nAs if on cue, April yawned, stretched and wriggled before opening her eyes.\n\nLou caressed her little tummy. \"Hello baby girl. Hey how ya doing? We've got company.\"\n\nScooping her up quickly for kisses and cuddles as she continued to wake, Lou rocked her and kissed her hair. Still laying on Lou's shoulder, April turned her head and fastened large eyes on John Wayne and smiled a dimpled grin.\n\nHe gulped. \"Can I hold her?\" He whispered reverently.\n\nLou chuckled a little. \n\n\"Of course.\"\n\nShe carefully handed her over.\n\n\"What do I do now?\"\n\nMildly flustered, John Wayne froze.\n\n\"Nothing much, support her back and keep a firm but gentle grip, that one is a wiggle worm, but that's about it.\"\n\n\"Like this?\" \n\n\"Yep, you've got it.\"\n\n\"Oh my god Lulu, she's amazing. She smells so good!\"\n\n\"Yeah, they smell good now, stick around, you might come to feel differently on that score.\" Lulu gave a rueful chuckle. \n\nHe sniffed her little head, fingering the soft springy curls.\n\n\"I'm your Auntie/Uncle Paul -- yes I am little diva.\" He crooned.\n\nApril responded by noshing on his extravagantly colored silk tie. He took it off and gave it to her, to Lou's amazed amusement.\n\n\"Totally worth it.\"\n\nA small cry and August was quickly scooped up as well to get acquainted with Auntie/Uncle Paul.\n\n\"Oh my god Lou! It's like you cloned yourself -- twice, like two little mini-me's!\" \n\nShe got a picture of the three with an absolutely enraptured John Wayne in the middle.\n\nJohn Wayne helped her change them and watching what she did with April, did the same for August and for a novice he was very adept at it.\n\n\"I don't know Wayne, be careful you don't get baby fever; it can put a dent in your social scene man.\" \n\n\"I have been feeling like I want to procreate. I am glad you have these; maybe it'll shock me to my senses.\"\n\nWatching him with her two, it looked as if he were being drawn further and further in. \n\nHe helped her get the two ready for the party and watched them while she got ready.\n\n-----------\n\nDinner Party\n\nJohn Wayne outdid himself. The food, the music, everything was perfect, nothing to do but glide down the stairs and into the party.\n\nThe women and men had more or less grouped off. \n\nThe mothers discussed their babies and growth percentiles and favorite pregnancy foods. The men talked sports. \n\nEventually though conversations on both sides turned to those of the opposite group.\n\n'I love the man, but damn', seemed to be a common refrain amongst the women.\n\n\"This is a great party, but Dax is all over the place, man. It's a good thing this place is so huge, some days it's all I can do to find a spot to settle and work in some relative peace and quiet without him bothering me. The man needs to find another hobby, instead of being after me all the time.\"\n\n\"Those Wilde men are cut from pretty much the same cloth, if they aren't after something, they are after you. \n\nRelia and MM chuckled and exchanged knowing glances.\n\n\"Still?\" asked Eddie incredulously eyes as big as saucers.\n\n\"Oh, yes.\" Said MM with a weary nod of her head.\n\n\"I don't know what sadist invented Viagra, but I'm not quite sure I wouldn't thank them profusely or shoot them on sight! I am leaning towards the latter, I think.\" \n\nEddie and Lulu gave each other side eye, both laughing and grimacing simultaneously. \n\nLili and Relia more or less gave the same advice.\n\n\"Some times you just have to kick them out.\" Said Lili emphatically with closed eyes. \n\nRelia nodded in agreement, \"Yes, not forever mind you - because life would be dull without them, but yes, absolutely some days for your own peace of mind sending them out of the house for a few hours is the only way to have a moments peace.\"\n\nLooking across the room at her husband she was intrigued to see John Wayne surrounded by the straight men who seemed to be hanging on his every word.\n\nThe word \"Astroglide!\" spoken loudly and in unison by Virgil and John Wayne got laughs and head nods from the rest of the men. Matt seemed to be taking notes even.\n\nIt also got Lou's immediate attention.\n\nInterest piqued and suspecting something undoubtedly raunchy afoot, Lou decided to see what was going on.\n\nThe group scattered at her approach as she found her way to Dax's side and took in the scene. \n\nMost interesting was the fact that Virgil and John Wayne seemed to be hitting it off. \n\nPersonally, Lou found Virgil a little standoffish. John Wayne however, seemed entranced and actually got him to laugh and it was wonderful to see. The two were really cracking up.\n\n\"Dax,\" Lou nodded subtly in their direction \"You might want to warn your friend. He's being romanced whether he knows it or not.\"\n\n\"Oh, he knows exactly what he's doing. Trust me.\" Dax gave a wry smile.\n\nLou's eyes widened. \n\n\"Really? Still waters run deep, he did not trip off my gaydar.\"\n\n\"Years of hiding in plain sight in the military will do that for you, or rather to you depending on how you look at it. Hell, if I hadn't run into him in a certain place down in the Quarter back home, I still wouldn't know. \n\nHe was initially embarrassed, angry and scared, but once he was reassured of my silence on the subject he calmed down. He's a great friend and has had my back in dangerous places on many an occasion. When you travel to places to fight people it gets pretty close. \n\nThe man is like an extra brother.\" \n\n\"Well that settles that. I suppose I have to love him at least a little bit.\" Said Lou. \n\nDax kissed his wife's temple and stroked her back in their favorite spot.\n\nLulu gasped and reaching back quickly and tightly gripped his wrist but not before her eyes rolled back in her head a bit.\n\n\"Come on man. Don't do this to me right now. I cannot think straight when you touch me there.\"\n\n\"Good, I don't want you thinking right now.\" He growled in her ear.\n\nManeuvering her to a corner, Dax wrapped his arms around her and with his free hand stroked the spot again, before kissing her cheek and neck. \n\n\"There's a room full of people Dax.\" \n\nMy husband is a goddamned exhibitionist - he just does not care. Lou grunted and panted in aroused annoyance. \n\n\"Yes, and they know that we love each other -- truly, madly, deeply, always.\" He murmured.\n\nHe punctuated each word with a kiss and just like that her rising pique evaporated. She gave in and kissed him back for all she was worth.\n\nIt was Dax who finally broke away. Clearing his throat.\n\n\"We should probably continue this later, unless you want to step away for a bit . . .\"\n\nWatching as Lulu bit her lip undecidedly, he chuckled.\n\n\"I promise to kiss and make it better later.\" \n\nHe said before kissing her nose and arranging her clothes a bit before guiding them out of the corner. ",
        "Not as much dancing this year. Everyone gorged himself or herself on the amazing food to such an extent that it just wasn't feasible for several hours afterwards.\n\nThis year Lulu decided to bestow birthday gifts on her guests. She had the wait staff (which she grudgingly privately admitted were indeed handy to have about) -- leave envelopes and packages in rooms to be found after the party.\n\nHer husband's gift she decided to make public. A Les Paul basswood guitar, a beautiful rarity. He immediately set about tuning it and playing it for their assembled guests.\n\nUnder MM's and Oncle Junius' expert tutelage and after soil testing for possible vegetable planting, Dax had transformed the back yard into a small but verdant paradise and so he presented his bride with a highly fragrant bouquet of old fashioned double-bloom David Austin Roses planted and handpicked by himself, along with the requisite small jewel-sized package. This one in Tiffany Blue.\n\nYards delicate gold chain and diamonds emerged when Lulu opened the box. \n\nHer eyes bulged. \"Wow, Dax!\" She bit her lip and smiled.\n\nThere was a collective gasp amongst the women. And groans from some of the men.\n\nDax whispered in her ear. \"I have a specific way I'd like you to wear this. Later.\" \n\nHis words and voice were private and for her alone and she shivered in anticipation of what he might possibly have planned. With a gentle kiss to her temple he backed away as she hid her face in the flowers.\n\n***********\n\nShe noticed the lovely Jacinta and Harry talked and laughed together. It was wonderful to see him having a good time and not looking her way with longing.\n\nLou'd found herself in the new position of giving love advice to Harry late last night. He was stuck in Charlotte due to a summer storm and unable to make it in on time and called her so as not to alarm everyone but let at least someone know where he was. \n\n\"So . . . have you seen 'Cinta around there lately?\" Harry asked casually. \n\n\"Cinta? You mean Jacinta?\"\n\n\"Yeah, she's been like a dervish around here. You should have seen how she had these big burly men doing her bidding, they were practically eating out of her hand and falling over each other to follow orders\" Said Lou with no small amount of admiration.  \n\nHarry groaned in mild irritation.\n\n\"I know that sound all to well, Harry.\"\n\n\"What?\"\n\n\"Don't you 'what' me, you know what.\"\n\nHarry called frequently for status reports and talk always turned to Jacinta somehow. This was more than a collegial interest. Harry liked Jacinta. \n\n\"You are more than a little interested in that woman.\"\n\n\"We don't have to talk about this Lou.\"\n\n\"We don't but word of advice Harry, If you like the chick then fuck the drama and ask her out already. Make your move, roll the dice and take a chance already. Otherwise she's fair game for all. And believe me the men they are a sniffin' around her.\n\nDon't be too punk ass to make a move and then throw the mother of all shit-fits when someone else dares to ask her out because you liked her first. Do something about it.\"\n\nAdvice and wisdom from 'the one that got away'.\n\nLou had a valid point though. And so, he'd decided to make a move and it seemed to be going well.\n\nLou raised a glass of champagne in their direction and Harry graciously nodded and smiled her in return. He looked at peace.\n\nJacinta noted the exchange and was curious about it, but his attention was immediately upon her again and she found herself completely engaged.\n\nUpon originally meeting Harry a year ago Jacinta was put off by the large man with his dour expression and taciturn yet polite manner, but he's since come out of whatever funk he was in and has turned out to be absolutely delightful.\n\nHe'd taken her for a spin around the dance floor and she'd found, to her astonished delight, that he was an excellent dancer and moved with a classic grace for so large a man. He introduced her to his parents and Lou's siblings fairly gushing over the way she'd furnished the new home and set up the party. \n\nVery much liking the feel of her small hand enveloped in his, Jacinta was getting a certain vibe and felt excitedly curious to see where it would lead.\n\n-----------\n\nThe guests are gone. Auntie/Uncle John Wayne is happily ensconced in one of the guest apartments watching the babies, knitting and cooking up a storm. Dax and Lou are alone.\n\nLou watches her husband from the doorway of their library. We have chosen our spots in the house more or less and this seems to be his.\n\nThat's right ladies, eat your heart out.\n\nAt 42 my Dax is still one beautiful piece of man, impressively handsome and sexy as sin. \n\nFrom his, silken dark brown hair shot through with ever more silver, to his strikingly strong and handsome face with those huge grey-green eyes, the well-trimmed short beard, the broad shoulders, muscled chest, flat firm stomach, his long and strongly muscled thighs, flanking that considerably large dick, his well-formed long legs dusted with dark hair, right down to his toes... the man absolutely does it for me.\n\nHe works out like he's training for the Olympics. I made the mistake of calling him Heavy D during the pregnancy.\n\n\"I'm getting fat?!\" \n\nDax sounded so truly and comically horrified. I remain amazed that I didn't howl with laughter.\n\n\"No! No baby, you're just filling out a little.\" \n\nMore or less feeding him the same patronizing bullshit line he'd been feeding me of late. I even caressed his stomach the same way he did mine. Though I genuinely loved the extra weight on Dax, I couldn't resist ribbing him a little. \n\n\"I like it. We can be pregnant together.\"\n\n\"Oh hell no!\"\n\nMmmhmmm figures. I guess not all of us can take it.\n\nHe jumped right up and went for a run. Hired a personal trainer the next day and began limiting himself to my extravagant meals 2 days a week instead of 7.\n\nHe has since come back to my table full time though, my food is just too good to leave alone he says.\n\nBalancing it out with portion control and more weights in the gym and some new cycle training regimen. Swimming and weights almost every day. It has definitely paid off though because, damn. My husband is hot! Not muscle bound, just lean and hard.\n\nWhat on earth is he so engrossed with that he doesn't see me standing here salivating over him?\n\nEveryday more books arrive. I thought I liked books, but he is on a tear. \n\nA picture book?\n\n\"Hey baby, what's up?\"\n\n---------- \n\nDax quickly put away his book, or so he thought.\n\nLou pulled it out of hiding and proceeded to look through it.\n\nHe face planted, hiding his face in his palm, waiting for the explosion. After a few moments of silence, he risked a look.\n\nLulu was turning the book this way and that, looking . . . interested?\n\nHe studied her.\n\n\"From an artistic standpoint its beautiful work. I am curious though just how feasible it would be to actually do.\" \n\nDax was unable to mask his shock.\n\n\"What? I know who I married. I'm glad you are so outside the box. I love it. We can absolutely try things Dax. We may as well while we are both still limber enough to do so.\"\n\nHe sat there gaping and thinking perverted thoughts, not knowing where to focus first as he took in her mouth, waist, crotch, legs, breasts and finally her laughing eyes again.\n\n\"You are such a pervert.\"\n\n\"But you love me anyway.\"\n\n\"You know I do. You, Mr. are my favorite pervert. Besides, I'm secretly a perv myself.\"\n\n\"Not a secret Lou.\" Dax deadpanned, with a small shake of his head.\n\nFlipping him off and sticking her tongue out at him, she came around the desk and sat on his lap. Smiling at him all the while.\n\n\"So Mr. Wilde, just what did you have in mind for my annual? Pillaging, plundering, bondage, toys, ravishment?\" Her eyes got wider and wilder as she said each word. \n\nI had to laugh at least a little, her blatant greed for me somewhat eased my guilty conscience.\n\n\"I know how you like dominating me, maybe even hurting me just a little, just to make me feel it.\"\n\nLulu kisses my dimple and strokes my hair. My god, she sees me and still loves me.\n\n\"Remember you said that I would never be neglected? I want that for you too. I don't ever want you to feel compelled to seek pleasure elsewhere.\" She murmured.\n\nIf she were to by some divine fantastical miracle grant him Carte blanch, Dax resolved to tread carefully. He wouldn't indulge in rough forceful sex with her, despite her begging for it. \n\nLulu was simply too curious and trusting to understand just what she was asking of me. \n\nNo matter how tempting the thought of spanking her fat, juicy bottom while speaking hot, filthy words in her ear . . . eating her out for hours. Using her mouth and throat. Having her ass again. Her tied up and vulnerable as I do diabolically raunchy things to her. Those breasts wrapped around my shaft as I torture her nipples.\n\nI can't do that those are for the babies. And just like that I'm bought back by the fact that she's my wife and the mother of my children.\n\nWatching his reluctance as he warred with himself. Still seeking to further expose the unspoken, she continued.\n\n\"Does it not occur to you, that I like it, what you do to me?\"\n\nHer slow and deliberate soul absorbing kisses gradually ate away his resolve. He rested his forehead against hers. She's trapped me, how in the hell am I supposed to refuse her. \n\nDax sought to be all of her fantasies, just as she was the embodiment of all his desires. He loved nothing better than fulfilling and indulging all her wishes. But damn it! He groaned.\n\n\"Tell me. Whisper it.\" Lulu bent her head towards his.\n\nIn a rush of hushed words, he made confession. \n\n\"I wanna make you come until you cry.\" He finished tensely.\n\nLulu shivered, delightful frissons of anticipation running through her. They made out for a while and then made plans.\n\n------------\n\nA clear and perfect drop of sweet dark honey held in a shaft of sunlight is my wife suspended and held aloft - caught up in creamy white ropes of braided silk.\n\nFace serene, arms folded behind her back, a series of well-spaced, ornate knots linking them together. He back gracefully arched, chest thrust out.\n\nOne set of stress relieving ropes supporting her upper back, gathered above and beneath her thrust forward breasts, accentuating their ripe round fullness, the ropes met in the center of her chest and looped into the rope that extended from a well secured ceiling hook centered directly above. \n\nRopes descend again through the two remaining ceiling hooks so that her knees are individually hitched wide and well apart and her secrets fully exposed.\n\nHmmmm . . . I distinctly told her not to take away my fur. She'll pay for that. \n\nSunlight on the soles of her arched feet making her jewel colored toes look translucent.\n\nThe height is perfect.\n\n\"Are you comfortable baby? \"\n\nI don't want to hurt her and will be beside myself if I chafe or mar that lovely skin.\n\nDax stroked her waist encircled twice by his latest gift. Lulu adorned in nothing but diamonds.\n\nNodding slowly, she's drifting somewhere.\n\n\"You will tell me if you feel strained or tired, yes?\"\n\n\"Yes.\"\n\n\"You are quite beautiful like this Lulu.\"\n\nThe ropes offered up her tender swollen breasts like a sacrament. The sublime temptation of her dark nipples just begging to be kissed, suckled, consumed.\n\nHowever, there's still the matter of her disobedience.\n\n\"B\u00e9b\u00e9?\" \n\nDax began stroking her and she started to writhe in her bindings.\n\n\"Hmmm?\"\n\n\"You got rid of my fur.\" \n\nHearing the accusation in his voice, she tried to sit up.\n\n\"But you sent me to spa! What did you think I would do?\"\n\n\"Yes. But I did not tell you to wax away my fur. I remember telling you the exact opposite in fact.\" He said with mock sternness.\n\n\"You set me up!\" She whined.\n\nHe stroked her teasingly as she tried to work herself against his fingers; he watched the increasing wetness with delighted satisfaction. \n\n\"That's right love, work that pretty little pussy on my fingers all you want.\" \n\nDeliberately he was winding her up and it was maddening, as she couldn't angle herself enough to get at the satisfaction just out of reach.\n\n\"I'm not growing it back, Dax.\" She growled breathlessly.\n\nRemoving his fingers gently he waited a beat before bringing his hand down on her bare mound, smacking her clit and producing an instant orgasm. \n\n\"Defiant, aren't we.\"\n\nHer face contorted as she bit her lower lip while her upper lip curled in the most endearing little snarl.\n\n\"You told me to . . . .\" She panted.\n\n\"Shhhh -- hush now, just a small spanking for your huge infraction; It's only fair. Besides which, I think you are enjoying this at least a little.\"\n\nSmack!\n\n\"Admit it? You like it when I spank this plump little pussy, don't you, Lulu?\"\n\nSmack, Smack!\n\n\"Yes!\"\n\n\"I know you do. Just a shrieking, dripping wet, hot little mess, aren't you?\"\n\nSeveral more light smacks had her shrieking and jerking and coming in the bindings writhing desperately for friction against something.\n\n\"You want more, Lou?\"\n\n\"Yes, more. Please.\" She whimpered desperately.\n\nPulling up his chair adjusted it so that his head was level with her plump and twitching pussy. He stared with rapt attention at the plumped glistening folds.\n\n\"Damn girl.\" He proceeded to devour her from her toes up, touching every part of her with his tongue and lips. When he finally reached the center, it took but a single touch to set her off.\n\n\"I need it Dax, inside me now.\"\n\nStanding, he slid easily into the smooth tight depths of her. Her whole body sighed with relief. She temporarily wrested control from him by wrapping her legs around him as tightly as she was currently able and mindlessly grinding her way to orgasm, much to Dax's happy gratification.\n\nAs her legs lost their tension, they loosened, and he pulled wetly out of her. Lubrication would not be an issue for the final act. Grasping the perfect globes and gently prizing them apart, he lined himself up with her glistening star, pressing his broad tip against the puckered knot of muscle. \n\nThey had been practicing, working up to this moment all week with various toys. Even though she loved it that first time, it was a few days time before she could sit comfortably after taking him back there. \n\nNot that she'd minded. The mild pain reminded her of where he, and only he, had been and she felt closer to him because of it. Unsurpassed intimacy.\n\nHe pushed and she gasped. \n\n\"Relax b\u00e9b\u00e9.\" \n\nHe stroked her to climax again and she softened, once more going beautifully limp and pliant - floating weightlessly.\n\nAfter a deep breath he pushed in and held for a long beat before continuing.\n\nLou gasped again.\n\n\"So full.\"\n\n\"You're doing great, just relax. I'm almost in.\" He said coaxingly.\n\n\"Oh my god. Almost?!\" \n\nShe grunted in mild irritation - wriggling enticingly in the bindings.\n\nGhosting his thumb across her clit caused her to seize and jerk as if she were being electrified. Lulu came and came, the natural lubrication trailing down to further ease the way.\n\nWith rapt attention, Dax watched as he carefully but fully penetrated the slick ring.\n\n\"Dax, why are you so obsessed with my ass?\" She agitatedly huffed whimpered and whined, all the while squirming and further skewering herself onto him in a futile attempt at getting comfortable.\n\n\"Shhh, I've got you.\" He soothed.\n\nHe held for a moment to acclimate her before establishing a slow and steady rhythm, driving in and out of her exquisitely pulsing ass, relishing every push and pull, all while admiring her pliantly limber and luscious form. \n\nHer full and swollen breasts rippled with impact each time he hilted himself inside her, little pearls of milk appearing and slowly trailing down her body.\n\nLicking his lips, he leaned forward and latched on, stilling himself as she came violently drenching him while he switched from nipple to nipple consuming the creamy fruit of her body.\n\nAs the tremors ebbed, her first breathlessly uttered words were, \"but Dax, the babies?\"\n\n\"We pumped plenty for the babies and they are on soft foods now. Remember? They wont go wanting.\"\n\nShe was tempted to laugh at the absurdity of their everyday discussion about feeding the babies in the middle of what they were doing. But as he easily slipped two long fingers in and out of her lightly grazing her G-spot she came unglued again. Her body was overwhelmed with pleasure; the climax seemed to stretch on endlessly.\n\n\"How are you feeling baby.\"\n\n\"Sooo good.\" \n\nLulu purred in a drugged dreamlike voice. The double penetration was becoming too much to take and as she urged him on he quickly abandoned his languid pace for one with vigor.\n\n\"Come on Lou, give it up with me baby. One more time and you can rest.\"\n\nA fine mist of perspiration covered her body and she glowed all over. Her face, contorted in a state of affliction was awash with tears as she wailed, gasped, whimpered and sobbed in sexual ecstasy. Her heart was pounding alarmingly fast in her ears and she longed to collapse with exhaustion as he drove her ever and ever higher. \n\nInside her ass felt electric, he rocked in her feeling the tight walls of her rapidly closing in on him and it obliterated his control and he surged into his rope bound angel in a mad a frenzy, hips moving with an almost inhuman speed, his hands clutching the plump globes using them to pull and push her with ease along the length of him. \n\nHis silver gaze trailed up her voluptuous body and when he got to her eyes she stared into his as long she could before surrendering to the blinding crush of their combined orgasms.\n\nShe came to and found herself floating again, this time in water as Dax gently bathed her.\n\nNever had she felt so possessed, dominated and taken yet vulnerable and safe. Overwhelmingly wonderful. \n\nLulu sighed deeply. Dax unable to interpret the tone of it, froze. She looked up at him questioningly and offered her mouth for a kiss.\n\n\"So, that's what you've been wanting to do to me?\"\n\n\"More or less.\"\n\nLou chuckled to herself. Still reticent, he is, even after all that. You can take the boy out of Catholic school but not Catholic school out of the boy.\n\n\"I know there's more and I look forward to it. It gets better and better with you Mr. and even though I may have to start a more stringent workout routine to keep up, we can have Japanese Art House Porn star sex anytime you like.\"\n\nWith no small amount of relief Dax exhaled, releasing the breath he'd been unconsciously holding. I got to freak my wife and she loved it! \n\n\"I am one lucky bastard.\" He sighed with a smile. \n\n\"Yes you are.\"\n\n------------- \n\nHowever, the pendulum quickly swung the other way 3 days later. \n\nDax was mildly furious with his wife. \n\nHe didn't say anything in front of Matt and kept as neutral and non-committal as possible, but he was a little peeved with the day's events. \n\nThayer made a pass at her. \n\nAnd she's been gone damned near all day long. It doesn't have to be this way.\n\nI hear tell the first year is the hardest, but damn.\n\n\"Hey there b\u00e9b\u00e9.\"\n\n\"Hey yourself, babe.\"\n\nUnpacking her messenger bag, my very practical wife pulls out an ice-filled plastic bag with several chilled bottles of pumped breast milk and places them in the fridge. Way to improvise. Breast milk and legal briefs. \n\nI watch as she washes the pump at the sink. I can hear her neck cracking as she leans her head back and stretches. Ouch.\n\nMy baby is tired. A long workday. I do not like it. I want my wife to myself a while, at least for the first year. Is it too much to ask? I moved us here to get her away from all that.\n\nRemoving a chopstick from her hair, it falls in a gorgeously fragrant auburn tumble down her back, especially long these days, courtesy of the pre-natal vitamins. ",
        "The Harlem Dominicans blow it out for her once a week now and set it on monstrously large rollers and it's stunning. \n\nSome nights she brushes it out with Jasmine scented Tsubaki oil. Especially nice are the nights she lets me do it for her. \n\n\"Missed you today, my lovely wife has been gone for 9 hours.\" \n\nI manage to finally get my hands on her and feel a little better with her in my arms. I cup her cheeks and gaze at her. A face that would shame angels. Out all day long looking like that.\n\nShe gives me a little kiss.\n\n\"I know, didn't mean to be gone so long. Negotiations ran over and I had to re-write the language.\"\n\nI know she won't mention it but we need to talk about it.\n\n\"I talked to Matt, he told me a little about your day.\" \n\nLou grimaced and pulled slowly away.\n\n---------------\n\nearlier that day . . .\n\n\"The glow of motherhood looks good on you Ms. James,\" said Thayer, looking blatantly at her well-concealed, yet prominent breasts. \n\nHigh school is forever! This is why for years I wore minimizer bras. Not an option now with the breastfeeding.\n\nThe old letch had the nerve to stroke her arm! She'd glared at him, looking pointedly at the offending hand, before raising her eyes to his again. He was smart enough to withdraw his touch. Not fast enough for her liking, but withdrawn all the same.\n\nLou silently bristled. Men! I don't care if you own half of New York City, there is no way in hell. But because he does, he thinks he's got every right and every chance.\n\n\"The name is Mrs. Wilde now, and thank you.\" She'd fairly purred with saccharine sweetness.\n\n\"So,\" drawled Thayer. \"Were those a wedding gift?\"\n\nWith an arch glare, Lou folded her arms, subtly tapping her wedding ring finger against her arm for emphasis.\n\n\"My husband gave them to me - when he got me pregnant. I use them to feed our babies.\"\n\nYou dirty old bastard! I know it won't be enough to discourage him, but I'm putting it on the record here. \n\nThayer chuckled at her feistiness and backed right off.\n\n-----------------\n\n\"I really wish Matt had kept that to himself.\" \n\nShe snorted in irritation. I'm sure he didn't mean to, but Matt has kicked a hornet's nest having divulged that bit of information. I know that husband of mine and I know myself, any second now he's going to have a minor fit of some kind. It's best to just give him some space.\n\nLou was about to do just that and head to another room in the house when she heard him.\n\n\"Not supposed to be working anyway.\" He grumbled under his breath.\n\nHer mommy ears picked up every word. Not quite believing she in fact heard Dax correctly, she slowly turned to him and repeated the words aloud in the form of a question.\n\n\"Not supposed to be working? Is that what you said?\"\n\nShit, here we go, Dax thought. Fuck it; let's just have this fight. \n\n\"Yes, that's what I said, not supposed to be working. It's not like you need to, Lou.\" He railed at her in exasperation.\n\nHe decided to take a different tact.\n\n\"Is loving me not enough?\" \n\n\"Come on Dax. Don't do that. You saw me taking my CLE requirement courses man. You thought what? That it was just for show? I'm still a lawyer, and a partner in a law firm to boot. I am not having this argument with you again.\"\n\n\"Ok fine, you're a lawyer and a partner in a law firm. A Virginia law firm, we are no longer in VA, Lou.\"\n\n\"Is that what you thought? That because I'm currently living here I wouldn't be working? We have clients in New York too, Dax. We have clients all over the place. Thayer is a new client, a big one at that. I'm not as busy as I was, but there's still work to be done. \n\nI passed the NY State Bar and have always kept it current. I'm licensed in NY, VA & CA.\"\n\n\"You didn't have to go back to work, Lou. Eventually, you're going to have to choose.\"\n\nShe laughed incredulously. \n\n\"Choose? Are you serious? What the hell do you think I've been doing these last . . . I don't know how many months now? I've been working. I never stopped. I'm fortunate enough to pull the babies into my home office and see them while I conduct business online and by phone.\n\nI work Dax, it's never been optional for me. My parents and their parents worked hard to save for our futures; it's how we were raised. I'm glad you have the money - \"\n\n\"We Lou, we have money.\"\n\nShe groaned.\n\nDax's look was belligerent and more than a little bewildered. Is that how she viewed things? His money? This is why she's still working? I thought we'd 'squared that circle' to use her language, when we met with the financial advisers.\n\nHe honestly hadn't ascribed that much importance to the two or 3 hours a day she spent on her office computer. He'd thought they were minor executive and or organizational tasks. But evidently, Lou'd been working more than she let on, bringing in new business. \n\nI know how important her work is to her. She gets a kick out of it and I want her happy. I just wish she would NOT work with Thayer. I don't trust the man. And now she's mad at me. Shit.\n\n\"I don't know what the hell is wrong with you. But there are 168 hours in a week, if you can't spare me for like 20 hours - max (?) then I don't know what to tell you other than you need to learn to manage your expectations lest mistrust and paranoia eat you alive. So do what you have to, but figure it out, and fast.\"\n\nAnd with that, she left the room.\n\n--------------------------------\n\nI know money is the number one argument most couples have, I just never thought I'd be fighting about having it. First world problems.\n\nI marry the man, let him do any and everything he wants to me anytime he wants, stay home practically all the time caring for the kids and still it's not enough? I work in the office for one day and he loses his shit.\n\nWell I meant what I said, he is going to have to figure it out or make his peace. No we don't need the money, but I like working, being useful. I do not want to lose my cat-like moves in the business world. \n\nNot to mention as generous as he is we'll be broke in no time. Well that's not fair, because he's pretty good with the money. \n\nBut I'm working on a contingency plan and diversifying things for us long-term. We have the babies now. Having a legacy is essential. I want us all taken care of for generations to come. This is how its done. \n\nThere's Lili with her two and now Lenny with his one and more to come I'm sure. There are things to do as far as legacy building and I mean to see it through. \n\nNot to mention my work is the only part of my old life that still seems to be somewhat intact, whereas I have at least some control. I feel as if I have ceded so much of it. Its gratifying but . . .\n\nI should talk to someone. No not someone, my husband. I should talk to my husband! A breakthrough, my therapist would be proud.\n\nWe should sit down and talk, but not tonight. Tonight I am too tired.\n\nGreat, I can hear him coming after me.\n\nHe's an instinctive creature and I'm sure he wants a 'why' and if I don't give it to him he'll get antsy and lash out.\n\n\"Were you going to tell me?\" He asks heatedly.\n\n\"I know you heard that I quashed the situation and still with the tone. There's only you, Dax. Frankly I resent your attitude. There's a world full of 'Thayer' out there. What are you going to do, lock me away?\"\n\n\"So you weren't going to tell me about it?\" He says impatiently.\n\n\"My work day is none of your damned business.\"\n\n\"You're my wife!\" \n\nAnd there it is. His bellow was so loud, she winced.\n\n\"Keep it down. The babies are asleep. Yes, I am your wife and that means what? That you own me?\"\n\n\"Just like you own me.\"\n\nShe acknowledged the point with an incline of her head.\n\n\"Ok Fine, I can accept that. But I am your wife, so give me a little credit that I can handle myself man, damn.\"\n\nI am feeling more combative by the second. We have guests, even if they are family and I don't want them hearing us argue or worse because I could throttle his obnoxiously old-fashioned ass right now.\n\nI'm in love with the man, but am coming to feel frustrated with having to repeat myself and am wondering if and or when this particular bullshit is going to stop. \n\nMiddle-ground, it must be around here somewhere. But shit, man I need a fucking break right now.\n\nI decide to take the advice of her sister, and MM and kick his restless ass out of the house for a while. \n\n\"Dax, get out of here for a while. I need a moment, and you do too - go and think about why is it not even a year into our marriage you already don't trust me. I've given you no reason whatsoever not to.\" \n\nShe breathed through her nostrils, her lips tight with suppressed emotion.\n\n\"That's not true.\" He whispered looking anxious and upset.\n\n\"And yet it feels true. I mean it, Dax. Get out of here for a while. Take Lenny with you and finish plotting whatever the hell it is you two are plotting. Go.\" \n\nPhysically pushing him out of the bedroom, Lou shut the door and locked it.\n\n____________________\n\nI trust Lou. Of course I trust her.\n\nLenny found Dax staring off into the distance and clapped his brother-in-law on the shoulder.\n\n\"It's not just you, man. I'm going through the same thing more or less myself. We married women who basically do whatever the fuck they want and we love them for it -- its why we married them in fact - but some days . . . . its like god damn it all, you don't know whether to throttle them or fuck them half to death.\"\n\nThe truth of the statement made Dax look at the younger man piercingly.\n\n\"We will persevere and be stronger after. In the meantime let's get out of here and go drink about it for a while.\"\n\n--------------\n\n5 hours later\n\nArrested for public disturbance. The throbbing in my face is nothing compared to what Lou is no doubt going to do to me, if the tone of her voice when I called her was anything to go by.\n\nSomeone turned to him. \"That's your lawyer?\"\n\nDax sighed wearily.\n\n\"Hell man, that's my wife.\" \n\n\"Shiiiit!\"\n\n\"Exactly.\"\n\nDax chuckled darkly.\n\nLenny looked at the expression on his sister's face and exhaled heavily. She looked worried and she looked angry.\n\n\"God have mercy on those cops, because she sure as hell won't.\"\n\nLooking at her husband's bruised face, her hackles immediately rose.\n\nLou quickly read the report. \n\n\"I will address the bruises momentarily. But first I demand to know why these men are being detained? No crime was committed; you had no warrant or probable cause and thus no legitimate reason to arrest them in the first place. \n\nNot only that, they weren't informed that they were being arrested. Don't even bother denying it; I received a voicemail of the entire encounter. Nor was the reason for the arrest disclosed.\n\n\"Well they were loud on the sidewalk and seemed drunk, and the suspect looked like a person of interest.\"\n\n\"Loud and drunk? Really? Drunk? Yet retaining enough mental capacity to record the exchange. Suspect? Person of interest? Why, because he's black? \n\nPlease make my day and say that out loud. And what pray-tell was your excuse for arresting and assaulting my husband? Guilt by association?\"\n\n\"Husband?\"\n\n\"Yes, that man,\" Lou pointed at Dax, \"is my husband. What of it?\" She folded her arms and stood back on one leg.\n\nChakowski looked at her agog. One did not marry black women no matter how fine they were.\n\n\"I didn't assault him. He may have happened to inadvertently hit the wall with his face when I cuffed him.\"\n\nUnfolding her arms Lou stepped closer to the junior officer and even though he was armed and surrounded by other armed cops he instinctively took a step back from the menace coming off her in waves.\n\nThe Sergeant had been watching the exchange from across the room and having concluded his call walked over.\n\n\"What seems to be the trouble here?\"\n\nLou gave a concisely precise summation of the situation. From her iPhone she played the exchange back for the Sergeant. \n\nThose damned cell phones, taping and recording everything these days. The future is now and it's being 'televised' by everyone.\n\n\"I am sorry Ms.?\"\n\n\"Mrs. Wilde.\"\n\nOf course she's married, the beautiful ones usually are.\n\n\"You men are free to go.\"\n\nA very red faced Sergeant Watkins turned to the gawking rookie officer. \n\n\"Chakowski, my office, 15 minutes!\"\n\nI don't need this shit on a Friday night - fucking ulcers already killing me and this new kid is just young dumb and full of cum fresh out of the academy and clearly knows fuck all. They come in with their bullshit racism from the outer boroughs and I have to finish giving them the lessons mommy and daddy didn't. \n\nJust my fucking luck, the little asshole picks these people. Woman's a lawyer. Hopefully we're lucky and she doesn't bring a civil lawsuit for false arrest.\n\nShe gave her two a stern look and jerked her head towards the door.\n\n\"Let's go!\"\n\n\"Shit, we just might be better off in here.\" Grumbled Lenny.\n\nLou swiveled towards him. \"Don't make me catch a charge in here. Not another word Leonard.\"\n\nMarshaling the two, she begins marching them out the door. She stops at the Policeman Memorial Fund Jar though and digs into her purse and wriggles a wad of cash through the slot. \n\nGiving a look to what has to be her brother, given the resemblance, and gestures at the jar with a matter of fact and obvious look, he grudgingly does the same after a beat. Her husband follows suit.\n\n\"Thank you Mrs. Wilde, gentleman. You have people, I take it?\"\n\n\"We did and we do. Both parents and an uncle still kicking.\"\n\nPast tense. The Sergeant nodded his understanding. Look at her face. Man she is sweet.\n\n\"We have a charity dance, if you'd like to come out see what you just supported.\"\n\nI hand her a flyer. I'm certain she's about to give me the polite brush off, but I'd sure love to see her again. Just to look of course. That husband of hers looks ready to murder me. I don't quite blame him. He rests a hand possessively on her hip. Better keep her close in this city. \n\nAbsentmindedly, she rests her hand over his and strokes it in an attitude of easy intimacy. In love with her husband. Annoyed at the moment, but in love.\n\n\"Thank you Sergeant Watkins, I would like that.\" She smiles. Wow! \n\nHer husband bustles her quickly away.\n\nThrough the glass doors I see her giving them both 'what for' -- in what looks to be verbal and a little physical abuse in the form of smacks to the back of the head for both. Whew! Haha!\n\nDark red hair swishing provocatively to her sublime ass, eyebrow arched in full reproach as she all but glides to the curb to hail a cab, her pristine heels barely touching the trash-strewn ground. \n\nDamn, it was almost worth Chakowski and his pain in the ass antics just to have met her.\n\nWe're home and my wife hasn't uttered a word. She seems all too calm in fact. I know we've just worried the hell out of her. I'm scared to think of what she'll do to me, or won't do to me as a result. \n\nWith my head in my hands I sit and wait for her to reappear from dressing room. My jaw drops when she does.\n\nThe Batman t-shirt and what I believe are the original little black panties are back. Her walk towards me was slow and deliberate. She had me and she knew it.\n\n\"Yep, all for you. Day in and day out, Dax all for you. Now, come with me.\" \n\nTaking my hand she led me into the bathroom.\n\n\"So, you're not angry with me?\"\n\n\"Oh, I am. But I'm relieved more than anything. You've had a hard evening, we both have and we deserve a time-out so to speak. As many times as my bad-behavior has been rewarded, I've decided to be charitable and return the favor just this once.\n\nNow you are to strip down and get in that tub.\"\n\nShe's run a bath for me. Is she going to drown me?\"\n\nAfter I am settled, she takes a sponge and lathers it up. She appears to be thinking hard as it takes a few moments before she begins to wash me.\n\n\"I have a few things I'd like to say to you Mr.\"\n\nAt his expression, she reassured him.\n\n\"It's not as bad as you think, calm down, man.\"\n\nTaking a breath she continued.\n\n\"I think you thought it would slow me down and possibly calm me to an extent but having children has made me even greedier, more protective, more ambitious and possible even more aggressive, especially about their futures.\n\nYou, my love,\" she gave him a gentle kiss \"are very much like your mother in that you are overly munificent. It's not a criticism, just an observation. \n\n\"I guess I am, and you kinda remind me of Pops, not stingy but . . .\" He trailed off and she chuckled lightly.\n\nMy birthday was again a prime example. Your very generous nature is one of the very many things I love most about you. But I don't need such extravagance Dax.\n\n\"I love giving you gifts Lulu.\" Her expression of surprised and delighted enchantment was something he'd easily grown addicted to.\n\n\"I love it too, but I don't need it Dax.\"\n\n\"I want you to have beautiful things\"\n\n\"You're the only beautiful thing I need, love\" \n\nBrown eyes met green and he sucked in a sharp breath at the depth of emotion in hers.\n\n\"You really love me, don't you?\" Wonder in his voice. \n\n\"Well duh? Of course I do.\"\n\nShe gave my bruise another tender kiss.\n\n\"I should and will include you in my planning process for not just our children, but the family in general. Life is not all about money, but it definitely helps. \n\nI mean to make sure our family has some for generations to come. There's so much to managing a legacy. I want the wealth to grow to a point whereas it's almost a living organism, just feeding and growing itself independent of us. I know we have an bank account well into eight figures, but you'd be surprised how quickly it can all just go, I am in the process of making strides to get us that extra digit, and sock things away for when the shit hits the fan.\"\n\nI had no idea these were the things on her mind. \n\n\"Billionaires? Hmmm . . . seems like overkill don't you think?\"\n\n\"Perhaps, but just think of all the good we could do? Not just for us, but for struggling people.\"\n\nWe both sigh as she continues washing me, both of us silent and deep in thought. \n\nSatisfied that I'm relaxed and clean, she has me stand as she rinses me off with the detachable showerhead.\n\nWrapping me in a towel she says, \"Follow me.\"\n\nSpellbound by the strip of skin between the t-shirt and little panties, I do just that.\n\n\"Drop the towel Mr. and get up there on the bed and lie back.\" Lou gestures with her chin.\n\nI do as told.\n\n\"This is meant to be a punishment.\"\n\nFor a blistering 15 minutes I am treated to the longest, hottest and wettest of blowjobs. Repeatedly, she takes me to the edge and back again. By the time I am allowed completion down her rapidly constricting throat, my abs and groin are fluttering and twitching in jerky spasms.\n\nWhen I can finally draw breath to speak again I just have to ask.\n\n\"Not that I am complaining in the least, but how was that punishment?\"\n\nLou puts down her glass of water on the bedside table before straddling me and looking down at me quite seriously with hands on her hips.\n\n\"Because dear husband, the next time you pull a stunt like today and I have to fetch you from a police station - not only will I leave you to stew in it for a bit, I won't blow you for an entire year. Do we understand each other?\" \n\nHer lovely face is perfectly placid and completely serious. No arched brow or pouted lips. Damn, that's her 'all business' expression.\n\n\"I believe we do.\"\n\nThe Author copyrights this chapter of Dax & Lulu as well as previous chapters of this series. The reproduction of any chapter of Vision or Dax and Lulu without the written permission of the author is expressly prohibited."
    ],
    "authorname": "MsLuLuX",
    "tags": [
        "white man",
        "black woman",
        "anal",
        "bondage",
        "romance"
    ],
    "category": "Interracial Love",
    "url": "https://www.literotica.com/s/dax-and-lulu-married-ch-02"
}