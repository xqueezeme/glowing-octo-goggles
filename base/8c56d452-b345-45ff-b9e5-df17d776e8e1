{
    "title": "Things That Go Hump in the Night",
    "pages": [
        "Over the last few years I've become convinced that my father, Graeme Parker, put a hex on me before I even entered the world. No, my father does not practice voodoo or dabble in black magic, although sometimes I secretly wish that he did. He has, however, been an avid comic book collector since the age of five, which in some circles would be considered to have more of a cult following than those who believe they can harness the raw power of the supernatural. \n\nSo how am I cursed? In his infinite wisdom, my dear old dad decided to name me after his favourite superhero's wimpy, extremely geeky alter-ego, Peter Parker. As I grew up, it quickly became apparent to me that I wouldn't be getting bitten by a radioactive spider, nor would I be donning tights and a mask so that I could web-sling my way around New York City in a never-ending crusade to foil brilliant foes such as Dr. Otto Octavius, the Green Goblin or Carnage. \n\nI'm not Spider-Man. Mary Jane Watson won't be waltzing in and out of my life, she of the flaming red hair and dazzling smile. My best friend is called Marty Klein, not Harry Osborn. I have an Uncle Joe who lives in California, which is a far cry from the Uncle Ben who raised the Peter Parker in the comic book world. Uncle Joe, as far as I know, has never uttered the words 'with great power comes great responsibility' to me, although I'm sure that dad has often urged him to. \n\nAnyway, back to dad's curse. He tempted fate, that's all I can say. Was it totally inconceivable that I, much like the freelance photographer from the comic who shares my name, would turn out to be a total geek? Seriously, with a name like Peter Parker, did I ever truly have a chance to be popular? \n\nThe question is rhetorical, so don't answer it.\n\nLet's look at the facts: I inherited my father's love for comic books, particularly for Spider-Man; I'm a movie buff; my friend Marty and I are currently working on our very first comic book (I'm doing the illustrations and he's doing the inks); and my computer uses Linux as its operating system instead of Windows. The list is endless. Literally. \n\nDespite being well aware of my geekiness and possessing the knowledge to make the necessary changes to remove the label, I find it impossible to go through life as an impostor. I like who I am, period. If being popular means sacrificing all that I hold dear to my heart, then being a geek with only one best friend is fine by me. At least I know that I can depend on Marty if I find myself in a bind, that the word 'trust' isn't passed between us in the same liberal, unemotional context as almost every other student at our school. \n\nMarty and I have never wanted to gain popularity in order to become pals with the 'cool' guys. We perceive them in the same manner that they see us; as losers. It's the girls that we pine for. Sweet, lovely girls who seem to revel in being treated like possessions instead of human beings, while good, decent men like Marty and I are but observers on the sidelines in the game of love. \n\nBut girls were as far from my mind today as the sun is from Pluto. Ordinarily, being the horny 18-year-old that I am, this wouldn't be the case, but today was no ordinary day. \n\nThe date on the calendar had made a full revolution in the blink of an eye, as if Marty McFly and his time traveling DeLorean had kidnapped me and whisked me exactly one year into the future, landing us smack bang on the one day of the year that I deplore. I'm talking about October 31<SUP>st</SUP>, better known as Halloween. It's the one day of the year that grown men and women are not only allowed to unleash their inner children but are in fact pressured to do so. Those who don't conform to partaking in the festivities \u2013 either by partying, supplying goodies or going in search of them \u2013 are typically met with a measure of disdain, as if you've suddenly turned into a black sheep that has strayed from the flock. \n\nMarty and I met up in the afternoon at the local McDonalds, spending almost an hour arguing in minute detail over every flaw that had been adapted into the two Spider-Man films. We'd already attacked two Shakes each, his of the strawberry persuasion and mine being chocolate. \n\n\"Look, the biggest flaw in Spider-Man isn't that MJ was Peter's first girlfriend,\" Marty stated, brushing his long fringe out of his eyes. \"It's the fact he can generate his own web fluid.\"\n\nIn the comic book, after Peter was bitten by the radioactive spider he developed certain abilities that emulated an arachnid's, such as inhuman strength, wall-crawling, heightened agility and reaction time, and a danger-sense. However, in order to spin his own webs, Peter had to construct metallic objects called 'web-shooters' which he strapped to his wrists. Being a man of science allowed him to create tiny pressurized canisters filled with web fluid, which could only be released when two of his fingers activated a switch attached to each palm. \n\n\"I can see why they didn't do that in the movie,\" I said. \"They already had enough back-story to wade through, so giving Pete an inbuilt ability to spin webs probably saved them from having to elaborate even more so.\" \n\n\"How much web fluid would a spider be capable of using in a day? Not much? Spider-Man uses a shitload, so how is he able to generate a seemingly infinite amount of web fluid?\"\n\nI nodded. \"Good point. You'd think that his body would reach a point where it would be incapable of producing any more, yet he never seems to run out.\"\n\n\"Exactly.\"\n\nWe continued to pick apart Sam Raimi's adaptation of Stan Lee and Steve Ditko's most loved superhero, disregarding the conspiratorial giggles and strange looks we received from our peers on nearby tables. It didn't particularly bother us; we even made an effort to raise our voices.\n\n\"So, are you going Ricky Pearson's party tonight, Pete?\" Marty asked, leaving our conversation of Spider-Man in the dust.\n\n\"Yeah, right after I grow four robotic tentacles and change my name to Dr. Octopus.\"\n\nA few lines creased Marty's brow and he frowned at me. \"I'm asking you a serious question.\"\n\n\"And I gave you a serious answer,\" I retorted. \"You know that I don't buy into that Halloween bullshit, so why did you bother asking?\"\n\nEach year Ricky Pearson, the most popular guy in school, hosted a 'be there or be square' Halloween party at his parents' house, the invitation open to all students in our year level. Almost everyone dressed up and gravitated towards his house come dusk, eagerly anticipating the practical jokes, wild costumes and such a vast quantity of alcoholic beverages that it made you wonder if Ricky's dad, a prosperous accountant by day, moonlighted as a hijacker by night. \n\nBlack strands of hair fell across Marty's vision again and he impatiently swept them away, never once shifting his intense gaze away from mine. Most people can't meet his piercing stare, generally finding his unblinking, steely blue eyes uncomfortable to lock onto.\n\n\"How do you think you're ever going to land Anna if you don't start getting out more?\" he whispered. Our classmates were still seated across from us, which explained Marty's hushed voice.\n\nHe was referring to my crush on Anna Jones, a cute little brunette who shared Mr. Vercetti's art class with me. My innate ability to draw often brought her firm behind over to my corner of the room, yet I had neither the confidence nor the experience with girls to extend our friendship beyond the boundaries of the classroom.\n\nI shook my head and laughed. \"Oh, that's rich. This is coming from a guy who's more of a hermit than I am.\"\n\n\"Yeah, well I'm trying to change that, Pete.\"\n\n\"How?\"\n\n\"For starters, I'm going to go to Ricky's part tonight.\"\n\nLaughter flooded my throat and burst from my mouth, although it died a quick death when I realized he was being serious. \"But...but we usually sit around watching flicks while all those bozos make fools out of themselves. Hell, it's as much a tradition for us as celebrating Halloween is for everyone else.\"\n\n\"Come with me,\" Marty urged. \"Let's do something totally against character. Who knows, maybe we'll run into Anna and some of her friends.\"\n\nIt was tempting. I suddenly felt like Judas Ascariot, having untold riches being dangled in front of my very eyes, beckoning me like gleaming pieces of silver, mine for the taking if only I parted company with a little thing called my soul. \n\n\"I can't do that, Marty. I can't go with you.\"\n\n\"Why not?\"\n\n\"Because getting drunk and acting like an idiot doesn't constitute as having a good time. Does that sound fun to you?\"\n\n\"No,\" he replied, his brow furrowing again. \"But I don't want to sit around watching A Nightmare on Elm Street for the gazillionth time while I could be out at a party hooking up with a girl, Pete, a girl. I'm sick of spending my weeknights at home, my only company being a comic book, my computer or a friend who is just as closed off from reality as I am. This isn't living, Pete. This is hiding, and I'm just fed up!\"\n\nMy mind froze up as if an arctic storm had localized over my brain. Everything Marty had said was true, but I rather liked living on the outer limits of reality. Books, movies, comics, they all filled my life with zany adventures and colorful characters that I could never experience or meet in the real world. Looking out the window can be fun at times, but nothing beyond that smooth pane of glass could come close to filling the aching chasm of boredom that all-too-often afflicts me.\n\nAll I could do was crack an unsure smile and say, \"Marty, 'gazillionth' isn't even a word.\"\n\nMarty nodded and rose from his chair. His eyes were somber and swimming with sadness, as if I'd just explained to him that I had a fatal disease and there was no known cure. The steps he took were small shuffles and his body sagged with weariness; he looked defeated. \n\n\"I'll see you tomorrow, Peter,\" he said, clapping me on the shoulder as he made his way towards the exit door.\n\nAll I could do was watch as my best friend walked away from me. I could visualize myself jumping from my chair and sprinting after him, conceding that he was right and I was wrong, and then we would both acquire costumes and make an unexpected, albeit surprisingly well-received, appearance at Ricky Pearson's Halloween party. Sometime during the night I would meet up with Anna Jones, who may be dressed in an adorable French maid's outfit, and we would steal away from the party for some passionate necking by the moonlight. \n\n\"It sure is a nice fantasy,\" I murmured, disposing of our empty containers into the trash receptacle. \"But we both know that in reality it wouldn't turn out that way.\"\n\nAs I walked home I witnessed the sun go through its daily ritual of merging with the horizon, the enlarged golden orb splashing our costal township with such a brilliant burnt orange that it made it almost impossible to keep your eyes open. Spread out over the western skies were smudges of pink which, as any artist or appreciator of mother nature could inform you, contrasted magnificently with the cloudless aquatic ceiling that blanketed the rest of the sky. \n\nDespite my undeniable distaste for Halloween, I do begrudgingly accept that a certain level of atmosphere can be derived from the ever-clich\u00e9d pumpkin heads, tombstones and monsters that people litter their front yards with. The extremes people go in order to slip into the spirit of Halloween rival \u2013 and quite often exceed \u2013 the lengths of those who celebrate Christmas or Easter. \n\nHalloween is almost a religion unto itself. \n\nMarty's behavior troubled me at first, but with each consecutive minute that ticked by it became clear to me that our friendship was incorruptible. We had been through tumultuous times before, often overcoming our obstacles with clear heads and ice-cool temperaments. This occasion would be no different. \n\nI finally reached home and turned up the drive way, taking note that my both of my parents' cars were parked in the garage. \n\nAlthough not successful by Wall Street standards, my parents ran a profitable video store with a difference. Not only does it hire and sell DVDs and videotapes, dad had also injected his interests in movie memorabilia and comic books into the business, making it a smorgasbord of delights for every movie buff and comic nut within a sixty mile radius. \n\n\"Parker!\" a voice growled as I slammed the front door shut. \"We need more snapshots of Spider-Man causing harm, not good! 'Masked Menace!' the headlines should read, not...not... Shit! Maureen, what's a good form of alliteration I can use for the positive?\"\n\nI padded along the hallway and entered the kitchen to find both of my parents decked out in costumes. They had given up badgering me about embracing the spirit of Halloween years ago, yet my dad continues to have the look of betrayal in his eyes whenever the day rolls around. \n\n\"How about 'wonderful web-slinger?'\" my mother offered. Her body was wrapped in a sweeping black gown that trailed along the floor behind her. Eyeliner and mascara had been applied to her eyes in large quantities and her naturally blonde hair was now midnight black. It was hard to tell if she was supposed to be Elvira or Morticia Addams.\n\n\"Nah, any other suggestions?\" dad asked. His costume was characteristically comic book related. As was typical, he'd assumed the identity of his character with unparallel enthusiasm: he'd gotten his hair shaped into a flattop style and had it dyed grey, trimmed his moustache on both sides, purchased a packet of cigars, and slipped into dark blue slacks and a white shirt.\n\n\"J. Jonah Jameson and Morticia Addams I presume?\" I said, leaning against the doorjamb that separated the kitchen from the hallway.\n\n\"Hello, sweetheart,\" my mother greeted.\n\n\"Hey, Pete,\" dad acknowledged. \"I sent away for that Spider-Man comic today, it should be here by the end of the week.\"\n\nThe issue in question was No. 13 in the Web of Spider-Man series, released in April of '86 and titled 'Point of View.' Dad already owned a mint copy that was, as with every other comic book in his possession, stored in an airtight zip-lock baggie. It's one of my favorite issues of Spider-Man, largely due to the flawless illustrations within, particularly on page seven where there is a headshot of J. Jonah Jameson that is sketched with a gritty edginess that modern comics lack. \n\n\"Thanks, dad. I've been dying to get my hands on that issue.\"\n\nDad chomped down on his unlit cigar and winked at me. \"Don't sweat the small stuff, Parker,\" he growled, channeling Jameson again. \"Just get me the snapshots of Spider-Man that I asked for, not this garbage where he's saving little kiddies from burning apartment buildings!\"\n\n\"Sure thing, Mr. Jameson,\" I shot back. \n\nYou might get the impression that my dad is as big a geek as I am \u2013 and you'd be dead right \u2013 but where I've failed in the popularity stakes he's succeeded. Our only differences revolve around two key categories: our contrasting levels of self-esteem and our capacity to mingle effortlessly within our peer groups. Maybe having strengths in both areas is what elevated my dad above geekdom. \n\nI said goodbye to my parents and made my way towards my humble abode, feeling slightly disconcerted that they didn't invite me to accompany them to whichever party they were attending. It should've made me happy that they had finally caved in completely, but it didn't. \n\nThe front door slammed shut, indicating that my parents were on their way to a night filled with fun, trickery and booze. \n\nWith my door closed and curtains drawn, my room felt less like a haven and more like a prison. I felt trapped, surrounded by a library of comic books housed in similar plastic baggies to my father's collection, and like each issue I had difficulty drawing in oxygen. \n\nThe house was a tomb, the silence generating an eerie atmosphere that none of the haunted houses erected at the county fairgrounds could ever match. The rapid pulse of my heartbeat thundered through my eardrums, my quickening breaths rebounded off the walls like echoes in a canyon. \n\nIt suddenly occurred to me that this onslaught of anxiety was brought on by sheer loneliness. The prospect of Marty breaking apart his own shackles of solitude left me questioning the path of isolation that I was presently embarking on.\n\nWhat was I going to do? Read a comic book? Watch a movie? The rest of the night flashed before my eyes in a singular premonition of such crystal clear clarity that it scared me half to death. I would watch A Nightmare on Elm Street, read a comic book (most likely Spider-Man or X-Men), eat a bowl of nachos and wash them down with a bottle of coke, watch another horror movie (maybe April Fools Day, seeing as how I borrowed it from the shop the day before) and then fall asleep while scanning the late night television. And I would be by myself, as lonely as an old man who has lost every friend and relative to the grim reaper. \n\nThis wasn't just a glimpse of tonight, I realized, but of every subsequent night that would span the rest of my vacuous, introverted life. \n\nThe pathetic nature of my universe was suddenly thrust upon me in its true light and, much like a beautiful glamour model stripped of her makeup and flashy clothes, everything underneath the surface revealed a person who encapsulated the very essence of dullness. \n\nEarlier tonight I'd been certain that the lives and experiences of fictional characters offered me more than those sculptured from flesh and blood, but right now, for reasons unbeknownst to me, I would gladly pawn off my entire comic collection just to have the guts to ask a girl like Anna Jones out on a date. \n\n\"That's it,\" I muttered, throwing my bedroom door open and stalking down the hallway with determination. \"You think I need to get out there, Marty? Then to hell with it, that's what I'm gonna do!\"\n\nI tore open the front door and hesitated on the brink, feeling a potent, contradictive cocktail of fear and excitement surging through my arteries. The glowing ember supplying the source of daylight finally dipped below the horizon, cloaking our town in relative darkness. A three-quarter moon imitated the sun at dawn and began rising slowly in the east, throwing an albino glow over everything it touched. \n\nMy feet, itching with wanderlust, crossed the threshold and delivered my body through an invisible portal, where I was instantly transported into another world. \n\nInstinct, which was just a watered down version of Peter Parker's spider-sense, warned me that everything was about to change. \n\n^ ^ ^ ^ ^\n\nIt was the witching hour, that time of the night where children and teenagers alike flood the streets like the bulls of Pamplona, and if you don't watch out you'll get crushed to death under the weight of their bulging satchels filled to the brim with candy. \n\nPint-sized ghosts, goblins, monsters, zombies, superheroes, cartoon characters (mostly Japanese anime), robots and a hundred other variations swarmed around me as I trotted through the streets. The parents of the younger trick or treaters mirrored the exact movements of their offspring in the same manner as the President's Secret Service agents, their eyes narrowing with suspicion each time a stranger drifted into close proximity of their children. \n\nMost of the guardians were also in costume, Elvis Presley being a favorite amongst the fathers. Still clothed in my civilian duds, I suspected that this was as close as I'd ever come to ascertaining how it feels to walk down the street naked. \n\nAt first I'd assumed I would up the attendance level at Ricky Pearson's party by one, but my feet were carrying me in the opposite direction, slapping against the pavement with purpose and drive despite my ignorance concerning their destination.\n\nSome of the houses I passed were lavishly decorated with glowing pumpkin heads carved into scary faces, sets of Halloween lights strung around their verandas, fake sculls, speakers spewing sinister laughter, life-like tombstones, creepy monsters, walls splattered with fake blood, nooses and skeletons \u2013 the list of Halloween knick-knacks on display, homemade and store bought, was virtually endless.",
        "The laughter and enjoyment of the neighborhood children was rubbing off on me, sending a low voltage tingle over my skin as I watched them embrace the holiday with an innocence they will someday shed. Their giddy rapture was so infectious that it made me lightheaded, injecting me with a natural high that alcohol and drugs could never simulate. \n\nMy neighborhood was soon left in my wake, and as I neared the town's outskirts I couldn't shake the notion that I was being guided by an unseen hand. \n\nI'm an agnostic, therefore I don't believe or disbelieve in a divine creator, but I could've sworn that I was being directed by someone or something \u2013 and I'm not talking about Steven Spielberg. Each step taken tightened the stranglehold of whatever had me in its clutches; yet in spite of this I was surprisingly calm and collected.\n\nI knew where I was headed. There was nothing else out here but vacant acres of farmland that were either filled with cows or flooded with irrigated water, leaving only one place for me to go. \n\nOut here, on the borders of our town, streetlamps were few and far between and I had to rely on the three-quarter moon as my only source of light. Every exposed surface took on a milky luminescence, giving the road an icy appearance that directly contradicted the warm wind blowing in from the north. \n\nThe motor supplying energy to my feet conked out and I coasted to a gentle stop, kicking up a small puff of dirt when I came to a total standstill. \n\nThe entrance to the town's cemetery loomed a couple of yards in front of me, its rusty cast-iron gates creaking eerily in the breeze. Both were spread apart to reveal a bitumen road leading inside \u2013 a one lane highway for hearses, visitors and maintenance crews to travel upon. \n\n\"What the fuck am I doing here?\" I muttered. I half expected someone to answer. No one did.\n\nFour years ago, on this very night, a drunken posse of teenagers stole into the cemetery under the cover darkness, unearthed a decade-old coffin and then proceeded to carry it through the center of town. Although trick or treating had ended hours beforehand, there were still many partygoers to witness the five pallbearers as they carted the casket down the middle of the road. Everyone figured that it was simply an elaborate Halloween prank, only to be proven wrong when one of the young chaps tripped and the coffin fell from their tenuous grasps, splintering apart on the tarmac and revealing its genuine payload for all to see. \n\nIt was entirely plausible that, considering the ghoulish nature of Halloween, people may give in to temptation and journey out here, so I would also have to keep a keen lookout for law enforcement officers who wish to police such activity. \n\nI leaned forward and strained my ears, but not a single decibel of sound came from within the cemetery. I was aware that on some level the stony silence should unsettle me, that my nerves should be as frayed as a piece of rope from the nineteenth century. \n\nIt was disturbing that I wasn't in the least bit disturbed. \n\nOver the next half an hour I toured the cemetery via the service roads, feeling every bit like a rent-a-cop who must walk the empty corridors of the building he's paid to guard. It was peaceful in a way that can't be described, only felt.\n\nSome of the gravestones dated back to the late 1800s, many of which were deteriorating at an exponential rate and were missing large chunks that looked as if they'd been bitten out. Other headstones from more contemporary times merely had hairline fissures and chips, but in another fifty years they would more than likely succumb to the similar fate that befell their neighbors. \n\nAnd then I stopped for the longest of moments, hypnotized by the heart-wrenching beauty towering over me. More of a statue than a headstone, a large angel carved from marble sat on a pedestal with its wings spread in mid-flight, its downcast gaze frozen on the grassy plot below. \n\n\"It's very beautiful, isn't it?\" came a soft, feminine voice.\n\nGoosebumps annihilated my arms, legs and torso while my heart simultaneously lurched in my chest. I swiveled around on the balls of my feet, my body shifting into auto-pilot as my brain's involuntary fight/flight response prepared itself for either eventuality. \n\nIlluminated in the pale moonlight was a girl no older than I, standing approximately five feet away from me in a pose that was about as threatening as a newborn kitten. Cute wasn't an apt enough word to describe this girl. Her face was the embodiment of innocence, yet her sparkling eyes and relaxed body language projected a sexy playfulness that suggested her sweet appearance was but an illusion grander than any the masterful magician David Copperfield could conduct. \n\nShe was dressed in the same ordinary, everyday manner as me: white sneakers, dark blue jeans that hugged her trim legs and a tight canary-yellow t-shirt that appeared a size too small, accentuating her curvaceous chest with mouth-watering results.\n\n\"Hi,\" she said, offering me a radiant smile. Nothing but air escaped my mouth, too stunned and lost for words by the presence of such a ravishing creature. \"This is the part where you say 'hi' back,\" she added, taking a step in my direction.  \n\nI flinched away from her, countering her step forward by taking one of my own in the opposite direction.\n\n\"I'm not going to hurt you,\" she said quickly, holding out her empty hands for me to inspect. \"See, no weapons. I'm as harmless as a little puppy dog.\"\n\nTalking to girls, particularly as pretty as this one, had always been an impossible task. My psychological development usually regresses to an infant's and my tongue ties itself up into knots, which could explain why I haven't even kissed a girl before.\n\n\"What're you doing here?\" I blurted, attempting to overcome my inadequacies regarding my interaction \u2013 or lack thereof \u2013 with the opposite sex. \n\n\"Just going for a walk. It's so peaceful here at night, and the atmosphere is not at all the same as during the day. I tend to find it bleak during daylight hours, although at night, underneath the stars and the moon, this place takes on a strange beauty. Do you think I'm crazy?\"\n\n\"No, I absolutely agree with you.\"\n\n\"I was just about to take a seat,\" she said, indicating a bench that could be fuzzily made out in the distance. \"Care to join me?\"\n\n\"Uh...\"\n\n\"C'mon, I promise that I won't bite. Much.\"\n\nHer remark carried with it a sexual frequency that even my inexperienced ears could tune in to. My suspicious nature prepared me for the possibility that she was mocking me, but that same guiding force that had lead me to the cemetery clouded my mind, purging any cynicism that I might act foolishly upon.\n\nMy cheeks burned with embarrassment. \"Okay,\" I conceded.\n\nWe trekked a few hundred feet in a stony, uncomfortable silence. I was well aware that, in order to break the ice, I was supposed to chat to her about something inane, small talk or the like, unfortunately my consciousness was doing a perfect imitation of a black hole \u2013 sucking everything in but spitting nothing out. \n\n\"You don't talk much, do you?\" she said, parking her shapely butt on the bench.\n\nI followed her cue and sat down, leaving a sizable gap between us. \n\n\"No, not really. I guess it depends on the person I'm speaking to.\"\n\nOur bodies were facing the rising moon but our faces were turned towards one another, throwing one side into complete darkness. I had trouble keeping my eyes locked on hers, not only because I itched to tear my gaze away and focus it on her lush body, but also due to my many insecurities when confronted by such a pretty girl.\n\n\"What's your name?\" I asked.\n\n\"Mary. Mary Watts. And you are...?\"\n\n\"Peter Parker.\"\n\nDespite my growing suspicion that my namesake has cursed me since birth, I must admit that I love saying it out loud. It rolls off the tongue with a degree of panache, quite often inducing a double-take from people who hear it for the first time. \n\nMary didn't so much as bat an eyelid with surprise. \"I guess that explains your lack of costume; you are your costume.\"\n\n\"I never really thought of it like that,\" I laughed. \"What about you, where's your costume?\"\n\n\"I've always thought that Halloween is terribly overrated. Dressing up as someone else is fine for some people, but I like who I am and prefer not to hide behind some silly mask.\"\n\n\"Yeah, I know what you mean. We already walk around with too many masks as it is, adding another one just makes things worse.\"\n\n\"We all hide things,\" she said. \"Sometimes it's essential to keep things from people in order to save yourself and others from experiencing pain. Other times...we keep things from people for misguided reasons.\"\n\n\"We're certainly a complex machine, alright.\"\n\n\"That's why I try to keep things as simple as possible. Complications only arise when you let them.\"\n\n\"If only it were that easy,\" I sighed.\n\nIt amazed me how easy a person Mary was to talk to. Making a connection, particularly a rapid one, with other people is not one of my specialties. This girl was able to coax me out of my shell with the finesse of a veterinarian doing likewise with an injured tortoise, and I was immensely pleased to discover that she possessed a personality as beautiful as her face and body. \n\n\"Okay, if you could simplify just one thing about yourself that you make complicated, what would it be?\" she asked.\n\n\"I don't know,\" I lied.\n\n\"Go on, you can tell me.\" She scooted closer until our knees touched, and then, incredibly, she laid her left hand on my thigh and rubbed back and forth soothingly. \"I'm not going to tell a soul.\"\n\nSweat formed at my brow and under my armpits, and I felt dizzy, on the verge of fainting. My eyes fell away from hers and dropped to her caressing hand. The moonlight lit up my tan trousers like a spotlight, making the massive bulge protruding from my crotch embarrassingly visible. \n\n\"What would you change?\" she persisted. \n\n\"Um...\"\n\nMy mind was as blank as a formatted hard drive, unable to compute any data at all. \n\n\"It would be your shyness around girls, wouldn't it?\" \n\n\"Pr-probably,\" I managed to spit out.\n\n\"Would you like me to help you out in that department?\"\n\n\"I...I don't know what you mean.\"\n\nMary leaned in and kissed me on the cheek. \"Sure you do, tiger. You should try to stick with the truth, because you sure do make a terrible liar.\"\n\nWhat the hell was happening? Guys like me barely show up on a girl's radar, especially one in Mary's league. Perhaps I'd entered through a vortex that lead into some kind of alternate Earth, where geeks like me are held in the highest regard. \n\nI courageously raised my eyes to meet hers and I found her face so close to mine that I almost kissed her on the lips. Her glossy black hair fell around her shoulders in shimmering cascades, taking on a slight grey tinge courtesy of the moon's albino rays. Up this close and personal, I could also make out a tiny scar above her left eyebrow, which only added to her beauty instead of detracting from it. \n\n\"I have to be dreaming,\" I said.\n\n\"Nope. I'm one hundred percent real.\"\n\n\"Then I'm being set up for an elaborate prank,\" I stated, realizing that Tommy Montague or one of the other assholes at school had probably orchestrated this entire 'chance encounter.'\n\n\"Wrong again.\"\n\nFor some reason I believed her. Faith in God, others and myself had long since departed on a one way train, yet I saw something in Mary's eyes that threatened to disrupt my cynical equilibrium; it was pure, old fashioned honesty. \n\n\"Then...why?\"\n\nShe frowned and gave me a cute little pout. \"Why what?\"\n\n\"What could a girl like you possibly see in a geek like me?\"\n\n\"You know, you should really change your approach to giving a girl a compliment,\" she said, her mouth curling into a playful smirk. \"You're just lucky that I don't get insulted very easily.\"\n\n\"Girls like you don't like guys like me,\" I insisted.\n\n\"Are you saying that I shouldn't like cute, shy guys? Did you ever think that you're the perfect kinda guy? You're smart, humble, funny \u2013 not a whiff on all those arrogant bastards who think that all women should drop to their knees and kiss the ground they walk on.\"\n\n\"But\u2013\"\n\n\"Shut up,\" she interjected, her voice as soft as silk and filled with a truckload of affection. \n\nMary tilted her face and our foreheads touched. Long tendrils of dark hair brushed against my cheeks, the warm wind blowing the soft strands against my face, tickling my skin as if she were using a feather. I could feel her warm breath on my lips, and I ached to bridge the gulf between our mouths. \n\nStill stroking my thigh with her left hand, she cupped the back of my neck with her right and worked the tension out of my muscles by kneading my flesh with her dexterous fingers. All traces of my anxiety disappeared as if Mary had temporarily harnessed the awesome vanishing powers of Sue Storm \u2013 also known as The Invisible Girl \u2013 who was the lone female superhero in the Marvel comic book entitled The Fantastic Four. \n\n\"Have you ever kissed a girl?\" she asked. \"Be honest, I promise I won't laugh.\"\n\n\"...No.\"\n\n\"Close your eyes.\"\n\nI obediently eased them shut, immediately heightening my sense of hearing as I stared at the backs of my eyelids. The gentle wind was rustling the leaves on a nearby tree, Mary's breathing quickened in pace, an owl hooted somewhere in the night and soft music could be heard playing from the town's direction. \n\nMy hands searched blindly for her waist, and upon finding it they honed in on her hips. The cotton fabric of her t-shirt drifted past the waist of her jeans, but unlike my fingers, which were stroking stiff denim, my thumbs could feel warm flesh underneath the soft, yellow material.\n\nYou wouldn't believe how hard I was. Mere seconds away from being kissed by a gorgeous girl, touching her and being touched in return, smelling the sweet aroma of her apricot scented shampoo \u2013 it was all making my cock stand up like a puppy begging for table scraps. Not that I was equating Mary to table scraps; she was more like a fine cuisine that I yearned to taste.\n\nAnd then she kissed me. At first she started out with light pecks, caressing her soft, velvety lips against mine with an uncanny amount of tenderness. But then her lips started attacking mine with an air of urgency, and her hands rubbed and squeezed at my body with a similar display of desperation. I tried to contain my excitement as best I could, but when her tongue shot between my lips and sucked hungrily on mine, it was more than I could handle. \n\nA long, satisfied moan clawed its way up from my voice box and vibrated between our lips. Mary's tongue jerked around inside my mouth when she let fly a few giggles, forcing me to play the aggressor for the first time by holding her head steady with my hands. I combed my fingers through her soft, silky hair while my tongue flicked against hers, our kiss becoming wetter with each passing second.\n\nI knew that this moment would be forever embossed into my memory, easily surpassing the one in which I finally acquired a mint copy of Amazing Fantasy #15, which was the first comic book to ever feature Spider-Man. \n\nOur lips, slick with saliva, finally broke apart and we stared deeply into one another's eyes. Mary's were murky brown pools, shimmering with a peculiar light that could be a combination of mischief and lust. \n\n\"Wow,\" I whispered, filled with disbelief and child-like wonder. I felt the way Clark Kent must have after stealing Lois Lane's heart from his alter ego, he of the blue tights and red cape. \n\nAlthough I've been an ardent comic book collector since I can remember, it never truly sank in that the girl inevitably falls in love with the superhero's real-life identity regardless of how mild-mannered or geeky they are. Maybe being baptized Peter Benjamin Parker wasn't such a curse after all. \n\n\"You can say that again.\"\n\n\"Wow.\"\n\nMary let loose a killer smile that, had I not been sitting down, would've reduced my legs to a jelly-like substance and in turn caused me to plummet to the ground like a falling anvil. \n\n\"Do you hear that?\" she asked, cocking her head.\n\n\"Hear what?\"\n\n\"I hear a voice chanting 'encore' over and over again.\"\n\nDeciding not to let Mary's imaginary fan down, our parted mouths came together again and we shared another steamy kiss. In fact, our make out session sizzled with such a burning heat that, if fallen into the wrong hands, our kissing could be used to melt the polar icecaps and flood the world. \n\nOur tongues, lips and saliva became unified, creating a conduit which enabled our souls to temporary intertwine as one. There was something otherworldly about the girl in my arms. It was as if her origins were celestial in nature, having once been an angel in God's kingdom but for reasons unknown had been banished to Earth. \n\nI had no prior experience for which to draw an accurate comparison, but making out in a cemetery seemed sexier than it could ever feel anywhere else. It felt extra naughty, as if we were breaking some kind of sacred unwritten law. \n\nReared by parents who etched the word 'ethics' into my brain, I'd never even so much as committed the crime of stealing a candy bar from the local convenience store, always finding those who did rather childish and immature, but perhaps the rush of kissing Mary in such a taboo place emulated the petty thievery which many teenagers often submit to. \n\n\"Mary, who are you?\" I whispered, breaking the kiss. \"Why do I feel so...just, unlike me?\"\n\n\"What feels different?\"\n\n\"Everything. I used to be so afraid of...of this, you know, being with a girl. But I don't feel threatened by you at all.\"\n\n\"Good, then you won't mind if I do this,\" she stated, leapfrogging her hand from my thigh and landing it squarely on the obscene bulge between my legs. Not stopping to take a whiff of the roses, Mary immediately started fondling me through my tan slacks, apparently undeterred by the fact that we were essentially complete strangers. \n\n\"Mary, wh-what the hell are you doing?\" I blustered. \n\nA devilish grin erased over the top of her sweet smile, shattering any illusion that she was as innocent as her angelic appearance suggested. \"You mean you don't know? Jeez, Peter, you had me fooled into believing you were a pretty perceptive guy. If you really must know, I'm squeezing your cock.\"\n\n\"Jesus.\"\n\n\"Nope, my name is Mary.\"\n\nMy hands busied themselves by roaming her warm back, savoring the sensation of running my palms over every glorious curve that her tight t-shirt was molded to. I wanted to touch her everywhere, leave no stone unturned. \n\n\"Do you think we should be doing this?\" I groaned.\n\n\"You don't like what I'm doing with my hand?\"\n\n\"I love what you're doing with your hand. It's just, well, we hardly know each other.\"\n\nMary melted against my body and delivered a series of light kisses to my lips and cheeks, which spurred her on to grope me with a newfound enthusiasm. She planted a pathway of kisses down the side of my face, throwing on the handbrake when she traveled past my jaw and arrived at my neck. Once there, her slick lips nuzzled the tender part of my throat, alternating between kissing, licking and sucking on my tingling skin.\n\n\"The way we kissed each other just now was as intimate, if not slightly more, than touching each other's bodies,\" she whispered, sliding her mouth up my neck until it made contact with my ear. \"Anyone can fuck like a champ, but great kissing requires chemistry, passion and a good measure of animal attraction; all three of which exist between us in droves.\"\n\nWas she implying that...?\n\n\"What're you saying?\"\n\n\"I'm saying that you have something I want.\"\n\nI started to tremble uncontrollably, my wild imagination running rampant with hundreds of images of Mary and me in the throes of humping each other's brains out. \"What do you want?\"",
        "\"Your virginity,\" she breathed sexily. \"That sucker has my name written all over it.\" \n\n\"If you say so.\"\n\n\"Oh, I know so,\" she declared, her silky voice developing a confident edge that all women possess when conversation turns to sex. They are, after all, the sole beneficiaries of the keys that unlock the wonderful treasures that reside between their legs.\n\nMary jumped to her feet without ceremony, grabbing my hand on the way and jerking me off the bench with her momentum. I stood on wobbly legs, still stupefied, albeit pleasantly surprised, by Mary's undeniable attraction to me.\n\n\"C'mon, I want to show you something,\" she said, leading me away from the bench.\n\nWe journeyed deeper into the heart of the cemetery, the monotonous sound of our feet slapping against the service road's asphalt piercing the tranquil silence we had previously basked in. The stars glittered in the sky like sequins pasted to a black backdrop, depressing me slightly because, like the thousands of occupants surrounding us six feet under, each one of the shimmering dots of light were but the sole remains of what had once been animated. \n\nSimply holding Mary's hand made me feel happier than I've felt in a long time. It was soft and warm, and every time she gave my flesh a brief squeeze it reminded me of how extraordinary it had felt when she shamelessly massaged my cock.\n\n\"Where are we going?\" I asked.\n\n\"It's a surprise.\"\n\nOur destination appeared to be the vacant lot at the rear of the cemetery. Once the main section had reached its maximum capacity \u2013 which wouldn't come into effect for at least another few years \u2013 the new arrivals would be delivered here for their final resting place. \n\nOff to our right was a medium-sized utility shed in which the maintenance crew stored their gardening equipment, but other than that manmade structure there was nothing except a sweeping grassy field in view \u2013 not even a small tree or shrub was within sight. \n\n\"Okay, so what are you supposed to be showing me?\"\n\n\"Two things, the first of which is that,\" she said, pointing at a patch of earth a few feet in front of us. I followed the invisible line extending from her finger, and my eyes leapt wide when I discovered what she was referring to. \n\nThe light the moon cast down on us was minimal, which clearly explained why my eyes had scanned past the lush carpet of grass at our feet. Each blade was roughly eight inches high, fashioned into a neat square that separated it from the rest of the freshly mowed lawn. To the trained, imaginative eye the square of grass looked approximately the same size as a double bed, the dark green blades so thick and full that it might be as comfortable as the mattress I slept on nightly. \n\n\"What the hell?\" I exclaimed. The gardener must've missed this section of the lawn but it bewildered me as to how or why. It was in plain sight, not fifty feet away from the maintenance shed. \n\nI turned to Mary and regarded her quizzically. \"What's the second thing you're showing me?\"\n\n\"This,\" she said softly. Both sets of her slender fingers hooked underneath her canary-yellow t-shirt and she peeled it inside out up her torso, revealing a pale yellow bra supporting two generously proportioned breasts. The cotton fabric floated to the ground and her hands attacked the entrance to her jeans, simultaneously undoing the button as she unzipped the fly. \n\nMy hands found her wrists before she could push the denim fabric over her hips, thus halting her disrobement. \"What're you doing?\" I whispered.\n\nMary laughed softly. It wasn't like the mocking snickers that I had grown so accustomed to hearing in my presence; instead it was more of a friendly teasing sound. \n\n\"You know what I mean. Why here? Why now? There's no need to rush into this.\"\n\nShe shook her head adamantly, her thick black mane whipping from one side of her face to the other. \"No, we need to have sex tonight.\" \n\n\"Why? Do you turn into a pumpkin at midnight?\" I joked. \n\n\"Kind of.\"\n\nI didn't like the sound of that. Her words implied that our union would be impermanent, that tonight would be our only opportunity to engage in the act of sex. Although sex was playing heavily on my mind at present, the prospect of not knowing Mary beyond tonight was unthinkable.\n\nBut this whole train of thought flew the coop when she began shedding the rest of her clothes like a snake sloughing its skin, her movements fluid and sexy. Her jeans and bra fell away from her body in a matter of seconds, leaving a lonely pair of panties hugging her crotch and well-rounded ass cheeks. The cotton fabric was unsurprisingly yellow, although this variation of the color was so pale that it would be more aptly described as lime. And then they too were sent racing down her long legs, leaving nothing between my hands and her nude body except a tiny parcel of empty space. \n\nHer body was, for want of a better word, absolutely gorgeous. Every inch of her deliciously pale skin was illuminated by an even paler moon. It was as if she'd purposefully positioned herself for the optimum coverage of moonlight, giving me a perfect view of her lovely face, curvaceous chest, flat stomach and the silvery tuft of hair sprouting from between her legs. \n\nShe cocked her head and gazed adoringly into my eyes, the smile on her sensuous lips generating so much warmth that I was amazed my skin wasn't blistering. \"That's precisely why girls like me like guys like you,\" she said.\n\n\"Huh? Why?\"\n\n\"The way you're looking at me right now.\"\n\n\"How am I looking at you?\"\n\n\"Like you've just won the State Lottery,\" she grinned.\n\n\"I think I just did,\" I murmured, unable to keep my gaze focused on any one part of her luscious body.\n\n\"Then come here and claim your prize, tiger.\" \n\nI wrapped my arms around her bare waist and leaned in to kiss her. It should've felt awkward that Mary was in the buff and I fully clothed, yet I felt completely comfortable as I slid my hands over the smooth contours of her naked back. Our lips brushed, and then a surge of lust burst through my body and my tongue wormed its way into her parted mouth, licking and sucking on hers when I located it. \n\nBreath, saliva and unintelligible murmurs were exchanged with mutual affection. Our hormones, which had thus far been somewhat subdued, escaped from their cages and released themselves into the wild. \n\nMary's hands groped my ass cheeks, gave them a playful squeeze, and then she forced the lower half of my body to collide with hers, which wedged my stiff cock between our bodies like a piece of meat between two slices of bread. \n\nHaving her soft breasts squished against my chest, coupled with the underside of my erection being rubbed against her abdomen, was driving me crazier than a suicide bomber. All I wanted to do was lay Mary down on the bed of grass, spread her legs open and then slide all the way up inside her.\n\n\"Peter?\" she panted, ending our game of tonsil hockey.\n\n\"Yes?\"\n\n\"Could you do me a really big favor?\"\n\n\"Anything,\" I whispered, giving Mary a gentle kiss on the lips.\n\n\"I need you to play with my body,\" she implored. \"Please play with me, Peter. I need you to make me feel good.\"\n\nThis wasn't the kind of invitation you tear up and throw into a trash can. I'd dreamed off this kind of offer for as long as I could remember, although never in my wildest fantasies had a girl as beautiful as Mary requested it in our current surroundings. \n\nNot waiting for a response, Mary disentangled herself from my loose grip and parked her shapely behind centre-perfect on the lush bed of grass. At first she tried lying down on her back, but finding it uncomfortable for whatever reason, she changed tactics by bracing her arms behind her and rose into a half-sitting position. \n\nThroughout this her legs remained firmly closed, both limbs running parallel in front of her, pointing west like a needle on a compass. \n\nI got down on my knees, my body trembling with anticipation when I arrived at her side. Sweat trickled down my face, each rivulet tracing a unique path that would never be duplicated. My hands fidgeted with impatience. I desperately wanted to touch her body, but I have to admit that I was more than just slightly daunted by the task allocated. \n\n\"How do you want me?\" she asked with a smile. \n\n\"Uh...\"\n\n\"Would you like my legs to stay closed or would you rather them open?\"\n\nMy brain had a nuclear meltdown. \n\nI was aware on some small level that I'd spoken English rather fluently for most of my life, but do you think that anything other than gibberish could flow from my lips after Mary uttered those words? \n\n\"I'll take that as a yes,\" she laughed, throwing her legs apart and exposing her pretty pussy to my ogling eyes. Her puffy lips were shaved smooth, separated by a thin vertical slit that tucked everything away into a neat little package. Her groomed bush was undoubtedly black, but under the moon's ever-present glow her neatly trimmed hairs appeared to be painted a dark shade of silver.\n\n\"So...\" \n\nA playful smirk graced her lips and she cocked her head. \"So?\" she echoed. She was totally relaxed, apparently unfazed by having her legs splayed open in front of a guy she hardly knew. If our roles were reversed, I would be dying from an extreme case of embarrassment.\n\n\"Gonna play with me? Or are you planning to sit there all night and drool?\" she said.\n\nI cleared my throat. \"What would you like me to do?\"\n\n\"Anything your little heart desires.\"\n\n\"So this would be okay?\" I asked, placing my left hand on her inner thigh. \n\n\"It's all sorts of fine.\"\n\nHer skin was warm, supple, and it broke out into a million pebbles of gooseflesh as the tips of my fingers inched closer to the sweet apex of her legs. I teased the outer limits of her vagina, rubbed her everywhere but the place that mattered, and I was surprised by just how tender that area of her body truly was. \n\nLeaving her pussy utterly unsatisfied, my hand took a leisurely stroll along her trim stomach and caressed its way up to her breasts; which were just begging to be squeezed like a couple of ripe melons. Never one to disappoint, I first palmed one and then the other, gently massaging each pillow of soft tissue while simultaneously rubbing her stiff, pale pink nipples with my thumb. \n\nAll of this occurred under her affectionate gaze, and her dazzling smile never once played hooky.\n\nI leaned in to kiss her, our lips coming together with a lust-fuelled intensity. Mary, spurred on by my constant fondling, slipped into the role of the aggressor and shoved her tongue deep into my mouth, attacking my own tongue with such a ferocious appetite that I struggled to keep my hand out of my pants. \n\nMary slipped her arms around my neck and used me as leverage to keep her upper body vertical. Our kissing became hotter, sexier, with Mary's arousal peaking to such a fevered state that she jammed a hand inside my tan slacks and groped my aching cock. \n\n\"Finger me,\" she panted around my swirling tongue. \n\nAs obedient and faithful as a guide dog, my hand raced down her body and I buried it between her legs. The first thing I noticed was a sticky wetness; it wasn't like she was dribbling her juices like a leaky tap, but it was definitely salivating for what her hand was stroking. It was also a virtual furnace down there. A fierce heat radiated from her crotch, indicating that she was in dire need of being stimulated.\n\nIt was difficult to slip a digit into her without looking at the task at hand \u2013 which was kind of hard to do while making out \u2013 so my middle finger coasted up and down the shallow groove between her pussy lips until it worked its way inside. \n\n\"Mmph,\" she whimpered, sucking harder on my tongue as my finger invaded her body.\n\nThe smooth, silken walls greeted my finger as it eased right up inside her, not stopping until the knuckles on either side were resting on her plump lips. She was warm, moist and devastatingly tight, leaving me to ponder how glorious it would feel to slide my engorged cock all the way into her.\n\nWe finally took a breather from our all-out tongue duel, locking eyes as we pulled our faces away and gulped in some oxygen.\n\n\"That is so damned hot,\" Mary panted.\n\nI thought she was referring to her burning pussy, which my finger was fucking to a nice, fast rhythm. Lacking in experience with this area of the female body \u2013 or any area for that matter \u2013 I had to content myself with solely jerking my finger in and out of her sticky honey pot, unsure if I could accurately locate her clit in an effort to get her even more excited. \n\n\"I can't believe how warm it is,\" I agreed.\n\n\"Huh? Oh, yeah, that too. I was actually talking about this being the first pussy you've ever fingered. You can't believe how hot that makes me, knowing that I get first dibs on everything.\"\n\n\"You...you like that I'm a virgin?\"\n\n\"I love it! What girl wouldn't?\" she gushed. \"And not only do I get to take your virginity, my mouth will also be the first to suck on your cock.\" She wrapped her groping hand around the circumference of my erection and proceeded to jerk me off slowly, teasingly, and a mischievous light clicked on in her eyes when an agonized moan slipped from my throat. \"Does imagining my lips around your cock make you all hot and bothered? Yeah, I bet it does. I love giving blowjobs, and I'm gonna make sure the one I give you is to the best of my ability.\n\n\"But for now, if you don't think you'd mind too much, I'd really appreciate it if you ate my pussy.\"\n\nMary's candor regarding all things sexual was unequivocal. It constantly amazed me how frank and upfront she could be, whereas I'm stationed on the same curve but at the opposite end of the spectrum; embarrassed by uttering words like 'pussy', 'cock' or 'fuck' in her presence. \n\nI combed my fingers through her hair and delivered a tender kiss to her lips. \"You are so incredibly sexy,\" I whispered. \"I'd do anything for you.\"\n\n\"Then get to it, tiger,\" she ordered, giving my ass a playful slap. \"My pussy desperately needs some tongue action.\"\n\nSoft blades of grass tickled my skin as I crawled along on my hands and knees, and when I came to a standstill I found myself situated snuggly between her spread thighs. Her musky scent surrounded me like a dense fog, making my mouth water. It was a gorgeous pussy, my previous, rather distant view not doing it any justice at all.\n\nThe rounded edges of her slit glistened in the moonlight, looking so yummy that I was prepared to dive in and chow down. But I didn't. All I did was lay there on my stomach, feeling totally out of my depth, becoming more nervous and unsure as the seconds ticked into double digits. The whole setup down there looked as complicated as a Rubik's Cube. \n\nI'm a horny teenager with exceptional computer skills, so it's not like I've never had the opportunity to view pornographic material. But from those movies you never get a sense of how to go about eating a girl out; it's not like they're performing tutorials on the fine art of pussy licking. \n\nMary's hips squirmed around under my watchful gaze, most notably due to the lack of stimulation on my behalf. \"You just gonna stare at it?\" she whimpered. \n\nMy eyes flicked away from her vagina and met hers. \"Well, it's not like it comes with an instruction manual taped to your thigh,\" I joked, my inexperience shining through like a Halogen spotlight. \n\n\"Okay, here's a quick rundown,\" she said, sliding her right hand between her legs and spreading her dewy lips apart. \"My clit likes to play hide and seek, so you have to spread me open to get to it. This little fella right here \u2013 that's my clit.\" Her index finger flicked a little nub a few times. \"When you begin, you can put your tongue anywhere, but as I get worked up you have to lick, suck or touch my clit, or else you're just going to tease the shit out of me. Okay?\"\n\n\"Okay,\" I nodded.\n\n\"And don't fret if you can't get me off. You'll definitely get close enough to make me cum when we fuck.\"\n\nI grinned at her. \"You don't like to mince words, do you?\"\n\n\"Nope. I'm not that kinda gal.\"\n\nI relieved her fingers of their duty and spread her pussy open, marveling over how contrasting the pale outer lips were to the pinkish hue inside. I gave her a hesitant lick, sampling the flavor she was secreting. It tasted strange, slightly sweet, but not entirely unpleasant. And then, emboldened by the success of the test run, I lashed my tongue against her body in rapid-fire succession, each giant lick originating at her entrance and terminating at her clitoris. \n\n\"Oh, yes, keep going,\" Mary encouraged, her hips reacting with a few involuntary shudders. \n\nHeeding her advice, I continued to lap at her as if I were dying of thirst, needing to get her off so that she could stave off my dehydration by flooding my mouth with her succulent juices. All I could hear were the lewd slurps rising from her crotch and the moans of delight flowing from her mouth, both spurring me on to munch her delectable delicacy with a frenzied urgency.\n\nOut of the blue I changed my strategy, ending my incessant licking by shoving my tongue deep inside her body. The results were instantaneous. Mary grabbed the back of my head and forced my mouth flush against her lips, spearing my tongue into her as far as it could go. \n\n\"Yes,\" she sighed in a dreamy voice. \"That's it, kiss my pussy.\"\n\nI shamelessly made out with her, although this time it was with a set of vertical lips that weren't kissing back. Saliva mingled with her trickling juices, turning her pussy into such a sticky mess that I wondered if she might get angry. It either didn't bother her or she was too sexed up to care, because she was crushing my mouth against her body in an effort to make me attack her slit with a heightened ferocity.\n\n\"Oh shit!\" she cried. A powerful jolt from her hips shoved my head away from her crotch and dislodged my tongue. \n\nIt was the first time I had the luxury to view her pussy since I'd started pashing with it, and boy was it a beautiful sight: an angry red around the edges and coated in a fine layer of glistening liquid. It beckoned me with a couple of involuntary twitches, as if to say that it needed to be filled with something a lot bigger than a tongue or finger, possibly a cock \u2013 my cock, to be precise.\n\n\"I'm sorry about that, Peter.\"\n\n\"It's okay,\" I panted. \"It's my own fault for being such a tease.\"\n\n\"A man who claims responsibility,\" she grinned, cupping the side of my face. \"You truly are a rare specimen.\" \n\nI spread her apart again, and unable to locate her clit in the fuzzy light available, I covered my mouth over the general area and prayed that my licks and sucks landed with the accuracy of Muhammad Ali's punches. Mary's satisfied gasps and quaking body assured me that my persistency wasn't going unrewarded, despite the fact that I really had no clue what I was doing.\n\n\"Yes!\" she hissed. \"Fuck yes, right there. Oh, Pete, that feels so damned good.\"\n\nMy tongue, lips and jaw all started to ache from overuse, but the mere fact that Mary was thrusting her scrumptious pussy against my face helped me focus on her and not myself. Making her cum was more important to me than anything else in the world. \n\nHer breathing became labored, as if she were hyperventilating. The interior of her pussy, which had already been coated in a film of juice and saliva, became slipperier, sloppier, producing an array of different slurps which hinted my table manners were atrocious. Throaty sighs fell from her lips. Hands clutched at the back of my neck, mashing my lips against her vagina. Her entire body, particularly the tasty area between her legs, repeatedly went as taut as a high tension power line, only giving out slack when my lapping tongue took a few momentary tea breaks. Anything she uttered was unintelligible, because all of her words ran together in a similar ranting as Mary Poppins' in the movie of the same name.",
        "\"Yes, oh yes, I'm going to cum,\" she cried out softly, shuddering uncontrollably against my mouth. \"I'm going to cum!\"\n\nAnd then Mary came, but did so in a way that vastly differed from my expectations. It wasn't like the Hollywood blockbuster I'd come to expect \u2013 flashing lights, big explosions, lots of fireworks \u2013 but more along the lines of an independent film that chooses substance over glamour. \n\nHer eyes were screwed shut and her soft, sensuous mouth hung open in a silent moan, the pleasure so intense that her throat had shut down all access to her lungs. And then, gritting her teeth and trapping my head between her scissoring thighs, her entire body convulsed as if she were suffering a mild version of a cardiac arrest. \n\nIt was the sexiest thing I had ever bared witness to. Knowing that I was the sole reason her body reacted in this fashion, that I had successfully given her the greatest kind of pleasure a woman could receive; it turned me on like you wouldn't believe. \n\nSpent for the time being, Mary flopped to the mattress of grass like a rag doll, still in the throes of the aftershocks of her orgasm. \"Cripes,\" she sighed, gently rocking her hips back and forth against my mouth. \"Not bad, tiger. Not bad at all.\"\n\nI negotiated my escape from her clenched thighs and scampered up her body, savoring the feel of her warm, curvy form rubbing against me. Beads of sweat lined her brow and an excited, rosy flush had risen in her cheeks. She was smiling at me with gratitude. \n\n\"Hi,\" I offered.\n\n\"Hi yourself.\"\n\n\"Did I do okay?\"\n\nMary cupped my face and gave me a tender kiss. \"Don't be coy,\" she whispered. \"You know damn well that you got me off.\" \n\n\"Just checking.\"\n\nMy imprisoned erection brushed against her wet crotch, killing two birds with one stone by soaking up her juices with my slacks and giving me some much needed relief. The heat emanating from her pussy could be detected through not only my trousers but also my briefs, making my cock ache with desire. It wanted to be in there, sliding around inside her very own private version of heaven. \n\n\"You really want to fuck me right now, don't you?\" she said. \n\n\"Y-yes.\"\n\n\"What're the odds? I really need to be fucked right now!\" Mary kissed me softly while flicking her tongue against my mouth, tasting her own tangy juices. \"Is that what you want to do, tiger? Fuck me? You poor baby, you're so hard. I think we should definitely do something about that.\"\n\nEach time we kissed I could feel a part of me growing more attached to her, because I could sense that underneath her blatant dirtiness there lay an attraction for me that soared beyond the physical plane. A bizarre thought popped into my mind as I pondered this, and no amount of reason or logic could disable its overwhelming message: Mary and I were never supposed to meet. \n\n\"C'mon, let's stand up so we can get rid of these nasty clothes of yours.\"\n\nMary helped me peel each article away from my body, her hands constantly stroking the parts being revealed to her. When only my briefs remained, my level of anxiety sky-rocketed but I attempted to remain calm and collected. I failed miserably.\n\n\"Hey, there's no reason to be nervous,\" she said, being as perceptive as always. \"Look at me, I'm completely naked and I don't mind a bit.\"\n\n\"That's one of the many, many things that I find amazing me about you. How are you so confident?\"\n\nShe shrugged. \"I don't know, it's just the way I am. Guys have always been, shall we say, rather forward with what they think of my body, so the sexual side of stuff has always been pretty easy.\"\n\n\"You have a beautiful body.\"\n\n\"Yours isn't so bad, either,\" she grinned, giving me the once over.\n\nThe conspicuous bulge in my underwear was massive and you'd have to be pretty na\u00efve not to know what hid beneath stretched fabric. Two contradictive impulses were being carried from my brain to my hands: the first telling me to cover up my obvious erection and the second ordering me to tear away the flimsy material to reveal it. \n\nMary slinked her way into my arms with the grace of a feline, molding every exposed surface of her curvy body against mine. I squirmed when my erection rubbed against her abdomen. My instinctual reaction was to pull away so she couldn't feel it, but the psychic little minx dashed these plans by filling both her palms with my ass cheeks and grinding my crotch even harder into her. \n\n\"How does a girl get some cock around here?\" she whispered into my ear. \n\n\"Jesus,\" I groaned.\n\n\"Nope, I'm Mary. You gotta work on that, tiger. I mean, what's a girl to think when you keep calling her a guy's name?\" \n\nI laughed and delivered a playful swat to her ass. \"I know what you're trying to do.\"\n\n\"And that would be...?\"\n\n\"You're making jokes so you can relax me, make me less nervous.\"\n\nShe licked her way down from my ear and nuzzled my throat, taking turns nipping, sucking and kissing my tender skin. \"Is it working?\" she whispered. \n\n\"Um...yeah, you could say that.\"\n\n\"Does this mean you're going to lay me down on the ground?\"\n\n\"Yes,\" I groaned, running my hands through her silken hair as she lapped at my throat.\n\n\"Spread my legs?\"\n\n\"Uh huh.\"\n\nMary rocked her hips back and forth, using this gentle momentum to intentionally rub my cock through my briefs. \"And will you slide your cock into me?\" she asked in a sexy husk.\n\n\"Y-yes,\" I stuttered. \n\n\"Then let's get this show on the road, shall we.\"\n\nChanneling Supergirl's powers but leaving behind the tights and cape, Mary hastily dropped to her knees and yanked my underwear all the way down my legs before I could bat an eyelid. My rigid tool flopped around in front of her face, bouncing so close to her mouth that I could actually feel her warm breath.\n\n\"Mmm, this looks good enough to eat,\" she informed me, and then wrapped her soft lips around my hard flesh and thrust her face forwards, driving almost half of my cock straight into her hot mouth. \n\nThe sensation of being trapped in that warm, moist haven was sweeter than any detailed fantasy I'd ever constructed, sexier than any of the numerous wet dreams I'd awoken from as a teenager. Real life was definitely blowing fiction out of the water.\n\nHer moaning mouth sent vibrations along my shaft which, coupled with her slick, massaging tongue, almost made me spurt a huge load of gooey sperm down her throat. I managed to hang on by a tenuous thread, but if she didn't release me soon there would be no preventing the basic mechanics of the male body going into effect.\n\n\"Mary!\" I gasped. \"Y-you're gonna have to stop.\"\n\nMary loosened the stranglehold of her lips, gazed up at me with her big brown eyes and then spat my cock out of her mouth. It glistened in the moonlight, almost completely covered in a fine layer of her slobber. \n\n\"Did that feel a little too good, huh?\"\n\n\"It felt incredible.\"\n\n\"That's where us girls are lucky; we can cum as often as we want, whereas guys only have a couple of rounds in the chamber.\"\n\nI lowered myself to my knees and wrapped my left arm around her waist as I stroked her face with my free hand. We kissed, tenderly at first, and then with a raw passion that reignited out lustful need for one another.\n\n\"I want you so much,\" she whimpered, stroking my slick cock with a firm grip. \"I want you more than you could ever possibly know.\"\n\nHaving a gorgeous sex kitten in my arms professing such a hungry need took its toll on my restraint. I quickly eased Mary onto her back, making certain that her entire body was cushioned by the thick layer of grass. Then I speedily retrieved my fallen articles of clothing, folded them up double-time and inserted them underneath her head as a makeshift pillow. \n\n\"And you wonder why I like you,\" she said with a warm smile. Her legs were already splayed apart, inviting me to crawl between them and consummate our mutual attraction \u2013 of both the physical and the mental variety.\n\n\"I want you to be comfy.\"\n\n\"And that's one of the many reasons why I want to have sex with you. You're an amazing guy, Peter, and if most of those dumb girls at school don't see that, then hell, they really don't deserve you.\"\n\nGetting a tad antsy, Mary grabbed me by the arms and hoisted me onto her body. The underside of my erection slapped against her pussy, falling square into the damp groove between her lips. Her fingers joined the party downstairs, lifting my cock away from her crotch as she spread herself open for easier access. \n\n\"Put it in me.\"\n\n\"Is it safe?\"\n\nA grin curled across her lips. \"My pussy doesn't have teeth, if that's what you're worried about,\" she giggled. \n\nI cracked up with laughter. \"No, no, I was referring to...uh...contraceptives.\"\n\n\"I knew what you meant,\" she whispered, kissing me on the cheek. \"I was just messin' with ya. The answer to you question is no, I'm not taking contraceptives.\"\n\n\"Then it's unsafe?\"\n\n\"No, it's okay if you cum inside me. I'd prefer to swallow it, but it's totally okay if you want to fire a load into my pussy.\"\n\n\"But...\"\n\n\"I can't make babies,\" she said, and when she noticed the sadness in my eyes she added, \"Hey, I'm okay with it.\"\n\n\"How? How can you be okay with it?\" \n\n\"I can't tell you right now, but you'll understand why it doesn't bother me when I do.\"\n\nAgain I was struck by the overwhelming notion that all of this was impermanent and that I wouldn't know Mary beyond tonight. I've never been psychic or a seer, my total number of senses could be counted on the one hand, but this wasn't the type of premonition where images flash over your eyes like a slideshow; I felt this in my heart. \n\n\"You aren't staying, are you?\" I said. It was more of a statement than a question.\n\nMary ignored it. \"Ever heard of carpe diem?\" \n\n\"Of course. Seize the day.\"\n\n\"Then seize this moment for what it is. Focus on what's in front of you and try not to worry about what lies ahead. In this instance, my naked body is in front of you, and it desperately wants some sex.\" \n\n\"But, Mary, we need\u2013\" \n\n\"To have sex,\" she interjected. \"Yes, I'm well aware of that.\"\n\nI attempted to strike up conversation again but Mary thwarted all oral communications by crushing her lips against mine and forcing her tongue into my mouth. Resistance to her aggressive kissing was futile, so I laid down arms and defected to her side, too horny to object to her potent sexual advances. \n\nThe balls of both her feet suddenly dug into my ass and she slipped her free arm around my torso, leaving the other to hold her pussy open. And then, exercising immense strength for such a petite frame, Mary jerked her body into the air and attached herself to me as if she were covered in some kind of instant glue, not just showing off an inhuman display of acrobatic skills. \n\n\"Hi there, tiger,\" she grinned. \n\n\"Oh God,\" I groaned. \"This feels...I can't...you wouldn't believe how this feels!\"\n\nMary had impaled herself on my cock, having taken every inch of hard flesh into her tight opening in one foul swoop. It was a damp cul-de-sac, so warm and inviting that my erection wanted to pitch a tent and take up residence, prompting me to understand why men the world over were so obsessed with this particular area of the female anatomy. \n\nI lowered us both to the ground, taking careful measures so as not to knock Mary's wind out when we hit home. Our bodies were still locked together, the soft, furry sacs of my balls resting firmly against her ass cheeks. \n\n\"Hmm, you know what this means? This means I now own the title to your virginity.\"\n\n\"Dang, and I was so attached to it, too,\" I joked.\n\n\"The first time is always supposed to special, so I hope I earned it.\"\n\nThis was about as serious as I'd seen her get. A few lines etched across her brow and her beautiful brown eyes searched mine, indicating that she indeed took this virginity business to heart.\n\n\"I don't think you could've made tonight any more special if you'd tried. I mean, it's Halloween, we're in a cemetery, and you patiently held my hand as you taught me a thing or two about...well, let's face it, about sex. I don't think it's physically possible to forget about you or tonight.\"\n\n\"Me either. Anyway, I think we should be talking less and fucking more. What do you reckon?\"\n\nThe answer I gave was in the form of a kiss, which was succeeded by the slow removal of my erection and followed by its rapid reinsertion. We started out at this gentle paced rhythm with our bodies rocking in sync, unable to tear our eyes away from one another. \n\nEverything about this girl turned me on like no other: the tiny scar above her left eyebrow, her pretty doe eyes, shiny hair, luscious body, self-confident nature, sexy face, chirpy personality and utterly filthy mouth. If focused on too intently, just one of these qualities could send my willpower spiraling out of control and our lovemaking would be over in a matter of seconds. \n\nMary's pussy was a squishy mess, made even slushier by the state of my saliva drenched cock. Each withdrawal to the tip was mirrored by fully penetrating her yet again, but despite its slick texture, her vagina would tighten around me in a bear's grip upon my descent into her body.\n\n\"Harder,\" she whined, expelling a deep pant each time I stabbed her with my cock. \"Do me harder.\"\n\nI obliged her. The timeline between thrusts shortened, as did the lifespan of my ability to hold back that ever-looming orgasm. Our bodies made that unmistakable slapping sound as we collided with one another, driving me deeper, faster, harder, both of us compelled to induce not only our own climaxes but the other's as well. \n\nFor the first time I realized how humid it really was. Although naked, sweat was sliding down my face and accumulating underneath my armpits. That warm northerly wind was caressing my back, making my skin tingle as I squirmed atop of Mary. \n\nGroaning as though in agony, I squeezed my eyes closed in a desperate effort to last longer. \n\n\"Don't do that,\" I heard Mary moan.\n\n\"Do what?\" I whimpered, opening my eyes. She was looking up at me with misty, satisfied eyes and her mouth hanging agape. \n\n\"Don't think about anything else but me. I don't care if you cum before I do, just don't switch off the pleasure you're feeling.\"\n\n\"Okay.\"\n\nThe heart was willing but the genitalia was weak, zooming down the familiar path of inevitability like that round silver object in a pinball machine after it's gone into 'tilt' mode. \n\nDespite having an orgasm bearing down on me like an oncoming freight train, I was actually thrusting deeper and harder into her, incapable of throwing on the emergency handbrake that would prevent the ensuing explosion. \n\nOne didn't need to be a tacky fortune teller with a crystal ball to see that Mary was edging closer to her second climax as well. Out of breath, squirming on the ground as if she were on fire, parrying each of my thrusts with one of her own and grunting when my cock rammed deep \u2013 all of this suggested a girl who was on the brink of a full-scale meltdown.\n\n\"You're going to cum, aren't you?\" Mary panted.\n\n\"I'm afraid so.\"\n\n\"Pussy or mouth?\"\n\nSweat dripped off my forehead and splashed against her flushed cheeks. \"Huh?\" My brain had temporarily shut down, the pleasure too intense for any of my other senses to function efficiently.\n\n\"Do you want to cum inside my pussy or my mouth?\"\n\n\"Whichever you prefer,\" I gasped.\n\n\"Definitely in my mouth. I want to taste you.\"\n\nFeeling as if I'd failed Mary in a cataclysmic way, I jumped to my feet while she scrambled onto her knees, both of us resuming our previous positions when she'd blessed me with a brief blowjob.\n\nShe wrapped her silken lips around the shiny head of my cock, applying so much suction that it would be all over in mere seconds. One of her hands cupped my balls and the other disappeared between her legs, where I can only assume she was going to masturbate herself to an orgasm I should've supplied. \n\nA series of anguished moans vibrated through my shaft and Mary's face contorted into a mask of ecstasy, illustrating how dismayingly close I'd been to inducing her orgasm all by myself. Mary slurped, gobbled and sucked on me while her arousal peaked, and I lost it while gazing into her expressive, lust-ridden eyes.\n\n\"Oh God,\" I cried out, combing my fingers through her glossy black hair.\n\nMy cock twitched against her lips and streams of gooey sperm gushed from the tip. The thick, white juice splashed over Mary's tongue and sprayed the back of her mouth, startling me over the sheer quantity that had built up over the last few days. \n\n\"Mmm,\" she moaned. The tightness of her lips expanded and contracted, informing me that she was swallowing while simultaneously milking whatever semen had been left behind. \n\nWe remained positioned like that for quite a while, Mary on her knees, moaning with depraved delight as she slurped on my hard cock. Every dollop of available sperm had been sucked from the tip and guzzled down her throat, yet she continued her vigil down there until I started shrinking inside her mouth.\n\nExhausted both physically and mentally, along with having had every drop of cum drained from my balls, I unceremoniously collapsed to the ground and gazed up at the infinite universe. The moon had climbed higher into the twinkling sky, as if it were an expensive prop being shifted around on elaborate set. Perhaps Mary and I were performers on a stage, supplying a channel of entertainment for a higher being who likes to watch as much as we do. \n\nMary kissed her way up my body, originating at my rapidly shrinking member, journeying across the barren landscape of my smooth stomach, and terminating her expedition by using my stretched arm as a headrest. Soft strands of hair caressed my skin, followed by her warm, creamy cheek. She twisted her body onto its side and emitted a pretty sigh, then draped her right arm around my waist, snuggling so close to me that her crinkle of pubic hair tickled my thigh. \n\nThe aroma of her apricot scented shampoo assaulted my sinuses. \"You smell so delicious,\" I whispered, turning my head to gaze into her shadowy eyes.\n\n\"Meh, I'm kind of sick of smelling like apricots.\"\n\n\"Why don't you change shampoos?\"\n\n\"I can't,\" she stated, as if it were a criminal offence to defect to an alternately scented shampoo.\n\n\"Why on earth not?\"\n\n\"It comes with the territory,\" she replied cryptically. \"I don't want to talk about it, okay? Let's just lay here, you know, carpe diem.\"\n\n\"Seize the day,\" I murmured, returning the back of my head to the lush grass. I used my free hand to stroke her forearm, marveling over how I was permitted to touch this beautiful girl in such an intimate way. \n\nA comfortable silence descended on us much like nighttime cloaking daylight, changing not only the mood but also the manner in which we perceive things. The same person who had walked into this cemetery wasn't the same who was going to leave it. I was different, changed. My mind had undergone a mutation that, after my encounter with the delectable Mary Watts, could never be reversed. It was exciting and terrifying at the same time, knowing that the Peter Parker I had always been was now in fact an entirely new Peter Parker, one who had been with a girl so ravishing that her glorious visage would be forever stamped into his heart. \n\n\"You're not staying, are you?\" I said, not for the first time since I'd met her.\n\nIt took a very long time for Mary to answer. \"No,\" she replied cautiously, tightening her grip around my middle. \n\n\"Are you leaving tonight?\"\n\n\"Yes. There are some things you need to know before I leave, but...not just yet. For now, I want to cuddle with you, not dredge up anything with negative connotations.\"\n\nAdhering to her unspoken wishes, I zipped my mouth shut despite my increasing curiosity. I was saddened, although not at all surprised, to hear that she was indeed moving on to greener pastures. All night I had been consumed with the belief that our relationship was transient and that we would part company before the clock's hour and minute hands met at the twelfth digit; and now, from Mary's own admission, there was undeniable evidence that supported my hunch.",
        "Time developed wings and flew from my grasp, soaring as high into the sky as an eagle in full flight. The distance it had flown hadn't occurred to me until I realized that Earth's personal satellite, Luna, had repositioned itself far away from its last checkpoint. \n\nSome people live a whole lifetime in a single moment, and for me, however long we spent tanning ourselves under the moon's milky glow, that one moment with Mary snuggled up to me would continue to live on in my mind until the day I drew my last breath. \n\nAnd then Mary's lips brushed against mine and our tongues melted together. It was different from any other kiss we'd shared: filled with longing, sadness and a strange form of melancholic passion. Her cascading hair provided a silky canopy which threw us into darkness, but I didn't need eyes to see that this was a goodbye kiss. \n\n\"Don't go,\" I whispered. \n\nOur cheeks caressed, her smooth, hot skin reducing me to jittery mess. \"I have to,\" she said softly. \"C'mon, get dressed. Showing you will be a lot easier than telling you.\"\n\nWe ascended from the makeshift mattress of grass, breaking contact with each other to slip into our clothes. I threw mine on in such haste that I accidentally put my t-shirt on backwards, blushing with embarrassment as Mary, smiling the warmest of smiles, watched me correct this common fashion mistake. \n\nOnce completely dressed, Mary slipped her hand into mine and led me away from the bizarre patch of earth where I lost my virginity. We walked back into the cemetery, which was a veritable ghost town. Nothing moved. No sounds, other than the empty echoes of our footfalls, resided within. I half expected to see a tumbleweed blow across the service road we ventured down \u2013 none did. \n\nEntering the cemetery made me queasy. For some reason I was gripped by an apprehension that had previously eluded me. Maybe I was simply transferring my feelings of loss concerning Mary, and that being unsettled in a place such as this made more sense than the circumstances surrounding her departure. \n\n\"I'm sorry about before,\" I said, breaking the silence.\n\n\"Sorry?\"\n\n\"Yeah, for...you know, having a hair trigger.\"\n\n\"Are you serious?\" she gaped, and then playfully slapped my chest when she saw that I was. \"You are such a bird brain.\"\n\n\"I am?\"\n\n\"Yes, you are. You did incredibly well for your first time,\" and then she added in a matter-of-fact, totally frivolous voice, \"which is definitely what you come to expect from The Amazing Spider-Man.\" \n\nI cracked up with laughter. \"I knew you were going to make fun of my name,\" I accused, still laughing. \n\n\"Who said I was being a wiseass? It's not every day that a girl gets to make love to her very own superhero,\" Mary said affectionately. She slipped her arm around my waist, holding me close to her body as we made our way into the contemporary section of the cemetery. \n\nNot only had she catered for my love of comics \u2013 Spider-Man being my favorite flavor \u2013 she had also made a passing reference which hinted that what we shared was more than just good sex. \n\nCan that happen in a few brief hours? Is it possible to fall for a girl you know nothing about, and who is subsequently going to exit stage left from your life? I couldn't decide whether it was idiocy or romanticism seated behind the wheel that drives me.\n\n\"Do you have any idea how adorable you are?\"\n\nA sly grin slid across her lips. \"Yup. Pretty darn adorable if I don't say so myself.\"\n\n\"And modest, you can't forget that.\"\n\n\"Of course not!\"\n\nWithout even noticing, Mary had directed me away from the service road and we were walking between rows of evenly spaced, three feet wide slabs of concrete, which gradually sloped down from a peak and featured bronze plaques on either side. Many of them came accommodated with a small oval-shaped photograph of the deceased, more often than not they were smiling or in the throes of happiness when the camera had been aimed at them. \n\nGripped by an inexplicable case of unease, my footsteps began to shorten along with my breaths. I started to lag, but Mary dragged me along behind her like a speed boat towing a floundering water-skier. \n\n\"Wh-where are we going?\" I asked.\n\n\"I have to show you something.\"\n\nAfter a dozen more steps Mary came to such a sudden stop that I, immersed in my jagged thoughts and not concentrating on my surroundings, banged into her shapely body and brushed my arm against her soft, curvy breasts. This limited amount of contact flooded my stream of consciousness with a barrage of visuals depicting what we'd just shared together, and I was somewhat amazed that I wasn't awkward or self-conscious in the slightest. \n\nA grave rested at our feet, its bronze plaque lit up like a beacon due to the lunar surface's unflinching gaze. The embossed letters, which verified the occupant and their birth/death dates, glinted at me like a winking eye, almost as if daylight itself was streaming down from the heavens. \n\n\"No,\" I whispered.\n\n\"Yes.\"\n\nI released Mary's hand and slowly edged away from her, attempting to make sense of the fantastic and rationalize the impossible, but no catharsis presented itself. She slipped her hands into mine and squeezed with the grip of a squirrel, drawing me back into her orbit. \n\n\"This is a joke, right? Yeah, some kind of elaborate Halloween prank that you like to play on unsuspecting guys.\"\n\n\"You know that's not true. You can try to tell yourself that, but you know it just isn't true.\"\n\nShe eased into my arms and hugged me fiercely. The pleasant aroma of apricots filled my nostrils, subduing the extreme anxiety which had momentarily afflicted me. Hypnotized by this sweet fragrance, I wrapped my arms around her waist and returned her hug, reveling in the feel of her soft, warm form pressed to mine. \n\nIt turned out that Mary wasn't quite the stranger I had assumed she was. But perhaps, as I've come to suspect over the years since that fated night, I always new deep down whom she really was. \n\nEach year when Halloween rolls around with its pumpkins, frights and outlandish costumes, the teachers at our Green Hills High remind us of the senior student who lost their life due to an easily averted Halloween-related accident. Another senior student, whose name eludes me, had dressed up like one of the ghostly killers from the movie Scream, and in his infinite wisdom had secured a hunting knife to add that extra spice of realism to his costume. Hopped up on drugs or drunk on life, the teenager in question had been in the wrong place at the wrong time, having dashed around a blind corner and accidentally plunged his knife into a female student's chest.\n\nThat had been eight years ago today. \n\nMany students had passed away while attending Green Hills High and each had been memorialized in our library with a special plaque and photograph hung on the wall. I had passed Mary Watts' name and face every day, yet it was only now, at this very moment in time, that I ever recalled having seen either. \n\nI pulled my chin out of the crook of her shoulder and met her unblinking gaze. \"This is impossible,\" I said. \n\n\"Nothing is impossible.\"\n\n\"But you're...I mean...are you an angel?\"\n\n\"No, I'm not an angel,\" she laughed, giving me a quick kiss on the lips. \"With my foul mouth, I don't think that winged mob would take me. Think of me as...more like a courier. I'm someone who delivers messages.\"\n\nThis was certainly the most bizarre conversation I'd ever had the privilege to be a part of. It felt as if I should've been dreaming, but having Mary's body snuggling against mine felt as real as any other sensation ever experienced.\n\n\"So you've been sent to me as a charity case, have you?\"\n\nMary pouted at me. \"You know, I'd be quite insulted if I didn't like you so damn much. I didn't have sex with you because it was my job. In fact, I'll probably lose my job because I had sex with you. All I was supposed to do was come down here and relay a message, but I've been following your case for a while and I just knew I had to have you.\"\n\nAlthough I always claim to be an agnostic, the notion of God and an afterlife has always appealed to me, possibly for no better reason than for fear of my existence lacking any meaning or purpose. I can't accept that everything we do is pointless.\n\n\"So if you'd planned this all along, why didn't God just stop you?\"\n\n\"Ever heard of free will? Well, He grants it no matter what, even when He knows you're going to get up to mischief.\"\n\nI kissed Mary's neck and stroked her back through her t-shirt, my fingers also detecting her bra's straps underneath the yellow fabric. \"I'm glad He didn't stop you.\"\n\n\"So am I,\" she sighed. \"Although I do feel kind of guilty.\"\n\n\"Oh? Why's that?\"\n\n\"Because I'm a thief. I stole your virginity when it was meant for another girl.\"\n\n\"I forgive you,\" I whispered.\n\nMary grinned. \"I'm sure that you do.\"\n\nThere were so many questions that begged answering \u2013 where was she from, what was it like, what does she do, who does she see, and a million other variations \u2013 but I knew that Mary would be unwilling to serve them up to me, or that if she did, each response would probably be alien and beyond my comprehension. \n\nBesides, what's the point of knowing the ending to the story when you're basically still exploring the beginning?\n\nThere was, however, one question that I would be permitted to ask. \"So what was this message you had for me?\"\n\n\"Well, it isn't so much a message as it is a shove in the right direction. See, sometimes things don't turn out the way they're supposed to, so we, that being myself and others like me, come down and reassert destiny onto its proper pathway. But I'm probably out of a job now, seeing as how I've broken all the rules. After what we just did, what I tell you might not fix what's broken, or it will be fixed but fate will carry you down a separate path than was intended.\"\n\n\"So what do you have to tell me?\"\n\n\"Anna Jones is in love with you.\"\n\nI blinked with shock, totally unprepared for this news. \"You're kidding?\"\n\nAnna Jones, the cute little brunette who always cruised by my desk for a chat during our art class, was in love with me? If Mary had informed me of this before our sexual exploits, I might not have believed her. But now, after having a girl like Mary Watts gaze so affectionately into my eyes and share herself so completely with me, my initial inclination was to believe her.\n\n\"Nope, she's had a crush on you for about a year. Anna is an old-fashioned girl, and no matter how much she likes you, she will never make the first move. She was the one you were supposed to lose your virginity to.\"\n\nBeing inundated by so much new information \u2013 not to mention purging a lot of nasty character traits, such as my issues with self-confidence and introversion \u2013 made my head spin like a turbo-charged carousel, minus the calliope music. \n\n\"I wish I could stay,\" she said softly, stroking my face.\n\n\"I wish you could, too.\"\n\n\"Maybe some day, tiger. Maybe some day...\"\n\nMary pressed something soft into my hand and then kissed me, sharing our lips, tongues and breathless sighs for an epic goodbye kiss. Its duration was incalculable, our passion unsurpassed. So scintillating was our kiss that we couldn't keep our hands stationary, caressing each other's hair, necks, faces and backs as our tongues melted into one. Her lips were tender, the inside of her mouth so warm and moist, playing the perfect host to my flicking tongue.\n\nI should've been disgusted that I was making out with a girl who was essentially no longer a member of the living, but no one had ever felt more alive than Mary did while being held in my arms.\n\n\"I'd love to fuck you again,\" she murmured, massaging her breasts against my chest.\n\n\"And I would love to let you,\" I whimpered in return. \n\n\"Unfortunately, I have to make like a tree, tiger.\"\n\n\"And leave,\" I sighed.\n\nAnd then, when I pulled my mouth away and opened my eyes, Mary was gone. My arms were draped around thin air, holding nothing but millions of particles that were invisible to the naked eye. \n\nI got down on my haunches, kissed the tips of my fingers on my left hand and brushed them against Mary's photograph. It was a shot of her angelic face, which was lit up by such a dazzling smile that no flash would have been necessary. \n\n\"You're one in a million, Mary,\" I whispered.\n\nThe object she'd pushed into my hand was her wadded up pair of panties; too lime to be called yellow but too yellow to be called lime. I graciously tucked the gift into my pocket, relieved to have something tangible to not only remember Mary by but also the pivotal moment in which my life had changed forever. \n\nI rose from my crouch and my legs carried me back to the maintenance road. From there, I walked towards the exit of the cemetery feeling strangely jubilant. Sadness should've been today's special, but buoyancy had replaced it as the chef's choice. \n\nBeyond the rusty front gates was a life waiting for me, ripe for the plucking, and with the knowledge I now possessed, I could finally break apart my shackles and face the real world for the first time. \n\nComics, movies, books \u2013 all of these things were still important to me, but asking a certain cute brunette out on a date would take precedence over all else.\n\nBut know this. No matter what happens in my life, who I'm with, what I'm doing or where I'm doing it; one thing will always remain certain: I will never speak ill of Halloween ever again.\n\n^ ^ ^ ^ ^\n\n First of all, I'd just like to extend a big thank you to Tracey, a good friend who had some valuable input to this story. Secondly, if you've come this far, please don't forget to vote and/or leave feedback, either is much appreciated. \n\n I had a great amount of difficulty choosing a category for this story, because while it has an element of the supernatural, it wasn't essentially a horror story nor was it sci-fi. At its heart, it's a First Time story, so that's why it's in this category.  "
    ],
    "authorname": "Stefan_J",
    "tags": [
        "jonah jameson",
        "outer limits",
        "carpe diem",
        "gooey sperm",
        "bat eyelid",
        "fine layer",
        "sit watching",
        "warm wind",
        "service road",
        "peter parker"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/things-that-go-hump-in-the-night"
}