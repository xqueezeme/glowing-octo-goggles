{
    "title": "The Lady and the Cowboy Ch. 08",
    "pages": [
        "I hate him, I told myself. I hate him, I hate him, I hate him. Perhaps if I repeated it enough times in my head, it would suddenly become true. I tried to focus on all the bad things about the man who had robbed me of my sense for the past two weeks. He was overbearing, overconfident, and completely unnerving. How could I even consider being with someone like that, someone who was wholly able to reduce me to an illogical, quivering mess? \n\nI ached. I didn't hate Tripp. What I did hate was being a slave to my emotions, which were telling me that I was in so far over my head at this point that there was no recovery in sight. I couldn't sleep...hell, I could barely breathe. The staggering words I had spoken...no...yelled at Tripp that night kept echoing through my thoughts. Lying in bed, I realized they weren't as warranted as I had believed they were when I harshly dealt them, especially that part about hating him. I couldn't hate him if I tried, no matter how much I wished I could. \n\nBut he wasn't trying. He wasn't even giving us a chance! He had said something about next summer. That was of course just a gentle way of telling me he didn't want to make it work, that he wasn't interested in continuing whatever amazing, wonderful thing this was. Was it only I who felt it? Was it simply the fact that I was in the throes of my first love and completely blinded by the man who had awakened me to passion? I had heard of this happening so many times -- a girl falling for a man who was only interested in one thing. Yet there had definitely been hurt all over his face when I told him I didn't love him, and that one glimpse of emotion he showed was what pushed me out of bed.\n\nI shouldn't have been in that bed anyway. It was the most awful, uncomfortable bed I'd ever slept in. Lumpy, cold...even the covers felt scratchy and coarse. I compared it to Tripp's heavenly bed that I floated away in every time I lay on it, like I was sleeping on a cloud. That of course had nothing to do with the man who slept in the bed with me. It was just a damn nice bed... perhaps it was the mattress. \n\nQuietly, as I was so used to doing by now, I snuck out of the cabin. What time was it, I wondered. I had been trying to sleep, grieving for God knows how long. Time wasn't something I was consciously aware of.\n\nIt must have been late though, I realized when I saw that most of the lights were out among the buildings in the main part of the ranch. The Lodge was silent and empty, and even the paper lanterns that usually lit up the night hung in shadow. It didn't deter me, I could still see well enough to find the creek in the back of the guest area. Hell, I had snuck off to Tripp's cabin so many times, I could probably find it with my eyes closed.\n\nI don't know why I expected to see his lights on. Perhaps because I was used to it, but his cabin was certainly dark now since he was undoubtedly sleeping at this hour. That was all right, he would simply have to wake up and listen to what I had to say. He had to listen! The guilt of my actions from that night was quickly washing over me like icy water. \n\nThe steps to his porch creaked, piercing the quiet night, as I walked up to the door. I was nervous, but at this point, desperate to see him. I didn't want to leave things between us as we had left them earlier. My heart beat wildly as I banged harshly on the wooden entrance, trying to be noisy enough to wake him. Impatiently, I waited for some sign that he had heard me, and after a few moments I knocked again, louder this time. Why wasn't a light turning on? Why didn't I hear someone shuffling around inside?\n\n\"Tripp?\" I called loudly as I banged some more. \"Tripp I want to talk to you!\" Did he not want to see me? Was he purposely ignoring me after what I had said? My stomach started to lurch even more than it already was. \"Tripp! Please open up!\" \n\nI ran around to the side of the house where his bedroom window sat. It was still dark inside, and the curtains were drawn. Harshly, I rapped on the window. \"I didn't mean it, Tripp! I didn't mean what I said!\" I cried. My flat hand continued banging until it began to sting and tears trickled down my face. He wasn't in there; he would have come out if he was. \n\nSlowly, I went back up to his porch and sat down on the wood in front of his door, bringing my knees up to my chest so I could rest my head on them. With one last tiny bit of hope, I reached up and tried the door handle, but it was locked. Where was he this late at night? \n\nAs I looked up at the sky I noticed I couldn't see the stars. Dark clouds billowed in clusters around the moon, and it looked like tomorrow it was going to rain. \n\nWho was I kidding, it already was. \n\n* * * * *\n\nDesert. That's what I saw as we drove through the ranch back to the cabin the next afternoon, returning from the police station in town. There was nothing even remotely attractive about it. A light rain trickled down upon the windshield as I sat there dead in the back of our van, staring out at the place that had in one night transformed from an open western paradise, into a dry, barren prison that would forever jail my heart. \n\nI couldn't even find happiness in the fact that Willy in all likelihood was going to be convicted for his crimes last night. The Watermans were a big name in this part of the state, and good friends with the district attorney, who had said there shouldn't be a problem with the prosecution. With as numb as I was, I realized I didn't care anymore what happened to the man... well, maybe I cared a little. I was still furious with him, and part of me wished Tripp hadn't beat him so badly, only because he left nothing for me to have. I stiffened thinking about the way Tripp had torn into Willy last night. Thank goodness he wasn't going to get in trouble for the thrashing he delivered. Prosecutors had said he'd acted in my defense, which was true. Personally, I thought he might have gone a little overboard, but I certainly wasn't complaining. \n\nThere was no way though that I could be more miserable than I was at that moment. As we drove through the ranch, it took me back to that first night when we arrived here, when I had seen him on that horse in the corral, bucking about like a wild man on a mission to prove something. Had I said I couldn't be more miserable? I soon found out I could by reliving the memories of the past two weeks.\n\nI was more rational today, but I was also more dejected, probably because as the time quickly passed, the more it sank in, the fact that it was over. It was also heartbreaking because I started to realize Tripp had been right. The only thing I could be mad at now was the horrible situation we were in. There was no way to make it work, and the awful part was I had known it from the beginning. Still, I had run to his cabin that night, and begged him to make love to me. \n\nThe main question running through my foggy brain was whether or not I was going to see him again before we left. I still needed to apologize...but that could always be done through a cordial letter or something of the sort. Oh god, how could I even think of doing something so awful? Besides, I knew I needed to see him out of a purely selfish desire to one last time indulge myself with his image. I'd go to him again tonight, and if he wasn't in the cabin, well then maybe it wasn't meant to be. \n\nLast night I had wanted to apologize, but more importantly, I had wanted to hear how he felt, even if his declaration was as horrible as him telling me he didn't feel the way I did. At least then I would have closure. After finding the darkened cabin empty, I had sat there by his door for an hour. I hadn't been waiting for him, but I felt closer to him, sitting there on his porch. It sure was better than lying in that awful bed back at my cabin, which I eventually returned to.\n\nThere was still a good amount of the afternoon left when my parents and I returned to the cabin. The family spent most of the day packing and relaxing, as we would be leaving early the next morning. No one was really in the mood to do anything fun. It was raining, and the events of last night had quickly put a damper on the enthusiasm my family usually showed. Everyone around me was being sickeningly nice, and I hated it. They knew how miserable I was, both from the trials of yesterday and the fact that I was going to be leaving something behind, a part of me I would never get back. \n\nWhen my father had offered for us to leave this afternoon, I had told him no. Immediately after I said it, I asked myself why, but I didn't change my answer. Perhaps I was a masochist, wanting to draw out the torment this place continued to inflict upon me. I didn't even pack, like the rest of the family did. Packing seemed so final. I suppose part of me clung to some small strand of hope that I was going to wake up from this nightmare. I could always do the packing later... Yes, I'd do it later...\n\nA few hours into the afternoon, as rain continued to trickle over the land outside, Luke's voice came from the entrance to the bedroom. \"Kira?\"\n\nI lay in bed reading, facing the door, but quickly turned around so my back was to him. I wasn't talking to Luke. Last night, I had been too upset to do much of anything except go right to bed and miserably lay there, trying to sleep. I'd done enough yelling with Tripp, and didn't want to get into another screaming match with my brother. Today, I found I was so drained, though still quite furious, that it was easiest to simply work with the silent treatment in order to express my anger. \n\nThis was the third time Luke had tried talking to me that day. I still wasn't interested. He had been good about leaving me to myself, but now, I heard him shut the door and walk toward my turned back. Lucy and my parents were in the other room playing a board game, but their voices cut out when the door closed. Groaning inside my head, I made a point of continuing to ignore him, even though we were the only two people in the room.\n\nThe bed sank a little as I felt him sit down on the edge behind me. \"Kira, c'mon, I'm your brother,\" he said softly. I snorted and went right on reading the same damned paragraph that I was starting over for the third time now. Some brother, I thought, remembering his behavior from the previous night. \n\nHe continued even after I made it clear I wasn't interested, but this time with regret in his tone. \"You know, when Mom and Dad came in the Lodge last night and told me what happened, I don't think I've ever been that freaked out before. I saw red...I was worried,\" his voice became slightly broken. \"I was so worried for you, Kira. I've been worried about you this entire vacation, and that moment was it for me, the last straw, I couldn't contain it anymore.\"\n\nI listened, though I pretended not to. To further sell the act, I turned an unread page in my book. Luke didn't understand I was no longer a little kid. Growing up, he'd been there for me, and it was wonderful. But now...\n\nI decided to talk. Maybe I could end this quickly. \"Luke, that's your problem. You worry too much. I'm not in braces and pigtails anymore, and Tripp is not Bobby Thompson from the third grade who you can push in the mud after he pours applesauce all over my dress.\" My voice was cold, and I might have felt bad if my depression as well as my anger for his actions last night hadn't prevented it.\n\n\"You're right, this is much more serious...\"\n\n\"You can't just step in whenever you feel like it and act like you own me!\" I started to get angry. I knew I was taking out my pain and frustration on my brother, although he did deserve it. \"I know you worry, but that doesn't give you the right...you have to let me live my own life!\" \n\n\"I didn't want you to get hurt like I did! I didn't want to see you have to go through that!\" He raised his voice, trying to get his point across.\n\nI knew he was talking about Susan, his old girlfriend, and I now I knew how he had felt, and where all that angry grief came from that summer she had broken it off. I turned and faced him now.\n\n\"Well...it looks like even you weren't able to prevent that, Luke,\" I said without any trace of emotion in my voice before I turned back around, dismissing him with my body language. \n\nHe stood up off the bed and walked to the door, but paused before opening it. His voice was soft and apologetic. \"The only thing I can tell you, Kira, is that with time, I got over it. The pain doesn't last forever.\" With that, he opened the door and exited the room, unable to see the tears that began to wet my pillow. \n\n* * * * * \n\nThat evening, I walked to the barn in the dark, damp weather, listening to guests outside as they roamed the pastures, making their way to the Lodge for the usual festivities. It seemed odd that everyone was acting so normally, but I reminded myself that there was no reason why they shouldn't be. It was only I who felt anything but typical.\n\nOriginally, I was going to try Tripp's cabin once more, but I changed my mind at the last minute, especially after realizing that it was still quite early in the evening. There was one thing I wanted to do before I left this place. The sun was setting, although you couldn't really tell because of the rain clouds that cluttered the sky. At least the weather today matched my mood. \n\nLike most nights, the barn was empty, just as I knew it would be. For a moment, I simply walked through the dim, vaulted building, brushing my fingers along the wooded stable doors as I went. I tried not to become heavy with emotion as I noticed the small things in this place which held so many recollections from the past two weeks. There was the saddle hanging on the wall -- the large one Tripp would use to take us riding on. There was the jet black mustang with the funny name down the way. There was the empty stall with the broken door...where he'd kissed me for the first time. It was odd how as I walked through this place, I didn't even think about what had gone on here last night. There were too many wonderful memories for that. \n\nSlowly, I walked down the narrow part of the barn that held the stables, and noticed one of the gates was slightly ajar. I hesitated. Funny it should be that one, the one I tended to visit whenever I happened to come to this place with Tripp...and it was the one I intended to visit now. \n\nI couldn't leave, not without saying goodbye to her. Quietly, I walked in and went over to where the foal lay. She seemed to recognize me when she glanced up, shuffling a bit. I sat beside her and gently started stroking her head, tracing the white spot that began just before the mane. How beautiful she is, I thought to myself. Before I knew it, I began to softly hum, staring aimlessly at a soft patch of hay on the ground.\n\n\"I'm sitting here feeling sorry for myself,\" I whispered after a moment, talking to the little filly. \"But I suppose that's selfish of me, isn't it? I'm not the one with a broken leg that is threatening my very existence,\" I paused in contemplation. \"We're actually quite similar, you and I. I wonder which of us is worse off. I'm broken too, and right now I'd welcome a broken leg if it meant that my heart could somehow mend. I feel like my existence is threatened, that's what it seems like.\"\n\nThe horse seemed almost like she understood, and gently nuzzled my hand as I spoke to her, as if trying to comfort me. My voice lowered to a whisper. \"I love him, you know, I'm sure of that now.\" The intense realization came upon me quickly. I of course had known I loved him, but actually admitting it to myself was something different.\n\nI continued talking, slowly growing deeper in sorrow. \"I don't know how to be me anymore. I can't be Kira, the old Kira, the way I used to be. That's love isn't it? When someone changes you, and you realize you can't go back? ...And when you lose them and you realize you can't go on?\"\n\nI broke, and began to sob quietly. \"I wish I knew how to fall out of whatever this is! Falling in is so easy, especially with him...it was so easy, easier than anything I've ever done. Why can't leaving be just as simple? I wish I knew how to be something else, how to define myself as anything but his! How pathetic is that?\" \n\nPerhaps not as pathetic as spilling your heart out to a crippled horse, yet I didn't care. I tried to steady my voice, looking down at the small injured animal. \"But look at you,\" I bowed my head, almost as if I were praying, and turned to the young foal, who was gazing up at me with sad eyes. \"You seem weak...\" I murmured as tears silently rolled down my cheeks. \"I wonder if you will ever run again, or feel the sun on your mane. Will you ever have something worth living for?\" \n\nI didn't hear anything, perhaps the ringing in my head prevented it, but I saw a flicker of shadow across the floor, cast from the dim lighting that lined the stable walls. My vision was foggy from the tears, but I glanced up to see what had cast it. \n\nHe stood there, leaning against the open stable door, the man who I was weeping over. At first, I thought him a fantasy my mind projected, but I became nervous after a few moments, when he didn't disappear. How much had he heard? I had dealt with enough shame last night when we argued, when I practically begged for his love, begged for him to want me through my angry words. \n\nNow, he looked pretty bad. There was a day's growth of whiskers, and his clothes were disheveled and unkempt, as was the dark hair I could see poking out from under his Stetson. His face was tired, as if he hadn't been to sleep in a long time, and a small brown mark lay on his cheek below his eye where Luke had struck him yesterday. Every bit of him was hard and rugged, and I still found the sight of him enchanting. \n\nHe didn't say anything, but just stood there, staring at me. What was he thinking? I couldn't tell, which was unusual for us. He didn't look sad, and there was no misery on his face, as there was with mine. It hurt me even more to see that. \n\n\"Have you come to say goodbye?\" I asked softly, trying to keep my voice steady. If only I could will myself to look away from him, but I couldn't. No, I wanted to torture myself awhile longer. \n\n\"Goodbye...\" he said it, not to me, but more to himself, as if contemplating what the word meant. \"I've been looking for you,\" his soft voice caressed me gently. \n\n\"Well here I am.\" A moment passed and he still made no move. \n\n\"She's not weak, Kira, she's strong,\" he said at last, passion igniting in his voice. \n\n\"Oh god, how much did you hear?\" I looked away now to stare at the floor with tears running down my face again, this time in shame. \n\n\"No, Kira, no!\" he whispered harshly as he quickly walked over and got down on his knees in front of me. He was telling me not to be ashamed as his hands grasped my face and forced me to look at him. The feeling in his eyes was indescribable. \n\nWasn't there something I had wanted to tell him? Oh yes...best to get that off my chest. \"I didn't mean what I said last night,\" I whispered, still embarrassed. \"I don't hate you...\"\n\n\"I know,\" he said softly. \"I heard everything you just said, I've been sitting in one of the stalls since you came in.\" The way he said it, you would think he was telling me what he ate for lunch, as if there was nothing wrong with what he just admitted to.\n\n\"You...you...\" I stuttered with a mix of anger and intense mortification. My face was turning red, I could feel it. Unfortunately at that moment, I was having trouble forming words, so I could neither berate him nor try and explain my earlier confessions. \n\n\"Kira, it's all right, I know you were angry last night. Hell, I was angry too...\"\n\nDid he honestly think I was still feeling sorry for my poor choice of words last evening? \"It doesn't matter!\" I spat out, still humiliated, before I took a deep breath and tried to calm myself. \"I've realized that you were right. I do care for you, Tripp, but you were right. There's no way to make it work.\" I attempted to be strong in order to redeem myself for my moment of weakness he had overheard.",
        "He stared at me blankly for a couple of seconds before his face hardened and his voice became deadly serious. \"Don't you do that, Kira. Don't try to run away from it...\" \n\n\"But you were right! I didn't give you a chance...all I heard last night was that you didn't want to be with me. That's what I took it as. But I see now, I see that it can't work, you were trying to let me down easily because you were thinking clearly when I wasn't.\"\n\n\"Damn it, woman! I just stood a few stalls down and listened to you tell that horse that you love me. \"\n\nI hesitated. \"No...\" I whispered in pain. \n\n\"No? Are you going to sit there and tell me that everything you just uttered was a lie?\"\n\n\"No....you weren't supposed to hear it! That's not fair, I thought I was alone!\"\n\n\"Well I did hear it. And I'm damn well not going to let you take it back!\" At this point, his voice became just as pained as mine was. \"Jesus Christ!\" he hissed before finally turning away for a moment.\n\n\"Tripp? I'm so confused...\" I whispered, trying to understand what he wanted from me. \n\n\"You're confused?\" He turned back to stare at me, his eyes wild. \"I don't know what the hell you've done to me, woman. I thought I did the right thing last night, by realizing that whatever this is can't be more than a powerful, lustful infatuation. That's what logic tells me --that two weeks isn't long enough to feel this. But my god...\" he stood up and yanked the hat off his head while running his fingers through his unkempt hair. \n\n\"Did you know I slept in here last night?\" he continued as he began pacing in front of me. \"I slept here because my goddamn bed smells like you.\" \n\nI sat there, shocked at what he was saying. My heart began beating wildly. \n\n\"I couldn't do anything in that cabin. I couldn't even sit in my living room without seeing you in front of the fire, curled up on my rug...or take a shower without picturing you under the spray. I opened up my fridge this morning and took out that carton of orange juice that you like to drink from, and it was driving me crazy knowing your lips had been on it. You're everywhere, Kira!\"\n\nI stood at that point, taking a step toward him. He looked as if he were in agony as I took his face in my hands, and this time it was my turn to force him to look at me. His eyes were deep pools of emotion. There was feeling there, and tenderness, and...something else.\n\nHe calmed himself for a moment, and then his voice was slow and deliberate. \"I got scared last night, because I didn't know what this was. ...But when I realized that I wouldn't be with you anymore, once it set in that you were really leaving,\" his voice became burdened, \"That's when I really became scared.\" \n\nI knew then what I saw there in his eyes. \"Tripp...\" I whispered.\n\n\"Don't leave,\" he interrupted as he grasped my shoulders, his eyes pleading with me.\n\n\"What?\" I was confused, but his words were quickly having a glorious, dizzying effect on me. \n\n\"Please,\" he sounded as if he were hurting. \"Don't leave me.\" \n\n\"But...\" I tried to get something out before his mouth came down and caught mine in a spellbinding kiss, capturing me as if trying to keep a part of me forever. I was a goner and I knew it. Pretty soon I'd be agreeing to whatever he said. I'd do whatever he wanted, I had no control when he held me and put his mouth on me. That was all right. I didn't want any control at this moment. I simply yearned to be washed away in the wonderful knowledge that he wanted me. \n\n\"California...\" his voice was caked with emotion as he buried his face in the crook of my neck, stroking my cheek with his thumb. \"Don't you understand that I've got no direction without you,\" he softly nuzzled my neck as he whispered against my skin. \n\n\"Oh, god. Oh...Tripp, what are we going to do?\" I whispered with desperation in an oncoming haze of joy and euphoria.\n\n\"We make it work,\" he said simply. \"That's what two people do when they're in love.\"\n\nEither my heart stopped beating at that moment, or it began beating so quickly that it overwhelmed me. Whichever it was, my chest felt like it was about to explode.\n\nHe continued. \"I've never been in love before...but if love is what you described it to be a moment ago, then I love you more than a man ever loved anything in his life.\" \n\n\"Tripp...\" I whispered breathlessly, not wanting to wake up from this magnificent dream. \"Say it again...\" I couldn't believe what was happening.\n\nHe chuckled lightly before he looked down at me seriously. \"I love you,\" he said, as if testing out the words. \"I love you...I love you...\" \n\nIt was a soft mantra the way he kept saying it as he placed kisses along my neck and up across my face. I clung to him, not wanting him to stop. The harder I pulled him to me the more I realized I wasn't dreaming. My hell had just turned into heaven, and at that moment I knew a thousand miles of geography between us was nothing. In just two short weeks we had formed something that could overcome that.\n\nWe stood there in each other's arms for a few moments. \"Mmm, Kira don't you want to say something to me?\" he moaned against my neck.\n\nI giggled with delight. \"What for?\" I teased, still clutching his head to me. \"You've already heard me say it with your eavesdropping. Perhaps you shouldn't be so stealthy...\" \n\nHe pulled back slightly and looked at me. \"I know you love me,\" he grinned. \"But if you won't say it then I guess I'll just have to get it out of you using my methods of torture.\" His sensual voice caressed me and I shivered. As he ran a finger down the front of my chest, I had no doubt what sort of methods he referred to. \n\n\"Torture you say? That sounds like something I might enjoy,\" I reached for him.\n\nHe scooped me up in his arms and moved us to one of the larger, empty storage stalls where a couple of blankets were laid out. I guessed this was where he had slept last night. He smiled down at me. \"Uh uh, you're supposed to be in agony...\" \n\n\"Pleasurable agony, darling,\" I grinned at him and he burst out laughing, remembering his words from days ago.\n\n\"What am I gonna do with you?\" he said as he wrapped his arms around me after setting me on the ground.\n\n\"Love me,\" I whispered in his ear, grabbing the collar of his shirt and pulling us down onto the soft covering above the straw. \"Just as I love you with all my heart.\"\n\nHe squeezed me. \"That goes without saying, honey.\" \n\n\"Oh, but I do love to hear you say it.\"\n\n\"Well in that case,\" he whispered in his sexy southern drawl as he began unbuttoning my blouse. \"I love you, Ms. Davis.\" My skin began to warm as he let my shirt hang open and moved to hold my face while he kissed the side of my neck. \"I love everything about you...\"\n\nI sighed contently. \"Everything?\"\n\n\"Oh yes, ma'am,\" he whispered slowly, his words heavy. \"I love your smile, your laugh, your eyes that light up when you're happy.\" His tongue brushed my neck behind my ear as one hand moved my hair out of the way. \"I love this little freckle that hides behind your earlobe...\" \n\nI shivered with delight, not having even realized I had a freckle there. He continued talking as he placed kisses along my neck and then upon my shoulders and collarbone.\n\n\"I love how you look like an angel when you're sleeping, and how you scrunch your nose up when I wake you in the morning. I love the way you bite your lower lip when you're trying to think of something to say, but can't find the words.\" His thumb came up to lightly stroke my bottom lip as he said it. Then, slowly, his hand moved inside of my blouse, and his fingers caressed the tops of my breasts that thrust out of the low-cut bra I wore. Heat engulfed me as he reached into the lace to find a pebbled nipple, and I flushed at the level of intimacy.\n\nHe laughed affectionately before whispering sensually in my ear. \"And my darling girl, I love how you still blush for me when I touch you...\" \n\nHis soft words thrilled me even more than his fingers moving upon my flesh. I moaned softly with a mixture of physical pleasure and sheer, unadulterated joy. Yes, I was blushing, blushing for this unbelievably perfect man who I had fallen for. I loved him.\n\nAnd he continued to tell how he loved me, his voice laced with thick desire. \"I love how full your breasts are...how they fit perfectly into my hands. I love how your nipples stiffen when they're under my fingers...I love how you moan when I do this...\" He gently began circling the nipple inside my bra with two of his rough, calloused fingertips, and it rose to meet his touch. How well he knew me, I thought, as I began to softly whimper between shallow breaths. \n\nWhen his hand left my breast I groaned in disappointment, and he chuckled knowingly. \"Don't worry, love, there's more...there's always more.\" He slowly began to pull my open shirt down my arms, feeling as much of me as he could along the way. His words were like an aphrodisiac, caressing me, making me ache for him. \n\n\"I love the way you shiver when I undress you...\" he continued as my clothes left my body, leaving me in my bra and panties. The chilled air of the barn cooled my skin, but Tripp's mouth was eager to warm it by kissing and licking every inch he unveiled. The places he couldn't reach with his lips, he stroked with his fingers. It was too much for me. His ardent declaration of love coupled with what he was doing to my body heightened my sense of ecstasy. \n\nAt some point his shirt had come off as well. Everything was hazy to me as we drowned ourselves in passion. I felt hard, bare skin under my fingers and soon my hands were just as active as his, running over his solid torso in need. Muscles rippled under my grip as he fiercely held me to him. The hands on my back that supported me stopped caressing briefly to unhook my bra before he quickly turned me around and wrapped his arms around my midsection. \n\n\"I love how beautiful you are, Kira,\" he groaned as he moved my hair away from my neck before slowly dragging his tongue up the feverish slope. \"I love how when I see you naked I completely lose control.\" His thumbs lightly slid under the loose bra straps and guided them down my arms. More groaning ensued, from both us. Once my breasts were free I slid my arms up behind me and Tripp guided them around his neck.\n\nMy flesh melted under his touch as we sat there in the barn on top of the soft hay. He moved his hands gently over the front of my body, running his fingers over my belly and breasts, making me tremble in his arms as he continued to kiss my neck. The pulse between my legs grew into an unforgiving throb, and I found myself losing patience. I ground my hips against the heavy bulge in the front of his jeans. \n\nGroaning, he stilled my movements by firmly cupping me between my legs. \"I love how for someone so innocent, you know just what to do to make me wild,\" he murmured. \"Luckily I have some tricks of my own...\" I held my breath as his first and middle fingers began to steadily move over my wet slit, which was hardly concealed by the small inch of thin, damp, satin fabric that lay on top of it. \n\n\"I love the way you always wear the sexiest panties.\" He seemed to be amused with my underwear, slipping his fingers into the crotch of the tiny garment and playfully taking a hold of the material, pulling it away from my body. \"Is there any point in wearing these, Sweetheart? Besides to drive me crazy? I mean, they barely cover anything...not that I'm complaining,\" he whispered as he chuckled.\n\n\"Mmm, it's a California thing,\" I joked through my sighing as his fingers continued to tease me. \n\nHe laughed before softly singing a familiar Beach Boys tune in my ear. \"I wish they all could be California girls...\"\n\nI giggled as he slowly turned me around and gently lay me down on the blankets. My smile faded slightly when I looked up at his face. His stare was heartfelt and tender, and a wave of love washed over me. Returning his look, I wrapped my hands around his neck and pulled him down for a tender kiss that didn't stay tender for very long. His mouth began to ravage me, pushing his tongue past my lips so that it could meet mine in an erotic dance. \n\nSoon the tongue was no longer in my mouth, but swirling around a nipple while his thumbs brushed the undersides of my breasts. Immediately, I grasped his shoulders, squeezing and moaning my appreciation. \n\nBut then his mouth lifted and he looked down at me. I must have stared up in need, using my expression to ask him why he had stopped. I didn't mean to be so dependent on his touch, but I couldn't help it. \n\n\"I love the way you beg for it with your eyes...\"\n\n\"No...no I don't,\" I shut my eyes tightly, refusing to believe I was so obvious.\n\n\"Oh yes you do, my dear. And if I don't get it from your eyes, all I have to do is feel you to know how much you want me.\" I gasped as a finger slipped underneath my soaked panties and slid into my warm canal with ease. \n\nWe both groaned as he used his entire hand to pet me while his middle finger caressed my inner walls. \"I love the way you faithfully keep your pussy smooth for me.\" He stroked my dewy lips, feeling their softness, enhanced by the moisture that coated them. \"I love how swollen you get down here, how you unconsciously grind yourself against my hand when you want me to touch your clit. I love the sweet little sounds you make when I finally appease you and stroke that little nub that throbs for my touch.\" \n\n\"Tripp,\" I gasped as he began to circle my bud. \"If you don't stop talking like that...I'm going...I'm going to...\"\n\n\"You're going to what? Come for me? Now, now...we can't have that, can we?\" He gave my clit a little pinch before he pulled his fingers from underneath my panties and slowly brought them to his lips, tasting them. \n\n\"I love how your juices are like ambrosia to me,\" he sighed and closed his eyes as my moisture coated his tongue. I knew I was in for something when he looked down at me with a wicked gleam in his eyes. \"...And I love how one taste is never enough.\"\n\nMoving like a man on a mission, he had my panties off in two seconds, quickly sliding them down past my quivering ankles before he grasped my arms and yanked me into an upright position. I didn't know what the goal was, so I tried to relax at let him adjust me to his liking. He took me in his arms and crushed my body to his, bringing me up to my knees. Our mouths met, our lips touched, our tongues danced, and I melted into him with a powerful longing I didn't know I possessed. \n\nSomehow, with senses whirling, we managed to get his pants off, and once our bare skin met, I softly sang my pleasure to him as he began a slow, languorous journey down my body. I was drowning in ecstasy, but I still heard him whisper to me as I sat there on my knees. \"I love what I'm about to do to you...\"\n\nBefore the words could register, he dived. Grabbing my hips and raising me upward to create a space between the ground and my bottom, he threw himself on the blanket and positioned his head back underneath me, between my legs. Firmly, he lowered me onto his mouth and I let out a large gasp when his tongue penetrated my moist opening. I shuddered but he grasped me firmly, and all I could do was slowly float away as his lips moved upon the most sensitive part of my body. But then I opened my eyes and realized what position we were in, taking notice of the glorious, pulsing organ before me, and a new desire started to spread. \n\nWith a greed that matched his, I leaned forward on my forearms and attacked. There was something about taking this man's cock between my lips that thrilled me and gave me an unbridled joy. Perhaps it was the appreciative moan I received when I first swirled my tongue over the thick head before closing my mouth over it. Of course I was doing quite a bit of moaning myself. He lapped and sucked between my legs, and my ministrations to his sex only egged him on. \n\nWe fed off each other, lost in complete abandonment. I rocked on top of him as the lower part of me throbbed on his lips. My own lips struggled to maintain a steady rhythm, as it was difficult to do much of anything when he put his mouth down there, let alone focus on giving him pleasure. How I managed, I don't know. The experience was so intense, and I found my senses blurring.\n\nHe was good. Although I devoured him, taking as much as I good into my mouth and wholly devoting myself to working him in and out of my lips, he didn't falter or let up. A strong hand kneaded my buttocks while he raided my opening with his tongue, and I felt as if my entire body were being doused in pleasure, instead of just that one area. The man had the ability to make me lose myself, and I loved it... almost as much as I loved him.\n\nI moaned around his cock as his wet tongue flickered over the stiff apex of my mound. When he took it in his mouth and began a gentle sucking, I knew I was done for. I lifted my head and trembled, trying to say something, but nothing would come out. I simply gasped and whined while he worked between my legs.\n\n\"T...T...Tripp...\" I finally whispered shakily, as if I were dying there on top of him. \"Please...\"\n\nThat \"please\" is what did it. He responded to my soft plead, and I knew he would give me the moon right then if I asked for it. He turned my body around so that I came face to face with him, and it was clear neither of us could wait any longer. We kissed, tasting one another on each other's lips. His eyes were wild as he looked up at me with a hard, penetrating stare, and he gave a slight smile as he took hold of my straddled hips.\n\n\"I love how you cry out when you take my cock inside you,\" he said softly with a trace of amusement. I didn't understand the humor and looked at him defiantly, as if challenging his allegation. He cocked an eyebrow, and with a devilish smile, he lifted me, and impaled me on his organ. \n\nHe moaned in contentment, both from the feeling that came with entering me, and from the arrogant satisfaction he derived in knowing he was right. My cry was primitive as he sank into me, inch by thick, glorious inch. \"God...yes...\" he sighed below me, closing his eyes in sheer bliss. \"I love the moment I first enter you, and how it feels like I'm entering the gates of heaven.\" I knew the feeling, and heaven sounded like a pretty accurate description. \n\nHe gave me a moment to adjust to the sensation, and then, in the dim room with flickering lights, as a gentle evening rain continued to bathe the barn and serenade our passion, we proceeded to love each other in zealous abandonment. I rode him with an unbridled ardor that he matched as he used his strong arms to help move me up and down the length of him. I quivered and quaked, he caressed and conquered, and together we slowly gave a piece of our souls to one another. \n\nAfter a few moments, he raised his upper torso to meet mine, still firmly holding me and moving me upon him. As his arms wrapped around my middle, circling me protectively, he fixed me in a wondrous stare. Our faces were now but inches away from each other's, and though our bodies wildly mated, though our mouths hung open, panting heavily, our eyes stayed consistently trained, not doing so much as blinking. \n\nHe spoke, not breaking the intense connection, but only heightening it. \"I love you, Kira...I love you so much.\" \n\n\"Tripp...\" I whispered steadily. \"Coming to this ranch was the best thing that ever happened to me.\"\n\nIt's odd how our passion usually rendered us speechless when we wrapped ourselves in the sensation of each other's bodies. Usually I had trouble forming the most simplest of phrases. But strangely, our words came easily now, almost as if they were as effortless as the lovemaking itself. I didn't even have to think about them as they came pouring out of me. \n\nWe were swept away then, exploding off into some distant, blissful utopia where only we existed. For us, time stood still, and the earth stopped turning. Something happened there in the barn that night. It consumed us, and we were born again, renewed in each other's love. ",
        "\"Do you know one of the things I love about you most of all, Kira?\" he whispered in my ear after we were spent, lying there with our limbs entangled. \n\n\"Hmm?\" I lay there perfectly content and bathed in the glow of his words.\n\n\"I love that you're mine.\" \n\nOh yes, Mr. Carson, I thought. All yours...\n\n* * * * *\n\n\"What do you mean you're not coming home with us?\" My father watched incredibly as I ran around the cabin, stuffing things into my suitcase. \n\n\"I'm not!\" I squealed happily, skipping into the bedroom to sort through my clothing. \"I'm going to stay here awhile, until the end of summer.\"\n\n\"But, Kira, honey,\" My mom tried to stay calm and rational so she could talk some sense into me. \"You have a whole month and a half before school starts...\"\n\n\"And I'm going to spend it here on this ranch, and there's nothing anyone can say to talk me out of it.\"\n\n\"To hell there isn't!\" My dad's voice suddenly got about ten times louder. \"You've only known the man a couple of weeks! You can't just shack up with some cowboy that you happen to fancy!\"\n\n\"Oh yes I can!\" I laughed. \"And he's not just some cowboy, he's mine. My cowboy...\" I sighed. It was almost sickening how happy I was, but my parents were still putting up a fight for this lost cause.\n\n\"I think it's positively romantic,\" Lucy said dreamily, earning her a stern look.\n\n\"Kira, you need to stop and think about what you're doing,\" my dad yelled to me. \n\n\"Already thought about it!\" I called from the bathroom. It was true. I had thought about it for two whole seconds after Tripp asked me to stay with him, which was one second more than I needed. \n\n\"We can't let her do this.\" I heard my father talking to the others.\n\n\"Well...\" my mom was hesitant. \"What do we do? I think she loves him. Look how happy she is.\" \n\n\"It's been two weeks! She doesn't know what love is,\" my dad said cynically. \n\n\"I do love him,\" I walked into the room with a smile on my face. \"And I am happy, so don't worry.\"\n\n\"Don't worry...sure, honey, we won't worry. We're only leaving you on a cow farm in the middle of nowhere, a thousand miles away from your home with some man who you just met. What's there to worry about?\" My father's sarcasm could cut through ice. \"Kira, you're throwing your life away.\"\n\n\"Throwing my life away? It's only for the rest of the summer! It's not as if I'm dropping out of college,\" I said exasperatedly. \n\n\"Kira, you've always been so rational...\" My mother was still hesitant as well.\n\n\"Well maybe that's the problem. Maybe it's time that I start being a bit irrational,\" I answered.\n\n\"Are you sure you know what you're doing?\" she asked me gently. She wasn't worried, or mad, or even sad as she said it. Just cautious, as if she understood how I felt, but at the same time wanted what was best for me. \n\n\"I have no idea what I'm doing, but I have to trust it.\" My face was glowing.\n\n\"I think you should let her stay.\" The family, all gathered in the living room of the cabin now, turned in astonishment to Luke, who stood with his arms crossed in the doorway to the bedroom. He smiled at me before saying, \"She's not a kid anymore.\"\n\nI was perhaps the most astonished of all. The room was silent for a moment before a humongous grin spread across my face. Quickly, I crossed the room to give my brother a hug. No other gestures were needed to express my feelings, but he whispered in my ear as I reached for him. \"I'm so sorry, Kira...\"\n\n\"Don't.\" I said firmly. \"I'm incredibly happy at this moment, so don't ruin it by reminding me why I should be mad at you,\" I told him lightly, breaking away from the hug. I then turned to everyone else before saying, \"Well...I think that settles it. I'll be back tomorrow morning to get my suitcase and to see you all off!\"\n\nAnd with that...as everyone except Luke, who was still smiling, gaped at me, I ran out the door and started making my way across the ranch. The rain had stopped, and the sky was clear now...imagine that. \n\nThe Lodge was busy and bustling as usual, but there was only one person I wanted to see. After scanning the room though, I couldn't find him anywhere, but I did see Jack and June Waterman coming toward me. Mr. Waterman looked hesitant, while Mrs. Waterman had a smile floating upon her face. \n\n\"Good evening, Kira,\" Mr. Waterman greeted me politely. \n\n\"Good evening to you both,\" I smiled. \"I don't suppose you would happen...\"\n\n\"To know where Tripp is?\" Mrs. Waterman finished my sentence, smiling tenderly. \"I believe he mentioned something about getting some late-night training in with that horse...\"\n\n\"Oh, thank you!\" I started to turn around to head out of the building, completely oblivious to anything but my goal of finding Tripp. \n\n\"Kira...\" Mrs. Waterman's voice was gentle.\n\nI turned back. \"I'm sorry,\" I laughed lightly. \"I guess I have a lot on my mind.\"\n\nJack and June exchanged knowing glances before Mr. Waterman cleared his throat and began to speak. \"Tripp has given us some...uh...some interesting news. We want you to know that we're concerned for you, and even though we disapprove of Tripp's hasty decision to...\"\n\n\"You disapprove,\" Mrs. Waterman piped in, rolling her eyes at her husband. \"Personally, Kira, I am so pleased that you came to stay with us this summer. I've never seen Tripp like this before. There's always been something missing, even when he's doing what he loves here.\" She turned toward Mr. Waterman. \"And Jack, I trust Tripp. He might be a bit impetuous, but you know Kira is in good hands.\"\n\n\"Well of course, I mean, Tripp is a good man, and we raised him well but...\" Mr. Waterman stammered.\n\n\"What my husband is trying to say is that we're both here for you if you ever need anything.\" \n\nA warm smile lit up my face upon hearing her words. \"Thank you both so much. Somehow I have a feeling though that I'm going to be just fine here for awhile.\"\n\n\"That's the feeling I have too,\" Mrs. Waterman patted my arm. \"Now...off you go! I know you're looking for that scamp of mine.\"\n\nI nodded enthusiastically and gave Mrs. Waterman a hug before making my way to the door. The night air was cool, but I was so happy that my face was flushed and I didn't notice. As I walked out onto the porch, I looked to the stable area, and just like that first night, what I saw took my breath away. \n\nThe lights were lit in the corral, and there was a lone, black horse bucking and twisting about, sleek and majestic looking against the backdrop of the night. But it was the rider I noticed first and foremost. A strong, bare torso strained to control the beast, as hair the color of midnight blew in the evening air, damp and tousled. Hard, thickly muscled arms handled the reins with a clear expertness, and one could tell the master was enjoying the challenge. Taking a deep breath, with fantasies twirling through my mind, I began to walk over to get a better look. Perhaps I would hide behind the edge of the barn, and watch him for awhile. \n\n* * * * *\n\nEpilogue\n\nThat was the summer I went with my family to visit the Waterman Ranch. I arrived with doubt and cynicism, and I left, flying back to California, with more love in my heart than I could have thought possible. \n\nOf course, while we believed we could endure a long-distance relationship, seeing each other during school breaks and long weekends, Tripp found himself renting an apartment for us in the city only a month after I left New Mexico. For the next two years, he spent half of his time at his home, among dirt and horses, and the other half in Los Angeles, conducting business for the expansion the ranch was going to undergo. \n\nI worked my butt off finishing my degree a year early, which was no easy task, and wouldn't you know it, there happened to be an opening for a finance manager at the Waterman Ranch when I was done. Tripp was in charge of hiring for the position, and one early summer afternoon, we sat in his office on the second floor of the Lodge while he thumbed through my resume, pretending to consider my qualifications. I soon found out the job came with one very important requirement. Before he gave me the position, Tripp slipped a diamond ring onto my finger.\n\nThe sun began to set on a beautiful autumn evening, and the sound of the harp was gently accompanied by the sound of horses in the distance. There was one that Tripp was particularly fond of -- a brown filly with a white spot on her head. He had named her, \"California,\" and as we said our vows on the small hilltop overlooking the pastures of the ranch, she ran with the strength of a thousand horses. \n\nThe End\n\n*\n\nAuthor Note: I truly appreciate the time everyone has taken to read my first story. Your wonderful feedback and encouragement has meant the world to me! I cannot express my gratitude enough! Thank you all! "
    ],
    "authorname": "MissKris14",
    "tags": [
        "cowboy",
        "first love",
        "dude ranch",
        "barn",
        "female virgin",
        "love at first sight",
        "summer vacation",
        "sixty-nine",
        "18-year-old"
    ],
    "category": "Romance",
    "url": "https://www.literotica.com/s/the-lady-and-the-cowboy-ch-08"
}