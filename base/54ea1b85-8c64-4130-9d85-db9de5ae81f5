{
    "title": "Someday",
    "pages": [
        "[I put this story in the mature section because the characters in the story are all over fifty. There is sex in this story but not in the hard charging, wham, bam way that sex shows up in other stories. The only man in this story never gets an erection in the story. Oral sex is here, female to female sex is here, and love, respect, and care are here. I would like feedback on this story, either public or private.]\n\n\n\n\"I'm not sure I should say anything,\" Cally said.\n\n\"Something's wrong. We're your best friends.\" Martha leaned toward her friend. \n\nThey were sitting in a round booth in their favorite Italian restaurant. Cally, Martha, Janice, Helen and Beth. They had been friends for fifteen years. Cally was sitting with two women on either side and had hardly touched her meal. The sixth member of their group, Colleen, was away visiting her daughter's family on vacation.\n\n\"It's Pete. He's sick.\" Her voice broke and tears started.\n\n\"How sick?\"\n\nCally broke down and cried. Mario their waiter came over and before he could ask Martha said, \"It's OK Mario. The food is fine.\" He walked away. The meal stopped. The conversation stopped and the four friends waited for Cally. They all knew Pete and liked him. He had married Cally before they all had met. Whatever any of these women had going on in their lives, he was supportive. He had fixed things for them in their houses, lent them money when they needed it, had thrown birthday parties for each of them, and always surprised them with flowers at least once a year. For some he was a brother they didn't have, for others he was the John Wayne hero guy they could always count on.\n\nCally stopped crying and took a big breath. No one moved or spoke.\n\nShe took another breath and said, \"He has cancer.\" She paused and no one moved. She looked up and said, \"The doctors give him six months to a year.\" The tears started again. \n\n\"We need a second opinion.\" Beth said. Cally shook her head.\n\n\"We've been to City of Hope and UCLA. They gave us the same verdict. I'm going to lose him.\"\n\nMartha put her arm around Cally and they were all quiet for a while. When Cally looked up at her friends Janice said, \"What can we do? This is happening to all of us.\"\n\n\"We all love him, too. Whatever it takes we're here for both of you.\" Beth reached out and touched Cally.\n\n\"I don't know. I think I'm still in shock. I want to be in denial but I know too much. His cancer has spread and is growing.\"\n\n\"How does he feel?\"\n\n\"He feels tired quicker than he used to. He doesn't feel pain, yet\"\n\n\"Is there anyone he can talk to besides you?\"\n\n\"I don't think so. You guys are our closest friends. His guy friends aren't as close as you guys. He just never was one of those guys who wanted to bar hop and drink beer.\"\n\n\"Will he talk to us?\"\n\n\"I just don't know. Pete was raised to be the strong, quiet man and take whatever comes without complaint. He hasn't cried with me, or yelled or anything except look really sad all the time.\"\n\nMartha asked, \"Is he still working?\"\n\nCally nodded.\n\n\"How are you with finances?\"\n\n\"OK. We have a good retirement stashed and five years ago Pete took out a life insurance policy on us that will pay a million when the time comes.\"\n\nA quiet pause sat with the five women at the table. Cally was the only one married. Martha had been married once, for twenty three years to a controlling man who treated her more like an employee than a wife. Beth had never been married but had lived with a man for fifteen years and bore him two children. In the end he had just walked away, leaving her with two teenaged children to raise alone. She did a good job and both kids were now grown and doing fine on their own. Janice had married right out of high school and raised two boys before her husband divorced her to marry their insurance agent. Helen had spent twenty years in the Air Force and never married. She loved tennis and swimming and now worked for the county parks and recreation department managing the tennis courts and pool. None of the group had ever heard her mention a date much less a romance. She was good looking for a woman in her fifties. They all were. The missing member of their group, Colleen, was a tall, thin woman who had been married twice. The first guy had been the quarterback of the high school football team and married Colleen between his junior year of college and his senior year. She was pregnant at the time. Two years later he moved to New York City and divorced Colleen. She married Tom Bratton three years later. He was just back from Vietnam and she felt he needed her. Four years later Tom was committed to a hospital and he was still there as far as anyone knew. \n\n\"Where is Pete now?\" Helen asked.\n\n\"Home, watching TV or maybe asleep in his recliner.\"\n\n\"Can we go and visit?\"\n\n\"Now?\"\n\n\"Yes. Now. I want to tell him I'm here for him. Cally, I love Pete and I want him to know it. He has treated me with love and respect all these years. He is always a gentleman and always willing to help. Now is my chance to do something for him. I want to.\" Helen said.\n\n\"Yeah, me too.\" Beth said and the others nodded.\n\n\"OK. I don't know how he'll react but inside I think he'll appreciate the gesture.\"\n\nThey paid the bill and left Vitorrio's together. They didn't need to follow Cally home; they had all been there many times. It did look like a five car caravan with Cally in the lead. She pulled into her garage and the others filled the driveway and parked in front. They trooped into the house through the back door. If they had thought about it none of them could have remembered the last time anyone had used the front door. Pete always said the front door was for salesmen and cops.\n\nCally had been right, Pete was in the recliner. If he had been asleep five minutes before the noise of the door opening and five women entering the kitchen had woken him. As they walked into the family room he looked up and smiled.\n\n\"Did you guys get rowdy and Mario threw you out?\"\n\n\"No,\" Martha said, \"We came to see you.\"\n\nHis smile faded. He looked at Cally and saw the tear tracks.\n\n\"You told.\"\n\nShe nodded.\n\nMartha spoke. \"Pete, we love you. You don't need to keep anything from us. God, you've been so good to all of us. We came over to let you know that we're in. Whatever support you need, we're in.\"\n\n\"I don't need anything. I don't even feel sick.\"\n\n\"Good\" Beth said, \"And when you do feel sick or tired...\"\n\n\"Or sick and tired, we're here.\" Helen said.\n\nHe smiled. It was hard to let them take care of him and just as hard to let them say they would.\n\nCally sat on the arm of his recliner and said, \"I think this is where you surrender Sweetheart. Save your strength for other things. You've taken good care of all of us for years now we get to take care of you.\"\n\nPete raised his hands over his head and said, \"OK. I'm out numbered and out classed. I surrender.\"\n\nThe group stayed for less than an hour. They could see that Pete needed to get to bed. He still planned to teach the next day. Pete taught English at the high school and he hoped to finish out the school year. Cally helped him get ready for bed and into bed after the others had gone. She snuggled with him for the couple of minutes it took for him to fall asleep. As she lay against him listening to him breathe she cried. 'He's dying.' was her reoccurring thought.\n\nThe next day Pete was at school and Cally at her job at the bank by eight. After his third class Pete had an open period which he usually used to meet with students who needed extra help and to eat his lunch. This day was different. After the last third period student walked out of his room Pete put his head down on the desk, \"for a moment\" and woke up when the students for his fifth period class trooped in. He'd never done that before.\n\nCally worked as a loan officer for the bank and she was good at her job. The manager came over once during the day and asked if she was OK. He said she looked distracted. She apologized but didn't explain.\n\nBy Friday Pete was napping every day and hadn't eaten lunch once. He rationalized that he needed the sleep more than the food. Cally took her manager into her confidence on Friday telling him what was distracting her. He was very supportive.\n\nBy doctor's orders Pete was to weigh himself every Saturday morning and phone the result in to the clinic. The Saturday before Pete had called in and said, \"This is Pete Wells. My weight is 210.\" This Saturday, one week later he stood on the scale and when he got it balanced he read 201. 'Maybe I should eat lunch once in a while,' He thought.\n\nOn the next Tuesday Cally had a visit at work from Helen. She arrived five minutes before Cally's lunch break so they went down the block and had lunch at the deli.\n\n\"I want an update,\" Helen said as they sat down.\n\n\"Pete's losing weight. He hasn't said how much but I noticed his belt is in a new hole. He eats dinner but he acts like he isn't really hungry.\"\n\n\"He's still teaching?\"\n\n\"Yes. He loves teaching. He still shares with me about what happened at school.\"\n\n\"Do you know about the Someday Game?\"\n\n\"No.\"\n\n\"It's a game everybody plays, I think. Someday I'm gonna learn to ski. Someday I'm gonna take you to Hawaii. Someday I'm gonna start my own business. That game.\"\n\n\"Yeah. I've said someday I'm gonna finish my Masters degree.\"\n\n\"What has Pete said?\"\n\n\"Nothing. We've traveled, he has his Masters, and I don't think I've ever heard him say \"Someday.\"\n\n\"Ask him, would you? If there is something and we can give it to him, we want to.\"\n\n\"We?\"\n\n\"All of us. We want to make the next months wonderful if we can. Create some great memories for all of us. So, ask him somehow would you?\"\n\n\"Yeah. Sort of like those kids who know they are dying and they always wanted to go to Disneyworld.\"\n\n\"I'll be surprised if Pete says Disneyworld.\"\n\n\"I love your idea. I'll ask him.\"\n\nThey enjoyed their lunch and Cally was back at work on time. She felt better. She had a mission.\n\nAt home that night she asked Pete what he would like for dinner. He asked for one of his favorites, chicken and dumplings. The fixings were not in Cally's kitchen. She knew that Martha made great Chicken and dumplings and that Martha lived just five minutes away so she called.\n\n\"Hi. Pete wants chicken and dumplings for dinner and I don't have any chicken or Bisquick. Can I borrow some?\"\n\n\"Yup! I'm on my way.\" The phone clicked and Martha was gone. Fifteen minutes later the back door opened and Martha walked in, not carrying packages of chicken and Bisquick but a big casserole dish. She walked directly to Cally's stove and turned on the oven. Cally came into the kitchen and Martha said, \"Dinner will be ready in half an hour.\"\n\n\"You made it?\" Cally was surprised.\n\n\"I made it and I made a big one so you can have it more than one night. I need to go back out to my car because I also brought some nice wine to go with it.\" Cally stood in her kitchen and watched the Martha whirlwind go back out to her car and return moments later.\n\nThe three friends talked in the family room until the oven timer rang and dinner was ready. Cally and Martha set the table and were ready to sit down as Pete arrived and sat down. The dinner was very good and Martha was right, there was enough for at least one more night. When they finished dinner Martha said she needed to go as she was expecting a phone call at about seven thirty. She kissed Pete and Cally and was gone.\n\nBefore eight o'clock Pete was in bed asleep. As he slipped into sleep he realized the chicken and dumplings were the biggest meal he had eaten in quite a while.\n\nCally had to wait until the next night to ask Pete about the Someday Game. He sat quietly for a long time after she asked. She didn't tell him that the others had suggested it. She just wondered aloud if there was something he wanted to do before he couldn't.\n\n\"Cally, I would live my life happy and content if this never happened, but I have thought about it over the years. I've been loved by you more than I've ever figured I deserved. I love all our friends and consider myself blessed that we are all friends.\" He paused. \"No, never mind. I can't even speak it.\"\n\nShe begged, pleaded and did her best but he wouldn't tell her what it was. Too soon he was tired and went to bed.\n\nThe next day Cally called Helen from work.\n\n\"Pete has something, but he won't tell me what it is.\"\n\n\"What did he say?\"\n\nCally told Helen what he said and they couldn't figure out what his speech might have been leading up to. Helen said, \"Don't give up.\"\n\nAt dinner that night Cally asked again. Pete looked at her and decided to speak.\n\n\"Do you remember about five years ago when Janice dated that guy for a while and then he broke it off the night of a party here?\"\n\n\"Yeah. She was really down that night.\"\n\n\"I danced with her that night and while we danced I kissed her. You saw me do it.\"\n\n\"I remember.\"\n\n\"Were you angry?\"\n\n\"No. I knew you wanted to make her feel better. I knew before that night that you loved her and I knew you are my man. Is that what you want, another kiss from Janice?\"\n\n\"No. I wanted to establish that you understand that affection between me and anyone else doesn't change how I feel about you.\"\n\n\"I know that.\"\n\n\"You also know that since I started taking the meds for the cancer I haven't had an erection.\"\n\n\"Yes, I've noticed, but that's OK there's a lot more to loving each other than playing with your hard on.\"\n\n\"OK. Here's what I want someday. I want to physically love and snuggle with Helen, Janice, Colleen, Martha, and Beth. And, I want a school named after me.\"\n\n\"What?\"\n\n\"You know me. I love giving you orgasms orally and with my hands. I love taking foreplay all the way to afterglow. I love all the women in our lives. Someday I would like to take each of them to bed and express my love for them in that way. Now you know. I will not take that wish to my grave as a regret. As for having a school named after me it can't happen. They only name schools after people after they're dead. By then I won't care anymore. So don't bother. That's it.\"\n\nCally sat stunned. She never would have guessed. She knew Pete loved pleasing her and she loved how good he was at it. He had never shown any signs of being sexually attracted to any of their friends. She looked up at him.\n\n\"I didn't have any idea.\"\n\n\"If you hadn't asked I never would have said anything. Are you sorry you asked?\"\n\n\"No. I'm not. I see that you love me a lot. You respect our vows and me. I love you, Pete.\" She kissed him and took him to bed.\n\n\"Sweetheart, I love you. I'm worried now that by telling you I've damaged our marriage.\"\n\n\"You haven't. I think I can safely say I love that you can share those thoughts with me. Let's have an early dinner tomorrow and maybe you could nibble on me after?\"\n\n\"I'd like that. Maybe we could get some Chinese, that way you wouldn't need to cook.\"\n\n\"Hmmm.\"\n\nA minute later he was asleep.\n\nReady for school the next morning Pete wore a baseball cap. Big clumps of hair had fallen out in the shower that morning. As he left for school he said, \"Well, I guess it's time to let Mr. White know what's happening. Can't hide going bald.\" Cally kissed him and they left.\n\nFrom her desk she called Helen. \"Can we do lunch?\"\n\n\"Did he tell you?\"\n\n\"Yes.\"\n\n\"Well?\"\n\n\"Not over the phone. I'm not sure I can even tell you at the deli. Let's get sandwiches and eat in the car. OK?\"\n\n\"OK. I have more time than you, what kind of sandwich do you want?\"\n\n\n\nAt noon exactly the door to the bank opened and Helen walked in. Cally stood and they walked right out together. They got in Helen's car and headed for the city park.\n\n\"Are you going to tell all of us, or just me?\"\n\n\"I guess I should tell all of you.\"\n\n\"Good because after I spoke to you I called them. They will meet us at the park.\" At the park Helen parked and they walked to the community room. Helen had the key and the others were waiting by the doors.\n\nThey sat at a table and each opened their lunches. After a few bites Beth said, \"Do I have to wait until you finish that huge sandwich?\"\n\nThey laughed. Beth was always the impatient one.\n\n\"OK. OK. I'll just tell it. I asked Pete and he said that he loves me and loves all of you too.\"\n\n\"We know all that. What does he want?\"\n\n\"He wants to take each of you to bed and love you.\"\n\nThe room was silent and no one moved for a long time. When someone moved it was Martha. She took a bite of her sandwich and said, \"Oh. I thought it was going to cost us a lot of money.\"\n\nThey all laughed. Helen looked at Cally and asked, \"How does that make you feel?\"\n\n\"Last night I was shocked and almost speechless. After Pete went to sleep I thought about what he wants and why. I love that man and I love how he honors me and our marriage by being able to keep his feelings, his sexual feelings, for all of you secret for all these years. I have no right to ask you each to do what he wants, but I am asking. Pete does love all of us. He would like a chance to express it physically. Janice can you remember a few years ago when that guy dumped you the day of a party at our home?\"\n\n\"I remember.\"\n\n\"Pete kissed you that night as you two danced. He mentioned it last night. That kiss was important to him. He didn't hide it from me then or now. It was an opportunity for him to show you physically that he cared and loved you.\"\n\n\"Are you sure about having us go to bed with your husband?\"\n\n\"It's not as if any children will be fathered in this. With all the medicines Pete is taking he can't get an erection and most of us have hot flashed our way into menopause. He hasn't bedded anyone but me in thirty years so I think we're safe for STD's.\"\n\n\"Let me understand this, exactly. You want us to go spend time with Pete in bed and let him give us an orgasm or two with his hands and mouth?\"\n\n\"That's one way to put it. I'm sure Pete would say he wants to physically express his love for you as best he can.\"\n\nCally finished of her sandwich while everyone thought about the request. Martha spoke first when Cally was finished with her sandwich.\n\n\"I want Tuesdays.\"\n\n\"What?\" Helen asked.\n\n\"I want Tuesdays. If I'm going to do this I want to spend Tuesdays with Pete. Pretty soon he won't be working and I want to take care of him on Tuesdays. Food, medicines, fluff his pillow and let him ring my bells as often as he wants. I can arrange my schedule so Tuesdays are free to do this. I'm in.\"\n\nBeth opened her purse and took out her day-planner. A few pages were flipped and she said, \"May I have Thursdays?\"\n\nThe others looked at their calendars and each took a day. They conferred and decided that on their days they would arrive a little before Cally needed to leave for work and stay for dinner. Since Cally worked Monday through Friday those were the days the others took. Friday wasn't taken but Beth said she would talk with Colleen when she returned and she was sure that Colleen would want in too.\n\nHelen said, \"With this schedule you can focus on your work knowing Pete is well taken care of. If anything happens we can call you immediately.\"\n\n\"Cally's eyes filled and she said, \"If I had sisters they would be you. Thank you. I feel better than I have in weeks.\"\n\nHelen took Cally back to the bank and then she went back to work. Monday was hers and Monday was just three days away. Back in her office she sat down to do a report and her phone rang.\n\nIt was Martha. \"I've been thinking. I want to drive into Lincoln this weekend and do some shopping. Want to come along?\"\n\n\"What are we shopping for?\"\n\n\"I haven't been with a man in years. My nightgown was made by Fredrick's of Wyoming not Fredrick's of Hollywood! If I'm going to bed with Pete I want his eyes to enjoy the trip.\"\n\n\"I'm going to tell you something I haven't shared with anyone in thirty five years. I'm scared. The last time a man touched my body I was being raped! I was twenty six. I won't know how to act. I cannot think of any man I would rather be with than Pete but the thought of being touched sexually scares the hell out of me.\"",
        "\"I'll pick you up tomorrow morning at seven. We'll stay overnight in Lincoln and drive back on Sunday. I understand your fear. I haven't been touched in quite a while either. Rape. Damn, at least after next week you won't have rape as your last or latest sexual memory. Oh, and bring your plastic!\"\n\nAcross town Beth sat at her desk thinking about being in bed with a man again. Until lunch she hadn't thought about a man in her bed or her body in years. When the thoughts had come for brief visits she dismissed them with other thoughts, like \"I'm too old\", \"I'm past all that.\" Now suddenly she wasn't too old or past it at all. Pete wanted her! She knew he wanted the others too but what hit her was that he wanted her, naked and open to his loving. \n\nJanice sat on her couch nursing a glass of wine. Her thoughts were about her day. She thought about what she could cook that would have the house smell good. She thought about getting some lotion and giving Pete a massage. It hit her that he wanted to hold her naked in bed with him. Janice had been raised in a modest family. Her mother changed clothes in the closet. She was pretty sure her father had never seen her mom naked. The idea of oral sex was something she had heard about but didn't quite believe people did. The idea of putting a penis in her mouth was repulsive. The idea that a man would want to put his mouth on her down there was equally repulsive. She was fifty three years old and had never even looked at herself down there with a mirror. The man in her past who had visited her down there had visited in the dark, under the covers and only with his penis.\n\nShe had agreed to having a day because she would have had to admit how repressed she was and how inexperienced if she had said no.\n\nIt was dark outside before Janice pulled herself together and off the couch. When she stepped out of the shower that night she looked in the bathroom mirror and burst into tears. Pete was going to look at her. Pete was going to touch her!\n\nCally went home from the bank and saw Pete's car in the driveway. Usually she got home first. She walked in, expecting to see Pete in the recliner. He wasn't there. He was in his office on the computer. She said hello and he motioned her into the office.\n\n\"Honey, I have new respect for Mr. White. I went to his office and told him what's going on. He called in all the other English teachers and the assistant principal. The meeting wasn't very long but so supportive. Instead of me teaching five periods a day I only have three. I have all the students I had before but in just three periods. I also get an aide to help grade papers and check homework. I'm now teaching in the amphitheatre room and it's even closer to the parking lot.\"\n\nThey talked for a few more minutes and Cally went to make dinner. As she opened the refrigerator there was a knock at the back door. She looked through the window and saw that Martha was standing on the porch.\n\n\"Martha, what a surprise! Come on in.\"\n\n\"Nope, I've gotta run. I had time and the inclination this afternoon so I cooked. Here's your dinner.\" She handed over a big Corning Ware covered thing wrapped in a padded cloth to keep the heat in.\n\n\"You are an angel. Are you sure you can't join us?\"\n\n\"I'll join you on Tuesday. Can you give me a call and tell me what you'd like me to make for dinner on Tuesday?\"\n\n\"Bless you. I'll ask Pete what he'd like.\"\n\n\"OK. I'll get the dish on Tuesday. Bye.\"\n\nShe was off the porch and to her car in seconds. Cally watched her go. She put the dish on the table and set plates and things on the table with it.\n\n\"Honey, dinner's ready.\"\n\nPete wondered how Cally had made baked ziti so quickly but didn't ask. He ate what he could and when he was done he thanked her.\n\n\"I didn't make this. Martha dropped it over. She felt like cooking today so she made some for us too.\"\n\n\"We really are lucky to have such great friends.\"\n\nCally took the leftovers and put them in the refrigerator then she took Pete by the hand and led him into their bedroom. She helped him undress and undressed herself. She turned on their stereo and put on a favorite CD of romantic music. Pete watched her every move. When everything was ready she excused herself and went into their bathroom. She wanted to be clean and smelling good for Pete.\n\nBefore she returned Pete fell asleep. He was looking forward to tasting her and feeling her squirm as he licked and sucked her, but a combination of things shut off his lights before that could happen.\n\nWhen Cally came out of the bathroom she wasn't surprised that Pete was asleep. Disappointed, but not surprised. It was barely getting dark but she so loved sleeping next to Pete that she crawled in and spooned with her sleeping man.  She listened to his breathing and felt his warmth. It wasn't long before she was asleep too.\n\nSometime in the dark of night Pete woke up. He didn't need to get up and pee. He just woke up. His right arm draped over Cally and his hand cupped her breast. 'Even in my sleep I'm a dirty old man,' he thought. He squeezed her breast a little and Cally woke up.\n\n\"Sorry I fell asleep earlier.\"\n\n\"Me too, but I understand.\"\n\n\"If you'll turn my way I'd like to kiss you.\"\n\nCally turned and they kissed. Over the years they had learned each others bodies well and Pete knew how to touch her to bring her pleasure. As they kissed his hands caressed all the skin he could reach. They adapted to his lower energy levels and soon Cally was on top putting the parts she wanted kissed in his mouth. As her excitement level grew she shifted positions and eventually was in the famous sixty-nine position with her on top. Out of habit she grabbed his penis and sucked it as he ministered to her pussy. In times past her touch and lips got a very pleasant reaction from his penis. That didn't happen. In the past his first kiss to her pussy resulted in her getting wet and later to needing a towel to wipe up her flow of lubrication. That didn't happen any more either. She did get aroused and she did love what Pete did to her but the flow of fluids took a longer time if they came at all. He gently and slowly pushed her towards a powerful and wrenching orgasm. When she started to shake and tense he sucked on her clit and she exploded.\n\nAfter calming a little she slid off his body and cuddled with him.\n\n\"Thanks Sweetheart. I love feeling you cum.\"\n\n\"Just hold me. I love everything you do.\"\n\nHe was asleep.\n\nOn Saturday morning he weighed himself. 198. He was down another three pounds. His head did some math. At three pounds a week he would disappear in 66 weeks. He wondered how low he would actually go before he went. He looked in the mirror and noticed that his hair was almost gone. The doctors had told him that the new treatment wouldn't have him throw up as much as cancer patients did in the past but his hair would certainly fall out.\n\nHe dressed and joined Cally in the kitchen. \n\n\"Did you call the clinic?\"\n\n\"Not yet.\"\n\n\"How much did you lose?\"\n\n\"Three.\"\n\n\"Is that a lot?\"\n\n\"I have no idea. I know that if I keep it up I will disappear in sixty-six weeks.\"\n\n\"The last six of those weeks I can carry you around like a baby.\"\n\n\"Oh yeah. Can I breast feed?\"\n\n\"You can do that today, but you won't get anything.\"\n\n\"It would still be fun to practice.\"\n\nThe banter lasted through the day. Cally asked Pete what he wanted to eat this coming week and he didn't know. She suggested some things he had never liked and he vetoed those ideas. Then he volunteered some ideas of things he did like. Cally made a list and called the five women who would be coming over. Only Janice was home. She happened to call Janice first so she gave her first choice. Janice picked \"something Cajun.\" Cally asked that she make it a little mild because she didn't know how Pete's stomach would handle spicy.\n\nFor the others on the list she read the other choices to their machines and asked that they work it out. She gave them a report on how Pete was doing and that he was working a shorter day beginning next week. \n\nIn the afternoon Cally suggested they go for a drive. As was their habit they got in Pete's car and he backed out of the drive and off they went. About tem miles later he pulled over.\n\n\"I think we'll both live longer if you drive.\" He got out and walked around the car, holding onto the car as he walked. Cally made sure he was in and then she got in the driver's seat and they drove out farther into the country. The highway passes near and parallel to the Platte River. She drove and Pete looked out the window. They stopped in Grand Island for lunch. After lunch Cally drove home and Pete slept much of the way. It was a beautiful day and they had always loved seeing the various crops coming up. They saw corn, wheat and soy beans. They heard birds and saw wonderful clouds. As they pulled into the driveway at home Cally saw Beth sitting on the back porch next to a box.\n\n\"Beth, what are you doing sitting on the back steps? You know the door isn't locked.\"\n\n\"I love being out here when the weather is so great. I knew it would be OK to wait inside but I was right where I wanted to be. Did you go for a drive?\"\n\n\"Yup.\" Pete answered. \"But don't ask where we went. We stopped in Grand Island for lunch but spent the rest of the time wandering.\"\n\nIn the back yard on their deck were four chaise lounges, five lawn chairs and a round table. Cally grabbed a towel from the kitchen and wiped them off. Pete plopped in to the first chair available.\n\n\"So, what's in the box?\"\n\n\"I'm wondering if you two would join me for dinner. I didn't want it to be any trouble for you so I brought it with me. I also brought a movie. Maybe we could watch it after it gets dark.\"\n\nCally asked, \"What's for dinner?\"\n\n\"I made chicken and potato salad. I brought baked beans too.\"\n\n\"Damn, that sounds good. I might even gain a pound this weekend. What's the movie?\"\n\n\"My sister-in-law sent me this movie. She said it's good. I haven't seen it yet. It's called \"Mr. Holland's Opus.\"\n\nPete smiled and said, \"We've heard it's good. Please stay and when it starts getting dark we'll watch the movie.\" Pete and Cally had seen it on a weekend outing to Lincoln years before.\n\nThey ate in the back yard. They talked about everything except what was most on Beth's mind: sex. Cally and Beth cleaned up and Pete took the movie inside and got it in the DVD player. He didn't sit in the recliner but sat in the middle of the couch. Cally sat to his left and Beth to his right. Even before Pete started the movie he noticed that Beth was shaking a little. He didn't say anything.\n\nAbout half way through the movie Cally asked for a break. She needed a break. Pete hit the pause button. Both women got up and headed for the bathrooms. When Beth came out of the bathroom Cally was waiting in the hall.\n\n\"What's up?\"\n\n\"What?\"\n\n\"You're sitting next to Pete and you're shivering. It isn't cold.\"\n\n\"I'm dealing with the fact that Pete wants me to be naked with him. I hate to admit this but I'm scared. I've never willingly been naked with a man. I've never let anyone see me down there. I don't want to be the one who says no, and I'm terrified.\"\n\n\"Come with me.\" Cally led her into the family room and sat her down next to Pete. She sat on the floor in front of them.\n\n\"Pete, would it be OK if the two of you finish the movie later this week?\"\n\n\"Later this week?\"\n\n\"Yes. I'm coming over on Thursday.\"\n\nCally interrupted. \"I wasn't going to say anything but the girls have decided to give you your wish.\"\n\n\"What?\"\n\n\"Each of us picked a day of the week. We will come over that morning before Cally leaves for work. We'll hang out with you all day and make dinner that night. In between, we are yours. You want to make love to us and we want you to.\"\n\n\"Wait! Cally?\"\n\n\"I told them what you wanted. I love the idea. We have all loved you for years. You are the safest man who ever lived. You love us. You won't hurt us. You won't ask us to leave our husbands. None of us will get pregnant.\"\n\n\"I can't believe it. I'm stunned. What can I say?\"\n\n\"You could start by thanking Cally.\"\n\n\"Cally I love you with everything I've got. Thank you.\"\n\nShe knelt and kissed him. It took a while. Then she sat back on the floor.\n\n\"Beth has a problem. She is scared. Thursday is her day but by Thursday she will be a nervous wreck.\"\n\n\"Beth. If you don't want to do this it's OK. God, I didn't believe any of you would do it. Hell, I didn't think Cally would tell any of you about my wish.\"\n\n\"Pete, please shut up. It isn't that I don't want to. I do.\" She paused.\n\n\"It's that no one has ever seen me naked. I've never seen a man naked. I can't believe you want to do what Cally said you want to do. I want you to do it and I'm afraid.\" She spoke all of her speech as fast as she could, then she took a breath.\n\nCally smiled. \"Beth, I request you spend the night with us, tonight.\"\n\n\"No. I couldn't.\"\n\n\"What time do you need to be at work tomorrow?\"\n\n\"I don't. Tomorrow is Sunday\" \n\n\"Good.\"\n\n\"What do you plan to do tonight?\"\n\n\"We are going to love you.\"\n\n\"Both of you?\"\n\n\"Yes. Now please stand up.\"\n\nBeth stood up. Cally stood up. Cally pulled her light sweater up over her head and off. She was wearing a light blue lacy bra and jeans. Beth looked at her. Cally made a motion with her hands and Beth knew she was being asked to take off her shirt. She knew she was wearing a plain white bra, no lace. She hesitated a long time. Cally didn't move and neither did Pete. Pete was off to the side a bit so he couldn't see all of her. That helped. She unbuttoned her shirt and took it off. Cally took the shirt and sweater and put them on the table nearby. She unbuttoned the button at the waistband of her jeans. Beth didn't hesitate, she unbuttoned her button.\n\nPete motioned to Cally and she stood right in front of him. He slowly pulled her zipper down and opened the front of her jeans. A triangle of light blue lace showed. Pete turned Cally so she faced Beth.\n\nThey looked at each other. Pete motioned to Beth. It took her a while to take the two steps to stand in front of Pete. When she stopped Pete held her jeans and slowly pulled the zipper down. Lots of her white cotton panties showed. He turned her to face Cally.\n\n\"Beth, did you die?\"\n\nShe shook her head.\n\n\"Did lightning strike us all?\"\n\nShe kept shaking.\n\n\"Cally, come here.\"\n\nShe stood in front of Pete and he slowly pulled her jeans down and off. All she had on were the blue bra and blue panties. Pete ran a hand from her ankle to her hip.\n\nHe turned to Beth. Cally helped her in front of Pete. Together they pulled her jeans off and helped her step out of them. Pete turned her to face Cally. Cally smiled at her.\n\n\"Afraid?\"\n\n\"Yes! No. Excited.\"\n\nPete asked, \"Wet?\"\n\nBoth women answered, \"Yes.\"\n\n\"Beth unhook Cally's bra, please.\"\n\nShe saw that Cally was wearing a front closure bra. Without thinking about it she hooked her fingers inside the cups and unhooked the bra. As it parted Beth realized she was touching Cally's breasts. She pulled away quickly, baring Cally's chest. Cally didn't flinch. Beth stood still looking at Cally's chest. She noticed there were no tan lines and no tan. She noticed that Cally's breasts were slightly bigger than her own, with areola and nipples that were bigger too. She also noticed an urge to feel them. She had never touched a breast that wasn't hers.\n\nCally took Beth's hands and put them on her breasts. \"Touch me. Feel how I am different from you and how I am the same. It's OK.\"\n\nBeth held still. She didn't know what she was supposed to do. \n\n\"Pinch my nipples, gently.\"\n\nBeth did. Pete watched and when he saw Beth's head start leaning toward Cally he spoke.\n\n\"Cally, take Beth's bra off please.\"\n\nCally reached for Beth. The closure was in the middle of her back so Cally moved closer and pressed her breasts against Beth as she unhooked the bra. She used her hands to slide the shoulder straps off her shoulders. The bra stayed in place because Cally's breasts pressed against it. Cally stood still and so did Beth. Pete waited, watching from the couch.\n\nAfter what felt like an eternity to Beth she turned her head and looked at Pete. He smiled. She looked back at Cally.\n\n\"I'm being silly. Everyone knows what breasts look like.\"\n\nBeth stepped back and her bra fell to the floor. Cally stepped forward and her breasts pressed against Beth's. This time it was warm skin to warm skin. Beth was aware of the feel of Cally's erect nipples against her skin.\n\nPete spoke. \"I would like to join you.\"\n\nThey both turned to him and he took their hands to help him stand. Once up he wrapped an arm around each woman and pulled them close.\n\n\"How do you feel Cally?\"\n\n\"I'm excited. I'm not sure where we're going but I'm very turned on. The last time I saw another woman's breasts was when I went for a mammogram five years ago.\"\n\n\"Beth?\"\n\n\"I'm still shaking, but I'm better. I didn't die.\"\n\n\"What happened in your head when Cally had you hold her breasts?\"\n\n\"I didn't know what to do. I've never even thought about touching another woman's breasts.\"\n\n\"Did you like how they felt?\"\n\n\"Yes. Does that make me a lesbian?\"\n\n\"I don't think so.\"\n\nThe three stood holding each other. Two women in panties and a fully dressed man. All three in territory they had never been in before.\n\nPete started feeling tired. He sat on the arm of the couch. Cally let go of him and started unbuttoning his shirt. When she had undone the third button Pete said, \"Beth's turn.\"\n\nCally kissed him and Beth finished unbuttoning the buttons of his shirt. He stood and Cally pulled the shirt out of his pants. Beth helped him take it off. Beth looked him over. He had a patch of hair sort of centered on his chest. The hairs were mostly gray.\n\n\"He used to have a lot more hair but most of it has fallen out lately.\"\n\nPete added, \"He used to have muscles and a tan too. Most of that has fallen off too.\" Beth smiled and reached out, slowly. When her hands touched his chest she felt around, seeing how he felt. He and Cally watched for a minute or so and then Pete said, \"Turn about is fair.\"\n\nCally aimed her chest at Pete and so did Beth. Pete put a hand on each woman's shoulder and slowly drew it down to their breast. Beth watched his hand on her chest and glanced over at Cally. Her eyes were closed and her head tilted back. Beth closed her eyes and tilted her head back. \n\nPete slowly drew his hand across their nipples and grasped them ever so gently with his finger tips. Both drew in breath and held it as he increased pressure. He stopped, but didn't release. They both let the breath go and he increased the pressure just a bit. Beth repeated in her thoughts, \"Pete has my nipple in his hand.' She noticed a feeling in her panties of being more than moist. She also felt her internal heat rising. Cally noticed the feelings too but for her they had happened fairly frequently in her past.\n\nPete pulled Cally close and leaned just a little drawing her breast to his mouth. He released Beth's breast and she moaned, missing his touch. Her eyes opened just in time to see Pete's mouth open and his tongue touch Cally's nipple. A second later it was inside his mouth and Cally moaned. Her hands went to his head and held him to her breast.\n\nBeth watched, fascinated. She had never seen anyone do this. She wanted Pete to do it to her.\n\nPete drew back, releasing Cally's nipple. He looked in Beth's eyes.\n\n\"Tell me what you want.\"\n\n\"I want what she had.\"\n\n\"Tell me what you want.\"\n\n\"I want your lips on my nipple like that.\"\n\n\"Me too.\" \n\nHe leaned to her and she sucked in her breath as she felt his hot breath and then his tongue. He ran the tip of his tongue around her nipple and then he took it in his mouth. She didn't think but followed Cally's example, holding Pete's head in her hands pressing his face into her softness. She wondered if she could die from such a wonderful feeling.",
        "Pete let her go and went back to Cally. He kissed and caressed her other breast as he had done to the first. Her knees started to weaken. He stopped and kissed her mouth. Their tongues danced together and their arms held on.\n\nWhen the kiss ended Pete looked at the two women and said, \"It is time that I went to bed. There is room for all three of us. Come.\"\n\nHe hugged both women and they walked to the bedroom. Beth hesitated.\n\nShe was walking into another woman's bedroom. All her training as a child said she was wrong.\n\n\"Beth, we both want you here. We both love you. We are going to sleep together. Sometimes I snore.\"\n\nAt the edge of the bed he released them and undressed himself. Cally went into the bathroom and brushed her teeth. Pete got down to his boxers and Beth hadn't moved.\n\nPete turned and went into the bathroom. He peed and then brushed his teeth. He didn't close the door. Before he came out of the bathroom he took off his boxers and put them in the hamper. Beth watched him come out of the bathroom and walk to the bed. As he passed her he said, \"The bathroom is yours. Cally put out a new green toothbrush for you. Hurry into bed, OK?\"\n\nShe hurried.\n\nAs Beth came out of the bathroom she shut off the light and saw that room for her was there in the bed, in the middle. Cally got up and let her in. Cally was naked. She knew Pete was naked. She still had on her white cotton panties. She always wore them to bed. In all the years she had never asked herself why she wore panties to bed. She realized she was here to have her pussy licked and that would be difficult with the panties on. As Cally watched she bent and stripped them off. She got into bed and slid over next to Pete.\n\nCally got back into bed and Pete helped Beth get right where he wanted her. He was lying on his left side facing the center of the bed. He gently put his hand on Beth's hip and guided her so she spooned with him, her butt against his penis, and his arm over her torso and his face right behind her head. Cally faced Beth and leaned towards her until their faces were just an inch apart.\n\n\"Beth, I'm glad you're here. Sleep well. If you are like us and need to get up in the night just do it. We might wake up but we both go back to sleep easily.\" That said she leaned the inch and kissed Beth good-night. Pete lifted just enough to be able to kiss Cally over Beth's shoulder. He also kissed Beth's shoulder.\n\nAs Cally and Pete settled in for the night Beth's thoughts were going fast enough to keep her awake for a while. 'Where do I put my hand? On Cally? I can feel Pete's thing touching my butt. If I wake up do I crawl over Cally or Pete? Is Pete going to touch my breasts? Do I want him to? Yes.\"\n\nWhile Beth was busy thinking Pete and Cally went to sleep. Their breathing slowed and their bodies relaxed. Pete passed gas. It wasn't very long before the sounds and the warmth soothed Beth and she fell asleep too.\n\n\n\nPete's eyes opened. He lifted his head just enough to see the clock's digital readout: 3:24am. He woke up because his bladder was pressing on the nerve that sent a signal to his brain saying, \"Get up and go!\"\n\nHe slid slowly out of bed and went to the bathroom. As was his practice he sat to pee at night. 'It makes less noise that way', he reasoned. When he came back to bed he stood for a moment and looked at the two women and he smiled. He lifted the blanket edge and slid in.\n\nAs he settled in Beth woke up. She wasn't aware of Pete moving as the cause of her waking but she was suddenly aware of two things; that she was in bed with Pete and Cally and that she needed the bathroom. She lay still thinking about how to get out of bed. She decided that since she was facing Cally she would climb out over her and when she came back she would climb in over Pete.\n\nAt her first move Pete opened his eyes. He watched Beth slowly climb over Cally. He noticed the blanket pull away from Cally and bare her breasts and he noticed Beth's breasts drag over Cally's body. Cally didn't move. Beth stood beside the bed and looked at Pete.\n\n'I'm going to let him love me,\" she thought. She turned, went to the bathroom, sat down and let her stream go. She tore off two squares and wiped and without thinking flushed the toilet. When you live alone you don't worry about waking someone if you flush. She realized it was noisy and sat still to muffle the noise. She sat until the toilet shut off then went back to bed.\n\nPete was still awake. He heard Beth come to the bed behind him. His right arm was on top of his right side. Beth pulled up the covers and started to climb over Pete. She straddled his warm body and pulled the covers back over them both. Her body was on his arm. His bicep was between her breasts and his hand between her legs. She hesitated just a moment enjoying the warmth of being against Pete's body. She got the blanket where she wanted it and started to slide off of Pete to the inside of the bed.\n\nAs she started to slide Pete lifted his hand and cupped her pussy.\n\nShe froze! She thought he was asleep! He opened his eyes and was an inch or so from her face. He kissed her. In the kiss she slid off of him and onto her side. His hand still cupped her pussy. Her left hand seemed to find its way to the side of his face. They kissed again. \n\nPete moved a finger to her slit and probed into her lips. She lifted her leg just a little to give him easier access. He kissed her again, this time with a touch of tongue. She welcomed the tongue and wiggled her hips welcoming the finger as well. 'Oh God, don't let him stop! He needs his sleep but don't let him stop!'\n\nFor the first time in a couple of years she felt her wetness become a flow and it reminded her of the line in the Bible, \"My cup runeth over.\". His touch had triggered the slippery liquid and she loved how it felt. Pete slid his finger along between her lips and into her opening. Beth's body arched as the finger penetrated her. She bit down on her own tongue to keep from moaning and waking Cally.\n\nPete shifted on the bed, moving his head down toward Beth's breasts. He sucked and kissed her skin as he worked from her face to her breasts. His hand kept slowly moving into her pussy then out and up to her clit, then back down and in. Beth's mind was alive and awake fully attempting to take in and savor what she was feeling. Pete kissed her breasts and then kissed her nipples. Beth had avoided touching her nipples for a long time. The response she always got when she touched them was so strong that Beth believed there was something wrong, with her. At the touch of Pete earlier on her nipple she had almost had her knees buckle, almost fell to the floor. Now there was no fear of falling, just a delicious feeling that there was a nerve that went from her nipples to her pussy. As Pete kissed and sucked she could feel the sensations heightened in her pussy and she wanted more!\n\nPete slid down farther in the bed. His face was at Beth's belly. He lavished his kisses on her skin. His hand kept up the slow penetration and stroking inside her lips. Slowly he pushed his left hand under her waist and onto her back. Then he shifted them both and he was lying on top of her, her legs spread and his face on her belly.\n\n'Oh God, he's between my legs!\" Beth loved how his weight felt and how right it felt for him to be there. His finger now felt different as it entered her. Her body arched again. She felt a tingling she had never felt before. It started in her pussy but she could feel it everywhere.\n\nPete slid down farther and Beth felt his breath on her pussy. Pete used both hands and parted the hair of her bush so he had unrestricted access to her wet pussy. He breathed in a long deep breath through his nose, savoring the smell of a woman in heat. The musky smell was Pete's favorite smell in the world. \n\nBeth waited, knowing he was about to touch her inside with his tongue. She heard him suck in a deep breath and hoped she didn't smell badly. 'God, what if I stink and he hates me?'\n\nHe let that breath out and Beth felt it on her most intimate parts. He took another breath and touched her with his tongue. The taste of her was wonderful! Enough like Cally that they could have been sisters but different too. Pete lapped up all the wetness he could, licking all the slippery areas his tongue could find. He avoided her clit, believing that when she came it might end his enjoyment. He wanted to munch her for a long time. \n\nHis hands released her pussy and he reached for her breasts and nipples. He held her breasts and squeezed gently. They were just a bit more than a hand full and still somewhat firm. When he touched the nipples Beth grabbed his head and forced his lips and tongue to her clit. He knew how to accept guidance and sucked her nub in. Her back arched and trembled.\n\nPete pinched her nipples and flicked her clit. It was enough. Her body stiffened and then shook. Cally opened her eyes, and then smiled. Eating pussy in the middle of the night was Pete's favorite. Beth's eyes were shut, her head thrown back and her back arched. From down deep somewhere an unfamiliar moan came from Beth. As she shook it grew and became a scream. Her hands still held Pete's head. Her legs drew up and involuntarily squeezed Pete's head. \n\nAs the orgasm started Beth lost control completely. Her thoughts started but didn't finish. Her breathing was erratic, gasps more than breaths. Then as her orgasm grew she took a full breath and it came out as a scream. No thought for Cally next to her in bed or for the neighbors a quarter mile away. She was fully engulfed in her very first orgasm. \n\nAs Beth began to calm Pete let go of her breasts and pulled his face from her pussy. He wrapped his arms around her hips and lay still holding her. When she could put two thoughts together she looked over at Cally and Cally moved to her and kissed her.\n\n\n\"Pete's really good, isn't he?\"\n\n\"Oh God, Yes!\"\n\nThey held each other and kissed again. Pete smelled that Cally was very close and turned on. He had the thought that he could follow eating Beth with Cally for dessert. Then, he fell asleep.\n\nCally heard his breathing change and said, \"Pete fell asleep.\" They made sure he was covered and let him sleep right there between Beth's legs. Beth liked how it felt for him to be there. Cally snuggled with her bed partners and touched herself until she had a small orgasm.\n\n\n\nThe alarm sounded at six-fifty. It was set for that time every day so Pete could take his meds before seven-thirty. All three jumped and Cally twisted and shut it off. Pete lifted his head and saw he was still between Beth's legs. He smiled and said, \"This is heaven. Waking up with pussy in my face.\"\n\n\"No, it isn't heaven. I need to go!\" Beth said.\n\nPete rolled to Cally and asked, \"Got time for breakfast Honey?\"\n\n\"God yes! I watched you with Beth and if you hadn't fallen asleep I would have asked you to eat me then.\"\n\nShe opened her legs and assisted Pete in getting his face into her pussy. At first touch her hands went to his head, positioning him right where she wanted him.\n\nBeth finished on the toilet and stood up. She picked up the toothbrush and turned on the water. As she did she heard a noise in the bedroom. She looked and saw Pete with his face in Cally's pussy. Her feet were up on his back, her hands holding his head. Beth was transfixed. She watched and noticed that her body reacted. Her body flooded her pussy with her juices and her nipples tightened. Her body temperature went up.\n\nShe stood in that spot until Cally moaned a low deep groan and stiffened. Then she went back in the bathroom and brushed her teeth. Cally joined her in the bathroom, started the shower and as she got in she said, \"I got mine too.\" She was smiling.\n\nWhen Cally got in the shower Beth was standing in front of the mirror looking at the naked woman who looked back at her. She wondered what happened to the Beth she knew last week.\n\nBeth felt Cally grab her arm and pull her into the shower. They both remembered the slogan from the sixties, \"Save water, shower with a friend.\" They washed each other and they talked. Cally was surprised at how OK she was with seeing Pete loving Beth. She concluded that because they had already been friends for years and nothing was hidden it really was OK.\n\nAfter the shower and the drying off were done Beth said, \"I guess I ought to go home, give you two the rest of the weekend.\"\n\nCally looked at her and took her by the hand into the bedroom. Pete was still in bed and back asleep.\n\n\"Except for the days he works, Pete sleeps. He'll get up and eat a little but mostly he sleeps and takes meds. In a few minutes I'll wake him and he'll take meds. That's why we set an alarm even on the weekends. I'd love it if you would stay. I have some things to get done today and we can talk and hang out while I get them done.\"\n\n\"OK. I don't want to be a bother so when you've had enough toss me out, OK?\"\n\n\"OK. Hungry?\"\n\n\"Yes!\"\n\n\"Pete loves French Toast. If we make it he will eat some and then he can take his meds. He's losing weight and I want to get him to eat if I can.\"\n\n\"Do you have egg bread?\"\n\n\"No. Just regular bread.\"\n\n\"Baker's, in town always has egg bread on Sunday mornings and they have cinnamon raisin bread too. I'll go get some. Which would you like?\"\n\n\"Cinnamon raisin. You really don't have to do this.\"\n\n\"I don't have to, I want to.\"\n\n\"Get dressed before you go.\" \n\nThey both laughed. Beth found her clothes scattered around the house and put them on. She grabbed her purse and out the door she went. Cally knew it was ten minutes each way to Baker's. She walked back into the bedroom and noticed Beth's panties on the floor. She smiled. 'I'll bet that is the first time in years she's left the house without panties on.'\n\nCally bent and kissed the sleeping man. He kept sleeping. She went into the kitchen and made the egg mix for French Toast. She started the coffee too. She got out some sausage and started cooking it before Beth returned.\n\nBeth parked in front of Baker's. Every time she had shopped here she thought Baker's was a great name for a bakery. She opened the door and stepped inside. She saw Helen standing at the cash register. They waved and then said \"Hello.\" Beth ordered a loaf of cinnamon raisin bread thick sliced and Helen said, \"Making French Toast?\"\n\nBeth blushed, looked down, hesitated and then looked at Helen and said, \"We're having French Toast at Cally and Pete's this morning.\"\n\n\"Oh, really?\" Helen noticed the blush. They walked out of Baker's and once on the street Helen said, \"You were at their house last night, weren't you?\"\n\nBeth nodded.\n\n\"Well? Did you and Pete?\"\n\nBeth nodded again.\n\n\"Oh my God! Was Cally there?\"\n\n\"Yes! Helen, I cannot tell you how great last night was. I cannot tell you how wonderful Cally is and how loving Pete is. I have never felt more loved than I felt last night and I feel right now.\"\n\n\"I was getting some bread for sandwiches. If I get the fixins for sandwiches do you think it would be Ok if I dropped by?\"\n\n\"Call Cally. I know we plan to be around all day and that Pete will sleep a lot. I'll tell her we bumped into each other here. I'll bet it will be fine.\"\n\nThey hugged and Helen went back into Baker's. Beth drove right back to Cally's.\n\nAs they made the French Toast Beth told her she had bumped into Helen. Two minutes later Helen called.\n\nAfter Cally hung up she told Beth, \"Helen wants to hang out with us. She's bringing sandwiches and cold drinks for about twelve thirty.\"\n\n\"The toast is ready. Shall we wake Pete?\"\n\n\"Would you mind? Kisses work well.\"\n\nBeth smiled and walked from the stove to the bedroom. Inside she did something she had never done before; she pulled her shirt and bra off and bent and kissed Pete. \"Breakfast is ready. Wake up Pete.\"\n\nHis eyes opened and he saw two breasts in front of his face. His hands went to them and held one to his mouth. He kissed the nipple and encircled the areola with his lips. His tongue traced a circle around her nipple.\n\nBeth felt her juices flow again, soaking into her jeans. She looked up and saw her panties on the floor by the bedroom wall. She smiled.\n\n\"Pete. I can't even tell you how good that feels, but your breakfast is ready. You need to eat. Come on.\" She drew back and kept drawing back until Pete lost his lip lock on her breast. She pulled her bra and shirt back on. Pete pulled on some shorts and a t-shirt.\n\nBack in the kitchen Cally said, \"I peeked. Nice way to wake someone up.\"\n\n\"Pete seemed to like it.\"\n\n\"I'd like it too. Maybe tomorrow morning you can wake me that way.\"\n\n\"Are you...? What is the word? Are you a lesbian?\"\n\n\"I've been married to Pete over thirty years. I love him and love sex with him. I'm discovering I also love women. Until yesterday I had never kissed a woman. I'd never touched another woman's breasts. I'd never seen another woman have an orgasm. It turned me on like nothing ever has. When Pete ate me this morning I peaked so quick it was amazing. I think the word is bi-sexual.\"\n\n\"Oh.\"\n\n\"Am I scaring you?\"\n\n\"No. Well, a little. I feel like you. I never kissed a woman either. When we kissed I really liked it. Maybe I'm bi-sexual too.\"\n\n\"I don't know about that but breakfast smells great!\" Pete said.\n\nCally loaded a plate for each of them and served. They sat at the table and talked as they ate. After the weather, their jobs and politics were handled Beth looked at Pete and asked, \"Why did you want to make love to me?\"\n\n\"I love you.\"\n\n\"Did you love me five years ago?\"\n\n\"Yes.\"\n\n\"Then why now and not then?\"\n\n\"I didn't know I was dying then. I was living inside my agreement with Cally to love, honor and forsake all others. I wanted to make love to you back then.\"\n\n\"God! I wish we had known back then what we know now.\" Cally said.\n\n\"We didn't. You didn't know how much you would like sex with a woman. I thought if I even mentioned wanting to have sex with your friends it could end our marriage.\"\n\n\"I want to be honest with you both. I want more of what happened last night. I've never felt anything like what I felt last night. And, I want to have sex with you, Cally. And, I'm scared. I don't want to go to hell. I don't want to be a lesbian. I just want to love you both. I do love you both.\"\n\n\"Let's finish breakfast and then I'd like to talk to both of you out on our deck. It looks like a beautiful day.\" Pete said.\n\nCally watched and was pleased. Pete ate a piece and a half of French Toast and two sausages. He drank a glass of orange juice too. She and Beth cleaned up breakfast and put things away. Pete went out on the deck behind the house. Their house sat on a low hill and from the deck they could see about a mile or so towards Kansas. The deck had four chaise lounges, five chairs and a round table with an umbrella. Pete moved one lounge over near another and he sat in a chair. The ladies joined him shortly after he sat down. He pointed to the two chaise lounges. They sat.\n\n\"Was there something you wanted to say, Pete?\"\n\n\"Yes. I want to watch. When I saw you two touch last night I loved it. I want to watch as two women I love learn about each other, love each other and get the joy I get when I can bring either of you to an orgasm. May I watch?\"\n\nCally looked around and asked, \"Here?\"\n\nPete nodded. Beth looked at Cally and they both nodded. They giggled and Beth said, \"My mother would never believe this.\"\n\nThey stood and helped each other out of their clothes. They hugged and as their hands explored their lips became better acquainted. By the third kiss they were not thinking about being watched, only about how they felt and how they might please the person in their arms.\n\nCally knelt down and took Beth's breast in her mouth and hands. She nibbled the nipple and Beth went weak.\n\nCally helped her sit on the chaise. She continued to kiss, fondle and suck on Beth's breasts. Finally Beth said, \"Sit down. I want a turn at your tits!\"",
        "Cally sat down on the other chaise and Janice did what Cally had done to her. The difference was that Cally talked.\n\n\"Oh Honey! Yes, just like that... Oh, more... your tongue is driving me crazy... Suck me, please... Why didn't anyone tell us this would be so good?\"\n\nPete watched, fascinated. They were in no hurry. Cally's eyes were closed. When Beth stopped lavishing attention to Cally's left breast and switched to her right Cally's hands went to her head and held her gently. Beth had started on her knees beside the chaise. Pete got up and after she switched to Cally's right breast he tilted the chaise back down and Cally leaned back until she was flat on her back. Beth crawled up on the chaise and lay next to Cally. She still held Cally's breast in her mouth.\n\n\nCally focused on the softness of Beth's skin and lips. Pete used to be quite hairy and the hair tickled her. His beard was scratchy and even an hour after he shaved it used to be like sandpaper to her skin. Janice was smooth. Her legs rubbed on Cally's and they were smooth. Her face rubbed against Cally's tender breasts and there was no stubble, no roughness. Beth's lips were different than Pete's. Not better, not worse. Cally loved both and what they brought to her.\n\n'I cannot believe I'm outside, naked, with Cally's nipple in my mouth!' She reveled in the feeling she had. Every time Cally moaned she felt powerful. Every time Cally moved in response to what Beth was doing she understood why men love making love to women.\n\nPete was standing by the chaise, watching. On impulse he went to Beth s hips and gently put his hands on them. He tugged towards the end of the chaise, and then released her.\n\nBeth released Cally's nipple and slid towards the end of the chaise. As soon as she did she realized that sliding like that meant she was about to taste Cally's pussy. 'I don't know how!' her brain screamed.\n\nWhen she arrived at Cally's pubic patch she was close enough to really see a pussy for the first time. She noticed that Cally shaved some of the hair. She had a patch of curly brown hair just above the start of her slit. Beth knew she had hair alongside her slit.  Cally had none. Beth touched Cally's legs and Cally willingly opened them wider. The lips parted and Beth saw the wetness between her lips. A strong wave of Cally's odor touched Beth's nose. It smelled good. Sometimes her own odor had been pretty bad over the years but right now Cally smelled wonderful. Beth reached in and gently touched the slippery fluid and the inside of Cally. \n\n\"Oh my God! Yes! Honey! Touch me.\"\n\nEncouraged Beth probed and found her opening, slid a finger into Cally's vagina. The sensation was incredible! The walls held her finger and the slippery nectar allowed her finger to slide in and out effortlessly. Beth loved how it felt and how it looked. \n\nAs she pulled her finger back she heard a wet sound. Her touch had created a sex sound. She felt a rush and no words came to her to describe it. Her eyes saw the nub of Cally's clitoris and she wondered if that was what she was seeing. She touched it with her tongue. Cally arched her back, threw back her head and shook!\n\n\"Yes! Suck it! I'm cumming! Thank you God!\"\n\nBeth held on and her eyes were wide as she realized she had done this to her friend. The orgasm lasted and Beth felt the spasms in Cally's pussy, the shaking and twitching of her body and her ragged breath.\n\nShe released Cally's clitoris and just lay on her legs as they both calmed down. Pete sat down and was smiling. It was the most erotic thing he had ever seen.\n\nCally lay still enjoying the after glow of her first female to female orgasm. The sun warmed them. The slightest breeze caressed them. They dozed. Pete moved to another chaise and he dozed too.\n\nThe sound of a foot on the deck woke Pete. He looked up and saw Helen holding a grocery bag and her mouth wide open. He turned and looked and saw Cally with Beth still between her legs. He stood and went to Helen.  He took the bag and put it on the deck. He stood blocking her vision of Cally and Beth and he kissed her.\n\nIt was the right thing to do. She returned the kiss with passion. She looked past him at her naked friends and then kissed him again. When that kiss ended he pointed her indoors and they left the deck. He put the bag on the kitchen counter and pointed at a chair. He grabbed a big bath towel from the linen closet and went back outside. He gently covered the two women who did not wake. He went back inside.\n\nHelen was sitting at the table shaking. She looked up at Pete and said, \"What the hell has been going on over here?\" Her voice was a horse whisper.\n\nPete sat next to her. \"I've been loving all of you a long time. Cally has loved all of you too. Beth spent the night with us last night. After breakfast this morning I asked them to love each other and let me watch. They love me enough to do it. Now they are resting. Why are you here?\"\n\n\"I was invited. I volunteered to bring lunch. I did.\"\n\nPete looked at her. She was wearing a tank top and bib overall shorts. He couldn't remember seeing her dressed in so little before.\n\n\"You knew Beth spent the night last night.\" It was a statement.\n\nShe nodded.\n\n\"You came over to get some loving before your day.\"\n\n\"To what?\"\n\n\"You knew Beth had an orgasm last night and now you want one too.\"\n\n\"It's more than the orgasm. When I saw Beth at Baker's this morning she told me she had never felt as loved as she felt with you, last night and this morning. I want to feel loved that much.\"\n\n\"Is the lunch you made ready or does it need prep?\"\n\n\"It needs prep. About five minutes.\"\n\n\"I had a nice nap out on the deck. After we eat lunch I will do my best to take you where Beth and Cally have been. OK?\"\n\nShe nodded. Pete went out on the deck. He shook Cally and both women woke up. \"Thanks for the towel. We might have burnt without it.\"\n\n\"Was there something about today you forgot to tell me?\"\n\nBeth's eyes got big and she said, \"Helen is coming over with lunch!\"\n\n\"Not until twelve thirty,\" Cally said.\n\n\"It is twelve-forty-two.\"\n\nThey jumped up and started for the back door. Pete said, \"She's in the kitchen making sandwiches.\" They stopped dead in their tracks. There were clothes in their hands but not on their bodies.\n\nAs they hurriedly dressed Cally asked, \"Did she arrive before or after you covered us?\"\n\n\"Before.\"\n\n\"Oh my God.\"\n\nThe door opened and Helen held the screen open. You need not dress, lunch is casual,\" she said with a big grin on her face. She had taken off her shoes but everything else was still on. Beth and Cally walked in. Pete followed. Lunch was sandwiches, potato salad and pickles. Beth pulled on her shirt and sat down. Cally sat down. Pete sat and Helen sat next to him.\n\n\"I only wish I had brought my camera.\" Helen smirked.\n\nBeth blushed, \"If you had I would have just died.\"\n\n\"I really don't know what to say,\" Cally added.\n\n\"Pete explained that he asked you to love each other. I can understand. I think all men want to watch two women make love. I have no idea why, but I know they like it.\"\n\n\"I know why.\" Cally said.\n\n\"I do too.\" Beth said.\n\n\"OK. Why?\"\n\n\"There is something that happens when you use your mouth to bring a woman to orgasm. It is so powerful! It feels and tastes and smells so wonderful!\" Beth said.\n\n\"Woman to woman is so smooth. Cally's skin in like velvet. No, silk. And her smell is incredible!\" She paused and then said, \"And her juices are so good they should be bottled and sold in stores.\"\n\nPete just ate his sandwich and listened. His feelings were not hurt. They had discovered something that would sustain them after he was gone. Cally would never be alone. Silently he thanked God for this blessing. He excused himself to use the bathroom.\n\nFrom the bathroom he could still hear their conversation.\n\n\"How is Pete?\"\n\n\"Are you asking medically or as a lover?\"\n\n\"Both.\"\n\nCally answered, \"Medically he is doing pretty well. He naps often. Most of his hair has fallen out and he is losing weight. I believe all this loving is good for him.\"\n\nBeth spoke, \"I know it's good for me. God, I've had every orgasm of my life right here and I must say Pete and Cally are the best lovers anyone could ever want!\"\n\nCally hugged Beth and nodded her agreement.\n\n\"Are you upset that I came over and interrupted?\"\n\n\"No.\" Cally said, \"We love you too. I want all of you to feel welcome here any time. I need each of you. I love each of you. You can help me love Pete for the rest of his life.\"\n\n\"Deal.\" Beth and Helen said. They stood and hugged. Helen grabbed Cally's ass and squeezed. Cally pulled back a little and looked into Helen's face.\n\n\"I've always thought you had a nice butt.\"\n\n\"Yeah.\" Beth agreed.\n\nPete heard all of their conversation. He flushed the toilet and went to his bed. He pulled off his shorts and t-shirt and lay down. Ten seconds passed and he was asleep.\n\nThe women in the kitchen heard the toilet and waited for Pete. He didn't come back to the kitchen so Cally went to check on him. She came back and said, \"He's asleep. Let's go out on the deck for a while.\"\n\nOne quarter of the deck was in shade so they moved the chaises and sat in the shade. Beth pulled the shirt off and Helen looked at both nude women. She sat still for a few moments and then stood and unhooked the bib of her overalls. They fell to the deck. She was wearing black lace panties.\n\n\"Oh.\" Beth said.\n\n\"Too bad Pete went to sleep. I wore them for him.\"\n\n\"You can show them to him later when he wakes up.\"\n\nHelen pulled her shirt off and her breasts were free.\n\n\"Is this the first time you've gone without a bra outside your own bathroom?\"\n\n\"Yes! Driving over here I was imagining the headlines: \"Braless retired Air Force Major arrested.\" \n\nBeth looked at Helen standing by the chaise lounge in just her black lace panties. She was in good physical shape, a little soft but not overweight. Her arms and legs were tan but not all the way up. She had a tan line on her legs that showed she seldom let the sun on her thighs. With the sunlight as it was Beth could see that when Helen shaved her legs she stopped just above the knees. Her breasts were small compared to those around her. They had almost no sag. The pencil test Beth remembered from school would have never worked with Helen. The pencil would fall to the floor. Beth's own nipples were tiny, surrounded by areola about an inch and a half in diameter. She was surprised by how Helen's nipples looked. The nipple was bigger than Beth's but the areola wasn't there! Helen noticed that Beth was really looking. She blushed.\n\n\"Now you know my secret,\" she said.\n\n\"What secret?\"\n\n\"I look funny. I'm deformed.\"\n\n\"What are you talking about?\" Cally asked.\n\n\"Beth was looking at my chest. You both have beautiful tits and I am deformed!\" She paused, picked up her shirt and said, \"Maybe I should go.\"\n\nCally spoke up, \"Sit down Helen.\"\n\nHelen sat holding her shirt in front of her chest.\n\n\"Where did you get the idea you were deformed?\"\n\n\"In high school I dated a guy, a football player, and when things got hot one night I let him touch me. It felt wonderful so I let him take my shirt off and when he saw my nipples he laughed! The next day at school he told everyone I was a freak. Other than doctors you are the only ones since then who have seen my tits.\"\n\nHelen looked at the deck. Beth got up and went over to her. She sat touching Helen and put her arm around her.\n\n\"My tits are deformed. I was scared yesterday because I thought Pete would see the deformity and not want me. When Cally took my bra off in front of Pete I thought he would laugh or point or something. He didn't. I had the chance to really look at Cally's tits too, and they aren't perfect either.\"\n\nHelen looked at Cally sitting three feet away.\n\n\"Her tits are perfect!\"\n\nCally smiled, \"No, they're not. The right one is bigger than the left and the right areola isn't round. I'm a freak!\"\n\nHelen smiled a little. Beth stood right in front of her and asked, \"Can you see what a freak I am?\"\n\nHelen nodded. \"Neither of your areola are round. There's a dimple in your right nipple.\"\n\n\"We're all freaks! I think we should all leave right now and go live in a cave somewhere up in the mountains.\"\n\n\"What mountains? We're in Nebraska. Your house is on the highest mountain for over a hundred miles!\"\n\nAll three women laughed. Helen loved that her secret was out and none of them cared. She wondered how much of life she had missed out on by believing what Henry McCall said thirty nine years ago. When the laughter stopped Cally and Beth noticed that Helen was off in her head somewhere.\n\n\"Earth to Helen, Earth to Helen. Where are you?\"\n\n\"I was thinking about what it has cost me to believe what Henry McCall said all those years ago. I think I've missed out on a lot.\"\n\n\"Was Henry the one who said you were deformed?\"\n\n\"Yes. I was fifteen.\"\n\n\"And a virgin?\"\n\nHelen nodded. \n\n\"Oh my God. Are you still a virgin?\"\n\n\"Technically. Yes and no. My hymen is gone but no man has ever been inside me.\"\n\nCally spoke, \"Let's not tell Pete. With all the medicines he's on there's no way he can get hard enough to be your first. That said, he can and wants to give you all the pleasure possible.\"\n\n\"How long will he sleep?\"\n\n\"Who knows?\"\n\n\n\nOn Friday evening Martha and Janice met at Martha's home. They each had a small suitcase packed and ready to go. They ate dinner at Martha's, watched some TV, talked about Pete and Cally, and about where to go shopping in Lincoln. At about ten Martha showed Janice the guest bedroom and they went to their beds. Saturday morning Martha's alarm woke her. She got out of bed, put on a giant t-shirt and went to wake Janice. She knocked once, waited then opened the guest room door. Janice was still asleep. The covers were at her waist and Martha could see both of Janice's breasts. She had known Janice for almost fifteen years and had never seen her breasts before. She didn't know Janice slept nude. She realized that Janice must wear at least a \"D\" cup bra. She quietly closed the door then knocked loudly.\n\n\"OK! I'm awake!\" She heard from behind the door. \n\n\"Let's get dressed and go. We can stop along I-80 for breakfast, OK?\"\n\n\"Sure. I'll be ready to go in fifteen minutes.\"\n\nFifteen minutes later they were in Martha's car and headed for I-80 East. Near Mormon Island they got off I-80 and ate at a small restaurant. By ten in the morning they were in Lincoln and parked by a big shopping mall.\n\nAll morning and into the afternoon they wandered through the stores. Finally they got to the store they had been wanting but a little nervous about finding. It wasn't Victoria's Secret but it was like it. Janice had said she didn't ever shop at Victoria's Secret because they never carried bras that were her size. They went in and started looking at bras and panties. A few minutes later Janice started giggling. Other people started looking at her like she was strange. She kept giggling until she had to leave the store. Out in the mall walking area she sat on a bench and laughed. Martha sat beside her and asked what was so funny.\n\n\"We are two grown mature women shopping for underwear to entice and please a man married to our best friend!\"\n\n\"Yes! And, we've know him for almost fifteen years and I don't know him! I thought about calling Cally and asking what his favorite color is, does he like lacy panties or thongs?\"\n\nThey were both laughing. People walked by and looked at these two women in their fifties bent over in laughter. One woman from one of the shops came out of her shop and asked if they were OK.\n\nJanice took a couple of big breaths to calm herself and said, \"We're fine. We just realized we are both shopping for sexy underwear to please the same man!\"\n\nThey laughed some more and the woman walked away. They did calm down and they did go back into the store. As they looked Janice found two bras she liked and Martha found one. They went into the changing room and when they had their selections on they came out of the changing rooms and faced each other.\n\nJanice had on a lacy, full coverage, teal bra. Martha had on a satin, underwire, black bra.\n\nThe twenty-something sales girl saw both women looking at each other standing outside the changing rooms and she came over.\n\n\"Is there some way I can help you ladies?\" She asked.\n\n\"Yes,\" Janice said. \"Tell us, will Pete like both of these or just one?\"\n\nThat broke both women up and they laughed some more. The sales girl was confused but she stayed. Eventually Janice calmed down and asked if she could get the same bra in a \"DD\". She got it and Janice tried it on. She came back out and Martha said it looked better in the \"DD\". Martha got the same bra in her smaller size and they agreed it looked good on her too.\n\n\"Can we buy the same bra?\" Martha asked.\n\n\"Why not? He's going to take it off of us anyway.\"\n\n\"You're right. I like it and it feels good.\" She turned to the sales girl. \"I'll take this one. Do you have matching panties?\" The sales girl walked over to the panties table and Martha followed. She got three pair, in different colors. The sales girl found bras in her size in those other colors.\n\nBy the time they left that store they each had spent almost three hundred dollars. They walked through the mall and found a place to have lunch. As they waited for their food they saw a woman with a Victoria's Secret bag. She sat near them so Janice asked where the Victoria's store was. The lady told them and asked where the store advertised on their bags was. She ordered her lunch and Janice asked her to join them. She was about their age. They ate and got acquainted. The lady was from Papillion, north of Lincoln and she was shopping for things for her twentieth wedding anniversary. She and her husband were going on a cruise to celebrate. She showed what she had found in Victoria's. Two bra and panty sets and two nightgowns.\n\n\"We didn't get nightgowns.\" Martha said.\n\nThey showed her the things they bought and the lady, Linda, asked what the occasion was for their buying new under things. Martha and Janice sat quietly for a long time. Finally Martha said, \"This is going to sound weird and it's the truth. We have a friend who is dying of cancer. We love him and his final wish is to spend time with each of us, loving us. His wife asked us to make his last weeks as good for him as we can. He has been good to all of us for many years, so we're going to be good to him.\"\n\nMartha looked at Janice and they both had tears in their eyes. They looked at Linda and she had tears too.\n\n\"That sounds crazy but wonderful too. How old is he?\"\n\n\"About sixty.\"\n\n\"They are sure about the cancer? Chemo won't work? Surgery won't work?\"\n\n\"They didn't catch it early. It had already spread too far.\"\n\n\"Oh.\"\n\n\"Each of us is taking a day of the week and spending that day taking care of him. We'll do whatever he needs.\" Janice said.\n\nMartha added, \"Or wants. Pretty soon he won't be safe to drive so when he needs to go we'll drive him.\"\n\n\"And we'll cook too so his wife doesn't need to.\"\n\n\"And we'll love him every way we can.\"\n\n\"And he says he wants to love us every way he can.\"\n\n\"I'm going to remember what you're telling me. If anyone I know gets sick I want to be there for them. You are wonderful friends.\" She took her things, gave them both hugs and paid her bill on the way out. When Martha and Janice got to the cash register they were told that their friend had paid for their lunches. They left a really big tip and the waitress thanked them, inviting them back soon.\n\nThe visit to Victoria's Secret cost them over a hundred dollars each and Janice discovered they carried bigger sizes than they used to. They saw a movie at a theatre in the mall and checked into a Holiday Inn before having dinner. ",
        "As they ate dinner Janice asked, \"What do you think Beth is doing this weekend?\"\n\n\"Probably wondering what she's going to do on her day with Pete.\"\n\n\"Yeah. It's been almost ten years since Alex took his walk.\"\n\n\"Tell the truth, I'm nervous too.\"\n\n\"It's been longer than I want to admit since I've bedded a man. What if the old body has forgotten how?\"\n\n\"It's been years since I replaced wet panties with hot flashes and now even they don't show up very often.\"\n\n\"Martha, are you going to shave before you go over?\"\n\n\"Sure. I always shave before a date I figure will end in bed.\"\n\n\"I read somewhere that women now shave everything.\"\n\n\"Everything?\"\n\nJanice nodded.\n\n\"I don't know. I've never...\"\n\n\"I wonder if Cally...\"\n\nThe rest of dinner was eaten in silence. After they ordered dessert Martha said, \"When we get home we could ask Cally if she shaves it for Pete.\"\n\n\"Maybe Pete likes to shave it for her!\" They smiled all the way back to their room.\n\nBeth had dinner with her friends, kissed each of them a deep and lovingly sensual kiss good-night and left Cally and Pete's for home before eight. Her mind was filled with thoughts of how her life had changed in the last seven days. \n\nAt home she showered, set out her clothes for Monday and went to bed. She climbed into the bed and realized she was still nude from her shower. 'My mother would never believe it.'\n\nAs Cally and Helen stood at the back door and watched Beth drive away their thoughts were also on the changes of the last week. Cally had thought about being alone ever since the doctor at the University of Nebraska Hospital had told them that Pete had cancer. In the last week her friends had come to her with so much love that now she knew she wouldn't be alone. She, and all her friends, would miss Pete and that would just be part of the glue that would bind them together for the rest of their lives. \n\n\nHelen thought, 'OK, Beth's gone. What happens now?\" She noticed the sexual tension in her body.\n\nPete sat in the recliner wondering, 'What's next? Is Helen staying? Does she want loving now or tomorrow after Cally goes to work?'\n\n\"Maybe I should go home and come back in the morning. What time should I...\"\n\n\"No. Stay.\"\n\n\"Stay?\"\n\n\"You came over to be loved. Stay and you will be loved. In the morning you and Pete can go right back to bed after breakfast and I won't worry about him at all. I'll know he is being loved and cared for right here.\"\n\n\"I can't stay. I didn't bring any clothes for tomorrow, or a toothbrush.\"\n\n\"I gave Beth a toothbrush last night. I have three more new ones in the bathroom. You can pick the one you want. You can go into my closet and wear anything you like. You are about my size. Please stay. I know Pete would like you to.\"\n\n\"Three in a bed?\"\n\n\"Yes. There is room and if tonight is anything like last night all three of us will enjoy it. If you weren't here I think Beth would have stayed.\"\n\n\"OK. But I don't quite know what to do.\"\n\n\"Come with me.\"\n\nCally led the way back into the family room and to Pete's recliner.\n\n\"Pete, we have a question. We are here for you and your pleasure. I know that pretty soon you will be asleep, but between now and then what's your pleasure?\"\n\n\"I would like to have a conversation with Helen. I don't want to exclude you Cally but, if you don't mind, I'd like to talk with Helen for a few minutes.\"\n\n\"I have dishes to do and prep for tomorrow. You two talk and I'll be back in a little while.\"\n\nCally kissed Pete and kissed Helen on the cheek. She left them alone. Helen looked for a chair she could move closer to Pete.\n\n\"Don't move a chair. Come sit with me.\"\n\nHe scooted to one side of the chair and Helen sat next to him. His arm wrapped around her. He talked to her about their relationship and why he loved her. She listened. He asked for a kiss. She turned and gave him one, expecting a chaste brotherly kiss even though she knew he wanted to be sexual with her. She got a fully sensual, fully sexual kiss.\n\n\"Are you staying?\"\n\n\"If you want me to. Otherwise I'll be back in the morning.\"\n\n\"I want you to. Do you still want the physical loving tonight?\"\n\n\"Maybe we should wait until after Cally goes to work tomorrow.\"\n\n\"Cally wants to be involved too. We can wait, but not because Cally will be uncomfortable. We discovered that Cally likes watching and Cally likes participating too.\"\n\n\"I'm a bit nervous.\"\n\n\"Me too. I've loved you for years and now I am blessed to be able to share it with you. I don't want to mess that up.\"\n\n\"We can sit here and talk about it until you fall asleep or we can go in the bedroom. Your choice.\"\n\n\"Will you help me out of this chair, please?\"\n\nCally saw them headed for the bedroom and Pete motioned for her to join them.\n\nThe two women undressed Pete and he left them to use the bathroom. While he was there they undressed. Cally put Helen in the middle of the bed, covered her with a sheet and went to help Pete back to bed. She found him shaving.\n\n\"I thought you usually shaved in the morning.\"\n\n\"When we have sex going on I may need to shave more often.\"\n\n\"Maybe the whiskers will fall out and you won't need to shave.\"\n\n\"I'll still love shaving you.\"\n\nWhen he was done she helped him to bed. \n\n\"You two get acquainted. I'll be in in a little while.\" \n\nCally walked out into the family room.\n\n\"Turn on your side please.\"\n\nShe did. Pete held her face in his hands and kissed her. Helen talked to herself. 'It's Ok. I'm not cheating. Relax, Helen. He loves you.\"\n\n\"I like kissing you. It would help if you could give me whatever you want me to kiss.\"\n\n\"I don't understand. I'm giving you all of me.\"\n\nCally came back and climbed in bed behind Pete.\n\n\"What he means is this: if you want him to kiss your breast, put it in his mouth. Like this.\"\n\nCally hung over Pete and put her breast to his lips. He kissed and sucked. She pulled back.\n\n\"What do you want kissed?\"\n\nHelen thought for a few seconds.\n\n\"Pete please close your eyes.\"\n\nHe did. Helen shifted and presented him with a nipple. She didn't want him to see her deformity. She knew that Beth and Cally weren't perfect but these tits were hers and she had thought of them as bad for many years.\n\nPete had heard the conversation about her deformity through the window when they thought he was asleep. He sucked her nipple into his mouth playing with it with his tongue. When he released it he said, \"Oh my God! Cally, you must kiss her nipples! They are incredible! Helen, you are really blessed by the breast gods.\"\n\nCally knew by what he said that he had heard. She went along with him and tasted Helen's breast. She sucked and made appreciative noises.\n\nPete continued to kiss, fondle and otherwise stimulate Helen's other tit.\n\nCally watched as Pete loved Helen. He was careful to go slowly, tenderly and he was careful not to tickle her. He conserved his energy and her do lots of the moving around. When he finally put his face into her pussy she was already close to having an orgasm. He licked her from the bottom of her slit to the nub of her clitoris once and then pulled back just an inch.\n\n\"Cally Honey, I need your help. Would you suck on Helen's nipples for me?\"\n\nCally smiled and took Helen in her arms, her mouth finding Helen's nipple. Helen held Cally's head with both hands. Pete licked Helen again.\n\nPete thought about when he was younger he was in such a hurry to get his cock into Cally that he often would hurry as he orally pleasured her. The attitude had changed and now his loving, with Cally or any of their friends was about taking his time and savoring the approach to orgasm he could give them.\n\nHis tongue explored all the interior surfaces of Helen that he could reach. He noticed her reactions to the various touches in the different areas. When he began her clitoris was very hidden and so tiny he wasn't sure he had found it. As he tongued her it grew and finished hiding. It grew until it was the size of a small pea and was exposed to his tongue. He probed lower and pushed his tongue into her vagina. He couldn't go in far but far enough to lick all the inside edge of her opening and to drink in all the slippery nectar she gave him. \n\nWhen he went back up to her clit she was really ready to cum. She raised her hips and thrust her pussy against his face. He sucked on her clit and held her hips with his hands.\n\nIn moments she peaked, screamed and thrashed on the bed. Cally lost her lip lock on Helen's nipple. Pete and Cally held her as she experienced her first Pete given orgasm. Pete's legs hung out over the end of the bed. His head cradled at the junction of Helen's thighs and his arms and hands embraced her hips. Cally snuggled beside Helen with her arms around her chest and Cally's head on her shoulder. Helen's arms held Cally to her chest.\n\nAs they started to fall asleep Cally realized it wouldn't be too good for Pete to hang off the end of the bed all night. She and Helen helped him move up onto the bed and they snuggled him, Helen on one side and Cally on the other.\n\nAt 6:50 the alarm woke them. Helen was startled to hear an alarm she wasn't used to and even more startled to wake up feeling a hand on her ass. She shook herself internally and remembered that this was her day to stay here with Pete and that meant more sex. She smiled. She felt the bed shift and Cally got up. She remembered that Cally said they got up this early so Pete could eat and take his medicines. She got up to help. She made breakfast while Cally got ready for work. She dished up the meal and got Pete up so he could eat it.\n\nThey ate breakfast together and Cally kissed them both on her way off to work.\n\nPete went back to bed. Helen made sure he was covered and asleep then she went out to her car. She had a couple books in the car and a couple CD's of music. She sat out on the deck and read for a couple hours. When she went inside she checked on Pete. She checked on him once an hour.\n\nThe second time she went in it was because she needed to pee. She went into the bathroom and sat down. As she let her stream go she wondered if Pete could hear her. As her stream slowed she looked at the door and Pete was standing there, looking at her.\n\n\"I heard you and I am inspired. My I go next?\"\n\n\"Sure. Let me finish up and it's all yours.\"\n\nHelen tore off a few squares of toilet paper and Pete stepped close. He took the paper from her hand and said, \"Allow me.\"\n\nAs he bent to wipe her he kissed her mouth. As their lips touched his hand and the paper wiped her and he dropped the paper in the bowl. The kiss lasted much longer than necessary to get her wiped.\n\n\"Wow! That may go into my scrapbook as the most intimate kiss I've ever had.\"\n\n\"After I go, would you come to bed with me?\"\n\n\"Certainly.\"\n\nShe stood and moved out of the way. He stood in front of the bowl and aimed. On a sudden impulse Helen stood beside Pete and took hold of his penis. She aimed his stream into the bowl, feeling for the first time in her life the water flowing through a man's penis. She aimed at the bowl and a few drops hit the seat as she aimed.\n\nHelen giggled and said, \"We better clean that up. Otherwise Cally will know I missed as I peed.\"\n\nPete tore off a few squares and handed them to Helen.\n\n\"I wiped you.\" He said.\n\nShe dabbed the squares on the end of his penis and then wiped the seat dry. As he walked her to the bed she marveled at how comfortable she was being with a naked man and touching him so intimately.\n\nPete let her undress and join him in bed. \n\nThe snuggled and held each other for a while. They kissed and touched without hurry. Pete fell asleep and Helen stayed in bed with him. In the next two hours she noticed the way he breathed, how he radiated warmth and she was warmed by him. She drifted in and out of sleep and wakefulness. \n\nAt about noon or a little after, she slowly got up and made lunch. She knew Pete needed calories so she made grilled cheese sandwiches and added sliced avocado to the plate. She put their lunch on the outside table and then woke Pete. He put on a t-shirt and shorts and they ate out on the deck.\n\nThe conversation was about what Helen wanted for the rest of her life. Pete asked questions and then listened to Helen talk.\n\n\"What legacy do you want to create?\"\n\n\"Do you want to live alone, always?\"\n\n\"How long has it been since you were on vacation?\"\n\n\"Where do you want to go on vacation? With who?\"\n\nShe knew a lot of the questions were things he had been thinking about since his diagnosis. He gave her lots of room to explore her answers and to have a few 'I don't know' answers.\n\nShe realized that she was responsible for dinner and that she hadn't gone to the market. She left Pete outside and went to the phone. She called the market in town and told the manager she needed to come get some things but she would have Pete in the car. He told her he knew Pete was sick and he would get the things bagged for her and when she arrived he would come out to the car with her things.\n\nHelen got Pete in the car and they drove to town. Mr. Wilkins came out with a bag in his arms and put it in the back seat for Helen.\n\n\"Here's my credit card,\" Helen said, leaning out her car window.\n\n\"Keep it. This is a gift from us to you.\" He turned and went back in the store. Helen sat stunned for a minute, started the car and drove home to Pete's.\n\nWhen she looked in the bag she saw he had put dessert in too. And, Pete's favorite Diet Dr. Pepper. She poured one into a big glass filled with ice and Pete's eyes lit up when she gave it to him. He sat on a kitchen chair while she made dinner. About every ten to fifteen minutes he would ask her to come over to his chair and give him a kiss.\n\nWhen Cally came home she walked through the door and kissed them both, Pete first. Dinner was ready soon after Cally got home and they ate together.\n\nAfter dinner Pete said, \"OK. Does one of you want to join me in bed before I fall asleep this time?\"\n\n\"This time?\"\n\n\"I seem to fall asleep pretty early, wake up at about two in the morning and go back to sleep after that. I have enough energy to play a little now and I assume I'll have some at about two. I would love to love you both tonight but I don't have enough energy to love you both right now.\"\n\nBoth women looked at him and then each other. Cally spoke.\n\n\"I have an idea, if Helen is game. We can all go to bed and I'll love Helen until she is ready for you and you can kiss her to screaming now. Then when you wake up at two you can nibble on me.\"\n\n\"That sounds good to me,\" Pete said.\n\n\"No way.\"\n\nCally's eyes opened wide. \"Can I ask why?\"\n\n\"You get to play with me and you get Pete to nibble on you. I get nibbled on by both of you but I don't get to nibble on you, Cally.\"\n\n\"I didn't know you wanted to.\"\n\n\"I didn't until I talked with Beth. She said you are both such great lovers. I know she was right about Pete. I'm scared shitless about having a woman in my arms but I want to know what it feels like. I want to know what you taste like, too. I cannot believe I'm even saying this!\"\n\n\"Enough talk, ladies. Let's meander into the bedroom.\"\n\nThey did. Cally and Helen undressed. Pete got to see and appreciate the black panties Helen wore just for his appreciation. Helen got the full attention of Cally to her face, neck, chest and breasts. When it was obvious that Helen was cooking Pete began nibbling on her below the waist. He took her close to her orgasm then he rested and frustrated her.\n\nAgain he licked and sucked and fingered Helen to the edge of sanity and stopped. He wiggled around until her feet were up on his back and her hands held his bald head. He sucked on her clit and kept at it until she flooded him, shook and shuddered into her orgasm. As she went Cally moved up and lowered her pussy to Helen's face.\n\nHelen let go of Pete and grabbed Cally's hips. Her tongue tasted another woman for the very first time in her life. She licked and probed and explored as much of Cally's intimate zone as her tongue and lips could reach. Cally lost control and her orgasm was felt, seen and tasted by Helen. If Cally hadn't held on to the headboard she would have collapsed.\n\nIt took the assist of both Cally and Helen to get Pete back up in the bed in a sleeping position. As soon as he was comfortable both women kissed him good-night and he was asleep.\n\nCally waited a minute after Pete was asleep and motioned Helen towards the family room. They went, naked, and sat to talk quietly.\n\n\"Cally, what's happening to us?\"\n\n\"Whatever do you mean?\"\n\n\"I haven't been in bed with a man in years. I'd written that part of life off completely years ago. Now I'm looking for an excuse to do it again!\"\n\n\"I've lived with Pete for over thirty years. I've loved him every way I knew how for all those years. Until a few days ago I never even thought about touching or being touched by another woman. At work today I was thinking about loving you tonight and loving Martha tomorrow.\"\n\n\"I'm still asking, what's happening to us?\"\n\n\"I just don't know. This much I do know, Pete gets the credit for all of this and I love what's happening.\"\n\nThe room was quiet for a while. Cally got up, went to the kitchen and came back with iced tea for both of them.\n\nHelen took a sip and said, \"I don't know how this will sound, but I would love to taste you again.\"\n\nThey took their iced tea glasses and went out on the deck. The evening was warm and a slight breeze from the west caressed their skin as they stood on the deck. Off in the distance they could see some lights from a distant farm. Cally put her tea on the table and put herself on a nearby chase lounge. Helen crawled between her legs and kissed Cally on the mouth.\n\nArms embraced bodies, skin pressed against skin, mouths explored mouths. As things go soon mouths and hands explored more skin and more intimacy was established and cherished.\n\nHelen got her wish. She tasted and savored the taste of Cally. Her tongue and fingers probed Cally's depths and pressed towards their mutual enjoyment.\n\nCally tasted Helen again and both felt and enjoyed the pleasure in giving someone you love an orgasm. Near eleven they went back inside, showered and joined Pete in bed.\n\nThe clock showed 2:48am in green lights as Pete got up to go to pee. The two women in bed with him were asleep. When he came back he stopped and looked at them both. 'Which one am I supposed to nibble?' he asked himself.\n\nHe gently pulled the covers back from Cally's body and slid in next to her. As he touched her she opened her legs to him and reached for his head.\n\nShe was wet. His tongue found and loved her juices. Her nub was waiting for his attention. In a very short time she tensed and twitched as her orgasm took her body. When she was able she helped Pete up into the center of the bed.\n\nAt 6:50am the alarm woke them up, again. The first time Helen heard that alarm it surprised her and it took a moment to realize where she was. This time she was aware instantly of where she was and that it was the right place to be.\n\nHelen went to the kitchen, Cally went into the shower. When Cally and breakfast were ready they woke Pete and he came to breakfast in clean shorts and t-shirt. When they finished eating Martha walked in and kissed everyone.\n\nCally and Helen left for work a few minutes later. Martha helped Pete get dressed and she drove him to the high school for his three hours of teaching. When they got home Martha undressed him and he was asleep before she could even show him her new underwear.\n\nWhile he slept Martha made dinner. She read more of a book about cancer. She cleaned some and sat out on the deck some. Every hour she checked on Pete.\n\nBy the end of the week a pattern was in place. Every woman had her time with Pete and he shared as much of himself as he could. Every woman shared time with Cally, deepening their relationship. ",
        "They all watched Pete get skinnier and weaker as time went on. He made graduation and hundreds of past students came back to say good-bye. All Pete's women were at graduation and shepherded him through the day. At the end of the ceremony the mayor stood at the podium and made an announcement.\n\n\"Ladies and gentlemen, graduates and alumni, it gives me great pleasure to announce that by unanimous vote the city council has voted to change the name of the high school. As of today this is Walter \"Pete\" Peterson High School.\"\n\nThe cheers and laughter lasted a long time. Pete sat on the stage with the other faculty and tears streamed down his face. He made no move to hide them or wipe them away. Cally sat in the first row of the audience watching Pete. She had found a way to give him both of his \"Somedays.\" \n\n\n\nOn 21 July Pete didn't wake up. Martha and Cally were with him. He had awakened at about two and needed their help to get to the bathroom. He was down to 124 pounds and had joked the day before that he should still have 41 weeks left at three pounds loss a week. There were two memorial services. One was just for Cally, Helen, Martha, Colleen, Janice and Beth. The other one was for all the other people Pete had loved and who loved him.\n\nOn Monday, after the funeral, Helen was eating dinner with Cally. Monday was her day. At about ten they went to bed. They held each other and cried. \n\nTuesday when Cally came home from work Martha was there making dinner. Tuesday was her day. Wednesday Janice was there making dinner wearing the bra and panties she bought to please Pete. Wednesday was her day. Thursday Beth was there making dinner. Thursday was her day. Friday Colleen was there making dinner. Friday had been her day. Saturday when Colleen and Cally woke up the others were there making breakfast. \n\nCally passed in her sleep eleven years later. Beth was with her. It was Thursday. Thursday was her day."
    ],
    "authorname": "Scorpio44",
    "tags": [
        "oral",
        "female to female",
        "love",
        "male to female"
    ],
    "category": "Mature",
    "url": "https://www.literotica.com/s/someday-8"
}