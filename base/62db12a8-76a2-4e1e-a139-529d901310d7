{
    "title": "Is The Third Time a Charm?",
    "pages": [
        "Thanks to 'LadyCibelle' and my editor 'Techsan' for reading and editing this story to make it a better read. They are two of the best.\n\n*\n\nI was at our five year class reunion. Everybody looked like they changed a little but no drastic changes. But inside who knows what changes took place. I've had a number of drastic changes in my life in the last five years. I really wonder what changes some of my classmates went through.\n\nHere I am watching my old classmates and thinking a few years back to the end of my high school days. I was thinking about my dating scene and all the different girls I dated. Hell, I probably dated half the girls that were here tonight. I was just a normal guy but had a way with words. I never considered myself good looking but just average. Some of my dates thought differently. I never lacked for dates.\n\nI remember passing around the year book and reading a lot of the autographs and seeing they were all pretty similar, \"Good luck in all your future endeavors\" and so on. As I was reading them, one stood out. It was from Julie. It read, \"Wish I could have gotten to know you better, love, Julie.\"\n\nI never dated Julie before the autograph books were signed. She was in a few of my classes and I did talk to her. I talked to all the girls. I learned years before to treat everyone nice. You never know what the future holds.\n\nOne time when I was a younger teenager I use to kiss this one girl named Mary. She always hung around with her girlfriend Sue, who had lots of pimples and was kind of gawky looking. Needless to say I didn't treat Sue very nice. I wasn't overly mean to her or anything. It was just that I didn't want her hanging around when I was with Mary. A few years later I was out with some of my friends at a dance. This knockout of a gal comes up to me and kisses me on the cheek and says, \"Hi, Larry. How have you been?\"\n\nI looked at her and didn't recognize her. She was nice, really nice. She said, \"You don't remember me, do you? I'm Sue, Mary's friend from the old neighborhood.\"\n\nI told her how nice she looked and asked her to dance. She looked at me and said, \"No, thank you, you never wanted me around you before and I don't care to be around you now. I just came up to you to teach you a lesson. Treat all people with respect. You don't want to burn your bridges in case you need to cross them again.\" Then she walked away.\n\nWell, I learned my lesson from that day forward. I treated all people with equal respect. I learned my lesson from Sue. \n\nBack to Julie. She had great looks but always dressed down. Not down as much as old fashioned. I never saw her in jeans. She always wore kind of granny dresses to school. Her family wasn't poor. They lived in a nice neighborhood and she was an only child. She was extremely conservative. I don't know anyone who took her out on a date. No one ever said anything bad about her and she did have friends, mostly girls. I talked with my girlfriend Jill at the time and asked if she knew anything about Julie?\n\nShe said that Julie's dad was really old fashioned and didn't allow Julie to date until she graduated from high school. Any guy that went to see Julie had to be very proper, like from the 1940's. She said it was weird but that was the way they lived.\n\nRight after graduation Jill and I broke up for a few weeks. It was fine with me because we had already done the nasty and I wanted to play the field. One day during the summer before going to college I decided to drive by Julie's house and say hello, remembering what she wrote in my yearbook. I walked up to the door and knocked. Julie came to the door smiling. She had on a pair of shorts and a white blouse. Wow, I thought, nice legs. As she got to the door her father came up behind her and asked me if he could help me. I told him I stopped by to see Julie. \n\nHe looked at me and then Julie and asked if I had made a date with her? I told him, \"No, I was in the neighborhood and just stopped by.\"\n\nHe looked at Julie and told her she had a guest and to go get properly dressed. He then told me I could sit on the porch swing until Julie was presentable. I was ready to hightail it out of there but didn't want to hurt Julie's feelings so I went over and sat on the swing.\n\nAbout five minutes later Julie came out attired in a dress. Her dad stepped on the porch with her and said, \"Next time, son, don't drop in. You may call Julie first so she will be presentable when you arrive.\" \n\nI said, \"Yes, sir,\" to him and he went back into the house. Julie sat next to me on the swing and talked low so her father wouldn't be able to hear. She apologized for her father's actions but said as long as she lives at home she will abide by his rules. I told her I understood and then we talked a lot of small talk. I asked her if she wanted to go somewhere and she said she couldn't because she didn't have permission yet. I couldn't believe this. The girl was eighteen years old and still needed her dad's permission to go on a date. I asked her to get permission to go out Friday night. She told me I would have to ask her dad. That's the way it was. Damn, I didn't want to get married, I just wanted to go to Big Boy's for a hamburger and maybe see a movie.\n\nI knocked on the door and her dad appeared. I asked for permission to take his daughter out on Friday for something to eat and to see a movie. I got her dad's permission but he said, \"No drive-in movies and I expect you to be dressed in proper attire.\"\n\nI told him I understood and then asked if it was alright if Julie went up the street with me to McDonald's to get a hamburger right now? He said as long as we walked. It was about a mile walk but I wanted to get away from the house. Julie got up and thanked her dad and away we went on our walk.\n\nThe setting seemed like 'Leave it to Beaver' or 'Father Knows Best,' it was kind of weird. Anyway we had a nice talk and had a burger and made arrangements for Friday night.\n\nI guess I was dressed semi-proper. I didn't wear a tie but I did wear slacks instead of jeans and I did wear a sports jacket. It felt kind of weird dressing up to go to a movie and Big Boy's for a burger. Julie on the other hand had on a nice dress. Kind of a blue flowery type. She looked great. I made sure I opened the car door for her seeing her dad was watching me. \n\nAfter we left the movie I pulled into one of the local lovers' lanes. I turned off the car and reached over and kissed Julie. She put her hands against the side of my face and gently kissed me back. Damn, that girl could kiss. She had these warm soft lips you could melt in. After a few more kisses I reached over and gently squeezed her breast. Soft and nice, wow, I couldn't believe she let me do it. I gave her breast another squeeze and heard a slight moan come from her. I quickly put my hand on her knee and slid my hand under her dress and quickly up her thigh till she clamped her legs together. I know she like it. I could feel her shake. That was always a good sign.\n\nShe looked at me and said, \"Please don't, Larry. You shouldn't be doing that.\"\n\n\"Well, stop me if you don't want me doing it. I know you like it.\"\n\n\"Please don't, Larry, it's not right.\"\n\n\"I don't see you stopping me, Julie\"\n\nRight then she reached her right hand back and bitch slapped me as hard as she could on the left cheek. I pulled back quickly and put my hand against my reddening face. Man, that hurt, I mean really hurt. I guess I asked for it and she delivered. I looked over at her and she had her face in her hands and was crying, \"Please take me home, Larry.\"\n\nI started to apologize but she cut me off and said, \"Please, just take me home.\" She cried all the way to her house and when I pulled up in front of her home she didn't wait for me to open the door. She jumped out and ran into the house. I didn't know what to think. All I could picture in my mind was her dad coming out with a shotgun. So I hit the accelerator and hightailed it out of there. When I got home my dad saw my bruised face and asked me what happened. I told him and he told me I got what I deserved.\n\nThat was five years ago and this is the first time I have seen Julie since that day. She was still a fine looking girl, woman now. I wondered if there were any skeletons in her closet. She just seemed so pure. She was over talking with some of her old girlfriends. I went over to talk to some of the guys. Everyone kind of talked about what they had been up to and then I looked over at Julie and asked the guys what the latest on her was.\n\nBill said she owned and operated a day care center with her mom. No one knew much about it. Jim said he thought she was a lesbian because she wouldn't go out with him. That's the way Jim always was. If a girl didn't date him she was a lesbian. \n\nBob looked at Jim and said he was full of shit. Julie was no lesbian. He took her out a couple of times. She was a lot of fun but wouldn't put out. She told him she was saving herself for marriage. \n\nEarl said, \"I would propose to her if I could get into her pants.\" \n\nBob laughed and said, \"It's not that easy, Earl. First she has to love you and I don't think she will hardly talk to you, let alone screw you.\" We all laughed. \n\nOne of the other guys said, \"She sure is one sweet woman. I wish my wife Becky was half as nice as Julie.\" \n\nJim added, \"I want to meet the lucky guy who finally nails her.\"\n\nThen we looked up and Julie came over to say hello. Boy, did the guys ever clam up quick. I was the first to speak. I said, \"Hi Julie, it's so nice to see you again. How has life been treating you?\"\n\n\"So-so\" she answered. \"You guys haven't been over here talking about us girls, have you?\"\n\nBob said, \"No, ma'am\" and we all laughed.\n\nI told her I would like to talk to her for a few minutes if she had time later. She said she would enjoy talking about old times with me as she walked away. Of course the guys all asked if I was going to try and score. I laughed and told them I didn't think so even though I thought to myself how I really would like to.\n\nAfter awhile I walked up to Julie and asked if she would like to sit down and talk for a few minutes. We both grabbed a Coke, then went and sat down in a booth away from the crowd.\n\nI said, \"First, Julie, I have to apologize for my actions on our date. I never did apologize to you. It was a combination of being embarrassed and afraid of your dad.\"\n\nShe looked at me to see how earnest I was in my apology. Then she said, \"Apology accepted. You did deserve it, you know. I had wanted to go out with you for two years and we finally went out and you went too far. So even though I accept your apology, I will not apologize for hitting you.\"\n\n\"Well,\" she said, \"I hear you have had a hellish five years according to the rumor chain. I doubt if anyone else here could match your last five years.\"\n\n\"How do you know about them? Have you been following me?\" I laughed.\n\n\"No, there are a few people I tried to keep tabs on and you were one of them. I can't believe you were married and divorced twice in five years. Are you going to tell me all about it?\"\n\n\"Do you really want to hear all the details of my failed life?\"\n\n\"Yes, I do. Please tell me.\"\n\nSo I began the story of my last five years. \"Well, it started with Jill. About a month after my date with you, Jill came up and said she was pregnant. I didn't love her but I wanted to do the right thing. I went home and talked it over with my dad and he said, 'If you got her pregnant, then you should marry her. You could learn to love her.' He said, 'You definitely learned to fuck her.' I'm sorry for swearing but if I'm to tell you my story the rough words will be part of it.\"\n\n\"That's fine. I've heard swearing before, please go on.\"\n\n\"Jill and I got married right away. I postponed going to college till we could get on our feet. I got a job and we bought a small used trailer. It was all we could afford being so young. My dad cosigned for us. After about thee months, I asked Jill how come the baby wasn't showing yet. She looked as trim as ever. She told me she had a miscarriage and lost the baby. I felt so bad and held her. I asked her when that happened and she just started to stutter. I looked at her and said, \"You were never pregnant, were you?\"\n\n\"She looked at me and started crying and said, 'No, I wanted to get out of my house. I hate it there.'\"\n\n\"I looked at her and said, 'But you lied to me and made me change my whole life trying to do the right thing.'\"\n\n\"I went home and talked to my dad. I wanted out of this three month marriage that was a farce. We contacted an attorney. He told us, my dad and I, that because the marriage was perpetrated on a lie that we could get an annulment, but that the transfer of assets could be a little stickier since we bought property together. So, my dad ... what a great man ... took fifteen thousand dollars out of his savings and paid off all our debt. which was the trailer and accessories and gave them to Jill.\" \n\n\"She was happy because she didn't have to move back in with her parents. I was happy getting out of a marriage I never really wanted and dad wasn't very happy but said, 'You are my son and I bailed you out of a loveless marriage so you will be able to go ahead and go to college.'\"\n\n\"I went to a school in California in the Silicon Valley area. I wanted to become a computer expert and what better place to learn. Computer Island is what we called it. If it had anything to do with computers, it could be learned there. I started school and really buckled down. I learned everything about the inner workings of the computer. My teachers said I was one of the best in the class. Of course my old ways came back to haunt me and even though I still studied hard, I started to play hard.\"\n\n\"I went out with my friends pretty regularly. I started doing recreational drugs and smoking pot. So I was always a little on the high side. I met a girl, not just any girl but a model. She was a couple of years older than me. Not just a student but an honest to goodness full fledged built like a brick shit-house model. A real California girl. God damn, was she ever beautiful and that wasn't the pot talking. She was a bikini babe all the way.\"\n\n\"Okay Larry, I get it, she was a great, even magnificent specimen of the female species. Get on with it, will you?\"\n\nI looked at Julie and had to laugh, I knew I got her dander up. So I said, \"But, Julie, she wasn't as beautiful as you.?\"\n\nJulie looked at me and said, \"Yeah, right!\"\n\nI continued my story. \"Well, she had a couple of major faults. For one she was kind of stuck on herself. She was a 'me first' type of person. But worse, she was a heavy drug user. Stupid me thought I could help her but you can't help someone who doesn't want it. Well, we dated and had a lot of sex, we took drugs together and of course she got pregnant. I thought, \"Oh, shit, not again.\" We made a doctors appointment and he verified that she was three months along. I was at a loss. I told her we should get married right away. The baby must come first. I knew it was the pot thinking brain I had, but it was also the right thing to do. Besides, as I mentioned before, she wasn't hard on the eyes.\"\n\n\"Yes, Larry, again I know she was beautiful. Go on.\"\n\nI looked at Julie and asked, \"Why am I telling you this? I'm about to tell you the worst and saddest days of my life.\"\n\nJulie looked a little worried. She told me that she thought I had been holding it all in and needed to get it out. To tell someone and get it off my chest. She was right. I needed to release my past and she right then was the sweetest person I have ever known. I asked her if we could finish talking outside. I knew I was going to break down and didn't want anyone else to see it. We walked outside and sat on a porch swing on the patio of the restaurant and I continued my story.\n\n\"Ellen, who was my girlfriend/model and I went to Las Vegas the following weekend and got married. She had an apartment and I moved in with her. We had a really stupid life. The only thing we had in common was we both loved sex and smoked pot. I called my dad and told him the news. He called me a stupid ass who couldn't keep his dick in his pants. He told me if me or Ellie were on drugs to get the hell off of them for the baby's sake. I never even thought of that, the stupid ass I was. Ellie luckily had insurance with the model's union. Without that insurance, we would have been up a creek without a paddle.\"\n\n\"When Ellie was five months gone she told me she didn't want the baby. I couldn't believe her. Why wouldn't she want her baby? She told me since she carried it this far, that she would have it, then give it up for adoption. Otherwise she would consider abortion. She wasn't ready to be a mother and really didn't care for kids. I couldn't believe what I was hearing. My wife of two months was going to give our baby away or kill it. I just couldn't believe it. The baby had a mother and a father. Why would you give it away? I told her no way! She wasn't giving my child away. God almighty, the things you find out too late.\"\n\n\"I told Ellie that I couldn't stay with a woman that would give her child away knowing that me, the father wanted it. She told me I could have it. After it was born I could take the kid and do what I wanted with it. She couldn't even call it a baby, a girl or boy, she called it an it, the dumb bitch. I just couldn't believe this was happening. In two years I'd been married twice and my second wife didn't want our child. I sat down and cried.\"\n\n\"I called my dad, my rock in hard times. I explained the situation to him. I know he could hear me crying. I was lost and needed help desperately.\"\n\n\"My dad said he would help me all he could but there wasn't much that he could do living so far away. He told me after the baby was born I should move back home. He, mom and my sister would help us all they could. He told me even though I had made all the mistakes he was proud of me for standing up for the baby. He told me the baby right now had no one else to speak for him.\"\n\n\"About two month later Ellie was rushed to the hospital. Due to her taking drugs the baby was going to come early. She, yes it was going to be a girl and would be a preemie. She would be a seven month baby and to make it even worse she would be addicted to drugs. The only good thing about Ellie was that she did have insurance to help cover the pregnancy and the baby's care. It would end up being in the tens of thousands of dollars.\"\n\n\"I decided I was going to name her Carly. I liked that name. When she was delivered the doctor grabbed her and rushed her into an incubator. He looked at me and said she only had about a thirty percent chance of making it. I looked at her and sat down and bawled. The tears wouldn't stop. I knew that Ellie was a druggy but so was I and look what we did to our baby.\"\n\n\"I decided right then and there that I wouldn't take another drug or smoke weed. I was going to stop cold turkey. I wasn't a religious person but I walked into the hospital chapel and prayed for my little girl. There was just nothing I could do to help her. I would have given my life for her but life doesn't work that way. I felt so helpless. I have no idea how long I stayed in the chapel. I guess until I ran out of tears. I headed back to see Ellie and she said she felt bad but it might be better if the baby died rather then going through life with health problems. I didn't know what to say. I told her I would go see a lawyer the next day and get the divorce papers and full custody papers taken care of.\" \n\n\"I spent the entire night in the hospital praying and feeling helpless. Every couple of hours a nurse would come out and tell me Carly's condition. Normally it would be 'No change, I'm sorry.' They wouldn't let me in the room with her due to all the special treatment she was getting. I overheard two nurses talking in the distance as she said, \"How could anyone do that to their child? If she makes it, it will be a miracle.\" So at that moment I started praying for a miracle. Carly would be my miracle baby.\"",
        "\"I fell asleep in the waiting room. It was morning and one of the doctors came to see me. I was afraid he was going to tell me my little Carly didn't make it.\"\n\nI stopped talking for a few minutes while Julie started crying. It brought tears to my eyes also. She told me how sorry she felt and could almost feel how I must have felt. Useless, hopeless and able to do nothing.\n\n\"As the doctor approached me he said that Carly hadn't improved but hadn't got any worse either, that she was stable. If she made it, she was going to need a lot of medical attention. Then he looked at me and said, 'Not to give you false hope but she's a fighter. This little girl wants to live.' I started crying again.\"\n\n\"I asked the doctor about the baby's drug addiction and he told me they had to actually give her drugs until she got a little bigger. There was no way her system could take a total withdraw.\"\n\n\"He said he talked to Ellie about using drugs since she was the one who had the baby. He would have to report her but he said, after talking to her, they decided not to prosecute her as long as she went to a drug rehabilitation program. He also had her sign a form saying she would use some type of pregnancy protection so she wouldn't bring another child into the world like this. He said it was only enforceable if she ended up pregnant, then they could have her arrested. There was no program that I would be forced to attend. They couldn't prove that my usage of drugs lead to Carly's addiction since Ellie was such a heavy user. But deep down I knew it had to be partly my fault also.\"\n\n\"The doctor told me there probably wouldn't be much change in the next few days, seeing Carly was stable, and that I should go home and clean up. They would contact me if there was any change.\"\n\n\"I went back to our apartment and packed up my few belongings. Just about everything belonged to Ellie. I was able to get all my belongings in my car. Then I headed over to see an attorney. I decided I wanted a female attorney since I was going for custody of a child.\"\n\n\"After explaining everything to the attorney, she said we shouldn't have any real problems as long as Ellie agreed. She said she would stop by and talk to Ellie the next day.\"\n\n\"I went to one of my buddies where I lived before and asked if I could bunk with them till I find a place or decide what I was going to do. I dropped off my stuff and headed back to the hospital. The nurses held up their hands like 'nothing we can do but wait.' I asked the head nurse if I could go in and see my baby. She saw the tears in my eyes and said, 'Sure, come on. I'll take you to see her.'\"\n\n\"As we walked up to the incubator, I started crying. The nurse had tears in her eyes also, looking down on this little tiny body with all these tubes in her knowing she's fighting to live. It had to be the saddest sight I have ever seen in my entire life. I put my hand on the incubator hoping that my little girl would know that she was not all alone. I know it probably wasn't true but I felt a connection to my baby touching the incubator. I told the nurse that I wasn't a religious man so I asked if she could say a prayer for my baby. I was all tied up inside and didn't know what to say. She said sure and we both put one hand on the incubator and held hands with the other. She said a prayer and I could feel a calm come over me. After the prayer we walked back out and I took my seat in the waiting room.\"\n\n\"I dozed off until I heard a buzzer go off and looked up and every nurse and doctor were running into my daughter's room. I thought, oh God please be with her. About five minutes later the head nurse came out and told me that Carly had a reaction to the drugs but they got it back under control.\"\n\n\"The next day my attorney and I went in to see Ellie. She said she was sorry about the baby but knew having it was a mistake. I wondered how a woman could be so hard core about a child she had.\"\n\n\"Ellie signed all the necessary papers for the divorce. Since there was no contest and no assets to divide, my attorney said it would go through quickly. She did mention that Ellie could give up all custody and parental rights to Carly but needed to keep her on the insurance so she could get proper care. Ellie agreed to it but said she wanted nothing to do with the child. In fact the next day she left the hospital without even seeing her baby.\"\n\n\"Everyday I went to the hospital I would sit and wait. I got my professors to assign me homework and used a laptop to complete more credits. It gave me something to do while sitting there day after day. Everyday I was allowed to go in and sit with Carly for awhile. I would talk to her and told her she was my miracle baby and would pull through. I told her that I would always be there for her. This went on day after day after day. We would move two steps forward and one step back. The doctor told me that every day that went by was in Carly's favor. It gave her body time to build up.\"\n\n\"Carly started to gain weight. She had been in the hospital for about two months then. The doctors said it looked like her chances were good or at least better but now they had to deal with the drug use.\"\n\n\"I remember after two months she was released from the incubator and put in a real baby bed. I was allowed to hold her. The first time I held her had to be the greatest day of my life. She wasn't very big but as the doctor said she was a fighter. She was also starting to take on some characteristics. You could see her baby blue eyes and blond curly hair. She was behind on her growth but that was to be expected.\"\n\n\"It was great to see all the nurses come in every day and talk to her and hold her. They also helped me at feeding time. Carly was finally allowed to eat. She started with formula and then soft baby food.\" \n\n\"This went on for two more months. Carly was four months old when she was released from the hospital. I got a one room apartment and the two of us lived there. My dad sent me some money so I could have a day care nurse. It helped pay for the expenses the insurance didn't cover. I was able to pick up some computer jobs that I could do in the apartment. It helped Carly and me survive. At the end of the semester my mom and dad drove in a van to California to take Carly and me home with them.\"\n\n\"That was only the second time they saw Carly. They flew in after she had been about two months old. I remember them crying when they saw her. I don't think they believed she would make it. At that time she looked like a two week old baby instead of two months. But now they were going to be surprised.\"\n\n\"They came through the door and Carly was sitting in her play pen. She was about eight months old then but looked around four months. My parents smiled when they saw her. She was my little miracle baby and she was my total pride and joy. Now she had other family who would love her too.\"\n\n\"Well, Julie, that pretty much covers it. We moved back here and I got a job as a computer wizard. I didn't get a degree but because of my skills I didn't need one. I know one thing ... make that two things. I'm a computer wizard and a hell of a good daddy.\"\n\n\"Carly is a little over two years old. She is still a little small for her age but she's a beautiful little girl. She's smart and catches on fast. Her doctor says she'll be caught up to her age group in no time.\"\n\n\"Now I have two questions for you. First will you take Carly into your day care? I want to relieve some of the stress on my family. They've been through a lot the last year. Second, are you going to tell me about your life the past five years?\"\n\n\"Well, Larry, as far as my life goes, it's pretty complicated and I don't think I can tell you about it right now. Not after hearing about you and your daughter. I'm a bit shocked, bewildered, I don't know what word I'm looking for. Then as far as the day care goes I'll have to ask my mother. She is half the partnership. I don't know if we're equipped to handle 'special needs children' and I would guess that she's not potty trained yet.\"\n\n\"Look, Julie, Carly isn't a special needs child. She plays just like every other child. She takes a special medication but that's it. And yes, she is not potty trained. Most two year olds aren't. Julie, I know you don't want to hurt my feelings and are worried about Carly. But I'll guarantee you will love her the minute you see her. I'm not wearing blinders. I know my little girl. Everything I'm telling you is true. Just give her a chance and meet her.\"\n\nJulie looked up at me and said, \"Okay, I can't make any promises to you until I talk with my mom. Please don't hate me if we can't take her. Stop by tomorrow around one and we will meet Carly and take it from there.\"\n\n\"Thank you, Julie, you won't regret it and it's been wonderful seeing you again. Will your dad shoot me when he sees me?\" I laughed. \"I haven't seem him since you ran out of my car.\"\n\n\"Oh, I'm sorry, Larry, I never told you. My father passed away over a year ago. That's one of the reasons we started the day care center. It helps pays the bills as well as the other benefits.\"\n\n\"I'm so sorry to hear that. I know you loved your father very much. Please accept my deepest sympathy even though it is belated.\"\n\n\"Thank you, Larry, I honestly don't think dad liked you. He saw me running in the house but never questioned it. He was old fashioned but very smart. He knew when to leave well enough alone. If he met you today, I think he would think differently of you. You have to remember I was his little girl and all men were the big bad wolf.\"\n\n\"Julie, can I ask a special favor of you? Would you kiss me goodbye in front of the guys. Just so the guys will see? I'd love to torment them.\"\n\nJulie laughed and agreed. We stepped inside the door and went and sat down. The reunion was about over and the people were leaving. Once the guys were looking our way, Julie leaned across the table and kissed me. My God, it was the same as I remembered five years before.\n\nChapter 2 Julie's Past\n\nAfter the big kiss with Julie, it brought back old memories. She was a really sweet person. I still don't know about her past and why she hasn't gotten hitched. I did feel bad hearing about her dad dying. I knew she was close to him. My life at least has straightened out. I work for a computer firm and also do repairs on my own. I'm glad I went to Silicon Valley for the training. I know I could never have gotten that kind of knowledge here. They had the best programmers in the world out there.\n\nMy life is finally turning around for the better. Hopefully no more stupid mistakes for this guy. I have my little miracle Carly who's been through hell for her two plus years of life. But now her recovery seems to be going well. She's bright, pretty and has a personality that will melt your heart. I thank God every day for saving her. I'm not a religious man like I've mentioned before but I'll argue until my dying day that God intervened to save Carly's life. \n\nWell, it was time to bundle up my little bundle of joy and take her to see Julie and her mother. I knew that Julie was just trying to be nice to me about watching Carly in day care. She was always that kind of person. She might be mildly surprised when she meets my little girl wonder.\n\nI put on her heavy coat and hood. It was pretty cold out and I didn't want her getting sick. I kissed her as I put the big old hood on her head. Hell, I could have had anything wrapped up in that big coat. I put her in the car seat and headed over to see Julie.\n\nI pulled up in front of the house. They had a big sign in the yard, 'Marie and Julie's Day Care.' Just looking around the yard you could see the woman's touch. It was something woman had. I glanced over next door and saw there was a house for sale. I was wondering if Julie and her mom were thinking of buying it and expanding their day care center.\n\nI opened the back door on my mini SUV and took out my little girl. If I could only find her in the coat and hood. I could remember back when I was just a tiny kid and my mom would put that old heavy coat on me. She would say, \"Now go outside and play.\" Hell, I couldn't even get my arms together to make a snowball. Here I was doing the same thing to Carly.\n\nI carried her up the few stairs and knocked on the door. I was met by Julie all dressed up in a beautiful dress. She didn't wear the granny dresses anymore. The first thing I said was, \"Still wearing dresses at home?\" as I smiled.\n\nShe said, \"Old habits never die.\" Then she said, \"No, I wear slacks because of all the kids. Mom and I just got back from church.\"\n\nI looked at her and smiled, \"Did you pray for me?\" Which was a pretty common response. \n\nShe said, \"As a matter of fact I did, and I prayed for Carly too.\" Boy, that was enough to make my eyes water.\n\nWe walked in and I sat Carly down on a chair. I took off her big old coat and hood and then picked her up. Julie looked at her and then at me. \"My God, what a beautiful baby. I mean, Larry, she's absolutely beautiful.\"\n\nI had put a little pink dress on her with matching panties over her diaper. She had blond hair with the little curl on her forehead, bright blue eyes and rosy cheeks from the cold.\n\nJulie reached out for her and Carly went to her right away. I think kids can sense when people care for them. I looked at Julie and said, \"Julie, this is my little miracle, Carly, and Carly, this is Julie. Can you say Julie?\"\n\nCarly said, \"Du-ly.\" I said \"No, Carly, say Juu-lie.\" She puckered up her little lips and tried again. \"Duu-lly,\" she spoke.\n\nI looked at her and said close enough sweetheart. Duly it is. I looked at Julie who was laughing and told her, \"It would be easier for you to change your name to Duly than for Carly to call you Julie.\" Then we were both laughing.\n\nMarie, Julie's mother came in the room. Julie introduced me and then her mom saw Carly in Julie's arms. She immediately held her arms out to Carly and she went right to her. \"My God, how precious is she? Hi, sweetie, how are you?\" Carly looked up at her and said, \"Nanna.\" I said \"No, Carly that's not nanna.\"\n\nMarie looked at me and said, \"She can call me Nanna if she wants to. A lot of the kids call me grandma. I much prefer that over Mrs. Morgan, or having the little kids call me Marie.\"\n\nAgain Carly said Nanna which made Marie smile. Julie looked at her mom and said, \"Larry wanted to enter Carly in our day care, mom.\"\n\nMarie interrupted Julie and said, \"Of course we will take her.\" \n\nJulie spoke again, \"Mom, you know she isn't potty trained. I thought that was one of your rules?\"\n\nHer mom said, \"Well, I'm changing that rule for Carly. I'll be the one to potty train her. After all I'm her Nanna.\"\n\nI couldn't help tearing up over that remark. Everyone loved my little miracle girl but no one more than me.\n\nJulie asked her mom if she would take care of Carly for a little bit. She wanted to talk to me. Her mom looked at us and said, \"Sure , no problem, come with Nanna, Carly. I have lots of toys to show you.\"\n\nJulie looked at me and said, \"I need to apologize to you. You told me all about you and Carly yesterday and I didn't tell you my story. I will tell it to you now but you must promise me that it will never leave this room. There are only about three people in this area that know any of it. Mom and dad were the only two that know the whole story.\"\n\n\"My God, Julie, of course I would keep anything you tell me confidential. You have my solid promise I'll never tell anyone.\"\n\n\"Well, let me began by telling you that I went away to college also. Not all the way to California but at least a couple of states away. It's not important for you to know where, in fact I would prefer you not know. Of course dad was old fashioned and didn't want me to go at all, but mom and I convinced him that I had a scholarship and it would be good for me. Against his better judgement he agreed to let me go. Anyway in my junior year I went out with my girlfriends. I was still kind of shy and of course all the guys wanted was in my pants which wasn't going to happen till I met that special someone. \n\nWell, I went out with my girlfriends and we went bar hopping. I didn't drink and still don't but I went along and just drank pop. Somewhere, somehow, someone put a date rape drug in my pop. The next thing I remembered was that I was in the hospital. I had been raped repeatedly. I don't remember anything but the pain I woke up with in the hospital.\"\n\n\"My God, Julie, I had no idea. I feel so sorry for you.\" She had tears in her eyes so I put my arms around her to comfort her.\n\nShe continued, \"The doctors told me that I was found in a motel off the highway lying on the bed. Someone had called the police and rushed me to the hospital. They did catch three of the men who took part. I heard their names on police reports but honestly never have seen any of them. Just a bunch of guys out to take advantage of a girl. The three were found guilty of using a date rape drug. Because I really didn't want to go to trial we plea bargained the charges. They were evicted from college and ordered to serve time.\"\n\nJulie stopped for a minute to catch her breath. I continued to hold her gently. I knew that is what she needed right now, just to be held. I know why she didn't tell me the school now. She knew I had a temper and was worried what I might do.\n\n\"The doctors told me that I would be alright. All the bruising on my body would heal but there was a chance that I may not be able to have children. My insides were pretty messed up. Only time will tell. Of course you know I'm not the most sexually active person so I guess I just have to wait and see. I was in the hospital a little over a week and then my parents came and got me and took me home. There was no way I could go back to that school.\"\n\n\"I changed my studies to child care management and finished school locally. I chose child care because I love kids. My mom does too but will probably never have the grandchildren grandmas think about. So I did the next best thing. I convinced mom to go into business with me and she could take care of all the little ones she desired.\"\n\nJulie started crying again. Damn, what could I do for her. Why do such innocent people get harmed? First little Carly and now Julie.\n\n\"I think that's why mom got so attached to Carly so quickly. We don't have any kids that small, besides her being so darned precious.\"\n\n\"I need to tell you that I never felt anything during the rape. To the best of my knowledge I was out the whole time. Every now and then I get a little flashback but don't know if it means anything. The police and doctors wanted me to go to rape counseling but I don't remember anything. There would be nothing to bring up. I sure don't want to be put under and them find things to be brought up. I can tell you that no woman deserves to be raped. It isn't fun and games, it's torture. I had to only put up with the after effects and that was bad enough. Why any man would think a woman would like it is beyond me.\"\n\n\"Well, Larry you now know my little secret too. That makes it pretty even. Please never mention it to anyone. I just needed to tell somebody and after yesterday and your story about Carly I felt I could tell you.\"\n\n\"Julie, your secret will always, and I mean always, be safe with me.\" I hugged her and gave her a very light and gentle kiss. Then Marie appeared with Carly.\n\nI looked at Carly and said, \"Well, sweetheart time go home. Let's get your coat back on, it's cold outside.\"\n\nThat was the beginning of my new relationship with Julie and her mom. Every morning five days a week I'd take Carly over and would be greeted by either Julie or Marie. They would take Carly and I would leave. They were always busy first thing in the morning. So I didn't bother them. I was always one of the last to pick up their kid. One reason was because of my schedule and the other was I got to talk to Julie.",
        "I day I just asked her, \"Would you go out with me?\n\nShe said, \"Sure but my rules still stand.\"\n\nI put my hand to my cheek and said, \"I understand.\"\n\nWe started going out about every Saturday. We talked, kissed ... boy, did we kiss ... and hugged. I never took that next step.\n\nOne day Julie asked me, \"Are you good?\"\n\n\"Julie, I'm really good.\"\n\n'No,\" she said, \"I meant as a computer person.\"\n\n\"So did I,\" I replied. We both laughed.\n\nShe asked me if I could make a program for her business. To help keep records and expenses? I told her sure and then she asked me how much would it cost?\n\nI looked right at her and said, \"We could take it out in trade.\"\n\n\"What?\" she responded.\n\n\"You can take it in trade for watching Carly What did you think I meant?\" She turned beet red. I mentioned that would be alright to, as she slapped me lightly on the arm.\n\n'How much will it cost us in money terms?\" she asked.\n\n\"Oh, I'll just charge you for computer parts and program material. I'll do the labor for free.\"\n\n\"So what would a program like I'm asking for cost? We have a computer already.\"\n\n\"Cost for you or for anybody else?\"\n\n\"Well, first for anybody else.\"\n\n\"I'd say twelve to fifteen hundred dollars.\"\n\n\"That much? How much for us?\"\n\n\"A hundred and fifty dollars and I'll show you personally how to operate the program.\"\n\n\"My God, it's a deal. When can we start?\"\n\n\"Tomorrow is as good as any. Would your mom mind watching Carly while I show you the program?\"\n\n\"Are you kidding mom would love to watch her.\"\n\n\"Okay, we'll start tomorrow.\"\n\nThe next day I showed up and there stood Carly with no diaper on. \"Dada, dada, peepee in da potty, peepee in the da potty.\" She took my hand and waddled into the bathroom to show me she had peed in the potty.\n\n\"Wow,\" I said, \"that's great. Daddy's so proud of you.\"\n\nMaria came in laughing and got her and put her diaper on. My little baby was getting smarter.\n\nThe program was up and running and Julie and I were still seeing each other. It had only been a couple of months now. Was I ready to take the plunge the third time? So far my luck hadn't been too good. But no girl I knew was as nice as Julie.\n\nI received some bad news the next day. The minute I walked into Julie's place she could see something was wrong. She looked right at me and asked me what was wrong?\n\nI looked at her and said, \"I got a call today. Ellie, Carly's mother died of an overdose last night. It's just so sad. I always thought in the back of my mind that maybe, just maybe she might want to see her daughter someday. I don't mean see me because we didn't have anything in common any more. It's just one of those things you think about. Now Carly doesn't have a mother at all and she will never get that chance to meet her.\"\n\nAs usual Julie gave me a hug and I put my game face on for my little girl as we left for home. \n\nAbout two months later I had made my decision. I was going to ask Julie to marry me. I really wasn't sure if she would. So the next time I went to pick up Carly I watched as Marie was putting on Carly's coat.\n\n\"Mom's a little down in the dumps today. She said that Carly is the only thing to brighten her day.\"\n\nI asked, \"What is the problem?\"\n\n\"Well, mom and I were going to try and buy the house next door. We thought about making the day care center larger but we needed the financing. Well, today when mom went out to get the mail they had a sold sign on the house. Kind of dashed her hopes.\"\n\nI looked at Julie and said, \"Your mom really loves Carly, doesn't she?\"\n\nJulie looked at me and said, \"She sure does.\" \n\n\"What about you Julie? Do you love her too?\"\n\n\"My God, yes. I'd love to have a little girl like her.\"\n\n\"Do you mean it. Would you like to be Carly's mother?\"\n\n\"Oh my God, oh my God, are you asking me what I think you are?\" She started crying.\n\n\"Well, we are kind of a package. If you take the daughter you have to take her daddy also.\"\n\nWe were both in tears when Marie came in and saw us both crying. \"What's the matter, Julie? Why are the two of you crying?\"\n\n\"Mom, Larry just asked me if you wanted to be Carly's real life Nanna.\"\n\nMarie started crying also and said, \"Yes, yes, she'll marry you.\"\n\n\"Mom, I already told him yes.\" \n\n\"Excuse me but you never did answer me. You just started crying.\"\n\n\"Well, you heard my mom, the answer is yes!\" With everyone crying it scared Carly and she started crying too.\n\nMarie said, \"It's alright, honey. Nanna's only crying because she's so happy.\" She cuddled Carly in her arms as she rocked and kissed her.\n\nJulie looked at me and said, \"I'm so happy. This day couldn't be any better.\"\n\nI looked at her and said, \"I bought a house for us to live in.\"\n\n\"What? You bought a house? Where at? I don't want to be to far away from mom and the day care center?\" \n\n\"Well, how about next door? I put down a deposit today and tomorrow I'm suppose to tell them what names to put on the title. Julie looked at me with tears in her eyes and asked, \"Can we afford it?\"\n\nI said, \"We can afford it.\" \n\nI asked Marie if I could leave Carly with her for about an hour. I needed to take Julie someplace. \"Of course\" Marie said, \" I'll watch this precious little girl anytime.\"\n\nThen Julie asked me, \"What would you have done if I said no?\"\n\nI told her that Carly and I would have been their neighbors. The drive to day care would be pretty short. She slapped me playfully.\n\nSo Julie got on her coat and came with me. She asked where we were going and I told her to break the news to my parents.\n\nShe looked at me and said, \"They don't know?\"\n\nI said, \"Of course not. What if you would have said no? Then it would be harder to explain yet.\"\n\nWe went in the house and my dad looked at me and then at Julie. He came out with it. \"Jesus Christ, not again? Can't you keep that thing in your pants?\"\n\n\"Dad, it's not like that. Julie and I have never made love or had sex. I love her dad, only this time I want your's and mom's blessing ahead of time.\"\n\nMy dad turned to Julie and asked if she was the Julie that bitch slapped me five years ago.\n\nShe looked at me and then my dad and said, \"You know about that? Oh, my God.\"\n\nMy dad told her that he was proud of her and she did the right thing. Then he asked her why she wanted to marry me? He said they loved me because I was their son but what did she see in me?\n\nJulie looked at my dad and said, \"I had a crush on Larry when we went to school. I really can't call it love because I was just a teenager. I'm not a teenager any more. I love Larry with all his faults. I am also in love with Carly and want to be her mother. I will be the best wife possible and be a great mother to Carly.\"\n\nDad said, \"I take it you know his whole past and still want to marry him. So if that's true then you have our blessing and we hope the third times a charm.\"\n\nWith that all said, mom and dad hugged Julie and told me to take good care of her because she seemed like a real keeper. I smiled at them and then Julie and we went back to get Carly.\n\nFor the next month everything was so hectic, buying a house, getting it ready to move into, Julie busy at the day care and me at my job. Somewhere, in all this so called confusion, I was a very happy man. I had my beautiful miracle daughter, a future wife who actually loved me, and was surrounded with family.\n\nWe planned the wedding for the following weekend. It would just be a small affair with family and a few of our old classmate friends. As we were busy one evening putting the finishing touches on our master bedroom, I plopped down on the bed. Julie plopped down right next to me. I rolled over on my side and began to kiss her. I couldn't get over how she kissed. It was unlike anyone else I ever kissed. I finally looked at her and asked her why she thought that was.\n\nShe responded to me saying, \"Every time I kiss you I always put my heart and soul into it. I never hold anything back. I guess you feel the love that I have for you being transferred from me to you.\"\n\n\"But I felt it years ago and I still feel it today.\"\n\n\"I felt I loved you then and I know I love you now,\" as she kissed me one more time.\n\nI reached over and touched her breast and gently squeezed it. Just like five years ago, I could hear her moan. I slid my hand down to her thighs just like five years ago. She looked in my eyes and said, \"Larry, I love you with all my heart. I won't slap you this time if you go any further. I want you as much as you want me but I am willing to wait a few more days.\"\n\nI pulled my hand away and kissed her one more time and felt the surge of love she spoke of. Then I told her to go home because I had to take a cold shower right away or wouldn't be responsible for my action.\n\nThe small wedding went off without a hitch. Julie looked beautiful in her white wedding dress. Carly was her flower girl but didn't do the greatest job spreading flower pedals. As she sort of wobbled down the aisle she was throwing the pedals at the people seated along the aisle. I don't think anyone minded since they all smiled at her as she walked by.\n\nThe reception was great. Of course the boys pulled me aside and asked, \"Did you get it yet? Are you the first? We just gotta know.\"\n\nI didn't know whether to slap them, laugh or tell them. After all they were my high school buds. I looked at them and said, \"No, we haven't done the nasty, but yes we will be doing it for the rest of our lives beginning tonight. And finally, I will be the first and only man to make 'Love' to Julie.\"\n\nI think Julie kind of overheard what I said and she came over smiling. She told them, \"Guys, there is sometime I have to say to you. I won't be Larry's first but I'll guarantee you I will be his best.\" She then laughed and walked away. \n\nThe guys looked at Julie walking away and then at me and congratulated me and wished me the best as I rejoined up with Julie for a few dances.\n\nOur wedding night was fantastic. Julie kept her promise. Maybe it was so good because of the long wait, or maybe because it was built around love, or maybe because I wasn't on drugs. \n\nI was debating with myself whether to let you in on some of the fantastic sexual action we had. I decided against it. What Julie and I have is going to stay between us. It was so special. Like she promised she was the best I have ever had and there is no need for anyone else in the future.\n\nThe third time is a charm!\n\nConclusion:\n\nWe were all enjoying our lives. Julie and Marie's day care center got bigger. They used our yard and our house when needed. They hired a couple of other women to help out. Their love of children really showed. Little Carly was of course Nanna's favorite. Julie legally adopted Carly so in case anything ever happen to me Carly had a mom. Carly started calling Julie mama duly. Eventually it was just mama.\n\nValentines day was coming up and I had to get something special for my four female family members. I went to the candy story and bought my mom and Marie a big box of chocolates. I dropped mom's off on the way home. For Carly I got a giant stuffed giraffe that was taller then she was. Then for Julie I gave a single rose for our first Valentines Day together. They were all happy with their gifts. Julie told me how thoughtful it was and gave me one of her patented kisses. So I reached in my pocket and pulled out a little box and handed it to Julie. In it was a chain necklace with the words mommy dangling from it. She started in on that crying again. We had the most crying family I have ever heard of. But most of our crying was for love.\n\nJulie kissed me and then she picked up Carly thanking her for the necklace. Of course she had no idea what mommy was saying.\n\nThen Julie said she had a surprise for me too. She walked into the other room and handed me a little box. I looked in it and said, \"You're kidding me.\" Inside the box was a pregnancy test kit which showed positive. There were two in there both showing positives. I looked at her and said 'Twins\"?\n\nShe said, \"No, goof ball. I just took it twice to be sure. I have a doctors appointment next week to see if Carly is going to have a brother or a sister. Then Carly walked up to her mommy and padded her on the belly and said 'Baby.\"\n\n*\n\nThis is my Valentine's day story.\n\nHope you enjoyed it.\n\nComments and votes are welcome.\n\nDG Hear "
    ],
    "authorname": "DG Hear",
    "tags": [
        "romance",
        "love",
        "divorce",
        "marriage"
    ],
    "category": "Non-Erotic",
    "url": "https://www.literotica.com/s/is-the-third-time-a-charm"
}