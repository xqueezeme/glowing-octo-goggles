{
    "title": "A Tale of Revenge Ch. 04",
    "pages": [
        "Dev begged her not to leave him despite her best attempts to coolly shake him off. He swore never to breach her privacy, told her of his family's fate and promised anything and everything he could possibly give to help her on this mission. It was only when she recognized that this was a version of the conversation she had had with the god that she acquiesced.\n\nThe way was a bit less burdensome with him. The two of them mounted the soldiers' horses and made to catch up with the group they'd fallen behind the day before. She was not left trapped in her own thoughts and frustrations. Despite barely a word from her, Dev managed to fill the space between them with an endless stream of stories, songs and jokes. While she should have been annoyed with his rambling, she found that the distraction helped, though she made no outward sign of this.\n\nDev was finishing singing a song about Brissida, a fierce lady warrior who avenged her king's betrayal, dragging out the high notes to pull the most drama from the ballad. Anna's lips twitched. Dev saw her small smile and encouraged, tried to engage her again.\n\n\"So are you Brissida the Black Justice reincarnated?\" His joking tone faltered slightly. He was only half joking.\n\n\"No,\" she said shortly. Silence fell between the pair again.\n\n\"It's just, I've never seen anyone fight like that,\" he tried again after a few moments.\n\n\"And you are a great observer of fighters?\" Anna meant it to quiet his line of questioning but Dev ignored her mocking tone.\n\n\"In fact, we used to travel every year for the jousts and tournaments in the capital. My uncle was a blacksmith and I would assist him. I used to sneak away whenever I could, finding my way into the crowds. My uncle threatened to leave me behind every year but by the next I could make him forget. This one time...\" and he was off on another tale of mischief and mayhem. Anna congratulated herself on distracting him so thoroughly. His chatter soothed her and she turned her attention back to the trail, letting her sight reach out towards the group they were rapidly gaining on.\n\nA straggler had changed course from the rest of them. She saw him depart on his own at a crossroads ahead.\n\n\"Hush,\" she said suddenly, bringing her horse to a stop. Dev stopped speaking immediately. \"Wait here.\" She slid off her horse.\n\n\"No!\" Dev whispered harshly. \"Don't leave me behind.\"\n\nAnna looked up at him, noting his pained expression. Part of her wanted to let him come but he still knew nothing of her abilities beyond what he had seen and she didn't want him to know any more. If Anna had learned anything from the way her village had treated the old women whose book she carried, most people viewed magic as something that did not belong in their world, and thought very little of those who used it.\n\n\"No, Dev. Listen to me or I leave you behind. Last time you made an appearance it distracted me long enough for the soldier to get the drop on me. Stay. Here.\" She punctuated the last two words. For a moment Dev looked as though he would defy her.\n\n\"Fine,\" he agreed miserably. Anna nodded and started making her way through the wood, following her sight to the lone traveler. She came up on him as he marched alone down a small trail. She watched him approach her position, wondering how to proceed. For the first time when confronting her enemy, she actually thought of a plan.\n\nAs the man got closer, Anna left her cloak in a hiding spot and stepped into the path in front of him, barring his path. The man stopped, shock on his face but he didn't take a defensive pose. He spent a long moment looking her over before his face broke into a smirk.\n\n\"What can I do for you, love? Lost in the forest looking for a friend?\" he grinned at her.\n\nAnna pulled her hands from her back, both fists glinting with blades. \"Not exactly.\" She enjoyed the way his face changed so completely at her threat.\n\n\"There are much better ways to pass the time,\" he grunted as he threw his pack to the ground. He pulled his long sword from his waist and faced her again. \"You sure you wouldn't rather get to know each other better?\"\n\n\"None of you can think of anything else, can you?\" Anna said exasperated.\n\n\"None of us?\" This one wasn't as slow as his friends, she realized.\n\n\"Your comrades in arms. They also spent too much time trying to get their cocks wet and ended up on the wrong end of my knives.\" Anna gave him a ferocious grin. \"Maybe if you thought we were more than walking cunts you'd recognize a threat when it was issued.\"\n\nThe man was not talking anymore but slowly making his way towards her left side, inching in such a way to keep her from noticing him searching for a weakness. Anna let him get close, let him think she was a fool. His sword struck out at lighting speed, a surprise even for Anna. The black fire inside her came roaring to life, pulling her muscles to react faster than her vision. She twisted under his jab and landed a glancing blow with her knife as his arm stretched out above her.\n\nHe pulled back, eyes wide. She smiled at him again before she threw herself at him. Her knives flashed dangerously fast. He managed to block many of her blows but before he broke away he was covered in shallow cuts along his face, hands and arms.\n\n\"What are you?\" he managed, his sword still pointed towards her chest. She noticed his stance was less confident now, he was more wary, moving away rather than towards her.\n\n\"I am the spirit of vengeance,\" Anna said, her voice dangerously low. \"I am the misery and death you inflict and forget come back to haunt you. I am the justice your victims' souls cry out for as they are ripped from their bodies.\"\n\nThe man's face turned white as she spoke. She knew he believed her. She could see him wrestle with what to do. Give up? Run? Beg for mercy? But she knew he was a fighting man to the last. His attack didn't surprise her. He was masterfully fast, better than those who had come before him, but still no match for the god's gift.\n\nHis sword sped down towards her face and she crossed her blades, catching his in the X they formed. She looked into his face as she twisted the knives, pushing his sword over to her side and into the dirt. She swung her body with the blades, lowering her center of gravity as her leg shot out, striking the big muscles in his thigh that were tensed in attack. He cried out, his leg giving way. He was on one knee, his sword still in his hand. Anna struck his chest with her foot and knocked him back into the dirt. In a moment she was on him, one of her blades at his throat. Her knee held down his sword hand, which was now pinned uselessly at his side.\n\n\"Confess,\" she hissed at him.\n\n\"I followed orders. Nothing more. It was my duty,\" he said quietly.\n\n\"Your duty to rape and murder innocents?\" she said, contempt dripping from her voice.\n\n\"To protect my king. That is all I did.\" His voice was steady. Could he be telling the truth? Anna reached with her sight, searching into the past to see his deeds. She saw him in her village, standing by. He was truthful, he did not partake in the more egregious sins committed against her kinfolk but he had killed those who thought to fight back. He had run through the miller's son who came at their commander with a hammer for one. But she went further, seeking out the orders he was given and found her power could not seem to form that particular scene in her mind.\n\nAnna turned back to the present, and the man under her knife. \"To protect those who rape and murder,\" Anna said, unmoved. She saw his actions and judged him unworthy of mercy. \"To kill commoners who come at you with tools of trade with your blades of death. It is an honorable duty you performed.\" Her voice dripped with contempt for his claim of obligation.\n\nThe man looked away from her. She could see he hadn't enjoyed himself but he had done it anyway. She considered her next move a moment too long. His left hand, the one she had not secured as soundly, jerked from under her knee. His dagger flashed towards her face. She moved back a moment too late and he managed to land a shallow glancing blow across her cheek and the bridge of her nose right under her eye.\n\nThe black fire inside her acted more quickly than her mind. Her hands dropped her knives and went to his fist. The motion of his cut was across his body so she used his force and helped the blade across to his right. At the last moment she twisted his hand so that the blade was pointed down and then shoved it through his right wrist below the hand that still clutched his broad sword. All of this took no more than a fraction of a second to occur.\n\nThe sword fell from his useless hand as the tendons of his muscles were severed. He howled in pain and horror as he twisted underneath her to gape at his mangled hand. She didn't retract the blade, knowing that would be his death sentence.\n\n\"You used your sword to protect those who murdered. You saw this as your sworn duty to your king. So I have relieved you of your duty. You will never raise a sword again. Your right hand will remain useless to you for the rest of your life. Every time you curse me and the fates who took it from you, you will know, deep in your heart, that you deserved it.\"\n\nWith that she got up, taking her discarded blades. She watched the man curl up around the knife that remained lodged in his arm and the ground. With some satisfaction, she turned to leave.\n\nWhen she made it back to Dev he was pacing the small clearing she had left him in. He looked up at her approach.\n\n\"That didn't take long,\" he said nervously.\n\n\"There was only one,\" she said coolly. She couldn't help a self-satisfied smile. She felt vindicated without feeling dirty. This was what she wanted, not the guilt of death but the satisfaction of justice. Perhaps the god had been right.\n\n\"And you killed him?\" the hope in his voice pulled her out of her self-congratulatory musings.\n\n\"Justice was done.\" She mounted her horse and looked back at him. \"There is a party of ten of them heading for Anthrosen. If we move we can reach them in the morning and circle back for the main army.\"\n\nDev mounted his horse smoothly. He had had much more practice than she, a simple country village girl. \"You mean to take out ten of them in one morning?\" he asked, his tone light despite the morbid topic.\n\n\"I mean to mete out justice to ten men come morning.\" With that she started to move, lapsing back into silence for the rest of the day.\n\n*\n\nThey located the group of soldiers outside the larger town. Anna let Dev tag along while she scouted their camp. He was jumpy and excited. She tried not to encourage him. She didn't want to get his hopes up. She wouldn't let him join her fight this time either.\n\nThey settled in for the night without lighting a fire, choosing to remain close but hidden from their targets. Anna lay in her bedroll waiting to hear Dev's breathing to slow. While she was glad for company she was also beginning to get nervous. Would he get involved in the fight despite her warnings? Would he find out about her powers?\n\nAnna sat up, frustrated that sleep eluded her. Why did she care so much about this boy and his never-ending stream of chatter? Why did it suddenly matter to her what he thought or knew? She huffed, putting her head in her hands and dragging her nails through her knotted hair. The cut on her face still ached. She hadn't wanted to heal it too quickly lest Dev realize something was amiss. She shook her head again, appalled that it even mattered to her. She stood, thinking to wander the woods under the full moon to calm herself.\n\nShe felt him before she saw him. She turned to see his strangely glowing form between the trees some way off. Why was he here? She had killed no one, unless the man had died from his wounds. What an idiot! Had he removed the blade and bled out right there? In her rush to find out she left her shoes and breeches behind, making her way through the forest barefoot in the large shirt that hung down to her thighs.\n\nHis form kept moving away from her as she followed, desperate to know why he had come for her again. Finally, she found her way into a small clearing, the bright light of the moon turning it into a silvery impression of day. The god's form had disappeared and she stood, looking into the darkness of the trees around her, trying to see where he had gone.\n\nHis hands on her shoulders made her jump. He had appeared behind her without so much as a sound. His hands smoothed down her arms and she felt his body no more than a hair's breadth from her own. She stood frozen, shocked at this sudden intimacy of his touch. She had been expecting binds and a lash.\n\nHe chuckled in her ear, very close. \"We can do that too if you'd like.\" His laughter made her shiver with its alien sound.\n\n\"Why are you here? I didn't kill that man today. He was alive when I left him. I can't be held responsible for his stupidity if he let himself bleed out.\" She bit her lip to stop herself from saying more. She hadn't been able to keep her voice from betraying her nervousness at his closeness.\n\n\"Such concern for your foes,\" he murmured in her ear. His hands continued roaming across her back, along her sides. \"The man is fine, well, mostly intact. That was a nice bit of work you did.\" She could feel his lips moving he was so close to her ear.\n\n\"Then why are you here? Am I to be punished for my actions regardless?\" She tried to keep her voice steady. It was getting hard to stay still as his hands began down the front of her body, dangerously close to the hemline of her shirt.\n\n\"This is not for punishment,\" he whispered, pulling the hem of her shirt up, letting his hands slide across the smooth skin of her thighs. \"This is the other part of our deal, the one where this responsive body of yours is available to me when I see fit.\" She bit her lip against making a sound as his fingers reached her undergarments and pushed aside the barrier. He parted her nether lips, finding the beginning of her arousal already moistening his fingertips. \"Responsive indeed.\"\n\nAnna closed her eyes against the shame, turning her face away from his voice. She forced herself to be still, fighting every fiber of her being that screamed at her to run from his caresses.\n\nHis other hand came across her chest, grasping her breast and pulling her body tightly against his impossibly hard one. \"A wise choice. Are you learning your place?\"\n\nAnna's anger flared. She started to struggle against him. \"Let me go!\" She shouted, unthinking. The god laughed again. The hand between her legs dug into her flesh cruelly and the other tweaked her nipple so hard her back arched to try to alleviate the pain. And still the shooting pain seemed to send darts of fire along her skin, awaking the stirrings his soft caresses had begun. And then at once, he dropped her unceremoniously on the ground.\n\n\"Apparently not,\" he said, walking around to her front. She looked up at him, fury overriding her fear of him but the expression on his face made her think twice. \"You are mine, every part. You have sold me each and every piece of yourself. I did not force that upon you, you took it upon yourself. But by all means, keep fighting. It seems a great use of your energies.\"\n\nAnna hung her head, hiding from his gaze as much as from his words. She wished he would just take her, not make her complacent in this. But that was the point wasn't it? She had to submit. She had, after all, agreed to this deal. She wanted to fight, to maintain some semblance of dignity but it was a farce. She had sold it.\n\nShe took a deep breath and stood before the god. She couldn't look at him yet. She found the hem of her shirt with numb fingers. She pulled it over her head, tossing it to the side. She fumbled slightly with the ties of her under clothes. But soon, too soon, she stood bare before him. She twined her fingers in front of her, unsure of where to put her hands. She shifted nervously, not knowing what to do.\n\nFinally she looked up to see him looking back at her, the same blank expression he had worn before. She thought to speak, to incite him to do or say something but she could think of nothing to say. The stillness of the moment became oppressive, his gaze never wandered from her face. Finally he moved, raising a hand to her cheek. His thumb traced the line of the knife cut she had sustained in her fight. She hissed quietly as the pain flared but just as quickly it disappeared, as if it had never been.\n\nShe raised her hand, running her fingers beneath his own to feel the newly intact skin of her face. Her eyes went to his and he smiled slightly. \"Now it's time to see how responsive you can be.\" Her breath hitched in her throat and she only just kept herself from recoiling.\n\nAll at once she felt the now familiar sensation of restraints binding themselves around her limbs. At her back a smooth slab appeared and her wrists and ankles were pulled away from each other until she was stretched into an X. Her pulse raced, all the suppressed instincts to run came roaring to life as she pulled uselessly at the ties that bound her.\n\nHer wide terrified eyes met the god's smooth, unresponsive face. She tried not to beg him to leave her alone, to leave this dark part of her uncovered. As he approached her, causing her to pull back farther into the unyielding slab at her back, her restraint gave out.\n\n\"Please don't,\" she managed in a small voice.\n\nThe god seemed pleased. A small smile played across his lips. \"Don't what, Anna?\"\n\nHer name in his deep, cavernous voice, washed over her\u2014through her\u2014and plucked at the desires she was so desperate to keep locked away.\n\n\"Please don't do this. It's wrong. Something is wrong with me. Please don't make me feel like that again.\" She hated that her voice wavered. She hated that she feared not the pain to come but the pleasure it would bring. Humiliation mixed with the potent arousal that had begun when he touched her, and multiplied when he bound her in place. She felt it like a burn in her body that was at once torturous and intoxicating.\n\n\"Oh no, sweet,\" his hand coming up to her cheek again. \"I intend to delve into the depths of your depravity.\"\n\nShe felt a sick feeling in her chest. This was not something she had considered when she had made this deal. She had thought he would take her, use her and she could hate him for it. She thought to suffer his attentions and impositions until he tired of her and left her soul rest. She hadn't considered this torture\u2014he would rip her open and leave the darkest parts of her exposed. She dug her nails into the palms of her hands to stave off tears that threatened to overwhelm her.\n\n\"Please,\" she managed to choke out, \"no.\"\n\n\"Yes,\" he said simply, pulling her chin so that she looked up into the deep pools of his eyes, which managed to appear blue even in the moonlit world of black and grey.\n\nShe clenched her jaw to keep from begging again. He was never going to give in. She tried to take a deep breath, hold herself together. Then he ruined it by bringing a soft black cloth over her eyes, blocking her vision entirely.\n\nAnna's breathing grew rapid and panicked again. He wasn't touching her, which made it even worse. She couldn't see what he was going to do to her, where he would touch her next. She struggled uselessly, unable to rationalize herself to stillness.\n\nThen his hand made contact with her stomach, moving upwards towards her breast. She tried to control herself but the blindfold made her anxiety spike, each contact he made with her body stoked the burning sensations inside her chest. He cupped her breast, moving lazily. His other hand came to her other breast, making her jump again at the surprise contact. She couldn't slow her heart or her breathing. She felt ready to climb out of her skin. But then something wet and warm descended on her nipple and she nearly cried out at the sensation. His mouth, she realized, enveloped the aching bud, sucking slightly and pulling on her nipple with his teeth. She gasped and writhed, arousal taking over where fear had been. She almost groaned when he withdrew his mouth, leaving the sensitive skin puckering in the chilled air.",
        "But then a sharp pain tore through the haze he had created. She cried out, in surprise as much as pain. It felt like something small and hard was crushing her nipple. She wanted to scream at him, to beg him to remove it but she held back. She knew he could sense it, that the pain was working its way deep inside her, fanning the flames that never should have been there in the first place. Why did this affect her so? She felt her core clench, her arousal cooling against her intimate flesh as it met the night air.\n\nHis mouth descended on her other nipple. She wished she could stop her body from responding, but it felt so good. The warm, soft, wet caress on one breast stood in clear contrast to the aching pain in the other. Another moan escaped her as the coiling pressure settled in her lower belly. His mouth disappeared and she braced herself uselessly. The pain shot through her again, this time straight between her legs. She felt the pressure rise, her body calling out for release.\n\nFor a moment she hung there, the pain in her breasts throbbing with her overly fast heartbeat. It seemed to pulse through her, straight to her core. Oh gods she wanted him to touch her, to fill this void she felt opening up between her legs. She felt perched on the edge of a cliff but he left her hanging there for a long moment.\n\nFingertips traced her inner thigh. She bit her lip to keep from calling out with relief. She needed him to touch her again, as he had before. He continued unhurried up to her core.\n\n<br> \"My, my,' he said as he stroked her lightly, too lightly. \"Aren't we a greedy little girl?\"\n\nPlease! She shouted in her head, knowing he could hear her. He just chuckled and withdrew his hand. She groaned in frustration.\n\nPain flared across one of her breasts coupled with a sharp slap. It happened again on the other before she could even understand what was hitting her. With the third strike she realized he was whipping her. The leather straps came down again on her breast and she whimpered. The pain wasn't terrible. In comparison with the whip he had used on her back this was barely a tickle. But her overly sensitive skin meant each strand left a fiery strip of skin beneath it. She tried to twist away, to stem the onslaught. He struck her almost gently, her breasts, stomach and sides kissed by the multi-stranded whip.\n\nJust as she felt she could handle the sensation, the straps came from below and slapped at the flesh between her legs. Then she did cry out, from surprise, pain and, gods help her, relief that something had finally made contact with her throbbing core. Again he hit her right breast, and then again between her legs. The straps struck the wet skin and it stung. She almost sobbed. Again her left breast, flicking the nipple clamp, making her moan. Again against the heated flesh of her core. He alternated, keeping her guessing where he would strike next, the soft leather meeting more and more sensitized skin every time. Finally it seemed like her entire body was calling out for release, for someone to release the pressure that had become unbearable. Anna thought she might go insane if he struck her again, or worse, if he didn't.\n\nThe flogger struck her hard between her legs, hitting her clit and making her shriek as the pain shot upwards. Twice more he hit her in that spot and she screamed her release. All the prickling and burning in her skin seemed to wash over her in a great wave, sucking her under as her body released the pressure into spiraling pleasure. His hand was between her legs, stroking her, driving the sensations further and harder. She thought he might be speaking to her but she could hear nothing as she began to feel lightheaded. A hand on her breast released whatever had been clamped onto her and she screamed again as pain blossomed through her orgasm. His mouth was back, soothing the tortured nub. His hand between her legs kept working and she thought she might die if he didn't let her be. Her peek went on, buoyed by the release of her other nipple and his soothing mouth. The pleasure became painful until finally his hand slowed and stopped.\n\nAnna was limp in her binds, her muscles watery and her head spinning. The blindfold was gone and so were her restraints. He caught her before she fell, holding her to his chest.\n\n\"That wasn't so bad, was it?\" he said, scooping her up off her unsteady feet. She looked up into his face, too caught in the afterglow to feel the usual self-loathing that came with finding a release at his hands. He looked back at her. She couldn't tell if he actually wanted a response but she had none to give. She closed her eyes and mumbled something, her brain jumbled from too many sensations. She heard him give a self-satisfied sigh before she felt squeezed by his magic and he was placing her back on her bedroll, somehow back in her discarded garments.\n\nThis time it took less than a moment to fall asleep.\n\n*\n\nAnna felt jolted awake. She looked around at the unfamiliar campsite feeling discombobulated and exhausted. Why was she awake? Her body felt sore and oversensitive. She was dressed again in her shirt and undergarments. She looked down her shirt at her breasts, which were still aching. The skin was normal but her nipples were a decidedly darker shade than they had been yesterday. Don't let Dev catch you staring down your shirt, she thought to herself, looking around for her missing companion.\n\nIt was then that her tired mind registered what had caused her to wake up so suddenly: the sounds of a fight not far off. Cursing as violently as she knew how, Anna stumbled to her feet. She grabbed her bow and quiver and was about to pull on her pants when a cry of pain cut through the trees. All thoughts of modesty forgotten, she ran in a mad dash towards the sounds.\n\nShe notched an arrow as she ran, praying she wouldn't be too late. Cruel laughter grew closer. Up ahead she could just make out a man laughing and raising his sword, below him Dev held up a bloody hand, as if that would ward off the blow. Anna raised her bow. The man's laugh was cut off by her arrow in his throat. She dashed towards Dev, emerging from the trees at his side, facing the nine remaining men, a second arrow notched and drawn.\n\nTheir laughter died as their companion fell and all eyes went to the girl standing before them in a man's shirt, her hair in wild curls and dark eyes flaming with anger.\n\nFor a moment, all was quiet. Then three of the men leapt towards her across their campsite. Three arrows found three targets, though with enough foresight to make them non-lethal. They each lay on the ground, howling in pain. The others started edging in, swords drawn and ready. Anna drew three more arrows, keeping two in her hand as she notched another. She could hit them all before they got to her but something made her pause. This didn't have to be so hard, and surely one of them would die from his wounds.\n\n\"Stop,\" she said, pulling the dark fire inside her to the surface and weaving into her word before it left her mouth. They all halted, compelled to stillness. Their faces were frozen but their eyes danced wildly. She felt a smug sense of success. She lowered her bow. Time to change the fates of others.\n\nShe approached the first man who looked at her stricken from his frozen face. She placed her hand on his cheek in a tender gesture. She used her sight to see his past deeds. \"You like stealing more than killing, skulking in the back while others do the dirty work and you get the first chance at ransacking the dead's belongings. From now on when you touch another's belongings in ill intent it will cause you pain. You will never be rich and you will live the rest of your life begging for the mercy of others as you so often ignored the pleas of those around you. When you sleep, it is all you will hear and you will wake knowing why you are condemned.\"\n\nWith that she bound the man to her curse and turned to his companions, she could feel them fighting against her magic, struggling to move. She simply clamped down on the threads of fire holding them in place. Anna set off again, cursing them each in turn, judging their deeds or inactions and finding appropriate sentences. She left her arrows in the men who had earned them.\n\nAs she reached the last man his eyes burned in hatred. His face had been the most cruel, the most menacing of the attackers. Her arrow still stuck out from his inner thigh, blood seeping from the wound. She crouched slowly so they were eye level. She didn't touch him as she had the others but looked into his eyes. She had barely begun, being overwhelmed at his crimes\u2014murder, rape, rampaging through children and the elderly with gleeful satisfaction. She looked at him in disgust.\n\n\"You are the hardest of all. I can't seem to think of a punishment that would answer your crimes.\" She looked directly into his furious eyes, reveling in his anger and powerlessness. \"You will never raise a hand against another in violence. You will be defenseless and impotent.\" She could almost feel the rage coming off of him. \"You will be compelled to tell the truth and when asked, you will confess your most hideous crimes to be dealt with as the local justice sees fit. You will have no haven, no safe place. All who see you will know what you are and all will despise you. And I will take your anger,\" his eyes softened even as she spoke, \"and replace it with the gnawing emptiness you left behind you.\"\n\nFeeling satisfied, she turned back to Dev, intending on helping him back to their camp. She was met instead with his wide, frightened eyes as he tried to crawl away from her. Her head started pounding from her new use of magic, making her short tempered with his discomfort. She approached him and knelt at his side. He raised his arms to shield his face as if she were going to curse him as well.\n\n\"What are you doing?\" she hissed at him, not wanting the frozen soldiers to hear her.\n\n\"Please,\" he whimpered.\n\n\"Please what?\" she snapped, her anger getting the better of her.\n\n\"Please don't hurt me,\" he said from behind his arms.\n\n\"Don't be an idiot.\" She had lost all patience with the boy's fear. She turned back to the soldiers. \"You have a day to remain like this. When you can move again your fates will be forever changed. You will never be able to speak of us or what happened here.\" With that she grabbed Dev's arm and lifted him onto her shoulders. He groaned in pain and fear as she bore him back to their campground.\n\nAnna dumped him unceremoniously on his bedroll when they reached it. He curled up around a wound on his side. He was pale with blood loss but still trembling in fear more than anything else.\n\nShe took a few moments on her side of the fire, putting on the clothing she had discarded in her haste. Her hands trembled with frustration at his reaction to her. Had she not taken him on when she didn't want to? Had she not promised to help him avenge his family as well? Some part of her understood his fear at her unprecedented display of magic. He had thought himself rather worldly from his travels but he had never seen anything like her. At the same time, she couldn't help feeling hurt at his fear and mistrust. She steadied her breath and noticed her hands were still shaking.\n\nShe turned back to Dev, whose eyes were now closed, his hands red with the blood from his wound. She cursed again and knelt at his side. She hadn't noticed how badly he'd been injured. She put her hands over his chest and reached into his body, feeling the extent of the damage. She could heal him but it would deplete her completely. She would be dependent on him to move them today. This brought her pause. Could she trust him? Should she? He thought she was some kind of monster now. She couldn't be sure he would help her anymore.\n\nBandage him and leave him, a voice inside her head said, he won't help you now that he knows what you are. But something deeper held her there. Anna didn't want to be alone. Dev seemed to be her connection with people. Though he was bent on the same path of revenge that she was, he also grounded her firmly in the world around them, keeping her from getting lost in her own head. How could she run now when she finally had the ability to save him?\n\n\"Dev,\" she took his face in her hands. \"Dev!\" she said louder when he didn't respond. She shook him. His eyes snapped open. He focused on her face; the look he gave her went from relief to fear under her watchful gaze. \"You are badly hurt. I can heal you but it will drain me completely.\" His eyes rolled closed, she shook him back to wakefulness. \"You need to promise me that you will get us both out of here when I am done.\" He kept looking at her like he didn't quite trust her. \"Please, Dev,\" her tone changed from her usual hard edge to something one might almost describe as pleading. \"Promise me, so I can heal you.\"\n\nDev looked at her again, searching silently. He licked his dry lips, as if trying to say something but he gave up. He simply nodded his head. That would have to be good enough.\n\nAnna placed both of her hands over his chest and drew on the black magic inside her. She pulled it through her hands and forced it into his body, willing it to heal his wounds and restore his strength. At first it happened slowly, but as she sat there the fire rapidly began to spread through him, licking his wounds till they closed, flooding his veins and bringing his mind back to full wakefulness.\n\nAnna felt herself growing constantly weaker as he grew stronger. By the time she had finished, the world was swimming and blackness was edging in on her vision. Finally she broke the connection with a gasp and sat back from him. Dev sat up, eyes level with hers, no longer pale and weak. She attempted a small smile but what she saw was not the face of a grateful friend, rather the look of someone whose fear was rapidly becoming a much uglier emotion.\n\n\"Who are you?\" his voice was harsher than she'd ever heard it.\n\n\"I'm Anna,\" she said, her head starting to pound so loudly she was having trouble hearing.\n\nDev stood up and began to back away from her. Anna couldn't even find the strength to pick her head up to look at him. \"Dev, don't,\" she started but the darkness closed in, the pounding got too loud. She felt her arms give out beneath her and the forest floor met her face. You idiot, the voice said as she faded away.\n\n***\n\nThank you to all my amazing readers! I honestly couldn't do this without you :) "
    ],
    "authorname": "AmoryParks",
    "tags": [
        "leonid",
        "anna",
        "punishment",
        "binding",
        "flogger",
        "whip",
        "clamps",
        "magic",
        "soldier",
        "revenge"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/a-tale-of-revenge-ch-04"
}