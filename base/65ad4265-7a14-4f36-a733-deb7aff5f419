{
    "title": "A Matter of Blood Pt. 07",
    "pages": [
        "==============================================\n\nCHAPTER NINETEEN\n\n==============================================\n\n2 Months Later - Early Spring. \n\nWe'd marched down to Argyve, a city located on the east coast roughly halfway between Jorvik and Sondres. Besides being by the sea it was close to an easily navigable pass that was due to open any day now. We'd be marching soon, to finish this wasteful war. Everyone was confident that it would be over by summer.\n\nEveryone but me.\n\nI had become, much to my chagrin, a great deal like my father in one particular way. I was eager to march and I was a tyrannical jackass to anyone who stood in the way of my goal. I didn't have anyone killed, like my ancestors would have, or beaten, like my father would have, but I did shout a lot and probably made some new officers cry a bit. \n\nMy sisters and mother did their best to distract and soothe me, for the benefit of all involved. This mainly involved a great deal of sex and some excursions away from the camp. Adewyn, however, wouldn't take my shit at all, and called me out frequently, which was part of why I loved her. She was set to give birth nearly any day. We were camped outside of the city but she was in much more comfortable quarters in the Mayor's palace. \n\nTruthfully, half of my anger and frustration stemmed from having to be in the camp rather than be with her. There were many strange and dangerous aspects to Pureblood pregnancy, and the women kept nearly all of them secret. I was afflicted with all manner of nightmares of what could go wrong. The only thing that I knew for certain was that in our case the child had grown faster than normal, which would probably lead to it being born a little earlier than eight months rather than nine. This was alarming to me but Adewyn was fairly relaxed about it, and insisted this was common and healthy. The child was supported not only by the food that Adewyn ate but by the natural magic channeled into to it by its parents.\n\n\"They're just a little impatient to leave and see the world,\" is all my mother would say. As the eldest Pureblood woman here, she was in charge of any proceedings surrounding the birth.\n\nIn any case, I had standing orders to send for me as soon as she went into labor. The camp could cope without me for a few days at least, especially now that I had Merwyd to appoint to matters of administration. \n\nIt was early in the evening, and I was considering riding out the next day with my scouts, just to get out of the bloody camp. So, while I was worried at first when the messenger arrived with a request from Adewyn to see me, I welcomed the chance to visit with her. She had been less than welcoming lately, not precisely rude, but rather heavily intimating that it was not the Proper Time for her husband to see her. I believed it related to whatever rituals or preparations the women had been enacting. Had we been home in Marche Grodayne, they would have gone deep beneath the castle to the woman's sanctuary and she would not have returned for several days.\n\nI entered her rooms at the Mayor's Palace, concerned but not in a rush. She was laying on her bed, reading, in a simple chemise. Gods she was beautiful. Her belly was undeniably large, her breasts swollen for the child. Her face was flushed and she sat up with some difficulty, smiling widely at me.\n\n\"Is everything all right?\" I asked.\n\n\"It's...it's all fine, Finn. I'm sorry.\"\n\n\"For what?\"\n\n\"For not seeing you and then calling you out here when you must be tired already. I've missed you so much. You have no idea how many times I've wanted to tell your mother or Raisa or Merwyd to just fuck off and bring you to me so you could hold me. It's astonishing how much I've come to rely on you.\"\n\nI smiled widely. It was uncommon for Adewyn to state her affections, no matter how deeply she felt them.\n\n\"Then no apologies are needed. I wanted to see you, just for a while, just to be sure you were fine. I'm having difficulty without you to argue with me and force me to think properly. And, of course, I feel a rather deep ache in my heart for you. Your sisters are rather tired of hearing me pine for you, I must confess.\"\n\nShe laughed and blushed a little.\n\n\"And...do you miss anything else about me?\"\n\nI liked where this was going, but I didn't want to get my hopes up.\n\n\"I miss your mouth, your fine breasts, your firm ass and, naturally, your quim that has never stopped being tight and perfect.\"\n\nShe smiled.\n\n\"Good. Because I need that amazing cock in me tonight.\"\n\nI contained my excitement.\n\n\"Um. I want to, but is it all right for the baby?\"\n\nAdewyn laughed loudly.\n\n\"Never would I have thought that I'd see the day where Finn the quim-hound refuses his sister's pussy! Well, I understand it comes from your love for me and for our child, so I'll try not to be too hurt. Yes, its fine. Better than fine. The priestesses agreed that I should have at least one more fill of your seed, for the health of our baby.\"\n\n\"At least?\" I said, hopefully.\n\nShe laughed again.\n\n\"Just get over here and fuck me, little brother.\"\n\nI was a good soldier and intended to follow my orders to the letter. I took my shirt off and she made a little noise in her throat as I pulled my breaches off and my cock popped into sight. \n\n\"Been a little too long?\"\n\nI intended it as a tease but she just looked at me and bit her lip, then nodded. She looked so serious. I went to her and leaned over her and kissed her full on her lips. She put her arms around my neck and gave me a hell of a response, darting her tongue in my mouth. I put my hands on her breasts, large and full. I was gentle because I knew that they were sensitive. I pinched her nipples and she made a very loud moan into my mouth. I felt a little wetness and pulled my hand back, instinctively.\n\n\"Hey, that felt good,\" Adewyn said, pouting.\n\n\"Sorry, I just didn't expect that,\" I said, laughing a little.\n\n\"Well, expect it! It's your damn baby, it's making me do all kinds of things! Apparently now I produce milk when I really need intimacy from my lover...\"\n\nShe looked actually sad. This wasn't the way things normally went, but she was right, things weren't normal for her, and I could take at least half that blame.\n\n\"Hey. It's all right, I'm love you completely as you are now. Let's get your shift off so I can see you properly...\"\n\n\"No!\" she said, almost shouting, then more relaxed, \"No, I'd like to keep it on, if that's all right. You can touch me anywhere you like. It's just...oh god this is embarrassing.\"\n\n\"You don't need to explain anything. We'll do things the way you need, all right?\"\n\nShe smiled at me, this time, more relaxed.\n\n\"Would you be all right with taking me from behind?\" She said, getting on her hands and knees. I positioned some pillows beneath her large belly. \n\n\"Hmm,\" she said, \"someone has been paying attention,\" she said appreciatively. Then she lifted her shift just far enough for me to have access to her sex and I lost capacity for speech for a moment.\n\nAdewyn didn't look that different, mind you. Her belly was visible, and it was big and rather tight looking, as expected. It provoked feelings that were both warm and sexual in nature. Her ass was larger, not too much so, and I could still make out her musculature, as she was in excellent shape. And then there was her lovely pussy, which I hadn't seen in a while.\n\n\"Is...is everything all right?\" Adewyn asked. She sounded very unsure, as though she thought I would find her repulsive.\n\nI answered by cupping her sex with my hand, gently touching her clitoris. She gasped.\n\n\"Oh fuck, Finn. Fuck. That feels good. I'm not...oh fuck...\"\n\n\"Everything seems lovely back here to me, dear sister,\" I said softly, \"would you like me to taste you?\"\n\n\"No. Oh god. I love that but I need your cock. I need your seed. I can't even explain it. Just being near you while you're hard is...oh fuck it's making me like a heartsick teenager. I'm so afraid you'll change your mind or...oh fuuuuuccckk...\"\n\nAs she spoke, I lined my cock up with her sex and slowly slid into her. I thought that might be the best way to reassure her that I was very, very excited and willing to be with her like this. It felt...different, but so fucking good, so right.\n\n\"Finn, oh god...its too...oh\"\n\nI took her words as encouragement and began to stroke slowly and fully. I went deep but gentle, and I reached around and held her hips at first, and then her belly. She moaned at my touch, as if her whole body was now sensitive. For all of my reputation I'd certainly never made love to a woman this heavily pregnant, and obviously not one carrying my own child. I was incredibly aroused, but also felt that this was sacred, somehow. I picked up my pace, and went a little deeper. She moaned, oh gods did she moan. It was different from it had been, hungrier, needier, a little more desperate.\n\nI increased in tempo and began to stroke her back and squeeze her ass a bit. She seemed to love this reminder that her brother truly enjoyed her body, and pushed back against me.\n\n\"Finn...I...oh gods not now...\"\n\nThen she made a different kind of noise, not one of pleasure, but of discomfort. It was a yelp, and it was sudden and loud, and I was terrified. I knew about magic. I knew about my sisters. And I certainly knew about fucking, but I knew very little about pregnant women and babies.\n\n\"Oh god, did I hurt you?\"\n\nShe rolled over on to her side and looked at me, her eyes sad and teary.\n\n\"A little? No. It was just, really uncomfortable and my arms are tired and it was too deep. You didn't do anything wrong! The baby's fine. It's just me...your useless fucking sister who brings you out then teases you then makes you stop when you start to feel good. Goddammit.\"\n\n\"Hey,\" I said moving next to her, my cock, for once, forgotten, \"it's all right. I'm not mad and I'm fine. You think I'm going to be upset at you because you have problems fucking me? When you're this close you having my baby? No, Adewyn. I love you and I'm glad to be here.\"\n\nI stroked her hair and just looked at her. She was so beautiful in that moment.\n\n\"Why are you so good to me? I'm so fucking angry and difficult. And you just take care of me and put up with my bullshit. I feel so safe with you, Finn. I'm sorry. Will you hold me for a while?\"\n\n\"Of course.\"\n\nI got behind her, spooning her. I brought the blankets over both of us, and cuddled up to her, rubbing her belly gently, in what I hoped was reassuring. If this was all I could do to help, then this is what I could do. My hard cock would just have to suffer. \n\nWe drifted off together, her making little noises occasionally and twitching her legs. I remembered a common incident when we were both children. I would wake up after a nightmare, scared, and go to her room and cuddle up to her like this and she would protect me. It was, of course, chaste, and simple comfort. She never once complained, or got angry. She held me sometimes too. She never told me to stop coming either. I did stop, after a few years.\n\nMuch later, about a week after I had turned eighteen, I woke up in the middle of the night to someone entering my bed. It was Adewyn. She was dressed in a shirt and breeches as she typically liked to sleep in, and looked scared. Perhaps she had been crying, it was hard to tell in the dark. I think she wanted to get into bed with me without me waking, the way I used to with her years before. I don't know why she came to me. I had always assumed she had been much closer to Tyr. Certainly they had been sleeping together by that point. \n\nI had done what she had done for me all those years. I just raised the blanket up so she could get under with me. I pulled her tightly to me, tried to ignore my erection, and held her. She cried a little, then fell asleep. She was gone in the morning and I never found out why she had been there. I think that was when I realized that we had something special between us. A trust maybe? A connection that didn't require words? I'm not a bard. I have no words for it.\n\nUnlike that evening, I woke up to Adewyn's pregnant form grinding back against me. Her ass, still firm but soft, rubbing on my cock in a lovely way. She had managed to perfectly line up her crack with my cock and I was already hard and sliding up and down, thrusting naturally in response. I assumed she was doing it in her sleep. I nudged her gently.\n\n\"Adewyn...I think you're...\" I groaned, unable to speak for a moment, realizing that the shift was no longer covering her and it was her naked skin rubbing against my needy cock.\n\n\"I know what I'm doing, Finn. I...I need you. Can you fuck me like this? Please?\"\n\nHer voice was small. Almost ashamed at having woken me. I adjusted myself, lining up my cock with her slit. I wouldn't be able to get very deep, but that was probably a good thing in her present condition.\n\n\"I'm going to be gentle, all right? Tell me to stop if you need to.\"\n\n\"I know, love. I'm yours. All right? I know...I know I've said it before but...yours is the only cock I want inside me. I love that you've filled me with a child, and I want you, right now.\"\n\nI pushed inside her, slowly. Holy fuck it felt good. It was different, yet again, requiring very little effort on my part and none on hers, really. Normally she wouldn't have been game for that but tonight it was perfect. I began to move, in and out, reaching around and stroking her belly, then playing with her breasts and nipples. This time the wetness aroused me somehow, making me even more aware of my gorgeous older sister's fertility. I began to kiss her on her neck and whisper into her ear.\n\n\"Do you know how beautiful you are to me now? Do you know what seeing you like this, so full and yet so ready for me does to me?\"\n\n\"Finn...\"\n\n\"It makes me fucking wild inside. I've needed to be inside you so badly for weeks now. Your body is a temple that has been closed to me, and I cannot stand it.\"\n\n\"Oh, fuck, Finn, I'm cumming...\"\n\nAnd she did, quivering and shaking, but not heavily so, her moans and breathing intensified. If anything it lasted a long time, so long she was having trouble getting enough air. Once she was done, she relaxed again, and let me fuck her.\n\n\"Finn, this is so nice, so right. Oh...oh...I can't believe how much I love you right now. I was worried I...oh fuck...might resent you for making me this way, but I don't. If you told me to have ten children I'd do it. I'd...I'd do anything for the father of my child...\"\n\nThis was far beyond anything that Adewyn had ever said to me. She was devoted to me and I knew it. I understood how she expressed it differently from my sisters or mother. I never expected her to be vocal about it. Finally I understood a deeper truth about her. This is what she needed and wanted. Yes, she was a warrior at heart, and fierce, but she loved me and needed me as much as I did her. She was truly a traditional Pureblood sister-wife, and was happier in that role than either Raisa or Merwyd would be.\n\nFrom this point onward, in fact, although she never said it, she would refuse to be very far from me at any time, unless absolutely necessary. She'd always kept me in line but now she would be the guardian of our family's tradition. And she'd never stop being almost painfully fuckable.\n\nI found myself going faster, realizing that my own need for her was overpowering me, although I kept it gentle, and shallow.\n\n\"Oh fuck, Adewyn. I'm going to cum, baby. You're so fucking beautiful like this...I can't hold out much longer.\"\n\n\"Finn...oh god, yes. Cum, baby. Fill me. I'm still yours. Oh fuck, fill me...ohhhhhh\"\n\nI came first, for the first time in years. I'd have felt very bad if she hadn't cum as well as my seed filled her. Again she didn't move much, and at first I only felt it in the way her quim gripped me and milked me, drawing all of my seed out of me. I kept thrusting, more and more coming out of me as her body shook, almost violently, and I heard her moans get louder and more intense. As I had begun to notice more and more recently, I felt the raw, primal magic of life pass from me to her. Was I helping her support our child with my masculine energy?\n\nWhen I was done, Adewyn gave a deep, contented sigh.\n\n\"That was so...so nice, Finn. So good.\"\n\nShe leaned back into me, pulling my arm around her and between her breasts, and I realized that she had fallen asleep, her need sated, with me still inside her. I felt great love for her in that moment, and fear at how important she and our unborn child both were to me. Not for the first or the last time did I feel the weight of the responsibility of fatherhood, but each time that I did, I welcomed it further. Gods, Adewyn was making a responsible man out of me. \n\nLater, she woke up and we repeated the performance, this time, I held out so that she came first. She still sighed deeply when I came. She was very tired and sleepy at the end, and that must have been why she said what she did, for it didn't make any sense to me at the time.\n\n\"Finn. I'll tell you...don't worry...I love...\"\n\n* * *\n\nIt was a day or two after the message from Adewyn, it was fear and anticipation that I felt when I saw Raisa appear at my tent in the very early hours of the morning. I was with Merwyd that night and Gwyn was with Bartles who had been drafted as our war-nanny. I looked up at Raisa while my bedmate, Merwyd, stretched lazily, like a cat.\n\n\"Adewyn isn't giving birth yet. This isn't about her,\" Raisa said, and then looked meaningfully at Merwyd.\n\nI was annoyed at first but bit back my comment. Raisa's face was solemn, revealing nothing. Merwyd wasn't shocked at her presence, as if she had anticipated this in some way. She simply put on a robe and went outside, touching Raisa on her shoulder in a reassuring way as she went. \n\n\"Is there some secret that I'm not privy to?\" I said, perhaps coming off more harshly than I intended.\n\n\"Yes,\" Raisa answered, rather defiantly, \"but I wasn't privy to it until a few days ago myself and making you wait a little more because I had to confirm my fears didn't hurt you any, you jackass.\"\n\nWell, that was new. Raisa was typically deferential to me and overly apologetic. I did the smart thing for once and decided to be a good husband.\n\n\"I'm sorry. Whatever it is must be important. We'll figure it out,\" I said, patting the spot beside me on the bed. \n\nShe smiled a bit, finally, then sat next to me and leaned into me as she used to. I put my arm around her and waited, giving her time. I was glad that I wasn't more demanding of her when she finally got around to saying something.\n\n\"I'm pregnant,\" she started, which filled me with a measure of joy, but I withheld it, knowing that there must be a catch, \"and I've been so for at least three months. Do you remember what happened in that time?\"\n\n\"Well, we won the last battle, your sister returned, and...oh gods,\" I said, finally understanding.\n\n\"I pushed you out of the way of that lightning, and you healed me right there, saving my life. I don't regret the former and I appreciate the latter very much, so don't feel guilty, please. But the baby...the baby was washed in greater magic.\"\n\nHer face clouded a bit, and I kissed her. She went on.\n\n\"The baby...once I learned I was with child, I went to a priestess of the goddess. She couldn't divine the child. I was terrified that it was dead already. After all that time trying to be a mother with you...but she soothed my fear and told me to come back again. I went back, yesterday.\"\n\n\"I would have gone with you, had you asked,\" I said, unable to hold my tongue any longer.\n\nRaisa smiled warmly and touched my face.\n\n\"I know, love, but two nervous wrecks would have been no better than one. I decided to wait and see. The priestess could divine the child today. It is alive, and as far as she can tell, healthy. It...its also a Weirdling.\"",
        "\"Oh,\" I said, and then with a lack of thought that I am famous for, \"is that all?\"\n\nRaisa stood up and looked down at me, her anger flashing in her beautiful eyes.\n\n\"What in the hells do you mean, 'Is that all?' Did you not hear what I said? The child is a Weirdling. Not a Pureblood!\"\n\n\"Yes, I heard you. Did you truly think that I wouldn't love our child because of that?\"\n\n\"Well, no, but...I know how our family deals with this kind of thing. They give the baby away to some gods forsaken temple. Or leave it out on a rock somewhere to die. Or...\"\n\nI laughed. It was not tactful and I feel very bad about it now, but I couldn't help it. Raisa hit my arm and I saw that she was about to launch on a tirade that would make Adewyn proud.\n\n\"Wait! Peace, wife!\" I said desperately, and she stopped and looked at me, suspicious but patient, \"I do not laugh at you or the idea of hurting our child. But we won't hurt this child, or send it away, or...well anything we're rumored to do. Those stories are just stories, at least in our family.\"\n\n\"Really?\" Raisa said, with great skepticism. Our family was infamously cruel, even for Purebloods. Impaling had at one time been the common punishment for poaching.\n\n\"Yes, really. You can't have a Pureblood family without Weirdlings. And Purebloods breed true with them, so getting rid of them would be foolish, even for ruthless types like father.\"\n\nIt was true. Weirdlings were called such because of their rather strange appearance and extremely varied natural abilities, which often manifested completely out of their control. They were rare enough to have all manner of stories told about them. Some were even true. Your 'typical' Weirdling had hair of an unnatural color. Not even white like a Pureblood, or deep forest green like some Wyldbloods, but sky blues and bright greens and even royal purple. And their eyes were, without exception, entirely black, which everyone quite unfairly assumed made them sinister. Some were sinister of course, but that was by choice, not inclination. Their power would not, typically, be the same as a Pureblood, but they could still learn magic nearly as effectively. It was simply the social stigma of acknowledging them that was the issue.\n\nI could see that Raisa still wasn't convinced, so I went on.\n\n\"You never met her, but grandmother was a Weirdling. She wore wigs and cloaks and such and used enchantments to hide her eyes, but around her rooms she went about naturally. She married and obviously had Pureblood children. She could also quite naturally float a bit and make people temporarily forget huge swathes of memory if she desired. She was great fun at gatherings. You can ask my mother if you don't believe me.\"\n\nRaisa laughed now, and I joined her. This was truly joyous news. If the child had survived being struck by lightning and the kind of reckless healing that I had done, then they would surely be strong. The abilities could be trying at times, especially during childhood, but it didn't matter. I was going to be a father, yet again, and Raisa would finally have the child she so desperately wanted. Our child.\n\n\"Good. Well, I'm glad that's settled,\" Raisa said, visibly more relaxed, her small hand unconsciously resting protectively over her belly, \"Now, when are you going to marry Merwyd?\"\n\nThis was the very favorite topic of every woman in my family except Merwyd, although I cannot imagine she was unaware of the pressure the others were putting on me. I had yet to marry her, even in an informal manner as when I'd given the rings to Raisa and Adewyn. I went to the high priest of the Temple of the Law and had both of those confirmed, and it turned out that the marriage was legal and with full rights as soon as rings were placed on fingers. They were witnesses for each other, and they both agreed that Raisa had been selected as First Wife. So, if anything happened to me, there would be established regency and succession.\n\nThat being said, they all wondered when I would make Merwyd my third wife. I gave Raisa the same answer I always did.\n\n\"When the time is right, and that time is none of your business.\"\n\nShe then gave the same response that I always got.\n\n\"She's my sister, so it's my business.\"\n\nBut she was smiling. It was one part ritual, one part joke, and one part deadly serious reminder that sisters took care of one another and I best move quickly if I wanted to keep getting laid on the regular. But it wasn't the right time. Not yet. \n\nOne might wonder how I could one the one hand say that I trusted and loved her but on the other refuse to marry her. For her part, Merwyd didn't complain or even bring it up. She understood I think. I was to be king and I had killed my brother, without remorse or forgiveness, and then taken his First straight to my bed. Marriage after this required a mourning period, and, preferably, some kind of formal religious declaration of expiation. The same priest who confirmed my other two marriages told me that king or no king, no such declaration would be forthcoming, at least until the high rites of summer. This was, he assured me, the appropriate amount of time, after which any good Pureblood would be expected to get back to breeding. \n\nHe was, however, generally agreeable. I took care of two other legal matters of some importance. One, I adopted Gwyn, which everyone more or less agreed was a good idea, as it gave her a home, security, and made it much harder for anyone to use her as a pawn in a game of succession. Two, and known only to myself and her, I married my mother. That raised his eyebrows a bit but he acquiesced when I told him that there was every chance that she might bear my child in the future, and we didn't want any royal bastards running about, did we?\n\nYes I know its quite unusual, which is why I kept it secret. It was a bare minimum of legal protection for her, in case things went very badly and she had to escape to another land. It also gave her the right to sit as regent, if needed. Or any child of hers by me be eligible for the throne. I'd been doing a lot of thinking about the worst-case scenario lately.\n\nNow to ensure that it didn't come to pass.\n\n* * *\n\nWhen I was woken up the following night at around the same time, I was ready to tall whoever it was where they could go and how fast. That was until I heard Raisa as she rather rudely poked me in the side. A messenger was standing just inside the tent, looking uncomfortable. I'd apparently slept through his arrival.\n\n\"She's having the baby! Get up!\"\n\nI got up, fell over, tangled in sheets, pulled on a shirt, ran outside into the night. I realized that I'd forgotten my boots, turned around, and Raisa handed them to me with an indulgent smile, a sheet wrapped around her lovely shoulders. I put them on and jumped on the horse, no cloak in the chill early morning. I cursed myself for not thinking to leave Caliban with Adewyn and just having her draw me to her. I wondered idly if she could do that over such a distance. I'd have to ask her for future reference. I was quite actively distracting myself with pointless thoughts because my horse could only gallop so fast.\n\n\"Dammit they'll have their first birthday by the time we get there!\" I yelled at my steed.\n\nWulf simply whickered and kept up the very fast but safe speed. He was a good horse for me, because he knew when to ignore me for my own good. I stopped swearing at him and promised him fine oats later for the midnight ride. It wasn't his fault his rider was a jackass. I rode into the city, the guards opening the gates for me, well in advance of my arrival. I'd have to send them something too. Whiskey maybe. Northerners did like their whiskey.\n\nAfter about a hundred years we arrived in front of the mayoral palace. I was ushered into the foyer and up the stairs to the rooms where Adewyn was staying.\n\nMerwyd was there already, reading, and Gwyn lay sleeping on a couch nearby. I saw the closed door on the other side of the room open and my mother exited. I started to head towards the door and she held out her hand, palm towards me. Despite me being far larger than her, she didn't move and simply narrowed her eyes at my grunt of annoyance.\n\n\"No, Finn. This place isn't for you. You are here for when things are done.\"\n\n\"But I'm right here! She's only fifteen paces that way! I was there not two nights ago!\" I said, nearly shouting. I probably sounded like an idiot for trying to oppose almost a thousand years of tradition. I started to move around her. She grabbed my arm. \n\n\"Don't make us have you removed, son.\"\n\nI laughed. Mother did not. I looked at the guards who had followed me in. They looked uncomfortable with the situation, but I considered whether they would listen to me or my mother when it came down to it. I considered whether anyone besides myself would be foolish enough go against Pureblood women when a child was on the way. I stood down, admitting defeat, and put my hands behind my head, letting my anxiety manifest as something other than anger.\n\n\"Dammit, I should have just waited for Raisa,\" I said, feeling particularly stupid.\n\n\"Nonsense,\" Merwyd said, finally, \"Raisa knew you would be this way and she'll be along soon. I just stayed here since we knew that Adewyn's time was approaching. And she may need more than one of us. In any case, Finn, Adewyn doubtless heard you. She'd be mad at you if you barged in there against her wishes, but knowing you are here will be a comfort to her.\"\n\nI sighed and sat down next to Gwyn. This was the Merwyd I was more used to. Logical and sensible and a good counter to my emotional ways. Mother looked at me as though she didn't quite trust me to behave, but I had made up my mind. If I wasn't half-asleep I would never have tried to go in. \n\nI had accidentally woken Gwyn with my antics, and she sat up and looked at me with pity. \n\n\"Do you want me to tell Auntie Adewyn anything for you?\" she asked.\n\n\"If you would tell her that I love her and am thinking of her, I'd very much appreciate it.\"\n\nGwyn nodded, then went into Adewyn's room. No one tried to stop her.\n\n\"Is it all right for her to go in there alone?\" I asked.\n\n\"Of course,\" Merwyd said, \"She can help, too.\" \n\nMother and her shared a small secret smile before Merwyd returned to her book. \n\n\"Your father never would have tried something like that,\" mother said, but then surprisingly she favored me with a smile, \"but then he never would have shown that much concern for his women, either. Adewyn is going to pay back your devotion with interest.\"\n\n\"She's done more than enough. All of you have.\"\n\nSo we waited. I heard Adewyn cry out once, then again. Gwyn came out of the room but didn't look particularly upset. Mother and Merwyd went in. The cries increased in volume and intensity. It occurred to me that while I had happened to be around to hear babies being born in inns and temples, I'd never been anywhere near a Pureblood birth. \n\nAdewyn's cries were much sharper than I would have expected. I didn't realize that I was tapping my knee nervously until Raisa took my hand. I hadn't noticed her enter. She had sat next to me, on the other side of Gwyn who had dozed off leaning against me.\n\n\"Don't you need to go in?\"\n\n\"They'll call me if I'm needed. They have a priestess in there too. It will be all right.\"\n\nI sighed. Adewyn screamed. It wasn't like the noises I'd heard women make before in the pains of birth. It was a lot closer to the enraged cries of a wounded berserker on the battlefield. I looked at Raisa, but she remained utterly calm. \n\nAdewyn cried out once more, much more softly. I wondered if it was over. Then the floor shock and the doors creaked from a hidden force as bright light flashed from underneath them. The air was thick and sticky with magic. Then silence.\n\nI blinked in surprise but Raisa stood up, calmly.\n\n\"Come on,\" she said, \"it's time to meet your child.\"\n\n* * *\n\nAdewyn looked flushed and more alive than I'd ever seen her. She also looked less tired than I expected, though that might just be because she was generally in excellent condition. She was holding a swaddled bundle with a tiny pink form inside of it. I felt the great responsibility of this new life settle on me, but it wasn't unwelcome. Rather, it aligned with my very being, provided context for who I was and who I had grown to be. \n\n\"What shall we name him?\" Adewyn asked.\n\n\"I like your original suggestion for a boy,\" I told her.\n\n\"Really? You didn't like it before.\"\n\n\"Well. I have a better understanding of father now. His name should be remembered.\"\n\nAdewyn smiled.\n\n\"Good. His name is Artan.\"\n\nI reached out and she reluctantly let me hold him, clearly unwilling to be separated despite her trust for me. \n\n\"Don't worry, I'm not taking him out of the room. We can't do the rites for him properly until we're have a men's sanctuary to work with.\"\n\nI beamed down at him as he looked up at me, quiet and thoughtful despite having undergone this trial with his mother. I felt resolution to be a good father, a present one, better than my own. It was a truly good day.\n\n==============================================\n\nCHAPTER TWENTY\n\n==============================================\n\nThe day started well enough. I woke up and signed some papers in the headquarters while I read reports. Gwyn came in and we drank tea while she told me about her new tutors and the new magic she could do. Her power was far from being unlocked, but her natural control was truly prodigious. She typically called me Finn, as her mother did, and we did not stand much on ceremony.\n\nShe was very young, but intelligent enough that she would soon understand that I had killed her father. What impact that would have on her was anyone's guess. He had never been doting and often been cruel, but as I could attest, children are often irrationally attached to such men. That was for the future. In the now, she accepted me as a new friend, and that was good enough.\n\nAdewyn insisted on working as soon as possible, although she didn't like constantly fobbing young Artan off onto wet-nurses and nannies, so he was often near by. She did her best to keep up with all the news and needs of the army, and even started to go out and drill them a few times a week. The troops started calling her the Ice Dragon again, and this secretly pleased her. She had all the signs of being an excellent Pureblood mother. I spent far more time than I expected simply holding the boy and speaking or reading to him, or bringing him to Adewyn for feeding at night. I was told over and over that a king wasn't supposed to do such things. I reminded people that a king who did what he wished was the most powerful sort of king, and also that we used to hang people here for backtalk. \n\nRaisa was barely starting to show, and chafed at being unable to be my bodyguard any more. She was now relegated to duties that exposed her to a minimum of danger. She still worked as my spymaster, a role that was becoming more important by the day. And, if anything, she shared my bed with more frequency as her libido picked up. There are few things more beautiful in their desire and demanding in their need than a pregnant Pureblood woman.\n\nMerwyd was being the dutiful and penitent sister, by which I mean she was distributing alms in cities and villages all over the north, while being seen to attend services at many temples. This would, the high priest of the Temple of Law assured me, show that she would be a worthy wife for a new king. It also gave her something of a vacation and a chance to consider her own future. There was a part of me that worried that I was forcing her into new marriage straight from a bad one. She insisted this was untrue, but time to reflect was probably wise. For her part I knew that she was afraid that I was sending her away, even though I assured her that I was not. Ideally, I would have made the trip with her. The fact that she left Gwyn in my care after so many years of her being used as leverage against was a testament to her trust.\n\nIronically, mother was, that very day, to begin a trip to the continent. She knew many ancient families there, and not just Purebloods. She would set forth her case for King Finn and try and get their support, not in coin or men, but in acceptance of my claim. And not incidentally lobby to keep them from deciding to attack us while we were weak. She had been meeting with Adewyn to plan strategies and so she could say goodbye to her grandson before she left.\n\nDespite what happened, I am daily grateful. I am grateful because Merwyd was away, Raisa was well outside the camp in a small manor house designated for her use, and Gwyn was sitting in the headquarters tent with me a significant distance away. She was just explaining to me the mechanics of conjuring a small ice spirit when the scream rang out. It was a man's scream, and not simply of pain. There was deep and dire fear in it. Without thought I called Caliban to me. She formed in my hand. I was prepared to run out to whatever awaited me when I remembered Gwyn. She looked up at me, sitting across from me in a tiny chair, confused and afraid.\n\n\"Gwyn, I have to go help. Do you remember Caliban?\"\n\nShe nodded, looking wide eyed at the spear. \n\n\"Good, because she's going to stay and protect you. She'll stay next to you and speak with you, and if you let her, she can use your magic to help. Do you understand?\"\n\nGwyn nodded again. I'm sure it was very confusing but she did understand some things quite well. And I could see that she was excited to get to play with a new toy. Caliban expressed a degree of trepidation and disinterest in her new task, she was not the sort to settle down and care for a child, but I imparted upon her my feeling of protectiveness towards Gwyn. Caliban floated over, and I could see she was establishing contact with the girl by the way her face lit up. \n\nThere were more screams outside. At least Gwyn would be protected. I ran out into the new world of madness that confronted us all.\n\n* * *\n\nAs I was not there to see it start, I'm going to describe things as my sister-wife Adewyn saw them. She was there from the beginning to the end, and later would insist on me knowing everything that happened. I believe she expected me to pass judgement on her. The only thing I could say for sure was that I would have done no better, and perhaps worse.\n\nAdewyn insisted on returning to the camp two weeks after giving birth. The priestess assured me that she would be fine for work as long as I minded my place and didn't try to fuck her for two months. As if I would be the one initiating sex. In any case we found a larger tent and put it right outside of mine. Someone even found a sort of collapsible basinet for Artan to use. It was quite homey. \n\nAdewyn was speaking outside to Kyrza, who by now was a General in her own right, trusted with all of our cavalry. Mother was inside, playing and talking to Artan, who had taken a liking to her already. Kyrza looked up, and shouted: \"What the fucking hell is that?\"\n\nIt was an appropriate question. It flew but it was most definitely neither bird nor wyvern. Whatever it was, had arms and legs, but they were greatly elongated, as were its hands and feet. It had a torso, but it too was distended and stretched in strange ways. And its head, oblong and searching, was too large for its frame. It's huge wings combined aspects of both a bat and an insect. In the light of the sun not much else could be made out save that its black skin shone like the carapace of a beetle.\n\nAdewyn, thinking fast, threw a gout of fire at it. It ignored it, letting it wash over its glossy, unnatural skin, and as if responding to her worst fears, it headed directly for the tent where mother and Artan were. As it grew closer, she could see that it had no visible eyes, ears, or nose, merely a jaw like a predatory fish, but filled with many needle sharp teeth. It had six fingers and toes on each hand and foot, and each was tipped with a razor sharp transparent claw. It dove for the tent, but seemed to understand that it wouldn't support its weight, and instead of diving into it, shredded the roof as it passed.",
        "Adewyn couldn't be sure, but she said it moved almost with the speed of a diving falcon. The furrow in the roof of the tent was easily twice the height of a man, and the hole was widened as part of the side collapsed. With little other choice, Adewyn ran inside it to get her sword. \n\nMother, hearing the first shout and feeling the tingle of nearby magic, had picked up Artan and looked to Adewyn for instruction. Adewyn, being who she is, ordered my mother behind her and considered her options. Staying in the tent didn't truly offer protection, but at least there was some kind of cover. So she decided to remain there for the moment. The scream of a soldier from outside seemed to indicate it was the correct decision. She told mother that if the thing came in that she should take Artan and bolt for the headquarters tent, where I was. Mother was probably too afraid to argue.\n\nUnfortunately, what the thing actually wanted was inside the tent. In a matter of seconds it crashed down through the hole it had cut in the roof. Its left hand was red with fresh blood, and it gave a low huff like a hunting hound. It reached out for mother as she dashed past it for the door, carrying my boy, but Adewyn was fast with her blade. Far faster than I would have been. It lost four of its fingers and part of a fifth. To her dismay, this did not seem to concern it over much. \n\nRather than turn and face her as she hoped, it went on all fours like a great cat and loped out the flap after mother, leaving droplets of its black ichor behind it. That was when the second scream rang out, terrible and pained. Adewyn followed and saw that the thing had caught up with mother and had her right hand in its jaws, and it was worrying at her terribly. She had realized it was overtaking her and turned to try to cast a spell, but it latched on to her with great speed, its needle-like teeth impaling her flesh and holding her as tightly as a bear-trap. \n\nMother still held Artan in her left arm, protectively. This is when I showed up, running. I knew what it was, instinctively. I drew up ready to hit it with lightning, although I had no idea if it would be effective, and I realized suddenly that it wouldn't be of much use unless I wanted to hurt my mother and my child as well. \n\nIt made a mistake then, at least from our perspective. It carefully seized mother by the upper shoulder with its left hand, and then made a guttural bellow in my general direction. I was within twenty paces and could smell the rot of its breath. It crouched and all at once I realized that it was going to fly off, carrying my mother and child with it. I felt powerless.\n\nAdewyn had taught me to wait for my opportunity, and she rewarded my patience. As the thing began its jump into the air, it stretched its arm out wide, and she had a clean attack on it, away form my mother and my son. This time she cleanly severed its forearm in one beautiful maneuver. Black, viscous blood spilled on the clean dirt of the camp.\n\nIt had already started its ascent and shrieked. It could have been in pain but I think that it was the frustration of a hunting beast. As it got around ten paces off of the ground, I released my lightning, which passed through it, tearing and scorching its flesh, opening it up and cauterizing itself. Love for my mother, child, and Adewyn were foremost in my mind at that moment, and I think that was part of why it worked. Later I would learn that the type of emotions you felt upon releasing such magic could purify it, but at the moment I was simply grateful.\n\nThe creature fell, limply, to the earth dead. Adewyn attended to my mother and Artan. As much as I wished to go to her, I searched the sky first to see if the thing had friends. I saw nothing but the deceptive blue sky of northern spring. I was offended that such beauty had been corrupted.\n\n\"Artan, get over here!\" Adewyn shouted. \n\nI ran to my mother's side. Adewyn and pulled the things hand off of her, and it lay on the ground, opening and closing as if still attached. Mother was pale and her arm had ghastly wounds on it, but only from the bite. It had, for some reason, been very careful with its hand. There was no bleeding however, and that concerned me, as it reminded me of the wound I had received on my side months earlier. Mother was pale and gasping.\n\n\"Send for a priest and Raisa!\" Adewyn shouted at Kyrza. While she did so she took Artan from my mother's shaking grasp. He was unharmed and thankfully didn't even have a drop of that thing's awful blood on him. He was scared, but not crying.\n\nI picked mother up, as carefully as I could. I carried her to my tent, which was only about twenty feet away. After laying her down, her eyes rolled back in her head and she screamed in pain, again. It tore at me. Her left arm held my shoulder tightly. I was about to begin to heal her enough to keep her until the priests arrived when I noticed it\n\nI could see her veins change before me. From the point of the injury they turned colors and the malignancy crawled up her arm with sickening swiftness, perhaps an inch every ten-seconds. They did not even turn the irritated red of those with venoms or infection, but the black of rot. Mother began to convulse. I made the decision as Adewyn entered the tent, having given Artan to Kyrza for the moment.\n\n\"Hold her. Lay across her body if you must,\" I said, with confidence that I did not feel. Adewyn didn't argue, bless her, she simply did so. Once she had her as secured as she could, I summoned fire. It was both intense and focused, more so than I'd ever done before. I collapsed it into a blade and brought it down right below mothers elbow. Her forearm fell away, and mother screamed one last time, before mercifully losing consciousness. I then did some brutal and direct battlefield healing to keep her from dying from the trauma of the wound.\n\n\"May mother forgive me when she wakes,\" I said, despairing, \"If she wakes.\" \n\n\"You did right, Finn,\" Adewyn said, her hand on my shoulder, \"you more than anyone knew the dangers, and her wound was much worse than yours was. I saw the change in her arm as plainly as you did.\"\n\nI hoped that she was right and I hadn't just made things worse.\n\nAll this happened in perhaps two minutes.\n\n* * *\n\nThe old healer, Octavius, improved vastly on my simple and direct attempt to heal her, only afterward cursing my foolish decision to amputate with magic. I believe that he would have been right, for any normal injury from blade or beast, and felt immense guilt. His novice apprentice pointed out to both of us, right then, that what remained of mother's amputated arm had dissolved completely as if with an alchemist's acid.\n\nThe priest and I exchanged glances. He didn't apologize and I didn't want him to. I gambled and happened to be right this time. \n\nRaisa arrived shortly thereafter and used her peculiar skills to divine mother's health. She found no trace of the kind of poison that had infected me in her body, thank the gods, but found much of it on the thing's unnatural teeth. \n\n\"What is this?\" Adewyn asked no one in particular, now holding Artan again. She was peering down at the demon. Raisa had gone to be with Gwyn and make sure that she wasn't overly scared.\n\n\"This is the new face of the war, wife, and what I have been dreading. Bayrd has become a diabolist, and will no longer fear the clean arts of our magic. Perhaps he doesn't have to.\"\n\n\"I can stay with her tonight,\" Adewyn offered, anticipating that I would insist on being near my mother.\n\n\"No,\" I said, firmly and sadly, \"take our son and get into the city, somewhere secure with a solid roof. I'll send Raisa and Gwyn away later to somewhere similar.\"\n\n\"Wouldn't it be safer to be together in case they try for Artan again?\" Adewyn asked, quite reasonably.\n\nI shook my head.\n\n\"They weren't after him. Bayrd may not even know you were pregnant, and its too soon for him to know you've given birth. This is still about Bayrd's sick idea of love. Although I imagine he instructed his pet to bring her back unharmed, I'm sure that mother was the intended target. Nowhere near her is safe right now.\"\n\n\"All right love. I'll get our son somewhere safe. Do what you have to, but don't worry about us. I will never let harm come to him.\"\n\nI stood and kissed her, as deeply as I could, given the urgency we both felt. For a moment we leaned into one another, our foreheads touching, deeply wanting more contact. Then she kissed me on the head and left.\n\nIt would be a long night, but this time I'd have Caliban with me, and I suspected that she knew more about slaying demons than any of the rest of us combined. Together we settled in to find out if we held vigil for life or death. Eventually, inevitably, I slept.\n\n==============================================\n\nINTERLUDE: THE JOURNEY\n\n==============================================\n\nI dreamed, but it was not a dream. Nor was it a vision, although it was true. It was a memory, stifled by poison, suppressed by exposure to things I did not truly understand.\n\nNow, in my moment of desperation, it came back to me. Only then did I truly understood what was at stake.\n\nI remembered my Journey.\n\n* * *\n\nThe cavern stretched out before me, pitching downward as it opened up, the shadows full of dark promises. A stream of water rolled into the mouth of it, fed by the rain and washing down past the foundations of the castle before descending deep beyond my lantern's light. For some reason, not knowing the final destination of the water unsettled me. I laughed briefly at my own cowardice, then began my descent.\n\nIt was a rough walk. Certainly the angle wasn't steep enough to call it climbing, but the uneven ground combined with the shadows and downward trend led to me tripping a great deal and even falling hard once on my shoulder. Fortunately only my pride took any real injury, although my forehead was bleeding slightly. More importantly, the lantern was uncracked. \n\nI continued down for what seemed like an hour but in truth could have been no more than fifteen minutes. The cavern yawed left and right, but the angle stayed steady. As I continued there seemed to be a fog in the air, perhaps from the moisture of the stream. I convinced myself that the whispering I heard was just the water moving over rocks, but in my heart I did not believe it. \n\nAfter another hour had passed of moving steadily down, I began to become bored. I cannot rightly tell you why. There were plenty of sensations, and it seemed like the shadows were alive here, flickering and jumping. When I shined light into them, I saw nothing alive, but the stone of the wall had peculiar circular deformations which made it look skulls of various sizes piled high upon one another. I considered turning back.\n\nSuddenly, I wretched, bringing up mostly water and a little bread that I had eaten earlier. I hadn't felt ill at all before I found myself kneeling and heaving over and over, until nothing more remained. Had I been poisoned this morning? Was the duke trying to kill me?\n\n\"Easy, friend. You aren't doing so well. Its all right. You probably won't die.\"\n\nHe sat on what looked to be a stalagmite that had been sawed cleanly off a few feet from the floor, creating a kind of stool. He looked to be somewhere between fifty and seventy years of age, with a bald head and a long but well-trimmed beard. He was nude save for a simple cloth for modesty, and covered in thick grey rock dust. There were other such stools near him and I sat, almost fell really, onto one. I was so ill that I didn't even find his presence here unsettling. I just let my head hang between my legs and hoped that this awful sensation would pass. He spoke and I listened.\n\n\"The vapors affect all differently, but the greater your understanding of hypergeometric dark energy patterns, the worse it is.\"\n\nI looked at him and he must have seen my confusion.\n\n\"Ah, I'm sorry. I meant to say the greater your magical power the worse it is,\" he said with a hint of condescension, although his smile was genuinely warm.\n\n\"Are you the gentleman that I'm supposed to be seeing? Or are you a figment of my poisoned mind?\"\n\nHe smiled more widely.\n\n\"What an excellent question! I honestly can't be certain what your eyes are presenting to you now. I am not precisely human and certainly not a man. The poisonous air prevents you from seeing the worst of me, and allows us to communicate meaningfully without having the unfortunate side effect of driving you mad.\"\n\nAs I watched, \"he\" flickered out and a older woman, handsome in her way, flickered in. The voice stayed largely the same, however.\n\n\"What are you?\"\n\n\"I'm a platonic ideal of duty, faith, and love. A cherubic thought-form left here to mind the gate with flaming sword, as it were,\" she said, then sighed, \"Of course, you have no idea of who Plato was or what a cherubim is, so I'm just being a pretentious old maid. I'm a guardian, left here by the first Purebloods to prevent anything from following.\"\n\n\"From following who?\"\n\n\"Humanity. This is where you, in the general sense, came from. There are other gates as well, but here is where thousands if not millions fled from the dying Old World and the demonic hordes that had overrun it. Later the Karrash would discover them and invade. After that the Purebloods decided that it would be wise to seal them and summon guardians from the Old World. I serve that purpose here.\"\n\n\"Did...did you see my brother? My uncle?\"\n\nShe nodded, sadly. \n\n\"I did. And your father before them. And others before that. All heard my lesson, but few learned it.\"\n\n\"What is your lesson?\" \n\nI felt ill but dimly, in the back of my mind, part of me was screaming that this was important. Not just to me, or the kingdom, but all of the kingdoms and far-stretched communities of man. I decided to listen to that part, even if I couldn't precisely comprehend what I was being told.\n\n\"It is truly quite simple. You are not a master of anything. You are a servant. So it is with all of those of your people who have been modified and improved by their new home: the Purebloods, Wyldbloods, Weirdlings, Sangrids, and all the rest. You happen to rule, but only because circumstances dictate it to be necessary. Soon, by my reckoning, the things which drove the Karrash through the gates will open them wide again. I will be no match for them. They will push through, and if humanity is not prepared and unified...\" she simply let the sentence die, as if the rest was foregone.\n\n\"Forgive my ignorance, elder, but I don't know what they truly are or what they will do. And what do you mean by 'soon'?\"\n\nShe sighed again, then stood. When she did so, her form flowed and shifted. I saw a great dracon with many wings. I saw a giant with three eyes and then only one. I saw a shining female form, mighty and terrible and sad. Then there was just an old woman again.\n\n\"The armies of Belial do not regard Humanity as an equal, or even as an enemy, but only as a resource. They come from a failed creation. A place abandoned by the Good. They are as locusts, consuming, corrupting, and finally leaving as the fabric of creation rots and fails. They will ruin this world too, but first they will take all of humanity as their slaves. They will sate their lusts and hungers upon them. Your sisters and mother and children included. And they could come tomorrow or in two centuries. I have no way to know for certain. Your task, your only task, is to hold and protect the land you rule. To keep your armies ready and your people fed. To be prepared. All other considerations, including your petty politics and hatreds, are secondary.\"\n\nWell. This was certainly sobering, even if it turned out to just be a hallucination. I was feeling worse, as though my core being was melting into the earth. I cannot rightly describe it now. But I rose to leave, then thought better of it for a moment.\n\n\"I will do my best, but petty politics and hatreds are trying to kill me. What can I do to prevent this? Or fight it?\"\n\nShe held up her hand.\n\n\"Be still. I am not done with my lesson. I am going to impart knowledge upon you, vital to fighting the dangers which you and your subjects must face. When you need to, you will recall the knowledge of wards which can protect your allies and exercises by which any mage may purify their magic with positive emotion, making it close enough to the stuff of creation to be as toxic to the Armies of Belial as their venom is to us. If the magus is powerful enough, lightning or earth can work even without such purification, for men and women respectively.\"\n\nShe touched my forehead, and her finger felt cool, soothing. I felt...something...flowing into me. Diagrams, explanations, memories of a teacher in a faraway time and place, expressing instructions to eager pupils. Weeks if not months of knowledge forced itself into my mind, jarring me beyond the simple illness of the vapors. When it was done I understood how to draw the ward and empower it so that it was more than just a picture and I had a nearly instinctive comprehension of the process of filtering and purifying magical energy as it ran through my being, I sat back down. It took me a few moments before I could form thought and words again.\n\nOne further question came to me, unbidden.\n\n\"How did my relatives react to this news?\"\n\nShe laughed, clearly delighted.\n\n\"No one has ever asked me that question. Let's see. Your father said little but I could feel his sincerity when he said he would serve the greater Good. I also felt his cruelty, but perhaps it was necessary. Your brother...did not understand, although he tried. The vapors took him and he failed his Journey. I returned him to the surface where hopefully you have confined him somewhere that he cannot harm others or himself. Your uncle...denied me and believed me all at once. He is crafty, so he believed that he could fool or deal with the demons of the Sitra Ahra. You cannot trick that which is older than cunning or bargain with that which is made of hunger. If Bayrd rules, I fear that he will try to summon that which I hold back.\"\n\n\"Fuck,\" I said, succinctly.\n\nShe laughed again, but her voice was younger now, and aristocratic, and her form shifted to something truly beautiful and incomprehensible.\n\n\"Well said. All is not lost. I do not know the future. After all, I did not predict the fall of my home. I only know what is most likely. So I task you with ruling, fairly and well. Much of this you will forget, but it will come to you when needed. Go now, and tell your people that you have returned with the hope of the light and the wisdom of the dark. You will not forget these words, ever.\"\n\nI remembered nothing after that.\n\n==============================================\n\nCHAPTER TWENTY-ONE\n\n==============================================\n\n\"I need you to get Merwyd back here as soon as possible,\" I instructed Raisa, \"and also at least one high priestess or priest from all the major temples, and one representative from all the arcane guilds in the north. We need to propagate this as soon as possible. And Merwyd will be able to simplify and explain this better than I could once she sees it.\"\n\nBefore us on the table at headquarters were a few sheets of parchment. When I woke I had written down everything that I could now remember, including diagrams of the wards, and the descriptions of the mental exercises needed to purify our magic before we used it on the Armies of Belial. There was no time for delay.\n\n\"I sent for Merwyd yesterday,\" Raisa said, proving her worth yet again, \"If I can see those documents, I will have someone copy them and send another rider with them so she can study it before she even arrives.\"\n\n\"Good thinking. And make some more copies too. We're going to need trusted scribes to get this out everywhere. We can't let this stay a secret, from anyone.\"",
        "I endured questions from my generals and officers, skeptical of my vision but respectful. As would be expected, they noted that my sisters who were present didn't question anything that I said. The true secret of Pureblood family is that one man may lead, but if he doesn't have the trust of the rest, he is nothing. Raisa and Adewyn commanded respect for their contributions, as well as their abilities to curb my worse instincts and demand that I be able to justify my decisions. To some their silence may not mean much, but to the people who served us and the Kingdom of Cymru, it meant a great deal.\n\nIn any case, we made sure that anyone who wished had the opportunity to see the corpse of the creature that had...mutiliated my mother the previous day. It was so unnatural that it didn't even rot properly, instead remaining fresh. I debated whether or not to destroy it, but Raisa pointed out that the remains might be useful to bringing skeptics over to my side.\n\nAfter this meeting, I returned to my tent, and my mother's side. I took a deep breath before entering, unsure as to what I would find. To my joy, I found a rather flustered Octavius getting interrogated by my mother, who had apparently woken while I was away. \n\n\"When can I be expected to have recovered fully?\"\n\n\"Well, uh, my lady, I don't know exactly...\"\n\n\"Then take a guess!\" she nearly shouted at the poor man, \"I simply cannot be bound to my bed while there is so much to do.\"\n\n\"Yes, you can,\" I interrupted, \"and perhaps you should have some patience for the man who saved your life.\"\n\nThe old man nodded with gratitude to me before he made his escape. I knew that he would be back later and he had left his novice to watch her throughout the day. He too left to wait outside my tent, giving us privacy. My mother tried to look at me sternly, but failed, and smiled broadly as I sat with her on the bed, holding her remaining hand.\n\n\"I thought you were the man who saved my life,\" she said with some pride, \"or so the priest just got done telling me.\"\n\n\"Adewyn saved you first, then me, then him. After my...brutal methods, you were in terrible shape. He made sure that you didn't die because of it. I'm sorry for hurting you and I'm sorry for not being here when you woke.\"\n\nShe grew serious, and squeezed my hand.\n\n\"Don't you dare hold yourself responsible. We both know who did this and why you did what you did. It was shocking to wake up like this, but they were prepared for that. And besides...it...it isn't so bad. Compared to the alternative.\"\n\nGods. She was always like this.\n\n\"I'm no longer a child. It's time to start treating me as your husband. I won't tolerate this behavior.\"\n\nShe looked shocked.\n\n\"What behavior?\"\n\n\"Even now you act like you need to be strong for me. I'm your husband. It is time for you to accept this, and let yourself be true with me. It has taken me over five years, but I understand vulnerability and how necessary it is to share it with those you love. Let me support you for once.\"\n\n\"No,\" she started, but then the tears welled up in her eyes. \"you don't have time for this kind of nonsense.\"\n\n\"Your pain isn't nonsense. I always have time for it. Always.\"\n\nThe walls almost fell and the dam nearly broke. She sobbed, before seizing hold of herself.\n\n\"Dammit, Finn. I don't want...dammit! Why are you like this? Why can't you just leave well enough alone?\"\n\n\"Because it isn't right to demand that you be strong alone, when all the rest of us depend on your strength. Lean on us now love.\"\n\n\"I hate this. I hate it. My arm is gone, Finn. The fucking bastard tried to take me and took it instead. And he nearly killled my grandson. Your son! Your only child! And Adewyn saved him and that should be enough. But I'm here, in this fucking bed feeling sorry for myself. Is that what you want to hear? Does it make you feel better?\"\n\nI looked at her impassively, but my eyes held only compassion for her. I waited.\n\n\"This is idiocy. You're a king. The king! And here you are spending time coddling me! A grown woman! Less than that! I'm not even going to be able to hold my grandson now!\"\n\n\"You did a very good job of holding him when something was trying to kill you. I think you'll do fine when things are calm.\"\n\n\"Of course, you would say that. But you know as well as I do that nothing is the same now. If you were honest you'd release me. We both know that I'm not what you want.\"\n\n\"Why?\"\n\n\"Because I'm mutiliated! Incomplete! Gods, why are you making this so...dammit!\"\n\nThen, finally, when she saw I wasn't leaving, or rising to the bait, her walls collapsed. She broke down in great sobs. I lifted her head and moved her pillow so I could sit closer to her, and she immediately curled her upper body into my lap. I stroked her hair, careful not to touch her wound, although I knew that the priest would keep her well drugged for any remaining pain. \n\nAs we sat, I drew her blanket around her against the morning chill. I stayed with her until she fell into fitful sleep, and then I watched her for a long time.\n\n\"I love you,\" I said softly, \"and you belong to me, wife. I will not discard you. I will make sure that he never gets another chance to do this to you. And then I'll kill him.\"\n\nAfter a while, I stood up, carefully placing her head back on the pillow. She moaned a little, in pain or fear, but stayed asleep. I had work to do in and around my tent. I didn't care if she saw it, it wouldn't be a secret from her, but I didn't want to wake her if I could avoid it. \n\nI worked with a small jar of paint, on the tent floor as well as immediately outside of it. I wasn't the only one doing this today, but I felt that this was the most likely spot, so I wanted it to be perfect. When I was done, I considered my work, and smiled grimly. \n\nNow, to wait.\n\n* * *\n\nDespite mother's protestations, I spent a great deal of time with her. It wasn't much of a burden to be honest. I could make decisions from her side as well as at headquarters. I received regular missives from Adewyn, who had Artan, and Raisa, who was caring for Gwyn, multiple times each day. Simple checkups to keep me from worrying. I responded with the same.\n\nThe old priest visited mother multiple times per day, each time applying more of his healing magic. This was more than normal, but I knew that mother was pushing him to do so. I had tried to talk her out of it due to the extra pain and discomfort it would cause, but she ignored me. The upside was that she had easily done months worth of healing in a matter of days, although I had to make her eat around six meals a day as her body required extra sustenance. She also slept quite a bit more than usual.\n\nBayrd didn't try again until the third day. I was eager for Merwyd's return, and I knew that if she travelled at speed as she was likely to do, she should be arriving that day in the afternoon or evening. I needed her to review my notes and make sure they didn't need any corrections. I desperately wanted her to check my personal work as well as that which had been done in the camp and city.\n\nAlas, there would be no chance for that.\n\n\"You don't have to be here,\" mother said to me that morning. It was an argument we'd had off and on for days now. At this point, we were doing it mostly for form. She wasn't picking a fight any more, but merely making sure that I didn't need to be doing something else.\n\n\"I know, but someone has to watch out for you, and everyone else is pregnant, was just pregnant, or is still quite far away. And I'm impatient,\" I said, signing a document allowing for increased pay for my Sergeants. \n\n\"Impatient for what?\" mother asked, smiling.\n\n\"Impatient for you to be well enough to be fucked.\"\n\n\"Oh,\" she laughed, \"my young suitor is truly ardent today. I think I might be up for a little pleasure later, if you want.\"\n\nI very much did, but right then we both heard a horn sounding. It was loud, and slightly far away. She knew something was wrong as I stood up and casually called Caliban to me. The color, only recently returned to her face, drained away.\n\n\"Oh gods...is it them again?\" she asked. It pained me to see such fear in her face but it pleased me that she wasn't hiding it from me.\n\n\"Yes, but we're ready this time,\" I said, smiling like a wolf. \n\n\"What do you mean?\"\n\n\"A lot happened while you've been lazing about, mother. I'll explain it once I'm done with this.\"\n\nA loud thump from outside confirmed my suspicions. Mother sat up and looked afraid, but I smiled at her reassuringly, and walked outside.\n\n\"There you are. And you brought a friend this time.\"\n\nThere was one twitching on the ground and one desperately trying to fly back the way it came, unable to find purchase in our fine, pure sky, although it was still flying. Both looked very much like the first winged thing that had attacked us, although one had horns and another had a tail. \n\nOctavius had wasted no time, coming out from an adjacent tent as soon as he heard the horn. He had been the very first that I had taught the procedures of warding and purification to. He approached the twitching body on the ground and spoke a word. Flames projected from his wrinkled hands, not yellow and red, but white and blue. Unlike Adewyn's attempts, the thing caught fire like it was covered in lantern oil and made of paper. It burned, screaming, then died fast and crumpled away. The old man smiled at his work. He was a healer by heart, and wise, and knew that destroying any member of Belial's army healed the world at least a little.\n\nI drew in the magic of air and fire, and let it pass through my heart, sifting out that which was not needed, weaving in my own thoughts. This time it was love of little Artan, which was amongst the purest that I knew. I loosed lightning on the clumsy thing in the air. It had been effective on the first attacker, but this time was different. This time it killed it instantly, and the thing disintegrated to ash before it even it the ground.\n\n\"Well,\" the old man said, \"I'd say that worked.\"\n\nI inspected the tracery of the ward that I hd painted a few days ago. It still glowed an eerie blue for a moment, before the energies contained within returned to a latent state. It was still both intact and complete and its effect had been immediate enough to pull one of them down from the sky. The other one must have just brushed against it to still have been airborne. \n\n\"Yes,\" I agreed, \"would you mind letting the others know to finish the greater wards around the camp's exterior?\"\n\n\"With pleasure, lad. And the temples and gates of the city should be done by now. They'll be working on the walls today.\"\n\nI supposed that I should have taken offense to his familiarity, but since he had saved my mother's life and then killed a demon I decided that he could call me anything he wanted. I went back inside and smiled. Mother looked at me, and I could see that she was relieved.\n\n\"What happened? I heard thunder and felt a great deal of magic.\"\n\n\"We had guests, but they're gone. Once you're on your feet, I'll show you how to kill them.\"\n\nHer smile lit up the room, and she stood up smoothly and with the grace that I was accustomed to seeing before the attack. It wasn't the first time but it was the strongest she'd seemed since her injury. \n\n\"Do you still truly find me appealing? I am no longer whole. I can feel my right arm...but its gone. I'm not even sure I will be able to write again or ride a horse or even hold my grandchild, much less pleasure you properly.\"\n\n\"Don't pretend you aren't still beautiful, or that you haven't been thinking of ways to do all of those things with your left hand. I brought you paper and quill so you can start practicing your writing, you hate riding horses, and we've already seen that you can hold my son just fine. As for pleasuring me...there are many ways in which that might be accomplished...\"\n\nI was very aware of the shift she wore, and how it barely extended halfway down her thigh. She caught me looking and walked over to me, her eyes hungry. I pulled her to me with my left arm, gently. With her remaining hand she took my right and guided it up under her shift to her sex. Her eyes closed and she bit her lip as my fingers deftly found the places she wanted to be touched. She moaned.\n\n\"Gods, mother, you're so wet,\" I said, my breath already ragged. \n\n\"A woman should always be ready to reward her man when he protects her, shouldn't she?\" she asked me huskily, then gasped as one of my fingers entered her.\n\n\"I agree. I think you've had enough rest. And this feels ready for my seed,\" I said, gently pumping my digit inside her with one hand as I supported her with my other under her lovely soft ass. Her legs were suddenly a bit wobbly and she leaned into me, rocking and grinding against my palm. She was so aroused that she was barely able to speak in more than a throaty whisper.\n\n\"I'll take as much as you have to give. I haven't had Bride's Bane in weeks now.\"\n\n\"Are you truly ready for me to lay with you? If you're in pain then I am more than happy just to pleasure you...\"\n\n\"Gods, Finn, you'll have to force me away if you don't want to fuck me now. You've gotten your mother wet and ready for you, and you should take responsibility for what you've done. I need your cock, love,\" she said, drawing out the word 'need,' until it became something dirty and wonderful, promising all manner of delights.\n\n\"How much do you need it?\" I asked, with a degree of playfulness. \n\n\"Oh fuck, Finn. Please. Please let you mother take care of you. Please remind me that I'm beautiful. I don't feel like it. I feel ugly and worn and old and useless. Please. I'll be so good for you.\"\n\nShe sat back on the bed and pulled her shift up over her waist clumsily, exposing her wet quim and white thatch. She was so aroused that I could smell her from where I was, a most enticing perfume. She looked up at me, eyes full of arousal but also unsure, waiting for my approval, for my response. She never needed it from me before, but I was her only man now, and she was injured, more in spirit than in body. \n\nI moved over her, looming. She reached up with her left hand and fumbled a bit, but opened my belt and unbuttoned my trousers. She looked excited as a child opening her solstice gifts. As she did so I removed my shirt, but I let her pull my pants down. When my cock came into sight, she took in her delicate fingers and then leaned into it, nuzzling it against her cheek before kissing it sensually. \n\n\"It's absolutely shameful how much I love my son's cock,\" mother said to no-one in particular, \"I cannot get enough of it. It's flavor haunts me in my dreams, I feel a phantom of its hardness when I pleasure myself, it is perfect for my quim. Perfect to fill me and stretch me almost until I am in pain. Won't you use it on me? Please, love.\"\n\nShe punctuated her begging by taking me into her mouth and sucking me down deep, down into her throat, no gagging, just wonderful moaning as she enjoyed the sensation of me being inside her. I groaned in response. Spurred on by my noises of pleasure she outdid herself, moving up and down on my cock with her mouth, faster and faster, taking me deep into her throat with each stroke, barely giving herself time to even take a breath. She was my perfect mother and my perfect slut.\n\n\"Gods, mother, you are so adept at pleasuring me. But no.\" I pushed her off of my cock, and she looked at me sadly, as if I had rejected her and left her standing alone at the ball. I smiled reassuringly.\n\n\"I'm not going to spend my seed there, when it might find more fertile ground elsewhere,\" I said, gently pushing her unto her back and pushing her shift up over her breasts. I lowered my head to her nipples and sucked on each. They were hard and small and my hands explored them, just on the gentle side of harsh. She moaned and gasped and I realized that she couldn't speak. Without thinking she tried to pull me to her with her right hand but her arm only partially encicrled me. She didn't seem to have caused herself any pain, so I answered her need and rose up to her, placing the head of my cock at her entrance.\n\nShe looked me in the eyes and placed her left hand on my chest, stopping me.\n\n\"This is sacred, what we're doing now. The goddess was injured and her lover killed, in the old stories. So her son came to her and fucked her full with a child, and healed her with new life, so she called him her husband and master. That's what I want. I want your child. I want it and I want others to see me and know that I carry the fruit of my son's seed. I want you to use me while I carry it, suckling at my fuller breasts and fucking me until I cum hard. I want that so very much. Heal me with your seed, love.\"\n\nI had no more power to resist her, and I pushed inside her. She cried out, and I filled her swiftly and easily, as she knew I would. I felt perfect and home inside her, but I could not delay. It took every bit of self-control to fuck her gently, slowly, and not roughly. I know that she would not have complained, and would have taken any bruises that I gave her as signs of love, but I did not want this. I wanted her to be healed.\n\n\"Finn, oh fuck, Finn... I feel it, building...\"\n\nHer first orgasm snuck up on her. I drew it out, watching it wash over her, make her whole body quiver and her cries become urgent. As it wore down I sped up again, and kissed her upon her neck and behind her ear. I was experienced with pleasuring her as any man alive, but that day I had unerring instinct.\n\n\"Finnnnnn!\" she cried out, as she came, again and again, her body shaking beneath me. She was unable to speak or move as I fucked her. I felt her quim milking my cock, trying to draw my cum out by force. I felt my own need overpower me, and in that moment, I felt closer to her than I had ever felt before. \n\nI came, filling her. I felt so much come out of me. I felt like life passed from me to her. I felt like I was fading away, and I welcomed it. For a moment, I felt what was masculine in me mix with what was feminine in her, joining and mixing from two to one and then back into two. Although you may not believe me, I knew then that she would bear me twins.\n\nI lay, spent, upon her, my head resting on her breast, her hand running through my hair, both us breathing hard. I felt very alone for a moment, understanding what must come soon.\n\n\"Tell me you love me, mother.\"\n\n\"I do love you, Finn. Always. I love you as son, as husband, and as protector. No other man will ever have me again.\"\n\nWe said nothing but we both knew that her spirit had begun to heal. I slept and she watched over me. It was as it should have been.\n\n* * *\n\nA messenger bore me the letter the next day. He had come through the pass without any problems, and was truly barely more than a boy. I could see that he was afraid, hungry, and tired, so I sent him away to get food and rest. Later I learned that he did not wish to return to my uncle's service, and in fact seemed terrified of the very idea, so we let him stay with us for the time being. He could have been a spy, so he would be watched constantly until he could be interrogated and released. \n\nAfter I read it I was happy that I was in the headquarters, away from my mother. Only Adewyn stood near me. She read it after me, with intense interest.\n\nFinn,\n\nI'm glad you're alive. You may not believe me, but I am. The plan called for you to be imprisoned and released later, not killed. Tyr got a little over-excited, as threatened as he was. Perhaps he was worried that you'd end up on the throne. Perhaps he was right to be. By the time I found out that he'd exceeded our agreement you'd already done your now famous leap to freedom, and we all thought you dead.\n\nIt is not too late for there to be peace between us. I am acting regent for now but both of us know that with Tyr dead, as long as you live, you will be regarded as the rightful heir by the ever squabbling nobles.",
        "Let me speak plainly. I hold the castle. I hold two of my sisters. They are well, mostly, for now. You need to finish me to win. As long as I hold out here in Marche Grodayn, you cannot truly be king. And we both know that this fortress was made to hold out for years. Soon you will understand how time benefits my army and costs yours.\n\nMy demands are simple: Syrlin, and a small piece of land to call my own. Perhaps the isles? Somewhere to rule comfortably with your mother by my side. I promise to treat her well. Ignore her complaints, I think we both know how she likes to be taken. Your sisters can still be yours, if you want. I've had my fun with them.\n\nI can make you suffer Finn. I won't even have to hurt you to do it. I think you know that by now. So what if my first attempts failed. Think how much I could do to you with my new friends if given months or years to plan first. Sieges take time, lad. Anything can happen.\n\nLearn the lesson that your father should have: It is better to have me as a friend than an enemy.\n\nOn that subject it is my unpleasant duty to confirm to you that your father is dead. I did not kill him or have him killed. We had many disagreements, not least of which over your mother, but he was still my brother. I was merely holding him until he gave in to our demands. It was old politics in the manner of our family, Finn. I suspect Tyr of having him killed so he could advance more quickly to the throne, but he denied it until his death. I have no proof, in any case.\n\nWith Respect if not Love,\n\nBayrd\n\n\"No,\" was all Adewyn said, after reading the letter. She looked like she might be physically ill.\n\n\"No,\" I agreed, \"he dies.\""
    ],
    "authorname": "LateStageInfernalism",
    "tags": [
        "brother",
        "sister",
        "pregnant",
        "pregnant sex",
        "incest",
        "epic",
        "fantasy",
        "magic",
        "romance",
        "love"
    ],
    "category": "Incest/Taboo",
    "url": "https://www.literotica.com/s/a-matter-of-blood-pt-07"
}