{
    "title": "Death & The Single Girl",
    "pages": [
        "-M-\n\nI ducked into the Cup 'o Joe Diner shaking out my umbrella and overcoat with a heavy sigh. The rain was fitting. And the diner, though a usual haunt, was a natural place to stop as it was halfway between the cemetery and my dad's house.\n\nDad's house. I supposed I should stop thinking of it as his house. It was now \"the estate.\" \n\nWilliam Jacobs, dead at 75. A captain of global media and communications. A man who started as a cub reporter with the New York Ledger and parlayed his skill as a journalist and his prowess as a businessman into a global empire.\n\nMy elder sister had delivered his eulogy solemnly, but the words had sent me out from the cover of the grave-side canopy in search of a quiet place to laugh.\n\nI loved Dad. He was not only a successful man but also a kind one. And all the long-faced pomp and circumstance would have had him rolling his eyes had he not been stiff as a board in an imposing black casket.\n\nI hung up my coat and umbrella by the door, taking in the other patrons of the diner.\n\nAs usual, Joe, the owner, was behind the counter in his white apron and rolled-up shirt sleeves. Winter or summer, rain or shine, he always wore a short-brimmed white Panama hat with a floral band. \n\nA few couples and families occupied booths by the windows where they could watch the rain.\n\nAlone at the counter, dressed like me in funeral black, a youngish-looking man with dark hair stared at his hands atop the linoleum counter.\n\nI took a stool two down from him and signaled Joe for my usual. \n\nThe young man was odd in that he had nothing in front of him, not even a glass of water. I looked at him as he seemed lost in thought. \n\n\"Excuse me,\" I said. But do we know each other?\"\n\n\"What?\" He asked.\n\n\"Sorry, you must have been miles away,\" I said, pushing a wet strand of my dark hair over my ear. I indicated his black suit and tie. \"Were you at the funeral?\"\n\nJoe poured me a cup, noticing the young man as if for the first time.\n\n\"Oh,\" he said. \"Where'd you come from?\"\n\n\"I, uh...\" The young man's hands trilled idly on the countertop. He watched me take a sip of my coffee. \"What is that you're drinking?\"\n\nI paused mid-sip and swallowed. \"I think it's Columbian,\" I smiled.\n\n\"Juan Valdez,\" Joe interjected. \n\nThe young man stared quizzically at the coffee. \"I'll try some, that is if Mr. Valdez is passed caring.\"\n\nI laughed as Joe set a cup in front of the handsome young stranger and poured.\n\n\"Cream and sugar are on the counter,\" Joe said, moving away.\n\nThe young man looked at the bowl of creamer cups and the sugar dispenser, then watched as I took a second sip from my cup.\n\nHe took a sip, making a face.\n\nI laughed again. \"Statistically, they say sociopaths prefer their coffee black. I suppose that's a mark in your favor?\"\n\nI passed him the sugar. He looked at it and poured, watching me sip. \"What does that mean about you?\" He asked.\n\nI winced as the sugar continued pouring. \"I'm a surgeon,\" I said. \"And as a doctor, I think that's enough diabetes for one man, don't you think?\"\n\nHe put the sugar back. He took a sip and cocked his head. \"I don't think I like coffee,\" he said.\n\n\"Well, it's still $1.50,\" Joe piped up from his stool by the register. \n\n\"Two slices of apple pie, Joe?\" I winked at the cute guy. \"Can't have coffee without apple pie, right?\"\n\nThe cute guy nodded. \n\nJoe hopped up to cut two slices of apple pie from the case and put them under the warmer.\n\n\"Are you a 'cheese-on-top' guy or an 'a la mode' guy?\"\n\n\"I'll have what you're having,\" he said, trying a creamer cup in his coffee.\n\n\"My father used to swear by the apple pie here,\" I said. \"In fact, that's how my parents met. It was a terrible, no-good bad day, as Dad used to say. And it was raining like this. He walked into this diner, and all he wanted was a cup of coffee and a slice of apple pie with cheese on top. And just as he sat down, this girl at the counter ordered exactly what he was about to order but 'a la mode.' And it was the last slice of apple.\"\n\nJoe served me my slice and passed one to the stranger in the black suit. \n\n\"Which is better?\" He asked. \"Cheese on top or a la mode?\"\n\n\"I never chose sides,\" I smirked. \"I just like plain apple pie.\"\n\nSomething about how he accepted the fork Joe offered him and how his eyes moved from the pie to me and then back to the pie, made me smile. \n\nHis eyes were pale blue. In fact, everything about him except his suit was in some way pale. Even his hair, though dark, was washed out somehow.\n\n\"Dad always described Mom as wearing this little blue suit with a little white collar with red piping on, and this little dark blue pill-box hat. He always choked up describing her and how she shared that slice of pie with him.\"\n\n\"How'd your mother describe him?\" He asked, taking a tentative bite of the pie.\n\n\"Like a drowned kitten in a brown suit,\" I smiled. I found myself wiping my own eyes. \n\n\"Go on,\" the young man said.\n\n\"Only if you tell me what you think of the pie,\" I leaned back and sipped my coffee.\n\n\"I like pie.\"\n\nI nodded. \"Well then, they lived happily ever after,\" I smiled, sipping my coffee. \"As proven by my humble existence.\"\n\nHe nodded. \"That's the best part then, isn't it? Not the pie. Not the coffee. Who takes what in what way? It's the living happily, right?\"\n\nI nodded. \"Well said. So, I'm Marley. What's your name?\"\n\nHe made as if to answer me just as my wristwatch alarm chimed. I swore, digging into the recesses of my purse.\n\n\"Sorry,\" I smiled. \"I've had a heart condition since I was four. Hey Joe, can I have a glass of water?\"\n\n-\ud83d\udc80-\n\nOf course, the details of William Jerome Jacobs's life had been truncated into various obituaries saying the same thing in every newspaper in the United States and most of the world three days before. I hadn't read them, but I knew the highlights.\n\nI knew the highlights and lowlights of Bill Jacobs's life just as I had known the details of his wife Francis 17 years before.\n\nI knew all the details about every human who had ever lived. \n\nBut sitting beside Bill Jacobs as he watched his own funeral service had been strange.\n\n\"This isn't happening,\" He'd said almost constantly from the moment I'd appeared to help him up from the bathroom floor five days previous.\n\n\"I'm afraid it is, Bill. On the bright side, you made it to 75. And you had more brushes with me than you'd care to acknowledge. Embedded in Desert Storm, a smoker from age 17 until you were 39. Drunken driving. Hanging a clock in your bathroom on a rickety ladder. A heart attack is rather mundane, but it's done.\"\n\n\"They checked my heart three months ago! I was fine.\"\n\nI shrugged, watching his eldest daughter with her husband in the front row as the Vienna Boys' Choir sang \"Fr\u00f6hliche Weihnacht.\"\n\n\"This is a joke, right? I mean, you're not Death. You're some kid, an actress in a suit, hired by somebody from my frat days? I mean, at my 50th Reunion, we sent a casket to the class president's hotel room...\"\n\nI shook my head. \"Bill...\"\n\n\"There must be some mistake.\"\n\n\"Bill, stop trying to handle the situation and just accept it, okay?\"\n\n\"I'm dreaming this. You're a dream.\"\n\n\"It's not a dream, Bill.\" I waited for the next stage; anger.\n\n\"But it can't be over! I am watching my cholesterol, speed-walking twice a day, I eat Kale, goddamnit!\"\n\n\"Bill?\"\n\n\"What?\"\n\n\"Skip to the bartering bit?\"\n\n\"NO! I'm not dead!\"\n\n(Ugh.) \"We're at your funeral. Your body is pumped full of formaldehyde and stuffed in a casket. Nobody can see us or hear us, despite your bellowing at the top of your lungs. Doornails have better chances of returning to life.\" \n\n\"What if I gave more to charity?\"\n\n\"You're done, Bill. Accept it. They flew in the Vienna Boys' Choir. Do you even speak German?\"\n\n\"Do you?\"\n\n\"Ich spreche jede Sprache. Und Hitler jammerte weniger.\"\n\n\"What was that?\"\n\n\"Me, saying that 'I speak all languages' in German, numbnuts.\"\n\nWhen his eldest daughter Susan took the pulpit, I noticed Bill rolling his eyes.\n\n\"What's wrong, Bill?\"\n\n\"I would have preferred Marley,\" he sulked. \"Don't get me wrong, Susan is a fine girl. But she's boring as un-buttered toast. Marley wouldn't stand on ceremony. She'd tell it from the heart, you know. Not burying the lead.\"\n\n\"What is the lead, Bill?\"\n\n\"Oh, Fuck you! Just because I'm dead doesn't mean I can't argue with someone... No! SOME THING, that doesn't care!\"\n\n\"People care, Bill.\"\n\n\"That's a dipshit answer! No! I refuse to die! At least not without someone beside me.\"\n\n\"I'm here, Bill.\"\n\n\"You?\" His eyes drank me in. \"No. You're not Fran. You're something else.\"\n\n\"I'm who you want to see, Bill.:\n\n\"Yeah, sure. But what are you, really? You're wearing a face and playing a part. But YOU! THE REAL YOU! Have you ever 'been?' Have you scraped a knee or bumped your head? Have you cried over up-turned cheerios? Fucked up? Made love? Held a newborn baby in your arms? Have you kissed someone and felt...?\"\n\n\"Go on Bill.\"\n\n\"I need her! Not some stone-cold businessman with ice-water in his veins and ticker-tape running from his heart wearing her like a costume!\"\n\n\"Must not all things at the last be swallowed up in death?\"\n\n\"Plato,\" he said.\n\nI nodded.\n\n\"I have heard the eternal footman hold my coat, and snicker,\" he said.\n\n\"T.S. Eliot,\" I nodded.\n\n\"Are you really here to help me through this?\" He asked. \"Or will you just put me in a column and add me to a total like a bead on some eternal abacus?\"\n\nI watched the slender figure of his youngest daughter rise from the end of the front pew and move down the outside aisle.\n\n\"See, even she's got the right idea,\" Bill sneered. \"For all the pomp and circumstance, she knows it's hollow. Just as I know YOU are hollow. It's not about saying goodbye at the end. It's about how somebody lived. This funeral has all the passion of an autobahn society meeting. And if you're the angel of death, you're light on the 'angel' part.\"\n\n\"Alright, Bill. If you want to bail out now...?\"\n\n\"Just tell me she's going to be okay?\"\n\nI considered. \"I can't promise anything, Bill.\"\n\n\"No! You can promise me that. I want Marley to be more. To feel more. I want her to find love the way I did and find excitement with life the way I did. Well, not exactly the way I did, but... I want her to be happy. You know? Happy?! Or are you capable of feeling things like happiness? Sadness? Fool-hardiness? Pain? Rapture? To see someone and feel, not just a zing of attraction, but....\"\n\n\"Yes, Bill?\"\n\n\"Oh, look what I'm talking to. A cog in some infernal machine counting minutes, hours, years, eons but not feeling anything. I once felt delirious with joy, Buck-o. I set all care to the wind and danced like a leaf on the breeze with rapture!\"\n\n\"Okay.\" At that moment, I looked over at the old man. \"Bill?\"\n\nHe sighed. \"I guess you'd have to be human to understand.\"\n\n\"Bill, I...\"\n\n\"Will she be there? Will my wife be waiting for me, wherever it is I'm going?\"\n\n\"I can't say, Bill. I don't know where people go.\"\n\n\"Well, at least promise me Marley's going to be alright. I'll shuffle off this mortal coil without any more fuss if you can at least tell me she'll be happy.\"\n\n\"If it will give you peace....\"\n\n\"NO! PROMISE IT AND MEAN IT!\"\n\n\"FINE! IF IT WILL SHUT YOU UP!\"\n\nI don't know where Bill Jacobs went after that. It's not my department to know. \n\nBut suddenly, there I was, in a diner, watching Marley Jacobs, 33, doctor of medicine, with her almond-brown hair and eyes the color of the Orion nebula, take two pills with a glass of tap water, knowing I'd made a mistake.\n\n\"You don't have to pay for me,\" I said. \"I have money. How much is Juan Valdez and coffee usually?\"\n\nThe large man in the strange hat piped up. \"Coffee is $1.50. Pie is $3.50.\"\n\nI dug in my pocket and put some coins on the counter. \"How much is that in Obols?\"\n\nThe large man put down his paper. \"In what?\"\n\nI presented the silver coins, and he came and puzzled over them. The girl, Marley, leaned forward over the coins as well, moving to the seat right beside mine.\n\n\"What the heck are those?\"\n\n\"Obols,\" I said. \"Half-scruples?\"\n\nShe picked them up and examined one. \"Who is this supposed to be?\"\n\n\"Demitrius of Bactria,\" I said. \"Crowned with the head of an elephant.\"\n\nShe turned it over. \"And this?\"\n\n\"Hercules wearing the pelt of the Nemean Lion.\"\n\n\"Coin of the realm, Bud,\" The large proprietor said. \"You know? Washington? Lincoln? Hamilton?\"\n\nShe reached in her purse and brought out a green slip of paper. \"On me, Joe,\" she said. \"So, I'm Marley Jacobs. And you are...?\"\n\nI have so many names. So many names on so many planes of existence. For some reason, with her calm green eyes leveled at me, I struggled to pick one.\n\n\"Joe,\" I said, catching the surly man's name tag out of the corner of my eye.\n\nShe brightened, swallowing a mouthful of Mr. Valdez. \"Small worlds collide! Joe? Meet Joe.\"\n\n-M-\n\nOld Joe extended his hand to the handsome guy, and for a moment, it was like watching a child presented with a math problem.\n\nThe young guy brought his hand up from the counter, and when Old Joe grabbed it and squeezed it, the young guy returned the squeeze. \n\nThen Old Joe winced. \"Easy, partner. It's a handshake, not a deathmatch.\"\n\nThe young guy let go and then looked at me, extending his hand.\n\n\"Joe... What? Have you got a last name?\" I asked.\n\nHis smirk faded. \n\n\"You know? Like 'Smith' or 'Jones' or 'Humperdinck?'\"\n\n\"Black,\" he said. \"Joe Black.\"\n\nI nodded, extending my hand. \"Marley Jacobs.\"\n\nWhen his hand gripped mine, it was as of he was making an effort to control his strength. There was a strange feeling. It was just a hand. Not hot or cold. Not firm or soft. But his palm against mine felt vaguely... natural. \n\n\"Doctor Marley Jacobs,\" I found myself saying.\n\n\"Hi,\" he said.\n\n\"Hi,\" I said back, picking up my own fork to cut a bite from the warm apple pie.\n\nHe cut a massive bite of his own and forked it into his mouth.\n\n\"Joe?\"\n\n\"Yes?\" Both Old Joe and the new Joe said in stereo.\n\n\"I meant, New Joe. No offense, Joe?\"\n\n\"None taken,\" Old Joe said.\n\nNew Joe was delving deeply into his pie.\n\n\"Joe?\"\n\nHis pie was disappearing rapidly, fork-full by fork-full.\n\n\"Joe!\"\n\nHe looked up from the plate, confused. \"Me?\"\n\n\"Yes. You! Joe Black. Hi.\"\n\n\"Hi.\"\n\n\"Um, there's a reception after the funeral. It's family only. I, uh, I'm expected to attend....\"\n\n\"Can we bring more pie?\" He asked, swallowing.\n\n\"Um, I think they might have some there?\"\n\n\"Apple?\"\n\n\"I don't know. Maybe?\"\n\nHe considered. \"Why are you inviting me?\"\n\nIt was both an odd question and yet... \"Because, I guess, I don't want to go alone?\"\n\n-\ud83d\udc80-\n\nNobody does. And yet, the moment she'd taken that pill--\n\n(Sigh.)\n\nSince she was 6-years-old, Marley Jacobs has taken 10 milligrams of digitalis for her heart every day, twice a day. \n\nToday she took her regular morning pill, plus a fatal evening dose of 35 milligrams. Her brother-in-law made the substitution, incidentally just 8 days after doing the same for William Jacobs, exchanging one pill for another.\n\nDeath is death. And if someone is murdered, it's easier if they don't know about it during their transition... Bill Jacobs didn't know he'd been murdered. And he didn't suspect anything. Not did he know his daughter was next. \n\nI hadn't cared. I wouldn't have cared. Cosmically speaking, I shouldn't have even noticed.\n\nBut William J. Jacobs had annoyed me. That whole \"SOME THING,\" not \"someone,\" schtick bothered me.\n\nBefore millennia ever multiplied into eons and dragged through the abyss of time, I existed. Before most things had formed and before those things could feel, before light had been light, and dark was truly dark, I existed. But to be called an \"unfeeling thing....\" Well, it irked me to be summarily judged so rudely.\n\nI'm someone. I can be open, Bill. I can sing with rapture and dance like a leaf. It's not that I can't feel. I just choose not to. I was around before sound, before matter, before the heavy feeling in the pit of my stomach as I looked at Marley Jacob's eyes darting away as she suddenly became self-conscious. \n\n\"Maybe it's a bad idea. You'd probably feel awkward at a funeral reception with a bunch of strangers.\"\n\nFeelings.\n\n\"Would it help you not feel alone?\" I heard myself ask. \"If I went with you, I mean?\"\n\nShe set down her coffee cup. \"I don't know. Something tells me that Dad's already gone. And he's the one person I'd like to be with right now. Just him and me. We used to have good talks, and he'd reprove my miserable taste in men and sing the praises of living a life open to chaos.\"\n\n\"Chaos?\"\n\n\"You know, lightning striking?\"\n\n\"Wouldn't that hurt?\"\n\nShe laughed. \"Not literally striking. But, you know? Like meeting a cute guy in a diner with kind eyes who acts like he's never had pie before.\" She smirked, looking at my empty plate, then passed her barely touched slice of pie across the counter at me. \"With my compliments, Sir.\"\n\n-M-\n\nHe licked the back of his fork and looked at my pie slice. Pushing it back toward me, he said. \"I'd rather watch you. Pie is good.\"\n\nI smiled, taking up my fork and having a bite. It was pie I'd had a hundred times before, but as he watched me, I felt myself savoring each bite. Once I'd finished, he took my plate and stood, offering me his hand. \"I'll come with you to your father's house if you promise me one thing,\" he said.\n\n\"What's that?\"\n\n\"That afterward we go and do something just as good as pie and coffee has been.\"\n\nHe helped me on with my raincoat and then took the umbrella off the coat rack.\n\n\"By Marley, nice meeting you, new Joe.\"\n\n\"Nice meeting you too, old Joe,\" the young man opened the umbrella over me as we stepped out into the rain.\n\n\"We'll take my car,\" I said, unlocking it with my remote key fob.\n\nHe held the umbrella over both of us until we reached the driver's side door, and he opened it for me, and I slid in. He then went around the front of the car and climbed into the passenger seat, shaking out the umbrella as he closed it.\n\n\"You don't have a raincoat in this weather?\"\n\nHe shook his head. \"I don't mind the rain. What sort of car is this?\"\n\n\"It's a Jaguar F-Type,\" I said. \"My one indulgence. I love fast cars.\"\n\nHe nodded as I pressed the ignition button. \"Nearly 40,000 people are killed in motor vehicle accidents annually in the United States,\" he said. \"And nearly 50 percent of those accidents occur during inclimate weather while the vehicle's operator is speeding.\"\n\nI shifted into reverse, checking my mirrors. \"You really know how to soak a girl's panties, don't you, Joe?\"\n\nI punched the gas, and we flew backward quickly until I braked, spinning the wheel and clutching as I went from reverse into first gear, pressing again on the accelerator, rocketing us forward.\n\n\"Um, Marley?\"\n\n\"Yes, Joe?\"\n\n\"Is your father's house going anywhere?\"\n\n\"If that's your way of asking if I will slow down, the answer is 'no.'\"\n\nHe nodded. \"Okay then. Just a thought.\"\n\nAs I took the on-ramp for the 25A, I settled down a bit, \n\nSeeing his knuckles were white on the passenger-side strap as I cruised just a touch over the speed limit, I reached over and patted his knee. \"Calm down, Old Top. I'll get us there in one piece.\"\n\n\"It's not me I'm worried about. It's the other people on the road.\"\n\nI kept my hand on his knee a moment, and then, as I cut around a large tractor-trailer, his hand moved to grip mine. \"I guess I'm just a nervous passenger,\" he said.\n\nI brought his hand over to my knee, and I pulled my skirt up, slightly revealing more of my stocking-clad legs. \"Perhaps you need a distraction?\"\n\nHis hand was cool as I rested it just inside my right inner thigh. His eyes dipped down and then back up to look at me.\n\n\"I know,\" I said. \"I don't know what's got into me. Maybe talking about sex after a funeral?\"",
        "His hand, I noticed, did not move away.\n\nWe stayed on the 25A, passing Glen Cove to make our way out to Long Island. When we passed through the gate and took the long gravel drive up to dad's sprawling house, he politely removed his hand and reached for the umbrella.\n\n\"Don't bother. I'll pull into the garage.\"\n\nPressing a button as we passed through an archway, the last door in a row of six opened up for us. I slid into the stall, killing the engine as the door closed behind us, sealing us off from the world.\n\n\"Do you mind if we don't go in straight away?\" I asked.\n\n\"Whatever you like,\" he said diffidently.\n\nI unhooked my seat belt and snuck a glance in his direction. He appeared to be taking in the garage's interior as he replaced the umbrella in the floorboards.\n\nI retook his hand and brought it up to my cheek. \"Your hands are cold,\" I said.\n\n\"They tend to be,\" he said. \"Yours are warm.\"\n\nI kissed his fingertips. \"I once read that lots of people find themselves having sex after attending a funeral. It's supposed to be life-affirming or something.\"\n\n\"Yes,\" he said, suddenly very fascinated by how I was teasing his fingertips over my lips. \"You are very beautiful, Marley.\"\n\n\"I think you're kind of beautiful too, Joe.\"\n\nOur lips came together suddenly as I tossed off my raincoat and struggled over the gear shift. It was a deep kiss that left both of us breathless when we came up for air.\n\n\"I shouldn't be doing this,\" he said breathlessly.\n\n\"Yeah,\" I said. \"It's a bit out of character for me, too, if I'm honest.\"\n\nA tap on the glass caught us both off guard.\n\nWe looked to find two blue eyes staring at us through the glass of the driver's side window.\n\nDella, my sister's oldest daughter, smiled, chewing gently on the pad of her thumb.\n\nI rolled down the window. \"Hi, Della,\" I said.\n\n\"Mom said to watch for you,\" she said in her cute 8-year-old voice. \"Is this your boyfriend, Auntie Marley?\"\n\n\"Della, this is Joe,\" I said.\n\n-\ud83d\udc80-\n\nThe young girl smiled, taking her thumb from her mouth. \"You were sucking on each other's tongues,\" she said.\n\n\"Thank you for the observation,\" I said. \"It's nice to meet you, too, Della.\"\n\n\"I'll go tell mommy you're both here,\" she said, running to the front of the garage and down past the line of cars and out.\n\n\"I've told my sister she needs to put a bell on that one,\" she said.\n\nI could feel her thighs across my lap. It was not unpleasant, but there was some discomfort.\n\n\"Marley, before we go inside--\"\n\nShe kissed me again. It was warm and hungry and full of passion, and I felt myself melt into her, my arms going around her.\n\n\"Later,\" she smiled. \"Plenty of time, right? Your suit is soaked. Maybe we should find you something dry to wear?\"\n\nShe opened the passenger door of the little sports car and slipped out first. I unfolded myself from the little sports car then reached in for her raincoat to wrap once more around her shoulders. \"Plenty of time,\" I repeated.\n\nWe walked through the garage to the door Della had left open. Passing through a mudroom and down a passage, we reached some stairs.\n\n\"Come on, up the back way. We'll find you something in Dad's closet. You're roughly the same build, I think?\"\n\nShe took my hand and raced me up two flights to a serenely lit carpeted hallway and through a door.\n\n\"I'm sure he's got something he won't mind you wearing while your stuff dries.\"\n\nWe passed into a suite of rooms and through to a grand bath and closet area. Marley drew open some doors and revealed a large selection of men's clothes, ranging from casual to highly formal.\n\n\"Are you certain this is alright?\" I asked.\n\n\"Not like he's going to show up, is it?\" she smiled. \"Besides, it's all going to Goodwill eventually.\"\n\nShe selected a dark three-piece suit. \"Here, this looks about your size. And it's similar to what you're wearing.\"\n\nShe hung the outfit off a full-length mirror and then passed behind me out of the closet. \"Just pass the wet things out to me, and I'll ring for the valet, and we'll have them steamed and pressed.\"\n\n\"Okay,\" I said, unbuttoning my own jacket.\n\nI shrugged out of the water-logged coat and shirt and then unfastened the trousers and let them pool at my feet. I pulled the undershirt over my head and turned to look at myself in the mirror.\n\nI seldom considered my appearance when taking human form. I was pale and gaunt, with my forelock sticking to my forehead. \n\n\"Do you need a towel?\" Her voice called from the other room.\n\n\"If you have one?\" I called back, turning away from my reflection.\n\nHer hand appeared around the door holding a large cream-colored monogrammed towel.\n\n\"I am resisting the temptation to peek at you.\"\n\n\"Why?\" I asked, taking the towel with one hand and her wrist with the other. I pulled her into the closet, watching her eyes dip down.\n\n\"Wow,\" she said. \"Aren't we bold?\"\n\n\"You don't like me?\"\n\n\"No, it's not that. In fact, I would really like to continue what we started in the car,\" she said. \"But Della has no doubt reported our arrival, and if we start now, we're bound to be found and interrupted again.\"\n\n\"I see,\" I said, leaning in to smell her skin. There was coffee from the diner, some wisp of perfume, the rain. I kissed her earlobe.\n\nI felt her hands move from my waist to my hips, and then she helped me out of my black undershorts, crouching low to gather them up as I stepped out of them one foot at a time.\n\nI felt her mouth move forward and then... as she began to suck, my hand went to the back of her head, fingers gripping her thick dark hair, pulling her forward until I felt her softly cough around my girth.\n\nThe feeling of warmth as she rocked back and her tongue danced around the head of my member.\n\nHer hands came up and pushed me gently away, grunting. \"You're killing me, stud. Get dressed?\"\n\nShe took my damp clothes and stood.\n\nI refused to let her go. I leaned into her, kissing her, tasting myself upon her warm, moistened lips.\n\n\"More, please?\" I begged. \"Please?\"\n\n\"You're hard to say no to, but I have to put in an appearance downstairs.\"\n\nShe left the closet. Something inside me ached to watch her move away from me.\n\nThis was Lust. \n\nI shuddered, pushing the want for her mouth away.\n\n(Damn, that is strong.)\n\nI shook my head and dressed in the clothes she had provided, finding a pair of simple black oxfords at the back of the closet.\n\nI ran my fingers through my damp hair and sighed. \n\n(Less drowned rat, more embalmed stock-broker.)\n\nWhen I stepped out, she was waiting at the door of the suite smiling.\n\n\"What?\" I asked.\n\n\"You look so... \" Her bottom lip went between her teeth and then she exhaled. \"It's very smart on you.\"\n\n\"You're obviously hard up for dates,\" I smiled.\n\n\"Granted it's not the latest Armani,\" she said, moving over to take the loose ends of my tie. \"Single or double Windsor?\"\n\n\"What do you think looks best?\"\n\nHer fingers twirled the ends of the tie. \"Dad always thought the double made his neck look fat,\" she smiled, sliding the tie knot up firmly.\n\n\"Ouch,\" I said, putting two fingers between my Adam's apple and my collar.\n\n\"I can be aggressive, too,\" she smiled.\n\n\"Ms. Marley! There you are!\" a voice said. \"A sad day, of course, but I swear Ms. Susan is going to be the death of me\n\nA small stout woman in a cook's uniform entered the room and kissed Marley on her cheek. \"Thank God you're here to help me cope. Oh,\" the little woman noticed me. \"And who is this then?\"\n\n\"Joe Black. This is Mrs. Campbell. Is Susan trying to party plan again?\"\n\n\"Nothing is up to snuff with that woman. Were it not for the little ones and your brother-in-law, I'd take my butcher's knife to her.\"\n\n\"Susan was an event planner in a former life,\" Marley explained. \"She does realize it's a funeral reception, right? Not likely to get a write-up in Fortune or Better Homes?\"\n\n\"There you are!\"\n\nI turned to see a woman in black with a white silk blouse entering carrying a baby on her hip.\n\n\"Whatever she's been telling you, it's an exaggeration, Marley.\"\n\n\"I take no sides,\" Marley said, kissing first the woman then the baby she held. \"How is little Willa today?\"\n\n\"About ready for her nap, actually.\" The woman handed the baby off to Marley and looked at me. \"Della said you'd brought a friend. How do you do, Mister...?\"\n\n\"Joe,\" I said. \"Marley said it would be okay if I came. It is okay, isn't it?\"\n\nThe woman forced a smile. \"She never brings anyone home for family dinner and never brings a plus one for parties or social functions. But for Daddy's funeral, she brings a man.\"\n\n\"A very handsome man,\" Marley added. \"And this cute little one isn't at all sleepy. Right, Willa? My newest niece is ready to start standing on our own, right?\"\n\n\"Drew is looking for you. I'm supposed to take you directly to the study when you show up.\"\n\n\"War room, huh?\" Marley shook her head and then looked from the baby in her arms to me. \"Joe, would you mind holding her a minute?\"\n\nBefore I knew it, the baby was passed into my hands, and its mother was leading Marley away.\n\nThe cook smiled. \"Follow me, Handsome. I'll set you up in the kitchen.\"\n\n\"I... uh... Alright, then.\" I followed the little cook down the hall and down the back stairs to the kitchen.\n\n\"I'll fix her a bottle,\" Mrs. Campbell said. She directed me to a kitchen table with chairs. \n\nI sat, doing my best to hold the baby in a way that seemed natural.\n\nShe looked up at me, her blue eyes wide in fascination. She seemed to say, \"you're not like the others.\"\n\n\"No,\" I said. \"I'm different. Very astute of you to notice, Willamina.\"\n\nShe blinked, and then Mrs. Campbell arrived with the bottle of baby formula and a jar of something. The baby, upon seeing the jar, lit up, reaching with expectant hands.\n\n\"Yes, I brought a treat for the Little Miss.\"\n\nShe unscrewed the Jar and presented me with a spoon. \"Feed it to her slowly, and she'll love you forever.\"\n\n\"What is it?\" I asked, taking the spoon and awkwardly working some of the thick brown substance out of the jar.\n\n\"Laura Scudder's, dear.\"\n\nMy expression obviously hinted at my confusion.\n\n\"Peanut butter. Don't tell her mother, but it's her favorite.\"\n\nI nodded, offering the spoon to the little thing bundled in my arms. The child brought her gums around it, smiling and burbling as she gummed the spoon clean.\n\n\"How about you, dear? Care for a spoonful?\"\n\nI nodded as the baby finished her treat with gleeful giggles before accepting her bottle of formula.\n\nMrs. Campbell handed me a fresh spoon of my own, loaded with the brown substance.\n\nI popped it in my mouth and pulled the spoon out clean.\n\n\"Aock,\" I coughed, gagging as it was thicker than I'd anticipated, and it stuck to the roof of my mouth. \n\nAfter a moment of choking, I then worked my tongue through the thick gooeyness. Once my eyes stopped watering and I figured out how to breathe, I found myself smiling at the little cook.\n\n\"Good?\"\n\nI nodded, handing her the spoon.\n\n\"More?\" \n\nI nodded intensely.\n\nShe gave me the whole jar and then moved back into the bustling of the busy kitchen.\n\nWhen I was sure nobody was paying us any mind, I leaned down to look the baby square in her face.\n\n\"This stuff is marvelous!\"\n\nThe baby cooed, kicking its feet and reaching for my second spoonful.\n\n\"Alright,\" I said. \"We'll take turns, then?\"\n\nWilla took her second spoonful and watched me, once more signaling that she was very much aware I wasn't quite human.\n\n\"Alright, I suppose I can tell you since we've bonded over the Scudder-butter? You, Willamina Ann Jacobs, will live to see 12 of your 20 great-grandchildren graduate from high school. Most of them will go on to college. The first man you marry will break your heart, but then after that first marriage ends, you'll meet someone who'll help you mend. You'll go around the world 26 times, many of them by sailboat, for sailing with your second love will be among the greatest thrills of your life. When I do eventually come for you, you'll have long, fine white hair and eyes just as blue as they are now. But you'll not remember us ever meeting.\"\n\nThe infant pushed the spoon from her lips and smiled. I wiped her lips with the edge of her blanket, then kissed the tip of my finger to press to her lips.\n\nA presence to my right drew my attention. The young girl who had interrupted Marley and me in the garage presented a teapot and some China cups.\n\n\"Do you want to have a Tea Party with Willa and me?\" Della asked. \"You have to hold her teacup for her as she tends to spill.\"\n\nI looked at Willa, who clapped her pudgy little hands.\n\n\"Willa certainly seems to want to,\" I said.\n\n\"I like Lady Grey. And we have to play in the sculpture room as I'm trying to draw a picture.\"\n\nI nodded. \"Lead the way, then.\"\n\nDella took her teapot and cups to Mrs. Campbell and pointed to Willa and me.\n\n\"You have to forget, now,\" I whispered to Willa. \"Life is only fun if it's all a surprise.\"\n\n-M-\n\nMy father's study had never once looked like a Hollywood interpretation of a rich man's study. It had mahogany and brass, but beyond that, it was a repository for file folders, periodicals, and acres of table and desktop space where the old man had hopped from pillar to post on evenings he managed his newsrooms and editors from home.\n\nWe approached the slightly ajar outer door to the sound of Drew on the phone.\n\n\"Yes, Bruce. It's just a matter of a few signatures, and the board will fall in line. No, I can handle her. She's barely interested in the company as it is. Give her enough to open a new children's mercy wing at the hospital, and she'll purr like a cat. Okay, got to go. she's already a half-hour late to this thing. I might have to call out the mounties.\"\n\nHe laughed as I pushed the door from ajar to open, putting my hands in my skirt pockets.\n\n\"Listen, Bruce. I'll give you a ring later, okay? Best to Karen. Bye.\"\n\nHe cradled the receiver as I walked into the study proper, nodding at Susan as she left, shutting the door.\n\n\"Bruce? As in Bruce Odenkirk?\" I asked. \"Odenkirk Media?\"\n\n\"The very same,\" Drew said, getting up from dad's chair. \"Before you say anything, Mar. Hear me out.\"\n\n\"A man Dad said was personally responsible for turning news into infotainment and selling public opinion as a commodity?\"\n\n\"Mar, he's been after Jacobs Communications for years....\"\n\n\"I recall Dad saying he would cut off his own arm to use as a club to beat Odenkirk to death, or at least to see if he could jar loose some hidden human decency.\"\n\n\"See, I knew you wouldn't listen. You're not seeing the big picture here, babe. Big Bill is gone. And half the board for the last 10 years has been begging him to at least consider an offer from Odenkirk. You don't have a family, Mar. We sell to him, our stock values quadruple. I can give Susan and the girls a future that's secure. My grandchildren's grandchildren will want for nothing. And you? You can be a female Albert Schwitzer, goddamnit! Build ten hospitals, give vaccines to the poor.\"\n\n\"Bruce Odenkirk could build hospitals and vaccinate the poor, all while building infrastructure and housing, funding medical research, and sending half the population to college, Will.\"\n\nMy brother-in-law crumpled a piece of paper from Dad's desk and tossed it angrily in the trash.\n\n\"And he'd still have enough for his own space program,\" I added. \"Money isn't everything, Drew. Dad always said the main purpose of the news was to give people the facts and let them determine their own sense of the truth. Bruce Odenkirk sells the truth to the highest bidder without bothering with facts. You know it, I know it, and Dad left me controlling shares and a seat on the board to make sure you never forget what he stood for.\"\n\n\"Always dutiful. Never standing up to him, obedient even in death.\"\n\n\"I never had to stand up to him, Drew. He was usually right. You're the one who tried throwing tantrums and bullying to get your way. It didn't work on Dad, and it's not going to work on me. You want to tell Susan I'm a pathetic little spoiled princess, go for it. But can't we put this to bed and just get through today?\"\n\nDrew sighed. \"Fine. I'll kiss off a multi-billion dollar deal just to be civil with my sister-in-law.\"\n\n\"What about Odenkirk?\"\n\n\"What about him?\"\n\n\"You just told him the deal was practically done. What happens when you tell him I'm not in, not for a dozen hospital wings?\"\n\n\"Fuck him.\" Drew shrugged. \"The big guy who sells the big lie can afford to buy a little one from me, right? Let's go gather up Susie and the girls, huh? Give Big Bill Jacobs a proper send-off?\"\n\nI brought my hands out of my pockets and touched my bottom lip. \"I should warn you,\" I said. \"I brought a date.\"\n\n\"To a funeral?\"\n\nI shrugged. \"It's a weird day. And he's... you'll understand when you meet him.\"\n\n\"Knowing you,\" he said, walking over to clap his large hand on my shoulder. \"He's like a British Sportscar. Grade-A handsome, stylish, but has faulty wiring.\"\n\n\"Hey, at least I drive myself, Captain Car-Service.\"\n\n-\ud83d\udc80-\n\n\"So you see,\" I continued, taking my fifth spoonful of peanut butter as Della poured more tea for her baby sister and me. \"Orpheus got all the way back from the heart of the underworld without once looking back to see if his love was behind him.\"\n\n\"What if she'd gotten in trouble?\" Della asked.\n\n\"He couldn't know. That was his torment for having entered the underworld uninvited. He had to have faith in what Hades had promised.\"\n\n\"So they lived happily ever after, then?\"\n\nI winced, pausing my pencil movements over the drawing pad. I looked up at the marble bust of Orpheus and sadly shook my head. \"He came so close,\" I said.\n\n\"So what happened?\" Marley's voice piped up from behind me on my right. \"And what are you eating?\"\n\nI turned to find her walking out of the shadows into the circle of light that accentuated the priceless sculpture. \"Peanut butter,\" I said around a mouthful, smiling in spite of myself. \"Care for some? It's quite good, actually.\"\n\nMarley laughed, wiping the corner of my mouth. \"I can tell.\"\n\nA man, her brother-in-law, joined us. \"A grown man who acts like he's never had peanut butter, eh? Brilliant find.\"\n\n\"Dad, Auntie Marley, you interrupted Mr. Joe's story!\"\n\n\"Oh, my apologies, Della,\" Marley said, crouching and pouring her own cup of tea. \"Proceed, Mr. Joe.\"\n\nBaby Willa squealed, clapping her hands.\n\n\"Well,\" I said, resuming my seat at the little bench and continuing my drawing as Della sipped her tea. \"They reached the ferryboat at the edge of Styx, the river separating the land of the living from the dead. And as they crossed, Orpheus could not look back as the lost souls of the river tried to reach into the boat and pry poor Eurydice in with them.\"\n\n\"I bet she was scared.\"\n\n\"They both were,\" I said, using the edge of a finger to blend the drawing. \"Well, they made it across to the shore of the living. And Orpheus stepped one foot out of the craft and upon the shore, turning to reach his hand out for Eurydice, just to steady the boat for her.\"\n\n\"No!\" Della gasped.\n\n\"You've heard this story before,\" I teased.\n\n\"No,\" she said, shaking her head. \"But he wasn't supposed to look back until--\"\n\n\"That one foot still in the boat broke his promise to Hades, and his beloved Eurydice paid the price, snatched back into the depths of Tartarus forever.\"\n\nI finished the drawing just as I finished the story, presenting the image of Orpheus reaching for Eurydice as the blackness kept her perpetually out of reach.\n\n\"Kind of a weighty subject matter for an 8-year-old, isn't it?\" The girls' father said.\n\n\"I couldn't help it,\" I said, standing and straightening my tie. \"She was trying to sketch a picture of the statue and calling him 'the harp man.' \"\n\n\"Joe told me that it's actually a Lyre,\" Della said. \"And Orpheus used it to lull the hounds of Hades to sleep.\"",
        "\"Hound,\" Her father said. \"One dog, three heads.\"\n\n\"No, it's hounds,\" I corrected. \"Three dogs, one body.\"\n\n\"Ah,\" he nodded. \"Look, does Mom or Mrs. Campbell know you're all playing tea party amongst the priceless antiquarian artifacts, Doodle-bug?\"\n\n\"Joe was watching us. And we were being careful.\"\n\n\"Perfectly respectful,\" I said.\n\nMarley examined the drawing. \"You've got talent,\" she said. \"Although Orpheus in the drawing looks much sadder than the statue.\"\n\n\"Mr. Joe tells great stories, Daddy. And he likes tea parties! Auntie Marley, can Joe stay with us? He's a lot more fun than all the other old people standing around talking.\"\n\n\"We're not staying over tonight, honey. We've got to find your mother and head back to the city. Daddy's got a lot of work to attend to.\" He shot a look at Marley. \"Lots of irons to take out of the fire, apparently.\"\n\n\"So you're going to steal my big sister and leave little old me to shake all the hands and accept all the condolences, then?\"\n\n\"Hey, the price of being fashionably late, Kiddo,\" He said, turning to smile at me. \"But I see our mysterious guest is indeed charming, and not many can entertain both my munchkins so adeptly.\"\n\n\"They are quite precocious,\" I said. \"Della is quite the little artist, too. A regular Frida Kahlo.\"\n\n\"Sit and draw with us, Daddy! We're going to try to sketch the man on the mirror next.\"\n\nShe pointed to a bronze of Rodin's Narcissus.\n\nHe nodded. \"We'll have to wait until next time,\" he said. \"But I am curious what it is you do, Joe. And how you knew dad. Marley says you were at the funeral? I don't recall seeing you.\"\n\n\"I tend to keep a low profile at these things,\" I said. \"As for how I knew William Jacobs... we did a brief interview, reviewing the details of his life.\"\n\n\"A journalist, eh? Great job, Mar. You go and bring a reporter to a family-only event.\"\n\n\"I brought a guy,\" she smiled. \"But the fact that he's a reporter wouldn't bother Dad in the least. Half his friends were newsies.\"\n\n\"Well, everything the family has to say was in the obituaries.\"\n\n\"Funny,\" I said. \"Bill was telling me about having his heart checked only a month ago. Odd they didn't catch any signs of his imminent death.\"\n\nThe man holding his daughter set her down. \"Go find Mommy, sweetheart. Tell her we're heading home.\"\n\nDella scampered off, taking her baby sister with her with significant effort.\n\n\"Just what are you implying, Mister...? I didn't catch your last name?\"\n\n\"Black,\" I said. \"Joe Black. And I was merely commenting on how odd it was. That's all. A perfectly healthy man in his mid-seventies could be expected to live well past his hundredth birthday with today's advances in modern medicine.\"\n\n\"Well, Dad smoked for twenty years,\" he said.\n\n\"And yet,\" Marley said. \"It couldn't hurt to check with his cardiologist, could it? Heck, he has offices near the hospital campus. I could do it.\" Marley turned to me. \"I was curious about what you might do for a living. Do you work for one of dad's bureau chiefs, or are you freelance?\"\n\n\"Let's say I go where I'm needed.\"\n\n\"Well, look into it if you want to, Mar. Bill made his share of enemies, but I doubt he riled anyone to the point of homicide.\"\n\n\"Statistically, most homicides are perpetrated by people close to the victims,\" I said. \"Spouses killing spouses, children killing their parents, etcetera.\"\n\nThe big man kept his expression even. \"Like I said, Mar. Sleek, stylish, but faulty wiring. See you for squash Sunday?\"\n\n\"The court is already reserved,\" Marley smiled, patting the big man's shoulder. \"You're going down, Drew.\"\n\n-M-\n\nWe saw Drew, Susan, and the kids off and then went into the house.\n\n\"He's kind of a pill, but he means well,\" I said. \n\n\"A pill,\" he said. \"Such an odd choice of words.\"\n\n\"Don't worry, I still like you. How's about 30 minutes of me doing my family duty, and then we break open a bottle of wine or something?\"\n\n\"...Or something? Sounds interesting.\"\n\n\"What is it about you? It's like my heart has been racing faster and faster since we met. I know nothing about you, and yet....\"\n\n\"It's like we were destined to meet,\" he said. \"Marley, I really need to tell you something....\"\n\nI couldn't stand it any longer. I grabbed him to me and kissed his cool full lips. \"I can still taste you at the back of my mouth.\"\n\n\"And I want to taste you, too.\" His arms went around me.\n\n\"Down, boy.\" I smiled as I pulled away. \"Of all the days to feel this way about someone....\"\n\n\"Marley, please... I'm not who you think I am.\"\n\n\"You're the guy who inhales apple pie and tastes like peanut butter,\" I said. \"And your skin feels like silk and your eyes remind me of deep forest pools reflecting starlight.\"\n\n\"Marley ...\"\n\n\"What?\" I asked, realizing the expression on his face was one of intense worry. \"What is it? Have I said something wrong?\"\n\nHe kissed me, moving his body into mine. He fit the way I always imagined the perfect guy would. His lips became hot and hungry, and his fingers gripped me at the back of my neck, angrily passionate.\n\n\"I could die right now,\" I said, smiling.\n\n\"Please don't,\" he said. \"At least, not for another 87 minutes.\"\n\nI laughed. \"Oddly specific?\"\n\n\"Thirty minutes to say goodbye to the guests, four minutes to get upstairs. two minutes for what-have-yous....\"\n\n\"My Mr. Black, how devilishly I want to kick everyone out just to keep to your schedule.\"\n\n\"You could never be that rude... could you?\"\n\nEighteen minutes later I clinked a fork against a champagne glass halfway up the grand staircase where 50 heads turned to see me, pasting on my best sorrowful smile. \"My sister and I appreciate your coming out for this. It's nice to have all the family together even under such sad circumstances,\" I lifted my glass. \"But as Dad would say... 'go home and stop drinking my booze, you bunch of free-loading reprobates!'\"\n\nLaughter erupted around the room.\n\nI smiled. \"Here's to Bill Jacobs! He was a man; take him for all and all. I shall never look upon his like again.\"\n\n-\ud83d\udc80-\n\nThe party raised their glasses. \"To Bill!\"\n\nThey all drank. I kept my distance at the bottom of the stairs and drank as well. (Champagne is oddly fizzy...)\n\n\"Now go home!\" Marley said. \"Dad hated people milling around not living their lives, and I, for one, encourage you all to get out there and live! Kiss your grandkids, fall in love, put on a record when you get home, and dance the Wa-tootsie. Take risks! It's what Dad would have encouraged, and I'm of the mind to agree with him!\"\n\nTwelve minutes. Everyone laughing and smiling. \n\nMarley kissed the last great aunt on her cheek with an award-winning smile. \"Next Sunday! I'm there with bells on and a nice little Bordeaux!\"\n\nShe turned to me after waving her last goodbye. \n\n\"The storm has passed,\" she said. \n\n\"I can see that,\" I said, looking out the great entryway at the still-dripping world. The grey clouds still lingered, but they would slowly dissipate with the sun's last rays. \"Both literally and metaphorically.\"\n\n\"Now, I know you've gorged yourself on pie and peanut butter,\" she smiled. \"But, how does a girl transition straight to unbridled passionate sex at this point without a proper segway?\"\n\nI smiled. \"If you could describe what a segway is,\" I said. \"I'd listen intently while casually disrobing you?\"\n\n\"Anyone ever tell you you're too easy, Joe?\"\n\n\"Never,\" I smiled. \"You're actually the first.\"\n\nShe turned into the house, unbuttoning her jacket. Her hands went up through her dark hair as she rolled her neck, relaxing the knots in her shoulders.\n\n\"You wouldn't be interested in an evening swim then, would you?\" She asked.\n\n\"There's a pool?\"\n\n\"It's the North Shore,\" she smiled. \"We have an indoor tennis court and an outdoor tennis court. An outdoor swimming pool and an indoor swimming pool.\"\n\n\"What about a dock with a green light flashing through the night?\"\n\n\"Dad thought that was a bit much,\" she smiled. \"So, you're up for a swim, then?\"\n\n\"In the moonlight?\" I asked. \"With you?\"\n\n\"This way, sir,\" she said, keeping her hands at her side as she led the way.\n\nAfter a maze of hallways, we stepped out into the cool fall air onto a stone patio.\n\nSteam rose off the glassy smooth surface of an Olympic-sized pool. She flipped an unseen switch, and underwater lights came on.\n\n\"Off, please,\" I said.\n\n\"As you wish,\" she said, flipping the lights off.\n\nShe passed by me on my right, closely, walking the length of the pool toward a stone-columned changing house. I followed at a discrete distance. She peeled off her jacket and then unzipped her skirt, letting it slide down her long well-toned legs.\n\nShe reached a door to one of the changing rooms and opened it, turning to face me as she unbuttoned the top button on her white silk blouse.\n\n\"We keep some swimming things for guests,\" she said. \"If you're shy.\"\n\nI removed my jacket and began unbuttoning the black vest.\n\nShe reached her fingers up and began undoing the knot on my tie. \"You have this expression on your face,\" she said.\n\n\"And what do you read in it?\" I asked.\n\n\"Uncertainty,\" she smiled. \"Been a while, Joe?\"\n\n\"I haven't made a lot of room for life,\" I said.\n\nShe peeled back my shirt and suddenly her hands were on my belt.\n\n\"Shame on you,\" she said.\n\n-M-\n\nHe moved close. His pale blue eyes seemed bright even in the gathering darkness. His pale skin caught the dancing glow of moonlight off the water as the rainclouds dissolved slowly revealing a quarter-moon.\n\n\"It's odd,\" I said as his hands came up to slowly unhook my bra. \"All my life, I've told men they were handsome, and I thought I meant it each time.\"\n\nMy bra slid from my breasts, and he tossed it over a chaise lounge. I had his belt and fly open and my hand slid down into his pants.\n\n\"Now,\" I said, swallowing as he bent his neck down and kissed my neck gently. \"I'm scared a bit.\"\n\nHe paused, kissing. \"Scared of me?\"\n\n\"Scared of how strange this feels,\" I said.\n\nHe looked down between us.\n\n\"No,\" I chuckled. \"Not that,\" I said. \"Very normal, kind of impressive actually.\"\n\n\"Very reassuring,\" he said. \"But, you were saying?\"\n\n\"Well, it's like I've been expecting you all my life?\"\n\n\"And like we've just kept missing each other?\"\n\n\"You step off an elevator just as I step on. I leave a room just as you rush in.\" My hands left his growing erection to come up over his own large lean hands, which had idled to trace along my ribs under my breasts.\n\n\"See,\" I said, smiling. \"You're controlling yourself just when I'm supposed to be working you into a frenzy. Earlier, you looked like you wanted to kill me when I left you in the closet.\"\n\n\"I wouldn't go that far,\" he said. \"Although telling me to get dressed like I was some child... made me want to take you over my knee and....\"\n\n\"And?\" I challenged.\n\nHe backed away from me then, a devilish smile on his face. \"If there's one thing I am, to a fault, Doc,\" he said. \"It's patient.\"\n\nHe turned, took a brief run, and dove expertly into the steaming water of the heated pool.\n\n-\ud83d\udc80-\n\nFrom the way she drove her car, I knew she would chase me.\n\nI reached the far end of the pool, swimming the complete length underwater. I surfaced as I heard the splash of her body diving in after me and smiled. I turned to see her surface, her bare shoulders moving in expert rhythm as she cut through the water towards me.\n\n\"NYU swim team,\" I sighed. \"Laps every morning at the University Faculty pool.\"\n\nShe surfaced in front of me. \"What was that?\"\n\n\"Huh?\"\n\n\"You said something.\"\n\n\"Just admiring your form,\" I said.\n\n\"I'm not used to chasing guys,\" she smiled.\n\nI took her hand and kissed the tops of her knuckles. Beneath the surface of the water, my other hand moved.\n\nI could feel her heart beating as she pushed into me, her cheek landing against my chest as she moaned. \n\nShe was probably aware of the increased pulse. But she was foolishly ignoring it or misinterpreting it as having something to do with....\n\n\"Oh, God!\" She gasped, the fingers of her right hand digging into my shoulder as her breath caught and became a raptured squeal.\n\nIt was startling and when the wave subsided, she laughed, bobbing up in the water to kiss the tip of my nose. \"Can I keep you?\"\n\n\"Do you remember the first time you told a guy you liked that he was beautiful, Marley?\"\n\nHer hands slid down over my chest as she cocked her head. \"I... it might take me a minute.\"\n\n\"You were fifteen,\" I said. \"And you would drive your mother into the city for her chemotherapy. Most of the other patients in the ward were older. But there was one boy your own age.\"\n\nHer lips stopped kissing my throat. Her dark green eyes stared at me. \"Reggie,\" she said. \"How did you know--?\n\n\"He was only three months older than you, a poor kid from Queens. And he loved the New York Mets. And after the first few times you drove your mother, he always asked to sit nearby so the two of you could talk. You'd play hearts and crazy eights and do mad-libs like you were still children. Your mom liked him, too. And then one day he took you aside and told you he liked you a lot. And you asked him to take you out on a date. It was your first date and his too, though he pretended otherwise.\"\n\n\"How do you know all this?\"\n\n\"He took you on The Cyclone at Coney Island, the merry-go-round, the bumper cars. You went Dutch on the cotton candy.\"\n\n\"Okay, stop it. It's not funny.\"\n\n\"And when he took you on the Ferris wheel, and it stopped almost near the top, he was crying and touching the baseball cap he wore to cover up the fact that he was bald from the chemotherapy. And then you told him he was beautiful and you kissed him. Your first kiss and his.\"\n\nI could see the realization dawning slowly in her eyes. Her hands still held me, so I continued talking. \"His first?\"\n\n\"And last,\" I said, looking down. \"You made plans for a second date,\" I said.\n\n\"But two days later, he was admitted to the hospital,\" she said. \"Grand Mal Seizer. And then...\"\n\n\"He was gone,\" I said. \"You didn't go to his funeral even though his mother invited you and your family paid for it. You stayed that whole day and night in bed, crying.\"\n\n\"And then three months after....\"\n\n\"Your mother died. You decided then that you would become a doctor and that you would try and save people or at least comfort them when the time came.\"\n\n\"I said it at the diner,\" she said. \"I asked if we'd met?\"\n\n\"We've come close,\" I said. \"When you had scarlet fever when you were four. When you fell out of a tree and broke your arm when you were nine.\"\n\n\"So, you are...\" her hands moved away.\n\n\"Go on,\" I said. \"Who am I?\"\n\nShe swallowed but kept her eyes trained on me. There were tears threatening to fall from her eyes. \"You... You're...\" She shook her head, refusing to say.\n\n\"I'm sorry, Marley. I wanted to tell you but, I... It's nice being just Joe.\"\n\n\"Is this what Reggie would look like had he lived?\"\n\n\"It's what you imagine he'd look like,\" I said. \"I take the form that's most comforting usually. It helps with the transition.\"\n\nShe nodded. \"So, am I... already?\"\n\n\"No. But 'in thee there is not a half an hours life,'\" I sighed. \"I made a promise this morning to your father I couldn't keep.\"\n\n\"Dad?\"\n\n\"I was in a little blue suit with a white collar that had red piping on it,\" I said. \n\n\"I see,\" she said. \"And, um, what do you really look like?\"\n\nI looked behind her at the dark water beneath a thin veil of mist. The hollow eyes and bleached bone of something not quite human reflected back at me.\n\n\"It would only frighten you,\" I said, feeling a tear stream over my own cheek. \"And I don't want to do that, Marley. The truth of the situation alone is already frightening enough.\"\n\n\"You're not,\" she forced a smile. \"No. You're Joe.\"\n\nI gripped her hands gently before she could pull them away. \"Don't, please? Don't pull away.\"\n\nShe reached up to touch my cheek. \"Do you often cry,\" she asked, her thumb wiping under my eyes. \"Seems out of character if you are who you say you are.\"\n\n\"No,\" I felt myself laugh despite the tears. \"And I don't get it either. I know it's too stupid and inexplicably fast, but I don't care. I have to say it. With you, there is no tomorrow, and I want to be here in this moment forever, a human idiot full of hope.\"\n\n\"So you're saying I've got one foot on the shore and one in the boat, and...\"\n\n\"... I love you,\" I said. \n\nHer eyes narrowed. \"Can you love someone? I mean, if this is real and you are... Death?\"\n\nI looked into her eyes. \"Have you ever seen the Orion Nebula?\"\n\nShe smiled. \"That's in Yonkers, right?\"\n\n\"I suppose you'd only have seen pictures.\"\n\n\"Can you show me?\"\n\n\"Close your eyes,\" I said, putting my hand at the back of her neck and bringing her bare legs up so that she floated on her back in the warm water.\n\n\"Will it hurt?\" She asked.\n\n\"No,\" I said. \"I promise.\"\n\n-M-\n\nI'm not exactly sure of the details, but we were in the pool, naked, and then suddenly it was quiet and his hands held me and squeezed my wrists. I opened my eyes to take in an explosion of green and blue set fire by stars burning brightly intermingled with flecks of golden gas.\n\nI felt myself gasp inward and then...\n\nCoughing, I kicked out of the warm water of the pool and spun to cling to him sucking in lungfuls of air.\n\n\"I forgot to tell you to hold your breath,\" he laughed, softly. \"Sorry.\n\n\"Holy fuck,\" I swore. \"You weren't joking.\"\n\nHe steered me over to the side of the pool, setting me on the cold stones and kissing away water droplets from my face.\n\nHe pushed up from the pool and sat naked beside me.\n\n\"So, questions?\" he sighed.\n\n\"Is there a Hell?\"\n\n\"Ooh,\" he said, leaning away. \"Straight to the dark side. I wouldn't have guessed that from you.\"\n\n\"Is there?\"\n\n\"If there were, do you think you'd be headed there?\"\n\n\"Don't you know? Aren't you like the bus driver?\"\n\nHe shrugged. \"To die is to awaken on some distant shore. I never glimpse beyond the trees of that shore.\"\n\n\"What's God like?\"\n\n\"Never had the pleasure,\" he shrugged.\n\n\"So, what is this? Death takes a holiday?\"\n\n\"Not sure. I've never taken a holiday.\"\n\n\"So, if you're here, are people just not dying right now?\"\n\n\"I'm never exactly in one place, Doc.\"\n\nI looked at him, he was sort of gazing off into the distance. \"Okay, that's not ominous or creepy,\" I said.\n\n\"You use humor to mask fear,\" he said, meeting my eyes.\n\nI held my gaze locked with his forcing myself to smile. \"If you flinch first, do I win something?\"\n\nHe cracked a smile and looked away. \"At least you're funny.\"\n\n\"You're right,\" I said, shivering a bit with the cold. \"I am sort of afraid. But I'm a doctor. I face death every day.\"\n\n\"Not every day. You're too good a doctor.\"\n\n\"So, do I keep calling you Joe?\"\n\n\"If you don't mind,\" he said. \"It's grown on me throughout the day.\"\n\n\"Well, Joe. Is there any chance for a miracle? Can I stab myself with adrenaline or call an ambulance?\"\n\nHis head sank. \"There's little chance either would work at this point,\" he sighed. \"I'm sorry to say even miracles require some amount of cosmic wheel-greasing to arrange.\"\n\nI nodded. \"So, I get to choose how I spend my last moments, huh?\"\n\nHe nodded. \"Within reason.\"\n\nI clicked my tongue and looked out across the mist-covered pool. \"I could use a drink.\"\n\nHe smiled and held out a hand. In a soft flash of blue flame a glass appeared. \"On me,\" he said.\n\nI took it, looking at the golden brown liquid with a small blackened cherry and twist of lemon. \"No way.\"\n\n\"Smoked Manhattan on the rocks with a twist,\" he said. \"You're go-to after a particularly grueling no-good bad day.\"\n\n\"So you know everything about me, huh?\"\n\n\"Sort of takes the mystery out of it, I suspect.\" He said. \"You'll push the bitters-soaked bing cherry to the bottom of the glass so that it's extra cold at the end of the drink and then...\"",
        "\"Hardly fair,\" I said. \"Tell me something about you. Something real.\"\n\nHe considered. \"I liked the tea party,\" he said. \"And the peanut butter.\"\n\n\"And when we were in closet?\"\n\n\"More so just now in the pool,\" he said. \"The way you held me and the noise you made. Very... visceral. Supremely compelling.\"\n\nI pushed the cherry down into the glass beneath the ice and set it aside by the pool. \"It takes a minute to get properly cold,\" I said. \"Speaking of which... I'm feeling a little chilly.\"\n\nHe looked over at me. \"That's not me,\" he said.\n\nI reached over and took his arm. \"Now don't freak out,\" I said. \"This is called 'cuddling.' The girl says she's cold. The guy puts his arm around her. They get warm. The guy maybe makes a move?\"\n\n\"Oh,\" he said. \"Sorry, most times I see this in people's memories it's at a movie.\"\n\nI smiled. \"Well, they're hardly playing my favorite picture at this particular drive-in.\"\n\nHe laughed as suddenly a light kicked on. There was the sound of film flickering through a projector.\n\nI looked out over the pool to see the Paramount Pictures logo fill a white screen as an orchestra swelled. \"Humphrey Bogart, Audrey Hepburn, William Holden, 1954. Directed by Billy Wilder.\"\n\n\"If you pull a rabbit out of your ass, I'm leaving.\"\n\nHe smiled, speaking the opening lines along with Audrey. \"On the north shore of Long Island, some thirty miles from New York. There was a small girl who lived on a large estate....\"\n\n-\ud83d\udc80-\n\n\"I just realized this movie basically starts with a suicide attempt.\" She said, tossing one leg over mine idly, munching the popcorn I'd whipped up for her.\n\n\"Not a legitimate attempt,\" I said, accepting a handful to munch.\n\n\"How can you say that? She's a silly girl in love with a fantasy. She's not in her right mind.\"\n\n\"She didn't blot the letter,\" I said.\n\n\"What?\"\n\n\"The moment she folded what she intended to be her 'goodbye note' and put it in the envelope, the ink would have smudged.\"\n\n\"You're a pale horse,\" she scowled, pelting me with popcorn.\n\n\"She also feeds the fish.\"\n\n\"That's it!\" \n\nShe tackled me and we rolled together on the cold, wet stones a moment until she pinned me and laughed. \"If there's one thing that irks a woman, it's a man who is always so sure of himself.\"\n\n\"Well, nothing is sure except Death and Taxes,\" I said, trying to keep my face even.\n\n\"You've been saving that joke.\"\n\n\"Your face lights up when you're not sure if you're laughing or angry.\"\n\n\"Well, I'm a little bit of both. Worst news a girl can get, but it's hard to shoot the messenger when he's been such a perfect gentleman all evening. Tell me, do you often try to get in the pants of dying women?\"\n\n\"You're the first.\"\n\nShe led me to one of the chaise lounges inside the pool house and lay down upon it. \"Not even Helen of Troy? Cleopatra?\"\n\nHer hand guided me between her thighs.\n\n\"It's not that it never crossed my mind,\" I said. \"It's just usually an awkward moment.\"\n\nHer eyes widened.\n\n\"Oh my,\" she said. Her brow knit. \"So, never?\"\n\n\"Janis Joplin,\" I smiled.\n\n\"No way!\"\n\n\"It was 1970,\" I said, bringing a hand up to tweak one of her small brown nipples. \"She was still a little high and drunk when she kissed me. Almost like she was trying to wake herself up from a bad trip. It was all like some simile that someone hasn't bothered writing yet.\"\n\nHer eyes locked with mine as I felt myself thrusting upward.\n\n\"Are you messing with me, Joe?\"\n\n\"A little bit,\" I smiled.\n\nHer hand went over her mouth, stifling a heavy moan.\n\n\"Afraid someone will hear us?\" I asked.\n\nShe nodded. \"This isn't exactly something I typically do.\" She whispered around an exhale. \n\n\"Look into my eyes and nowhere else.\"\n\n\"Why...?\"\n\nMy hand clamped down firmly over hers. \"The less said, the better.\"\n\n-M-\n\nThe fingernails of my free hand bit into the flesh of his shoulder as I felt my heart racing so fast... I swear I saw white light as my hot sex closed around him. I came, gripping him tightly as he thrust deeply.\n\nMy heart. It seemed about to erupt within my chest. And then... It was quiet. Like being submerged once again in the warm water of the pool. Time slowed. And he was there, holding my face in his hands, giving me a long deep kiss that seemed to bring darkness softly from the edges of the universe.\n\n-\u2620-\n\nAndrew Douglas Tanner, aged 47, known by his friends and family simply as \"Drew,\" entered the master bathroom of his Manhattan townhouse in his shirt-sleeves and trousers. Susan, his wife, was with the girls putting them down for the night. He finished off the last swig of his cognac and set the snifter on the edge of the sink.\n\n\"Susan was in love with Quincy Marlow when you met her.\"\n\nHe whipped around, not seeing me. I was seated with my legs crossed on the edge of the cast-iron tub. \n\n\"A nice kid, Drew,\" I said. \"On a scholarship, sure. But bright as well as athletic. It was ruled an accidental drowning,\" I continued. \"But, you made it happen.\"\n\n\"What is this?\" his eyes searched the room.\n\n\"Shut up!\" I said, becoming visible to him. \"He needed an inhaler before practices and you switched out the stimulant for a paralytic.\"\n\n\"Marley?\"\n\nI smiled. \"Is that who I look like? Oh, bravo! I couldn't have planned that.\"\n\n\"You're not here!\" he checked his wristwatch. \"You're dead!\"\n\n\"Well, I'm never in just one place at one time, Sport.\" I stood, smiling. \"So Quincy dies in a dreadful accident and who is there to comfort little Susie Jacobs after pocketing the inhaler and replacing it with the original?\"\n\n\"This isn't.... You're not real.\"\n\nI watched my hand morph from Marley's feminine form to something younger and more masculine. \"Well if I'm not, at least your wife and children are far enough off that they can't hear us.\"\n\n\"Quince? What is this?! What are you, some kind of Ghost?\"\n\nI smiled, shutting the bathroom door and locking it, pacing around Drew with a hungry smile on my lips. \"It's a big townhouse,\" I continued. \"A gift your father-in-law gave you upon your wife's graduation from Vassar. You, of course, graduated bottom of your class at Wharton Business School the same year.\"\n\n\"You're not real!\" His eyes darted to the empty glass on the edge of the sink.\n\n\"No,\" I said. \"Nobody dosed you. This is quite real, Sport. And you've yet to check your pants pockets before taking them off. You do it every night. Why not do it now, if you please?\"\n\n\"I... Uh...\" His hands went into his trousers. He felt something there. \"What are these?\"\n\n\"Coins,\" I said, circling. \"Two obols, to be exact. One scruple. The fare for passage.\"\n\n\"P-passage?\"\n\n\"Only those with scruples can pass to the next world, Drew. Souls without them are lost. You're lucky in a way.\"\n\n\"Lucky?\"\n\n\"You would have ended unscrupulous, you see? Those coins, Marley touched them today. I didn't ask her to. But she touched them. And when she touched them and gave them back, she imbued them. She paid her fare to me.\"\n\n\"Her fare?\"\n\n\"Well, a fare,\" I corrected, still circling as he kept his distance. \"You're feeling dizzy, Drew?\" \n\n\"Whoever you are, if this is a joke....\"\n\n\"We both know I am deadly serious,\" I smiled. \"For most people, Drew, I try to work through the stages, but for you....\"\n\nHis eyes widened as I thrust my hand into his chest. And then as I squeezed the life out of his heart, he shook, all the bad deeds and sin hitting him like a stroke that lit up his brain with ultimate horror.\n\n\"Yes, Drew,\" I whispered, leaning in. \"Rest assured your wife and daughters will get along fine without you. In fact, better than they would, had you lived another decade or so.\"\n\n\"But... It's... Not right,\" He choked, falling to his knees on the floor. \"It's not fair!\"\n\nI smiled, squeezing his heart harder, his eyes bulging up at me and then beginning to lose their light. I let the visage he'd imagined melt away entirely. He saw me in his last moments. Empty eyes, teeth bared and sharp like the predator he deserved to see. \n\n\"Life isn't fair, Drew,\" I hissed. \"Why should Death be any different?\"\n\n-M-\n\nI felt cold and then I gasped awake upon the chaise lounge. It was morning. Fog danced among the carefully manicured trees around the outdoor pool. The sun was just rising.\n\n\"Joe?\"\n\nI felt for him beside me. But there was nothing. Not even an imprint of where he had slept the night beside me.\n\n\"Joe?\" I said again, still half asleep.\n\nI sat up in the early October morning, covering myself with a robe someone had left out for me. I shrugged into the dewy sleeves and felt something. \n\nIt was a note folded up in the robe.\n\n\"Send Della to art school,\" it read. \"Teach Willa how to sail. And when we meet again, you will have hair as white as mountain tops. All my love, Joe.\"\n\nA sound of twittering caught my ear. I followed it to the back of the boathouse and found my phone in the pocket of my skirt. I accepted the call, recognizing the number. \n\n\"Susan? Yes! No, I was sleeping. Drew? Oh my God! No, I'm... No, of course! I'm on my way.\"\n\nI stumbled, gathering up my clothes, confused. Delirious. Had it all been a dream? \n\nThe note was still in my hand. I noticed the little arrow at the bottom corner.\n\nI turned it over. \n\n\"Someone had to take the trip, Doc. Live well. -Joe.\""
    ],
    "authorname": "Anitole",
    "tags": [
        "stranger",
        "supernatural",
        "paranormal",
        "romantic"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/death-and-the-single-girl"
}