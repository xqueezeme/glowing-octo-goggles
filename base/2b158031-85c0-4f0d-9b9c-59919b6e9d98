{
    "title": "Brown's Shoe Store Ch. 04",
    "pages": [
        "Just a heads up this chapter has a hot tingle of incest. Please read Chapters 1 -3 first. Copies of this story may not be made for distribution, be publishing or copied to another webpage without explicit permission from the author. \n\nMay and Jim Brown sat waiting after dinner for Mike's big announcement. He had told them when he came home that he had some big news. \n\n\"Well tell us!\" his mom said. \n\n\"Super Shoe Mart offered to purchase the store today,\" he said smiling. \"She didn't say how much but I think it will be quite a lot of money.\" \n\n\"WOW!\" Fred said smiling. \"Let's take it.\" \n\n\"Part of the deal is that the staff stays on to work and I manage the store. I told her that the Brown name must stay on the store. Grandpa would want it that way.\" \n\n\"What did she say?\" Fred asked. \n\n\"She wants the family and staff to visit her mountain retreat for a long weekend to discuss the specifics. I told her I had to talk to the family first. Would you like to go?\" \n\n\"Who will run the store?\" Mike's mother asked. \n\n\"I hired two new employees. Abby Bradshaw and Luke Andrews. I'll have them trained before we leave in three weeks. Amy will be here to manage the operation.\" \n\n\"Sounds great Mike,\" his mother said smiling. \"I'm so proud of you.\" \n\n\"Me too,\" his dad Jim said. Mike didn't respond to him because he was still pissed that Meagan and Tara were his sisters. \n\n***** \"What will I wear?\" Meagan asked Tara and Amy as they walked through the mall. \n\n\"Something sexy because that is the reason why Super Shoe Mart is buying us,\" the other girl said. \n\nThey moved swiftly through the various stores picking out the sexiest underwear and clothing they could find. It was nice of Mike to give them his credit card.\n\n*****\n\nMike had both Luke and Abby in the large stockroom showing them the inventory system. Amy was busy in school and was unable to make it. Abby was more interested in Mike as he stood on the small step-stool looking down at them. It was no secret how well-endowed he was and the rumor about him and Mrs. Sullivan doing it had raised her interest to a very high level. \n\n\"Did you hear that Abby?\" Mike asked as he realized she was not paying attention. \n\n'No I'm sorry,\" Abby grinned. \"My mind was somewhere else.\" \n\n\"This is important so please pay attention,\" he said upset because they were going away this coming weekend and he wanted to make sure Luke and Abby knew what to do. \n\n\"Sorry,\" she said looking down like a small kid being punished. \n\nIt was an hour later when he was closing up Mike had thought Luke and Abby had gone until he heard someone knock on his office door. \n\n\"Come in,\" he said. He looked up to see Abby standing there. \n\n\"Mike, I'm sorry about before,\" she said looking as sad as she could.\n\n\"Me too, I'm just nervous about leaving the store.\"\n\n\"I was having a hard time concentrating because...,\" she stopped.\n\nMike glanced down at her short skirt that had become the required uniform and the tight halter blouse. He knew he was lucky to get the cutest and most popular girl in the high school to work there. \n\n\"Because...I think I'm in love with you,\" she said blushing. \n\nMike tried not to laugh but couldn't hold it back. \"I'm sorry,\" he said for laughing because he knew she was serious. \"Abby you really don't even know me.\"\n\n\"I do, I really do,\" she said smiling as she walked to the soft chair next to his desk. She sat down not caring about how much of her bare thighs she was showing. \n\n\"I thought you had a boyfriend,\" he said trying not to stare down at the edge of her exposed light green panties. \n\n\"I do but I'll give him up if I can have you.\" \n\nMike thought about what she was offering him. He didn't know if she was a virgin or not but she was as cute as a button. He had also made a pact with his two sisters and Amy to only sleep with them and except for the one night stand with Mrs. Sullivan and Tara's mother he had kept to his word. \"Let's think about this before we do anything.\" \n\n\"OK,\" she smiled realizing that he was at least considering it. She stood and grabbed the bottom of her halter blouse and pulled. \n\n\"What are you doing?\" Mike asked when her near perfect white breasts appeared with hard gumdrop pink nipples looking back at him. She didn't answer as she quickly pushed down her skirt and green panties at the same time. She smiled as she stood back up completely naked before him. \n\nMike couldn't speak as he looked down her smooth flat stomach at the golden mane of trimmed pubic hair resting about the thin line of her pussy. \"I thought we were going to think about this?\" he asked. \n\n\"We are but I just wanted to give you something to picture in your mind when you make your decision,\" she giggled as she did a very slow turn showing him her magnificent buttocks. \"I want you to be the first.\" \n\n\"That's not playing fair,\" he laughed as she pulled her panties back up her muscular legs and her halter top back over her firm mounds. \n\n\"All's fair in love and war,\" she grinned as she walked out of his office. \"But don't wait too long to make up your mind.\" \n\n\"My mind is already made up,\" Mike said after she closed the door. \"I just want to make sure you are not my sister.\" \n\n*****\n\n\"Abby Bradshaw,\" his father repeated later. \"Nope not a chance,\" he said answering Mike's question. \n\n\"Good,\" Mike said grinning. \n\nIt was later than evening when Meagan came over and they were downstairs playing video games again. \n\n\"Remember all the times we did this together,\" Meagan said as she finished the car race just ahead of Mike's car. \n\n\"Yeah, I remember all the times I beat you,\" he laughed. \n\n\"No way!\" she cried out as she tossed down the hand controller and jumped on top of his back. Mike grabbed her wrist and pulled her body over and quickly moved his body on top of hers. Meagan was surprised when his lips moved down to hers and their tongues meshed together. \n\n\"God I wish you were not my sister,\" Mike said when he pulled his lips away. \"I love you so much.\" \n\n\"I love you too Mike,\" Meagan said fighting back the tears that were starting to form. \"Let me up,\" she said as she pushed him off of her and walked into the small bathroom to wipe her eyes. She opened the medicine cabinet and pulled out his hair brush. \"Maybe you are not really my brother,\" she whispered as she pulled some hairs out of the brush and put them in a small envelope she had in her pocket. Last week she had found a lab that would tell her if they were brother and sister. She needed a sample of his genes and now had it. It would cost her two months salary but she didn't care. \n\n*****\n\nJim, May, Tara, Meagan, and Brad sat in the large mini-van as it sped up the steep mountain road. The weather report called for a huge snow storm which they hoped would hit after they had arrived at Mrs. Johnson's house. About half-way up the hill the snow was falling pretty hard and the roads were getting pretty bad. \n\n\"Slow Jim,\" May said for about the tenth time in the past five minutes. Her hands were white from clutching the door grip. \n\n\"I am driving slow dear,\" Jim said trying to act calm. He knew that they were almost a mile up and if they flew off the road it would be a long way down. \n\nMike and Meagan were in the far back snuggling up under a large blanket. Her fingers were wrapped around his huge sausage and were pumping it nice and slow. Right then they didn't care about the snow storm or the icy road. Mike groaned when she dipped her head under the blanket and sucked in the hard knob. And this was just the start of the wide weekend. \n\nBrad too had his eyes closed as Tara's fingers stroked his rod. The four of them had made a pact that none of them would be jealous if they switched off. Brad's had broke up with his girlfriend when he had heard about the trip to the mountain with Meagan and Tara. \n\n\"Are you all right back there?\" May yelled realizing they were too quiet. She did back because she was too nervous to take her eyes off the road. \n\n\"YES!\" Mike cried out loudly. Meagan's tongue was now licking his sac of jewels. \n\nThe snow was getting so thick Jim was having trouble seeing the edge of the road. It had covered the previous car tracks so it was just a guess as to where the paved area of the road really was. \n\nSuddenly the right front wheel moved off the roadway and Jim jerked the steering wheel back to the left. He saw the guard rail as the van slid sideways towards it. \"OH SHIT!\" he screamed just before the van dashed sideways across the road and dove into the side ditch. \n\nMeagan felt the car spinning and grabbed onto Mike's thighs to keep her balance. She didn't have time to get scared as she felt the car suddenly turn onto its side. Luckily she managed to pull her mouth from Mike's penis before she bit down on it. \n\n\"What happened?\" She asked as she tossed off the blanket and looked around. \n\n\"Is everyone OK back there?\" Jim yelled. He had hit his head on the side window but not hard enough to break the glass or to knock him unconscious. \n\n\"Yes,\" Mike yelled. \"Yes sir,\" Meagan replied. \n\n\"I'm OK,\" Brad answered as he pushed Tara's body upright next to him. \"I don't think Tara is.\" \n\nThe van was on its side on a 45 degree angle when May climbed over the front seat to check on Tara. Being a nurse she quickly discovered a pulse but the girl looked to be unconscious. \n\n\"Tara can you hear me?\" May said as she held the girl's head steady in her hands. Suddenly a groan came from her mouth and she opened her eyes. \"What happened?\" \n\n\"I think we are in a ditch off the road,\" Jim said as he tried to push open the door but it wouldn't budge. \n\n\"I think she will be OK,\" May said, \"She has a small bump on her head.\" \n\n\"I should get out and try to flag down another car,\" Jim said nervously. The snow had turned into a blizzard. \n\n\"Only crazy people like us are driving around in this,\" May said. She pulled on the side door and it opened. \"We can see anyone coming so for now stay in the van. You'll freeze to death out there.\" \n\nJim tried to restart the engine but it was dead. \"I think we all need to get the blankets out and huddle together to keep warm.\" \n\nMay pushed the middle seat back as far as it would go and then folded them back. It left an open area between the seats. \n\n\"OK everyone under the blankets,\" she said as she held up the edge. \n\nBrad, and Tara were already under the blankets and moved back as Meagan, Mike, May and Jim joined them. The six bodies were pressed so tightly together and since it was so dark they did not know whose body was pressed up against them. \n\n\"Anybody know a song to sing?\" May asked as she felt a male body pressed up against her backside. Her front was smashed up against the front of Meagan. \n\n\"We shouldn't use up our energy,\" Jim said across the mounds of young flesh between them. His hand was pressed down between one of the girls buttocks and he couldn't, even if he wanted to, get it out. And arm was curled around his hip and was touching the front of his slacks which were starting to push outward. \n\nTara knew Mike's father was in front of her when he spoke and knew it was his hard-on that was pressing against her wrist. She moved her arm a little to see if he would react but he remained quite and didn't pull away. She smiled as her arm pulled back allowing her hand to glide over his hip and land on his bulge. Her fingers curled around it and she found out where Mike got his manhood from. \n\nThe frigid air was beating on the outside of the van and the temperature quickly dropped. May was shocked when she felt the hard penis pushing against her ass but didn't say anything. It had been so long since she had sex that she didn't want to spoil things. Besides it gave them something else to think about besides freezing to death in the van. \n\nMeagan was sandwiched between Mike's parents. His father's hand was pressed down between her ass cheeks and her front was flat up against his mother. As she raised her hand to brush the hair from her face she touched May's breast. Instead of pulling it away she left it there until she felt the hard nipple form under her palm. Her heart raced as she moved the tips of her fingers around the hard bumps and gently played with them. \n\nBrad was pushed up against Tara's ass as he tried to get closer and closer to the pile of bodies. He could hear the breathing getting louder and louder and knew he was missing out on the action. Besides his ass was sticking out from under the blanket and it was getting really cold back there. \n\nMay was lost in lust as a hard-on pressed forward and back against her ass while someone played with her nipple. Her fingers moved up the girl's body in front of her until it stopped at the junction of her thighs. She smiled when she felt the girl's legs open to let her fingers in. She pressed forward until she felt the indentation of the young pussy and moved her fingers up to where she imagined the girl's clitoris to be. \n\nThe soft moans had turned into louder ones and the hands and fingers explored the pretzel shaped mound of flesh. They all were worried about what they were doing until May spoke up. \"It's OK. We have to keep warm.\" \n\nSuddenly all fear had gone and fingers were getting braver. Tara pulled down Jim's zipper and reached in to pull out his long pulsating shaft. \n\nMeagan unbuttoned May's blouse and pushed her bra cup down until the long hard nipple appeared. May moaned when Meagan's lips engulfed the tip and her tongue danced on the hard button. \n\nJim brought his hand up under Meagan's ass and cupped her nice young cheeks. He strained more to move his hand up to the waistband in her jeans and then down underneath. He dove under her panties and down over her bare ass. He tried to go lower but the waistband was too tight. Suddenly the jeans opened and his fingers moved down to the hot junction below her crack. \n\nMay released Meagan's jeans and pushed her fingers down under the girl's panties. She had never touched another female's vagina before and realized this might be her only chance. Her fingers moved through the small puff of fine hair and down into her slit. She quickly found out she was not a virgin as her finger moved deep inside. \n\nJim's curled his wrist and waited for Meagan to open her thighs to allow him to her pussy. As her legs opened his fingers moved under to the bottom of her slit and then up. He froze when he discovered someone had already beaten him to it. He moved his fingers over the hand and touched some rings. They were his wife's wedding rings and her fingers and she was finger-fucking his daughter. He pushed a finger in the tight channel and joined her. \n\n\"OH GOD!\" Meagan moaned as the two hands probe and rubbed against her pussy. She knew the front fingers belong to May but was unsure about the back fingers until she heard Jim's cry. \n\n\"Oh please don't stop!\" Jim moaned as Tara's fingers stroked him harder and tighter in her small hand. \n\nMike was the only one still upset with what was going on. He knew it was his mother's body in front of him as he dry humped her ass. The moans and cries from Meagan and his father made him jealous. He moved his hand around his mother's hip and slowly down her leg to the bottom of her skirt. He waited to see if she would object but she didn't. He smiled while his fingers made the slow journey up her hot thighs to the silky crotch between her tender thighs. He touched the dampness before pulling the elastic out enough to slide underneath and into her hot pussy folds. He quickly found her hard clit and rubbed. \n\nJim was the first one to climax from Tara's touches. He grabbed her hand and pulled it away just as he shot his load onto the back of Meagan's jeans. Meagan didn't mind because she was the next one to cum. \n\n\"OH YES!\" she screamed. Her teeth gently bit into May's nipple. \n\nTara was next to climax and May close behind. Only Mike and Brad were left still panting. May tried to help her son by pushing her hips back against him but it was just not working. She knew she had to do it as her hand moved back behind her and unzipped his jeans. She fished for and caught his huge swordfish and marveled at its size as she jerked him off. \n\n\"Now!\" Mike groaned as he filled her fist with his pleasure juices. \n\nTara's hand was stroking Brad who was almost there when they heard someone tapping on the window. \"No don't stop,\" Brad begged as Tara's fingers froze. \n\nJim peeked out and saw two large beams of light shining through the side window. He pushed the blanket away as the door slid open and a pile of snow fell down onto his head. He brushed it away and smiled as a man's face looked in the van. \n\n\"Are you all alive?\" the man asked. \n\n\"Yes,\" they all said at the same time as the blanket fell to the floor. Brad hid behind Tara as he tried to cram his hard-on back into his pants. \n\n\"Mike, is that you?\" a woman's voice asked from behind the man in the door. \n\n\"Yes,\" he answered as he recognized her face. It was Mrs. Johnson. \"Thank God you found us.\" \n\n\"We were lucky because the van was almost covered. My husband saw the blue edge and stopped,\" she said. \"Come on, let's get you all into the Jeep,\" she said as she held out her hand to May. As May climbed out of the van Irene saw the white sticky substance on the back of her dark skirt. \n\n\"How in the world did you manage to keep warm?\" she asked already knowing the answer. \n\n\"It was the blankets,\" May lied as she walked through the high drift of snow. \n\nThe Jeep was big enough to cram all of the people in as well as their small overnight bags. \"Lock it up and I'll come back for the rest,\" the man said. \n\nAs the Jeep four-wheeled up the snowy road they all introduced themselves to Irene and Tim Johnson. The vehicle pulled off the highway onto a narrow road that led up to a huge building. \n\n\"Is this a hotel?\" Meagan asked as she looked out the window at the massive structure. \n\nIrene laughed, \"No this is our mountain home.\" \n\n\"You must sell a whole lot of shoes,\" Mike commented as they made their way up the large steps. \n\n\"Yes we do and with your help we will be selling a lot more,\" Irene added. \n\n*****\n\nThe group was introduced to Irene's son Jason who was 22 years old and Beth who had just turned 18 years old. They all huddled around the large fire in the den to get warm. \n\n\"Another hour and you guys would be popsicles.\" Irene said as she stared at Mike's crotch. Surely he couldn't be that big she thought. \n\n\"Let's go to your rooms and you can get a hot shower,\" Tim said. \n\nThey followed the handsome man up the long staircase and into their rooms. \n\nAfter they showed the last one to his room Irene and Tim moved downstairs. \n\n\"Do you think they will go for it?\" Tim asked as he sat next to his wife on the huge sofa. \n\n\"I'm not sure,\" she said. \"Mike might be young but my first impression is that he is pretty smart.\" \n\n\"If we can get him to sign the contract this weekend they probably won't notice the clause.\" \n\n\"Let's play it by ear,\" Irene said smiling. \"We are going to be snowed in for a few days so let's enjoy it.\" Her mind was thinking how she could get Mike alone. \n\n*****\n\nBeth had thought this was going to be another of those boring weekends where her parents entertained clients and that Jason and she would be the perfect kids. She had planned on being home alone with her boyfriend but her father would not allow her to stay alone. She thought that she would finally lose her cherry and had given up hope that it would be this weekend until she saw both Mark and Brad. If things worked out correctly she would get her wish. \n\nBrad was standing in his bikini briefs when his bedroom door opened and the young Johnson daughter stood there smiling at him. \"Oh I'm sorry,\" she said, \"I thought this was Meagan's room.\" Her eyes never left the hotdog shape under his tight underwear. ",
        "Brad grinned after realizing it was not an accident. \"Nope she is next door,\" he said. \"I hope you are not disappointed.\" He did not make any effort to hide his rising excitement. \n\n\"Excuse me am I interrupting something?\" Tara asked as she walked into the room and stood behind Beth. \n\n\"I got the wrong room,\" the young girl said. \"Are you two...like... dating or something?\" \n\nTara laughed. \"No we are past that stage.\" She noticed Brad's six hard inches now on display under the thin cotton briefs. \n\n\"I don't understand,\" Beth said. \n\n\"We now share,\" Tara whispered in the girl's ear as she pushed her soft breasts against the young girl's arm. \n\n\"Share,\" Beth repeated. She suddenly realized Tara was talking about her. They wanted to....both at the same time...with her. She had not thought about having sex with another female before. \"I'd...better...be going.\" She moved away from Tara and almost ran down the hallway. \n\n\"Ha, ha,\" Tara laughed as she watched the girl dash away. \n\n\"Thanks,\" Brad said noticeably pissed. \"I think she liked me.\" \n\n\"No she liked that,\" Tara giggled as she pointed to the tent in front of his undies. \n\n\"Why don't you close and lock the door and we can share each other now?\" Brad asked as he moved over to her and kissed the soft flesh of her neck. \n\n\"Not enough time,\" Tara giggled. She grabbed his bulge and kissed his neck like he had just done to her. \"Maybe later.\" \n\n*****\n\nJim and May sat on the huge bed looking at the large bedroom and the expensive furniture. \"Did you ever believe we would be staying in a place like this?\" May asked. \n\n\"Not really,\" Jim replied. His mind kept thinking about what had happened in the van under the blankets. \"I'm worried about what happened in the van.\" \n\n\"Jim it happened because we needed it to. It probably saved our lives.\" May said. \n\n\"But what if someone finds out? After all we both touched Meagan's...,\" he stopped. \n\n\"And she kissed my nipples,\" May said. Her body had been on fire ever since the van. \n\n\"She did?\" Jim asked. His breathing was starting to get uneven. \"Was she the one who touched you?\" \n\n\"No it was Mike,\" May admitted. \"And, I touched him too.\" She could see him getting hard under the thin slacks. \n\n\"Mike, our son, you and he..\" Jim knew it was wrong but at the same time was hotter than he had been for a long time. \"Tara jerked me off,\" he admitted. \n\n\"I wish we didn't have to go to dinner,\" May said smiling. \"If we had time I'd give you your favorite.\" \n\nJim thought about how she could suck him all the way down her throat and lick his shaft at the same time. If anyone was better in the world at giving blow jobs he wanted to meet her. Just the thought of her going down on him was making him close to cuming. \n\n\"Calm down,\" she laughed. \"We have all weekend.\" She took his hand and led him downstairs. \n\n***** \n\n\"To a great partnership,\" Irene toasted as she held up her wine glass. Everyone else did the same and gulped down the contents. \n\nThere were two servants working the dinner meal. Andrea served the food and James worked the kitchen. They made it up to the desert when suddenly the lights flickered and then died. \n\n\"Shit we lost power,\" Irene voice rang out in the dark house. \"Do you think you can get the generator going?\" she asked Tim. \n\n\"It will take me about fifteen minutes,\" Tim said as he pushed his chair back and headed for the light from the fireplace. They always kept their flashlights in a small cabinet in the den. \"I'll help dad,\" Jason said as he followed his father. \n\n\"Now everyone please sit still until Tim gets the generator going,\" Irene said. She knew Mike was on her right and wondered just how far he would be willing to go with her. \n\nMike reached in the dark for his glass of water and was pulling it towards his mouth when he felt the hand fall onto his muscular thigh. His reaction caused him to spill almost half the glass down onto his lap. \"SHIT!\" he exclaimed feeling the cold water on his privates. \n\nIrene had to bite her lip to keep from laughing. Her whole hand was covered with water. \"Shhh,\" she whispered in his ear, \"let me dry you off.\" \n\nMike could barely see the table when he felt her fingers fumbling down onto the damp pants. He figured she had a napkin and would just dry his pants so he was not ready when her fingers pulled down his zipper and opened his pants. She pulled the pants wide apart and dabbed the cloth down onto the front of his boxers. Her fingers pushed around until it found what she was looking for. \n\n\"This is spooky,\" May said giggling. The wine had quickly gone to her head. She had heard Mike say \"SHIT\" but didn't hear anymore after that. \n\n\"I'm taking a nap,\" Brad joked. The trip and the wine had made him quite drowsy. His notion to go to sleep was quickly erased when he felt fingers on his leg. He quickly reached down to find the hard belonged to Beth who was sitting to his left. He let go of her hand and leaned back in his chair. \n\nBeth knew she was taking a chance but it was worth it. The only penis she had ever touched was her boyfriends and he didn't last but a few seconds before he spit his juices all over her hand and dress. Her fingers walked up his thigh and pushed down on the bulge waiting for her. She ran her thumb up his length and then gently pinched the mushroom head between her fingers. \n\nMike felt fingers now pushing down on his shaft and then into the opening of his boxers. The hot digits found the side of his shaft and curled around his thickness. He would have never thought to imagine that this sophisticated woman would be jerking him off at the dinner table in the darkness. \n\nIrene gasped when she traced her fingers up to the tip and then back down to the base. She had made love with three men in her lifetime and Mike had them all beat by at least three inches. She could feel her own pussy dripping as she imagined it was her pussy instead of her fingers around this wonderful shaft. \n\nSuddenly the lights flickered on but quickly died again. \n\nMeagan's eyes tried to adjust when the lights came back on and she sat in shock after she had seen Mrs. Johnson's fingers in Mike's boxers. \n\nA few seconds later the lights came on and stayed on. Meagan looked down to see Mike's pants zipped up but totally drenched. \n\n\"Sorry I spilled my water,\" Mike said as he stood and quickly walked towards the stairway. \n\nBeth too had just enough time to move her fingers from Brad's bulge. She blushed when he turned and smiled at her. \n\nA few minutes later Tim and Jason returned and so did Mike with a new pair of pants. When dinner was over they all moved into the large den and sat around the roaring fire. \n\n\"We are tired so we are going to bed,\" May said as Jim and she stood up. \n\n\"Me too,\" Brad said. It was only nine PM but he was totally shot. \n\nAbout ten minutes later Beth yawned and stretched her arms out. \"See you all in the morning.\" \n\nMeagan and Tara also went up the stair with Jason right behind them. It left Mike with Tim and Irene. \n\n\"Your father told me you are the legal owner of the store Mike,\" Tim said. \n\n\"Yes, my grandfather left everything to me because he knew I would keep it in the family.\" Mike answered. He kept peeking at the bottom of Irene's dress that had slowly crept up her pure white thighs. \n\n\"You know it's going to be tough to keep the Brown name on the store,\" Irene said. \"We would really like to put the Super Shoe Mart sign out front.\" She noticed his face turning sour and quickly added, \"But we can put Mike Brown Manager on the front window.\" \n\n\"I thought we had a deal that the store would remain \"Brown's Shoe Store?\" Mike asked now sitting up. \n\n\"So did I,\" Irene said smiling. \"But I talked to my lawyers and they said it had to be Super Shoe Mart.\" \n\n\"That's too bad,\" Mike said as he stood up. \"A deal is a deal.\" He turned to walk up the stairs. \n\n\"Wait,\" Tim said seeing Mike totally upset. \"Maybe we can work something out?\" \n\n\"A deal is a deal,\" Mike repeated as he walked away.\n\n\"Well that didn't go very well,\" Tim said. \n\n\"Don't worry we have all weekend,\" Irene smiled. \n\n*****\n\n\"God Jim can't you wait one second?\" May exclaimed as he pushed his naked body up against hers as she washed her face in the bathroom sink. \n\n\"Not after today I can't,\" Jim panted. Touching Meagan and having Tara jerk him off was too much excitement for him to be calm. \n\n\"Go to the bed and I'll be there shortly,\" she giggled. \"Don't start without me.\" \n\nMay too was burning up after touching Meagan. She had never thought that sex with another female would be so exciting and to have her son finger her pussy was so nasty. She didn't bother putting on her nightgown because she knew it would quickly be taken off. She smiled at her husband's hard-on as it pointed upward ready for her lips. \n\nIt was fantasy time for Jim as he closed his eyes and pretended it was Tara's or Meagan's young mouth moving up and down his long shaft. His wife must have been thinking the same thing because she popped her mouth off and said, \"Don't you wish it was Tara's tight lips doing this?\" \n\n\"Ohhh,\" he moaned. \n\n\"Or Meagan sucking you deep like this?\" Her mouth moved all the way down to the base and back to the tip again. \n\n\"Oh God yes,\" Jim moaned. He was as hard as he could ever remember. \n\nMay was also thinking it was Mike's hard prick between her lips. She tightened her lips around the pink pole and licked in circles around the spongy tip. She was not surprised when his hips shot upward and he filled her cavity with his hot juices. She took two gulps and continued to suck again. \n\n***** \n\nBrad was almost asleep when he heard his door being opened. Before he could turn around to see who it was he felt a body slide into the bed next to him. \n\n\"Surprise,\" Beth whispered. She pushed her baby doll covered body up against his. \n\n\"Does your mommy know you are here little girl?\" Brad asked. \n\n\"No,\" Beth giggled, \"And I'm not going to tell her.\" \n\n\"Just what is it that you are looking for?\" Brad asked, playing the game. He felt the young girl's trembling fingers move down over his chest to his stomach. She pulled up the waistband of his boxers and slithered her hot fingertips underneath. \n\nShe touched his hard tip and quickly pulled her fingers away. \n\n\"Go ahead it won't bite you,\" Brad laughed. \n\n\"Will you show me what to do?\" she asked as her finger fumbled onto his hot wienie. \n\nBrad lifted his hips and pushed down his boxers. \"Sure, just like this,\" he said as he guided her hand slowly up and down. After a few strokes he pulled his hand away and felt her not miss a stroke. \n\n\"How am I doing?\" she giggled. \n\nAs Beth jerked him off Brad noticed the door again open and a body come in. \n\n\"What have we here?\" Tara asked as she sat on the bed next to Beth's scantly covered body. \n\n\"Show and tell,\" Brad laughed. \n\n\"Can I join you?\" Tara asked. \n\n\"I guess so,\" Beth answered as she pushed over to allow Tara behind her. The young virgin was now in the middle and stopped stroking Brad when she felt Tara's hand moving up her bare leg. \n\n\"Are you two going to share me now?\" Beth giggled as she lifted her hips to allow Tara to pull down her panties. \n\nTara and Brad grabbed the bottom of the girl's baby doll top and lifted. Beth's naked body fell back onto the soft bed. \n\n\"What are you going to do to me?\" Beth asked as she watched Tara remove her nightgown. \n\n\"We're going to take you to heaven,\" Brad laughed as he lowered his lips to her tiny pink and very hard nipple. \n\n\"Yes heaven,\" Tara repeated just before she sucked in the other tiny cherry. \n\n***** Irene knew her husband wouldn't go for her to sleep with the young stud Mike. Tim had always been protective of her and most of the time jealous that she would find someone else. He knew she was the one with the money in the family since she had taken over the Super Shoe Mart store when her father died. She waited for almost an hour in bed to make sure he was sound asleep before she lifted the covers and slipped quietly out of bed. She held her breath as she tiptoed to the door and slowly opened it before she moved out into the hall. \n\nMike couldn't sleep because he kept thinking about how he had been set up. Promise you one thing but offer you something else. He was boiling mad when he heard a slight tapping on his door and then the door open. He focused on the shape of the woman coming into his room and knew it was Irene Johnson. \n\n\"Mike, are you awake?\" she whispered as she moved to the side of his bed. \n\nThere was no way he wanted to talk to her so he pretended to be asleep. \n\nIrene did not hear or see a response so she slowly lowered herself onto his bed. The light from a nightlight in the corner was enough for her eyes to take in his muscular shoulders and chest. At 45 years old Irene had seen the young studs in the gym but never thought she would get a chance to fuck one of them. Until now. \n\nHer fingers moved under the sheet and over to his hip. She waited for a reaction but did not get any so she continued her trip up and over his boxers until she found the opened fly. \n\nMike tried to control his breathing as she once again pushed her fingers into his underwear and once again took a hold of his pulsating shaft. \n\n\"You monster,\" she whispered. She now had the time to accurately measure his thickness and length. She pulled back the sheet with her free hand and stared at the tower of power in her grasp. \n\n*****\n\nMay had finished off Jim in a short time and was frustrated as she lay in the bed with him snoring next to her. Her throat was dry and she had a horrible taste from the blowjob so she put on her robe and headed down to get a drink of something from the kitchen. \n\nAfter a glass of milk she moved to the top of the stairs just in time to see someone go into her son's room. She stopped when she realized who it was. Steam was coming from her ears as she moved over to the door and listened to see if they were going to do it. After a few minutes she slowly opened the door and peeked in. \n\nA startled Irene turned to see May standing in the doorway watching her stroke her son's huge cock. \"Oh God, I...\" Irene started to say before she let go of his tool and quickly moved passed May who stood sternly with her arms crossed across her chest. \n\nMike didn't realize his mother was there until he heard Irene's exclamation. He didn't want his mother to know he was awake so he continued to pretend to be asleep. \n\nMay heard the woman's bedroom door close and then closed Mike's door. She moved slowly over to his bed and saw his beautiful pink and hard shaft pointing upward at his navel. \n\n\"Mike...\" she whispered not knowing if he was awake or not. \n\n\"Mike,\" she whispered again. Still no movement. May smiled because she knew he had to be awake after all that had just occurred. She knew he was pretending to be asleep. If he wanted to play games so could she. \n\n\"Aggh,\" he moaned when her lips gently kissed the tip and then traveled slowly down the large vein underneath his prick. Never had he ever imagined her giving him a blowjob and now it was about to happen. \n\nHis knuckles were white as he gripped the bed as her mouth moved over his tip and his penis slowly disappeared down her throat. He had received blowjobs before but none like this. Her throat vibrated as he moved in and out of it. Her teeth pretended to bite him but retreated and her tongue was doing a constant flicking up and down his tender flesh. \n\n\"Ohhhhh...oooohhh....ohhh....OHHH!\" He moaned as the hot lips and mouth engulfed him. \"AHHHH!\" he cried out when he climaxed. \n\nThere was no doubt now that they both knew he was fully awake and was enjoying every second of her masterful blowjob. His hands moved to her head and he held it tight as he emptied his last load of pleasure deep down her throat. Finally his body collapsed and he dropped his hands to his sides. \n\nMay smiled as she wiped her mouth on the sheet. She moved her lips up to his and gently kissed him. \"Don't let that evil woman ever do that to you,\" she giggled before she turned and walked out of his room. *****\n\n\"God what are you doing to me?\" Beth cried out when she felt something wet pushing against her tight hymen. Brad's mouth was still nibbling on her young bud so it had to be Tara's lips and tongue attacking her down below. \n\nBrad's fingers flowed over the soft and tender body while he moved his mouth from breast to breast. Her body was now wiggling around on the bed while hands and lips took aim at her pleasure points. \n\n\"Please do it to me,\" Beth whispered in Brad's ear. She had been a virgin long enough. \n\nBrad smiled as he pulled Tara's lips from her virgin gate and replaced her head with his stomach. He could see Beth's eyes opened wide looking into his as he pushed his hard rocket down her tight slit. \n\n\"Brad wait,\" Tara said as she grabbed his hips to keep him from pushing downward. \n\n\"WHAT?\" He asked in desperation. He had never deflowered a girl before and finally had his chance. \n\n\"This might mess up our deal with Super Shoe Mart,\" Tara whispered. \n\n\"FUCK!\" Brad groaned. \"Just an inch or two please?\" \n\n\"Yes an inch or two will be OK!\" Beth cried out. She had heard every word Tara had said. \"I won't tell, I promise.\" \n\n\"DAMN,\" he said as he pushed back and away from her ready and willing body. \n\n\"I think you need to go back to your room,\" Tara said to Beth who was trying to pull Brad back up on top of her. \n\n\"Fuck you both,\" Beth cursed as she stood up and grabbed her baby doll top and panties. \n\n\"Wow, did she turn nasty,\" Tara laughed as they watched her storm out the door. \n\n\"She's right you know,\" Brad grinned. \n\n\"About what?\" \n\n\"We should fuck us both,\" he laughed. \"I hate to waste what we started.\" \n\n\"I thought you would never ask,\" Tara said as she moved her now naked body in the same place Beth was only seconds before. \"Come and give me your love.\" \n\n\"Poor little rich virgin girl,\" Tara moaned as Brad's hard six inches moved deliciously inside of her. Tara's mind was on the hard nine or more inches of Jim Brown's shaft she had in her hand in the van. \"Fuck me,\" she moaned. \n\n*****\n\nThe next morning the mood was quiet subdued at breakfast. Beth would not even look at Tara or Brad and Irene was keeping her distance from May. The first night did not go as planned for most of them. \n\n\"Well the snow has stopped,\" Tim announced as he and Jim came in the front door. \"We managed to get the Van out of the ditch with just a few scratches on the front bumper. The road crew has been out and the roads are now passable.\" The two men looked at the stone faces and wondered who had died. \n\n\"Anyone want to go up to the ski lodge?\" Jason asked. \n\n\"We didn't bring any skis,\" Mike replied. \n\n\"We have a lot of different skis,\" he said. \"And, it's our lodge and lift.\" \n\n\"You have your own ski lift?\" May asked. \n\n\"It's only got two cars and it takes at least thirty minute to get to the top.\" Tim added. He could see the wealth of his family was causing some alarm to this middle class group. \n\n\"I'd like to go,\" Mike said. \"I'm not that experienced.\" \n\n\"Why don't you and I go in the first car and we can talk some business along the way?\" Irene quickly injected. \n\n\"Sure, I guess that's OK,\" he said looking at his mother who told him last night to not let the evil one go down on him. \n\n\"How many can fit into a car?\" May asked. \n\n\"Only two really,\" Irene answered. \"If some of you cannot ski you can come up to the lodge anyway. There is a fantastic view of the valley and a great fireplace.\" \n\nIt was 9:00AM when Irene and Mike jumped in the first car. The rest of the crew waited for their turn. \n\n\"I'm sorry about last night,\" Irene said sitting across from Mike. \"I hope your mother is not too upset.\" ",
        "\"It didn't make her too happy,\" he said as he looked out the window at the winter wonderland below. \n\n\"How does two hundred thousand sound to you for the store?\" Irene asked figuring she had best get down to business. \n\nMike laughed. \"We are pulling in about ten thousand per month and expect that to double in a year.\" \n\nIrene smiled. \"That was just some bait and since you are not biting how about five hundred thousand?\" She had done her homework and had calculated the store at that location could gross up to thirty thousand per month and if she brought in some of the Super Shoe Mart brands the sales would go out the roof.\n\nMike did not expect her to go that high this fast which meant she would go even higher. \"Still not much bait,\" he bluffed. \n\n\"How old are you?\" she grinned. \"How about this? Six hundred thousand final offer but you have to sign a contract to be the store manager for at least three years and sign a non-compete contract for up to five years.\" \n\nShit Mike said to himself. He tried not to look happy or excited. \"How much control would I have at the store?\" \n\n\"You will only have to answer to me and that will be only for expenses and profits. How you run the store is up to you.\" \n\n\"I can hire and fire whomever I want.\" \n\n\"Yes.\" \n\n\"Benefits for the employees?\" \n\n\"Full medical and vacation.\" \n\n\"Salary?\" \n\nIrene smiled. She knew he was now taking a serious bite. \"Negotiable.\" \n\n\"Isn't that what we are doing now?\" \n\n\"Not really,\" she smiled. She could see the ski lodge coming up. We will do that in the ski lodge. They both remained silent as the car slowed to make the turn. They opened the door and jumped into the soft mound of snow. Suddenly Irene hit the emergency stop button on the last pole and the ski lift came to a halt. \n\n\"Why did you do that?\" Mike asked. \n\n\"So we can do some serious negotiating.\" She laughed. She ran to the door of the A frame house and opened the door. Before Mike could even make it inside she had pushed the switch and valve on the gas logs and the fire place was full of flames. \n\nThe small building took only five minutes to heat up. Mike watched as Irene pulled a stack of blankets off the shelf and spread them in front of the warm blaze. Neither of them said a word as they undressed. \n\n\"You don't have to do this if you don't want,\" Irene said as he pushed down his snow pants. \n\nMike turned and watched as she pulled the black bra off of her ivory white breasts that had zero sag. He wondered if they were 100% real or not. Her long dark brown nipples pointed upward. \n\n\"I thought we were negotiating?\" he asked smiling as she pushed her matching black lace panties down her even more white thighs. His eyes stared at her bald pussy mound. \n\n\"We are,\" she giggled. \"Hurry before the rest of them climb up this mountain to see why the lift is down.\" \n\n\"Does this help my cause?\" he asked as he pushed his boxers over his long hard shaft. \n\n\"OH YES!\" she said as she moved down on the blankets and opened her legs showing him her rose pedals and hard clitoris. \"Definitely a big bargaining tool,\" she laughed. \n\nMike knew his salary would be in the range he expected. His biggest worry was the name on the store. He had promised his Grandfather years ago that the name on the store would be Brown. As he guided himself down into her arms and legs he kissed from the top of her shaved slit up over her navel to the more than perfect breasts. His fingers explored the orbs to see if he could detect any difference. He couldn't. \n\n\"You thought they were fake, didn't you?\" She giggled. \n\n\"Yes,\" he admitted. His lips suckled on the hard tip. \n\n\"I take care of them,\" she sighed. His shaft was now pushing against her upper thigh and was getting closer to where she had to have it. She pushed her body lower until the hard carbon steel tip pushed against her dripping hole. \"Put it in,\" she begged. \n\nMike smiled as he grabbed his shaft and rubbed it up and down her moist valley. As he passed over her entrance she pushed up but he held his cock back. \"Mike please,\" she moaned as she bit his earlobe. \n\nHis training with Betty was now paying off as he kept control of the sex and his passion. He continued to rub up and down across her hard acorn clit. Her arms kept trying to pull him in but he held back for the next two minutes. \n\n\"GOD PUT IT IN!\" She cried as she tried to grab his ass and pull downward. But he was too strong for her. \n\n\"But we are still negotiating,\" he whispered. He pushed his mushroom head inside but quickly pulled it out again. \n\n\"Oh God, whatever you want is yours,\" she cried. \"Just fuck me.\" \n\n\"I want 70,000 thousand to start with a bonus to 100,000 if we double our sales in a year.\" He pushed the tip in again and held it there waiting for her answer. \n\n\"Ahhh,\" she moaned. She had only wanted to give him 50,000 to start but right now she didn't care. \"Yes please...\" \n\nMike held his shaft back with about two inches inside. \"We name the store Brown's Super Shoe Mart.\" \n\n\"Mike I can't..\" she cried. He pulled his prick out again and rubbed it teasing across her damp hole. \n\n\"OK!\" She screamed. \"IT'S FUCKING BROWN'S SUPER SHOE MART! NOW FUCK ME!\"\n\nMike didn't hold back as his hips pushed his whole long prick deeply into her body where no one had ever been before. Her eyes and mouth opened wide when he hit bottom. \"Oh shit, I never knew it would feel like this!\" Her legs curled around his muscular hips to let him even deeper inside. \n\n\"Now it's my turn to negotiate,\" she said as her body pushed up and down under him. She squeezed her inner muscles to milk his rod. \n\nMike now was breathing heavy and was wanting to cum inside of his new boss. \"What do you want?\" \n\n\"I want to fuck you every month when I make my financial visit,\" she said. Her body was about to shoot off the mountain. \n\n\"Just once?\" he laughed. \n\n\"No fuck me as many times as you can,\" she cried as her body exploded. Her fingernails clawed into his back. \"OH SHIT I'M COMING!\" Luckily her screams did not start an avalanche. \n\n\"Me too Boss Lady!\" Mike groaned as he sprayed his pleasure juices deep within her.\n\nIrene quickly got dressed and went out to energize the lift again. They still had a half an hour before the second car arrived. \n\n\"Is there anything else we can negotiate?\" Irene asked as they sat on the sofa. \n\n\"I want to redo my office. Do you have any ideas?\" Mike asked. \n\n\"I think a large settee that pulls out into a bed will be nice. Along with a bar and large screen TV,\" she added. \n\n\"Now you and I are thinking alike,\" he smiled. \n\n\"Well I want it to be nice since I'll be spending a lot of my time there,\" she giggled. \"There is one thing I would like for you to do before you leave her this weekend.\" \n\n\"Sure, name it.\" \n\n\"I want you to make love to Beth.\" \n\nMike turned and looked at her. \"You sure?\" \n\n\"Yes, it has taken me 45 years to discover what a real man feels like and I don't want her to wait as long.\" \n\n\"Do you think she will go for it?\" \n\nIrene laughed. \"She is hornier than I was at that age. Just take it easy on her because she is petite.\"\n\n\"Deal,\" he said as he held out his hand. \n\n*****\n\n\"What happened to the lift?\" Tim asked suspiciously when he arrived in the second car. \n\n\"I think it must have popped a circuit breaker,\" she lied. \n\n\"The circuit breakers are down at the lodge,\" Tim said. \n\n\"Well how do I know? Do I look like an electrician?\" She said as she turned and walked away.\n\nThe rest of the folks arrived and Irene and Mike were the first to go down the slope. She laughed when he wiped out only 25 feet down. Finally he made it to the bottom and saw her sipping on a cup of coffee on the glass covered patio. She waved and laughed. \n\nThe rest of the families made it down just before dark. After dinner they all sat around the large family room. \n\n\"Mike and I have an announcement to make,\" Irene said as she pulled the young stud to his feet next to her. \n\n\"We have agreed verbally to a partnership with Brown's Shoe Store and Super Shoe Mart.\" \n\nEveryone clapped except for May and Jim who were somewhat pissed that their son had agreed to a deal without asking them their opinion first. \n\n\"I think we need to talk to our son before anyone agrees on a deal,\" Jim said as he stared at Mike. \n\n\"Don't worry Dad you will like what you hear,\" Mike said smiling. \n\n\"First of all the new store will be named \"BROWN'S SUPER SHOE MART,\" she said. Again everyone clapped even Jim and May. \n\n\"Secondly we will pay Mike $600,000 for the store.\" \n\n\"Holy shit,\" May whispered in her husband's ear. They had hoped to get $100,000 for it.\n\n\"Mike will be totally in charge of operations and we will help upgrade the facility with new lighting, fixtures and furniture.\" \n\n\"There are some other things to work out but they are minor,\" she said smiling. She turned and hugged Mike's strong body to hers. \n\nMeagan and Tara ran over to hug their suddenly well off brother. The rest of the families did the same. \n\n\"And now everyone must dance,\" Irene announced as she waved at Angela who stood by the volume control. She quickly grabbed Mike's hand and pulled him into the center of the room. \"Do you think everyone is happy?\" she asked as she pushed her thigh between his legs and rubbed it against his growing bulge. \n\nMike had noticed Tim had not smiled since he came down from the mountain. He knew he has suspected something had gone on between him and Irene. \"Your husband is not too happy.\" \n\n\"Fuck him,\" she said. His hard-on was now at full staff. \"Do you mind dancing with my daughter now?\" \n\nMike laughed realizing she had gotten him hard for Beth. \"Sure that would be great.\" \n\nIrene broke away from Mike and pulled Beth from Jim's arms. Beth smiled as she quickly flew across the room and into Mike's arms. \n\nHer body immediately pressed against his stomach and her eyes opened wide when she felt his huge package. His hands moved down her small back to the top of her petite ass. He could feel the straps of the thong under her thin dress. \n\n\"Would you like to show me the rest of the house?\" he whispered. \n\n\"Really?\" she asked with an ear to ear smile. He nodded his head yes. \n\nThe rest of them were too busy rubbing bellies to see them leave the room. \n\n*****\n\n\"I didn't know that you were a good skier,\" Tara whispered in Jim's ear as they danced in the far corner of the large room. \n\n\"You weren't so bad yourself,\" Jim whispered back. His hands were pushing down over the top of her thongs under the slinky dress. \n\nTara pushed against his long dong and remembered how hot it felt in the van. She had seen Mike leave with Beth and now had hoped she would do the same with his father. And hers too. \n\n*****\n\nBrad stood looking out the glass windows on the patio when he heard footsteps behind him. He turned to see Angela with a tray of drinks. \"Would you like a drink?\" \n\n\"Only if you have one with me,\" he said smiling. \n\n\"I'm not supposed to drink with the guests,\" she giggled. \n\n\"I won't tell.\" \n\nAngela peeked back at the closed door and sat down her tray. \"It gets pretty lonely up here,\" she said as she took a big gulp of the wine. \n\n\"Where do you sleep?\" Brad asked. He noticed she was about his age and had a dynamite body under her uniform. \n\n\"Behind the kitchen,\" she smiled. \"Would you like to see it?\" \n\n\"Sure.\" \n\n*****\n\n\"I'm so proud of Mike,\" May said to Meagan. \"I remember when you two were growing up when you used to play shoe store. Who would have guessed the game would now turn out to be real?\" \n\n\"Would you two ladies like to dance?\" A voice asked in front of them. They looked up to see Tim holding both of his hands out. \n\n\"With both of us?\" Meagan asked with a grin. \n\n\"Sure, we have more females than males.\" \n\nMay looked at Meagan and they grinned at each other. \"Why not?\" May said as she took Tim's hand while Meagan took the other. \n\n\"How do we do this?\" May asked. \n\n\"Like this,\" Tim announced as he curled an arm around each female and pulled them into his body. Their faces were only inches apart as they swayed together across the room. \n\nMay felt Meagan's breast crush against her own but did not pull back. She remembered how nice Meagan's lips were on her hard nipple in the van. None of them really cared if anyone saw them when their lips all pressed together or when Meagan's tongue flicked on May's lips to get her to open them. As her lips opened both Meagan's and Tim's tongues slipped in. \n\nIrene smiled as she watched the couples dancing around the room. Tim's hands were cupping both May's and Meagan's buttocks. In the corner Tara's thigh was rubbing up and down Jim's zipper. She felt someone tap her on her shoulder and turned to see her son Jason.\n\n\"Wanta dance Ma?\" he asked smiling. The five gin and tonics had created a big buzz. \n\n\"Sure baby,\" she answered as she moved into his arms. \n\n\"So what did you and Mike do at the lodge today when you were alone for such a long time?\" he asked as he tried to pull her body into his but she held him back. \n\n\"I think you have had too much to drink,\" she answered while she pushed him back. \n\n\"You can do it with a stranger and not with me?\" \n\n\"Jason you are drunk. Let me go,\" she begged. His hands were pulling down the shoulder straps of her dress. She quickly grabbed them and pulled them back up. \"Someone will see us.\" \n\n\"We are all alone,\" he laughed as he found the zipper tab on the back of her dress and pulled down. \n\n\"Honey you don't want to do this,\" she said as she again tried to push him away. \"I'm your mother.\" \n\n\"Shhh,\" he whispered. He again pulled on her shoulder straps and they fell down her trembling arms. He looked down at her wonderful breasts and hard dark nipples resting above the semi-cup bra. \n\n\"Jason please...\" she begged again. His lips fell downward and captured one of her hard digits. \n\n\"Daddy is fucking both May and Meagan,\" he whispered as he released the front bra clasp and watched it fall at her feet. Only her dress and panties remained. \n\n\"We'll both be sorry for this,\" she whimpered. His fingers pushed the dress over her hips until it fell on top of the bra. \n\n\"You know why I broke off the engagement with Denise?\" he asked while sliding his fingers into the waistband of her black panties. \n\n\"No,\" she said panting for breath. \n\n\"Because there's only one woman I really want,\" he smiled when he saw the pink gash of her hairless pussy as the panties pulled away. \n\nThe room started spinning in Irene's head as she felt the cool leather of the large sofa under her ass. Any resistance she had was now gone as she lay with her legs wide apart awaiting his body to slide up between them. She closed her eyes to prevent seeing his face and clutched her hands behind his back when he first penetrated her hot oven. \n\n\"Oh baby come to momma,\" she whispered. \"Come to momma.\" \n\n*****\n\n\"Slow down,\" Mike said to Beth. She had jerked down his boxers and had grabbed his hard-on so tight it hurt. \"This is not a race.\" \n\n\"Please give it to me,\" she begged. She had stripped off her dress, bra and panties before they even entered the bedroom. \n\n\"Can I get rid of these stuffed animals first?\" he laughed as he tossed them across the room. \n\n\"Yes,\" she giggled. \"I have something new to play with now.\" Her fingers again stroked up and down his length. \n\n\"Come here and let me show you what it's all about,\" he said as he pulled her body up until her pussy was above his face. He looked over her young peaks as her hot virgin pussy dropped down to his lips and his tongue snaked between her moist folds. His tongue pushed hard against her hymen. \n\n\"OH MIKE!\" she screamed. Her body quickly pushed downward until the tip of his tongue slipped into her. She had never figured she would loose her virginity this way. \n\nMike held his tongue upward and tried to take a breath when it broke through her barrier. He had almost three inches inside when she pulled up and away from him.\n\n\"I thought you were a virgin,\" he said as she lowered her hot hole down until it pushed against the tip of his rod. \n\n\"I am...sort a,\" she giggled. \"Your tongue was the first thing not with batteries to enter me.\" \n\n\"Fuck me,\" he laughed. \n\n\"OK,\" she said as she did what he said. \n\n*****\n\nTim sat on the large master bed as the two females undressed each other. He had almost freaked out when his wife fucked the young stud in the lodge before but now realized there were some benefits if he played the same game. He lay back on the bed naked with his six inch shaft pointing upward waiting. They were taking too long. \n\nMeagan moved both of her hands up to cup May's boobs at the same time the woman did the same to her. They had forgotten about Tim and were enjoying the moment. As their lips met again their fingers explored the hot slits down below. \n\n\"Hey come on,\" he said. It was fun watching two women going at it but he wanted to get off too. His fingers curled around his hard-on. \"Girls..,\" he said while watching them curl down to the soft rug in the middle of the floor. \"What about me?\" \n\nMeagan heard his pleas and smiled as she positioned her body opposite of May's that allowed their mouths to pushed into the hot damp slits in front of their faces. \n\n*****\n\n\"Are you sure about this?\" Jim asked Tara. The girl was on her hands and knees. \n\n\"Yes, I'm your doggie,\" she giggled. Her small fingers reached back to spread her cheeks. \n\n\"Woof!\" Jim barked as his prick moved under her buttocks into her small damp pussy. \n\n\"I'm supposed to say WOOF!\" she screamed as his long nine inches pushed deeply inside of her. \n\nJim moved his hips back and forth and slapped her ass lightly each time his stomach smacked against her hips. \n\n\"It feels so good Jim,\" she moaned. \n\n\"Please call me daddy,\" he laughed. \n\n*****\n\n\"The bed is not very big,\" Angela said while sitting on it next to Brad. \n\n\"You don't need that much room for sleeping,\" he grinned. His fingers pulled her long dark hair away from her tender neck and replaced it with his lips. \n\nSuddenly Angela pushed him on his back and quickly unzipped his fly. Her fingers pulled out his hard-on and within seconds her lips sucked it deeply into her throat. \n\n\"God you are horny aren't you?\" Brad laughed. \n\n***** Irene was prepared for her son's shaft to enter her when his body suddenly froze and stopped. His dead weight collapse down onto hers. \n\n\"Jason?\" she said as she tried to push him off but he was too heavy. She pushed his head upward and saw his eyes closed. Shit he had passed out. She against pushed but could not move him. \n\n\"Do you need some help miss?\" James asked as he pulled the drunken body off of hers. His eyes never left her opened pussy folds. \n\n\"Thank you James,\" she said smiling. She didn't close her legs or try to cover her body. \n\n\"Would the madam like for me to fuck her?\" he asked smiling. \n\n\"Yes James that would be very nice,\" she giggled. After all it had taken her a long time to select a cook who was a masterful lover as well as a chef. \n\nHer white legs curled around his dark ass as he shoved his ebony pole into her. \n\n*****\n\n\"We better head back today,\" Mike said as they all sat around quietly eating breakfast. \"We have a lot to do at the store.\" \n\n\"I'll get a new contract prepared and will get to you by Wednesday,\" Irene said as she downed her orange juice. \n\nThe snow had almost melted and the roads were dry as the van traveled back to town. Again not much was said as they all sat thinking about the weekend and what had occurred. Mike dropped off his mother and father and then Meagan, Brad and Tara.\n\nIt was late Sunday afternoon and Mike did not expect anyone in the store but was surprised to see a car parked in front. He unlocked the door and found the store front empty. The storeroom was empty as was the bathroom area. When he opened his office door he heard soft music playing and saw a dim lamp turned on in the corner. ",
        "\"Hello?\" he said as he moved inside the door. \n\n\"I'm glad you made it back,\" a soft feminine voice said from the sofa. Mike walked around it and saw Abby lying on her back wearing a raincoat. \n\n\"Thanks, what are you doing here?\" \n\n\"Meagan called this morning and told us you were coming back. I've been waiting for you.\" \n\n\"Ummm,\" he said as he sat down at her bare feet. \"How long have you been waiting?\" \n\n\"Two hours.\" \n\n\"Why are you wearing a coat?\" \n\nShe giggled. \"Why don't you unbutton it and find out?\" \n\nMike smiled as his fingers pushed the bottom button through the hole and then the second one. After he finished the row he sat back. \"Why don't you do the honors?\" \n\nAbby bit her lower lip and grabbed the coat in two hands. \n\nMike had though her body was perfect the first time he had seen her but now he knew it. Tiny blonde hairs led up to the junction of her legs where they grew into a sparse gathering of corn silk tendrils covering the thin line of her virgin slit. \n\n\"Are you going to just look?\" She giggled. \n\n\"You are amazing,\" he said. \n\n\"I love you Mike,\" she said as she slowly opened her thighs showing him what no other man had seen before. \n\n\"Abby, you don't know...\" he stated to say.\n\n\"Shhh, hurry and take off your clothes.\" \n\nMike did as she requested and again sat down at her feet. He picked up a foot and lightly kissed her ankle, then her calves and then slowly up the inside of her soft thigh. \n\nNeither said another word as his mouth found and captured her soft rose pedals and his tongue tasted her sweet untouched nectar. When she had reached the point where her moans were consistent Mike moved his mouth up to lick and taste her cherry tips. \n\n\"Oh Mike,\" she moaned. Her leg was now pressing against his hard-on and her hand snaked under him to explore his long shaft. \"It's so big.\" \n\n\"Get on top of me,\" he said as he moved his body to the side to allow her to slide on top. \n\nHis mouth moved up to hers as his fingers moved behind her to touch the most perfect ass he had ever seen. It was more than perfect. \n\n\"Do it please,\" she whispered. \n\nMike remembered Beth asking for the same thing. \"We have time,\" he said. \n\n\"No we don't,\" Abby grinned. \"I'm on the clock.\" \n\n\"Overtime!\" he said laughing. \"Well we better get to it.\" \n\nAbby opened as wide as she could and was in control as she grabbed his shaft and aimed it at her virgin gate. \"It's not going in,\" she gasped. \n\n\"Relax,\" he said. \"When you are tight it makes it worse.\" \n\nAbby smiled and did as he said and suddenly felt the tip press through the membrane. \"Ahhh,\" she moaned both in pain and in pleasure. \n\n\"Go slow,\" he said as he nibbled on her dangling earlobe. \n\n\"It's going in,\" she said while taking a big breath. \"Oh God.\"\n\nIt took almost ten minutes for Abby to reach her max. \"Now we are one,\" she giggled. \n\nMike had not felt anyone as tight as Abby was at that moment. \"We definitely are one.\" He felt her start to pull upward and held her ass down. \"Don't move. Just stay like this for a while.\" \n\nAbby pushed back and looked into his eyes and he in hers. \"I love you.\" \n\nMike knew at that moment who he loved and it wasn't her. \"Abby don't say that.\" He lifted her body off until his prick popped out. \n\n\"What are you doing?\" she asked. \n\n\"I'm going to go find the woman I love,\" he said. \n\nAbby just lay there watching as he dressed quickly and left the building. \n\n*****\n\nHe rang the doorbell and waited for someone to answer it and saw a light come on and a shape come to the door. The door opened and Tara stood there. \n\n\"Mike, what are you doing here?\" \n\n\"Tara I a...\" \"Who is it?\" a voice asked from behind her. \n\n\"It's Mike,\" Tara answered. She moved to the side. \n\nMike smiled when he saw Meagan standing there. \"I had to see you.\" \n\n\"Me?\" she asked. \n\n\"Yes, can I talk to you alone?\" \n\n\"I'll leave you two alone,\" Tara said. \n\nThey watched her walked back up the stairs to Meagan's room. \n\n\"Meagan I have to tell you something,\" he said as he pulled her body to his. \n\nMeagan closed her eyes. \"What?\" \n\n\"I love you,\" he whispered as he kissed her neck. \n\n\"I know,\" she whispered back. \n\n\"No I mean I really love you. I don't care if you are my sister. I want to marry you.\" \n\nOh God, she thought. \"I love you too so much. I can't explain it now but can we wait a week before I give you my answer?\" \n\nMike pushed her head back and brought his lips to hers. \"I'll wait whatever it takes to make you my wife.\" \n\n\"Good,\" she said with tears of joy. She watched as he turned and walked away. \n\n*****\n\nA week later Mike again stood on the doorstep of Meagan's house and rang the doorbell. \n\nThe door opened and Meagan stood there not smiling. \"Come inside we have to talk.\" \n\nMike knew it was bad from the tone of her voice as he moved past her into the house. She took his hand in hers and started crying. \"Meagan,\" he said as he wiped her eyes with his finger. \"It's OK if you don't want to marry me I understand.\" \n\nShe took his hand and led him around the corner to the den. \n\n\"SURPRISE!\" \n\nMike jumped back totally shocked by the room full of people standing there with drinks in their hand. He turned and looked at Meagan who was now smiling. \n\n\"Mike. I had our DNA tested and we are not brother and sister.\" Tears again flowed down her cheeks. \"I'll marry you.\" \n\nMike could not remember if he had ever really cried before but suddenly his eyes opened up and when he kissed her their tears came together. \n\n\"TO MIKE AND MEAGAN!\" Jim Brown shouted. Thank God he had not gotten Meagan's mother pregnant that night. \n\nTwo month's later Brown's Super Shoe Mart opened with lines around the corner. Irene stood there smiling as Mike cut the ribbon across the front. He had told her the monthly sex was not part of the contract anymore and she understood. \n\nSix months later Brown's Super Shoe Mart II opened up across town with Brad and Tara as dual store managers. \n\nFive years later all the Super Shoe Mart's in the USA changed their names to Brown's Super Shoe Mart. \n\n\"We've come a long way,\" Mike said to Meagan, Brad, and Tara as they sat on the floor of his new office. \"Remember how it all started?\" Meagan asked. \n\n\"Yes,\" Brad said laughing. \"Wait here.\" He got up and moved out into the store. \n\n\"What's he doing?\" Mike asked. \n\nSuddenly Brad ran back into the room and down onto his knees. He took the empty bottle and spun it around. They all watched as it pointed to Meagan. \"OK Meagan off with the blouse,\" he laughed. \n\n\"Here we go again,\" Meagan chuckled as she slowly unbuttoned her blouse. \n\n<p align=center>~ THE END ~</p>\n\n*\n\nNote from Slick: I've received a lot of emails asking to continue this story but this is it. The Brown's are doing very well and I hope you liked the final chapter. Don't forget to vote and let me know how you liked the final chapter and series.. "
    ],
    "authorname": "Slickman",
    "tags": [
        "store mike",
        "ahhh moaned",
        "body meagan",
        "opened meagan",
        "meagan tara",
        "irene laughed",
        "irene quickly",
        "pointed upward",
        "mike meagan",
        "tara meagan"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/browns-shoe-store-ch-04"
}