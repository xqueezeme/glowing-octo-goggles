{
    "title": "The Girl Across The Way",
    "pages": [
        "\"Get a telescope.\"\n\nThat was all the note said. I checked and it was post-marked from here in the city but with no return address. The hand-writing was fluid and broad, a woman's hand wrote this. At first I thought it was something for the prior tenant of this apartment until I flipped the envelope over again and found my name in the same fluid script. \n\nI had tossed it on the side table with the other mail a week ago and now I had another in my hand, the same stationery, this time the note said.\n\n\"Friday at 9, up 6 over 2, you are cordially invited to watch.\"\n\nI was intrigued, this time there was a lip print in deep red lipstick on the card and it had been perfumed. The scent was dark and spicy and I held my breath after breathing it in again. I walked over to the window of my new apartment and looked at the steel and glass of the building across the way. I looked up from the street below, mentally counting the floors in my head and found the window just a floor below mine. It currently only reflected the fading daylight.\n\nI tapped the card against my thigh and noticed that she'd gotten my attention completely as I brushed my cock through the fabric of my slacks.\n\n\"Alright,\" I thought, \"let's see what this is about.\" I had no plans for Friday and hoped to get out of the office at a reasonable time. I looked around my the apartment. It was company owned in an upscale building, none of the furnishings were mine, I'd only brought my clothes and a toothbrush when I came to the coast to take this position. The apartment was a perk I'd gladly accepted since I was moving out of a place where I had several roommates to share the costs. Living on my own was a joy now that I had settled in. I had no friends here yet and though I'd been out with some folks after work I hadn't really met anyone outside of work yet.\n\nI poured myself a few fingers of the scotch my buddy had given me as a going away present and walked back towards the window. I still had the envelope and brought it to my nose, the peaty scent of the scotch overshadowed by the perfume. I had no idea how she got my name but that hadn't worried me in the least. \n\nI didn't buy a telescope, I just set up my camera on its tripod when I got home, set it off to the side of the window and made myself some dinner. After the second recount of the days events I turned off the news and cleaned up the kitchen. I'd been checking the time often since it had gotten dark and shook my head. This has got to be a joke the last guy that lived here was pulling on me. I moved the camera and directed it to the window and found it dark. It was still a few minutes before seven so I went and poured myself another drink and took the envelope from the hallway table and lifted it to my nose. I checked the time and it was a few minutes past eight so I looked again, and saw light in the window. I looked through the viewfinder of my camera and there was a faintly lit, well appointed living room. There was a sofa and chair, and a nice coffee table, I could only just see the top of the sofa at this angle so the rest of the room was out of view. Like my place hers had a hardwood floors, and there was a long shelf or bookcase just beneath the window with items on it. The lights came on and I was dazzled for a moment as my eye adjusted. A woman walked into the room carrying her phone and a glass of wine. She was wearing a nice business outfit, the skirt was gray and pleasantly short and the blouse was black satin. I looked up when her head lifted and she had on a lace mask covering her eyes. I smiled at her desire to hide her identity. She looked up at my window and I froze, wondering if she could see me watching her. She lifted her wine glass in salute and took a long sip and set it on the window casement. She set her phone on a dock and tapped it a few times and began to sway slightly. She must have gotten the groove of the music she was playing because she began to dance in place. She was gorgeous, from here I couldn't judge well but I could tell she was medium height with dark hair pulled up behind her head. The more she danced the more I noticed she had a killer figure.\n\n\"Holy shit.\" I said with a soft chuckle.\n\nShe unbuttoned the cuffs of her blouse then began on the ones on the front. My cock instantly stiffened and tented my slacks. The song must have changed because she began to bump her hips in rhythmic circles even turning to show off her ass. She reached back and took the zipper of her skirt and pulled it slowly down. She crossed her legs at the ankle and pushed the skirt over her hips and down, leaning forward as she did. The black satin of her blouse covered part of her ass but what showed was perfection. She wore garters and black stockings and her legs were magnificent. She might be an office worker but her toned legs showed that she didn't spend all of her time there. She stepped out of the skirt and took a few steps away from the window and laid it over the back of the sofa. When she returned to the window she took another long sip of her wine and licked her lips. They were the color of the wine and I looked down at the envelope in my hand and it appeared to be the same color she was wearing now.\n\nShe continued to dance to the music, the last button of her blouse held it closed though the tails occasionally lifted if she twirled, which she was doing often. The music must have picked up a beat as she was getting into it now, the black satin giving way to quick glimpses of her thighs above the stocking tops and I felt myself getting warm. I gulped the last of my scotch and looked again and she was gesturing at the top and hiking her thumb to the side. She lifted her palm as if to question me and I stuck my thumb up hoping she could see it. She did because she smiled which was beautiful in its own right. She shimmied around and undid the button and twirled around causing the blouse to open up and show off her figure. I don't remember the point when I stopped breathing. I must have clicked the shutter without thinking because the resulting flash blinded me as it reflected off my window.\n\n\"Ow fuck!\" I covered my eye with my hand.\n\nI looked through the viewfinder again and the lights were off.\n\n\"Fuck!\" I was angry enough to put my camera through the window. I went and refilled my drink and took a long pull. I turned out my own lights and by just the glow of the city lights beyond walked back to the window and looked down at hers. The room was still dark. I fucked it up. I set my camera aside out of the window and went over to the couch and sat down. I let out a snort as I reached down and stroked my still hard cock through the leg of mys slacks. I unzipped my fly and pulled it out giving it a few strokes while remembering her bent over to slip off the skirt. I set my drink on the coffee table and went to take a shower where I would be able to relieve myself without making a mess.\n\nMy doorbell rang and I wondered who would be here at ten, or for that matter, who would be here at all. I grabbed my robe and whipped it on as I went to the door to find the doorman from the lobby with an envelope.\n\n\"This came for you, the courier said it was urgent.\"\n\n\"Thanks.\" I said and took it closing the door.\n\nIt was the same stationery but this time without a stamp or post mark, and she'd only addressed it with my name and street address. I opened it quickly and noticed the envelope was thick. I pulled out the note and as I opened it a scrap of black lace fell out of it. I leaned down to pick it up, it was a pair of black lace panties, and they were damp.\n\nHer writing was hurried and less artful. \"Rookie mistake, I said a telescope, binoculars would have been fine as well. You missed out on what I was hoping would be a lovely evening. New watchers turn me on so much that I still had to cum after lights out. Enjoy the evidence and I'll be in touch when I feel you've earned another chance.\" I lifted the panties and they had a fresh, musky scent which made my cock twitch beneath my robe.\n\nI kept an eye out on the windows for several nights but never saw the lights come up, or the blinds open and gave up hope.\n\nI was on my way to work one morning when I got the inkling of an idea. When I got back to my building late that afternoon I talked with the doorman who had delivered the note to me. He said it had been dropped off by the doorman across the road.\n\n\"Do you guys talk much?\"\n\nHe looked cautious. \"Sometimes, same job, different side of the street. You know?\"\n\n\"Any idea who lives on the sixth floor, left corner?\"\n\nThe corner of his mouth raised and lowered quickly. \"I don't know by name but I've heard a few things.\"\n\n\"Like?\"\n\nHe looked around to make sure nobody overheard him. \"I've heard she can put on quite a show when she's in the mood.\"\n\nSo this wasn't something new.\n\n\"She must have moved in recently, in the past year or so. I'd never heard a peep about her before September. A few guys have tried to go over but get stiff-armed at the front door. She has a list, if you aren't on it, she doesn't get disturbed. I've heard it's a very short list.\"\n\n\"Any chance you know the apartment number?\"\n\n\"That I know, it's 602.\" He was fighting a smile.\n\n\"It would seem I'm not the first to have asked.\"\n\n\"No sir, you're not. She's a private person. One of my tenants once sent over a gift and it was sent back unopened.\"\n\n\"I see. Thanks.\" I palmed him a twenty for his trouble. \n\nI went through with it when I got upstairs. I got off the phone and felt oddly worried that the bouquet I'd just ordered and the note I'd dictated, would be on my own doorstep tomorrow afternoon.\n\nI spent the day distracted wondering if the flowers would be rebuffed or taken in. When I got home my doorman was smiling at me when he saw me walk in. He called me over and handed me an envelope, same stationery as before, no post, hand delivered. I thanked him and walked off, his knowing smile extended to my own mug as I walked toward the elevator. When I got in I stepped to the back and casually lifted the envelope to my face and there was a whiff of perfume. As soon as the elevator reached my floor I was down the hall and into my apartment in a flash. I hung my coat on the hook and set my case down nearly tearing the envelope in my haste. I stopped myself and walked over to the counter and poured myself a drink and walked to the window and looked down at her window. It was still light out and there were no lights on in her apartment. I set the tumbler down and slid a finger under the flap of the envelope.\n\n\"Thank you, they're lovely. I suppose you've started asking around so I'll give you a little inside information. You won't cajole any info out of the guys in this building. They're very protective of the occupants here. I don't share information and I won't accept yours, other than what I already know. I'll divulge that I found that out from the boys downstairs in your building. I only know your name and apartment number. Since you were so kind as to apologize for your gaffe with such a lovely gesture I feel it's time to return the favor. I hope you don't have any other plans this evening. I hope to see you, seeing me, at nine.\" It was signed for the first time with a large letter N and another lipstick imprint, this time the lips had been puckered into a kiss.\n\nI had started lining the top of the shelf with the cards where they stood like tent cards at a banquet. I walked away from the window and decided on an early dinner. The news ended and I flipped through channels trying to calm my building excitement. I must have looked at the clock a dozen times in the last ten minutes before turning off the TV. \n\nI got up and paced a bit and considered making myself another drink but I passed and just turned down the lights. I peeked through the new binoculars a few minutes early and the lights in that room were still off but I noticed a rim of light around the blinds in the next room over. I waited and a lamp in the living room came on and she walked around the coffee table and plopped onto the couch. She was wearing gray sweat pants, a long sleeve shirt and different colored socks. A far cry from her outfit the last time I'd seen her. She had on one of those face cleansing masks, some sort of face cream covered with a light paper oval with openings for her eyes nose and mouth. I chuckled at her ingenuity as she picked up the remote and started flipping through channels. I couldn't see the TV screen but she stopped on something and tossed the remote on the cushion beside her. She didn't do much for a few minutes but then got up and went out of sight. She came back with the bouquet and set it in front of the window and leaned in to inhale the fragrance of the flowers. She looked up at me and blew me a little kiss and walked out of view again. She came back with a drink with a straw in it. She puckered up taking a sip and set it down and lit the candles that sat in a tray on the table. She piled the pillows at the far end and laid back on the sofa with her legs facing me. She took the remote and flipped the channel again and set it down. A moment later she began to rub the front of her sweats, her fingers rubbing a tight circle. She stopped and slipped the hand inside and by the looks of the fabric was doing the same. Her other hand was rubbing her chest as she glanced at the TV and then at the window. She sat up and carefully pulled the top over hear head and tossed it on the chair. She wasn't wearing anything beneath it and her breasts were fantastic, perfect natural mounds with small dark areola and the nipples standing erect. I felt my erection press the inside of my slacks and shook my leg to get a little relief from the pressure. She leaned back and put her thumbs to the sides of the sweat pants and slipped them out from under her ass and down her legs pushing them off. She kept the socks on. When she leaned back I realized just how stunning she was, her figure was right out of a men's magazine centerfold. I felt myself breathing harder as my eyes scanned down her body, her trim waist gave way to a beautiful curved hip, her legs looked long from here. When she lowered her knee there was a sparse dark patch between her legs, neatly trimmed to a triangle pointing the way to heaven.\n\n\"Holy shit she is gorgeous.\" I whispered aloud.\n\nHer hands went back to work, one rubbing her breasts, and pulling at the nipples, letting them snap back. The other was rubbing gently between her legs, causing her to bring her knees together, her mouth hung open as she worked herself over. I was completely hard now and I stroked my cock through my pant leg. She lifted her leg and reached with it to the coffee table opening herself to her audience. She had two fingers buried inside of her and I felt myself panting like a dog as I scrambled to release my cock from it's confines.\n\nShe lifted her palm and began driving her fingers into her pussy faster. Her back arched and she lifted her knees opening herself wide for her audience. Her body jerked in spasms several times and she fell back to the sofa. I stroked my cock as if I were a teenager with his first dirty magazine as I watched her massage her pussy slowly. She drew her fingers out and held them up to show me how wet she was, I could see it running down the palm of her hand. I didn't think anything would top what I just saw until she drew it back and licked the palm clean and slid the fingers into her mouth.\n\nI climaxed hard making a splattering noise as it hit the window but I didn't look down. I couldn't peel my eyes off her. She was licking each individual finger so as to not lose a drop, her legs still splayed wide open. I zoomed in as tight as the binoculars would go and noticed the faint light shimmering off the wetness between her legs.\n\n\"Fuck! I would kill a man for the opportunity to lick you clean.\" I said aloud.\n\nShe eventually stood up and walked to the window where she leaned into the bouquet again. She smiled looked up at my window a blew me a kiss before giving me a little wave. She blew out the candles, showing off a wonderful backside as she did, picked up her clothes and left the room, turning the TV and lights off as she went. \n\nI stared blankly out the window as I gathered my wits and settled my breathing. I looked down at the mess I had made, shook my head and washed up. I cleaned up the carpet and the window and sat down on the sofa with a few fingers of scotch and stared blankly at the wall. I ran through my mind how I could find a way to meet her in person and guessed from her coy attitude in her notes, and the statements made by the doorman, that I might screw up a good thing for everyone. She accepted the flowers though when he'd told me she returns gifts and notes unopened so maybe there was a way in through that channel. I decided to keep an eye on the bouquet and if it started to sag I would replace it with another. I can get notes in through the florist at least.\n\nThe next day when I got in the doorman flagged me down and handed me another envelope, his eyebrows rose and he gave me a knowing smile as I took it and thanked him.\n\nI couldn't get upstairs fast enough.\n\n\"Thank you for watching. You left the lights on and I could see your outline in the window. I hope you enjoyed it as much as I did.\" There was a little winking smiley face penned in after that line. \"I wasn't exactly prepared for another show so I hope I didn't scare you with my everyday look. I'm not sure what to do next for you, but I'm sure I'll come up with something.\"\n\nOnce again signed with a large letter N and this time there was a heart next to it in pen with a small letter I in it.\n\nDays went by and I kept careful watch over the window across the street with no new sightings. Either there was no one home or the blinds were drawn each time I checked. She took careful care of the flower vase, and she only started culling the wilted ones a week later. I saw my opportunity when they were about half gone, the few heartiest still held out but the vase was half empty now. I ordered another arrangement, and thought about what I wanted to say on the card and still be somewhat cryptic.\n\n\"It has only been a few days and I miss you terribly. I cannot wait to see you again.\"\n\nIt sounded ordinary enough for any florist, but there was a hint of humor too. I liked it and had them send a different bouquet, after I described the first one, they said they could change it easily.\n\nA few days later the door man flagged me down as I walked towards the mail boxes and handed me an envelope, a grin on his face.\n\n\"What?\"\n\n\"Until you moved in I'd seen maybe one or two of these, now they're becoming regular. I think she likes you.\"\n\nI gave him a questioning look and then smiled myself unable to keep the air of indifference up. I took the envelope and walked into the hall where the mailboxes were. I opened my door and tossed the mail on the hall table and walked toward the window with her card in hand. I opened it in the fading light and drew it slowly out of the envelope.\n\n\"You've found one of my weaknesses rather quickly, you devil. Thank you once again for the lovely flowers. I'd like to tell you that you shouldn't have, but I'm secretly glad that you did. I felt a small heartbreak at the loss of such beauty as I culled the wilted, withered blooms. I've often wondered if Georgia O'Keeffe felt the same, what with her fascination with flowers and bones. Of course it's as easily noted that she was simply painting vaginas and covered her tracks by making them into flowers. You can't fault her though, they are lovely.\" There was a little drawing of a face winking at the end of the line.\n\nHer signature was expanding, this time next to the letter N there was the heart with the small letter I and now there was a small letter N drawn in the shape of a sagging flower on a stem. Along with the lipstick print there was a small water color style drawing of a flower at the bottom. She had an artistic style and I was enjoying seeing these little additions if only because it meant she took time to write them.",
        "\"N-i-n\" I thought, it had to be Nina. I hoped to find out by the next note but for now I was still enjoying the mystery of it.\n\nI kept an eye out, and noticed the new bouquet had replaced the prior one. There were light signs she'd been around, the phone dock she'd set her phone on that first night had been slid to the end of the shelf to accommodate the vase. A piece of clothing lay over the back of the chair and was gone the next day. I caught a glimpse of her moving through the room one evening, she kept her head down, and didn't linger. \n\nThe weekend was here and there hadn't been a new note and I felt crestfallen that she hadn't sent me another note with a time to watch her. I ordered Chinese food and kicked back with a drink watching some bad television when my phone chimed. I looked at it and didn't recognize the number, and it showed the caller ID just as 'wireless caller.'\n\n\"Where did you order from? I hope it was Chen Jia. They have the best shrimp with pea pods I've ever had.\"\n\nI looked around and started to freak out a little. I looked at the window and stood. I was still chewing a piece of my egg roll when I looked through the scope to find Nina peeking back at me with a pair of field glasses. I laughed and wondered if I would be able to reply to the text. I wiped my hands and texted back.\n\n\"The voyeur becomes the viewed?\"\n\n\"I was bored. So much so that I nearly started cleaning!\"\n\nI looked through the eyepiece and saw that the glasses hid her face well, to my chagrin. I could only see her from the waist up and it looked like she was wearing a loose top or sweatshirt, and her hair was pulled up on top of her head with a clip. There was a wine glass and her phone in front of her on the ledge.\n\n\"Want to come up? I have plenty. I didn't order from there though, just the nearest place that didn't have the worst review.\"\n\n\"Another time perhaps? Though I was thinking of doing a little cleaning in a few minutes in case you're bored too.\"\n\n\"I don't get out much, though I'm not sure watching someone clean is the kind of excitement I would look for.\"\n\n\"Don't you worry, I'll make it worth while.\" She turned from the window before lowering the glasses, reached for the wine and her phone. I ran back to my little buffet and finished up, packing the leftovers back up and putting them in the fridge. I washed up and refilled my drink and tried to not run back to the window. I set my phone on the shelf next to me and looked through the binoculars. She hadn't reappeared. I took a moment to look around at what I could see. There was a book and some magazines on the coffee table, and what appeared to be a pile of cushions at one end of the sofa. The lights were on but not as bright as that first night. I thought about it and realized that she must have some lighting around the window to cast light into the room from the viewers vantage point or she would likely appear in silhouette most of the time. This exhibitionism couldn't be something she was new to if she was already set up for it when I moved in. I remembered the doorman's smirk and if they knew about her then it must be an inside story among some of the tenants on this side of the building. \n\nA shadow moved in the back of the room and soon she came around dragging a vacuum cleaner. She wore a bandanna tied around her face like she was robbing an old west stage coach and I laughed. She walked back and pulled her phone out of the pocket of her sweatpants and tapped on the screen a few times and set it on the dock by the window. She started swaying her head to music and turned back to the vacuum cleaner. She uncoiled the cord and surprising enough actually vacuumed the rug in the center of the sitting area and went around the room. She even pulled the sofa cushions out and went in around them, wiggling her backside to the music which must have been loud to be heard over the vacuum. She put everything back to where it was and coiled up the power cord. She wheeled it out of sight. She walked back into the room and stood in front of the window and I saw the kerchief billow as she must have exhaled in a deep sigh. She picked up her phone.\n\n\"Sexy, yes? I bet you're hard as steel watching me clean.\" She looked up and placed her hand over where her mouth would be and mimed laughing. \"This outfit is too hot for this. Don't go away.\" She on the other hand did just that and disappeared out of the room. She came back into the room about ten minutes later decked out in heels and a French maid costume, the kerchief replaced by a black lace mask shaped like a butterfly. She took her phone and tapped away.\n\n\"There, that's better.\" She set the phone down and walked to the edge of the window and the lights got brighter.\n\n\"Sexy, yes!\" I tapped in reply. She looked at the screen and looked up placing her hands over her heart and gave a slight bow. She went and cleaned up the magazines and book and placed them in what must have been a bookcase beneath the window. She went out of sight for a moment and came back with a spray bottle of what I assumed must have been furniture polish. She looked around and place her hand on her hip and leaning into an annoyed stance. She held up a finger a moment as if she had just gotten an idea. She set the bottle down, turned and bent over at the waist and slid the black panties down her black stocking covered legs and stepped out of them. She then picked up the spray bottle and went to the coffee table, she bent over at the waist again facing away from the window and began using the panties to dust the table. \n\nShe had wakened the monster in my jeans and I suddenly wondered why I hadn't changed out of the limiting pants. I adjusted myself so I had a little room to grow knowing that it wouldn't last. She wiped down another smaller table in the corner before coming back to the window and setting her panties and bottle down. She reached up behind her back and a moment later the little corset was off and she stood in a lacy black bra with her little flared skirt. She reached for the phone and tapped away.\n\n\"Sexy but not comfortable to clean in.\" She moved her flowers to the coffee table and came back and dusted the bookcase. She moved around and dusted a few other things around the room and came back and curtsied to the audience, lifting her skirt up high enough to show the small black triangle between her legs. She stepped out of sight for a moment and returned, and took her phone up again.\n\n\"I'd send you these but they smell like lemon polish.\" She mimed laughing again and looked down at her phone.\n\n\"I'd rather have the contents.\" The drinks were talking now.\n\n\"Naughty, I bet you would hire me to clean if I showed up like this.\"\n\n\"The uniform would have to be smaller.\"\n\nShe set the phone down and reached up behind her and removed her bra.\n\n\"Now?\"\n\n\"Smaller.\"\n\nShe removed the skirt and stood there in just stockings and heels.\n\n\"Better?\"\n\n\"Much!\"\n\nShe wagged her finger at me and set the phone down, picked up her clothes and walked out of the room. I had released my cock as her clothes came off and it was as hard in my hand. She came back in the room with a towel over her arm and a bottle in hand her hand. She'd removed the stockings and heels and only had the mask on at this point and she set the items down on the table before turning the chair completely around to face the window. Her body was incredible, her hips flared gently from a narrow waist, her legs long and toned, her ass was just round enough to want to dig your hands in and hold on to her for dear life. She laid the towel out on the seat and swiped her phone off the dock and sat on the towel and crossed her legs as she reclined.\n\n\"How's the view from the cheap seats?\"\n\nI hesitated to grab my phone, not wanting to stop stroking my cock.\n\n\"I don't know what you mean, this is the best seat in the house.\"\n\n\"Darling if you were in the best seat in the house, you'd be in this chair, I'd be straddling you, and the blinds might even be closed.\"\n\n\"Point taken.\" I eventually replied. She cocked her head at her phone and set it on the arm of the chair and stood, she stepped up to the window and produced the field glasses from the bookcase beneath and leaned forward scanning this side of the street. I realized what she was doing and turned quickly.\n\nMy phone chimed. \"Oh don't be like that, I'm on full display here. Let's see what I'm going to fantasize riding while I rub one out. How about a profile then?\"\n\nI sighed as I read the text. I was clear as day to her, my identity exposed, unlike hers and worried what might come of this. She was right though, I've seen nearly as much of her as she had to offer from this distance. I turned slowly, my cock bobbing straight out as I paused, the room light must have left me in silhouette to some degree but I'm sure she could see. I then turned fully back to the window and looked through the eyepiece to find her still watching and fanning herself with her open hand. She set the glasses down and stepped back to the chair, sat and crossed her legs.\n\n\"Ooh that's choice, I bet it's a good ride.\"\n\n\"Thanks.\" I typed, momentarily shocked by the examination. \"This is the drinks talking but you're welcome to find out any time.\" I hit send before I got cold feet. I watched her as I sent it and she leaned back and began laughing.\n\n\"Let me show you where I'd like it.\" She set the phone down on the arm of the chair and spread her legs wide She pointed at the window and down between her legs. She began rubbing her breasts, they filled her hands with and bulged slightly as she lifted them, pinching the nipples. She grabbed her phone.\n\n\"What's your favorite position? Say missionary and I'm calling a moving company in the morning.\"\n\nI thought a moment and wondered just how I'd take her right now if I could.\n\n\"I'd have you on your knees on that chair, bent over the back of it and fuck you from behind.\"\n\n\"That's a good lad.\" I thought that was an unusual turn of phrase and wondered if she was British.\n\nShe stood, turned and climbed onto the arms of the chair, ass up in the air with her legs wide.\n\n\"Like this?\"\n\nI nearly fainted as I tightened the grip on my cock stroking faster. It was difficult, but I stopped myself before I came.\n\n\"Do you do windows? I'm about to make a mess out of this one.\" I sent the message and realized I was panting like I'd just run up the stairs to my seventh floor apartment.\n\n\"Ease off a bit, I need someone with staying power.\"\n\n\"I did, just in time.\"\n\n\"Why not just watch for a bit. Hands off, that's an order.\"\n\nI saw her reach down and set her phone on the cushion and her hand began to slide up the inside of her thigh. When she reached her pussy, she spread the lips with her fingertips and I nearly came without touching my cock. She rubbed herself slowly for a few minutes and soon a finger disappeared between her lips. I reached down, then remembered her demand and brought my hand away. The finger moved more quickly and her lips shone wet in the bright light. Soon another finger joined the first and she was plunging them into her pussy with abandon. I panted like an overheated dog as I watched this bitch in heat drive me out of my mind. Her hand slowed and she sat up. Still kneeling on the arms of the chair she turned in profile, put her fingers into her mouth and sucked them clean. When she was done licking each finger she straightened the mask and reached down for the phone.\n\n\"Forgot something.\"\n\nShe got off the chair and leaned over to get the bottle she had set on the table. She came back and sat down, her legs together but not crossed and something shiny sat between her thighs.\n\n\"Ever try one of these?\"\n\nRather than play the fool at the sight of the butt plug I answered honestly.\n\n\"Myself? No. I've never been with a girl who used one either. Well not while I was there anyway.\"\n\n\"You don't know what you're missing. Getting fucked while this gets massaged into you is mind blowing.\"\n\n\"If you need help with that, let me know.\"\n\nShe laughed.\n\n\"Rude! We've never even met!\" She set her phone aside, took the butt plug and lubed it from the bottle. She turned and knelt on the chair seat this time and began rubbing it around her ass. She gave it a little push and relaxed. She toyed with it a little longer before giving it a little more effort and it sank in place. Her fingers slipped between her legs and rubbed her pussy, digging in hard before she returned to the blue jewel and gave it a little turn and nestled it in place. She reached for her phone.\n\n\"God that feels fucking wonderful.\" She set the phone aside and began masturbating in earnest, her fingers delving quickly between her lips, she occasionally reached back and gave the jewel a little circular rub too. At one point she must have hit a sweet spot because her hips jerked in response. Her pace increased and she had both hands working now, her body supported by her shoulder pressed into the chair back. Her hips ground back as her fingers played with the little jewel in her ass. Her fingers plunged into her pussy quickly, only stopping when she rubbed her clit just as quickly. Her body began to shake as she peaked. Her head tilted back, mouth open in what I hoped was her crying out in pleasure.\n\nI couldn't stand it any longer and grabbed my cock and began stroking it just as furiously as she did her clit. I watched as her hips bucked repeatedly under her skilled hands. She must have peaked as her body went lax, her back rose and fell with the signs of her deep breathing. I looked down as she slipped her fingers free and a stream of milky white cream poured forth dripping to the towel on the chair below. I licked my lips as I felt my balls tighten and I came, splattering off the window again. She ran her fingers through it and brought them up to her lips, her other hand still rubbing the little jewel.\n\nMy own orgasm ran down the back of my hand as I wrung out every last drop. She stood, shaky on her feet, wiped her hands on the towel and refolded it before sitting down again. She brought her legs up and tucked them beneath her and grabbed her phone.\n\n\"Well that's the most fun you can have by yourself on a Saturday night. Your turn!\" I could see her smile as I peeked through my binoculars again.\n\n\"Umm, about that.\" I typed back avoiding coating my phone. I ran to the bathroom and grabbed a towel, kicking my jeans off in the bedroom as I did.\n\n\"Noo! I told you to wait!\"\n\nI looked and she was on her feet binoculars in hand looking up at me.\n\n\"Bastard! Nice window pattern though. I'm not impressed with you right now. It was only fair that I got to watch you.\" She walked out of the room and came back in a short satin robe with cherry blossoms on it. It was short and showed off her terrific legs.\n\n\"I'm sorry, I couldn't take it any longer. You were incredible! You're stunning!\"\n\n\"On a scale of one to shoot your load at the window, how would you rate my performance?\"\n\n\"A solid fifteen out of ten bottles of glass cleaner.\" I replied.\n\n\"Sigh. I was going to keep playing while I sat naked watching you perform for me. Now I don't know what to do?\"\n\n\"Well I should be ready again by tomorrow.\"\n\n\"Tomorrow? Weak.\"\n\nI could see the smile blazing in the bright light.\n\n\"Ever since that first note I have been an empty husk of a man.\"\n\n\"Tossing off to me even when I'm not here? That's so sweet.\"\n\n\"Easier to clean off the shower. I do prefer the live show over memory and fantasy.\"\n\n\"Ooh fantasies about me? I'm curious now.\"\n\n\"Most are like what you just did, only I'm a lot closer than the other side of the street.\"\n\n\"Since you've robbed me of the rest of my fun I guess I'll get a glass of wine and go soak in the tub. Next time I tell you hands off, HANDS OFF!\" She got up and turned off the lights, turned the chair back to its original position and cleaned up her things. She reached for her wine and left the room.\n\n\"I'm really sorry. I am.\" I texted to her and got silence in return. I ended up cleaning my own mess before pouring myself a double and sitting back on the couch. It took a long moment before I began to wonder how she got my number. I texted her again and asked but never got a reply.\n\nThe week went by slowly. I kept an eye out for her in the window with no luck. The flowers wilted, and eventually disappeared. I decided it was worth another shot and called the florist. The next day a couple dozen red roses were sitting on the ledge. There were no replies to the texts I'd sent, and I was smart enough to leave that avenue of communication alone. I was well aware that I would come off looking like a lonely, love-starved idiot. I hoped for a note by the weekend and got nothing. When Saturday rolled around I half expected to see movers taking her furniture out of the place. The weekend came and went without a peep or sighting.\n\nMonday dawned gray which appeared normal for late winter in Seattle. I sat at my desk with a fresh coffee and started digging through my e-mail. A knock on the door jamb roused me from the glazed over feel I had as I skimmed so much digital chatter.\n\n\"Hi Len. What's up?\"\n\n\"My wife and I are throwing a party on Saturday and we'd love it if you came. I know you're still new to the area but thought I'd extend the offer. Maybe you could meet a few people outside of the office.\"\n\n\"I...\"\n\n\"Stag is fine, or if you have a date that works too, no pressure. It's just some folks we know, a friend of hers from her job, a couple old college friends and their significant others, probably about a dozen people or so. Let me know by Wednesday.\" He looked down the hall, waved and beat feet out of my office before I could reply.\n\nEach night I peeked through my binoculars in a futile attempt to make her materialize and tell me that she wasn't angry. I was disappointed each time to find no lights in any of the rooms.\n\n\"She must have left for some reason, work probably. Right?\" I convinced myself. \n\nWednesday came and I accepted Len's party invitation and told him I'd be on my own since I hadn't really met anyone outside of work yet.\n\n\"Cool, you won't be the only one, it's mostly couples, but I think my wife's co-worker Kathryn is coming on her own. You'll like her.\" His mouth quirked in a half-smile.\n\n\"What?\" I suspected what was happening.\n\n\"Oh nothing, she's just a hot shit. I met her a couple times at Sandy's office and she's a riot, damn good looking too.\"\n\n\"Be straight, am I being set up Len?\"\n\n\"No.\" He responded sincerely. \"I'm not even sure she's into guys. Sandy says she's always being hit on by guys in the office and she shoots them down like a turkeys on tree branches.\"\n\n\"Still smells like a set up.\"\n\nLen shrugged. \"There will be plenty of people to talk to, drinks, food, we might even break out a party game. The excitement will be near peak levels.\" \n\nHis deadpan delivery made me laugh. \"Okay, okay. Black tie?\"\n\n\"Casually upscale. The last party we had the girls dressed up more than the guys did and they made us look bad, not that it was difficult.\" He added with a laugh.\n\nFriday finally came and I was glad for it. It had been a grueling week and I just needed to unwind. I was late getting out of the office, when I got home the doorman flagged me down and handed me an envelope from Nina. I felt a wave of relief as I took it and headed for the mailboxes.\n\nI hung my coat and set my laptop case on the hall table. I opened the note and felt relieved, it didn't appear to be a Dear John letter.\n\n\"Thank you for the lovely roses. I'm glad that between my guy downstairs and the cleaning lady they made it up here. She's been taking care of them until I got home. The only reason a man buys a woman roses is if he's courting her or he's guilty of something. I'm curious to know which one is happening.\" The note was signed as before with the flowing letter N, the heart with a lower case letter I, the little N was a drooping flower and this time there was a lower case A in the form of the 'at' symbol, drawn as the top of a rose. She hadn't given this one the lipstick kiss, but it looks like she'd painted a kiss instead, along with a pale cherry blossom like the ones on her robe.",
        "\"P.S. I've got plans for tomorrow night. Miracles do happen! I'm exhausted so I hope you won't think I'm angry with you if you don't see me for a few days.\"\n\nShe had my number and still chose to write out a note. I wasn't sure why but that sent a warm feeling through me which made me smile. I set the note with the others on the shelf. \n\nI took my phone and texted her.\n\n\"You're welcome. I understand, it's been a rough week for me too. Rest well lovely lady.\"\n\nI poured myself a drink and looked in the fridge for something easy, and found nothing. I made a mental note to get some groceries in the morning. I picked up my phone and it chimed as I did. There was no note, just a download link. I normally would have just deleted it, but I took a chance and a photo appeared on my screen of long legs in bath water. There was a glass of wine on the ledge of the bath. In the corner of the image was a graphic of a pair of puckered lips and a wink. The phone chimed again.\n\n\"It will be a miracle if I make it from this bath to my bed.\"\n\n\"Let me know if you need help. What was the name of that place you get take out?\"\n\n\"Chen Jia.\" The number followed. \"Don't make me hungry. I can barely keep my eyes open.\"\n\n\"Sweet dreams.\"\n\nI looked up the restaurant and found a take out menu online. She was right, the food was terrific. When I'd eaten my fill I packed the rest away and thought I should stop with the takeout before I explode.\n\n\"You won't stay in shape this way.\" I said as I put the leftovers in the fridge.\n\nI saw the pouch of fortune cookies on the counter and took one out and cracked it, popping the broken piece into my mouth and unfolded the fortune.\n\n\"A beautiful, smart, and loving person will be coming into your life.\" I smiled and looked up at the window I watched Nina from. \n\n\"Pretty accurate.\" I thought.\n\nI was up surprisingly early for a Saturday and felt pretty good. I showered and dressed and made my way downstairs. I asked the doorman where I might find some decent coffee around here and he laughed.\n\n\"This is Seattle, two things we've got are coffee and fish.\" He then directed me to a shop about a block west of the building.\n\nIt took a bit to get used to the coffee here which was darker and richer than the stuff I'd had back home. I snorted at that thought, this was home now. I flipped through my phone and found a grocery store nearby. It was very upscale which made sense for this neighborhood. I hoofed it over there and picked up a hand basket and began to peruse the selection. I grinned at the obvious embellishments used to convince people their products were the finest sourced, with prices to match. I stuck to the basics and filled up one of their cloth sack grocery bags for the walk back to my place.\n\nI spent the rest of the morning and early afternoon puttering, and picking up around the apartment. I stopped for lunch and stood at the counter eating off the cutting board I'd just made my sandwich on when I heard my phone chime. I looked at it and walked over to the window and looked through the binoculars. The view was partly obscured by the sky reflecting off the window but she was there sitting cross legged on a large mat. She wore a blue tank top and yoga pants Her body was turned away just enough to hide her face..\n\n\"Soothing music suggestion?\"\n\n\"Mozart? I usually listen to jazz when I want to be soothed.\"\n\nShe tapped away on her phone and cocked her head as if listening. She nodded, began tapping away again.\n\n\"I like it. Thanks.\" She blew me a kiss over her shoulder and sent the link to the online playlist. I went over and turned on my little bookshelf stereo and connected my phone over the WiFi and played it. When I returned I saw her stretching on the mat, bent over holding the back of her knees. She really did have an incredible figure. I sighed and wished neither of us had plans later. I made a quick list of reasons to blow off the party and sighed. \n\n\"Don't burn your bridges. Get out of the damn house you pervert.\" I thought as I stepped away from the window. I got the feeling that her workout wasn't done for the viewers benefit but she didn't appear to care if she was watched doing it. I peeked a few times as I puttered and found her in different poses, but never facing the window. She must have been at it for an hour when I heard my phone chime again.\n\n\"Time to hit the shower and make myself presentable.\"\n\nI looked through the binoculars to find her topless and wiping her face with her shirt as she set her phone on the dock.\n\n\"I hardly think that's a monumental feat for you.\"\n\nShe looked up at my window and back at the phone. She took it and turned her back to me and texted me.\n\n\"Wish I had a hunky guy to help wash my back, and other exceptionally dirty parts.\"\n\n\"I'll be right over!\"\n\n\"Can't, we'd both have to cancel our plans. Catch you later sexy!\" She replaced her phone and left the room. I looked at the time and figured with travel I might get started on clean up duty myself. I first checked out my closet and looked over the clothes I'd been buying over the past year now that I was just another suit in the office and not out working in the field. I pulled out a sport coat and slacks and picked a simple striped shirt. I waffled on whether or not to wear a tie and remembered Len's claim that the women dressed up and made the guys look bad and chuckled. I chose a tie to wear. \n\nI hit the shower and imagined Nina in her own, soap suds sliding down her body and I was instantly hard as I remembered fingers delving into her pussy.\n\n\"What fantasies do I have about you Nina? I picture myself lifting you off your feet, pinning you against this shower wall and driving my cock into you while you do your best to lick my tonsils.\" I thought and chuckled. I stroked my cock imagining her holding onto my shoulders as I drove into her with no mercy while whispering a string of filthy talk into her ear. I tried to slow my breathing after I came hard enough to hear it hit the shower wall over the spray of the water.\n\n\"That woman will be the death of me, and I'll welcome it.\" I said aloud. I rinsed off and got out of the shower. I shaved, polished the ivories and dried my hair. I reached for the after shave I usually used and stopped and took a bottle of nice cologne I'd received as a gift. I went and suited up, checking myself in the mirror and nodded. I swapped the tie for a darker one and used an app to get a ride.\n\nLen and Sandy lived a little further out in the northern part of the city. Len had mentioned his wife worked in the seafood business and they had a house near Puget Sound. When the driver got closer I got to thinking her seafood business wasn't a simple fishmonger's stall. The houses here were all in the seven figure range. We didn't do poorly working where we did but this neighborhood would have been out of the price range if Len were their only breadwinner. I let out a low whistle and the driver chuckled.\n\n\"First time up this way?\" His accent was sing-song.\n\n\"Yes, I'm from the mid-west actually where they don't have houses like these.\"\n\nThe destination popped on my phone screen and I hit the pay button. I reached over and gave him the tip in cash. I stepped out taking the guys info for a review later and walked towards the house, the front was covered in huge windows facing the water. I turned in the driveway to admire the view of the Sound and the street of homes just below theirs. I let out the same low whistle as another car drove up. I turned and walked towards the house. I got there just as the door opened for a couple that was already standing there.\n\nLen spotted me and grinned. \"I'm glad you made it! The ladies won't be able to complain about how shabby we look this time.\" He said looking me up and down. \"Come on in and I'll show you around, and introduce you to everybody.\"\n\nSandy, Len's wife was a bubbly and outgoing blonde in her mid to late thirties that I'd met before when she'd come to our office to see her husband. She was attractive and outgoing but in the hubbub of people arriving got separated from Len and I. He showed off the house, introducing me to people as we moved through the house. I smiled and nodded a lot until we got around to a bar they had set up in what looked like a butler's pantry. He confirmed that when I asked.\n\n\"Yea we don't have a butler which is good because he'd probably be a lush in here.\"\n\n\"The house is gorgeous, but there's no way we get paid this well.\" I joked softly.\n\n\"Well Sandy isn't just in the seafood business. She's one of the top account reps for the biggest seafood broker in the northwest.\" He smiled. \"Selling a boat load of salmon is a simple snap of her fingers, and suddenly there's a sale at Trader Joe's.\"\n\n\"Ahh, that makes more sense than her canning sardines near the docks.\" I laughed.\n\n\"Don't kid yourself she probably could.\" We wandered out of the bar area drinks in hand and more people were arriving and being introduced or greeting people they already knew with hugs and handshakes.\n\n\"Sandy!\" Len called when he saw who she was towing around. Sandy turned and the woman beside her came into view. I know my eyes widened but hoped there was no more outward sign as I tried to play it cool without looking like I was trying to play it cool. Sandy tapped the woman on the elbow and they started towards us. The woman was tall and slim with a beautiful blue dress and killer smile. As they got close I noticed her complexion was light golden brown and her eyes were so dark as to look nearly black. If this was Len's idea I was going to buy him the finest bottle of scotch I could lay my hands on.\n\n\"Kathy, this is Len's co-worker Tom Olson. He's from the Minneapolis where they only seafood they have is northern pike.\" She said laughing.\n\nKathy had an odd expression of surprise on her face, then smiled when I spoke. \"Don't forget we have some mighty fine walleye and muskies, don't ya know.\" I said in my best mid-west accent. \n\n\"Tom, this is Dr. Kathryn Taylor one of my co-workers. Don't worry your accent is nothing compared to hers.\"\n\n\"Stop telling everyone I'm a doctor.\" She elbowed Sandy.\n\n\"You are!\"\n\n\"You tell people that and they start bringing up their ailments.\" She turned to me and held out her hand. \"I'm a marine biologist, not a people doctor.\" She said with a laugh. Her hand was cool and soft, but calloused. Her accent clearly from down-under.\n\n\"It's a pleasure to meet you Dr. Taylor. Can I ask you about this pain I've been having?\"\n\n\"Oh God! See?!\" She said laughing. Sandy noticed that she hadn't let go of my hand yet. Len jumped in and offered to get Kathy a drink. She asked for a glass of wine, red if they had it. Kathy's hand slipped away with a last gentle squeeze.\n\n\"Kathy is the company fish nerd. She just came back from freezing her ass off for two weeks in Alaska at a fisheries conference.\"\n\n\"Sounds like a chilly trip to make in February.\"\n\n\"It's not as bad as you might think at least at the university lecture hall. When we go out on the boats then yes it got very cold.\"\n\n\"I told everyone in the office she was in Anchorage getting crabs.\"\n\n\"Sandy!\" Kathy scolded her. \"You're rotten! At least at work everyone knows your joking.\"\n\nThe doorbell rang and Sandy excused herself leaving Kathy and I staring at each other. She leaned forward and whispered. \"Don't call me Nina here.\"\n\nI felt my mouth go bone dry.\n\n\"Close your mouth.\" She said smiling and looked up just as Len arrived to hand her a glass of wine.\n\n\"You alright Tom? You look like you've seen a ghost.\"\n\nI hadn't stopped looking at Kathy/Nina and she licked her lips to get the last sip of her wine. She lifted one eyebrow and smiled.\n\n\"Tom?\"\n\n\"Oh I'm fine, sorry.\" I smiled at Kathy as she bit the corner her full lower lip and flashed her eyes at me.\n\n\"Okay, I'll be right back, one of my college buddies just arrived.\" He stepped away.\n\n\"Well this is a bit of a shocker.\" She grinned and cleared her throat.\n\n\"Sydney?\"\n\nShe chuckled. \"Less Crocodile Dundee, more Lord of the Rings.\"\n\n\"Auckland?\" I asked, laughing.\n\nShe blinked and nodded. \"Close enough.\"\n\n\"A scientist working for a large seafood import, export business on the other side of the world from home. That's nearly as impressive as everything else I've sussed about you.\" My fake accent was horrible but it made her smile.\n\nShe couldn't help but laugh, her cheeks turned pink and she hid it behind her wine glass. \"Do tell. I'm honestly curious.\"\n\nI took a deep breath and released it, measuring my words. \"Deeply private person, probably introverted but with a very high libido. You're highly intelligent, sassy, and fun with an easily exposed,\" I coughed gently into my fist, \"wild side.\" She gave me an embarrassed smile and I saw Sandy approaching and I opened my eyes wider looking over Kathy's shoulder. Kathy got the drift and turned slightly.\n\n\"You two are awfully quiet over here.\"\n\n\"I'm learning about Kiwi's, which up until now I thought were those fuzzy little brown balls in the produce section.\"\n\nKathy bust out laughing, Sandy quickly joined her.\n\n\"I'm not sure if we've just introduced the world to the perfect storm of off-color comedy by bringing you two together.\" Sandy held her head. \"What have we done?\" Sandy led us around to some of the new people in the room. No one came between Kathy and I, despite many long looks from the other men in attendance. Those that arrived later might have thought we came together and I was okay with that.\n\nWe sat down to dinner. A large whole salmon surrounded with lemon and dill was the centerpiece. Dishes of roasted vegetables appeared at either end of the table. Dinner was delicious and Sandy soaked up the compliments and thanked her favorite local fishmonger for boning the beast for her. Len raised his wine glass.\n\n\"To great friends, and great salmon.\" He got a rousing response as we all cheered his simple toast.\n\nI joined in assisting with the clean up to which Sandy asked if I was trying to earn brownie points. I told her, \"I didn't cook so I clean, those are the rules where I come from.\" \n\nWhen the dishes were cleared, people began to separate into smaller groups chatting over the last of the wine.\n\nKathy had walked towards the large windows and looked out at the lights below and the boats on Puget Sound.\n\n\"Nina, short for something?\" I asked softly. She chuckled under her breath.\n\n\"A nickname my grandmother used to call me.\" She sighed and kept looking out the window. \"She had a tough life. She was brought to New Zealand from Okinawa after World War II as an orphan. At least they thought she was. She was too young to tell anyone about family and when nobody could identify her or claim her they brought her there.\"\n\n\"Fish?\" I asked.\n\n\"Dad was a fisherman. I was on a boat from the time I was five or so. I loved it, well until I got yelled at for tossing fish back into the water after they'd been pulled from the nets.\" She said laughing. I didn't equate the fish with someones dinner at the time. When I grew up I knew more about fishing than half of the guys working on the boat. He insisted on university though. It seemed like it was written in the stars by then.\"\n\nShe turned to look at me and tilted her head in question.\n\n\"Ah, my turn.\" I nodded. \"Well I was born in Minnesota, grew up spending most of my time outdoors. Even as an adult I preferred the outdoors, loved to camp, fish, hunt. I didn't really want to go to college but my dad fired me up about it, told me if I wanted to be out there all the time then get a job that sends me out there all the time and pays for it. So I went to college got a degree in botany and forest management. Paper company hired me right out of college, I worked there for a few years but they sold out to a larger company and they sold the division, so I ended up working for a large scale timber operation and that started to waiver and I put myself on the market, and ended up here. Hardly the woods living on the seventh floor of a high rise in downtown Seattle.\" I laughed and shook my head and looked out over the water. \"Seems we'd both be more at home out there fishing than where we are.\"\n\nKathy laughed. \"Probably. It's a hard life though.\"\n\n\"Well I meant recreational fishing, not trying to make a living at it.\" We both laughed.\n\n\"Well maybe when the season opens we can do that.\"\n\nShe looked sideways at me and smiled. \"What will we do until then?\"\n\nPeople moved around the party making small talk, a few interested by Kathy's accent and background asked questions about New Zealand and her work. I was surprised to find that she'd lived in Japan for a while and spoke Japanese and a little Chinese. A few asked about my work which seemed a lot less exciting than Kathy's to them. I didn't disagree.\n\nIt was closing on eleven and Kathy held up her wine glass to cover her mouth. \"Want to get out of here? Get us a ride, would you?\"\n\n\"Will do.\" I bowed out to go to the bathroom and whipped my phone out and ordered us a car.\"\n\nWhen I emerged I saw Len and Sandy speaking to Kathryn and wandered up to them. \n\n\"Yea, we live across the street from one another.\" Kathy said with a laugh. \"Small world.\"\n\n\"I don't know about that. Auckland to Seattle is a bit of a swim.\" I said smiling.\n\n\"Amazing enough the cities aren't that different though. Both are on the ocean, huge melting pots, close to great wine, terrific food, now I just need to scout out a good Indian restaurant and I'll be set.\"\n\nI gave her a little nod. I thanked Len and Sandy for inviting me. Len brought up that this was larger than usual and once a month or so they do a weekend game night where a few couples get together for dinner, drinks, cards or board games, and that we were both invited next time they have one.\n\n\"You know, not necessarily together, you can come with other people if you want, or alone.\" He stumbled over his words, slightly drunk.\n\n\"What he means is that you're both invited, any way you want to show up. We'll figure it out, but expect to hear about it in a couple weeks. It's just a nice time that doesn't cost a fortune and keeps us social rather than vegetating in front of the TV.\" Sandy added with a laugh.\n\n\"Don't worry, I get the feeling I'm about to be asked out on a date.\" Kathy said with a wink to her. \"I'm sharing a ride home.\"\n\nThe complete lack of subtlety made everyone laugh but me. Sandy laughed when she looked at me. \"You're not as sly as you think Tom. No man really is.\" I had the good grace to blush.\n\n\"I... I mean... it might happen, possibly, likely, definitely.\" I shrugged to more laughs.\n\nWe bid farewell to the other guests and I took Kathryn's coat and helped her into it. I knew we'd be the fuel for the next half hour of conversation and I didn't care. \n\n\"Stop a second.\" Kathryn took my arm as we walked down the steps to the street. \"Despite the fact I look killer in them I'm not the best in heels. Add a bottle of wine and the cover of darkness to that and I end up dangerous to myself.\"\n\n\"Better on the deck of a trawler in rubber boots?\"\n\n\"Much more stable for than these!\"\n\nThe driver got us back to the city. Kathy looked at me her expression was that of someone trying desperately to keep from laughing.\n\n\"What?\" I asked. We both laughed unable to contain our humor.\n\nShe took my hand and placed it on her knee and her eyes flashed in the low light coming through the windows. I looked up at the driver who had earbuds in but I knew he could hear well enough.\n\nI gave her knee a gentle squeeze. \"So...\"\n\nShe bust out laughing. \"Yes?\"\n\n\"I was wondering, if you didn't have any other plans, if you'd be interested in going out next weekend?\"\n\nShe looked down at my hand on her knee and up at me and I drew it away and she shook her head. She took it and put it back on her knee.",
        "\"You don't want to see me before next weekend?\" Her smile went from amused to smoldering.\n\n\"Truth? I want to see you right now.\" I said softly. She glanced down at my hand willing me to lift the hem of her dress and I did so, slowly.\n\n\"Then prove it.\" She didn't look up at me, she just watched my hand slide up her thigh. I got half way up her thigh and there were garters holding up her stockings and I exhaled.\n\n\"Well?\" She said softly. \"Is she, or isn't she?\" \n\nI felt the skin of her thigh, warm and soft and gasped. I moved higher, and her hand rested on mine.\n\nI looked up and she looked at me still smiling.\n\n\"Come on now, you don't get to find out without a guess first.\"\n\n\"She isn't, but she was.\" She looked me in the eye and giggled, her hand came away from mine and I proceeded. Her skin felt like it was getting hotter under my touch. Thanks to a swift turn by our driver my hand slipped from the top of her thigh down between them. Kathy's eyes popped open and she shifted her leg giving me room to continue. I felt the fuzz tickle the back of my hand as I met with damp heat.\n\nShe made a humming sound as if she'd just bitten into the most delicious dessert ever and her eyes closed. She shifted ever so slightly and I felt the dampness change to wetness and I pressed onward sliding my fingers deeper where I massaged her lips. She let out a soft sigh and leaned over to whisper into my ear.\n\n\"Correct, on both counts.\" She reached up and turned me to face her and kissed me. I pressed deeper and rubbed my knuckle against the hood of her clit and she nearly bit tongue off. \"You're playing with matches in a explosive place.\" She said, and buried her tongue in my mouth again. I pressed deeply but her legs had gripped down keeping me from entering her. She gasped and leaned back reaching for her purse. I looked around and realized we where in front of my building.\n\n\"How long have we been here?\" I asked the driver.\n\n\"A few minutes now.\" He turned and looked over the seat and smiled. His eyes scanned up and down Kathy's figure as she reached into her purse. I reached over to pull the hem of her dress back down.\n\n\"Leave it.\" She said firmly. She pulled out a couple bills and handed them to the driver. She turned slightly and winked at him and spread her legs for a peek. \"Have a great night.\"\n\n\"It won't be nearly as great a night as he's about to have.\"\n\n\"Aw that's sweet. Entirely true too.\"\n\nI opened the door and she slid across the seat to get out. She looked over her shoulder and said something and he laughed. She stood and took my arm smiling.\n\n\"What did you say?\"\n\n\"I told him I wished the ride had been longer because I would have been on you in another minute, and I apologized for the snail trail I just left across the seat.\"\n\n\"Oh my God.\" I said laughing as the car pulled away.\n\n\"I slipped him a twenty for the cleaning, and if he's into that my panties are on the floor.\"\n\n\"My place or yours?\"\n\n\"Well, I'd like the first time to be just between us, so yours. We'll see if you're game for a public show another time.\" Her eyes flashed as we walked towards the door of my building.\n\nWe got on the elevator and she turned to face me and grabbed my cock and kissed me again. She leaned into me hard enough to push me into the wall. The door opened and I looked up to find the hallway empty. She leaned back and saw the floor number and grabbed my tie and dragged me off the elevator.\n\n\"Which way?\"\n\nI looked left and she began hauling me by the neck like a bad dog on a leash.\n\n\"Seven oh two, next door on the right.\"\n\n\"Key?\"\n\nI got the door unlocked and as soon as it was closed behind us she turned and pinned me against the door.\n\n\"One week ago I had the most glorious orgasm I've had since uni thanks to you. You accomplished that from across four lanes of traffic which is damned impressive. I want you to do it again, with me on this side of the street this time.\" Her lips crushed mine again.\n\n\"Can I take your coat?\" I asked as soon as I could breathe again.\n\n\"I expect you to take it all, every last stitch off.\" I hung our coats and she dropped her purse on the hall table and walked into the room. The tripod stood with the binoculars and she turned grinning with her tongue out. \"Pervert!\"\n\n\"Best investment I've ever made.\"\n\n\"I don't know your portfolio but I might have to agree.\" She turned around and reached behind her and unzipped her dress, letting it fall to the floor. The small black bra followed. She put her hand on her hip.\n\n\"Does the up-close view match up? You know some optics can distort your view.\"\n\nI just reached for my tie and dragged it off and tossed my jacket over the back of the couch. I stepped forward and drew her to me.\n\n\"You are absolutely stunning no matter the distance.\"\n\n\"These trousers are going to the cleaners.\" She wrapped a leg around my hip and drew me into another kiss.\"\n\n\"If they survive me tearing them off.\" I felt her hands on the buttons of my shirt. I tried to help her and she brushed my hands away.\n\n\"Slow down, we've got all night and most of tomorrow.\"\n\n\"I can't help myself, I've been dreaming of this moment for a month.\" I kissed her neck causing her to moan. I worked my way down to her chest and she leaned back slightly and I moved lower taking her nipple in my mouth roughly. She pulled me off almost forcefully and dragged me to the sofa.\n\n\"Give me your shirt or you're going to need this sofa professionally cleaned.\" She yanked the shirt down my arms and undid the cuffs. She folded it loosely and sat on it and pulled me by the belt buckle towards her. She fumbled with it for a moment before getting open and opening my pants. She looked up at me and licked her lips as she slowly unzipped them and pulled them open. She grabbed the waistband and pulled them down then leaned in and rubbed her cheek against the tent in my shorts. \n\nShe made a humming in her throat as she reached for the waistband and pulled them down, freeing me. I was panting like crazy, almost ready to lose it when she took me in hand and gave me a long lick up the side of my cock. It was my turn to cry out. I was tightening my fists, nails digging into the palms to keep from taking her by the head and plunging into her mouth. She got to the tip and licked it to clean it up.\n\n\"Well this is much nicer close up.\" She leaned forward and took me into her mouth, toying with the tip before taking it deep into her mouth. I thought I would lose my mind at her slow pace and flexed each time she drew back causing her to place her hands on my hips to keep her in control.\n\n\"I'm losing my mind.\" I gasped.\n\n\"You've been imagining this, I can tell.\" She cupped my balls massaging them as she took me in her mouth again. She began a steady pace of drawing me out and swallowing me again. I must have given her some indication I was close because she stopped and just stroked the sides with her tongue and lips. \"There's no hurry is there?\"\n\n\"Why are you torturing me like this Kathy?\"\n\n\"Call me Nina. You're hot little fantasy from across the street.\"\n\nI laughed and gasped as she took me back into her mouth. She drew back again stopping.\n\n\"I wonder... did you picture me trying to swallow it all and having run down my chin, or did you imagine splashing it all over my face and tits?\" She lifted my cock and licked my balls. \"If you don't tell me I'll leave you like this and walk home naked.\"\n\n\"In your dirty mouth Nina. I pictured me painting your throat!\" She didn't hesitate to take as much of me into her mouth as she could as she massaged my balls and bobbed her head. She slid her fingers back and began to massage my prostate and I grabbed her by the back of her head and exploded. I felt her swallow hungrily as I filled her throat. I felt my knees go weak and thought I was going to collapse, but I caught myself. She released me, leaned her head back and swallowed and took me in again and kept sucking without letting up until she had run my balls dry.\n\n\"Damn I hope somebody across the street saw that.\" She said with a laugh. I looked up at the window and saw my reflection and then back at Kathy.\n\n\"Succubus.\" I gasped.\n\n\"Everyone should get to enjoy themselves on a Saturday night.\" She put a finger to the corner of her mouth and wiped a drop of cum off and licked it up. I began kicking off my shoes and slacks. I pulled her up off the couch causing her to yelp in surprise as I kissed her. She melted against me as I tasted myself on her lips. My fingers slipped between her legs, finding a veritable pool of wet heat. I slipped a finger into her and she moaned deeply into my mouth. I leaned back and slid the finger into my mouth.\n\n\"I've been wanting to taste that for weeks.\"\n\nShe shook her head slowly, as her smile broadened. \"Don't let me stop you from going to the source.\"\n\n\"Let's get you comfortable first.\" I said turning her towards the bedroom.\n\n\"I like the sound of that.\" She kicked off her heels, padding quietly across the hardwood to the bedroom. I reached in and turned on the lights and she looked around. I walked to the bed and pulled the comforter off. When I looked up Kathy was biting her lip.\n\n\"Listen I don't want to kill the mood, but I want to say that I'm not really crazy. I just like to role-play a little. Nina is my dirty little hussy persona, and trust me I enjoy every minute of it.\" She looked down and seemed to be thinking of how to word something.\n\n\"What are you trying to say?\"\n\n\"I'm not really Nina. I mean, as many loads have been fired at windows, or into socks, towels, whatever, over here I have never been to this side of the street before. I'm not really a slut.\" She looked away and I could see her cheeks redden even in the low light. \"I mean I'm really just Kathy the nerdy fish scientist.\"\n\nI smiled and walked to where she stood near the door to the living room, not having come all the way into the bedroom. I took her in my arms and kissed her again. \"How did you get my number?\"\n\nShe started laughing. \"Really? That's what you're wondering right now?\"\n\n\"C'mere.\" I sat her on the edge of the bed and rolled her stockings off. I laid her back on the pillow and walked around to the other side and climbed into bed. She rolled to face me but stayed near the edge. \"How long has it been?\"\n\nShe closed her eyes and grinned. \"Around a year.\" She pursed her lips, her eyes squinted even more.\n\n\"About the same here. Relationship ended badly when I got this job and she didn't want to move.\"\n\n\"Wife?\"\n\nI shook my head. \"No.\" I kept from saying anything more that might further kill the mood.\n\n\"I'm sorry, I feel like I built this up and now I'm reneging on you. I'm not, I'm just nervous that I won't live up to the hype.\" Her laugh was small and nervous and she covered her eyes.\n\nI pulled her hand away. \"Peek-a-boo. You know I've spent a lot of time thinking about you for the past month. You have yet to disappoint. You're everything I said about you at the party. Fun, sassy wild when you cut loose, introverted, I'm going to add vulnerable to that because despite who Nina is Kathy is vulnerable, or maybe insecure is a better word. There's an old song, not sure if it ever made the airwaves down-under in your time. Well we all have a face/ That we hide away forever/ And we take them out/ And show ourselves when everyone has gone/ Some are satin, some are steel/ Some are silk and some are leather/ They're the faces of a stranger/ but we love to try them on.\"\n\nShe grinned. \"Well that's a first. I've never been serenaded in a man's bed before.\"\n\n\"Piano lessons, mom was a huge Billy Joel fan.\" I laughed. \"It's okay to try them on, just make sure you don't forget who you are.\" We were quiet for a few minutes. Kathy sidled up to me and kissed me chastely.\n\n\"Thank you.\"\n\n\"For what?\"\n\n\"Making me feel better.\"\n\nI kissed her back, longer, and slower. Her arm reached around taking me by the neck and she laid back pulling me over her. My hands began to roam over her body and her hips rolled gently against me as I ran my fingers up the inside of her thigh. I kissed my way down her neck and chest taking her nipple in my mouth and sucking on it hard, lifting it up before releasing it causing her to gasp. I leaned over and did the same to the other and her thighs closed on my hand and squeezed.\n\n\"Nngha!\" I had no idea if she was just moaning or that meant something but it was very encouraging as she laid her thighs open to me a moment later. I kissed my way down her flat stomach, and nuzzled her with my nose.\n\n\"I've never seen it straight down here before.\" I said. She laughed and her legs closed. \"Oh no you don't.\" I applied pressure with the hand that was still between her thighs and gripped firmly. She was strong but pliable and her thighs parted again. I got up and knelt at the end of the bed, grabbed her ankles and dragged her to me which made her yelp and giggle. The giggle died out when I put my lips to the inside of her thigh and began working my way upward. When I reached her lips I kissed them gently and stroked her clit with the tip of my tongue. Her body tensed and she made that noise again, which I guessed by this time was just her trying to keep from crying out. \n\nI licked my way back down and licked her lips, gently tasting her with slow dips of my tongue. I felt her heel pressing into the back of my neck drawing me in harder against her. Her hips began to rise and press forward and I suckled her clit making her cry out as she ground herself against my lips. Her legs began to shake and her hips bucked repeatedly as her orgasm washed over her. I kept at her wanting it to last, and seeing if I could make her cry out loud enough to wake the neighbors. I flicked her clit with the tip of my tongue and it was like a spark shot through her body. She cried out and twisted away from my mouth. She rolled over and came up on her knees.\n\n\"Now! Please, fuck me now!\"\n\nI didn't even think before standing and sliding my cock into her to the hilt. We both moaned and she began to roll her hips immediately. I began driving her hips forward with each stroke and she leaned forward, ass in the air, showing off a pair of cute dimples begging for me to grab hold of her waist.\n\nKathy began crying out again as her body tensed. I didn't stop but kept driving into her hoping to last but my body began to respond to hers and I felt the end nearing as I drove forward one last deep stroke and came like a fountain. I could feel her muscles ripple as she came again. I gulped air and exhaled slowly, trying to slow my heart as it bashed my ribs.\n\nShe shimmied her hips and I realized I was probably leaving hand prints from holding her so tight. I relaxed my hands and she collapsed forward. She was panting, eyes closed. I ran my hand up the back of her leg and leaned down and kissed her lower back. Then moved down and bit her on the left cheek of her ass making yelp and squirm.\n\nI went and washed up and brought back a warm cloth and towel for Kathy and found she hadn't moved. I pulled her knees apart and washed her gently and dabbed her with the towel. I returned them to the bath and when I came back she had moved up the mattress and laid with her head propped on her hand. She looked at my cock and licked her lips, while flashing her eyes at me.\n\n\"I'd ask if that sated your hunger but I'm guessing that was only the appetizer.\"\n\n\"I do like appetizers.\" She patted the bed beside her inviting me to join her. When I laid down she scooted up against me and kissed me deeply. Her hand glided up and down my torso, her fingers toying with the hair on my chest. She lifted her chin and I kissed my way down her neck and back up to her ear, and her body shivered. \n\n\"That's good to know.\" I said laying my hand on her breast, the hard nipple pressing into my palm.\n\n\"What's that?\" Her voice breathy and quick.\n\n\"Your neck is your hot spot.\"\n\n\"I won't lie, but please don't leave any marks as much as I'd love you to leave your mark on me.\"\n\n\"I'll make my mark on you but it will be exhaustion if I have anything to say about it.\" \n\nHer hand slid down my stomach to see how I was recovering and I laughed into the nape of neck. \"It may take a few minutes but I assure you, having you right here is going to make it happen and quickly.\"\n\n\"I'm your catnip?\"\n\n\"Meow. Things moved pretty fast. I should have asked...\"\n\n\"Six months ago, clean, no other partners, and I have an IUD which is going to be sorely tested for the foreseeable future, so it might seem. You?\"\n\n\"Close to a year ago, this is the first sex that I've had with anyone but my window since.\"\n\nThat made Kathy laugh. \"Well I don't think you can catch anything from your window, but you might find yourself investing in more glass cleaner if you keep it up.\" She stroked my cock a few times to demonstrate and it was beginning to respond even if slowly. She let go and climbed over me and straddled my hips and we continued making out. I felt her shift and I took her by the hips.\n\n\"Ah, ah. How did you get my number.\"\n\nShe brushed her hair out of my face and kissed my forehead. \"Honestly I thought you would have figured it out by now. Not much up here is there?\" She grinned. I swatted her backside causing her to gasp. \"How dare you make free with my person!\"\n\n\"I already have, and I plan to again as soon as possible. Answer the question.\" I said with a grin.\n\n\"So inquisitive. I would think it obvious. Sandy has been to your office several times over the past year to see her husband, pick him up, what have you. She said she'd met a hot guy she said would be perfect for me, and spent the past six months pushing it at me despite my telling her I was fine. She saw how the guys at work follow me around like puppies regularly asking me out. She said I was sadder than an old spinster and that I should enjoy my time here. Obviously getting your number from Len wasn't difficult. The fact that you live right across the street was karma I expect.\"\n\n\"So you knew this whole time who I was, and had my number.\"\n\nShe bit her lip and nodded.\n\n\"Did you do floor shows before sending me that first note?\"\n\nHer eyes lowered and she nodded. \"Nothing so elaborate though. Just walking around starkers mostly. I've played a bit but nothing like that night with Deep Blue.\" She sat up on my hips and brushed her cheeks which were bright red. \n\n\"Well you definitely got my attention in all the right ways.\" I laughed.\n\n\"Last night was a surprise. She didn't tell me that you would be there. I nearly didn't admit to being Nina and wondered if you would catch on, but I couldn't. I was a bit too excited to find that Sandy was right. She did find a hot guy. She didn't mention you were sweet too.\"\n\nI sat up and Kathy started to get off my lap and I held her knee down and slid out from beneath her, propping myself against the headboard. My cock had come back to life and attempted to stand at attention, but it listed to and fro like a drunken sailor. When she saw it she smiled and scooted back into place and pressed it flat between us as she assaulted my mouth again.\n\n\"Oh, by the way, I am free next week if you want to wait that long. Friday, Saturday, which ever suits your fancy.\""
    ],
    "authorname": "Member389",
    "tags": [
        "exhibitionism",
        "flashing",
        "masturbation",
        "voyeurism"
    ],
    "category": "Exhibitionist & Voyeur",
    "url": "https://www.literotica.com/s/the-girl-across-the-way"
}