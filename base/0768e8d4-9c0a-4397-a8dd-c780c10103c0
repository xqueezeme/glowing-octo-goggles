{
    "title": "The Unicorn",
    "pages": [
        "Here it is, my contribution to the \"Welcome To The New World\" event. I hope you like it.\n\nI couldn't believe he was gone. He was thirty-five, six years older than I was. Way too young to die. Then again, he didn't die a natural death. He died a horrible miserable death on the streets of some third-world shithole, gunned down with several of the men he was trying to do business with.\n\nTurns out they weren't the respectable businessmen they had led Steve to believe they were, but high-end drug dealers trying to branch out into legitimate business. Their competition took the opportunity to eliminate them as business rivals and did a drive by, using machine guns. Four of them to be exact. Steve was hit seventeen times, lucky shots all, and they pretty much cut him in half. If it was any consolation, he didn't suffer long, dead in minutes from loss of blood. I wondered if he thought of Jen, his beautiful wife, and their plans to start a family soon. I wondered if he had time for regret, to realize he should have been happy with what he had. Heck, he was already a millionaire many times over.\n\nSteve wasn't like that. He was obsessive, always looking for the ultimate deal, the one that would give him rock star status among his peers. He really thought this was it. He talked it over with me, as he had a habit of doing on all his deals. We were usually on his boat, fishing, just us. I'd look at him and just grin. \"You really expect an intelligent answer? Shit, I don't understand what you're talking about most of the time. This stuff is giving me a headache. Now, are you out here to get Mr. Big or what?\"\n\nHe'd grin back. \"Mr. Big, definitely. Hey, did I show you my new rod? It's supposed to be the best. Think it will help me any? Oh, and I know you don't care or understand what I'm saying, it just helps me to say it out loud. Can't do that in the office; the walls have ears.\"\n\nI'd just sigh. He'd fool with the rod that cost probably a third of my yearly income, get aggravated, toss it down, and pick up the old five-and-a-half foot rod with the almost antique Zebco 33 I'd given him, and start catching fish. In the time I'd known him, he'd probably spent ten grand on fishing equipment, not counting the boat. He never listened when I tried to teach him, and the fish had to just about commit suicide on his hook before he caught one, but he had a blast trying.\n\nMy time with Uncle Sam had taught me there was probably no safe place to talk. Any of the boats we could see might have equipment that allowed them to hear our conversations like they were standing behind us. Not to mention hacked phones, video and analyzing the conversation with lip readers, the opportunities were endless. I let him go, though. What he talked about had nothing to do with national security, or corporate espionage, so he was probably safe. I did venture an opinion, the first ever since we'd met.\n\n\"You need to think about this, dude. I've been where you're going, and it ain't Paris. People there would cut your throat for your watch and shoes. Hire security while you're there and listen to them. Almost no one there is what they seem.\"\n\nHe just laughed and tried to talk me into going with him. I politely declined.\n\nAfter a few hours he gave up on Mr. Big and took consolation in Brother Bud. Jen frowned as I helped him out of his truck and into the living room, where we laid him on the couch. He was snoring in minutes. \"Want me to help get him into bed?\"\n\nJen smiled a sad smile. \"Not really. Let him sleep it off there, and when he wakes up with a stiff neck and an aching back he might think about it before he does it again. I swear, Jaime, you bring out the best and the worst in him, usually at the same time. How do you do that?\"\n\nI shrugged. \"Natural talent, I guess. Surely his other friends bring him home blasted some times.\"\n\nI didn't know how to take her answer. \"He doesn't have any other friends, Jaime. All the rest want something from him, or he wants something from them. With those guys, you don't just hang out. Every party is a business meeting; every social event is just an opportunity to network. It's all about the Benjies, baby.\"\n\n\"That can't be true, when he's around me we rarely talk about business. Most times it's about huntin', fishin', the wild women we have known and bedded, the ones that got away, the ones we wished had gotten away. Hot cars, hot bikes, hot boats, normal guy stuff. When he does talk business, I don't understand half of what he says, anyway.\"\n\n\"And that,\" sighed Jen, \"is why he loves you. You could give a damn about his money, his status, or his acute business sense. All you care about is the good times you have when you're together. Plus, you don't hesitate to call him when he starts spouting junk. He loves you because you don't expect anything but friendship from him. One of the best things that ever happened to him was meeting you.\"\n\nShe looked at him and sighed. He had told me they were supposed to have a date night; business had been intense and he had been neglecting her. Not a good idea, because she wasn't just smokin' hot, she was blast-furnace hot. She'd been a model before she stopped after their marriage. She still worked out, still kept that hot body. Men walked into doors and buildings when she walked down a street. I knew, because I'd seen it. Besides the hot body, she had a perfect face, nice smile, pouty lips, blue eyes you could get lost in.\n\nI was so tongue tied the first three times I was around her I could barely talk. She finally made me do three shots with her, and proceeded to tell me the dirtiest, nastiest jokes I'd ever heard for thirty minutes. I was laughing so hard I forgot to be shy, and we'd been friends ever since. I got an idea.\n\n\"You own any jeans?\" I'd never seen her in anything but dresses and skirts.\n\n\"A closet full, why?\"\n\n\"Got any boots? Cowboy boots, maybe?\"\n\nShe grinned, for the first time. \"Why Jaime, are you getting kinky? Because if you are, I have these thigh-high black boots that go great with my leather corset and flogger. If you mean regular boots, I have them in snakeskin, ostrich skin and plain old leather.\"\n\nAfter I stopped blushing and she stopped laughing, I asked her out. She seemed startled and asked me why.\n\n\"Because, Jen, you need to get out and let go. Let sleeping beauty lie and I'll take you to a world you've never experienced before.\"\n\nShe stopped smiling, and I rushed to explain. \"I was going out tonight, a little club that I bet you'd love. You're a very beautiful woman, and I'm sure ninety-nine percent of men in this world would grovel at your feet for a chance at you. I'm in the one percent here, Jen. I don't trespass and I respect boundaries. All I'm offering you is a chance to have fun, let your hair down, maybe shake that fantastic rump of yours. I'll watch over you. I'll even take pictures, and you can rub it in when he's nursing his hangover. You seemed down, and I thought I'd offer.\"\n\n\"Will there be beer, and rednecks, maybe a bar fight or two?\"\n\n\"The first two are a definite. No to the rest. You don't cause problems in that place. It's very painful if you do. Rough up a woman and the bouncers would have to fight through a crowd just to get to the guy. By the time they get there, about all they have to do is take out the trash. It's a friendly couples' oriented place, and they like to keep it that way. Just thought I'd offer.\"\n\nI rose from the kitchen table, and rinsed my coffee cup before placing it on the counter. Jen always joked that with my habit of neatness I'd make a fine wife someday.\n\n\"We'll take the Jag.\"\n\n\"We'll take the truck. If you took that Jag, every good ol' boy in the place would have to drool on it. Now, jeans and a nice shirt. And Jen, could you turn the heat down a little? The way you look right now, I'd get my ass kicked a dozen times trying to protect you.\"\n\nShe stuck her tongue out, and told me to wait ten minutes. I told her I needed to go home and have a shower to get the fish smell off me and get some clean clothes. She grabbed my hand and led me to the master bedroom, something that made me very uncomfortable.\n\n\"Stand here!\" She walked into his closet, a twelve by twelve room stuffed to the gills. Hers was twice as big. I heard her opening drawers, and she came back with jeans, a western shirt, and anaconda skin boots. I was led down the hall to a guest room with a large bathroom.\n\n\"Here you go. He bought those things new a year ago, right after he met you, and has never worn them. I didn't bring you any boxers, so it's commando for you, big boy. Now clean up, and meet me downstairs in twenty minutes.\"\n\nSteve and I were exactly the same size, down to shoes. The only difference between us was height. He was half an inch taller. Same hair, same eyes, people thought we were brothers most of the time. I showered, enjoying the multiple shower heads, shaved with the kit I found under the counter, and dressed. I had to admit I looked pretty good, for me. Well, they say clothes make the man.\n\nIf she tried to tone it down, it didn't work. Those jeans looked so tight I was afraid if she sneezed she'd blow every seam. A western shirt, pale pink to match her lipstick, her mane of curls were pulled back into something I think was supposed to be a pony tail, but looked like a sexy mess. She had a white Stetson in her hands and bright red boots on her feet.\n\n\"How do I look?\" she asked as she twirled.\n\n\"Trouble, you look like trouble.\"\n\nShe smirked. \"Exactly the look I was going for. Now come on.\"\n\nWe checked on Steve, who was now hugging a pillow and snoring. Jen wrote him a note and placed it on the coffee table beside a bottle of water and three Tylenol. We took his truck, since mine was still at the marina. It was a brand new shiny Z71 four-door four-wheel drive hunk of pearl white and gleaming chrome. Well, I thought, as I drove to the bar, at least it was a truck.\n\nWe arrived forty minutes later at The Barn, a huge building designed to look like, take a guess here, a barn! Almost everyone outside ogled the truck, but when I got out and helped Jen step down, every guy immediately thought \"What truck?\" and ogled Jen. She knew it, and used to the attention, strutted into the place like she owned it. She had a death grip on my arm, so maybe she wasn't as confident as she let on.\n\nThere is no other way to describe it, when we went through the door everything stopped and people just looked. The band hadn't started yet, and the place, usually buzzing, went quiet. I just grinned, and kept walking, waving to Mary to bring me a pitcher. It wasn't three minutes until she was there. She poured the beer for Jen, then ran mine all over the table while looking at her. I took her arm gently and stopped the flow. She looked down, flamed red, and started apologizing. Jen patted her arm. \"Don't worry about it honey. I was the same way the first time I saw Jaime.\"\n\nMary looked from her to me, mumbled something and walked off, running into two tables before she made it back to the bar. I grinned. \"Watch out, Jen. Mary is a switch hitter, and her on-base average is pretty high.\"\n\nJen laughed. \"She's out of luck, then. I quit playing on both teams when I graduated from college.\" It was my turn to choke on the beer.\n\nI saw the friends I was supposed to meet, and waved them over, making the introductions. It took forty-five minutes and three beers before they relaxed, and by then Jen had them so charmed they would have killed for her. I'd seen her work her magic before, so I just sat back and enjoyed the ride. Then the band started up, and I grabbed her, hustling her to the floor for a two-step. It took her about thirty seconds to catch on. I learned she held a college degree in dance. That song rolled over into a line dance, followed by the Cowboy ChaCha. By then I was out of breath and dragged her back to the table, the pout obvious on her face. I grabbed Greg.\n\n\"I'm tagging out, brother. See if you can keep up.\" She was pulling him out of his chair before he knew what happened. Thirty minutes later, she brought him back, huffing and puffing like he was about to have a heart attack. She actually sat and had a beer. Ten minutes later the band played a really slow song. It was a favorite with the crowd and they laughingly called it the Snuggle Special. She was out of her chair and tugging, so I went along. It was probably one of the most erotic things I'd ever experienced, and she had no idea. She molded to me, no dead space was allowed, swaying her sensuous body against me. The inevitable happened and I tried to pull back. She looked surprised, then grinned and molded tighter, even grinding a couple of times. I was in a daze when the song stopped and it took her a while to get me to let her go. When I did I instantly flamed red and took off to the bathroom, washing my face and arms with the coldest water I could get, trying to calm down.\n\nBy the time I was back she had Greg on the floor. I watched as she twirled and swayed to the music, her ballet training showing through. Poetry in motion was just a term to me until then. Then Barb tried to ruin the mood by getting catty. \"Jaime, Jaime, you naughty boy. I thought you said you would never hook up with anyone married. Of course, what man could resist that?\" She was staring daggers at Jen. Barb had been a spectacular woman, before four kids and three divorces. She was only thirty-four, and with the right makeup and lighting, she was still attractive. Not so much in the light of day.\n\nShe decided I would be lucky number four and made a run at me while she was still with number three. I didn't tell her the thought of being intimate with her was enough to make my skin crawl. They didn't make condoms that strong. I let her down easy, stroking her ego by telling her as wonderful as the offer was, I was going to pass. I had a hard and firm rule about married women. Leave them alone. When three finally caught her and kicked her to the curb, she had been hanging around the clubs, looking. She was getting child support from three different dads, and had won a little cash in the last divorce. My opinion was he finally just decided to pay her to leave him alone. So she didn't work, living off her ex's.\n\n\"It's not easy, but it can be done, Barb. Her husband is one of my best friends in this world, and I would never do anything to make him think less of me. He wasn't available and Jen wanted to go out, so here we are. It's just harmless fun to her, and she's having a really good time. Have you once seen her do anything inappropriate? She's either at the table or on the dance floor in plain sight. The guys she's danced with will have a tale to tell for the rest of their lives, holding a woman voted fourth most beautiful in the world at one time.\"\n\n\"Bullshit! I've seen the way she looks at you, the way you look at her when she's not watching. She's infatuated, and you're in love.\"\n\n\"Maybe so, Barb. But say I did love her? So what? She doesn't love me, and even if she did she's so far out of reach I might as well try to grab the sun. I'm just grateful she's my friend, and that her husband trusts us both. Think hard, Barb. Try to remember trust, and being worthy of it. It's been a while, I'd wager, since any woman would trust you around her husband or him around you. You've had, I'm assuming, the total trust and love of three men already. How's that working out for you? This is the only time I'm going to say this Barb, and after that you're on your own. Time to change your spots, reevaluate where you are in your life, and change. You'll never be happy, or make anyone else happy, until you do. You're still attractive under that inch of makeup. Get out of the bars and wash that shit off. Show the world your real face, and you might find a man who loves looking at it. End of lecture.\"\n\nShe stared as she got pale, red, then pale again. Then she surprised me by crying, little tears at first, then huge drops, followed by wracking sobs. I didn't know what to do, and it hurt me to think I caused her pain, so I hugged her, which made the tears bigger. I patted her back until she went down to soft sniffles. I didn't see it, but Jen had come back. She immediately dug a large wad of tissues out of her purse, and gently started cleaning her face while the sniffles stopped. Then she surprised everyone by taking her hand and leading her to the restroom, taking half the women at the tables with her.\n\nJen, thanks to her modeling career, knew quite a bit about makeup. When she reappeared with Barb, the transformation was amazing. Gone were the hard lines and thick makeup. She had makeup on, but it was subtle, flattering instead of hiding. Her hair was different, with a softer more natural look. I noticed her shirt was buttoned up, the first time in forever she wasn't flaunting cleavage in your face. Oh, the top two buttons were still undone, giving tantalizing hints instead blatant advertising.\n\nIt didn't take long for the guys to notice. A lot of them didn't realize who she was until they were right in front of her. Men who had walked right by her in the past suddenly found themselves asking her to dance, and for the first time since I'd known her, she said no, a lot. It took me a second before I realized when someone asked her to dance she would look at Jen, and say yes or no according to her expression. \n\nWe wrapped up the night on a high note, and watched as Barb left with her female friends, and not with a random hookup. I just drove, listening to Jen's contented humming. When she was really happy, she hummed without realizing it. We drove up to her mansion, punched the code in to the keypad, and I parked the truck in the garage.\n\nIt was two in the morning, and she told me in no uncertain terms I was spending the night. I'd been up almost twenty hours by then, and it sounded like a great idea. We managed to wake Steve enough to get him into bed, then I went into the guest room and crashed. It was ten before I woke up. I found Jen and Steve at the kitchen table, drinking coffee. Jen looked just as gorgeous as ever, and Steve still looked a little green around the gills. I grinned.\n\n\"Man, am I ever hungry. I think I'll make some breakfast. Red hot sausage, eggs with peppers and onions, covered in hot sauce. Better yet I'll make my famous breakfast chili, and pour it over the eggs and potatoes. Greasy, fried potatoes, if they're not dripping when you serve them, you've done it wrong. And the eggs have to be runny, so the hot chili can finish cooking them and soak the flavor in. How 'bout a big bowl, Steve? You can wash it down with a Bloody Mary, with a few extra shots of tabasco sauce. My mouth is watering just thinking about it.\"\n\nSteve got progressively greener, until he jumped up and ran to the bathroom. I yelled at his retreating back. \"Redneck wisdom here, Steve. Just because you bring a case of beer doesn't mean you have to drink a case of beer. Now, how about breakfast?\"\n\nJen swatted me on the arm, grinned, and then toasted bagels, with jams and cream cheese. It almost made Steve go back to the bathroom. I probably drank four cups of coffee. They bought the best, and had a maker designed by NASA. I think it even factored in barometric pressure while it brewed. Steve was back on the couch again when Jen took me back to my truck.\n\n\"I had a great time last night. Thank you. It's been so long since I left the house for an evening that didn't have an agenda other than having fun. I envy you.\"\n\n\"Why, because I live a simple life? I probably make in a year what Steve makes in two or three days. I have to worry about bills, paying a mortgage and a car payment, wondering if my job will hold up or if I'll be out on the streets if there's a downturn in the economy. If Steve stopped bringing in money today, you could still live the same lifestyle you have right now for the rest of your life. Like the guy said, money won't buy you happiness, but it will buy you the best brand of misery.\"",
        "\"You think I care about any of that? I made enough off modeling that I'd never have to worry about what Steve has. I quit modeling with one goal: to find a good man and have a family. I'm trying to get Steve to start a family, and for three years in a row he's said maybe next year. My clock is ticking honey. I'm not getting any younger.\"\n\n\"Really? Are you even thirty yet? Relax, Jen. You have all the time in the world.\" \n\n*****\n\nBelieve it or not, that was the first conversation I remembered when I found out he had died. No one notified me; I heard it on the nightly news like everyone else. I drove straight over, only to find the place full of people I didn't know. The asshole who answered the door didn't want to let me in so I straight armed him into the wall, walking by as he sank to the floor. I found Jen in the living room, surrounded by three of her college friends. Probably the only real friends she had in the whole house. She was sitting there, staring blankly, numb from grief, no doubt.\n\nWhen she looked at me she wailed, and held out her arms. I soon had her on my lap while she cried like a baby, her friends petting her. The wails subsided to sobs, then sniffles, and then she was out. Her friends gave me a look of gratitude. I knew one; I'd met her at their house and we'd gotten along to the point she asked me to escort her to an awards dinner. Jen fussed over me like a mother over a thirteen-year-old. She bought me a new suit, shirt, tie, shoes and sent me to her stylist.\n\nI probably looked the best I was ever going to in my life when I met her at their house. I was told in no uncertain terms that I was to drive the Mercedes and be a perfect gentleman. Sandy grinned as Jen gave me my instructions. \"Not too perfect, Jen. I've never encountered a real live redneck, I've heard they can be lots of fun.\"\n\nI flamed red and Jen had an expression I couldn't read on her face. We had a really good time. Sandy was a lawyer, a very, very good lawyer, as it turned out. The award was for a pro bono case she had won, getting a man who had served seven years out of jail by proving his innocence. She was now representing the guy in a civil suit against the police department and the DA who had convicted him, proving evidence tampering and outright lies on the witness stand. They were trying to settle for half a million; Sandy told them they would accept no less than three. They later settled for 2.2 million. She was smart enough to get it put into payments, two hundred-twenty-thousand a year for ten years. It was enough to set him up in life if he was careful, but it wouldn't bring back the seven years he lost, or his family. His wife had divorced him, taken their daughter and moved across the state, saying she didn't feel safe exposing their daughter to his lifestyle. She'd remarried, and was on the verge of divorce. Sandy got him scheduled visitation, and one weekend a month for then. She talked him into scheduling counseling sessions for him and his daughter at first, to get them used to each other. It would be rough, but she hoped they'd reconnect.\n\nThey did, to the point that she petitioned to live with him when her mother's second marriage cratered. In a surprising move, he brought her mother back to town, got her a nice apartment, and supported her until she could provide for herself. He said it was to make up for the child support he should have paid. She hinted, but he turned her down. She'd been pretty abusive in the papers and had refused to let his daughter visit him in prison. Too much water under the bridge. Instead of going to work, he enrolled in community college, then transferred to state, getting a degree in engineering. He and his daughter shared an apartment the last year; she was a freshman at the same school.\n\nI had a really good time at the awards dinner, and enjoyed the dancing afterwards. Jen had to teach me to dance in the style expected, and I'm sure she nursed a few bruised toes the first few lessons. I was dressed well enough to fit in, and when asked I told them I was in construction management, not elaborating. I was actually a crew foreman, and made decent money for what I did. I even had a degree in Construction Management, courtesy of the GI bill. My bosses were impressed enough to promise the next management position that came available.\n\nI was talking to one lawyer I had hit it off with, and Sandy was mingling, networking I guess is the correct term. I heard her say \"NO!\" really loudly, and looked over in time to see her jerk her hand away from a guy. I casually walked over, surprising her by kissing her on the cheek. \"Hi, hon. Enjoying the evening?\"\n\n\"I was,\" she said darkly, eyeing the guy in front of her. He looked at me and grinned. He had to be six-five or better and weigh over two-fifty. He had muscles, but I was pretty sure they were gym muscles. I was five-ten, weighed one-seventy, and my muscles were earned through hard work. I could see the dismissal in his eyes. I'd seen guys like him a lot, and one thing the military taught me was how to compensate for size. I grinned back.\n\n\"You wanna trade insults, beat on your chest a bit, maybe howl? I think in the interest of time conservation we should skip the preliminaries and go straight to your ass-kicking. I've faced pretty boys like you before, and one thing I've always done, win or lose, is make sure they'll never be as pretty as they were before we started. Then again, you look like you can afford a good cosmetic surgeon. So, you wanna tangle, or just tuck your tail and walk away?\" \n\nHe started to bluster and I held up a hand. \"Yes or no, walk or fight? Say anything else and I will perceive it as a signal to start.\"\n\nHe stuttered a few seconds. looked around wildly, but no one seemed interested in backing him and many seemed to enjoy the thought of watching him get his ass kicked. He deflated like a balloon and walked away. Sandy looked at me like I had grown two heads before grinning. \"You've destroyed him, you understand that? He'll never be perceived as an alpha male by anyone who witnessed what just happened, and they'll be more than eager to spread the story. His power base is gone, and he'll never get it back. At least not here. I'll bet you anything he'll leave the firm in less than three months. \"\n\nI shrugged. \"If it wasn't me, sooner or later it would have been someone else. Wanna dance?\"\n\nShe did.\n\n*****\n\nIt turns out lawyers make pretty good lovers. She was on me like a cat in heat the moment we pulled away from the curb. Three blocks later, she shrugged out of the top of her dress. Her breasts were small but perfectly shaped, high and firm, her nipples huge, and very sensitive. She tried to blow me as I drove, but I pulled her head up.\n\n\"Let me drive. I'll wreck us if you keep that up.\"\n\nShe grinned but kept a hand on my erection, slowly sliding it up and down. We managed to make it to her garage, where I dragged her out, bent her over the hood, yanked her dress up and her thong down, and slammed into her as hard as I could. She screamed and climaxed instantly. I probably didn't last five minutes, but it was a very intense five minutes. Mary came twice more before I finally unloaded. \n\nWhen I pulled back she started sliding off the hood, so I grabbed her, carrying her into her house. I was going to put her on the couch but she revived enough to tell me where the bedroom was. I stood her up and she shrugged, the dress falling bunched to the floor. I didn't know it at the time, but we'd destroyed a three-thousand dollar designer dress.\n\n\"Get naked,\" she ordered, \"I still owe you a blowjob.\"\n\nLike there was going to be an argument. I woke a few hours later with her on top, riding me. I went with the flow until I got close and rolled her over, slamming into her as hard as before. We both collapsed back into sleep.\n\nWe showered together the next morning, got into a 69 on the bed before ending up with me doing her doggy-style. After she recovered she took another shower, came out dressed, and led me to the kitchen. Over coffee we talked.\n\n\"I really, really like you honey. I'd love to see you again, but I want you to know that right now my career comes first. I won't be looking for anyone to share my life until I make partner and that's a few years down the line. Think you can live with that?\"\n\nI think I surprised her. \"I can understand that. You're attractive, great in the sack, and have a nice personality, but I have to be honest. I'm not looking for the house with the picket fence and 1.8 kids right now. We can still be friends if you like.\"\n\nShe grinned. \"Make that friends with benefits and you have a deal. Jen was right about you.\"\n\nI asked and she just grinned, telling me to get it from Jen.\n\n*****\n\nJen was a little off for a while but after a long talk with her friend she was back to her sunny self. \"Sandy gave a glowing report of the date. I'm glad you're smart enough to keep from getting serious. Sandy's not the one for you.\"\n\nI was sort of depressed. \"I don't think there's a one out there for me, Jen. Every time I meet someone I use you as a measuring stick and they all fall short.\"\n\nShe went red and then seemed to glow while Steve laughed. \"You're ruined then. My wife is one of a kind, the gold standard of women in this world.\"\n\nJen really glowed then and I left, knowing they would be making love before my truck left the driveway. I wasn't jealous but I did reflect that if he felt that way he shouldn't neglect her as much.\n\n*****\n\nSandy stood with her friends, and motioned for me to follow. I carried her to her bedroom, and they turned down the sheets. I laid her down gently, touching her cheek before I left the room. At least one of her friends stayed with her all night.\n\nI went back into the living room, aghast at the sight before me. Somewhere along the line it started turning into a party. They'd found the liquor cabinet and were going at it pretty hard. I held it together until they turned music on, increasing the volume until it was almost blasting. Sandy came back in and looked at me, knowing what I was thinking.\n\n\"Who are these assholes?\"\n\n\"A lot are Steve's business associates, here to stake a claim and begin picking the bones. Some are from her modeling days, and a few of them are going to try to lure her back. The rest are just along for the ride. They'll use her until she comes to her senses then, drift away to another victim.\"\n\n\"You're her lawyer of record, right?\"\n\n\"I am.\"\n\n\"And Janice, she's a doctor, if I remember correctly?\"\n\n\"That's true,\" she said as she started smiling, realizing where I was going.\n\n\"Then go ask her, in her professional opinion, if this is a good environment for Jen right now.\"\n\n\"We've already talked about it. It's not. But while we're all intelligent professional women, there's little we can do with this pack of assholes. We're thinking of hiring security.\"\n\nI stood. \"Well, I'm not a woman and have never been known for my smarts. Maybe I can save you a few bucks.\"\n\nI got their attention when I turned off the music. \"On behalf of Jen and Steve, I'd like to thank you all for coming. Jen's doctor has prescribed bed rest and quiet, so if you wouldn't mind, honor her wishes and leave. You can all come back later after she's had time to process. I'm sure she would appreciate it.\" \n\n\"Who the fuck are you, asshole?\"\n\nBefore I could speak Sandy was in his face. \"He's probably the only male in here who actually cares about Jenny. Leave her in peace. If not, well, I'll just have to turn my security consultant loose on you. He holds two black belts and has been charged with murder twice, but I got it changed to justifiable homicide because he was protecting a client both times. Wanna test his limits?\"\n\nNone of what she said was true but they didn't know that. They left, grumbling among themselves until it was just me, Janice, Sandy, Melody, and Jen.\n\nJanice told us she had given Jen a slight sedative and she'd probably sleep the night through. She turned to me. \"Jaime, can you stay? Melody will be here but we'd feel a lot better if you stayed with her. Jen's going to be shaky for quite a while and she'll need friends around her.\"\n\nI ended up staying for four days, moving into the two bedroom guest cottage they had while the women stayed in the house. There was a huge turnout for his funeral and she held my arm in a death grip, only letting go when I did my pall-bearer duties. I sat beside her while the preacher did the graveside service. She'd cried herself out by then, and sat numbly as he droned on. \n\nThe vultures had decided that with me around they'd never be able to advance their agendas, so they left us in peace and we returned to a pretty quiet house. Maybe 20 people, but they were all fond of Jen. I left the next day after Melody and Sandy assured me they would not leave her alone for a while. I didn't see her again until I was summoned to her house for the reading of the will. It seems Steve had left me a little something.\n\n*****\n\nShe was ten pounds lighter and still a little pale, but she smiled when she hugged me. Jen, naturally, got everything except for a few personal items he wanted me to have. All his fishing equipment, his boat and his truck. He also left me a letter that I read when I got home.\n\n\"Man, if you're reading this then I'm dead. That sucks. I'm hoping you're in your sixties when you get this but I got a feeling that if you're getting what I wanted you to have, it's a lot earlier. I can't tell you what you meant to me. For the first time in my life I had a friend. A friend that didn't give a damn about how much I had or what I could do for him, but a guy who just wanted to hang out, maybe fish and have a few beers.\n\nThink of me when you're kicked back on the boat, reeling in a monster I could only dream about, and raise a beer in my memory now and then.\n\nOne more thing. I want you to keep an eye on Jen. I should have been a better husband, but she was still the love of my life. Don't let her do anything foolish while she gets herself back together. I liked to think if anything ever happened to me she'd turn to you. If she does and gets serious, name the first son Steve. Just kidding, dude, but stranger things have happened and I know you'd be good for her. Think about it.\n\nEver your friend,\n\nSteve.\"\n\nI was a little surprised when a delivery van pulled into my driveway a week later. The guy had a full load and a note.\n\n\"Jaime,\n\nI know you're not expecting this and probably wouldn't take it if you had a choice, but I want you to have them and I'm taking the coward's way out. I'm leaving for a while. I just can't take another night of rambling around in that big empty house. I'll return, but I can't tell you when. These are Steve's clothes. They'll fit you like a glove, and they're too good to waste. I doubt seriously you'll wear more than two of the suits for the rest of your life, but it will be nice to have that option. The jeans and the rest of the casual clothes will come in handy, as well as the boots. Please don't be offended. I know he would have wanted you to have them if he'd have thought that far ahead. Wear them in good faith, remembering the man who was your friend.\n\nRemember, too, that I was also your friend and hope you let me continue to be.\n\nLove you, Jen.\"\n\nI let the stuff sit in my spare bedroom for a few weeks before I could work up the energy to start going through them. Who the hell needs twenty-eight suits? In the end, I kept eight, highly expensive and damn good looking. The rest I donated, sure some bargain hunter would freak when they saw them. I kept most of the jeans and casual clothes, and all thirty-six pair of the shoes and boots. Each pair probably cost more than I could make in a month. I'd never have to buy shoes again. \n\nLife went on. I'd fish once in a while, always feeling guilty when I used the boat and truck. I hardly ever drove the truck because it was just too nice to have around construction sites. I'd go out on the boat, look through the expensive gear, but most often I used the old Zebco rig I had given him. I still remembered the night I met him.\n\nI didn't have a boat, so I fished from the bank. I was at a hot-spot, right below the discharge chute of a power plant. A lot of stuff got caught up in the turbulence and came out the other end ground up. It was catfish heaven.\n\nI'd already decided to call it a night at eleven. I'd caught four pretty decent fish and a twenty pound monster, enough to keep me in catfish for months. Steve came slowly down the path, stumbling in the dark.\n\n\"You okay, man?\"\n\nI could tell he was a little buzzed. \"Yeah. Maybe. My car quit on me a little ways back and I guess I took a wrong turn somewhere. To top that off, my phone is dead. Can you call an Uber and tell them where to pick me up?\"\n\n\"I'll do it, but we have to get up a little higher for good reception. Why don't you sit here while I square away my gear and I'll make the call when we get up top. Shouldn't take me long.\"\n\nHe sat watching as I reeled in my lines. It seemed that one catfish was determined to commit suicide, and hit just as I was reeling in the last line. Before I knew it Steve was right beside me, watching in awe.\n\n\"Here,\" I said, grinning. \"Reel him up for me.\"\n\nHe snatched the rod, but admitted he had no idea what to do. \"Keep the line tight so he can't spit the hook out. Just keep reelin', and when his head comes out of the water I'll scoop him up with the net.\"\n\nIt was a pretty nice cat, ten pounds, at least. I'll never forget the look on his face. \"Wow, I've always wanted to catch a fish.\"\n\nHe'd never fished before? What planet did this guy live on?\n\nHe helped me carry my stuff back to the truck, and then we went to look at his car. It was a BMW, all chrome and gleaming paint. \"I'll call AAA tomorrow and get it towed.\"\n\n\"No, you'll need to call them right now and get them over here. Look around you. We're in the middle of nowhere. If a couple of good ol' boys were to see this sitting here, the only thing left tomorrow would be the frame, maybe. Call them now.\"\n\n\"I'll have to look someone up. Can I use your phone?\"\n\nI hit speed dial. \"Wilbur? Yeah, I know it's late but I got a hot one. A BMW, dead, at the end of Lookout Point. Can you come and get it? We'll wait.\"\n\nI had it on speaker. \"How the hell did a Beemer get way out there?\"\n\n\"I think the guy got lost.\"\n\n\"Give me twenty minutes.\"\n\nWe waited, talking while he got there. It was dark, there were no lights anywhere, and ten minutes later a truck pulled up and three guys got out. They looked around and saw my truck but couldn't see us, thinking it was some guy fishing. They were tugging on the door handles when I turned my lights on.\n\n\"Move on, boys. Grab your rods and go fishin'. They're biting pretty good.\"\n\nIt was obvious they'd been drinking pretty hard, and one guy told me to mind my own business or they'd mind it for me. I got out, holding the Taurus .357 down by my side. \"Move on.\"\n\n\"Or what?\"\n\n\"Or I blow what you use for brains out.\"\n\n\"You ain't got no gun!\"\n\nI raised it and popped a round off. .357's are kind of loud, and it echoed off the lake pretty good. They almost drove off before one could get in. He ended up jumping on the bed as they went by. Steve was looking at me like I was an alien.\n\n\"Would you have shot them?\"\n\n\"I wouldn't have had to. Once they knew I had a weapon all the fight went out of them. If they had been armed or forced the issue, I would have reacted accordingly. Here comes Wilbur.\"\n\nWilbur got out, looked over the car, and grinned. \"I ain't even askin', but you need to get the undercarriage looked at before you drive it. This is a pretty rough road.\" He gave Steve a card with the address of his garage.\n\nI asked him where he lived as Wilbur's tail lights faded. It was less than twenty miles away. He was going to call his wife because he didn't think he could get an Uber in that area. He was probably right. ",
        "\"There's no need to get your wife out of the bed at this time at night. I'll take you home; it's kind of on my way.\"\n\nHe sat quietly for most of the ride. His drive was a long winding one that led through trees before it stopped in what could only be called a mansion. \"You live here?\"\n\n\"Yeah, I bought it for my wife last year. Care to come in?\"\n\n\"I don't think so. I'm dirty and I smell like livers, worms and catfish. Probably not an aroma your wife would appreciate at this time of night. Call Wilbur in the morning. He's A.S.E. certified and most of his business is Mercedes and Audis. He could probably fix anything wrong with your car.\"\n\nI waited until he got on his porch before he left.\n\n*****\n\nWilbur checked his car over, and the only damage he could find was a bent tie-rod. Steve had him fix it and pumped him for information about me when he picked it up. Wilbur told me what he said.\n\n\"Jaime's a good guy, Mr. Rodham. And he's probably the best fisherman I've ever seen. He can be on the bank with twenty anglers and be the only one catching anything. When the local fire department needs fish for a fry, they call him. He's usually good for fifty pounds or more.\"\n\nSteve was sitting in my driveway when I got home from work three days later. He got out, looking embarrassed. \"Can I talk to you for a minute? I have a business proposition.\"\n\nCurious, I brought him in, gave him a glass of tea. After a few minutes of spitting and sputtering, it came out. \"I've always wanted to learn how to fish. I'm more than willing to pay if you'll teach me. I can make it worth your while.\"\n\nI thought about it for a few minutes. I could tell he was sincere. \"All right, be here at seven Friday night and we'll spend a few hours catfishing. You get the hang of that and we'll branch out to bass and crappie. I won't charge you anything past the price of the bait and a few beers, so don't insult me with offers to pay. Every man needs to know how to fish.\"\n\nHe was so excited he could barely talk.\n\n*****\n\nIt took about a month before he wanted me to follow him home so he could introduce me to his wife. I had no idea what his wife looked like, but I figured with the kind of money he had, she'd be hot.\n\nFor once in my life I got something right. I didn't follow fashion magazines so I had no idea who she was. I just knew she was probably the most attractive woman I'd even seen. She smiled and tried to shake my hand, but I snatched it back.\n\n\"Sorry, ma'am, but I got fish bait on my hands and it is not a feel or smell I'd recommend to a lady.\"\n\nShe just stared for a minute before she grinned. \"Well then, I insist you come in and wash up, so I can greet a new friend properly.\"\n\nI did everything but take a bath in that sink, my urge to not offend her almost paralyzing. I surprised her again when I wouldn't sit on her couch, so she moved us to the kitchen table. I felt a little more relaxed. Where I grew up, friends never went to the front door, hardly ever made it out of the kitchen because there was always a pot on and something fresh out of the oven just begging for an opinion, and never overstayed their welcome.\n\nAfter we got to know each other and I told her about the way I was raised, she grinned. After that, the first thing she did when she knew I was coming was get the coffee ready, turning it on when I came in the door.\n\nThey kind of adopted me, but I remembered my upbringing and never abused their friendship or stayed overlong. Jen was a hell of a woman, but when we met she had no idea what to do in a kitchen. They had a maid who did most of their cooking when they were home. They ate out a lot, mostly business dinners with the people Steve dealt with. I brought them a pecan pound cake, and they raved about it. Steve ate three pieces and Jen ate two.\n\nShocked didn't even begin to describe the look on their faces when I told them I baked it. \"My mother taught me. It's a family secret going back to my great-grandmother, so don't ask for the recipe.\"\n\nI did end up teaching her how to bake, starting with simple things like banana nut-bread and pineapple upside-down cake. She got hooked on Pinterest and YouTube websites and practiced a lot. It got so bad that Steve gained five pounds before he begged her to stop. I diverted her by saying there was always a church or civic organization around that was having a bake sale and they would appreciate anything she was willing to share.\n\nThat turned out to be a case of exchanging demons, because if she left with two cakes she'd come home with three. She also made a lot of friends in the community, and joined one or two civic organizations she thought had merit. Oddly enough, many of their meetings ended up held at her house. Jen was happy, saying it gave her something to do while Steve traveled or worked.\n\nThe fire department was her favorite, and she worked tirelessly to better the station. She donated money of course, but more valuable was the time she gave. Her local department ended up being one of the best equipped and trained in the state. The only time she flaunted her money was when she read an article saying that cancer was on a meteoric rise in firemen because of fumes and residue from the new materials builders were using. Jen consulted experts and had a modified Hazmat shower built and paid for a truck to haul it. She organized the volunteers who trained to set it up and balance the soaps and chemicals needed to decontaminate suits and equipment. Many walked through the shower in full gear before stripping it off and going through it again. Departments from all over the country came to observe the procedure.\n\nThey were horribly expensive and beyond the means of most volunteer departments, so Jen founded a charity to fund them and served as the face and first chairman. She often made personal appearances across the country to drum up support. She won awards that she accepted with thanks but rarely talked about, preferring for the focus stay on the mission.\n\nI escorted her to a couple of functions when Steve was traveling, and most thought I was her husband. She rarely corrected them and giggled about it later. \"You and Steve look so much alike that it's a common mistake, especially if they've been drinking. Just go with it.\"\n\nWhen it was time for the annual Christmas parade, our small town insisted she serve as Grand Marshall, to honor her for her efforts. She ended up riding on top of an antique fire engine, a 1921 American LaFrance. As a tribute, forty-one stations sent a truck. It was the biggest Christmas parade ever held in the town.\n\nJen wanted me to ride with her, but I refused. \"This is your moment, Jen. They want to honor you, so accept it in the spirit it was given.\" The applause rippled through the town as she passed and she had tears in her eyes by the time it was over. She told me later of all the acclaim she'd gotten while she modeled, all of it together meant less than what she was given that cold December afternoon.\n\n*****\n\nShe had been gone for five months. She briefly returned to modeling, did a couple of guest appearances on fashion shows, even sat in as a substitute judge for three weeks. Then she just disappeared off the face of the earth. I tried calling her a couple of times, but the number had been changed. I called Sandy and she was in the same boat. \"She's processing, honey. She thought her life was set. Did you know she was going to have two bedrooms decorated for the children she hoped to have? One for a little boy, the other for a girl. Unless she remarries pretty soon that dream will fade. She's done this before. When her aunt, a woman who practically raised her, passed suddenly, she went off the grid then. She was gone for six weeks and then she just showed up and carried on like she hadn't been gone and refused to talk about where she had been.\n\n\"Don't worry, Jaime. She'll show back up sooner or later. Remember, her dream house is here.\"\n\nI doubted the validity of that when I saw the house featured on the cover of a real estate magazine. It was priced at 2.2 million. I heard it sold in a week for 2.6, the object of a bidding war between three couples. \n\nAfter nine months I had reconciled myself to the fact that she was now just a pleasant memory.\n\n*****\n\nIt was Saturday, and I was in my shop, doing what I loved best. Besides Construction Management, I held a degree in furniture design. I bought my house partially because it had a large workshop out back, a 24x36 metal building. I had a lot of tools, and now that I had room I bought equipment I hadn't been able to use until then. I had a huge lathe, a steam vat designed to soften wood for bending, a planer capable of working a thirty inch board; in short, I had almost everything a professional furniture maker needed to produce a quality product.\n\nI had another shed that held lumber that stayed packed. I had a lot of oak, some pecan, a few black walnut logs, some cedar, even a bit of holly.\n\nAt that particular moment I was making a rocking chair for a friend. She was 'vertically challenged' as she liked to put it. Her adult height was 4' 6'', and she was the tallest of her siblings. This chair was designed for optimal comfort for her size, somewhere between a child's chair and a full size. I was drum-sanding the edges of the seat when I felt the door open. I didn't look up. Most of my friends and neighbors knew what I did most Saturdays, so if they wanted something or stopped by to say hi, they knew to come to the shop first.\n\nI finished sanding the bottom and looked up, almost dropping it when I saw who it was.\n\nJen.\n\nShe looked older. She was fifteen pounds thinner and she didn't need to lose weight. Her eyes were sad, but they changed when I looked up. The eyes matched her smile. Instead of hello, her first words surprised me.\n\n\"How come I never knew you made furniture?\"\n\n\"It never came up in conversation. Besides, it's just a hobby. I'd love to do it full-time, but I'm not sure I could support myself. I'd have to charge some pretty high prices, and I don't think most people could afford it.\"\n\n\"I know lots of people who would love to have custom-made furniture and wouldn't bat an eye at the price if it was of good quality. You should have let me help you.\"\n\nI struggled for a moment trying to frame my answer in a way she could understand it. \"Yeah. No. You were my friends, Jen, not some business opportunity. If I'd have come to you I'd have been just like all the rest of the assholes you and Steve had to deal with. You would have always wondered if I was truly your friend or just someone I needed to use. So I didn't bring it up. Steve never knew. If I had told him, he would have hounded me with suggestions like the one you just gave. You were worth more to me as friends, do you understand?\"\n\nTears started. \"And that's why we loved you.\"\n\nI couldn't keep a little bitterness out of my voice. \"Yeah, I could tell that from all the calls and visits I got from you.\"\n\n\"I knew you wouldn't understand. I had to leave. After a few days, rattling around in that big old house was just too much. Plus, every time I saw you it reminded me of Steve. I tried going back to my old life, but that got stale pretty quick. I'd forgotten how shallow and calculating most of those people were.\"\n\n\"I can understand that. But you didn't call Sandy or any of your oldest friends. Think they liked being shut out of your life? If you're going to be back for more than a few days you need to give them a call and try to mend fences.\"\n\nWhat she'd done hit her, and she cried harder. I shut down my machinery knowing there would be no more work that day and took her into the house, making coffee and getting out the pecan pound cake I'd made the day before. She ate two pieces before she started making phone calls.\n\nSandy and the rest of the girls showed up ninety minutes later, kissed me on the cheek, and threw me out of the house. I piddled around before deciding to light my grill. I'd marinated a bunch of leg quarters the night before, so I grilled them, a few steaks, some potatoes and ears of corn, and honey glazed carrots with toasted pecans. The smells started getting to them and they drifted out to my deck.\n\nMy house was manufactured, because it was the most house I could get for the money, but I had modified it quite a bit and was inordinately proud of my multi-level deck with the built-in table that wrapped in a semi-circle around a big oak. It was the first time any of them had been there so they wandered around, checking out my koi pond, complete with a little island that held a large Japanese lantern, and admiring a vegetable garden that looked laid out with military precision. They were surprised one whole section was nothing but flowers. I had sunflowers of all sizes and colors, zinnias, African daisies, different colors of cosmos, and marigolds.\n\nWhen I called them to eat, I was amazed. They ate like construction workers, not fashion models or professional women. They laughed about the whole roll of paper towels they had to use.\n\nSandy sat back and let loose a very unladylike belch, which broke the whole group up. \"I'm thinking, Jaime, that I need to review my relationship expectations. You cook, you build furniture and you ain't hard to look at. \"\n\nEveryone laughed but Jen, and she looked a little irritated. The girls caught it and grinned harder, teasing her by giving me their numbers. I looked at Melody. \"Aren't you married?\"\n\n\"I am, and I love him dearly. I wanted you to have my number so we could set up some training sessions for hubby. He could use a few pointers.\"\n\nThey relaxed as twilight gathered, oohing when I switched on my party lights, especially enjoying the Japanese lantern on the little island. All the lights were designed to draw insects away from the deck. I brought out a carafe of coffee and the Pecan pound cake. They groaned but managed to eat every bite of it.\n\nThey all demanded the recipe. Jen grinned. \"Sorry girls, but it's a family secret. He won't even give it to me, and I begged for almost two years. He says it will stay in the family.\"\n\nSandy looked at Jen and smirked. \"Well then, we'll have to get him married off to one of us to insure a steady supply. Any volunteers?\"\n\nTo a woman they all turned to Jen. She was glowing but promised to do a little research. There were a lot of hugs and kisses as they left. Sandy got me off to the side.\n\n\"I know men are thick most of the time, so let me lay it out for you. She didn't come back for us. She came back for you. If you're not interested, let her down gently. If you are, go slow. She's still a little fragile.\"\n\nI was taken completely by surprise. I guess men are dense. \"Her? Me? She's miles above me, Sandy. She's rich, beautiful, and I'm just an average guy trying to make ends meet. It would never work.\"\n\nShe slapped me lightly. \"God! You're even dumber than most. She couldn't give a shit about what you have. She doesn't need possessions or riches. She already has those. She needs a man who loves her in spite of all that. One thing I can be assured of, if you get together, it won't be because of her money or your perceived lack of it. You can give her what she desires most in this world and it won't cost either of you a dime. She wants the love of a good man and a family. She's talked about children ever since we were in college. Man up, Jaime. Be the one.\"\n\nWe waved as they left and went back into the house. \"Where are you staying? I know you sold the house.\"\n\nShe seemed surprised. \"I'm staying with you, at least for a while. You don't mind, do you? I can get an extended-stay suite somewhere if you do, but I'd really like to stay here. I want to surround myself with real, not the illusion I've been living with lately. Please?\"\n\nI thought about it for a minute, looking at her anxious face. Then I sighed. \"Yeah, you can stay. I guess I'll have to get used to one of the most beautiful women in the world hogging my bathroom. The sacrifices one makes for friendship.\"\n\nShe slowly started grinning. \"I promise not to leave my panties hanging on the shower rod too often. I find myself very tired now, honey. Where do I sleep? Your bed, I hope?\"\n\nShe was only semi-joking. I led her to the guest room. I had forgotten I'd made every piece of furniture in the room, from the dressers to the large canopy bed, all in light pecan. I'd learned to carve, and the posts of the bed were done in intricate patterns, vines and little flowers, mostly. There was even a vanity, the mirror in the shape of a heart. I'd made it with a little girl in mind.\n\nShe wandered around, touching everything. Finally she turned and smiled. \"What's her name?\"\n\n\"Huh?\"\n\n\"What's her name? You obviously designed this room for a daughter. I assume you had a name picked out.\"\n\n\"Uh, no. I always thought when I married, we would pick the name out together, something that appealed to both of us. It wouldn't be fair, otherwise.\"\n\nTears welled up once again. She came over, grabbed me, and gave me a very, very nice kiss. \"I have the feeling you'll be an excellent father. Goodnight, Jaime.\"\n\nI stood and watched her for a second before telling her good night.\n\n*****\n\nMovement woke me. I looked at the clock. Four in the morning! I wondered what I had heard until I saw her at the foot of the bed. I freaked for a minute before I remembered she was still in the house. \"Jen? Are you all right?\"\n\nIn answer she dove on the bed, soaking my shoulder with tears. \"No, I'm not all right. Can I stay here for a bit? I need to feel loving arms around me, at least for a little while. I'll go back to my room when I calm down.\"\n\nI pushed the covers back and she snuggled in, her head on my shoulder. She smelled great, and she felt wonderful. I went to sleep with my arm wrapped around her.\n\nI woke at eight and she was still there, still snuggled tightly. She was still on my shoulder, and my other arm was wrapped around her waist, pulling her to me tightly. I lay and looked at her, thinking how beautiful she was without makeup, her hair spread out in a messy fashion. Fifteen minutes later, one eye popped open. \"How long have you been staring at me?\"\n\n\"A little while. And I wasn't staring, more like admiring.\"\n\nJen grinned and stretched, sliding that sensuous body along my length. I popped hard instantly, and she felt it. She pushed me away, giggling. \"Up. I'm ready for breakfast.\"\n\nWe showered, separately, although the thought of that naked body just on the other side of that door did nothing to make my erection go down. I had to stand under the cold water while I had my shower, just to gain control.\n\nJen had been busy. Pots and pans were everywhere. She wouldn't let me help, so I sipped coffee and admired her as she flitted from task to task. \n\nJen had made crepes and they were excellent. \"Where did you learn to do that?\"\n\n\"Paris. I spent three months in a compressed cooking course. We prepared dishes for ten hours a day, six days a week. One of the many reasons I was incommunicado.\"\n\nShe cooked, so I cleaned up while she sipped coffee. I hand washed the large items and prepped the rest for the dishwasher. \"Are you always this neat?\"\n\n\"Yeah. Uncle Sam taught me, and since I live alone it's pretty easy to keep the place clean if you don't let things pile up.\"\n\nShe changed subjects quickly. \"Why aren't you married, Jaime? You might as well wear a t-shirt that says \"Prime Husband Material\".\"\n\n\"Honestly, I haven't found anyone I loved enough to consider marriage. I'm like a lot of animals. I intend to mate for life, so I have to be damn sure. I was in love with a woman once, but nothing came of it.\"\n\n\"Why not?\"\n\n\"Because she was married to someone else. If I had pursued her, talked her into betraying her husband, it would have never worked. How could I trust someone who would do that to another who was supposed to be the love of her life? If she had, could I respect her? It's a shame because she was just about as perfect as a wife could be.\"",
        "Jen blushed, realizing I was talking about her. Then she grinned. \"What shall we do today? What do you usually do on Sundays?\"\n\n\"I usually go to church or go fishing.\"\n\n\"You go to church?\"\n\n\"That surprises you?\"\n\n\"Not really, although I've never heard you talk about religion.\"\n\n\"I usually don't, and I don't try to recruit others to my way of thinking.\"\n\n\"Is it too late to go?\"\n\nI checked the time. \"It's too late for Sunday school, but we have time to get there for the sermon, if you dress quickly enough.\"\n\nShe giggled as she moved. \"I was a fashion model! There are professional quick change artists out there slower than me. Ten minutes and you better be ready.\"\n\nI shaved and checked my closet, choosing an old suit, not wanting to wear one of Steve's and bring up memories. True to her word, she was ready before I was.\n\nShe was dressed simply, a knee length dress with a high neckline, but the woman could make a tow-sack look good. Heads turned and conversation slowed. I was greeted by my friends and introduced Jen, and then the sermon started. I liked the preacher we had now quite a bit. He was a much calmer person than the one that preceded him. That guy was all hell-fire and damnation. It wasn't long before we thought him unstable. He found out we were talking to the governing board about maybe transferring him and had a meltdown in the pulpit. The next sermon was almost impossible to understand, ending when he pulled a pistol out and started ranting about how we'd never replace him. It was a very tense twenty minutes before the cops got there. In force. An usher had slipped out and called them the minute the gun appeared. Negotiators were called, a SWAT team showed up, then the news media.\n\nTwo deputies were quietly crawling among the pews, getting the children out while the negotiator kept his attention. Another usher unlocked the back door and the police got close enough to taser him, waiting until he waved the gun in the air. A good thing, because when the juice hit him, he fired twice in reflex. Come to find it out, he was having a mental breakdown triggered by the death of his wife and a dependency on prescription drugs. The church managed to get the charges reduced and get him into rehab. He sent a nice long letter of apology later from his new posting in Africa, a place he volunteered to go to in atonement for his sins. You could look up if you're in the right pew and see the outlines of the patching over the bullet holes.\n\nThe sermon was about marriage, commitment and the pressures of modern living, and how to deal with it and stay firm in your commitment. \"Commitment to marriage should be second only to your commitment to God. Strong, loving relationships are the cornerstone of modern society, the place of strength after your faith in God. And just like God, you should always, always be there for your partner.\"\n\nI saw a lot of nodding and a lot of uncomfortable people. Jen seemed to be hanging on every word. Most people were surprised that as we filed out he gathered Jen up into a big hug. Turning her loose, he grinned. \n\n\"You don't remember me do you? I'm Mike Flanagan's father. I don't have words to express how much your help has meant to our family. I speak of you often, telling people you are proof that angels walk on this earth.\"\n\nJen was flaming red but smiled. \"It was just a little thing I could do to help. How is your son doing?\"\n\n\"He's fine, in total remission. The surgeons seem satisfied they got it all. He's to the point he's back with the fire department, although they won't let him do anything strenuous yet.\"\n\nSo this was the angel he spoke about so often. He told us about it, how his son was dying and even as he prayed he was giving up hope when an angel appeared before him, telling him his son would be all right. Faster than he could understand his son was on a medical jet to a major cancer center, and in surgery in less than ten hours. There was never any discussion of cost and he never saw a medical bill. He called it a modern day miracle.\n\nHe thanked me for bringing her to church so he could finally express the gratitude he felt, asking if she lived nearby. Jen stepped in before I could answer. \"I'm living with Jaime right now, Reverend. Unfortunately, it isn't in sin, but I'm working on it.\"\n\nThe preacher got a little red but grinned. \"Well, before it gets that far, think about my sermon today. I've never officiated at the wedding of an angel.\"\n\nJen promised to give it serious consideration and she'd get back to him. I grinned at her as we drove home. \"What?\"\n\n\"I've never slept with an angel before. I thought the glow last night was from my neighbor's street lamp. I have to say it was very nice.\"\n\nJen colored slightly before grinning back. \"Oh, I can be a real little devil when I backslide. That only happens when I'm in love. But when it happens, it burns hotter than any nuclear bomb ever detonated. What shall we have for lunch?\"\n\nWe stopped at the Country Club. I knew the chef and they usually put on a pretty good buffet. Once again a place went quiet when we entered. I figure sooner or later I'll get used to it. The food was excellent and she surprised me with how full her plate was. Michel came out and walked among the patrons, stopping at our table. Soon they were in a rapid fire discussion I couldn't have kept up with if it was in English, much less the French they were speaking. He kissed her on both cheeks, told me he thought I was the luckiest man alive, and continued circulating.\n\n\"What was that all about?\"\n\n\"Food, honey, we were speaking food. He really is quite good.\" I wondered about the honey comment but let it go.\n\nWe went home, odd, me saying that, at least mentally, and she insisted I finish my rocking chair project. \"I'm not here to disrupt your life. I have a few things to do and maybe I'll join you. Maybe I can help, if you'll let me.\"\n\nShe grabbed her laptop out of her vehicle and disappeared into the spare bedroom.\n\n*****\n\nI was almost finished dry fitting everything when she came into the shop two hours later. She sat on a stool and watched for a few minutes before coming over and giving me a hand. I was grateful for the help; sometimes you needed three hands on these projects. When everything was in place, we stood back, her admiring it while I looked for flaws.\n\nThe seat was a bit uneven on one corner, so before I glued everything up I'd have to fix that. One of the back spindles looked a little off and I might have to adjust the length so it would seat better, but other than that it looked good. Jen helped as I gently took it apart, laying the pieces out on a long table. I took the seat over to the sander and adjusted it, then I measured the hole, took a little off the bottom of the spindle in question, and it was ready to glue up.\n\nI was going to stain the parts first. That way I could get a good even coat, and it would make the whole thing more durable. Not quite sure how dark to make it, I asked her opinion.\n\n\"What does the rest of the furniture in her house look like?\"\n\nExcellent question. Sarah had mostly upholstered pieces, but the few pieces of wood I remembered had a medium tint. I got out three different stains and a scrap piece of wood, rubbing a bit of each on the board.\n\nJen pointed to the lightest one without hesitation. \"This one. It'll make the grain of the wood really stand out.\"\n\nShe wanted to help, but I discouraged it. \"Most beginners put too much on at one time and it darkens it more than we want. Take the scrap piece and practice if you like, or watch me.\"\n\nJen watched for a while, then grabbed a pair of rubber gloves and played with the scrap while I finished. There wasn't a bare spot left when she was done, but I had to admit she caught on quicker than most beginners. She glowed under my praise.\n\nFour hours later, right before bedtime, I glued everything up and clamped the chair. In 24-hours I would check the glue, and if I felt it was set I'd take the clamps off. If not, I'd leave it at least another day.\n\nWe went to bed separately and I was so tired I didn't realize she had slipped in until I woke the next morning. She felt so good I just held her until I had to get up to make it to work on time.\n\n*****\n\nI grinned all day at work. Even the most aggravating subcontractor I had didn't bother me, which I think bothered him. My good mood lasted until I got home to find a really pissed off female waiting for me.\n\n\"Why didn't you wake me up?\"\n\n\"I thought you might like to sleep in.\"\n\n\"You need to let me do the thinking around here.\"\n\nOne look at my face and she knew she had made a mistake. \"I'm sorry, honey. That came out all wrong. What I meant to say is that I wanted to get up with you, maybe even cook you some breakfast. Is that so bad?\"\n\n\"I appreciate the thought. I live by myself, remember? I'm used to taking care of myself.\"\n\nHer frown deepened. \"I understand. It's just that I like to pull my own weight. I don't want to be a burden.\"\n\nI eyed her, remembering the first few times I'd been around her. She could barely find her way to the kitchen and couldn't cook for diddly. Her maid did most of the meals for them. Something was starting to smell.\n\nJen changed the subject. \"Look! I made dinner.\"\n\nWell by golly she had, and it smelled great. She beamed when I told her. \"It's not quite done. Another hour should do it.\"\n\nI took advantage of the time to go over the rocking chair one more time. Deciding it was as done as it was ever going to get. I called Sarah. \"Come by tomorrow and pick up your chair.\" She was so happy she was still gushing when I hung up.\n\nDinner was excellent, probably the best meal I'd ever had. I noticed bouquets of flowers in random places and she smiled. \"I picked them out of your garden. I hope you don't mind.\"\n\n\"Pick all you want. I used them to bait pollinators in for the vegetables, but decided I liked them so much I seem to plant more every year. It's a shame, really. Lots just go to waste. I'm sure there are people out there who would enjoy a bunch from time to time.\"\n\nThe next day she went to a craft store and bought a bunch of vases and some ribbon. She'd called Jan first, outlined her idea and Jan immediately endorsed it. She was in the garden when I got home Friday with five gallon buckets and garden shears. Every bucket was filled with flowers. She waved me over.\n\n\"I hope you were sincere when you said you wished others could enjoy the beauty of your flowers. I called in a pizza because we're going to be too busy to cook. Now, if you'll finish the buckets, I'll start arranging.\"\n\nThere were 25 vases, and she must have had some experience, because she crafted the flowers beautifully. There were African daisies, different colors of zinnias and cosmos, and in the center, towering over them all, a sunflower. I tried to help but gave up pretty quickly, limiting my contribution to filling the vases with water and packing them carefully into the boxes she had bought when she was finished arranging them. Two hours later we were finished, and had flowers sitting all over the house. The smell was almost overpowering, especially if you mixed it with the pizza.\n\nDinner done, showers over, we sat on the couch, she with a glass of wine, me with a ginger ale. \"I think I've been pretty good at holding it in, but what in the world are you going to do with all these flowers?\"\n\n\"I'm not going to do anything with them. WE are going to the hospital tomorrow and give them out, starting in the children's ward. Please say you'll help me.\"\n\nNot how I envisioned spending my Sunday but the look she gave me made me feel like I'd be kicking a puppy if I said no. \"All right.\"\n\nShe just glowed. There was no other way to describe it. She slid into my arms and snuggled for a while. I dozed off and she woke me saying it was time for bed. I stumbled into my bedroom, not realizing she was right behind me. She slipped off her robe and twirled, making the translucent gown she had on rise. I got a microsecond view of two very nice cheeks before it settled down.\n\n\"Bed. We're going to need our sleep.\"\n\nIt took me a little while to calm down enough to go to sleep. She snuggled, feeling the iron bar between us, before giving me a nice kiss. She was out in seconds. It took me an hour to get to sleep. \n\nWe went to church again the next morning, and I saw Jen in a pretty serious discussion with the preacher. I was wondering what it was about when he handed her a paper.\n\nAfter lunch at the Country Club, where I had to listen to a twenty minute conversation in French, we were home.\n\nJen teared up a little when I pulled Steve's truck out of the shed I kept it in, but was smiling by the time we got the flowers loaded. There were twenty-five vases and I figured we'd just dump them at the nurse's station and leave. Wrong, wrong, wrong. There were also a bunch of stuffed toys and I wondered what that was about.\n\nThree nurses and Jan met us at the door, rushing out to help carry the flowers and animals in, giggling and talking a mile a minute. Jen pulled out the list the preacher had given her and started prioritizing. \n\nAfter the first stop, I was ready to go home. She was five years old, and she was dying. The nurse told us she liked horses, and Jen had a unicorn among the stuffed animals, so she got that out for her. \n\nThere was no one in the room when we got there. Apparently, the parents were divorced because of the pressure of the situation and wouldn't be in the same room at the same time, so she went long periods without any company at all. I was beyond furious when I heard that. If she was my child, you couldn't have blown me out of her room with five pounds of C4.\n\nDespite the bald head and the frail frame, the child was all smiles that she got visitors, along with a unicorn. And flowers! Jen told her that I'd raised them and she asked if she could come see them when she got out. We both promised she would be more than welcome. I got up abruptly and walked back to the station, taking a bouquet apart and weaving a garland for her head, something my mother had taught me when I wasn't much more than the child's age.\n\nJen looked up sharply when I walked back in, but smiled through tears at the reaction of the child when I snugged the garland around her head. We had to take pictures of her with both of us, and a nurse who came in to check her vitals told her she would print a couple out for her to enjoy. I still have one of me holding her carefully while she snuggled to both of us. I took it out once in a while after she passed, and remembered we were able to give her at least one good day.\n\nWe were planning to spend about fifteen minutes with her before moving on, but we stayed an hour, until her medication put her to sleep. Jen took ten minutes, redoing the makeup that had run from her tears. I just wiped my eyes and told the nurses I had allergies. We gave out nine more bouquets to children, then switched to senior citizens. The child ripped my heart out, but the sight of those old people, many of them alone in this world, weeping with gratitude to be seen as a person, broke it into little pieces. One ninety-four year old woman cried like a baby while she snuggled the stuffed sheep she had picked, then hugged us as hard as her frail body would allow.\n\nI thought we were done until Jan brought us to the nursery. The sight of all those babies finally caused Jen to melt, coming in to my arms and weeping great tears, no doubt thinking of Steve and their missed opportunities. When she finally recovered, Janice asked if she'd like to come and volunteer, rocking babies who had no one. She said it did the children good to be held and it helped with their development.\n\n\"Why don't the parents rock them?\"\n\n\"Some of these children get left here by their mothers, unable to care for them. Others may have a single mother with dependence issues. Some are born and have to go through drug withdrawal immediately. Those are the ones that really need to be held.\"\n\nJen said she would be there Monday morning.\n\n*****\n\nIt was a quiet ride home. Jen got into sweats, dragged a pillow and blanket to the sectional and demanded I snuggle with her. Emotionally wrung out, we both went to sleep, waking up just in time for a light supper and back to bed. I didn't even comment when she shrugged out of her sweats and climbed into bed in just her panties. We went right back to sleep.\n\nShe made sure she was up early enough to make me breakfast, a breakfast she made while wearing just a t-shirt and panties. It was a great view and brightened my day considerably. I thought about it as I ate my bagged lunch. I knew she was sending me a message, but I was on the fence. A love affair with her would be stuff dreams are made of but I had to be realistic.\n\nShe was worth millions, a lot of millions. I made 62 grand on a good year and lived in a manufactured house. It was a nice house and I'd upgraded it quite a bit, but it would never be the mansions she was used to. I was pretty sure if we lived together as a couple, cracks would start to appear, and I couldn't get over her history of just disappearing if things got stressed. I would never be able to handle that. I decided the best thing we could do was air everything out, my expectations and fears, as well as hers.\n\nThat plan did not get a chance to work because when I got home it was to a very pissed off Jen. \"Your GIRLFRIEND came by today. I don't know who was more surprised, her or me. She apparently got in from her business trip a little early and came by to surprise you. Well, SURPRISE!\"\n\nI took a deep breath. \"Jen, why are you so upset? Did you think I lived like a monk, pining for something I could never have? I live in the real world, honey. I can't just disappear if things don't suit me and just pop up months later like I was never gone, let alone expect people to accept it.\"\n\nShocked did not even describe the look on her face. \"I told you I was mourning and trying to get my life back on track. Yes, it was rude and thoughtless to disappear on you and my friends, but I have a habit of not thinking things through. If I had, I would have never married Steve or met you.\"\n\nThat shocked me. I thought they were deeply in love. She saw the look on my face.\n\n\"That didn't come out right. I did love Steve. A lot. But I figured out pretty quick that Steve was a pretty selfish guy. Yes, he loved me, but he loved the thought of his beautiful ex-model wife on his arm at business functions just as much. I was his validation that he had made it in some way. I made it very clear I wanted a family but after being put off for two years I realized I was going to have to force the issue. I found out something interesting while I was going through his papers after he died. He'd had a vasectomy a year after we married. I suspect he was going to get tested, show me he was shooting blanks, and maybe I would forget the whole thing. It wouldn't have worked, because I remembered how paranoid he was about precautions while we dated. After I read that, I realized that we'd have eventually drifted apart.\"\n\nI had to think about that for a bit. I knew Steve was selfish, but I didn't think he was that selfish. \"I'm sorry, Jen. For you and the fact that a man who was my friend would do something like that.\"\n\nShe sighed. \"What are you going to do about your girlfriend?\"\n\n\"I'm going to call her. Then I'll probably go see her. She's been gone on a training course for three months. It was in England. She's a lot like you in many ways. Oh, she's pretty but she'll never be as beautiful as you. She's a successful woman making it in a male dominated profession. She's the very first female the company thought enough of to send to that course. She'll probably make VP in three or four years if she stays on track.\"",
        "\"I'll bet she works for peanuts while the men make a killing.\"\n\n\"Actually, she makes more than most and almost twice as much, or better, a year than I do. Now, if you'll excuse me, I need to shower and change. I'll probably be late getting home. Do you remember how to set the security system?\"\n\nHer reply was to flounce out to her car and drive away.\n\n*****\n\nAngie had more than few ruffled feathers. \"How long has she been staying with you?\"\n\n\"A couple of weeks. I figure another two or three and she'll be gone. I'm like a touchstone to her, plus I look a lot like her deceased husband.\"\n\n\"Is she looking for a clone? I know who she is; anyone who's ever read a fashion magazine knows who she is. I figured she'd be wrinkled and gray by now, but she looks better than my baby sister, and she's 23. Are you sleeping with her?\"\n\nI think I dodged that bullet pretty well. \"I'm not having sex with her if that's what you're asking.\"\n\n\"Bet she's loaded. How much is she worth?\"\n\n\"I have no idea. I've never asked and she's never said. How much are you worth?\"\n\nThat was kind of a sore subject. I had a rough idea what she made and her house was a McMansion. She liked showing me off at business functions, dressed in one of Steve's expensive suits, but she didn't like what I did. She was in banking and told me flat out I needed to quit my job and go into making custom furniture. She even had the financing lined up. I shocked her when I said no, I just wasn't comfortable with that. My parents had struggled all their lives and ended up with nothing. I didn't want that to happen to me.\n\nOur relationship was strained for a while, but got back on track just before she went on her trip. She wisely changed the subject and we went out to dinner, then back to her house for a serious round of makeup sex, trying to catch up from our time apart. it was so exhausting I stayed the night.\n\nWhen I got home, Jen was gone. I just shrugged. I would miss her. It was eight weeks before I saw her again.\n\n*****\n\nIt was at a funeral. A funeral for the little girl who had cancer. The cruel disease finally defeated her. Her mother said she died in her sleep. \n\nI didn't know she had passed until a little whitehaired lady showed up at my door. \"Hi, you don't know me, but you know my granddaughter Julie. May I have a minute of your time?\"\n\nI brought her in, sat her on the couch, fetched her a glass of tea and a piece of cake. She smiled at the old time hospitality. \"Your parents must have raised your right, Jaime.\"\n\n\"They tried.\"\n\nShe had the saddest smile I'd ever seen. \"I think most of it stuck. I've got bad news, son. Julie passed last night in her sleep. She knew she was going to die and she begged me to ask you something if she did. Her last request in this world was to ask if you'd weave a band of flowers for her to wear to heaven.\"\n\nIt hit me hard. I'd developed a habit of harvesting the flowers once a week and taking them to the hospital, where Jan and the nurses would arrange them. I'd always stop to see Julie and she'd always smile at me. She had a few toys around and it seemed she loved puzzles. One day I stopped to see her but she was having a treatment. I knew she'd be worn out by the time she got back so I didn't stay. Her unicorn was on her dresser, propped up on a bouquet of my flowers. I took about eight pictures with my cell phone.\n\nThe next day I went to a professional photographer and told him what I wanted. He picked the best two photos and blended them, changing the focus slightly until the flowers seemed to glow. He printed it off on special stock. I spent every minute after I got home from work the next week, making a puzzle that fit into the custom frame I'd built. It had eighty pieces and I assembled them into the frame, carefully gluing the photo to the pieces. It was a big puzzle for a five-year-old, but the pieces were pretty big and she seemed pretty smart for her age. When it set I took a utility knife and carefully separated every piece, cutting from the back to assure crisp lines. After that I gave them a light coat of acrylic to bind them even harder. Then I assembled it a couple of times to make sure everything fit. I gave it to her in a big bag with no instructions.\n\nIt took her three days to figure it out. Her mother told me she cried with joy when she saw what the puzzle was. Now she was gone. \n\nJust before she left, her grandmother handed me an envelope. \"She wanted you to have this. I wrote it out for her and she copied it in her own hand. Something to remember her by.\"\n\nI'd remained pretty stoic while she was there but when I was alone and opened the note I'm not ashamed to say I cried the tears of the broken-hearted. You could just barely make out the childish scrawl, but the words hit me hard.\n\n\"Mr. Jaime,\n\nThank you and Miss Jen for the flowers and the unicorn and the puzzle. You are my friends and I love you.\n\nJulie.\"\n\nThe next morning I stripped about two thirds of my flower beds, saving the very best for her garland. The rest I took to a florist friend of mine and had him arrange the flowers as her casket spray. My last chance to give her flowers.\n\nI went to visitation that night. Julie lay like a little angel in a white dress, my garland around her bald head. I thought I held it together pretty well until I noticed the purple horn just below her right hand. It was her unicorn. In the left, turned up so I could see it, was a disc of a sunflower, the center-piece in her puzzle. Many thought I was the father the way I cried. Janice was there, came up and hugged me, then led me gently away. There in the corner was the mother, wrapped up in the arms of someone who looked familiar. She looked up and smiled at me through her tears. It was Jen. She motioned for me to sit on the other side of the mother, and when she saw who it was she transferred her tears to my shoulder. Jen got up quietly and walked away. I didn't see her again that night.\n\nI was a pallbearer, one of four. It was devastatingly, heartbreakingly light, as only the casket burying the dreams of a child could be.\n\nThe spray made from my flowers covered the whole casket. By now, many of her mother's friends knew they were from me and they all wanted to thank me. I think I got more hugs that day than at any time in my life.\n\nI sat with the other pallbearers during the funeral, but at the graveside service I stood in the back. The preacher spoke of the love of God and how all things happened for a reason before he commended her soul to her Maker. I just stood, numb, when a hand slipped into mine and another took my arm. I automatically wrapped that arm around the person hugging me, looking down at the grief wracked face of Jen. She didn't look like a supermodel just then, but she looked more human than at any other time I'd ever seen her.\n\nI saw the expensive casket, the way the service was put together, and knew who paid for the funeral. Julie's Mom was barely scraping by and her father had disappeared.\n\nI walked Jen to my truck when they started lowering the casket, shoving a big bunch of flowers in her hand. \"This is our last chance to give her flowers. Coming?\"\n\nWe walked back slowly. Janice, Sandy, Melody, and three of her nurses waited, and after each was given a handful of flowers we dropped them into the grave one by one until they were gone. \"Goodbye, Julie. Heaven is a better place now that you're in it. I hope you can run and play, and that it has fields of flowers with unicorns roaming in them.\"\n\nI said it quietly, but most heard me and it set off a fresh round of tears. \n\n*****\n\nThree days later I got home to find a Mercedes SUV in my drive. I wondered who among my friends could afford one of those when Jen got out, looking as timid as I'd ever seen her. \"Can I come in?\"\n\nI let her in and she automatically went to the kitchen and made a pot of coffee. As it brewed she sat with an expression I couldn't read.\n\n\"I need to say some things, and I need for you to not interrupt until I'm done. All right?\"\n\nI just nodded.\n\n\"First, let me apologize for disappearing again. I had this whole fantasy constructed around us. I thought I'd walk back into your life and you'd welcome me with open arms and we'd live happily ever after. Then the reality hit me. I'd disappeared and you hadn't stopped living your life. You had responsibilities, you had a life, you had a girlfriend. Boy, that one hit me hard. You guys still seeing each other?\"\n\n\"No.\"\n\n\"Why? It wasn't over me was it? I'll call her and explain if it would help.\"\n\n\"It wasn't over you. Not directly, but you did have an impact. The reason we broke up was she decided I wasn't successful enough for her. She'd gotten a huge promotion and was making three times what I was. She wanted me to quit my job and go into custom furniture, and was willing to finance my startup if I gave her 60% of the business. I politely declined and things started going downhill. I hear she's dating a VP now. I hope she's happy.\"\n\n\"I'm sorry. I have to say you don't seem too broken up.\"\n\n\"Oh, I was sad. We'd been together for six months, but I wasn't looking for the long term commitment she wanted, especially since it had to be on her terms.\"\n\n\"So you're single now?\"\n\n\"Yes.\"\n\n\"Good. I hereby state my intent of being your girlfriend.\"\n\n\"Jen, I...\"\n\n\"You need to stop talking now and let me finish! I've thought about this a lot. We may not mesh. We may end up despising each other. I'm a little, okay, I'm a lot spoiled. I've had everything I ever wanted handed to me since I was nineteen. When it happens to you that young, it warps your perspective of reality. It's one of the reasons I love you so much. You do it gently, but you don't put up with a lot of foolishness. If we were together I have a feeling I'd be a lot better as a human being.\"\n\nShe paused to gather her thoughts. \"I know my money doesn't exactly intimidate you, but it makes you uncomfortable. Yeah, I got lucky and made a bunch of money, then inherited a bunch more when Steve died. There's nothing I can do about it and I don't intend to give it up. There's a lot we could do with that money. Raise children is the first thing that come to my mind, but we could also be a boon to our community. There are people like you out there, people like Julie's mother, the preacher's son, others who could use a helping hand. We could be those hands.\"\n\nCuriosity got the better of me. \"Why do I need a helping hand?\"\n\n\"Your ex was right about one thing. You do need to go into the furniture business. You're a good construction foreman, I'm sure, but you're an artist with a piece of wood. People, people with money, would be thrilled to own one of your pieces. You have any idea how much a custom bedroom suite like you built for your future daughter would bring? I checked around, showed pictures to some people who were qualified to give an opinion. How much would you say you have in that suite, in man-hours and materials?\"\n\nI did some rough calculations. The materials weren't that much, it was the man-hours. I probably spent a hundred hours on it. \"About thirty-five hundred.\"\n\nShe gave a soft laugh. \"I talked to a woman who purchased something similar and she gave ten grand for it. When she saw yours she told me if you would build one for her she'd give you twelve, five. If you pushed it she'd probably go fifteen. Still don't think you could make a living doing what you love?\"\n\nWow. I did some rough calculations. If I had enough orders, I could gross around one twenty to one fifty a year, based on a forty-hour week. Almost eighty would be profit. Not bad. Best of all I'd still be working with my hands. She could see I was interested.\n\n\"Here's the deal. I'll give you a loan. One hundred fifty thousand. I'll give you a ten year term at 4.5 per cent, the current prime rate. This is a strictly business deal and I'm confident you won't default. Regardless of whether we end up together, I believe in your talent.\"\n\nShe sighed, got up, and rinsed her coffee cup. \"There, I've stated my intentions. It's all up to you now. Call me if you're interested.\" With a quick kiss on the cheek she was out the door.\n\nI noticed she had left a packet on the table. Paperwork for the loan with a note to have a lawyer look it over. On top of it was her new phone number.\n\nI thought about it for about three days and called her. I could hear the excitement in her voice. \"Hi!\"\n\n\"Hi, Jen. I've been thinking about our discussion and I think we should meet. If you're not busy Saturday, could you come by the house, say around ten?\" \n\nI think she was a little disappointed that I wasn't asking her out on a romantic date, but she agreed instantly. I told her to wear jeans and comfortable shoes.\n\n*****\n\nShe was there ten minutes early and found me in the garden, with buckets of fresh flowers around me. I gave her a quick kiss, which surprised her, then told her to get to work arranging the flowers. The season was almost over but we managed to fill twenty vases. I caught her humming as she worked and grinned.\n\nI surprised her when I pulled my new Ford pickup out of the shed. \"Where's Steve's truck?\"\n\n\"On the used lot of the Ford dealership. If this is going to be a brand new start, I don't need his ghost hovering over us.\"\n\nShe jumped into my arms and kissed me! I didn't see that coming. Very nice kiss, anyway. \n\nShe was even more surprised when I backed the truck up to my shop. \"I have to load a few things and we'll be ready to go.\" I put the three rockers I'd finished on the back, careful to put padding between them. To her credit, she didn't ask, just helped me strap them down.\n\nWe rode in silence until we were almost there. \"Jan still talks to me. She told me about your volunteering in the nursery, rocking the babies. She also asked me to look at a couple of the rockers because they were getting a little rickety. They were worn out and the thought of you falling to the ground with a baby in your arms didn't set well with me, so I made these.\"\n\nShe didn't say anything, just locked down on my hand and started humming again. Jan, her three nurses, and two maintenance men were waiting at the door. The maintenance men and I each took a chair and went to the nursery, where we unwrapped them and set them up. The men promised me they would throw the old rockers in the dumpster. Jan and Jen made a list and delivered the flowers. We were there four hours.\n\nI had a little surprise for her. Sarah, the \"vertically challenged\" woman I'd made a rocker for, had just had her baby. Jen was enthralled when the diminutive woman showed up, obviously pregnant. The chair was for her to rock her baby in.\n\nSarah was a living doll, a blonde with blue eyes, and she looked like a pixie. Her husband was 6'1\" and was pretty sure she was responsible for the sun rising every day. She sat down, got a dreamy look on her face as she rocked and stroked her tummy. Finally getting up, she walked over to a stepstool I had in the shop and stood on it. \"Get your ass over here, Jaime. I want to thank you.\"\n\nJen giggled as she still had to pull me down slightly to give me a big kiss. \"There, I needed to do that. I'll send you a picture of me and the baby on this chair when we take her home from the hospital. Look for two more photos over the years. We decided pretty early we want three. Every one of them is going to hear the story of how Uncle Jaime built this chair for us.\"\n\nI took Jen down to see her and they hugged as Jen gushed over the pictures.\n\n\"We're going down to the nursery now. Jaime made three rockers for the volunteers and I intend to stress test every one.\"\n\nSarah smiled and asked the nurse if she'd make sure Jen got to rock her daughter. The nurse smiled back and said something could be arranged. When we got to the nursery Jen and Janice immediately sat down. Janice gave me a pointed look and told he to get my ass in the third chair. Three nurses came out immediately and put a baby in our arms. I didn't get to object; suddenly I had a small bundle of crying humanity in my arms. Janice laughed while Jen and the nurses grinned. \"Rock him, Jaime, and talk to him while you do. The motion and the sound of your voice should calm him down.\"\n\nSo I did. I talked about his future, how he could be anything he wanted to be, and how much his parents were going to love him. I talked about little league, video games, even girls when it was time. He stopped crying, cooed twice, and went to sleep. I looked up to see the other two rockers motionless and the nurses in a cluster before us, tears leaking. Way too much estrogen, I suspect. My little man was asleep and they took him from me. My arms felt suddenly very empty.\n\nJen didn't say a word on the way home and I liked the silence so I didn't break it. When we got back to the house she looked at me. \"What now?\"\n\n\"Well, I think we've done our civic duties for the day. How about a nice dinner and a night at the Barn? I wouldn't mind a little dancing to end the day. Pick you up at seven?\"\n\n\"On the dot!\"\n\nWith a quick kiss she was out of the truck and gone. I piddled around for the rest of the afternoon, thinking. Was there a future here? Would she ever miss her old life? Would I offend her sometime down the road and watch her disappear again? Would the money get in the way? Was it worth it to try?\n\nOf course it was. She had been my dream woman since the day I met her.\n\nI didn't get a chance to get out; she came bouncing down the steps before I was in park. Tight jeans, western shirt, red boots, and a hat to match them. She slid in giggling. \"I can't wait! I've wanted to do this again since the last time you took me. I tried to talk Steve into going once but he said it was beneath our dignity. Boy did he get an earful. I asked him since when did having fun become undignified? Then I asked him how he could describe his fishing trips as dignified when he came home in dirty clothes, smelling like fish and bait. I asked if thought his business associates would approve and he got pissed. I almost went by myself. I tried calling you but you were out on a date. Things were pretty tense for a while around the house.\"\n\n\"Well, I expect you to have a ball. I want you to keep me and a few more cowboys gasping for breath as we try to keep up with you. Let your hair down, shake that hot rump like you're trying to make it come off, and have a good time!\"\n\nShe slid over and gave me a loud kiss right on the ear. It rang for three miles.\n\nIt was deja vu all over again when we pulled into the parking lot in my truck. I'd gotten all the bells and whistles and it was a four-wheel drive hunk of gleaming chrome and shiny paint. Then Jen got out and once again everyone forgot what vehicle we'd arrived in.\n\nWhen we met up with my friends it was like we'd just seen them last week. Barb was there with her new husband and they hugged like long lost sisters while she showed her pictures of her wedding. She must have taken our advice to heart. The guy was super nice, successful, and totally in love. Barb told Jen when he went to the bathroom that she had told him all about her past when he asked her to marry him.\n\n\"He just stared at me long enough to make me nervous before he spoke.\"\n\n\"You over that shit now? It's all in the past?\"\n\n\"I told him it was, told him how much I loved him and that I'd sign any kind of prenup he wanted.\"\n\n\"Well then, good enough. Wanna set a date now?\"\n\nShe was crying by now. \"Best of all, my kids love him, especially the oldest boy. The fathers of my other two are still in their lives, but his just walked away. When my man isn't working that boy is his shadow.\"\n\nWhen he got back Jen gave him a big kiss, then patted his cheek. \"That was for being the man Barb needed. I see many happy years ahead of you.\" \n\nHe glowed. \"Thank you Ma'am. I'll dance at your next wedding.\"",
        "Jen looked at him funny and I had to explain it was an old Southern saying that indicated gratitude and she grinned. \"Keep your dancing shoes shined. I'm hoping you'll be needing them soon.\"\n\nThe group cheered and I looked at her. Well, it seems she had declared her intentions to the world. Regardless, we had a great time. Jen danced with most guys from our group, but every time the band did a slow tune she had me on the floor, rubbing against until I was hard as a rock. Then she'd give an extra push, giggle, and back off.\n\nWhen we left, her well put together look was history. Her shirt was sweat soaked, with the tails out, and her hair hung in limp ringlets around her face. She'd given up on her makeup and had washed it off. I thought she looked like one sexy mess. I grinned, thinking about how her fashion friends would react if they could see her now.\n\nShe saw the grin. \"What are you grinning about?\"\n\n\"How hot you look right now.\"\n\nIt must have been a good answer because she snuggled as closely as she could in the truck and didn't let any space get between us until we were in her drive. She knew I wanted to go slow so she didn't invite me in. We did manage to steam the cab of the truck up like teenagers, making out for about twenty minutes. I got my first intentional feel of her firm breasts. Jen had the classic model's body: tall, thin, with boobs on the smaller side. Still felt great. When we finally came up for air she popped the pearl snaps of her shirt open, showing a very sheer red bra. The bra clasped from the front and pretty soon I was looking at what had to be the most perfect pair of breasts in the known universe. She hung the bra on the rearview mirror and told me if I took it down before she told me to she'd kick my ass. She hopped out of the truck and strutted into the house, turning at the last second and holding her shirt open, giving me one more look. I could hear her laughing as she closed her door.\n\nShe was banging on my door at seven the next morning. I stumbled to the door and before I could speak she shot past me. \"Shower. Get presentable. I'll make breakfast, and then you're taking me fishing. I want to see what the attraction is.\"\n\nI got myself together and hooked the boat up while she finished breakfast. She asked about a thousand questions while I tried to eat. I finally held up my hand. \"Jen, honey, wait until we get on the water. That way I won't have to answer the same question twice.\"\n\nShe stopped talking instantly. It wasn't until we were in the truck that I realized I'd called her honey. I got the boat into the water and tied it to the dock, then we went to the bait shop for worms. I was going to start her out slowly. I also picked up some soft drinks and water for the cooler.\n\nI eased out until I was past the no-wake zone and opened her up. Steve had picked a really good boat, mostly from the suggestions I'd given him. Jen stood beside me, laughing with the wind in her face. I got to the little cove I picked, cutting the engine and using the trolling motor. I put us about twenty feet out from a dead pine that had fallen into the water, knowing the fish would use it for shelter.\n\nI took a standard rig and walked her through everything I was doing, teaching her how to tie a hook to the line, how much weight she'd need for the size cork she would be using, then showed her how to put the worm on the hook. If she was grossed out, she never showed it.\n\n\"I'm going to cast it now. Watch me.\"\n\nI flipped the rod and the cork landed a couple of feet from the tree. I handed it to her, telling her to watch the cork. If it went under, pull back with a steady pressure and reel. Make sure you keep the tension on the line to keep the fish from spitting the hook out. Then I sat back and watched.\n\n\"You're not going to fish?\"\n\n\"I'm not here to fish. I'm here to teach you how to fish. Are you watching your cork? See how it's heading for the tree? Don't let it have enough line to make it or it will tangle your hook. As soon as it runs out of line it'll go under.\"\n\nThat's exactly what happened. Jen squealed as the rod bent, reeling as I had told her. Three minutes later I used the net to scoop up a really nice bluegill, easily a pound.\n\n\"Well done, Jen. That's a good sized fish for the species. And they're really good eating.\"\n\n\"Will you fix it for me?\"\n\n\"Sure, but here's a better idea. Why don't you catch enough for both of us?\"\n\nWe worked the cove for the next hour, moving slowly along the bank. She caught four more bluegill but only one was big enough to keep. We were getting ready to leave the cove to try another place and she wanted one more cast at the tree. She'd been practicing. We had to cut her line once when she tangled in a tree, and her first couple of casts went maybe ten feet but she was getting progressively better. Her cast was perfect, landing about a foot from the point of the tree. The cork went under instantly and Jen almost screamed when the rod went double. She fought the fish for ten minutes while I hovered with the net. I got it just as it spit the hook out and tossed it aboard.\n\nShe'd caught a bass, a nice one that went two and a half pounds on the scales. She asked if it was edible, and when she found out it was it went into the live well.\n\nWe worked another cove, hitting a school of bluegill, and she added three more nice ones to the pile. By then it was getting close to noon, so we stopped. \"They don't bite well when it's too hot. We'd have to come back late in the evening to catch more.\"\n\n\"Can we?\"\n\n\"Well, sure, but do you want to go all the way home and them come back?\"\n\n\"No. I'd like to hang out on the lake. You can teach me how to drive the boat.\"\n\nI made her make a few laps in a big cove to get her used to handling it, explaining the rules of the 'road' to her. Once we were in the main channel, I let her go a little faster. An hour later we were zipping around like she'd been driving a boat for years. She pouted when I made her slow down and go back to the marina. I explained it to her.\n\n\"If we don't get back pretty soon we'll be using the trolling motor. We're almost out of gas.\"\n\nShe pulled up to the pump like she had been doing it forever, and the attendant secured it so he could fill it up. For another twenty he parked it in a slip for us while we went to lunch.\n\nThe marina had a pretty good grill and we inhaled a couple of burgers, then sat and enjoyed the air conditioning for a bit. We were getting looks, but I had gotten used to that. Jen had on daisy dukes and a cute crop-top. Her hair was back in the messy bun she seemed to favor. I think one woman recognized her but didn't say anything. I could hear the discussion in her head. \"That's Jen Foster! Naw, it couldn't be. What would a supermodel like her be doing in this little grill in the middle of nowhere with such an average looking guy? She's still hot, though. That is one lucky guy.\"\n\nI totally agreed.\n\nI nearly had a heart attack when she stood on the dock and wiggled out of her shorts and top, showing a very nice bikini. It was tiny but not vulgar, if that makes any sense. Everyone, and I mean everyone, thought she looked good. The gas attendant bent over so far around the pump to get a better look at her that he overbalanced and ended up in the water. Jen never missed anything and had a big smirk on her face. Then she totally blew their minds by giving me a scorcher of a kiss before getting on the boat. \"Better let me drive honey. You look a little out of it.\"\n\nWe zipped up and down the lake for an hour before she gave me the wheel. Take us somewhere private, baby.\"\n\nI took her to the mouth of the lake and into a little cove I had discovered by accident. Trees hung over the entrance and you had to crouch down but once you cleared them there was a beautiful little cove with a strip of white sand on the left side. I bumped the nose into the sand, jumping out and securing the boat to a big limb. It wasn't long until she had a couple of towels spread out. She lay down and undid her top, tossing it to the side. \"Rub me down, honey.\"\n\nI did. It was one of the hottest experiences of my life. I did her back and legs and she insisted I do her bottom. Her cheeks were mostly bare and it was impossible to keep my hands from shaking. It didn't help any when she thrust those buns up, filling my hands. When I was done, she casually rolled over and I was like a deer in the headlights, staring at her perfect little breasts. She giggled. \"Finish the job. You would not want these puppies burned. That would mean you don't get to play with them for a while.\"\n\n\"You're just going to lie here like this?\"\n\n\"Usually I don't have the bottoms on. We're in a secluded space honey, and the boat is between us and the entrance. We'll hear someone coming well before they will be able to see us.\n\nI rubbed her down, smiling as she moaned slightly when I coated her nipples. I worked my way down her tummy, admiring her smooth skin. I skipped the good parts and rubbed her legs, starting at her toes and ended up at the top of her thighs.\n\n\"Do the rest, please.\"\n\n\"No. If I get that far I won't be able to stop.\"\n\nShe cooed as she rubbed my chest. \"Would that be a bad thing, making love to your girlfriend on a sandy little beach? It's just us baby. I know part of you wants to.\" She had grabbed my dick, which was so hard it was aching. I gave her a scorcher of a kiss and stood, sliding my board shorts down. I had just gotten them past my knees when I heard a giggle. I yanked my shorts up while Jen scrambled to get her top on. Two girls, late teens I'd say, came around the boat in a red canoe.\n\nThey grinned at us. \"Sorry to disturb you. This is such a pretty place I wanted to show it to my friend. We'll leave now.\"\n\nThey seemed as embarrassed as we were and Jen smiled. \"You're here now. Come on and enjoy the sand with us. If you're thirsty we have sodas and water.\"\n\nI had slipped into the water, glad it was a little cool. I climbed into the boat and came out with a coke and a water, along with a few snacks. Jen talked to them for half an hour, charming them until they pretty much told her their life stories.\n\nIt was pretty obvious they were gay. They looked at each other with hunger in their eyes. I have a feeling the beauty they were going to admire in the cove was not the scenery. They were so absorbed with Jen they almost forgot I was there. Jen looked at me with an arched eyebrow and I grabbed a rod and started working the cove, walking away from them. I managed to catch a couple of nice bass and another fat bluegill before returning. Jen was holding them as they cried on her shoulders. We left them to their privacy and returned to the main channel.\n\nI grinned. \"I bet they're enjoying that white sand about now.\"\n\nJen sighed. \"I doubt it. This was their first date, the first time Andrea understood she was gay. There will probably be a lot of hugs and kisses, a little exploring with their hands, but Andrea won't let it go any farther. She's still trying to find her way. Gail is a little more experienced and she's desperately in love with Andrea, so she'll be patient and gentle.\"\n\n\"They told all that to a total stranger?\"\n\n\"Andrea recognized me. A lot of it was reading between the lines. After she got over being star struck, she asked if it was true most models were lesbians.\"\n\n\"What did you tell them?\"\n\n\"I told them no, but a lot of us were bisexual. That much close proximity to that many beautiful naked women without a lot of straight men around takes a toll. And before you ask, the answer is yes. I had two girlfriends when I first started out before I decided it just wasn't for me. I'll never lie to you about things like that, Jaime. I need you to know me, and know you can trust me.\"\n\nInstead of freaking me out, it made me feel good that she trusted me enough to tell me things.\n\nWe fished until it was almost dark. Jen caught a lot of fish and we had a pretty full live well when we hit the landing. I had her back the truck up to secure the boat and she did really well for her first time. \n\nShe insisted on helping me clean the fish before she left. Of course there was a pretty lengthy make-out session before she got in her car.\n\n*****\n\nI thought a lot about it while I was at work. She was sitting on my steps when I got home. I needed to get her a key made. She was there for her fish dinner.\n\nI walked her through how to make tartar sauce, slaw and showed her how to make hushpuppies. I rolled the bluegill in seafood seasoning after dipping them in an egg and milk bath. \n\nI let them set while I did homemade French fries, then dropped them in my fryer, waiting until they popped back to the top golden brown. The bass, I pan-fried in bacon grease after rolling the fillets in a seasoned cornmeal. We ate like pigs, cleaned up, put the dishes in the dishwasher and snuggled down on the couch. The heavy meal had us out in minutes. I woke up at one, pulling Jen with me into the bedroom. She stripped down to her panties and climbed into bed, asleep in seconds.\n\nThe smell of coffee woke me up. No one should be allowed to look as good as she did in the morning, I thought, as I watched her bustle about. \"Get your shower. Breakfast is almost ready.\"\n\nTwenty minutes later I was seated at the table, eating probably the best omelet I'd ever tasted. I asked what it was and she rattled something off in French. I think the loose translation was \"good fuckin' eggs.\"\n\nShe was chattering happily and I smiled. As she was clearing the dishes I asked her a question.\n\n\"Jen, while we wage slaves are at work, how do rich supermodels spend their days?\"\n\nShe stiffened and I felt like I'd made a mistake. \"Why, does being one of the idle rich offend you?\"\n\n\"Not at all, but I suspect you're not one of those. You have too much energy, too much life in you to just sit around. If it bothers you, you don't have to talk about it. I was just wondered what you did to keep from getting bored.\"\n\nHer smile came back. \"I volunteer a lot. I usually spend a couple of hours at the hospital, rocking babies. Everyone, and I mean everyone, wants to know where those rockers came from. They caught one husband trying to sneak one into his wife's room, and another trying to sneak it out the door.\"\n\nI knew that was a soft jab at me for not signing the loan papers. She didn't nag, but she did bring it up now and then. \"What else?\"\n\nJen seemed embarrassed. \"Well, I spend a few hours a week on the phone and computer with my financial advisors. I saw a few models who didn't watch their money, and it disappeared. It's why I have three separate advisors.\"\n\nIt was pretty obvious she didn't want to remind me of how rich she was. \"Good thinking. I trust most of my friends, but only a few with money.\"\n\nA sigh of relief passed her lips. \"I also sit on a few boards. Plus I work with the fire department. I stay pretty busy, but here lately I think I've been a little slack in my main pursuit.\"\n\nI walked right into it. \"What's that?\"\n\nThe smirk told me everything. \"Taking care of you. Making you see I'm the only woman who'll love you like you deserve. I think I'm making progress, but Jesus you can be slow at times! I'm in love with you, moron. Don't make me think I might have gotten it wrong. Look at the time! Don't talk, give me a nice kiss and go to work. Shoo now.\"\n\nI was out the door with the taste of her lips on mine, dazed and confused. I was seriously ineffective at work. The guys caught on and the teasing started. They shut up pretty quick when Jen stopped by just before lunch. Work just stopped as they watched Jen get out of her Mercedes.\n\n\"You forgot your cell phone honey. How am I supposed to know what you'd like for dinner if I can't get in touch? Oh, and I brought you lunch.\" She handed me a paper bag and a thermos, gave me a kiss that almost melted my boots, steel toes and all, and was gone.\n\nThe guys were quiet for a while, then they started. \"Damn Jaime, you're fighting above your weight there brother.\" Another chimed in, \"Man, she looks just like that supermodel. What was her name, Jane, no Jen something. You lucky bastard.\"\n\nI grinned. \"Yeah, she gets that a lot.\"\n\nMy concrete guy chimed in. \"Yeah, but she has a serious flaw. She must be dumb as a rock to be hooked up with you. The girl got vision problems? Did she ride the short bus at school?\"\n\n\"She's probably smarter than all of us put together. That wasn't a junker she was driving. She's hot, well off, and she likes to fish. She's my dream girl.\" Even as the words came out of my mouth I knew they were true. She was beyond my dream girl, she was my ultimate fantasy.\n\nI was struck. She WAS my fantasy, my dream girl. But how often do fantasies manage to make the transition to reality and survive? Not many. Most fairy tales didn't start the way they read now. The evil stepmother in Cinderella, for instance. In the original version she was forced to dance in red hot shoes until she died. Most were tales designed to scare the shit out of kids and keep them safe at home.\n\nIt got a lot more complicated when I got home. I sighed when I saw the car in my driveway.\n\nMom.\n\nWe didn't exactly get along that great, mostly because she was pushing me to settle down with a \"nice girl\" and get on with producing the next generation. I wondered what she would think of Jen.\n\nAs usual I came in the back door, surprised to hear peals of laughter. I heard Jen talking. \"So that's how she came to have a lobster grab on to her boob!\"\n\nThey stopped when I entered but were grinning like mad. \"I see you've met Mom.\"\n\nMom spoke up. \"Yes. It's a shame I had to come to her, even though I didn't know there was a her to come to. Were you ever going to introduce us?\"\n\nThat's when it got surreal. \"Mom! Don't be mean to him, just because he's a little slow.\"\n\nMom snorted. \"Honey, if it was left to him, I'd hear about you sometime between the second and third child. I'm really glad you're in his life. You're going to have your hands full keeping him straight, but I think he's worth the effort. Besides, if it gets tough you have reinforcements you can call in. I'm sure you haven't met his grandmother yet, have you?\"\n\nJen shot her eyes to me. She never understood why I didn't talk about my family much. Maybe now she would understand.\n\n\"No, but I can't wait. Can you come for lunch Sunday? Maybe we'll get Jaime to grill, or better yet, do a fish fry. Try not to get here before one, though, so we'll have time to get home from church.\"\n\nI swear if Mom's smile got any bigger her jaw would split. \"We'll be here. I might bring my sister and a few of his cousins. That way you can meet most of them at one time.\"\n\n\"Call and let me know how many so I can make sure we have plenty.\" \n\nI sat while they pretty much ignored me. When Mom got up to leave, she gave Jen a tremendous hug. I got a peck on the cheek and some whispered words. \"She's perfect, son. Try not to screw this up.\"\n\nJen just grinned.\n\nWe had a light supper, neither very hungry. We cleaned the kitchen and snuggled on the couch. After a little snuggling, the kissing began. This went on for about ten minutes before I gently pushed her back. Her face told me her feelings were hurt a little, so I leaned in and kissed again.\n\n\"I wanna talk, baby. You snuggling up to me does not help my brain function, due to lack of blood.\"\n\nJen looked a little apprehensive. \"What do you want to talk about?\"\n\n\"Us.\"\n\nIf she looked apprehensive before, now she looked downright nervous. \"What about us?\"\n\n\"That came out wrong. I want to talk about us, but first I want to talk business. I've decided to trust your business instincts, honey. I signed the loan papers today and gave my boss a month's notice. In thirty days I'll be the co-owner of J & J Custom Furniture Designs.\"",
        "Her face lit up. \"That's great news. I was worried you wouldn't. By the way, what does the name mean?\"\n\n\"It's short for Jen and Jaime. This will be your business as much as mine. I'm sure you'll be the hand at the helm. You know how to network and negotiate. I know how to build furniture. Seems pretty equitable to me. That is, if you'll do it.\"\n\n\"Of course I will, honey. But it will be your business.\"\n\n\"No it won't. I had the agreement changed. You and I will own it, fifty-fifty. I declared your knowledge an equal investment. Don't fight me on this or the deal is off. Are we good?\"\n\nInstead of talking she dove back into my arms. Between the kisses and the tears I was fairly certain there was a yes in there somewhere. \"Good. Your lawyer has the amended papers. Sign them anytime it suits you.\"\n\n\"Tomorrow morning I'll be waiting outside his office, pen in hand.\"\n\n\"Good. Now on to personal business. You know I was infatuated with you from the day we met. I didn't know you or that you were famous and rich in your own right. All I knew was the most beautiful woman in the world was standing before me. As our friendship grew, I discovered you were even more beautiful on the inside. You were my dream woman, even if you never had a dime.\"\n\nShe was on the edge of the couch, looking too scared to breathe.\n\n\"You also know of my moral compass, so I just loved you from afar while Steve was alive. Steve's gone now. And now my dream woman is here, up close, and single. I'm glad now with what I'm about to say that we haven't slept together yet. No, that's not right. We have slept together, we just haven't, um, \"consummated\" our relationship. This way I can look into the eyes of our daughters and sons and tell them to be really sure, because we were, never having sex until we were engaged. Maybe that will be a strong moral...\"\n\nThat was all I got out before she tackled me so hard the sofa flipped over. She rolled with it until she was on top of me, eyes moist, chest heaving, hands trembling. \"Say it? Say it! SAY IT!\"\n\n\"I wanted to be on my knees but I guess this will work. Jennifer Maryanne Foster, will you marry...\"\n\n\"YES!\"\n\n\"You didn't let me finish.\"\n\n\"Oh, you're finished all right.\"\n\n\"I didn't really mean to propose before I had the ring. We'll go pick it out this weekend.\"\n\n\"No we won't. You will pick it out. I want something nice, but it has to fit into your salary range. I've had rocks before and this time I don't want a rock. I want a symbol of love, understand? It doesn't matter what it is, I'll wear it with pride. You hear me?\"\n\n\"I guess I may as well start now. Yes dear.\"\n\nShe rained kisses all over my face. \"Good boy. You're going to be so easy to train.\"\n\nI managed to get her off me and the sofa upright, patting a seat. \"Maybe not. I need you to listen to me. There will be no discussion on this.\"\n\nJen's eyes widened but she held my hand and was still smiling.\n\n\"First. I know you're rich, money I'll never be able to make in my lifetime. The thing is, I don't care. You're going to want things when we start a family and I have no problem with you spending money to get them. The thing is, I want my, our children... Hold on a minute. That sounded so good I want to say it again. I want our children to grow up to be level-headed, not spoiled princes and princesses. I want them to have a work ethic, to know the value of saving and spending wisely.\"\n\n\"I also want a prenup. Your lawyer drew it up for me. Plainly speaking, I never wanted any of your money, so if we don't end up together he wrote it up like that. If we split, you keep what was yours, I keep what was mine, and everything we accrued together gets split 50/50. I'm not going into this to fail and I'm pretty sure you aren't either, so all they will ever be is words on a paper we're not really sure we remember. Agreed?\"\n\n\"Can we maybe...\"\n\n\"Nope. Take it or leave it. I want you 100% sure I wanted you. Not your money, not your fame, just you.\"\n\nShe had a hard time hiding the smirk so she looked down and said \"Yes dear.\"\n\n\"Good. I realize you'll want a nicer house when the children arrive and I'm all right with that. I don't want anything like you and Steve had. I want a nice roomy home to fill with children and love. Agreed?\"\n\n\"Yes, dear. I have a condition. For right now, while we get our business off the ground, we stay right here. There's not a thing wrong with this house, honey. Houses are just glorified boxes designed to hold love, so I'm fine with the one we have right now.\"\n\nThat kind of threw me. She had lived in mansions with servants, but she wanted to stay in an 1800 square foot modular? She saw my look.\n\n\"The place Steve and I had, the ones I had before we got together, weren't houses. They were monuments to success. You couldn't be spontaneous with servants around, one wrong picture and careers could be destroyed. I want something where I can get up in the middle of the night and go raid the freezer for ice cream stark naked and have no worries. Besides, the house I grew up in was smaller than this and I loved it. You need to remember, honey, I wasn't born rich. I lived a pretty average life until I was fifteen and got \"discovered\". I've always hated that word.\"\n\n\"Well, all right then. I'll take a little time tomorrow and look for a symbol of our love. It may not be just a diamond; I always thought they were kind of bland. If you just don't like it, I'll try again. Give this some thought. I don't want to start looking for venues tomorrow. I want a nice long engagement, to give us enough time to make sure we really mesh. I may disappoint you in bed. I might snore or have some kind of habit that irritates you to distraction. I guess I just want to \"debug\" our relationship before we say our vows. Does that make sense?\"\n\nShe grinned. \"It does. And I agree. I'm sure I have habits that you find distracting. I'm sure we'll try to change for each other but if we can't we'll learn to deal with it. Now, enough talking, let's get to the consummating part of our relationship.\"\n\n*****\n\nI'd like to say making love to a millionaire supermodel was unworldly, that I saw and felt things I'd never experienced before. You know what? It was. Not because she was rich. Not because she had incredible beauty. I saw and felt those things because she was the woman that I loved. Her body was fantastic. I found she was a little ticklish in certain spots and extremely responsive in others. I kissed her whole body at some point during the night and she nearly jumped off the bed when I hit the back of her knees. Her breasts were as high and firm as a teenager's, with small nipples that would crinkle and harden just from the slightest breath.\n\nShe was as smooth as a baby and she told me as we came down from the first round I better like it like that because she'd had a laser treatment, years before, to help her career. I rubbed the soft mound and grinned, liking the feeling. We did everything we could think of to each other and talked about a lot more. We never did anal, and when she brought it up she surprised me. \"I've done it a few times and it wasn't something I really enjoyed. With someone I love it would probably be different, and this body is yours, so if you ever want to do it let me know.\"\n\nI'd never done anal. To be honest I'd never understood the fascination men had with it. With Jen, though, anything was possible. I filed it away with a note to revisit the subject sometime down the road.\n\nAs we talked our hands wandered, and in minutes I was as stiff as I was the first time. She wanted me to do her from behind, saying she wanted to be mounted like a bitch in heat, because the way she felt she was. It got a little strange when she asked me to spank her while we mated. Seems she liked the stimulation. I gave her a few taps and she told me if I couldn't spank her like a man to just stop. The next smack saw her cheek jiggle and she squealed a little before she cooed. \"Yes! Just like that, baby! Mark me as yours!\"\n\nJen climaxed twice before I couldn't hold back any longer. We collapsed and I went to sleep rubbing that magnificent ass. She let me get six hours in before waking me for a morning round. When we fell back, she giggled. \"Shower time, baby. We smell like old sex. I prefer the scent fresh, so let's get clean and see what we can do about it.\"\n\n\"I can't. I have to work.\"\n\n\"Not today. You would be two hours late as it is. Don't worry, I called your boss and told him you had something important you had to do and wouldn't be in today. You don't have to thank me. Now let's get you all spiffy clean. You have an errand to run.\"\n\nWe played in the shower, but she wouldn't let it get serious. After I dressed, she gave me a dandy little kiss and pretty much shoved me out the door. I grinned as I drove away. I didn't need to shop for a ring. I had already had it custom made by a friend. It was a nice sized diamond in the shape of a heart, with two small emeralds, also, in the shape of hearts flanking it. The bands that held them to the mount were cleverly designed to look like skeleton keys and the inside had an inscription. \"You'll always have the key to my heart.\" \n\nIt was corny, but she knew I meant it, and when she saw the ring and read the inscription she cried, hard, for two hours, stopping just long enough to give me kisses from time to time.\n\nWe lived in a world of lust and love until Saturday. We picked the last flowers of the season, getting just enough for ten bouquets. I wondered how Jen was going to tell Janice. It was really subtle. As soon as she saw her she shoved the ring under nose. Jan let out a squeal and soon she and the three nurses who always seemed to be around her grabbed Jen in a really nice group hug. When they realized they were ignoring me, they abandoned Jen and smothered me with hugs and kisses.\n\nWhen it came time to give the bouquets away, I gave Janice and each of her nurses one, as a thank you. We distributed the rest, three to children and three to seniors, before ending the day in the rockers, holding babies. Janice brought the tears out again when she told Jen I was going to make an excellent father.\n\nThe first thing Jen did when we got home was drag me to the bedroom. Luckily, it was a quick (ninety minute) romp for us. She shoved me towards the bathroom. \"Shower, shave, and put on something nice. The girls will be here any minute.\"\n\nMelody brought her husband, just so I'd have someone to talk to. Sandy showed up with Janice, and after quick kisses we were evicted from the living room. I took Ed out to the shop, grabbed a couple of beers out of the refrigerator, and turned on a college football game. We were about five beers in when they found us, sitting in rockers and singing the fight song of Ed's team. Melody led him to their car, glad she had less than two glasses of wine, and soon they were all gone. Jen started kissing me again before their taillights were out of sight.\n\nWe didn't play because she wanted to go to church in the morning. She made sure we sat with friends and waved her left hand around a lot. Soon a ripple went through the congregation and the preacher, sharp as always, noticed. As he shook hands he smiled, and when he got to us he wrapped Jen up in a big hug. \"You got him, did you?\"\n\nJen laughed. \"He shouldn't have taught me to fish. I took the lessons to heart. I used the right bait, letting him run with the hook before reeling him in. I think he was happy when I scooped him up in the net.\"\n\nAfter talking about how SERIOUSLY offended he'd be if we didn't let him perform our service, he turned us loose. It took us an hour to get from the front steps to the car because people were stopping to congratulate us, and by us, I meant Jen. Seems I was just along for the ride.\n\nA few husbands clapped me on the back and told me to get used to it, this was my life from now on.\n\n*****\n\nMom, Gran, all my aunts and cousins descended on us that afternoon. We didn't cook, Jen just ordered pizzas. I lasted about an hour before I slipped out to the building and worked on a couple of rockers. Mom came in an hour later, went to the fridge and grabbed a beer, then sat down in a completed rocker.\n\n\"I was a little leery of her at first. She was rich, beautiful, could have any man she wanted, live anywhere in the world she chose. I think she's the real deal, honey. The woman loves you. I wouldn't be surprised if you start your family right away. She really wants children, more specifically your children. I'm gonna have the prettiest grandbabies in the world and that's not an exaggeration. Well done, Jaime, well done.\"\n\nShe got up after she finished her beer, turning as she reached the door. \"Two things. You treat that woman like gold, you hear me? And I better damn well have one of these rockers by the time the first grandchild comes.\" \n\nAll I could do was grin.\n\n*****\n\nShe decided she wanted a June wedding. That was nine months away and suited me fine. I worked my notice and spent the evenings setting up the shop. Jen thought I should push rocking chairs as our signature piece. We made an assembly line, although every rocker was just a bit different, and we did custom orders. Jen insisted we take ads out in magazines geared to the upscale home market. Of course, Jen was the model. The ad campaign was brilliant. In the front of the magazine she was sitting in a chair as she was now, holding a baby. Midway through, there was another ad, her in late middle age holding another baby while a young woman looked lovingly at them. Almost at the back there was another ad. Her makeup artist was a genius and I got an idea of what Jen would look like in her seventies: still hot, slender, with pure white hair. She was holding another baby while a middle aged woman and a younger one stood behind her. There was a banner over them, Four Generations, and a tag up front. \"J&J Rockers, built for more than one lifetime. Guaranteed.\"\n\nI was struggling over what to charge. I used local oak, the best I could find, and with labor I had about seven hundred in each, on average. If a customer wanted something custom the price went up. I was thinking two thousand and not feeling good about it, when Jen called me to the computer. She had listed our prices, and a standard rocker went for five grand, more if it was customized.\n\n\"That's highway robbery! No one will pay that!\"\n\nShe grinned and changed pages. \"Nineteen orders so far, and the site has only been up for a day. I wouldn't worry too much if I were you.\"\n\nI could make about two a week using an assembly line process, three if I worked fifty hours. I refused to hurry. People were paying for the best and I intended to give it to them. We were getting ready to ship our tenth chair when we got a phone call from the owner. She wanted it autographed. Jen said sure, and then turned bright red when the customer wanted ME to sign it, not her.\n\nEach chair had a unique feature. A number was carved into it in such a way that it wasn't noticeable. We didn't advertise that feature and years later I was called as a witness in a lawsuit, the complainant saying the chair wasn't mine, as it was advertised. I examined the chair and agreed. There was an uproar and the judge asked how I knew. I asked to speak to the judge in private, showed him a few photos of my work with the numbers featured. There was no number on the chair in question. The seller, in turn, sued the shop she got it from, showing the letter of provenance they had provided.\n\nJen had moved her only relative, her Aunt Beth, the sister of the aunt that raised her, into her condo. I don't think we liked each other that well to start, but we must have grown on each other because soon she was helping in the shop, mostly computer and paperwork. Jen ran our finances and made sure she drew a good check every week.\n\nJen had gotten more into the building end of the business. I still didn't like her near the saws, lathes, drills and other assorted power tools found in our business, so she concentrated more on assembly and finish. It took me a long time to get used to seeing her in jeans and a t-shirt, bandana holding her hair back, with a shop-apron and elbow length gloves completing the outfit. We were up to four a week, by then.\n\nOne of her mega-rich friends dropped by. Jen, the consummate businesswoman, met him in nice clothes and gave him a tour of the shop. She led him into the house, showing him the custom made four poster bed and the matching chests and bedside tables I'd built for her. Next she showed him the second bedroom, set up for a girl.\n\nHe came back into the shop and after a round of coffee and pecan pound cake, made his pitch.\n\n\"Jen knows I'm divorced. What she doesn't know is that I got custody of our daughter in the divorce. Seems her mother had a lot of bad habits that made it impossible to leave our daughter with her. She's seven years old, and her favorite thing in the whole world is sitting in the custom rocker I ordered, number 29, by the way, and letting me rock her to sleep while I read her one of her favorite stories. That rocker has bonded us closer and brought us more peace than the tens of thousands I spent on therapy. She's already told me she wants her own rocker for her eighth birthday, and I want to surprise her with a whole new bedroom suite. Can you do it? I'll make up any shortfall you have concentrating on it and you would have seven months. Talk it over with your wife and get back to me. Oh, and you're not just a furniture maker. You're an artist in wood. You're not a father yet, but Jen says it will be soon. You'll find, Jaime, that once you have a child, especially a little girl, your world changes.\"\n\nHe left, taking the uneaten portion of the cake. He kind of insisted, so we let him. Jen and I made a quiet dinner and snuggled down on the couch.\n\n\"What do you think? Jack told me that even though he's worth almost a billion dollars his most prized possession is your rocker. Will you do it?\"\n\n\"Tell Aunt Beth to inform everyone who orders a chair that there is a six-month backlog. It should take me four months of concentrated effort but we can get it done. Call him back and tell him we agree to do this. Tell him we may need to consult from time to time. We need to know more about his daughter. What does she really like? What doesn't she like? I don't intend to make something she'll grow out of in three or four years, but I would like to incorporate some subtle things to give her joy.\"\n\nShe kissed me hard and grinned. \"Good. Consider it practice for our kids. We already have one for the first girl, but you need to think about boys down the line.\"\n\nI knew she wanted kids, but we never discussed a number. \"How many children should we have?\"\n\nShe blushed and looked down. \"As many as I can bear safely, but considering my age, three or four if we space them closely.\"\n\nShe glowed at my reply. \"Good answer. We need to get on that as soon as we tie the knot. I figure our first should come along nine months and one day after the wedding.\"\n\n*****\n\nJen surprised me by having Jack bring his daughter to the shop. I had her rocker ready to assemble, and I needed to make sure it was to her liking. I'd made it almost full size, to give her room to grow with it. She was a bright and inquisitive child who followed Beth and Jen around as they explained things to her. Jack took advantage of the time to review my plans.\n\nHer favorite bedtime story was about a Princess who becomes friends with a dragon and all the adventures they had, so on the back of the header panel, in amongst the flowers and vines, was a princess on the back of her favorite dragon. I went through about eight headers before I got it right, but it was worth every minute to see her smile.\n\nJen was instrumental in the design of her bed, a four poster with a canopy. Her vanity featured the heart shaped mirror, the frame the body of a dragon curled around it. It was finally done, and we went to deliver and set it up. We arrived just after Alison went to school and just barely got done before she got home. Jack filmed her reaction. First she just stood in the middle of the room, twirling slowly. Then she let out a shriek of pure joy and dove on the bed, laughing and crying at the same time. It wasn't until the next day she found our gift. I'd carved a dragon out of black walnut, sanding it to a velvety texture and coating it with oil, making it so dark it seemed to glow. The princess that stood beside of it with a hand on its shoulder was out of holly, a wood that finished almost snow white. The contrast was very striking.",
        "We went back to the backlog of rockers, by now almost a year behind. Six months later a magazine was couriered to us, Architectural Digest. The cover was Alison's bedroom and the article was about Jack's mansion. There was even a shot of Alison holding the dragon and princess. Jack went into detail about how the famous former model Jen Foster and her fianc\u00e9 had designed and built every piece, making it one of a kind. He mentioned the purchase of one of our rockers and how it had led him to us.\n\nOur business phone lit up like the Christmas tree in New York. Everyone from the royalty of Europe, to Sheiks of the Middle East, and half the millionaires in America, wanted a custom designed bedroom.\n\n\"Just excellent, Jaime. I'm pretty sure this will be passed on to daughter after daughter long after you and I are gone. I can't tell you how much I envy you.\"\n\nI was surprised. \"Me? You're a self-made man. You have the personal numbers of leaders across the globe. If you sneeze, Wall Street jumps fifty points. Why would you envy me?\"\n\n\"All that I've done, all that I will ever do, it will be abstract, all coming down to numbers. I admit I'm a bit of a savant when it comes to money, but fortunes are made and lost every day. Long after anyone remembers either of us, your rockers will still be here. And while everyone wants money, you can't rock your child in it, you can't snuggle the love of your life with hundred dollar bills. More love will come across the seats of your creations than will ever be achieved by money, mine or anyone else's. Jen was right about you.\"\n\n\"Jen's pretty much right about everything. Why is she right about me?\"\n\n\"She said you were the most genuine man she'd ever met. A man who could stand by his convictions no matter what the cost and still sleep at night. A man who would always protect and put his family first. You're a unicorn, brother. You don't exist.\"\n\nFor some reason, that conversation stuck with me for the rest of my life. \n\nJack surprised the shit out of me by asking if Jen and I would take him and his daughter fishing. The next weekend we had them on the boat. Jen was well past the cork and splash stage by then, but she had a ball teaching Alison. She beamed with pride when she hooked and landed her first fish. Jack was a pretty quick study and managed to catch a few, himself. He ended up buying a medium-sized pontoon boat. He could fish off it, but more importantly it would hold Alison and six of her friends. Jack spent almost every Saturday on the lake, often in the company of one of the mothers. He seemed to favor one, a widow his age who had a daughter that Alison loved like a sister. She was nowhere near as rich as he, maybe being worth 20, 25 million tops. Jen grinned and said we may end up having to do another bedroom soon.\n\nThen winter came and fishing season was over unless you were a diehard, and much as I loved fishing, I wasn't doing it in an insulated snowmobile suit and a full face helmet. I had two friends who did that, often having to stop and break the ice off their lines. No thank you.\n\nJen insisted we take a vacation in January, flying us to Vail for some skiing. We took Mom and Aunt Beth along, skiing while they shopped. The condo was really, really nice. Usually I didn't bring it up, but curiosity got me and I asked how much it cost a night.\n\n\"Nothing. We own it honey.\"\n\nWell then. Jen giggled at the look on my face. \"It's an investment, baby. I have a management company rent it out for us when we don't want it. It's actually returning a pretty good dividend. We donate all profits to several local volunteer fire departments. We even let firemen stay here free during the off season. All tax deductible, of course.\"\n\nJen had found an upscale country western club online. One night found us at the club. Jen had gotten Mom and Beth cowgirl outfits complete with hats. It's kind of hard on a guy when he realizes his mother is a bit of a fox. Didn't bother any of the guys who asked her for dances, some as young as 25, some in their sixties, but she could have been on the floor for every dance if she had wanted. Beth wasn't as pretty, but she was still a decent looking woman so she didn't lack for company. We all went home exhausted and Jen burst out laughing in the bright lights of the condo living room. She was sure Beth had a bra on when we left and now she was sporting the natural look.\n\nBeth fled to her bedroom while Mom grinned. \"Don't be hard on her. This is the first time she's gone out in four years, since her husband died. So what if she got a bit naughty? Good for her.\"\n\nJen couldn't help a little teasing. \"Did you get a little naughty with her, Mom?\"\n\nMom grinned. \"I didn't lose my bra, if that's what you're asking. I'm going to miss those panties, though. They matched the bra. Goodnight, kids.\"\n\nI sat with my mouth open while Jen rolled around on the floor.\n\n*****\n\nMarch came, and Jen had been looking at the seed catalogues I always ordered, planning our flower beds for the season. By the way she ordered, I was going to have to expand my plot. A lot.\n\nMom and Beth had bonded after the vacation, and they joined a book club, which led to a more expanded circle of friends, that led to occasional girls' nights out. Jen went to a couple and came home giggling at the antics of the group, but she never made it a regular thing.\n\nOne of Jen's Christmas presents to me, well to both of us, was a really nice computer with CAD capabilities. It was to help us design furniture and it really was a boon. I wasn't as computer literate as I needed to be but that problem soon went away.\n\nThere was a knock on the door of our shop and Jen answered, thinking it may be a customer. We kept the doors locked to keep distractions down. I saw her take a young woman into the cubicle we laughingly called an office. They talked for twenty minutes before they stood and shook hands. Jen brought the woman to me and introduced her.\n\n\"Honey, this is Molly Graham. She's the very first employee of J&J Custom Furniture.\"\n\nMolly was a junior in college, majoring in interior design and minoring in furniture. She was looking for a place to intern over the summer and we were her first pick. She seemed surprised no one else in her school had thought of us.\n\nIt turned out she was there on a scholarship and needed part-time work, so we gave her twenty hours a week to see if she could fit our system. She didn't fit, she improved it, throwing out ideas I'd never even thought of. With her helping, we could get out almost two rockers a week.\n\nThe only clash we had was when she wanted to mechanize a lot of the work. I shot it down immediately. \"If we mass produce, we wouldn't stand out from any of our other competitors. As it is now, every customer knows their rocker is hand-made, every spindle turned by hand, every seat contoured to their bottom if they gave us specs. They had options in leg and header design, making each piece truly one of a kind.\"\n\nShe didn't approve but understood.\n\nThe custom seat was Jen's idea. She'd bought a bicycle once, six thousand, and it came without a seat. You had to order the seat to your exact bottom dimensions for another fifteen hundred. I was amazed at the price. \"Do you still have it?\"\n\n\"No, I got bored with it and gave it to some street kid who needed a bike. The point is, we could offer the same thing.\"\n\nSo we did. We bought what amounted to sealed pouches of foam. All the customer had to do was shake it vigorously for two minutes to activate the gel. When it was fully inflated they sat on it for five minutes, making a permanent impression of their butt. Then they sent it to us. We would scan the impression into our CAD system, and it would activate the machine that cut the general dimensions into the thick oak seat, and I would do the finish work. It was a very popular option. Of course that particular option came at an extra five hundred, but very few opted not to do it.\n\nMolly had a friend who also needed to intern for his studies, and soon Zack joined us. He proved very adept at fitting the finished pieces, making the same small adjustments I would have made, and production went up again. I focused on carving and Jen handled finish. By spring we were ahead of orders by three weeks. It was a good thing, because we scheduled two weeks for our honeymoon. I had no idea where we were going, Jen begged me to let it be a surprise.\n\nBy then, we were already a married couple. We slept together, we worked together, we played together. Jen still did some volunteer work and still spent time with her investors, but not nearly as much as before. Jan and the girls stayed close, and there were two girl weekends to different spas. \n\nI used the time to go hunting. I enjoyed the solitude and found over the years I didn't want to kill as I had in the past, so I carried a really nice camera and used it more than the rifle. I would still shoot, getting two nice deer and a good sized bear during the season. I sent them to a professional butcher shop to be processed. Jen was a little leery and didn't enjoy deer but she loved bear, especially bear sausage. She made me promise to take her next year.\n\nThings were barreling right along. During the first of April, Jen got approached by some old business associates wanting to use her to brand their new perfume. The pay would be very nice and the schedule would be light, filming most of the commercials at the same time, only going back for seasonal pitches.\n\nShe didn't say anything at first, having her lawyers vet it to make sure it was kosher. Then she thought about it. The money was a little over a million a year and they wanted a three year contract, with bonuses built in if the brand took off. Overall, it amounted to five million for roughly five commercials a year.\n\nThen she brought it to me, showing me all the paperwork. I read it and thought about it for a few days. I knew she wanted to do it and realized that somewhere inside, she missed the life.\n\n\"Do it if it makes you happy. I will admit that it makes me nervous. You'll be going back to the life of the rich and famous, the pampering, the ass kissing, the wild parties if you choose to go. I'm afraid you'll wake up and realize life with me was just a fantasy, just a taste of how the other half lives. I trust your love enough to believe that it will never happen.\"\n\nShe wrapped me up, nuzzling my neck. \"THIS is my life. It's the life I want, the life I choose. Let me tell you why I'm doing it. Part of it is a favor for some of my mentors. Part of it is it can be fun now, not the deadly serious game it was before. I'll go in, do about two weeks' worth of shoots and come back to my real life. Then, maybe four days, twice a year, for the holiday and summer seasons. Three weeks, honey, for five million. The best part is all the money will go to the charity that outfits hazmat vehicles for fire departments. We could save lives, honey.\"\n\nShe gave me a big kiss and giggled. \"Besides, I want to have your Mom and Aunt Beth with me. I also want you to spend a few days with me. I think it will make you understand me better and realize this could never be any kind of threat to us. It's only maybe seven to nine weeks over three years. I think we can handle it.\"\n\nThen she sighed. \"I want to get the first one out of the way. In ten more weeks we quit playing house.\"\n\nI grinned. \"We've never played house. I consider us just as married now as I will in June. It's perfect the way we've done it. We've debugged the system, honey. It can only be smooth sailing from here.\"\n\nI ended up eating those words.\n\n*****\n\nJen got her old agent back, saying she needed his insights. She still had her lawyers from her career, so there were no problems there. In two weeks, she was flying to New York.\n\nI was going to be with her the first three days, then I had to come home and run our business. I was going to fly back for the weekend, then she'd come home the following week. Mom couldn't stay the whole time, but would be with her as much as possible. Aunt Beth was in for the whole time.\n\nIt didn't take me long to figure out I'd never make it in the modeling business. Most of the people she worked with were decent people, but some of the other, more powerful, ones were arrogant asses. I heard a director dressing down one of the bit players in the first commercial for no reason at all. I listened for a while before I snapped. \"Listen, asshole, I think she got it the first five times you said it, once she filtered out all the profanity. Why don't you do us all a favor and quit harassing the poor girl and let us enjoy some peace and quiet.\"\n\nThe set went deadly quiet. It took a moment for the director to regain his powers of speech. \"Who the hell are you? It doesn't matter. Off my set! I mean right fucking now! You're banned from any stage I'm on.\"\n\n\"If you knew how badly that didn't bother me you be even more pissed. I think I like it here. Mind if I pull up a chair beside you and watch a genius at work? I've never been this close to a real God before.\"\n\nOne of the sound men lost it, running off the stage while his screams of laughter floated behind him. The director glared at everyone who dared make eye contact before grabbing a chair, intending to fling it into the set people. I grabbed his hand. \"You need to stop and think about what you're doing. Is this considered professional behavior in your world? Look at those people. I bet half of them would murder you in your sleep and smile while they did it. Now put the chair down and park your ass in it, or I'll be doing the chair tossing, only it will be with you in it.\"\n\n\"Who the fuck are you and how did you get in here? Doesn't matter. I pay top dollar for security and I'm going to make sure you fall down a lot on the way out. Try to get back in and I'll have what's left of you arrested! Somebody call Security!\"\n\nEveryone just looked at him and nobody moved for a while. Finally one of his assistants scurried out of the room. I grinned. \"Looks like we have a little time to kill. I'm going to enjoy fucking you up.\"\n\nI don't know where it would have gone if Jen hadn't walked on to the set just then. She smiled and spoke to a few people she remembered working with before as she walked towards me. Before anyone could say anything she wrapped her arms around me, giving them an eye-full with the kiss she laid on me.\n\nShe pretended to notice the director for the first time. Her voice was definitely cool when she spoke. \"Hi, Bob. I heard they hired you for this shoot. Just so you know, I had a clause put into my contract that if I felt like I couldn't work with anyone on the set, they were gone, and that includes you. I better not hear about one temper tantrum or instances of you being a jerk to anyone. Are we clear?\"\n\nBefore he could calm down enough to speak she grinned. \"Oh, before I forget. This is my husband and I love him very dearly. Any slight or disrespect he's given, if it comes back to me, whoever it was, is gone. We communicating clearly here? Understand, or do I need to use smaller words? Or better yet, I'll let him handle it. He was a soldier, Bob, and he spent a year getting paid to kill people. Just thought you should know.\"\n\nInstead of answering, Bob stormed off the stage, screaming for someone.\n\nShe kissed me again. \"I see you met Bob. He's an asshole, but he's a really good director. It's well known in the industry that we don't like each other, but we're both professionals. If he keeps his mouth shut and does his job, we'll be fine.\"\n\nI had a really bad feeling about the whole situation.\n\n*****\n\nThe perfume, \"Seductive Whisper,\" smelled surprisingly good. \"You better like it,\" Jen whispered. I'm getting an extra two-hundred grand to wear it exclusively for the length of the contract. Wouldn't do to have the spokes-model be caught wearing Chanel, now would it?\"\n\nI watched as she filmed the first, her in a very flattering evening gown as she walked through a room of people. Everyone just stopped and stared, especially the men. She reached the doorway and looked back, winking at the camera. \"Never underestimate the power of a Seductive Whisper,\" she smirked, crooking her finger at the most handsome man in the room. He almost ran to her, and the next shot was of him with his coat off and his shirt open, hair tousled, as Jen ran her hand up his chest and whispered in his ear. He looked like he was about to faint.\n\nIt took eight takes and was filmed with five cameras. The editor spliced it together and we watched it with the producer and owner of the product. They were well pleased. Bob, of course, objected, saying she should be in lingerie. The owner snorted.\n\n\"It's named Seductive Whisper, not Screaming Slut. It's much more powerful this way, hints instead of statements. I like it.\"\n\nThe producer immediately said he'd have it polished for final approval by the next day and could hit television, cable, streaming, and even movie trailers by the next week. Bob stomped out, pissed. Jen just smiled.\n\nI had to get back to the business. It wasn't that I didn't trust our interns, no, that's not quite true. I didn't trust Molly. She was always pushing for more automation and shortcuts to increase volume. I finally had to explain to her that when she owned a business she could call the shots. Jen and I had agreed to let her work through the summer if she behaved, and then replace her.\n\n*****\n\nI was right. Molly had taken advantage and pushed out more chairs than was possible under our business model. I inspected them, and two needed to be taken apart for rework, something terribly irritating after the glue had set. I would probably end up rejecting them, instead of selling them. I'd fix them up and donate them to a hospital somewhere.\n\nMolly blew up when I confronted her, saying it was time to get out of the Stone-age and join the real world. I fired her. She couldn't believe it. \"You'll have a hard time replacing me! I'm damn good at what I do.\"\n\n\"That would probably explain why I'm forced to eat ten thousand dollars' worth of production. I really am sorry, Molly. You'd make a damn fine craftsman if you could discipline yourself. You have to want that, and you don't. You want the quick, easy, so what if the customer gets an inferior product way. Let's just agree to disagree and get on with our lives.\"\n\nShe immediately filed a complaint with the state labor board, claiming sexual harassment and creating a hostile workplace. I called the local office and told them I would show up for the appointment with video of every moment she had spent in my building, including audio, and was going to insist that every second be watched. I also told them I intended to sue Molly for false accusations, creating a hostile workplace for me and the rest of my employees, and damaging my professional reputation.\n\nThen I had my lawyer serve Molly for slander, libel, and as many other charges as my lawyer thought would stick. She called him two days later and offered to rescind the complaint if I would drop the charges. We let her twist in the wind for two weeks before agreeing, if she issued a public apology. It ate at her, but she did it.\n\nI had wired the shop because of attempted break-ins, trying to steal any finished furniture. If anyone tried to enter without the safety code, an alarm would trip in my house as well as at the local Sheriff's Office. They managed to catch two, but not a third one. I figure he would be easy to identify if he went to a hospital. He'd be the guy getting rock salt out of his ass.\n\nWhile all this was going on I didn't get to return to New York. Jen was due back in two days when Beth called. \"You need to get up here. Something has happened and Jen looks scared to death most of the time. She won't let me out of her sight, and your Mom is already on the way.\"",
        "I dropped what I was doing and flew up. I went straight from the airport to the studios. Mom met me at the gate and the security guard acted like he didn't want me inside. Mom got right in his face.\n\n\"If you value your job you'll get out of the way. His wife is Jen Foster, the star of the ads. There seems to be some concern for my future daughter-in-law's well-being. You have a choice, obstruct us and have the cops swarm the place, or get out of the way.\"\n\nHe moved aside. Mom turned back when we were almost out of sight to see him dialing. \"You need to put that phone away, boy. If we find anything wrong and discover you warned someone, believe me when I tell you when Jaime is through with you you'll wish you'd been arrested.\"\n\nMom filled me in as we walked. \"She's in the director's office with him and one of the associate producers. Jen has been pale and shaky for two days and I'm sensing something bad happened but she won't talk to us about it. When we showed up for the meeting they shoved me and Beth out the door and locked it. She's been in there 45 minutes.\"\n\nI had a full head of steam when I walked into his office suite. A receptionist tried to stop me and I ignored her. Then his chief assistant decided it was his personal duty to make sure I didn't get through the door. He was still unconscious an hour later when the cops got there.\n\nI kicked the door open just in time to see her in a corner, holding an office chair. Her blouse was ripped and she'd been crying. Jack was standing there grinning. \"If you don't get out of those clothes right now, I'll make sure your husband sees the tape.\" He was waving a phone at her while the associate producer was grabbing at the chair.\n\nJack turned when the door exploded, just in time to see the fist connect with his jaw. I broke it and when he hit the floor I got a couple of short ribs and nailed him in the crotch. He was on the floor gagging when I turned to the other man.\n\n\"Wait just a minute! If you don't...\"\n\nI took out his kneecap, then gave him a knee to the face as he fell. Just on general principles I kicked him in the balls.\n\nJen screamed and collapsed, out cold. I was hugging her, kissing her face, when the cops got there.\n\nIt was a really good thing Jen was rich, because they tossed my ass in jail. I was charged with trespassing, aggravated assault (three counts, one for each asshole I put down), felony trespass, breaking and entering for kicking the door in, and a few more things I don't really remember. My bail was one-million, which Jen promptly posted.\n\nThe truth came out in the discovery process of the trial. Jen had been dosed with a date rape drug two days before the altercation at a cocktail party for the release of the commercials. They almost raped her, stripping her down to her panties, when Jen had a sudden flash of sobriety and nailed Bob in the balls. He let out a high pitch scream that had people pounding on the door. They managed to get Jen in bed before opening it, saying she'd had too much to drink and they were caring for her. Beth had also been dosed with sleeping pills and was also out. A couple of the women there were models with minor roles in the commercial and clustered around Jen, even though Bob threatened them.\n\nJen recovered but knew something had happened. She had gone to his office to confront him when I arrived on the scene. It had gotten ugly; to the point Jen was holding the chair and screaming for help. How did we know all this? I grabbed Bob's phone before the cops got there. He was using it to film Jen fighting back, taunting her. There was also footage of them in the bedroom stripping off her clothes and talk between the two assholes of what they were going to do with her. There was also footage of two more women who had been drugged and raped.\n\nI gave it to the D.A., warning him I'd made copies and if justice wasn't served the footage would go viral. Even if he got away with it in court, the court of public opinion would sink his career. There was a big debate over whether the footage was legally obtained, but in the end the authorities hadn't taken the phone, I had, and I'd given it to them claiming there was evidence about Jen on it.\n\nIt was said Bob fainted when the cops hauled him in for questioning. They'd already gotten to the producer and he'd rolled instantly, trying to save his ass. Bob tried to get Jen to drop the charges, offering her a million. She laughed. \"His lawyers will end up costing more than that. I consider it money well spent.\"\n\nIt never went to trial; Bob saw the writing on the wall and struck a deal. In exchange for a guilty plea on lesser charges, he got five years at a Camp Cupcake, eligible for parole in thirteen months. He also had to register as a sex-offender, a charge that effectively ended what was left of his career. The two women he had molested earlier were suing him in civil court and it was a pretty good bet he'd be broke by the time he got out.\n\nI didn't plan or sanction it, but I heard he had a pretty interesting incarceration. He got beaten up a few times and found out what it was like to be the victim of an unwilling sexual encounter. It might have had a tennis court, but it was still a prison. \n\nThe producer wasn't so lucky, doing seven months in a regular minimum security prison. I don't know if he had a pleasant stay. I do know he got busted for fighting and had to do another four months.\n\nThe receptionist and assistant withdrew charges when they were told the D.A. was thinking of charging them with aiding and facilitating rape.\n\nThe owner of the perfume and the executive producer were beside themselves with anger, and regret for what Jen had to go through. They promised her the next shoot, unless she wanted out of the contract, would be in another location with a crew she had to approve of before shooting started. She thought about it and decided to finish the contract. Her next shoot was scheduled for Miami for the summer ad and Aspen for the winter one.\n\n*****\n\nI avoided jail time, but it was a close thing. When it went to court the lawyers portrayed me as a man willing to do anything to save his wife from rape, pretty easy to do because that's what happened. I was on probation in the state of New York for a year and they firmly suggested I spend my vacations elsewhere. Not a problem. They had to make an exception for the first probation visit, but managed to transfer it to my home state for the rest.\n\nJen recovered in time for the wedding. I was all for postponing it until she was more settled and she surprised me by how vehement she was in refusing.\n\n\"Not no, but hell no! I need this, honey. I want good memories, not to wake up with nightmares like I did for a while.\"\n\nSo it came to pass that an average man wed a millionaire supermodel in a small country church on a sunny June afternoon. The service was beautiful, even though we had to hire half the cops in our county and surrounding areas to keep the hordes of reporters away. A few of the more slimy ones were arrested, which they couldn't believe, and held in jail until the wedding was history. The rest took the hint and pretty much behaved.\n\nTwo hundred or more cameras clicked like mad when we exited the church. Jen's face was glowing and she was so happy she blew kisses at the reporters. The cops got a laugh out of the fact the reporters would not have another opportunity for pictures because we got into the small helicopter that we'd flown in two days before and hidden, lifting off and away before they could react.\n\nWe expected a few reporters initially because she was still rich and famous, but her attack and subsequent legal action pushed her right back into the limelight. It got so bad we had to fence our property and have security guards for a while. It developed into a game. The guards would tell us where they were hiding and I'd grab the shotguns and clay targets. We'd set the thrower so the targets would be well into the air but directly over their heads before we shot. Jen was really good at it, and she'd die laughing when they would break cover and run, pieces of clay raining down on them. A few tried to press charges, but the Sheriff just shrugged. \"They have a legal right to discharge their firearms on their own property, as long as it's before eleven at night and after daylight in the mornings. Not much I can do about that. You shouldn't be dumb enough to be standing on a skeet range.\"\n\nWe vacationed in a warm climate on a small private island. On the third day I told her it was time to get on with the baby-making and she laughed, rubbing her tummy. \"This isn't fat, baby. I'm ten weeks along.\"\n\n*****\n\nI rolled over, looking at the smooth back of the love of my life. Our thirtieth anniversary was in three weeks. We were going to spend it on the same little island as our honeymoon. Now, though, we owned the island. The original owner did not manage his money well, and when he had to sell it, Jen bought it without telling me. We'd owned it for ten years, and it was the preferred vacation spot for our family. J.J., Jen Junior, had chosen to follow my footsteps and went into furniture design. The only thing that disappointed me with her choice was she preferred to work in plastic and metals. She won awards, so I guess it was all right. She did insist that I make her rocker when she and her husband announced they were pregnant. Her daughter is eight, and Grandma Jen is her favorite babysitter. I think she likes me, too, but it could be the little figures I carve for her.\n\nOur son Eric chose another path and became a lawyer. He married, then divorced two years later. She went for the money, only to discover he had none except for his salary. He was a little leery of women for a while. Then one day Jack showed up. He had stayed in touch over the years, and managed to make one weekend a summer to fish with us. His new wife was a little overwhelmed at first. She caught a nice bass and it was off to the races. Alison had bonded to her really well. She was eleven when they married, a time when a mother's guidance was welcome.\n\nBonnie had never had children but was soon as protective as a mother bear. I pitied the first boy who dared ask Alison out. She'd probably know everything about him going back four generations before he rang the doorbell.\n\nWe were at her maternity shower and she cried hard when we gave her the rocker. Jack wanted to buy it, but we insisted it be a gift. It was going to be a girl. Poor Jack didn't have a chance.\n\nFast forward twenty-six years. Jack came by with his family for our annual fishing expedition. By then our kids were grown, but they participated, both having learned to love the water. We had to have several boats, so we rented a couple of pontoons. The old people ended up together, and the younger ones paired off on the others.\n\nJ.J., her husband and three kids went with Alison and her second husband and their three kids collectively, one from his past marriage. That left Eric and Jack's youngest daughter Melanie. You could hear them arguing over the water a few times and we looked at each other and sighed. Eric was divorced and Mel had broken up with her long-time boyfriend two months before the wedding. He was pissed because he had to sign a prenup specifying he could never touch any inheritances she might receive, and took it out by screwing her best friend. I don't think he meant to get caught, but he did, and she had him out of HER apartment the next day.\n\nWhatever they argued about, they must have resolved it by the time we got back to the landing. Everyone went back to the house to clean fish and prepare for the big dinner we always had, except Eric and Mel. They wanted to go on a sunset cruise. We just smiled and one thing led to another. They married fourteen months later, and they just announced their first pregnancy. Jack came to me later in the evening, wanting me to help him build a rocker. I was more than happy to help. They didn't have a prenup, insisting it was not necessary. Jack told me he never felt more confident in his life when he tore up the papers he'd prepared.\n\nJen made me retire at fifty, though I still occasionally made a rocker or bedroom suite for old friends.\n\nI found myself thinking of her first husband every once in a while. Steve had everything he could ever want and was just too greedy, ambitious, driven? Pick a word. He just couldn't be happy with what he had, and he had it all. I regret his death and feel a bit guilty about my happiness occasionally, but I get over it pretty quickly. Deep down, I'm sure they would have divorced if Jen had found out about the vasectomy. I regret thinking negative thoughts about him, he was always a friend to me, but his priority should have been his wife and her happiness. If he couldn't give it to her, he should have told her and let her go. I don't think he would have ever done that, he was too proud of the perfect wife on his arms at dinners and events. I don't think he ever realized his fantasy wasn't real, that Jen, for all her beauty, was just a woman, a woman who needed love, respect, and attention from her mate. Seems pretty simple, doesn't it?\n\n*****\n\nI had a friend from my childhood whom I had lost touch with over the years. I did invite him to the wedding, surprised as heck when he showed up with a beautiful woman on his arm. After that, he was an infrequent visitor, always stopping by on his way to somewhere.\n\nLenny, to be kind, was not a handsome man. His force of personality made him rise above the pretty people around him so I could kind of understand the relationship. Despite his average looks and quiet dress, Lenny was famous. He wrote his first novel at twenty-nine, his first best seller at thirty-three, and had a string of very successful novels at fifty. Seven had been made into films. We didn't even know he knew how to spell.\n\nI was reminded of him as I looked at Jen's flawless back. We were sitting at a table as the reception was winding down, talking. He always had an odd sense of humor, and he'd been laughing all night. Jen finally asked him what was so funny.\n\n\"You guys. Not in a ha-ha way, though. You're the stuff of myths; proof that unicorns exist.\"\n\nOf course he had to explain it. \"Most people don't know this, but I honed my craft when I was young by writing erotic stories on a couple of free sites. My editor suggested it, saying it would give me a fan base when my novels came out, and I came to enjoy it. I'm compulsive about research, so before I wrote the first word I studied the genres. There's a recurring theme that's laughed at, about a rich supermodel who falls for an average guy who'd had his heart broken by a faithless wife. Other than the faithless wife part, you guys are it. I'd write about it but no one would believe it.\"\n\nJen thought about that for a while, even looked up his old free stuff. That led to a few adventures in the bedroom and some pretty frank discussions. All good ones. One day Melody and the girls came by, laughing as they piled into Jen's SUV for an afternoon out.\n\nThat night I noticed a bandage on her shoulder. She assured me it was just a minor procedure she had done, something so simple she didn't want me to bother about. Three days later she came out of the shower with some medicine in her hand. \"Honey, will you rub this on my shoulder. The man doing the procedure said it would help it heat quicker.\"\n\nLike I was gonna say no. I just froze when she turned her back. The procedure turned out to be a tattoo, something she told me she'd always wanted but didn't get while she was modeling. She said she worked with girl that had tattoos and how much longer they had to stay in the makeup chairs to cover them for a shoot, so she held off.\n\nThe tattoo was of two unicorns, a male and a female, necks entwined while they nuzzled each other. The artist was the best she could find, and the colors were vibrant, the details painstaking. It was beautiful and I told her so, promising to kiss it when it healed more.\n\nA year after J.J. was born the tattoo was modified, showing a little unicorn beside the couple. After Eric, another was added on the other side. The artist asked permission to show them in a magazine article about his work. It was the last time Jen modeled, looking over her shoulder with a smile, her bare back glowing while the tattoos looked like they were ready to trot off her shoulder. It became the cover photo for the issue. The artist was suddenly turning down work from all kinds of famous people because he was swamped. Some wanted the same tattoo but he refused. Part of the agreement of her letting him show the tattoo was that he never did another, and he honored his word.\n\nI kissed the little unicorns, and lingered over the big one. Jen cooed and turned, pulling me into her. Sometimes, just sometimes, fairy tales come true.\n\n*****\n\nThis is my event story. When I set the parameters to the writers who participated, it was to be about a wife who was far richer than their mates. I had a darker story started, but shelved it for later to do this. And like I said, this was about unicorns.\n\nI hope you like it, and I want to thank all those who participated, especially Bebop 3. It would have never gotten off the ground without him. I also want to thank Randi for editing and the rest of my friends for their encouragement and support.\n\nQ"
    ],
    "authorname": "qhml1",
    "tags": [
        "welcome to the new world story",
        "model"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/the-unicorn-3"
}