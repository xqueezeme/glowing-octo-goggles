{
    "title": "My Only Talent Ch. 12",
    "pages": [
        "Chapter 12\n\nThree Girls, Two Parties, One Adventure\n\nNote: The descriptions and accounts in these stories are fictional and do not portray any actual people or events. \n\nI took a long nap after the ESU football victory Saturday, while the girls finished their three way pussy party and had a shorter nap. It was a little humbling to realize how effectively they could get each other off, and how long they could keep at it. I took a shower first, since I just had to get dressed for the party, and they had all sorts of stuff to do. I laid my black leather Master costume out on a chair, figuring I would stay cool until I had to put it on to go outside. Mille came out of the bathroom drying her hair, buck naked, and came over a lot like an enthusiastic puppy and sat on my lap and kissed me. She had a subtle way of ingratiating herself, saying, \"I just wanted to tell you that I love your dick!\" and then hugging me even harder. I guess that was a start. Suzanne and Lara emerged wearing white terrycloth robes.\n\n\"Millie!\" said Suzanne. \"We have some presents for you!\" She took out two boxes and a large cylinder with a ribbon and bow around it. Millie opened the first box to find a pillow that matched the cover of her sleeping rug, and the second box was a little duvet style coverlet that would keep her warm while she was on her sleeping rug. She untied the ribbon around the cylinder to find what looked like a big bearskin rug. I knew it was synthetic and machine washable (which was probably a good idea) but it looked quite real. \"You have your sleeping rug for when you are here, and you will have your training in many locations and you must always have permission to come while you are training. But this bearskin is your 'fuck rug' and there are two special things about it. First, when you are on that rug you are a complete slut and fuck toy. You will do anything to anyone that Master lets touch you when you are on that rug. If Master decides to line up the entire ESU Show Band of the Southwest next to that rug and tells you to suck their cocks and eat their pussies you will get down on your knees without hesitation and start using your slut mouth! Do you understand?\"\n\nEven the newly liberated and thoroughly modern Millie looked shocked at that image, but she gulped and said, \"Yes, Mistress!\" Her Suzie signal boiled and bubbled. We had no plans to turn even one other person loose on her for quite a while, if ever, but we wanted her to wonder about that, and I was going to surreptitiously monitor her Suzie modulation as she contemplated the possibilities. \n\n\"Second, when you are on that rug, you may come without asking for permission! You can totally let yourself go and get in touch with your 'inner slut'! Do you understand?\" Millie's Suzie signal almost sucked the air out of the room. It had a heart beat of its own. She was speechless, and that hot but haughty look returned in spades.\n\n\"Come over here so we can put your costume on and get Master's approval!\" Millie moved over between the girls and they took out what looked like a coiled up metal necklace, and nothing else. \n\nSuzanne continued, \"This costume signifies that you are a fuck toy, but you need permission to let yourself go. Everyone that sees you will know that you are a total slut, but no one will be able to get to you!\" As they put it on her, I could see that it was essentially a very fancy and highly eroticized chastity belt. There were gold rings centered right over her pussy and her rectum. You could see every detail, but the diameter and placement of the rings was such that unless you actually had the mythical pencil dick you would be blocked out. They were held in place by metal and gold links like a thong bikini, and nothing was hidden from view, just blocked from access. There were diamond encrusted gold nipple clips, attached with chains to an ornate collar around her neck, and finally a gold ring that prevented any entry into her mouth incorporated into a gold studded mask that hid her identify from anyone except those who knew her very well. She looked like the sexiest jewelry store display ever created. The girls had expertly applied makeup that made her eyes look big as plates underneath the mask. I was not much into jewelry, but the whole effect made me hot as hell. \n\nLara laughed and said, \"Holy Shit, you look hot in that thing! People will not be able to avoid staring at you!\" Millie looked very pleased with that idea. \"But only Master has the key!\" Lara promptly gave me the key on a ring that went around my neck. I hoped it was warm at the party, because Millie was for all practical purposes going naked. The girls then went back to the bedroom to finish dressing with Millie's help.\n\nI got on Lara's laptop and surfed the web for a while, and checked the new email accounts I had set up. Rodney Driver told me that we would meet some very interesting and wonderful people at the party, but we might also meet some very interesting and not so wonderful people. He recommended that I set up some anonymous but easy to remember 'hotmail' style email accounts for us all to use in making contacts after the party. Oiler told me how to do it myself, because he didn't want to know anything about them, and some ideas about how to set them up. I ended up on a doubly anonymous domain site pair, and after using Oiler's subroutines to look for open names, I creating accounts entitled Master231 for me, Trainee231 for Millie, Redhot231 for Suzanne, and Whitehot231 for Lara, based on our costumes and roles. I did a search for an update of the AG situation and discovered a new non-profit organization devoted to getting AG chapters removed from any college in Texas. It was called 'AG-GTFOOT', pronounced 'ag-foot' for 'Alpha Gammas Get The Fuck Out Of Texas'. The website was devoted to links to all the negative AG related news stories, to offshore sites that still showed the slip and slide videos, a special political section on how bad the polling was looking for James Craig, a tearful appeal from the moms of the two pledges that died during the hazing drinking games, and finally a draft resolution for the State House of Representatives to pass, censuring the AG's and demanding that all of their chapters close at state funded schools. It was another major PR disaster for the AGs.\n\nThe girls emerged from the bedroom totally decked out and they looked hot as ever, the effect of the three of them together being much greater than the sum of their parts. They were going to turn heads like never before. I quickly donned my costume and Lara called a cab. When the driver called to say he was two minutes away, Lara grabbed Millie's leash and said, \"Come one, Wet Spot, it's party time!\" and we headed downstairs. We crammed into the backseat of the cab and I was forced to let at least one girl sit on my lap. I decide I would test the effectiveness of Millie's protective rings on the way. It would be about a twenty five minute ride at this time of night with light traffic. I was paying too much attention to the girls to notice the plain dark blue Ford Crown Victoria that followed us from the alley by Lara's building.\n\nWe took the road towards the lake, then turned left towards City Park, and right again up into the hills, then left at a dead end that led to two opposing cul-de-sacs. There was a gate set up with security guards and our taxi got in line behind several cars waiting to get in. I suddenly noticed the Black Suburban ahead of us, license plate JCK5H-001, and I saw the Ford sedan behind us but did not realize it had been following us. Two people got out of the Suburban, a very tall and voluptuous honey blonde with a very pretty face dressed in mostly black as Cruella Deville from 101 Dalmatians, and a short, ugly, dumpy looking guy dressed as Deputy Barney Fife of Mayberry. They made a jarring and very disparate couple, but they also looked vaguely alike. I inferred that this was Winifred Wylie Coyote Wimmers, of the Real Texans for Truth Super PAC, and her trial lawyer cousin John Wimmers Blakeley, AKA 'The Wylie Fist'. I could easily see her breaking a few hearts, and saying that he had a face for radio was kind. But they were both well costumed, as were their two obvious security types, dressed as J and K from Men in Black and sporting mirrored shades and wired ear pieces. \n\nWhen we got up to the gate, a guard approached the car. I rolled down the back window and stuck out my phone, displaying the QR code that Rodney had sent me. The guard scanned it with a little hand held scanner, which beeped, and he motioned us to another gate, saying, \"You and your guests may go in, but the taxi stops here.\" Rodney had also warned us about several ground rules of the party that could result in instant ejection if not adhered to: no cell phone use or picture taking, they must be turned off, and the place had a seamless jammer system so they wouldn't work anyway; no smoking or drug use of any kind; and no roughhousing or fighting. I conveniently forgot about the 'batman cam' in the hood of my costume. We got out of the car, and I noticed lots of Halloween decorations throughout the yard, and a queue of several dozen people on foot waiting at another gate. The guards were trying to be professional, but all eyes were focused on the girls, who were strutting and posing unabashedly. I could have been carrying two rifles and a bandoleer of grenades and the guards might not have even noticed me. \n\nI suddenly remembered something I had read in a Dallas newspaper article published years ago about a guy in the state capitol who spent all year planning and creating elaborate staging and Disney class animatronics dioramas, throwing big Halloween parties that were open to the public. He was some sort of software millionaire, who was also into elaborate puzzles and games, and his house was filled with hidden messages, secret passages, trick doors and other unusual architecture. People began queuing up for his parties days before Halloween until neighbor complaints led to invitation only parties, such invitations being highly prized, especially among the keep it weird crowd. \n\nI spoke to the girls about it as we left the car, and Suzanne added some details from her store of local knowledge. \"He started out in the early eighties making some kind of software for telephone modems, sold that company for millions, then started another one that did compression and error correcting software for voice and video over packet networks, and sold that one for hundreds of millions. Then he started a gaming company just for his own amusement and it made much more money that the other two combined. He may well be a billionaire by now, but at the least he has enough dough to qualify as eccentric rather than weird. He has built another huge mansion on a hill closer to the lake, too, but he keeps this place just for parties, apparently, and he bought out most of the complaining neighbors up on in his side of the cul-de-sac. I have never been inside, but my friend has and she described it as totally amazing. He is an astronomy buff and is reputed to be 'universal' in his sexual interests, but very guarded and private. He sounds like an interesting host, but sometimes he attends his own parties anonymously, so you never know who is who.\"\n\nWe did not notice the three guys that emerged from the Ford Crown Victoria behind us; all three dressed in fringed deerskin suits and coonskin caps, presumably in character as Daniel Boone, except they were wired with earpieces, too. The guards had held them in the Crown Vic until we got into the little decorated tunnel that led to the house's entry hall, probably to reduce visual exposure of the guests outside their cars. We went through the artificial above ground tunnel that was decorated with several animated zombies and a creature that looked like the one in the old movie Alien, then another guard opened the main door for us, and we stepped into the entry hall. The hall was at least three stories high, and sitting just to the right was a towering metal contraption that looked like a cross between a ladder and a train trestle. It supported a huge optical telescope up at the top, which fit like a glove into an observatory dome on the roof, but did not touch it anywhere. I noticed big springs and dampers on the bottom which presumably provided vibration isolation to keep things sharp during long light gathering exposures. Set in the floor was a set of motors and gears that I supposed turned the telescope to try to counter the motion of the earth while the camera remained fixed on its targeted heavenly body. It certainly made for an impressive entryway. But no one in the entry hall was looking at the telescope right now; they were all staring, mouths agape, at my three hotly dressed companions. Life was good. I was also hit by a raucous volley of Suzie signals, and I was able to read the coverage very quickly. I realized that this party had several times as many people as the UDP shindig, and I was going to have the opportunity to read more Suzie signals at the same time than I ever had before, and that my only talent was still developing. Hopefully, this would count toward my ten thousand hours to become an outlier at reading Suzie signals. I guess I was already some sort of outlier for being able to sense them at all.\n\nOff to the left was a three story tall waterfall, shrouded in fog. On closer inspection, it was a tall cascade of hot water falling on gently sloping walls of native limestone and granite, ending up in a giant hot tub, about the size of a hotel swimming pool. There were tables along some of the walls, and lots of little two seat tables in alcoves up at various heights in the wall with steps leading up to them. The walls were festooned with all manner of plants: several kinds of giant ferns growing out of planters built into the walls, flowering tropical plants in huge containers, and planted fichus and other tropical trees more than twenty feet tall that seemed to thrive in the hothouse environment. The whole thing was on the other side of a three story high glass wall, which was translucent rather than transparent for the bottom five feet or so. About half the people visible appeared to be wearing bathing suits, and half were not. There was a kind of coat check station near the entrance through the glass wall where you could leave all of your clothes and jewelry and the attractive female attendants would lock your stuff up until you returned. Paired with the hot tub was a pool of just about identical size that was apparently cool, since it was not steaming, and party revelers could go back and forth from the hot to the cold water freely, and many did, including one very attractive and very topless young lady whose wonderful nipples responded beautifully to the change in temperature. There was also a swim out that connected the cool indoor pool to a much larger outdoor pool, and guests were moving back and forth through it. The outdoor pool apparently featured two swim up open bars with two bartenders each, and business was brisk. \n\nSuzanne said, \"I don't want to swim, but I want to go out to the outdoor pool to check out something my friend told me about.\" We spotted a glass double door that led from the entry hall to the huge patio surrounding the outdoor pool. There was a south and east facing balcony that allowed a view of downtown and the capital, and the ESU tower was lit bright orange signifying the gridiron victory. There were dozens of tables arrayed about the patio, with lots of folks sitting, drinking, and talking. When the three girls marched towards the railing on the balcony, the volume of conversations went way down and the detectable Suzie signals went way up. Suzanne led the procession to the southernmost part of the railing, where we could see out and over the railing to the southeast side of the house. A huge section of the wall of the pool was exposed glass, like a big window, and you could see all the folks swimming inside as if it were a well lit aquarium. \"It does have a window!\" Suzanne said. \"My friend said when you swim in the pool you could look out the window and see the ESU tower and I bet you can!\" It was pretty impressive.\n\nLara said, \"This is a cool party. Even if we don't solve the puzzle to get to the other one, I could have fun here.\"\n\nI could tell from the look on Suzanne and Millie's faces that they were going to solve the puzzle to get to the other party or die trying. We spent a few more moments taking in the views from the balcony, and then decided to explore the rest of the house. We soon encountered Professor Lillehammer and his wife Dorothy, dressed as Benson and Stabler from Law & Order SVU. We talked for a few minutes, and they gave no indication of knowing about the other, later, party, and so neither did we. As we covered the areas that we had not looked at, I also saw Sarah, dressed as a very photogenic Playboy bunny, with her date dressed as a doddering Hugh Hefner, and she certainly was able to pull that off well. She looked hot as hell, and she was sending zero Suzie signals for her date, but some super Suzie for me as the Master and for the girls. I do not think she recognized me, or at least there was no indication that she did. That made me remember how much I was hoping Ms. Wyrickie, our Rhetoric and Composition TA, broke her tobacco habit and collected her promised sexual rewards from Sarah and me. I would certainly have something to talk to Sarah about before class Monday.\n\nWe then went through a long hallway that was lined with life size portrait photographs, presumably taken by our host, of a tremendous variety of local people. One was a famous football running back with legs like tree trunks, another of a former Governor and US President, and a now deceased local favorite mayoral candidate of the keep it weird set that always wore frilly feminine outfits over his very hairy and usually unwashed legs. Opposite them was big print of a venerable lady and former governor, then Willie Nelson, and Kinky Friedman. It was a striking set of contrasts. The hallway ended in a mezzanine space that overlooked what looked like a large, fancy, Sherlock Holmes style library and study, about three stories down, with bookshelves extending all the way up, but with no visible staircase or doors to enter the room from. \n\nOne wall of the study was completely covered in ornate wood paneling with intricate carved designs, and the other three walls were solid bookshelves. As we watched, an area of the paneled wall opened like elevator doors and a formally dressed couple presumably costumed as Fred Astaire and Ginger Rogers emerged from the opening, which quickly closed behind them, seamlessly disappearing. They obviously did not know how they got there, and they began nervously looking for a way out. Suzanne called down to them, \"Look for books by Arthur Conan Doyle!\" and they looked up at her with funny expressions, but thinking of nothing better to try, began scanning the shelves. The young lady cried out and pulled the top of a volume, and the wall and bookshelf spun 180 degrees, making her seem to disappear before the man's eyes. He rushed over to the same spot, scanned the books approximately where she had put her hand, and grabbed one. The bookshelf spun again and he too disappeared. Suzanne was transfixed, taking this all in. \"We have got to get down there!\" she cried. \n\n\"Well, you have an existence proof, don't you?\" We turned to see a tall and grey haired woman with flashing grey eyes who appeared to be about 60, in granny glasses. Her Suzie was calling out to all four of us, but especially for Millie and to me. \"They got down there, so there has to be a way!\" She was wearing a high collared off white school marm type blouse, a fake pearl necklace, a cheap Halloween costume American Indian headdress that had only two decrepit looking feathers, some cheap and obviously Chinese made Kmart Indian beaded moccasins, and a holster with a big gavel in it. She had three political buttons on: 'Let's Move On', and \"I'm Affirmative on Action\", and \"Yes, We Can!\" ",
        "I was at a loss as to who she was, but Millicent laughed and said \"Senator Elect Elizabeth Warren, I presume?\" The woman laughed. \"High marks on current events, my dear! Even though she has withdrawn from the upcoming election, the true believers soldier on! Racist Republican Discrimination forced her to claim a heritage she did not deserve so she could try to achieve her proper place in academia, and Noble Democrat Liberal Affirmative Action tried but could not win justice, and then they still used that against her!\" She bowed at the waist. \"Man is not a rational animal, man is a rationalizing animal!\" She looked Millie up and down like a bear looks at a swimming salmon, and her Suzie was sending all sorts of things she would like for Millie and I to do to her. \"I need help on placing your character, dear.\"\n\nMillicent drew herself up to her proud but diminutive full height, and said, \"I am a fuck toy, but I need to learn to give myself permission to let myself go and really enjoy it!\" The woman's Suzie signal screamed. She laughed. \"So you are illustrating the universal plight of all women, yearning to be sexually free, yet artificially repressed by male society!\"\n\nThe tall woman then introduced herself by what I assumed was her real name, Penelope Peters Perabo, tenured Professor of Fashion and Political Science at the Elle BJ School. \"But to return to your immediate concern, there must be a way. I hope to see a lot more of y'all later!\" With that she walked away gracefully, swinging her hips very attractively, I thought. \n\nSuzanne laughed, and said, \"Down, boy! I didn't know you were so attracted to older women.\" \n\nI grinned sheepishly. \"I didn't either.\" But my mind replayed her movements as she walked away. \"She was in pretty good shape for being about 60!\"\n\nSuzanne laughed. \"I don't think she was that old. She looks like a once competitive swimmer who has stayed in pretty good shape who is now in her 50's. But let's talk about her later!\" That sounded promising. \n\nSuzanne's dark eyes were flashing like fiery crystals. She was very keen to solve the puzzle. She noticed a little decorative bookshelf inset into the wall of the mezzanine near where we were standing. She scanned the books and found no Arthur Conan Doyle titles displayed. But there was a collection of old text only computer games on the shelf, beginning with Zork, and next to it was 'The Case of the Beheaded Smuggler'. When Suzanne pulled at the top of that title, a door opened in the hallway, revealing a staircase. She moved quickly to hold the door open, and we all followed her down. It was a narrow spiral staircase, and seemed to go down even further than the three stories down that the study had appeared to be. It ended in another hallway, with another one of those intricate wood paneled walls. The three other walls were plain concrete. \n\nWe studied the patterns of the paneling, and saw that there were lots of symbols that at first seemed meaningless to us. Lara noticed that there were ten symbols that were a little bigger than the others, and that they were repeated all over the wall. We assumed they were the integers 0 through 9. Suzanne stood absolutely still for a full two minutes, and then said, \"There are 26 other symbols, so maybe they are the letters of the alphabet!\" That was a breakthrough, but how could we discover which symbols were which? Millie was staring at a portion of the wall that appeared to have only number symbols, and she pointed it out to me, and then we noticed another symbol, just a dot like a period, that we saw only twice on the whole wall. In each case, there was a single number symbol at the upper left of a section of paneling, then the dot, then lots of other number symbols arranged from left to right and then down below. When we followed the symbols down the wall, we notice that there was a gap at the floor, and that the carved wood panels simply continued far down below the floor. We were unsure as to how far they went. \n\nLara was looking at the floor, which was finished oak, and realized that there were also discernible patterns in the grain of the wood on some of the boards. Most were either plain or random. One had five distinct patterns that repeated in the same order, until the floor ended at the wall. Another had a set of six patterns, with two couplets that repeated within it, and the fist pattern repeated as the next to the last, that pointed to another section of the wall. She kept running through things in her head, trying to make sense of it all.\n\nI was thinking about those integer symbols. Were they repeating decimals that went on forever? Is that what the numbers disappearing into the floor were meant to convey? What were the two most recognizable irrational numbers? I would guess pi, so I looked at the symbols and tried to place 3.14159 which was as far as I remembered it, and it seemed to fit. \"Does anybody remember pi out to ten or twelve digits?\"\n\nSuzanne said, \"3.14159 26535 89793 23846.\" Wow. There was even more to this girl than I thought! I had nothing to write that down with, but it fit what I saw. I looked at the other number, and tried to place the symbols. At first glance it began with 2.718. Why did that seem so familiar? \n\n\"What does '2.718' mean to you?\"\n\nSuzanne said again, \"Euler's number, the base of natural logarithms, rounded off.\" \n\n\"Okay. So it looks like the two numbers on the paneling are pi and e, to lots of decimal places.\" \n\nMillie looked at the panels again and tried to fit all this in, ticking off points in her head by holding up fingers. After about two minutes she giggled. \"Suzanne, was it you who was kidding me last night about listening to the oldies station? Do you really want to go the other party?\"\n\n\"Yes, and yes, and if you figure this out I will never kid you about the oldies station again!\"\n\nMillie began humming a tune as she stared at a whole section of the wall, separate from the other two sections representing pi and e that had seven repeating numbers over and over, with no decimal point. I tried to substitute the symbols, and it looked like \"9875436\" repeated over and over. Mille walked over to the wall, held out her hand, and begin to sing, \"That's my numberrrrrrrr. Six Three Four Five Seven Eight Nine. That's my number!\" She touched those numbers on the wall in order, and a section of the wall slid open, revealing a big, tall, deep elevator with pads on the walls, like a freight elevator. \n\nSuzanne cried out for joy, and we all got into the elevator, and the door closed behind us. It was only then that we looked at the control panel. It was marked \"G\" at the top, and we were on the next level down \"B1\" and then there were \"B2\" and \"SB1\" and \"SB2\". I pushed B2 and the car started down. It took a while, and when the door opened, we saw what looked like a parking garage with many empty spaces and a few vehicles, a small shuttle bus, and two other, smaller elevators on the opposite wall right next to where the bus was parked. The door closed and we tried SB1. When the door opened on SB1 we saw what looked like a DC Metro station, except the subway cars were much smaller. One had seats for twelve people; the other was set up for cargo. Obviously they took people and things somewhere. The door closed before we could react, and we tried SB2. It took a long time to get there, and then we saw what looked like a giant warehouse, full of bar-coded shipping containers on racks that went up about two stories with little tracks running between the racks and what looked like more subway cars, and some of them had what looked like big drills on the front of them and 'UTILX' on the side. We went back to SB1, and walked out to look at the subway station more closely. There was a station map indicating that we were at the end of the line at 'LB Station', and there were two other stations. The other stop was 'LB Manor' and at the other end of the line was 'River Port'. \n\nJust as we were about to get into the car and give it a whirl, we saw another passenger car approaching from the direction of LB Manor, with one person inside. At first glance he looked very surprised to see us, but he recovered well, and by the time he opened the car's door and stepped out, he seemed calm and patient. He looked about 60, with a bald head and a little grey hair on the sides, but not much. He had on a very British looking double breasted suit with a blue vest and a red bow tie. He looked like the guy from a crazy old movie that my mother liked called 'My Dinner with Andre'. \"Who showed you how to get down here?\" he asked in a high and rising question voice.\n\nMillie laughed and said, \"Wilson Pickett!\" and began humming the tune she had sung earlier. He suddenly looked very shocked again.\n\nSuzanne said, \"With a little help from Leonhard Euler!\" He stared at her with even more incredulity than he had at Millie. Suzanne put on her best thousand watt smile, which was absolutely dazzling, and asked, \"Which way to the real party?\"\n\nHe sat back down on the seat in the car and laughed again, really hard. He sort of looked like a small laughing Santa Claus. \"Well I certainly have a lot of work to do after this party! I carved all those panels myself, and there have been at least a hundred people staring at that wall for hours without figuring it out.\" He giggled some more, then he stood and turned to Millie. \"Would you mind telling me about your costume? It's very attractive, or course, but I can't quite figure out your character.\"\n\nMillie looked a little embarrassed, but then continued, \"Well, I am not a fictional character. I am a real life fuck toy, but I need to learn to give myself permission to let myself go and really enjoy it! And I'm not sure any one of us individually could have decoded your wall, but some very interesting things happen when the four of us get together!\" She blushed. \n\nHe laughed so hard that he had to sit back down again. Then he looked at me, obviously noting the scratches on my back. \"You, I assume, are the luckiest white boy in town?\" Then he laughed again, \"And ringmaster of this lovely little circus?\" he stuck out his hand. \"My name is Spear Overtop.\"\n\nI shook his hand, and wondered at the meaning of his name, and said, \"You must be Rodney's client and our interesting but sometimes anonymous host?\" He laughed again. \n\n\"Bingo! Welcome to the asylum, my friends. I used to be crazy, but now I am just eccentric. And since you have already seen the trains and the station, I'll be your train conductor to the main house. The other guests are being transferred in a shuttle bus. But I will have to ask for your solemn promise not to tell anyone about how you got down here or that these subbasements and this train system even exist. Will you promise me that?\"\n\nWe all agreed, and then sat down and he started the car moving in the opposite direction, and it went through a little tunnel opening and then began descending on a pretty steep down grade and in an approximately southeastern direction, if I had kept my orientation straight since we arrived. He began the guided tour, \"Our beloved municipal governments would be apoplectic if they knew all these tunnels were down here. They are perfectly safe, of course, but the county has trouble enough approving simple septic systems, much less private subways, so I didn't want to bother them about this.\"\n\nWe took a slight left turn, then went through another tunnel and emerged in a large cavern. It looked almost as expansive as Inner Space Caverns and Natural Bridge Caverns, both of which I had visited as a kid. This one had a river running down the middle of it, and a few sparse lights that highlighted some of the nicer features. As we descended, I noticed medium size pipes running from an outlet in the river, and dropping down about six feet and then going into a little green motor looking unit with metal jacketed cables running alongside the river, and then emptying back out into the river at a lower level. Hydropower? There were dozens of them. We traveled above the river for a while, then took a slight left and entered another tunnel. We passed by another station, labeled LB Manor, and our host said, \"That's the station for my new house, where I spend most of my time when I am in town. We are going to go to the other end of the line, to see my little River Port.\" We entered another tunnel, and then emerged again in the underground river channel, which emptied into a pool about 200 feet across. It looked like the old Hamilton Pool swimming hole, except it was fully enclosed by the cavern and had no ferns or lichens growing on the walls, and would have been totally dark without the artificial lights. Our host pulled a remote control from his pocket, and hit a couple of keys. The lights went out, and it seemed like total and complete darkness for a moment until our eyes adjusted, but then we realized there was light coming through the bottom of the pool from somewhere.\n\n\"Those lights signal another 'swim out'. It comes out in the river a mile or so down, across from the Country Club, but I seldom use it, so as not to call attention to it and this cavern.\" We pulled into the River Port station and took the stairs up and out into a little valley surrounded by limestone ridges. At the bottom of the valley was an inlet of the river, and a big brick boathouse, complete with several slips, two with lifts and cranes to pull boats out of the water for repairs or load cargo, a swimming pool surrounded by a patio, and a giant barbeque pit, outdoor kitchen and dining area that could seat about 100 people for a meal. I realized we were not far from the Phi Iota Gamma party house, which by my reckoning was past the bridge and the country club, a little further down the river towards town. We walked with our host to the north end of the patio, and I saw an above ground tramway that looked sort of like an enclosed ski gondola on tracks, that made its way up a steep grade to what looked like a giant house on top of the hill. From this perspective, the house looked as big as the State Capitol.\n\nHe reversed the car, and we headed back towards LB Manor, his house. Our seats swiveled around, and as we ascended we were treated to an even better view of the caverns on the way. We climbed back up to the next station and got out, and although there was another freight elevator, our host led us up a covered walkway, which gave us an amazing view of the house as we ascended. I realize the house was designed like some of the buildings I had seen at Disney World, in that it fooled the eye into thinking it was bigger and farther away than it actually was. Using the subway car as my reference, the house was probably quite large and actually five or six stories tall, but it looked like it was a twenty story house surrounded by a local limestone version of the Great Wall of China. It was very impressive. I noticed the entire roof slanted gently to the south, and seemed to be covered with what looked almost like slate tiles, except that they also seemed to be covered in glass, with some sort of fine repeating pattern underneath. The girls gave the proper number of oohs and aahs, which our host enjoyed, and then we went inside what looked like the back entrance. There was a giant mud room with its own outside door, some coat and shoe racks, dog crates and a two huge showers with multiple shower heads and hand held nozzles, two sets of big commercial washers and dryers, shelves filled with towels and robes, and a big fireplace set with logs, but not burning. On the opposite side of the hallway was another work room leading to a big south facing greenhouse and conservatory filled with plants and communicating to an outdoor garden, with sections for herbs, vegetables, and flowers, plus a rabbit hutch and a chicken coop. Several goats grazed lazily on the lawn.\n\nThe other way out from the rear entry hall was into a giant kitchen, perhaps not as big as the ones on the cooking competitions on TV, but with two huge Viking stoves, at least five wall mounted ovens, three refrigerators and three freezers, and three sinks and three big dishwashers. There was a giant hanging rack with every kind of pot, pan and cooking utensil I could imagine, and two other big racks with drying peppers and spices. Suzanne and Lara immediately launched into a discussion with our host about the old but perfectly restored gas stoves and certain 10 and 20 year old pots and pans of certain colors that were no longer on the market and considered perfect for certain dishes and therefore collector's items and they went back and forth for about ten minutes about the ones he had and the ones he had missed. They were instantly bonded. Our host then looked a little worried, and said, \"As much as I am enjoying our conversation, and want to continue it, I am afraid the buses with the other guests are about to arrive and I need to complete some preparations. All three girls said, almost simultaneously, \"How can I help?\"\n\nHe gave all of us a task. The girls helped carry fresh flowers in vases from the garden room and placed them artistically in the entry hall and the main hall. Our host double checked the buffet tables that the caterers were laying out in the front living and dining rooms. I took a wicker wine carrier and went through an unlabeled door and down to a huge constant climate wine cellar to find several bottles of two particular wines. I was hardly an expert, being a non drinker, but my father was a collector, and this collection spoke of not just wealth, but wide knowledge, clear preferences, and narrow but deep accumulation. It was very impressive. I found the Arizu and Weinert Malbecs I sought quickly, and noticed dozens of bottles of 1970's LaTour casually tucked away in alphabetical order in the built in racks. I turned to hurry back up the stairs, when I noticed a huge thick wooden door, with very ornate iron hinges and hardware, sealed with a simple key and a very intricate knot, which I assumed would quickly reveal any tampering, as it was extremely complex and individualistic I also noted a rawhide bolo was wrapped tightly around the door handle, as if it had been thrown for capture by an expert gaucho. There was a dark and almost sinister looking stained glass window above the door that portrayed three moons. What was beyond that door? \n\nI made it back upstairs just as three busses pulled up in the circle drive at the front entrance. I had a perfect vantage point from which to observe the other guests get off the buses, aided by the fact that the guards insisted on opening up only one bus at a time, under the covered archway at the front door, ensuring that each person would step out serially and into the light. I hurried the wine carrier back to our host in the kitchen, and then returned to my people watching spot. I wondered what the order of egress signified, if anything. \n\nThe first people off the bus were the J and K security guys, who seemed to be acting like an advance party, looking around nervously. They were met by three very fit looking guys in much more finely tailored dark grey suits, and I presumed they were our host's security contingent. There was some discussion, wherein J and K gestured and yelled, but the other guys simply shook their heads. Winifred Wimmers emerged from the bus, looking even better from this medium distance, and my first thought was, \"please break my heart.\" Suddenly The Wylie Coyote in her late forties and Penelope Peters Perabo in her fifties were looking pretty good to me. What was up with that? Her trial lawyer cousin was next, looking not quite as bright as Barney Fife. He spoke briefly to the security guys and they just held up their hands as if saying, 'what can we do?' and then he walked to the front door.\n\nWith perfect timing, our host appeared at the front door just as Winifred crossed the threshold. There were air kisses and faked laughter and bonhomie in equal measure from both parties. There was just a shrug from our host as the Wylie Fist entered, and no acknowledgement at all to any of the security guys. I waited inside to see who else came through the door. A thin guy in his forties came in, dressed as Lance Armstrong, complete with yellow jersey and multiple wrist bands, but minus the powerful legs. I wondered if his date would be dressed as Cheryl Crow, but he did not have a companion. Our host greeted him as 'Mister Mayor' and I recalled seeing his picture in the Daily Texan. He had been speaking at the Elle BJ School, in his capacity as ex-mayor, on the problems of a growing city. He seemed to show no interest in Winifred, or my three girls. That gave me pause, and in that moment I sensed the disturbing truth: an unmistakable male signaling for male note from Mister Mayor, sending for me. I also remembered a story about a divorce, for irreconcilable differences.",
        "I was glad for the distraction when a really great looking woman with dark hair, dark skin, and flashing brown eyes walked in, and I recognized her as Vaya Perez, one of the hottest looking local TV newscasters who had done a remote report from the front lawn of the AG house recently. She looked even better in person than on camera, and I found myself thinking I could certainly go for her. She was fascinating. She noticed me looking, swept her eyes over my sex suit and smiled at me. I smiled back, and her Suzie signal spoke to me encouragingly. She stepped beside me to move into the house toward the dining room, and glanced over her shoulder at me again, just noticing through the holes in my costume the red streaks on my back and ass from someone's fingernails. She looked at Millie, who blushed bright red, then back at me and smiled even more warmly. \n\nThe next woman off the bus looked exactly like the old school porn star Seka complete with platinum blonde hair like Nora's. I remembered my older cousin was obsessed with Seka, and scanned the internet constantly for information on her and especially 'bit bucket' bootleg downloads of her videos. I think he had them all, and he had shown a lot of them to me last summer before I left for ESU. She was disturbingly hot for reasons I could not explicitly state, and so was this woman dressed as her. The hair did not look like a wig, and she had little makeup on, and a wondrous seat of jugs barely restrained by her low cut dress. She appeared to be about 30 years old. I suddenly wondered if my attraction to Nora had any subliminal component of my memory of cousin Brucie's fascination with Seka's films. I almost did not notice the man with her: a wild and pugnacious looking guy with protruding eyes in a beret with long, curly grey-blonde hair coming out from under it on all sides, and a wild Hawaiian shirt with a clerical collar, holding a microphone. I didn't recognize him, or his character, but he was certainly the most unlikely looking preacher I had ever seen. \n\nWhen I revived myself from my little nostalgia session, I noticed Seka was looking right at me and smiling. Her companion was smiling, too, and looking back and forth from her to me with interest. I tried to read her Suzie signals, but I realized that even though there were only 70 people or so here, far fewer than the first party, there were so many intense signals that I was having trouble resolving them. It was a far cry from my high school days when I could only sense the very strongest signals without really being able to tell what they meant. If the criterion for getting to this party was being clever enough to figure out some puzzle clues, does that mean that all these people also have really intense sexual drives and thus strong Suzie signals? What does that say about me? What exactly did the other folks figure out to get here?\n\nThe next woman to come through was absolutely stunning. She looked like the super hot dark eyed Italian model in the new Fiat commercials, except this woman was about 50, and still hot as hell. She was with a much older man, perhaps in his eighties, with long grey hair in a very expensive looking suit, with a dark blue shirt with starched white cuffs and collar. He had on expensive designer glasses that came apart in the middle with a magnetic clasp, a huge diamond studded watch, and a garish paisley tie that looked weird with the grey pinstripe suit, and I half expected a cape and walking stick. I did not recognize his character, but if I had to I would guess he was one of the old mobsters on the Soprano reruns that my dad liked to watch sometimes. Virtually every one noticed how hot his date was, but he did not seem to mind them looking. I was certainly staring right at her, and when her eyes met mine I sensed an amazing Suzie signal, like a directional beam aimed right at me, cutting through all the interfering signals and noise in the room. It was clear and pure and loud, but somehow inhibited, with a slightly fuzzy tone, and it made me get hard as a rock in about two seconds. Luckily, the silver colored armadillo armor penis shield of my costume hid that fact from notice. \n\nExcept from Suzanne, who knew to look at the semi transparent end of the cock piece and noticed the tell tale flesh color that revealed that it was in intimate contact with a warm and stiff Robbie cock that had grown to fill it completely. She reached between my legs and gently stroked the gold colored testicle protectors, whispering in my ear, \"I thought it was golden oldies night the way you reacted to Penelope and then the platinum blonde that walked in a moment ago. But this woman has hair as dark as mine, so your dick must just be in the mood for some senior citizen loving, eh Master? I've heard of a MILF, but I guess this is a GILF thing, huh?\" \n\nI detected a little crafty Suzie signal from her, and nervously sensed the beginning of a horse trader's negotiation, but tried to stay in a light mood. \"Some women, like you, are just classic hot beauties, so they are 'ILFs' meaning I don't care how old she is' I still want to do her! She laughed, and then put her tongue up against her upper teeth again. Damn but that makes me crazy!\n\nThe next bus unloaded with a set of younger and slightly more inebriated guests, paired off in couples, and only a few in costumes. The men were speaking Italian, Spanish and French, and most of the women English. I leaned over to Suzanne and whispered, \"Why don't you keep your language skills under wraps for a while and see what you can pick up?\" She laughed and spoke in Lara and Millie's ears, too, and they nodded. I realized I did not really know how many languages these girls knew. Everyone on the second bus looked very fit and attractive, and they were certainly in a mood to party.\n\nThe third bus could have been described as the keeping it weird crew. Slightly less attractive, more casually dressed, lots of Patchouli oil perfume, and more than half in almost predictable costumes: Eeyore with Pooh, Jimmy Hendrix escorting Janice Joplin, Mork and Mindy, and John Shaft with Angie Dickinson. There were some other getups that must be costumes but I could not recognize who they were. Millie, always a source of unexpected information, pointed out the Fabulous Furry Freak Brothers and Whiteman, apparently underground comic characters from the sixties. \n\nAs the guest's coats were taken and the empty buses trundled off, our host made an announcement. \"Welcome to my little Halloween Overnight Party and Intimate Gathering and congratulations on 'breaking the code' so to speak!\" He made little quote marks in the air with his hands. \"We will have our costume competition first, and the winners will get a perks that will be to their advantage for the rest of this soir\u00e9e. If you came in costume, it is definitely worth the effort to compete. After that, you may choose among three alternative ways to pass the rest of the night until our 11 AM attendance required brunch on the pool patio down by the river.\" He paused and the anticipation built. He knew how to work a crowd pretty well. \n\n\"First, you may spend the night thinking naughty thoughts and watching classic horror and/or erotic films in our clothing optional Plato's Theatre and Retreat area. Your second choice, if you are cleared by your cardiologist to handle being thoroughly terrified, is to go through a Halloween Haunted House show that is several levels of intensity above what you have ever experienced anywhere else on Earth. Third and finally, if your heart and lungs are sound and if you are truly a brave and adventurous soul, you may play our Exquisitely Personal Multi-Player Role Playing Game, set in the alternative and fantastical world of Planet X where you may have the opportunity to actually do some naughty things if you play the game well enough to have that choice. You may do the Haunted House first and then relax in Plato's, but choosing the EPMPRPG will be a complete commitment for the rest of the night, and it may also change you for the rest of your life, so do not choose it lightly!\"\n\nThere was a buzz of conversation and wild eyed looks all around, and some Muttering Suzies in evidence too, wondering how naughty was naughty and how much choice was involved. I was wondering that too. I looked at my girls and suddenly knew what they would choose, so I would most likely be doing the same. Suzanne and Lara were as keyed up as maniacs on speed already, eyes flashing and legs vibrating. Millie looked excited but somewhat nervous. Our host continued, \"Please follow me into the great hall and take your seats for the costume competition!\" We filed into a nicely appointed room that might hold 300 people if it were full, complete with theatre seats and a curtained and well lit stage, and some steps up to a door to the right of the stage. \n\nPenelope mounted those steps, and announced, \"Contestants please queue up here to enter the competition.\" About a dozen people lined up, with our group bringing up the rear. It went much the same as it had at the UDP party, with more entrants, but nothing really special, and no slip and slide show in tribute to the AGs. But when it was time for us, the last entrant, Penelope made a remark about something really special and then introduced Suzanne.\n\nSuzanne strutted boldly to center stage, complete with following spotlight, slapping her riding crop against her boots. There was an even greater reaction than at UDP, and she did look spectacular in the spotlights. There were exclamations in several languages. I could understand English, Spanish, and German, and I think I recognized Italian, Russian, and French, but could not fully understand their comments, plus at least two languages that I had no clue about. The general theme was obviously to look at her and I understood the sentiment. There was a widespread sparking of Suzie signals, much stronger and more vociferous than before. Then Lara strode out and stood next to her, greeted by another chorus of raucous comments and Suzies. Suzanne used her surprising strong speaking voice, as before saying, \"Ladies and Gentleman, you will now be privileged to witness the initial submission training ritual of a novice servant to The Master!\" I strutted onstage, perhaps more convincingly than I had at UDP, at least I hoped so, thinking that the red marks on my back and ass would show up very well in the spotlights. There was an even stronger outcry and a whole new layer of Suzie signals cranked up, including every manner of desire signals, and both male and female envy. \n\nWhen I spanked both girls one pale guy in the front row shouted out something like, \"chort vaz may!\" and, \"zay bis!\" and tried to jump up on stage, but his buddies stopped him. Things almost got completely out of hand when the girls turned toward the audience, showed their wonderful reddening asses, and smiled haughtily at the crowd and shook them a little. The same guy shouted something unintelligible and almost made it up to the stage again, but his friends prevailed once more. \n\nWhen Millie crawled out on the stage the crowd exploded, with a much stronger reaction that at the UDP party. When she presented her backside to each girl, you could suddenly hear a pin drop, and the first five strokes resounded so loudly that everyone in the little hall heard them clearly. The next five were accompanied by five synchronized whooshing intakes of breath by most members of the audience. The Suzie signals were all over the map, such that even a few weeks ago I could not have resolved them. But now I sensed, outrage, envy, excitement, and an almost universal desire to reach out and see how warm Millie's lovely little butt was. I surprised her by walking to her and reaching around to gently caress her ass while I kissed her. The envy signal was now almost universal from the audience. I dispensed with my additional lashes, even though I knew Millie would enjoy them.\n\nSuzanne took up the narration again, saying, \"Trainee, kneel and perform the ritual!\" All eyes were on Millicent as she slowly knelt before me and took the large silver metal penis shield into her mouth. The audience gasped as she steadily took it almost all the way down. Lara hit the remote control, and the strobe light at the tip of the bejeweled cock cover flashed. The hot white light traveled through Millicent's throat and mouth and again lit up the stage in an eerie pink and red x-ray like glow as the light passed through her blood and cartilage. The crowd involuntarily cried out in several languages and Penelope, who had left her microphone on, was heard to loudly say, \"Oh, baby, get it!\" When the blinking stopped, Millicent released the metal cock piece, turned her face toward the audience, and smiled widely. A huge cheer went up, and Penelope's lusty breathing against her microphone could be heard clearly through the speakers as she walked over to me and kneeled and imitated Millie's performance, if anything taking it deeper and sucking so hard it even created a little pressure on my cock through the metal cover. Even Suzanne and Lara were taken aback by Penelope's fervor. Then Suzanne improvised and began whipping Penelope's ass, and whoever was running the lights decided this would be a good time to turn then down. Penelope's Suzie slapped me in the face, and I realized she would come with one more lash. She was even more into it than Millie. \n\nOur host took up the slack, cleared his throat and said nervously, \"We'll declare the Master and his slaves the winners by acclimation, or prostration, or depressurization, or whatever that was!\"\n\nWhen we left the costume competition, our host reiterated the three choices we had for the rest of the evening, as we passed by them on our way. The 'Plato's Retreat' area looked like a combination of an expensive strip club and a porno theatre, albeit with very expensive furnishings. There were lots of nude statues, but not the cheap plaster or concrete variety; these looked like the real deal. There was nothing by Michelangelo or de Chirico evident, but they looked to be done by some very talented sculptors. There were two big people pit style seating areas, and eight or ten huge leather couches with ottomans and side chairs arranged in groupings around them. Several huge plasma screens had the titles of movies on pause on them, and a smaller screen near each showed the planned lineup of two or three subsequent titles to be shown on each screen. I spotted Friday the 13th, Bride of Chucky, Behind the Green Door, Alice in Wonderland, and Deep Throat; and I could already hear Kevin debating the choices in his affected film critic voice. A group of the older guests began choosing seats and settling in to spend the evening there, and some super hot looking topless waitresses began taking their drink orders.\n\nWe passed by the entrance to the haunted house, and another group of people lined up to enter. This seemed to include most of the rest of the older guests, the vast majority of the keep it weird set, and the more inebriated of the fit and rowdy crowd. From their comments, several had been here before and were interested in the changes and improvements since last year's version. We passed on through a portico that had another stained glass window depicting those three moons, and I wondered again at their significance.\n\nAn apparently small subset of the party goers that had chosen the Game and they were an interesting collection. A few of the keep it weird set, a few of the older guests, but a lot of the fit and rowdy crowd from the second bus, specifically those that had stayed sober, perhaps in anticipation of playing this game. Suzanne was literally quivering with excitement, eyes sparkling and movements highly animated. I knew she was highly competitive on the soccer field, and that she loved parties and was very erotically inclined, especially lately, and the combination of all three with rewards for puzzle solving really got her fired up. Our host began to explain that we stood in a rotunda just inside what her called the 'game space' that was filled with challenge rooms where the game was actually played. He directed us to queue up to the two tables where two women waited with laptop computers and what looked like a pile of IPods on the desks they sat behind. \n\nI saw the people at the front of the line being issued the little IPods, which upon closer examination looked like a combination smart phone, heart rate monitor, and gaming joystick. As the line move forward, our host continued, \"The wrist units serve as your primary input and output device for the game. Before the game play actually begins, you will be given a series of puzzles to solve, scenarios to analyze and trivia questions to answer. Your answers and the time it took you to answer will be stored in the game database, and as you enter a challenge room and choose what challenges to attempt, whether or not you win or lose the challenge will depends primarily on how well your answers compared with your opponents, much like a calculated result in a war game. But there will be some randomness in the outcomes, too. There will also be impromptu questions to be answered on the fly while playing, which may also determine challenge results. The challenges may range from simply taking the opponent's weapons or clothes, to suffering humiliations, or performing sexual acts, or possibly losing all your garments, to finally becoming a slave to your opponent for the remainder of the game, unless the opponent chooses to free you or you can find a way to free yourself. You may also suffer a defeat so crushing that your character dies and you will spend the rest of the game time as a spectator. I should say that although this game is 'exquisitely personal' and highly eroticized, actual sexual penetration is forbidden by the rules. The acts within the game are limited to kissing, caressing, and what we used to call heavy petting. Twenty years ago they might have called it a soft swing party.\"\n\nHe paused a moment for this to sink in. Suzanne quivered against me, and he continued, \"When they game begins, you will be randomly assigned a set of skills, assets, and weapons to begin the game. There is also a risk and return weighting to the results. If you enter a challenge room as a naked, free person with no gold, weapons or skills, and challenge a master warrior to direct combat, you are highly likely to lose, and you may either become a slave or be killed and sit out the rest of the game back here in the rotunda. If you are an experienced warrior and you challenge a master warrior, you may lose the challenge but are not likely to be killed or enslaved. In fact, you may gain experience and become a stronger warrior. In each challenge room, you may gain gold, weapons, skills and insight into the other players that will aid you in the next room. And different players may have different goals. Some want to conquer all the other warriors and own all the slaves, directing them to perform for them. Some want to take a given weapon or slave away from another player. And some hope to become enslaved by another player, and fervently wish to be forced to perform for them. So you have to take into account your opponent's skills, how good their stored answers are likely to be, and what their real desires and goals are. \"\n\nHe then cleared his throat, and waited for us to quiet down again, then said, \"Two other special rules are in effect for tonight's game. As I mentioned, the winners of the costume competition will be allowed to compete in their costumes, and will also be issued a little better than the average set of skills and assets. Also, for purposes of the game, the exceedingly lovely red and white clad female slaves of the contest winning Master are defined as Free Companions meaning they cannot play as a team with Master, but must play the game on their own. If he encounters them during game play, he may enslave them, or, ironically, be enslaved to them.\" Both Lara and Suzanne looked surprised, and then two crafty little Suzies fired up and began to sing, loud and proud. This game may be creating two monsters for me. Our host finished by saying, \"The already unclothed trainee slave, however, is considered bonded to the Master and will start the game with him, but he might lose her to another player within the game. Good luck to you all!\"",
        "Everyone had by now been issued their wrist units, but Millie motioned to our host and whispered something in his ear. He considered it for a moment, and then said, \"While you are still a trainee enslaved to him, you are considered one person so that restriction does not apply. If you lost that bond by being won by another player, then all the normal restrictions would apply to you for the rest of the game. I suppose that might make for some interesting collaboration with your Master, eh?\" He smiled and Millie jumped up and down, her Suzie crowing with excitement and sexual anticipation. \n\nOur wrist units beeped and indicated which challenge room we should report to for the first challenge round of the game. The first few rounds were a warm up and a blur. Sometimes we had to pick our challenges and strategies before the door opened, when our opponents and their strengths and weaknesses were unknown. Sometimes we got a few seconds after the door opened to decide. It was like a combination of dodge ball, a quiz show, and a first person shooter game. \n\nIn the first room all of the challenges were essentially draws, and Millie and I moved on the next room unchanged. There an overly aggressive woman in a black suit and hood had pre-programmed three pre-mediated attacks, all of which failed, and suddenly she was my slave. She decided to go for broke with one more attack, and lost that too, and so she was now my completely naked slave. When she took off her mask and clothes, I realize that it was Seka. There was no sign of her wild eyed companion, and we had a few minutes left before the next challenge would start, so I decided to have some fun with her. \"Dance for me slave!\" She looked at me with hooded eyes and looked totally shocked by the outcome, but did not move. \"A slave girl that cannot please a master is of no use at all! You will dance like a wicked temptress or I will kill you myself!\" She looked even more shocked but then began to slowly sway and move. \n\nI gestured to Millie. \"Trainee, instruct her quickly or I will have to put her out of her misery!\" Millie stood behind Seka and put her hands on her waist and encouraged her to make exaggerated belly dancer like excursions of her hips. She seemed to relax and began to move fluidly by the time we had to move to the next challenge room. A group of three warriors attacked us next, their chosen challenge being to win the least senior slave of their opponent. Although they did not prevail, if they had they would have gotten Seka, but I would have kept Millie. Apparently their challenge was the least risky way to get a slave. In the subsequent rooms I lost some of my gold, gained a shield, and encountered a new challenge. The Fiat MILF chose to attempt a 'seduce your opponent\" challenge against me rather than combat, and almost won it, which would have greatly weakened my ability to fight off other challenges that attempted to take Millie or Seka. But instead she become my slave and lost all her clothes. I made her hold her breasts up for Millie and I to kiss, and her Suzie told me she was glad she lost the challenge. It must have been several hours, although it only seemed like minutes, when we arrived at the entrance to the last challenge room. At the end of the game, some players might go for broke, and mount risky but high payoff attacks if they felt they had nothing to lose. I spent all my remaining gold on strengthening my shield and buying additional skill points for Millie. \n\nSeka and the Fiat MILF were both naked. Millie was still in her chastity belt suit and I had retained my Master garb. As we entered the final room first I had both women kneel with Millie on either side of me. The wrist units beeped and the challenges popped up. I answered the questions as quickly as I could, as did Millie and the other women. Since the other two were also enslaved to me in the game, their answers counted for our team, sort of like a best ball golf tournament. Soon the units beeped again to indicate that all of our answers had been entered, and the door opened and our challengers walked in. It was the Mork and Mindy pair, although they had lost all their clothes in the game. Mindy was attractive, Mork was not, but naked he was sort of funny looking. The first test was to take one slave and we won it, but they had no slaves for us to take, and no clothes left either, so based on the rules, they were now my slaves also, and all the other challenges were moot. I exercised my option to grant them their freedom, which accomplished two things. First, the game was over for them. Second, I bid them to leave the room, leaving me with Millie, Seka, and Fiat MILF all to myself. I liked that idea. I tuned into all three of their Suzie signals. Millie was sparking already, and Seka and Fiat MILF were starting to feel the excitement they craved from an adventure like this. The rules of the game prevented me from any actual penetration or oral sex with those two, but as Millie had told me, as my bonded slave, she was fair game, and having these two as an audience was tailor made for bringing Millie to a boil. \n\n\"Slaves, on your knees!\" I shouted. All three women knelt. How wonderful that was. Millie gave me that fine hot and haughty look, which inspired me greatly, and the other two looked at me curiously. \n\nI touched Millie's face lovingly, saying, \"This slave is only a trainee. But she shows some promise even through it is early in her training.\" Mille gave me another hot look, as apparently the prospect of performing with an audience was really pushing some of her buttons. I had been so caught up in the game that I had been almost completely ignoring the Suzie signals, so I opened up my receiver and adjusted my controls. I tuned into Millie with a now almost comfortable familiarity, and confirmed my hunch: she was sending massive excitement plus some apprehension, but there was some female crowing too, effectively saying to the other two women I am going to get something you can't have and she liked that a lot. Serendipitously, Millie had kneeled right in front of me with the other two girls on the left and right, facing me. I continued, \"Since you are not in training, you may only observe, but watch closely and you may learn something.\"\n\nMillie looked up at me with big eyes and a now truly smoking version of her hot and haughty look: she was ready to go. I smiled at her, and sent her a little Suzie blast of how beautiful I thought she was and how much I was looking forward to our little show. She echoed a feeling of acceptance in addition to her excitement. I took the key from around my neck and unlocked her facemask to free her mouth, but left the locks below her waist in place. \"You may remove my armor!\" I said in commend voice, and she smiled up at me, keeping eye contact. The other two women watched expectantly from their vantage points only about eighteen inches away. She kept her eyes glued to mine, and slowly and deliberately unsnapped the 'silver armadillo' from my leather briefs and then slowly and gently pulled the metal 'cock piece' toward her, revealing my cock from the base a little bit at a time, like pulling the wrapper off of a popsicle. I had thought of this scenario with the two spectators as a way to excite Millie, but the prospect of two strange women close by must have had an effect on me, too, because I seemed a lot bigger than a Popsicle, and a little bigger than I remembered. Suzanne had previously told me that my improved cardiovascular conditioning and leg development was giving me better blood pressure control and what she called vascular pumping and that as a result my erection was getting bigger and harder. I thought at the time that she was just building up my ego, but now I thought it really did look a little bigger. Millie smiled widely, put the silver metal piece down on the floor behind me, and then unsnapped the two gold testicle covers and placed them with it. Her gentle touch on my balls caused my cock to point up at an even steeper angle. I stole a glance at our audience and they were staring right at my cock: Seka with a sly little smile, and Fiat MILF with her mouth agape.\n\n\"You may suck my cock, slave!\" I was looking right at Seka when I said it, and her eyes got really big, and her lips parted a bit. I heard both women draw in loud breaths, as did Millie.\n\nMillie didn't miss a trick. \"Thank you Master!\" she said cheerily. She stuck out her tongue and gently touched my cock all over with it, leaving a trail of cooling saliva on its surface and making me even harder. Damn that felt good. Then she began a program of earnest, full tongue licking that transported me much closer to heaven. Her Suzie said she was really enjoying herself, and I caught her stealing glances at the other two women that were tinged with smug self satisfaction. She was getting better and better at pleasing me. There was no need to monitor her Suzie, so I tuned into Fiat MILF to see what I could learn. I was able to study her face while I monitored her Suzie signals, and found it doubly revealing. Fiat MILF was sending growing excitement, which corresponded with breathing more through her mouth and less through her nose, and it made her look even hotter. She was moving her head slightly in mimicry of Millie's motions, and her Suzie was sending images of her taking my cock in her mouth, too. It was sweet Suzie music to my ears. \n\nMillie had steadily advanced her technique to taking me about halfway down her throat, and then giving me some inspired tongue stimulation on the way out. She was truly a natural. Her breath was whistling through her nose due to both exertion and excitement, but she was following my no hands rule perfectly. She stopped her motion for a moment, nuzzled my cock aside with her nose, and took one of my balls in her mouth, sucking it gently. It felt amazing. The other one felt even better when she did it. Then she resumed taking me further and further until my cock completely disappeared in her mouth and her chin touched my balls. Seka's previously mild Suzie signal peaked and completely overcame the one from Fiat MILF: she had never seen anything like that in person, and it she found it strangely exciting. \n\nMillie was in her comfort zone. She clasped her hands effortlessly behind her as if they were bound, and exhibited fantastic balance and body control, gently moving forward, sucking me all the way in, moving slightly backward and then letting me back out. Having an audience was having the same effect on me as it did at the restaurant when Lara was under the table, and I was getting ready to shoot sooner rather than later. I must have dribbled a little something to tip Millie off, so to speak, and she began to groan a little, talking with her mouth full. Both Seka and Fiat MILF drew in very audible breaths, and leaned a little closer. \n\nMillie increased her pace, and began saying, \"Uh-Huh, Um-Hum, and Ooooh,\" with her mouth full of me and between whistling breaths through her nose, and I knew she was ready, willing, and able to swallow everything I could give her. It gave me my own wonderful little feeling of affection and acceptance, and I knew the tide as about to go out. I leaned my head back and began to rock forward and back lightly on my legs. Millie began making a noise like, \"Ummm, Ummm,\" with each breath and suddenly I shot like rocket. She timed her motions perfectly, taking two shots and then quickly swallowing, being fully ready for the next shot. Natural talent is natural talent. When I heard the gulping noise of her first swallow, I also sensed two pounding Suzie pulses from our audience. This was something that they may have done, but I doubt they did it as well as Millie, and I was certain they didn't enjoy it as much as Millie did. But it did set them tingling with wild excitement, and sent their Suzies to frantic new heights. With her next swallow, Millie's throat muscles did a little dance that was clearly visible to our two enraptured spectators, and it resonated in their Suzie signals. They watched in fascination as Millie swallowed four more times, and then she smacked her lips, ran her tongue over her lips, and swallowed again, a largely ceremonial gesture, then said, \"Thank You, Master!\" I could definitely fall in love with this woman. \n\nBoth of the other women stared at her with their mouths open. They were breathing just as hard as she was. I reached down and cupped both sides of Millie's face in my hands, and lifted her up to kiss her. I kissed her with a fervor and relish that made it clear to her and to her audience that she was clearly one of the most wonderful women in the world, and her Suzie pounded contentment and excitement simultaneously. I kissed her for at least two minutes, and then said, \"You have served me well!\" She quivered like a happy puppy. I was still breathing hard. I took the key from my neck again, and unlocked the portions of her belt around her waist and removed it. She was now completely naked, and obviously dripping wet. Both of our audience members drew in strong breaths through their noses, and they could not miss the strong and wonderful aroma of Millie's furry little air freshener. \n\nI grabbed Millie by the waist and turned her upside down, throwing her legs over my shoulders and kissing the insides of her thighs. Both of the other women made a noise of surprise as I spun her around. I looked right at Seka and said, \"This trainee has a pretty and promising pussy!\" I gently licked it and Millie squirmed happily, reached her hands onto my buttocks, and began anew to suck my cock from a wonderful upside down angle. I focused my gaze on Fiat MILF, and said, \"Slaves in training may not come without permission!\" Her eyes got big as I dove back into devour Millie's pussy, noisily slurping, licking and kissing it with great relish. Soon upside down Millie had me hard as rock again, and desperate to be inside her. \n\nSomehow I remembered something from a film that my roommate Kevin, the film major, had insisted on showing me. He insisted that it was an unheralded masterpiece, but I thought it was too long and didn't have enough sex scenes for a porno, and besides I liked 2001 better. But it did have one very arresting scene that had stayed in my memory, unreferenced until just now. I looked down at Seka, saying, \"You, slave, get down on all fours with your head facing to my left!\" She complied without conscious thought. She might make a good trainee too. I looked at Fiat MILF. \"Slave, you get on all fours right next to her, but facing the other direction!\" She did it too, also without hesitation. Following the lead of the scene in the film, I placed Millie across their backs, so that they supported her like a low table. Her ass was on Seka's back, and her shoulders on Fiat MILF's back, such that Seka turned and looked over her left shoulder and stared right at Millie's right knee. Fiat MILF looked over her right shoulder from a little farther away and looked right at Millie's left leg. Since all three women were now naked, there was considerable skin contact and stimulation going on. There would soon be more. \n\nI took one of Millie's ankles in each hand and spread her legs up and out in a beautiful 'V' that pointed right to my target. My erection was now back at a maximum, as both of our female 'table legs' looked back and stared at it. Millie's Suzie signal was in full bloom, as she realized she was going to get a good hard fucking and our two companions would only get a 'feel' for what she was receiving. In the film, I believe it was a disgraced husband that was forced to provide support for his wife while another man penetrated her, but this way seemed like a lot more fun to me. Millie looked up at me and I smiled my best you are wonderful smile and then positioned myself just outside her glistening pussy. I kept eye contact with her and slowly slipped into her, reveling in her warmth and tightness, and delighting in the little sighing noise she made. Her eyes dilated and she smiled a smug smile and then I quickly thrust myself all the way into her, and she made a little growling sound deep in her throat. I started slow and deep, and plugged into her Suzie. I was soon in my zone and on autopilot, keeping a steady but deep rhythm of thrusts and pumping her Suzie swing to move it up toward orgasm. I then noticed the two women supporting her were anticipating my motions and pushing her up with their backs and legs to meet my strokes, getting me a little deeper into Millie's now bubbling cauldron of sex. Millie felt it too and giggled. \n\nI kept her just on the edge of an orgasm, her Suzie giving me a clear guide, and just when I thought she could no longer stand it, I said, \"You may come, slave!\" and Millie quivered and shook almost epileptically, and came hard, squirting juice freely. Amazingly, Seka came at the same command, her Suzie singing astonishment and exaltation at the same time. I kept pounding and Millie soon came again, but Seka was just drifting in and out of a dream state, and did not actively have another orgasm. Fiat MILF was absolutely astounded by Seka's climax, her Suzie sending that shrill and raspy note of covetousness that I was beginning to recognize and catalog. I suppose Seka's almost pelvis to pelvis proximity had transmitted much of the force of my thrusts into Millie to her, and in her highly excited state it was enough to make her come.\n\nBut I had other business to attend to if I was to complete my little play. I picked Millie up and spun her around, so that her ass was now right on top of that of the Fiat MILF, and moved even closer to her, hooking my arms under her knees and spreading her legs wider and higher. My thighs would now touch Fiat MILF's left side and leg when I thrust fully into Millie's ass which was my plan. \"Slave, prepare your ass for your Master!\" Both Fiat MILF and Seka's Suzies signaled astonishment. They were not accustomed to anal intercourse, were not expecting it, and were not comfortable with it. But I sensed two Suzie fuzz boxes cranked up to 11 as they wondered what Millie would feel and do. Millie signaled rabid excitement and anticipation, and she lost no time letting her supporters know it. \"Oh, Yes Master. Please! My ass is yours to use as you please!\" That's my girl. \n\nI entered her slowly and deliberately, making sure that Fiat MILF could not mistake the feeling of my thrusts and could not fail to visualize where they were going. Millie began breathing in through her nose and out through her mouth, making a lovely little keening sound. I soon reached cruising depth and began to increase my pace of thrusting into Millie. Since I already knew that Millie could come spectacularly through anal stimulation, I tuned instead into the Fiat MILF's Suzie signal, wondering if I could bring her off by timing my thrusts into Millie to bump into Fiat MILF and pump her swing towards a climax. It was a challenge, and I concentrated hard on the Fiat MILF, exploiting the physical connection as my thighs bumped into hers. The idea of anal sex may have slightly offended her sensibilities, but it made her pussy get wet, and her Suzie signal reflected that, pinging with each thrust I made into Millie's marvelous backside. I was able to lock into her, bringing her modulated carrier into my pass band and visualize the images of what she wanted right now: my cock, Millie's nipples, and a clear view of my cock plowing into Millie's ass. She turned her neck all the way to her right to adapt to Millie's new position atop her, and I pulled up Millie's knee a little higher so Fiat MILF got a clear view of my cock disappearing into Millie's pulsing pink rosebud. \n\nI had a good view of her face as she watched, and soon felt her arching her back to push Millie up to meet my thrusts. Her disgust was gone, replaced by fascination, curiosity, and finally participation. Her Suzie signals resolved themselves even further in my mind, and suddenly her black box, that I thought of as her sexual flight data recorder was open for my inspection. It revealed that she had been sexually becalmed for that last few years, confused and confounded by her own feelings. She did have a long term relationship with the crazy preacher guy, but he was a beard. When they married years ago, they were gay friends that lived together, each pursuing homosexual relationships with other people, but needing a straight cover as they advanced in their careers. That had worked fine until she reached thirty, when the ringing of her biological clock somehow triggered a burning desire for men that she had never felt before, even in her teenage years of so called normal dating, despite the fact that she had no intentions of having a child. She now had relationships with both men and women, but never really found fulfillment with either. Her Suzie carrier was suddenly modulated with a vision of her in Millie's role, dominated, owned, but excited and fulfilled. She let herself imagine what it would be like to be Millie, and then what it would be like to have her ass penetrated like that. Although some of her former girlfriends had liked to kiss her ass, she had never really been that into it. ",
        "Millie's Suzie urgently signaled a desperate desire for an orgasm, clinging to the edge of control. Her keening increased in tone and intensity, and Fiat MILF was suddenly on the edge herself, with the combination of my thrusts and her pushing Millie up into them resonating in her pussy. It was time, and I hissed, \"Slave, you may come!\" Millie clinched and cried out, and her Suzie sent wild ecstasy. Fiat MILF had a slow but building orgasm, reinforced when Millie shook against her. I changed my position to put even more force on Fiat MILF and continued my thrusts into Millie. Soon they both came again, beautifully. I was almost ready to come now. I withdrew from Millie, stood up, and commanded, \"Get on your knees, slave!\" All three women scrambled to comply. Life was very good. Millie was the quickest and she positioned herself right in front of me with the other two flanking her. Six eyes were glued to my cock, and I really did feel like the luckiest boy of any color in any town. I gathered up Millie's hair in my hand like a handle and used it to put her mouth on my dick, and she began to suck me in earnest. Both of the other women stared slack jawed at her efforts. \"Touch her breasts as she pleases me!\" Both hesitantly cupped them, and then became a little bolder. Millie's breath was whistling through her nostrils once again. \"Twist her nipples!\" Both women complied, and Millie made a funny noise, her Suzie sparking. I was almost ready to pop. Then I felt a different hand on each of my buttocks, caressing and squeezing them, and urging me towards Millie's mouth. Then each woman kissed one of my thighs and I could wait no longer. Bingo. \n\nMillie's hot mouth engulfed my cock and sucked me all the way down her throat, applying such suction that my cock felt like it was in a wet Chinese finger trap puzzle. But I was not trying to pull out, oh no. Suddenly I had that wonderful sensation of Millie sucking that last little strand of spaghetti all the way from the bottom of my balls out through the end of my dick and all the way down her gullet. It was a transcendent dental feeling, so to speak. And in that one magic instant of lovingly draining that last drop from my balls, Millicent Wet Spot Hathaway ascended to a high place in my all time girlfriend hall of fame in one fell swoop, because she shuddered and had another orgasm from swallowing me, shivering and dribbling fragrantly from her beautifully furry little snatch. The look on the other two women's faces was priceless. The look on my face must have been pretty amazing, too.\n\nMillie shivered, \"I love you Master. I will do anything for you!\" I pulled her up for another kissing session, and Fiat MILF and Seka kissed us both deeply, too. The wrist unit told me we only had a few minutes left in the game. \n\nI held all three women close to me and spoke first to Seka, trying to connect to her Suzie again to monitor her reaction to what I was going to say. \"You have great beauty and potential to please any Master well. But right now you are not even pleasing yourself. It has been written that some women can only find freedom in slavery, and can only satisfy themselves by devotion to pleasing another. You may be one of those women, as is my beautiful trainee.\" Seka's signal screamed and shuddered, perhaps the Suzie version of reaction formation, afraid that I was right. Her eyes filled with tears as I gave her another hug. \"I am not the one to help you, but you should try to find someone who can.\"\n\nI turned to the Fiat MILF, having read her Suzie pretty well. \"You are holding too much guilt, guilt that I suspect you do not deserve. I have some experience in helping a woman get beyond that, and if you want to talk about it, perhaps I can help you.\" She smiled a smile not unlike the expression on the face of the Mona Lisa. I asked if she wanted an email address to contact me, and she smiled again and said, \"I already got it from Penelope.\" Now I was the one with reaction formation. \n\nWe cleaned up a little, and the girls helped Millie get her costume back on, and Mille put my cock piece and testicle protectors back on for me. We then emerged from the guest room into the rotunda that adjoined all the challenge rooms. It was outside all the other rooms but still in the game space and thus the players were still in the game state and costume of their final challenge result. Millie and I had our regular costumes on, but Fiat MILF and Seka were completely naked and very self conscious. But their nipples were perked up and their Suzies sang of soaring excitement with a complete lack of satisfaction. I had placed them here to show off my game prowess to Lara and Suzanne when they came out of the game rooms, and I was actively wondering what their game status would be when they emerged. I had been vaguely uncomfortable when the rules were announced and our host ruled that they were considered Free Companions for purposes of the game and must play on their own, and I was then thankful for the soft swing rules that prevailed. Was ever so enlightened Master Robbie actually jealous?\n\nLara came out through one of the challenge room doors almost immediately, with three buck naked slaves on leash, two males and one female, and a huge grin on her face. She was walking tall and proud and absolutely beaming a look of hotness and triumph, and her Suzie was blaring like an air raid siren, in a Suzie version of I am woman hear me roar. I nervously wondered what adventures she had in the game space. She steered her party over to us, and introduced Paulo, a ridiculously fit looking blonde but dark skinned Brazilian beach boy type, and his ultra hot wife Astrid, also an obvious natural blonde, and Pavel, a pale and compact man of average height who spoke perfect English but with a maddeningly charming Russian accent and who looked like one of the Spetnatz Russian commando guys from a James Bond film. All three of them looked at me like I had just emerged from a flying saucer -- a very intense inspection with rabid and totally undisguised curiosity. At first I felt like maybe my zipper was down, but that was not possible in this outfit. I was then just uncertain and uncomfortable. \n\nSuzanne came out a few moments later, one upping us both by sporting two female and two male naked slaves on leashes, also blasting a billion dollar smile and strutting like a conquering Queen, her Suzie dopplering up and approaching me like a police siren. WTF goes on in this game? She introduced two very attractive married couples in their thirties, Elvis and Priscilla, real names undisclosed, and Tammy and George Wynette, insisting that those were their real names. They too looked at me like I was some sort of laboratory curiously, examining me carefully from all angles. All five of the other 'game slaves' seemed to know very well who Seka and Fiat MILF were, clearly having the advantage of me on that score, and were strangely deferential towards them both.\n\nA bell sounded and our host's voice emerged from speakers in the ceiling, reminding us that we had 60 minutes to shower and clean up, and that he expected everyone to be spot on time for brunch on the River Port patio. Lara used their slave collars to pull all three of her game slaves close to her one at a time for some pretty sloppy kisses, and all three said, \"Thank you Mistress!\" with wide smiles. Pavel looked her soulfully in the eyes (that son of a bitch) and said, \"Are you sure you won't reconsider my offer?\"\n\nLara smiled brightly, and said, \"You know who to contact\", glanced at me, and then smiled at him again. The three of them and then headed for the showers as Lara stood by me but playfully swatted them on the butt, all three giving her and me another set of lingering glances as they left. \n\nSuzanne had all four of her slaves kneel and kiss her boots, and then pulled each of them up by the collar one at a time for deep kisses. One of the two women paused and whispered in her ear. She laughed and said, \"You know how to contact us.\" What was that all about? Then they too headed for the showers. \n\nJust outside the rotunda there was a seating area for those who had not played the game, and just outside the door was a very strange looking group, composed of three guys in coonskin caps and fringed deerskin suits, the two J and K security guys in their mirrored glasses, and four other guys in plain dark suits, and a state trooper. They all looked fidgety and very nervous. Positioned strategically between them and the door to the game area were our hosts three much better dressed and much calmer security guys, presumably making sure that the other security types did not get into the game area. \n\nI gathered up my three girls and put my hands protectively along their backs, and pulled Lara and Suzanne in for a kiss, then steered them all toward the guest suite that our host had advised me to use for our cleanup. Both of the other girls noticed that Millie was absolutely radiating heat and happiness. \"Dish you bitch! Why do you look so fucking happy?\"\n\nMillie smiled demurely. \"Well, you remember that the rules say no actual sex, penetration or fluids, that 'soft swing' thing?\"\n\nSuzanne laughed, \"Yes, we know. We both had to turn down some very attractive offers!\" She and Lara both arched their eyebrows at me and poked me in the ribs with an elbow.\n\nMillie laughed and smiled. \"And that you two were considered \"Free Companions' and must play the game separately from Master?\"\n\n\"Yes, yes.\" They muttered. \n\nMillie looked like a female standup comic about to drop her punch line. \"Well, the corollary of that is that I am considered a slave still in training, thus bonded to the Master only, and thus our host concluded that those 'soft swing' prohibitions don't apply to me, so,\" she paused for effect, and then fired, \"In the final game room, we won so early that we had an extra hour of time, so Master fucked my brains out while those two women watched from inches away as part of their slave duties in the game!\" \n\nAll three girls squealed like Baylor cheerleaders with a few beers in them. Then Suzanne drew herself up and smiled at me. \"Well. I guess I won't feel so bad about stretching the rules a little bit either!\" What the hell was she talking about? By this time we had arrived at the suite and I opened the door with the clue to the code that our host had given me. The first thing we saw was a huge shower that essentially duplicated the two in the mud room at the southern entry to the house, complete with towels and robes laid out for us all and three big vanity mirrors and three sinks with chairs in front of them. Luckily I would not need one of them. There was no significant conversation as we playfully sprayed each other with those big hand held sprayers and made lather rinse repeat into an adventure. The girls gave me a little extra attention in washing the now almost healed red fingernail slashes on my back and ass. I was looking forward to finding out what they learned from listening with their hidden language skills, and also finding out exactly they had been doing for the last few hours. But as they all dressed and primped, Millie regaled them, literally, with a blow by blow description of what she and I had done. They screamed in delight, but both Lara and Suzanne approached me separately to say they were feeling neglected and would need some urgent attention soon. We all finished dressing just in time, and headed for the tram that would take us down to the river patio. \n\nWe were not first in line by any means, and had to wait for several tram cars to go down and return. We were getting some looks and being pointed out by some people to others, and then Penelope joined the line right behind us. Fittingly, her first comment concerned my behind. \"I hope you have a chance to heal fully before I get a hold of you, 'Master'. She put a slightly derisive accent on the term, and I sensed a little bit of crafty Suzie trying to get over on me. \n\nI realized that I needed to plug into her Suzie, hoping to access her carrier and sexual flight data recorder for some additional helpful information on how to proceed. I smiled and said, \"I was hoping to encounter you in one of the challenge rooms, Penelope!\" I took her in my arms and kissed her sweetly, putting my hands on her upper back and pressing her breasts into my bare chest. It felt good, and I connected solidly to her Suzie as I did so. My earlier 'readings' were confirmed, and her Suzie was singing attraction for Millie and for me. But her Suzie signal did not ring true with her challenging tone towards me, in fact, it was beginning to sound like Lara's, and her flight data recorder told a similar tale: a series of challenges to men (and women) that she hoped would jump up and dominate her, but it never happened. Maybe she played tennis? I had a few fantasies while we waited in line. \n\nOnce a car opened up, we then took the tramway down to the River Port for brunch. It was a fantastic day, cool but sunny, with an almost cloudless deep blue sky and low humidity. I was ravenously hungry, thanks to my exertions with Millie. We joined the buffet line, and although I tried to pump them for more information, Lara and Suzanne were just deflecting my questions and smiling their individual versions of my shit eating grin. We could see up ahead of us that there were stations with chefs that made custom omelets on the fly as you passed by, and another that made waffles or pancakes, plus a huge buffet of fruit, pastries, cereals, and big carafes of orange, grapefruit, and tomato juice, and still another with an order your own custom pasta dish station. Millie was so hungry that she was jumping up and down to see how fast the line was moving, and she made some caustic remarks about her cruel Master forcing her to eat a liquid diet, and the girls giggled again. \n\nWhen we finally got to the front of the line, I was able to get my absolute favorite omelet: grilled chorizo with pecans, sweet onions, Habanero peppers and peaches with side orders of pineapple and sliced tomatoes. As we left the end of the line, our wrist units vibrated, and the screen flashed green, and a voice said, \"Table six.\"' A light on the umbrella over the table flashed a green figure six, and the screen of the wrist units showed a map of the layout of the patio with table six blinking. I suppose our host liked things squared away. When we approached the table, Seka, her wild preacher husband, and the Fiat MILF and her mobster looking husband were already seated, and there were three chairs left for us, and I was amazed to find there was a little round pad to the right of one chair, so I put Millie on a stay right next to me and sat down in that chair She curled up and gave me a glacial look, and it was clear that she was not going to surrender her plate without a snarling fight. I gave her my silverware and napkin and signaled a waiter for another. She was somewhat mollified. Suzanne and Lara sat across the table from us, and we were flanked by our former game slaves. Other parties were being directed to other tables around us, and the available seats were filling up fast. The food was wonderful, but the other folks at our table had a head start, and began asking us questions before we finished our food. \n\nFiat MILF began, \"So, Master, now that the game is over, may I call you Robbie?\"\n\nI laughed. \"It has always been my policy that a woman as beautiful as are you can call me anything she wants.\"\n\nMobster man laughed, in a gruff but not at all mean way. \"Be careful my friend. She is gentle but ruthless about getting what she wants!\"\n\nI laughed too. \"I should probably know your name, too.\"\n\nShe giggled. \"What have you been calling me in the absence of a name?\" \n\nSuzanne spoke up and said, \"Fiat MILF\" and both she and mobster boyfriend looked confused, not understanding. Suzanne continued in rapid fire Italian, and their eyes got wide first at her easy facility with the language and then with the concept of a MILF translated into Italian. They both laughed when they understood and the Fiat MILF smiled and flirted with me. \n\n\"My name is Erminia Epifano Gallo, and this is my beloved husband Sapiento Tosto Gallo. But I am hoping you will soon call me your 'trainee' like Millie.\"\n\nMy eyes must have gotten big, and Sapiento spoke first. \"Do not be alarmed, my friend. I am old and infirm, but hopefully still wise. My wife is much younger than I, and I would rather keep her happy and in my sight than out in the world without me searching for happiness that I would be ignorant of. You have spoken to her with great insight about her pain of the heart; I think you say in English. I hope you can help her find some pleasure and peace. I cannot be happy unless she is, too!\"\n\nBefore I could reply, Suzanne spoke again and the three of them went back and forth so fast it sounded like the terms and conditions from an Italian radio commercial. Then Millie surprised us all by asking a question in what sounded to me like fluent and fluid Italian, too. How much was I missing about these girls? Another rapid fire discussion ensued, but it did not seem contentious, in fact everyone was smiling widely. \n\nFinally Sapiento spoke again, smiling, \"You are truly fortunate to have the respect of three such wise and beautiful women. I will await your reply to my email after you have consulted with them.\"\n\nI was at a loss for what to say, so I said nothing. Seka introduced us to her de jure husband Brujo Lagoria, who was a financial and business advisor to Sapiento, and said that her name was Gatti. We spent the rest of the meal making small talk and laughing pleasantly. Our host came out and thanked us all for coming, and did a little reverse reception line so he could speak to everyone on their way out. \n\nWe were all tired but happy as we waited at the circular drive at the front of the Manor for Rodney to pick us up. There were several vehicles in front of Rodney, so we had a few more minutes to wait. Suzanne was looking at me sideways, and holding her tongue up against her upper teeth. She must know by now how that little gesture made me extra horny. She reached over and kissed me on the neck, then whispered in my ear, \"You, young man, owe Lara and me some extra special attention this afternoon, with Millie industriously helping you to get us off.\" She stuck her tongue in my ear. \"And then you are going to come home with me to make sure I get home safely. I will feed you some leftovers, and then we are going to have a serious talk, well out of earshot of Lara, about some fantasies, wants and needs and things that we need to work out.\" It was the old 'we need to talk' scenario, and it made me very nervous. I tied to yuck it up to break my tension. I took Suzanne's face in my hands and opened her mouth gently, examining her teeth carefully. \n\n\"What are you doing?\" she asked.\n\n\"Well, my grandfather taught me that when you horse trade, the first thing you do is check the teeth!\" I was glad I still had my armadillo penis armor on when she reached for my crotch. \n\nRodney arrived just in time, and I was still nervous as we rode back toward Lara's building. The party had been a big success, and I had really enjoyed myself. But I was still worried about Lara and Suzanne's new friends and maybe I should be worried about some of my new friends, too. My inner horn dog was also thinking about how nice it would feel to just pound away at sweet Peggy's glorious behind for a while and forget all my other problems. I had some fantasies of Penelope starring as Mrs. Robinson, Sarah as a Playboy bunny, and Candy the tan and pink water skier, in lots of different combinations. I knew that next week would start the cycle of new material in all my courses and another set of exams either just before and just after the Thanksgiving break. I hoped my dedication to school during the week would continue to allow me to dedicate myself to my dating duties on the weekends. ",
        "But this afternoon I would have to make sure that Lara and Suzanne each had several nice orgasms, and they probably expected me to come in both of them, too, and have Millie clean them out. It was my duty. For now, life was good in Texas."
    ],
    "authorname": "conanthe",
    "tags": [
        "party",
        "tram",
        "adult game",
        "threesome",
        "anal",
        "fellatio",
        "oral",
        "trial lawyer",
        "voyeurism",
        "bdsm"
    ],
    "category": "Mind Control",
    "url": "https://www.literotica.com/s/my-only-talent-ch-12"
}