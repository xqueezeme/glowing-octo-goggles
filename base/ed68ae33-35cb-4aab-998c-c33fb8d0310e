{
    "title": "The Tides Of War Pt. 14",
    "pages": [
        "Chapter 53 \n\nA year later the news came through; the war was over. \n\nThree nights later a huge party was organised at the Crater for all the men who had fought for East Africa. Australians, Ghurkhas, Matabele, Home Guard, and Hunters, along with their wives and parents, mixed with each other in celebration of the end to hostilities. \n\nOver the next month the Australians and the Ghurkhas returned back to their homes. The Crater seemed somewhat deserted with their going. The Reserve had been fenced and the gate Check Posts built. The command centre was built near a major watering hole, barracks and a home for Sultar and Yasmin along with an office had been erected and provision for their livestock made. Slowly the Maasi moved back with some passing through the reserve to cross back across the river. \n\nSultar was kept busy correlating a census of the animals in the reserve, from reports garnered from the Rangers, as the Ghurkhas were now called. Martin and Jill were frequent visitors to the reserve, attending to animals that the Rangers found injured. A small medical aid unit was built for the purpose of looking after them. \n\nThe Crater settled down to a peacetime environment, the cattle herd stabilised at over four hundred and fifty with a hundred dairy cattle which were sold to farmers and the town for their milk and butter. The horse and mule herds had grown to over three hundred and there was a steady market for them. Patar kept back his breeding stock from being sold to maintain the bloodline. \n\nGuy, who was now sixteen, spent every hour he could when not at school working with Martin and Jill, whilst Victoria spent her time with her mother working in the hospital. Martin and Jill's eldest daughter, Barbara spent her free time with Patar learning about horses. She was an accomplished rider on her mare Tara, which was a daughter of Susan's Tana. The twins David and Susan spent time playing with N'debi's children at the village. \n\nAt one of the dinners with Martin, Jill, Sultar, and Yasmin present, Susan brought up the subject of the children. \n\n'Their growing up fast now, and really we must start thinking of sending them to school in England. Guy, Barbara, and Yasmin, Yasmin and Sultar's eldest daughter, are old enough to think of university. The rest of the children are close behind them.\" \n\n\"Well, regarding education they are all bright enough to get in,\" Martin replied. \n\nAfter a long discussion it was agreed reluctantly, that Susan, Jill and Yasmin would take the children to England to sort out their education. The decision did not go down well with the children but a month later, David, Martin and Sultar waved goodbye as the steamer pulled away from the dock in Mombasa. \n\nIt was over four months before the women returned. In the train back to Nairobi, Susan disclosed that the three eldest had been accepted into Oxford, and the rest of the children enrolled at a private school five miles outside the city. \n\n\"The eldest have promised to visit the younger ones when they can; in case they get home sick.\" \n\n'Well, we have seen to our children, but what about the education of the others at the Crater?\" David asked. \n\n\"The problem is that none of the schools in Nairobi will sanction mixed races,\" Martin said. \n\n\"We discussed that on the boat back,\" Jill said, \"And decided that we should open a private school for those of ability, irrespective of the colour of skin.\" \n\n\"That won't go down well in some quarters.\" David murmured. \n\n\"For god's sake David,\" Jill said angrily, \"We've just gone through a world war where blacks and browns fought alongside of us.\" \n\n\"Hey, I know; I was there remember. But you may have more success if you make it a coloured school,\" David replied. \n\nThey continued to discuss the ramifications of the school, right up to reaching the crater, with no decision yet made. As it happened, events overtook them that put the school to the back of their minds. It began with an unexpected visit of Robert Keeling. \n\nAt a dinner thrown in his honour, where Martin, Jill, Sultar, Yasmin, and Stanley attended, Robert broached the subject of his visit. \n\n\"What you all did in the defence of East Africa against superior numbers was little short of miraculous. Unfortunately due to the aftermath of the war and the horrendous losses in men, the Army is a dirty word in the minds of the general public. I put all of you forward for decorations, but this was not considered a major battle by those in Whitehall; not enough dead involved with it,\" Robert said bitterly. \"I'm thinking of resigning my commission, and decided to come out here personally to thank you all for what you did on behalf of his Majesty.\" \n\nA stunned silence fell around the table and then David spoke, \"I can't speak for the rest of us, but I didn't fight for his Majesty or the British Government. I fought for my family and home... I didn't fight for gongs.\" \n\n\"Here, here,\" echoed around the table from Martin, Sultar and Stanley. \n\nSusan reached over and took Robert's hand in hers. \n\n\"Robert, don't resign your commission. The Army needs men like you; men of compassion and honour. In the years ahead a new Army will be formed and it will need officers who care for the welfare of its men.\" \n\nThe men around the table nodded encouragingly. \n\nRobert smiled sadly, \"Strangely enough the Prince said the very same thing in London before I left.\" \n\nYasmin looked up and spoke, \"You saw my father?\" \n\nRobert looked at her perplexed, \"Yes, over two months ago. He was on business to see the Colonial Office about Kana, and dropped into my office to invite me to dinner at his hotel.\" \n\n\"Did he mention what they wanted?\" David asked. \n\n\"Oh, it wasn't anything alarming... only for the supply of horses to the army. He said he would be going up to Oxford to see the children at a later date. He had been to Birmingham to see Henry Cartwright regarding an order he had made with him. He seemed in the best of health and hoped to see you all here soon, he said. But I thought you all knew he was in England?\" \n\nYasmin shook her head, \"I've not heard from him in months. I wonder how he knew the children were at Oxford?\" \n\nRobert frowned, \"Well, he sent them there, and Prince Izarb is in his first year, and Princess Isasar in her second year of modern history.\" \n\n\"Oh, you mean my brother and sister!\" Yasmin exclaimed. \n\n\"Robert,\" Susan interjected, \"Our children started at Oxford over four months ago.\" \n\n\"I see were the confusion came from,\" Robert replied with a smile, \"I wonder if they'll run in to each other.\" \n\n\"I wrote to father just before we left to let him know what we were doing. But he may have been already in England,\" Yasmin replied. \n\nThe mystery was resolved two days later by the post office in Nairobi. Martin had called to collect their post from the Craters post box inside the post office. A clerk came over to ask him if he knew of a Mrs and Mr Sultar. \n\n\"We've had these two letters for over two months now addressed to them in Nairobi, but no one knows who they are,\" the clerk exclaimed. \n\nMartin examined the envelopes noticing the Aster Hotel logo on the reverse side of it, and quickly explained who they were addressed to. Back at the crater he handed the letters over to Yasmin. \n\n\"Father's such an idiot. Normally his secretary addresses his mail, but this is his own handwriting. He must not know the correct address.\" \n\nShe sat down to read them, suddenly jumping up, \"It's the seventh today isn't it Martin?\" \n\nMartin nodded mystified, \"He's arriving in Mombasa in ten days' time,\" Yasmin explained. \n\nSusan, Jill and Yasmin began rushing around sorting out furniture and fittings for Sultar and Yasmin's old home at the crater. Most of their old belongings had been moved to their new home on the Reserve. David, Martin and Sultar stood well back, letting the girls get on with it, but despite their protests, Susan soon roped them into painting rooms and moving furniture. \n\nThey all travelled down to Mombasa to greet the ship as it docked. Peshawar and Hangar took care of the Prince's luggage, whilst the girls crowded around the Prince. Peshawar stood back at a reasonable distance during the greeting with Hangar who had accompanied them. Not until they were all inside of the compartment of the train did they relax and began to question the Prince. David had noticed that the Prince had more grey hairs in his hair and beard, but his eyes were as bright as ever and he still retained his lean body. \n\nYasmin explained about the mix up with the letters, and told him the correct address, which he duly wrote down in his notebook. David sat back as Yasmin and Susan bombarded him with questions of Kana, then it was Sultar's turn to ask about the fort. \n\nThe Prince in turn asked Martin and Jill about their success with breeding cattle, and what were their findings on the different breeds. At some stage David dozed off. \n\nNot until much later out on the stoop of his home did he have time to speak to the Prince. \n\nThey sat in the cane chairs smoking cheroots with a glass of David's malt in their hands. \n\nHe had, at the Prince's insistence told him of events that had affected the Crater. When he had finished, the Prince looked hard at him. \n\n\"Still fighting battles I see David. But looking out on your land I can see why you fought so hard.\" \n\n\"I learnt from a good teacher on how to defend a land,\" David murmured. \n\nThe Prince smiled drawing on his cheroot, \"You have come a long way from that ex-lieutenant who arrived at my Palace in our hour of greatest need. I saw in you a man of honour, intelligence, determination, and courage... facets that not many men have. I will always think of you as a son, and can only hope Izarb lives up to your example.\" \n\n\"I heard you went to Oxford to visit your children; our children started there this year.\" \n\nThe Prince chuckled, \"Yes I know, I took them all for a meal. Guy told me of the others in boarding school, and so we took them all out for the day. Guy is very much like you, whilst Victoria takes after Susan. They were a little overawed at being with me at first but they soon settled down.\" \n\nDavid smiled, \"I think Guy wants to be a vet; he loves animals, whilst Victoria seems to be interested in medicine, but I'm not sure what she wants to do.\" \n\n\"University has a way of shaping you for the future,\" The Prince replied. \n\nWhen Yasmin and Sultar arrived for dinner, the Prince excused himself. When he returned he was carrying three gun cases. \n\n\"I had reason to travel to Birmingham to see Henry Cartwright concerning ammunition for the Fort,\" he explained. \"In the course of conversation he mentioned that you had ordered hunting rifles David. It seems the Cartwright .303 is not suitable for all game out here in Africa. I mentioned that my son-in-law was now chief game warden of a huge nature reserve, and asked what rifles he should need. Henry said the ones you had ordered were suitable, so I ordered the same for Sultar.\" He said handing the cases to Sultar. \n\nSultar's eyes gleamed when he saw the contents of the cases, and tried the rifles to his shoulders. \n\n\"They're magnificent,\" he murmured at the hand built rifles. \"I've always admired David's, but of course he's left-handed. I really don't know how to thank you Sir,\" he murmured humbly. \n\nThe Prince smiled, \"Nonsense my boy, can you imagine what my daughter would say if you were injured by not having the right weapon,\" he said off hand. \n\nOver the following weeks the Prince accompanied by David and Sultar rode out to explore the game reserve, camping out at night under the stars. Susan and Yasmin were with them when they would return as the sun set to the camp. Ali was there to do the cooking whilst Hanga and Peshawar to serve the food and ensure the tented accommodation was suitable for their Royal visitor. \n\nAfter the meal, the Prince would sit around the fire with the others, with a cheroot, and glass of malt in his hand talking about home or the hunt that they had that day. The day before they returned to the crater, N'debi had found a mature male lion in the prime of condition. He showed David, Sultar and the Prince along with the four Rangers where it was hiding in the long grass of the veldt. \n\nThey were down wind of it as they crept silently towards it. The Prince had Sultar's .375 at his shoulder, with David just behind with his .375 as backup if needed. They were no more than a hundred yards from it when it suddenly rose to its feet, as the men froze. It was a magnificent looking animal with a full mane around its neck. The lion lifted its head sniffing the breeze as the Prince brought the rifle to his shoulder sighting along it. \n\nSeconds passed as they waited for the Prince to fire. Then he suddenly raised the barrel of the rifle to the air and pulled the trigger. The lion was startled, then swishing its tail, trotted off into the grass. The Prince turned and smiled handing the rifle back to Sultar. \"I'm ready for a drink... let's go back to camp,\" was all he said leaving every one mystified at his action except for N'debi and David who both wore enigmatic smiles on their faces. \n\nAfter the meal that night everyone except David and the Prince had retired, and they were finishing off their cheroots. The Prince was staring into the embers of the fire when he murmured, \"You are wondering why I didn't fire David?\" \n\nDavid shook his head, \"Not really; you knew you could have easily killed it if you had wanted to, and knowing that, you didn't.\" \n\nThe Prince turned slowly to look at David, and smiled. \n\nThe Prince left two days later. That night David sat with Susan out on the stoop in the cane settee; his arm around her shoulder. Both were looking up at the night sky ablaze with stars, a shooting star suddenly flashed across the night sky. \n\n\"You should make a wish darling,\" she murmured. \n\nHe smiled. \"What for, I have everything a man could possibly want,\" he replied bending his head to kiss her. They lifted their heads as a leopard snarled out beyond the entrance, and the manic laugh of a hyena was dimly heard in the distance. \n\n\"Do you have any second thoughts about being here David?\" Susan whispered. \n\nHe hesitated for a second before replying. \"I've killed a lot of men since being here. Probably more than I did in Kana. I can't say whether they deserved to die, only that they proved a threat to my family and home.\" \n\n\"So you regard Khana Crater now as your home darling?\" \n\nDavid chuckled, \"Yes, but what about you? Do miss London and the bright lights?\" \n\nSusan looked up at the night sky, ablaze with stars. \"London doesn't have lights like these. No, not at all.\" \n\nA soft breeze caressed her face, as she turned to look down the Crater. She could see vague shapes of the cattle and horses out in the pasture with the darker shape of the surrounding cliffs. \n\n\"We have worked and fought for this land; we carved a home from this wilderness,\" she thought. She looked over at David, who sat with his head back looking at the night sky, suddenly realising that they all had become one with this land. \n\n\"We are the Ramages' of Africa now,\" she thought as a whimsical smile crossed her face. \n\nThe End \n\nI should like to take this opportunity to thank the readers for their patience and tolerance over the many mistakes I made in producing this story. I should also like to thank Gary for his knowledge and expertise on India and firearms. David who has been a rock in his support and encouragement. To both of you my heartfelt thanks. \n\nRobinLane"
    ],
    "authorname": "RobinLane",
    "tags": [
        "action",
        "strategy"
    ],
    "category": "Novels and Novellas",
    "url": "https://www.literotica.com/s/the-tides-of-war-pt-14"
}