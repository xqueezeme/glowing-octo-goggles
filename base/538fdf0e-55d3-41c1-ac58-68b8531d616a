{
    "title": "Sophia Pt. 04",
    "pages": [
        "Author's Notes:\n\nSorry it took so long to get Part IV submitted; you're probably getting sick of me saying that. Thanks for all the positive comments for Part III. \n\nTo the anonymous person that submitted the exact same \"Horrible\" comment eight different times for Part III. There are different methods used for scoring on this website. One of those is by the sheer number of comments; it doesn't matter if they are good or bad. So by submitting the exact same comment eight times you inflated the story's score, so to speak. I did not feel that this was fair to other authors, so I deleted seven of them. \n\nSpecial thanks to my new and first ever editor Yellow Peril, he did a whole lot of work on this story, with repairs and some positive additions to the story. (Yes, I did just copy that part from Part II and III, but it is still true so why mess with perfection.)\n\nThanks for Reading\n\nCastleStone\n\nDisclaimer: None of this is real and actually right now, you are dreaming this story. So, if it really sucks just wake up. (Copied that too.)\n\n............................................\n\nWhen Don mentioned people grabbing his ass, I saw red. Strangers were taking liberties with my Don! When I went clubbing, not so much nowadays and I could easily give it up for Don, occasionally some jerk would grab my ass, but I always made it a point to cause a scene which swiftly either brought a bouncer to my side or even the cops a couple of times. Guys really didn't have that option, and with the way Don's ass looked last night I could understand why it was so \"grabbable\", but dammit, it was MY ass to grab! \n\nMegan and Robin finally got up about an hour after I did. Don and I sent them in to see Kathy with a large mirror and I stood by the door with Don's camera. Kathy didn't have the energy to shriek, but she could still moan. That's what the undead are supposed to do, isn't it, ha ha?\n\nEarly that afternoon I took my family shopping. Don definitely needed some new clothes, and I wanted to get my girls some robes and slippers. When it came to Don's clothes he allowed me free rein to pick the styles and colors, but he whined a little too much about the prices until I gave him my \"your pushing it\" look. When it came time to pay, I had to give him the look again and I even had to mention Roscoe before he would put his wallet away. I had a wonderful day shopping; someday soon I'm going to have to get him that Mustang. Maybe a convertible, we would look so good in it.\n\n............................................\n\nI had an interesting weekend. Saturday night sucked, but it was still an interesting weekend. Maria went a little crazy and bought me a ton of clothes; I think it was because of the jewelry I got her for Christmas. She even bought me two pair of shoes, and they were four hundred dollars each! I didn't know loafers were back in style. When we got back from shopping I got a call from Kathy during which she profusely apologized for being such a terrible date the last time we went out and asked for another chance next Saturday night. She promised she wouldn't drink any alcohol if I would only give her another chance, so I agreed to try it again \u2013 a fresh start and I could certainly use all the practice I could get going out with beautiful women.\n\nOn Monday I met with my therapist again and this time she wanted to talk with me about my father. \"Don, you told me how all through your father's long sickness you were constantly by his side, starting when you were ten. He gave you advice and instructions on how to care for and protect your childhood family as well as your own family when you eventually got married. You even took notes at the time, which you have shown me. I know you loved your father dearly, but being with him for all those months must have been very traumatic for you. Also, when people are sick and are aware that they are running out of time, they tend to speak a lot more forcefully when trying to communicate words of wisdom and advice. Ten year old children are very impressionable, especially in a situation like that. Don, you are a very good person and a superior care giver.\" How come I could sense a \"but\" coming. \"But, your behavior, which your father ingrained in you under extreme circumstances, encourages people to take you for granted and take advantage of you. That they take advantage of you is not your fault, it is theirs. But, it is also just a sad part of human nature that most people will behave that way regardless of whose fault it is.\" Wow, that was a double \"But\"! \"I am not telling you to immediately change your behavior, because that would be something not only difficult to do, it might even be dangerous to your mental health for you to do so too soon. What I do want you to do, however, is to try to be aware of your behavior around others, and just take note of how others react to your own actions. If you have any very close friends you might want to talk with them about this, and perhaps they could try to alert you to the actions you take that encourage others to take you for granted.\"\n\nShe didn't really tell me anything that I hadn't already suspected, but I liked being a nice guy, so if the rest of the world didn't understand, well screw'em! We spent the rest of the session discussing my behavior and why people tended to take advantage of me.\n\nWhile dancing with Maria on Wednesday night, I decide to broach the subject that my therapist had mentioned. Megan and Robin had already gone back upstairs, and we were dancing again to \"Moon River.\" Maria seemed to like that tune as much as I did.\n\n\"Maria?\"\n\n\"Yes, Don?\"\n\n\"Last Monday I was talking with my therapist and she mentioned that I had an unfortunate behavior pattern that encouraged people to take advantage of me. She suggested that I might want to discuss this problem with some very close friends. I know we have only known each other a short time, but do you think that we qualify as close enough friends?\"\n\nMaria's arms tightened about me and she pulled me in close; her arms seemed to be trembling a little. \"Don, for my part, I know that I consider you to be my very, very, very close and dear friend. If you want to share anything with me, I would be overjoyed to listen.\"\n\nThat seemed to be a yes, so I told her everything that my therapist and I had talked about.\n\n\"Don, what you've told me concerning your father's death certainly explains a lot of your behavior. As for alerting you to things that you do, which encourages long time associates to take advantage of you, Don, that is going to be difficult, but I'll try my best. Not only I, but all of our friends, too, have been aware of this facet of your personality since shortly after we met you. We've tried to resist taking advantage of your generosity, yet we catch ourselves still doing it! It just seems to be something pervasive in your behavior, a sort of kindness and a quiet competency along with the knowledge that you will always get the job done, no matter what. The only solution we have been able to find to our taking advantage of your kindness has been for us to attempt to treat you as kindly and generously as you treat us.\"\n\nFor the rest of that dance lesson we didn't so much dance as hold each other really close and shuffle across the floor. Maria had the CD player set up to repeat 'our song'. We finally stopped when Robin called us upstairs to watch movies; we were both a little embarrassed. Maria really is a good friend.\n\nOn Thursday I was able to get in a sparring session with my tenant, Phil. My schedule had been so busy lately that our sparring sessions had decreased from three times a week to once per week most of the time. I had to be very careful with my strength to not hit or grip him too hard; he had it all over me in technique and speed, but when I connected it was normally over pretty quickly. If he just weren't so good at dodging I would win a lot more often!\n\nSaturday night was my big makeup date with Kathy. I made prime rib for dinner and THE CAKE for dessert, as per her request. Once again Maria and Kathy picked out the clothes they wanted me to wear. At least the new pants were a lot more comfortable this time and I didn't feel like I was getting a prostate examination with every step.\n\nWe went to two clubs and we drank nothing but soda water. The clubs Kathy took me to this time were much more sedate and you could talk without screaming, so I had a good time and was enjoying myself; she started to teach me how to dance to more modern music, too. \n\nAfter leaving the second club Kathy looked at me a little hesitantly and made a strange request. \"Don, I've got a favor to ask. There is an underground party club that I've been dying to go to for a long time, and I'd like you to take me there tonight. I know where it's supposed to be this month. It is rather notorious, but would you please take me to it? It will be only for one quick drink, but I really want to see what it's like.\"\n\n\"Kathy, I don't like the idea of taking you to some illegal operation. I've heard too many stories. Call me a wimp and a scaredy-cat if you like, but a good way of avoiding trouble is to stay away from places like that.\"\n\n\"Please, Don; I've got friends that have been there and I just want to see it.\"\n\n\"Kathy.....\"\n\n\"Please, Don, Pleeeease; I really want to see it once, just so I can at least say I've been there.\" She started giving me puppy dog eyes. Kathy is a person who I never would have thought would give anyone puppy dog eyes. Against my better judgment I agreed to take her, but I had a major bad feeling about it, as I had heard about some of the things that go on in those clubs. \n\n\"Okay, but you have to promise to stay close to me.\"\n\n\"I promise, I promise,\" and she skipped along like a little girl.\n\nThe place we went to was an old warehouse, and the parking lot was jammed full. We had to pay a forty dollar cover charge at the door! When we came in I was shocked. The music was deafeningly loud and the crowd was totally out of control. There were at least three raised platforms with cages. Within the cages were completely naked women. Two of the women that I could see were dancing, but the other one was sitting on a chair and screwing herself with a dildo. I bent down to Kathy's ear, \"They must pay a lot of money for the strippers.\"\n\n\"No, I heard that they're all customers; they just volunteer when they get here. I guess they're exhibitionists and this is how they get off.\" It takes all kinds I guess. At the bottom of each platform were some really big guys, one per platform. I imagined that was to give the ladies some extra protection, which made me feel a little better about the place, but I was still scared for Kathy. Some of the legal clubs we had already gone to had me feeling terribly uncomfortable, this place completely raised my hackles, my Spider Sense (trademark Marvel Comics) was tingling and I was afraid of spiders! I really wanted Kathy out of this wild, noisy, illegal club and back to someplace safe, but I've always been overprotective of my friends and loved ones.\n\nKathy and I worked our way through the crowd and we got a couple of soda waters. She got separated from me for just a moment by three college age guys. They closely surrounded her and it almost seemed like a practiced move, which gave me a really bad feeling in the pit of my stomach. I started moving in on them when they broke apart and vanished into the crowd. That incident put me on edge for the rest of the night and it reminded me of the time years ago when three assholes tried to snatch Barbara.\n\nWe drank our soda waters and danced to a couple of numbers when we decided we had seen enough and it was time to go.\n\n\"Don, I'm not feeling very well, I'm feeling kind of funny and I'm a bit dizzy. I'm going to the ladies room and I'll be right back.\" I followed her to the ladies room door, located in a narrow hallway in the back of the building, and I tried to wait for her right there. Opposite the ladies room door was the entrance to the men's room. The hallway between the two doors continued on for a short distance and ended at an exit door. A bouncer stood in front of the exit door. There were so many people, especially ladies to whom I'm always polite, trying to get to the rest rooms that I got pushed out of the way and forced back almost twenty feet, but I still kept my eyes glued to that door.\n\nWhen Kathy came out, she had her hand to her head and was moving unsteadily. Suddenly the men's room door opened and those three college punks from earlier came out, grabbed Kathy and hustled her out the back door right past the bouncer. He didn't do a damn thing to stop them, he even moved out of their way so they could get by!\n\nI started moving as soon as they grabbed her. The bouncer tried to stop me.\n\n\"Buddy, you can't use the back door, you have to go......\" I didn't bother slowing down to argue with him, he had to be in on it judging by the way that he had let them grab Kathy and leave. I was moving fast and hard and I think he managed to hit me once before I grabbed his face and rammed the back of his skull into the wall as hard as I could and then I was out the door.\n\nI ended up in a dead end alley. The alley was dark, but there was a light over the door giving me enough illumination to see that there were a lot of large steel trash dumpsters and one parked car. Two of the assholes were loading Kathy, who was weakly struggling against them, into the rear seat of the car while the third was getting into the driver's seat. The alley was L shaped with the car parked in the very short lower arm of the L. I wouldn't be able to stop a car, but the dumpsters could. There was one near me and I quickly hit the brake release on the wheels on my side. Then I pushed it as hard as I could to block the car in. I knew it wouldn't be enough by itself, but the driver seemed reluctant to damage his car at first, so he stayed put. As quickly as I could I pushed the other three dumpsters over by the first one, thoroughly blocking the car in. Now they were trapped and the dumpsters were positioned in such a way that if the car pushed against them the dumpsters would in turn be rammed up against the concrete block walls of the alley and jammed in place.\n\nI pulled out my cell phone and called 911. I reported the kidnapping, gave our location, the license number of the car, my name, Kathy's name and the number of kidnappers. The police told me to hang on and they'd be right there. I told them there was no time because it was happening right now! I left my cell phone connected to them and set it down close to the wall of the alley next to a hand-sized piece of a concrete block. I picked up the piece of block and ran for the trapped car. \n\nEven though he was trapped, the frightened driver began moving the car rapidly back and forth as soon as he saw me coming, making it unsafe for me to be alongside it. I waited for my opportunity and jumped onto the trunk of the car and from there I made my way quickly over the roof and onto the hood of the car where I could finally use my left hand to hang on to either the wipers or the lip of the hood. Using my right hand and the piece of block, I started to smash the windshield. I thought about smashing the driver's side window, which would have been faster, but it would have been a far more difficult and dangerous location from which to launch an attack on the driver while stuck on the hood of the car. I could hear Kathy weakly screaming from inside the vehicle. The car was jammed in so tightly, that it couldn't move more than about four feet forward and back, and only a little from side to side. \n\nEven so, there was no way that I could have safely stayed on the ground! The car was jerking back and forth, bashing into the dumpsters that were in turn bashing into the alley walls. It was a terrifying ride, made more so by the screeches and crashing noises made by the impacts with the dumpsters. The lurching car almost threw me off many times, but somehow I managed to stay on. I wasn't scared for myself, I was scared for Kathy. It was like she was in the belly of snarling, screaming beast that I had to rip open and pull her from. NOBODY FUCKS WITH MY FAMILY AND FRIENDS! Furiously, I continued to smash the windshield until I had hole in it. The three assholes inside were yelling in a complete panic. From their appearance in the club they hadn't looked like the sort to carry guns, and I was sure glad that I had guessed right. This had probably all been a game for them, as far as they were concerned, with no consideration for their victim's feelings. Now it was all too real for them with the apparent forces from hell about to descend upon them, namely me!\n\nI wondered why they didn't just get out the car and maybe grab a tire iron to attack me. It wouldn't have worked, even if they had, because as soon as they would have stopped the car and gotten out, I would have played \"Hulk smash puny humans!\" I was much stronger than most average guys and there was no way that I would hold myself back like I do when sparring with Phil. Maybe they could sense that, or maybe they were unfamiliar with fighting and just plain afraid!\n\nPunching through the hole as abruptly as I could, I smashed the driver in the face with my piece of concrete. He tried to dodge, but I got him good on the left side of his face and he screamed. With him temporarily stunned, the car stopped moving. I then quickly smashed the driver's side window and was surprised that it shattered really easily; are they meant to do that? During all this time Kathy was screaming and the other two assholes were yelling incoherently. I wasn't paying any attention to their words, though.\n\nI slid off the hood of the car, reached in to hit the unlock button, and threw the driver's door open as hard as I could, hoping to rip it off its hinges. I've heard of people doing that before. I didn't quite succeed, but I didn't think that that door would ever close properly again. Reaching into the car, I pulled the keys out of the ignition and threw them away. The driver was huddled on the far side holding his bleeding face and moaning.\n\nThe remaining two assholes in the back seat with Kathy tried to play games with the rear door locks, attempting to delay me from getting at them. They were screaming and yelling things at me, but I had no time to listen. After a few seconds of me playing with the power unlock button on the driver's door (good thing I hadn't ripped it off), I timed it right and got the back door open. Kathy was sandwiched between the two jerks. I grabbed the one closest to me and threw him as hard as I could into the wall of alley where he hit with a thud and slid to the ground in a heap. The other creep was still hanging onto the partially unclothed Kathy, trying to use her as a shield. I reached past Kathy, grabbed him by the throat with one hand and started to pound his head against the door window until he released her. I then pulled Kathy from the car and carried her clear. She was sobbing hysterically. I figured when those three creeps boxed her in earlier in the club they must have dropped something into her drink. You hear about that happening all the time nowadays. Then they just waited for their chance. It probably didn't help their plans that Kathy hadn't had a drop of alcohol all evening.\n\nReaching the wall by my cell phone, I put my back to the wall and slid down, setting my butt in the muck of the alley. I cradled Kathy with my left arm while I used my right to pick up my cell phone. My hands were a bloody ruin, but they still seemed to be working.\n\nI got back on the phone, described the current situation and asked for police and ambulances. Kathy was shuddering and sobbing the entire time, occasionally saying, \"Thank you\". I was shaking almost violently too, I had been so afraid for Kathy. The amount of blood leaking from my hands had me a bit concerned, too. I was worried that I would become weak from the blood loss and be unable to protect Kathy until the cops showed up. Maybe I should have tried to get to my car, but the whole area seemed so unsafe that I was afraid to try. Also, I wanted to keep an eye on this spot because I knew that those three rapists were still trapped in the back of the alley and I wanted them prosecuted and thrown in jail!",
        "The first police cars arrived within five minutes of my rescue of Kathy. Four policemen charged into the alley with guns drawn. I was too tired to say anything but \"hello.\"\n\nThey wanted to question me separately from Kathy, but she refused to remove her arms from around my neck and screamed when they tried to force her. Her being the obvious victim made them treat her with kid gloves, and they backed off. It was a good thing they did, because I had been getting close to the point where I was going to do something completely stupid to make them stop.\n\nI told my story and mentioned that the bouncer had to be an accomplice. That little tidbit interested them greatly. Then, before the ride to the hospital in the ambulance, they once again tried to separate us. I ended up riding in the ambulance, sitting on a gurney with Kathy on my lap. The attendants seemed to be very concerned about my heavily bleeding hands, but they still seemed to be working, so I called Freddie at her home. Thankfully, she answered; I told her part of the situation and asked her to come straight to the hospital to help Kathy; she was going to need all the support she could get after her near rape.\n\nAt the hospital Kathy still refused to let go of me and the nurses there were getting quite forceful with her until I told them in no uncertain terms to wait for Kathy's friend to arrive. I was surprised to see that it was Vanessa who was first through the door, followed five minutes later by Freddie.\n\nThey were then able to coax Kathy from my arms and Vanessa took her into hers. The nurses had already drawn blood from Kathy to determine what she had been drugged with, so they were then able to work on my hands. They even ended up giving me an IV. I took thirty-seven stitches in my right hand and eighteen in my left to close the mess of, thankfully, mostly shallow cuts; in addition both my hands were pretty swollen and bruised because I had indirectly used them like hammers. While they were working on me, my cell phone rang. It was Maria, and Freddie answered the call. Freddie had been staying with me while Vanessa stayed with Kathy. Freddie seemed to talk for a long time before she finally held the phone to my ear and I briefly said hello. I was really beat and kind of out of it by then, so I asked Freddie to take the phone back.\n\n........................\n\nWhere were they? It was almost four-thirty in the morning and they still weren't home yet! Finally I had had enough and I decided to call Don's cell phone.\n\n\"Hello, hello, Don are you there?\"\n\n\"Hi, Maria it's me, Freddie, I've got Don's cell phone.\"\n\n\"What are you doing with Don's cell phone? Are he and Kathy okay? What's going on?\"\n\n\"They are both okay now, but they had a big scare. Don didn't call you because you're taking care of Megan and Robin and there was no way for you to come to the hospital without worrying them.\"\n\n\"The hospital?!!\"\n\n\"Some assholes drugged and tried to kidnap Kathy, probably to rape her. Luckily Don was on the ball and put a stop to it. They took Kathy to the hospital to check her out because of the drugs. Don hurt his hands a bit and he needed some stitches. With luck we should have everyone home in an hour to an hour and a half. Here, I'll let you talk to Don.\"\n\n\"Hi, Maria, sorry to worry you, how are you and my babies?\"\n\n\"Don, we're fine, but what about you?\"\n\n\"I'm okay, just really tired. Freddie, can you talk to her for me?\"\n\n\"I'm sorry, Maria, Don is really wiped out. They gave him some pain killers and I think they're making him sleepy. Don originally called me to come to the hospital and help Kathy because she was so upset. I called Vanessa and she met me at the hospital. We would have called you earlier, but we've been really busy here, I'm sorry.\"\n\n\"Okay, I understand, but please get back as soon as possible. I don't want Megan and Robin to worry.\"\n\nI WAS FURIOUS! DON AND KATHY WERE HURT AND HE DIDN'T CALL ME! I didn't know if I wanted to cry or kill him. After calming myself down with some deep breathing, I could sort of understand him not calling me because he was fearful that Megan and Robin might hear something, but it still hurt! Didn't that big dope know how I felt?\n\nI spent a very anxious hour waiting for them, and I kept looking out the apartment window every minute or so for what felt like forever. Finally I saw both Vanessa's and Freddie's cars pull up. Vanessa hurried over to Freddie's car and helped Don out of the back seat. Why did he need help if it was just a couple of stitches? Freddie tried to help Kathy out, but Kathy ran to Don's other side and started helping him too. Don seemed to be walking all right, but what was going on? Time to get up close and personal, I ran outside to greet them in my bathrobe.\n\n\"Don, Kathy, are you two all right?\"\n\nKathy answered, \"I'm okay but Don's hands are really hurt and he's a little bit dizzy from the drugs, blood loss and lack of sleep.\"\n\nBlood loss??!!! Drugs??!!!\n\nDon rebuked Kathy, \"I'm fine, I tell you, I just need a little sleep.\"\n\nI decided to wait on the third degree until I got them inside and at least got Don into bed.\n\nWe managed to get Don inside and into bed, but because of his hands he had a hard time removing his pants. Since I had been kept in the dark, I made damn sure that I took care of that little chore. He fell asleep almost as soon as his head hit the pillow and we quietly left the room. I wanted to furiously turn on my friends and demand an explanation, but I knew better than to do that so I shut my mouth, gritting my teeth.\n\nI made everyone sit at the dining room table. \n\n\"Before we start talking about tonight, Kathy, do you feel up to talking about it now?\"\n\n\"I think it would be better if I got it out now. I don't think I can sleep at all and I know you're probably dying to know about Don.\"\n\n\"Okay, but first, would anyone care for maybe some tea and THE CAKE before we start talking?\" I know it was stupid to worry about food at a time like this but I needed something to do for a just minute while I got myself under control and maybe a snack would help everyone else to relax too, especially Kathy.\n\nI got three affirmatives so I set us all up with the snack before I sat down. There was a lot of chatter at the table that I kept one ear tuned to while preparing the snack, but it was such a disjointed conversation that I couldn't quite follow it. \n\n\"Could you please start from the beginning, Kathy? Some of what you're saying doesn't make any sense.\"\n\n\"Okay, after the second club we went to, I realized that we were close to this month's location of an underground club that I've always wanted to go to. Some of my friends at school have been to it, and I've been more than a little intrigued. Here I was with my reputation as an all-knowing bad girl and I'd never been to it. Well, I wheedled Don into taking me, cause he was really reluctant to go. Neither of us had had anything but soda water tonight and I promised Don that it would only be for a short visit.\"\n\n\"We got our drinks from the bar when I was suddenly surrounded by three well dressed, skinny college-age punks. They jostled and distracted me, and we figure that that was probably when they doped my drink. They were obviously pretty experienced at it too, because they were able to cut in between Don and me, drug my drink and vanish into the crowd before either of us realized what was going on.\"\n\n\"Don and I danced to two or three songs when we decided we had had enough and it was time to go. I was feeling dizzy by then and felt like I might throw up, so I went to the ladies room first. I wish I would have thrown up; it might have gotten some of that damn drug out of my system. I got scared while I was in the bathroom because of how I was feeling and came out looking for Don. It was so crowded in the hallway that I guess Don was pushed back a bit by people trying to get to the rest rooms. When I stepped out, those three shitheads grabbed me and hustled me out the back door. The bouncer standing there didn't do shit and must have been in on it. They dragged me outside and stuffed me into the back seat of a car and two of them got in with me. They were so anxious to rape me that they had already started to take off my clothes. I think Don first showed up when they were pushing me into the car.\"\n\n\"Suddenly one of the dumpsters was moved, blocking us in. The two in the back seat with me screamed at the driver to 'get us out of here', but the driver yelled back that he 'couldn't smash up his mom's car.'\" \n\nVanessa, Freddie and I exchanged looks at that revelation. What a bunch of pathetic, juvenile, shit-for-brains would-be rapists!\n\n\"Someone outside pushed more dumpsters and blocked us in really tight. I know now that was Don. Suddenly the whole car shook as Don jumped on the trunk, went over the roof and was suddenly on the hood. With his bare fist, he started to pound on the windshield, breaking it! The punks inside the car, were screaming in panic. They were yelling things like 'what are we going to do', 'we're sorry, we're sorry', and 'we'll let her go'. And I was yelling for Don to save me.\"\n\n\"Don was roaring that he was going to kill them, threatening them with tearing off their balls and ripping out their throats if they hurt me, even as he was continuously pounding on the windshield. I could see blood on the windshield from Don's hands.\" \n\n\"I felt like I was in a horror movie, but the monster was trying to break into the car to save me. Suddenly Don made a whole in the windshield and hit the driver on the side of his face. Blood sprayed into the back seat and that's when those assholes went completely insane with panic. I'm sure that they thought that Don was going to kill them. It got pretty rank back there; I think they shit and pissed themselves.\"\n\n\"Don smashed the window on the driver's side and ripped the door off. Then he got the back door open and did the same to it.\"\n\n\"The two punks with me were trying to get away but they couldn't open the passenger door on the side away from Don because the car was too close to the alley wall. Don grabbed the fucker closest to him and just threw him away, like you would toss a bag of garbage into a dumpster. Then he reached in with his bloody hands and grabbed the other guy and started to slam his head against the passenger door window. It was pretty damn terrifying and Don looked like an angry wild beast, ready to tear his prey to shreds. He even scared me at that point!\" \n\nWhen the shithead holding me let go, Don gently pulled me from the car and his whole demeanor changed. He was trying to soothe and comfort me. I know now that Don suspected I had been drugged because of my earlier behavior, but, even though I was drugged, it was only affecting my physical abilities and not my mind. Mentally I was quite alert. Maybe the drug they gave me works better with alcohol in the victim's system, or maybe I didn't get enough of it, who knows?\"\n\n\"He took me away from the car and carried me a ways before we sat down and he called the police. They showed up really quickly. Don was holding me in his lap and I was so scared and shook up that there was no way I was going to let him go, and Don was shaking himself, probably from an adrenaline reaction.\"\n\n\"The cops and the paramedics tried to separate us, but I wouldn't let go until Vanessa and Freddie showed up at the hospital. I feel bad about that; if I had let go sooner they could have started working on Don's hands right away and he wouldn't have lost so much blood.\"\n\nFreddie, Vanessa and I were all stunned by Kathy's story and we all turned as one to look at Don's bedroom only to wonder just what was it that was sleeping in there. I recalled a description of Barbara's rescue when Don was still a teenager from the investigation we had had done on Don. What kind of man was I interested in? I knew he was a hero, but still, someone who can do that is a little frightening. They were stupid thoughts and unworthy of Don, but I was still having them. That was when Kathy said something that instantly cleared up my thinking and straightened me right out.\n\n\"Maria, you don't have to worry about me, I would never poach. But I am now firmly in the 'Official Don Fan Club'. He is more than enough of a 'bad boy' for me. If you change your mind about him or things don't work out between the two of you, I want my shot at him!\"\n\nVanessa spoke up at that point and immediately made her objections and interest clearly known to us all. I felt like I had just had an icy bucket of cold water thrown in my face. Get real, Maria! So Don has the ability to become a raging barbarian, he is YOUR raging barbarian, and he only does it to protect people. So the thought of Don pounding on a windshield with his bare hands until they became bloody and ripping off car doors was terrifying, he would have almost certainly done the same thing for YOU!  How come that last thought made me suddenly aroused, made my breath grow short and I even got a little wet?\n\nOut of the corner of my eye I could see that Freddie had her face in her hands, shaking it from side to side, and was laughing a bit crazily. Freddie was the first of my friends to express a sexual or even romantic interest in Don, but she seemed to be the only one now who was even partially immune to his charms. The mighty Professor Kathy, queen of the one night stands and brief flings, had fallen. If Don suddenly appeared in full barbarian mode and roared \"I WANT SEX!\" Freddie might be the only one not to respond; of course I would have to do something to eliminate my rivals in such a situation. Damn, I had left my new big stick at my home in the mountains! I had better introduce my friends to Roscoe!\n\nThe situation got a little worse when Kathy detonated another land mine.\n\n\"Maria, I've got a big favor to ask. Can I sleep in Don's bed tonight?\"\n\nWe all just stared at her open mouthed. I began to shake my head no, but she resumed speaking again in a rush.\n\n\"Don is dead tired, and I just mean sleep. Right now I don't think I could get to sleep without Don nearby. I'm sorry, but that's just how I feel, and I have it all figured out. You'll sleep with us too, you'll be in the middle and we'll both sleep on top of the top sheet on the bed. I just really need him nearby for one night, and Vanessa just doesn't make me feel as safe as Don does, plus I'm really concerned about his hands. Just give me one night to let me calm down please, please, pleeeease?\" Then Kathy did it, she used her big weapon - something she hardly ever uses, and for that reason it is all the more effective - her infamous puppy dog eyes. I wondered if that was how she talked Don into going to an illegal club? \n\nIn the end I agreed to it, but for my own selfish reasons. I wanted to sleep next to Don, and I wasn't sure if I was chaperoning Kathy or she was chaperoning me! Vanessa and Freddie also spent the night, but they slept in my girls' room since the girls were sleeping in mine.\n\n................................................\n\nRobin woke up in bed surprised to find that it was only Megan with her and that Maria had already gone. She let Megan sleep and went to brush her teeth; they felt especially scummy this morning, yuck. The apartment seemed way too quiet for nine AM; Daddy never sleeps this late. Still in her pajamas, she went out to the kitchen and checked there. Nobody and no signs of breakfast, just some dirty cake dishes and coffee cups in the sink. What's going on?\n\nWalking back in the direction of the bedrooms, she opened up her father's bedroom door a crack and peeked inside. He was sleeping in bed with both Maria and Kathy! What the heck is going on?!! She ran back to Maria's room to tell Megan.\n\nWhile shaking her furiously, she shouted. \"Megan, you've got to get up right now! Megan, get up, it's an emergency! Wake up Megan!\"\n\n\"Okay I'm up, I'm up. Can I go back to sleep now?\"\n\n\"Daddy, Maria and Kathy are all sleeping together in the same bed!\"\n\nSuddenly Megan's eyes snapped open. \"What did you say?\"\n\n\"You heard me; they're all sleeping in the same bed. What are we going to do?\"\n\nMegan grabbed her new robe and ran out the bedroom door while Robin followed. Megan was thinking, if it were just Maria I would be cheering and trying to cover things up with my little sister. But it's both Maria and Kathy, and Robin found them first! Oh my god, has Daddy changed that much? I've got to see! Slowly she opened her father's door and at first just peeked; then she carefully looked at the situation.\n\nHmmm, they just seem to be sleeping. Maria and Kathy are both wearing pajamas and it even looks like they're sleeping on the top sheet while Daddy is underneath. It doesn't look like any funny business went on. What happened last night?\n\n\"Megan, what do you think?\" whispered Robin.\n\n\"I'm not sure, let's let them sleep. I think we should get dressed.\" \n\nRobin followed Megan to their room only to find Vanessa and Freddie sleeping their beds! WHAT HAPPENED LAST NIGHT?!!\n\nThe two girls decided enough was enough. Megan went to wake Vanessa, with whom she had always gotten along best, and Robin went to wake Freddie, the one to whom she always felt closest after Maria.\n\nThe two women were startled to awaken in a strange bedroom, but they quickly remembered what was going on and composed themselves. Megan and Robin were demanding an explanation for what was happening.\n\nFreddie interrupted them, \"Be quiet, you two. Your father, Kathy and Maria had a very bad night. They need their sleep. You get dressed and we'll take you out to breakfast. Don't worry, we'll tell you everything that we know on the way in the car. Everything is fine now and everyone is safe, but they really need their sleep. So, let's get dressed quietly and we'll all sneak out, okay?\"\n\nFreddie was adamant in not explaining anything until they left, so the two girls hastened to get ready while Vanessa and Freddie took tooth brushes out of their purses and went to get cleaned up as best they could.\n\nOn the way to the restaurant, Vanessa explained the situation, which provoked several comments from Megan and Robin.\n\nMegan exclaimed, \"Kathy was drugged and kidnapped?!\"\n\nRobin shrieked out, \"Daddy smashed a hole in a car windshield?!\"\n\nVanessa explained again, \"Yes, and that's something very hard to do with your bare hand! I would have expected your father to break his hand first before breaking a windshield. He then punched the driver through the hole in the windshield, ripped off the driver's door, ripped off the rear passenger door, grabbed one of the guys in back seat, picked him up and threw him away like a sack of garbage. Then he climbed in the back seat, beat up the other guy, who was holding Kathy, got her free and carried her away.\"\n\nMegan then reverted to using the foul language that Maria had been so carefully trying to get her away from using, \"HOOOLYYY SHIT!\"\n\nRobin at first just agreed with her sister by simply saying, \"Yeah.\" Then she got a really silly grin on her face and started up mischievously, \"I'm either going to buy him Superman or Batman pajamas, and I'll get Maria and Roscoe to make him wear them. I'll even get the kind with the attached feet too. He'll look so cute.\"\n\nMegan grinned back at her little sister's coolly imaginative suggestion and they exchanged high fives. Wait until we tell our friends at school about THIS! Some of them had said some quite cruel things about their father after the divorce, like he was a big dummy and worse. This will shut their mouths. They're not going to make fun of a man that can tear doors off of cars!\n\n.................................................\n\nI woke up in the morning, or maybe it was early afternoon considering when we went to bed, only to find that I was sleeping on my side and I was snuggled up to Don with my left arm across his body, except, of course, the sheet was still separating us. I reveled in the closeness that I was experiencing with my breath softly playing across his face. Did I brush my teeth last night? Maybe my breath is a bit stinky? It would be terrible to find that my breath was so rancid that it could wake him up! He might never want to sleep with me again! Okay, he's staying asleep, I guess I'm safe. I then alternated my time between staring at his sleeping face and closing my eyes and luxuriating in just the physical closeness to him.",
        "After perhaps as much as an hour later, Kathy woke up to use the bathroom. I kept my eyes closed, pretending that I was sleeping. When she got in bed she leaned over and whispered in my ear, \"I know you're awake, you sneak!\" She softly chuckled and settled back down to try to sleep some more.\n\nFinally Don woke up and tried to struggle his way into a sitting position with his damaged hands. As soon as I felt signs of his waking I withdrew my arm and pretended to be asleep, but with his difficulty sitting up I \"woke up\" to assist him.\n\n\"Don, can I help you?\"\n\n\"Oh! Uh, I, uhhh, I appreciate you staying with me through the night, Maria, but I only have my boxers on.....\" Typical Don, he completely misunderstood the situation and tried to put us in the best possible light, and then he got nicely flustered about me seeing him in his boxer shorts, which I've already done. I interrupted him because he was apparently a bit tongue tied. I would really like to tie our tongues together soon!\n\n\"Don, don't forget I've seen you in your boxers before. You stay there and I'll get your bathrobe, then I'll help you sit up and you can put on the bathrobe while you're sitting. You can keep the sheet over your lap if you want to; and I'll close my eyes when you stand up and close your bathrobe. It'll be easy.\"\n\n\"Maria, ...\"\n\n\"Don, don't make me get Roscoe, or worse yet, Megan and Robin,\" I said with a weary tone of voice. \"You need help and I'm going to help you whether you want it or not.\" I got his robe and we did things my way, and maybe I didn't keep my eyes closed as tightly as I should have, so sue me. I had to make sure that Don was stable on his feet, didn't I? Especially after last night's dizziness, right? I must say that Don was sporting a fairly impressive morning woody and it was blasting off right through the fly in his boxer shorts. It was huge! I just had to hope that Kathy had her eyes closed better than mine and missed it. As for me, I wanted to take it home and play with it and him all night long.\n\n........................................\n\nI haven't had an erection so hard that it hurt enough to wake me up since I was a teenager. I had to hit the bathroom and at least piss; I hoped that would begin to soften things up. I tried to push myself up with my hands. Shit! They hurt! I had forgotten about last night's nightmare. Now I wasn't certain which hurt more, my hands or my dick. I was in an awkward position to do a sit up on my bed, too. Then suddenly I heard, \"Don, can I help you?\"\n\nHoly shit! Maria is in my bed! What the hell is going on? Get real; she probably just stayed in the room taking care of me; that must be it. But, it was still a hell of an embarrassing situation; I had an erection that wanted to become an independent life form and find a nice cave to live in, and I had a drop-dead gorgeous woman who was \"just a friend\" who just happened to be lying next to me in my bed. I hurriedly shifted over onto my side and scrunched up the blankets down there to hide my embarrassment. Things went smoothly after that and Maria came up with a system that let me hide my embarrassment without her ever realizing what was really going on. I was able to safely stumble into the bathroom with my dignity intact. Now if I can just figure out how to wipe my ass with these bandaged hands, I'll be all set.\n\n........................................\n\nKathy hurriedly got up from the other side of the bed when Don got into the bathroom. I think that because Don was so distracted by his situation, plus the fact that Kathy held herself so still, he never even noticed she was there. Just before she left the room she turned to me grinning and held up her hands over a foot apart. Well, there goes my hope that she didn't see it. It was nowhere near that big, but it was still plenty big enough for me.\n\nI chased after her in surprise, \"Kathy you seem to be doing pretty damn well this morning, considering what happened to you last night. I hate to be blunt, but what gives?\"\n\n\"I do seem to be doing remarkably well and I've been wondering about it myself; there are four reasons that occur to me. First, Don rescued me. Second, Don hurt them; it might not be civilized but he physically hurt those would-be rapists and that makes me feel good. Third, they didn't have much time to do anything to me but see my tits. Fourth, I was being honest about last night. I needed to be close to Don and sleeping near him really did calm me down, letting me get to sleep, and gave me time to think intelligently about what happened and deal with my emotional upset. I'm not saying I'm over it entirely, but I'm in pretty good shape right now, and I'm both very relieved as well as proud of myself for it.\"\n\nJust as Kathy finished her explanation, Megan, Robin, Vanessa and Freddie all walked in through the front door. Freddie explained that she hadn't wanted to disturb us so, instead of making a racket in the kitchen; everyone had gone out for breakfast. Megan and Robin then forced Kathy to retell her story; she edited it making it a more PG version. They were suitably impressed with the heroics of their father. \n\nDon finally came out dressed in sweat pants and a t-shirt; it was probably the only clothes he could put on with his hands. I made pancakes and bacon for the three of us. Because it was difficult for him to use a knife and fork, Megan and Robin insisted on feeding their father. They were very serious about it, too, there was no clowning around, and they were careful to give him bite size pieces of food. My girls were good kids. Vanessa, Freddie and Kathy left early that afternoon. Kathy didn't want to go, but she had school work to finish. My girls and I took care of Don for the rest of the day by feeding him, making him take his medicine and supplying him with ice packs to bring the swelling down. Don would have to stay home tomorrow from work, there was no way that he could function with his hands still so badly swollen.\n\nI, of course, planned on spending Monday night taking care of Don. Megan and Robin also insisted on spending the night, too, instead of going back to their mother's. I felt a quick jab of frustration because it was a perfect excuse to spend the night alone with Don, but my girls had quashed that hope. It was entirely understandable, though. Megan called Barbara to say that they wouldn't be home after school on Monday and explained that they had to take care of their dad, who had been hurt. I was surprised when Megan handed the phone to Don explaining that her mom insisted on speaking to him. He took the phone into his bedroom to talk to her alone.\n\n........................................\n\nMegan and Robin scared the crap out of me. They called me up Sunday night explaining that they would not be home Monday, and might not be home until Thursday night. When I asked why, they said that their father had been hurt and they needed to take care of him.\n\nWell, I went through the roof. How badly was he hurt? Did it involve the situation with the cheater that he called me about a few weeks ago? How was he hurt? My girls kept to their promise made with their father and refused to tell me anything! I had to insist on speaking with Don.\n\nHe reluctantly explained to me that he had hurt his hands, and that they were just swollen and cut up enough to need a few stitches, and that it did not involve the cheater that he had mentioned before.\n\nWhat hurt the most was that, when I hinted that I would be more than happy to come by and nurse him, with no strings attached, he just shut me down. The man who had been my rock and comfort for so many years wouldn't even allow me to help him the tiniest bit. I collapsed crying after that phone call because the opposite was also true; he would never again be there for me when I needed him. What I had done had destroyed all the bonds between the two of us. It reaffirmed my decision to keep an upcoming appointment to see a new therapist.\n\nI ended up seeing a therapist team, and Tuesday night was my first appointment with them. They were a unique and special couple that worked as a unit when counseling their patients. I had heard quiet talk about them and checked them out as best as I could using my own resources, but I had found out very little. They behaved quite secretly, but supposedly they had successfully brought results when nobody else could.\n\n\"Hello, Ms. Hendricks, I'm Gail Pone and this is my husband Paul Pone. How can we assist you?\"\n\n\"Hello, Mr. and Mrs. Pone, please call me Barbara. To be absolutely blunt, I destroyed my marriage, my family and my life by having a series of affairs. I've heard about your reputation and I want to get back as much as I can of my old life.\" They exchanged looks that, while professional, seemed to convey the message \"Oh, another one of those!\"\n\nPaul spoke first, \"Barbara, we're not miracle workers. However, we will do our best to help you if you can afford us. You must understand that we are not cheap. The most important questions after that are how many children do you have with your husband, what is the legal status of your marriage, for how long did you cheat on your husband and with how many sexual partners?\"\n\nI began crying and said, \"I've been divorced from Don for almost three years. We have two wonderful daughters. I committed adultery for over three years, and it was with twenty four different partners.\" \n\nGail and Paul exchanged another of those looks. Gail spoke this time, \"Barbara, you probably came to us because we have a bit of a reputation for fixing broken marriages like yours. Part of the reason for our success is that Paul and I were both victims of cheating spouses in our first marriages. We use techniques that are not accepted by any other therapists, as far as we know; also we are not accepted by the rest of our profession because of it. Quite frankly, we are always wondering if today is the day that we will lose our licenses to practice. Other therapists work on the theory that adultery is the fault of both spouses, and they counsel forgiveness and understanding.\"\n\n\"We do that as well, when appropriate. However, when that is not appropriate, we use two other techniques, balance and punishment. In our sessions with some of our patients (who are almost always the cheating spouse) we try to help them to find something that will balance their sins with their spouses or ex-spouses. For example, we might have a forty year old man cheating with a thirty year old woman for two months. If his spouse is agreeable to it, and frequently she is not, he will find her a thirty year old man that she can have an affair with for six months. You will notice that the amount of time to achieve balance is three times the length of the man's affair. We tend to use that ratio a lot; we've found that a one to one ratio doesn't balance things for the victimized partner. That is one way to balance things. Financially is another, and sometimes we have to really rack our brains to come up with a method that satisfies the wronged spouse, yet doesn't offend their honor.\"\n\n\"Then there is revenge or punishment, the cheating spouse must suffer some form of punishment beyond the balancing, beyond the pain inflicted by knowing that they've hurt their spouse and marriage. Sometimes this pain is self inflicted. For example, we had one man that refused to have his own affair while still married to his cheating wife; he thought that it would dishonor himself. It was quite difficult coming up with a way to balance the situation for that couple, but we did it and he chose to consider reconciliation, but again he refused to punish his wife. The wife inflicted the punishment on herself, and chose a method that is becoming so popular with our patients that it is almost the traditional way now. This 'popular' method consists of three parts. First, the guilty party must never refuse any sexual requests by their spouse; second, they choose a permanent marking to proclaim themselves to be devoted to their spouse - sometimes they even go so far as to have themselves marked as their spouse's property; third, there must be a complete lack of personal privacy for a very long period of time. This can be done quite easily nowadays with GPS locators and modern listening devices. Their marriage is still rocky, but at least they still have a marriage. These additional techniques don't work all the time.\"\n\n\"What the wronged spouse has to deal with is often overwhelming. They have to deal with the betrayal, the humiliation, the sense that they are sexually inadequate, and the firm belief that they will never be able to give as much sexual pleasure to the cheating spouse as their lover or lovers did. As well, they suffer from the conviction that their spouse has defiled the marriage and themselves by their adultery. That is just to name a few things.\"\n\n\"Barbara, your marriage has been over for a long time and your adultery was absolutely egregious. We don't have much hope of helping you in your goals. So, given that, what do you want us to do?\"\n\nI can't say I wasn't crushed at her statement. I had been holding out hope that they had a miracle up their sleeves, and I cursed myself for coming to them too late. It was actually my divorce lawyer that had mentioned them to me long ago. What Gail had said, however, was pretty much what I had expected at this late date.\n\n\"Gail, I would like three things that you might be able to help with. Your help in repairing my relationship with my daughters, as much as humanly possible, your aid in helping to cure me of the self loathing that I feel, and the biggest thing, and it's probably impossible, would be to reduce the hate that my ex-husband feels towards me.\" This was the first time that I have ever referred to Don as my ex-husband, and it hurt so much that I wanted to wail at the pain. \n\n\"We can probably do that, Barbara, but you will have to tell us absolutely everything, and it is going to take months. We charge six hundred dollars a session and you will need two sessions per week for as long as it takes. So do the math, we are very expensive. Do you still want our help?\"\n\n\"That's fine, I can afford it. Can we start now?\" \n\nThey both nodded their heads yes, and I started the sordid story of my married life. I would have paid them a million dollars to get Don back in my life in any fashion!\n\n..........................................\n\nThe medicine and ice packs were doing a wonderful job of reducing the swelling in Don's hands. At this rate he should be able to take care of himself by Tuesday evening, damn it! I wouldn't have any excuse to stay over again, now. The stitches should be coming out in another week or so, too.\n\nWe had no plans this weekend for my home in the mountains because this time of year is the in-between, muddy season in the mountains. My horses should be back in their mountain stables by the last week of May or the first week of June, though. So, to make things even worse, I'm not going to have an excuse this weekend to visit at all with Don and my babies.\n\n.........................................\n\n\"Maria, I had a thought.\"\n\n\n\"What is it, Don?\"\n\n\"Megan and Robin really enjoy their time with you. I was thinking that, since we're not going to the mountains this weekend, I could maybe cook THE TURKEY here on Saturday.\" Again with the scream of eagles, am I the only one that hears these sounds?\n\n\"Would you like to come by this Saturday? I know the girls would love to see you.\"\n\n\"Don, I would absolutely love to spend the weekend with you!\" I didn't know I could smile that widely or brightly! I know he didn't ask me to spend the entire weekend, but knowing Don, he is just going to assume that I misunderstood and thus Maria scores again! \"I can even bring THE CHEESECAKE if you would like.\" Ah, the sound of cows in the morning, beautiful! Much better than the smell of cows in the morning. Hold it; Don is looking very strange, is he going to correct my deliberate \"mistake\"? Maybe I pushed things too far?\n\n\"Maria, this is a really strange question, but did you just hear the sound of cows mooing a minute a go?\" Yes, yes, yes, I'm not the only crazy one; we're going to be a perfect match! Much, much better than he and Barbara ever were! Mooria, Mooria, Mooria, suddenly a vision of dancing cows filled my head. I looked back at him and decided not to answer that question!\n\n\"Anyway, I'd love for you to bring THE CHEESECAKE.\" Again he got that same puzzled expression. I'll have to make a mental note of that and ask him after we're safely married, Don, do you hear cows when THE CHEESECAKE is mentioned?\n\n\"I'm still working on my new lemon meringue pie recipe, but it has a long way to go.\" Now I couldn't help but wonder what sound would become associated with THE LEMON MERINGUE PIE when Don succeeded, because I had faith that he would. I guess I would just have to wait to find out. Funny, though, I never hear turkeys when THE TURKEY is mentioned!\n\nOn Tuesday evening after dinner I left Don by himself. He just didn't catch any of the hints I had been dropping that I wanted to stay. On the other hand, he had flat out told me that I could stay whenever I wanted. Maybe he just assumed that if I wanted to stay, I would just do so? Hmmmm.\n\nI made a gross blunder and tactical error on Thursday. I mentioned to Freddie that Don was making THE TURKEY, blithely assuming that, since she's a vegetarian, she wouldn't care. WRONG! Freddie loves eating any meal that she doesn't have to cook, so she told both Kathy and Vanessa and they both immediately called Don to ask if they could come. After agreeing to their blatant begging, Don then had to call Freddie to invite her, since everyone else was coming, and he promised her Dungeness crab for dinner, probably just like Freddie had planned all a long.\n\nSecretly, I was relieved that Freddie had contacted Kathy about THE TURKEY. She had been avoiding us since her attempted kidnapping and I was quite worried about her. She came for dinner but still managed to avoid any conversations regarding that terrible night, and I wasn't sure that I should pressure her to talk about it either. \n\nOther than that, it was another perfect weekend. Don's hands were much better already and we played games, watched movies, danced on the new dance floor, went out to watch a couple new movies and generally pigged out. Here I was urging my friends to resume their own private social lives, and Don's cooking just drew them back in, like chumming the water for sharks. \n\nOn Saturday evening Don talked a lot about how he was in the final planning and financing stages for a new apartment building that he is going to start constructing in a couple of months. \n\nThen, early on Sunday afternoon, disaster struck and Don's cell phone rang.\n\n\"Hello, Don Hendricks speaking........... Why, hello, Eva, of course I remember you, how have you been doing lately?................ I'm flattered by your compliments........... No, as I told you, Vanessa is just a good friend........ Thursday night this week? Yes, Thursday is normally an available night for me.\" My friends were exchanging panicky looks and my hands were white, I was clenching them so fiercely. \"What kind of club is it?...........Jazz, I'd be happy to go.......Okay, I'll meet you at your club at seven and we will drive together from there. Thank you for inviting me, Eva, see you Thursday. Goodbye.\" Shit, shit, shit, shit, shit, damn it, damn it, damn it, DAMN IT! Don turned back to us, with a big smile on his face.\n\n\"It looks like you won't have to set me up on my first 'real date'. Eva, the owner of that ballroom dance club, just invited me out.\" It was so FUCKING HARD keeping a smile on my face. \"It is kind of a relief to find out that someone might actually be interested in me, especially romantically, but it is also a bit scary, too. Anyone want any more of THE TURKEY? We've got a lot left.\" Hell just froze over; none of us had any appetite any more. ",
        "What did he mean; it was a relief that someone had some romantic interest in him? What about me, and what about my friends? What are we, chopped liver? I wanted to demand to know what the hell was going on, but Freddie put her hand on mine and motioned for me to be quiet.\n\n..........................................\n\nEva was quite pleased with herself. The investigation that she had arranged on Don Hendricks was complete, and he seemed to be just the man that she was looking for. Almost as good as her second husband, but not nearly as rich though.\n\nGeorge had been a dear, and she had even endured giving him two children, but he had such antiquated ideas about marriage and fidelity. She was able to completely fool him for five years concerning her affairs, and when he found out it was only because of two of the most unlikely coincidences that could ever possibly happen. Because of that damn pre-nup he got custody of the children. Well, she hadn't wanted custody anyways, but he got ninety percent of the shared wealth too, and that is what really hurt. Luckily for her, when they were building the club he had put it in her name.\n\nDon seemed to be even more oblivious to things than George had been. If that stupid bitch of an ex-wife could fool him, Eva thought she shouldn't have a bit of trouble. Barbara had been flagrant in her affairs for three years and had not been caught and, in addition to that, she hadn't taken care of Don sexually. Eva looked forward to training Don in the bedroom arts; she giggled to herself, it might just be as good as taking a virgin.\n\nYes, Don would be a good man to come home to and take care of her. Of course his daughters would have to go, but she was sure that she could convince Don to send them back to Barbara. All it would take, she thought, would be a bit of wild, noisy sex on her part and Don would probably shoo them out because of embarrassment. And, Eva did so enjoy wild, noisy sex. Mister Hendricks would be so easy to control; she mentally patted herself on the back, firmly convinced that she was the best thing to ever happen to Don.\n\n...........................................\n\nI wanted an immediate answer about Eva from my friends, but they had refused to talk about it until we all got back to my condo. Vanessa was even driving my SUV instead of riding with Freddie; they had insisted. No matter how much I badgered Vanessa she wouldn't tell me a thing. She told me that Kathy would explain it all when we got to my condo.\n\nFinally we are all in my home and seated around the dining room table. \"Will someone please explain to me what is going on, and why Don implied that that Eva woman was the only one who had romantic thoughts about him even though some of us have come damn close to raping him?\"\n\nKathy spoke first, \"Maria, you've got to remember that Don is sweet, but he is kind of thick when it comes to people, and especially when it comes to women. He is a very literal person. Imagine this situation; you have some new friends and one in particular that you like a lot. He calls you a dork and then tells you that he is going to give you lessons in being smooth. And, on top of that, when you are done with your lessons he is going to fix you up on dates WITH SOMEBODY ELSE! How would you feel?\"\n\nMy stomach suddenly got a horrible sinking feeling and an awful aching pain. \"But, Don never really liked me that way,\" I said in protest. They all laughed pityingly at me.\n\nFreddie told me, \"Maria, it was blatantly obvious to all of us the very first weekend we met him that he had a crush on you. Here we're calling Don thick and you never even noticed how he felt about you!\"\n\n\"I don't believe it.\"\n\n\"Maria, you know how everyone has always compared your beauty to a certain famous Italian actress?\"\n\n\"Yes.\" \n\nFreddie pulled a DVD case out of her purse and threw it onto the center of the table. It had a picture on the cover of one famous male actor and one famous female actress.\n\n\"Between the time he first met you and New Years Eve, according to Megan and Robin, Don watched that DVD at least once per day.\n\n\"I still don't........\" Vanessa interrupted me next, \"It was right after Christmas that we sprung this 'fixing him up on dates' nonsense. After that he stopped watching that DVD cold turkey, in fact he threw it out and Megan rescued it.\" My stomach suddenly felt even worse as she continued, \"On New Year's Eve, when Don so uncharacteristically got drunk and I helped him to his room, he took one look at you and started singing a song, very softly. The name of the song was 'Unchain my Heart'. Megan reports that he listens to it constantly now and sometimes when you, Maria, are present but looking elsewhere, he stares at you and we can see his lips forming the words and we can easily see that he is singing it silently to himself.\"\n\n\"Oh, no!\" I said as I jumped up to drive back to Don's apartment; I've got to explain to him. What can I explain to him? \n\nKathy interrupted my confused thinking, \"What are you doing, Maria?\"\n\n\"I've got to get back to Don, I've got to explain!\"\n\n\"Maria, please sit down. Are you prepared to go to bed with him tonight?\"\n\n\"What? No, I can't do that.\"\n\n\"Why not?\"\n\n\"Because of my past, you all know about that. It wouldn't be right to go to bed with him until I tell him about my past,\" and I started to cry. Freddie and Vanessa both came around the table to comfort me.\n\n\"So, are you prepared to tell him about your past tonight?\"\n\n\"No, it's too early. I'm not ready yet.\"\n\n\"Then I think rushing over to see Don right now would definitely not help, and it might even make things worse.\"\n\n\"What do you mean? What are you trying to say?\"\n\n\"You've said yourself that Don has extremely low self esteem as well as a complete lack of romantic or sexual confidence. As far as he is concerned, we've all basically told him that we don't find him sexually attractive. Now you're going to run over there and say otherwise, using only words? He isn't going to buy it; Don is going to think that you're saying nice things out of pity, just to make \"the dork\" feel better. It's going to take sex to convince him, and a lot of it, not just a mercy fuck or two. So, unless you're ready to go over there and fuck his brains out for a week or give him an explanation about your past, I think going over there will do more harm than good. You might just make Don feel like so much more of a loser that, out of embarrassment, he will start avoiding all of us.\" \n\nI broke down completely and started bawling at Kathy's words.\n\n.........................................\n\nFreddie, Vanessa, and Kathy spent the night at Maria's calming her down and filling her in about Eva. They explained all they knew about Eva and her personality, telling Maria that she didn't have a thing to worry about and that Don couldn't help but discover, with just one date, how Eva wasn't right for him. She totally ignored her own children, for heaven's sake!\n\nOn Monday night the Super Secret Security Directorate of the PDA met to make sure that their promises to Maria were going to be kept.\n\nFreddie was waiting for her friends in the parking lot of her studio. Kathy and Vanessa arrived at nearly the same time. Freddie and Vanessa both greeted Kathy with fierce, warm hugs when she got out of her car.\n\n\"How are you doing, Kathy?\" asked Freddie with a worried expression on her face while Vanessa looked on with the same air of concern.\n\n\"I'm doing okay, honest, but I would prefer to talk about why you sent me that emergency text message about Maria and Don?\"\n\n\"All right, but we're going to talk about you next, so don't try to run off. As for Maria and Don, we've got a little problem with his date with Eva that could turn into a big problem.\"\n\n\"Oh, what's that?\" they both asked.\n\n\"In order to stop Eva or any other women from getting their claws into Don, we are going to need help, especially if we want to do it safely. My sister, Helga the mad scientist, has been working on all types of crazy inventions. I was supposed to keep it a secret, but she has sold some of them to the military and law enforcement. The kind of inventions that they have bought from her are what they call non-lethal weapons. I explained our problem to her and Helga is more than willing to help; in fact she is anxious to help. However, if she helps us we are going to have to make some big changes in the way we do things while she is here.\"\n\n\"What do you mean? What kind of changes?\" asked Kathy warily.\n\n\"I think you will pick up on them fairly quickly, but when she is not here we go back to doing it my way!\"\n\nThe two followed Freddie into the building but, instead of stopping in her studio, they continued on back to her storeroom.\n\n\"Freddie, why are we going to your storeroom and, what's with the small desk and coat tree outside the door now?\" Vanessa asked.\n\n\"I don't want to talk about it, Helga put them here. She has been in my studio all day, making a mess! I love her dearly, but my little sister is a nut!\"\n\nKathy thought to herself, \"You call her a nut while you're the one who has been making us do this Security Directorate nonsense and use code names from 'Animal House'! Then you wonder where she gets it from? Baby, I got news for you, it runs in the family. This is going to make such a wonderful paper!\"\n\nKathy and Vanessa were surprised when Freddie opened up the door to the storeroom to see that they were presented with a small closet with another door directly in front of them. Freddie opened up the second door and they walked into the old storeroom. It had been completely changed and looked like a traditional office now! There was a fairly nice, very large desk in front of them, a credenza with liquor decanters and glasses on top, two leather chairs in front of the desk and, to the right, a poster of Big Ben framed with drapes to give the appearance of looking out a window.\n\nHelga was waiting for them with a big grin on her face. She was dressed in a ratty old suit, white shirt and tie. With her abnormally large breasts, the appearance presented was bizarre. She stood up and greeted her visitors with a wretched fake British accent, \"'Allo, M, I've been waiting for you for some time.\"\n\n\"Q, I just had to brief Bond a bit. After all, we don't want to forget who is the boss here, do we?\"\n\n\"Ah, yes, quite right, quite right.\" \n\nQ turned to Kathy and said, \"Nice to see you again, Bond.\" Inside Kathy went ecstatic.  I'm no longer Flounder; this is the way it is supposed to be!\n\nVanessa, on the other hand, wondered what name she would be stuck with. Q turned to her and asked, \"Moneypenny, Felix Lighter, Jinx, or Octopussy?\"\n\n\"Shit, I knew it!\" Vanessa thought to herself. Octopussy was right out, but the other three? Damn, there has to be a Moneypenny, a Bond movie without her just isn't a Bond movie.\n\nMorosely, Vanessa picked, \"Moneypenny.\" This put an even bigger grin on Q's face.\n\nM took over, \"Right let's get to it, then. We can conclude from everything we've gathered about Eva that she is a terribly vain woman. She is so concerned about her appearance that she will go to almost any lengths to always look her best, frequently ignoring far more important matters. We also know that she has a fondness for light silk dresses. Bond, Eva has never seen you before and that's why you've been given this assignment, please explain the rest Q.\"\n\nQ then pulled out a small canister with a long tube attached; at the end of the tube was a small nozzle. \"What we have here is a device that I developed intending it to be an immobilizer. It didn't work out quite as well as I had planned, but it should be perfect for this operation. What it does when sprayed on a person is cause an instant state of static cling with their clothes, and it causes flyaway hair - to their hair, of course, ha ha. Also in the spray is a powerful, fast-acting glue; sadly, the glue didn't prove powerful enough to immobilize, but it is powerful enough to make the static cling and flyaway hair appearance seem to be permanent. All in all, it makes a person sprayed with this look quite ridiculous. Washing or dry cleaning the clothes will remove the glue, and the same thing for the hair, so it does no lasting harm, plus it is completely non-toxic and environmentally friendly.\"\n\nM took over the briefing, \"This is the plan, Bond. 008 is going to get access to her father's phone for a short time and bring it to Q in their apartment parking lot. Q has another device that she will use to take complete control of Don's cell phone. On the night of their date, 008 will call her father. Q will be in the parking lot of the club and will play with the connection forcing Don to leave the building in an attempt to get a better signal. This will, of course, leave Eva alone; Bond, you will take that opportunity to spray Eva with Q's device. Q and 008 will keep Don busy for at least ten minutes. We think that Eva will find the situation so intolerable that instead of waiting for Don, she will immediately leave and return home on her own.\"\n\n\"Moneypenny, you already know Eva. As a friend you will call her and congratulate her on dating Don. You will also mention how he likes to be driven around by beautiful women in sports cars. This will appeal to her vanity and, according to our reports, she really does enjoy showing off her Jaguar. We want her to have her own car there to make it easier for her to leave the club.\"\n\n\"Q, please show Bond how to use the device. Be certain to use the practice solution and not the real stuff.\" \n\n\"Helga, we're going to go off topic now, but this is really important. Kathy, how are things going with those three punks that attacked you? You've been really close mouthed about it since a couple days after the attack. You've been avoiding us for almost a week. I was glad when you showed up at Don's apartment on Saturday, but you still wouldn't open up, and I almost thought that you wouldn't be coming here tonight. We're your friends; we love you and want to help, so please tell us what is going on. We're getting very concerned, and I know Maria is going nuts worrying about both Don and now you.\"\n\nKathy looked at Vanessa who nodded fiercely in agreement, and even Helga, whom Kathy didn't know very well, nodded her head, too. She realized they were just trying to help her because they were her best friends, so she reluctantly began admitting to them what she had been going through.\n\n\"Things got kind of bad there for a couple of days. The punks' parents started threatening to sue Don and me, especially after the way Don busted them up. Don gave the bouncer a concussion, he smashed the cheek bone of the driver and damaged his eye socket, the creep he threw against the wall got a concussion, a broken shoulder and some busted ribs, and the last guy in the car with me got a severe concussion the same as the bouncer. Like I said, things were looking pretty bad.\" \n\n\"The parents have some bucks and they were pulling out all the stops to protect their precious little darlings,\" Kathy spat out, \"that is, until the police searched their homes. It turns out that I was at least the third girl they've tried this with. Sadly, the first two times they were more successful. The police know this because those idiots recorded their earlier rapes, and all four of them were in on it, including the bouncer. One of the girls is still in the hospital. She knew she had been brutally raped, and the cops did too, but she couldn't remember anything. She just had massive injuries to her ass and vagina. It wasn't because any of those shitheads was massively equipped; they just liked shoving in all different kinds of objects. They were a really sadistic foursome. It took the police a while to find the second girl, and she's in almost as bad a shape as well, but she was so ashamed of what she knew happened to her that she had been trying to cover it up by attempting to take care of herself. She blamed herself for getting drunk, not knowing that she had been drugged. All of a sudden the parents began running for cover. Their cars and houses were used for the rapes, and while they are in college and over eighteen, all three of their rapist kids are clearly still financial dependents of their parents. The two girls they raped have lawyers now and are suing them and their parents. I'm not sure how it is going to work out for them in the end, but we'll just have to wait and see.\" \n\n\"So, the parents have dropped all thoughts about suing Don and me, and are now lying low, hoping that we forget that they threatened us because they are afraid that we might sue them now, too. The DA doesn't expect that I will need to testify because the parents don't want the scandal of a lengthy trial and they're afraid of what the sentences could be if it goes to trial. With all the video it is a slam dunk for the district attorney, so they will probably negotiate something in a back room, and their darling children will be given a slightly reduced sentence in exchange for pleading no contest. That way the city will avoid the cost and time involved with a lengthy trial. Nonetheless, they are still going away for a long time. Don and I haven't wanted to discuss it because the DA asked us to be a bit circumspect in what we revealed. Those two poor girls want their privacy and don't want the world to know that they've been raped. I've wanted to completely erase it from my mind, but some nights I wake up shaking, thinking that if it hadn't been for Don's quick reaction and courage I would be one of those poor women, too. Don's respected my request not to talk about it. I'm really sorry, I know you're my friends and are trying to look out for me, and I should have talked to you earlier, but I just wanted to bury it all.\"\n\nFreddie finally spoke up, \"Kathy, I think you're being really silly and are just hurting yourself by bottling it all up inside. As a would-be shrink you should know that you need to talk to someone; maybe not us, but someone. We're all family even if we don't share the same blood; you've been hiding from us for almost a week. All three of us have separately stopped by your apartment more than once looking for you last week, and I don't know how many phone calls and text messages we've left that you haven't returned! You don't have to talk to us about that night, but we need to know that you're at least alive and breathing. We are more than willing to give you any help that we can provide, the sky's the limit, and if you ever wake up in the middle of the night shaking again, you call any one of us, even Maria. Got it?\" she glared at Kathy.\n\nKathy ashamedly nodded her head in agreement, \"Yes, thank you all.\"\n\n\"It might be a good idea, too, if you move in with one of us for a short while. We all have extra bedrooms, so please think about that. If you start having a bad night, you can drive to one of our homes and just let yourself in; you've got keys to all of our places. I'll fill Maria in on everything that you told us; she's been frantically pestering the two of us, asking if we've learned anything about that awful night. You might think that she has been completely focused on Don, but she's been very concerned about you and, while you don't have to retell your story to her, you might want to give her a call and let her hear your own voice so she knows that you're okay.\" \n\n\"All right, I understand and, again, I'm so sorry for letting you all worry so much about me \u2013 thank you all so much for your friendship, you are great friends!\"\n\n\"We love you, Kathy, like I said, and even though we're not blood related, I've always considered you to be one of my idiot sisters, just like Helga.\" \n\nHelga jokingly yelled out, \"Hey, I resemble that remark!\" but Freddie just grinned at her and continued, \"I know that Maria has always felt the same, and as for Vanessa, I think she's an alien and I'm not sure if they even have sisters.\"",
        "Vanessa replied, with an equally silly grin plastered on her face, \"We aliens don't have sisters, only fellow pod people and, Kathy, you're a pod sister to me, too. I think that with all this sisterly bonding going on we should perform the PDA secret handshake; we haven't done it in awhile.\"\n\nFreddie loudly agreed, \"I think that's a great idea!\"\n\nKathy just recoiled in horror while Helga asked, \"What secret handshake?\"\n\n...................................................\n\nI don't know what to do! My friends have promised me that everything is going to be all right, but MY DON IS GOING ON A REAL DATE WITH ANOTHER WOMAN! I wailed inside while I cooked dinner at his apartment waiting for him to come home Wednesday evening.\n\nWhat's worse is that they've convinced me that I've broken his heart. I knew as soon as we met that he had a strong primal reaction to me, but he had seemed to calm down so quickly that I had thought it just a momentary thing. I never knew that it was love that he felt for me!\n\nBefore Megan and Robin had gotten home from school I searched his home, looking for something to verify what my friends had said. I found it in his bedside CD player/radio/alarm clock. It was a CD labeled \"My Music\" and it had only two songs on it. One was by Ray Charles and the other was by Joe Cocker, and they were two different versions of \"Unchain my Heart\"! What have I done?! \n\n.........................................\n\nEva was so pleased; Don had complimented her extensively on her appearance and her car. He had seemed to totally relax, lean back and luxuriate in the expensive leather seats with a beautiful woman driving. Vanessa had been such a good friend to give her a call and tell her Don's preferences. Eva had been so happy that she decided to give Don a little thrill and give his thigh a rub with her hand. When she got dangerously close to that place, he had blushed so prettily, and his pants had even bulged a little bit.\n\n\"Would tonight be too early to sleep with him?\" she thought to herself. She had slept with plenty of other men on the first date, but she intended Don to be a keeper. \"Well, I'll just have to wait and see how the evening goes,\" she decided.\n\nThings were going nicely at the jazz club, too.\n\n\"You look stunningly beautiful in that blue silk dress, Eva.\"\n\n\"Why, thank you Don; you look pretty good yourself.\" Yes, sleeping with him tonight wouldn't be bad at all! I'm going to show you so many things, Donald. \"Do you enjoy jazz, Don?\"\n\n\"Quite a bit actually, but I don't listen to it much. I don't know why. Other forms of music, at least for me, evoke or even provoke emotion. Music can make you sad, angry, happy, and so on, as is well known, but occasionally I just want to listen to the music and leave my emotions behind. With jazz, I can do that. I don't feel anything but the music; sometimes I almost feel that I become the music.\" Don wiggled his eyebrows and grinned, \"It is all together a 'groovy' experience.\"\n\n\"I'm so glad you enjoy jazz and agreed to go out with me. I'm very much into the local social scene, you know, and I can show you many, many things,\" Eva briefly reached across the table to brush the back of Don's hand.\n\nDon was suddenly uncomfortable with the conversation and attempted to change the topic to something much safer, \"Vanessa mentioned to me that you've got two children from your first marriage. I imagine that they are just as pretty as you are.\"\n\nNice compliment, but why did he have to bring up my kids? \"Oh, yes, my babies are quite attractive. When I saw them a month ago I couldn't believe how much they've grown.\" Why did he suddenly frown?\n\nDon could feel the frown on his face and took a sip of his soda water to mask it and to give him time to change his expression. \"Oh? What grades are they in at school?\" \n\nDamn it, I don't want you to talk about them, you numbskull! I want you to talk about me! Things were going so wonderfully, why did you have to change the topic? \"I think my youngest is in third grade and I'm pretty sure that my oldest is in fifth.\" Why is he still frowning like that?!!\n\nStartling them, Don's phone suddenly rang. \"Hello? ... Hi, Megan, I can barely hear you. ... Megan, Megan? Damn it, I lost the connection.\" Don tried to call her back, \"Megan....\" but the connection was dropped again.\n\n\"I'm terribly sorry, Eva, I've got to get outside and see if I can get a better connection. My daughter called me and I'd better see what the problem is. I'll be right back.\"\n\nKathy, hidden in the back of the room, got a text message on her cell phone signaling the operation was a go. Calmly, she walked to Eva's table. The canister was attached to Kathy's belt and hidden underneath her jacket. The tube ran from the canister and down the sleeve of her jacket, ending with the nozzle attached to her wrist. Kathy curled her fingers tightly and hit the button to extend the nozzle length just past her fingertips. Passing slowly behind Eva's chair, she activated the device and sprayed her from her knees to the top of her head with a practiced motion that looked like Kathy was just raising and lowering her hand after checking her own hair. The hand movement was very deceptive; Kathy and Helga had spent a couple of hours getting it just right to ensure maximum saturation of a seated target.\n\nThe effect was almost instantaneous. Suddenly Eva felt slightly confined by her clothes and her head felt funny. She stood up to check out her clothes. What the hell is wrong with my clothes? This is the worst case of static cling I've ever seen in my life! My dress is clinging so tightly you can even see the outline of my panties! Patting her head to see what was wrong with it, she could feel that her hair was puffed out. People were beginning to stare, and not in a good way, and some of them were even laughing at her!\n\nRunning to the ladies room, she gasped in shock when she saw her reflection in the mirror. Her hair was so wild looking that she looked like that old comedienne, Phyllis Diller, on a bad hair day; and her dress was sticking to her so tightly it made her look like a mummy. Thanking herself for always being prepared, she pulled a dryer sheet out of her purse to run over her clothes in order to remove the static cling, but it had no effect! She splashed water on her hair and clothes, still nothing changed. The other women in the ladies rooms were beginning to giggle and offer stupid advice. I have to get out of here! I am Eva, owner of one of the most successful clubs in Seattle; if this gets out I will be a complete laughing stock! She was mortified by her appearance and was sure that she didn't want Don to see her like this, but since she brought him here, she was obligated to least take a quick look and see if he were back yet.\n\nDon, in the meantime, was helping Megan out with a computer problem that Q had coached her on, so that Megan could finish her homework. The \"problem\" with his phone had forced him to walk almost a hundred yards from the club in order to get a good signal.\n\nEva quickly scanned the club and, not seeing Don, left by the back door to return to her home, mumbling aloud that he could just take a taxi!\n\nHappy that he had just helped his daughter, Don returned to his table. Not finding Eva there, he assumed that she was in the bathroom. He waited for almost a half hour before deciding to give her a call on her cell phone. Thankfully, for some reason Don's phone was now showing a lot of bars. However, when he called Eva, thanks to Q, he got no answer. Being very embarrassed, he asked several women entering the ladies room to check for his date. They returned to report that she wasn't there. Finally, Don figured out that he should check the parking lot for Eva's car and discovered that it was gone. Once again Don tried to call her and got no answer. Remembering what had happened to Kathy, he grew concerned that something terrible had happened to Eva. He was even considering calling the police, but he first decided to call for taxi and return to Eva's club and check for her there. During the taxi ride he continued to try Eva's cell phone with no answer, never noticing that he was being closely followed by another car that was being driven by a woman with abnormally large breasts.\n\nNo one at Eva's club had seen her. Making up his mind, Don finally decided to give Eva one more phone call and if she didn't answer he would call the police.\n\n\"Eva, is that you? Are you alright? I've been very concerned! What happened, do you need help?\"\n\nIt had been an awful night; at least Don was worried about her! \"Oh Don, it was terrible! My clothes, my hair, I was a complete laughing stock!\"\n\nDon assumed that someone had spilled some food or drink on Eva, leaving for home suddenly when you can't find your date is understandable in those situations. \"Calm down Eva, what happened?\"\n\n\"Don, my hair was all frizzed out and my dress was clinging to me so tightly, it was just so embarrassing!\"\n\nHe was puzzled for a moment. \"Eva, are you talking about static cling?\"\n\n\"Well, yes, but it was the worst case I've ever seen!\n\n\n\"Eva, why didn't you just wait for me in your car or give me a call or answer any of the ten calls I've made to you in the past hour?\" Don asked irritatedly. Don was already seriously troubled by Eva's answers regarding her own children, and now this?  I'd rather stay single for the rest of my life than hook up with her!\n\n\"Eva you're a very beautiful lady, but I don't think things will work out between us. There are all types of people in the world, and I think that we are just too different. For example, while I'm certain that you love and will always look after you children's welfare,\" No, I'm not certain at all, but I don't want to be insulting, \"frankly, you don't seem very interested in their day to day lives, whereas mine are the center of my existence and I couldn't bear to not hear from them at least once a day. Thank you for the date, you certainly looked beautiful. I sincerely hope that you get your static electricity problem under control and can relax for the rest of the evening. You're a pretty woman, Eva, and you're going to make some guy who is much more your type a lucky man.\" \n\nDamn! He's right, though; our differences in how we regard our children truly are too big to overcome; too bad that wasn't uncovered in the investigation. Well, I guess I'd better be gracious; I don't want to offend potential customers. \"I'm afraid you're right Donald. You're a lovely man and a wonderful dancer, but I guess I did forget about having compatible personalities. Even though it looks like we will never be special friends, I hope that you will not begin avoiding me, and please do keep coming to my club.\"\n\n\"You can count on it, Eva, but I'll just say goodbye now.\"\n\n\"Goodbye, Donald.\" \n\nDon hit the end button on his phone. That was a narrow escape! Now I need to wash my mouth out with soap for telling so many lies.\n\nQ, after listening to the conversation, called M to report the end of a successful first mission. Q hoped that there would be more field tests of her inventions, they were such fun!\n\n............................................\n\nI sat on my bed rocking myself while holding my pillow.  I had waited too long and been too much of a coward, and now I was going to lose him. My cell phone started ringing and I almost didn't answer it until I saw it was Don that was calling.\n\n\"Hi, Maria, do you have time to talk?\"\n\n\"Always, Don.\"\n\n\"Thanks, Maria, I really need to talk about this. You know that I've never been on any real dates except for my ex-wife, but this date I had tonight was so terrible that I have just got to talk to someone to see if this is normally acceptable behavior.\"\n\nTHE DATE WAS TERRIBLE! My heart lifted and it was like spring had just come into my bedroom, with flowers in full bloom and the birds singing in the trees. Putting a concerned tone into my voice and trying to hide my glee, I replied, \"Tell me all about it, Don, it must have been awful.\"\n\n\"First, the woman was absolutely the most self-centered and vain human being that I've ever met in my life!\"\n\n\"Oh, she was? That's too bad.\" Yes, yes, yes! Mooria, Mooria, Mooria!\n\n\"She hardly ever sees or even knows anything about her own kids! How can a mother behave that way? What would she be like around my daughters? I could never be close to a person like that!\"\n\nOh, this bitch is toast! Uber Father doesn't appreciate derelict parents.  \"Don, I absolutely agree with you, I can't see how any mother could behave that way, and you definitely don't want anybody like that around Megan and Robin!\"\n\n\"During our date, Megan called and I had to walk outside to get a better cell phone connection. While I was gone, and it was only for a little while, she left the club and went home without even telling me she was leaving \u2013 I had to call a cab to get back to my car! It took me over an hour to reach her and she gave me some bullshit story about leaving because she was suffering from a severe case of static cling! Have you ever heard of someone using that excuse before?\"\n\nThis just gets better and better, she leaves Don and tells him it is because of static cling! Wave goodbye, Eva, and don't let the door hit you in the ass!\n\n\"Why, Don, I've never heard of anything like that happening before, the woman must be nuts! Was there anything good about your date at all?\"\n\n\"Hmm, let's see; she wore a nice blue silk dress, but it couldn't disguise her complete self-centeredness. She drove a sharp car and drove me to the jazz club; I kind of got a kick out of that. Both Vanessa and Freddie did the same. She took me to a jazz club, and I like jazz, but then again I like all kinds of music. So three things were nice with the evening, but IT WASN'T ENOUGH! I will never go out with that woman again, and I hope never to be in a situation where I'm alone with her again!\"\n\n\"Oh, so you like blue silk dresses?\"\n\n\"What can I say, I'm a guy. I like women to wear dresses instead of pants. Blue is really nice but so is red, yellow, black, in fact all the colors are okay, but I think I like green the best, though.\"\n\nMental note made, Don likes green! For the next forty minutes I had such a wonderful conversation with Don that it really lifted my spirits and I slept so well that night. We talked briefly about Robin's upcoming birthday and decided that since it was falling on a Monday we should celebrate the weekend before. We were probably going to have to do the same thing with Megan's birthday the following month, since it was on a Tuesday.\n\nPlus, this weekend they are all coming over here to my condo to use the facilities at my complex, especially the pool. The management here has set up the pool area to look like the tropics with potted palm trees and such. Megan and Robin will get such a big kick out of it, and I'll finally get to see Don in the new swimsuit I bought for him, Rrrarh! I just wish I had my own abs back in shape, but I'm working on them!\n\n..............................................\n\nI felt a little uncomfortable going to Maria's condo for the weekend; somehow it felt different from going to her mountain home, but Megan and Robin were really excited. According to Maria the pool area was really decorated up nicely and it would be kind of pleasant imagining ourselves in the Caribbean instead of Seattle with all the cold, dreary rain we've been having lately. Getting Maria as a friend was one of the best things to ever happen to the three of us. I just wish the two of us could have been more than just friends.\n\nMaria met us at the entrance of her building and took us straight to the security desk. She made it clear to the people there that we were her special guests and that we were to be granted access to all the complex facilities, as well as her condo, on a permanent basis. The guards there even took digital pictures of the three of us in case we showed up without our keys. I thought it was a bit extreme on Maria's part, but the gesture sure was nice.\n\nThe pool must have been twice the size of an Olympic size swimming pool. It was located on the roof, of all places, and was completely enclosed. It had a twisty, funny shape to it with areas for serious lap swimming as well as others for goofing around. Maria said that on nice days they sometimes retracted the roof. There was a bar in one corner and an open grill type restaurant in another, plus a free buffet table setup against the wall farthest from the pool. A small band was playing Calypso music by the bar. Tables, chairs and lounge chairs littered the area. I was beginning to wonder what Maria's yearly maintenance fees were for this place!\n\nWe had taken the elevator up to the pool area, wearing robes over our swimsuits, and flip-flops on our feet. When we took our robes off I was absolutely stunned by Maria's sexy body. For a brief moment the wolf was back, or maybe, considering the nearby pool and my desire to let my hands roam all over Maria's body, it was an octopus. \n\n\"\u266b Unchain my heart, Baby let me be \u266b\"\n\nMaria had been staring strangely at me and suddenly she got a very odd expression on her face, it looked like a combination of shock, dismay and sorrow. She rushed off without a word to the ladies room.\n\nOh shit, my staring had really offended her, just when things were going so well. Way to go, Don, you dork!\n\n........................................\n\nDAMN, DAMN, DAMN, HE REALLY DID IT; I can't believe he DID it, He sang that damn song to himself while looking at me! His heart is breaking and I can't tell him that I love him too, not yet. I'm simply not ready to tell him about my past. I've got to get my head on straight first! Shit, admit it, Maria, you need help, it is way past time to get your ass to a therapist!\n\nI ran to the ladies room and locked myself in a stall. Get control of yourself Maria, Don is going to think you're mad at him and your girls are going to wonder what is going on. You don't have much time. Get it together girl! \n\nIt took every bit of modeling training that I had ever had to put myself back together and put a smile on my face, but I got out of the bathroom in less than ten minutes. Don was waiting outside the door with a really worried expression on his face.\n\n\"Maria, I want to apologize for staring at you that way. It's just that you're so beautiful that I can't help myself. I really apologize. If you want me to go home and leave the girls here for the weekend, I would be happy to if it will make you feel more comfortable.\"\n\nI wanted to grab him and kiss him, I wanted to run back to the ladies room and cry, I wanted to collapse in his arms and sob out my painful past. Instead I gently put my hand on his cheek.\n\n\"Don, you didn't offend me at all. I was really flattered, actually, that you found me so attractive, but my stomach acted up a bit and I am stressed out a little by some personal things. That's why I had to run to the ladies room. Please don't think that it was your fault, it really wasn't at all, and I'm really sorry if it appeared that way. So, don't you dare go running for your apartment, I would be devastated if you did. It would make me feel like it was all my fault, that I had scared you away, and I would have a terrible weekend without you, okay?\"\n\n\"Okay, if you're sure?\"\n\n\"I'm absolutely positive.\" \n\n\"All right, but if you need any help with these 'personal things' that are putting too much stress on you, I would be very flattered and more than willing to help, if you asked.\"\n\n\"Thank you, Don, one day I just may take you up on your offer.\" Then, just in case, I took his hand. I wanted him to know that he hadn't made me angry and I wanted to make sure that he didn't run off. Maybe it was a weird thing for just \"friends\" to do, but screw it; I could at least do this much for him!",
        "I stayed glued to Don for the entire weekend, especially at the pool. He looked mighty fine in his swimsuit. In fact, he was the best looking guy there all weekend long! Many of the other female tenants were staring at him, almost literally drooling with their tongues hanging out; I had to make sure to guard my territory! Turn my back for a minute, and one of them might slip him their phone number or even take his hand and lead him to one of the fake cabanas they've got set up!\n\nI cheated, though, when it came to meals, and I only made breakfast that weekend. For dinner on Friday, and for all the lunches, we ate by the pool. I took them out to dinner both Saturday and Sunday to two of my favorite restaurants. I had told them all to bring their best dress clothes. Megan and Robin had such a great time dressing up in the clothes that I had helped pick out and bought for them that I couldn't help but laugh; they looked so pretty, like a couple of sparkling princesses. They were really excited to be going out to such extravagant places, and I even got to see Don in the suits that I had picked out for him. He looked scrumptious! I'm going to have to get him a tux, too, really soon.\n\nI didn't want to drive, and I thought it would give Megan and Robin a thrill, so I arranged for limousines to take us both nights. I was right, Megan and Robin were awestruck. Just stick with me kids and I'm going to show you the world! \n\nThe hosts, hostesses and managers at both restaurants came to our table to ask why I hadn't been by lately. I pointed at Don and said it was his fault; he's such a great cook that I don't need to go out to eat as often.\n\nMarilyn, a young attractive hostess at one of the restaurants, looked at Don, licked her lips and quietly said to me, \"And he cooks, too?\" I won't be able to go back to that restaurant with Don safely until I have his ring on my finger. He's a complete hunk now; maybe getting him chiseled wasn't such a good idea after all!\n\nThen I had a really frightening thought. What about all the other women he meets when I'm not around?\n\n..............................................\n\nWe all had a great time at Maria's condo, even with the ever present gray skies; a vacation to a fake tropical paradise was awfully nice. I swear that Maria practically waited on me hand and foot for the entire weekend. I think she was trying to make up for her earlier strange behavior. I talked briefly with Maria about Robin's upcoming birthday on the eighteenth because I wanted to celebrate it on the Saturday and Sunday before, and Maria begged me to let her handle it; she also wanted me to bring some special game equipment to her home when we came. \n\nOn Tuesday night at Vanessa's gym, one of her customers, Gwen, approached me.\n\n\"Hey, Don, did you bring any cookies tonight?\"\n\n\"You'll have to ask Vanessa if there are any left. I don't leave them at the receptionist counter anymore; I leave them in her office instead. She says that is the only way she can make sure there is only one to a customer.\"\n\n\"Damn, I only took three that one time and now she starts rationing them. How's your workout going?\"\n\n\"Just fine, I'm running at eight miles an hour now. I was happy at seven and a half, but Vanessa keeps pushing me.\"\n\n\"Yeah, Vanessa can be a real slave driver, but she does get results and that's why she gets so many customers. Don, are you doing anything this weekend?\"\n\n\"I'm not sure yet. How about you, do you have any plans?\"\n\n\"No, I've got nothing going on either Friday or Saturday night.\" Hmmm, was she hinting that she wanted me to ask her out?\n\nI hesitantly said, \"Friday night..\"\n\n\"Why, Don, I would be happy to go out with you Friday night. Here's my address and my cell phone, pick me up about seven okay?\"\n\nBemusedly and just a little stunned, I said, \"Okay.\" I wasn't certain if I had asked her out, or had she asked me?\n\nVanessa returned from her trip to the ladies room just as Gwen walked away.\n\n\"What was Gwen talking to you about?\"\n\n\"Just the normal chit-chat, but I think I asked her out, or she asked me out, for Friday night. Maybe this will turn out better than my last date?\" \n\nVanessa seemed a little nonplused when I mentioned my date with Gwen, and took a long time replying.\n\n\"Oh, well I hope things go well for you, too. What time are you meeting her?\"\n\n\"Seven PM at her home. I'll have to give her a call to see what she wants to do.\"\n\nFor some reason Vanessa completely changed my workout for the rest of the night. It was brutal, almost like she was punishing me.\n\n...........................................\n\n\"Don, it's Maria.\"\n\n\"Hi, Maria how are you today?\"\n\n\"Just fine, thanks. Don, this is going to be a terrible weekend for horseback riding in the mountains. We had such a good time at my condo that I thought we could have another weekend here, and have Robin's party here, too?\"\n\n\"That's a wonderful idea, Maria, thanks. I know Megan and Robin will be excited.\"\n\n\"Tell them to bring their best clothes again, and you bring your good suits.\"\n\n\"Okay, but I've got a slight problem.\"\n\n\"Oh? What's that, Don?\"\n\n\"I hate to ask you to be a baby sitter, but can I drop the girls off early Friday evening? I've got a date that night at seven. .................... \"Maria, Maria - are you still there?\"\n\n\"Why, of course I am, Don. I'm sorry; I had another call break in for a second. I would be happy to babysit, and after your DATE, you can come back here and tell me all about it.\"\n\n\"Thanks, Maria, I really appreciate it. I'm not really certain how this date happened, but she seems like a nice girl.\"\n\n\"Okay, then, I guess I'll see you tonight for the girls' therapy session.\"\n\n\"Thanks a lot, Maria, see you tonight.\"\n\n\"Vanessa, it's Maria. Don's got another date! What am I going to do?\" Maria wailed.\n\n............................................\n\nMI-5 Satellite Office, Seattle, Washington \n\nWednesday Evening\n\nThe sounds of Big Ben could be clearly heard in the office.\n\n\"Moneypenny, do you have something to report?\"\n\n\"Yes, M, Gwen has successfully tricked Don into asking her out. They have a date planned for this Friday night at seven.\"\n\n\"Gwen is a very dangerous problem. I know you like her, Moneypenny, but she is under the influence of the Evil Twins, and they've been out to get Maria ever since the three of them met. Those two have always been jealous of Maria's success, and they're the ones that sabotaged her career. Those two bitches thought they were at least as beautiful as Maria, which may well be true, but they could never figure out why she was always picked over them for jobs and given the limelight. They never understood that part of the job was poise and attitude, and they had all the poise of a one-legged dog coupled with the attitude of a couple of piranha. With the personalities that those two have, it always amazed me that Joanne and Anna could even be friends with each other.\"\n\nBond interjected, \"That's because Anna has acknowledged Joanne's superiority and accepted her as the boss. They're both similar in looks and viciousness, but Joanne is absolutely brilliant, and Anna knows it. Look at how she turned Gwen into their unwitting stooge. A lot of people have been trying to show Gwen the truth about them, but she is completely in their thrall. I have never understood people who could be so arrogant that they would look at every little setback as a personal attack on themselves, and that is what Joanne and Anna do. If everything doesn't go their way they find someone to blame, and, when it comes to their failed modeling careers, they blame Maria and are still out for revenge!\n\n\"That's why I've never let those two join my club. They've never been personally nasty to me, but what Joanne and Anna did to Maria has made them my enemies, too. Gwen, on the other hand, doesn't have a mean bone in her body, and she has a tendency to see only the good in people. She's really a wonderful person and I would have no problems with her if only she didn't associate with those two bitches. What's worse is that anything she knows, they immediately know. They've always had a tremendous amount of influence over her. It is possible and probably likely that, if they know about Don and Maria, they encouraged her to ask him out.\"\n\n\"Well, it sounds like we definitely need to take care of her. Q, do you have any ideas?\"\n\n\"Sure. Moneypenny, do you ever go to lunch with Gwen.\"\n\n\"Yes, at least one per week.\"\n\n\"Perfect, I have just the device here. Bond, Moneypenny, if I can please have your attention?\"\n\nQ brought out something from her large briefcase that looked like a stainless steel PEZ dispenser. \"This device dispenses a special herbal pellet that I have devised. The dispenser is vacuum sealed because the pellets immediately start breaking up as soon as they contact the air. Warm foods speed up the process even more, so if you shoot a pellet or two into Gwen's food and then give the food a quick stir, she will never notice the added ingredients. The pellet and dispenser system is extremely rapid compared to sprinkling the herbs into her food. Let me demonstrate.\" \n\nQ quickly shot two pellets into her hand, demonstrating the speed and accuracy of her device. \"You may practice with it, but be warned there are only ten more pellets in the dispenser and, being vacuum packed, it is quite difficult for me to load.\"\n\nMoneypenny spoke up at that point, \"What do the pellets do? I'm not going to poison her!\"\n\n\"Oh, I did forget to mention that. Flatulence, it causes intense, foul, prolonged flatulence, especially if she eats meat that day. Two to four hours after ingesting the pellet she will come down with extreme flatulence. It will only last for another four hours, but it will be so foul that she won't want to be in her own presence, let alone go on a date with someone. It will not do her any lasting harm and actually, in the long term, will be quite good for her digestive system. I myself use it occasionally in a far weaker dosage. Be warned, the maximum dosage is two pellets; three pellets can cause an intense and very painful stomach upset.\" \n\nM took over again, \"Moneypenny, sometime between two and three on Friday afternoon, you will take Gwen out for a late lunch. You might use the excuse that you know a lot about Don and you want to give her some helpful information. Bond, I don't know if you're available, but if you are, you might accompany Moneypenny; that way one of you can act as a distraction, while the other spices up her food, so to speak.\"\n\n...........................................\n\n\"You're right, Vanessa, this little place does serve the best authentic Mexican food I've had in a long time. Thanks for inviting me, and it's nice seeing you, too, Kathy, it has been a long time.\"\n\n\"Nice to see you, too, Gwen. I'm just sorry I arrived so late and we couldn't get here until three.\"\n\n\"No problem, Kathy.\"\n\n\"Excuse me, please, I have to step into the ladies, but I'll be right back so don't eat any of my food, you two!\" Gwen laughed at her own little joke and walked off.\n\nVanessa and Kathy exchanged looks. This is too easy, it's almost as bad as drowning a bag full of kittens!\n\nThe flatulence pellets struck Gwen at six thirty while Don was on the way to pick her up.\n\nOh my god, oh my god, why won't it stop? Phap-Phap-Phaaaaart, Phap-phaaaart! The smell is going to make me throw up!\n\n\"Hello, Don, it's Gwen. 'Phap-Phap-Phaaaaart' Don, I'm sick and I don't feel good! I need to cancel our date. 'Phap-Phaaaaart' I'll talk to you later, okay? Goodbye.\"\n\nDon was close to Gwen's house by that time, so he decided to drive by and see it, just for future reference.\n\nGwen reached the conclusion that she couldn't stand the smell in the confined environs of her own home, so she decided to go for a run in the nearby park, hoping she could at least stay ahead of the odor. She left her house; little realizing that she was just starting the longest run of her entire life!\n\nNot knowing what Don's car looked like, she ran right by it without noticing. Don, on the other hand, clearly recognized Gwen as she ran down the street in the direction of the park he had just passed. He could see that she obviously seemed to be terribly ill, only a truly sick person could run as fast as she was going! He failed to notice how dogs and other animals seemed to shy away from her, and people seemed to stagger as if they had been struck when she ran past them.\n\n.............................................\n\n\"Don, what are you doing back so soon?\" I couldn't believe it; he had been gone less than an hour after dropping of Megan and Robin!\n\n\"I guess I'm no good at this dating thing. I was sure that Gwen wanted to go out with me. But she called at the last minute and said she was sick. I was so close to her house that I drove by it and saw her out running. I don't know of anyone that goes out running when they are sick.\"\n\n\"I'm so sorry, Don, that you are having such bad luck with dates. I'm sure that you're going to find the right woman soon.\" And I'm it, you big dummy! When I had cried to Vanessa on Wednesday, she told me not to worry because she, Freddie and Kathy would take care of things. Are they doing something to sabotage Don's dates? Hmmmm.\n\n\"Maria, you've probably already eaten, haven't you? I'll just run out and get something and come right back.\"\n\n\"No you don't, there is a fantastic pizza place that delivers and is close by. I've also got some of Carl's beer, too. You sit down and relax after your disappointing evening and we'll watch some television. I think I noticed some shows on either the History channel or TCM that you might like.\"\n\n\"Thanks, Maria, I really wasn't too sure about this date anyways, but the way she blew me off is kind of insulting.\"\n\nMy poor baby's date was a bust. Heh, heh, heh, isn't that such a shame!\n\nThat Saturday night we all went to the most elegant restaurant that I know, and again we were chauffeured. At the end of meal, when the cake was brought out, we were joined by some of the staff with the best voices in singing happy birthday to Robin. When Robin blew out the candles, we and the patrons at the surrounding tables all applauded. Robin appeared to have a glorious time and I wanted to show off my family to the world. However, I was getting nervous; there was probably someone in this restaurant right now that knew my reputation! What if they came over, or merely just started speaking loudly? What would I do?\n\nAfter the cake we went back to my condo and Robin opened her presents. She got the usual things - clothes, video games, CDs and DVDs. I got her two extra presents though, one big and the other small. I gave her the small one first. She opened it up and cried when she read the inscription in the beautiful platinum locket that I had Kevin order for me and inscribe himself. Inside was picture of Robin, Megan and me blowing out the candles of my birthday cake, and the inscription read, \"Thank you Robin for letting me be a part of your life. All my love, Maria. 5/18/09\"\n\nAfter giving me a big hug and a kiss, she opened up the second box. Inside was a specially crafted Nerf gun constructed by Freddie's mad scientist sister, Helga. It had an ammo drum on it that could be quickly changed, and the drum held one hundred rounds of ammo. Don and Megan were getting their guns out of their hiding places as I quickly pulled out my guns, one of which was a duplicate of Robin's. I looked at her and said, \n\n\"Do ya feel lucky, punk?\"\n\nAfter two hours of screaming and yelling, my neighbors called security on us, those spoilsports! I secretly had Helga working on a special gun for Megan for her birthday, too; of course I made sure that I would get my own copy, heh heh heh.\n\nOn Sunday we had another party, but this time I cooked everything. I made lasagna, Italian sausage (from Don), mushrooms and garlic bread. For dessert I served THE CHEESECAKE to the muted sounds of cows lowing gently in the distance.\n\nThen, on Monday morning I got up extra early to make breakfast, since we had a long drive to school, and we sang \"Happy Birthday\" to Robin. Don went straight to work from my condo while I drove my girls to school. Robin was proudly wearing her locket; I knew that she would probably take it off so Barbara didn't see it tonight, but that was okay, too.\n\n.............................................\n\n\"Hello, is this Don Hendricks?\"\n\n\"Yes it is, can I help you?\"\n\n\"Mister Hendricks, my name is Anna Wainwright, I'm an interior designer. We have some mutual friends and contacts that gave me your name. I used to work with Freddie and Vanessa, back in my modeling days. I was told that you do some website designing, and I've looked at the sites that you've created. I've been very impressed, especially with the one you made for Freddie, and I would like you to design a website for me.\"\n\n\n\"I don't work at that professionally Ms. Wainwright; I was just doing that as a favor for some friends.\"\n\n\"Please, call me Anna. May I call you Don?\"\n\n\"That's fine with me, Anna.\"\n\n\"Don, I was actually hoping that we could work out a trade for services. I heard that you are going to be constructing a new apartment building. I could advise you on the internal design of the apartments, suggesting colors, flooring and such that would make them more attractive to potential renters thus getting you full occupancy more quickly. That way I could save money and you could make money faster.\"\n\n\"Anna, you've hit me in my soft spot; a trade for services sounds very good to me.\"\n\n\"I'm glad you like my idea, Don. Could we meet this week to discuss it?\"\n\n\"I'm normally pretty busy and the only time that I really have available is Monday evening after eight. I have an hour long meeting that starts every Monday evening at six thirty, but I am free after it is over, so we could get together then next week, if that is okay with you?\"\n\n\"Don, today is Monday, can't we meet this evening?\"\n\n\"Well, I am free tonight, but I didn't want to rush you.\"\n\n\"Great, I'll send you a text message with my address and we can meet at my condo at eight tonight, will that be alright?\"\n\n\"That sounds good to me, Anna; I'll see you at eight.\"\n\n............................................\n\nJoanne was right, Anna thought. If I had tried to buy his services he would have refused, but a trade of services, he went for that.\n\nThat bitch Maria has always stolen the best jobs, best boyfriends and been the star of whatever shows we did work together, but when her parents died, she went a little crazy and we made sure to spread the word spoiling her reputation and image, after our spies reported to us what she was doing! That sure took care of her little party.\n\nThen she finds and marries Richard, who turns her piddling inheritance and savings into a fortune. When she divorced Richard, the stupid bitch did the same thing, so we got her good again and told everyone about the Double Mint Girl. All her friends and contacts in this whole damn city know about her now!\n\nGwen mentioned to us a couple of weeks ago that she had seen Maria in the gym with a good looking guy, so Joanne hired the same private eye to follow Maria around again. It turns out that Maria has been spending a lot of time with this Mister Hendricks and his daughters. Well, I'm going to REALLY stick it to her this time by stealing Donny boy away from her. In his pictures he looks pretty damn fine, too, so I just might keep him.\n\n. . . . . . . . . . . . . . . . . . .\n\n\"Anna, I'm Don Hendricks. Is this still a good time to meet?\"\n\n\"Certainly, Don, thank you for coming over on such short notice. Please come in. Would you like anything to drink?\""
    ],
    "authorname": "CastleStone",
    "tags": [
        "cheating wife",
        "cheating",
        "betrayal",
        "romance",
        "food"
    ],
    "category": "Loving Wives",
    "url": "https://www.literotica.com/s/sophia-pt-04"
}