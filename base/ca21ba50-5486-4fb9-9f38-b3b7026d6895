{
    "title": "Succubus Summoning 112",
    "pages": [
        "/**\n\nAUTHOR'S NOTE This is a continuation of the Succubus Summoning series that begins with \"Succubus Summoning 101\"\n\n*/\n\nPhil came to. He was somewhere dark and moist. Wherever he was he felt warm and very relaxed.\n\nBefore this he remembered being in Rosa's chambers, the succubus's body entwined tightly around his. Flames had raged around them and Rosa's body had burned with blazing desire, but in the midst of it he'd felt cold, ever so cold. Succubi were daemonic sexual vampires. They drained a man's life force through the act of sexual intercourse. Rosa had sucked so much of his energy only the barest flickers of life remained in his emaciated form. She said she wouldn't kill him this time, but maybe she'd misjudged.\n\nNo, he was still alive.\n\nHe felt like he was sitting upright in a bath of warm honey. A body, soft and warm, sat astride him, their legs crossed behind him. A thick membrane was stretched tightly around his back. The pliant material slid over a thick layer of syrupy substance that coated the whole of his body. Two breasts, as soft as the plushest of pillows, were pressed against his chest. More than pressed, he realised. The nipples had penetrated his skin and were embedded painlessly into the flesh of his chest. He was hooked up to the breasts as if they were some kind of bizarre IV line.\n\nLike an intravenous drip they flooded his tissues with life-giving liquids. The breasts slowly swelled and ebbed, squirting a warm liquid into Phil's body that filled him with luxurious pleasure. His whole body was limp as he lay in the woman's embrace. \n\nNot a woman. A succubus. Nurse Honey. The demoness with the face of an angel.\n\nHe was in Nurse Honey's embrace.\n\nPhil felt a shiver of fear. He knew she would restore him, but the eventual cost would be his soul. Was this the time she'd claim him? Panicking, he struggled to free himself from her cloying embrace.\n\n\"Shh,\" Nurse Honey breathed softly in his ear. \"Relax and let me pump life back into your body.\"\n\nPhil went limp again as her soft breasts squeezed more heavenly warmth into his cold tissues. Her soft lips met his for a tender kiss. His heart began to pump with greater vigour as the plush lips of her labia parted around his cock and he was drawn up into the honeyed well of her pussy. He lost the desire to fight as the soft walls of her vagina squeezed around his cock and rubbed her sticky fluids into his skin. Nurse Honey gently shifted position and her cunt pulsed as it flooded his engulfed cock with a bubble of thick, viscous honey. Warm fluids oozed out of her pussy and dribbled down his balls in thick dollops.\n\n\"Yes, let it out,\" Nurse Honey whispered in his ear.\n\nPhil's muscles tensed and he felt blessed relief as he ejaculated into the liquid warmth of her vagina. Part of his essence spurted out with his seed and he felt it drift into Nurse Honey's body. He didn't experience the feeling of loss for long before Nurse Honey's breasts pulsed again and her energy poured into him.\n\nPhil was trapped in a constant cycle of bliss. Her body was hooked into his. He couldn't escape the secretions she pumped into his body and didn't want to. They were a drug he couldn't bear to survive without. He was dependent on her totally, as helpless as a foetus still attached to its mother's placenta.\n\nPhil came again and sank deeper into the cycle. The pleasure completely swamped him.\n\nNurse Honey lightly kissed him on the forehead.\n\n\"You need to be careful now, fledgling,\" she whispered in his ear. \"You have run up too high a debt. The next time you call on me will be the last.\"\n\nRocked by gentle ripples of pleasure, Phil sank into oblivion.\n\n*****\n\nPhil flickered in and out of consciousness. He heard voices raised in anger.\n\n\"Do you always have to be so greedy?\"\n\n\"I wanted to show him.\"\n\n\"You nearly killed him!\"\n\n\"He's going to die anyway.\"\n\n\"He might not.\"\n\n\"They always die. You know that. They can't help themselves.\"\n\n\"How long\"\n\n\"Not long. Nurse Honey said this was the last time. The next time she'll take his soul.\"\n\n\"And the conjunction is coming...\"\n\n\"He won't survive.\"\n\n\"I know.\"\n\n\"If we don't Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n will claim his soul anyway. What's the greater kindness?\"\n\n\"I know. I...\"\n\n\"You are silly. I keep telling you not to get so attached to them. It always makes you so upset when you have to kill them.\"\n\n\"I can't help it. He's our---.\"\n\nPhil slipped back into unconsciousness.\n\n*****\n\nPhil woke up to see C\u03adr\u03bcl\u0259a standing at the foot of the bed. She was in her young form, which meant she looked like a girl in her early teens. She wore a plain blue dress. Her hair was the same colour and stood up in small, unruly spikes. It was impossible to mistake her for human as she also possessed horns, a tail and a small pair of bat wings.\n\nC\u03adr\u03bcl\u0259a was a demon and her appearance was a lie. Sometimes Phil could glimpse it, when her ruby-red eyes hinted at experience measured in centuries. Other times, like now, they were the eyes of an innocent young girl. Currently she was carrying an old tome almost as large as she was.\n\n\"Would you like to come and study with me?\" she asked shyly.\n\n\"Study? Is that all?\" Phil asked.\n\n\"Yes.\" She turned her eyes down to look at the floor. \"Unless you want it to be more.\"\n\n\"No no no,\" Phil said hurriedly. \"Studying is fine.\"\n\nC\u03adr\u03bcl\u0259a looked up and smiled, her eyes bright. She took Phil's hand and skipped as she led him through the castle.\n\n\"I didn't know demons had to study magic,\" Phil said as they walked along unfamiliar corridors.\n\n\"Well, we're succubi, so we have certain innate magic abilities,\" C\u03adr\u03bcl\u0259a said. \"But we can also learn other magic as well. It's really hard though. We're always amazed at how fast some of you humans pick it up. Then I suppose your bodies and minds are so fragile it shouldn't be such a surprise you're always in a rush with everything.\"\n\nPhil didn't exactly feel like he'd been picking up magic particularly quickly. If he'd learnt more then maybe he wouldn't now be currently trapped in hell.\n\n\"Here's our little library,\" C\u03adr\u03bcl\u0259a said, pushing open a heavy wooden door.\n\nIt was a library, but it wasn't little.\n\nPhil's jaw dropped. Row upon row of musty old books marched into the distance. Light shone down through narrow slits in the left hand wall. Dust motes glinted in the shafts of daylight as they were stirred up into frenetic dance. \n\n\"It's large,\" Phil said. He didn't think the main library at Wargsnouts was this big.\n\n\"Really?\" C\u03adr\u03bcl\u0259a said. \"I think I might have read all of these at one point. Then I forgot them. So now I read them all over again.\"\n\nShe skipped over to a shelf and put her book back. She skipped across to another shelf and pulled another book off it. The book was thick and looked like it had been rescued at the last minute from a burning house. It looked singed.\n\n\"Basic fire magic,\" C\u03adr\u03bcl\u0259a said.\n\nShe carried the book and put it down in the centre of one of the beams of light. She opened it out and her lips moved soundlessly as she read the words on the page.\n\n\"Flambastinaa!\" she cried.\n\nShe smiled as yellow flames flickered up and down her hand. Abruptly they turned blue and then flickered out with a poof.\n\n\"Oh wuzzlenuts,\" C\u03adr\u03bcl\u0259a said. \"My fire magic never works properly.\" She looked up at Phil and smiled sweetly. \"Can you help me?\"\n\n\"I'd like to,\" Phil replied, \"but I'm not sure I can. I was only a first year student at Wargsnouts. We weren't allowed to practise any offensive magic.\"\n\n\"Really?\" C\u03adr\u03bcl\u0259a said. All of a sudden her red eyes flashed and Phil was staring into the gaze of someone very old and very cunning. \"So exactly who was it that burnt that huge smouldering crater in Verd\u00e9's garden?\"\n\n\"Well... um...\" Phil stammered. He still didn't really know how that had happened.\n\n\"Come and read with me,\" C\u03adr\u03bcl\u0259a said, her eyes once again young and innocent.\n\nPhil followed her finger as she ran it under the text. He didn't even need to speak the words aloud. As he read them something seemed to click in his mind, like a door opening deep within the folds of his brain. He read and the next thing he knew he smelt burning and heard crackling. He looked down and saw his hand was on fire.\n\nHis hand was on fire!\n\nPhil jumped back in panic and shook his hand frantically in an attempt to put the fire out. C\u03adr\u03bcl\u0259a watched on and shook her head in exasperation. Phil kept shaking his hand and while the flames grew smaller in size, they didn't go out. Then he paused. He didn't feel any pain. The flames weren't actually burning them.\n\nPhil stopped his frantic movements. He felt a little foolish.\n\nThe flames grew again and flickered over his hand and wrist. Phil watched them in wonder. Instead of consuming his flesh the flames were feeding off something else, something inside him. His psyche maybe, or possibly his soul.\n\n\"That's it,\" C\u03adr\u03bcl\u0259a said. \"Now concentrate it into a ball you can throw.\"\n\nThe flames flickered and coalesced into a small ball in Phil's hand. It had mass. He could toss it up and down and catch it.\n\n\"Perfect,\" C\u03adr\u03bcl\u0259a said. \"Soon we'll be able to set that mean old Rosa's tail on fire.\"\n\nThat didn't strike Phil as a particularly good idea. He'd already seen the size of the fireballs she liked to toss around.\n\nAnd thinking of bad ideas, Phil suddenly realised he was casually tossing up and down a ball of fire in a room filled with very old and very dry books.\n\n\"Um, don't you think it's a little dangerous to be practising fire magic in here,\" Phil said, looking at all the books.\n\n\"If a book can't protect itself it's not worth having,\" C\u03adr\u03bcl\u0259a said.\n\nPhil didn't want to put that theory to the test so he let the flames slowly dissipate. It was like turning off a valve in his mind.\n\nC\u03adr\u03bcl\u0259a suddenly paused, her attentions elsewhere as her ears pricked up.\n\nPhil sensed it too. A subtle distortion in the air of the castle.\n\nHe might have felt a little pleased with himself for sensing it, but the booming voice that rang out afterwards rendered it all moot in any case.\n\n\"Ladies! Show yourselves for your Romeo has arrived!\"\n\nThe voice was male.\n\nAnother warlock, Phil thought, excitement surging through him. And this one sounded experienced. He sounded like he'd been here before and had survived to come back.\n\nWhich meant he knew how to get home.\n\nC\u03adr\u03bcl\u0259a pulled a face and stuck out her tongue. She obviously didn't share Phil's enthusiasm about their visitor.\n\nThey both crept out of the library and into one of the main halls. The warlock stood at the far end. He was short, portly and very hairy. Long bristles protruded from his nostrils and ears. His face had the ruddy complexion of someone who was a little too fond of the finer things in life. He wore elaborate black robes lined with luxurious black fur.\n\nAs the warlock walked towards them, C\u03adr\u03bcl\u0259a reached up and lightly tapped Phil on the head. He suddenly felt a little giddy and light-headed but, other than a lingering feeling of oddness, the moment soon passed. He stepped out of the shadows to approach the warlock.\n\nHelp, I'm trapped here. Can you send me back to Earth?\n\nNo sounds emerged from Phil's mouth.\n\nThe warlock looked over him and C\u03adr\u03bcl\u0259a and licked a moist tongue over rubbery lips.\n\nPhil tried again.\n\nThe succubi are going to kill me. Get me out of here!\n\nAgain no sounds emerged.\n\n\"Aww, an ickle succubus and incubus,\" the warlock said. \"How cute. How delectable.\"\n\nC\u03adr\u03bcl\u0259a smiled politely and curtsied.\n\nPhil tried to speak again and failed.\n\nIncubus? No, I'm human. Take me back with you.\n\n\"Slake, why waste your time on such unripe fruit when you could be experiencing the buxom charms of my full, womanly figure?\"\n\nPhil looked up and saw Nurse Honey descending a flight of stairs behind them. She was wearing long flowing white robes with fur trim and looked absolutely radiant. She walked down the stairs with the class of an old movie star, her long blonde hair shimmering in the light.\n\n\"Ah Honey,\" the warlock, Slake, said. \"Delectable Nurse Honey, gorgeous Nurse Honey, irresistible Nurse Honey, exactly the succubus I was looking for.\"\n\nSpittle flecked Slake's lips as he ogled Nurse Honey.\n\n\"What pleasures would you like today?\" she asked in a voice as soft as silk.\n\n\"Ah well you see,\" Slake started. \"Through no fault of my own I appear to have become embroiled in a little spat with a colleague of mine, a most odious and disagreeable little fellow. When you reach such a distinguished age as I, these little arguments can become so draining.\"\n\n\"So you'd like another one of my special revitalising massages,\" Nurse Honey said.\n\n\"Absolutely my dear,\" Slake replied. \"One of your exquisite sticky massages is just what I need to recharge the cells so I can show this bounder what for.\"\n\n\"Mmm, and I'm just in the mood to get really really sticky with someone,\" Nurse Honey purred.\n\n\"Don't go away you pair,\" Slake said, turning to Phil and C\u03adr\u03bcl\u0259a. \"You both look absolutely scrumptious. After Nurse Honey's got me all perked up again I think I might come down and gobble you both up.\" He grabbed his crotch and gave it a good pull.\n\nPhil suddenly felt quite queasy.\n\nSlake ruffled Phil's hair and horns and then walked by to where Nurse Honey waited at the foot of the stairs. He slipped an arm around her waist and together they walked up the stairs. About halfway up Nurse Honey looked back and shared a glance with C\u03adr\u03bcl\u0259a.\n\nHorns?\n\nPhil reached up. There were two little hard bumps sticking out of his forehead. He withdrew his hand in shock. A bigger shock awaited him when he tried to walk and looked down to realise his feet had been replaced with cloven hooves. His legs were covered in fine, downy hair. He looked up at C\u03adr\u03bcl\u0259a, his eyes wide open.\n\n\"You look very fetching as a lesser incubus,\" C\u03adr\u03bcl\u0259a said, her red eyes twinkling. She snapped her fingers and suddenly Phil could speak again.\n\n\"What have you done to me?\" he said.\n\n\"You were going to ask the warlock to take you back to Earth with him.\"\n\n\"Yes,\" Phil admitted. \"I'm going to die if I stay here.\"\n\n\"Slake might have done it,\" C\u03adr\u03bcl\u0259a said, \"but then you would have been in his debt. Slake is not a person you would want to be in debt to.\"\n\n\"But at least I'd be alive,\" Phil said.\n\nThat ancient wisdom suddenly flashed in C\u03adr\u03bcl\u0259a's eyes again.\n\n\"It wouldn't be a life you'd want,\" she said.\n\nNo, it probably wouldn't, Phil thought, remembering the look of naked hunger in the warlock's eyes. There was a man who saw the world as his own private playroom. Changing life as a plaything to life as a plaything for a different master was no escape at all.\n\n\"Oh hurry!\" C\u03adr\u03bcl\u0259a said, a child again. \"I'm supposed to take you up to Nurse Honey's quarters so you can see.\"\n\nShe grabbed his hand and pulled him down another corridor. Phil struggled to keep up. He wasn't used to running on hooves.\n\nC\u03adr\u03bcl\u0259a noticed.\n\n\"Oops,\" she said, before lightly tapping him on the head.\n\nPhil again experienced a temporary moment of light-headedness. When it passed he was restored to his old self. No horns or hooves.\n\n\"Come on,\" C\u03adr\u03bcl\u0259a said, grabbing his hand as they resumed their dash through the back corridors of the castle.\n\nPhil had no idea where they were or where they were going. C\u03adr\u03bcl\u0259a took him down a maze of narrow corridors and crawlspaces. Finally they reached their destination. C\u03adr\u03bcl\u0259a pushed aside a painting to reveal a hidden space behind. She crawled up inside and Phil followed. He found himself in a small dark room. Once the picture swung back the only light came from a long horizontal crack in the far wall.\n\n\"Wh---\" Phil started.\n\nC\u03adr\u03bcl\u0259a put a finger on his lips to shush him. She gestured and sparkling lights appeared on all the walls. The radiance was only there for a short time before it sank beneath the old stonework.\n\n\"There, they won't be able to hear us now.\" she said.\n\n\"They?\"\n\n\"Look.\" C\u03adr\u03bcl\u0259a said.\n\nPhil crawled up to the far wall and peered through the crack. The room beyond was lit with soft white light. Strips of white material were stretched across the walls like bandages of latex. It suited the room, which looked clean, sanitary and maybe a little too sterile. A large massage table, the only furniture, stood in the centre of the room. There was a hole for the head to rest and the white surface looked far plusher than tables Phil had previously seen, admittedly only in infomercials on TV back on Earth.\n\nSlake was walking around the table wearing nothing but a white towel around his waist. He had a large pot belly covered in bristly black hairs.\n\nNurse Honey was still wearing her white robe. She walked around the corners of the room lighting small bowls. Thick white tendrils of perfumed smoke rose up into the air. She finished with a bowl positioned right under the hole for a face to rest.\n\n\"That smells nice,\" Slake said.\n\n\"I like to relax my clients,\" Nurse Honey replied.\n\nShe smiled as she gave Slake's ass cheek a little squeeze and then ran a finger up his spine. He shivered at her caress.\n\nShe patted the cushioned surface of the table. Slake leered at her before climbing up and lying on his front. Seeing him lying there reminded Phil of basking walruses he'd seen in nature documentaries.\n\nNurse Honey was expressionless as she began to knead Slake's fleshy calves. Her dextrous fingers rubbed and twisted the meaty flesh of Slake's legs. She lifted his ankles and then began to manipulate the soles of his feet. She let them rest against the underside of her soft breasts as she bent over, eliciting grunts of pleasure from Slake.\n\nHis feet finished with, Nurse Honey moved back up Slake's thighs. Her face was still serenely blank as she rubbed the back of his legs. Her hands glided up over his buttocks and then moved up his lower back with butterfly presses.\n\n\"Yes, that's absolutely perfect dear,\" Slake sighed.\n\nNurse Honey's face was unreadable. What was Slake to her? Phil thought. Lover? Client? Prey? Nothing? Piece of meat? Her face revealed nothing. Its emptiness was disconcerting. He wondered if he was gazing upon the true face of a succubus. Did she wear the same face when she was with him? Was it the same with Verd\u00e9 and Rosa? When their faces were turned away and out of his sight, did they let the seductive masks fall away to become like this: blank, perfect mannequins. It was a cold thought.\n\n\"That's just the spot,\" Slake crooned as Nurse Honey's hand rubbed a spot between his shoulder blades with light circular motions. His sighs of pleasure grew louder as she kneaded the muscles of his neck and shoulders.\n\n\"You've let yourself get too tense,\" Nurse Honey said.\n\n\"It's the pressures of putting these upstart bounders back in their place,\" Slake replied.\n\n\"You shouldn't let them bother you,\" Nurse Honey said. She continued to work the muscles of his back.\n\nSuddenly she looked up and stared straight at Phil with her pure white eyes. He had no doubt she knew he was there. Her stare bored right through the wall, right through him and straight down to his soul.\n\n\"I have to go now,\" C\u03adr\u03bcl\u0259a said. \"I'm not allowed to see adult stuff.\"\n\n\"Why am I supposed to be here?\" Phil asked.\n\n\"Watch and see,\" C\u03adr\u03bcl\u0259a replied as she left the room. \"You'll work out why.\"\n\nWatching was not exactly a terrible chore. Nurse Honey had just shrugged her white robe to the floor. Underneath she was completely naked. As always the combination of her serene features and voluptuous curves made her look like an angel that had fallen from heaven with the express aim of starring in porn movies.\n\nAlthough he was a little ashamed to admit it, Phil could quite happily look at those boobs all day.\n\nNurse Honey mounted the massage table and straddled Slake's lower back. His grunts grew louder as she rubbed her hands up and down his spine.",
        "\"Watch this closely fledgling,\" Verd\u00e9 whispered in his ear.\n\nPhil jumped. He hadn't realised she was in the room with him.\n\nOn the massage table Nurse Honey folded her voluptuous body over Slake's back until her large breasts were pressed against his shoulder blades. Her breasts shivered and Slake moaned in bliss as a sticky amber fluid oozed out across his back.\n\n\"Ooh, that feels good my dear,\" Slake sighed.\n\n\"I want you nice and relaxed,\" Nurse Honey said. She rubbed her breasts against his back in slow circular motions.\n\nVerd\u00e9 pressed her own naked breasts into Phil's back. She moved up until Phil felt the heat of her body against him. His head was enfolded by her perfume, fresh like a meadow on a summer's day.\n\nNurse Honey squirted more and more of her thick honey until Slake's back was completely coated in the sticky fluid. He moaned in pleasure as she massaged the liquid into the muscles of his back and neck.\n\n\"Quentin Slake is a regular of Nurse Honey's,\" Verd\u00e9 said, squeezing up closer. She put her arms around Phil. \"Slake is a quarrelsome man. He gets embroiled in constant squabbles with his fellow warlocks that leave his energy depleted. Then he comes to Nurse Honey for a recharge.\"\n\nOverwhelmed by her perfume and erotic aura, Phil relaxed back against Verd\u00e9's body.\n\nIn the room Nurse Honey dismounted and turned Slake onto his back. Leering, Slake held out his arms in an attempt to draw her into his embrace. Smiling, Nurse Honey nimbly stepped aside and moved to the head of the table. She leant over until Slake's face was smothered between the sticky pillows of her breasts. He guffawed and rubbed his face in her cleavage with the glee of a child given the keys to a candy store.\n\n\"Your breasts are perfect,\" Slake said. \"I could nuzzle them all day.\"\n\n\"Isn't it dangerous to use Nurse Honey too often?\" Phil asked.\n\n\"So you do remember,\" Verd\u00e9 said. She lightly tickled his ear with her tongue. \"We thought you might have forgotten. Slake knows this too, but he arrogantly believes he's her master and the rules don't apply to him.\"\n\n\"Wouldn't you like to touch me here as well?\" Nurse Honey asked. She guided Slake's hand to the moist cleft between her legs.\n\nSlake giggled like a naughty child as he pushed his fingers inside her. They came out covered in thick gloopy syrup.\n\n\"Wouldn't you like to put your cock in there and get it all sticky?\" Nurse Honey asked seductively.\n\n\"Oh yes,\" Slake said eagerly. Then he looked down to where his cock lay slackly against the rounded pot of his belly. \"But alas, I'm not as young as I once was. The mind willing, but the flesh failing and all that.\"\n\n\"Oh sweetie, that's no problem at all, not to me,\" Nurse Honey said. \"You lie back and relax and leave it to me.\"\n\nShe winked lasciviously at Slake before climbing up to straddle his chest. She bent over and lightly blew on his cock until it started to twitch into life. Then she took it into her mouth and started to fellate him.\n\n\"Is he?\" Phil asked. \"Her master?\"\n\nSlake did seem quite familiar with her and, well, wasn't dead.\n\n\"No silly,\" Verd\u00e9 laughed. \"He's just another little wizardling puffed up with his own sense of self importance. It amuses us to humour them, for a while, before we suck out their souls.\"\n\nLike me, Phil thought. He knew he was only still alive because succubi liked to play with their food. \n\nNurse Honey knew she had an audience. She stared at Phil like a porn starlet posing for the camera as her head bobbed up and down. Despite his fear, Phil's arousal grew as he watched Nurse Honey give Slake a very thorough and sloppy blow job.\n\nPhil felt a soft hand encircle his cock and gently pump up and down.\n\n\"She is beautiful isn't she?\" Verd\u00e9 breathed in his ear. \"Hard to believe that beneath that angelic exterior lies the soul of the blackest succubus of all.\"\n\nNurse Honey swallowed Slake's cock all the way to the back of her throat. Her cheeks sank in as she sucked him. At the same time her dextrous fingers fondled his balls and tickled down around his anus.\n\n\"Careful,\" Slake said. \"You'll suck out all my energy before you've had a chance to replenish it.\"\n\n\"I'm just getting you all warmed up dear,\" Nurse Honey said as she turned to face him. Thick honey dripped from her sensual pink lips. \"Now I've got you hard, lets make sure you stay that way.\"\n\nNurse Honey turned back and stared directly at Phil again. She bent right over until Slake's cock was positioned snugly in her cleavage and her large breasts were pressed into his crotch. She smiled at Phil, an expression more of triumph than happiness, as her breasts pulsed and pulsed and pulsed. Slake's eyes fluttered as the sensation temporarily overwhelmed him. Nurse Honey squirted thick gobbets of honey over Slake's cock and balls until his whole groin was soaked in her sticky syrup. Then she squeezed her breasts together and rubbed them up and down the warlock's straining erection. He writhed in helpless pleasure beneath her.\n\n\"It wouldn't matter if Slake was her master,\" Verd\u00e9 said, her voice serious. \"To Nurse Honey all humans are prey, even those she chooses to do the bidding of.\"\n\nA cold chill slithered up Phil's spine, temporarily distracting him from the pleasure of Verd\u00e9 masturbating him.\n\nNurse Honey released Slake's cock from the gummy clutch of her breasts and turned around to face him. She stretched her back like a cat and rubbed her dripping breasts against his chest while he moaned and sighed. She lifted up the perfect peach of her ass and then slammed it down, burying Slake's rampant erection in her pussy with a loud squelch. Slake closed his eyes and groaned in pleasure as she moved her hips up and down with sinuous grace. Sticky globs of honey oozed out between her labia and spattered both hers and Slake's stomachs.\n\n\"She's hot isn't she,\" Verd\u00e9 whispered in the darkness. \"You wish it was you out there on the table feeling her voluptuous body bounce up and down on you. It's okay, you don't have to hide it. Imagine your cock thrusting back and forth into her warm vagina, that deliciously thick honey squelching against your skin. Go on, my hand will help.\"\n\nHer hand continued to pump his cock. It was slick with some kind of thick lubricant.\n\nOut in the room, Slake sighed with bliss. \"That feels wonderful.\"\n\n\"Mmm, enjoy your dip in my honey pot,\" Nurse Honey said. \"This time you won't ever leave.\"\n\nDespite the pleasure he was receiving, Slake still caught the nuance in Nurse Honey's words. He opened his eyes and looked up. He saw the gleam of predatory hunger in her white eyes and his eyes widened.\n\n\"You've visited me too often,\" Nurse Honey said. \"Your body contains barely a flicker of your own energy left.\"\n\nVerd\u00e9 hooked an arm around Phil's waist and pulled him back tighter against her body. Her wings folded around him like a soft leather coat. Beneath them her hand gently squeezed his cock as she pumped it.\n\n\"Watch carefully,\" she whispered in Phil's ear. \"This is what happens when it's time for Nurse Honey to reclaim her debt.\" Her lips drifted down to softly nibble his neck.\n\nFully aware of the danger he was in, Slake opened his mouth to utter a spell. He was too late. Nurse Honey smothered the words in her sticky cleavage. She locked her arms behind his head and kept his face firmly pressed between her breasts even as she continued to thrust up and down on his cock.\n\nSlake thrashed beneath her. His arms flailed wildly, but Nurse Honey had covered him in so much of her honey he couldn't get a grip on anything. His struggles grew weaker as he ran out of air until his arms fell slackly by his side. Only then, with her victim on the verge of complete suffocation, did Nurse Honey release him.\n\nSlake gasped as he sucked in a much needed breath. That was all the pause Nurse Honey gave him before she forced a nipple between his quivering lips. Her face was expressionless again as she held his head tightly in place. Her breast repeatedly swelled and contracted as she pumped a thick stream of honey down his throat. She kept pumping until Slake's eyes glazed over and amber syrup bubbled up out of his nose and the corner of his mouth.\n\nThe warlock was slack as she laid him back down on the table.\n\n\"Now you lie back quietly while I pump out your soul,\" Nurse Honey smiled. \"Enjoy these final moments of pleasure.\"\n\nIn the dark Verd\u00e9 rubbed her hand up and down Phil's cock. Her other hand fondled his balls. He was on the verge of boiling over but Verd\u00e9 wouldn't grant him that release just yet.\n\n\"I love this moment,\" Verd\u00e9 whispered. \"It's the only time we get to see the real Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n.\"\n\nNurse Honey, Mam\u01dd\u1e35\u0101 B\u0113y\u02c1\u1e6f\u0101n, sat up straight and stretched. A great pair of membranous wings, as wide as the room, erupted from her back. They were pure white and glistened like stretched latex. Her long flowing hair had turned completely white and drifted as if charged by static electricity. An elaborate pair of white horns curled through her hair and formed a regal crown. Her white eyes blazed with power.\n\n\"Isn't she glorious,\" Verd\u00e9 whispered in awe. Her hand made soft shlupping sounds as she stroked his cock.\n\nGlorious, and deadly, Phil thought. Hers was the light that drew men like moths and the fire that incinerated their souls.\n\nSlake's eyes widened with terror as he woke up to the peril he was in. He struggled to shake himself out his stupor. He tried to speak, but his throat was completely clogged with Nurse Honey's honey. Amber liquid continued to dribble out of the corner of his mouth.\n\n\"It's too late to fight now,\" Nurse Honey smiled cruelly.\n\nShe lent over Slake's corpulent body and pressed her nipples directly into Slake's chest. His skin bubbled and swelled as she pumped her fluids into the flesh beneath. Phil saw the same thing was happening at Slake's crotch. Honey had stopped moving up and down and her labia were clamped tightly shut around the base of Slake's cock. Instead of oozing out over his stomach and balls, her secretions were pulsing out in waves beneath his skin. She folded her white wings around the table and lay there for a while, pumping her thick honey into Slake's helpless form.\n\nPhil sat in the dark and watched. Verd\u00e9's warm body was pressed tightly against him and her smooth hands moved up and down his cock with soft, liquid sounds. He felt her moist pussy pressing against his tailbone.\n\nNurse Honey sat back up, her wings extended regally behind her. Trickles of amber liquid oozed out of her nipples and ran down her breasts in little rivulets.\n\n\"It's time to give up your soul my love,\" Nurse Honey sighed. Her hips moved up and down with slow thick squelches. Her heavy breasts bounced up and down with the motions of her body.\n\nVerd\u00e9's hand stroked up and down Phil's cock faster and faster. Her other hand caressed his nipples. Her soft lips nuzzled against the sensitive parts of his neck.\n\nSlake gargled incoherently as he tried to clear his throat of the cloying honey.\n\n\"Yes, that's it,\" Nurse Honey murmured seductively. \"Come into me.\"\n\nSlake's body went rigid as he realised how close to the end he was. His limbs thrummed with tension as the warlock desperately tried to fight against his animal urge to come. He screwed his eyes shut as he tried to summon every last ounce of mental will.\n\nNurse Honey continued to thrust her hips against him. From her face it was clear she already knew who would be the winner of this battle.\n\n\"Yes. I can feel it,\" she sighed. \"Just a little more.\"\n\nShe stopped pumping her hips up and down and instead started to rock back and forth on his cock.\n\nVerd\u00e9 slowed her hand movements as well, letting her palm rub over the oozing head of Phil's cock while he trembled in her embrace.\n\n\"Imagine that delectable pussy squeezing tight around your cock,\" she whispered in his ear. She gripped his cock with both hands and gently squeezed. \"Feel her hot body sucking you.\"\n\nSomething very strange was happening to Slake's body. Even as he grimaced in concentration his skin seemed to swell up and shift of its own accord. It was as if it was becoming untethered from his flesh and bones.\n\n\"Come for me my love,\" Nurse Honey urged. She fondled her ripe breasts.\n\nBeneath her Slake's body appeared to be losing its cohesion. He looked less like a man than a bag of liquid with the general shape of a man. Bulges ebbed and flowed beneath his loose-fitting skin like tides under the influence of a moon. That moon, Nurse Honey, was sitting astride him and smiling with serene beauty as her rocking hips slowly drove him to irresistible orgasm. Slake's head shook violently as he tried to fight against his body's own nature.\n\nIt was not a fight he was going to win.\n\nIn the little dark room Phil was also losing his own battle. His body writhed and squirmed in Verd\u00e9's embrace. Her soft hands teased him, took him to the verge and held him there, gasping like a landed fish. One little squeeze of her palm was all it would take.\n\n\"Yes,\" Nurse Honey purred. She sat all the way down on Slake's cock and her labia fluttered as thick dollops of sticky honey bubbled out of her vagina.\n\nSlake's face went slack and his mouth fell open.\n\nIn the darkness Verd\u00e9 finally gave Phil's cock that last little squeeze.\n\nSeveral things happened simultaneously.\n\nNurse Honey threw back her head and gave a loud cry of passion and triumph.\n\nPhil ejaculated explosively into Verd\u00e9's hand.\n\nSlake gave a final, inarticulate cry. His skin bulged up like dough rising until he barely resembled a human being. Finally his skin split and a torrent of thick, gloopy liquid spilled out onto the floor like the pus from a lanced boil. The liquid continued to flow until there was nothing left of Slake but an empty bag of skin. It was as if his body had been replaced entirely with Nurse Honey's fluids and now they were finally all being released.\n\nThe pleasurable tingling aftermath of Phil's orgasm was washed aside by a cold tide of shock as he watched Slake's final dissolution.\n\nVerd\u00e9 licked his semen off her hand and gave a contented sigh.\n\nNurse Honey folded her wings behind her and casually sat on the scraps of skin that were all that remained of the warlock. There was a violent commotion on the surface of her belly as Slake's screaming face tried to push its way out of her imprisoning flesh.\n\n\"Shh. You're mine now,\" Nurse Honey said.\n\nShe kissed a finger and placed it on Slake's forehead. Still screaming, he was dragged back down beneath the surface until her belly was as flat and as flawless as it always was.\n\n\"Forever.\"\n\nShe got off the massage table and stared directly at Phil. The message in her eyes was clear.\n\nHe shuddered.\n\n\"I won't let that happen to you fledgling, I promise,\" Verd\u00e9 whispered in his ear.\n\nShe kissed him lightly on the neck.\n\n\"I'll eat your soul myself first.\"\n\nThen she was gone.\n\nPhil sat alone in the darkness for a very long time.\n\nto be continued... "
    ],
    "authorname": "manyeyedhydra",
    "tags": [
        "succubus",
        "warlock",
        "magic",
        "voyeur",
        "hand job",
        "massage",
        "messy sex",
        "smothering"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/succubus-summoning-112"
}