{
    "title": "The Bra Salesman Ch. 12",
    "pages": [
        "And here is the last full chapter!\n\nChapter 12: All Good Things\n\nDrool is flying out of Dave's mouth and into my ear. If he were a Bernard Shepard, I might find it only mildly annoying. But considering he's leaning over me and giggling, I'm ready to yank on the tongue hanging out of his mouth and rip it out of his snickering skull. But I can't take my eyes off the computer screen as he shows me his latest video of him and Brittney.\n\nApparently after I left them together last night, he and Brittney really went hog wild, and he has the video documentation to prove how huge a hog he really is. Brittney has been tied up by, what looks to me like, twenty different ropes. Her arms are pinned behind her so far that from the front I can't tell if she even has any arms. Her torso is streaked with a dozen ropes crisscrossing her chest and stomach, and her arms and legs are wrapped around so tightly that I'm trying to figure out if she's able to get any blood to her extremities. She is gagged and blindfolded with two or three ropes around her neck forcing her head back. \"Watch what happens here!\" Dave says with a giggle like he ingested enough helium to literally walk his hog-like carcass on air. \n\nDave enters the video from one side with a mask over his face, but I have unfortunately seen his hairy ass enough times to know beyond a shadow of a doubt who it is, even if he wasn't excitedly hunched over my shoulder right now. In the video, he throws her down on the bed and pulls her ass up so that she is on her knees with her torso and shoulders down. I watch him pull her buttocks apart and cram his stumpy penis into her ass. \n\nBefore long he is rocking himself back and forth, and Brittney is being shoved every which way helplessly. Even with the mask on, I can tell Dave has his tongue hanging out like he does whenever he gets horny. And as often happens, he humps her for what has to be a minute and a half before he stops. He pulls his dick out of her and furiously uses his hand to jack off so that small streams of cum shoot onto her body. \n\n\"Wasn't that awesome?\" he asks me expectantly. Here's the thing, I've been watching this video for ten minutes. I don't even want to relive those previous minutes that involve whips, dildos, a generous helping of some cream, and a few other sex tools I didn't even recognize. Yeah, she's got a hot body and I cannot tell you how grateful I am that Dave has taken on the project of entertaining Brittney so that I don't have to anymore. \n\nBut if I'm totally honest, watching Dave's bald head and furry, rotund body humping someone, even someone with nice tits like Brittney, just doesn't do it for me. But of course, I want to encourage Dave so the last thing I want to be is totally honest. \"Oh yeah, that was great! You should, like, sell that video to someone!\" \n\nI meant that in an ironic, tongue in cheek kind of way, but all of a sudden, Dave stands up straight so that I can almost literally see a light bulb floating over his head turning itself on. \"Yeeeeeah, maybe I could do that.\" Oh shit, now these crappy videos of his are going to live for eternity on the Internet. I can just imagine some alien species coming across all our planet's digital knowledge to learn more about our culture and civilization and being subjected to watching Dave's hairy ass fucking Brittney with all her ropes and gags. I shudder to think how an advanced species would judge our planet based on Dave's dwarfish cock being shoved into Brittney's wet pussy. \n\n\"So you're going to see her again tonight?\" I ask Dave, desperate to change the focus away from his crappy video. \n\n\"Oh yeah, she literally begged me to come back again. I don't know how you knew, but you were right, she is totally into me!\" The reason I knew, of course, is that I used the hypnotic codeword to program her to be attracted to Dave and interested in all his twisted bondage crap, but I wasn't about to tell him anything.\n\n\"That's great, I'm happy for you.\" I smiled at him as best I could, but I was having trouble faking it today. Dave thanks me again as he scoops up his flash drive and lumbers down the aisle of cubes at our work. I was happy for him, but I was miserable for myself.\n\nEver since I learned that Tasha has her own hypnotic codeword that Brittney has been using to keep Tasha dumb, gullible, and horny, I have been racking my brain trying to come up with reasons why I should leave everything the way it is. I tried convincing myself that Tasha is happier this way and that she is being gratified in ways she could never be satisfied in if she went back to the way she was. I figured she didn't have any other friends anyway because surely she would hang out with any other fucking person in the world than Brittney if she had any choice at all. I researched online to look for studies that showed that hypnosis doesn't really change anyone's personality, it only amplifies personality traits that already exist so that I could claim, to myself at least, that the hypnosis didn't truly change her at all, that every carnal act we had engaged in was something in some way she wanted to do.\n\nOh believe me, I spent so much time thinking of every moral justification my perverted mind could conjure up in order to convince myself that I would be the biggest fucking fool in the world to do anything to change my current situation. I had met a woman with gargantuan breasts who is willing to suck my cock and let me fuck her every way imaginable, and all I had to do to keep the situation going was to shut my fucking mouth and not change one iota of anything.\n\nJust the thought of Tasha last night wearing nothing but black stockings and a choker on her knees eagerly putting my stiff dick into her open mouth gives me a hard on so that I have to roll myself under my keyboard lest some passing coworkers see the increasing bulge in my pants. My eyes droop as I remember what her mouth feels like, wet and warm, as my cock slides in and out as her tongue laps up the explosion of cum shooting out and filling her throat. I remember what her wet pussy feels like when the swollen, spongy walls of her vagina tighten around my cock. I remember that her ass was so mind-blowingly tight that I could barely shove my cock inside her, let alone move around, so that when I finally came, my jism would splooge all over her backside and drip down into the small of her back. And of course I remember the feel and weight of her tits against my hands when my fingers dug into her soft flesh and were buried within her amazing bosoms. I remember every second of every moment I fucked her perfect body... wait, where was I going with this? Oh right, so why oh why on earth do I want to change any of this?\n\nI already know the answer, of course. The woman I'm in love with is not the woman she chose to be. The woman I know isn't the woman she is, or at least the woman she wants to be. Sure, maybe the hypnosis can't create a new personality, and maybe it's only bringing out parts of her psyche that have been subsumed and have been yearning to come out. But it's not what she consciously chooses to be. \n\nAnd a few weeks ago, I would have been more than happy to selfishly use her as my personal fuck toy for as long as I wanted with no moral compunction to change anything at all. If I had to keep her hypnotized so that I could keep her on her back with her tits jiggling underneath me as I repeatedly fucked her drenched pussy, then by god that's exactly what I would have done. But I can't do that anymore. Not now. Not since I admitted to myself that I love her.\n\nThat's why my steps are slow and weighted as I shuffle down the street. That's why there's no joy in my body as I trudge to her apartment building one last time and knock on her door. Maybe I don't have to do this. Don't do anything rash, think for once before you do something you regret. Just relax, it's all ok. \n\n\"Hi there, I'm so glad you're here!\" Tasha greets me at the door wearing a pink silk robe. As soon as she shuts the door behind me, she throws her arms back and lets the robe fall the floor and reveal her completely naked body. \"Really glad!\" she says with an impish smile. I feel like I should start gnawing on the back of my knuckle.\n\nBut as soon as I stare into her wide eyes, well once I finish ogling her nude body which takes me several heartbeats, I know I can't lie to myself. As much as I want to keep doing what I've been doing, one look in those eyes of hers and my resolve to remain a selfish prick evaporates. \"Tasha, we have to talk,\" I start.\n\nShe laughs, \"Not right now, we don't!\" She presses her body against me and kisses me. \n\nI force myself to grab her arms and push her off of me, although Lord knows every instinct of mine was to do the exact opposite. \"No seriously, we need to talk.\"\n\n\"What about?\" she asks with a genuine curiosity, as I lead her over to the couch to sit down.\n\n\"I... you are... I mean,... shit, I don't know how to say this.\" Damn it, just blurt it out already, you coward. What's the problem? I mean, other than not being able to have sex with a beautiful woman with large breasts anymore?\n\n\"Then how about you show me?\" she says as she climbs on top of me. She kisses me as the weight of her body pushes me down so that I'm on my back.\n\n\"No no no! I cannot do this anymore! I have taken advantage of you for too long! You've been hypnotized and it's time that I did the right thing!\" That is exactly what I was thinking. Those are the words that my lips were desperately trying to formulate. But somewhere between my brain and my mouth, those signals were sabotaged by the tidal wave of lust emanating from my gonads. Instead I poetically and artfully told her that I wanted to make love to such a lovely person. I believe the exact wording was, \"How about you fuck me with that tight, little pussy of yours?\" Hey, for my gonads that's poetic and artful.\n\nShe smiled and rubbed her hairy crotch against my hardening cock. I kissed her neck and upper chest while she reached down and eased my dick into her damp pussy. With one hand I held her one of her immense breasts and pulled on her erect nipple with my teeth while I used the other hand on her wide hips to shove her body on top of my stiff shaft which made her gasp breathlessly.\n\nHer blonde hair fell over the back of my neck as I buried my face between her wonderfully enormous tits. The rhythm of her body hitting my groin as she bounced her hips up and down on top of my excited cock made me shiver with pleasure. \"UNGH!\" she moaned as she continued moving my dick in and out of her wetness. \n\n\"UNGH! UNGH!\" I could feel the soft, squishy walls of her vagina tighten around my cock when I thrust myself hard into her. \"UNGH! YES! YES! UNGH!\" Every muscle of her gorgeous thighs were tensing and she leaned back so that I could drive deeper into her eager pussy. \n\n\"UNGH! UNNNNNGH! YES!\" I grabbed both of her breasts and clenched my fingers into the supple flesh of her tits as her chest shook and shuddered every time she came down hard on my body. \"YES! YES! UNNNNNNNGH!\" I knew her body well enough by now to know that she had an orgasm, but that didn't deter her from hammering her body down even harder on top of me in an effort to make me cum, which was becoming more difficult for me to avoid. \n\n\"UNGH! UNGH! UNGH!\" Her hair was flying in every direction, as would her massive, sweaty breasts if my fingers weren't securely digging deep and clutching them, and her gasps of pleasure were nearly as loud as my own moans as I neared climax. \"UNGH! UNGH! UNNNNNNGH!!!\" Unable to stop myself anymore, warm jism exploded from my cock and filled her soft, drenched inner cavity, and as she continued moving up and down over me, small drops of cum would drip out of her pussy and onto my perspiring body.\n\nShe leaned over me and gave me several more kisses as my hands explored her body, moist with sweat. \"Mmmmmmm, that was nice,\" she cooed into my ear, and I put as much of her nipple and tit into my mouth as I could manage and licked her flesh with my tongue. She tried to get off of me, but my hands immediately grabbed her hips and held her firmly in place so that we could both feel my cock deflate and become more flaccid inside her cum-covered pussy.\n\nFinally, she laid down on top of me, her large breasts splooging out of the sides on top my torso, and she placed her head under my neck, \"So what did you want to talk about?\"\n\nNot a goddamn thing, I told myself. There was absolutely nothing I wanted to talk about right now. Feeling the most beautiful woman in the world lying naked against my body was my only focus at that moment. But as I stroked her hair, I knew what I had to do. I knew exactly what I needed to tell her. \"Nothing,\" was all I said and I hated myself. \n\nFuck you, I know you're thinking I should have been honest and told her everything. I should, I fucking know that. But goddamnit, I don't want this to fucking end. I don't want to give her up, to give any of this up. This is the best I've ever felt in my whole shitty life, so fuck you if you don't understand how fucking heartbreaking this is for me.\n\n\"Good,\" she said as she got off the couch and wandered into her bedroom. She came back a minute later with oil, a blindfold, dildo, and a set of handcuffs. \"I was hoping you'd do a little something for me,\" she said with a giggle.\n\nI cannot tell you how happy she was to kneel down, put the blindfold over her eyes, and snap the handcuffs in place on her wrists behind her back. She shook in anticipation, making her tits bounce up and down, as I moved the oiled dildo around her crotch. And she groaned in appreciation as I slowly inserted the plastic cock into her drenching wet pussy. \n\nI squeezed one of her tits as hard as I could, which made her smile and grit her teeth, while I shoved the dildo into her repeatedly. She spread her legs further apart so that I could pound the dildo further into her waiting crotch. Her gasps filled the air as they became louder and more high-pitched, all the while her body was jiggling and convulsing with pleasure.\n\nSoon her mouth was wide open but no sound was coming out, at least no squeal that could be heard by a human, as her body shook with orgasm. Her body was covered in sweat now, and as she laid down on her back, I was mesmerized by her glistening beauty, her chest rapidly moving around as she panted for air.\n\nBy now, my momentarily lifeless cock had recovered its stiffness, and I wanted desperately to push myself inside her again. I watched her breathing, her tits rocking and shuddering, as she lay there blindfolded and handcuffed on the floor. She must have sensed me watching her because she smiled and spread her legs apart invitingly so that I could see her drenched pussy was red with desire.\n\nA better man than me would have stopped himself from taking further advantage of this magnificent woman. A better man than me would have had the decency to own up to everything and fix the mess that had been made. But of course, no matter how much emotional understanding I've attained in these last few weeks, no matter what I've learned in regards to being selfless and empathetic to the feelings of others, no amount of moral maturity would have prevented me from fucking the shit out of her.\n\nI grabbed her tender nipple between my forefinger and thumb and squeezed as hard as I could. She arched her back and her gaping mouth shreiked in both pain and desire. With my other hand, I took a tuft full of her hair in my fist and then shoved my cock into her throbbing, wet pussy. She wanted me, no she craved for me to be rough with her to feed her fetish for pain. I knew what she liked, and right now she yearned for me to fuck her as hard as I could.\n\nI pounded my cock into her, and with every thrust she gasped, \"UNGH! UNGH! HARDER!\" I could feel her becoming more and more wet as I continued to abuse her shackled body. \"UNGH! YES! YES! UNGH!\" Her legs were now spread as far wide as possible and I felt her hips relax a little so that I could drive myself as deep into her as I could. \"YES! YES! HARDER! HARDER! UNNNNNGH!!\" Her orgasm made her body shake and ripple with pleasure.\n\n\"UNGH! UNGH!\" I heard a growl like a vicious monster, and I realized it was coming from me. \"MORE! YES! HARDER!!! UNNNNGH!!\" The slap our bodies made as they smacked together sounded like a leather whip slicing through the air, and as I hammered myself into her as hard as I could, I wondered if I was going too far and was in danger of bruising her. \"UNGH! YES!! YEEEES!!!\" Her body convulsed as another orgasm shot through her system, and I could feel my cock swell with cum as I continued to roughly pummel her helpless body. \"OH GOD! UNGH! OH GOD!! UUNNNNNGH!!!\" \n\nMy groin was stinging with pain as I kept pounding and pounding into her dripping wet cunt, making her sweaty breasts heave and tremble with every impact. \"UNGH! UNNNGH! YES! YES! YES!\" I didn't think I could last much longer, but I tried to hold back the jism in my dick that desperately needed to burst within her. \"UNGH! UNGH!\" \n\nI tried to look into her eyes, like I did the other night, but the blindfold on her face made that impossible. So I focused on the passionate expression of sexual bliss on her face as I rammed into her drenched pussy over and over. \"OH GOD! YES! OH GOD! UNNNNNNGH!!!\" I was desperately trying to stave off my own orgasm that I no longer had any clue how many times she had climaxed, but the feeling of her warm, wet vagina clutching onto my rigid cock was overwhelming. YES! UNGH! Holy shit UNGH! She is fucking UNGH amazing YES I can't UNGH believe UNGH god she YES feels good HARDER so UNGH fucking YES unbelievable UNGH god YES I loveYES her UNGH shit UNGH feels so UNGH YES great GOD god UNGH fuck YES fuck UNGH FUCK ungh UNGH fuck YESfuckGODYESholyUNGHgreatYESunghUNGH UUuUUNnnGGGghhhHH!!\n\nThe two of us were covered in sweat and breathing hard, and I felt my arms tremble with exhaustion from holding myself over her. Her hair was wet and strewn across the floor and her body and tits quivered with each quick inhalation as if she were desperate for oxygen. My arms finally gave out and I rolled over and felt my limp cum-covered dick fall across my thigh. \n\nI looked over at her wanting to stare at her with affection, but all I could see was the cloth fabric covering her eyes. She turned her head towards me as if she could sense my gaze and smiled at me.\n\nThat's when it hit me. Maybe it's my post-coital brain finally re-engaging now that I'm no longer blinded with a primal lust. Maybe I'm finally too tired or oxygen-deprived to think about sex any more. Or maybe, and this is what I choose to believe, maybe I finally looked at another human being with as much pure love as my heart can create and I felt the overwhelming urge to be the man she thought I was. \n\nHere she was, her hands shackled helplessly behind her back, smiling at me because she trusted me. I mean, she totally trusted me. And I am so fucking undeserving of that trust. The only reason she was remotely interested in looking at me right now, let alone fuck my brains out, is because some bitch of woman implanted a bondage fetish in her that wasn't real. None of this was real. It was fucking amazing, it felt fucking terrific, but none of it was real. And when I looked at her, I was looking at a lie. I was looking at a woman who was programmed to be what I want, not who she really is. God I wish I didn't care. I so wish that I could have held on to just enough prickishness to be able to dismiss my feelings and just keep fucking her until I was a decrepit old man humping her backside and shooting crusted dust into her ass. But goddamnit I totally love her, and the fact that none of this is real is just too fucking painful.\n\nI took the blindfold off of her, and she blinked her eyes as she adjusted to the light. I rolled her over on her side and undid her handcuffs. Her smile was now beaming at me, \"That was fantastic! I want to do that again.\"",
        "\"Dosteovsky-ish,\" I said as plainly as I could. As I watched her face slack into a vapid blankness, my heart sank. It's one thing to know she had been hypnotized, but watching her now fall into that hypnosis was just fucking horrible.\n\n\"Tasha, you are going to go to sleep. You will sleep for eight hours. When you wake up, you will be exactly as you were before you were hypnotized.\" Damn it, something is in my eye. \"You will ignore all the commands you were given over the last few months.\" Shit, whatever is in my eye is making me tear up. \"You do not have an overwhelming fetish for bondage.\" No, you are not going to fucking cry now. Goddamnit, if you're going to do this, at least be a fucking man about it.\n\n\"You are not gullible or dumb. You are the smart, intelligent person you were before the hypnosis.\" Will you stop the fucking crying already? \"You don't like Brittney and don't want her in your life anymore. You will no longer respond to the word Dosteovsky-ish.\" You're doing the right thing, so for the love of God stop crying like a fucking baby. \n\n\"You will...\" come on, shithead, grow a pair and say it. \"You...\" Jesus, will you get a hold of yourself and just spit out already? Try to be at least as articulate as a Miss Universe contestant answering some ridiculous question about pay inequality in America as though the Miss Universe pageant was the central nexus people tuned into to get information about societal trends and the policy ramifications of... oh I get it, I'm trying to get off topic so I don't have to say what I don't want to say. Just. Do. It. Fuckhead.\n\n\"You will forget you knew me, or that you met a bra salesman.\" That's it, now I'm fucking crying. \"You will forget all the things you did under hypnosis.\" Fine, go ahead and bawl like a big fucking infant. You will remember what you did at work, but you will forget all the people you had sex with for the past several months.\" Sure, get your shirt soaking wet with your tears of despair. Great, just be that way. \"When I snap my fingers, you will go to sleep and wake up as yourself. Your real self.\"\n\nShe is still looking at me with a vacant stare. At least I think she is, I can't see shit with all these goddamn tears welling up in my eyes and streaking down my cheeks. I know I'm supposed to snap my fingers, but for some reason my hands won't move. No, they will, I just don't want them to. The world goes strangely quiet in an eerie way as though time has stopped turning, and I can hear the sound of her breathing. I mean I can literally hear the air going into her lungs and every molecule of oxygen being converted into carbon dioxide inside that unbelievably beautiful body of hers. I can see Tasha lying on the bed from all angles simultaneously, as though my eyes were looking through some Picasso-like camera that both distorted and crystallized her image in my brain. Other than the tiny bits of dust I could see floating in the air above her, the rest of the world might as well not even exist.\n\nI feel myself snap my fingers, but I don't even remember consciously thinking the thought. Tasha closes her eyes and her entire body goes limp. I get up, put on my clothes, and then gently put my arms underneath her and carry her to her bedroom. As I pull the sheets over her, I take one last look at her gorgeous flesh. \n\nAs I sit on the bed beside her, I touch her face one more time just so I can remember what her skin feels like. My entire body feels like a lead weight so that I can't move. I can't believe this is it. I'm really letting her go. My brain is numb and my hands are now resting lifelessly on the bed. Goddamnit this totally sucks. I feel like I have to literally use my brain to create enough electricity in my nervous system to finally stand up. I need to just get the fuck out of here.\n\nMy brain uses what little electric signals remain in my body for one fleeting thought. I lean in, whisper some words into her ear, and then lightly kiss her on the forehead. I have been such an asshole for all of my life, so as much as this agonizingly hurts, it also feels oddly good to know, I mean really know, that I'm doing something good for a change. Maybe I'll be a better person for all of this, although I'll probably revert back to being selfish prick. But I hope not. I hope I can eventually become a decent person. At least this is a good start. My lead feet sluggishly propel me zombielike out of her bedroom. I turn around to get one more look at her then let myself out the front door.\n\nEpilogue coming in a day or two"
    ],
    "authorname": "bobrobertson",
    "tags": [
        "breasts",
        "tits",
        "bra",
        "lingerie",
        "con",
        "hypnotism",
        "bondage",
        "fetish"
    ],
    "category": "Humor & Satire",
    "url": "https://www.literotica.com/s/the-bra-salesman-ch-12"
}