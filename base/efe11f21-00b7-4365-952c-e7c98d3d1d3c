{
    "title": "The Archer Part Pt. 04",
    "pages": [
        "Ero woke the next morning slowly, groggy, feeling his muscles heavier and more relaxed than they'd ever been in his life. It was as if someone had combed through his every knotted nerve, and he'd slept for a decade. When he opened his eyes, he blinked, unsure of where he even was. His hands slid around in the bedsheets, searching for Aslin's body, finding nothing.\n\nHe turned onto his side, still skimming for her, when he saw her seated in a chair next to the bed, an open book poised in front of her. If he didn't know better he'd say she was holding back a smirk.\n\n\"What time is it?\" he groaned, wishing the room had a porthole. It felt very, very late.\n\n\"Your men will understand,\" Aslin said mildly, placing the book on her knee as he struggled to sit up.\n\nHe tried to review what had happened last night. How had they left things? Were they reconciled now? He couldn't go another day with silence between them. His heart cried out even now to pull her from the chair and bring her back into the circle of his arms.\n\nBut instead he shifted to the opposite side of the bed from where Aslin sat, standing with another groan. Dazed, he searched for his clothes, which he had hastily stripped off last night before so ruthlessly taking her. Once he was dressed he tried to summon the will to leave, but his body just sat down heavily on the edge of the bed, his back to her.\n\nHe struggled to gather his thoughts and decide what to say to make it right. He needed to make it right. All his anger was gone. He was simply tired of being away from her.\n\nA long moment passed between them in which neither of them said anything at all.\n\nHe heard her book close, and her weight shift in the chair. \"I don't want to fight anymore, Ero,\" she said softly, and his eyes closed in gratitude, feeling relief like a balm over his scorched heart.\n\n\"Fighting with you makes me ill to my stomach . . . literally,\" she added with a dry scoff. He bit his lip, imagining the small smile that would be on her face.\n\n\"We'll be there soon,\" she said quietly. \"I'm going to need your help to get through this.\"\n\nHe breathed, trying to steady himself before answering. She needed him.\n\n\"I don't want to fight either,\" he said, his voice wavering just slightly. \"Of course you have my help. I'm the one who dragged you across the sea . . . literally,\" he added, for good measure. \"Did you think I was just going to abandon you?\"\n\n\"I don't know what to think,\" she admitted. \"I have so many questions.\"\n\nHe twisted to face her. \"Ask me,\" he said earnestly, and she looked at him fully with those two magnificent, aquamarine pools.\n\nBy all the gods, he would do anything to keep her. Anything.\n\n\"We are going to the Royal City?\" came her first question.\n\n\"Yes.\" How much did she know, he wondered, about what awaited them there?\n\n\"And will I be . . . questioned? As before?\"\n\nHis eyes widened and he stood, alarmed.\n\n\"What? Heila, no. Why would you think that?\" He walked over, sitting again on the bed, but now facing her, needing to be closer.\n\nShe said nothing, her expression serious, and his heart thumped wildly. How could she have thought that he would ever let what happened to her happen again?\n\n\"You'll be there as my guest,\" he clarified. \"Not as a prisoner of war.\"\n\n\"Then . . .\" she hesitated, looking down. \"Then I'll have a place to stay?\"\n\nHe took another breath, trying to control his emotions. Had he truly let her sail across the ocean not knowing where she would sleep once they arrived? Had he never told her anything to reassure her of the safe haven she would find there, how he would provide for her? The knowledge had lived in him for some time, but he wasn't used to speaking his every thought to a woman.\n\nHe leaned forward, catching the hem of her dress in his hands and holding it, rubbing his fingers across the soft fabric as he spoke. \"I'll bring you to my home, where I'll have rooms readied for you. You'll have freedom of movement in the whole complex and its grounds. And the city too, as long as you don't go alone.\"\n\nHe hesitated a moment before going on.\n\n\"You'll stay there with me until after the peace treaty is signed and your prince's delegation has sailed back. It's the safest course. They should arrive shortly after we do.\"\n\n\"And after that? You'll help me find a place?\"\n\nHe glanced up, his eyes scanning her face.\n\n\"A place?\" he echoed, confused.\n\n\"A position.\"\n\nWhen his face must have still reflected his confusion, she sighed. \"Employment, Ero. I'll need to make money somehow.\"\n\nHis heart thumped again. She didn't understand.\n\n\"I would . . . take care of you, so that you would not want for money.\"\n\nShe frowned, a line appearing between her brows. It was an expression of hers he had not seen before.\n\n\"As your mistress?\" The word came out icy, and Ero's heart pounded in protest against the walls of his chest.\n\n\"No,\" he said emphatically, feeling a strange ache at the depth of her uncertainty regarding him and his intentions. \"You would owe me nothing. You would be a guest.\"\n\nShe pondered this for a moment, working it over like a puzzle. \"Then, you are rich?\"\n\n\"Yes. My family is.\" He supposed he had never stated that exactly.\n\nShe nodded, glancing away, apparently satisfied. He wasn't sure how his wealth clarified their situation, but she seemed to think it did. He took more of the fabric of her dress in his hands, pulling until her skirt made a taut line between them.\n\n\"I should have been clearer, Aslin,\" he murmured, upset. \"I had no idea these kinds of thoughts were in your head. I'm sorry.\"\n\nThe words left his mouth much easier than he thought they would, flowing like water eager to reach its outlet. Sorry for so much, he wanted to say. Sorry for everything. Sorry for what is yet to come.\n\nA moment later she stood, and he felt she meant to move away from him. But she took a step forward, coming to stand between his spread legs by the edge of the bed. The softness of her dress brushed his thighs. He could smell the sweet, floral scent of her hair.\n\nUnexpectedly he felt her hands trailing through his hair, lightly raking over his scalp. It sent a shiver of pleasure through him, and he stayed very, very still. Gods, was there any better feeling in the world than this woman touching him of her own accord? If there was, he'd never encountered it.\n\nHe reached for her quickly, before more dangerous emotions could escape his mouth, banding his arms around her waist and pulling her torso against his body, wrapping her legs around him. She laughed mildly, but there was no laugh on his lips. His arms came around her fiercely, his face pressed in the hollow of her throat. He wished he could meld their persons entirely together, even this was not close enough.\n\nShe relaxed, letting herself be held by him, her bent knees atop the bed on either side of him, her cheek against his shoulder. For a long time he held her like this, too tightly, pressing his face into the fragrant warmth of her skin, his eyes closed, just breathing.\n\n\"I'm hungry,\" she whispered, and despite himself he laughed, squeezing her. \"You slept forever,\" she teased in mock complaint, and he felt her smile against his skin.\n\n\"Come up with me,\" he finally replied, releasing her and setting her on her feet in front of him again. \"We'll brew some of that tea.\" She moved to the door and turned back to him, waiting.\n\nShe still wore no clasps.\n\n\"Wait,\" he said suddenly, rising and going to the bureau where her clasps were stored. Seeing her without clasps yesterday had wounded him. An Almanian woman was never without clasps, not even when she was buried. It was wrong to see Aslin without them. He chose two, coming to her side. He hesitated, holding them out to her in his open palm. Seeing them, she gathered her hair in her hands and moved it across one shoulder, looking up and waiting.\n\nWaiting for him, he realized with a pang of pleasure.\n\nHe bent his head, briefly kissing her mouth with tenderness, before moving to fix the clasps on the shoulders of her dress, hoping fervently she didn't see the trembling in his hands.\n\n***\n\nTheir last full day at sea was a joyful one for Aslin, who spent it on the deck reading and watching the water. Ero worked the deck with the other men, but would come to her often for small conversation and to eat. Once when they were together he spotted dolphins and, pointing them out to her, brought her to the railing where she laughed aloud to see dozens of slick creatures leaping gracefully from the water's surface, as if in play. She was still laughing when Ero took hold of her and kissed her deeply, wrapping his arms around her in a warm embrace. For a moment she lost herself in his sweet kiss, until the wind brushing his hair against her face reminded her that they were outside and in full view of his men.\n\nShe pulled away quickly, looking around to see if they had been watched, and indeed a few men had not exactly paused in their work, but were wearing suspiciously wide grins. Aslin's eyes darted to Ero, fearing his embarrassment, but he only smiled at her.\n\nDante brought her tea and checked on her every few hours, but his visits were brief and hampered by Ero's keen observation. Dante made light of it, laughing at Ero's possessiveness, but nevertheless was scarcer than he had been in past days.\n\nThe idea that Ero was jealous of the young medic made Aslin strangely happy. It seemed ridiculous for a man like Ero, towering and commanding and too handsome to believe, to be jealous of someone like Dante. Yes, the healer was attractive in his own way, but who would look at Dante when Ero was nearby? No woman, she was sure.\n\nThe combination of Dante's efforts and regular use of Silta's herbal tea had made Aslin's stomach much calmer, and the seas quieted in cooperation as they crept closer to their destination.\n\n\"We should see land by first light,\" Ero had whispered, holding her against him at night, his hand endlessly stroking up and down her back.\n\nAslin closed her eyes, imagining the golden Almanian shores, and hearing the men above sing, as they did each night. Ero sang softly with them, the sound in his chest low and rumbly under her cheek, and it was at once exciting and terrifying. Songs of the men's homeland, of its treasures, its people, and its promises.\n\n***\n\nAslin's heart sped as she watched the dark mass of figures awaiting them on the distant pier. She felt she could faintly hear a constant low kind of noise coming from them too, like shouts. She felt Ero's presence beside her and shielded her eyes from the bright sun to try and get a better look.\n\n\"Is it a riot?\" she asked, worried. Never had she seen such a huge throng of people. How would they ever disembark in one piece?\n\nEro's abrupt laugh cut through her worries, and she looked over at him, frowning. He had thrown his head back and was laughing in true humor, his brow crinkled.\n\n\"What?\" he managed, laughing still.\n\n\"What?\" she echoed back, defensively. She thrust her hand out to gesture at the pier. \"You can't see the angry mob?\"\n\nHis laugh softened as he shook his head faintly. \"How differently your mind works. You're always ready to imagine the worst.\"\n\n\"Perhaps that's because I'm usually right,\" she snapped.\n\nAslin knew that people who expected only goodness from the world were those easily caught unprepared at the evil right in front of them. Her father had taught her to always be aware of these evils, he'd even taught her to defend herself. There were unsavory troupes of men wandering all over the Tirian countryside. When she was still just a girl, hardly more than twelve, she had been followed for some time on the village road by two men, and had run home in fear after they'd caught up and started jeering at her. The next day, her father had instructed her to wear a small dagger in a leather sheath attached to her garter, and taught her how to wield it against an attacker. Her mother had been shocked and dismayed, but had relented under her father's persistence.\n\nPerhaps all Almanians were that naive.\n\nShe glanced again at Ero, and found him studying her intently, apparently watching the unspoken memory's effect on her expression. His laugh was gone entirely now, replaced by something else she couldn't quite identify.\n\n\"It's our welcome home,\" he explained softly, sweeping his arm out to the crowd.\n\nAslin turned back to the pier, frowning. Looking closer now, she could see that some of the people were waving small colored flags. She swallowed.\n\n\"I told you, you will be safe here,\" Ero said, serious now.\n\nShe nodded, saying nothing, and the two of them watched as the ship slowly neared. She had watched all morning as they approached the island of Almania. It was more vast than she had imagined, like a continent higher on one side with green, jutting peaks that sloped down to a valley. Tiny white buildings decorated the mountainside, but the valley was filled with more and more buildings, varying in bright colors. The ship had sailed for the populous southern end, passing endless pale sandy beaches spotted with palm trees for hours and hours. When they had turned once, a glimmer in the sun had caught her eye, and her breath had caught at the giant golden dome that marked the center of the Royal City.\n\nIt had been all city the last hour of the sail, as the ship slowed to navigate around underwater rocks marked by buoys. Aslin hadn't thought the city would be quite this large, the buildings quite this big.\n\nHer heart began to throb at the sheer uncertainty of what awaited her, even though the joy of the crowd was unmistakable now. Amongst the sea of dark heads she could spot people jumping up and down, and children perched on their parent's shoulders.\n\n\"Aslin, there's something I need to tell you,\" Ero said quickly, and she heard the concern lacing his voice.\n\nShe started somewhat, so absorbed in her own thoughts that she had half-forgotten he stood beside her. She blinked, looking over at him, and his face was decidedly worried.\n\n\"It's something I should have told you already, but there never seemed a good time.\"\n\nStrangely, her mind honed in on only one possibility.\n\nHe was married, or at the least, betrothed to another. They couldn't be together now.\n\nShe said nothing, steeling herself. Of course he would be married. Of course.\n\n\"Ero,\" he said, and she blinked again, confused. \"It's a nickname.\"\n\n\"You want me to call you something else?\" she asked, unsure she could do it.\n\n\"No,\" he smiled in a half-laugh. \"Most people call me Ero.\"\n\nShe was confused, especially since he seemed to wait, as if that alone was his confession.\n\nHe swallowed and looked at the deck.\n\n\"My full name is Tynero.\"\n\nShe waited for more, but again he waited for her.\n\nTynero, she thought. The name sounded vaguely familiar.\n\nTime seemed to slow and she looked out again at the deep blue sea, as moments came to her like droplets of water falling on the calm surface of her consciousness.\n\nTynero.\n\nThe memory of little Jania and her mother, bowing ceremoniously to him in surprise, Lord Ero at their doorstep.\n\n\"It's a family name,\" she heard Ero say faintly. Was he speaking faintly, she wondered, or had her mind drifted too far away to hear him?\n\nTynero.\n\nEro stepping into a carriage the way she might sit on a milking stool. As if he did it every day.\n\n\"My father's name is Tyneid,\" he said, and she felt him slip his hand around hers, but she withdrew, her gaze centered still on the fathomless, dark sea.\n\nTyneid.\n\nSilta, who had known Ero as a young boy, from her years as a palace healer.\n\n\"Aslin, say something,\" she heard Ero whisper as if from a hundred miles away.\n\nTyneid, the name of the King of Almania.\n\nTynero, his son and heir.\n\nEro, her lover.\n\n***\n\n\"Aslin, say something, please,\" Ero said for what felt like the fifth time, his heart beating painfully in his chest as he reached for her hands again, feeling icy dread as again she pulled them away.\n\nThey were in a carriage now, bound for the Palace gates. She had stood stone-faced and blinking as they neared the pier, until the clamor of the crowd and the calls of his men working the boat onto its docking had pulled him away from her.\n\nHolding the boom with half a dozen other men at a precise angle that would allow them to stop alongside the pier for easy disembarking, he called for Dante the healer.\n\n\"See to her!\" he shouted over the din of the throng, thrusting his chin at Aslin, who was still frozen by the prow. \"There'll be a carriage at the end of the pier, bring her to it.\"\n\nThe healer nodded his understanding, his face serious as he approached Aslin and placed a hand gently on her back, as if to signal to her his nearness. Ero felt a wave of jealousy overtake him when Aslin did not pull away, merely turning her head slowly towards Dante.\n\nEro could not hear what the healer said, and Aslin seemed to still say nothing, but Dante reached down, taking her hand in his and tugging her away from the prow. The snake of envy coiled lower in Ero's belly. She let herself be led by the damn medic, but would not even look at him.\n\nIt had been an utter mistake to keep his identity from her this long, he knew it. He had known it for too long. It had been the one shadow cast over his pleasure since they had become lovers. But what could he have done? At first it had been imperative she not discover who he was, not just for his own safety but for the safety of his men and everyone in the keep. As far as he knew, his presence in enemy territory had never been known to the Tirians, and by all the gods he was going to keep it that way.\n\nBut once he had claimed her, he should have told her. And before they had sailed, he should have told her. She had come to this place with only a partial understanding of what she was coming to, who she was coming with, and the truth had been withheld by his own tongue.\n\nAfter the ship had docked, he made his way through the crowd, trying to smile and embrace the people who had come to welcome him, waving with what he knew was a plastered, false smile on his face. All he wanted was to be in the carriage with her, to have her speak to him.\n\nBut when he reached it, Dante was outside, shifting his weight and shaking his head twice. Climbing in with a growl and slamming the door behind him, he found Aslin sitting prettily in the carriage, her eyes fixed at nothing, her hands in her lap. She seemed to be breathing quite fast.\n\nShe would not speak to him the whole ride over, his attempts getting more and more frantic. He knew his pitch was not helping, she was in shock, and what he needed to do was give her space and time to think. But that was the one thing he could not force himself to do.\n\nThe ride through the city seemed over in a minute. Too soon they were entering through the Palace gates, gates that had been left open ever since their construction.\n\n\"My father will be waiting for me on the steps,\" he said, almost to himself. \"He always does, when I've been away.\"\n\nAslin squeezed her eyelids tight, as if to try and wake herself.\n\n\"You'll need to see him,\" he went on, as if they had been having a conversation. \"There's no avoiding it. He's expecting you.\"\n\nHer gaze moved slowly to his face, and he froze, wondering what he had said.\n\nBut before he could say anything else, the door to the carriage was opened.\n\n***\n\nAslin tried to rouse herself, having only a modicum of success in steeling herself for her imminent introduction to the King of Almania. Sweet heavens, what a turn this day had taken.\n\nEro held out his hand to guide her out of the carriage, and Aslin felt suddenly aware of the wayward knots of her hair, the creases in her gown, and her lack of any kind of adornment or beautification. She took a deep breath and released Ero's hand once she was out of the carriage, walking towards the steps where an older man and a young girl waited, with a bevvy of servants some distance behind them.",
        "\"My boy,\" the older man said warmly with a broad smile, and Ero moved forward to embrace his father. The man was dressed in richly dyed robes that draped around his lean form, accentuated by gold bands on his upper arms and several rings on his fingers. He wore no crown.\n\nAslin wasn't sure why she was surprised that this King was a handsome and virile man, neither wizened nor portly like the Tirian King. His hair was long and fell almost to his shoulders, wavy and mostly gray, but his brows were dark and expressive like his son's. They had the same smile, Aslin thought distantly, and wondered if she was looking at a preview of what Ero would look like as he aged.\n\nHer eyes shifted to the younger girl beside them, whom Ero gathered into a looser embrace. When he moved to muss the girl's hair lovingly she protested, twisting away with a smile and straightening her beautiful gown. She supposed this was the Princess, daughter of the King's second wife and half-sister to Ero. The girl looked less like her male relatives, and must have much of her mother in her. Her skin was lighter, but her hair a jet black, falling straight to her waist in a thick, liquid curtain of silk. Her face was small and feminine in its roundness, with heart-shaped lips and almond eyes lighter in color than the rich chocolate of her brother and father. The girl was younger than herself, but Aslin could already tell the beauty she would be. There was none of the gangly awkwardness that had plagued Aslin at that age. The young girl smoothed her hands over her gown, catching Aslin's eye and rolling her eyes humorously, as if to signal the impossibility of older brothers.\n\nAslin found herself smiling in sympathy, her heart already twinging at the thought of kinship with this girl. It had been so long since she had been in the easy company of another young woman.\n\nAslin's attention was caught by the King, descending several stairs in order to observe her more closely. When he spoke, he did so in Almanian, directed at his son, not at her.\n\n\"And this must be the lovely Tirian spy you've brought home,\" the King said drily, gesturing at Aslin's form.\n\n\"Aslin is not a spy, Father,\" Ero said, his voice stern, turning away from his sister to come to her side.\n\nDistantly, Aslin felt complimented at the idea that she could be thought a spy. Surely it would have suited her better than trying to pass as a boy soldier. Now that she knew the power of feminine wiles, she might have been apt at subterfuge.\n\n\"And if she was a good spy, you wouldn't know she was one.\" Ero's father laughed sarcastically, almost reading her thoughts. Strangely, the King's tone seemed one of disapproval rather than dislike. \"Honestly, my son, this is quite unlike you. I never thought I'd be the one advising you against making decisions with what's between your legs, rather than what's between your ears.\"\n\nAslin almost laughed, glancing at Ero, who had visibly coloured in embarrassment.\n\n\"She understands Almanian, Father,\" he said darkly.\n\nThe King blanched, looking back at Aslin, who was trying to keep her expression placid.\n\n\"And you didn't think to mention that in your letter, son?\"\n\n\"I only learnt of it after the letter sailed.\"\n\n\"Of course,\" sighed the King, exasperated, descending a stair to stand beside Aslin.\n\n\"I do apologize, dear, for my rudeness,\" he began with eyes lowered, clearly abashed, and Aslin noted a flush like Ero's on the apples of the father's cheeks. A King, apologizing to her, Aslin marveled.\n\nIt was the strangest day of her entire life, she, who had lived quite a strange life of late.\n\n\"I'm only looking out for my boy, you know,\" he went on mildly, looking up at her fully.\n\nAslin was met with the full force of his intelligent gaze, and she sensed the vivacious energy that still thrummed through him. His eyes shifted over her face as he took in her features, saying nothing. He blinked several times, staring openly, and she saw his brow begin to furrow as he tried to place her.\n\nSo like his son, she thought, again trying to repress a smile.\n\n\"Did we . .?\" he began, but trailed off, and they were quiet again for another long moment.\n\n\"Have we met?\" the King tried again, dazed, and from the periphery of her vision she saw Ero take a step towards them.\n\n\"You knew my mother, your highness,\" came her quiet reply in Almanian, her voice a bit unsteady.\n\nShe took a deep breath and went on. \"It was a long time ago. She was a handmaiden for your late Queen, before you married.\"\n\nThe King's eyes widened.\n\n\"Askira,\" he whispered, and she nodded.\n\nHis eyes roamed over her again, and Aslin could see his memories crossing over his face. She had heard stories of this King from her mother. At the time, she had assumed her mother was exaggerating for dramatic effect, but now she knew better.\n\n\"You are her exact copy, except for your coloring, of course,\" he mused, smiling, running a ringed hand through his graying hair in the way Ero did.\n\n\"I suppose you must have a dozen blonde siblings by now,\" he laughed mildly.\n\n\"Two, your highness, a brother and a sister. And only my brother has pale hair like myself.\"\n\n\"She is . . . happy?\" the King asked with delicate curiosity.\n\n\"She is, or at least she was until her eldest daughter ran away to join the army.\"\n\n\"That does sound like something a daughter of Askira might do, given your Miradian blood especially,\" he chuckled, all his disapproval seemingly at bay.\n\n\"Miradian?\" Ero asked sharply, and Aslin started, cursing herself for still feeling unnerved by his close presence.\n\nBut the King ignored Ero's interjection, his eyes still fixed on hers.\n\n\"I am not surprised then, to hear of your prowess as a warrior,\" he went on, and Aslin dimly wondered what exactly Ero had written in that letter.\n\n\"I am not a warrior anymore,\" she shrugged.\n\nThe King shook his head. \"Once a warrior, always a warrior. They say the valor of the Miradian bloodline dies only after the eighth generation, and you are only two removed.\"\n\nAslin didn't know what this meant, so she said nothing.\n\n\"She must think you dead,\" the King realized with sudden alarm, his brow furrowing.\n\nAslin swallowed with difficulty. That thought was never far from her mind.\n\n\"We will remedy that, and soon,\" he said, as if the matter was already solved. \"But in the meantime, you will stay here, as my guest. Any child of Askira is always welcome here.\"\n\nAslin nodded her shy thanks. It did feel better to stay as the King's guest, and not her lover's.\n\n\"And moreover, I recognize you as Almanian, whatever that may be worth to you. Your grandfather came from a sacred bloodline.\"\n\nThe moment seemed weighted with meaning, and Aslin struggled to think of what to say.\n\n\"Thank you, Father,\" Ero's voice interrupted her thoughts, and she glanced over at him. He was obviously surprised at what had transpired, and moved to embrace his father again.\n\nAslin's eyebrows raised. There was more happening here than she understood.\n\nThe King accepted his son's new embrace with a chuckle, but extricated himself. \"I don't do it for you, boy. She merits it without you. You, son, are lumaira,\" he said, laughing.\n\nAslin didn't know this word, but he must have chided his son, for Ero blushed deeply and took several steps back, glancing over at her surreptitiously.\n\nThe King turned, signalling to the young girl behind him to come forward. \"My daughter, Princess Bitta,\" he said by way of introduction, and the young girl descended, coming close and standing on tiptoes to kiss Aslin on first one cheek then the other. Aslin felt a rush of awkwardness, unsure if she was supposed to reciprocate, but then Bitta withdrew, having taken one of Aslin's hands in her own.\n\n\"It is lovely to meet you Aslin,\" the girl said softly, smiling again.\n\n\"Don't you two make a pair,\" the King laughed, and Aslin pictured them side by side, absolute opposites in complexion. \"Bitta, will you show Aslin our home?\"\n\n\"Yes, Father,\" Bitta acquiesced easily. \"We shall spend the day together.\"\n\n\"Well, not the whole day,\" Ero cut in, frowning. The party all looked at him, and his flush returned with a vengeance. But the King had wrapped his arm around his son's shoulders and was pulling him up the stairs.\n\n\"You will forgive me once again, Aslin,\" the King said, looking back at her. \"I must steal Ero away. We have much to discuss and prepare.\"\n\n\"Of course,\" she murmured in deference, grateful for some time away from Ero. She needed to process this remarkable turn of events without his constant hovering.\n\n\"If I could have but a moment,\" Ero protested.\n\n\"You may not,\" the King said definitively, patting Ero firmly on the back with good humored gusto as he led him away. \"When it comes to women, a moment always becomes more.\"\n\nAslin and Bitta watched the men depart until they were out of earshot.\n\nBitta smiled broadly at her. \"Whatever have you done to my brother?\" she laughed, tracing her fingers gently over the healing cut on Aslin's bare arm.\n\n\"What do you mean?\" Aslin asked, her voice light but her guard up.\n\n\"Well, he left here his usual stern self, and has returned light as a cloud. The way he looks at you,\" she laughed again, her gaze keenly examining Aslin.\n\n\"Is that the look of love then?\"\n\nThe girl's softly spoken question caught Aslin off guard and she took a step back, feeling her heart pound.\n\n\"I am sure it is not. You have nothing to worry about from me.\"\n\n\"Worry?\" the girl echoed, still smiling. \"I only worry that I will one day be as lumaira as my brother!\"\n\n\"I don't know that word, lumaira,\" Aslin murmured, upset.\n\nThe girl's expression softened to see Aslin's face. Momentarily she reached for Aslin's hand again but let her arm drop, perhaps sensing Aslin was not used to or desiring of such displays of affection. Bitta had already touched her more than her own sister did in the course of a year.\n\n\"It means to be under the moon's spell,\" she explained softly.\n\nAslin still did not understand, and Bitta could see it.\n\n\"The moon shapes the tides of the ocean, and the tides within women,\" she went on, and Aslin felt a blush creep along her neck. To hear a Princess speak of such things, it was unbelievable.\n\n\"We think the moon has her sway over hearts too. When a man is under the moon's spell, it means he is captivated by someone, and likely to act foolishly.\"\n\nA long moment of silence stretched between the women. Aslin swallowed, disbelieving her own comprehension of Almanian and struggling to understand what hidden meaning lay behind Bitta's words. Was Ero then acting foolishly in bringing her, in being with her?\n\nBitta smiled again, sympathy stark on her expression. \"I hope I did not overstep. I have heard that Tirians are more sensitive.\"\n\n\"No, no,\" Aslin tried blandly to reassure the girl, her thoughts racing.\n\n\"If the words are yet unspoken, the blame is all Ero's. He lives entirely in his head,\" Bitta said cheerily, beginning to ascend the stairs and signalling for her to follow.\n\nAslin merely shook her head, feeling at a complete loss as she walked dazed into the royal palace complex.\n\n***\n\nLate that night, so late he was sure she would be asleep, Ero knocked softly on the door to the rooms he had directed be Aslin's. They were a short walk from his own, with a view of the gardens beyond. Her bedroom was spacious and the walls bright, as she liked them. He waited, rubbing his eyes with his hands, his head swimming with the details of the peace talks to come and all the work required to ensure a smooth reception of the Tirian royal delegation.\n\nShe must be asleep, he thought, and after a moment's hesitation, knocked again.\n\n\"Ero?\" came an uncertain voice, slightly muffled through the door.\n\n\"Yes, it's me,\" he laughed tiredly, but still the door did not open.\n\n\"What is it?\" asked Aslin after a pause, and he sensed caution in her tone. His mind prickled back to awareness. He had forgotten that they had not spoken since she had learnt of his identity.\n\n\"May I come in?\" he asked, feeling his heart thump.\n\nAgain a long silence, and Ero's breath began to quicken.\n\n\"We can't,\" she replied so softly he could scarcely discern the words.\n\nHis chest constricted.\n\n\"Open the door, Aslin,\" he said, hearing the sharpness in his voice. \"I can't hear you.\"\n\nAnother excruciating moment later, and she opened the door just wide enough for her face. She had been asleep. Her hair was in a vague kind of disarray, and she wore a white night rail. He felt instantly better, if only a fraction, after at least being able to see her. But he must focus, and get this right, damn it.\n\n\"Tell me why,\" he demanded, his voice low, and her glance flitted up to him, nervously.\n\n\"Because of who you are,\" she insisted. \"And who I am.\"\n\n\"You don't want me now that you know I am a royal?\" The disdain in his voice was evident.\n\nShe shook her head quickly. \"No. You don't understand.\"\n\n\"Then explain it to me,\" he said emphatically, and she shushed him, looking out into the hallway.\n\n\"Someone will hear you,\" she chastised.\n\n\"What do I care?\" he scoffed. \"It is no one's business but ours.\"\n\nHer brow knit, and she looked up at him again, opening the door a little wider, to her shoulders. \"The censure of your people means nothing to you?\"\n\nNow it was his turn to be confused. They were clearly speaking across each other, and he was impatient to just be inside her room, to be inside her body, really, where everything was clearer.\n\n\"Heila. Speak plainly, woman,\" he said sternly, feeling exhausted.\n\nShe considered a moment, still frowning.\n\n\"If we were in Tiria, it would be unthinkable, you and me, together, openly.\"\n\nHe felt his scowl ease slightly with his befuddlement.\n\n\"Why?\"\n\n\"Your people would judge you harshly, for having a woman who was not your wife. It would be indecent. And being with you . . . it would ruin me.\"\n\nA woman who was not his wife.\n\nEro's heart leapt. He desperately wished Aslin's words hinted at the possibility of their own marriage, but a deeper part of him knew that was not what she meant. He took a breath to steady himself before answering her, choosing his words with the utmost care.\n\n\"It is not the same here. The rules are not so strict in the relations between men and women. It is almost expected that young people are together . . . intimately, before they are wed.\"\n\nShe shook her head, as if he still did not understand, and he felt a pang of grief.\n\n\"But what if they are not to be wed? What if they are just thrown together, by chance?\"\n\nHis chest hurt, and he was so tired. He wished she would just let him in.\n\n\"There would be no censure for me, Aslin,\" he stated tonelessly. \"My people want me to be happy, and you . . . you make me happy.\"\n\nShe glanced up at him in surprise, and he shrugged. It was the truth.\n\n\"And as far as your own ruining,\" he went on drily. \"If by that you mean your prospects for marriage, if anything, they would be improved.\"\n\nShe grimaced slightly at the blunt turn of the conversation. The thought alone of her marrying someone else after being with him was enough to disgust him too.\n\nEnough.\n\nHe put his open palm on the door and pressed against it, widening it halfway until Aslin found the presence of mind to try to close it once more. He stuck his foot out and held it pried open.\n\n\"I will say this once more, Aslin,\" he warned, frustration flaring. \"You are neither a prisoner here nor are you beholden to me in any way. That being said, I desire you. Do you desire me?\"\n\nShe was breathing quickly now, flustered, and the sight of her peaked nipples straining against the fabric of her gown made a low growl emanate from his throat.\n\n\"Tell me you do not desire me, or I will come inside your room.\"\n\n\"Ero . . .\" she protested. \"It is more complicated than that.\"\n\n\"No,\" he growled again. \"It is not.\"\n\nHe placed his forearm against the door and shoved it open, picking Aslin up and moving swiftly inside the room. But instead of carrying her to the bed he turned, pressing her back against the corner walls and wrapping her legs around his waist as he rubbed his manhood against her and claimed her mouth in a searing kiss. Startled, Aslin placed her hands flat against the wall, trying to push off away from it but he growled, shifting so as to dislodge her and press her back more firmly, his sex grinding against heat he could feel even through her nightgown. He heard her cry out in alarm, but her hands came around his neck to hold onto him. He could not see her in the darkness of her entryway, but her sounds were shredding his sanity. Shaky breaths were escaping her. He knew not if she trembled from desire or fear, and at the moment, both possibilities were equally tantalizing. He pulled up her nightgown to her waist, his hands gliding over her thighs and ass. He thought of the redness of her cheeks when he spanked her, and squeezed one round buttock, making her yelp.\n\n\"Being with me would ruin you, would it?\" he gritted through clenched teeth, pressing his cock against her entrance, reaching for the fastening of his trousers.\n\n\"Being with a backwards, uncivilized Almanian?\" he swore, feeling in that moment how utterly different they were from each other, how alone he was in his all consuming desire for her.\n\n\"That's not what I meant,\" Aslin breathed shakily, pressing her forehead against his.\n\nHe grunted and moved his face away, bending to open his mouth hot against the curve of her shoulder as he freed his erect length and searched for her, groaning as he found her already slick.\n\n\"From the feel of you, you want to be ruined,\" he hissed, penetrating her to the hilt in a single, rough stroke, her body tensing with the shock of it.\n\nBy all the gods, she felt so fucking good. He was losing his mind.\n\nOnce fully seated, the feeling of being buried within her was too much and he hoisted her up higher against the wall, pinning her as he thrust forcefully over and over, losing himself in the pure sensation of her body.\n\nShe was moaning softly every time he came within her, her breasts pressing against his chest as her back arched from the wall. He felt her hands clutching tightly at his hair and he grunted, wanting only to pummel into her endlessly, to feel the friction of their bodies together like a mated pair.\n\n\"I have ruined you, Aslin,\" he snarled, not even fully aware of what he was saying, the words streaming out of him as his cock forced its way into her over and over.\n\n\"Yes,\" she cried softly, and his heart gave a throb.\n\n\"I am the only man who will ever fuck you like this,\" he swore under his breath, fulfilling his promise as he drove into her relentlessly.\n\n\"Yes,\" she moaned again, her body twisting as her head fell forward onto his shoulder.\n\n\"Yes, Ero, yes,\" she cried in an endless litany, her mouth open against his skin as he brought her to a shattering climax, pounding into her even as the pleasure claimed her. She cried out loudly, the sound wrenching and beautiful to him, a sound he wished to seize as his alone. Her hips were jerking against his and he groaned, sliding his hands around to her rear, pulling her down onto his cock and taking her full weight as he took his own pleasure, coming with a hoarse cry and jetting his seed into her as she gasped, draped over him.\n\nHe stumbled forward in a sensual daze, pressing her again into the wall, their bodies still connected. They were both panting with exertion, and he felt the fabric of his shirt clinging to his damp chest. This time, when Aslin pressed her forehead against his, he kept her there.\n\n\"I'm sorry I didn't tell you,\" he breathed, butting her forehead gently as if to emphasize his point.",
        "She said nothing, her breath hot against his face. His hands glided over her slick body, incapable of denying himself. He opened his eyes, but could barely see her in the darkness.\n\n\"I am the same man, Aslin. I swear it.\"\n\nHe felt the flutter of her eyelashes as she looked at him.\n\nFor a long moment they stayed like this, his cock still twitching buried inside her, his thighs trembling with the effort of holding her aloft.\n\n\"Yes, I know,\" she whispered finally, turning her head and pressing her mouth softly against his.\n\nHer kiss was tender. Damn his sorry heart, it even felt loving. It felt like forgiveness, like understanding, like being seen for who he wholly was. Her lips meshed and met his repeatedly, her shyness at odds entirely with the brutal way he had just taken her. He let her kiss him, meeting her with receptivity but holding back from taking over, as his baser self was always demanding of him.\n\nShe broke off, brushing her nose against his.\n\n\"Put me down, you oaf.\"\n\nHe grinned, taking her weight once more and walking them over to the bed. It felt delicious to have her still wrapped tight around his cock, where she belonged.\n\nReluctantly, he bent and laid her atop the bed, pulling out of her. There was a single candle lit by her bedside, its small glow enough to illuminate her features. Watching her, he slowly undressed, making known his intention to stay the night. Her eyes wandered over his body as more and more of it was revealed, and her teeth caught her lower lip. He'd have to punish her for that later, he thought with dark satisfaction.\n\n\"Take that off,\" he stated firmly, and only a moment later she sat up, pulling the nightgown up over her head, her beautiful hair cascading over the pale curves of her naked body.\n\nHe moved to the bedside, and she scooted back to make room for him, laying down and letting her knees fall open. He paused a moment to look at her like this, supremely erotic and pliant, before crawling atop her, weighing her down onto the bed.\n\n\"Touch me, Aslin,\" he said softly, his voice almost a plea.\n\nHer hands came to his biceps, then his chest, smoothing over his skin like it was the surface of water. Her touch was light and hesitant, never demanding, as he always was when he had her body in his grasp.\n\n\"I am yours to explore,\" he murmured, bending to lick the column of her neck, and feeling the shiver he knew it would entice in her.\n\nHer touch grew bolder, curving around his neck to draw him closer, and down his back. When he felt her grip his buttocks he let out a deep, gruff laugh.\n\n\"Getting your revenge?\" he teased, kissing up the side of her face.\n\n\"I liked it,\" she whispered softly, and he froze, his heart thundering. He could just see her eyes open, watching him.\n\n\"The pain,\" she whispered seductively, dragging her fingernails up the length of his back, making him shudder.\n\n\"It was like pleasure, almost.\"\n\nHe could scarcely believe what he was hearing. His innocent Aslin, now a dark creature of his own making?\n\n\"Is that wrong?\"\n\n\"No,\" he said quickly, hearing the tremble in her voice and taking her tightly within his arms.\n\n\"Nothing can be wrong that gives you pleasure,\" he promised, his mind swirling with the possibilities of her confession. His cock was swelling again at the mere memory of her reddened flesh, his fingers inside her as she moaned.\n\n\"Did you like it?\"\n\nHe took an unsteady breath, afraid of admitting how much visceral pleasure punishing her had brought him. It made him a monster, didn't it? But how could he lie, after she had gifted him such honesty?\n\n\"Yes,\" he whispered, bending his head to her throat, praying to all the gods that she understood.\n\nHer roaming hands moved between them, and she took his erection in her gentle grasp, bringing it to her and guiding it inside. He was still so sensitive that it was nearly painful, but yet, so utterly necessary.\n\n\"Then, I think,\" she murmured, a light laugh escaping her to his sheer disbelief, \"that we may have ruined each other.\""
    ],
    "authorname": "Surfacing1440",
    "tags": [
        "fantasy",
        "sailing",
        "secret",
        "royalty",
        "secret identity"
    ],
    "category": "NonConsent/Reluctance",
    "url": "https://www.literotica.com/s/the-archer-part-pt-04"
}