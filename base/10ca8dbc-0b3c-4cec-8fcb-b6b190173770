{
    "title": "Spring Break",
    "pages": [
        "Note from Slickman: This is a story about a girl and boy who met on Spring Break and had the greatest three days of their young life. Afterwards they........sorry you will just have to read the rest. \n\nCopies of this story may not be made for distribution, be publishing or copied to another webpage without explicit permission from the author. \n\n*\n\nSpring Break\n\n1983\n\n\"Come on Robbie, there are girls everywhere,\" Paul Robbins yelled at his roommate who was sitting alone on Daytona Beach. \"There are at least two girls for every guy.\" \n\nRobbie Samuels turned and looked at his shit-faced buddy. \"Go ahead and take my two,\" he laughed. They had arrived in town yesterday morning and neither had taken one second of snooze. It was fun drinking and dancing at the small Shangri-La hotel and even skinny dipping in the small pool but now that the time had come to have sex with the boozed up females he headed to the beach. \n\n\"Come on man, it's time you lost your virginity,\" Paul laughed. \n\n\"No that's OK, have fun but make sure you wear protection,\" Robbie yelled back at Paul who had turned and walked back inside. He could see the many couples up on the numerous balconies kissing and groping each other. The three beers he had after a quick burger had given him a good buzz. The warm air bellowed in over the breaking waves blowing his blonde hair back across his tanned face. He leaned back onto the large towel and closed his eyes. \n\nAlmost an hour had passed when Robbie heard someone's voice. He slowly opened his eyes and saw a blonde angel looking down at him. \"Are you OK?\" She asked. \n\n\"Are you real?\" he whispered as he pushed himself up onto his elbows. His eyes followed her long tan legs up until they disappeared under her short white skirt. He could see the edge of the white triangle between her thighs until she moved down to sit next to him. \n\n\"I'm real,\" she smiled. \"I've been walking on the beach.\" \n\nRobbie glanced over his head and saw the balconies empty. \"Where did everyone go?\" \n\n\"They are all inside,\" the girl blushed. \n\n\"Oh,\" Robbie said. He figured from her tone that a full fledge orgy was going on. \n\nThey sat silent for a few minutes until Robbie said, \"My name is Robbie.\" \n\n\"Julie,\" she said softly. \n\n\"What time is it?\" he asked. \n\nJulie looked at her watch. \"2:00AM.\" \n\nRobbie peeked at her cute chin, nose and face. \"Are you here with anyone?\" \n\n\"My sister,\" she answered. She had just turned eighteen and her twenty-year old college sister had picked her up on the way to Florida. \"And you?\" \n\n\"My roommate,\" he replied. \n\n\"EEEYEEEYYEEEE!\" Someone yelled behind them. They turned to see a naked girl running from the hotel with a naked guy chasing her. Both were laughing. \n\nJulie jumped out of the way and landed on Robbie so she wouldn't get run over. They both peeked at the two nudes running down to the water. \n\n\"God,\" she giggled. It was the first totally naked man she had ever seen. She turned and looked down into Robbie's eyes. \n\nBefore he could react Robbie felt her lips on his. His mouth opened and accepted her tongue. Her breasts crushed into his chest as his hands explored down her slim back to the cute round buttocks. \n\nJulie felt his hard penis pushing up against her stomach and realized tonight was going to the night she would loose her virginity. She didn't stop him when his fingers pulled up her short skirt and caressed her almost bare ass cheeks. Only the thin strap of the bikini panties stopped him from touching everything. She broke her mouth from his and took two deep breaths. \n\n\"This is crazy,\" he whispered.\n\n\"I know,\" she giggled as her mouth returned to his. This time Robbie broke his mouth away. \n\n\"We can't do this....\" \n\nJulie caught her breath. What had she done wrong? \"OK,\" she said as she fell onto her back. She pushed down her skirt to cover the front of her moist panties. \n\n\"That's not what I meant,\" he smiled. \"Not here. Let's go find a room.\" \n\nBoth were laughing as they grabbed each other's hands and ran back into the hotel. The lobby was empty so they ran up the stairs. \"My room is on the second floor,\" Julie said hoping her sister was not there. \n\nRobbie stood back as Julie unlocked the door and then followed her inside. They both stopped when they saw the two naked bodies passed out on the sofa. The girl's legs were spread wide open showing them her hairy mound and dripping pussy. The guy was lying on his side but turned over enough to show his limp penis which was about four inches long. \n\n\"That's only the second one I've ever seen,\" Julie giggled as she pulled Robbie into the bedroom and closed the door behind them. \n\nRobbie sat on the bed as he watched her pull her blouse over her head. \"You're a virgin.\" Her full breasts pushed over the semi-bra. \n\n\"Yes, is that OK?\" She reached for the bra clasp and stopped as she awaited his answer. \n\n\"Definitely,\" he smiled. \"Me too.\" His eyes widened when her bra fell from her creamy white breasts. Her two cherry nipples were pointing out at him. \n\n\"Good,\" she giggled. \"Are you going to get undressed too?\" \n\nRobbie pulled his shirt off and had released his shorts when he saw her skirt fall to her ankles. \n\n\"You're staring,\" she giggled. It was the first time a male had seen her naked breasts. \n\n\"Wow,\" he said now grinning ear to ear. Being with another virgin made him feel more confident because he figured they would learn together. He pushed his shorts over his bulging boxers and watched her turn around and slowly pushed down her skimpy panties. She looked over her shoulder and giggled at his expression while he gawked at her amazing ass. \n\n\"I'm not turning around until you remove your boxers,\" she said. \n\nRobbie took a deep breath and quickly removed his underwear. He quickly covered his hard-on and waited. \n\n\"No fair,\" she said still looking back at him. \n\nHe heard her gasp when he slowly pulled his fingers away. Again he said, \"Wow!\" when he saw her flat abs and blonde puff of pubic hair resting atop a splattering of golden tendrils covering her pink slit. \n\n\"Turn off the light,\" Julie said blushing. \n\n\"No, I want to see you,\" he grinned. Suddenly Julie took three hops and jumped onto his body forcing him onto his back. They both froze as they felt a naked body against their own for the first time. \n\n\"Oh God, you feel so good,\" he whispered as his fingers lightly touched down the middle of her back to her tailbone. \n\n\"You feel so hard,\" she giggled as her belly rubbed up and then back down over his tool. As his fingers again caressed her naked butt her fingers moved between their bodies until they curled around his thick penis. \n\n\"Don't,\" Robbie moaned when he felt her touches. His old girlfriend had given him hand jobs but this was different. He was ready to cum the first time he saw her naked body. \n\n\"You don't like it?\" she asked. \n\n\"No I mean yes but I don't want to....,\" \n\nJulie quickly released his rod when she realized he was about to cum before they had a chance to lose their virginities. \n\n\"We better do it now,\" he moaned when her soft bush pushed against the hard pulsating tip. \n\nSuddenly Julie remembered the last words her sister had said before they parted company for the night. \"Do you have protection?\" \n\n\"Ah shit,\" Robbie thought. \"Yes, but it's in my room.\" \n\n\"Wait here,\" Julie said as she jumped from on top of him and ran out the door stark naked. \n\n\"He's got to have more than one,\" Julie thought as she grabbed the guy's pants on the floor next to the sofa. She fished into his back pockets and found them empty. \"Please,\" she said aloud when her fingers felt down into his front left pocket. She touched the square package and smiled as she held it up in front of her. \n\n\"Jackpot!\" Julie cried out when she pushed open the door and ran back into the room. Her teeth ripped open the small package and pulled out the latex circle. \"Here.\" \n\nRobbie's fingers fumbled as he tried to get the tight condom over the enlarged mushroom tip. \n\nJulie could see he was having trouble. \"Let me do it.\" She took the condom from him and guided it down over the crowd. As her hand pushed it down it completely covered his shaft with about three inches not covered. \"Is that right?\" \n\n\"Yes,\" Robbie groaned. The tight covering was suddenly restricting his blood flow. He smiled and opened his arms for her to climb on again. \n\nJulie's thighs opened as she saddled his hips and took his rubber protected prick in her fingers. She guided it to her virgin gate and invited him in. Her body weight pushed down until the huge tip pushed hard against her maidenhead. \"OHHH!\" she moaned just before she dropped her whole body weight. \n\n\"Shit it's tight,\" Robbie moaned when about four inches pushed up inside of her. \n\n\"I'm supposed to say that,\" she laughed as she tried to ignore the pain and pressure. The moisture inside helped as she lowered herself down another two inches. \"How big are men supposed to be?\" she wondered as she dropped another two inches until she hit bottom. \n\n\"Wait, don't move,\" she whispered. \"Let me get used to it.\" \n\n\"Oh God Julie, I have to...,\" he moaned as he pushed his hips down into the bed causing his prick to withdraw about three inches. \n\n\"OHHH!\" she moaned. \n\n\"Are you alright?\" Robbie asked. \n\n\"Yes,\" she giggled. 'It feels good.\" This time her body pushed down and then back up. Suddenly their bodies moved in sequence. They were fucking. \n\n\"Julie,\" he moaned when he felt the dam about to burst. \n\n\"Yes,\" she smiled. She had never experienced an orgasm before and was satisfied just loosing her virginity. \n\n\"Julie, I'm going tooooo...........\"\n\n\"Do it,\" she whispered when she dropped her pussy all the way down. She squeezed her inner muscles and felt his hot juices shoot into the tip of the condom. \n\n\"OH GODDDDD!\" Robbie screamed. His hips shot up and down about six times before he slowed down. He kept pumping into her hoping she too would reach satisfaction. \n\nJulie expected him to get soft but he never did as he kept fucking in and out of her. The spark between her thighs became a small fire and then a raging flame. Her face and head jerked back when she screamed her total sexual pleasure for the first time. Their bodies curled together as they welcomed sleep and relaxation. \n\n*****\n\nErica heard the door to their efficiency room close and then slowly opened her eyes. She realized she was stark naked and lying on the sofa. She quickly closed her opened thighs and pushed away from the guy lying next to her. She tried to remember what happened but the wine had erased just about everything. She looked down on the floor and saw the used condom. \"Good,\" she thought as she walked into the other room to check on her sister. \n\n\"Shit,\" Erica whispered when she saw the naked guy lying face down on the bed. She stared at his cute ass and wanted to jump on top of him but hesitated. She had to know where her sister was. \n\nRobbie felt a hand on his shoulder pulling him onto his back. He remembered being with Julie and smiled when he opened his eyes and looked up into her face. However it wasn't the girl whom he had fucked last night. \"Who are you?\" \n\n\"Where is my sister?\" Erica asked as her eyes quickly captured his penis which was about six inches in the soft state. She suddenly realized she too was naked. \n\n\"Is your sister's name Julie?\" \n\n\"Yes,\" Erica answered. \n\nRobbie looked around the room and at the opened bathroom door which showed it to be dark inside. \"I have no idea.\" His eyes turned and looked at her nice firm breasts and hard nipples. He tried not to get excited but his penis didn't cooperate. \n\nErica leaned back from his as his prick expanded to its full eight inch length. \"Did you and her.........\" \n\n\"Yes,\" Robbie answered while cutting her short. \n\nSuddenly they heard the door open and saw Julie's form standing in the doorway. She smiled. \"I see you two have met.\" \n\n\"Yes,\" Erica said seeing her younger sister in a blouse and short skirt. \"Where have you been?\" \n\nShe giggled as she walked to the bed and pulled her sister's arm. \"I had to do some necessary shopping.\" Her eyes saw Robbie's hard-on when Erica moved off the bed. \"What were you two doing?\"\n\n\"Nothing,\" Erica said as she grabbed the bag from her sister's hands and looked inside. There had to be at least a dozen condoms. \"Are you kidding?\" \n\n\"No,\" Julie grinned. \"Now if you don't mind we would like to have some privacy.\" She walked her sister to the door and closed it behind her. \n\n\"What's in the bag?\" Robbie asked as he watched her walk back to the bed and pulled her blouse over her bare breasts. \n\n\"Protection,\" she giggled as she pushed down her skirt. She was not wearing panties. She turned over the bag until the 12 condoms fell next to him. \n\nRobbie quickly counted them. \"A dozen?\" He looked at her in shock. \n\n\"If we need more I'll run back to the drug store,\" she giggled as she once again jumped onto his body and planted her lips onto his. Robbie closed his eyes as she put on a condom and once again guided her pussy down on top of his prick. This time he lasted a lot longer. \n\nAfter returning from the bathroom later he saw her smiling while holding up another rubber. \"Don't I get to rest?\" he asked with a big grin. \n\n\"No,\" she giggled as her tiny fingers touched and stroked him until he was once again hard. \"Let's do it this way,\" she said as she moved onto her back and pulled him between her legs which quickly wrapped around his waist. \n\nThis time they took their time as their hands explored each other totally. About half way through they heard Erica's voice. \"Julie, I have to go to the bathroom.\" \n\n\"Shit,\" Julie whispered as she grabbed the sheet and pulled it over their connected bodies. \"OK!\" she yelled. \n\n\"Don't you two ever come up for air?\" Erica asked when she saw their two heads sticking out from under the sheet. It was obvious that Robbie was between her thighs. The guy she had fucked last night was a loser so she quickly kicked him out. \n\n\"No,\" Julie said. \"Knock before you come back out of the bathroom.\" \n\nThey heard the door close behind Erica and Julie bit Robbie's ear. \"Fuck me,\" she whispered. \n\nErica turned on the small ventilation fan in the bathroom to drown out the intercourse noises coming from the bedroom. She had wanted her sister to have a good time and possibly lose her virginity but this had to be at least the third time. Suddenly she became jealous wishing it was herself in bed with the guy. \n\n\"I'm coming,\" Robbie warned as his hips pistoned in and out of her wonderful hot pussy. \n\n\"Me too!\" Julie screamed. \n\n*****\n\nErica took her time showering and then drying her hair. She had heard the climatic screams and figured they were done as she pushed open the door and froze. Her younger sister was on her hands and knees while the guy was fucking her doggie style. \n\n\"I told you to knock,\" Julie glared at her sister. \n\n\"I thought you were finished,\" Erica said as she moved quickly to the door. \"Sorry.\" \n\n\"Don't stop,\" Julie begged Robbie. Although she was a virgin she had read some books about the various sexual positions. So far she had tried three of them and had a lot more to go. Doggie style did not give her the pleasure the other ones did so she reached up under her stomach and rubbed her hard clit. \n\nRobbie's body was slowly falling into exhaustion while he fucked into this cute girl's hot pussy. He knew he was going to die but at least it would be doing something feeling really great. He heard her climax again and then released his hot juices. They fell onto the bed in a big heap. \n\nIt was an hour later when they were awakened by Erica's knocks on the door. \"It's lunch time! Do you want to go out for some food?\" \n\nJulie twisted her body and looked into his eyes. \"Do you want to eat something?\" \n\n\"No, right now I want to take a shower with you and then eat you,\" he laughed. \n\n'Yummy,\" she giggled. \"And, I get to eat you too.\" \n\n\"Well?\" Erica asked. \n\n\"Bring us back some sandwiches!\" Julie yelled. \"We are going to take a shower!\" \n\n\"This isn't fair,\" Erica muttered as she grabbed her purse and headed out for something to eat. \n\nJulie moved under the hot water first and waited for Robbie to join her however he never did. She turned and saw him just looking at her. \"Like what you see?\" \n\n\"God yes,\" he smiled. \"I could look at you all day.\" \n\n\"No you can't because you said you were going to eat me,\" she laughed. Her fingers washed over her slightly sore pussy before she turned and spread her legs. \"Your lunch is ready.\" \n\nJulie held onto the towel bar when Robbie's face pushed up between her trembling thighs. \"OH GOD!\" she screamed when his tongue flicked across her enlarged clit. \n\n*****\n\nErica took her time getting the sandwiches hoping the two sex birds would be through with their shower by the time she returned. She could still hear the shower running when she walked up to the bathroom door. She was ready to knock when she heard the guy's voice. \n\n\"Your mouth feels so good!\" \n\n\"Shit,\" she said as she walked back into the living area. \n\n*****\n\nJulie managed to get about four inches of his hard cock into her throat when she felt his body shutter and his hot juices shooting into her mouth. She pulled back and spit out his cum while he continued to empty his spunk on her chest. She moved up into the hot water and washed off. \n\n\"Let's go see if our food is back,\" she said smiling. \n\n*****\n\n\"Thank God,\" Erica said when the door opened and Julie walked out. \"Hurry and get dressed because we have to be the Beach Blast in twenty minutes. \n\nJulie's robe opened showing her naked body underneath. \"You'll have to go without me.\" She picked up the sandwiches and two sodas and headed back into the bedroom. \n\n\"Julie, you can't stay in bed for four days,\" Erica said. \n\n\"You wanted me to experience sex so I'm doing what you wanted,\" Julie grinned. \n\n\"Yes, but if you do it about three more times you will pass me up.\" \n\n\"Well, I guess you will just have to find someone like Robbie,\" she giggled as she shut the door behind her. \n\n*****\n\nAfter eating her sandwich Julie pulled off her robe and snuggled up to Robbie's bare back. She pressed her hard nipples into him and reached around and down to grab his soft penis. \"Ready to go again?\" \n\n\"Let me finish my food,\" he said taking a big bite. \n\n\"You eat that and I'll eat this,\" she giggled as she climbed over his hip and moved her lips to his soft noodle. \n\nRobbie took a drink and felt some life stirring down below. He realized all he knew about her was her first name and that she has a sister named Erica. \"Where do you live?\" \n\nJulie heard the question and popped her lips off his expanding prick. \"Virgina,\" she answered before returning to her large sucker. \n\n\"How old are you?\" he asked suddenly afraid she might be underage. \n\nHer mouth moved off again. \"Old enough.\" She saw that he had finished his sandwich and quickly turned her body until her soft pubic mound pushed against his face. When his tongue pushed into her hot slit she asked him, \"Where do you live?\" \n\n\"New Jersey,\" he answered between licks. \n\nBoth were ready and stopped talking. Their mouths explored and tasted areas they had not tried before in the shower. When Robbie's rod was fully hard again Julie moved away. \"How do you want to do it this time?\" \n\n\"Lady's choice,\" he replied. \n\nJulie moved until she was sitting on the bed with him on his knees between her legs. She slowly shoved her hips lower until he was lined up with her opened gash. They both shifted forward until he slowly entered her. \n\n\"That's cool,\" he whispered. \"Are you sure you haven't done this before?\" \n\n\"No,\" she giggled as her fingers roamed behind him to grab his ass. \"Rock back and forth.\" ",
        "Robbie did and realized the rocking motion resulted in his prick pushing in and out about three inches. He could now look into her baby blue eyes and into her deepest thoughts. As innocent as she looked last night on the beach she was now just the opposite. She was a woman wanting him to fuck her until she screamed. He did just that. \n\n***** \n\nErica returned to the hotel around 6:00PM expecting her sister to be waiting for her. She was surprised when she saw the bedroom door closed. \"This is getting crazy,\" she thought as she knocked on the door. She didn't hear any noises so she peeked inside. Over in the corner on the far side of the room was her sister sitting on the guy's lap while he sat on a chair. Her hips were rising and falling onto his visible long hard shaft. She closed the door and sat down on the sofa. Sooner or later they had to call it quits. \n\n*****\n\n\"That's it,\" Robbie gasped when he shot his load deeply into her dripping pussy. He walked to the bed and fell face forward. Within seconds he was asleep. \n\nJulie too was tired and wanted to fall next to him but grabbed her robe instead. She moved out into the living area and saw Erica watching TV. \n\n\"Whatcha looking at?\" \n\n\"Well my God. I do have a sister! What happened did you run out of condoms?\" \n\nJulie laughed. \"No we have a few left.\" \n\n\"A FEW!\" Erica repeated loudly. \"Aren't you sore?\" \n\n\"Yes, but it's worth it,\" Julie said as she sat down. \"I never knew it was so wonderful.\" \n\n\"Don't tell me you are in love,\" Erica said. \n\n\"No of course not, I don't even know him that well,\" Julie said without opening her eyes. \n\n\"So you won't mind if I try him out?\" Erica grinned. \n\nJulie opened her eyes. \"Don't even try it.\" \n\n\"He can't have much left,\" Erica grinned. \n\n\"I'll give him a couple hours sleep and see how much he has left,\" Julie said. \n\n*****\n\nIt was dark when Robbie opened his eyes. He felt a warm body next to him and pushed up behind her. When his penis pushed against her soft ass it started expanding again. \n\nJulie was asleep when his penis pushed between her buttocks. She quickly came to when she felt the large tip pushing against her tiny anus. \n\n\"What are you doing back there?\" she giggled as she opened her legs and reached under her to pull the tip down into her pussy folds. \n\n\"Sorry my aim was off,\" he laughed. \"Would you hand me a condom?\" \n\nJulie knew she had just had her period last week so the chances of her getting pregnant were slim. She wanted to feel him inside her without the rubber coating. \"It's OK,\" she whispered while pushing her hips back until he was buried almost five inches into her. \n\n*****\n\n\"Fuck not again,\" Erica said when she heard the moaning and groaning from the bedroom. So far on this trip she had been fucked once by a guy she didn't like and didn't even remember it happening. Meanwhile her baby sister had not left the bedroom except to eat. She heard someone knock on her door. She opened it and saw a tall guy standing there. \"Can I help you?\" \n\n\"I'm looking for my roommate,\" Paul said. \n\n\"What does he look like?\" she asked smiling. The guy was kind of cute. \n\n\"Light brown hair, brown eyes about 5 foot 10 inches.\" \n\nErica opened the door and let him in. She smiled when he heard the sounds of pleasure coming from the bedroom. \"I think he is in there with my sister.\" \n\nPaul laughed. \"Good, I thought he had drowned or something.\" He turned to leave. \"Tell him Paul stopped by to look for him.\" \n\n\"Wait!\" Erica said. \"Where are you going?\" She had to get out of this mad house. \n\n\"Down to the bar,\" he replied. \"Do you want to come?\" \n\n\"YES!\" she said loudly as she grabbed her purse. \n\n*****\n\nThe next day pretty much the same happened however Robbie did leave to go back to his room to shave. His beard was leaving red marks on Julie's face, chest and thighs. Paul was in the room when Robbie walked in. \n\n\"Good morning,\" he said smiling. \n\n\"Shit man I was worried about you,\" Paul said smiling. \"Are you taking Vitamins or something?\" \n\n\"No, I guess I've saved it up all these past years,\" he laughed. \"Julie is amazing.\" \n\n\"So is her sister,\" Paul laughed. \n\n\"Her sister?\" \n\nThe bedroom door opened and Erica walked out wearing one of Paul's baseball jerseys and nothing else. \"Hi Robbie,\" she smiled. \n\n\"We wondered where you were last night,\" he said smiling over at his roommate. \n\n\"I doubt if you two even missed me,\" she laughed. She moved over and sat down on Paul's lap and gave him an open-mouth kiss. \n\nRobbie had already seen everything she had so when the shirt pulled up over her bare buttocks he didn't make a big deal about it. \"I've got to get my shaving stuff and toothbrush,\" he said smiling. \n\n\"Good, I'll come down and get my stuff in about an hour or so,\" Erica giggled. She looked at Paul. \"You can last an hour right?\" \n\n\"I'll surely try,\" he laughed. \n\n*****\n\n\"Your sister is upstairs with my roommate,\" Robbie told Julie when he returned. He noticed she was now wearing a dress. \"Are we going out?\" \n\n\"No,\" Julie giggled. \"Sit in that chair over there.\" \n\nRobbie quickly did as she said and watched as she leaned back and slowly opened her legs. \"You do like looking up a girl's dress?\" \n\n\"Oh yes,\" he replied when he saw her blonde bush. \n\nJulie grinned at his expression when her legs opened wider and wider until he could see everything. \"Now show me yours.\" \n\nRobbie quickly unzipped and pulled out his hard-on. \n\n\"Touch it,\" she giggled as her own fingers played down into her moist slit. \n\nFor a virgin Julie knew a lot. For the next five minutes they slowly masturbated looking at each other. \n\n\"Is my sister fucking your roommate?\" she asked while breathing faster and faster. \n\n\"They did last night and I think they are doing it now,\" he groaned. He liked it when she said fuck and wondered just how far she would go with the nasty words. \n\n\"Your pussy looks really wet,\" he grinned. \n\n\"And, your prick looks really hard,\" she giggled back at him. \n\n\"My cock liked it when you sucked it before,\" he moaned. Just the words now were driving him crazy. \n\n\"My cunt likes your tongue licking it too,\" she smiled. Her fingers spread open her inner lips. \"It now wants your hard dick to fuck it,\" she panted. \n\nRobbie lasted as long as he could before he stood and walked over to the sofa. Julie smiled as she pulled up her dress and moved back while spreading her legs. \"Give me your hard cock,\" she whispered. \"Make me Cum.\" \n\nRobbie's hand guided his shaft into her moist hole and let it go until it was all the way inside. His fingers moved behind her to push down into her buttocks until he found her rear hole. \"I'm going to finger your ass,\" he whispered. \n\n\"OH GOD! YES FINGER MY ASS! She screamed. Her juices had dripped down to help his middle finger to slide inside. As his prick moved into her pussy his finger dove deeply into her ass. \n\nRobbie had lost track of the number of times they had fucked because she had stopped him from using the condoms. It was later that night when Paul and Erica returned to the girl's rooms. Luckily Julie and Robbie were under a blanket on the sofa taking a break. \n\n\"Hey guys,\" Erica smiled when she pulled Paul into the large chair with her. \"That's my little sister Julie,\" she said to Paul as they looked at the two heads sticking out from under the blanket. \n\n\"Hi,\" Julie said. \"So are you two having fun?\" \n\n\"Yes,\" Paul said smiling. \"You two want to take in a movie with us tonight?\" \n\nJulie turned and looked at Robbie. \"I think you need a break.\" \n\n\"Definitely,\" Robbie said. \n\n\"Come on let's get dressed,\" Julie said as she pulled the blanket off and stood naked in front of Paul and Erica. \n\n\"Damn,\" Paul said smiling at her firm mounds and golden bush. Julie giggled and ran with Robbie into the bedroom. \n\n\"Can you believe that last week she was an ultra conservative virgin who had not gone past second base with a guy?\" Eric asked. \n\n\"Robbie too,\" Paul laughed. \n\n\"With a guy?\" Erica laughed. \n\n\"No, with a girl,\" Paul said as he pulled her into him. \n\n*****\n\nThe walk to the small movie theater only took ten minutes and the movie had been out for sometime so it was basically empty except for an older couple. Julie went in first and guided them to the back row. \n\n\"I thought we were here to see a movie,\" Robbie whispered when her hand pushed down into his crotch. \n\n\"You are here to watch a movie,\" she giggled. \"I've already seen it.\" \n\n\"Oh shit,\" he said when her fingers pulled down his zipper and fished out his long tube. He turned to see if Paul was watching and saw his buddy leaning back with his eyes closed. Erica had already pulled out his prick and was bobbing up and down on it. \n\n\"Fuck me,\" Julie whispered after her head pulled away and she stood up before him. \n\n\"But........\"\n\n\"No buts,\" she giggled as she lifted her skirt and straddled his lap. She had forgotten to wear panties and was soon moving up and down while holding his face to her chest. \n\nRobbie saw that Paul was getting the same treatment next to him and realized the two sisters were in competition. He heard Julie's loud moan and looked down to see Paul's fingers up under her blouse cupping her bare breast. \"Shit,\" he thought. \"If he can do it to Julie then he could do the same to Erica.\" His fingers slowly moved under the older sister's blouse and upward until he found her hot mound and hard nipple waiting for him. \n\nThe four didn't care about all the noise they were making and didn't notice the older couple's faces turned around looking at them. They didn't see the older man's fingers cup his wife's breasts or when her face moved down into his lap. \n\n\"Now!\" Julie cried out first happy to win the race to satisfaction. \n\n\"Me too!\" Erica yelled seconds later. The two men were only seconds behind Erica. \n\n\"Look at that,\" Robbie laughed when he saw the older woman's head bobbing up and down on her husband's lap. \"I guess we started something.\" \n\n*****\n\nAlthough they had touched the other sister's breast the guys stayed with their original partner for the rest of the night. \n\nIt rained the next day so they didn't need an excuse to stay in the room fucking and sucking. However, Paul and Erica did move up to the guy's room to use a bed. Finally after the three day marathon Julie told Robbie she wanted to sleep alone. \n\n\"But, it's our last night,\" he said hoping to spend it with her. So far they had not talked about getting together again once they returned home. They didn't even know their last names. \n\n\"I'll see you in the morning,\" Julie said as she gave him once last hug and one long wet kiss. \"The past few days have been wonderful.\" \n\n\"I don't want to leave,\" Robbie whispered as he cupped her round butt one last time. \n\n\"Please go,\" she said trying not to cry. \n\nRobbie reluctantly turned and walked out the door just as Erica walked in. \"Paul is passed out on the sofa,\" she giggled. \n\n\"Drunk?\" He asked. \n\n\"No....worn out,\" she giggled as she closed the door. \n\n\"Are you sure you want to do this?\" Erica asked Julie an hour later as they quickly packed their bags. \"I think Robbie really likes you.\" \n\n\"He doesn't even know me,\" Julie said seriously. \"It was just sex and that's it. I'm going to college and so is he. It's better this way.\" \n\n\"But, I want to see Paul again,\" Erica said. \n\n\"You can't because then Robbie will know where I am. He thinks I live in Virginia.\" \n\n\"He doesn't know about Danny?\" \n\n\"No,\" Julie answered. \"And, you better not say anything to Danny.\" \n\n\"I think you are making a mistake,\" Erica said as she grabbed her bag and followed her sister out the door. It was a seven hour drive back to Georgia. \n\n*****\n\n\"Man I hate to go back home,\" Robbie told Paul as they packed their stuff the next morning. He picked up the phone and called Julie's room but no one answered. \"Maybe they are waiting for us in the lobby?\" he said. \n\nThe two guys hurried downstairs and found the lobby empty. The desk clerk motioned for Robbie to come over to him and then handed him a note from Julie. \n\nRobbie,\n\nThe past few days were fantastic and I'm glad you were my first. I'll always remember you and the great fun we had. \n\nTake care,\n\nJulie.\n\n\"Shit,\" Robbie said. \"Do you have Julie's last name?\" he asked the hotel clerk. \n\n\"I'm sorry sir I can't give that information out,\" the man said. \n\n\"Please,\" Robbie begged. \"I have to get in touch with her.\" \n\n\"Nope.........sorry.\" \n\n\"Come on Robbie. Let's get out of here,\" Paul said after he found out Erica didn't even leave him a note. \"Maybe it's for the best.\" \n\n\"FUCK!\" Robbie yelled as he followed Paul to their car. \n\n*********************************\n\n2005\n\nJulie Cameron sat on the large porch overlooking the huge spread of peach trees. She waved down at her daughter Samantha who had just returned from her Spring Break at Daytona Beach. She had tried to talk her out of going because she knew first hand what happened to her during Spring Break but Sam fought and argued until she finally gave in. Her aunt Erica also put the pressure on to allow Sam to go. \n\n\"Don't you remember the fun we had?\" Erica had asked her while trying to break her down. \n\n\"Not a day goes by that I don't think of those three days,\" Julie said. Although she had married her childhood sweetheart Danny Cameron she had never again experienced the wild sex and total freedom she had experience with Robbie. \n\n\"Would you give back those days?\" Erica asked. \n\nAlthough Julie wanted to say yes she couldn't. \"No I wouldn't.\" \n\n\"Well then give Sam a chance to experience the same thing.\" \n\n\"You're right,\" Julie said. \"I'm being over protective.\" \n\nNow as she looked into Sam's eyes she could see that she had changed just like she did twenty-two years ago. \"You look different.\" Julie said as she hugged her. \n\n\"I am,\" Sam smiled. \"I met someone.\" \n\n\"Really?\" Julie said. \"In just three days?\" \n\n\"Mother, I think I love him,\" Sam smiled. \n\n\"Nonsense,\" Julie laughed. \"You can't fall in love in just three days.\" \n\n\"It just happened,\" Sam smiled. \"I can't get him out of my mind.\" \n\n\"Can't get who out of your mind?\" Sam's father Danny asked as he moved up to the two women in his life. \n\n\"A guy I met in Florida,\" Sam said smiling. \n\n\"Well get him out of your mind because you are going to pharmacy school,\" Danny said seriously. \"I told you she shouldn't go to Florida,\" he spat at Julie. \n\nJulie glared at her husband. \"We will talk about it later. Let's get your bags into the house.\" \n\nLater, after dinner, Julie cornered Sam in her bedroom. \"So tell me everything. Is the old hotel still standing?\"\n\n\"Yes,\" Sam giggled. \"Someone spent a lot of money fixing it up. It was really nice and they gave me a big room.\" \n\n\"And............\" Julie asked. \n\n\"And I met him. He was sitting on the beach and I was out walking.\" \n\nJulie had to sit down. \"He was sitting on the beach?\" \n\n\"Yes the other kids were partying and I had to leave. Things were getting too wild.\" \n\nJulie gulped. \"Who is he? Tell me about him.\" \n\nAs the words spilled from her lips Julie's head began to spin. 'He's from New Jersey. His father told him to stay at the hotel and if he sat on the beach he would met an angel.\" \n\n\"Oh God,\" Julie thought. \"What's his name?\" \n\n\"Robert Samuels the Third but he wants to be called Rob,\" Sam said smiling. \"I have his picture on my phone. You want to see it?\" \n\nJulie didn't answer as she leaned over to look at the tiny screen. She looked at his face and felt the room begin to spin. Suddenly she blacked out. \n\n*****\n\n\"Are you alright?\" Julie heard someone in the darkness ask her. She felt something cold press against her forehead and she opened her eyes to see Erica's face. \n\n\"Yes, what happened?\" \n\n\"You fell off my bed,\" Sam said from the other side of her. \"Are you alright?\" \n\n\"Yes,\" Julie said as she remembered seeing the boy's face on Sam's phone. It was Robbie's face. \n\n\"What were where you doing?\" Erica asked as she helped her sister sit up. \n\n\"I just showed her the boy I met in Daytona,\" Sam said as she passed the phone to her aunt. \n\n\"No, don't look,\" Julie said as she tried to grab the phone from her sister's hand. \n\n\"Holy shit!\" Erica cried out. \"It's him.\" \n\n\"You know Rob?\" Sam asked as she grabbed her phone back. \n\nErica looked at Julie. \"No wonder you passed out.\" Suddenly she started laughing. \n\n\"What's so funny?\" Sam asked. She was getting pissed. \"Am I missing something here? How do you know him?\" \n\n\"We don't know him,\" Julie said quickly. \"He looks like someone we met a long time ago.\" \n\n\"I'm not stupid,\" Sam said. \"Something is going on about him.\" \n\n\"Nothing.......really,\" Julie lied as she glared at her sister to be quiet. \"You are not in love with him. You are in love with the time you spent together.\" \n\n\"But...........,\" Sam started saying before she realized they had gone. \n\n*****\n\nRob's father and mother were not at home when he walked into his plush Jersey home. He couldn't get Sam out of his mind. At first they just talked for almost four hours until he finally got enough nerve to kiss her. The kiss grew hotter and hotter until they couldn't control themselves anymore. It was on the beach just before sun up that he took her virginity. \n\n\"Hey son you are home,\" Bob Samuels said to Rob when he burst through the door. \"Did you have a great time?\" \n\n\"How did you know?\" Rob asked with a big smile. \n\n\"Know what?\" His mother Ann asked when she walked in the door. \n\n\"How did Dad know I was going to meet an angel on the beach?\" They both turned and looked at Bob.\n\n\"You did?\" Bob said as he sat down next to his son on the sofa. \"Was she real?\" \n\n\"God yes,\" he smiled. \"I've never met anyone like her before.\" \n\n\"Tell us about her,\" Ann said hoping she was not just some tramp who had jumped her baby. \n\n\"I don't know where to start. We just hit it off right away. She has this great smile and laugh.\" \n\n\"Sounds like love to me,\" Bob smiled. \n\n\"He was only with her a few days,\" Ann said sharply. \"You can't fall in love in only two or three days.\" \n\n\"And nights,\" Rob thought to himself. They had tried every position imaginable and some that really didn't work very well but was fun trying. \n\n\"Well forget about her because you have to finish your high school year and get ready for Rutgers.\" \n\n\"I'm not sure about Rutgers,\" Rob said knowing it would piss off his mom. \n\n\"WHAT? Don't even start on wanting to go to a school down south,\" Ann cried out. \n\n\"I never said I wanted to go to Rutgers. That was you Mom,\" he said looking at his father for support. \n\n\"He's right dear,\" Bob said hoping she would calm down. \n\n\"It's that girl isn't it?\" She said as she sat back crossing her arms. \"You want to attend the same college as she does.\" \n\n\"Well not really but we won't be too far from each other,\" Rob replied. \"She's going to Emory and you know I've wanted to go to Georgia Tech.\" \n\n\"Georgia Tech is a very good engineering school,\" Bog injected. \n\n\"You two are ganging up on me,\" Ann said. \"Rutgers has good engineering too.\" \n\n\"But, it's only a few hours from here,\" Rob said. \"I need to get away from home.\" \n\nAnn didn't say anything as she stood and walked away. \n\n\"Her answer to a problem has always been to walk away,\" Bob whispered to his son. \"Where does this girl live?\" \n\n\"Georgia near Atlanta,\" he replied. \"I have her photo on my phone. Would you like to see her?' \n\n\"Sure,\" Bob answered. It was the first time his son seemed to really seriously care about a girl. He waited until his son opened his flip phone and click to a photo. His eyes opened in amazement when he saw her face. \n\n\"Are you alright?\" Rob asked his father who was just staring at her face. \n\n\"Uh........yeah..........did you say she was from Atlanta?\" ",
        "\"Yes............,\" Rob answered. \"I'm going to call her now. Do you want to say hello?\" \n\n\"Sure,\" Bob answered. The girl was definitely Julie's daughter. There was no doubt in his mind as he watched Robbie dial the phone number. \n\n*****\n\n\"Hello?\" Julie said as she grabbed the kitchen phone from the wall by the refrigerator. \n\n\"Hello,\" Rob said. \"May I speak with Sam?\" \n\n\"She's not home at the moment,\" Julie said. \"Could this be Robbie's son?\" she wondered. \"May I leave her a message?\" She asked. \n\n\"Yes please tell her Rob called.\" \n\n\"Does she have your number?\" Julie asked. \n\n\"She has my cell phone number. Will you give her my home phone number?\" \n\n\"Certainly,\" Julie replied as she grabbed a pen and some paper. \"Go ahead.\" \n\nRob told her the phone number and waited for her to say she had it. \"Are you Sam's mother?\" He asked. \n\n\"Yes,\" Julie replied. \"Sam hasn't stopped talking about you since she returned.\" \n\n\"Me too. I like your daughter very much,\" he said smiling over at his father who seemed to be very interested in the conversation. \n\n\"Is that her mother?\" Bob whispered in his son's ear. \n\nRob nodded his head yes. \n\n\"Let me speak to her,\" Bob said as he reached to take the phone from his son's hand. \"Julie?\" \n\nJulie heard his voice and froze. It was Robbie. She panicked and quickly hung up the phone. \n\nBob heard the click and then the dial tone. \"\"We must have been disconnected.\" \n\nRob took his cell phone from his father. \"How do you know her mother's name?\" \n\n\"I'm not positive it is her mother's name,\" Bob answered realizing he had blown his secret. \"Do you know the mother's name?\" \n\n\"No,\" Rob answered. \"But you are freaking me out.\" \n\n*****\n\nSam returned from a drive with her Aunt and saw her mother sitting alone in the den drinking a glass of wine. It was strange because she never had alcohol unless it was at a social gathering. \n\n\"Are you alright?\" Sam asked before Erica could do the same. \n\n\"Rob called,\" Julie said looking straight ahead as if she was in a daze. \"He left his home phone number. It's on the kitchen counter.\" \n\nSam ran into the kitchen leaving the two sisters alone. \"Is it him?\" Erica asked. \n\n\"Yes,\" Julie replied. \n\n\"Did you talk to him?\" \n\n\"He just said my name and I hung up the phone.\" \n\n\"Good move sis,\" Erica laughed. \"You want to see him again don't you?\" \n\n\"God no,\" Julie answered not really believing it herself. \"It was a long time ago and we both have families. \n\n\"You can fool other people and maybe even yourself but not me,\" Erica grinned. \n\n\"You're wrong,\" Julie glared back. \n\n\"Am I?\" Erica whispered. \"When was your last orgasm with Danny?\" \n\n\"God, you are so gross sometimes?\" \n\nErica laughed. \"Next time you talk to him ask him how Paul is doing. I wouldn't mind a reunion at the hotel.\" \n\nJulie opened her mouth to respond but saw Sam walking back into the room with her phone in her ear. \n\n\"Yes that was my mom. Her name is Julie. Why?\" \n\n\"Now he knows for sure,\" Erica whispered in Julie's ear. \n\n\"Rob said his dad knows you,\" Sam said looking suspiciously at her mother. \n\n\"He must be mistaken,\" Julie answered as she moved back into the kitchen to refill her wine glass. \n\nSam talked to Rob for almost an hour before hanging up and coming into the kitchen. \"His father is sure he knows you,\" Sam said looking directly into her mother's eyes. \n\n\"I don't remember,\" she lied. \"Maybe I met him. I'm not sure. Did he say where he knows me from?\" \n\n\"No, he just said he knows you. Wow. It is such a small world. Rob said he wants to go to Georgia Tech.\" \n\nJulie took a deep breath. \"Sam you really don't know anything about this boy. Please don't get too serious and take it slow.\" \n\n\"Too late,\" she grinned as she stood and walked from the room. \n\n\"Ah shit,\" Julie thought. Any doubt about her daughter being intimate with Robbie's son was quickly erased. Erica had left so she was sitting alone again drinking her wine and thinking about her life after leaving Florida. \n\nAt first all she could think of was Robbie. She called the hotel trying to get his last name but they wouldn't give it to her. After about three months of avoiding Danny she started dating him again. They both went off to attend the University of Georgia like their parents before them. Their marriage was set in stone since they had been pushed together since the eight grade. Julie had tried to get him to be more adventuresome in bed but he was from the old school and didn't believe in more than the two basic positions. \n\nOnce Sam was born she spent most of her life catering to her daughter's needs. She helped with the girl scouts, cheerleading and any organization Sam had joined. Her life had been so predictable and boring until now. Hearing Robbie's voice had opened doors deep down within her that she had locked many years ago. If Sam and his son continued to develop their relationship it would mean she would see him again some day. She pinched her slightly flabby thigh and realized she had to start working out at the spa again. \n\n***** \n\n\"How do you know Sam's mom?\" Rob asked his father later when they were alone. \n\n\"It was before you were born,\" Bob answered. \"We only knew each other for a short time but I'll never forget her.\" \n\n\"Did you and she............you know?\" \n\nBob laughed. \"No, nothing like that,\" he lied. \"I better get to bed,\" he said hurrying from the room. \n\nIt was the following Monday morning that Bob sat in his empty office and dialed Julie's number. He hoped she would be home alone. She was. \n\n\"Hello,\" she answered. \n\n\"Julie don't hang up,\" Bob said quickly. \"We need to talk.\" \n\nFor almost thirty seconds the phone was silent until she finally asked, \"how have you been?' \n\n\"Not bad considering,\" he replied. \n\n\"Considering what?\" \n\n\"Considering that I have not been able to think about anyone else but you for the past twenty-two years. Why did you leave me like that? I thought we had something special.\" \n\nAgain she hesitated. \"I was afraid. My life was so predictable and planned. Our three days was something I was not used to. I had to get away to think about what had just happened.\" \n\n\"Tell me you didn't like it.\" \n\n\"I didn't say I didn't like it. I liked it too much. It was overpowering. Erica made me go to Florida to have at least one wild fling before I settled into my traditional marriage. \n\n\"I was only a wild fling to you?\" he asked somewhat hurt. \n\n\"At first that's what I thought but when I returned home I couldn't get you out of my mind. I tried to find out your last name and address but the hotel wouldn't give them to me.\" \n\n\"Me too,\" he said. \"I even went back to the hotel during Spring Break for the next three years hoping you would return.\" \n\n\"What are we going to do about Sam and Rob?\" She asked. \"They must never know that we............we.........slept together.\" \n\n\"We did a whole lot more than sleep,\" he said. \n\n\"We have to pretend it never happened,\" she whispered. Just hearing his voice again was sending chills up and down her spine. She knew her panties were getting damper and damper. \n\n\"I want to see you again,\" he said softly. \n\n\"We are both married,\" she responded. \"I can't.\" \n\n\"We have to let Rob and Sam alone,\" he said. \"They can't make the same mistake we did.\" \n\n\"I love my husband,\" Julie said to confirm it to him as well as herself. \n\n\"I love my wife too. But, as a wife not as a woman.\" \n\n\"Is there a difference?\" \n\n\"Oh yes, when we were together we opened up and didn't hold back our feelings or desires. Just looking into your beautiful blue eyes was enough to excite me. Your kisses were like hot flames and your body.........\" \n\n\"STOP!\" she said loudly. \"I have to go.\" \n\n\"Julie I have to see you again,\" he begged. \n\n\"I have to go,\" she said before she hung up the phone. Her body trembled as she melted slowly down to the tiled floor. Her eyes were closed as she moved her hands over her breasts and down between her thighs pretending they were Robbie's fingers touching her. For the first time in a long time Julie masturbated and the first time ever it was on the kitchen floor. \n\nThe next morning a florist truck pulled up in front of Julie's home. She answered the door to see him holding a dozen red roses. Her heart beat quickened as she read the small card. \n\n\"To Sam............Love Rob.\" \n\nShe smiled as she smelled the closest rose and turned to go back into the house. \n\n\"Wait, there's another one here,\" the delivery man said as he handed her another dozen red roses. \n\n\"Are you sure?\" she asked. \n\n\"Yes ma'am,\" he said smiling. \n\nJulie opened the small card. \"I have to see you\" was all it said. She smiled and took the two dozen roses inside. After putting them in a big vase she put Rob's card on the table in front of them and took the other card upstairs to hide in her underwear draw. \n\nLater that day when Sam returned home from school Julie heard her scream when she saw the flowers. \"Mom! He sent me flowers!\" \n\n\"Yes he sent me flowers too,\" Julie thought as she watched her daughter take out one of the roses and dance around the small foyer. \n\nLater when Danny came home Sam showed him the flowers. \"You are too young to get roses,\" he said as he grabbed the newspaper.\n\nJulie almost broke out laughing when Sam stuck out her tongue and made some ugly faces at the back of the newspaper. It was later that night when Julie took one of the roses upstairs, locked the bathroom door and slithered down into the hot water in the tub. \"I want to see you too Robbie,\" she whispered as her fingers parted her swollen pussy lips. \n\nSam called Rob to thank him for the two dozen roses. \n\n\"I sent you a dozen,\" Rob said. \"They must have made a mistake. \n\n\"Even if you had only sent one I would have still love it,\" she whispered as she looked around to make sure her parents were not around. \"Rob........I think I love you.\" \n\nRob gulped when he heard the \"L\" word. He had only known her for a few days but she had turned his heart into mush. \"Me too,\" he smiled. \n\n*****\n\nSeeing each other was sooner than they all expected because Rob had to visit Georgia Tech one more time before his mother would agree to him going there. Plus, Ann wanted to meet Sam to make sure she was right for her son. \n\n\"Do I really have to go?\" Danny said at the breakfast table. \"I really don't want to meet some Yankee's from New Jersey.\" \n\n\"DAD!\" Sam said. \"The war is over.\" \n\n\"The war will never be over,\" he said seriously. \"The South shall rise again.\" \n\n\"In your dreams,\" Julie laughed. As much as she wished he would stay home she knew it would be best for him to met Robbie and his wife. She wondered just how much Rob's mother knew about her history with her husband. \n\nDanny looked at the slinky dress his wife was wearing. \"Why do we need to dress up?\" \n\n\"We are meeting them for the first time and I want to leave a good impression,\" Julie said. Although she was sure nothing was going to happen between her and Robbie she was wearing her sexiest bra and panty set. \n\n\"Why won't you let them stay at our house?\" Sam asked as they headed towards Atlanta. \n\n\"We don't know them well enough for that to happen,\" Danny said for the twentieth time. \n\nThey pulled into the large hotel structure near the Underground Area and headed to the main lobby. Sam ran ahead and saw Rob standing next to his parents. She stopped when she saw the close resemblance of his father. \n\n\"SAM!\" he yelled as he raced to meet her. Both sets of parents looked as the two eighteen year olds bodies plastered together and their opened lips met. \n\n\"Sam,\" Danny said sharply. \"Cool it.\" \n\nJulie's eyes never left Robbie's as they walked closer to the boy's parents. Her heart was beating rapidly and her legs were shaky. \n\n\"Mom, Dad this is Sam,\" Rob said grinning ear to ear. \n\n\"Hellooo,\" Sam said with a deep southern accent. She held out her hand for them to shake. \n\n\"The photo did not do Sam justice,\" Bob thought as he took the girls small fingers into his and gently massaged them. \"Finally glad to meet you Samantha,\" he grinned. \n\n\"Please call me Sam,\" she giggled. \n\nAs the rest of them were introduced finally Bob moved up to Julie and held out his hand. \"I can see where Sam gets her beauty from,\" he smiled as he offered her his hand. \n\nJulie felt weak when her finger tips touched his. Flashes of memories jumped before both of their eyes as they remembered the three days naked together in the small hotel. \"Than..........thank you,\" she grinned. She realized they had been holding hands for a long time and quickly dropped his hand. \n\n\"I'm starving,\" Ann said. \"We have reservations in the hotel restaurant if it's OK with you.\" \n\n\"Sure,\" Danny grinned. At least he would get something to eat out of this. Ann turned and led the way with Danny next to her. \n\n\"I just love your Southern draw,\" Ann giggled as they walked. \n\n\"And I like your Yankee draw too,\" Danny smiled. She was kind of cute for a Northern woman. \n\n\"I need to stop by the ladies room,\" Julie said as Sam and Rob walked by holding hands not aware the rest of the world was going around them. \n\nBob stayed back until they were in the restaurant until he headed back to the ladies room. He looked around and pushed open the door. Standing by one of the sinks was Julie washing her hands. She looked at him in the mirror. \n\n\"What are you doing in here?\" \n\n\"Is anyone else in here?\" he asked as he peeked under the doors by the stalls. \n\n\"No,\" she said as she leaned back against the sink. \n\nHe moved closer to her. \"God you look the same,\" he said smiling. \n\n\"I don't,\" she said sweating. \"I'm old and fat.\" \n\n\"You're beautiful,\" he whispered as he moved his body and face up to hers. \n\nJulie couldn't remember the last time Danny had said she was beautiful or even the last time they had sex. \"We have to go eat,\" she whispered. She watched as he cocked his head to press his lips to hers. \"Don't,\" she said softly. \"We can't...\" Suddenly his lips pressed against hers and her mind went blank. Her body came alive and her hands moved behind his back. \n\nTime stopped as their tongues re-acquainted themselves. Suddenly the door opened and a young girl walked in and stopped. \n\nJulie realized how dangerous it was to be kissing him like this and quickly pushed out from his body and grabbed her purse. The young girl giggled as the two older adults headed out of the ladies room. \n\n\"I wonder where my father is,\" Rob asked when he saw Sam's mother walk into the restaurant. A few minutes later Bob walked in. \n\nFor the next two hours the six of them ate, drank and got acquainted. Julie realized that Robbie now went as Bob and that he was a very successful land developer throughout the US. She also saw a lot of him in his son and knew why Sam was so attracted to him. Julie was also surprise that her husband and Ann were getting along so well. He was telling his normal bad jokes and she was laughing at them. \n\n\"Sam and I want to go to the Underground,\" Rob announced as the four older adults had coffee. \"We will meet you all back here in an hour.\" \n\n\"Be careful,\" Julie said knowing downtown Atlanta was not the safest place in the world. \n\n\"Yes mother,\" Sam giggled as she grabbed Rob's hand and ran out of the restaurant. \n\n\"Would you two like to take a walk and see the Underground? Danny asked. Suddenly he was having the greatest time. \n\n\"Yes,\" Ann quickly replied. She looked at her husband.\n\n\"Sure,\" Bob said looking at Julie. He wished he could get her alone again. \n\nSince Ann and Danny were enjoying their company so much Bob and Julie walked a distance behind them so they could talk some more. \n\n\"We can't let that happen again,\" Julie said as his hand brushed against hers. \n\n\"That was just an appetizer,\" he grinned as he hooked her little finger with his. She quickly jerked away. \n\n\"Robbie!\" she said sharply. \n\n\"No one has called me that since I left for college,\" he grinned. \"Remember that shower we took together?\" \n\n\"No,\" she lied. His closeness was driving her body insane. She looked at their spouses who were way ahead of them almost out of sight. \n\n\"Remember how your mouth sucked on my cock?\" he whispered. He took her fingers again and smiled when she didn't push him away. \n\n\"You shouldn't say things like that,\" she whispered back. She definitely remembered how they had said such nasty things. \n\nBob knew he was getting to her because he could see the rapid breathing in her chest. Her breasts had grown since their spring break days and he couldn't wait to touch them. As they walked down the stairs to the Underground shopping area he took her hand and pulled her down a long empty hallway. \n\n\"Where are you taking me?\" she gasped. \n\n\"Back in time,\" he smiled. In the middle of the hallway was another hallway that led to a door labeled \"CLOSET\". \"In here,\" he said as he pulled her inside the small dark room. \n\n\"They will miss us,\" she said now almost panting for oxygen. \n\n\"They don't even know we are alive,\" he said as he pulled her soft body into his hard one. \"I've thought about this moment for so long,\" he whispered as his lips moved to the softness of her neck. \n\n\"Please,\" she begged when his lips and tongue tasted her perfume. It was the same brand she had worn twenty-two years ago. When she realized they both didn't want him to stop she said, \"Please don't leave any marks.\" \n\nBob smiled as he lifted his lips up to hers and looked into her blue eyes once more. He saw the passion he had seen so many years ago coming out from its dormant state. Suddenly her mouth opened and her tongue slashed into his mouth. \n\nA hidden monster was unleashed as her hands moved over his back, down cupping his ass and then around the front to curl around his hard-on. As her fingers got familiar again with his prick his fingers pulled up her dress until it bunched at her waist. He found the thin straps of her panties and pushed downward until they fell at her feet. She stepped out of them and pulled down his zipper. They were two animals in heat as her legs opened to allow his hard penis to push up inside her dripping hot oven. \n\n\"Fuck my pussy,\" she moaned as she bit on his earlobe. \"Give it to me.\" \n\n*****\n\n\"I thought we would never get rid of them,\" Rob said to Sam as they entered his room upstairs in the hotel. \"Quick get undressed.\" \n\nSam pushed the short skirt over her skimpy panties and pulled her blouse over her head. As she released her bra she giggled when she saw his hard-on pop out of the fly on his boxers. She stumbled as she tried to remove her panties and walk to the bed at the same time. Rob caught her and pulled her young soft body on top of his. \"God I missed you.\" \n\n\"Me too,\" she responded. Her hand aimed his hard shaft up into her tight moist hole. \"Fuck my pussy,\" she ordered. \"Give it to me.\" \n\n*****\n\n\"I wonder where they went to,\" Danny said to Ann as they stood looking behind them. \n\n\"Well, I'm not waiting for them all night,\" Ann said. For the first time in a long time she was with a man who was giving her some attention. She liked his Southern Gentleman approach and his charming voice. \"Let's head over that way.\" \n\nDanny too enjoyed being with a woman who laughed at his jokes and appreciated his gentleman acts. He also admired her cute little ass and long tan thighs. \"If you were my wife I wouldn't let you from my sight,\" he whispered as they climbed a set of stairs that led up to a restaurant under construction. \n\nAnn smiled knowing he was peeking up her short skirt. For the first time in a long time her body was alive and excited. It had been three years since she broke off an affair with a man in her office and had thought about finding another lover but the right one had not come along. Until now. \n\nAs she took the final step she felt her ankle twist and would have fallen down the long stairway except Danny was quick to grab her. \"Are you alright?\" He asked as he held her in his arms. ",
        "\"It's my ankle,\" she said as her arms flew up around his neck. She looked around the empty observation area and saw a bench in the dark corner. \"Take me over there.\" \n\nDanny swooped her up into his arms and carried her. His lower hand was holding onto her thigh and his upper hand behind her back. He slowly lowered her until she was lying on her back. He quickly moved to her feet and removed her shoe. \"It doesn't look swollen.\" \n\n\"Maybe you should check it out to make sure it's OK,\" she whispered as she slowly lifted her foot and sat it on his lap only inches from his crotch. Her eyes followed his fingertips as they brushed gently over her ankle. \n\n\"Does that hurt?\" he asked. \n\n\"No, maybe you should check higher?\" Her eyes closed as he did what she asked. Neither said a word as his hot fingertips moved up over her calve to her knee. The pretense of checking out her ankle was now history as his trembling fingers moved slowly but cautiously up under her skirt. He kept glancing back at the stairway hoping that no one would bother them at least until he had a chance to taste a Yankee pussy for the first time. He wondered if it was as sweet as a Southern pussy. \n\n\"Ummm,\" Ann moaned when his finger moved over the delicate skin of her inner thighs to her moist panties. As her legs opened she extended her foot until it pushed against the hard-on in his pants. She heard his sharp intake of breath and giggled. A few seconds later his fingers pulled her panties to the side and pushed gently into her swollen pussy folds. \n\n\"Ann,\" Danny said as she lifted her hips to allow him to pull off her silver thongs. \n\n\"Yes Danny?\" \n\nHe was ready to touch her or kiss her but wanted to ask permission like a real gentlemen should. \"Do you mind if I touch you?\"\n\n\"No, kind sir. I would like that a lot.\" She moaned as his dripping finger pushed deeply into her hot hole. \n\n\"Do you mind if I kiss you?\" \n\n\"Please kiss me,\" she begged as her hands guided his head between her quivering thighs. His tongue tasted her Jersey pussy and liked it. \"Yummy,\" he thought. \n\n\"Ann...\" \n\n\"What?\" she asked wanting him to satisfy her. \n\n\"Do you mind if I fuck you?\" \n\n\"Frankly my dear.........,\" she giggled as she remembered Gone With the Wind. \"I don't give a damn if you do.\" \n\nShe forgot about her sore ankle and her back on the hard bench as Danny climbed between her thighs and pushed his hard thick cock into her soppy pussy. Suddenly she felt him shutter and then climax deeply within her. And, she was so close. \n\nDanny smiled and stayed inside of her. \"Don't worry dear. The South shall rise again.\" Suddenly Ann felt his prick get harder and harder until he was once again fucking into her. This time it was her who climaxed first. \"OH GOD YOU SOUTHERN FUCKER.....DON'T STOP!\"\n\n\"I wish I was in the land of Cotton.....old times there are not forgotten....LOOK AWAY....LOOK AWAY....LOOK AWAY DIXIE LAND!\" Danny sang as he kept fucking this wonderful woman. \n\n*****\n\n\"OH GOD ROBBIE!\" Julie cried out when she felt the first explosion shooting up her body. Her hands held on to his neck as he fucked her against the wall. Tears of joy poured down her cheeks as she climaxed for the first time. Suddenly she felt the second climax as it rumbled up her body. \"AGAIN!\" Then it was his turn to reach satisfaction. \n\n\"AH, AH, AH!\" he groaned as his hot fluids fill up her hot tunnel. Finally their bodies stopped moving. His hands were still cupping her smooth ass when his lips found hers again to nibble on them. \"I feel like I'm eighteen again.\" \n\n\"But can you do it 11 times in two days?\" she giggled. \n\n\"You counted,\" he said as he pushed back and looked into her eyes. \n\n\"I've still got the one rubber we didn't use,\" she said. \"I guess we don't need to worry about that anymore.\" \n\n\"We better go find our spouses,\" Bob whispered as he kissed her nose and forehead. \n\n\"Do we have to?\" Julie asked as she squeezed her pussy around his soft penis. \n\n\"I'm afraid so, but I have a feeling we will be seeing more of each other.\" \n\n\"You're not getting away from me again,\" she said as she hugged him to her. \n\n\"Hey it was you who left me,\" he said as his prick slipped out of her and he lowered her to the floor. \n\n\"Dumbest thing I ever did,\" she giggled as she found the one shoe that had fallen from her foot. \n\n*****\n\nRob and Sam were into their second act when they heard voices in the hallway. \"Shit,\" he said as he jumped from under her. \"It's my parents.\" He managed to get his pants and shirt on just before someone knocked. \"Shhh,\" he whispered. \n\nThey knocked again. \"They must be downstairs somewhere,\" he heard Sam's mother say. He kept his ear to the door to listen. \n\n\"Where do you think Danny and Ann went to?\" Bob asked \n\n\"I'm not sure,\" Julie replied. \"Don't.\"\n\nRob heard her say it and wondered what was going on. A few seconds later he heard, \"We can't be kissing out in the open like this.\" \n\n\"No one is around,\" Rob heard his father say. \"Let's go into your room.\" \n\n\"No,\" she giggled. \"Twice in one night is enough. We are not eighteen anymore.\" \n\n\"You didn't say that twenty-two years ago,\" Bob laughed. \n\n\"Give me my panties back,\" she said loud enough for Rob to hear. \n\n\"What's going on?\" Sam asked as she moved her ear up next to his. \n\n\"It's my father and your mother,\" he whispered. \"You are not going to believe this.\" \n\nSam listened. \n\n\"I want you to suck my cock,\" Sam heard Rob's father say. Her mouth opened wide when she heard her mother's voice. \n\n\"Not now, we will be here two more days and I'm sure we will be able to break away again.\" \n\nSam turned and looked at Rob who was as shocked as she was. They listened some more but realized they had moved down the hallway. \n\n\"I can't believe it,\" Sam said sitting naked on his bed. \"My conservative mother said she was going to suck his cock.\" \n\n\"I should have told you,\" Rob started. \"My dad said he knew your mother twenty-two years ago. I think they met at the same hotel were we met. He told me to go to the beach and I'd find an angel.\" \n\n\"Shit,\" Sam said. \"My aunt told me to take a walk on the beach at night.\" \n\n\"We.........,\" Rob stopped and looked at her. \"We ........you........can't be my sister right?\" \n\nNumbers raced through Sam's mind. \"No, they went on Spring Break twenty-two years ago. We are both only eighteen.\" \n\n\"Good,\" he said as he pulled her back into his body. \"What about my mom and your dad. Shit this could ruin everything if they find out.\" Suddenly they heard someone entering the room next to Rob's.\n\n\"Shhh, it's my parent's room,\" he whispered as he walked over to the inner connecting door and listened. \n\n\"No one is in here,\" Ann said. \"Come in quickly.\" \n\nSam moved again next to him and listened. \n\n\"Do we have time?\" Danny asked as he pulled off the straps of Ann's blouse. She quickly released the front bra clasp and pulled apart the cups to show him her firm round mounds and hard brown nipples. \n\n\"We have time for this. Oh GOD SUCK THEM JUST LIKE THAT!\"\n\n\"I can't believe this,\" Rob whispered. \"That's your father sucking on my mom's tits.\" \n\n\"Did they meet at the hotel twenty-two years ago too?\" Sam asked as she listened to Rob's mother moaning. \n\n\"I don't think so,\" Rob answered. \n\nSam glanced down and saw his hard penis. Listening to his mother getting her nipples sucked was turning him on. She slowly dropped to her knees and pulled his hot tip into her mouth. \n\n*****\n\nThirty minutes later as Bob and Julie sat in the bar they saw their spouses walking in laughing and it looked as it they were holding hands. \n\n\"Over here!\" Bob yelled as he waved his arm. \n\n\"Where have you two been?\" Julie asked suspiciously. \n\n\"I...uh...twisted my ankle in the Underground and it took a while to walk back,\" Ann said not looking at her husband. She was not sure if he had known about her earlier affair and knew that she could not look at him after she had cheated on him. \n\n\"Where are the kids?\" Danny asked noticing his wife was sitting really close to Bob. \n\n\"We don't know,\" Julie answered. She removed her hand from Bob's leg and moved away from him slightly. \n\n\"Here we are,\" Rob said as they walked up to the table. \"We were looking for all of you. Where have you been?\" \n\n\"Looking for you,\" Ann giggled. She had not been this happy for a long time. \n\n\"I guess we better leave,\" Julie said. \"Tomorrow will be a long day walking around Georgia Tech.\" They had agreed to go with them to show them the college. \n\n\"Actually I don't think we really need to go,\" Ann said smiling. She was now sitting next to Danny in the booth across from Bob and Julie. \"We've already visited the campus and I think Rob should go wherever he wants.\" \n\n\"But, what about Rutgers?\" Rob asked trying to hold back a smile. It was obvious why his mother was now happy that he was going to Georgia Tech. \n\n\"You should go wherever you want to go,\" Ann smiled. Danny's fingers were up under her skirt and toying with her pubic hair. \n\n\"Good,\" Bob said. \"We have two more days before we have to return to Jersey. What does everyone want to do?\" \n\n\"Is there any thing else worth seeing in Atlanta?\" Ann asked. Danny's fingers were now doing a slow rub across her hard clit. \n\nNo one answered. Rob and Sam pulled up two chairs. \n\n\"I've got an idea,\" Bob said smiling. Julie's fingers had returned to his thigh and were squeezing it. \"My company recently purchased a place in Florida. Why don't we all pack our bags and head down that way?\" \n\n\"In Florida?\" Julie repeated as she squeezed his thigh tighter. \n\nRob and Sam knew immediately. \"THE SHANGRI-LA!\"\n\n\"You bought the Shangri-la?\" Julie asked. \n\n\"I've owned it for about a year now,\" he smiled. \n\n\"That's why I got the best room and they treated me like a God,\" Rob said. \n\n\"Me too,\" Sam said. \"Why would they? They don't even know me.\" \n\n\"Well damn,\" Danny said with his middle finger deeply into Ann's pussy. \"Let's go.\" \n\n\"OK with me,\" Rob said smiling at Sam. They both knew what was going on between their parents and knew they wouldn't be bothering them. \n\n\"Me too,\" Sam smiled. \n\nAnn had her eyes closed as she approached her climax. \"What?\" she asked breathing heavily. \"I'll do what everybody else wants to do.\" She closed her eyes again and gritted her teeth to keep from screaming. \n\n\"I think my husband just finger-fucked your wife,\" Julie whispered in Bob's ear as they watched Rob and Sam leave to go pack his bag. \n\n\"I know, he's been touching her since they got here.\" \n\n\"Aren't you angry?' \n\n\"No,\" he smiled. Ann and Danny stood and excused themselves. \n\nIt suddenly hit Julie like a ton of bricks. \"You planned all of this.\" She turned and looked into his eyes. How did you know where I lived?\" \n\n\"The hotel wouldn't tell me who you where so I bought the hotel. I now own the old records\" \n\n\"But, how did you get Sam to go at the same time your son would be there?\" \n\n\"Let's say I had an inside connection,\" he smiled. \n\n\"ERICA!\" Julie cried out. \"She helped you.\" Julie got quiet for a minute. \"You know you've destroyed my marriage.\" She saw him still smiling. \"And.....you've matched our spouses............and our children.\" \n\n\"How did you know I would want to be with you again?\" She glared at him and realized her fingers were stroking his hard-on. \n\n\"OH,\" she suddenly laughed. \n\n\"I don't want to live in New Jersey.\" She said as they walked up to his room to pack his stuff. \n\n\"Me neither. I found us a nice place near Tampa.\" \n\n\"What about Ann and Danny?\" \n\n\"She will get the New Jersey house and it will be up to her to talk Danny into moving North.\" \n\n\"Yeah like that will ever happen,\" Julie laughed trying to picture her redneck husband driving down the Jersey Turnpike. \n\n\"We live in South Jersey near Cape May. Did you know the tip of New Jersey is below the Mason Dixon Line?\" \n\nJulie laughed. \"How about Rob and Sam?\" \n\n\"I've got them a nice condo near their colleges,\" he answered. \n\n\"Is there anything you haven't thought of?\" \n\n\"Nope,\" he answered as he pulled out a small box from his pocket and handed it to her. \n\nShe opened it and saw the biggest diamond she had ever seen on a ring. \"I...uh...already have one,\" she frowned. \n\nJulie watched as he pulled the smaller diamond from her finger and replaced it with the much larger one. They stood at the door to his room as he slowly opened it. \n\n\"We shouldn't show it to Danny,\" she whispered. \n\n\"He won't mind,\" Bob laughed as he pushed opened the door. There on the bed was their spouses fucking like rabbits. \n\n\"OH GOD IT'S BOB!\" Ann cried out. \"I thought we only had one room key.\" Danny didn't stop pounding into her. \n\n\"Nope, I got another one made,\" he laughed. \"Please don't stop, I'll just grab my bags and we will leave you two alone.\" \n\n\"But, we wanted to go to Shangri-la too,\" Ann moaned. \n\n\"We will meet you two and the kids down there,\" he said as he pulled Julie from the room. \n\n\"Where are we going first?\" she asked. \n\n\"We have to pick some others up on the way,\" he answered. \n\n\"Who could that be?\" Julie asked. Everything was moving too fast. \n\n\"Why Erica and Paul of course,\" he laughed. \n\n\"Of course,\" Julie repeated as she ran after him. \"Wait up!\"\n\nfinis\n\nEnding Note: Yeah, I know, don't let it finish here. If the story is well accepted I'll do a sequel called \"SHANGRI-LA\". I hope everyone liked the story. Don't forget to vote and please send me an email. Thanks..........Slick. "
    ],
    "authorname": "Slickman",
    "tags": [
        "spring break",
        "coed",
        "college",
        "party",
        "virgin",
        "love",
        "lost love"
    ],
    "category": "First Time",
    "url": "https://www.literotica.com/s/spring-break-11"
}