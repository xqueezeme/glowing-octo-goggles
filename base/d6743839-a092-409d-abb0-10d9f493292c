{
    "title": "Mine...Yours Pt. 09",
    "pages": [
        "Author's Note: Yes, I have been away for a while, hardly even checked my messages. Work during the holidays takes up a lot of my time, and I got a bad case of the flu on top of it all. Thank you all for your encouragement. Not too sure how I felt about the death threats. Though...the descriptions have given me ideas for other stories! :-) In any case I am glad to be back to writing and here is the next installment of Mine...Yours. Please leave me comments and tell me your thoughts, I enjoy reading them.\n\nSincerely, \n\nPB\n\n*****\n\nChapter 25: Father\n\nWith the clouds now out of sight, the regular cloud cover seemed kind of comforting, like a dark grey blanket that softened sound. Kind of made it humid, but with the cool air it didn't feel too muggy. I saw Lucretia totter a little on top of the roof. She bent her knees and crouched lifting her tail for balance to stop herself from stumbling. I jogged into the house and went up the stairs to pop out of my bedroom window. I carefully made my way over the rain slick roof to where Lucretia was standing, with a tired smile on her face.\n\n\"He saw me!\" she said happily. I put an arm around her shoulder and glanced in the direction the storm clouds had gone.\n\n\"Your...papa?\" I asked. Ordinarily I would have said dad or father or something like that. The whole pyrotechnic display with lighting and so forth made me decide to ere on the side of caution. She nodded. Full of information this one! Just overflowing with answers to all the questions I have! \n\nSarcasm...\n\n\"Ready to get back downstairs?\" I asked.\n\n\"Sit with me?\" she returned.\n\n\"Not on the roof...downstairs sure.\"\n\n\"Okay.\" She said quietly and we went back downstairs and sat on my old couch. \n\nShe fidgeted with her fingers, while I looked at her. I wondered how she was dealing with being struck by lightning. I mean, the Guinness world book of records recorded one guy who has been struck like seven times in his life. I wonder if his wife felt safe walking outside with him? Did he make her stay at least 50 feet away at all times? I mean, he must really need to change his cologne or brand of clothing if it attracts electricity like that. Does it make him really good at changing light bulbs? I wonder if his job was as an electrician? Wouldn't it be ironic if...\n\n\"I don't get to see my father very often, he spends more of his time here on this Plane than he does in my own.\" Lucretia told me. I nodded, waiting for her to continue. She stayed quiet. Why was she being so reticent to speak? What...is she embarrassed of her dad? Or should I call him father? I guess dads who are present in their kid's lives get called \"Dad\" and the ones who aren't get relegated to \"Father.\" Is that why she looks uncomfortable? Did Lucretia not have a good relationship with him or he was...?\n\n\"I used to play with him when I was young. He was always around for the first...\" her voice trailed off as she squinted her eyes in thought and counted on her fingers then she continued. \n\n\"...five years of my life. Soon after I reached adulthood he began to avoid me. He never avoided me if I went looking for him, but he never came looking for me.\" She finished.\n\nHuh...so the first five years he was around, okay. The formative years in any child's life no matter what the species, is important for mental and emotional development. That doesn't really...wait a minute!\n\n\"I'm sorry, did you say the first five years of your life he was around, and then he became distant when you reached adulthood?\" I asked. \n\n\"Soon after, but basically...yeah.\" She replied.\n\n\"What about the years between five and when you reached adulthood? Wasn't he around for that?\"\n\n\"I don't understand the question...there are no years between that!\" Lucretia said incredulously.\n\n\"Look, human kids start going to school around age 4. They go to kindergarten and then the next 12 years of their lives is spent between going to school and going home. When they reach the teenage years they might get jobs or other stuff and then when they either reach the age of 18...they are considered adults.\" \n\nLucretia now looked really confused and held up her hands for me to slow down.\n\n\"You mean it takes 18 YEARS for a human to become an adult?\" She said in surprise, almost like she didn't believe it.\n\n\"Technically...yeah. Though the term adult is kind of...well...huh. Let's just say I have met some 40 year olds that still can't be considered adults.\" I grinned at my little joke, it seemed to go right over Lucretia's head as she rubbed her chin.\n\n\"For most of us, we reach our mature size and come into our full abilities after five years. Is it really that different for humans?\" She asked curiously.\n\nI was flabbergasted. \"You mean you went from this size...\" I held my arms out like I was measuring a baby. Then I indicated her sitting across from me. \"...to this size in the span of five years?\"\n\nShe nodded. \n\n\"Well, you must have had some incredible growth spurts then.\" She didn't seem to hear me.\n\n\"To have all of that time! 13 extra years to learn, experience and grow! I could have done SO much in that extra time!\" She appeared almost giddy. It also made me curious, and then I had a thought.\n\nWhat was her world like? She had touched on a couple of things here and there, but I had never really asked her about it. I felt kind of dumb to tell the truth, here I am with a being from another plane of existence, and I never thought to ask her about her home! Yeah, something is definitely not working right! I felt an echo of agreement from within me and grimaced. I hadn't visited my Door in a while. Ever since getting tossed around by...whatever that was in bandages, I had been kind of leery of doing any kind of meditation. I knew that wasn't a smart way to go about doing things...but then again, I have never really been anyone's definition of what being smart is.\n\nJust as I was about to ask about her home Lucretia began to yawn. \"Bedtime?\" She asked. I nodded and she got up from the couch and walked to the base of the stairs. I didn't get up and Lucretia noticed this. She turned to question me.\n\n\"You are not coming?\" She asked.\n\n\"In a bit, got some thinking to do first.\" I replied.\n\nIt looked like she wanted to say more. Instead she dipped her head and smiled. \"Join me soon, Master.\" \n\nI gave her a lopsided grin and shooed her away negligently with one hand making her giggle. When I couldn't hear her footsteps anymore I sat down on the floor and crossed my legs so they were comfortable, leaning my back against the base of the couch. I settled my breathing into an easy rhythm, and shortly after, I felt my perspective shift inward.\n\nDown the spiral staircase I walked and upon reaching the cold basement floor in my mind's eye I walked towards the Door. I came to the first words of Mother's weird benediction, of sorts, and studied them all again. The three words in raised lettering on the floor, and the last one inscribed on the Door itself, I noticed a big difference in one of them.\n\nThe first word was all crumbled, only a shadow of what it had been remained!\n\n\"Don't worry about it Greg!\" that voice called out from the Door. I turned my attention to the speaker and I could see his bloodshot eyes staring at me with a strange desire. Either to cause me physical harm or...no idea, just strange. I walked closer, avoiding the ruin of the first word and watching the man at the view slot. I glanced around. No linen bandages waiting out of sight to snag me at this monster's whim. I shook my head at myself...if it was out of sight then how in the world could I see them!?\n\n\"So...Gregory? You still want to let me...out?\" The being wrapped in bandages asked with a chuckle and a hideous grin.\n\n\"You ready to tell me who you are yet?\" I answered back. It bothered me. Well a lot of things bothered me, but his weird sense of humor was right at the top of my list! The others that were locked away all seemed intent on getting back in with me. This one, this aspect of who I was...am...whatever! \n\nThis one seemed content to be where he was, and just observe me. Like he was carefully weighing and measuring my every move or choice..\n\n\"Why do you think it's funny? Being locked in there, what's so amusing to you about it?\" I asked, my mouth tight with annoyance. He just laughed and it made the short hair on my head stand on end! \n\n\"Why did you lock us away, Gregory? Was it because we made you feel? Was the pain of her betrayal so great that you had to separate yourself from us?\" He asked.\n\nI ignored the question. \"Why are the words that were engraved here dissipating?\" I asked. He sighed and shook his head.\n\n\"I really don't care, but I will tell you if you answer my question.\" He grated out.\n\n\"Fine, answer my question first.\" I demanded.\n\nA bandage long and thin drifted out to stir the remains of the word like a child idly tracing a finger in the dust.\n\n\"The Mother came and I watched as she created the words from the essence of your cell. They respond to the changes in you, as they fade so does your cell...\" The bandage caressed the second word that was there.\n\n\"...as you change, so does your little world, and your view of it.\" The bandage snapped out suddenly and tightened around my wrist!\n\n\"Now answer MY question!\" He shouted.\n\nI let my power flicker to life and it stretched the bandage from around my wrist and I slipped out of its grasp. I gave the bandaged man a smirk and he just smiled wider!\n\n\"YES! You are learning!\" He chortled. It sounded like someone was beating on a wet half inflated basketball!\n\n\"In answer to your question? Yes, I locked you all away, to keep that pain from driving me insane. If I hadn't, every single slanderous remark from the police, my probation officer, and all the rest would have been a fresh wound. It was too much to handle so I locked it away, and I didn't mean to put you all in with it, but it happened and I am sorry for it.\" I said.\n\nThen a thought occurred to me. \"My sense of Justice and Truth didn't seem to be affected too much by it. That means...\" My voice trailed off as a sense of horror filled me. I turned to look at this unrecognizable aspect of myself and I suddenly realized. This aspect of myself that was twisted beyond all recognition, this damaged...oh God in Heaven! I didn't, I wouldn't really...No!\n\nIt began to laugh, an insane high pitched laugh that made my chest ache and my blood freeze!\n\n\"That's right! You put it ALL on me! You locked me away and wrapped it all on me! What do you think this is?\" He screamed and pulled at the white cloth wrapping him from head to toe.\n\n\"Day and Night whether asleep or awake, sitting or standing it burns and aches every second of every hour. I have no rest and no comfort only this pain that you have sentenced me to!\" He suddenly slammed his face against the Door his eyes filling the view slot and his voice rang out like a bell making the whole place vibrate.\n\n\"WHAT DID I EVER DO TO DESERVE THIS!!??\"\n\nThen he went quiet, and the silence itself was just as deafening as when he was screaming at me.\n\nI wanted to say something...I just didn't know what to say, I had never been in a situation quite like this before. I didn't need to speak, the bandaged form began to talk again.\n\n\"There are a couple of things that make this situation funny to me, to answer your question Gregory.\" I saw movement behind the door and I began to move closer to keep this hidden aspect in sight.\n\n\"The first is, that you don't remember locking me away. The second is thinking I want to go back inside where you are. I have enough hurt to deal with already to do that to myself.\"\n\nGo back inside...what?\n\n\"Do you mean being let out...what do you mean back inside?\" I asked. Those eyes appeared suddenly in the slot, filling my vision, but for once no fear or concern touched me as I stared into those reddened orbs. I guess I really was changing.\n\n\"Your perspective is so skewed! You made a cell to lock away the aspects of yourself that registered that pain...you never thought...you never realized!\" He began to laugh again, a sad despairing sound. \n\n\"You felt so much better letting in just two aspects of who you were, and you think I am the ONLY one left?\" He continued to cackle and I began to feel that another secret was going to be coming, and I wasn't going to like it very much.\n\n\"You made that Door and thought we were all trapped behind it, in reality...\n\n\"YOU LOCKED YOURSELF AWAY FROM US!\" \n\nThen those eyes moved from the view slot and for the first time the light dimmed and I got a glimpse of a vast area, more of a feeling than actually seeing. I also felt hundreds of pairs of eyes looking back at me. It gave an impression of being in an outhouse in the middle of a field and you feel you are all alone, then when you open the door to step out you realize you're in the middle of a crowd.\n\nThe red rimmed eyes came back again.\n\n\"So you see Gregory, why would I want to lock myself in a tiny little cell with you? WE are all out here waiting for you to re-join us!\" \n\nWith those final words the viewport slammed shut and the floor beneath me seemed to buck under my feet tossing me to a sitting position. I closed my eyes and grimaced from the shock. When I opened them again I was sitting cross legged on the floor with my back against the couch.\n\n\"Well...Damn!\" \n\nHow do I process something like this? What do I do now? I had always known I was broken...ever since the judgement came down against me when I knew I was innocent. That does kind of make someone doubt their sanity! It's hard to explain to a lot of people how it feels, most don't seem to get it, no matter how hard I try to explain it so they understand. I sort of gave up, except for a few individuals, I just stopped telling my story.\n\nMost don't seem to care either way.\n\nI thought of my first meeting with Lucretia and her Mother, and how they took the information. They didn't seem to care either except to them it was all foolishness since they could tell the truth. How strange that an Outsider, someone not from this world is able to tell what is a lie when the normal inhabitants of my own world could not do the same. \n\nAll of this thinking wasn't going to help me now, at any rate. It was now time for me to get some shut eye. \n\nI climbed the stairs to my room after using the bathroom to freshen up. I could hear the low rumble of thunder in the distance and looked out of the window to see if the storm was returning. I couldn't really tell anything so I finished brushing my teeth and as I said before...went upstairs to go to sleep. The moment my head rose a little above the floor of my loft bedroom I felt eyes on me, but much more distinct. It wasn't like before when I couldn't tell where they were coming from, no...this came from over by the wall. It came from an absolutely massive black form with black eyes that seemed to have a bit of shine to them. That shine was the only thing that allowed me to differentiate the eyes from the uniform black of whatever this thing was.\n\n\"Greetings...\" said a voice.\n\nIt was low, like the thunder I had just heard before, and carried a richness to it that was...well, for lack of a better word and I hope you will excuse the pun...electrifying.\n\nMy initial feeling was fear, followed by a weird mix of curiosity and anger. Curious how he got in, I mean...obviously a he with that voice and all! Though it could be a she for all I know I mean, can't women have deep voices that make your body vibrate when they talk? They could and if I ever meet one I am definitely going to reserve judgment. However until that time I am going to go with my initial thought that this thing is a dude!\n\nAnger decided to make its presence known as I opened my mouth...\n\n\"Really? You broke into my home and entered without asking and show up in my room and the first thing you say is that? How about saying you're sorry for entering without my or Lucretia's permission? Better yet, how about marching your ass to the door and then knocking or ringing the doorbell first? I would probably have let you in anyway even if you are...so...really...damn you're huge!\" I finished.\n\nTruthfully I wasn't scared anymore. I got used to telling if people wanted to do me harm or not, this...thing definitely didn't give off the \"I'm gonna hurt you!\" vibe. It seemed more of a \"Wait and see...\" kind of vibe. \n\nThe eyes turned and I still could not see him very well. I could tell I only came up to where his chest might be. Looking away from me, over at the bed where Lucretia lay sleeping, well she appeared to be starting to wake up from all the noise I had been making. The being moved closer to my friend and I was wondering what he or she was doing when a large hand the size of my head and an arm as thick as my leg extended towards her! Before he could do what I think he was going to do...actually I had no idea what he was going to do I just could not imagine it to be good, I stepped in front of that arm and my shield came up. The eyes narrowed and then I felt a pulse of warmth envelope me.\n\nIt was an odd sensation, like a warm blanket that muffled my vision, hearing, even my sense of touch! Experimentally I touched my chest, and even the sensation on my shield was diffused and fuzzy. It also made me feel sleepy and my eyelids drooped. I was having a hard time standing. I looked over at Lucretia and she had settled back down on the mattress and contentedly sighed. I saw the being's large hand gently brush her hair and run black fingers over her cheek. The thought of my bed with a soft succubae to cuddle with sounded so good to me... I started to turn when that same hand as black as used motor oil encompassed my entire upper arm. I looked down at it and wondered where it had come from. Slowly it led me away from the bed and then...the feeling vanished. \n\nI blinked a couple times and shook my head to clear the cobwebs. Actually, from how fuzzy I felt there must have been some dust bunnies amongst the cobwebs as well! The hand let go of my arm and now I was face to...um...chest? Face to chest with this mountain of blackness that was peering down at me in curiosity.\n\n\"I apologize for not asking permission to enter your home...\" It began. I raised up my hand to stop him from speaking. Still upset, but obviously it didn't seem to want to harm me...yet. Also, I figured it's always better to make sure visitors knew where they stood. That was why I was about to correct him.\n\n\"Actually you are only half right,\" I told him. \"It's actually not just my home, its Lucretia's as well. So it's OUR home.\" I put the emphasis on the word to make sure he picked up on it. From the way his eyes widened and the pleased feeling I got from him I must have said the right thing. His eyes looked back at my sleeping succubae and they seemed to grow...luminescent? \n\n\"You give her partial claim to your home?\" He asked quietly. I nodded. \"You are different...not what was expected.\" The voice rumbled as the eyes turned back to me.\n\n\"You have me at a disadvantage, mind telling me who you are?\" I asked. \"While you are at it...maybe change or show me what you are?\" I added, letting some of my irritation leak out in my voice.\n\nSlowly the black began to coalesce around the eyes, and a face began to take form...but what a face!\n\nSharp cheekbones and full thick black lips and a rounded dome of a head with no trace of hair, not even eyebrows or eyelashes. Powerful shoulders with muscles upon muscles covered by a thin dark purple vest that highlighted the ripples of his abdominal lines. He also did have that ridiculous \"V\" at the bottom of his six pack that guided the eyes down to...the waist band of...are those...what is he...?\n\nHe was wearing baggy silk pants that looked straight out of...and those shoes were...pointed with curled toes? I did a double take, then a triple take. He looked just like he had stepped out of an old Arabian Nights movie set! I wanted to laugh at him, but there was something...",
        "It looked like he had travelled many miles in those shoes, and the rich silk of his bloused pants looked faded like they had seen too many sand storms. This was not a costume...this is what he wore. My eyes travelled back up the length of his body. He seemed to have shrunk down so he was only a head taller than me, but it in no way diminished the...I want to say power but it wasn't that. He seemed to vibrate with energy and life and...I don't know how to explain it...\n\nI can say that I am very glad I didn't laugh at him!\n\nI cleared my throat, \"Ahem! Thanks for letting me see you. So what were you expecting from me?\" I asked him.\n\n\"I had no expectations, I just came to see.\" He swivelled his head to look at Lucretia again. \"I came to see my daughter, and I wished to converse with you without her knowing I am here.\"\n\nHe smiled and for a moment all of his joints and eyes seemed to sparkle with light, \"It was a surprise to see her dance and sing for me again...just like when she was young!\" He stared fondly at my friend and I could feel a strong sense of pride, wonder and longing.\n\nLucretia's DADDY?\n\nOh crap! What a way to introduce yourself Greg! Accuse him of breaking and entering and telling him to get his ass outside? Way to score points! Can he read minds like Mother? Is he reading my mind now? Am I making a bigger idiot out of myself now by him seeing what I am thinking and now he thinks I am crazy? Come on dummy! Say something before he...\n\n\"It is good to be silent unless you truly have something to say, and thank you for letting me think in peace while I contemplate my child.\" He turned back and crossed his arms over his massive chest while looking down at me. Then he gave me a small nod, which for some reason made me feel like he had saluted me somehow.\n\n\"Most in your position would be...louder.\" He observed, and then seemed to wait. What he was waiting for I did not know. So I just stood there staring back at him.\n\nHe obviously was scoping me out, not that I could blame him, I am a guy and I am rooming with his little girl! Any father worth their salt would be doing an interrogation followed with threats of castration if harm came to their princess! I had no idea if he liked what he saw or not, but I figured this was his show and I would let him set the pace...\n\nHeck with that! I had questions!\n\n\"So, what do I call you, or are you like Mother and have no name or at least not one that I can say?\" I asked.\n\nHe pondered this and then answered, \"Mother has a name for me, but it is not one you may call me...Lucretia has a name for me, but again...it is for her use only.\" He scratched his arm and I saw small flashes of electricity like on a Jacob's ladder as he did this. \"You may call me what I am...I am Djinn.\"\n\nI sighed, this conversation would be longer than I thought! What the heck is a djinn? Sounds like a genie mixed with a sneeze!\n\n\"You hungry...uhm...Djinn?\". He shook his head. \"Would you like some coffee or tea?\" I asked.\n\n\"Only if you are having some, coffee please.\" \n\nI led him down to the kitchen, and got the coffee going. Then I got him one of my mugs, actually it was the same one that I let Mother use when she was here last. I saw him smile faintly as he looked at it.\n\n\"What's so funny?\" I asked Djinn. He glanced up as his hand dwarfed the mug.\n\n\"This is the same cup that my mate used when she was here last.\" He replied. My eyebrows shot up in surprise! Maybe I need to wash my dishes better!\n\n\"You can smell her on it or something?\" I asked. He shook his head.\n\n\"No, I recognize it from when I was here with her last.\"\n\nNow I was really surprised, and confused!\n\n\"Sorry man, I think I would have remembered you if you were...\" I stopped talking and started thinking. Something was tickling, at the back of my mind.\n\nWhen Mother had been sitting at the table and had said out loud that she wanted cream and sugar for her coffee, it had sounded like she was making a request. Then when the Empty Throne had been discussed I had seen what looked like a heat shimmer in the air next to her. The times I had been watched with invisible eyes...when I had looked for it with my Sight. Had it always been...him?\n\nHe watched me closely, gauging my reactions.\n\n\"So...that was you...the whole time?\" I asked slowly. He nodded.\n\nI pulled out some munchies to nibble on. Right now I had some questions for the big man, I mean djinn. Actually, I grabbed a dictionary off the bookshelf that we now had in the living room. Yes, I have a bookshelf in the living room. Lucretia demanded it. I always want her to put my books back when she borrows them, but she doesn't have permission to enter my room when I am not home so she deman...I mean she requested a bookshelf in the living room.\n\nI set down the dictionary and looked up the word \"djinn\" after checking to see that his coffee (No cream and three sugars) was full. I won't tell you what I found out...mainly because you can look it up yourself. I will say my eyebrows raised up and I looked a little wide eyed at my guest. He just sat there, sipping his coffee watching me without blinking.\n\n\"Ahem...\" I coughed into my hand. \"Would it be out of place to call you something else than Djinn?\" \n\nHe thought this over and said, \"If the name fits.\"\n\n\"Would it be all right if I called you...Marid?\" I asked carefully. The warm smile and the way he sat up straight in his chair told me I had guessed right.\n\n\"That would be acceptable.\" Was his rumbling reply.\n\nOkay, dodged a bullet on that one! Now I had a name. Now, I just needed to see what he wanted and get some conversation going.\n\n\"So, you came to see Lucretia and speak to me?\" I asked while getting a plate of dates, goat cheeses and some of my cookies for us to munch on. I set it on the table and plucked a date to pop in my mouth and chew as I waited for his answer.\n\n\"I saw her several times, I only thought to make my presence known as I have seen her change over the past month or so.\" Marid replied. He took a cookie and picked it up. He smelled it a couple times and then tried a bite. He gave a pleased rumble and then quickly munched the whole thing, then picked up a piece of goat cheese to eat as well.\n\n\"Lucretia really likes that cheese.\" I told him as he ate another piece. \"She said it reminds her of home. The same thing with the dates.\"\n\nMarid smiled and picked up a date, considering it. \"When she was a child and I would bounce her on my knee, I would bring food and toys from this world to her...\" \n\nHe paused as he ate the date, then continued. \"Mother did not approve. Since she had been born in that realm, Mother wanted her to BE of that realm.\" He smiled and his eyes went to the ceiling. I assumed he was looking at where Lucretia lay sleeping.\n\n\"I would return often to be with my mate, but soon after Lucretia reached her mature age I was not allowed to have much interaction with her unless she sought me out. Though...\" He smiled again as he ate a cookie and then drank a little more coffee.\n\n\"I was able to see that the influence of what I am held fast despite her Mother's race.\" He chuckled. The tremble of it, made the dishes rattle a little on the table. I gave a questioning look at the ceiling and he gave a nod.\n\n\"She is fine and will not wake from the spell of slumber I cast. We may talk as we wish.\" He replied. Made sense. I had felt as if I had drunk a whole bottle of Nyquil after a complete turkey dinner with a full days labor under my belt! No way would Lucretia wake up, even if a train whistle had gone off by her ear.\n\n\"So Lucretia is half succubus and half...djinn.\" I asked, a little confused. Gwen had told me that Succubae only gave birth to Succubae. He shook his head and polished off the remainder of his coffee. I filled it up for him and he gave me a nod of thanks. You can always tell different nods apart. A slow nod means someone understands what you say, a quick nod after doing something for someone is a nod of thanks, or the head cocked to the side and wide eyes means surprise. Standard stuff.\n\n\"No, I merely meant that her interactions with me changed her perspectives, much to Mother's anger!\" He smiled again, \"She was VERY angry with me! The fights we had were made into human legend, and making up...\" He gave me a grin that was rather unsettling.\n\n\"I first saw she was different from her sisters when she wanted to spend time out in the wastes. I would watch as she would fly over the long desert sands that are so similar to the...\" I held up a hand to stop him. He said a word I couldn't hear right and I had to ask him about it.\n\n\"The Rope Kaleebaah? What is that?\" I asked.\n\n\"You mispronounced it, but it doesn't matter. It is where I was made and where I was given my role on this plane.\" Marid explained.\n\n\"I move the storms and the rain to where it needs to be. A delicate balance is held in place by the will of the Lord of this Plane. I was given my task, and I cannot leave it for long.\" He finished his second cup and took another cookie. \n\nThat felt like he was getting ready to leave soon. I quickly stood up and grabbed a zip lock bag. I snagged over a dozen cookies from the freezer and swept them inside of it and then emptied the plate into another. I handed him the bags and he looked at them for a moment before putting them inside his vest where they disappeared. I checked out that thin vest and mentally compared the thin silk to what in my mind should be fat with a bag of cookies. He must have some kind of magic that allows, uh, I don't know! If he does have a magical holding thing I wonder how much he could carry?\n\n\"Quick question before you go...\" I said while thinking back to all that Gwen had told me. \"I don't know if it is wrong of me to ask this, but I think it's important. Are you and Mother in love?\"\n\nHis eyes stared into mine for several moments as he appeared to think. \"I will tell you a tale and then I must leave.\" He said quietly.\n\n\"Over two centuries ago I met a woman of white who challenged me to combat. We raged back and forth for over 7 days and nights. On the morning of the eighth day we were both exhausted having hardly any strength left to even move. I asked her why she had wanted to challenge me, she said, \"I am Queen and have power beyond measure, all I have now is curiosity. I wish to know of this power mortals call Love. So submit and give me my wishes!\"\n\nI was now amused and granted her my boon and three wishes I granted her. She used her first wish and for the next 7 days she would be in Love. The first thing her eyes saw she would Love. \n\nShe decided to look upon me!\n\nFor the next while we enjoyed each other's passions and spoke under the stars and high in the clouds; which are my home. We shared secrets and hopes and our future wants. When the wish ran its course and the desire for Love would leave, to our surprise it stayed! For I had fallen in Love with her as well! From our union a child was made, born on another Plane, but with ties that I know are buried deep in her heart.\"\n\nHe stood straight and tall now and bright sparks appeared on his skin.\n\n\"For I am MARID, and though none may see it in her, I am her PAPA! None can deny this, and no one can take that away from her! Succubae though she may be, my daughter was born of love and that places her high amongst many!\"\n\nHis voice lowered and the intensity passed. I wasn't sure what to say, so I pointed at his vest. \"Those cookies, she made those. I hope you enjoy them.\"\n\nHe smiled and stroked his vest where the two bags had disappeared.\n\n\"Out of curiosity, do you have any questions for me at all?\" I asked. I couldn't believe this visit was going to be over so soon! \n\n\"I have learned what I have needed to learn Gregory Bastion Brooks.\" Marid replied. \"I ask only that you do not use your Sight to try and find me. I can be, painful...to look upon. Mother made me aware of this so I chose to shield you from discomfort.\"  \n\nI followed him up the stairs, and he stood at the edge of the bed looking down on Lucretia who lay in slumber, her arm tossed over where I would normally be sleeping. She was used to sleeping in a pile with Mother and her sisters so she was always touching or holding me in some form as she slept. I kept telling her not to hold on to me since I was used to sleeping alone. She just had given me the \"Look\" and said that I had better get used to it!\n\nI did.\n\n\"You can talk to her if you would like...I am sure she would like it.\" I told him. He shook his head.\n\n\"No, I must bow to the requests of her Queen. Even if I am her sire, I have no authority over her.\" Then he smiled at me.\n\n\"Though...could you give her this for me?\" he asked. He held out his hand and dropped a piece of what felt like metal in it. It was about the size of a golf ball and was angled and grooved yet each side was smooth as glass. \n\n\"Is this obsidian?\" I asked. He nodded.\n\n\"She always liked it when I brought her baubles when she was younger.\" Then Marid laid his hand on my head and muttered softly under his breath.\n\nI almost thought I should push his hand off, been having enough trouble in my mind as it was, didn't need a djinn to add to the mix. Instead I just felt...the same.\n\nHe bowed slightly to me and seemed to hold that pose and wait. I figured, when in Rome...do as the Roman's do! I placed my hand on his head and I spoke quietly under my breath. I thought of what to say, since this seemed to be a blessing of some sort or other.\n\n\"Wherever you travel, wherever you fly,\n\nI will keep Lucretia safe and close by.\n\nYou have my permission, freely given and offered,\n\nTo return anytime to visit your daughter.\"\n\nI know, can't rhyme to save my life...felt right though. It seemed to be since Marid grinned widely at me. Then he appeared to flow into nothing but darkness and sparkling light and slipped out of my window and into the cloudless sky.\n\nChapter 26: Hilda\n\nNo...Lucretia was not happy that I did not let her wake up to see her Papa!\n\n\"GREG!\" she yelled as she hurtled across the backyard at me! I spun at the last second using my power to turn with her. I grabbed her wrist twisted, angling my hips, slamming her hard to the dirt! I rolled away with my hands up, palm out in an attempt at making a pacifying gesture!\n\n\"Wait! Come on Lucretia! Didn't we have a nice time last night? Good heart to heart, forgiveness and couple of laughs right? Oh shit!\" I yelled and dove to the side as those stupid wing spears EXTENDED right at me!\n\n\"I haven't seen Papa in generations! He was here...close enough to touch!\" She kept yelling and swinging her weapons at me. She stood in one place and kept cracking them like whips making the ends snake out to try to either grab me or strike me. I didn't know which honestly, but either a grab or a strike seemed like a bad idea!\n\nSo I made a little mistake this morning. We woke up and went downstairs, had a nice breakfast and so forth, got outside to do a little training when I brought up that I had seen her Father and talked to him. She had stood there with her mouth open in surprise and then she gritted her teeth and then...\n\nWell, I am sure you can guess what happened.\n\nOne of the whip strikes hit the ground close to me and I stomped on the end of it and planted my weight on it. Now here's a thing about having massive strength. Sure, you may be strong enough to punch a huge section out of a tree, but what about mass? Strength and mass are intertwined. You may be able to push something that weighs half of a ton, but unless you have enough mass or traction to keep your feet on the floor, you're just not going to be able to do anything.\n\nBeing a telekinetic with a range of only two inches, it was more than enough to do what I wanted here. I used my power to grip the earth under my foot and cinched down on the end of her wing spear. I quickly reached down and gripped her extended wing and yanked, hard! Her claws had been digging into the dirt to supply a steady platform to strike from, but I had a better grip with my power, and assisting my arm strength was child's play! I yanked her so she was sailing through the air right at me. With one wing trapped even if she got the other unfurled she...\n\nShe unfurled her one remaining wing and used it to angle her feet, spurs first right at me!\n\nShould have seen that coming...crap.\n\nI struck fast, my fist slamming hard into her feet making her cry out and sending her tumbling hard to the ground beside me. \n\nNow it was my turn!\n\nShe stood up, limping and growling as she shook off my attack. I had been experimenting on my own with something. Using my power I could basically hover between half an inch and two inches off the ground. Of course hovering in air made it hard to hold my feet under me. There had been some truly embarrassing falls I had taken because of it! But, I could move a lot faster, almost like ice skating, but with my mind rather than using my legs.\n\nI raised up on a small cushion of air and shot across the lawn much faster than I could run! I zipped up behind Lucretia just as she was turning and kicked her across the face before zipping past her and colliding with the fence!\n\nStill wasn't very good at stopping!\n\nI heard a groan as Lucretia picked herself back up off the ground and woozily stared at me. Then she grinned and gave a coughing hack before spitting black blood on the ground. She grinned at me, and I could see she had a tooth missing! \n\n\"That...Gregory...was GOOD!\" She chuckled throatily. Rolling her head to stretch it I heard it pop a couple of times. When she smiled again I saw her tooth had almost grown back fully!\n\n\"Round 2?\" she asked with sweetly insincere innocence.\n\nRound 2? ROUND 2!? I didn't even understand why we were having a Round 1! Sure I could guess she was pissed about not seeing her dad but did it really call for...Oh Big Shit Biscuits And Mustard Gravy!\n\nI was right, Lucretia was holding back on me. She really could use magic!\n\nA streak of lightning arched out at me like a scythe cutting wheat and I rolled under it and got to my feet. I zipped to the side on a cushion of power and barely dodged a series of thick barbed chains that shot out of the soil to ensnare me! I saw her smiling and laughing as little pin pricks shot from her hands that burned with silver fire across my vision. They hit my shield hard and I felt it drain a little.\n\nI saw those back sparkles in her skin widen and then cover her so she appeared to be made of black glass, it appeared to be an armor of some sort with sharp edges instead of rounded corners. Didn't seem to slow her down though as she took off to chase me down. I zipped towards the house and up the wall allowing my power to grab hard to the wood and brick pulling myself upwards to dodge the bolts of silver. I kicked off of it, turned once in the air and came down hard stomping both feet into Lucretia's head with all the force and power I could call to bear.\n\nShe sank to her knees in the backyard dirt and looked miffed but that was about it. That armor must really be something else!\n\nHer wings no longer had that spear look to them as she swept them at me again and suddenly I noticed that the edges looked sharp! \n\nThat was going to hurt...\n\nI hardened the shield tight around my arm in desperation and the blue field of energy turned opaque as the blades hit...and stopped!\n\nI let out a sigh of relief before a clawed foot kicked me hard in the weaker shield now on my stomach and knocked me back against the fence again!\n\nI was getting tired, and desperate! I figured I would do this next move and if it worked...cool...if not...well I was in for a whole galaxy of pain!\n\nShe rushed in, black claws matching the shiny armor that now covered her and I moved to the side just a little allowing the sharp edges to miss me. Then I focused on my shield as hard as I could and the whole damn thing turned opaque! I wrapped my arms around Lucretia trapping her arms to her sides and began to squeeze. I couldn't see her when my power was solid like this. I didn't need to this close.",
        "I felt her head butt me...\n\nMy shield held.\n\nI felt her claws try to dig in...\n\nMy shield held.\n\nShe tried to knee me, to break my hold she wriggled like a snared snake!\n\nMy shield held!\n\nThen I heard it, a quiet whisper from her lips.\n\n\"My...Greg...\"\n\nHer safe words!\n\nI immediately let go and dropped the shield. I fell back on the ground panting like I had run a marathon! I looked over and saw that my succubae was in the same shape, though her armor seemed to have hair line cracks in it around her biceps and chest. She was grinning at me from ear to ear though as that black armor began to sink back into her.\n\n\"That was SOOO much fun Master!\" she crowed and flopped back to stare up at the morning sky.\n\n\"You had me thinking that you were serious!\" I tried to yell but it came out as a wheeze. \"I thought I was fighting for my life! I thought you were really going to kill me!\"\n\nShe wiggled her hand in the air in a \"Maybe\" gesture. \n\n\"I thought about maybe breaking your arm or leg, then just decided to push you hard to see what you could come up with when you were really pressed.\" Lucretia sighed and stretched, her arms over her head, her back arching pushing her breasts up. I could see her nipples were hard and she ran one hand down over her chest and belly and down the inside of her thighs. I blinked and looked away.\n\nI found out that combat for some reason made Lucretia as horny as a cat in heat! Well, minus the mewing and the clawing and so forth. Well...she does the clawing I guess now that I think about it!\n\n\"Hey! What the hell is going on over there?\" I heard a voice yell over the fence and a blonde head peered over with an angry scowl. I was looking upside down into Hildy's face. I saw the werewolf scan the yard and shake her head as she saw burn marks and holes from explosions and so forth all across my backyard!\n\n\"You guys keep it down! We got a meeting happening here soon...okay?\" Hildy said.\n\nThe leader of the Gatewatch had been avoiding both my roommate and I for the past month. I know that Lucretia had spent time with Jemima and Gwen on several occasions now, but Hildy was always absent. Hildy also avoided me, and since I had been wanting to talk to her about what I had seen of her feelings for me...I was getting annoyed.\n\n\"You know Hildy...from this angle, I can see up your nose? You trim very well, can hardly see a thing!\" I said in a slow drawl. Lucretia snickered and the large blonde wolf frowned down at me.\n\n\"Come on Hildy! Lighten up!\" I said with a smile. Hildy glanced back and forth between me and my roommate and raised her lip in a silent snarl.\n\nI made a snap decision and said, \"Lucretia, please go inside...Hildy and I have to talk.\" Lucretia stood, looked Hildy over casually and then started to move closer to me. I stopped her.\n\n\"Not now Lucretia. I need to talk to Hildy.\" I said firmly. My roommate stared at the side profile of my face as I kept eye contact with my neighbor. I saw her nod once and then walk back inside. Within a few steps she had changed back to her human appearance, but her clothing had shifted to include a long sleeved T-shirt in dark blue and skinny jeans...skinny jeans! \n\nHate skinny jeans! We were going to have a talk later.\n\nHildy kept staring at me and we kept up the eye contact for a while. I knew it was ticking her off, that is kind of what I wanted. Just like Jemima she gets off balance when she was ticked. I didn't want to attack her though, didn't want a fight. I just wanted her to talk to me! Communication is the key to any relationship. Whether it's with your parents, your children, friends...hell...even your barber! Don't tell your barber what you want, you get a lousy haircut. Hence why I buzz my head every other week.\n\n\"What did I do to make you hate me Hildy?\" I asked quietly. Hildy looked startled at my question. I guess she was expecting me to say something else. I pressed forward more, while I could tell she was off balance.\n\n\"Is it because I have an Outsider? Is it because I tried to survive an impossible situation? Or is it because I am trying to teach her to play nice with others? What is it Hildy? Why are you avoiding me? Why do you move away when I try to talk to you? Why do you leave the house when Lucretia and I come over?\"\n\nI got up and then put my hands on top of the fence and gave a little jump and yanked myself over to land in her yard. Darn arborvitae sticking to my clothes!\n\nI kept on talking and her eyes were getting bigger. \"Ever since you all came over to my house and we talked about the binding and everything that happened, ever since I told you we needed to talk...\" I shook my head.\n\n\"Can we talk now Hildy? Just tell me what's wrong? I know you got a meeting soon and I don't want you to miss it... How about you just tell me what the problem is and I will go home and think about what I can do for my part? Then we can talk again and...MmmMPh?\"\n\nI am a pretty big guy. Pretty solid and thick. I am not moved easily. Then again, having a 7 foot tall Nordic Werewolf grab me in her arms and kiss me hard was a surprise!\n\nFor several seconds I felt her lips on mine and she tasted...well...not all that much experienced in kisses. Lucretia's were the best in my book, but Hildy's was a close second! She let me go and gave my lips a quick lick with her tongue before stepping back.\n\n\"I'm sorry, just wanted to do that once to see what it was like. If this conversation doesn't go well I wanted to at least know what it was like to kiss you.\" She said firmly, her hands on her hips as she looked me over.\n\nI wobbled once on my feet and steadied myself with a hand on the fence. Okay...maybe that kiss was a little more than second...! I shook off the feelings I felt. \n\n\"So you want to know my problem Greg? You want to know my issue?\" She said sternly. I nodded and rubbed a hand on the back of neck.\n\n\"I am jealous!\" Hildy snarled. \"I am jealous that...that I can't have you!\" Hildy raised her right hand from her hip to cover her eyes and groaned.\n\n\"I can't believe I even SAID that out loud!\" She sighed. I couldn't believe it either! I mean, look at her! Then look at me! If ever there was an unexpected response that was...I mean...what the hell? Hildy is tall, blonde, stacked and smells really good. I am short, squat, and I smell only alright. There is something wrong with this picture!\n\n\"Ah...uh...Hildy? Why in the world would you want ME?\" I asked incredulously. The very idea that this beautiful creature would want me was...the look she gave me as I asked the question was almost as disbelieving as my own.\n\n\"You're kidding right? Greg? You're not kidding. You really don't see it?\" Hildy asked in surprise. I shook my head and shrugged.\n\n\"You are a beautiful woman Hildy. I am...not. I mean I am not a woman or beautiful obviously but I am not, you know. I am not in your class of...you understand what I am saying here?\" I asked, upset with my own lack of articulation.\n\nShe laughed and shook her head in response. \"I get it but you're missing the point.\" She motioned to me to follow and we walked up onto her back porch passing the pool that I had helped put in a few months before. Jemima waved from inside the house where she was vacuuming and Gwen was putting together plates of appetizers. Hildy directed me to sit in a chair at the patio table. She sat across from me and seemed to gather her thoughts.\n\n\"I am the daughter of the Alpha of this area. It includes all of the Portland Metro Area, extends to Tillamook down to Eugene and as Far East as Bend.\" She told me. I said nothing but on the inside my stomach lurched...that was a large tract of land!\n\n\"Being the daughter of an Alpha, I was constantly being courted until I became a member of the Gatewatch, for seven years we dedicate ourselves to protecting our world from people who try to tear the Veil either on purpose or just from ignorance. My Father did it before me, and Jemima's Sire, and Gwen's Father...a warlock did it before her.\" She sighed and I waited for her to continue, I didn't want to ask any foolish questions and show my ignorance.\n\n\"Gate Watchers do not have relationships, we do not need the distraction. Actually, Jemima and Gwen didn't really need to worry about that...but that is their story to tell if you want to ask them about it.\" She leaned forward and put her elbows on the table.\n\n\"Being who I am, who my father is, and now my position of a prestigious role in the community...I could have anyone I want. I have too!\" She said with a slightly predatory grin. I gulped, then raised an eyebrow at her. She chuckled at that and rubbed her fingertips over her lips.\n\n\"Then I met you...or rather I saw you through the window of your house. We had just moved here, shortly after we all met and swore our oaths. The house had opened up on the market, the original owner complaining they needed to sell it and fast! They took a massive loss on it too. We had it checked out but everything was on the level and we moved in.\" She rubbed her throat and didn't meet my eyes.\n\n\"I don't know how much you have read or how much you know about our kind. We do not have \"soulmates\" as the romance novels like to say. We do not smell someone and then our souls call out to each other! That's a load of horse shit!\" \n\nShe met my eyes again, \"That is not to say we can't like the way someone smells and want to get to know them better.\"\n\nI shifted uncomfortably, then had a thought that made me start to chuckle...then laugh and laugh hard! Hildy looked at me in surprise and I tried to explain but it took me a few seconds to get my laughter under control.\n\n\"You like the way I smell and I empty dumpsters for a living?\" I saw her start to nod but when I finished speaking she froze and looked horrified at what I was implying. Then she laughed as well! Which got me going again. Hildy for all of her beauty has a funny deep pitched tittering laugh that is almost as funny as a good joke by itself!\n\n\"It's not only your smell Greg...\" she told me with a mock glare. \"...it's also your humor, how you talk. The way you carry yourself.\" She looked down at the table and idly scratched a neatly trimmed nail on the glass surface.\n\n\"It was nice to not have to be the Alpha's daughter or a Gate Watcher with someone...to just be myself. To get to know someone without those restrictions of class keeping everything formal.\" She paused a moment and swallowed and then looked even further away from me, off to the side and out into the yard.\n\n\"Also, you would hide from us...emotionally. It made me...want...to chase you. To draw you out, to see if I could make you want to get to know us. To like us...to like me.\" Hildy said quietly.\n\nI sat up at that. Being my friend was a game to her? This didn't sound like the Hildy I know...but, it made sense in a weird fashion. What is one thing that a predatory animal will do if you try to run? It would chase you! Duh.\n\n\"So...if I understand correctly what you are saying Hildy. You kind of liked me, and when I would want to be alone and would pull back from you it made you want to follow...to chase me?\" I asked just as quietly. I tried to keep the bit of anger in my belly out of my voice but I guess some came through anyway. She turned back to face me and gripped my hands in hers where they were resting on the table.\n\n\"I know that sounds bad Greg, but that was just my instinct. I liked...like you. I wanted to get to know you better. I wanted to have the chance to become closer to you and see if anything developed.\" She growled in frustration.\n\n\"Then that damned Halloween party! We all were having a great time and then some of us started making out and one of my old pack mates was there and soon we all were having a real party. I remember seeing you come in, then cover your face and step outside again. Then you came back in and I saw the look in your eyes. You were angry, and determined. I saw that new girl who had been invited in by someone talking to you. I saw her change and then I saw you...\"\n\nShe glanced down at our hands and she released my left one to wrap both of her large soft palms around my right one. \"I saw you fight for us Gregory.\" She said softly. Her eyes were large and warm, her smile was small and inviting like she was sharing a special secret with me.\n\n\"In my position we fight for others, it is a rare thing to have someone fight for us...it felt...good!\" Hildy said, her fingers now stroking my wrist.\n\n\"Then we found out your secret, and saw how you were treated. It confirmed your actions and the reason you were the way you are. We saw your house and then your basement...\" Hildy continued, her nails lightly scratching my skin sending pleasurable chills up and down my arm.\n\n\"I saw what you were, a man...who once was peaceful, forced to harden himself and just wanted to be left alone. It called out to both the animal side of me to hunt and pursue you. You are powerful in your own way...\" Her fingers then began to sooth the small light scratches she had been giving me.\n\n\"At the same time though, the fact that you were so broken hearted and undecided on your course of actions called to the woman in me. That, together with how you already were, made me want you all the more!\" Hildy raised my hand and kissed the inside of my wrist, her tongue flicking out for a moment to taste my skin with a feather like touch. \n\nI didn't pull away, I was feeling really comfortable...surprisingly so. She continued explaining her thoughts to me, but was now massaging my hand, both of her hands working my palm.\n\n\"Then to find you bound to a succubae? I was sure you would be dead soon! Jemima and Gwen both sided with me, we had to act after that night when you stood up for that creature. Then we met your family and watched how you all interacted...I felt despair!\" She stopped and looked down at my hand.\n\n\"I can smell Lucretia on you Greg!\" Hildy said softly in a small voice. \"Even doing what I have been doing to your skin I can still smell and taste her on you!\" She looked up at me.\n\n\"So now you know. I am jealous, and I have been avoiding both you and her because I wanted you and as long as you have her I don't even have a chance. Or she might kill you and that is the same thing as well.\" She set my arm back on the table and wiped at her eyes, even though I saw no evidence of tears.\n\n\"I am not used to losing something when I really want it. Maybe that's my problem. Maybe it's just a blocked goal...I...\" her voice trailed off as I got up from my chair and circled around to her side of the table. I crouched down so I was slightly looking up into her face.\n\n\"Thank you...\" I said to her. \"You don't know how special you made me feel knowing that a woman as beautiful and powerful as you wanted me. It makes me feel a lot better about myself. I have not been wanted by anyone in a long time.\" Then I hugged her.\n\nI said once that there are different kinds of hugs and I had detailed them in two categories. This one definitely falls into the giving kind. I wanted her to know I had heard and appreciated what she had said. She clutched me back and I heard her whisper. \n\n\"Would I have had a chance with you?\"\n\n\"I don't know...\" I answered honestly. \"I am a lot different right now than I was a month ago. Who can say?\" \n\nI pulled back to look in her eyes and I brushed her bangs back out of her face. \"I do know that it hurt a lot to not have you in my life. Please don't shut me out again?\"\n\nShe sighed and looked down at the table. I was standing now and her arm was around my waist her head against my hip. \"Alright...I will even try to be around the...Lucretia. I don't know how friendly I can be with her.\"\n\n\"Try for just being civil?\" I suggested. Hildy snorted but smiled a little. \n\n\"I think I can do that!\" She said with a small chuckle.\n\n\"Hildy...Alpha Michael is here and...oh, hi Greg!\" Gwen said as she was drying her hands off with a hand towel. I smiled and held out my other arm to her and she gave me a half hug. \n\n\"Egad!\" I heard Jemima groan. \"Anymore sweetness...gah! It's all I can take. Careful or a whole bunch of Hallmark cards are going to be born!\"\n\nI saw Jemima walking on to the back porch with a small dark haired man following her. Jemima had a couple of bottles of ale which she set on the table.\n\n\"The meeting is going to start soon. Trevor, this is Greg, our next door neighbor with the Succubae roommate. Gregory...this is Trevor Malfour, Gwen's Dad and teacher.\"\n\nI held out a hand and shook his, he gave me a considering look, then smiled and said, \"Gwen has talked a lot about you and Lucretia. I guess I should say I am ...grateful? For her to have the experience of working with an Outsider...but I still have some concerns.\" He shook his head and chuckled.\n\n\"I'm sorry! Fathers have the right to be concerned...but I shouldn't be giving you a hard time about it!\" He gave me a grin and asked, \"Were you invited to this meeting as well?\"\n\nA female voice softly sailed through the sliding glass doors to the porch and answered before I could open my mouth.\n\n\"Of course not!\" A gorgeous red head stepped out in a long dress that had a long slit on the side to expose long...very long legs. Even in the shade of the overhang that covered the back porch from the light of the sun I could see that she was a vampire...how you ask? Nope...didn't need my Sight. She just strutted like she owned the place! I guess she felt it was important to maintain the stereotypes.\n\nThe smile she gave me took the sting out of her earlier words, though it did make me feel a little like a fly saying \"How do you do?\" to the spider before being invited into its parlor for a drink!\n\n\"Impressive specimen he may be, he is still not...\" her voice trailed off as she smelled me. She choked for a moment. \"You know William?\" She murmured absently as she took a step back.\n\n\"Ummm...if you mean is he my friend then yes I know him. If you mean...well, I have no idea how else you could mean that so yes, I know him.\"\n\nShe peered at me closely. \"Do you know who I am?\" I shook my head to show I did not. I also was fast coming to the realization that I was swimming in water a little out of my depth!\n\n\"I am Suzanne...a one-time disciple of William's. I am Jemima's Sire.\" She said. I shrugged and held out my hand to shake, which she did not. I looked down at my hand then at her hands and said, \"I do wash my hands Suzanne.\"\n\nShe nodded, \"Yes, but I prefer to not have William the Terrible's smell on my body. Nothing personal to you...but I would rather avoid that!\"\n\nI was about to ask her what she meant by \"William the Terrible!\" when I heard a deep and melodious voice ask, \"Hilda...child...who is this...person?\"\n\nThe voice did about three different things to me. The first thing it did was make me feel like a small boy in torn jeans and muddy from splashing in mud puddles suddenly meeting the president of the United States. The second thing it did was confirm the fact that yes, indeed I was swimming in deep waters that had sharks in it. The third thing it did?\n\nIt pissed me off!\n\nThe owner, I assume a male from tone and texture of the voice, was probably a very nice person once you got to know him. The problem was that the inflections used and how words were said led me to believe that this person viewed themselves as a noble of sorts and most others as peasants.\n\nI turned and saw a man...a very, very good looking man! He was dressed in a dark grey blazer with matching pants and black turtle neck. When his eyes met mine they hardened and I almost caught a snarl before his lips smoothed out. In turn I felt my face blanch and I grit my teeth in real anger now! Then I smiled and held out a hand to him.\n\n\"Hello Judge Roberts! It's good to see you again now that I am out of jail and outside of a courtroom!\" I looked over at Hildy. ",
        "\"I take it that your father is Judge Michael Roberts?\" I asked with false sincerity. I was forcing my lips to smile so much that it was starting to hurt. Hildy was looking back and forth between us with an expression of surprise.\n\n\"My dad presided over your case?\" She looked over at her father suddenly with a measuring gaze. \"Then you knew he was innocent and you still...\"\n\n\"Enough...Hilda...\" He said in that deep voice he used as a judge. \"This is not the time or the place to discuss such things.\" He reached out and firmly took my hand in his and squeezed HARD! I caught it with my power and matched him squeeze for squeeze. His expression momentarily changed to surprise before he began to let go of my hand. \n\nI was tempted to not let go and go for the whole enchilada! I wanted to cinch down so tight that his hand would pop like Jello in a lunch sack! I let go though. This was Hildy's dad, no matter what this jackass had done to me I would not show disrespect to Hildy or the rest of the Gatewatch. I turned to Hildy.\n\n\"Well, looks like your meeting is about to get underway. Thanks for talking with me and helping us air out our differences. How I about I bring over more than just an appetizer for the next barbeque? I think I got a line on some premium elk sausage and bison steaks...interested?\"\n\nHildy was staring at Judge Roberts, her father and finally tore her eyes away from him to look at me.\n\n\"Hmmm? Oh...yes...that would be great...\" she said. I leaned over and gave her a hug which she returned. I swear I felt a dagger pressed against my neck as I did it. After I let go I turned to walk out the front door. I saw Suzanne hiding a smile, Trevor openly grinning and Judge Michael Roberts looking like he wanted to rip my spinal column out! I gave them all a cheery wave and walked out the front door and gave a sigh of relief. I could feel the old anger and hurt build up in me again.\n\nJudge Michael Roberts who had found me guilty in a court of law! He was a werewolf and had smelled my innocence and STILL found me guilty when he KNEW better! I walked out of the yard and nearly ran into Lucretia who had been waiting for me.\n\n\"Greg? I was watching from our trees and I saw...\" I cut her off with a hug and almost squeezed the air out of her! \n\n\"We can talk in the house. I just want to go home.\" I said into her hair. I felt her nod and we walked into my yard hand in hand.\n\nTo be continued."
    ],
    "authorname": "payenbrant",
    "tags": [
        "sex offender",
        "succubus",
        "vampire",
        "werewolf",
        "djinn",
        "father",
        "love",
        "romance",
        "magic",
        "cookies"
    ],
    "category": "NonHuman",
    "url": "https://www.literotica.com/s/mine-yours-pt-09"
}