{
    "title": "Shadow School Ch. 04",
    "pages": [
        "Cameron stood in front of Julian Arinson, President of Shacrow VanMeter College. The office was a good-sized room, filled with things that complimented the colonial d\u00e9cor. Except this time, the d\u00e9cor probably WAS colonial and not just a mockup. As she studied the desk in front of her, Cameron heard the click of the door as the girl in the black cloak, Aunalita, left the room. \n\n\"How are you liking our campus so far, Miss Ellis?\" The President asked, taking his glasses from his faces as wiping the lenses with a cloth.\n\n\"It's beautiful. The amount of trees... it's like going to school in a forest.\" Cameron berated herself for such a simplistic answer... she should have mentioned the architecture or some sort of appealing intellectual aspect and she was talking about trees. Well.\n\n\"Do you like nature?\" \n\n\"Yes, very much so.\" Very much so? Okay, maybe that was overdoing it. \"I mean... your campus seems to embrace the forest around it... the buildings look so... out of place yet so at home among the forest...\" Cameron could feel herself start to sweat. \"The architecture is stunning.\"\n\n\"We're big on history here,\" President Arinson said with a slight smile. Thankfully, he eased her torment by changing the subject. He gestured to the three other people in the room. \"May I introduce some of the Heads of our seven Houses? This is Elias, Head of Arinson House.\" \n\nA handsome young man in his early twenties offered a brief smile and a nod. Cameron returned the smile with a bigger one, and a nod in his direction. She noticed his slightly curled blonde hair and stunning green eyes, thinking he looked like a younger version of the college President. Maybe he was his son. \n\n\"Next we have Catherine, of Waldemar House.\" The twenty-something blue-eyed brunette had her hair pulled back in waves better suited for the first part of the century. Her sharp face was pretty, her pale skin set off by the darkness of her hair, the brightness of her eyes, and her choice of red lipstick. She eyed Cameron with a calculating look. \"And this,\" the man with dark hair pulled back into a ponytail stepped forward a step, \"is Gavin, of Ovidan House.\"\n\nCameron immediately recognized him as the young man at the Prom that she'd bumped into on the way to the bathroom. He was a Head? He looked like he was her age. And he had apparently gone to a high school Prom... Cameron heard Melanie's voice in her head, the things the silly girl said to her just moments ago in the theatre. Melanie said he'd bitten her. Part of her wanted to be appalled, the other part figured it was just some kind of kinky make-out session gone wrong. Melanie and her excuses aside, what was he doing here? Why was he at Prom?\n\nGavin seemed to recognize her too because he said, \"we met previously at a social affair.\" \n\nCameron plastered a smile on her face despite being reminded of that awful event. \"Yes, I remember, though we were not formally introduced.\" God, she sounded like someone out of a Jane Austen book. What was wrong with her? And the last time she'd seen him she'd actually curtsied before leaving. Blushing, she turned back to the President, hoping he would bale her out once again.\n\n\"I'm sure you are wondering why you have been selected to attend Shacrow VanMeter,\" the President said, \"Each year we send agents into different school districts and this year your district was reviewed. You might even have friends here competing for the scholarship.\"\n\n\"Yes, two girls from my school are here as well.\" She glanced in Gavin's direction but he now seemed to be more interested in whatever could be seen from the window. Her eyes caught the other young man's before she turned back to the President. She didn't want to stare too long but she'd noticed how attractive the three spectators were and it made her a bit self-conscious.\n\n\"As we are not an athletic school, we have no interest in student athletes, yet we choose students in good health with a healthy family background. We look for things that incoming students may offer the school. For instance, you are fluent in French and speak a little Spanish, correct?\" The President peered at her from behind papers apparently telling him these things. \n\nCameron was a little taken off guard. Was that why she was picked? \"My grandmother is French,\" she hedged. \"She moved here when she married my grandfather and she taught me her language and culture... I don't see them much since they moved back to France.\" Her grandparents had met during the Second World War and kept up correspondence until her grandfather proposed marriage in a letter and asked her to come to the US. Cameron's grandmother had no family left after bombs obliterated her town; she herself had been pulled from her basement by her future husband two years before they married. Cameron didn't feel the need to share that with the people in the room, but the story of valor on her grandfather's part and the will to survive her grandmother displayed had always been a cherished family history. \n\n\"As for the Spanish, I only know a little. I had a nanny from the Domenican Republic until I was ten.\" Bethina had been her mother in more ways than her own mother had been. \"But she spoke French as well and helped me learn my grandmother's language. So I learned more French from her than Spanish.\"\n\n\"Wonderful.\" The President sounded pleased to confirm this about her. \"Would you mind demonstrating these languages?\" He nodded to the three standing apart from the interview. \n\n\"If I were to ask you about the Italian Renaissance and the effect Michelangelo had on art, would you be able to answer me in fluent French?\" The sentence came from Gavin, who offered it an almost bored tone of voice. The question had been delivered in perfect French. It made her think of Louis and wonder how they were related.\n\nCameron considered how to respond. It was actually a yes or no question and but she figured a simple \"oui\" wouldn't do the trick. Instead, she responded in French, \"Only if you wish to speak of Italians, my impression is that the French would rather speak of their own artistic achievements.\"\n\nThe blonde one, Elias, allowed a smile to play across his lips as he glanced sideways at Gavin then back to her. The woman beside him, Catherine, laughed haughtily and said \"Spoken like a person with French blood in their veins.\" Cameron only understood a few words... the woman had spoken Spanish more common in Europe, but she got the gist. Was she supposed to respond?\n\n\"Godo di sangue francese.\" Gavin murmured.\n\n\"Enough,\" the President said, looking back at the papers on his desk.\n\nCameron caught the words but barely understood them... yet Gavin had used one of the romance languages and she was pretty sure he had made some sort of comment about French blood. Yeah, because you probably drink it, she thought sarcastically.\n\nThe President looked up at her, glancing at the others before going back to the papers. \"You play tennis as a hobby. Why not for the school?\"\n\n\"There are players on our school team that cause problems for... the less popular girls. I'm not fond of harassment.\" Cameron had been a freshman when she witnessed one of the tennis players tormenting a girl in the hallway. Cameron hadn't done anything because she didn't think she could keep herself from giving the girl what she really deserved... a good punch to the face. But she was a freshman, and though she had been in that school district for two years, she still felt new. Goodbye popularity and Hello expulsion. \n\nIn the end, she had just watched and said nothing. Her cheeks heated at the memory.\n\nThe President waited for her to finish but she didn't. Instead, he said, \"you're grades are pretty good, yet you don't belong to many clubs...\" he let the sentence fade into silence and Cameron guessed the President wanted her to finish it for him.\n\n\"Future Homemakers isn't really my thing... and science club or history club, they just make you do more work. Drama takes too much time. I guess I just enjoy my spare time.\"\n\n\"What do you do with your spare time?\"\n\n\"Horseback riding... I don't compete or anything, I just like to go for a ride sometimes... I like astronomy too, but we don't have a club at school for those things so I just do them myself... the rest of the time I spend with friends.\"\n\n\"And your parents? What do they do in their spare time?\" \n\nCameron knew she only had a second to think about this before there would be too long a pause but her parents... \"They're country clubbers.\" She answered, half in explanation of a lifestyle, the other half in embarrassment; that was pretty much all they did. \"They sail.\" Okay maybe they didn't sail but they did own a sailboat that they'd taken out at least three times since they bought it. \"My dad golfs, my mother...\" drinks. No... what did her mom do really other than socialize with the ladies? \"My mother collects antique jewelry.\" There. No need to mention she just buys it for the prestige of wearing gaudy old necklaces and bracelets that cost a fortune. Cameron's dad always joked that it was an investment... if for some reason the family lost everything they could sell her mother's jewelry and retire comfortably.\n\n\"If you attended our college, what studies would you pursue?\"\n\n\"To be honest I haven't settled on anything specific yet... I planned on working on my gen-ed classes while I was a freshman. I figured it would also depend on the school.\"\n\n\"With your head start in languages have you considered anything along those lines? We have connections at top firms in need of translators who can travel the world with them on business trips.\"\n\nNo. Cameron had not thought of that. Traveling the world on a company's expense account did sound fun though, and her job being only to translate for others... well that wasn't your typical nine to five job. \"I'll definitely consider it... do you have a good language department here?\"\n\n\"One of the best in the country... when you're as well connected as we are, and as discreet, it's best to be able to speak for yourself rather than having another do it for you. All of our translators are former students of Shacrow VanMeter or a sister school. But you'll find we like to keep to ourselves in most cases so it is a position of trust to become employed in such a fashion by the university.\"\n\nCameron could only smile. She had no response for this. She went from not knowing what she was going to do to practically being handed a job if she took a certain path of study. Surely that's what President Arinson meant by telling her this.\n\n\"I'll open the discussion up to the Heads of Houses now unless you have any other questions.\" He smiled at her and sat back in his chair, steepling his fingers and thumb together above his chest. \n\nCameron only had a few questions, but she figured the first was more important. \"This college is unknown to the rest of the world except for a select group of people?\"\n\n\"Yes.\"\n\n\"And I would expect that by going here, I would have to keep such a secret?\"\n\nThe President eyed her over his fingers. \"Yes.\"\n\n\"So I guess bringing friends up to visit would be against policy.\" \n\n\"Correct. If you attend here, do you think you could abide by the restrictions?\"\n\n\"Yes, if they are important enough. But, people talk... has anyone ever slipped up and-\"\n\n\"Not without consequence.\" Gavin interrupted. \"Everyone who has knowledge of this place understands the importance of secrecy. And the repercussions of sharing what they shouldn't.\"\n\n\"Enough, Gavin.\" Elias said. \"You know she understands. There's no harm in asking for confirmation.\"\n\nCameron smiled a little at Elias' rescue, then turned back to the President. She was nervous about this next question, but Aunalita had told her that she would get honest answers to her questions. \"What is so important about this school that it must remain a secret?\"\n\nThe President leaned forward and looked her in the eye. \"For hundreds of years we have protected certain individuals from the public eye and will continue to do so for their children and their children's children. Bloodlines are very important here.\"\n\nBloodlines again. Cameron wondered what that was all about. \"One of the girls mentioned bloodlines when they were on stage... is that why I was chosen? And why just girls? I saw boys on campus as well.\"\n\n\"We do a background check on a scholarship applicant because we believe in adding fresh blood into the mix of students here. If a young woman is accepted, it is assured that no one in her family tree has attended our college for at least four generations, if at all. It keeps the population diverse. And we choose girls instead of boys,\" the President smiled, using her words, \"because the scholarship was set up in the 1600s when women were not allowed to attend college. We believed in equality even then, and the only way a father would relinquish his daughter was if it were paid for and offered her marriage prospects she would not normally have. Today it is not marriage, but business contracts that seduce parents. Simply put, the scholarship and what it entails is the same now as it was then.\"\n\nCameron simply stared. It was like an underground movement by men to educate women. But there was still the catch that must be in effect today... \"Why would the school offer something so wonderful? You get something in return, right?\" \n\n\"Each young woman who attends under the scholarship must adhere to specific traditions during her stay at the school. Those who excel under these conditions are rewarded greatly... but everyone is different so it is up to you to determine your path here should you be given the scholarship. The school benefits from your attendance by providing us with yet another member of the Shacrow VanMeter family... and your position once you graduate is very important to us. Because it will be our position as well.\"\n\nCameron's eyebrows knitted together. The President smiled as if he knew she was questioning what he was saying and decided on a different tactic. \"Let's say for example you wanted to be a lawyer. We would help you become one... we would send you to Harvard to complete your law degree. We would introduce you to some of the top firms and arrange it so that within years, you were a partner at one of the largest firms in the country. Why? Because now we would have legal representation at one of the largest firms in the country. And when the next student came along, we could send her to you and let her enjoy the same connections and benefits. It becomes a cycle... one we try not break lest we have to start anew.\"\n\nCameron understood. \"So if I did go through the language courses as you suggested...\"\n\n\"You would be given the chance to travel abroad and study in the countries where your languages are spoken. You would dive into the culture and learn to be a true native of that country. Then, you would be given the chance to work anywhere you'd like within our network, at some of the best companies. In return, if we ever needed you, you would provide us with your services.\"\n\nThere it was. We give to you so you'll give to us. Sounded good. Also, sounded like the mob or something, but in the end, if she worked hard for them, they'd give her the chance not many students had these days. \n\nShe couldn't help the sarcastic joke that slipped from her mouth. \"I won't have to sign my life away or anything, will I?\" She gave an unsteady laugh.\n\n\"You won't have to sign anything,\" the President chuckled, \"except school attendance forms and the normal paperwork you go through to attend college. \"Simply attend, experience life at Shacrow VanMeter, then enjoy the benefits of our society around the globe.\"\n\n\"Sounds good.\" It did. Cameron had gotten an answer for every question. And she had a feeling it was an honest answer each time. She couldn't really think of anything else to ask, so she simply turned in her seat to face the three Heads watching her.\n\nCatherine spoke first. \"Do you have a lot of friends?\"\n\n\"Yes,\" Cameron answered with a smile, wondering what that had to do with anything.\n\n\"Will you be able to keep the school's existence from them? This may mean distancing yourself to simple visits here and there... you can always make friends here if you enjoy a social environment.\" The young woman gave the appearance of trying to sound friendly, but it was a little fake.\n\n\"I'm sure that's what happens to most people who go away to college... friends change.\" Cameron answered. \"I had to make new friends when I moved to my school, and I don't really talk much to my old friends... we tried, but the calls started to dwindle and I rarely speak to them now.\"\n\nCatherine smiled, amused and content with the answer. \"That'd be a yes, then.\"\n\n\"Yes.\" Cameron returned the smile.\n\nGavin was next. \"Your family... they would be okay with not seeing you very often? Most of our students tend to stay at college year round.\"\n\nCameron hesitated. \"I'm sure my parents wouldn't mind so much if they knew it would be beneficial to my future.... Though I'm sure they'd want to see me for Christmas.\"\n\n\"And what if you couldn't go home for Christmas?\" he asked, eyeing her with deep dark eyes.\n\nCameron hesitated. \"I'm sure if it were very important...\" Words suddenly failed her. Why wouldn't she be able to go home for Christmas?\n\nElias rolled his eyes. \"Gavin, It's a rare circumstance when a student doesn't go home for Christmas, are you referring to something specific?\"\n\nCameron caught the tone in Elias' voice... it was a challenge. It was the second time the blonde came to her rescue during a battle of words with the goth. The two young men simply stared at each other, Gavin clearly irritated and Elias, challenging, but in good humor.\n\nCatherine tsked at the battle of testosterone and took the opportunity to ask another question. \"Do you have a boyfriend? I only ask because unlike friends, significant others can be harder to dissuade from contact.\"\n\nCameron blushed and looked at her hands. \"No... I don't have a boyfriend.\" Trenton had been a disaster, and before that Kevin and Adam, both just flirtations that went nowhere because of her silly rules. Her first kiss had been with David Lieberman, a cute Jewish boy that lived across the street from her parents' old house before the big move. Long-distance relationships were just as tough on twelve-year-olds.\n\nCatherine pursed her lips and looked at her watch. \"Right... that's all the time I have...\" She looked back at the two men she was standing with. \"She's all yours.\" She turned, smiled tightly at Cameron and nodded, before walking over to a door that blended easily within the wood paneling of the wall, and exited. \n\nCameron turned back to the President. Was it something she said?\n\n\"Pay no attention to Catherine, Cameron,\" Gavin said, \"she's always doing things like that.\" He turned to Elias. \"Well, if you have no further questions...\n\nElias smirked. \"I haven't asked any. But don't worry Gavin, I don't feel the need to.\"\n\nGavin turned back to the President. \"Ovidan House would like to put forth a request to interview Miss Ellis privately.\"\n\nCameron's heart sank in her chest. She was all for the school but she wasn't too keen on the Head of Ovidan House. What did a private interview entail exactly? And why didn't Elias 'feel the need' to ask a question? Did he not want her in his House? That would leave Ovidan...\"\n\nElias faced the President. \"Arinson House puts forth the same request.\" \n\nJulian Arinson stood behind his desk, facing the two young men. They were all silent for a moment before he turned to Cameron. \"Miss Ellis,\" the President hedged, \"As tradition dictates, in the case of multiple houses putting forth such a request, it is the privilege of the chosen one to pick the house-\"\n\n\"Arinson.\" Cameron cut him off. She probably shouldn't have -- they seemed to be in some sort of formal ceremony with all the \"putting forth\" going on but there was no question who Cameron would rather leave the room with.",
        "Gavin gritted his teeth. \"You do not choose yet, my dear, we have to make an introduction of our House so that you can choose with the knowledge of what you will get.\"\n\nCameron's mouth was open slightly and she made a hasty apology. \"I'm sorry,\" she said, embarrassed, \"please... continue.\" She'd simply wait until the presentation was over with then say the same thing.\n\nElias grinned. \"In this case I think we can skip the duel for affection; she clearly chose Arinson.\"\n\nGavin rolled his eyes and returned to staring out the window with a wave of his hand. \"Take her then. I have three more girls to interview before tonight and this meeting has gone on long enough.\"\n\nElias smirked. \"Don't be such a sore loser Gavin, you know who you want already so don't bother making a show of courting another potential student... you'll be wasting her time.\" \n\n\"I have made no such decision.\" Gavin turned to face Elias. \"It would be against school policy to have done so before the gala.\"\n\nElias returned Gavin's stare for only a moment before looking at the President. Julian Arinson nodded in acknowledgment before Elias turned to Cameron and held out his hand. She looked up into his face, her eyes wide from the tension in the room. \"Arinson House wishes to formally welcome you to campus Miss Ellis, and requests an interview. Do you accept?\" \n\nCameron didn't take her eyes from Elias' as she reached out and took his hand. She thought he meant to shake it but instead he helped her stand. She grabbed her bag from the floor and followed Elias to the same door Catherine had used as an exit. He opened if for her, gesturing for her to go through. \n\nThe hallway was darker than the President's office, and Cameron's eyes had to adjust to the dim light. The light from the door was fading as it closed and Elias began to lead her down a short hallway. She looked down a stairwell that seemed to descend several stories down. If she were on the second floor of the house, that meant it went far underground. \n\nShe was about to ask Elias where they were going when light flooded the hallway. Gavin had stepped through the door and was walking toward them. \n\nThe goth smirked at them as he passed. \"I have time before my next observance. I think refreshment is in order.\"\n\nElias didn't smile. He simply nodded warily and nodded his head in the direction of the stairs indicating that Gavin should go first. Cameron wondered why until she realized she wouldn't exactly want Gavin behind her either, especially with the tension between the two.\n\nThey all began their way down the stairs in an awkward silence. \n\n***\n\nKristie looked at herself in the bathroom mirror as she washed her hands. It had taken her a few minutes to even get off the bench where Daman had left her, let alone make it to the bathroom to clean up. Her brain was still trying to catch up with the last half hour and it was hard to come to terms with what had just happened. \n\nIt had been a long time since a man had sparked her interest and this one had set her on fire. She was pretty sure something else was going on, and whatever had taken place between them wasn't all natural... but whatever he was, he defiantly was not human. \n\nThe image of him sticking his finger in his mouth to suck off the remaining juices was burned into her memory. She had smelled herself on him, and it wasn't just arousal. \n\nThere had been blood on his finger. \n\nNormally she would have been grossed out, but the act itself had been so shocking, she had done nothing but stare open-mouthed. His actions dumbfounded her. \n\nHe had fucking tasted her blood.\n\nTwisted.\n\nThe trip to the bathroom had confirmed her mortification as she tried to salvage what was left of her sanity. Daman was either clueless or was one sick fuck. That was kinkier shit than she was into.\n\nDoing the best she could to clean herself up, she couldn't think of what to do next. Did she find her parents and bolt? Did she warn the other girls to run away as fast as they could? \n\nPerverted as it was, it had been the single hottest thing of Kristie's teenage life. Never in her eighteen years had anything blown her mind like Daman's clever dexterity. How did he know to touch her there? It was like he entered some sort of hacker code into her nervous system and pressed enter. She had even seen stars for crying out loud. \n\nKristie ran through the events leading up to the hot action in the doorway and tried to look at thing objectively. Daman had tried to take her mind off the walls, and succeeded. If she followed her gut reaction she'd seen an Egyptian interpretation of a man making love to a woman while sucking at her neck. Something told Kris that it wasn't an Egyptian hickey in the making. She'd also seen men turning into wolves and fighting... then a man BITING a wolf. Okay... lots of biting led to two things... vampires or zombies. As Daman didn't look dead, he must be undead.\n\nWas Daman really a vampire? The blood she'd tasted in her mouth was his... he'd apologized for putting it there, and acted as if he knew she would soon get so turned on she'd actually beg him for some kind of touch or release. He'd clearly played with her despite the presence of blood which, she admitted, was always a question she had when watching a vampire movie: What happens when the young woman the vampire is interested in gets her period? Does that make him thirsty or is it taboo?\n\nDaman had been cool the entire time. He'd also been hot... which went against vampire lore. He didn't bust out fangs or show any sign that he could smell her blood, which he must have. Her cheeks heated at the memory of him telling her that he could smell her. Fucking Hell.\n\nStill, Daman hadn't done anything she didn't want him too, in fact, it was just the opposite. He'd been a little aggressive, yeah, but he also said he wasn't going to do anything unless she asked him... and he stayed true to that. And the entire time he never tried to find his own release. \n\nKris had told him she liked girls. Maybe this was his way of trying to not scare her off? It wasn't like she was scared of a penis... she just had a thing for breasts... and female connection. But the reaction her body had to Daman... He said she wouldn't have behaved that way if she didn't at least feel a little something... \n\nA knock at the bathroom door made Kristie jump. She'd been staring at nothing while she thought.\n\n\"Kristie?\" Becky's voice sounded curious. \"Are you okay?\"\n\n\"Yeah... I'll be out in a minute.\" Kristie checked herself in the mirror again and took a deep breath before turning and opening the door.\n\n\"Hey,\" Becky said. \"Daman said you were down here...\"\n\n\"Yeah, he left... I guess he has to sit in on more interviews?\"\n\n\"Yes... but only the ones where a girl is considered for his House.\" Becky turned for the stairs leading up into what Kristie guessed was Sokar House.\n\nKristie followed the girl up the steps and wondered if she should mention the encounter... probably not... but was that something that happened often? Did Becky know the Head of her House was probably a vampire? And if she did... \n\nA different thought suddenly hit Kristie. \n\nWhy the Hell was she getting so worked up over something like this? Effing vampires, man! She might have just encountered a real one. \n\nHoly shit.\n\nHer whole life she'd been looking to do something wild... something out of the ordinary... and really, she was looking forward to a few party years at campus before settling down with a partner and raising a family... or maybe not settling down and just living it up until she died. Yet here she stood in a real life vampire academy (maybe) and she could have an experience only few people had. \n\nShe knew it was a twisted thought, but Hell... Kristie had the sudden urge to be twisted.\n\n***\n\nMelanie was starting to get bored. The third batch of girls were apparently the unlucky ones who had to wait for two hours before their interview. If she were last, it'd be more like three. She wondered what would happen if she got up and went for a walk. There didn't seem to be anyone but the girls in the theatre, so no one was really around to stop her. And if the last waiting period was any indication, she had a good half hour before the girls in cloaks lined up on stage. Bor. Ing.\n\nStanding, she started to scoot out of the aisle. Only a few girls looked up from whatever they brought to occupy their time. She made her way to the doors that her parents had exited through, thinking maybe she could use the excuse of going to the bathroom. Surely they wouldn't expect the girls to hold it that long.\n\nThe lobby of the theatre was empty of people so she looked around the room. Spotting the ladies' restroom she figured she might as well go ahead and go since she didn't know what the rest of the day would entail. She passed by a darkened hallway, a few message boards, and some artwork, including a bust of a guy with leaves on his head like a Caesar. Pausing she looked down at the young man's face then read the plaque beneath a swath of marble cloth: Gaius Julius Caesar Augustus Germanicus.\n\nWow... okay maybe he WAS Caesar. She looked at the face more closely... he was kinda cute... sll this time she'd thought he was some middle-aged soldier with a thing for Cleopatra.... Or was that Antony?\n\nMelanie went to the bathroom to kill more time and came out wondering if she should stay in the theatre. She could have used some fresh air; there wasn't much light coming through the lobby doors as it was and the darkness of the theatre was starting to get to her with nothing going on. \n\nStrolling around the room she decided to busy herself with message boards and displays. There were pictures posted in a glass casing of a campus outreach program... some students working with pet adoption societies and others reading books to preschoolers. Some Halloween photos were still up showing toddlers in cute costumes and kids with their mouths smothered in candy. She saw Louis standing next to a girl, both dressed as chickens. She was holding a baby in an egg costume. Silly, but cute. \n\nMelanie started to wonder... was that Louis' baby? Who was the girl? The mother? His wife? She never really thought to look for a ring on his hand but then, she was a little uncomfortable as it was and had avoided looking at him as much as possible. He looked too much like Gavin.\n\n\"Melanie?\" \n\nShe turned. Speak of the devil. Her name sounded so elegant in that light French accent of his. She was used to a more southern pronunciation. \n\nLouis came striding up to her, the front door shutting behind him. She wondered if she was in trouble. \n\n\"Hey... sorry... after two hours of sitting in there I had to get out for some air,\" she said sheepishly. She turned back to the photos. \"I was just looking at these pictures.\"\n\nLouis smiled as he approached her. \"My brother... he turned two in March.\"\n\nMelanie looked back at the baby, then at the girl. \"So is she...\" the mother? \n\n\"That is my fianc\u00e9e, Sophie.\"\n\n\"Oh.\"\n\n\"She lives in Paris but she visits during the fall. She never misses a Halloween... it's such a commercial holiday here and she loves dressing up in ridiculous costumes.\" \n\n\"So it wasn't your idea to dress as a chicken?\" Melanie couldn't help but notice how close Louis was to her. Granted, he was leaning over her shoulder to look at the picture, but with all the Gavin business, she was a bit uncomfortable having an Ovidan next to her neck.\n\nLouis chuckled and straightened, taking a step back. \"I'm a rooster. She's the chicken. And little Philippe is adorable in the egg costume, is he not?\"\n\nMelanie turned back to the photo and giggled. The baby did look absolutely ridiculous, but he was definitely adorable. \"Did his mother not want to take him trick-or-treating?\"\n\n\"Ah,\" Louis said, sighing. \"Sadly Bethanie is no longer with us. With both parents out of the picture, Sophie and I will adopt Philippe when we marry.\"\n\nMelanie suddenly felt guilty for judging Louis so harshly. \"I'm so sorry.\"\n\n\"For what?\" Louis said, trying to brighten the mood. \"Life goes on, and little Philippe will have everything he wants. I plan to spoil him to pieces.\"\n\nMelanie smiled. \"Well congratulations then.\"\n\n\"And now for you... the girls will arrive in about 20 minutes if you can stand it... then you will have all the fresh air you want as you walk to the President's House. Your parents are already in a meeting with the Board, and as soon as you are finished, you'll have a banquet waiting for you. Think you can hold up for another hour?\" Louis had walked to the theatre door and opened it for her.\n\n\"Sure.\" Melanie said, walking back into the gloomy theatre. \n\n***\n\nCameron learned after only a few steps into the underground passage that the Heads of Ovidan and Arinson didn't really get along. First, it had been silence. Then, when she had wished someone would say something, Gavin obliged. She thought she preferred silence.\n\n\"I do wish you had chosen differently, Cameron,\" Gavin's voice had called back mockingly. \"My family comes from a long line of knights. Elias is a descendant of barbarians.\"\n\nElias scoffed. \"While your lot were off fighting silly religious battles my people were already discovering the existence of new continents.\"\n\n\"Yes, well my lot effectively converted your lot to our silly religion didn't we? Last I checked there were millions of us and... oh wait your people died out. So sorry about that.\"\n\nCameron glanced at Elias only to see him glance at her as well. He raised his eyebrows in a what-can-you-do? expression and looked back at the dark figure cutting his way down the passage. \"I think the term is assimilation, not absolute death.\" He smiled over at Cameron. \"Christianity came to the north and they frowned on raiders taking slaves... that was pretty much the end of the Viking Age.\" He looked back at Gavin, taunting him further. \"Of course the difference between a slave and a serf is that you hand over the money it costs you to keep them. They think they're free, they just have to do their own accounting now along with all their other chores.\"\n\nGavin chuckled. \"And the system is still in place more or less, wouldn't you say? Every few hundred years you change the rules to make the people think you're giving them what they want, but in reality all you're doing is changing some minor details and renaming positions.\"\n\nCameron couldn't help herself. \"America doesn't have a feudal system.\"\n\nGavin glanced back over his shoulder for a moment, a grin on his face. \"Of course you don't, Miss Ellis... you get to choose between only two men then place him and his family in a colonial castle that's guarded by soldiers... what was it called when the Kennedy's were there... Camelot?\"\n\nCameron opened her mouth to retort but closed it again. She wasn't into politics and whatever needed to be said just then was beyond her. Never talk politics or religion, her mother always said. \n\nComing to a sudden stop, Cameron tried to think of something fast. She dropped to the ground and quickly untied her shoelace, looking up to see that Elias had stopped as well. She hoped Gavin would keep walking. When he stopped too, she looked back at her shoe and mentally cursed.\n\n\"You go ahead, Gavin, I think we can handle an untied shoelace.\" Elias said. His tone made her smile a little. When she glanced up again, Gavin had continued down the passage.\n\nStanding, she straightened her bag and grinned at Elias. \"Thanks.\"\n\n\"Well that's one way to get rid of him,\" he said in a lowered voice. \"Unfortunately there's only a short way to go before we hit the Crossroads where he'll no doubt be waiting.\"\n\nCameron shrugged with a small sigh. \"Did I thank you for saving me from him and his House? 'Cause... thanks.\"\n\nElias grinned. \"There are girls out there who would love to be in his House.\"\n\n\"Yeah well lots of people love rocky road but I'd take homemade vanilla any day.\" Cameron said, starting back down the hall.\n\n\"Did you just refer to me as ice cream?\" Elias sounded as if he was holding back laughter.\n\nCameron froze, realizing that yes... she'd just called Elias Arinson, potential Head of her House, a flavor of ice cream. \n\nBefore she could answer, Elias said, \"What flavor would that make you?\"\n\nCameron laughed and started walking again, her elbow brushing his arm as they made their way down the passage. \"Rainbow sherbet. Melt in your mouth sweetness with half the calories.\" \n\nIt was his turn to stop. \n\nShe giggled, turning to see the reaction on his face. \"You asked. It's been my favorite flavor for years and for just that reason.\"\n\nElias shook his head, his face thoughtful. \"Just be glad you didn't give that answer to Gavin. You might not have made it out of the hallway.\"\n\nWas it just her or had their conversation turned to flirting?\n\nWithin the next two minutes they were at the Crossroads, a place Cameron thought looked like storage for historical movie sets. It was a hodgepodge of different time periods and in the center of it all, Gavin was sipping a glass of red wine while looking through some of the other bottles on display.\n\n\"Bit early for that, isn't it?\" Elias asked, crossing the room\n\n\"Never too early to start drinking this vintage... sixteen years... tasty.\" Gavin swished the liquid around in the glass.\n\nCameron suddenly wondered if it was really wine. She decided to ignore the Goth, focusing more on the bizarre room as she walked beside Elias. There were eight or nine different hallways connected to the room -- not counting the one they had just left -- and Elias was steering her toward one in the middle. She couldn't help but notice that they all looked completely different beyond the matching arched entrances... the one she was passing now actually had hieroglyphics etched into the walls. The next had wallpaper that looked hundreds of years old. What a strange way to decorate.\n\nCameron followed Elias to the fifth corridor. She saw row upon row of circular disks linking the walls and torches casting light on the hallway beyond. The walls themselves were artfully constructed out of wood, the rich colors warm and inviting.\n\nElias stopped at the arch of this particular hallway and held out his arm, gesturing for her to go first. Cameron didn't even slow her steps, wanting to get as far away from Gavin as possible. He had put his glass down and watched her as she entered the hallway.\n\nOr rather, tried to enter.\n\nCameron slammed against some invisible barrier, her mouth stinging from the contact. It was like she'd walked right into an invisible barrier.\n\nBefore she could even react she heard a gasp, then a growl, and she was suddenly being thrown back against the wall to the side of the archway. Dazed, she opened her eyes to see that Elias had placed himself in front of her, his stance protective. What the...?\n\nShe could only peek at Gavin from one side but what she saw made her stomach turn a summersault. Gavin hadn't moved, but was staring at Elias with such fierceness she was suddenly afraid for the man in front of her. Gavin's eyes, already a dark color, were the deepest black she'd ever seen... like the pupils had dilated to the largest possible size. \n\n\"What did you do?\" Elias growled, not moving. He was so still... \"You offered the scholarship to a virgin?\"\n\nWoah... what did her virginity have anything to do with the two guys in the room suddenly going feral?\n\nGavin's body looked ready to spring into action. \"Why would I do that? You know it's against school policy.\"\n\n\"You know what this means... did you have this planned all along? Is that why you invited her? Despite having already selected your applicant prematurely?\" Elias' voice was soaked with derision. \n\n\"It was a gamble, sure, but I thought she was already experienced,\" Gavin said. \"She was thinking about sex the whole night and her date was as well.\"",
        "Cameron felt her heart beat in her lip. Reaching up, she gently touched her mouth, feeling it already starting to swell. She already knew she was bleeding... she tasted blood.\n\nGavin's eyes darted in her direction and she shrank away from his strange stare, trying to make herself smaller behind Elias. Her movement made him turn and look at her, and when he did, she knew she was in trouble.\n\nElias' eyes were the same dark black, the green barely visible around the enlarged pupils. It was creepy as Hell.\n\nWhat happened next was so fast she couldn't register it fully. Gavin was no longer standing where he had been, and in a blink he and Elias were smashing into the wall to her left. Next they were all the way across the room, Gavin slamming into a bench. \n\nCameron watched, frozen in shock, as the two blurs moved around the room. Crashes from their combat would sound after they had already moved on to another area. By the time she was just starting to wrap her mind around the impossibility of what was happening right before her eyes, she was being grabbed and hauled across the room. \n\nShe'd seen supernatural acts of strength on TV and in movies countless times but nothing could prepare her for the jolt of being moved faster than humanly possible. Which brought her to the next point... these guys were not human.\n\nShe looked down at the arm and traveled up its length to stare at the dark hair pulled back into a ponytail. Gavin. Gavin had grabbed hold of her arm and... Gavin was gone. There was a pause as she turned to see what was going on when she was suddenly jerked back in the opposite direction. Elias shoved her in the bathroom and shut the door behind him.\n\nThey weren't normal. They were... what were they... super fast... what the...\n\n\"Pull down your pants.\"\n\nCameron blinked at Elias as he came over to her and started to unbuckle her belt at a too-swift speed.\n\n\"Wha-\"\n\nHe kissed her. It was rough, and quick, and lasted for only a moment before he pulled back and looked at her. He simply said, \"I'm sorry.\"\n\nThen he bit her.\n\nIt was brief, but before she could register his hands tilting her head, Elias had sunk his teeth into her neck. Cameron inhaled at the sharp pain as sharp teeth sliced the flesh of at her neck but the pain was gone the instant she felt it, fading into more bizarre sensations. Simultaneously she felt a pulling sensation from inside her body to the point where Elias' lips touched her skin, and a flooding sensation coming from that same point on her neck. It washed over her within a few heartbeats, her pulse distributing the sweet oblivion through her veins.\n\nThe whole moment lasted only a few seconds but it was enough to leave her dazed. She barely registered her jeans being shoved to her knees.\n\nA loud bang came from the door, followed by a language she didn't understand. She got the gist though... Gavin wasn't happy. \n\n\"This will hurt, Cameron... but trust me... the alternative...\" Elias lightly kissed her cheek before she felt something press between her legs... a towel? It was followed instantly by something a little closer than she was comfortable with.\n\nIt was like her brain had disconnected. She didn't even feel panic. She could feel herself, but not really... simply... bliss. \n\nAnd pain. \n\nSomething had shoved up inside her. She should be panicking, Cameron knew, but then, she was paying more attention to her lack of panic than to what was going on to cause it. A grunted chuckle briefly escaped her as she realized Elias had actually apologized BEFORE doing what he'd just done. That made no sense.\n\nAnother bang came from the door, this time accompanying the sound of wood splitting. \n\nWow. Strong door.\n\nAnother voice had joined Gavin's; a discussion was taking place outside. She understood the words this time but she found she didn't really care. \n\nThe feeling between her legs left her, a hollow ache taking its place along with a sharp shooting pain. Elias was close, his warm breath washed over his ear as he spoke to her softly. \"When we leave the room, keep your head down. Look no one in the eye. We only have a few steps before you're safe.\"\n\nSafe? Hadn't he just bitten her? And he'd... to her...\n\nHer jeans were already up and Elias was buckling her belt, but she knew what he'd done. Her heart began to race -- or tried to -- a strange feeling in the limbo she was experiencing.\n\n\"A few steps. Remember that.\" \n\nShe nodded dumbly. If what he had just done was a better alternative... what...? \n\nElias took her hand and pulled her behind him. Cameron's legs betrayed her and followed him of their own accord, walking like she was in complete control yet no part of her body was doing her bidding. It was like she was on autopilot.\n\nElias opened the door. \n\nFollowing his advice -- why she didn't know -- Cameron kept her head down. She found it hard to form complete thoughts, even about the feet she saw as she looked at the floor. Black dress shoes... mens. Two pairs. Women's feet too. They were... they were... pretty. That's what they were. The shoes were... trendy and the toe nails were painted a color. Pink. A pink color... soft... \n\nA discussion was taking place. She cared. She knew she should... but she hadn't been paying attention.\n\n\"Well there's no need for a ceremony now.\" Elias. \"That you brought a virgin in as a scholarship recipient...\"\n\nThere was that word again. Virgin. \n\nVirgin virgin virgin.\n\nWhy was her virginity so important to everyone? Trenton seemed to think it was something they had to remedy as soon as possible. The thought of Trenton made her cringe. What an asshole.\n\nCameron was suddenly being pulled along, her feet supporting her ungracefully. She couldn't help but look up and upon seeing the archway leading to the wood-paneled hallway, she reacted slowly, barely getting her arm up in front of her face in time before she hit the invisible barrier again. \n\nNothing happened. \n\nElias had stopped and turned back to the entrance. Cameron looked up at the walls now that she was in front of them, noticing that the large round disks she's seen earlier were actually row upon row of Viking shields.\n\nShe heard a hiss and an intake of breath.\n\n\"You drank from her.\" Gavin hissed.\n\n\"You left me no choice.\" Elias retorted. \n\n\"So you claim her then?\" asked a female voice.\n\nThe silence only lasted for a moment. \"I claim her.\"\n\n\"A bit premature, but I must admit I have claimed my own,\" said a rich deep voice. \"As Gavin has apparently done the same, I see no reason to seek punishment for disregarding the formal procedure.\"\n\nGavin growled then blurted out, \"But tradition states-\"\n\n\"That you shouldn't have drunk from the other girl, letting her loose into the crowd of her peers before sating her blood urge?\" Elias' words were mocking. \"You've committed the same crime Gavin; you have made your choice for your House this year. You have no right to judge.\" \n\nCameron felt a thrumming start to pulse in her fingers and toes, spreading through her body in a not unpleasant way. She tried listening but had a hard time of it... until she heard Elias mention \"the other girl.\" Was he referring to Melanie? How'd he know about that? She turned to face everyone.\n\n\"You!\" She suddenly blurted out, pointing a finger at Gavin. He leveled his eyes on her. \"You ruined my Prom! What did you do to Melanie? She ended up screwing my boyfriend!\" Was it just her, or did she sound like she was drunk? \"What did you do?\" she asked again.\n\nGavin looked at her with a blank expression. \"The same thing Elias has just done to you. Only I didn't steal Melanie's virginity... I believe your Prom date did that.\"\n\nCameron felt tears sting her eyes. That was a low blow, especially when she had no control on her actions or emotions. She looked at the other people standing with the Goth, all on the other side of the arch: a tall black muscular man she'd never seen before and -- Cameron recognized her immediately -- the tall willowy blonde from the bathroom at Prom.\n\nThis whole situation seemed utterly ridiculous. Cameron was in some kind of vampire den. She'd seen movies of vampires... she even though Brad Pitt made a pretty hot vampire but she never really considered that they might be real! In fact, if someone would have asked her, she would have scoffed at the idea. Yet here she was... \n\nHere she was.\n\nCameron turned her back on the three watching her and slowly began to walk down the wooden hallway, not really caring what they thought of her. Maybe they'd attack her... maybe she'd be dead in the next few minutes. What was the point of running? The girls who ran in the movies always got caught. \n\nSo, Cameron walked. It was made easier by the lack of caring coursing through her system; she was still on some sort of weird high from that bite Elias gave her. And he'd taken her virginity -- the ache between her legs told her that. She was pretty sure that the experience was shorter than normal... much much shorter... and she didn't even know if it really counted since neither of them got any pleasure out of it.\n\nThat made her pause.\n\nWhat they'd done in the bathroom... she hadn't gotten anything out of it, but then, neither had he. What the Hell was that then?\n\nShe continued to walk, alone, in the torch-lit hallway, waiting for something to come up behind her or grab her and drag her away. It was odd being so expectant without the accompanying nerves.\n\nWhen Elias finally caught up to her, she could no longer see the entrance to the hallway. It was the same in either direction. His hand grabbed her arm and pulled her to a gentle stop; she didn't even flinch. She didn't look up either... unable too, really. She was content just staring at her feet. \n\nHe chuckled a little. \n\nAsshole.\n\nHe chuckled harder. \"Cameron, you can look up... I'm sorry...\"\n\n\"Yeah... sorry. You're laughing.\" Her voice sounded like a little life was coming back to her. She looked up at him. \n\nHe was the same as he had been when she first saw him in President Arinson's. Cameron expected something... something terrifying... but he still looked... human.\n\n\"I'm laughing because I told you to keep your head down and you ended up looking up at the wall, showing everyone my marks on your neck... and then you actually looked at the others in the room.\" He was laughing now. \"You even yelled at Gavin.\"\n\nShe just stared at him. \n\nElias explained. \"I gave you an order after I drank from you... it was a light order, but it was an order... and you went completely against it. That doesn't happen often. It is, in actuality, extremely rare.\"\n\n\"I'm sorry,\" Cameron said, eyeing the hand on her arm then looking at Elias, can we go back to the part where you drank my blood?\"\n\nElias' face suddenly relaxed to a state almost devoid of emotion. \"It's a bit early for you to learn this, but I'm a-\"\n\n\"Vampire?\" Cameron asked flippantly. \"Yeah I got that.\" \n\n\"Close. According to your myths that is what I would be.\" Elias smirked. \"What gave me away... the battle? The drinking?\"\n\n\"Your eyes.\" Cameron didn't know what he was right away but after seeing those engorged pupils... \"Then everything moved so fast... and you... you...\" \n\nElias sighed again. \"Cameron, I apologize for putting you through that before you were informed.\" He brushed his fingers lightly on her still-swollen lip. It burned, still tender from her encounter with the invisible wall. \"Our halls are protected but they are also corrupted to a degree in which the protection spells also rebound the innocent. No virgin can pass through that archway.\"\n\n\"What does it matter? You clearly took care of that problem within a few seconds. PS, you could have asked...\"\n\nElias' grin was crooked. \"Would you have said yes?\"\n\n\"Probably not... an explanation would have been nice though.\" \n\n\"I make no excuses for my kind. You were a virgin trying to pass into a lair. With intent like that, even though you didn't understand, you were subject to a... well, a more brutal resolution. Virgins... well... they have a habit of not leaving the Crossroads in tact.\"\n\nCameron paled. \"What, like sacrificial lambs?\" \n\n\"Virgin blood is... irresistible to my kind. And you were standing at the Crossroads... the heart of the seven lairs here on campus...\"\n\n\"You drank from me.\"\n\nElias suddenly looked sheepish. \"I couldn't help myself... like I said. It's irresistible. And once you are no longer a virgin, the blood is... different. Changed. The loss of innocence...\"\n\nCameron could feel the thrumming in her getting more and more noticeable. It was becoming harder and harder to concentrate on the conversation. \"Is that what all that talk was about? About Gavin bringing me here?\"\n\n\"Virgins are not allowed on campus because of the disturbance they can cause-\"\n\nCameron interrupted him. \"So no one on campus is a virgin?\"\n\n\"Yes and no... but we are already wasting time. Come... I'll explain more later.\" Elias handed Cameron her bag -- she hadn't even realized she'd left it -- and began walking down the hallway. \n\n\"Can they follow us?\"\n\n\"No... the tunnels protect all within their barriers. You're safe here.\"\n\nCameron kept pace at his side, her mind on overload. She was still reeling from the discovery of real vampires, one even walking next to her; her body was still slightly disconnected from her brain, and what she could feel was becoming a problem. Wave after wave of sensation was hitting her, making her very aware of the clothing on her skin and dampness between her legs.\n\nCameron reached out and let her fingers lightly caress each shield as they walked down the hall. Her fingers tingled where they made contact with the wood and metal. Elias slid his hand across her back and urged her to walk faster. She bit her lip, the place where his hand made contact with her shoulder blades tingled. What was wrong with her?\n\n\"It's a side effect of the bite... I needed you to be compliant with what I asked of you so I bit my tongue and mixed my blood with yours... it creates what we call a 'blood urge.' It sets your nerves on fire, which isn't usually a problem since we only feed our blood to... certain people.\"\n\nCameron began to breathe a little harder. \"Do you always answer people's thoughts?\n\nElias chuckled under his breath. \"Only when it's no longer imperative to keep that particular ability secret. You already know what I am.\"\n\n\"So... this blood urge... will it go away?\"\n\n\"Not without release...\"\n\n\"Release?\"\n\nElias smirked but didn't look at her. \"There are only two ways to release the cravings your body is experiencing... one involves a mental ability you do not possess... no offense, but it takes years of practice and meditation to accomplish.\" He paused.\n\n\"And the other?\" Somehow Cameron thought she knew the answer. Even now her... nerves... were starting to make themselves known in other places of her body.\n\n\"Physical release.\" They had reached a set of impressive doors, each with elegant designs etched into the wood. Elias punched in a few numbers at a control pane. \"And you can only be truly sated in the presence of another.\" He opened the doors and gestured for her to walk inside.\n\n\"Do you always tell the truth?\"\n\n\"I'm going to give you some very good advice.\" Elias had no trace of humor on his lips. For a vampire he seemed awfully jovial. \"Never ask one of us a question that could be potentially dangerous. What we are... what we are made of... we fight a daily battle with what you might call inner demons. The darker side of ourselves feeds on lies and other transgressions so we do not do it often. Because we do not lie, we have learned to answer questions in such a way as to be honest but protective of certain secrets. Ask the wrong question and you will get the truth. And the wrong truth, well... that can get you killed.\"\n\nCameron's mouth went dry. \"But... murder... isn't that a sin too?\"\n\nElias smiled. \"We do not have to commit it ourselves.\" He watched her gulp, the movement drawing his eyes to her throat. \n\nCameron thought it was a good time to go through the door. \n\nThe interior was warm and inviting, though small. The room was decorated with rich woods and dark leather sofas. A large painting of a Viking ship at sea was resting on the wall above a mini-bar. \n\n\"So when you said your people were Vikings...\"\n\n\"I spoke of the end of the Viking Age.\" Elias closed the door and began removing his jacket and tie. \"Vikings don't exist. It's a term romantics in the 18th century gave my people. We were explorers... we went on expeditions called 'vikings.' We had no set land like other cultures so they named us according to our lifestyle. Just as pirates live for piracy, we lived for adventure and discovery.\" He stepped closer as she studied the painting. \"But yes... my people were from a time when Norse ships dominated the seas.\"\n\nCameron had stared at the painting while he talked but before Elias was finished she had started to focus more on the sound of his voice... the male flexing and vibration of his vocal chords as each word left his mouth. She was very aware of how close he was; her breaths became shorter and she closed her eyes.\n\nElias had noticed.\n\nShe felt his hands on her shoulders as he slowly turned her to face him. He looked at her eyes and pursed his lips. \n\nHis lips...\n\n\"I never meant to break the rules and put you in this situation. There is a formal procedure to adhere to. Rules to follow. Gavin broke one by bringing you here but I broke two back at the Crossroads. I shouldn't have bitten you... I apologize. It was my own weakness. And I shouldn't have...\"\n\nCameron still couldn't look away from his lips but a thought occurred to her. \"You're a vampire... I should be really...\" she gulped, \"really scared right now but I'm not.\" It sounded like a statement but it was supposed to be a question.\n\n\"It's a... consequence... of the bite; the transfer of fluids sends a certain lethargy through your system... it... makes it harder for victims to scream or run away.\"\n\nCameron bit her lip... wondering what it would really be like to kiss Elias. What was that about running away?\n\nElias kissed her.\n\nTheir tongues met each other tentatively before Elias deepened the kiss, his tongue thrusting into her mouth. He moved closer, his body almost touching hers; he caressed her cheek with his hand before sliding palm down her neck to the based where he had bitten her. Cameron wondered for a fleeting moment if the marks were still here. \n\nElias broke the kiss but didn't pull away. \"In a few short minutes you won't be able to control your urges.\" His stunning green eyes looked directly into hers. \"You will need a release.\" The words were a whisper at her ear, his warm breath sending chills though her body.\n\nCameron slowly, breathlessly, nodded and leaned her head back for another kiss. He obliged.\n\nElias kissed her more fervently this time, dipping her a little as he plundered her mouth. Cameron let her bag fall to the floor and wrapped her arms around his neck. The movement brought them into even closer contact, their bodies pressed together in a tight embrace. \n\nShe felt him working her belt as they kissed and would have panicked if her body allowed her to. She was still relaxed from the bite he'd given her and there seemed to be a strange fog over her brain, ridding her of her inhibitions. She didn't know whether to be grateful or scared that she couldn't have such an extreme reaction to his movements.\n\nWith that thought, Cameron was afraid he would stop kissing her once he heard what she was thinking.\n\nElias chuckled against her lips then kissed her harder, his speed increasing as he finally unbuckled the button and pulled the zipper down. However, instead of pulling the jeans down as well, he slid his hand down her abdomen and under the hem of her panties. Cameron flushed... this was the potential Head of her House that was touching her most private parts. ",
        "Cameron felt Elias slip a finger between her swollen pussy lips, the slick folds parting easily for him. She gasped, breaking this kiss. He had come so close to the bundle of nerves setting her whole body aflame. She pressed her forehead to his, unable to stop the slow rocking movements her hips had begun when he touched her down there... his slim, long fingers deftly stroking her in all the right places. Elias withdrew his finger slowly upward and began to fondle her clit, circling the sensitive bud with his fingers. Cameron whimpered into Elias' lips, their mouths brushing lightly against each other.\n\nElias pressed his lips firmly back to hers and began to press a finger up inside her. Cameron's tight pussy was still a little sore from its recent abuse and she couldn't help but wince. Elias' touch, however, was gentle -- his tender movements began to make her tingle, pleasure mixing with the pain.\n\nCameron soon became ferociously hungry for more. More touching, more kissing... just more. She slipped an arm from around Elias' neck and tentatively reached out to his chest, her fingers trailing down his crisp shirt to find the bulge pressing against his pants. She was inexperienced, having only gone so far as to make out with other boys and this was far sexier than any coupling she'd ever been a part of. Her hand didn't tremble though -- a side effect of the urge? -- as she pressed her palm to his hard shaft and began to rub him through the material.\n\nElias growled his approval into her mouth, his kissing becoming even more feral. The hunger for pleasure he was showing her was a real turn on... no hesitation, just taking. Cameron couldn't believe her ability to draw such a reaction out of him. She wondered what would happen if she did more.\n\nWith that thought, Elias withdrew his finger and inserted a another with it, stretching her tender, tight walls.\n\nCameron was aflame. She couldn't believe how good his fingers felt inside her. He was touching all the right buttons. She began to wonder what it would feel like to have... him... inside her. Again. This time while she could appreciate it.\n\nElias broke the kiss and stared down at her. \"Are you sure?\" he asked. He wasn't even breathless. \n\nShe was panting.\n\nCameron looked up at him. She didn't want her first time to be a quick shattering of her innocence where neither party got anything from it. She knew she should be screaming no, but he had already taken her virginity... she might as well turn the memory into something exciting... and this definitely had her heart going. She also knew she wasn't thinking properly... but to Hell with it... she needed that release he promised.\n\nElias looked down at her, eyes shining with passion and a glint of... hunger? It was a look that sent a thrill through her body. He nodded and kissed her again, gently this time, withdrawing his fingers to lift her and carry her to one of the couches. \n\nElias sat her gently on her feet, and in one swift motion he lifted her shirt over her head. When she emerged from the fabric she took his cue and began unbuttoning his shirt. He pulled it from his pants and worked the bottom buttons.; his fingers moved so swiftly, he had the shirt slipping from his shoulders just as she finished with the second button. He pulled his undershirt off even faster.\n\nCameron took her time with the sight of his bare chest. Elias was well-muscled and lean, his broad shoulders level with her forehead leaving her eye-to-eye with his nipples. She leaned forward and bit one gently before sucking on it. Elias hissed. \n\nCameron froze. Was that a good thing?\n\n\"A very good thing,\" Elias murmured.\n\nCameron released the nipple and said \"I'm not used to someone answering my thoughts\" before moving on to the other.\n\n\"It comes in handy.\"\n\nElias took the opportunity to unhook her bra. Cameron was a little bashful, using his closeness to snuggle against him.. He tweaked hers in response and she let out a broken squeak.\n\nElias chuckled softly and Cameron blushed, crimson pooling beneath the skin of her cheeks. That made him go silent. Why was that? \n\nHe swept a finger across her cheek then kissed her again, his hands going for his belt as his mouth explored hers. She felt his pants drop to her ankles and she couldn't help but look down, curious at what she'd find.\n\nBlack. Boxer. Briefs. A bit modern for a vampire, but then, they seemed to also dress in designer suits so what did she know? The bulge they covered seemed even bigger now that it was more exposed. \n\nA hand at her breast made her remember she was naked from the waste up and under Elias' gaze as well. Cameron leaned into his caress, her breath becoming unsteady. Her body was buzzing with nerves... every touch becoming almost painful. She was so turned on! She thought she could explode any moment. \n\nElias' hand stopped its movement and dropped to her pants. He sat on the couch and brought her jeans AND her panties down to her knees in one skillful tug. Cameron was suddenly completely exposed in front of him, but he didn't stop. Elias began to lift her leg and she followed his lead, letting him pull the jeans free from her legs. She now stood completely nude except for a pair of lime green socks. \n\nCameron closed her eyes, the thrumming inside her becoming louder and harder to ignore. Hands braced on his shoulders, she felt, rather than saw, Elias lean forward, opening her eyes just in time to see his tongue make contact with her puffy lips, his face pressing into the light brown curls covering her mound as his mouth made contact with her swollen sex. \n\nCameron's legs gave out on her.\n\nElias caught her and eased her down to the couch, his hands guiding her legs to straddle his own. As she leaned above him, he swiftly pulled his underwear down, his cock springing free from the confining fabric.\n\nCameron gasped and stared. It was big. She had nothing to judge it on as far as size, but she knew she couldn't possibly fit it inside her.\n\nExcept... it had already been inside her.\n\nShe wished she could remember it... the feeling of the first cock to invade her virgin walls. That moment of exquisite pain every woman experiences before the pleasure starts.\n\nEyeing Elias' hard, erect shaft, Cameron realized the moment wasn't so long ago and her desire could still happen. Hell, it was happening. She bit her lip, wondering how to get that thing inside her. She looked at Elias, his emerald eyes meeting hers.\n\nHe must have heard her thoughts because he wrapped his fingers around her waist and pulled her down, guiding the glistening head of his penis to her core, pushing gently on her tender lips. He was gentle as he eased the tip of his cock within her, stretching her and pausing before pushing more of himself inside her. Despite being wet, the fit was tight, making the invasion go at an agonizingly slow pace. \n\nCameron's body couldn't take it anymore. She relaxed her muscles and let her bodyweight drop her onto Elias' lap, effectively impaling herself on his cock. She exhaled, releasing air she didn't even know she was holding.\n\nElias grunted softly as she engulfed him, his hand caressing down her back as she adjusted to the size of his cock inside her. Cameron felt... full. She also felt the buzz of nerves leave her body and draw up to focus on a single point just above her clit.\n\nDamn... did this feel good!\n\nElias kissed her again, sucking on her lower lip. Cameron began to instinctively rock her hips, her clit rubbing against the curls at the base of Elias' thick shaft, the contact causing her to moan softly with pleasure. \n\nShe broke the kiss this time, pressing her forehead against his as she began to grind her pussy onto Elias' shaft, burying it as deep into her as it would go. Cameron could feel the head of his penis pressing against something deep inside her, making her think she couldn't possibly fit any more within her. HE seemed to fit her perfectly. Elias rocked a little with her, providing some delicious friction as his hand caressed around her shoulder and down her chest to cup one of her breasts.\n\nRelease.\n\nThat's what he had called it. \n\nCameron could feel it coming. She was just on the edge... \n\nShe looked down at Elias to see him staring intently at her face. She blushed. He moaned a little and brought her face down hard, his mouth crushing against hers as if he couldn't get her close enough. His tongue thrust into her mouth and she rode him harder, the intense kiss sending her over the edge.\n\nCameron lost track of everything as her body spasmed with ecstasy. Elias's hands left her head and breast and traveled down her naked flesh to grip her ass. He pressed up into her as he pulled her harder onto his cock, grinding her clit into his hot skin. He also sucked on her sore lip, the tingle of pain making her orgasm even more intense. \n\nHer pussy pulsed with each wave of her orgasm, clamping down on his shaft. Cameron rocked blissfully against him, drunk with pleasure as the beats began to slow to pulses... the thrumming in her blood sending a steady wave of heat to her core. Elias was buried deep within her, and it was amazing.\n\nElias pulled back from her lips when she stilled and Cameron rested her forehead against his again, gasping for breath. He brushed a finger down the side of her face, clearing away the strands of hair sticking to a thin sheen of sweat that had surfaced from the effort her body made to come to this point.\n\nRelease.\n\nYeah.\n\nElias was still hard inside her when the fog clouding her brain began to clear and reality settled into Cameron's mind. What the Hell did she just do?\n\n\"You're free from the urge now.\" He said it softly, still stroking her face. He made no effort to move her.\n\nCameron stared down at him, a little panicked now that she seemed to be coming back to herself. She wondered what had gotten into her. She was sitting astride a vampire for crying out loud. His cock was still buried inside her, hard as a rock and probably ready for more. She was suddenly afraid of what would happen when a vampire was in the throes of love-making... would he bite her again?\n\n\"We're not at that point yet, my dear.\" Elias said with a slight smile, both easing her mind and stressing her a little with that answer. Yet?\n\nElias chuckled softly and shifted under her. The movement sent wonderful tingles through her body. She could remember everything that had just happened clearly -- despite the fog clouding her judgment -- including the best orgasm she'd ever had in her life. \n\nDespite the urge being sated, there was still this wonderful sensation going on where their bodies were connected... a hum that had nothing to do with mind-control and everything to do with good old-fashioned fucking. Boy was she turned on! \n\nCameron leaned down tentatively and paused just before brushing her lips against his. She could smell sex, sweat (probably just hers), and something sweet. She had the sudden desire to begin moving again. \n\nCameron made contact with Elias' lips, a tentative kiss as if she was testing his reaction. It was the first time she kissed him willingly with no mind-control going on. Elias responded immediately, threading a hand through her hair and crushing their lips together. God, were all vamps this good at kissing? \n\nThe fingers of his other hand brushed lightly over her nipple and made her shiver. He tweaked it a little. \n\nPoint taken. Don't kiss other vampires.\n\nNot that she'd want too... she couldn't believe she was kissing one now... a myth...\n\nA friggin' sexy myth.\n\nElias had begun to move inside her, his hip rocking back and forth, gripping her breast and spurring her into motion. Cameron sat up at looked at him... really looked at him. He was gorgeous. She noticed vampires always were... but then, they were usually actors. HE was real. His touch... his furtive lips and plundering tongue... he was something to lose... a person she could see herself easily falling for. Especially if he created sensations within her like this every day.\n\nCameron lifted herself up so that his cock slid partially out of her before sliding it back in. The sensation was amazing... he was truly impaling her on his shaft... just a few minutes ago she had been in an interview and now... \n\nElias ran his hand down her back and she began to truly ride him. With each downward thrust her clit made contact with his bodyand it didn't take long before she felt the beginning of a second orgasm. This time, there was no build up. \n\n\"Oh God...\"\n\nAs the intensity of her oncoming climax began to take hold of her body, Cameron was unexpectedly lifted and spun to lie on her back, Elias on top of her, pressing her into the cushions of the couch. The leather was cold to the touch but she only had a second to register it before the explosion of pleasure washed through her, making nothing more important than the sensations between her legs.\n\nElias began to fuck her in earnest, his cock pounding into her as her pussy spasmed around it.\n\n\"Oh... oh God...\" Cameron wrapped her legs around Elias' waist, her hands braced against his back as he began to thrust roughly into her. \"Elias...\"\n\nElias growled when he heard her say his name and leaned forward, kissing her as Cameron started to come down from her orgasm. His hands were at her waist, holding her in place as he moved within her, and with one last thrust he grunted into her mouth and came hard inside her. \n\nElias rocked gently within her as his hot seed pumped deep within her. Cameron was shocked at first, realizing they hadn't used a condom then wondering if they'd even need one.... She broke the kiss to catch her breath and look up into the startling green eyes that were staring right back at her. Elias held his position above her, breathing a little harder than normal but still not sweating... she was glistening from head to toe.\n\n\"I want you.\" Elias braced himself on one arm and used the other to trace her well-kissed lips. They stung a little, abused and unused to such attention.\n\nCameron blinked. \n\n\"For my House...\" he said after a pause. \"Will you take the scholarship?\"\n\nCameron studied his face again, this time really understanding that she'd just slept with... Oh, God. \n\nElias grinned. \"I know it was good, but I wouldn't call me God yet.\"\n\nMortified and humored at the same time, Cameron stammered, \"I have to... discuss things with my parents... I...\"\n\n\"Don't let this hinder your coming here.\" Elias traced his finger around the edge of her ear, watching her squirm. \"I want you here. The scholarship is yours. You know what I offer... you know what I am...\"\n\n\"You want me to go to a vampire college?\" Cameron blinked then sank back into the cushions of the couch. \"You're not going to turn me... are you? Do we have to be vampires to go here? Is that the catch?\" Her voice rose in panic.\n\nElias chuckled. \"Cameron this is a completely normal college... it just happens to be secret and is run by vampires but you will certainly remain human.\" Elias grinned playfully. \"If you wish it.\"\n\nWith that he sat up, keeping himself inside her. She gasped and clung to his shoulders as he stood with little effort despite her weight being wrapped around his torso. \n\nGrasping her waist, Elias lifted Cameron and sat her down gingerly. She could feel the juices from their love-making run down her legs and blushed, seeing Elias' eyes glued to her sex-swollen pussy. Or was it the cum dripping down her leg?\n\nHer cheeks burned.\n\nElias smiled and ducked his head, kissing one of her rosy cheeks as he walked passed her, grabbing her hand for her to follow him. They both walked naked into a richly decorated bathroom. Convenient, that shower... she began to wonder if this was a common practice with all incoming students. \n\nElias chuckled. \"I promise my real intentions were to interview you... desk and all... This sort of thing is actually against school policy; it shows favoritism before all the interviews are completed.\"\n\n\"Favoritism,\" Cameron said dryly, staring at his well-muscled back.\n\nHe turned the shower on and turned back to her. \"It's not common at all.\" He gestured to the shower. \"I do, however, intend to show absolute favoritism and blow off all the other interviews. Care to join me?\"\n\nCameron smirked and took his hand again, letting him lead her into the stream of hot water.\n\n***\n\n Thanks for reading the fourth chapter of my series! Please take time to vote and let me know what you think. "
    ],
    "authorname": "RedHotLadybug",
    "tags": [
        "first time",
        "fight",
        "18-year-old",
        "virgin",
        "vampire",
        "possession",
        "nonconsent",
        "battle",
        "college",
        "goth"
    ],
    "category": "Erotic Horror",
    "url": "https://www.literotica.com/s/shadow-school-ch-04"
}