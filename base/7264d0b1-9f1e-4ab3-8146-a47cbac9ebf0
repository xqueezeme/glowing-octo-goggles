{
    "title": "Alex and Emma Pt. 20",
    "pages": [
        "===========================\n\nPART 20: A YEAR AND A DAY\n\n===========================\n\nOne Friday evening a year later, after an exceptionally non-productive day at work, I saw a ghost.\n\nIt rocked me to my core. I had moved on...at least emotionally.\n\nEvery time I'd thought of finding another Dom, I'd reminded myself of what I'd had and lost. That I couldn't take the heartache of that happening again.\n\nThe first time I'd gone to the caf\u00e9\u2014our caf\u00e9\u2014after Alex had left, I'd been meeting a client. I'd only acquiesced the location due to her being a student at the college and not having a car. It'd been so embarrassing that I'd had her repeat herself a few times because my mind kept wandering... remembering. I couldn't wait to get out of there.\n\nBut then I found myself returning every Friday after work. Just sitting there nursing a cup of coffee, staring at nothing. Always choosing that back-corner table where we'd sat each time since I'd seduced him after his poetry group.\n\nI don't know what my expectations had been other than repeatedly forcing myself to wallow in misery. Maybe I was just a glutton for punishment because I guess a part of me, deep down, hoped that he'd come back although the rest said I was being irrational. He'd left, for whatever reason. Wishing he hadn't wouldn't change reality.\n\nWhich is why I was so shocked when it actually did happen.\n\nThere was no rationale, but I'd chosen today to be the day to stop torturing myself. I'd psyched myself up and taken a deep breath, pushing away the past as best as I could with my exhale. And then I'd exited through the font door with my head held high and turned right. Only to stumble backwards, thankfully not tripping off the curb and into traffic.\n\nEven though I couldn't hear his gasp when his gaze met mine three feet away on the sidewalk, I could see his blue eyes widen. His jaw drop. How his hands fell from where he'd had them tucked into the front pockets of his jeans. The heavier rise and fall of his chest now under his burgundy shirt.\n\nOthers stepped around us like the ocean current, undeterred by the stationary rocks in its path. We just stared at each other. Breathing but not moving. Remembering. At least I was.\n\nAlex took three steps forward, closing the distance. And then he stared again, though his eyes seemed to roam over my face.\n\nAnd just like I'd only seen him last weekend, all the familiar feelings rushed back in. The racing of my pulse. The quickening of my breaths. The delicious twist down low. Merely by looking at him.\n\nAs I drew a shaky breath, he raised his hands. His palms cupped my cheeks. His warm lips pressed to mine. Lingered.\n\nA desperate whimper passed between us.\n\nBut anger joined the rest of the emotions battling within me. At him. At myself. Because after all this time, he still affected me in ways that no other man had, including Dale. I wanted to kneel at his feet right here on the concrete and apologize to his face for anything I may have said or done to cause his disappearance last spring. To make things right between us, even if we couldn't pick up where we'd left off. Even though he'd been the one to cut and run.\n\nWhen his arms started to wrap around me, I lost it. All those nights lying there in the dark wondering what had gone wrong. They had all spun together in a tight, twisted knot these past months. And now, seeing him...feeling him...it suddenly unraveled, spewing out and consuming me. I let loose on him, pounding my fists into his shoulders, my face wet with hot tears.\n\n\"Why? Why did you do this to me? How dare you come back now!\"\n\nAs was his nature, he did the unexpected. Instead of releasing his hold, he tightened it, trapping my arms between us. Pulling my head to his shoulder, kissing my hair.\n\n\"Shh, Emma. I can explain.\"\n\n\"I don't care! There is nothing you can say\u2014\"\n\n\"Stop it, Little One,\" he whispered in my ear.\n\nI tried to pull away. \"Don't you dare! You bastard!\"\n\n\"Enough! You're going to cause a scene. Look at me.\" His voice was gruff, and his hand gripped my hair at the base of my neck. He didn't continue until I looked up at him, though I was scowling. \"I'm going to let go, but I want you to promise you'll listen to me. Then you can walk away. That's all I ask.\"\n\nI gave him a brief nod.\n\n\"Say it.\"\n\n\"I will listen.\"\n\nHe held my gaze when I didn't add \"Sir,\" as though he was taking on my dare to defy him, and then he did what he'd promised.\n\nThe moment he stepped back, I crossed my arms and raised an eyebrow. I watched how he licked his lips and ran his thumb and forefinger around his mouth a couple of times. How his chest seemed to be heaving more. I would say the same applied to me.\n\nHe looked around then grabbed my hand and practically dragged me a few feet away to a metal bench arranged within the caf\u00e9's minimal landscaping.\n\nI took a seat when he gestured to bench, but I spat, \"Where the hell did you go last year? I came back from my trip and found your apartment was cleaned out! No note, and you didn't answer my messages. Then my final text was returned that your number was out of service.\"\n\nHe sat heavily on the bench, his head dropping into his hands. \"Emma, I was in jail. In Arizona.\"\n\nMy laugh was closer to a cackle. \"You expect me to believe that? How long have you been practicing for this? Preparing your approach\u2014you mannerisms\u2014in the event that you ran into me again? This should be good, Mr. Writer! Pray tell, I want to hear all about your stint in the state penitentiary.\"\n\n\"I only wish it was a story.\" He glanced up at me, the absence of light in his glossy eyes telling me he might actually be serious. \"I did respond to your text that I'd passed all my tests and I missed you, but it kept bouncing back that it couldn't be delivered. And when I tried to call, it wouldn't go through, either. Maybe because you were in Canada. I don't know. But I tried. Then later...well, I'd forgotten to pay my phone bill with finals and graduating distracting me. They must have shut off my service around the time you got the message.\"\n\nThe lump in my throat was getting bigger and bigger. I'd had the same problem with his phone number. I clamped my mouth shut. The more he talked, the more the sense of leeriness faded into guilt.\n\n\"My lease was up right after graduation. And since I would no longer be enrolled as a student, my job through the school was ending, too. I had an offer for something fulltime, but I hadn't told you yet because it was all contingent on getting my degree. A buddy was going to let me shack up with him until I found a new place. I'd already moved some stuff to his garage...the kinky boxes and my headboard and footboard, mostly. I was waiting till you got back to discuss meeting at your place in the meantime. I had it all planned.\"\n\nI knew all about having everything planned. And how it usually ended up. I closed my eyes for a second then let out a heavy sigh.\n\nHe ran his hand back through his hair. \"You remember Dave, the bald guy in my poetry group?\"\n\nI nodded, recollecting seeing him at least two times but never meeting him officially.\n\n\"He was a freshman. Underclassmen aren't allowed to have a vehicle on campus. At our last poetry meeting, he'd asked if we knew any juniors or seniors who would be heading his direction to Bullhead City and could give him a ride home when school let out. I'd told him to get in touch if he couldn't find someone. The week of finals, I got the call. So we packed up my car with everything from his dorm room and headed out that Saturday morning. It was only supposed to be a quick trip over the state line into Arizona and back. About three hours total in driving time. No big deal for me. We were almost there when I got a flat tire. Which meant we had to unload the trunk on the side of the Interstate to get to my spare. To make matters worse, it started to fucking pour.\"\n\nI wanted to reach out and take his hand while he replayed the ordeal. But his bent-over posture with his elbows on his knees told me to leave him alone in his headspace. So I just sat there, feeling helpless.\n\n\"A cop car pulled over when I was putting on the new tire. The officer offered to help so we could get safely on our way.\" Alex sighed again and shook his head slowly. \"I still replay the scene in my mind. One minute, the three of us were repacking the trunk. The next, the bottom of a box I had picked up fell out, dumping the contents along the shoulder of the road. Among the mess of T-shirts were little baggies of what could only be marijuana. Dozens of baggies.\"\n\n\"Oh, God, Alex.\" I could no longer resist and gripped his arm. He was shaking.\n\n\"It's hard to explain what it feels like to be led away in handcuffs with the lights flashing while knowing a drug dog was sniffing out your car. Thankfully, Dave was put in another car because I wanted to kill him. A further search of the other boxes revealed more baggies in a second box. I was arrested on charges of possession since it was my car. Dave was charged as well, but he denied any knowledge of the drugs...claimed I'd hid them in the boxes while helping him pack so I could transport them over state lines to sell. There were at least four ounces. It was a major cluster-fuck. He must have been selling on campus because I'd spent quite a bit of time with him at poetry events and had never seen him look or act stoned.\"\n\nI leaned my head against his shoulder, not sure what to say.\n\nHe kissed my hair and pressed his cheek against my head, his hand taking mine when it fell to his lap. \"I don't have a record, but it doesn't matter in Arizona. Any amount not for medicinal purposes gets you in trouble. I was denied bail and remanded. My phone and laptop were confiscated, apparently to find a non-existent list of contacts for buyers. After the cops ransacked the rest of my apartment and surprisingly didn't find anything, my friend was able to get in and move everything else out to his garage. Thankfully, he knew to keep his mouth shut about the kinky boxes. And then I just waited.\"\n\nOur fingers laced, and we both breathed deeply together.\n\n\"The legal system in this country moves like fucking molasses. I learned to just lay low. Bide my time. God, I thought about you every night and day, Emma.\" He squeezed my hand and brought it up to kiss my knuckles.\n\n\"And I, you,\" I whispered, tilting my head back to look up at him. As much as I'd wanted to refrain from expressing my opinion until he was done, the words were out before I realized I'd said them aloud. \"You got fucked, and not in a good way.\"\n\nAlex smiled at me. \"I held my ground and refused to take a plea deal even though the assigned public defender kept pushing for it. I begged him to try to find you...I even gave him a note for my friend to get a message to you. But my stupid-ass lawyer kept saying you must have moved because the name I'd given him didn't exist in this city and he couldn't find a phone number for you. I honestly think he didn't even try. They only let family come see me, and since I thought my friend was taking care of contacting you, I didn't tell my parents about us. They had enough on their plate with trying to raise money for a better lawyer. They're blue-collar workers who could barely pay for my education. The longer I was locked up, the more I knew the slim possibility of their efforts was slipping away. Then yesterday, my lawyer just showed up and said a guy had recently been arrested near campus at a stash house full of weed. To get a reduced sentence, he'd named his sellers...including one bald, poetic guy named Dave who went to NSC. Dave finally folded under the pressure when he was confronted by the cops again.\n\n\"Suddenly, I'm exonerated and being shipped back here to Henderson sans electronics. My friend said he never heard anything from my lawyer after the one time he was told it was okay to store my stuff from the apartment. I was so fucking pissed. I wanted to go directly to your place, but since we've only ever met at mine...well, that was impossible. I found your website last night, but I was nervous about contacting you by Email or even phone call. What if you just deleted it or hung up on me? I wanted to tell you what had happened in person. You deserved that. And I needed to see you, if only briefly. I just didn't know how to start. Your website doesn't list an address, not even for your office. My friend said he'd try to help me find you tomorrow, but I was getting antsy. On a whim, I decided to come here. I knew there was zero chance... But man, I've never felt more lost. Alone. Not even in that jail cell. I thought maybe just being here would bring some comfort.\"\n\n\"Oh, Alex.\" I dropped my eyes, chastising myself for being so defensive. For wanting to give him the riot act all these months, thinking he'd just decided he didn't want to be with me. But once I'd been able to do it, I'd not felt any better. He'd been dealing with much worse than what had kept me away from him for so long. \"I'm so sorry. I shouldn't have jumped to conclusions.\"\n\nHe tipped my chin up with his knuckles. \"Don't be at all. It's not your fault. Life can be fickle, and we got caught up in it. Who would have thought an act of kindness would have resulted in such a nightmare?\"\n\nMy heart felt crushed all over again even though he was here. My voice was barely a croak when I spoke again. \"I have come here every Friday for some God-blessed reason I didn't understand. There's something about the caf\u00e9. I guess I had hoped. But today I was giving up. I decided\u2014\"\n\n\"Shh.\" He kissed me.\n\nDamnit, I had missed those lips. I wanted more, but he pulled back. It took a moment to catch my breath. \"Can I ask? Did you actually graduate?\"\n\n\"Mmm hmm. I didn't make it to the ceremony, obviously, but I still get my diploma and degree. I have to visit the college next week to make arrangements. All this shit that should have been handled last year and my lawyer...well...\"\n\n\"Congrats. I'm proud of you regardless.\"\n\nHe chuckled softly. \"There's the same old Emma.\"\n\nI managed a small smile. \"Gotta bring up my age, huh?\"\n\nHis lips pressed into a firm line while his hand slid up my jaw. \"How are you? Really?\"\n\nHis question was gruff, his touch so gentle. Both caused my pussy to throb\u2014my knees to quiver\u2014making me glad I was sitting.\n\n\"Better, now,\" I breathed. \"So much better now.\"\n\n\"I can't imagine what you've been thinking all this time, Emma. You must hate me.\"\n\n\"No, I don't.\" It was my turn to cup his cheek. Everything I'd wished I'd said before filled my head. Only one thing, though, mattered at this moment. \"Damnit if I'm wrong to feel this way, but I love you, Alex.\"\n\n\"You're not. I love you, too, Emma,\" he whispered, finally pulling me into his embrace. He kissed me again, more passionately this time, his fingers threading in my hair.\n\nSomeone driving by whistled, and there were multiple feminine giggles before footsteps skittered away.\n\nAlex pulled back slightly. \"Mmm. We should get off the street.\"\n\n\"We can go inside the caf\u00e9,\" I suggested, pointing behind him.\n\nHis eyes searched mine, his tongue licking his lips. \"I was thinking somewhere more...intimate. How far is your place?\"\n\n###\n\nWe were both quiet as I drove to my apartment. Once inside with the door shut and locked\u2014the sound of my keys dropping into the bowl on the entry table still ringing in my ears\u2014I was suddenly nervous. I just stood there, staring at the wall over his shoulder.\n\n\"Probably should have asked this before I kissed you...before I came home with you,\" he said softly, seemingly hesitant. \"But are you seeing anyone?\"\n\nI bit my lip and shook my head.\n\n\"Good. What parts of our time together do you remember most fondly?\"\n\nHis deeper tone drew my eyes to his. My inhale was shaky when I saw how intently he was watching me. \"All of it, really. But I'll be honest, the most meaningful were the quiet times when I was with you while you were working...just being by your side.\"\n\nHis nod was minute. \"I remember those. Just stroking your hair.\"\n\nA shudder rippled up my back at the thought. \"I still have the photo you sent me. The one from your bathroom, showing me your lovely cock. I've looked at it quite a bit over the months. It's not all of you, but it's been enough. Until now.\"\n\nAlex laughed. \"Needy little thing.\"\n\nI grinned fully. \"Me or your cock?\"\n\n\"You, silly.\"\n\n\"As much as I despised your disappearance, I couldn't stop thinking of all the good times we had.\"\n\n\"I was serious when I said I love you.\" He cocked an eyebrow, stepping closer so I had to tilt my head back a little. \"What do you crave most from me? Be honest.\"\n\nI sighed softly, feeling his breath caress my face. Tried not to laugh at the irony that we were finally having the conversation I'd been so afraid to have and it was Alex who had initiated it. \"Your companionship. Both inside and outside of our roles. To do things like a normal couple as well as enjoy our fetishes. To just sit and talk sometimes.\"\n\n\"Mmm. I like the sound of all that. Very doable. A steady, sane girlfriend would be lovely. What else?\"\n\n\"It was so nice to have someone to have fun with. To make him feel good. I'd like that again.\"\n\n\"Mmm. You definitely did.\" He licked his lips. \"And hopefully, I made you feel good, too.\"\n\nI gulped, wanting to close my eyes but also wanting to get lost in his. \"Yes, always.\"\n\n\"I still want to.\" He played with a loose strand of hair beside my ear. \"Ask me, and I gladly will.\"\n\nFor some reason, I backed up. Right into the entry table, making the small lamp there totter and the light shift around the small space before it settled. I reached out and felt my way around the obstruction, finding my back flat against the wall.\n\nHe followed me. \"You just have to ask politely for what you want...or demand it.\"\n\nI moaned, my eyes finally closing briefly as I licked my lips.\n\n\"Mmm. Having thoughts, Emma? My Little One?\"\n\nMy mouth was suddenly so dry, my pussy so wet. And when I opened my eyes, I couldn't stop the words from flowing out. \"Sir, please make me feel good. Make me yours again.\"\n\n\"Mmm. Details, Little One.\" His fingertip trailed a path down my cheek. \"Tell me what you've imagined for the past year.\"\n\nMy breath caught in my throat. Even licking my lips again didn't help now. My words were all breathy when I opened my mouth, and my heart pounded wildly in my chest from just the thought of what I was saying. \"Getting on my knees before you, head on your thigh. Sucking your cock. Having you fuck me. Reminding me I'm yours. You're mine.\"\n\nAnd then I was doing what I'd said. Dropping to my knees, pressing my forehead to his jean-clad thigh.\n\nAlex moaned long and deep. \"Such a good girl. Just in the right spot for me to stroke your hair, smiling down at you.\"\n\nI looked up to see his grin, one hand reaching for my head while the other undid his pants. Another shudder made me grip his leg.\n\n\"You'd better open wide and remind me that I'm yours.\" His fingers slid into my hair after he shoved his jeans and boxers down enough to pull his cock out.\n\nAs though he'd snapped his fingers, my hands went behind my back. I opened my mouth, tongue out, moaning as I kept my eyes on his from down at his feet.\n\nHe slowly stroked himself, waiving his cock in front of my lips, just out of my reach. \"Beg if you truly want it.\"\n\nMy pussy was clenching now, my heart beating faster. I could almost smell how wet I was. \"Please, Sir. Can I suck your cock?\"\n\n\"Mmm. You may. But you'd better impress me. I want myself leaking into your mouth.\"\n\nThere in the soft light of my hallway, down on the floor, I leaned forward to lick just the tip of his cock, closing my eyes and moaning softly. Flicking the tip of my tongue across the slit, I tasted his precum. \"It's been too long, Sir.\"\n\nAlex moaned right along with me. \"Oh, I agree. But we're going to make up for that time tonight.\"",
        "His promise made me whimper. As did his throbbing cock when I pressed my lips against the head.\n\n\"That's a good girl. Keep going.\"\n\nI ran the flat of my tongue across the soft top. Back and forth lightly. Breathing heavily across it each time I exhaled. I watched his back arch away, the movement pushing his hips forward. The head of his cock probed at my lips, silently demanding I open wider.\n\n\"Fuck, honey. You know I need more. I forgot how good you feel.\"\n\nI pulled back out of spite, closing my lips and just barely kissing the soft head between the ring of his foreskin. Wanting to taste more but wanting to tease at the same time.\n\nAlex cursed again and gasped, swaying on his feet. He leaned over me, one hand braced against the wall behind me while the other rested on my hair, absently petting my head.\n\nWhen I looked up at him, the look on his face could only be described as raw need. Clenched jaw, dark eyes, furrowed brow. The expression deepened when I held his cock up against his stomach and tilted my head, trying to keep my eyes on his face.\n\nI kissed and licked down the underside of his shaft, flicking with the tip of my tongue. My nose rubbed against his hardness the closer I got to his groin. And then I licked his balls. The flat of my tongue surrounded them, my lips sucking one and then the other gently into my mouth.\n\n\"Mmm. Oh, fuck! Fuck! Fuck! I remember how this felt!\" He growled, and his hips swayed forward again. \"So good I could lose my mind to it.\"\n\nI smiled and continued the slow process of making love to his cock. Wondering how long he planned to hold out. Though he was giving me freedom on how to suck him right now, that better be the extent of it. If he tried to play with me...to switch... I would have none of that today. He was the Dominant, and I wanted nothing more than to submit to him completely.\n\nAs though he could read my mind, he said through clenched teeth, \"I swear, you're already bringing me close to losing control. Just claiming you. I've needed you for so long, Emma.\"\n\nBy the time he'd finished speaking, his voice was almost a whisper. But I could hear the desperation in his plea. And I decided to grant him a little mercy.\n\nI kissed and licked my way back up one side and then the other of his cock. At the tip, I wrapped my tongue underneath and around his cock, sliding my wet appendage back-and-forth then side-to-side.\n\n\"God Almighty, I'm going to be such a mess!\" The thrusts from his hips grew less controlled. \"I want to be writhing and arching beneath you. Hands fisted in your hair, moaning out your name.\"\n\nI grinned wider and licked around the rim of his crown, still taking my time.\n\n\"Unless you literally tie me down, I'm going to thrust into your mouth.\"\n\nHis breath came in sharp, hitched gasps, further proving he really was on the brink. The resolve I'd known him to have before seemed to have suffered in our time apart. It may take time to rebuild it. For now, it was enough torture. I was losing control myself.\n\nI did my best to hold his wavering gaze and finally wrapped my lips over the pliant crown, sucking gently. Drool bubbled out as I slid him ever so slowly into my mouth, watching his face for his reaction.\n\nHis eyes shot open even wider, his body arching hard and freezing, as though he'd been electrocuted. A long and low groan spilled from his lips, his cock hardening the deeper he moved.\n\nI moaned against him, feeling the combined textures of his cock against the roof of my mouth. The saltiness of his precum like the precursor to taking a shot of tequila. Anticipatory. Knowing the further goodness that was to come.\n\nAlex's arms twitched just a bit, his swaying position pushing his cock toward me. He growled when I backed up, his body shuddering as I moved forward again.\n\nWhen the tip of my nose brushed his groin, I swallowed. The air I breathed now was filled with his scent. The musk of his cock. I felt the blood pumping through the veins in his shaft between my lips...against my tongue. My hands gripped his hips, stroking his skin with my thumbs. Then I took him the rest of the way in and paused.\n\nHis hips thrust slightly, and I dug my fingernails into his skin, holding him to me. Me to him. Not letting him move. He roared, gritting his teeth.\n\nI pulled back until his cock fell out of my mouth with a wet plop. Drool dripped down my chin. At a strangled cry from him, I looked up, startled to see tears in his eyes...on his cheeks. His lower lip captured between his teeth.\n\nI licked my lips and dived back in, moaning at the sound of his continued, anguished cries. Reminding myself of the many nights I'd spent all alone in the darkness of my bedroom, making the same sounds while trying to understand what had happened between us.\n\nWhen I pulled back a second time and looked up, his gaze was clear again. Focused on me.\n\n\"I've missed you, honey.\" A heartbeat later, he grabbed the back of my head and thrust his cock between my parted lips. \"It's time to truly test you.\"\n\nI didn't understand what he meant, but it didn't matter. He was in control again. As it should be. Pumping my mouth up and down his shaft in smooth, full strokes.\n\nNow, I was the one with tears in my eyes from the joy of being with him again. I snuck my hands into his waistband and grasped his ass, moaning against his invasion. Loving how he possessed me.\n\n\"With you, I am nothing more than a moaning mess,\" he gasped, his hips doing a little circle and grind when my fingernails clawed at his taut skin. And then suddenly, he yanked me up to my feet and grasped my waist, lifting me over his shoulder head first.\n\n\"Alex!\" I screamed before my face came within inches of his ass. I licked my lips and tried to reach for him, but his arm tightened around me, adjusting me so my waist was pressed to the front of his shoulder instead of the back. Then we were bounding down the hall, his jeans and boxer briefs discarded on the hallway runner.\n\nIn the living room, he paused, turning right then left, swinging me with him, making me grunt. Then I was set right-side up on my feet where he proceeded to undress me. Looking over my naked body while he finished stripping himself. But it was short-lived because he plopped down onto the edge of the oversized lounge chair and yanked me down onto his lap.\n\nI cried out at the feeling of his cock resting against my stomach between us. \"Please, Sir\u2014\"\n\nAny more words were silenced when his mouth covered mine, his hands burying in my hair, holding me to him just like he said he wanted to. I gripped his arms, his shoulders. Crying while he plundered me with his tongue and his warm, wet lips.\n\nHe gave me a short respite, his eyes searching mine, his breaths heavy and somewhat shaky. \"I am going to kiss you like I've loved you all the year you've been gone. I'm going to\u2014\"\n\n\"Fuck me,\" I pleaded, whimpering as his cock twitched for what seemed like the thousandth time over my skin.\n\nWithout another word, his hands moved down to my hips, lifted me, and dropped me down on him, sheathing himself completely inside of me in one thrust.\n\nI screamed at the feeling of being impaled so suddenly. So fully. The way he claimed me... I had missed it so much.\n\n\"Shh.\" He smashed his mouth over mine, continuing the assault, moaning into my mouth. He pulled my body tight against his, his hands everywhere on my sides and backside. Stroking. Mauling. As though desperate to remember what he'd lost but unable to touch everything all at once.\n\nAll I could do was wrap my arms around his neck and hold on while he thrust wildly up into me. My breasts were smashed to his chest, aching for his touch. Jealous of the rest of me that got to feel him.\n\nJust as suddenly as he'd started this, he stopped and fell back against the chair. His gaze locked with mine through the curtain of damp hair that had fallen over my eyes. We both licked our lips, trying to catch our breath. Then he whispered, \"Ride me like you're claiming me.\"\n\nI readjusted my knees to a more comfortable position that still allowed me to straddle his waist. And then I rose up, though I kept the tip of him inside me. I was now a head taller than him, looking down into his eyes when he rested his head against the back of the chair.\n\nNot breaking the connection above or below, I began a slow descent on his cock. When I was fully seated on his lap again, I reversed at the same pace, my body shuddering while his cock was unsheathed through my pussy. Then I began a faster rhythm. Up and down, luxuriating in the push and pull sensations he created between my slick walls. Reminding me how fucking good he felt.\n\nEach motion caused my breasts to rub against his chest now...bump his chin. I flung my head back, moaning loudly when his hands caressed the back of my shoulders and held me there in an arched position, our sounds shaky each time our hips joined.\n\n\"Oh, God...Sir...You fuck me so well.\" I licked my lips, wanting to tell him to lick my breasts, but my voice failed due to his harder thrusts from below.\n\nHe hummed and slid his hands down, wrapping his arms tightly around my waist. \"Oh, it's all you, my girl. Ride me like you love me. Like you've needed me for a year.\"\n\nI obeyed because it was true, wrapping my arms around his neck tighter, holding his head to mine as our lips claimed each other's. Letting out soft mewls each time his cock stabbed deep inside of me. But the itch was still out of reach. I changed tactics, rocking back and forth so his groin rubbed against my clit.\n\nHe moaned in time with my sounds, pressing the hard panels of his stomach against me. Sucking on my tongue when I buried my fingers in his hair at the back of his neck and tugged gently.\n\nThe instant he bumped my G-spot, I arched away from him, clawing at his scalp. \"There!\"\n\nHe didn't give me much of a chance to breathe as he mumbled he was trying to get me off as much as he possibly could then pulled me back under with his kisses. Whether it was to heighten his own arousal or mine, he gripped the top of my shoulders from behind and pulled forward, pinning me against his chest. The motion not only prevented me from escaping his embrace but also raised my hips slightly, allowing him room to thrust his hips up just enough to strike in all of the right places.\n\nI shuddered, failing miserably to breathe normally. It felt like his whole body was urging me to come for him. And my body was screaming in response. I was so hot...I needed him so badly.\n\nHe cursed loudly as my muscles spasmed around his hard cock.\n\nI just held on tightly, crying and groaning. Trying to feel everything all at once while reaching for that precipice he'd led me to.\n\nAlex pulled his lips from mine and kissed my neck. His voice caressed my ear as he whispered, \"It's okay to let go. You can come now. Come around me. Drench my cock, honey.\"\n\n\"Oh, God...mmm...Sir...please...\"\n\n\"Mmm. Please what?\"\n\n\"I'm so close, Sir.\" I didn't know how I managed to form words, my head was so hazy.\n\n\"Mmm. Beg for what you want.\"\n\n\"Please...play with my breasts...\" I rocked harder. Just a little more...that's all I needed. \"I want to feel your hands everywhere. Your mouth everywhere.\"\n\nAlex ground out a loud moan and then thrust up hard into me, growling, \"Oh, God!\"\n\nAnd then his hands were everywhere, just as I'd asked. Teasing and pulling on my nipples. Pinching them. Working them over.\n\nI struggled to rise up when rocking didn't help. His cock slid almost all of the way out. Then I slammed my hips down hard. Still, it wasn't enough. My cheeks were so hot\u2014my lip sore from biting it in my frustration. \"Oh, God...please, Sir...spank me.\"\n\nHe acquiesced, a hand smacking down on my ass, making me scream. Again and again until I lost count. And through it all, he kissed me roughly, like he owned me.\n\nEvery little touch was overwhelming me with sensation. I tried to arch away from him though I tethered myself with an arm around his neck. In my head, I told myself to give him all of me. To surrender my will to his. Submitting to my Dominant.\n\nAll I could feel was him fucking me...holding me...pulling me back to him and kissing me.\n\nI squeezed my knees, trying to grip his hips, but my whole body was shaking so hard, I couldn't retain a steady hold. My heart beat wildly against my chest, competing with my lungs that tried to draw in breath faster and faster. \"Come...inside me, Sir. Claim me completely. I am yours. Your Little One.\"\n\nOne of his hands covered my breast, my nipple painfully tight against his palm as he caressed.\n\nI whimpered, my breasts aching still from the loss of his touch for so long. And then I spasmed around his cock, milking it. Crying out just as he let out a loud curse.\n\n\"That's right, honey,\" he panted. \"Come around me. Come hard for your owner, just like you've needed to for so long. But I'm not coming yet. I'm not through with you.\"\n\n\"Fuck! Mmm!\"\n\n\"That's right, Little One. Come for your Sir.\"\n\nI buried my head in the crook of his neck, crying softly, my body still writhing in his arms while he continued to thrust up into me. My hips rocked back and forth on their own...feeling every hard inch of him as my orgasm continued to ripple through me.\n\n\"Mmm. Good girl,\" he whispered in my ear before he trailed kisses along my neck, making me shudder more. \"You have a choice.\"\n\nI would do anything he asked I was so desperate to please him.\n\n\"Either you can turn the tables and show me how much you've missed me,\" his voice filled my head, making me whimper, \"or I'll bend you over this couch and make you mine by filling you to the brim.\"\n\nThe growl that crept up my throat was primal. My fingers threaded in his hair, holding his head against my neck...shivering as his tongue and teeth returned to branding my skin. \"Please, Sir...bend me over the couch. Take me. Break me.\"\n\nAlex matched my growl. \"Oh, I will. I promise you.\"\n\n\"Tonight, I need to be yours.\"\n\n\"And you will, Little One. You will.\"\n\nHe yanked my hair back suddenly so that I was looking at him. His eyes reflected the wildness I felt in myself; had been harboring for too long. Then he was rising with me still in his lap. Disconnecting us only when we reached the couch and he bent me over the back.\n\n\"Tell me, Little One, what is allowed? How do you need to be broken?\"\n\nI licked my lips, glaring at him over my shoulder. \"Spank my ass, Sir. Claim my ass. You are the only one who has ever had it completely.\"\n\n\"Mmm. You naughty thing. And I'm keeping it that way.\" He grunted out the last words then firmly grabbed my hips, pulling the object of discussion into position.\n\nMy body continued to shake. With my breasts squashed against the couch, I locked my knees. Just in time because he brought his hand down hard on each cheek five times. I counted out the swats. Hissing between each one, my rear end already stinging from his previous smacks.\n\nHe smeared my cum on my sphincter. And then he slowly pushed the head of his cock into my ass, his fingers reaching around to rub my clit while he filled me.\n\nI was a blubbering mess. My ass clenched and released. Resisting for only a moment. Then, like it was yesterday, I remembered the cock that stole my virginity there. The only cock that belonged there. My asshole relaxed, and the uncomfortableness changed to tingling pleasure.\n\nHe hummed while he held himself still and teased me from the front. Then he whispered, \"You own me every bit as I own you.\"\n\nPressing his cock in deeper, he started a rhythm. The fingers on his other hand clamped down on my nipples while he pounded into me. Utterly dominating me. Above, his mouth sucked hard at the back of my neck in several places. I knew he was leaving hickeys, marking his territory.\n\n\"I'm yours. All of me.\" I mumbled for him to come inside of me, but it could have been in my head. I felt another orgasm building...tried to thrust back, but my knees buckled.\n\nAlex moaned behind me. His fingers wrapped around my waist, yanking my hips back, helping me thrust into him. Then he bit my neck. \"I am determined to make you mine. To make you come as many times as I can before I do. All while I get lost in your velvet heaven.\"\n\nEvery nerve ending felt like it was on fire. Pleasure coursed through my veins. I couldn't remember it ever feeling this good before. \"Oh, God, yes! Mark me...\"\n\nHe nuzzled the spot his teeth had indented. \"Tell me how else you want to be marked, Little One.\"\n\nI squeezed my eyes shut, feeling his hands slide all over me. As though he was remembering this body that was his. Trying to recall all of my sensitive spots. My coos and shivers seeming to direct him, making him linger or move on.\n\nHe moaned and chuckled at my responses. Then he nuzzled more, licking the spot behind my ear. Making me quiver. All the while, his cock throbbed in my ass. Moved in and out, though in slower, shallower thrusts.\n\n\"Tell me your most intense fantasy around it,\" Alex continued, his breath hot as it drifted over my skin. \"How you want to be shown you belong to me.\"\n\nI could only whimper. Afraid of revealing the truth, though I wanted to.\n\n\"Mmm. Do it, Little One. Admit it. Your kinkiest marking fantasy.\"\n\nIt was only when he started to draw back, both above and below, that I caved.\n\n\"I want you to pick a tattoo...an image, a phrase, whatever. Pick a spot on me that only the two of us know about. Mark me permanently. A reminder that I'm not only yours, I've been branded. As your play thing, but also your treasure.\"\n\nHis lips caressed the sting that lingered from his bite. \"Mmm. You are that. You're my precious plaything. I'll do what you ask.\"\n\nI moaned under his touch while his hands took hold of my hips again. So firm but also so gentle. After a couple of longer thrusts, he lifted me up so I was standing, one of his arms under my breasts holding me against his chest. He stroked his other fingers across my mound.\n\n\"Here. The top of your pussy.\"\n\nI let out a mewl. His continued motions inside me had me gripping at the top of the couch back. Maddening, was the word to describe what he was making me feel.\n\n\"Delicate script,\" he continued softly. Pensively. \"It will say, 'Owned & Loved.' Just the two words and that character.\"\n\nI nodded, trying not to think of a tattoo needle on that sensitive area but knowing that I would always be able to look down and see it. Appreciate it.\n\nA moment later, his thrusts ceased entirely and he pulled out. I sighed at his tenderness. Then he gathered me up into his arms and followed my directions to find the bedroom.\n\nIn the dull glow of my nightstand lamp, he laid me down and spread my legs, resting his head on my thigh. \"Talk to me more, Little One. Tell me what you've imagined for a year.\"\n\nI let out a ragged breath just before his tongue swept through my folds and wrapped around my clit, sucking gently. I moaned and gasped, writhing. So sensitive but needing his touch...loving his touch.\n\nAlex breathed again on my clit, his fingers curling inside me, stroking at my innermost core. \"I want to find that spot that makes you shiver and melt for me.\"\n\nHe found it a few seconds later, drawing babbling nonsense out of me. I was still twisting on the bed when he replaced his fingers with his cock in my pussy. Slowly thrusting to the base, he withdrew completely and then repeated. He growled when I squeezed and released around him. Then he dug in harder...deeper.\n\nA constant gurgling sound was all I could express now. My fingers fisted in the bedsheets, my eyes rolling back.\n\n\"That's right, Little One. Remember how I feel?\" He stroked my cheek then toyed with my nipple, his fingers fluttering down my side and over my hip. \"Come for me again. Come around me, honey.\"\n\nSomething shattered within me on his next thrust. He kept moving, but I went rigid, my scream caught in my throat. Sparks lit up behind my closed eyelids as ecstasy spread throughout my limbs. I continued to feel him\u2014hear him\u2014but it all seemed a muddled mess in my head. Everything he said or did merely prolonged the feelings within me. Prevented me from crashing down.",
        "I rode the wave, still unable to cry out. It went on and on, dragging me with it. I didn't care if it stopped...if I ever breathed again. It was too much pleasure but also not enough.\n\n###\n\nIt seemed like hours before I realized I was on my side, my legs curled up to my chest. I was no longer shaking. Struggling to inhale. I felt slightly achy all over. Exhausted but content.\n\nThe soft sound of even breathing came from behind me. Brushed against my shoulder. No, that was lips. Alex's lips. Kissing me so lightly I was afraid to exhale because he might disappear. Then I'd believe I really had been dreaming all along.\n\nWhen a hand caressed my hair, I let go and moaned, shuddering. Then a body pressed up behind me before my comforter covered us. I sunk into the warm embrace of my lover. My owner. My friend.\n\nFor the longest time, he just held me. Occasionally kissing whatever he could reach. His fingers sought and found my hand, turning it over. Palm to palm, his fingers laced with mine.\n\nI let out a shaky sigh and squeezed his fingers before I shifted partially onto my back so I could see his face. \"So what are you planning to do now that you're back?\"\n\n\"I have a meeting Monday morning with my old boss to discuss the same job I was supposed to take last year. Before I decided to go to the caf\u00e9, I'd looked at a couple of apartments.\"\n\nWhat were the odds that the day I'd decided to stop waiting was the day he'd been able to start looking? A shudder passed through me when I tucked our fisted hands under my chin.\n\nHe scrubbed his free hand across his face. \"How the hell can you afford to live in the city?\"\n\n\"Stop looking. You'll stay here.\" It was an impulsive decision, but one I knew I wouldn't regret. I pressed my thumb to his lips when he opened his mouth. I knew he would object. I waited until he looked me in the eyes again. I wanted him to know I was serious. \"I want you here with me. Where you belong.\"\n\nI suddenly thought of the small brown box on the top shelf of my closet. The unopened gifts I'd bought him in Canada. I could still picture the two collars. One, a thick, silver chain-like design slightly larger than a choker that closed with a small black padlock and key, one side of the lock embossed with the letter M for \"Mistress.\" The necklace could easily be hidden beneath a dress-shirt collar or worn out for casual use. The other was a wide, black leather collar that also had a padlock to secure the back, a D-ring in the front for a leash, and the word \"owned\" in rhinestones attached to the front as well. To hear that he wanted to tattoo that same word above my pussy continued to send shivers down my back.\n\nMy thought was that he'd wear the chain necklace whenever we weren't together. If I was so inclined to switch with him, I would unlock it and change them out. I wondered how he would take to the new collars if I presented them to him. Did he even still want me to dominate him?\n\nHe blinked slowly, his lips trembling beneath the pad of my thumb. His breath tickled when he finally whispered two words...ones that also answered my internal question. \"Yes, Mistress.\"\n\nMy breath hitched, and I intended to tell him he was a good boy. But he claimed my mouth again. Then I was moaning as he rolled me fully onto my back and slid into my wet heat.\n\nFloating on a new wave of pleasure, I knew this was where I belonged, as well.\n\nTHE END\n\n~ H"
    ],
    "authorname": "secretsxywriter",
    "tags": [
        "dominance",
        "submission",
        "bdsm",
        "anal sex",
        "blowjob",
        "collaring"
    ],
    "category": "BDSM",
    "url": "https://www.literotica.com/s/alex-and-emma-pt-20"
}