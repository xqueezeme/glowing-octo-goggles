{
    "title": "Three Square Meals Ch. 090",
    "pages": [
        "Ailanthia stretched like a cat on the soft black sheets, letting out a deeply contented sigh. She felt the wonderful heavy weight at her waist and one of her light-green hands slid down over her gloriously curved abdomen. She bit her flushed lower lip and let out a low moan, her skin feeling so sensitive where it had stretched taut to accommodate her cum-stuffed womb. \n\nShe let out a quiet, disbelieving laugh, awed by memories of the heated coupling with her Master this morning. He'd been absolutely magnificent and looked so heartbreakingly handsome... Ailanthia had gazed at him in wonder as he'd taken her, wrapping herself around this interstellar titan and sobbing with ecstasy as he pumped his seed deep inside her. \n\nFor Ailanthia, who'd seen the passing of so many long lonely years, her master's relationship with her had radically changed in what seemed like the blink of an eye. For millennia, he'd been dispassionate and aloof... utterly disinterested in her sexually for anything other than a perfunctory feeding. After all, it had been vitally important that she remain aesthetically pleasing for him. But in a matter of mere months, something had profoundly shifted in his bearing, and Ailanthia's heart sang with joy at the change.\n\nRolling carefully to one side, she ran her hand over the side of the bed he'd laid in, feeling the fading warmth and wishing he was still there. She inhaled deeply, a shiver running down her spine as she caught a hint of his scent. Closing her eyes, she relaxed in a state of bliss, happier than she ever thought possible.\n\nA gentle touch to her swollen belly roused her from her doze and she gazed up at her master in surprise. He was looking down at her with an ambivalent expression on his face as he sat on the side of the bed, some unreadable emotion in his eyes that Ailanthia didn't recognise. Realising that she was awake, he slowly withdrew his hand and studied her for a moment, the vaguest hint of a smile on his lips.\n\nAbruptly he rose to his feet and strode towards the door of the darkened room. He paused before leaving, turning back to look at her, his stunning bronzed features lit by the blood-red glow from the corridor beyond. \"Come, Ailanthia, prepare yourself for the day ahead. The entertainment should begin shortly.\"\n\n\"Yes, My Lord,\" she replied obediently, sitting up in bed. \"I will be with you momentarily.\"\n\nHis eyes had a wicked gleam of anticipation to them as he lifted the black cowl over his head and strode away.\n\n***\n\nDana's features were bathed in the flickering blue light from Irillith's rapid shots, shadows dancing on the grey titanium wall behind her.\n\n\"The idea just kind of clicked,\" Dana said quietly, unsettled by the look of shock on John and Alyssa's faces. She glanced to her right at the long laser weapon in Irillith's arms. \"The Pulse Cannons suddenly seemed wrong... like they were too big and cumbersome, so I refined the design to make a portable version. I didn't have time to make another Progenitor power core, so I stripped one out of a Quantum rifle, then built the cannon's frame with Alyssa's help, added the new heatsinks, anti-grav suspensors, improved focusing aperture, and all the rest...\"\n\nIrillith ceased firing and turned to look at her audience, a broad grin on her face until she saw everyone's stunned reaction to the weapon test. \"What's the matter?\" she asked, looking at each of them with concern.\n\n\"I've seen a gun like that before,\" Tashana whispered, her violet eyes wide as saucers as she stared at her sister. \"You look just like the pictures...\"\n\nJohn turned to look at the Maliri girl, finally shaking off his shock. \"You've seen murals of Thralls using these kinds of weapons?\"\n\n\"Yes, in the temple where I found Valada's server. I've got copies in my research notes...\" she murmured, transfixed by the long-barrelled weapon. \"It's so distinctive, I recognised it instantly.\"\n\n\"We haven't got time now, but we really need to review all your research again,\" John said, staring at the Pulse Cannon and feeling that same nagging sense of satisfaction.\n\nIrillith's angular eyes narrowed as she looked at John and Alyssa. \"I understand why Tashana's reacting like this, but what's the matter with you two? Did I do something wrong?\"\n\nJohn shook his head, stepping forward to put a comforting hand on her shoulder. \"Of course not, honey. You just... took us by surprise, that's all.\"\n\nAlyssa nodded and said quietly, \"We each felt the same thing when we saw you; a Maliri woman in that type of armour, carrying a weapon like that. It... resonated for both of us.\" \n\nIrillith glanced down at her gear. \"So you're saying I look just like a Progenitor's Thrall?\"\n\n\"Yes, basically,\" John said, with no small amount of trepidation.\n\nShe suddenly gave him a spectacular smile. \"That's fantastic!\"\n\nHe blinked at her in surprise, startled by her unexpected reaction. \"Excuse me?\"\n\nIrillith put down the long weapon, then cupped his face in her hands. \"Don't you see? This means we're closing the tech gap! You're a Progenitor... there's no hiding from that fact. We should embrace the opportunities every newly discovered piece of technology gives us!\"\n\nDana grinned at the Maliri girl, delighted by her positive outlook. \"Fuck yeah we should!\" She turned to clap John on the shoulder. \"Irillith's totally right, you shouldn't be freaking out, this is great! We've just got a new bit of awesome Progenitor tech right out of the blue!\"\n\nNodding eagerly, Irillith said, \"We know so little about Progenitors or the way their Thralls fight. This is a perfect opportunity to learn more!\"\n\nWalking over to join them, Alyssa slipped her arm around John's waist. \"They make good points. We both knew we'd be reaching this point eventually.\"\n\n\"Know yourself and know your enemies, you'll be undefeated in a hundred battles...\" John murmured, his expression brightening, suddenly seeing a whole new meaning to that ancient wisdom. He gave Irillith a grateful smile. \"Thank you.\"\n\nIrillith took off her Paragon helmet and shook out her snowy-white tresses before giving him a tender kiss. \"You're always trying so hard to make me happy, it feels wonderful being able to return the favour!\"\n\nThey hugged for a moment and John turned to look at Alyssa. \"Can you call all the girls up to the bedroom please. I want to talk to everyone about something important.\"\n\nHer expression softened and she nodded, gently rubbing his back. \n\nJohn glanced at the Pulse Cannon on the shooting bench. \"It looks like you've excelled yourself again, Sparks. You couldn't have picked a better time to suddenly come up with that.\"\n\n\"Girl with the gear does it again!\" the redhead exclaimed, raising her hand for a high five. \n\nHe didn't leave her hanging and grinned as their hands slapped together. Turning to Irillith he said, \"You better take that beast to the weapon racks in the Combat Bridge. I've a feeling it'll come in handy.\"\n\nIrillith replaced her helmet and picked up the Pulse Cannon. \"Your wish is my command, My Lord,\" she said respectfully, before winking at him and leaving the firing range with a broad grin on her face.\n\nJohn felt a surge of tremendous satisfaction at her behaviour, and darted a worried glance at Irillith as she left the room.\n\nTashana noticed the anxious way he was watching her sister and she walked over to John, wrapping her arms around him in a reassuring hug. \"It's okay, Irillith was only joking. Don't look so worried,\" she whispered in his ear. \n\nWhen she pulled back to look at his face, he shook his head and met her caring violet-eyed gaze. \"I know she was only teasing, but seeing her playing the obedient Thrall really struck a chord in me. That's what I'm worried about.\"\n\nShe looked thoughtful for a moment, then asked seriously, \"Have you started having thoughts about galactic conquest?\"\n\nJohn shook his head and frowned. \"No, of course not!\"\n\n\"Any plans to turn your girls into unquestioning slaves?\" she asked, studying his face.\n\n\"I'd never do that!\" he protested vehemently.\n\n\"Then you have nothing to worry about.\" Tashana gave him a gentle smile, pressing herself against him and leaning in for a loving kiss.\n\nDana walked past John and swatted him playfully on the rump. \"Let me know if you change your mind... I'll be your obedient slave any time you like!\"\n\n\"I guess you're covered either way,\" Alyssa said to John with a laugh, then held out her hand for him. \"Let's go. The girls are waiting for us.\"\n\nJohn let her lead him from the Firing Range, then followed after the redhead as she skipped towards the grav-tube, darting flirtatious looks at him over her shoulder. He was still concerned about the way he'd reacted to Irillith looking and behaving like a Thrall, but the sight of Dana's dazzling blue eyes proved to be a very effective distraction. They floated up in the grav-tube, then stepped out onto Deck Two, the sound of conversation drifting towards them from the main bedroom at the end of the corridor.\n\nThe rest of the girls were waiting there, gathered in the large open space at the foot of the bed. Their light-hearted chatter died out as John entered the room, with everyone turning to greet him with a welcoming smile. Irillith joined them moments later, taking her place in the semi-circle that formed fluidly around him. \n\nHe looked around the group and took a deep breath. \"Before we start gearing ourselves up for battle, I just wanted to say a few words.\"\n\nRachel raised her hand and said politely, \"May I ask you a quick question, please?\"\n\nSurprised by her interruption, he nodded, gesturing for her to proceed with an open hand. \"Of course, honey. Go ahead.\"\n\nHer grey eyes were enigmatic as she studied him. \"Alyssa told us what happened in the Firing Range. You were just about to reassure all of us that you'll never treat us like mindless thralls, weren't you?\"\n\nStartled by her insightful derailing of his speech, he could only nod to confirm her guess.\n\nRachel glided over to him, smoothly embracing him in her arms. \"We already knew that. We'd have to be very silly little girls not to know how you feel about us by now. But you like intelligent women, don't you? That's why we're not just mindless Thralls.\" \n\nJohn frowned and said, \"Yes, but-.\" \n\nShe silenced his objection with a kiss. \"I know you're doubting yourself at the moment,\" she whispered softly. \"Questioning the decisions you've made and worrying that you're exposing us to too much danger...\"\n\nJohn darted an accusatory glance at Alyssa and she met his hurt gaze with a look of artful innocence.\n\nRachel gently turned his face around to look at her again. \"It sounds to me like you're the one who needs a little reassurance. All of us have every confidence in your leadership.\"\n\nThere were soft murmurs of agreement from the girls as they gathered closer.\n\nStroking his cheek, the tawny-haired girl gave him an affectionate smile. \"As you told me not too long ago, there's no point in being modest about just how intelligent we girls have become. You helped nurture that intellect and I think it's fair to say that we're more gifted than you in our respective fields... no?\"\n\nHe couldn't help laughing and nodded his agreement. \"Of course. I'd be a fool to argue otherwise.\"\n\n\"Now, all of us are convinced that you're making the best leadership decisions you can and always putting our best interests first. To argue against the consensus formed by so many exceptionally gifted minds would be foolish too, correct?\" she asked, while raising an eyebrow.\n\nJohn frowned and tried to come up with some kind of objection. In the end, he smiled at her. \"Alright, you make a good point.\"\n\n\"You're an excellent leader, you have no reason to doubt yourself,\" she said sincerely. \"As much as I love these girls, I know none of us could inspire and motivate the group to greatness in the way you can. You're a natural at this, you should share the same confidence in your own decisions that we all place in you.\"\n\nHe darted a startled look at the rest of the girls, but saw nothing but wholehearted agreement in their eyes. It was strangely reassuring and he was surprised to find that he did feel much better. Focusing on Rachel again he smiled at her in gratitude. \"Thank you. You were right, I did need to hear that... It helped.\"\n\n\"I'm delighted to hear it,\" she said, a look of satisfaction on her beautiful face. Her luscious lips twisted into a coy smile. \"I'm afraid there's a price to pay for my counsellor services though...\"\n\n\"Oh, really?\" John asked, placing his hands on the soft curve of her hips. \"What might that be?\"\n\n\"My rates for a pep talk are quite reasonable,\" she murmured, unbuttoning her blouse and revealing a tantalising glimpse of her cleavage. \"But the rest of the girls helped, so you'll need to recompense them too...\"\n\nThe girls managed to undress startlingly quickly, then removed his clothes at an equally rapid pace. They guided him to sit on the end of the bed, then knelt at his feet, looking up at him with eager anticipation. Their beautiful faces were temporarily blocked from view as Rachel deftly straddled him, moving with fluid grace as she positioned herself above his painfully hard cock. She let out a blissful sigh as she sank down on his throbbing shaft and as soon as he was fully-sheathed inside her, she leaned against his chest, slipping her arms around him. \n\nRachel's supple young body fit him like a glove, gently squeezing his entire length in a welcoming embrace. John's hands roamed over her athletic, nubile flesh, feeling the strong muscles rippling in her thighs and toned back as she began to move at an unhurried pace. He traced his fingers along her arms, admiring the flawless perfection of her bronzed skin, so soft and smooth under his inquisitive fingertips. She watched him as he explored her body, a gentle smile on her face as she saw his open appreciation for her spectacular physique.\n\nGiving him a loving kiss, Rachel writhed sensually in his lap. \"You're a thoughtful and generous lover, but this time isn't about giving me pleasure,\" she whispered as she gazed into his eyes. \"Just embrace the connection between us. Feel how much I trust you...\"\n\nJohn did as she asked, meeting her focused attention and taking in every detail of her stormy grey eyes. He was reminded of the expression 'the eyes are the window to the soul' and as Rachel's loving gaze softened, her grey eyes began to glow with a gentle nimbus of light. They shared that moment of intimacy for what felt like a glorious eternity, until she gave him a rueful smile and eased off his length. \n\nHe felt a sharp pang of profound loss as she broke their gaze, but she was immediately replaced by Alyssa, her cerulean orbs starting to glow before he had even entered her. Alyssa moved at a languid pace, the hooded look she gave him filled with passion as they communicated their feelings for one another by eye-contact alone. When she eventually dismounted him, John felt a sudden eagerness to share that same connection with the rest of the girls.\n\nDana was next, the flaring coronas around her pupils bathing him in a golden glow. Then Calara, Sakura, the twins, and finally Jade, who slowly sank down on his shaft, her pussy rippling along his length as she guided him deep inside her womb. They gazed at each other, and John watched her pupils slowly expand, changing from vertical slits to perfectly round circles that drew him in as inexorably as a pair of black holes.\n\nHer cat-like eyes began to shine with an emerald light and she sighed in ecstasy as she lost herself in his gaze. \"I love you so much,\" she breathed, brushing his lips with delicate, fluttering kisses.\n\nJohn knew this wasn't entirely in the spirit of the wonderful game Rachel had initiated, but he was too shocked by the emerald glow from the Nymph's eyes to say otherwise. \"I love you too,\" he said, cupping her head in his hands and kissing her passionately.\n\nJade moaned into his mouth, her cool skin growing much warmer as she reacted instinctively to him. He could feel the absolute devotion she felt towards him; not as a Nymph slave to her master, but as a free-willed woman completely in love with her man. He embraced that connection, throwing his mind open to Jade as he reciprocated, revealing how he loved her with every fibre of his being. \n\nShe let out a soft groan and her body burst into light, glowing pulses rippling down from her head to spread out across her body. Her back rippled and a flurry of undulating tentacles swept outwards, approaching the other girls. The phallic tips gently caressed their faces and John groaned at the sudden contact, feeling Jade encircle their lips without pressing forward, as if waiting for permission.\n\nThe girls wasted no time in engulfing the tips in their mouths, causing a flood of intense sensory data to overwhelm him. John had been expecting the glorious feeling of seven warm wet mouths eagerly enveloping his cock, but this was something else entirely. John felt the individual connections with the girls surge into life again, reliving the intimate moments he'd just shared with each of them, but this time gathered together in a glorious flood of sensation. He felt his mind lifted higher on the crest of that spectacular wave, vaguely aware that he was joining Jade in a rapturous climax.\n\nHe collapsed back on the bed, Jade falling with him, a look of absolute astonishment on her beautiful face. Breaking their eye contact, she threw her head back, mouth open in a silent scream of ecstasy.\n\nJohn rushed headlong into oblivion, the exquisite sensory overload too much for him to take...\n\n***\n\n\"He's alright!\" Alyssa gasped, followed by a chorus of relieved sighs.\n\nJohn struggled to sit upright but was immediately restrained by half-a-dozen soft but insistent hands. \"What the hell just happened?\" he groaned, trying to focus on the girls kneeling around him on the bed.\n\n\"We were hoping you could tell us!\" Alyssa said, the worry obvious in her voice.\n\nHe blinked and rubbed at his face. \"Well, I was with each of you which felt amazing. It was Jade's turn and we made that same connection, but it was different, stronger somehow... then her eyes started glowing!\" He frowned in confusion trying to remember the rest. \"Her body started glowing too, like it does when I've fed her, but I hadn't yet... Tentacles appeared, but we were still just having regular sex... Then I felt that connection to all of you! Just like earlier when you were riding me, but all at once though!\"\n\nAlyssa turned to dart an anxious glance at Rachel, who gave her a helpless shrug, her expression revealing just how worried she was. \"I've no idea! Perhaps we accidentally triggered some kind of epiphany for her?\"\n\nJohn glanced around at the group of girls kneeling on the bed around him, glancing from one concerned face to the next in search of the Nymph. \"Where's Jade? Have you asked her what happened?\"\n\n\"We can't...\" Rachel replied, a troubled frown on her face as she looked to her right. \"She hasn't woken up yet and I can't rouse her!\"\n\nThis time when John tried to sit up, the girls helped him, making sure he was steady and not about to pass out again. As soon as he was upright, he followed Rachel's worried gaze. Jade was curled up on one side, her body a riot of pulsing viridian light coming from both her head and her swollen belly. He blinked in surprise when he saw her enormously curved tummy, her arms cradling it protectively.\n\nHe glanced back at Alyssa. \"So she didn't...\" \n\n\"Nope, we didn't get any,\" she replied in a hushed voice. \"You filled her up with cum and you both passed out!\"\n\nJohn closed his eyes to check the mental compartments in his mind to see if Jade was hurt. He winced against the blinding white light coming from the Nymph and tried to suppress the glare so that he could determine if she'd been injured. The shining aura dimmed a little, at least enough for him to assess her condition. He didn't see any signs of physical trauma and she seemed to be in the peak of health as far as he could tell.",
        "Opening his eyes again, he declared, \"She's not hurt, but something's definitely happening to her...\" He turned to look at Alyssa his voice taut with worry. \"How long until we arrive in the Alpha Tauri system?\"\n\nHer beautiful blue eyes met his, her alarm quite evident. \"Eleven minutes!\" \n\nOnly John and Jade were still nude, the rest of the girls having dressed in form-fitting jumpsuits. He climbed off the bed and darted to the bathroom. \"Alright, get down to the Combat Bridge! I'll meet you there!\"\n\nHe dived into the shower, establishing a new personal best for his fastest shower ever. When he jogged back into the bedroom thirty seconds later, he found one of his jumpsuits lying on the bed. Dressing quickly, he paused only to give Jade a fleeting kiss and pull the covers up around her shoulders, before dashing into the express grav-tube.\n\n\"Alright, Commander, let's see what we're up against,\" he called down to Calara, as he jogged down the ramp into the Combat Bridge.\n\nShe already had the holographic map in place, giving him his first glimpse of the Alpha Tauri system. Aldebaran - as the star was more commonly known - was a giant orange star, surrounded by seven planets scattered throughout the system. Four of the planets were gas giants, ranging in colour from a ghostly-pale blue to a rich dark purple. There were a string of asteroid belts, two small grey barren planets, and Khalgron, their destination. \n\nRemarkably similar to Terra, Khalgron sported a range of climates from fierce deserts to snow-capped mountains. John could see the world's obvious appeal to Niskera, trying as she had to accommodate the distinctive habitats of so many different species. Khalgron provided everything from murky swamps to deciduous forests, catering to all the delegates from the minor empires.\n\nSurrounding the planet was a sight that made him freeze on his way to his seat. \"Fuck me! How many capital ships have the Kirrix got?!\" he blurted out in shock.\n\n\"Their ships don't follow Terran Federation standard classifications,\" Calara replied, appearing poised and centred as she turned in her Tactical Chair to stare at the map. \"The largest vessels are their drone carriers at fifteen-hundred-metres. They carry the swarms of Kirrix drone craft, but also wield the biggest guns in their fleet. This data was taken before the Trankaran forces were destroyed, so the Kirrix might have lost some vessels in that assault.\"\n\n\"How many?\" he asked again, his eyes fixed on the dense sprawl of ugly vessels, reminding him of a swarm of malevolent, ochre-coloured insects.\n\nCalara's expression was grim as she replied quietly, \"At least twenty-five.\"\n\nJohn's brow furrowed deeply but he chose not to comment. Instead he waved a hand at the other mass of vessels in the Kirrix fleet. \"What about the rest?\"\n\n\"There's thirty hive ships and a screen of seventy or more smaller vessels, ranging from picket ships to support craft,\" Calara informed him in a neutral, professional manner. \n\n\"Thirty hive ships as well!\" Dana balked, staring at the nine-hundred-metre-long ships. \"All fully loaded with neutron beams? Like that fucking monster we fought last time?!\"\n\nNodding calmly, Calara replied, \"That's correct.\" \n\nRachel paled and darted a worried glance at the Latina. \"You'll be outnumbered one-hundred-and-twenty-five to one!\"\n\nJohn slowly sank in his seat and his gaze settled on Calara. \"Alright, Commander, I'm sure you've come up with a plan. Let's hear it.\"\n\n\"It's simple really,\" she replied confidently, clicking a button on her console to also bring up a view of the planet. \"There's one primary inhabited area on Khalgron, a city called Mulbharum. The Kirrix hive ships will have landed there to deploy their ground forces and capture all the civilians.\"\n\n\"For impregnation by those Hive Lords?\" Alyssa asked, her face twisting in revulsion.\n\nCalara glanced at the blonde and nodded, her expression grim. She looked back at the Planetary Map and continued, \"The Chancellor and the delegates retreated to a fortress, located several miles outside the city in this mountain range.\"\n\nThe holographic image zoomed in closer, focusing on the Northern end of the biggest continent and shifting perspectives to show a three-dimensional topographic picture of the terrain. The densely layered Trankaran city was highlighted in green and it was adjoined by an unwavering red line, which travelled through what appeared to be caverns. It ended in what was clearly their destination, a fortress hidden deep underneath the foothills of a forbidding mountain range.\n\n\"What's that?\" Sakura asked, pointing at the crimson trail linking the fortress to the city.\n\n\"It's an underground rail system,\" Calara explained. \"That cavern area is actually the quarry where the Trankarans mined all the stone they needed for the city. When most of the construction was finished, they built a fortress at the far end of the quarry. The background notes Thandrun provided were extensive.\"\n\nLooking worried, Sakura's attention was squarely on the city. \"I know you want me to keep the extraction point clear, but do you really want me to go up against thirty hive ships?!\"\n\n\"Don't worry, I'm not planning on sending you on a suicide mission,\" Calara replied, giving the Asian girl a reassuring smile. \"According to Thandrun's schematics, there's a concealed emergency access tunnel in the hills above the fortress. You and Faye will just need to keep a low energy profile and land near the tunnel entrance. Once you drop off the ground team, they can head underground, rescue Niskera and the delegates then evacuate. You shouldn't need to fight anything.\"\n\n\"Which just leaves the little matter of a fleet of twenty-five drone carriers,\" Irillith noted, arching an eyebrow as she glanced at the Latina. \"Are you really intending to go toe-to-toe with all those capital ships?\"\n\n\"We won't have to,\" Calara said, a wicked grin on her face. \"The Nova Lances and the Singularity Drivers greatly exceed the range of their neutron beams. I can clear that entire fleet in twenty-five minutes without getting close enough for them to fire a single shot! The Invictus has the speed and agility to steer well clear of any attempts by the drone carriers to catch us.\"\n\n\"What about the actual drones?\" Faye asked inquisitively. \"They might be able to catch up to us.\" \n\nThe Latina didn't look perturbed in the slightest. \"Considering the strength of the Invictus' defence grid, as soon as any strike craft close to medium range, they'll be obliterated in seconds.\"\n\n\"I hope they come after us! I'd like some target practice with the upgraded Pulse Cannons!\" Faye exclaimed with a bright smile on her face. Suddenly she frowned and darted an anxious glance at John. \"Oops! Was I supposed to pretend that I wasn't looking forward to shooting organics?\"\n\nHe smiled at her and shook his head. \"I don't think you offended anyone. Perhaps later we could have a chat about the appropriate timing for gallows humour though, okay?\"\n\nShe winked at him in return. \"Sure!\"\n\nAfter waiting for them to finish, Calara continued her briefing. \"Even if the drone carriers have any gun batteries with long enough range to reach the Invictus, it's extremely unlikely they'll be able to hit us.\" She darted John a worried glance. \"Or at least, that was the plan until Jade was incapacitated...\"\n\nHe was quiet for a moment, then shared a meaningful look with Alyssa. \"It's a solid plan, but we need a pilot. Feel like taking the Invictus for a spin?\"\n\nShe frowned, glancing back at the holographic image of the underground fortress. \"I heard your conversation with Niskera and that Sub-Warden... it sounded like they were facing some brutal combat. I don't like the idea of not being there to support you, especially as the girls aren't pre-loaded.\"\n\n\"Rachel will be there to help with any healing. Faye and Dana are good pilots, but you and Jade are the best we've got. With Jade out of action, you'll be able to make the biggest difference up here,\" John said, giving her a reassuring smile.\n\n\"Okay, it does makes sense,\" Alyssa grudgingly agreed. Her eyes flicked over to Dana. \"I think you should take Sparks with you though, or you'll be a girl down on your team otherwise. I'll be keeping the Invictus out of range of the Kirrix, so she won't have much to do up here in terms of damage control.\"\n\nJohn turned to look at the redhead. \"How about it, Dana? Feel like coming on a bug hunt?\"\n\n\"You bet your ass I do!\" she exclaimed, looking thrilled. \"I can't wait to see the Pulse Cannon and Quantum rifles fuck up the Kirrix!\"\n\n\"Alright, let's get geared up,\" John said, rising from the Command Chair. He looked at Alyssa and Calara, his tone firm as he added, \"I want you both in body armour too, just in case.\"\n\nCalara nodded obediently, darting him a quick smile as she got up from her seat. \n\nAlyssa heard the next question in John's mind and answered it pre-emptively. \"We'll be hitting the Alpha Tauri system in two minutes, forty-three seconds.\"\n\nJohn caught Rachel's eye as she headed for the ramp. \"Can you brief us on the autopsy results when we're in the Raptor?\"\n\n\"Great minds think alike,\" she replied, a hint of a smile on her beautiful face.\n\nThey all moved swiftly now, rushing up the loading ramp to the equipping frames and suiting-up in Paragon body armour. Sakura was the first to get ready, grabbing her ninjato, a rifle, and some ammo, then dashing for the express grav-tube.\n\n\"Take care out there, Sakura!\" John called after her. \n\nShe turned and waved at him, unable to suppress her grin as she stepped back into the red anti-gravity field. Turning back to his own equipment, John picked up the combat webbing that the Maliri twins had loaded with ten-millimetre caseless ammo and five high-explosive grenades. He pulled the webbing on, double-checking the locations of the most conveniently accessible magazines, before buckling on a holster and slotting in a Quantum pistol. Reaching for his crystal Alyssium sword, he held it against the magnetic sheath on his back. As soon as it was secure, he picked up a Quantum rifle and performed a safety check. \n\nSatisfied with his gear, he nodded in gratitude to Irillith and Tashana, then reached out to catch Calara by the hand as she started walking down the ramp to the Combat Bridge. \"Thanks for the briefing. You did a very thorough job, just as I've come to expect.\"\n\nShe smiled at his praise, but he could see the worry in her eyes as she said, \"Be careful down there, okay? If you get into trouble, you'll be a long way below ground. We won't be able to provide any fire support...\"\n\nAlyssa joined the two of them, her Paragon helmet in her hands. \"We both want a kiss goodbye before you're going anywhere, mister,\" she said sternly, glancing at the brunette who pulled off her helmet.\n\nJohn shouldered his rifle and removed his own helmet, then gave each of them a tender kiss. \"Take care you two. I'm handing over my ship without a scratch on it, I expect it returned in the same condition.\"\n\nAlyssa rubbed noses with him. \"We'll do our best.\"\n\nHe pulled his helmet back on and said, \"Let me know if there's any change in Jade's condition.\"\n\n\"Will do,\" Alyssa agreed, watching him as he strode across to the grav-tube. She smiled as he turned to wave goodbye, but he could see the deep-seated worry in her eyes.\n\nDana, Rachel, and the twins were already jogging across the hangar towards the Raptor when John stepped out of the grav-tube. His stomach lurched after the rapid descent, but he did his best to ignore it as he returned Faye's friendly wave from the gunship's cockpit. He loped after the girls, finally catching up to them when they entered the cockpit. While Faye's primary avatar powered up the Raptor, the four armoured girls took their seats, repositioning their equipment and making final checks. John chose to stand, since the gleaming sword strapped to his back made sitting awkward.\n\nTapping the side of her helmet, Dana said, \"Jade hooked up tiny cams to all our Paragon suits. They started recording as soon as we powered them up. I bet when we're done and she checks out this footage, Jehanna will be begging you to fuck her brains out!\"\n\n\"Much obliged, Chief Engineer,\" John said dryly, nodding his approval. \n\nShe winked in return. \"She's smoking hot! Me and Rachel really want to fuck her too!\"\n\nLaughing, he turned to look at the brunette, who smiled but made no effort to disagree with her girlfriend. There was an eager sparkle to her grey eyes and she was clearly waiting for his go ahead to present her findings. \"Whenever you're ready, Doctor,\" John said with an encouraging smile.\n\nShe nodded and said to their diminutive purple pilot, \"Can you start my holo-projection please, Faye?\"\n\nAn instant later a holographic image of a battle-ready Kirrix marine appeared in a flash, right in the centre of the cockpit. Its arms were raised menacingly as it loomed over the girls, while its serrated mandibles looked like they were about to take a vicious bite out of its prey. The disturbing sight of the six-limbed soldier made Dana jump and she flinched away from the holo-projection. \n\n\"You scared the crap out of me!\" she protested, elbowing her girlfriend in the ribs. \n\n\"I took a bit of artistic license posing the image. I just wanted to make it look more life-like,\" Rachel explained, laughing at Dana's indignant pout. \n\nThe redhead narrowed her eyes suspiciously. \"Yeah, right...\"\n\n\"What did you find out about it?\" John asked, staring at the alien soldier's big compound eyes.\n\nRachel gestured towards the insectoid soldier and launched into her autopsy findings. \"The Kirrix drone is a highly-evolved species of arthropod. Their natural habitat would be an arid planet, but they seem well adapted to survive in most other forms of eco-system. They've developed a tough exoskeleton, making them naturally far more resilient than a Terran soldier. This specimen was also wearing a close-fitting suit of carapace body armour and Dana informed me that the combination of the two would be enough to prevent harm from a hollow-point round fired from a standard rifle.\"\n\nThe image changed to show a series of red lines superimposed over the Kirrix marine. \"The drone has a relatively simple central nervous system, with its brain linked to the ganglia that runs through its thorax and abdomen. Pain receptors seem limited, so I suspect a Kirrix soldier would be able to continue fighting even after sustaining crippling injuries that would incapacitate a Terran.\"\n\n\"Any vulnerable areas?\" John asked, studying the Kirrix marine with an appraising eye.\n\nRachel nodded, with Faye zooming in on the vulnerable locations. \"Shots to the chest that destroy the nerve cluster located there will immobilise them. A headshot that destroys the brain will instantly kill them. Actually, while I'm on that subject, I found something fascinating when I was examining the second drone's cranium.\"\n\n\"While its brain was small and under-developed, the drone possessed a unique organ that I've not seen before. It's somewhat reminiscent of the Amygdala in a Terran brain, but much larger and more complex. I believe there's two possible reasons why that might be the case. The first is that the Kirrix drone has extremely advanced emotional intelligence, but I sincerely doubt that, considering its relatively small frontal lobe. That leads me to the second theory, which is much more alarming...\"\n\n\"Drones like this must utilise a form of communication sophisticated enough that they can be trained to use equipment and operate spacecraft. Yet the Kirrix drone only has rudimentary vocal chords, so can't communicate by speech. While they do possess antenna, which some insectoid species use to detect pheromones, those appendages aren't refined enough to allow for complex communication. With no other obvious methods available, I believe this mystery organ allows the Kirrix to tap into some kind of hive-mind.\"\n\nTashana gave the insectoid soldier a wary glance. \"You think this thing has some kind of innate psychic ability?!\"\n\nRachel looked impressed. \"Actually, yes, that's precisely what I'm suggesting.\" \n\nJohn frowned and sounded dubious as he said, \"Alyssa and I boarded one of their hive ships, but they didn't use any psychic abilities against us.\"\n\n\"They might not be able to manifest tangible powers in the way we can,\" the brunette replied carefully. \"I suspect that this brain structure allows the higher-castes of Kirrix creatures to guide the actions of lower-caste creatures, but I've no way of determining how extensive that guidance is. It might be simple instructions, or as far reaching as being to directly control a drone like a puppet.\"\n\n\"So, what happens if we kill off the higher-caste creatures?\" Tashana asked, narrowing her eyes. \"Does that kill off all the soldiers too?\"\n\nRachel hesitated for a second, pondering her question. \"I'm afraid I can't confirm that. At the very least, there'll probably be some confusion as the drones suddenly lose the guidance from whatever creature's controlling them.\"\n\nJohn studied the menacing alien and asked quietly, \"If the Kirrix have psychic capabilities, do they have triple-helix DNA?\"\n\n\"No, the Kirrix definitely weren't created by a Progenitor,\" the brunette replied, answering his unspoken question. \"They share none of the distinctive genetic markers I've seen in all the species created by Mael'nerak. If I'm right, any psychic talents this race possesses evolved naturally.\"\n\nFaye turned in the chair, her big luminous eyes peeking around the headrest. \"Sorry to interrupt. I just wanted to let you know that we've dropped out of hyper-warp into the Alpha Tauri system. Alyssa brought the Invictus closer to Khalgron and we're holding position out of range of the Kirrix.\"\n\n\"That's okay, I've finished,\" Rachel said, smiling at the sprite. \n\n\"Head shots then chest shots,\" John mused, then placed a hand on Rachel's shoulder. \"Thank you for the briefing, it was extremely useful information.\"\n\nShe inclined her head as she looked up at him. \"You're welcome. If we can acquire the heads of any higher-tier Kirrix creatures, I might be able to tell you more.\"\n\n\"I'll keep my eyes open,\" John replied wryly, earning himself a smile from the brunette. Turning to look at their cute pilot he continued, \"Can you show me the local Tactical Map, Faye?\"\n\n\"Sure thing!\" she replied, the holographic map replacing the Kirrix drone a second later. \"This data was gathered by the Invictus' passive sensors.\"\n\nJohn's eyes were drawn to the vast formation of Kirrix drone carriers gathered near the planet. They were surrounded by scores of picket ships and support vessels, but there was no sign of the hive ships.\n\nLooking for the same missing vessels, Irillith murmured, \"They must be planetside, just as Calara predicted...\"\n\n\"Okay take us in, Faye,\" John said to the sprite. \"Keep the energy profile as low as you can, we don't want to risk their capital ships spotting us.\"\n\n\"Will do!\" Faye Primary replied cheerfully, her bright energetic manner a sharp contrast to the extreme care she was taking with the Raptor. \n\nThrough the cockpit window, John watched the gunship creep out of the hangar, the grey titanium walls replaced by the velvety black of the Alpha Tauri system. \n\nAs they cleared the Invictus' hangar doors, Alyssa's voice breezed into John's mind. *Sakura just launched too. She'll tail you down to the planet but she's going to stay off comms to avoid the Kirrix picking them up.* He heard the undercurrent of excitement in her telepathic voice as she added, *Enjoy the show!*\n\nWalking to the front of the cockpit, John watched through the window as the Invictus crept forward, like a deadly predator stalking its prey across the tundra. The six massive Trankaran engines suddenly flared a brilliant orange, the huge battlecruiser leaping forward as it got ready to pounce, armour plating peeling back to reveal its teeth and claws. The vast arsenal they'd meticulously developed over the past several months came into view, with scores of turrets rising up ominously out of the hull. ",
        "John had spent the last twenty years around spacecraft, but the sight of the Invictus charging into battle was still thrilling. Anything larger than a cruiser usually appeared sluggish and unresponsive when manoeuvring, but those were adjectives that could never be applied to his gleaming white battlecruiser.\n\nA nimbus of throbbing energy began to form at the Invictus's bow, colossal amounts of energy being harnessed to form that glowing sphere. It expanded rapidly then grew much brighter, the intensity increasing until it hurt the eyes just to look at it. For a moment, it seemed that blinding orb contained too much power, as if it were about to explode with titanic force, threatening to annihilate the Invictus in an instant. That was when Calara pulled the trigger, unleashing that terrible firepower on the unsuspecting drone carriers.\n\nThe bewildered Kirrix had barely managed to get their shields up in time, having only just detected the Invictus' presence when it started charging-up its most destructive weapons. Not that those protective fields did them much good... \n\nAn incandescent beam of phenomenal power slashed through the Kirrix ranks, vaporising several picket ships that were inadvertently caught in its path. Calara strafed the blazing column of energy through the nearest cluster of capital ships. She successfully clipped a trio of carriers, the beam caressing each of them for no more than a second each, but it was more than enough time to wipe out the protective shielding on all three vessels. \n\nThat was when the muzzles of the Singularity Drivers blasted out the first shot of their deadly cargo. Huge slugs streaked across space, accelerated to hyper-warp by the tightly controlled singularity contained within the Invictus. Leaving a trail of faint blue tachyon particles behind them, the rounds slammed into the closest of the hapless drone carriers. There was a huge explosion as the first slug struck home, the vast kinetic energy transferred into the ochre hull of the Kirrix ship. Armour plating exploded outwards, showering debris across space and leaving a cavernous crater in the rear flank of the capital ship. The carrier shuddered with the impact, appearing to flinch as if in pain from that mighty blow.\n\nBut that was merely the opening note in a deadly symphony...\n\nWith the relentless beat of a metronome, the Invictus pounded the Kirrix ship, striking that precise spot over and over again. By the third hit there was an enormous gaping rent in the side of the ship, with armour, superstructure and internals torn asunder to expose its beating heart. The fourth slug punched deep inside the carrier and instead of a single explosive retort there were two, the second far more devastating. The enormous primary reactor that supplied power to the ship was smashed by that fourth hit, triggering a core breach that made the rear half of the vessel balloon outwards obscenely. The ship seemed to freeze for a second in horror, before the detonation blew it apart in a monstrous supernova.\n\n\"Fuck me...\" Dana muttered, standing beside John and watching the Kirrix capital ship explode into a million pieces. In less than ten seconds, a fifteen-hundred-metre long supercarrier had been completely obliterated.\n\nThe Invictus pivoted smoothly, then without seeming to pause, the deadly rain of Singularity Driver rounds began to strike the second shieldless carrier. Calara continued her orgy of destruction, remorselessly preparing for the killing blow on her next target. Huge chunks of armour were gouged out of the carrier as she used those terrible blasts to tear her way deeper into its hull. It only took five seconds for the second helpless capital ship to be ripped apart by another enormous explosion, the Invictus already moving on to its third victim.\n\nThe redhead shook her head in awe and slipped her armoured hand into John's. \"I'm really fucking glad Calara's on our side...\" she said softly.\n\nJohn nodded as he watched the Invictus execute the third carrier a handful of seconds later, then turned to look at his young companion. \"You designed and built that ship, remember? Calara might be the artist, but it's your paintbrush and paint she's using.\"\n\n\"I'm glad I'm on our side too then,\" Dana said with a lopsided smile.\n\n\"Damn right...\" John agreed, stroking her armoured thumb with his own.\n\nThe Invictus swung about sharply, racing away from the infuriated Kirrix capital ships that had powered up their engines to give pursuit. He noticed Alyssa waggling the rear of the battlecruiser as they fled, further taunting the enraged aliens.\n\n\"They're launching drones!\" Tashana called out, drawing John's attention to the holographic projection in the centre of the cockpit.\n\nThe Kirrix fighters were too small to be seen from the Raptor with the naked eye, but on the Tactical Map they appeared like a swarm of angry hornets, buzzing around the remaining drone carriers. A riot of red sensor signals obscured the carriers from view, then that furious scarlet cloud stormed off in pursuit of the Invictus. As John watched the white battlecruiser tearing across the map, he couldn't help picturing a naughty youth running away in glee after kicking over the hornets' nest.\n\n\"So far, so good,\" he said, turning his gaze towards the green and blue planet ahead of them.\n\nWith the Kirrix fleet thoroughly distracted as they chased after the Invictus, Faye's careful approach to the planet went unopposed. The Raptor drifted closer to Khalgron, passing through the sad remnants of the Trankaran fleet that had attempted to defend this system from the Kirrix invaders. Three towering battleships and over a dozen rust-red cruisers lay broken, reduced to nothing more than shattered derelicts. The sheer number of hits those vessels had sustained were a testimony to the bravery of the Trankaran crews, standing firm in the face of such overwhelming numbers.\n\nThe Trankarans had fought back valiantly, managing to bring down two Kirrix drone carriers in what must have been a ferocious exchange of broadsides. The sickly-brown capital ships had been deeply scored in multiple places across their hull, the potent Trankaran Fusion Beams having melted straight through their thick armour plating. \n\nJohn wasn't able to read debris fields like Calara could, but even he could see how the final stages of that battle must have played out. The besieged Trankaran forces had charged headlong into the mass of Kirrix guns, using their speed and incredibly thick armour to close to point blank range. He guessed that they'd caught the insectoid forces by surprise, the rockmen choosing to sacrifice themselves in a bold but suicidal attack that would at least take down some of the Kirrix with them. \n\nFilled with respect for those brave souls, John silently vowed to himself that their sacrifice would not be in vain.\n\nFaye began their descent through the planet's upper atmosphere, easily pinpointing the location of Mulbharum by the sparkling lights from the Trankaran city. Evening had fallen on this hemisphere of the Khalgron, and the city shone like a beacon in the shadow of the planet. As they drew closer, John's expression hardened as he realised the lights in the centre of the city were actually coming from fires... The Kirrix had been burning the citizens out of their homes.\n\nEncircling the city like buzzards landed around a carcass, the Kirrix hive ships swam into view. They had dispensed with any overt ship security, so the external lights on their yellow-brown hulls made them easy to spot in the gloom. They had landed on the planet to disgorge thousands of troops and now clung like bloated ticks to the surface of Khalgron.\n\n\"Can't we do something?\" Rachel whispered, staring at the huge insectoid breeding ships in revulsion. \"The thought of what the Kirrix are going to do to those civilians makes me sick...\"\n\nLetting out a heavy sigh, John slowly shook his head. \"I hate the idea as much as you do, but it's not like we're just ignoring them out of choice. If we lose Niskera and her Republic falls to the Kirrix, then billions of Trankarans will share their fate. Rushing to her rescue is the best chance we've got of saving many times more sentient beings from that kind of horror.\"\n\n\"I know, it just feels really wrong,\" the brunette said as she turned away, no longer able to stomach the sight of the ugly segmented vessels, not when she knew what was happening within.\n\n\"We'll get some payback on the Kirrix,\" Dana said, gritting her teeth in cold fury. \"I almost feel sorry for those fuckers sieging the fortress... we're going to tear them a new one.\"\n\nTashana placed a hand on the teenager's shoulder, her violet eyes burning with anger. \"Absolutely.\"\n\nLooking back at their pilot, John asked, \"Faye, can you see where the entrance to the fortress is supposed to be?\"\n\n\"Yep!\" she replied, sounding supremely confident. Pointing a delicate purple finger directly ahead of them, she continued, \"We're heading straight for it! I'll be bringing us down to land in just over a minute.\"\n\nHe gave her a grateful smile then looked straight ahead through the cockpit, doing his best not to let his eyes drift to the burning city and imagine how terrified the civilians must be. \n\n***\n\n\"The Nova Lances will be ready to fire in ten seconds,\" Calara said, darting a glance at the blonde sitting in the Pilot's Chair.\n\n\"We should probably do something about that swarm of bugs first,\" Alyssa said, raising an eyebrow. She smiled at the Latina and her purple AI companion. \"Did you ladies remember to bring your super-sized fly-swatters?\"\n\n\"I heard bugs like to fly towards bright lights,\" Faye Secondary said cheerfully. \"Maybe that's why they're chasing after us?\"\n\nCalara nodded, her expression sombre. \"Why don't we give them what they want then?\" \n\nThe heatsinks had finished venting all the heat from the Nova Lances, shifting them in the weapon loadout display from red to green. Calara pulled the trigger, initiating the vast power surge that would charge up the incredibly destructive weapons. Alyssa eased off on the throttle, rolled the Invictus to starboard, then yanked back on the flightstick. The white battlecruiser executed a tight turn, bringing them back on an attack vector with the drone carriers - and the swarm of Kirrix strike craft that were eager to get to grips with their quarry.\n\n\"Firing Nova Lances,\" Calara said, aiming the targeting reticle in the centre of that mass of vessels. \n\nShe was surrounded by the Invictus' holographic targeting matrix, the sphere displaying the maximum range and firing arcs of all her weapons. Holding the weapon controls with a steady, confident grip, Calara pulled the triggers firing the forward Nova Lances at the swarm. A hundred-metre-wide beam blazed to life, throbbing with incalculable power as the Latina swept it through the tightly packed ranks of Kirrix strike craft. \n\nThere were over a thousand drone ships in that first wave and the Nova Lances cut through them like a superheated broadsword through butter. One moment the small yellow chitinous craft were racing through space in neat, six-pronged wings, the next they were just... gone. \n\nCalara watched the targeting matrix like a hawk, the long arcs of the Invictus' forward facing Photon Lasers enveloping the front formations of the survivors. Over half of that deadly swarm had been annihilated, but the Latina wasn't done with them yet. Twelve of the battlecruiser's beam weapons opened fire, the lethal spray of pulsed beams piercing through the dense formations of fighters. Calara aimed to either side of the devastating hole she'd just bored through their ranks, finding rich pickings amongst the throng of fighters still in close formation. Scores of Kirrix drone craft were atomised in the face of that blazing salvo, bright blue laser beams disintegrating anything they touched.\n\n\"You've got much longer range than me!\" Faye protested, having to wait until the drone vessels closed to medium range.\n\n\"Don't worry, I left you some,\" Calara replied, nodding towards the several hundred remaining strike craft.\n\nFaye grinned with anticipation, eleven of her eager avatars assigned to firing the Pulse Cannon defence grid. She was able to bring thirty-two of the triple-barrelled weapons to bear in the front arc, which meant no more than three guns to aim for each of her processing streams. The moment the Kirrix strikecraft closed to medium range she opened fire with her full complement of energy weapons, sending a brilliant stream of blue laser bolts into the oncoming waves of fighters.\n\nThe new heatsinks meant that the Pulse Cannons could now fire without pause and the lead Kirrix fighters that hit that wall were torn to pieces. Faye was gunning down over twenty drone ships a second, so by the time the tattered remnants of the drone wave reached short range and could actually fire back, they had been reduced to under a fifth of their original number.\n\nThe fighters returned fire with sickly green energy bolts, from heavy neutron guns built into the wings of their drone craft. The Invictus' shields began to ripple, like a lake being dusted by a light April shower. Alyssa took evasive manoeuvres, throwing off the fighters aim until they compensated and continued to rain down fire on the shimmering field. \n\nThat downpour subsided as Faye continued hammering their lines with Pulse Cannon fire, joined again by Calara with her Photon Lasers which had cooled down once more. By the time the Invictus passed the surviving elements of the insectoid horde, they'd been whittled down to a pitiful handful, none of which survived the broadsides as flank and rear-mounted energy weapons were brought to bear.\n\nAlyssa eased back on the throttle, then banked the Invictus around, pushing the engines up to maximum power again as soon as they were facing away from the drone carriers. She grinned as she put more distance between them and the Kirrix capital ships, staying well out of range of their neutron beams. \"We're down to seventy-two percent shields. We can let them recharge a bit until the Nova Lances are ready to fire again. Doesn't look like the Kirrix have any weapons with the reach to hit us... I guess the bad guys aren't going to have much fun today!\"\n\nCalara relaxed back in her chair, a bright smile of relief on her face. \"Nice shooting, Faye!\" she exclaimed, genuinely impressed by her purple companion's aim.\n\nFaye frowned and glanced at the screen. \"I actually almost started to feel bad for them by the end. I can't match your shooting, but firing constantly makes it hard to miss. Even if I do, I just strafe the Pulse Cannon fire back over the target and... Zap!\"\n\n\"Fortunately, you got most of them before they got too close,\" Alyssa said, her tone turning serious. \"John wouldn't have been happy if he'd had to spend a few hours clearing bugs from the Invictus' windscreen...\"\n\nCalara laughed at her joke, then shared a grin with her blonde lover. \n\nFaye Secondary engaged her default happy smile image, but she was lost in thought, taking advantage of the brief lull in combat to analyse the annoyingly persistent query that was nagging at her. Diverting all her processing streams, except Faye Primary who was flying the Raptor, she began to investigate this new conundrum. The Kirrix were evil, therefore she was doing good by slaying them. Moreover, they were threatening John and the girls, which automatically guaranteed their termination. But why did she have this nagging feeling of regret at ending their lives?\n\nUnable to come up with a solution, she resolved herself to discuss it with John at the earliest opportunity.\n\n***\n\nThe Raptor and Valkyrie skirted well clear of Mulbharum, cautiously avoiding the city and its Kirrix invaders. Everyone was glad to see the back of the hive ships, even though they all felt a nagging sense of guilt at not intervening to save the civilians, despite the urgency of their mission to rescue Niskera. However, all those doubts and self-recriminations were swept aside as they approached the foothills where the emergency evacuation tunnel was located.\n\n\"Oh fuck!\" Dana gasped, pressing herself closer to the cockpit window.\n\nInstead of the smooth rolling foothills that they'd been expecting, there was a slumped crater. Half the hillside had rumbled away in an enormous landslide, leaving behind a rugged rocky depression.\n\nIrillith glanced at their purple pilot. \"Are you sure this is the right location, Faye?\"\n\nFaye Primary bobbed her head in immediate confirmation. \"I've checked the coordinates eighty-seven times! This is definitely where the tunnel entrance is supposed to be. There should have been a concealed cave entrance on the leeward side of that hill, which led back twenty metres to a lift shaft and stairwell!\" \n\n\"What could have happened here?\" Rachel murmured, standing behind her and staring at the scene of devastation.\n\n\"Perhaps the Kirrix decided to destroy the fortress with an orbital barrage?\" Tashana suggested, studying the crater.\n\nJohn slowly shook his head. \"No, that wasn't done by a ship's battery. I've seen this kind of thing before... the Trankarans must have set demolition charges and flattened the hillside.\"\n\n\"But now they're trapped down there!\" Dana protested, her beautiful face scrunched up in confusion. \"That was really fucking stupid!\"\n\n\"The Kirrix might have discovered the tunnel,\" John said with a shrug. \"We'll just have to ask the Trankarans why they did it... if they're still alive.\"\n\n\"Should we risk attempting to contact Niskera again?\" Rachel asked, glancing at the bleak grey stone now exposed under the hill.\n\nDana grimaced. \"It'll be like going up to the Kirrix and shouting: Hey motherfuckers! I'm over here!\"\n\n\"How about a tight-beam active scan, no more than three-metres across?\" Tashana suggested brightly. \"The focused sensors should penetrate deep enough to detect Trankaran life-forms. It's very hard to detect because it doesn't use much energy. I used them all the time to... Oh!\" Her face showed her surprise as she recalled memories of her days as a smuggler.\n\n\"You okay?\" John asked with concern, patting her on the shoulder.\n\nShe nodded, a faraway look in her eyes. Snapping out of it a moment later, she gave him a reassuring smile. \"I'm fine, don't worry.\"\n\nDana leant over one of the Raptor's consoles, her armoured fingers darting across the controls. \"Just setting it up now. It's actually a great idea! I've never tried scaling back an active scan like that before... very sneaky!\"\n\nIt didn't take long for the redhead to get the modified active scan ready and using the schematics to pinpoint the precise location of the fortress, Dana began to sweep the sensors through the base.\n\n\"Yeah, they're still down there alright,\" she muttered, staring at the readings in concentration. \"The Trankaran life-readings are weak, but that could be because of all the rock strata in-between.\"\n\n\"Okay, so this way is blocked, but I seem to remember several others on the schematics, right?\" John asked the girls intently.\n\n\"There was that train station back in the city,\" Dana agreed. \"Plus a bunch of other tunnel entrances too; probably where the Trankarans hauled out all the stone from the quarry.\"\n\nFaye turned in her chair so she was kneeling on it and pointed over the headrest at the holographic map that had just appeared. \"I've marked the entrances in orange. I also superimposed the locations of the hive ships in yellow.\"\n\n\"Nice work, honey,\" John said, nodding appreciatively. He leaned closer to study the map and the smile he'd given Faye started to fade as he examined the entrances into the tunnel system. \n\n\"Fucking bug fuckers!\" Dana snorted in anger, echoing his thoughts. \"They've parked those fat fucking hive ships on top of almost all of them!\"\n\nJohn pointed towards a pair of entrances to the north of the city. \"Those two are still too close. If the map's correct, it looks like open ground around there... we'd never be able to get that near to the Kirrix forces without being spotted.\"",
        "\"How about the station then?\" Tashana suggested. \"It's near the outskirts in a well-built area and not too close to any hive ships. We might be able to sneak in there without being spotted. Getting out will be harder, but Faye and Sakura could come in guns blazing to clear a way out for us.\" \n\n\"I always liked mining trains!\" Dana said with a grin. \"We could grab one and race straight into the fortress and then evacuate everyone the same way!\"\n\n\"Let's do it,\" John agreed, looking around the group and seeing decisive nods from all the girls. Glancing at his excited pilot he added, \"Take us in, Faye.\"\n\n*I'll let Sakura know what you're up to,* Alyssa said, the worry in her voice quite apparent.\n\nJohn sent her a reassuring telepathic smile. *We've got this. Dana's right, it might actually be easier to evacuate Niskera and her people by train, especially if they've got a lot of wounded.* It was his turn to sound worried now as he added, *How about you? Any problems?*\n\n*We've got an overwhelming speed, range, and firepower advantage,* she replied, sounding supremely confident. *We swatted the initial wave of bug fighters and Calara's just getting ready to gut another drone carrier.*\n\nRelieved to hear her description of the incredibly one-sided battle, John let himself relax a little. *Sounds like you've got everything well in hand. Can you ask Sakura to hang back at the drop zone. There's no need for her to come with us, I don't want to risk the Valkyrie being spotted by Kirrix forces.*\n\n*I started telling her as soon as you thought it,* Alyssa replied, giving him a playful mental wink.\n\n***\n\nSakura arched her back, making the Valkyrie shift positions from a horizontal flying position to a vertical standing position. Using retro-thrusters to gently feather her descent, she touched down in what had once been an office car park behind a tall commercial building. At least that's what it was marked down as on her map; to Sakura it looked like a monolithic stone tower - the Trankarans definitely believed in building things to last!\n\nWith a graceful agility that should have been impossible in a machine of that size, she prowled forward in the thirty-metre-tall mech, taking advantage of the darkness to conceal her careful progress. She smiled to herself as she imagined how the Valkyrie must have looked, the gigantic shiny white robot pretending to be a stealthy ninja.\n\nShe stopped to peek around the right corner of the tower block. Far away in the distance she could see the segmented ochre hull of the closest hive ship, looming ominously over that section of the city. It had searchlights focused down on the streets and there was plenty of activity illuminated by those bright beams of light. Sakura pivoted and crept along the concealed side of the office block, before peering around the left corner. She trained the crosshairs of her Photon Lasers down the broad avenue, preparing to open fire if any threats should appear.\n\nNot quite so far away on the left of the street was the entrance to the station, currently unlit and shadowed in darkness, it was both an imposing and depressing sight. On a brighter note, there were no visible signs of Kirrix right at that moment and her thermal-imaging wasn't picking up anything either. Squatting and turning around, she beckoned her tiny companions forward.\n\nJohn looked up at the crouching mech and nodded to Sakura in acknowledgement. He darted forward across the car park, dodging around stationary hover-cars and avoiding the metre-deep depressions in the ground left behind by the Valkyrie's massive feet. The sensitive audio sensors in the Paragon suit picked up the light footfalls of the girls behind him as they jogged along in his wake. \n\nThey didn't have Alyssa to coordinate their fire this time, but he had every confidence in the four women following him across the car park. It was sobering to think that he trusted these four girls - two of whom were only eighteen - far more than the very best of the special forces teams he'd ever led. He felt a surge of pride in them as he reached the Valkyrie's foot, with Tashana, Irillith, Dana, and Rachel joining him in taking cover by the building.\n\n*We're going in,* John thought to Alyssa, knowing she would relay his exact commands to the Asian girl towering over them. *Cover us with the mech until we reach the station, then hold position here. If you're at any risk of being detected, pull back out of the city to safety and wait for our return.*\n\n*Will do,* Alyssa replied. *Be careful, John. Let me know if you get in any trouble and I'll find a way to help! I love you...*\n\nHe paused for a second before replying, touched by the passion in Alyssa's words, which he knew were a direct reproduction of everything Sakura had just intended for him to hear. He glanced up at the huge mech and saw its head turned down so that Sakura could watch him. He blew her a kiss. *I love you too, honey. Stay safe...*\n\nGlancing over his shoulder, he nodded to Tashana, then cut out around the edge of the building. Darting across the street with his rifle trained along the avenue, he switched to thermal imaging to get a clearer picture of any threats. The only signs of heat traces were a long way down the road, far beyond the entrance to the station and surrounding the base of the distant hive ship. He began to make his way down the sidewalk, moving from cover to cover, knowing that the girls would be flanking him.\n\nSure enough, the rest of his squad had fanned out across the road, with Tashana staying roughly parallel to John on the opposite side of the avenue. Irillith, Dana, and Rachel were following at a discreet distance and maintaining well-disciplined spacing. There were a few signs of combat, with a handful of buildings and vehicles showing damage from fire-fights. Additionally, everything from the street to parked vehicles were covered in a light layer of soot, which had accumulated from the many fires that had been started in the city.\n\nWhen John reached the station entrance, he saw no indication of insectoid footprints in the black layer carpeting the steps. That was a reassuring sign and he jogged up the short flight then entered the station foyer with much less caution than he would have done otherwise. This station was one of the biggest in the rail network underneath Mulbharum and was also the only station with the rail link to the underground fortress several miles outside the city limits. \n\nTaking a chance that the station was deserted, he activated low-intensity external lighting on his helmet. The low-light amplification in the suit's HUD greatly enhanced how much he could see in the gloom. Shining those soft beams of light around the foyer, he could see there were a maze of tunnels heading off into pitch blackness, the only indicator as to their destination written in runic script.\n\nJohn glanced back at the girls as they joined him inside the station, fanning out to cover the tunnels. \"Irillith, I know you're great with languages. How's your Trankaran? Have you mastered their runes?\"\n\n\"I can speak it fluently, but I can't read it,\" the Maliri girl said, giving him a frown of apology.\n\n\"We need to go that way,\" Dana said firmly, pointing up at the angular script inscribed on the wall above one of the tunnels. \"It says: 'Hol Darim Fortress - Platform Twelve. Authorised personnel only'.\" \n\n\"I didn't know you could read Trankaran!\" John exclaimed, looking at her in surprise. \n\nHer eyes drifted down to his face and he could see the shock in those sky-blue orbs as she said in a quiet voice, \"Yeah, neither did I...\"\n\nRachel patted her on the back. \"You're a girl of many hidden talents, babes.\" \n\nSetting off again, John followed the tunnel that Dana had pointed out, moving at a fast walk as they began travelling down a number of snaking ramps. There was no light at all down here, rendering image amplification useless. The walls and floors were all made from a matte-grey metal, so their footsteps rang with a sharp metallic ring to it. He would have been worried about the noise they were making, but using heat amplification he saw no sign of Kirrix. \n\nWhen he was starting to get anxious that the tunnels were ever going to end, they suddenly opened out onto a long platform that stretched away into the distance. Like the rest of the underground passageways, the roof was held up by huge metal-clad columns. These reinforced buttresses looked incredibly sturdy, their broad surfaces covered by strangely elegant patterns on each facing.\n\n\"There's the train!\" Dana said with glee, having turned the corner from the stairwell to look back along the platform.\n\nJohn walked over to join her and sure enough, there was a heavy, blocky, slightly oversized train - essentially everything he would have imagined a Trankaran vehicle to look like. In the dim light it was hard to make out colours, but the train was just as deserted and lifeless as the rest of the station had been.\n\n\"Can you get it running?\" he asked, as he followed the redhead to the train.\n\nShe grinned at him and replied, \"I'll give it my best shot!\"\n\nThe doors to the cab had a rune beside them, but they did nothing when Dana placed her hand on the surface. She frowned, then stood on tip-toe to peak through the window. Her frown deepened and she began jogging along the platform until she stopped at a carriage mid-way down the train, where she stopped, looking curiously at the mechanism reaching out of the roof of that carriage.\n\n\"Give me a boost?\" she asked, giving John her most appealing smile.\n\nHe slung his rifle, and interlaced his fingers to make a stirrup for her. She placed her booted foot there and he launched her up effortlessly, with Dana landing with catlike agility on the roof. \n\n\"Fucking Kirrix!\" she swore less than a minute later.\n\nJohn looked up at her in concern. \"What is it, Sparks?\"\n\nShe let out a humourless laugh. \"That's just the problem, there are none!\" Her face appeared above him as she squatted down by the edge of the roof. \"This train runs by external power from the electrical rails above us, but the Kirrix must have shut down the power grid. Without any juice, this train's going nowhere!\"\n\nJohn offered the redhead a hand, helping her down. \"It was a great idea, honey. Not to worry, we'll just follow the tracks all the way to the fortress.\"\n\nDana sighed and gave him a helpless shrug. \"At least we won't have to worry about being hit by any trains.\"\n\n\"Alright, let's move out,\" John said, turning and walking back along the platform.\n\n\"Hold on a moment,\" Irillith said quietly, followed by a crackling sound a moment later.\n\nJohn turned around to see what had drawn Irillith's attention, then looked at her in surprise as the carriage door opened. The Maliri girl had her hand over the rune, blue electricity arcing over her fingertips.\n\nShe arched her eyebrow and said, \"All aboard. Next stop, Hol Darim Fortress.\"\n\nDana had already leapt inside with a wild grin on her face, while Rachel and Tashana entered the train more cautiously. John paused beside Irillith, looking into her violet eyes. \"We're talking about supplying enough power to move a train here Irillith. This isn't going to be like jump-starting a hover-car.\"\n\nIrillith gave him a coy smile. \"We'll just have to see if all that fun you've been having with your loving twins has been paying dividends...\"\n\nShe gestured for him to proceed inside and once he'd done so, she followed him into the train.\n\n\"Over here!\" Dana called out to them from the back of the carriage. \"I've found the engine, it just needs power.\"\n\nIrillith started walking over to join her, but John hesitated then darted back outside.\n\n\"Where are you going?\" Tashana asked him in surprise. \n\nHe glanced back at her curious face and smiled. \"To make it easier for her! There's no reason to haul the entire train...\"\n\nJohn jogged further along the platform until he came to the end of the generator carriage. Peering off the edge of the platform, he saw what appeared to be a coupling mechanism linking the front half with the back four carriages. He slipped off the edge, dropping down to the rails, then drew his sword and simply cleaved straight through the mechanism with a single blow. Sheathing the weapon again he pushed at the rear of the train, straining for a few seconds before he managed to shove it back a couple of inches. \n\n*Calara wishes she could see you moving a multi-ton train with your bare hands,* Alyssa told him with a smirk. *You know how excited she gets when you show off your bulging muscles...*\n\n*We're recording everything,* John reminded her, grinning at the thought. *Maybe the three of us can get together to watch the footage after this is all over?*\n\n*You're like the best Progenitor boyfriend ever!* Alyssa gushed playfully.\n\nSatisfied that there was nothing linking the two halves of the train together, he climbed up onto the platform, then jogged back towards the door. Suddenly light blazed out of the front of the dark-red train, the first three carriages all alive with power. There was a deep rumble as the train's drive system came to life a few seconds later.\n\n\"That was fucking awesome!\" Dana exclaimed with glee, just as he climbed aboard. \n\nJohn turned to look down the carriage and his eyes widened as he saw Irillith standing with both hands placed on the engine, lightning dancing from her fingertips as she provided power to the train. She turned to look his way, grinning in delight.\n\nGiving her a look of concern, John asked, \"Are you sure you can maintain that? I don't want you burning yourself out!\"\n\n\"I've grown much stronger!\" she exclaimed, her violet eyes glowing with excitement - both literally and figuratively in this case. \"I'm barely feeling this!\"\n\nDana rushed past him. \"I'll drive!\" she squealed, a huge grin on her face as she ran through the carriages to the driver's compartment at the front.\n\nRachel watched her lover rush to the front of the train, then shared a wry smile with him. \"You'd never believe we were the same age, would you?\"\n\n\"I wouldn't have either of you any other way,\" he said, patting her on the shoulder. Glancing back at Irillith, he continued, \"Are you alright here if I go and keep an eye on Dana?\"\n\n\"Go ahead, I'll be fine,\" she assured him, keeping her armoured hands firmly on the generator.\n\nThe look Rachel and Tashana gave him let him know at a glance that they planned to keep a careful watch on Irillith. He nodded to them gratefully, then jogged through the carriages to catch up with Dana. She was standing by the controls, bouncing up and down with excitement as she looked them over.\n\nJohn stopped at her side and briefly considered asking her to calm down, but her enthusiasm was so infectious, he couldn't resist smiling when she grinned at him.\n\n\"I've never driven a train before! I always wanted to!\" she exclaimed, reading through runic instructions on the wall, whilst pressing a number of buttons.\n\nA moment later the train lurched forward, then began to accelerate at a steady pace, accompanied by a quiet hum from the electric engine.\n\nJohn darted a glance at her. \"Don't push it too hard, I don't want Irillith to strain herself.\" \n\n\"Don't worry, I'll be a very responsible driver,\" Dana replied, her face deadly serious. She was only able to hold that expression for a few seconds before the grin crept onto her face again.\n\nShaking his head in amusement, John turned to look through the front window, watching as the train picked up speed. They were doing close to thirty miles-per-hour by the time they reached the end of the platform and he looked back down the train to check on the girls. Tashana gave him a thumbs-up, a proud smile on her face.\n\nRelaxing a little, he watched the train's progress as they left the platform, the train's headlights illuminating the dark and forbidding tunnel ahead of them. It ran straight as an arrow out of the station, stretching for at least a mile before it ended. A long way up ahead, he saw what appeared to be an orange flicker and something about that wavering light seemed very familiar.\n\n\"Why's it always got to be lava?!\" Dana groaned, looking up at him and rolling her eyes. \n\n*The Trankarans tap it for Geothermal energy,* Alyssa informed them both. *According to Calara, that's why Mulbharum was constructed here.* \n\nJohn smiled at the redhead beside him. \"Let's just hope there isn't a big dragon lurking down here like last time!\"\n\n\"Yeah, that's for damn sure!\" she wholeheartedly agreed.\n\nIt only took them a couple of minutes to reach the end of the long tunnel, Dana pushing forty by the time they entered the huge cavern beyond. The Trankarans had built a majestic bridge that ran straight through the vast canyon, cleverly excavating around this imposing structure as they had mined this quarry for stone. Once they'd dug out all the building materials they needed, they'd diverted a lava stream to fill the base of this huge chamber. \n\nAlong the right side of the underground quarry, a long tunnel had been dug from the wall, lined with columns and reinforced with the same grey metal that had been used back in the station. The amber glow from the lava field bathed that broad passageway with flickering light, shadows dancing across the tunnel from the thick columns that held up the ceiling. The dim illumination revealed the entrances to yawning side tunnels, which were spaced periodically along the quarry and had been used to extract the stone. \n\nHowever, that wasn't all the dancing molten glow revealed...\n\n\"Jesus! Look at all that!\" Dana gasped, pointing urgently to their right.\n\nJohn nodded, his smile dying the moment he'd spotted them.\n\nThere was movement along that stone colonnade and not just one or two creatures, but insectoid forces in their hundreds marched down that passage. It was hard to make out details in that dim, wavering light, but they all appeared to be heading in the same direction as the train. The sight of all those six-limbed creatures made John's skin crawl and he was unable to suppress a shiver.\n\n\"That's a good sign,\" he finally said, his eyes locked on the hulking, indistinct shapes plodding along in the shadows amongst the stream of smaller drones.\n\nDana snorted and looked up at him suspiciously as if he'd gone mad. \"You're not losing it are you? Have you seen how many of those fuckers are down there?!\"\n\n\"If the Kirrix are sending reinforcements, it probably means Niskera's forces are still holding out,\" he explained, trying to get an idea of the numbers in that chitinous horde.\n\n\"Oh right! Yeah, that makes sense,\" Dana said, nodding her understanding. She tapped a display on the blocky console. \"Three miles to go, then it's end of the line.\"\n\nJohn patted her on the shoulder, then glanced back down the train. \"Everyone okay back there?\"\n\n\"Irillith says she's fine!\" Tashana shouted back to him. \n\n*She's tiring a little, but she seems in good shape,* Alyssa informed him a second later, sounding surprised. *You really have been helping her grow! She was never this strong before.*\n\n*We talked about Irillith developing her anti-personnel abilities; I was just helping her get ready,* John explained, the hint of a smile on his face.\n\n*Uh-huh,* Alyssa replied, not sounding convinced in the slightest. *I hear all your thoughts remember. I know how much you enjoy seeing their lovely blue tummies stuffed full of your cum.*\n\n*Guilty as charged,* he replied with a telepathic grin, before his eyes suddenly widened in alarm.\n\nSickly green neutron bolts began flying towards them, the horde of Kirrix having spotted the train racing across the bridge. \n\n\"Take cover!\" he yelled back down the train. \"We've got incoming fire!\"\n\n***\n\nAlyssa watched as Calara focused the Nova Lance beam on the lead drone carrier. She shorted out their shields in a microsecond before the coruscating beam cored through the capital ship, melting an enormous glowing hole through the vessel from bow to stern. That brilliant shaft of energy winked out a second later, leaving only a faint trail of particles behind it. The motes of light linked the eviscerated Kirrix vessel to the Invictus, as if the lifeless derelict was mournfully pointing out its executioner. ",
        "The Kirrix were still continuing their futile efforts to chase the Invictus around the Alpha Tauri system. While their pursuit was proving hopeless, they had learned to spread out enough that Calara couldn't take down more than one drone carrier at a time. Still, there were only twelve left, the Latina methodically obliterating one every minute as soon as the Nova Lances had cooled again.\n\nFaye swung her legs underneath her as she sat on the edge of Calara's Tactical Console. The Kirrix had launched another huge swarm of drone ships, but it seemed they'd learned from another past mistake and hadn't attempted to engage the Invictus without capital ship support. As a result, the cute purple sprite was left with nothing to do except watch this deadly game of cat and mouse. Although in this game, there was a pack of sluggish cats and the lightning-fast mouse was packing a very big gun.\n\n\"Maybe once those new heatsinks are installed, you should ask Dana to reconfigure the Nova Lances to fire faster?\" Faye suggested, watching the heat slowly dissipating on the weapon loadout display.\n\nCalara was relaxing in her chair, twiddling her thumbs while she waited for the Nova Lances to ready themselves to fire again. \"That was my first thought too. I spoke to Dana about it and it's not just heat dissipation that's an issue. Apparently, we'd risk blowing power relays if we kept pumping that much power into the guns without giving them adequate recovery time. She mentioned something about phase-shifted impedance, but the explanation made my eyes glaze over, so I just took her word for it.\"\n\nFaye laughed and nodded. \"Yeah, that does make sense.\"\n\n\"How's John getting on?\" Calara asked her lover, sensing the blonde's sudden anxiety.\n\nAlyssa frowned, a worried look on her face. \"The shit just hit the fan! They got into a big gunfight!\"\n\nThe Nova Lances in the weapon loadout display shifted from red to green and Calara frowned at it in irritation as it chimed softly. \"Let me just kill another drone carrier, then tell me what's happening.\"\n\nNodding distractedly, Alyssa brought the Invictus around, lining the battlecruiser up with another randomly chosen Kirrix capital ship. By doing so, she shortened the life-expectancy of its ten-thousand insectoid crewmen to a little over four seconds.\n\n***\n\nSakura paced nervously behind the brutalist Trankaran office block, only stopping herself when she realised she was digging a gaping trench with the weight of the Valkyrie's feet. After checking the left avenue again and finding it clear, she carefully approached the right side, this time using the retro-thrusters on minimal power to counter some of the mech's weight. Sneaking a glance around the corner of the building, she crouched down so that she could maintain surveillance on the hive ship.\n\nUsing the scope built into the Valkyrie's targeting suite, she engaged its massive magnification to zoom right in on all the activity in front of the bloated Kirrix vessel. The insectoid race had been scouring the city for civilians, capturing them and herding them back towards the hive ship. Some of the Trankarans had resisted, and it seemed they'd been wounded with the excruciatingly painful neutron rifles as an example to the others. The injured were being ferried towards the hive ship on multi-legged sleds, the dozens of tiny limbs rippling like a centipede as it crossed the ground. The rest of the civilians were marched forward in long queues, herded towards an open door in the hive ship's hull by their Kirrix guards.\n\nUnable to resist staring at the awful sight, a quick burst of activity drew Sakura's attention. A Trankaran child tried to run towards a bulky male rolling past on one of the trollies, but she was swiftly intercepted by an adult female. Sakura zoomed in closer, unable to tear her eyes away from the dramatic scenes. The child was crying for what must have been her father, while her mother tried to comfort her, picking her up in her arms and rubbing her back. \n\nSakura felt her throat thickening up as she tried to swallow, knowing the terrible end awaiting these poor civilians. She pulled the targeting focus back a bit, while wiping away the tears welling in her eyes, then followed the line of civilians as it snaked closer to the hive ship. Frowning in confusion, she watched as the men and women were separated from younger children at gunpoint, Kirrix soldiers ushering away the smallest of the Trankarans.\n\n*Why would the Kirrix split up the civilians?* she asked Alyssa, wanting to know, but dreading the answer all the same. *They're taking away all the children...*\n\nThere was a lengthy pause before Alyssa replied. When she did, her voice sounded haunted. *They're too small for infestation...*\n\nSakura felt a sudden surge of relief, but Alyssa's tone sent icy fingers crawling up her spine. *What happens to them instead?* she asked in a deathly whisper, her eyes wide with fear as she waited for an answer.\n\n*The Kirrix don't waste anything... newly hatched grubs need to be fed...* Alyssa replied, her voice quiet and subdued.\n\nSakura's heart lurched in her chest and she swung the Valkyrie's focus back to the mother and her daughter. The Trankaran woman was speaking hurriedly to the little girl as they approached the point they'd be separated. Sakura instinctively knew what she was saying: \"Be brave, my little one. I love you so much!\"\n\nShe felt the desperate urge to intervene and save them, but knew that she might be risking billions more lives in the process. Sakura felt that she owed it to them to remember the horrific sacrifice these poor people were being forced to make. Unable to help herself, she zoomed in on the little girl, wanting to try and freeze the image of her face in her mind. \n\nWhat she saw there made Sakura's blood run cold. She'd seen that look before... \n\nIt felt like a lifetime ago; Adriana Tilvanoni begging Shinatobe to spare her two children while their home went up in flames around them. Adriana's son and daughter had looked on in horror as the merciless cyborg killer had butchered their mother. Shinatobe had then turned her blades on the son, the daughter looking up at her with a strange expression on her face. Behind her raw terror was a look of dreadful clarity. A brutal understanding that the world was not the wonderful place that she had always thought it was, protected from danger as she'd been by her mother's love. It was a stark realisation that the universe was, in fact, full of terrible monsters that preyed on the weak and helpless, sparing them no mercy.\n\nThe Trankaran girl had that look in her eyes now. It was a horrific, twisted piece of knowledge that no child should ever be exposed to.\n\n*Sakura...?* Alyssa asked in a low voice, an undercurrent of warning in her tone. *What are you doing?*\n\nThe Asian girl rose from her crouch, the huge mech copying her actions. \n\n*Exactly what John trained me to,* Sakura said, her voice full of cold fury as she stepped boldly into the street. *Be his instrument of Justice...*\n\nShe broke into a run, the Valkyrie leaping forward in huge strides as she charged down the street. The quad Photon Lasers on the mech's back swung around, lining up with the bloated ship of horrors that had been preying on the defenceless...\n\n***\n\n\"Oh fuck!\" Alyssa swore, darting a look of panic at Calara.\n\nThe Latina stared at her in alarm. \"What is it? What's wrong?\"\n\n\"It's Sakura, she's charging the hive ships!\" the blonde blurted out incredulously.\n\nFaye sat up sharply, her cute face set in a steely uncompromising mask. \"Bringing in the Raptor to provide covering fire...\"\n\nCalara darted a glance at the Tactical Map, her eyes widening as she gaped at the Kirrix fleet. \"Oh crap!\"\n\nAlyssa followed her lover's gaze and felt her heart lurch. The drone carriers had abandoned the pursuit of the Invictus and were now heading back towards Khalgron, the vast swarm of drone fighters racing ahead of them...\n\n***\n\nThe window in the third carriage imploded, shattered by the salvo of neutron bolts striking the side of the train. Irillith recoiled from the shower of reinforced glass fragments, but managed to keep her hands squarely on the train's engine.\n\nJohn grabbed Dana's shoulder and brought her down to a crouch. \"Keep driving the train, but stay in cover,\" he said, his tone firm.\n\nShe nodded, not taking her eyes off the control panel, and patted him on the hand. \"Go! I've got this.\"\n\nHe nodded and ran back through the second carriage, his eyes widening when he saw a flurry of neutron bolts flashing through the carriage at the end of the train. \"Is anyone hurt?!\"\n\nTashana had ducked down into cover and she poked her head around the door frame, her twin pistols held in her hands. \"We're good. Return fire?\" \n\nHe met her furious gaze and nodded. \"From this carriage, not that one. The Kirrix are spraying the whole train at the moment, but we want to encourage them to aim for us, not accidentally hit Dana or Irillith!\"\n\nShe quickly nodded her understanding, scampering past him as she hugged the right wall and peeked over the window frame to get a better view of their attackers. She ducked a second later, just as a spray of neutron bolts struck the second carriage, one of them smashing the window. Tashana recovered quickly, rising up and taking careful aim with her Quantum pistols before firing back. John couldn't see where her shots landed from where he stood by the door, but he knew just how deadly she was with those guns. Just as he was about to join her, Rachel strode past him carrying the Pulse Cannon.\n\n\"Irillith was a bit busy... she said I could have a go!\" Rachel explained, an excited gleam in her eyes.\n\nShe stood brazenly in front of the window and placed an armoured boot on the seat against the wall. Tilting up the elegant support weapon, her eyes narrowed as she pulled the trigger, lighting up the interior of the carriage with strobing blue light. \n\nJohn dashed over to the wall on her left, hugging the support strut. \"Rachel! Get into cover!\" he yelled at her in alarm.\n\nHer stormy grey eyes flicked his way for a second, showing confusion at his stern command. \"Why? I'm still fully shielded!\"\n\nHe blinked in surprise for a moment, his lifetime of combat experience suddenly feeling slightly out-of-kilter with the wondrous new tech that Dana had developed. Although Rachel's aggressive stance went against every bit of training he'd received, he realised she wasn't in any immediate danger, at least not yet. He raised his Quantum rifle and aimed down at the Kirrix forces, watching them scurrying along the passage set into the canyon wall opposite the bridge. \n\nSpotting a stationary Kirrix trooper who was firing a neutron rifle at the passing train, John lined up a shot with its chest and gently squeezed the trigger. The hyper-accelerated slug ripped across the crevasse, leaving a blue contrail in its wake, the slug hitting the insectoid soldier square in the thorax. While the Kirrix soldiers were tough and resilient, the shot still managed to utterly destroy its upper torso, sending the head and arms flying in a shower of sticky green blood. Unbeknown to John, the bullet continued onwards, hitting a second soldier deeper within that throng. The round struck it in the femur, severing the limb in another explosion of green ichor.\n\nJohn scanned the gaps in the columns, searching for more targets. He spotted one of the larger overseer bugs moving amongst the horde and remembering Rachel's theory about the hive-mind. Placing the crosshairs on its seven-foot-tall body, he lifted the Quantum rifle's barrel a fraction to sight on its more ornate chitinous helmet. Just as he was about to pull the trigger and decapitate the ugly insect, a savage burst of blue laser bolts swept across his target, cutting the overseer in half. He lowered his rifle and watched in morbid fascination as Rachel strafed the gallery with an unending hail of laser fire. \n\nWhat had once been a relatively ordered attack by regimented Kirrix troops was reduced to absolute bedlam. Legless soldiers thrashed on the floor, while one that had lost an arm tried to fire back one-handed, the shots sailing harmlessly wide. Any hit in the thorax practically exploded, half-melted body parts sailing through the air and hitting their fellow soldiers, until the metal floor was littered with twitching insectoid limbs.\n\nRachel turned the gallery into a charnel house, the bright blue storm of energy bolts scything through everything in its path. Unfortunately, the Pulse Cannon proved equally devastating to the reinforced columns, carving out large chunks of metal wherever the laser bolts hit. One was chopped in half, Rachel's indiscriminate fire striking it with several shots that blew the pillar apart. \n\nAfter suppressing the Kirrix fire, she snatched a glance at him and grinned, a look of elation on her face. \"I know what Dana's getting me for my birthday!\" she gushed, glancing down at the huge gun in her arms.\n\nJohn laughed then pointed to the disemboweled column. \"Better be careful with the collateral damage. Shooting too many of them might cause a cave-in that takes us with it!\"\n\nShe nodded, taking a deep breath and reining in her wild enthusiasm. When Rachel resumed her fire, she was much more careful this time, aiming short controlled bursts between the pillars. John took aim again, but ignored the smaller Kirrix soldiers and searched for one of the much larger creatures instead. They were at least triple the size of an overseer, making them much too large to fit between the columns and join in the gunfight. Instead, they ignored it and continued plodding towards the fortress. \n\nHe started tracking one of the hulking six-limbed monsters, watching the reticle predict its path with the targeting assist that Dana had incorporated into the armour's HUD. Waiting patiently for the creature to clear one of the pillars, John kept the reticle centred on its enormous abdomen and gently squeezed the trigger. The Quantum rifle barked, launching the round at incredible velocity towards his target. There was a gout of green blood as the slug punched into the beast's hide, but it didn't even flinch at the impact.\n\nTashana noticed his shot and when she turned and saw the look of surprise on his face, she shouted over to him, \"I've tried too! I hit one of them eight times and the bastard's still going!\"\n\nThe hail of neutron bolts from the Kirrix intensified, peppering the side of the train and making the carriage vibrate with scores of hits. One of those sickly-green energy blasts hit Rachel in the chest, or at least it would have done if her shield hadn't flared a bright blue, causing the defensive bubble to ripple with the impact. She ducked back down below the window ledge and crouched beside the seat.\n\n\"Thank you, Dana,\" she said with a grin, completely unscathed by the hit.\n\nJohn was about to reply, when a deafening explosion rocked the carriage, the train squealing as the right side was lifted clear of the magnetic rails. He only just managed to grab the window frame in time, clamping hold with his left hand to avoid being thrown backwards. Rachel was knocked from her feet, skidding across the carriage and barely managing to hang onto the Pulse Cannon. Tashana staggered back a couple of steps but was able to retain her balance, steadying herself by the doorframe as she threw a frantic glance at her sister. The train righted itself with a booming crash, landing on the rails again and sending bone-rattling tremors through the carriages.\n\n\"What the fuck was that?!\" Dana cried out, staring wild-eyed over her shoulder at her passengers.\n\nDoing his best to ignore the barrage of neutron bolts being fired up at them from the pillar-lined passageway across the gorge, John quickly searched through the heaving mass of insectoid creatures. A few seconds later there was a whistling sound and another missile raced overhead, leaving a billowing grey plume behind it. The heavy thump of an explosion followed shortly afterwards as the missile struck the ceiling. He followed that trail back to its source and spotted a burly overseer with a broad-muzzled heavy weapon on its shoulder.\n\n\"Bigger ones with missile launchers!\" he yelled, pointing frantically towards the tunnel across the ravine. \"Not at the ledge, a few metres back!\"\n\nRachel and Tashana nodded, taking up firing positions at the windows again. John lined up a shot on the Overseer he'd spotted, knowing a solid hit at centre mass might not kill it outright, but would definitely stop it shooting at them. A millisecond before he pulled the trigger, it was hit twice in the thorax, the rounds from Tashana's twin pistols striking it at the same time. Smashing dinner-plate sized holes through its torso, the Overseer crumpled in on itself, its upper body utterly destroyed.\n\nSorely missing Alyssa's uncanny ability to coordinate the girls' target selection, John quickly found another of the oversized Kirrix troopers. He wasted no time in snapping off a couple of rounds, caving in the Overseer's head and splattering the surrounding troops in green blood. Pausing for a second to study the nearby soldiers, he couldn't see any obvious signs of distress or confusion, which seemed to debunk Rachel's theory.\n\nAs the train surged closer to their destination, the three of them continued to pick off any Kirrix equipped with missile launchers that they could see. The train was being struck by a storm of neutron bolts now, some of which would have struck John's armour if not for its protective field. He fired back at another target and his rifle's ammo-counter display beeped, warning him he was out of ammo. Ducking back behind the wall he took the opportunity to glance at his HUD, checking the shield-strength indicator and saw that it'd changed status from green to yellow. He ejected his spent magazine then slapped in a fresh one, reloading for the first time this mission. Knowing this might be a long haul, he'd been very sparing with his shooting, sticking to single, well-aimed shots so far.\n\nThe sound of another huge explosion echoed through the carriage, but this blast sounded much less severe than the first, only causing the carriage to vibrate this time. John relaxed, thinking that the missile must have sailed wide and hit the opposite wall. That explosion was shortly followed by a second, then a third, the vibration effect on the carriage getting more severe with each one, until the train started swaying ominously. \n\nDana suddenly burst through to their carriage, her face white as a sheet as she screamed, \"They're shooting out the bridge!\"\n\nThere was another thunderous explosion and a violent jolt, then John's stomach lurched as the train rushed headlong off the collapsing causeway. They toppled over the edge of the shattered bridge, the train plunging headlong towards the lake of molten lava below.\n\n***\n\nThe Valkyrie barrelled down the avenue, the ground trembling with each pounding footfall. Sakura focused intently on the active scan results superimposed over the Kirrix hive ship, looking for a very specific location on its bloated hull. Aiming at a bulbous section towards the rear of the vessel, she locked on with her targeting reticle, then clenched her trigger fingers, opening fire with the full set of quad Photon Lasers. \n\nFully aware of the destruction the Invictus was wreaking on the Kirrix ships in the system, the hive ship had its shields up as a precaution. That did them little good against the blazing ferocity of the Valkyrie's assault. The four pulsed beams blew out their shields in an instant, then lashed into the ochre armour, shearing off the port power distributor and leaving nothing behind except a glowing disc on the side of the vessel. That side of the hive ship was plunged into darkness as all power was cut, also knocking out the searchlights pointed at the streets. ",
        "Sakura strafed her fire into the rear of the vessel, destroying all three of the huge inert engines and rocking the bulky cruiser with a series of fiery explosions. When the stream of pulsed beams finally cut out, the hive ship was still intact, but now it couldn't escape and was incapable of firing any weapons at the civilians - just as she'd planned all along.\n\nGlancing at the Pulse Cannons in her weapon loadout, Sakura selected them and activated target-selection mode. Focusing on one of the Kirrix troopers, she locked it in as the target, then activated auto-fire. The Valkyrie's shoulder mounted energy weapons burst into life, sending long trails of blue laser bolts into the reeling Kirrix ground troops. Leaping over the cowering lines of stunned Trankaran civilians, she landed on a squad of insectoid soldiers, squashing them flat under the enormous weight of the mech as it thumped into the ground. \n\nHundreds of black compound eyes tracked this white titan in astonishment, the insectoid forces caught completely by surprise by Sakura's furious charge. As the mech's shoulder-mounted Pulse Cannons continued to carve their way through the invaders, the Kirrix finally started to react, raising their neutron rifles to fire back and skittering to cover. A fusillade of green bolts started to strike home against the Valkyrie's shield, creating scores of tiny ripples in its shimmering surface.\n\nThere was a piercing, high-pitched scream as the night's sky was suddenly lit up by another brilliant azure flash. The biggest group of bug soldiers was incinerated by a painfully bright stream of Photon Laser beams, leaving nothing behind except wide glowing trenches in the ground. That opening salvo was joined by a curtain of blue laser bolts as six more Pulse Cannons tore into the Kirrix ranks. A gleaming white gunship roared overhead a few seconds later, its engines blazing a bright orange against the night sky. The Raptor banked hard, continuing to punish the Kirrix forces with its turreted weapons as it circled the plaza.\n\nThe Trankaran prisoners shook off their shock and pounced on the now dramatically outnumbered Kirrix guards. The rockmen were incredibly strong and ripped them apart in savage retribution, green blood gouting in the air as the unsuspecting insectoid troops were torn limb from limb. The civilians began grabbing neutron rifles from the fallen Kirrix, using the invaders' own terrible weapons against the few surviving soldiers.\n\nSakura nodded with satisfaction and sprinted onwards into the night. She didn't pause to check on the little girl she knew she'd just saved, trusting in the freed Trankaran civilians to keep her safe. It wasn't that she didn't want to, she simply didn't have time, not when there were another twenty-nine hive ships to take down... \n\n***\n\n\"Alright Faye, get ready with the Photon Lasers!\" Calara exclaimed, as the Invictus hurtled towards the loose formation of Kirrix capital ships. Racing ahead of them were the dense swarm of drone fighters that were rushing towards Khalgron to aid the hive ships. \n\n\"Do you want me to shoot at the drones too?\" Faye asked, her expression pensive.\n\nThe Latina shook her head. \"No! I'll try to take out as many of the fighters as I can with the Nova Lances, but I'm only going to get one shot. Then we'll be on top of the carriers and it's going to get really nasty! You focus on hitting the capital ships; we can't let them get near the planet...\"\n\nThe purple sprite nodded her understanding. She glanced at the Tactical Map, eyes locking onto the closest of the segmented Kirrix drone carriers. \"Should I focus fire on that first one?\"\n\n\"Start with that ship, but don't go for damage, just knock out their shields. Then I can bring the Heavy Cannons, Gauss Cannons, and Singularity Drivers to bear!\" Calara explained, taking a firm grip of her weapon controls.\n\n\"Alright, will do!\" Faye eagerly agreed.\n\nAlyssa stayed silent during this exchange, too fearful to speak. Her heart pounded in her chest as she listened to John and the girls down on Khalgron, living every second with them as the train sailed out into the air, then plunged down towards the lava below...\n\n*** \n\nTime seemed to slow for John as the train lurched into the abyss, his heart pounding as his eyes locked on to Dana's terrified face. This wasn't just a trick of the mind though; he'd activated his psychic speed and was now moving many times faster than the scared teenager. She started to stumble back into the driver's cab as the carriage upended, the train going from horizontal to vertical in a matter of seconds. Using a firm grip on the window ledge beside him, he launched himself down the carriage, letting go of his Quantum rifle as he stretched out his arm to grab her. \n\nThe redhead's eyes widened as she fell backwards in slow motion, watching John as he rushed towards her in a blur. He soared down through the now-vertical train to catch the falling girl, grabbing her around the waist and watching her suddenly speed up as soon as she touched him.\n\n\"Flight mode!\" he shouted at her, landing on the wall at the end of carriage.\n\nHolding his other hand palm-upwards at the side of the falling train, he gathered his will and unleashed a wave of force. The telekinetic surge blasted through the side of the train, ripping the entire wall clear of the carriage. Dana only had a split second to activate her Paragon suit's flight mode, but she obeyed him instantly, enabling her armour's flight capabilities. John felt the distinctive tremor through her suit as she activated the thruster on her back and without pausing, hurled her skyward through the huge hole he'd just made in the carriage.\n\nDana slowed again the second she left his embrace, her face revealing her shock as she was launched up and out of the train. John squatted down then kicked off from the end wall, activating flight mode himself as he leapt off the metal surface. Aiming for the other two girls in the second carriage with him, he caught his falling Quantum rifle as he flew upwards, aiming an outstretched arm through the shoulder strap and letting it swing around onto his back.\n\nNot taking any chances, he grabbed Rachel and Tashana around the waist as he passed them, the shocked girls having enough presence of mind to keep a firm hold of their guns. They matched his accelerated speed as he caught hold of them, then quickly followed his instruction to activate the flight mode on their suits. He threw them clear of the doomed train, which meant there was just one girl left to save. \n\nWhen John soared into the last carriage, he found Irillith waiting for him. The retro-thruster on her back already glowing as she turned away from the engine, electricity still coursing around her hands. With his left arm hooked to catch her, he aimed his right at the rear wall, pounding it with a telekinetic blast wave that tore it from the carriage. He grabbed Irillith and the pair of them soared out of the falling train.\n\nThe ravaged Trankaran transport dropped at a glacial pace, before the front cab plunged into the molten lake, spraying geysers of lava outwards with the tremendous impact. The remaining two carriages collided together with a booming crash, before the vertical train toppled sideways with the horrific squeal of tearing metal and flopped into the bubbling lava. John felt Irillith tremble in his arms, the Maliri girl having watched the entire crash with wide-eyes. She met his gaze for a second, nodding briefly in gratitude for the timely rescue. \n\nAs they sailed through the air, John was able to clearly see the full extent of the damage the bridge had sustained. The Kirrix had given up attempting to hit the fast-moving train, especially with John and the girls sniping any Overseers they could see. Instead, the Overseers further ahead of them had demolished what had once been an impressive example of Trankaran architecture with several missile strikes.\n\nAt least fifty metres of the bridge had crumbled into the lava, but only a few hundred metres beyond that rift, John could see their destination. The fortress might have been an imposing edifice at one time, constructed in the brutalist style the Trankarans favoured. Now however, it was battered beyond belief, with almost every square foot of its outer walls revealing battle-damage of some kind. \n\nThe leftmost tower was still mostly intact, but there were deep rents in the rest of the structure, revealing just how thick the walls actually were. At the centre, what must have once been an imposing gatehouse had been reduced to rubble after being blown to pieces by a huge explosion. The Kirrix had bored through that broken ruin to continue their assault and the insectoid horde was now running into that yawning tunnel.\n\nThat is, the ones that hadn't stopped to shoot at John and the girls. Neutron bolts whipped through the air around them, the Kirrix having trouble hitting the fast and nimble Paragon suits as they jinked towards the fortress. The plateau itself was heaped with slain Kirrix, the corpses ample proof of the spirited defence the Trankarans had mustered.\n\nActivating the internal comm system in his Paragon suit, John said, \"We'll go in through the front door! I want the four of you to land by the tower on the left then start clearing the Kirrix.\"\n\nFour worried faces appeared in his Helmet HUD as the girls acknowledged his order.\n\n\"Got it,\" Tashana replied curtly, taking point as she soared over to the left side of the plateau outside Hol Darim Fortress.\n\nRachel glanced back at him and Irillith. \"I've got the Pulse Cannon for you!\"\n\n\"On my way!\" the Maliri girl replied, sounding eager to get her hands on her weapon again.\n\nJohn released his firm grip around Irillith's waist and watched her race towards their companions, thrusters flaring on her suit to propel her through the air.\n\nDana's holographic face was the last to appear. \"Where are you off to?\" she asked him in alarm.\n\n\"I'll keep the heat off you while you regroup,\" he replied, heading straight towards the centre of the swarm. \n\nThere were at least a dozen Kirrix soldiers shooting at him near the tunnel, with many more lining the edge of the ravine to take up firing positions. Behind them, one of the hulking Kirrix shock troops emerged from the column-lined tunnel, letting John get a good look at it for the first time. Standing over twenty feet high, the terrifying Kirrix Juggernaut resembled a praying mantis, with a pair of hooked scythe-like claws. However, this was no spindly, puny creature; the Juggernaut had all the armoured bulk of a stag beetle, with glossy black plates covering every inch of its heavily reinforced monstrous bulk.\n\nJohn soared through the air towards the platform, holding his Quantum rifle with his right hand, while raising his left and aiming at the insect soldiers. Focusing his willpower, he summoned up a broad wall of force and blasted it into the mass of Kirrix, sending scores of the four-legged creatures flying backwards. They rebounded off the rear wall, then slid across the platform, lying stunned by the impact. The Juggernaut braced itself as it was buffeted by the psychic attack, standing firm while its smaller comrades were knocked sprawling across the ledge.\n\n\"Let's see how tough you really are,\" John muttered, landing on the cleared platform and squaring off with the insectoid beast. \n\nThe Juggernaut lowered its head and charged, massive legs grinding into the ground to give it extra traction. John aimed for its glistening black thorax and held down the trigger, firing round after round into the massive insectoid horror. Hyper-accelerated rounds smashed into its chest, cratering its armour and sending gouts of viscous green ichor spraying out its back, but the monster shrugged off the wounds as if they were merely pinpricks. His eyes widened as it kept on coming, even though he could see the far wall through the enormous ragged hole through its torso.\n\nEngaging his psychic speed once again, time seemed to slow as the rampaging onyx beast roared its defiance. It was less than five metres away and he could see the frenzied look in its inhuman eyes as it jerked back its enormous sword-like forelimbs in preparation to strike. He lifted the muzzle of his rifle with his finger still clamped down on the trigger, the bullets streaking out to carve a bloody trench through the Juggernaut's upper body. \n\nA slug hit it in the right side of the head, knocking the massive black skull backwards with the impact. The armour here was even tougher and while the slug penetrated, the entry wound was no larger than his fist. He continued to pump bullets into its head but it kept on coming, even after being hit several times. The right side of its face was nothing more than a shattered crater, and its remaining mandible quivered with anticipation as it lunged forward with its mammoth serrated blades.\n\nDropping his rifle, John smoothly drew his two-handed sword. Darting to his left, he sidestepped the Kirrix horror like a matador dancing with an enraged bull. The sparkling white blade whistled through the air, and he hacked off its huge sword arm at the elbow, before bringing the sword down in a mighty blow that cleaved straight through its rear leg. It stumbled over, losing its balance as it was suddenly divested of a big chunk of its bodyweight, before skidding across the ground with the momentum of its charge.\n\nThe platform lit up with a flashing blue haze and his ears rang with the booming retorts of Quantum weapons being fired. The girls unloaded on the Juggernaut as it tried to get up, making it twitch violently as it was struck by dozens of slugs and laser bolts. Tashana aimed for its head, her brace of pistols pumping round after round into its skull, until it was reduced to a green pulpy mass. With a shuddering wheeze the Kirrix beast finally collapsed, green blood pouring from scores of wounds and pooling around the mutilated corpse.\n\n\"Really fucking tough!\" Dana breathed, staring at the Juggernaut in disbelief.\n\nJohn could only nod in agreement as he sheathed his sword and bent down to pick up his rifle. He loaded a fresh magazine, then glanced to his left, where the prone Kirrix soldiers were starting to clamber to their feet. \"Irillith, clear the platform, Tashana cover her. Dana, Rachel, you're with me.\" He glanced along the gallery overlooking the lava lake and saw several more Juggernauts a good way off in the distance, stomping inexorably towards them amongst the teeming horde of Kirrix soldiers. \"Don't try and fight those big fuckers, retreat into the fortress when they get close.\"\n\nIrillith strode past him to take a firing position by the slain Juggernaut. \"Oh yeah...\" she growled, a wicked smile on her face.\n\nTashana nodded to him as she passed, her hands deftly loading fresh mags into both her pistols as she said, \"I'll keep her safe.\"\n\nLevelling the Pulse Cannon at the incapacitated Kirrix forces, Irillith hit them with a sustained burst of laser fire. The closest soldier was hit in the abdomen and the thorax, the laser bolts melting huge holes through everything they struck. Both of its right legs were melted clean through and as it toppled over to its side, a third blue bolt struck it in the throat, instantly decapitating it and leaving a glowing furrow where its neck used to be. Their carapace armour was no match for the devastating power of this weapon, with Kirrix troopers slashed in half by the unremitting hail of sapphire laser bolts. \n\nIrillith methodically swept the plateau clear, hitting anything that moved with multiple shots. The sound of shrill death shrieks grew to a cacophony and the floor was soon carpeted with melted, glowing limbs as she added scores more twitching corpses to the piles of Kirrix dead. Tashana hovered protectively by her side, wary for the slightest hint of danger that might threaten her sister.\n\nJohn jogged towards the huge tunnel in the fortress wall and headed inside, rifle raised cautiously as he checked for Kirrix forces. The wall was five metres thick and he marvelled at the scale of this Trankaran defensive emplacement. Dana and Rachel were on his heel, running to keep up with him as they entered Hol Darim Fortress.\n\nThe tunnel led through to a courtyard that had been the scene of fierce fighting. They had to clamber over the horribly mangled corpse of another Juggernaut, which had been blown to pieces in the explosion that had destroyed the gatehouse. There were scores of Kirrix corpses here too, as well as the bodies of several armoured Trankarans. Up ahead was a second gatehouse which had been destroyed in the same manner as the first, the detonation triggering a severe cave-in. It looked like the Kirrix had then been forced to dig through this second obstruction, burrowing a hole through the reinforced ferrocrete rubble.\n\nJohn led the way through and paused as he saw what was on the other side. There was a yawning chasm beyond, with a relatively narrow, three-metre wide causeway leading to the ledge opposite. Beyond that was another fortress wall, which looked to be largely intact this time. Moving in single file, they jogged across the platform and as they drew closer, it became apparent that the enormous gatehouse doors had been smashed in. Down in the ravine to either side of the causeway were massive piles of Kirrix dead, including several Juggernauts which had taken terrible damage as they tried to batter their way inside. \n\n\"This was one hell of a killing ground...\" John muttered, impressed by the lethality of the Trankarans robust defences.\n\n\"The Kirrix must have lost hundreds trying to storm this place,\" Rachel agreed, shocked at the extent of the carnage.\n\nJogging up to the sundered gatehouse, John slowed his pace to a more cautious walk. \"Movement up ahead.\"\n\nThere was another open courtyard, this one also stacked high with Kirrix corpses as well as lots of dead Trankarans. It looked like there'd been an intense firefight here, with many of the rockmen gunned down as they attempted to retreat to the central fortress. A pitched battle still raged on the far side, with scores of Kirrix soldiers exchanging fire with a beleaguered handful of Trankarans up on the fortified parapet. Two more Juggernauts were smashing into a towering set of crumpled metal doors, attempting to bludgeon their way into the fortress.\n\n\"Leave the big ones to me, you two clear out the trash,\" John said to the girls, drawing his sword and breaking into a run.\n\n***\n\nSakura's almond eyes narrowed in anger as she spotted another of the disgusting parasitical hive ships looming over the outskirts of Mulbharum. Her arms and legs moved in a blur as she sprinted down the avenue, the Valkyrie's upgrade with frictionless joints letting it match her psychically enhanced speed. She was methodically cleansing the Kirrix infestation as she tore across the city, crippling one hive ship after another and massacring the insectoid guards, freeing the civilians that were being herded into those ships. This was the tenth such target and she vaulted over a squat Trankaran building as she locked onto the rear of the Kirrix vessel with her Photon Lasers. \n\nFaye's image appeared beside her inside the Valkyrie's cockpit, a look of concern on her elfin face. \"I'm about to engage the eleventh hive ship as you requested, but wouldn't it be better if I stayed with you to provide cover?\"\n\n\"We can't risk any of these monsters escaping!\" Sakura hissed, clenching her trigger fingers. \"You scanned them yourself, they've already got loads of Trankarans on board!\"\n\nThe four triple-barrelled laser weapons opened fire, blasting through the Kirrix shield as she carved those deadly blue beams through the engine housing at the rear of the alien cruiser. Ochre armour plating melted away as Sakura cut a glowing trench in an inverted \"V\" across the rear of the ship. One of the engines exploded in a bright explosion that lit up the night's sky, while the other two were sheared in half, big chunks of the Kirrix vessel crashing to the ground with a deafening rumble."
    ],
    "authorname": "Tefler",
    "tags": [
        "teenager",
        "18 year old",
        "cum inflation",
        "group sex",
        "shapeshifter",
        "psychic",
        "watch those corners",
        "kirrix",
        "space battles",
        "progenitor"
    ],
    "category": "Sci-Fi & Fantasy",
    "url": "https://www.literotica.com/s/three-square-meals-ch-90"
}