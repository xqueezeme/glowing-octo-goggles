{
    "title": "Toys are Us Ch. 04",
    "pages": [
        "Brenda awoke with a slightly fuzzy mind but feeling wonderful. She rolled over on her back and stretched her arms high over her head, with her legs straight and her toes pointed tightly at the foot of the bed. Twisting her back from side to side, she sighed as muscles eased and several joints in her lower back popped. \n\nShe sat up in bed, the fuzziness was fading, and she smiled for no other reason except she felt so good. She sat there for a moment as memories of the living room chair and Ron slowly floated up in her mind. She felt herself blush as she remembered Ron lifting and spreading her legs. \n\nAnd then she was scrambling off the bed and looking for her husband. Memories of Ron licking her clit and shoving the new toy in her pussy made her almost miss a step as she ran into the kitchen. Ron naked, sitting at the breakfast table drew her up short. That and the memories of the monster from the dark and the orgasms he had brought.\n\n\"Well, hello there gorgeous, welcome back to the world of the living.\" Ron said with a big smile.\n\n\"How.... Uh....\" Brenda started to say and then she was trying to figure out how she had gotten in bed. The last she remembered she had been in the chair.\n\n\"I put you to bed after you passed out on me.\" Ron said as though he had read her mind.\n\n\"Oh, ok.\" Brenda whispered as an embarrassed flush climbed her chest to her face.\n\n\"You sacred the heck out of me. I thought I had killed you with that toy, there for a few seconds.\"\n\nBrenda took two quick steps and was in Ron's lap kissing him passionately. After a second of surprise, Ron was kissing her back equally as passionately. Brenda broke the kiss, looked deep into Ron's eyes, and then went back to kissing him.\n\nThe phone ringing broke the kiss. They both were grinning and looking deep into each other's eyes. \"I'd better answer that.\" Brenda whispered.\n\nRon nodded and she laughed as she jumped up to run across the living room and scoop up the phone. \n\n\"Hello.\" She said with mirth still in her voice.\n\n\"You sound happy, so I guess things are all right over there.\" Rose said from the receiver.\n\n\"Things are wonderful!\" Brenda replied happily. \"And I have you to thank for it.\"\n\nA sigh of relief came from the phone and Rose said, \"Thank God, I've been worried. I thought I did the right thing but you never know.\"\n\n\"Hey, how about me? Don't I get any thanks?\" Ron asked loudly from the breakfast table.\n\n\"You did good also, except for knocking me out.\" Brenda replied with a laugh.\n\n\"He knocked you out?\" Rose asked sharply.\n\nBrenda laughed again at Rose's tone. \"Not that way silly, with a big O or two or three and one with a big club. The orgasm, not Ron, I passed out.\"\n\nRose laughed and yelled, \"You go girl!\" \n\n\"Go? I went! I ended up asleep in bed, that is.\" \n\n\"Poor, poor baby.\" Rose replied with a chuckle. \"I love the one's that knock my socks off. They are just so yummy.\"\n\n\"I'm not sure yummy is the word I'd use but they sure are mind blowing.\" Brenda confessed.\n\nRose laughed. \"You'll get used to them in time and they only get better. Speaking of which, you've made me horny, so I'm off to find hubby and rape him. Why don't you do the same?\"\n\n\"I just might, only I'll look for my hubby instead of yours.\" Brenda said turning to look at Ron over her shoulder. \"Have fun.\" She called out as she hung up the phone.\n\n\"You might what?\" Ron asked as she walked toward him swiveling her hips suggestively.\n\nShe walked up and looked down at his hard manhood. She grinned and knelt down beside his chair. Her hand lifted his shaft away from his belly and she licked her lips. She looked up into his eyes and licked her lips again.\n\n\"I might just rape my husband.\" She whispered.\n\nRon chuckled and said, \"You can't rape the willing.\" And then he groaned loudly as Brenda's hot mouth descended over the head of his dick.\n\nBrenda swirled her tongue around the spongy head and flicked the groove in the under part of the flange. Ron groaned loudly and stiffened up. She quickly took him out of her mouth and looked up at his face. His eyes were closed and his mouth was open, a look of pure bliss on his face.\n\nBrenda wondered if that was how her face looked when she was deep in and orgasm. She asked Ron about it. He opened his eyes and smiled down at her. \n\n\"You look beautiful when you're having an orgasm. You have this almost pained look on your face but the pleasure shines through. Not to mention the way your hips move and your stomach muscles twitch and jerk. It's an awesome sight.\" Ron whispered slowly and sincerely.\n\n\"I love the look you had on your face when I looked up from sucking on you. It was... I don't know... blissful was the first word that came to my mind.\"\n\n\"It sure felt good, that's for sure.\" Ron whispered and then placed his hand on the back of her head and guided it back to the head of his dick. \n\nBrenda giggled and whispered, \"I think you liked what I was doing.\"\n\n\"Whatever gave you that idea?\" He asked and then groaned as her tongue swirled over the sensitive head.\n\n\"That groan for one thing and the clear little drop of fluid on the tip that tastes so yummy.\" Brenda replied.\n\nRon's hand pressed a little harder as he said, \"Don't talk with your mouth full.\" \n\nBrenda giggled and sucked the head back into her mouth, fluttering her tongue madly over it. Ron groaned and then sighed deeply. \n\n\"Oh yes!\" He said loudly flexing his hips, as much as he could in a sitting position.\n\nBrenda tried to grin but couldn't so she dropped her head and sucked most of his manhood into her mouth, fluttering her tongue along the shaft as she did. She sucked in and raised her head slowly, her tongue still working over the bottom of his shaft. \n\nRon gave a loud yell and came with a rush and a gush. Brenda had her first full taste of him, which made her groan and tense up her thighs and sex as his flavor flooded her mouth. She bobbed her head down and back up again as she swallowed without thought. She could sense an orgasm of her own just out of reach.\n\nBrenda moaned loudly around Ron's dick and sucked even more of him in as her head went down again. Ron groaned and then gasped as her nose touched his pubic hair and he realized she had swallowed him completely. \n\nHer whimpering moan around the head of his dick was almost painful but her tongue around the base of his shaft felt exquisite. Brenda began to bob her head up and down along his full shaft and Ron groaned loudly. He should have been soft by now but that wasn't happening.\n\nBrenda had his whole manhood in her mouth and that excited her almost as much as his taste. The brush of his hair on her nose had made her moan and clench up her sex even harder. Her own orgasm was so close. With abandon, she fucked him with her mouth. \n\nShe wanted to stand up and straddle him, to impale herself on his manhood but she couldn't wait and didn't want to let him go. Her body shook with frustration and the nearness of her orgasm. Her mind was filled with his taste, his smell, the feel of his dick in her mouth as her head bobbed up and down.\n\nSuddenly the flavor intensified and just as suddenly her orgasm washed over her. She gave a muffled yell as her hips jerked and she swallowed Ron whole to the base. His taste was strong and somewhere in the back of her mind she marveled that he was coming again.\n\nRon was moaning and flexing his hips as visions of his beautiful wife's face full of his dick floated before his eyes. He had never loved her more than he did right at that moment. He remembered her coming as his tongue licked her and he groaned even louder. \n\n*****\n\nRon sat with his head on his arms on the table and Brenda was sitting on the floor with her head against Ron's thigh. Neither of them had the energy to move, much less get up. Ron felt completely drained but incredibly happy.\n\nBrenda whimpered softly and then groaned. \"Are we dead yet?\" She asked in a hoarse whisper.\n\n\"I don't think so.\" Ron answered slowly. \"But we should be, or at least I should be.\"\n\nBrenda giggled and nodded. \"You went boom twice. I went boom big time when you did the second time.\"\n\n\"Well, that's two new things, I just learned. A man can come twice and a woman can come from sucking a dick.\" Ron whispered and then chuckled.\n\nBrenda nodded her head and sighed deeply. \"Education is so much fun.\" She said with a short sharp giggle.\n\n\"Isn't it though?\" Ron replied sitting upright and yawning. \"Now I'm the one that needs a nap.\"\n\n\"I'd join you but then I wouldn't sleep tonight.\"\n\nRon laughed and whispered, \"Who said I was going to let you sleep tonight. I still haven't seen that first toy or you playing with yourself. I still have a lot to learn.\"\n\nBrenda giggled and whispered, \"Your education is likely to kill me.\"\n\n\"Funny, I've never seen orgasms listed as a cause of death in the obituaries.\"\n\nThey both laughed as Ron stood and then helped his wife to her feet. Once on her feet, Brenda said, \"Well, I might be the first.\" And then she yawned. \"Come on and we'll tuck each other in.\"\n\n*****\n\nBrenda woke up and had to go pee really bad. As she slipped off the bed her stomach growled. She looked at the clock and was startled to find it was five in the evening. She had slept most of the day away. It was for a very good reason, she thought with a grin as she padded across the room.\n\n*****\n\nRon came into the bathroom as Brenda was stepping out of the shower. He grinned as he swept her wet naked body into his arms and planted a kiss on her that had her whimpering quickly. He let his hands roam as he explored her wet silky slick back and ass. \n\nHer husband's lips and hands could become very addictive, Brenda thought as she kissed him back with a growing passion. Her passion wasn't the only thing growing, she realized as his hot dick hardened and slipped up between their bellies. She rubbed against it for a second and then broke the kiss and stepped back.\n\n\"Hold on now, you need a shower and I need some food.\" She said with a big grin. Here she was, the frustrated one, turning down sex. How different a couple of months and a couple of toys could make.\n\nRon laughed and said, \"You just swallowed a sausage whole only a few hours ago. Repeatedly, if I'm not mistaken.\"\n\nBrenda laughed and stepped forward to hug her husband tightly. \"Yes and I got a wonderful creamy drink from it also.\" She replied licking her lips in memory.\n\nRon's stomach growled and a second later, Brenda's did the same. Ron stepped back and grinned at his wife. \"Ok, I can take a hint, it's feeding time at this zoo. You head for the kitchen and I'll get a quick shower and then join you.\"\n\n\"Take your time dear, I have nothing thawed and no idea what I want to fix.\" Brenda said, as she started for the door of the bathroom.\n\nRon reached out and smacked her on the bare butt. \"We could go out for supper.\" He suggested.\n\n\"Could we? It's been quite some time since we've gone out to eat.\" Brenda said happily.\n\n\"Sure. Let me get my shower and we'll go anyplace you want.\" Ron replied as he watched his wife's face light up. \"Anyplace at all.\"\n\n*****\n\nBrenda was getting dressed as Ron came out of the bathroom. She had her hair done and her makeup on. She had on panty hose, a dark blue knee length skirt, and was slipping into a light blue long sleeved blouse. Ron paused and looked at her closely. \n\n\"Is there a problem dear?\" Brenda asked at the slight frown on his face.\n\n\"After spending time with you naked, I just realized how drab and old fashioned you dress.\" He replied hesitantly.\n\nBrenda laughed and then giggled. \"I can't go out naked.\"\n\nRon grinned at her and then walked over to her closet and rummaged around. A moment later he turned with a pale blue sundress in his hand. It was one that Brenda used around the house or out in the yard on hot days.\n\n\"Here, try this.\" He told her.\n\n\"I can't wear that out in public.\" \n\n\"Why not, it covers everything decently.\"\n\n\"It's to short for one thing and the top is cut to low. Half my boobs would be hanging out.\" Brenda protested.\n\n\"Try it on and let me be the judge of that.\" Ron told her.\n\nBrenda looked into his eyes for a moment and then slipped the blouse back off and slipped out of the skirt. She put the dress on over her head and buttoned it up. There was quite a bit of cleavage showing, she thought as she looked down. And the skirt ended a good four inches above her knees.\n\n\"Those panty hose have to go.\" Ron said, as he looked her up and down.\n\n\"Dear, I always....\" Brenda started to say and then hiked up the skirt and wiggled out of the panty hose. \n\n\"Much better.\" Ron whispered.\n\nHe studied her for a moment and then grinned. \"Take off your panties and bra.\"\n\nBrenda got a shocked look on her face. \"I will not!\"\n\nRon laughed and then said, \"I had to try.\"\n\nBrenda cocked her head to the side and looked at her grinning husband. \"You.... Uh.... You wouldn't....\" She stammered in disbelief.\n\n\"Would I let you go out without your panties and bra? Possible, I'd have to see how you looked without them first.\" Ron answered her unasked question.\n\n\"I'd die of embarrassment.\" Brenda whispered but suddenly memories of wanting to open the door for the UPS man naked, floated through her mind and she whimpered softly.\n\n\"So you have thought about it?\" Ron asked, just above a whisper.\n\nBrenda blushed and then nodded slowly, embarrassed that it was that obvious. She should have been embarrassed at the opening the door part but she realized she wasn't. She found that odd, but one was fantasy and one was real.\n\n\"Look at yourself in the mirror and then take them off and look again. Let's see what the difference is, visually.\" Ron coxed.\n\nBrenda stepped over to the full-length mirror on the bathroom door and looked herself over. The dress was cute and it really didn't show much more of her legs than normal. It would only be a problem sitting down and getting in and out of the car.\n\nThere wasn't nearly as much cleavage as she had thought from looking down. Of course seated it would be a whole other story. The scooped neckline did look good on her and the short sleeves would be cooler as would the flared skirt.\n\nShe looked over at Ron and he smiled. \"You look good in that dress. You look like the sexy wife I've come to love and appreciate.\"\n\nShe smiled shyly but her mind was on taking the underwear off. She quickly hiked the skirt up and slipped her panties down off her hips quickly. She didn't want to think about it, just to do it quickly before she could think.\n\nAs they hit the floor, she kicked them to Ron. He laughed as he caught them. Then Brenda whimpered softly as he brought them to his nose and took a long deep breath and sighed. \n\n\"I love your smell.\" He whispered huskily.\n\nBrenda made a sound halfway between a moan and a sigh as she remembered his tongue on her clit. She hurriedly unbuttoned the top of the dress and took off her bra. She tossed it on the bed and then shivered as she buttoned the dress up. Thoughts of the UPS man seeing her bare breasts ran through her mind.\n\nShe was blushing fiery red as she stepped back in front of the mirror. The dress seemed very much the same. There was even less cleavage showing she realized. And then she saw the little tents her hard nipples were making in the soft fabric. She hadn't even thought about that before. \n\nBrenda moaned loudly as her hands came up and cupped her breasts, her hard nipples tingling. Her nipples had been hard enough to hurt that day when she opened the door. No wonder the UPS man had such a big grin on his face. She moaned loudly as she rubbed her palms over the fabric covering her nipples.\n\nShe shivered and dropped her hands. The little tents were even larger. She whimpered and then groaned as she said, \"Ron, I couldn't.... I wouldn't... dare. I'd die of embarrassment. Everyone can see my nipples, for God's sakes.\"\n\nRon moved up to hug her to his naked body. He kissed her softly and stroked her back. After a moment or two, he broke the kiss and just held her tightly. Brenda sighed and laid her head on his shoulder as she hugged him back.\n\nWas she being silly, she asked herself? No one ever noticed her before, why should they start now. Because your nipples are sticking out like... like... She couldn't find a word to fit. She sighed and lifted her head. She asked Ron if he thought she was being silly.\n\n\"No dear, you're funny at times but never silly.\" He reassured her. \"Put you bra back on, if you want. Or another one that's a little more sexy maybe.\"\n\nBrenda giggled and kissed Ron deeply. All her bras were the same heavy white cotton ones she had always worn since she was a kid. Maybe it was time to change that. She had looked at some fancy and frilly ones at the store, the last time she was in town.\n\nWhen she broke the kiss, she whispered, \"The only thing even close to a different type of bra I have is that bikini thing I sometimes sunbathe in. It won't work though, its flowered and the design would show through.\"\n\n\"Ok then, put your regular bra on, but next week when you go to the store, I want you to buy you some new bras and I don't mean those white monsters either.\" Ron told her with a smile that turned into a grin.\n\n\"Yes dear, I had already planned on it.\" She told him as she went to get her bra off the bed. \"You need to get dressed.\" She added with a grin of her own as she sat down on the side of the bed and watched him closely.\n\nRon chuckled, went to the dresser, and opened the top draw. He took out a pair of boxer shorts and then folded them back, and dropped them back in the draw. With a grin, he walked naked to the closet and got out a pair of dark slacks.\n\n\"You're not!\" Brenda said and then giggled as he slipped the slacks on and zipped them up. \"You are!\" she exclaimed and then whimpered softly as he did the snap and stood there modeling the pants. His manhood was outlined in the soft material and it was pulled up in the crack of his ass much more pronouncedly than normal.\n\n\"I'm.... Uh... You.... I....\" Brenda started and then took a deep breath. \"I'm not sure I want you to go out that way. There's a whole lot of you showing, if you know what I mean.\"\n\nRon walked over and looked in the mirror. His semi hard dick was outlined in the left pant leg. \"Maybe you're right.\" He told her. \"These pants feel totally different without underwear. They're creeping up in the crack of my ass and my dick is free and rubbing around. I'll never get soft wearing them this way.\"\n\nBrenda shivered as she looked at his slowly hardening manhood as it made a tent in the leg of the trousers. She remembered such tents under his pants when they had started dating but they weren't that big or in the same place.\n\n\"Put briefs on like you used to wear.\" Brenda heard herself saying.\n\nRon grinned as he took off the pants and went to find a pair of white brief in his drawer. His dick was hard and standing up right as he slipped them on. There was a bulge in the middle with the top two inches of his dick sticking out the waistband. He pushed his dick to the side and tucked it in.\n\nThere was the bulge and ridge that Brenda remembered from dating. She moaned softly and then stood up to walk over and knell down in front of her husband. Her hand lightly traced the outline and she whimpered softly. If only she had known about sucking on it back then. What a difference it would have made in the last five or six years.\n\nShe leaned forward and nibbled at the tightly stretched cloth. Ron moaned and then whispered, \"If you keep that up you're not going to get supper, you'll end up with that sausage and creamy drink again.\"\n\n\"Why can't I have both?\" Brenda asked in a breathy whisper as she continued to nibble. \n\n\"Why didn't I do this back in high school?\" She asked softly as she sucked on the side of his shaft, her tongue flicking back and forth on the slowly damping material.",
        "Ron groaned even louder and whispered, \"You were a good girl.\"\n\n\"Yeah, to damned good for my own good.\" Brenda said as she sucked, nibbled, and licked up and down his whole length. \n\nRon put a hand on her shoulder and then the other on the back of her head. His knees were trembling and he marveled at his wife's sudden aggressiveness. She had always been so passive and submissive. It shocked him in a way and thrilled him in another. This was twice she had initiated things.\n\nHer breath, mouth, and tongue were driving her husband crazy she realized. Her right hand was rubbing and rolling his balls around and the other one was rubbing and caressing his hard tight ass. She could feel his knees shaking and the weight he put on her head and shoulder for support.\n\nThat feeling of power and control returned that she had felt before. Only now she knew what it was and where it came from. She literally had her husband in the palm of her hand, not to mention her mouth. She had the power and the control, he was hers any way she wanted him at this very moment.\n\nShe moaned softly as her pussy clenched up tightly. She would make a mess if she continued what she was doing and she didn't want to have to take another shower before they went out. With a sigh she took her mouth away from Ron's dick and looked at the wet translucent material where her mouth had been. There were traces of lipstick smeared all along it. There was another clear wet spot up at the top of the head.\n\nRon had moaned softly when she had moved away and now he was looking at her with confusion in his eyes as she got to her feet. She smiled and kissed him lightly and quickly.\n\n\"It's time for supper and I'm hungry for food. Anyway, I think I'll save this for desert on the way home. That should give you something to think about during supper.\" She told him and then didn't believe that she had said it. A vision of her sucking Ron's dick as they drove home floated across her mind and she moaned softly.\n\nRon just stared at her and took several deep breaths. Brenda smiled and told him, \"Put on your pants dear and then finish dressing. I need to touch up my lipstick.\"\n\nGrinning, she turned and went to fix her makeup. She could feel Ron's eyes following her and the wet slippery slid of her thighs and pussy lips as she walked. The power was still flowing in the anticipation she felt at sucking him off in the car.\n\n*****\n\nBrenda felt sexy and wicked as she walked out to Ron's car and got in. Ron held the door for her, which was something he hadn't done in a long time. His eyes flicked back and forth between the top of her dress and the hem. She toyed with the idea of flashing him but couldn't bring herself to do it.\n\nSpeaking of toys, she had slipped the new one in her purse before they left. Why she didn't know but she had. There was a fantasy or two floating around in the back of her mind but she held them there for the moment.\n\nThe bulge was still very prominent in the front of Ron's slacks as they drove toward the Lake Club. Brenda had to restrain herself from reaching over and running her hand up and down over it. Just the sight of it was making her hotter and wetter. She wondered what he was going to do when they got to the restaurant.\n\nThe restaurant was by the lake and partially overhung it. Ron had un-tucked his shirt and let the tail cover his hard on. He had Brenda lead the way as farther protection. Brenda grinned as she led the way out onto the deck and over to a deserted corner. At least now Ron had the table and the tablecloth to hide behind. \n\nShe found it faintly funny but exciting at the same time. She knew she was the reason for that hard on. That thought alone was enough. That coupled with the fact that she wasn't wearing panties or a bra under the dress and being like that in public for the first time, had her close to an orgasm. \n\nBrenda was almost as glad for the cover of the table as Ron. She was also in a hurry to get supper over. Thoughts of desert and her fantasies were not helping matters in the least.\n\n\"How are you doing dear?\" Ron asked as they got seated side by side behind the table.\n\nBrenda nodded and then shivered. \"It's not quite as bad as I imagined. I'm not embarrassed but my God am I horny. I think I must have been squishing as I walked, I'm so wet.\"\n\nRon chuckled and then nodded. \"I know what you mean. I keep thinking about you being naked up that dress and my dick just stays harder than a rock. I don't think it's ever going to go down.\"\n\n\"Maybe food and few drinks will help.\" Brenda said as she picked up the menu and scanned it. \n\nRon's hand on her thigh made her jerk. He had rubbed her naked thigh during breakfast but here in public it felt much more wicked and sensuous through the thin dress. The tablecloth was hiding more sins every minute. She wanted to drop her hand to his thigh but didn't have the nerve.\n\nRon's hand was just egging her orgasm on and when the waitress arrived to take their order she nearly came from her being so close. As it was she held on by a thread and got her order out. Her voice sounded odd even to her own ear and she almost moaned when Ron moved his hand over between her thighs.\n\nRon was grinning like an idiot as the waitress walked off. Brenda turned to tell him to quit but that never happened as his hand slid up and rubbed her outer lips. Ron's hand on her pussy melted her and unleashed her orgasm. She clamped a hand over her own mouth as her hips jerked and twitched against his hands. She was in that other land and in public took boot. Her mind kept feeding on that and her orgasm rolled on and on.\n\nRon's hand left her lap and Brenda found herself leaning on her elbows on the table. She removed her hand from over her mouth and looked over at Ron. She couldn't believe he had actual done that to her. What if she had screamed or yelled? What if she had passed out and fell out of her chair? She blushed a bright crimson.\n\nWhen Ron leaned over to kiss her, she jerked her head back. \"Asshole!\" she whispered angrily.\n\nRon grinned and asked, \"You didn't like that orgasm? I didn't think you could eat and enjoy it sitting there on a hair trigger.\"\n\nBrenda looked at him like he was crazy and then giggled as the absurdity of it hit her. \"Yes I enjoyed it but you're still an asshole. It was your damned idea that I come out to supper without my underwear. Do you know how much trouble we could get in?\"\n\nRon laughed and looked around. \"No one is paying us the least amount of attention. Even if someone did notice, it would only give him a hard on or her wet panties, if she were wearing any in the first place. This happens far more often than you might think from what I've heard from other men.\"\n\nBrenda got a shocked look. She thought she was doing something really daring and now she found out that it went on all the time. \"I.... Uh.... We....\" She sputtered and then said, \"This happens all the time? Well not to me it doesn't. I thought I was being wild and crazy, I thought I was being very naughty.\"\n\n\"For us, you are dear. We're new to the games people play but we're far behind.\" Ron reassured her.\n\nBrenda looked around and then sat back in her chair. She studied the people around the room and then moved her hand over to rub the front of Ron's slacks. The hot bulge of his manhood was still there. \n\nWith her other hand, she slowly gathered the skirt up on her thigh. When she felt the hem drag up along the top of her thigh she whimpered softly. Her hand was up near her hip and she could feel the cool air wash over her wet sex. She shivered as she moved her hand even higher.\n\nLooking down, she saw her very wet pussy exposed between her slightly parted thighs. She spread them a little wider and then looked around hastily. Ron's eyes were glued to her lap and he licked his lips. That made Brenda groan.\n\n\"See what a mess you made.\" She said in a barely audible whisper.\n\nRon licked his lips again and then reached over and ran a fingertip up and down in her slit. Brenda slammed her thighs together and moaned loudly. She hadn't expected him to do that. When he raised his hand and sucked on the finger she moaned even louder.\n\n\"A very fine appetizer, if I do say so myself.\" Ron whispered to her as he leaned over for a quick kiss.\n\nBrenda tasted herself on his lips and tongue. She moaned into the kiss and kissed him harder. Ron's hand returned but it rested on her bare inner thigh just below her sex. Brenda felt the rise of another orgasm and broke the kiss.\n\n\"Behave!\" Brenda whispered as she pulled the dress down. Maybe she should have heeded her own advice, she thought as she covered Ron's hand. The hand moved slowly down between her slippery thighs and then up against her outer lips. \n\nBrenda shivered and rubbed her hand against Ron's dick slowly as she once again spread her thighs a little ways. Ron turned his hand and wiggled his fingertips slowly against her pussy. With a whimper, Brenda spread her knees a little more.\n\n\"What if I'm coming when the waitress shows back up.\" Brenda asked suddenly in a breathy whisper.\n\n\"I'll keep an eye out for her.\" Ron whispered back softly.\n\nAfter a few moments Brenda was squirming in her chair as Ron's fingers teased her unmercifully. She didn't even realize that she had slipped down in her chair as her legs spread wider. One finger was running slowly up and down her slit, brushing her clit at the top, and teasing her opening at the bottom.\n\n\"Here comes the waitress.\" Ron whispered.\n\nBrenda gave a jerk and closed her legs, tightly trapping his hand. She groaned and tried to straighten up in her chair as Ron tried to get his hand free. It was a comedy of errors there for a few seconds but they got untangled by the time the waitress got to the table.\n\nRon and Brenda both felt like two kids nearly caught necking as they watched their food getting delivered. Neither of them could look at the waitress, much less try to eat. The waitress gave them an odd look when they didn't move right away.\n\n\"Ya'll enjoy your meal and I'll be back later to check on you two.\" The woman said before she turned to leave. As she did, Brenda caught the start of a big grin on the woman's face and blushed bright red.\n\nAs the waitress walked away Ron brought the hand that had been between his wife's legs up and sucked on his fingers one by one. Brenda looked at him with her mouth open, not believing what he was doing. \n\nWith a grin Ron said, \"I'm having a taste of my dessert first, is there a problem with that.\" Brenda shook her head and blushed. \"Good because there is a roadside park between here and home....\" He let the sentence trail off.\n\nBrenda shivered and picked up her fork as visions of Ron laid over in the car seat with his head between her legs floated before her eyes.\n\n*****\n\nRon had his arm around Brenda's waist as they left the restaurant. The farther they walked the lower his hand slipped. By the time they reached the car his hand was cupping her ass cheek. At the car door he turned and pulled her to him for a deep hungry kiss, his hand massaging her ass and the other running up and down her back.\n\nBrenda was well aware of his hand but was taken by surprise by the kiss. She stiffened and then melted into his arms. Ron didn't show affection in public often and a kiss like this was totally new. The hard on rubbing against her belly made her moan loudly as her tongue dueled fiercely with her husbands.\n\nThe headlights of a car pulling into the parking lot broke them apart. Ron grinned at his wife as he opened the car door. Brenda sat down in her seat but paused a second before she swung her leg inside. Her mind fought with her. She wanted to flash him but she didn't have the nerve again. \n\nAs Ron closed the door and walked around the car, Brenda berated herself for being such a coward. Turning in her seat quickly, she put one foot up on the dash and the other as far back between the seats as she could. As he opened the door, she pulled the skirt up around her waist.\n\nThe dome light wasn't all that bright but Brenda felt like it was a spotlight on her wet shiny sex. Ron paused a second with a huge grin on his face and then he licked his lips. \n\n\"It's to bad there are so many people in this parking lot. Otherwise, I'd have dessert right here and right now.\"\n\nBrenda whimpered and shifted her hips as memories of his hot tongue flashed through her brain. \"How far is that park?\" She heard herself asking in a breathy whisper.\n\n\"Not far at all.\" Ron replied as he got into the car. \n\nHe paused with the door still slightly open and openly looked at his wife's pussy. He licked his lips again and shivered as he pulled the door closed and fumbled with his keys.\n\nBrenda couldn't believe she had really done it. She had found the nerve by not thinking about it, just doing it. It scared the hell out of her and excited her both at the same time. As Ron started to back up, she started to lower the dress.\n\n\"No!\" Ron said sharply. \"Stay that way. I want to play with you as I drive to the park.\"\n\nBrenda moaned at the thought of his fingers in her pussy and staying exposed. Her mind jumped to the toy in her purse. Her hand was digging it out before she even thought about it. She whimpered as she held it out toward Ron, her hand was shaking.\n\nRon looked at the toy and then shook his head. \"No, you use it while I watch. Just please don't come until we are at the park at least.\"\n\nWith a louder moan, Brenda slipped down in the seat farther. Her hand was shaking even more as she brushed the end of the toy over her swollen clit. Even without it vibrating her hips jerked. Her finger found the little switch and flipped it to the on position.\n\nThe soft buzz of the toy sounded loud in the quiet confined space of the car. Her hips jerked and twitched when she again touched the toy to her clit. She would come quickly if she did that very much at all, she knew, so she slowly slipped it into her vagina.\n\nThe buzz muted the deeper it went. The higher Brenda arched her hips up, the deeper it went. When the little prong touched her clit, she jerked and gasped loudly. That prong was even worse than the main part in rushing her orgasm to completion.\n\nShe pulled the toy out, turned it over and shoved it back in. The main shaft made her moan loud and long as it went in and then the little prong ran over her asshole. She gasped again and flexed her hips wildly. The toy moved in and out of her pussy quickly and the tip of the prong teased and rubbed against the tight ring of sensitive skin guarding her ass.\n\nRon drove and watched his wife with quick back and forth glances. He knew about the little prong and her clit from earlier but the sight of it rubbing his wife's anus and her reaction was new information. Information he found very intriguing.\n\nHe almost missed the turn into the park. Brenda was in a world of her own as she fucked herself on the toy and he was distracted by it to say the least. Her moans and whimpers were turning him on almost as much as the sights before him.\n\nWhen he stopped at the back of the park near the lake, Brenda paused a second and looked around. Ron turned on overhead map light on her side, which spotlighted her hands and the toy. With a loud moan, Brenda shoved the vibrator deep into her sex and flexed her hips.\n\nRon reached for the toy to keep his wife from coming so soon but he was to late by the time his hand moved. Brenda arched up with a yell, her stomach muscles jerking and twitching as her hips bucked and jerked. The orgasm was an explosion of pleasure that coursed throughout her body.\n\nWith a look of awe on his face, Ron leaned over in the seat, his face inches from the end of the toy. His hands cupped his wife's ass and massaged the firm muscles. Brenda gasp at his touch and jerked the toy out of her pussy. Ron buried his face in her sex the instant they toy got out of the way.\n\nBrenda froze, her mind, her body, even her orgasm. Ron's hot tongue was deep in her pussy, his nose rubbing her clit. Suddenly the orgasm rushed back even bigger and stronger than before. Brenda let out a yell and gave herself to the orgasm and her husbands probing tongue.\n\nWhat Ron might have lacked in knowledge and finesse at eating pussy, he more than made up for with enthusiasm. He rubbed his face in it, his nose moving back and forth over her clit, his tongue deep in her vagina. The wilder he got, the louder his usually quiet wife yelled and the more she thrashed around. \n\n*****\n\nAs Ron lowered his wife's limp body to the car seat, he wondered what would have happened had he done this when they were dating all those years ago. He wondered how much better their lives would have been. With a big grin he sat up and wiped at his face. They were making up for lost time as fast as they could."
    ],
    "authorname": "TxRad",
    "tags": [
        "blowjob",
        "teasing",
        "parking",
        "playing"
    ],
    "category": "Toys & Masturbation",
    "url": "https://www.literotica.com/s/toys-are-us-ch-04"
}